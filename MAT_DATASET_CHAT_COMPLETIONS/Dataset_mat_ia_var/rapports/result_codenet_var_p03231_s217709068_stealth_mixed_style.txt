================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:06:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from math import sqrt
import bisect as b
from collections import defaultdict as dd, deque as dq, Counter as Cnt
from functools import lru_cache as cache

MOD=10**9+7
INF=float("inf")

I=lambda :int(sys.stdin.readline().strip())
S=lambda :sys.stdin.readline().strip()
def IL(): return list(map(int,sys.stdin.readline().split()))
SL=lambda :list(sys.stdin.readline().split())
def ILs(n):
    out=[]
    for _ in range(n):
        out+=[int(sys.stdin.readline())]
    return out
SLs=lambda n:[sys.stdin.readline().strip() for _ in range(n)]
ILL=lambda n:[list(map(int,sys.stdin.readline().split()))for _ in range(n)]
SLL=lambda n:[sys.stdin.readline().split()for _ in range(n)]
Prnt=lambda arg:print(arg)
yES=lambda:print("Yes")
nO=lambda:print("No")
def EXIT(): exit()
def pe(x): print(x) ; exit()
def YES():print("Yes");exit()
def NO():print("No");exit()
def DD(x): return dd(x)
def inv(x): return pow(x,MOD-2,MOD)

_kj=[1]
def kaijo(n):
    while len(_kj)<=n:_kj.append(_kj[-1]*len(_kj)%MOD)
    return _kj[n]

_gkj=[1]
def gyaku_kaijo(n):
    while len(_gkj)<=n:_gkj.append(_gkj[-1]*pow(len(_gkj),MOD-2,MOD)%MOD)
    return _gkj[n]

def nCr(n,r):
 if n==r:return 1
 if (n<r)|(r<0):return 0
 t=kaijo(n)*gyaku_kaijo(r)%MOD*gyaku_kaijo(n-r)%MOD
 return t

def factorization(n):
 arr=[]
 t=n
 for i in range(2,int(-(-n**.5//1))+1):
  if not t%i:
   c=0
   while t%i==0:c+=1;t//=i
   arr+=[[i,c]]
 if t!=1:arr+=[[t,1]]
 if not arr:arr=[[n,1]]
 return arr

def make_divisors(x):
 D=[]
 for i in range(1,int(x**.5)+1):
    if x%i==0:
        D+=[i]
        if i!=x//i:D+=[x//i]
 return D

def make_primes(N):
 maxx=int(sqrt(N))
 sl=[i for i in range(2,N+1)]
 pN=[]
 while sl and sl[0]<=maxx:
   pN.append(sl[0])
   t=sl[0]
   sl=[ii for ii in sl if ii%t]
 pN+=sl
 return pN

def _gcd(a,b):
 while b:a,b=b,a%b
 return a

lcm=lambda a,b: a*b//_gcd(a,b)

def cntbt(n):
 c=0
 while n:
  n&=n-1;c+=1
 return c

def base_10_to_n(X, n):
 if X//n:return base_10_to_n(X//n,n)+[X%n]
 return [X%n]

def base_n_to_10(X, n):
 return sum(int(str(X)[-i-1])*n**i for i in range(len(str(X))))

def int_log(n, a):
 cnt=0
 while n>=a:n//=a;cnt+=1
 return cnt

N,M=IL()
A,S3= S(),S()
B=str(S3)
C = S()
GCD=_gcd(N,M)
L=lcm(N,M)
for i in range(GCD):
    idx1=i*N//GCD
    idx2=i*M//GCD
    if A[idx1]!=C[idx2]:
        pe(-1)
Prnt(L)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29731935262680054
    2. '\n' → logprob: -1.5473194122314453
    3. '<|end|>' → logprob: -3.7973194122314453
    4. '\' → logprob: -4.922319412231445
    5. 'newline' → logprob: -5.672319412231445
    6. 'import' → logprob: -5.672319412231445
    7. '<|end|>' → logprob: -6.047319412231445
    8. '
' → logprob: -6.922319412231445
    9. '```' → logprob: -6.922319412231445
    10. '' → logprob: -7.672319412231445

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.010400928556919098
    2. 'os' → logprob: -5.260400772094727
    3. ' collections' → logprob: -6.635400772094727
    4. ' math' → logprob: -7.010400772094727
    5. ' ' → logprob: -7.260400772094727
    6. ' pathlib' → logprob: -7.510400772094727
    7. ' Py' → logprob: -8.260400772094727
    8. 'collections' → logprob: -8.635400772094727
    9. ' typing' → logprob: -8.760400772094727
    10. ' datetime' → logprob: -8.760400772094727

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022266630083322525
    2. 'import' → logprob: -3.8972666263580322
    3. ' ' → logprob: -7.022266864776611
    4. '.' → logprob: -7.147266864776611
    5. '<|end|>' → logprob: -11.272266387939453
    6. '	import' → logprob: -11.647266387939453
    7. ' im' → logprob: -12.272266387939453
    8. '_import' → logprob: -12.772266387939453
    9. ' impor' → logprob: -13.272266387939453
    10. '.import' → logprob: -13.522266387939453

Token 6: ' sqrt' (ID: 44237)
  Prédit: ' sqrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sqrt' → logprob: -0.08309954404830933
    2. ' ' → logprob: -2.833099603652954
    3. ' pi' → logprob: -4.458099365234375
    4. 'sqrt' → logprob: -5.833099365234375
    5. ' ceil' → logprob: -6.333099365234375
    6. ' import' → logprob: -6.583099365234375
    7. ' sin' → logprob: -6.833099365234375
    8. ' pow' → logprob: -7.833099365234375
    9. ' s' → logprob: -7.958099365234375
    10. ' log' → logprob: -8.208099365234375

Token 7: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3590247631072998
    2. '\n' → logprob: -1.8590247631072998
    3. '

' → logprob: -3.1090247631073
    4. '(
' → logprob: -3.3590247631073
    5. '\' → logprob: -3.7340247631073
    6. '
' → logprob: -4.109025001525879
    7. ',' → logprob: -4.734025001525879
    8. '(

' → logprob: -5.484025001525879
    9. 'import' → logprob: -5.609025001525879
    10. '```' → logprob: -5.734025001525879

Token 8: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.5865098237991333
    2. '

' → logprob: -1.7115098237991333
    3. 'import' → logprob: -1.9615098237991333
    4. '```' → logprob: -2.2115097045898438
    5. 'def' → logprob: -2.3365097045898438
    6. '\' → logprob: -2.4615097045898438
    7. ',' → logprob: -2.9615097045898438
    8. '(' → logprob: -3.0865097045898438
    9. '
' → logprob: -3.5865097045898438
    10. '(
' → logprob: -5.086509704589844

Token 9: ' bis' (ID: 7204)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00026658078422769904
    2. 'os' → logprob: -8.750267028808594
    3. ' numpy' → logprob: -9.500267028808594
    4. ' math' → logprob: -11.500267028808594
    5. ' sys' → logprob: -11.875267028808594
    6. ' random' → logprob: -12.500267028808594
    7. '_os' → logprob: -12.625267028808594
    8. ' re' → logprob: -13.375267028808594
    9. '"os' → logprob: -13.500267028808594
    10. '_' → logprob: -13.625267028808594

Token 10: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -4.961759259458631e-06
    2. 't' → logprob: -12.875004768371582
    3. 'ected' → logprob: -13.375004768371582
    4. 'e' → logprob: -15.250004768371582
    5. 'ection' → logprob: -15.375004768371582
    6. 'ects' → logprob: -15.750004768371582
    7. 'ec' → logprob: -16.5000057220459
    8. 'ector' → logprob: -16.5000057220459
    9. '```' → logprob: -17.2500057220459
    10. 'ectl' → logprob: -17.5000057220459

Token 11: ' as' (ID: 472)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5962825417518616
    2. '
' → logprob: -0.9712825417518616
    3. '<|end|>' → logprob: -3.596282482147217
    4. 'import' → logprob: -4.346282482147217
    5. '' → logprob: -4.971282482147217
    6. '\n' → logprob: -5.096282482147217
    7. '```' → logprob: -5.971282482147217
    8. '<|end|>' → logprob: -6.096282482147217
    9. '


' → logprob: -6.221282482147217
    10. ',' → logprob: -6.346282482147217

Token 12: ' b' (ID: 287)
  Prédit: ' bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bs' → logprob: -0.7019538283348083
    2. ' bis' → logprob: -0.8269538283348083
    3. ' ' → logprob: -3.576953887939453
    4. ' b' → logprob: -3.826953887939453
    5. ' bi' → logprob: -4.326953887939453
    6. ' sys' → logprob: -6.451953887939453
    7. 'bis' → logprob: -6.826953887939453
    8. 'bs' → logprob: -8.201953887939453
    9. '	b' → logprob: -8.326953887939453
    10. 'b' → logprob: -8.326953887939453

Token 13: '
' (ID: 198)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1914682388305664
    2. '.' → logprob: -2.3164682388305664
    3. 'is' → logprob: -2.6914682388305664
    4. 's' → logprob: -5.941468238830566
    5. '.i' → logprob: -6.316468238830566
    6. 'u' → logprob: -7.066468238830566
    7. 'r' → logprob: -7.941468238830566
    8. '_i' → logprob: -8.191468238830566
    9. '_' → logprob: -8.316468238830566
    10. '\.' → logprob: -8.441468238830566

Token 14: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.9306977987289429
    2. '
' → logprob: -1.8056977987289429
    3. '#' → logprob: -2.3056979179382324
    4. 'def' → logprob: -2.3056979179382324
    5. '

' → logprob: -3.3056979179382324
    6. '\n' → logprob: -3.4306979179382324
    7. 'n' → logprob: -3.6806979179382324
    8. ',' → logprob: -3.8056979179382324
    9. '' → logprob: -4.055697917938232
    10. '\' → logprob: -4.430697917938232

Token 15: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.240434467792511
    2. ' itertools' → logprob: -2.240434408187866
    3. 'collections' → logprob: -2.990434408187866
    4. ' typing' → logprob: -3.865434408187866
    5. ' math' → logprob: -4.115434646606445
    6. ' os' → logprob: -4.240434646606445
    7. ' heap' → logprob: -6.365434646606445
    8. 'os' → logprob: -7.115434646606445
    9. 'math' → logprob: -7.365434646606445
    10. '_' → logprob: -7.615434646606445

Token 16: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.07995277643203735
    2. 'import' → logprob: -2.5799527168273926
    3. '.' → logprob: -8.07995319366455
    4. ' defaultdict' → logprob: -8.32995319366455
    5. ' ' → logprob: -8.82995319366455
    6. 'abc' → logprob: -9.45495319366455
    7. ' abc' → logprob: -9.57995319366455
    8. '```' → logprob: -9.82995319366455
    9. '<|end|>' → logprob: -9.95495319366455
    10. '.Counter' → logprob: -9.95495319366455

Token 17: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.32225003838539124
    2. ' deque' → logprob: -1.3222500085830688
    3. 'deque' → logprob: -4.822249889373779
    4. ' abc' → logprob: -7.447249889373779
    5. 'default' → logprob: -9.072250366210938
    6. ' named' → logprob: -9.322250366210938
    7. 'abc' → logprob: -10.197250366210938
    8. 'de' → logprob: -10.197250366210938
    9. ' de' → logprob: -11.572250366210938
    10. 'named' → logprob: -11.697250366210938

Token 18: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.3651834726333618
    2. '

' → logprob: -1.7401834726333618
    3. '<|end|>' → logprob: -1.7401834726333618
    4. '\n' → logprob: -1.8651834726333618
    5. '
' → logprob: -2.3651833534240723
    6. ',' → logprob: -2.7401833534240723
    7. '\' → logprob: -3.8651833534240723
    8. '' → logprob: -4.365183353424072
    9. '```' → logprob: -4.365183353424072
    10. '<|end|>' → logprob: -4.740183353424072

Token 19: ' dd' (ID: 18636)
  Prédit: ' dd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dd' → logprob: -0.044705089181661606
    2. 'dd' → logprob: -3.2947051525115967
    3. ' d' → logprob: -5.419704914093018
    4. 'd' → logprob: -6.294704914093018
    5. '_dd' → logprob: -8.044705390930176
    6. ' ' → logprob: -11.794705390930176
    7. 'df' → logprob: -11.794705390930176
    8. 'default' → logprob: -12.044705390930176
    9. 'dq' → logprob: -12.294705390930176
    10. ' dq' → logprob: -12.669705390930176

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8982576727867126
    2. '.' → logprob: -1.7732577323913574
    3. '

' → logprob: -2.1482577323913574
    4. '<|end|>' → logprob: -2.7732577323913574
    5. 'import' → logprob: -2.8982577323913574
    6. ',' → logprob: -2.8982577323913574
    7. '' → logprob: -3.2732577323913574
    8. '\n' → logprob: -3.5232577323913574
    9. '\' → logprob: -3.6482577323913574
    10. 'newline' → logprob: -4.898257732391357

Token 21: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.6063950657844543
    2. 'deque' → logprob: -0.8563950657844543
    3. ' Counter' → logprob: -4.106395244598389
    4. 'Counter' → logprob: -5.106395244598389
    5. ' Ordered' → logprob: -5.356395244598389
    6. 'Ordered' → logprob: -6.981395244598389
    7. ' de' → logprob: -7.356395244598389
    8. 'Deque' → logprob: -7.481395244598389
    9. ' named' → logprob: -8.35639476776123
    10. 'de' → logprob: -8.35639476776123

Token 22: ' as' (ID: 472)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' dq' (ID: 164235)
  Prédit: ' dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dq' → logprob: -0.03779909014701843
    2. 'dq' → logprob: -3.537799119949341
    3. ' de' → logprob: -5.662798881530762
    4. ' d' → logprob: -5.912798881530762
    5. 'd' → logprob: -6.537798881530762
    6. 'deque' → logprob: -8.912798881530762
    7. ' q' → logprob: -9.287798881530762
    8. 'de' → logprob: -9.412798881530762
    9. ' deque' → logprob: -10.037798881530762
    10. 'DQ' → logprob: -11.162798881530762

Token 24: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7887644171714783
    2. '

' → logprob: -0.9137644171714783
    3. '.' → logprob: -3.288764476776123
    4. ',' → logprob: -3.663764476776123
    5. '' → logprob: -4.163764476776123
    6. '<|end|>' → logprob: -4.413764476776123
    7. '\n' → logprob: -4.913764476776123
    8. 'import' → logprob: -5.038764476776123
    9. '


' → logprob: -5.163764476776123
    10. ' 

' → logprob: -5.163764476776123

Token 25: ' Counter' (ID: 32251)
  Prédit: ' Counter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.8126426339149475
    2. ' named' → logprob: -1.5626425743103027
    3. 'Counter' → logprob: -1.9376425743103027
    4. 'named' → logprob: -2.3126425743103027
    5. ' Ordered' → logprob: -2.6876425743103027
    6. 'Ordered' → logprob: -3.6876425743103027
    7. ' deque' → logprob: -6.312642574310303
    8. ' defaultdict' → logprob: -6.437642574310303
    9. ' Chain' → logprob: -6.562642574310303
    10. ' heap' → logprob: -6.562642574310303

Token 26: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.3113459646701813
    2. '<|end|>' → logprob: -1.4363459348678589
    3. 'as' → logprob: -3.5613460540771484
    4. '(' → logprob: -7.936346054077148
    5. '<|end|>' → logprob: -8.061346054077148
    6. ' (' → logprob: -8.186346054077148
    7. ' ' → logprob: -8.686346054077148
    8. 'import' → logprob: -9.311346054077148
    9. '(as' → logprob: -9.936346054077148
    10. ',' → logprob: -11.186346054077148

Token 27: ' C' (ID: 363)
  Prédit: ' C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.3249977231025696
    2. 'C' → logprob: -1.9499976634979248
    3. 'Counter' → logprob: -2.824997663497925
    4. ' Counter' → logprob: -2.949997663497925
    5. ' Co' → logprob: -4.324997901916504
    6. ' c' → logprob: -5.199997901916504
    7. ' ' → logprob: -6.199997901916504
    8. 'Co' → logprob: -6.949997901916504
    9. '	C' → logprob: -8.074997901916504
    10. 'c' → logprob: -8.074997901916504

Token 28: 'nt' (ID: 578)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 29: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.8070666790008545
    2. ',' → logprob: -1.9320666790008545
    3. 'import' → logprob: -2.1820666790008545
    4. '\n' → logprob: -2.1820666790008545
    5. ' ' → logprob: -2.3070666790008545
    6. '\' → logprob: -2.5570666790008545
    7. '' → logprob: -2.6820666790008545
    8. '<|end|>' → logprob: -3.1820666790008545
    9. 'n' → logprob: -3.8070666790008545
    10. '.' → logprob: -3.9320666790008545

Token 30: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.836053729057312
    2. ',' → logprob: -2.2110538482666016
    3. '\n' → logprob: -2.3360538482666016
    4. 'def' → logprob: -2.4610538482666016
    5. '

' → logprob: -2.5860538482666016
    6. '#' → logprob: -3.2110538482666016
    7. 'import' → logprob: -3.4610538482666016
    8. 'n' → logprob: -3.7110538482666016
    9. '' → logprob: -3.9610538482666016
    10. ',
' → logprob: -4.086053848266602

Token 31: ' functools' (ID: 142636)
  Prédit: ' itertools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.0744229108095169
    2. ' typing' → logprob: -3.449422836303711
    3. ' heap' → logprob: -4.074422836303711
    4. ' os' → logprob: -4.324422836303711
    5. ' functools' → logprob: -5.324422836303711
    6. ' operator' → logprob: -6.449422836303711
    7. ' threading' → logprob: -7.574422836303711
    8. ' random' → logprob: -7.699422836303711
    9. 'typing' → logprob: -7.699422836303711
    10. 'heap' → logprob: -7.949422836303711

Token 32: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06705518811941147
    2. 'import' → logprob: -2.8170552253723145
    3. '<|end|>' → logprob: -5.5670552253723145
    4. '_import' → logprob: -7.4420552253723145
    5. ' ' → logprob: -7.6920552253723145
    6. '_' → logprob: -9.817054748535156
    7. '<|end|>' → logprob: -9.817054748535156
    8. '	import' → logprob: -10.067054748535156
    9. ' ' → logprob: -11.567054748535156
    10. '.' → logprob: -12.067054748535156

Token 33: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3640899062156677
    2. 'l' → logprob: -1.2390899658203125
    3. ' reduce' → logprob: -4.8640899658203125
    4. 'reduce' → logprob: -5.3640899658203125
    5. ' partial' → logprob: -6.7390899658203125
    6. ' wraps' → logprob: -6.8640899658203125
    7. 'partial' → logprob: -7.4890899658203125
    8. 'wrap' → logprob: -9.489089965820312
    9. 'cmp' → logprob: -9.739089965820312
    10. ' cmp' → logprob: -9.989089965820312

Token 34: 'ru' (ID: 1942)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4776535630226135
    2. 'ru' → logprob: -0.9776535630226135
    3. 'u' → logprob: -6.352653503417969
    4. 'z' → logprob: -6.477653503417969
    5. 'a' → logprob: -9.102653503417969
    6. '```' → logprob: -10.602653503417969
    7. 'ruz' → logprob: -10.602653503417969
    8. 'ruk' → logprob: -11.227653503417969
    9. ''r' → logprob: -11.352653503417969
    10. 'reduce' → logprob: -11.352653503417969

Token 35: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -8.125210297293961e-05
    2. 'cache' → logprob: -10.125081062316895
    3. '_c' → logprob: -10.625081062316895
    4. '_' → logprob: -11.875081062316895
    5. 'c' → logprob: -12.875081062316895
    6. 'Cache' → logprob: -13.250081062316895
    7. '_cached' → logprob: -13.375081062316895
    8. '_CACHE' → logprob: -13.750081062316895
    9. ' cache' → logprob: -14.000081062316895
    10. '```' → logprob: -14.500081062316895

Token 36: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.440516710281372
    2. '<|end|>' → logprob: -1.440516710281372
    3. '\n' → logprob: -1.815516710281372
    4. '
' → logprob: -2.315516710281372
    5. '' → logprob: -2.565516710281372
    6. '\' → logprob: -3.440516710281372
    7. ',' → logprob: -3.565516710281372
    8. ' ' → logprob: -3.690516710281372
    9. '<|end|>' → logprob: -3.940516710281372
    10. '

' → logprob: -4.190516471862793

Token 37: ' cache' (ID: 11956)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7134236693382263
    2. ' l' → logprob: -1.213423728942871
    3. 'lc' → logprob: -2.463423728942871
    4. ' cached' → logprob: -3.338423728942871
    5. ' lc' → logprob: -3.463423728942871
    6. ' ' → logprob: -4.463423728942871
    7. 'cached' → logprob: -4.588423728942871
    8. ' cache' → logprob: -4.588423728942871
    9. 'cache' → logprob: -5.088423728942871
    10. '_l' → logprob: -5.088423728942871

Token 38: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.3370561599731445
    2. '<|end|>' → logprob: -1.3370561599731445
    3. '
' → logprob: -1.4620561599731445
    4. 'import' → logprob: -3.0870561599731445
    5. '' → logprob: -3.4620561599731445
    6. ',' → logprob: -3.4620561599731445
    7. 'n' → logprob: -3.9620561599731445
    8. '#' → logprob: -4.0870561599731445
    9. ' ' → logprob: -4.4620561599731445
    10. '<|end|>' → logprob: -4.4620561599731445

Token 39: 'MOD' (ID: 52135)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9222504496574402
    2. '#' → logprob: -1.047250509262085
    3. 'def' → logprob: -1.547250509262085
    4. '
' → logprob: -4.172250270843506
    5. '@' → logprob: -5.172250270843506
    6. '' → logprob: -5.422250270843506
    7. 'n' → logprob: -6.172250270843506
    8. 'import' → logprob: -6.422250270843506
    9. 'de' → logprob: -6.797250270843506
    10. 'class' → logprob: -6.922250270843506

Token 40: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6510775089263916
    2. '=' → logprob: -1.2760775089263916
    3. '_' → logprob: -1.7760775089263916
    4. ' ' → logprob: -3.5260775089263916
    5. '<|end|>' → logprob: -8.401077270507812
    6. ')' → logprob: -8.651077270507812
    7. ' _' → logprob: -9.651077270507812
    8. '_=' → logprob: -10.401077270507812
    9. '.' → logprob: -10.526077270507812
    10. '  ' → logprob: -11.026077270507812

Token 41: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.004270358011126518
    2. '100' → logprob: -5.504270553588867
    3. ' ' → logprob: -8.629270553588867
    4. '1' → logprob: -11.754270553588867
    5. 'int' → logprob: -12.504270553588867
    6. '998' → logprob: -13.754270553588867
    7. '(' → logprob: -14.754270553588867
    8. '(int' → logprob: -16.754270553588867
    9. '0' → logprob: -18.004270553588867
    10. '`' → logprob: -18.129270553588867

Token 42: '**' (ID: 410)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.0338659286499023
    2. '\n' → logprob: -1.0338659286499023
    3. '**' → logprob: -2.0338659286499023
    4. '=' → logprob: -2.2838659286499023
    5. ':' → logprob: -3.6588659286499023
    6. '*' → logprob: -5.408865928649902
    7. '```' → logprob: -5.408865928649902
    8. '0' → logprob: -5.908865928649902
    9. '`' → logprob: -5.908865928649902
    10. '%' → logprob: -5.908865928649902

Token 43: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.9361264946837764e-07
    2. '09' → logprob: -16.5
    3. ' ' → logprob: -18.375
    4. '```' → logprob: -18.625
    5. '+' → logprob: -20.0
    6. '   ' → logprob: -22.625
    7. '９' → logprob: -23.0
    8. '10' → logprob: -23.25
    9. '``' → logprob: -23.5
    10. '

' → logprob: -23.875

Token 44: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00041243841405957937
    2. ' +' → logprob: -7.875412464141846
    3. '7' → logprob: -10.375411987304688
    4. '＋' → logprob: -14.875411987304688
    5. '+
' → logprob: -14.875411987304688
    6. '+

' → logprob: -16.000411987304688
    7. '```' → logprob: -16.500411987304688
    8. ' plus' → logprob: -16.750411987304688
    9. 'plus' → logprob: -17.000411987304688
    10. ' ' → logprob: -17.000411987304688

Token 45: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.6240566083070007e-06
    2. '+' → logprob: -13.500001907348633
    3. ' ' → logprob: -16.625001907348633
    4. '9' → logprob: -17.500001907348633
    5. '07' → logprob: -17.500001907348633
    6. '```' → logprob: -18.750001907348633
    7. '   ' → logprob: -19.750001907348633
    8. '

' → logprob: -20.125001907348633
    9. '79' → logprob: -20.625001907348633
    10. '87' → logprob: -20.750001907348633

Token 46: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08704479038715363
    2. '

' → logprob: -3.2120447158813477
    3. 'def' → logprob: -3.2120447158813477
    4. '
' → logprob: -6.212044715881348
    5. '<|end|>' → logprob: -8.337044715881348
    6. '' → logprob: -8.462044715881348
    7. '#' → logprob: -9.212044715881348
    8. ' def' → logprob: -9.587044715881348
    9. '\n' → logprob: -10.337044715881348
    10. '```' → logprob: -10.837044715881348

Token 47: 'INF' (ID: 64358)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.48770806193351746
    2. 'def' → logprob: -1.1127080917358398
    3. '

' → logprob: -2.98770809173584
    4. '
' → logprob: -5.86270809173584
    5. '\n' → logprob: -6.86270809173584
    6. '```' → logprob: -6.86270809173584
    7. '' → logprob: -7.48770809173584
    8. '#' → logprob: -7.86270809173584
    9. 'n' → logprob: -8.23770809173584
    10. 'class' → logprob: -9.11270809173584

Token 48: '=float' (ID: 80332)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519981265068054
    2. '=' → logprob: -1.5019981861114502
    3. '=int' → logprob: -10.126997947692871
    4. ',' → logprob: -11.251997947692871
    5. ')' → logprob: -12.876997947692871
    6. '=float' → logprob: -13.001997947692871
    7. ' ' → logprob: -13.501997947692871
    8. '=np' → logprob: -13.751997947692871
    9. '＝' → logprob: -14.126997947692871
    10. ' =
' → logprob: -14.126997947692871

Token 49: '("' (ID: 568)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4787118136882782
    2. '('' → logprob: -1.6037118434906006
    3. ''in' → logprob: -1.8537118434906006
    4. ''a' → logprob: -5.3537116050720215
    5. ''i' → logprob: -6.3537116050720215
    6. ''x' → logprob: -6.3537116050720215
    7. ''t' → logprob: -6.9787116050720215
    8. '"' → logprob: -7.1037116050720215
    9. ''ins' → logprob: -7.1037116050720215
    10. ''act' → logprob: -7.4787116050720215

Token 50: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0016140079824253917
    2. ''' → logprob: -7.376614093780518
    3. ''in' → logprob: -7.376614093780518
    4. '64' → logprob: -8.62661361694336
    5. 'info' → logprob: -10.50161361694336
    6. '32' → logprob: -10.62661361694336
    7. '"' → logprob: -10.75161361694336
    8. 'in' → logprob: -11.00161361694336
    9. '72' → logprob: -11.37661361694336
    10. '128' → logprob: -11.37661361694336

Token 51: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009700604132376611
    2. ')' → logprob: -7.000969886779785
    3. ')")' → logprob: -10.000969886779785
    4. '"' → logprob: -11.500969886779785
    5. '")
' → logprob: -13.875969886779785
    6. ' ")' → logprob: -14.125969886779785
    7. '")
' → logprob: -15.500969886779785
    8. '")

' → logprob: -15.500969886779785
    9. '')' → logprob: -15.625969886779785
    10. '\")' → logprob: -15.750969886779785

Token 52: 'I' (ID: 40)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10394875705242157
    2. '
' → logprob: -2.3539488315582275
    3. 'class' → logprob: -6.228948593139648
    4. '

' → logprob: -6.978948593139648
    5. 'n' → logprob: -7.728948593139648
    6. 'd' → logprob: -8.728948593139648
    7. '
' → logprob: -9.728948593139648
    8. '\' → logprob: -10.353948593139648
    9. '```' → logprob: -10.478948593139648
    10. '\n' → logprob: -10.728948593139648

Token 53: '=lambda' (ID: 64865)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5866286754608154
    2. 'm' → logprob: -0.9616286754608154
    3. 'mp' → logprob: -3.3366286754608154
    4. 'np' → logprob: -4.2116289138793945
    5. 'f' → logprob: -5.4616289138793945
    6. 'ndef' → logprob: -5.7116289138793945
    7. 'nt' → logprob: -6.2116289138793945
    8. 's' → logprob: -7.9616289138793945
    9. 'mpl' → logprob: -8.086628913879395
    10. 'nit' → logprob: -8.586628913879395

Token 54: ' :' (ID: 712)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.29232391715049744
    2. 'x' → logprob: -2.1673238277435303
    3. ' lambda' → logprob: -3.1673238277435303
    4. 'int' → logprob: -3.4173238277435303
    5. 'lambda' → logprob: -3.6673238277435303
    6. ' n' → logprob: -4.042324066162109
    7. 'n' → logprob: -4.917324066162109
    8. ' ' → logprob: -5.292324066162109
    9. ' int' → logprob: -5.292324066162109
    10. ' i' → logprob: -7.417324066162109

Token 55: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.004002415109425783
    2. ' int' → logprob: -6.004002571105957
    3. 'map' → logprob: -6.629002571105957
    4. ' map' → logprob: -8.629002571105957
    5. 'list' → logprob: -11.254002571105957
    6. 'input' → logprob: -12.254002571105957
    7. 'sys' → logprob: -12.879002571105957
    8. ' list' → logprob: -13.504002571105957
    9. '[int' → logprob: -13.504002571105957
    10. 'tuple' → logprob: -13.879002571105957

Token 56: '(sys' (ID: 41042)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1609891802072525
    2. '(' → logprob: -1.9109891653060913
    3. 'input' → logprob: -8.035988807678223
    4. '()' → logprob: -8.535988807678223
    5. '(sys' → logprob: -8.535988807678223
    6. ' (' → logprob: -11.410988807678223
    7. '(
' → logprob: -11.410988807678223
    8. ' input' → logprob: -11.785988807678223
    9. '(stdin' → logprob: -12.035988807678223
    10. '(raw' → logprob: -13.160988807678223

Token 57: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.004736276343464851
    2. '.readline' → logprob: -5.379736423492432
    3. '.' → logprob: -9.129735946655273
    4. '(stdin' → logprob: -13.129735946655273
    5. 'stdin' → logprob: -13.254735946655273
    6. '.read' → logprob: -13.629735946655273
    7. '.argv' → logprob: -13.629735946655273
    8. ' .' → logprob: -14.379735946655273
    9. ' stdin' → logprob: -14.754735946655273
    10. '.input' → logprob: -15.004735946655273

Token 58: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.531315314830863e-06
    2. '.' → logprob: -13.250003814697266
    3. '.read' → logprob: -13.375003814697266
    4. ' readline' → logprob: -17.000003814697266
    5. '().' → logprob: -17.250003814697266
    6. ' .' → logprob: -19.750003814697266
    7. '.stdin' → logprob: -20.250003814697266
    8. '.buffer' → logprob: -21.125003814697266
    9. '.Read' → logprob: -21.250003814697266
    10. 'read' → logprob: -21.250003814697266

Token 59: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1003376841545105
    2. '().' → logprob: -2.3503377437591553
    3. '()' → logprob: -8.975337982177734
    4. ' ())' → logprob: -13.100337982177734
    5. '())
' → logprob: -14.100337982177734
    6. ')' → logprob: -14.225337982177734
    7. '();)' → logprob: -14.975337982177734
    8. '(' → logprob: -15.225337982177734
    9. '())

' → logprob: -15.725337982177734
    10. '()]' → logprob: -16.350337982177734

Token 60: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0019510135753080249
    2. 'rstrip' → logprob: -6.251951217651367
    3. 'split' → logprob: -11.626951217651367
    4. 'read' → logprob: -11.751951217651367
    5. ')' → logprob: -12.376951217651367
    6. ' strip' → logprob: -13.751951217651367
    7. '_strip' → logprob: -15.751951217651367
    8. 'decode' → logprob: -16.376951217651367
    9. '-strip' → logprob: -16.751951217651367
    10. 'rst' → logprob: -17.376951217651367

Token 61: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002833848411682993
    2. '()' → logprob: -8.625283241271973
    3. ')' → logprob: -9.250283241271973
    4. '())
' → logprob: -12.375283241271973
    5. '()))' → logprob: -13.375283241271973
    6. ' ())' → logprob: -13.625283241271973
    7. '())

' → logprob: -15.500283241271973
    8. '();)' → logprob: -15.875283241271973
    9. '()),' → logprob: -16.12528419494629
    10. '(' → logprob: -16.62528419494629

Token 62: 'S' (ID: 50)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.3276711106300354
    2. 'def' → logprob: -2.0776710510253906
    3. 'M' → logprob: -2.8276710510253906
    4. '()' → logprob: -3.8276710510253906
    5. '_' → logprob: -3.9526710510253906
    6. 'A' → logprob: -4.827671051025391
    7. 'd' → logprob: -5.077671051025391
    8. 'Q' → logprob: -5.077671051025391
    9. 'R' → logprob: -5.202671051025391
    10. 'N' → logprob: -5.452671051025391

Token 63: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.020690662786364555
    2. '=' → logprob: -3.895690679550171
    3. '=input' → logprob: -10.14569091796875
    4. 'tring' → logprob: -10.77069091796875
    5. '=str' → logprob: -10.77069091796875
    6. ' =' → logprob: -11.14569091796875
    7. 'tr' → logprob: -11.27069091796875
    8. 'lambda' → logprob: -11.52069091796875
    9. '=[]' → logprob: -11.89569091796875
    10. 'ambda' → logprob: -12.27069091796875

Token 64: ' :' (ID: 712)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.04939998313784599
    2. 'sys' → logprob: -3.0494000911712646
    3. '=sys' → logprob: -7.9243998527526855
    4. ' :' → logprob: -8.424400329589844
    5. '(sys' → logprob: -8.924400329589844
    6. ':' → logprob: -9.674400329589844
    7. ' ' → logprob: -10.799400329589844
    8. '	sys' → logprob: -11.924400329589844
    9. 's' → logprob: -13.049400329589844
    10. 'str' → logprob: -13.549400329589844

Token 65: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00020377879263833165
    2. ' sys' → logprob: -8.500204086303711
    3. 'str' → logprob: -15.875204086303711
    4. '=sys' → logprob: -16.00020408630371
    5. 'list' → logprob: -17.75020408630371
    6. '(sys' → logprob: -18.00020408630371
    7. 'input' → logprob: -18.25020408630371
    8. '.sys' → logprob: -18.50020408630371
    9. '	sys' → logprob: -18.62520408630371
    10. 's' → logprob: -19.12520408630371

Token 66: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.2855416066013277e-05
    2. '.stdout' → logprob: -10.500032424926758
    3. 'stdin' → logprob: -12.250032424926758
    4. '.std' → logprob: -15.500032424926758
    5. '.readline' → logprob: -16.500032424926758
    6. '.' → logprob: -16.625032424926758
    7. '.argv' → logprob: -16.875032424926758
    8. '(stdin' → logprob: -18.250032424926758
    9. '.stderr' → logprob: -18.750032424926758
    10. ' stdin' → logprob: -19.750032424926758

Token 67: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.061054359131958e-06
    2. 'read' → logprob: -12.125007629394531
    3. ' readline' → logprob: -13.375007629394531
    4. '.read' → logprob: -13.875007629394531
    5. '.readlines' → logprob: -16.87500762939453
    6. '_read' → logprob: -17.37500762939453
    7. '.' → logprob: -18.50000762939453
    8. 'buffer' → logprob: -18.62500762939453
    9. 'rea' → logprob: -20.00000762939453
    10. 'rstrip' → logprob: -20.25000762939453

Token 68: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.625866030342877e-05
    2. '()' → logprob: -9.500085830688477
    3. ' ().' → logprob: -12.000085830688477
    4. '.' → logprob: -12.875085830688477
    5. '.readline' → logprob: -13.500085830688477
    6. '.strip' → logprob: -14.625085830688477
    7. '().__' → logprob: -15.875085830688477
    8. '()).' → logprob: -16.000085830688477
    9. ').' → logprob: -16.125085830688477
    10. '>().' → logprob: -16.375085830688477

Token 69: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0009118211455643177
    2. 'rstrip' → logprob: -7.000911712646484
    3. 'read' → logprob: -15.250911712646484
    4. ' strip' → logprob: -16.750911712646484
    5. 'str' → logprob: -18.750911712646484
    6. 'decode' → logprob: -19.000911712646484
    7. 'stripe' → logprob: -20.500911712646484
    8. '_strip' → logprob: -21.125911712646484
    9. 'rs' → logprob: -21.875911712646484
    10. 'rst' → logprob: -22.125911712646484

Token 70: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00013607845176011324
    2. '()
' → logprob: -9.875136375427246
    3. '()\' → logprob: -10.000136375427246
    4. '())' → logprob: -11.000136375427246
    5. '(' → logprob: -11.875136375427246
    6. '()]' → logprob: -12.375136375427246
    7. '()

' → logprob: -12.750136375427246
    8. '()<' → logprob: -13.375136375427246
    9. ')' → logprob: -13.500136375427246
    10. '()`' → logprob: -13.625136375427246

Token 71: 'def' (ID: 1314)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.2347242832183838
    2. 'M' → logprob: -2.859724283218384
    3. 'A' → logprob: -3.109724283218384
    4. 'def' → logprob: -3.109724283218384
    5. 'P' → logprob: -4.109724044799805
    6. 'Q' → logprob: -4.234724044799805
    7. 'N' → logprob: -4.609724044799805
    8. 'I' → logprob: -5.609724044799805
    9. 'T' → logprob: -5.734724044799805
    10. 'DP' → logprob: -5.984724044799805

Token 72: ' IL' (ID: 16067)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06896734237670898
    2. ' ' → logprob: -3.318967342376709
    3. ' solve' → logprob: -3.568967342376709
    4. '_' → logprob: -6.818967342376709
    5. ' dfs' → logprob: -7.568967342376709
    6. 'main' → logprob: -9.318967819213867
    7. '_main' → logprob: -9.693967819213867
    8. 'solve' → logprob: -9.693967819213867
    9. ' factorial' → logprob: -9.818967819213867
    10. ' add' → logprob: -10.068967819213867

Token 73: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.8214657306671143
    2. 'ist' → logprob: -0.9464657306671143
    3. '()' → logprob: -2.1964657306671143
    4. 'ambda' → logprob: -3.6964657306671143
    5. 'ine' → logprob: -4.071465492248535
    6. '():
' → logprob: -4.946465492248535
    7. '():
' → logprob: -6.196465492248535
    8. 'I' → logprob: -6.321465492248535
    9. 'IST' → logprob: -6.571465492248535
    10. 'st' → logprob: -6.946465492248535

Token 74: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.03096327744424343
    2. 'return' → logprob: -3.530963182449341
    3. ' ' → logprob: -7.03096342086792
    4. '   ' → logprob: -9.530962944030762
    5. ' ' → logprob: -9.530962944030762
    6. '    ' → logprob: -9.905962944030762
    7. '	return' → logprob: -10.030962944030762
    8. 'eturn' → logprob: -10.155962944030762
    9. ' 
' → logprob: -10.780962944030762
    10. ':return' → logprob: -11.780962944030762

Token 75: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6996418833732605
    2. 'list' → logprob: -0.6996418833732605
    3. '[list' → logprob: -5.699641704559326
    4. 'map' → logprob: -6.449641704559326
    5. ' map' → logprob: -7.574641704559326
    6. '[int' → logprob: -7.574641704559326
    7. '[' → logprob: -8.324642181396484
    8. ' [' → logprob: -8.449642181396484
    9. '	list' → logprob: -11.199642181396484
    10. 'int' → logprob: -12.199642181396484

Token 76: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -6.706686690449715e-05
    2. '(' → logprob: -9.625066757202148
    3. '(int' → logprob: -14.875066757202148
    4. '	map' → logprob: -15.875066757202148
    5. 'map' → logprob: -16.00006675720215
    6. '(
' → logprob: -16.62506675720215
    7. '_map' → logprob: -17.00006675720215
    8. ' map' → logprob: -17.25006675720215
    9. '(m' → logprob: -17.75006675720215
    10. '()' → logprob: -18.00006675720215

Token 77: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013875007862225175
    2. '(' → logprob: -6.626387596130371
    3. 'int' → logprob: -10.126387596130371
    4. '(
' → logprob: -11.876387596130371
    5. '<int' → logprob: -12.751387596130371
    6. '=int' → logprob: -12.751387596130371
    7. ',int' → logprob: -12.876387596130371
    8. ' (' → logprob: -13.251387596130371
    9. ')' → logprob: -13.376387596130371
    10. ' int' → logprob: -14.751387596130371

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07739283889532089
    2. '(sys' → logprob: -3.077392816543579
    3. ',S' → logprob: -3.702392816543579
    4. ' ,' → logprob: -6.077393054962158
    5. 'sys' → logprob: -7.827393054962158
    6. ',(' → logprob: -8.077392578125
    7. '(S' → logprob: -8.202392578125
    8. '=sys' → logprob: -8.827392578125
    9. ',System' → logprob: -9.452392578125
    10. ' sys' → logprob: -9.452392578125

Token 79: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.030267130583524704
    2. 'S' → logprob: -4.155267238616943
    3. ' sys' → logprob: -4.280267238616943
    4. ' S' → logprob: -9.030266761779785
    5. 'I' → logprob: -9.530266761779785
    6. 'Sys' → logprob: -10.530266761779785
    7. 'lambda' → logprob: -10.905266761779785
    8. 'input' → logprob: -10.905266761779785
    9. '(sys' → logprob: -11.530266761779785
    10. ')' → logprob: -11.530266761779785

Token 80: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -2.0100624169572257e-05
    2. '.stdout' → logprob: -11.375020027160645
    3. '.' → logprob: -12.000020027160645
    4. 'stdin' → logprob: -13.750020027160645
    5. '.std' → logprob: -15.000020027160645
    6. '.readline' → logprob: -15.125020027160645
    7. '.argv' → logprob: -15.500020027160645
    8. '<|end|>' → logprob: -16.12502098083496
    9. '.stderr' → logprob: -16.25002098083496
    10. ' .' → logprob: -16.25002098083496

Token 81: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -4.60414821645827e-06
    2. '.' → logprob: -12.750004768371582
    3. '.stdin' → logprob: -14.125004768371582
    4. '```' → logprob: -15.125004768371582
    5. '.readlines' → logprob: -15.250004768371582
    6. '.read' → logprob: -16.000003814697266
    7. ' readline' → logprob: -16.250003814697266
    8. ').' → logprob: -16.500003814697266
    9. '().' → logprob: -17.125003814697266
    10. 'stdin' → logprob: -17.500003814697266

Token 82: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.2200749754119897e-06
    2. '()' → logprob: -13.500001907348633
    3. ' ().' → logprob: -14.750001907348633
    4. ')' → logprob: -16.500001907348633
    5. '()))' → logprob: -16.625001907348633
    6. '.' → logprob: -16.625001907348633
    7. '.readline' → logprob: -17.000001907348633
    8. '(' → logprob: -17.625001907348633
    9. '))' → logprob: -17.750001907348633
    10. '())' → logprob: -18.625001907348633

Token 83: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0037743125576525927
    2. 'read' → logprob: -6.003774166107178
    3. 'rstrip' → logprob: -6.878774166107178
    4. 'split' → logprob: -8.628774642944336
    5. ' strip' → logprob: -10.253774642944336
    6. ')' → logprob: -10.628774642944336
    7. '.readline' → logprob: -11.003774642944336
    8. ' readline' → logprob: -12.128774642944336
    9. '(strip' → logprob: -12.628774642944336
    10. 'decode' → logprob: -13.378774642944336

Token 84: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03489243611693382
    2. '()' → logprob: -3.9098923206329346
    3. '))' → logprob: -4.659892559051514
    4. '())' → logprob: -5.659892559051514
    5. '(' → logprob: -7.159892559051514
    6. '()))
' → logprob: -7.784892559051514
    7. ')' → logprob: -9.784892082214355
    8. '()));' → logprob: -11.284892082214355
    9. '())))' → logprob: -11.409892082214355
    10. '()))

' → logprob: -11.534892082214355

Token 85: 'SL' (ID: 13090)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.16236118972301483
    2. '
' → logprob: -2.9123611450195312
    3. '\n' → logprob: -3.6623611450195312
    4. 'd' → logprob: -3.6623611450195312
    5. '\' → logprob: -3.7873611450195312
    6. 'D' → logprob: -5.037361145019531
    7. '#' → logprob: -5.537361145019531
    8. 'n' → logprob: -6.287361145019531
    9. 'A' → logprob: -6.537361145019531
    10. '```' → logprob: -6.537361145019531

Token 86: '=lambda' (ID: 64865)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.07531794160604477
    2. '=lambda' → logprob: -3.325317859649658
    3. '=' → logprob: -3.575317859649658
    4. '(' → logprob: -5.700317859649658
    5. 'ambda' → logprob: -6.825317859649658
    6. '()=>' → logprob: -6.950317859649658
    7. '():' → logprob: -7.200317859649658
    8. '()>' → logprob: -7.575317859649658
    9. '()='' → logprob: -7.825317859649658
    10. '(lambda' → logprob: -8.075318336486816

Token 87: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.43535539507865906
    2. ' sys' → logprob: -1.1853554248809814
    3. ' ()' → logprob: -3.9353554248809814
    4. ' ' → logprob: -4.185355186462402
    5. 'sys' → logprob: -5.810355186462402
    6. '()' → logprob: -6.060355186462402
    7. '():' → logprob: -6.185355186462402
    8. ':' → logprob: -6.560355186462402
    9. ' ():' → logprob: -6.560355186462402
    10. ' lambda' → logprob: -6.935355186462402

Token 88: 'list' (ID: 2641)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.04107127711176872
    2. ' sys' → logprob: -3.2910711765289307
    3. 'list' → logprob: -5.91607141494751
    4. ' list' → logprob: -8.166070938110352
    5. 's' → logprob: -11.166070938110352
    6. '(sys' → logprob: -11.791070938110352
    7. '[' → logprob: -11.916070938110352
    8. '=sys' → logprob: -12.416070938110352
    9. 'str' → logprob: -12.916070938110352
    10. '	sys' → logprob: -12.916070938110352

Token 89: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23281888663768768
    2. '(sys' → logprob: -1.732818841934204
    3. '(map' → logprob: -3.732818841934204
    4. '(s' → logprob: -5.607819080352783
    5. '(S' → logprob: -6.232819080352783
    6. '(str' → logprob: -7.107819080352783
    7. '(
' → logprob: -8.232818603515625
    8. '(strip' → logprob: -9.232818603515625
    9. '(

' → logprob: -9.607818603515625
    10. '(system' → logprob: -10.482818603515625

Token 90: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00015229015843942761
    2. '.readline' → logprob: -9.500152587890625
    3. '.stdout' → logprob: -9.875152587890625
    4. '.' → logprob: -11.000152587890625
    5. 'stdin' → logprob: -11.875152587890625
    6. '.argv' → logprob: -13.500152587890625
    7. '.std' → logprob: -14.875152587890625
    8. '.stderr' → logprob: -15.500152587890625
    9. '(stdin' → logprob: -16.125152587890625
    10. '```' → logprob: -16.500152587890625

Token 91: '.readline' (ID: 74673)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.23375019431114197
    2. '.readline' → logprob: -1.8587502241134644
    3. '()' → logprob: -3.858750104904175
    4. '_line' → logprob: -4.483750343322754
    5. '())' → logprob: -4.608750343322754
    6. 'line' → logprob: -4.733750343322754
    7. 'getline' → logprob: -8.733750343322754
    8. 'split' → logprob: -8.858750343322754
    9. '()))' → logprob: -9.233750343322754
    10. '()]' → logprob: -9.233750343322754

Token 92: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.8961017202818766e-05
    2. '()' → logprob: -9.750059127807617
    3. ' ().' → logprob: -14.375059127807617
    4. '())' → logprob: -17.125059127807617
    5. '(' → logprob: -17.250059127807617
    6. '().'' → logprob: -18.000059127807617
    7. '()[' → logprob: -18.000059127807617
    8. '()).' → logprob: -18.125059127807617
    9. '.' → logprob: -18.375059127807617
    10. '().__' → logprob: -18.500059127807617

Token 93: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.04863164573907852
    2. 'split' → logprob: -3.0486316680908203
    3. 'rstrip' → logprob: -10.17363166809082
    4. ' strip' → logprob: -12.04863166809082
    5. ' split' → logprob: -15.79863166809082
    6. 'decode' → logprob: -16.79863166809082
    7. '(strip' → logprob: -16.92363166809082
    8. '_strip' → logprob: -17.67363166809082
    9. '```' → logprob: -17.92363166809082
    10. '.strip' → logprob: -17.92363166809082

Token 94: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0237402506172657
    2. '()' → logprob: -4.273740291595459
    3. '()))' → logprob: -4.773740291595459
    4. ')' → logprob: -6.898740291595459
    5. '))' → logprob: -9.7737398147583
    6. '())
' → logprob: -11.6487398147583
    7. ' ())' → logprob: -13.0237398147583
    8. '(' → logprob: -13.3987398147583
    9. '();)' → logprob: -13.8987398147583
    10. '()),' → logprob: -14.2737398147583

Token 95: 'def' (ID: 1314)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7982186079025269
    2. 'def' → logprob: -0.7982186079025269
    3. '
' → logprob: -3.1732187271118164
    4. '\' → logprob: -3.7982187271118164
    5. '#' → logprob: -4.423218727111816
    6. 'D' → logprob: -5.048218727111816
    7. 'n' → logprob: -5.298218727111816
    8. '' → logprob: -5.548218727111816
    9. '\n' → logprob: -6.423218727111816
    10. '(' → logprob: -6.798218727111816

Token 96: ' IL' (ID: 16067)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.38038089871406555
    2. 'main' → logprob: -1.6303808689117432
    3. 'PL' → logprob: -3.130380868911743
    4. ' PL' → logprob: -4.130381107330322
    5. 'solve' → logprob: -4.130381107330322
    6. ' solve' → logprob: -4.755381107330322
    7. ' ' → logprob: -4.880381107330322
    8. 'OL' → logprob: -5.630381107330322
    9. ' DL' → logprob: -5.880381107330322
    10. 'DL' → logprob: -6.380381107330322

Token 97: 's' (ID: 82)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.038245294243097305
    2. '()' → logprob: -3.28824520111084
    3. '(' → logprob: -9.78824520111084
    4. ' ():' → logprob: -10.03824520111084
    5. ' ()' → logprob: -10.28824520111084
    6. '()[' → logprob: -10.53824520111084
    7. '_' → logprob: -11.53824520111084
    8. '().' → logprob: -11.66324520111084
    9. '()>' → logprob: -11.91324520111084
    10. '():
' → logprob: -12.53824520111084

Token 98: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00016265720478259027
    2. '()' → logprob: -9.375163078308105
    3. ' ():' → logprob: -10.000163078308105
    4. '():
' → logprob: -10.375163078308105
    5. ' ()' → logprob: -14.625163078308105
    6. '():

' → logprob: -15.500163078308105
    7. '(' → logprob: -15.625163078308105
    8. '().' → logprob: -16.37516212463379
    9. '()*' → logprob: -16.62516212463379
    10. ':' → logprob: -17.25016212463379

Token 99: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023595184087753296
    2. ')' → logprob: -3.898595094680786
    3. '()' → logprob: -6.023595333099365
    4. '():' → logprob: -7.898595333099365
    5. ' ):' → logprob: -8.523594856262207
    6. '=' → logprob: -10.773594856262207
    7. '):
' → logprob: -11.898594856262207
    8. ' ' → logprob: -12.023594856262207
    9. '   ' → logprob: -12.523594856262207
    10. ')：' → logprob: -12.648594856262207

Token 100: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.040666624903678894
    2. ' :' → logprob: -4.540666580200195
    3. ':
' → logprob: -4.665666580200195
    4. ' return' → logprob: -5.290666580200195
    5. '():' → logprob: -5.415666580200195
    6. '   ' → logprob: -5.790666580200195
    7. ' ' → logprob: -6.040666580200195
    8. ':list' → logprob: -6.665666580200195
    9. '	return' → logprob: -7.290666580200195
    10. '):' → logprob: -7.415666580200195

Token 101: ' out' (ID: 842)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16007806360721588
    2. ' ' → logprob: -3.5350780487060547
    3. 'return' → logprob: -3.5350780487060547
    4. '   ' → logprob: -3.6600780487060547
    5. ' r' → logprob: -3.9100780487060547
    6. ' res' → logprob: -4.660078048706055
    7. ' l' → logprob: -4.785078048706055
    8. '    ' → logprob: -4.910078048706055
    9. 'r' → logprob: -5.410078048706055
    10. ' lst' → logprob: -5.785078048706055

Token 102: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1823127120733261
    2. '=[]' → logprob: -1.9323127269744873
    3. ' =' → logprob: -4.057312488555908
    4. 'ut' → logprob: -6.432312488555908
    5. '=[]
' → logprob: -6.807312488555908
    6. 'u' → logprob: -7.432312488555908
    7. 'ist' → logprob: -7.932312488555908
    8. 'pu' → logprob: -8.432312965393066
    9. '=[' → logprob: -8.807312965393066
    10. 'p' → logprob: -9.182312965393066

Token 103: '   ' (ID: 271)
  Prédit: '	for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	for' → logprob: -1.0655454397201538
    2. ' for' → logprob: -1.3155454397201538
    3. ' ' → logprob: -1.4405454397201538
    4. 'for' → logprob: -2.8155455589294434
    5. '   ' → logprob: -3.5655455589294434
    6. '    ' → logprob: -4.065545558929443
    7. '<|end|>' → logprob: -4.565545558929443
    8. '	' → logprob: -4.815545558929443
    9. '	
' → logprob: -4.940545558929443
    10. '	while' → logprob: -5.940545558929443

Token 104: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2569168508052826
    2. 'for' (adapté à ' for') → logprob: -1.881916880607605
    3. ' ' → logprob: -2.6319167613983154
    4. '	for' → logprob: -7.0069169998168945
    5. '    ' → logprob: -8.381916999816895
    6. ' while' → logprob: -8.506916999816895
    7. ' i' → logprob: -8.631916999816895
    8. 'r' → logprob: -8.756916999816895
    9. ' ' → logprob: -8.881916999816895
    10. '   ' → logprob: -9.256916999816895

Token 105: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005281188525259495
    2. ' _' → logprob: -5.2552809715271
    3. '_i' → logprob: -10.005281448364258
    4. ' i' → logprob: -13.255281448364258
    5. 'i' → logprob: -15.130281448364258
    6. ' ' → logprob: -16.130281448364258
    7. '_=' → logprob: -16.755281448364258
    8. '_

' → logprob: -17.755281448364258
    9. '__' → logprob: -18.255281448364258
    10. '＿' → logprob: -18.880281448364258

Token 106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0216694176197052
    2. 'in' → logprob: -3.896669387817383
    3. ' ' → logprob: -7.271669387817383
    4. '_' → logprob: -8.646669387817383
    5. 'range' → logprob: -8.646669387817383
    6. ' range' → logprob: -10.396669387817383
    7. ' _' → logprob: -10.646669387817383
    8. 'n' → logprob: -11.021669387817383
    9. 'i' → logprob: -13.021669387817383
    10. '_in' → logprob: -13.646669387817383

Token 107: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.576873758807778e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -14.625075340270996
    4. '	range' → logprob: -15.375075340270996
    5. 'rang' → logprob: -16.875076293945312
    6. 'r' → logprob: -17.625076293945312
    7. 'ange' → logprob: -18.125076293945312
    8. 's' → logprob: -18.125076293945312
    9. 'ran' → logprob: -18.500076293945312
    10. 'input' → logprob: -19.000076293945312

Token 108: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.01233339961618185
    2. '(' → logprob: -4.762333393096924
    3. ' (' → logprob: -5.887333393096924
    4. ' n' → logprob: -7.137333393096924
    5. 'n' → logprob: -8.887333869934082
    6. '	n' → logprob: -13.512333869934082
    7. '(
' → logprob: -13.637333869934082
    8. ' ' → logprob: -14.137333869934082
    9. '(range' → logprob: -14.887333869934082
    10. ')' → logprob: -15.512333869934082

Token 109: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04754268005490303
    2. ')' → logprob: -3.2975425720214844
    3. '):
' → logprob: -4.797542572021484
    4. '   ' → logprob: -7.422542572021484
    5. ' ):' → logprob: -8.172542572021484
    6. ':' → logprob: -8.672542572021484
    7. ' )' → logprob: -9.422542572021484
    8. '       ' → logprob: -10.922542572021484
    9. ' ' → logprob: -11.422542572021484
    10. ')
' → logprob: -11.672542572021484

Token 110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023608345538377762
    2. '    ' → logprob: -4.898608207702637
    3. 'out' → logprob: -4.898608207702637
    4. '        ' → logprob: -6.273608207702637
    5. ' out' → logprob: -6.273608207702637
    6. '   ' → logprob: -7.148608207702637
    7. ' 
' → logprob: -7.273608207702637
    8. ' ' → logprob: -7.523608207702637
    9. '(out' → logprob: -7.773608207702637
    10. '	out' → logprob: -8.148608207702637

Token 111: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' (adapté à ' out') → logprob: -0.06296281516551971
    2. ' out' → logprob: -3.062962770462036
    3. '   ' → logprob: -4.562963008880615
    4. '       ' → logprob: -5.687963008880615
    5. '	out' → logprob: -8.062962532043457
    6. '           ' → logprob: -10.437962532043457
    7. '
' → logprob: -10.812962532043457
    8. ' ' → logprob: -10.937962532043457
    9. ',out' → logprob: -11.437962532043457
    10. 'x' → logprob: -12.312962532043457

Token 112: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014178085140883923
    2. '.' → logprob: -4.264178276062012
    3. '.extend' → logprob: -11.389178276062012
    4. '.app' → logprob: -14.139178276062012
    5. 'append' → logprob: -14.264178276062012
    6. '.ap' → logprob: -14.264178276062012
    7. '.Append' → logprob: -14.514178276062012
    8. '.add' → logprob: -15.264178276062012
    9. '.=' → logprob: -16.514177322387695
    10. '_append' → logprob: -16.639177322387695

Token 113: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1279638111591339
    2. '=[' → logprob: -2.1279637813568115
    3. '=list' → logprob: -7.377964019775391
    4. '=int' → logprob: -8.62796401977539
    5. '=sys' → logprob: -9.25296401977539
    6. '=[]' → logprob: -10.50296401977539
    7. '=[
' → logprob: -10.62796401977539
    8. '=b' → logprob: -11.00296401977539
    9. '[' → logprob: -11.25296401977539
    10. '=s' → logprob: -11.87796401977539

Token 114: 'int' (ID: 491)
  Prédit: 'I'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'I' → logprob: -0.5450810790061951
    2. 'IL' → logprob: -1.1700811386108398
    3. 'int' → logprob: -2.29508113861084
    4. ' I' → logprob: -5.04508113861084
    5. ' IL' → logprob: -6.29508113861084
    6. '_IL' → logprob: -8.42008113861084
    7. ' int' → logprob: -8.54508113861084
    8. '	IL' → logprob: -8.79508113861084
    9. ' ' → logprob: -9.67008113861084
    10. '```' → logprob: -10.04508113861084

Token 115: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.004322591237723827
    2. '(' → logprob: -5.504322528839111
    3. '(S' → logprob: -9.00432300567627
    4. '(s' → logprob: -10.00432300567627
    5. '(
' → logprob: -10.37932300567627
    6. ' (' → logprob: -10.87932300567627
    7. '(Sys' → logprob: -11.25432300567627
    8. '(

' → logprob: -12.37932300567627
    9. '(input' → logprob: -13.37932300567627
    10. '=sys' → logprob: -13.37932300567627

Token 116: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006890365853905678
    2. '.readline' → logprob: -5.006890296936035
    3. '().' → logprob: -9.256890296936035
    4. 'stdin' → logprob: -10.131890296936035
    5. '(stdin' → logprob: -11.131890296936035
    6. '.stdout' → logprob: -11.381890296936035
    7. '.' → logprob: -11.506890296936035
    8. '.argv' → logprob: -13.006890296936035
    9. ' .' → logprob: -15.131890296936035
    10. ').' → logprob: -15.131890296936035

Token 117: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.35204821825027466
    2. '().' → logprob: -1.2270481586456299
    3. '())' → logprob: -6.977048397064209
    4. '.' → logprob: -7.227048397064209
    5. '()' → logprob: -7.227048397064209
    6. '()).' → logprob: -7.477048397064209
    7. '.stdin' → logprob: -8.10204792022705
    8. '())
' → logprob: -9.22704792022705
    9. 'stdin' → logprob: -9.97704792022705
    10. '()
' → logprob: -10.22704792022705

Token 118: '())' (ID: 3516)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00014180023572407663
    2. '()' → logprob: -9.250142097473145
    3. '())' → logprob: -10.250142097473145
    4. '.readline' → logprob: -12.250142097473145
    5. ' ().' → logprob: -13.000142097473145
    6. '()
' → logprob: -13.125142097473145
    7. '.strip' → logprob: -14.875142097473145
    8. '()]' → logprob: -15.125142097473145
    9. '()].' → logprob: -15.500142097473145
    10. '()

' → logprob: -16.750141143798828

Token 119: ']
' (ID: 1592)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.18357205390930176
    2. '()]' → logprob: -1.9335720539093018
    3. '.strip' → logprob: -4.183571815490723
    4. '()' → logprob: -5.558571815490723
    5. '())' → logprob: -5.683571815490723
    6. '.' → logprob: -7.933571815490723
    7. '.readline' → logprob: -9.683571815490723
    8. '()]
' → logprob: -10.058571815490723
    9. 'strip' → logprob: -10.683571815490723
    10. '()])
' → logprob: -10.808571815490723

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014489595778286457
    2. 'return' → logprob: -5.014489650726318
    3. '	return' → logprob: -5.514489650726318
    4. ' return' → logprob: -6.639489650726318
    5. ' ' → logprob: -7.639489650726318
    6. '    
' → logprob: -7.764489650726318
    7. '       ' → logprob: -7.889489650726318
    8. '<|end|>' → logprob: -8.13948917388916
    9. '(' → logprob: -8.51448917388916
    10. '
' → logprob: -8.63948917388916

Token 121: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.006502439733594656
    2. ' return' → logprob: -5.131502628326416
    3. '   ' → logprob: -7.756502628326416
    4. '
' → logprob: -10.006502151489258
    5. ' 
' → logprob: -10.881502151489258
    6. 'ret' → logprob: -11.006502151489258
    7. 'r' → logprob: -11.006502151489258
    8. '	return' → logprob: -11.131502151489258
    9. ' ' → logprob: -11.256502151489258
    10. '    
' → logprob: -11.756502151489258

Token 122: ' out' (ID: 842)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.048587486147880554
    2. ' out' → logprob: -3.0485875606536865
    3. '[out' → logprob: -17.298587799072266
    4. '(out' → logprob: -18.423587799072266
    5. ' ' → logprob: -18.548587799072266
    6. '	out' → logprob: -18.548587799072266
    7. 'ou' → logprob: -18.548587799072266
    8. ' ' → logprob: -18.923587799072266
    9. '*out' → logprob: -19.923587799072266
    10. '
' → logprob: -20.423587799072266

Token 123: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 124: 'SL' (ID: 13090)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4471859335899353
    2. 'def' → logprob: -1.07218599319458
    3. 'd' → logprob: -5.32218599319458
    4. ' 
' → logprob: -5.82218599319458
    5. '\n' → logprob: -6.32218599319458
    6. '

' → logprob: -6.32218599319458
    7. '' → logprob: -6.82218599319458
    8. 'n' → logprob: -6.94718599319458
    9. '<|end|>' → logprob: -7.07218599319458
    10. '#' → logprob: -7.19718599319458

Token 125: 's' (ID: 82)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1531699001789093
    2. '(' → logprob: -2.028169870376587
    3. '(lambda' → logprob: -5.528170108795166
    4. '=lambda' → logprob: -5.653170108795166
    5. '=' → logprob: -6.528170108795166
    6. '_' → logprob: -8.278169631958008
    7. 'lambda' → logprob: -9.028169631958008
    8. '()<<' → logprob: -9.153169631958008
    9. '_lambda' → logprob: -9.278169631958008
    10. 's' → logprob: -9.528169631958008

Token 126: '=lambda' (ID: 64865)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.014789276756346226
    2. '(' → logprob: -4.26478910446167
    3. '=lambda' → logprob: -8.389789581298828
    4. '(lambda' → logprob: -9.139789581298828
    5. '=' → logprob: -9.264789581298828
    6. ' (' → logprob: -9.389789581298828
    7. 'def' → logprob: -9.514789581298828
    8. '=(' → logprob: -11.389789581298828
    9. '(
' → logprob: -11.639789581298828
    10. ' def' → logprob: -12.639789581298828

Token 127: ' n' (ID: 297)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(sys' → logprob: -1.4786427021026611
    2. '[' → logprob: -1.7286427021026611
    3. '[n' → logprob: -1.7286427021026611
    4. '(n' → logprob: -1.8536427021026611
    5. ' (' → logprob: -2.103642702102661
    6. ' [' → logprob: -2.728642702102661
    7. '([' → logprob: -3.353642702102661
    8. '(lambda' → logprob: -4.853642463684082
    9. '(range' → logprob: -5.228642463684082
    10. '(S' → logprob: -5.228642463684082

Token 128: ':[' (ID: 17172)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.6397373080253601
    2. ':' → logprob: -1.1397373676300049
    3. ' :' → logprob: -3.014737367630005
    4. ':[' → logprob: -3.014737367630005
    5. ':n' → logprob: -3.264737367630005
    6. '[n' → logprob: -4.514737129211426
    7. ':list' → logprob: -5.764737129211426
    8. ',n' → logprob: -7.264737129211426
    9. ':[
' → logprob: -7.264737129211426
    10. '(' → logprob: -9.014737129211426

Token 129: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.00012047011114191264
    2. 'list' → logprob: -9.375120162963867
    3. ' sys' → logprob: -11.000120162963867
    4. 'S' → logprob: -11.125120162963867
    5. '(sys' → logprob: -13.500120162963867
    6. 'input' → logprob: -13.625120162963867
    7. 's' → logprob: -14.250120162963867
    8. 'tuple' → logprob: -15.625120162963867
    9. '
' → logprob: -16.000120162963867
    10. 'str' → logprob: -16.375120162963867

Token 130: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.5120287066092715e-05
    2. '.stdout' → logprob: -11.125035285949707
    3. 'stdin' → logprob: -11.250035285949707
    4. '.readline' → logprob: -12.125035285949707
    5. '.argv' → logprob: -14.125035285949707
    6. '.' → logprob: -14.625035285949707
    7. '.std' → logprob: -15.250035285949707
    8. '```' → logprob: -15.500035285949707
    9. '._' → logprob: -16.37503433227539
    10. '(stdin' → logprob: -16.50003433227539

Token 131: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.006192322354763746
    2. '.stdin' → logprob: -5.131192207336426
    3. 'stdin' → logprob: -8.381192207336426
    4. 'line' → logprob: -11.756192207336426
    5. '```' → logprob: -12.506192207336426
    6. '.readlines' → logprob: -12.631192207336426
    7. 'pline' → logprob: -12.631192207336426
    8. '(stdin' → logprob: -13.006192207336426
    9. '.stdout' → logprob: -13.131192207336426
    10. 'split' → logprob: -13.131192207336426

Token 132: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0015303362160921097
    2. '()' → logprob: -6.501530170440674
    3. ' ().' → logprob: -10.501530647277832
    4. ' ()' → logprob: -15.126530647277832
    5. '.strip' → logprob: -16.001529693603516
    6. '(' → logprob: -16.376529693603516
    7. '.' → logprob: -18.751529693603516
    8. '()]' → logprob: -19.126529693603516
    9. '()].' → logprob: -19.251529693603516
    10. '()
' → logprob: -19.251529693603516

Token 133: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.000205566844670102
    2. 'rstrip' → logprob: -8.500205993652344
    3. 'split' → logprob: -13.625205993652344
    4. ' strip' → logprob: -14.000205993652344
    5. '_strip' → logprob: -18.500205993652344
    6. '(strip' → logprob: -18.500205993652344
    7. '.strip' → logprob: -19.500205993652344
    8. 'str' → logprob: -19.500205993652344
    9. '-strip' → logprob: -19.750205993652344
    10. 'stripe' → logprob: -20.750205993652344

Token 134: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.173704271830502e-06
    2. 'for' → logprob: -13.37500286102295
    3. ' ()' → logprob: -14.87500286102295
    4. '()]' → logprob: -14.87500286102295
    5. '()
' → logprob: -15.37500286102295
    6. '(' → logprob: -15.62500286102295
    7. ')' → logprob: -15.87500286102295
    8. '())' → logprob: -15.87500286102295
    9. '()\' → logprob: -16.250003814697266
    10. ' for' → logprob: -16.750003814697266

Token 135: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0068502346985042095
    2. 'for' → logprob: -5.006850242614746
    3. ' for' → logprob: -9.256850242614746
    4. ')' → logprob: -10.506850242614746
    5. '()]' → logprob: -12.381850242614746
    6. '	for' → logprob: -13.256850242614746
    7. '()
' → logprob: -13.256850242614746
    8. ' ()' → logprob: -13.631850242614746
    9. '())' → logprob: -13.881850242614746
    10. '()\' → logprob: -14.756850242614746

Token 136: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003155625017825514
    2. '_range' → logprob: -8.25031566619873
    3. ' range' → logprob: -10.37531566619873
    4. 'range' → logprob: -11.25031566619873
    5. ' _' → logprob: -11.62531566619873
    6. ' in' → logprob: -14.50031566619873
    7. '_in' → logprob: -14.87531566619873
    8. '_i' → logprob: -16.000314712524414
    9. '_=' → logprob: -16.750314712524414
    10. '_]' → logprob: -16.875314712524414

Token 137: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3868958353996277
    2. ' in' → logprob: -1.1368958950042725
    3. 'range' → logprob: -11.136896133422852
    4. ' ' → logprob: -12.261896133422852
    5. 'n' → logprob: -13.261896133422852
    6. 'import' → logprob: -13.761896133422852
    7. 'i' → logprob: -14.761896133422852
    8. '	in' → logprob: -14.886896133422852
    9. '_' → logprob: -15.011896133422852
    10. '  ' → logprob: -15.386896133422852

Token 138: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.7697225252486533e-06
    2. ' range' → logprob: -12.500003814697266
    3. '(range' → logprob: -18.375003814697266
    4. '	range' → logprob: -19.375003814697266
    5. 'rang' → logprob: -20.000003814697266
    6. '   ' → logprob: -20.000003814697266
    7. 'r' → logprob: -20.375003814697266
    8. '
' → logprob: -20.375003814697266
    9. '```' → logprob: -20.500003814697266
    10. 'ran' → logprob: -20.625003814697266

Token 139: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00043639098294079304
    2. 'n' → logprob: -8.375436782836914
    3. '(' → logprob: -8.500436782836914
    4. ' n' → logprob: -13.500436782836914
    5. '(
' → logprob: -14.250436782836914
    6. ' (' → logprob: -15.250436782836914
    7. ')n' → logprob: -17.125436782836914
    8. '	n' → logprob: -18.000436782836914
    9. ',n' → logprob: -19.625436782836914
    10. '(

' → logprob: -20.125436782836914

Token 140: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.004227389581501484
    2. ')' → logprob: -5.504227161407471
    3. ']' → logprob: -9.254227638244629
    4. '])' → logprob: -10.254227638244629
    5. ')])' → logprob: -11.129227638244629
    6. '))' → logprob: -14.129227638244629
    7. '])]' → logprob: -14.129227638244629
    8. '()]' → logprob: -14.254227638244629
    9. ')],' → logprob: -15.129227638244629
    10. '')]' → logprob: -15.504227638244629

Token 141: 'ILL' (ID: 16050)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25452765822410583
    2. 'def' → logprob: -1.6295276880264282
    3. '\n' → logprob: -4.379527568817139
    4. '

' → logprob: -5.504527568817139
    5. ' 
' → logprob: -6.129527568817139
    6. 'd' → logprob: -6.254527568817139
    7. '' → logprob: -6.379527568817139
    8. '#' → logprob: -6.504527568817139
    9. 'n' → logprob: -6.754527568817139
    10. '\' → logprob: -7.254527568817139

Token 142: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.44851693511009216
    2. '(' → logprob: -1.4485169649124146
    3. '=lambda' → logprob: -3.448516845703125
    4. 'ambda' → logprob: -3.573516845703125
    5. '=[]' → logprob: -3.698516845703125
    6. '(n' → logprob: -4.073516845703125
    7. '=(' → logprob: -4.698516845703125
    8. ' =' → logprob: -5.198516845703125
    9. '()' → logprob: -5.198516845703125
    10. 's' → logprob: -6.073516845703125

Token 143: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5913496613502502
    2. ' :' → logprob: -0.8413496613502502
    3. ':list' → logprob: -4.4663496017456055
    4. '():' → logprob: -5.7163496017456055
    5. ':int' → logprob: -7.8413496017456055
    6. ' list' → logprob: -10.466349601745605
    7. ' ():' → logprob: -10.591349601745605
    8. ' n' → logprob: -10.966349601745605
    9. ':l' → logprob: -11.591349601745605
    10. ' ' → logprob: -12.716349601745605

Token 144: ':[' (ID: 17172)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008126096799969673
    2. ':list' → logprob: -5.133126258850098
    3. '():' → logprob: -6.883126258850098
    4. ':[' → logprob: -7.383126258850098
    5. ' :' → logprob: -7.883126258850098
    6. ':int' → logprob: -9.258126258850098
    7. '()' → logprob: -10.758126258850098
    8. ':return' → logprob: -10.883126258850098
    9. ':n' → logprob: -11.633126258850098
    10. '[]' → logprob: -12.883126258850098

Token 145: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0023719624150544405
    2. 'int' → logprob: -6.252371788024902
    3. ' list' → logprob: -8.252371788024902
    4. 'map' → logprob: -8.627371788024902
    5. 'tuple' → logprob: -13.752371788024902
    6. 'List' → logprob: -14.627371788024902
    7. '0' → logprob: -14.752371788024902
    8. '	list' → logprob: -15.127371788024902
    9. ' map' → logprob: -15.627371788024902
    10. 'ints' → logprob: -15.752371788024902

Token 146: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.531315314830863e-06
    2. '(' → logprob: -12.750003814697266
    3. 'map' → logprob: -14.875003814697266
    4. ' map' → logprob: -16.125003814697266
    5. '	map' → logprob: -16.625003814697266
    6. '(
' → logprob: -17.500003814697266
    7. '.map' → logprob: -17.875003814697266
    8. ',map' → logprob: -18.375003814697266
    9. '()' → logprob: -18.625003814697266
    10. '_map' → logprob: -19.000003814697266

Token 147: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.876193169271573e-05
    2. 'int' → logprob: -9.500088691711426
    3. '<int' → logprob: -12.250088691711426
    4. '=int' → logprob: -12.500088691711426
    5. '(' → logprob: -13.375088691711426
    6. '[int' → logprob: -13.375088691711426
    7. ',int' → logprob: -13.875088691711426
    8. ']int' → logprob: -13.875088691711426
    9. ' int' → logprob: -15.625088691711426
    10. '(
' → logprob: -17.250089645385742

Token 148: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.02724514715373516
    2. ',' → logprob: -3.652245044708252
    3. 'sys' → logprob: -7.152245044708252
    4. '=sys' → logprob: -9.02724552154541
    5. ' ,' → logprob: -12.02724552154541
    6. ',s' → logprob: -12.15224552154541
    7. ',(' → logprob: -12.15224552154541
    8. ' sys' → logprob: -12.27724552154541
    9. '(' → logprob: -12.40224552154541
    10. ',System' → logprob: -12.52724552154541

Token 149: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.64839569455944e-05
    2. ' sys' → logprob: -9.500076293945312
    3. '(sys' → logprob: -13.625076293945312
    4. '   ' → logprob: -15.375076293945312
    5. '	sys' → logprob: -16.625076293945312
    6. 'system' → logprob: -18.000076293945312
    7. '=sys' → logprob: -18.000076293945312
    8. '```' → logprob: -18.125076293945312
    9. 'Sys' → logprob: -18.250076293945312
    10. ')' → logprob: -18.375076293945312

Token 150: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00021093101531732827
    2. '.readline' → logprob: -8.875210762023926
    3. 'stdin' → logprob: -10.000210762023926
    4. '(stdin' → logprob: -11.500210762023926
    5. '.stdout' → logprob: -11.625210762023926
    6. '().' → logprob: -12.750210762023926
    7. '.' → logprob: -13.375210762023926
    8. '```' → logprob: -13.625210762023926
    9. ').' → logprob: -15.375210762023926
    10. '.argv' → logprob: -15.625210762023926

Token 151: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0814015343785286
    2. '.stdin' → logprob: -2.5814015865325928
    3. 'stdin' → logprob: -6.081401348114014
    4. '```' → logprob: -8.831401824951172
    5. '(stdin' → logprob: -10.831401824951172
    6. '.readlines' → logprob: -10.956401824951172
    7. '.' → logprob: -11.581401824951172
    8. '.stdout' → logprob: -11.706401824951172
    9. '.read' → logprob: -12.456401824951172
    10. 'read' → logprob: -12.956401824951172

Token 152: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '.readline' → logprob: -13.250003814697266
    3. '()' → logprob: -13.750003814697266
    4. ' ().' → logprob: -15.000003814697266
    5. '.' → logprob: -16.375003814697266
    6. ')' → logprob: -18.250003814697266
    7. '().__' → logprob: -18.500003814697266
    8. '()
' → logprob: -19.000003814697266
    9. ' .' → logprob: -19.000003814697266
    10. '.read' → logprob: -19.750003814697266

Token 153: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08370405435562134
    2. 'strip' → logprob: -3.0837039947509766
    3. '().' → logprob: -4.333703994750977
    4. '.readline' → logprob: -4.708703994750977
    5. ')' → logprob: -5.333703994750977
    6. 'read' → logprob: -5.708703994750977
    7. 'rstrip' → logprob: -5.708703994750977
    8. ' ' → logprob: -8.083703994750977
    9. '```' → logprob: -8.833703994750977
    10. '()' → logprob: -9.333703994750977

Token 154: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.002795014763250947
    2. '()' → logprob: -6.627795219421387
    3. '))' → logprob: -6.627795219421387
    4. '().' → logprob: -9.627795219421387
    5. '())' → logprob: -10.627795219421387
    6. '()))
' → logprob: -11.002795219421387
    7. '()
' → logprob: -11.627795219421387
    8. '(' → logprob: -11.627795219421387
    9. '()));' → logprob: -11.752795219421387
    10. '())).' → logprob: -12.002795219421387

Token 155: 'for' (ID: 1938)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02626883052289486
    2. '())' → logprob: -4.27626895904541
    3. '(n' → logprob: -4.90126895904541
    4. ')' → logprob: -5.52626895904541
    5. '()]' → logprob: -8.15126895904541
    6. '(' → logprob: -9.15126895904541
    7. ' for' → logprob: -9.40126895904541
    8. 'for' → logprob: -9.65126895904541
    9. '()[' → logprob: -10.90126895904541
    10. ' ()' → logprob: -11.15126895904541

Token 156: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5559601783752441
    2. '_' → logprob: -1.0559601783752441
    3. 'range' → logprob: -2.555960178375244
    4. ' _' → logprob: -7.180960178375244
    5. '_range' → logprob: -8.680959701538086
    6. '(range' → logprob: -9.805959701538086
    7. '	range' → logprob: -12.180959701538086
    8. ' in' → logprob: -12.430959701538086
    9. '_r' → logprob: -13.680959701538086
    10. 'r' → logprob: -13.680959701538086

Token 157: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.29698795080184937
    2. 'in' → logprob: -2.171988010406494
    3. 'range' → logprob: -2.171988010406494
    4. ' range' → logprob: -3.546988010406494
    5. '_' → logprob: -9.296987533569336
    6. 'n' → logprob: -9.796987533569336
    7. ' ' → logprob: -10.171987533569336
    8. ' _' → logprob: -11.671987533569336
    9. '(range' → logprob: -11.671987533569336
    10. ' n' → logprob: -12.046987533569336

Token 158: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.01815064437687397
    2. ' range' → logprob: -4.018150806427002
    3. '(range' → logprob: -14.518150329589844
    4. '	range' → logprob: -15.518150329589844
    5. ' ' → logprob: -17.018150329589844
    6. 'rang' → logprob: -18.518150329589844
    7. 'ran' → logprob: -18.643150329589844
    8. 'r' → logprob: -18.768150329589844
    9. '  ' → logprob: -19.143150329589844
    10. ' xrange' → logprob: -19.268150329589844

Token 159: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004647504829335958
    2. '(' → logprob: -7.750464916229248
    3. 'n' → logprob: -11.00046443939209
    4. ' (' → logprob: -11.12546443939209
    5. ' n' → logprob: -13.37546443939209
    6. '(
' → logprob: -13.87546443939209
    7. '	n' → logprob: -17.875465393066406
    8. ' ' → logprob: -18.750465393066406
    9. '
' → logprob: -19.125465393066406
    10. '(s' → logprob: -19.250465393066406

Token 160: ')]
' (ID: 11587)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.39886489510536194
    2. ')]' → logprob: -1.1488648653030396
    3. ']' → logprob: -4.64886474609375
    4. ')' → logprob: -6.52386474609375
    5. '()' → logprob: -7.77386474609375
    6. '())' → logprob: -8.14886474609375
    7. ']()' → logprob: -9.02386474609375
    8. ')])' → logprob: -10.64886474609375
    9. '])' → logprob: -11.27386474609375
    10. '()]
' → logprob: -12.27386474609375

Token 161: 'S' (ID: 50)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3300033211708069
    2. ' ' → logprob: -2.330003261566162
    3. ')' → logprob: -2.705003261566162
    4. '_' → logprob: -3.830003261566162
    5. '[]' → logprob: -4.080003261566162
    6. ':' → logprob: -4.705003261566162
    7. 'd' → logprob: -4.705003261566162
    8. '[' → logprob: -4.830003261566162
    9. 'n' → logprob: -5.080003261566162
    10. ' 
' → logprob: -5.080003261566162

Token 162: 'LL' (ID: 7454)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.009806028567254543
    2. 'Ls' → logprob: -4.634806156158447
    3. 'LS' → logprob: -10.634805679321289
    4. '=lambda' → logprob: -11.634805679321289
    5. '(lambda' → logprob: -12.759805679321289
    6. '=' → logprob: -12.759805679321289
    7. 'lambda' → logprob: -13.134805679321289
    8. 'LL' → logprob: -13.384805679321289
    9. 'S' → logprob: -13.759805679321289
    10. ' L' → logprob: -13.884805679321289

Token 163: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0004399671161081642
    2. '=' → logprob: -7.7504401206970215
    3. 'ambda' → logprob: -12.500439643859863
    4. '(lambda' → logprob: -12.875439643859863
    5. 'lambda' → logprob: -13.000439643859863
    6. '=l' → logprob: -15.125439643859863
    7. ' =' → logprob: -15.250439643859863
    8. '=L' → logprob: -16.25044059753418
    9. '_lambda' → logprob: -16.50044059753418
    10. 's' → logprob: -17.12544059753418

Token 164: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029807310551404953
    2. ' n' → logprob: -3.5298073291778564
    3. '(n' → logprob: -9.779807090759277
    4. '	n' → logprob: -16.154808044433594
    5. ':' → logprob: -16.404808044433594
    6. 'lambda' → logprob: -17.154808044433594
    7. ' ' → logprob: -17.404808044433594
    8. ' :' → logprob: -17.404808044433594
    9. '   ' → logprob: -18.404808044433594
    10. 'a' → logprob: -18.654808044433594

Token 165: ':[' (ID: 17172)
  Prédit: ':['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':[' → logprob: -0.02938048169016838
    2. '(n' → logprob: -4.2793803215026855
    3. ' :' → logprob: -4.7793803215026855
    4. ':' → logprob: -5.1543803215026855
    5. ':n' → logprob: -7.2793803215026855
    6. '[n' → logprob: -9.529380798339844
    7. ':[
' → logprob: -9.654380798339844
    8. ':(' → logprob: -10.779380798339844
    9. ':list' → logprob: -10.904380798339844
    10. ':['' → logprob: -11.654380798339844

Token 166: 'sys' (ID: 17324)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.014189599081873894
    2. 'sys' → logprob: -4.264189720153809
    3. ' list' → logprob: -10.639189720153809
    4. ' sys' → logprob: -13.514189720153809
    5. '   ' → logprob: -14.889189720153809
    6. '(sys' → logprob: -16.264188766479492
    7. '(list' → logprob: -16.514188766479492
    8. 'lists' → logprob: -17.139188766479492
    9. 'Sys' → logprob: -17.514188766479492
    10. '[list' → logprob: -17.514188766479492

Token 167: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -3.857719275401905e-05
    2. 'stdin' → logprob: -11.000038146972656
    3. '.stdout' → logprob: -11.625038146972656
    4. '.readline' → logprob: -11.625038146972656
    5. '(stdin' → logprob: -12.625038146972656
    6. '.argv' → logprob: -15.000038146972656
    7. '```' → logprob: -15.750038146972656
    8. '.' → logprob: -16.625038146972656
    9. ' .' → logprob: -16.875038146972656
    10. '=sys' → logprob: -17.500038146972656

Token 168: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.526604950428009
    2. '.stdin' → logprob: -0.901604950428009
    3. 'stdin' → logprob: -6.526605129241943
    4. '(stdin' → logprob: -6.651605129241943
    5. '.stdout' → logprob: -8.401604652404785
    6. '().' → logprob: -8.776604652404785
    7. '(sys' → logprob: -9.026604652404785
    8. '```' → logprob: -9.901604652404785
    9. '.' → logprob: -10.151604652404785
    10. 'sys' → logprob: -10.526604652404785

Token 169: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002547832846175879
    2. '.strip' → logprob: -8.62525463104248
    3. '()' → logprob: -9.75025463104248
    4. ' ().' → logprob: -11.75025463104248
    5. '.' → logprob: -12.62525463104248
    6. '.rstrip' → logprob: -13.37525463104248
    7. '(strip' → logprob: -13.75025463104248
    8. '.readline' → logprob: -14.87525463104248
    9. '.split' → logprob: -14.87525463104248
    10. '.str' → logprob: -14.87525463104248

Token 170: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00016265720478259027
    2. 'split' → logprob: -8.750163078308105
    3. 'rstrip' → logprob: -12.500163078308105
    4. ' strip' → logprob: -14.875163078308105
    5. '.strip' → logprob: -18.37516212463379
    6. 'str' → logprob: -18.37516212463379
    7. '
' → logprob: -18.75016212463379
    8. '(strip' → logprob: -19.37516212463379
    9. '_strip' → logprob: -19.50016212463379
    10. '```' → logprob: -19.87516212463379

Token 171: '()' (ID: 416)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.10251899808645248
    2. '()' → logprob: -2.3525190353393555
    3. '(' → logprob: -6.6025190353393555
    4. '()]' → logprob: -8.102519035339355
    5. ' (' → logprob: -8.477519035339355
    6. ' ()' → logprob: -8.727519035339355
    7. '()(' → logprob: -8.852519035339355
    8. '()[' → logprob: -9.227519035339355
    9. 'for' → logprob: -11.227519035339355
    10. '()
' → logprob: -12.227519035339355

Token 172: 'for' (ID: 1938)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0008439337252639234
    2. ' for' → logprob: -8.12584400177002
    3. 'for' → logprob: -8.50084400177002
    4. ')' → logprob: -8.62584400177002
    5. ' (' → logprob: -9.25084400177002
    6. '()' → logprob: -9.87584400177002
    7. '(' → logprob: -11.37584400177002
    8. '   ' → logprob: -13.25084400177002
    9. '())' → logprob: -13.50084400177002
    10. ')n' → logprob: -14.37584400177002

Token 173: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1269562542438507
    2. ' _' → logprob: -2.1269562244415283
    3. ' ' → logprob: -10.50195598602295
    4. ' n' → logprob: -14.75195598602295
    5. ' ' → logprob: -15.62695598602295
    6. ' in' → logprob: -16.251956939697266
    7. 'n' → logprob: -16.751956939697266
    8. '_n' → logprob: -17.126956939697266
    9. '_
' → logprob: -17.376956939697266
    10. '_=' → logprob: -17.876956939697266

Token 174: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2886126637458801
    2. 'in' → logprob: -1.5386126041412354
    3. 'range' → logprob: -3.6636126041412354
    4. '_' → logprob: -5.1636128425598145
    5. ' range' → logprob: -5.4136128425598145
    6. 'n' → logprob: -8.663612365722656
    7. ' _' → logprob: -11.163612365722656
    8. ' ' → logprob: -12.163612365722656
    9. ' n' → logprob: -12.538612365722656
    10. '_range' → logprob: -13.038612365722656

Token 175: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03920597583055496
    2. ' range' → logprob: -3.289206027984619
    3. 'n' → logprob: -6.789206027984619
    4. ' n' → logprob: -10.664205551147461
    5. '(n' → logprob: -11.539205551147461
    6. '(range' → logprob: -12.664205551147461
    7. 'r' → logprob: -14.664205551147461
    8. '_' → logprob: -15.289205551147461
    9. '_range' → logprob: -15.414205551147461
    10. ' ' → logprob: -15.664205551147461

Token 176: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0019595595076680183
    2. ' (' → logprob: -6.251959323883057
    3. 'n' → logprob: -11.126959800720215
    4. '(' → logprob: -11.376959800720215
    5. ' n' → logprob: -12.251959800720215
    6. '(
' → logprob: -19.2519588470459
    7. ' ' → logprob: -20.0019588470459
    8. ' ' → logprob: -20.3769588470459
    9. '	n' → logprob: -20.6269588470459
    10. ')' → logprob: -20.7519588470459

Token 177: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.40686875581741333
    2. '(n' → logprob: -1.2818686962127686
    3. 'n' → logprob: -2.9068686962127686
    4. ')' → logprob: -6.406868934631348
    5. ')n' → logprob: -8.656868934631348
    6. '(' → logprob: -8.906868934631348
    7. ']' → logprob: -10.156868934631348
    8. '()]' → logprob: -10.531868934631348
    9. ')])' → logprob: -11.031868934631348
    10. ' n' → logprob: -11.031868934631348

Token 178: 'Pr' (ID: 2938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002491706982254982
    2. '#' → logprob: -6.752491474151611
    3. 'd' → logprob: -7.877491474151611
    4. 'class' → logprob: -8.25249195098877
    5. '
' → logprob: -8.50249195098877
    6. 'n' → logprob: -9.12749195098877
    7. 'D' → logprob: -9.37749195098877
    8. '<|end|>' → logprob: -9.87749195098877
    9. ' 
' → logprob: -10.50249195098877
    10. ')' → logprob: -10.62749195098877

Token 179: 'nt' (ID: 578)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002423217985779047
    2. 'i' → logprob: -6.252423286437988
    3. '```' → logprob: -8.877423286437988
    4. '=' → logprob: -10.127423286437988
    5. '[int' → logprob: -10.127423286437988
    6. 'in' → logprob: -10.502423286437988
    7. '   ' → logprob: -10.502423286437988
    8. '#' → logprob: -10.752423286437988
    9. '(int' → logprob: -10.877423286437988
    10. '[' → logprob: -11.252423286437988

Token 180: '=lambda' (ID: 64865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2356288731098175
    2. 'f' → logprob: -2.235628843307495
    3. 'int' → logprob: -2.860628843307495
    4. '()' → logprob: -3.735628843307495
    5. '=' → logprob: -4.860629081726074
    6. 't' → logprob: -5.860629081726074
    7. '("")' → logprob: -5.985629081726074
    8. '("' → logprob: -6.360629081726074
    9. ' =' → logprob: -6.610629081726074
    10. '=lambda' → logprob: -7.235629081726074

Token 181: ' arg' (ID: 2341)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0496857166290283
    2. '*' → logprob: -1.6746857166290283
    3. '(x' → logprob: -2.0496857166290283
    4. '(*' → logprob: -2.2996857166290283
    5. 'print' → logprob: -2.6746857166290283
    6. '(s' → logprob: -3.0496857166290283
    7. ' s' → logprob: -3.6746857166290283
    8. 's' → logprob: -3.7996857166290283
    9. ' print' → logprob: -4.049685478210449
    10. ' ' → logprob: -4.424685478210449

Token 182: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13125178217887878
    2. '(*' → logprob: -2.756251811981201
    3. '(arg' → logprob: -3.881251811981201
    4. '(' → logprob: -4.006251811981201
    5. '=' → logprob: -4.381251811981201
    6. ' :' → logprob: -5.756251811981201
    7. 'ent' → logprob: -7.256251811981201
    8. '):' → logprob: -7.506251811981201
    9. 't' → logprob: -7.631251811981201
    10. ',' → logprob: -7.631251811981201

Token 183: 'print' (ID: 1598)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3873138129711151
    2. 'print' → logprob: -1.1373138427734375
    3. '   ' → logprob: -8.637313842773438
    4. '(print' → logprob: -8.762313842773438
    5. ' sys' → logprob: -9.387313842773438
    6. '	print' → logprob: -12.012313842773438
    7. '(sys' → logprob: -12.262313842773438
    8. 'sys' → logprob: -12.762313842773438
    9. '
' → logprob: -13.012313842773438
    10. '(' → logprob: -13.012313842773438

Token 184: '(arg' (ID: 19030)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004713141825050116
    2. '(arg' → logprob: -5.50471305847168
    3. '()' → logprob: -8.12971305847168
    4. ')' → logprob: -9.25471305847168
    5. '(
' → logprob: -9.50471305847168
    6. '<|end|>' → logprob: -9.75471305847168
    7. '("")' → logprob: -10.50471305847168
    8. '("("' → logprob: -11.87971305847168
    9. '(eval' → logprob: -12.00471305847168
    10. '('' → logprob: -12.00471305847168

Token 185: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7491250875755213e-05
    2. ',' → logprob: -10.750027656555176
    3. '))' → logprob: -12.375027656555176
    4. ' )' → logprob: -14.500027656555176
    5. ')`' → logprob: -14.875027656555176
    6. ',)' → logprob: -16.00002670288086
    7. ')
' → logprob: -16.12502670288086
    8. ',end' → logprob: -16.12502670288086
    9. '()' → logprob: -16.12502670288086
    10. '),' → logprob: -16.37502670288086

Token 186: 'y' (ID: 88)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.36543622612953186
    2. '(' → logprob: -2.615436315536499
    3. '
' → logprob: -2.740436315536499
    4. ')' → logprob: -2.740436315536499
    5. '<|end|>' → logprob: -3.615436315536499
    6. '#' → logprob: -3.740436315536499
    7. '\n' → logprob: -4.11543607711792
    8. ' ' → logprob: -4.86543607711792
    9. '(
' → logprob: -5.74043607711792
    10. '\' → logprob: -5.74043607711792

Token 187: 'ES' (ID: 1759)
  Prédit: 'ield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ield' → logprob: -0.5419477820396423
    2. '=' → logprob: -1.291947841644287
    3. 'es' → logprob: -2.041947841644287
    4. 'e' → logprob: -5.916947841644287
    5. 'iel' → logprob: -6.541947841644287
    6. ' =' → logprob: -6.541947841644287
    7. 'ou' → logprob: -6.666947841644287
    8. ':=' → logprob: -7.291947841644287
    9. '=True' → logprob: -7.541947841644287
    10. 'ields' → logprob: -7.666947841644287

Token 188: '=lambda' (ID: 64865)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08605880290269852
    2. ' =' → logprob: -2.5860588550567627
    3. '=lambda' → logprob: -5.461058616638184
    4. ' ' → logprob: -6.961058616638184
    5. ',' → logprob: -7.711058616638184
    6. '=True' → logprob: -7.836058616638184
    7. 'def' → logprob: -8.836058616638184
    8. '=None' → logprob: -9.211058616638184
    9. 'es' → logprob: -9.461058616638184
    10. '=[]' → logprob: -9.711058616638184

Token 189: ':' (ID: 25)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9147207140922546
    2. ' True' → logprob: -1.1647207736968994
    3. 'lambda' → logprob: -1.9147207736968994
    4. '"' → logprob: -2.7897207736968994
    5. ' lambda' → logprob: -2.7897207736968994
    6. ''' → logprob: -5.03972053527832
    7. '(lambda' → logprob: -5.78972053527832
    8. ' "' → logprob: -5.78972053527832
    9. '(True' → logprob: -6.66472053527832
    10. ' '' → logprob: -7.03972053527832

Token 190: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003698973741848022
    2. 'True' → logprob: -8.500370025634766
    3. 'pr' → logprob: -9.500370025634766
    4. ' print' → logprob: -9.500370025634766
    5. 'sys' → logprob: -11.500370025634766
    6. 'Pr' → logprob: -12.500370025634766
    7. 'Yes' → logprob: -13.875370025634766
    8. '"' → logprob: -14.500370025634766
    9. 'yes' → logprob: -15.250370025634766
    10. ' True' → logprob: -15.750370025634766

Token 191: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.024831397458910942
    2. '(' → logprob: -3.7748312950134277
    3. '('' → logprob: -6.524831295013428
    4. '(True' → logprob: -9.899831771850586
    5. '()' → logprob: -10.274831771850586
    6. '(
' → logprob: -10.774831771850586
    7. ' ("' → logprob: -11.899831771850586
    8. '("""' → logprob: -13.024831771850586
    9. '(("' → logprob: -14.149831771850586
    10. '("")' → logprob: -14.524831771850586

Token 192: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.2817520201206207
    2. 'YES' → logprob: -1.4067519903182983
    3. 'Y' → logprob: -7.781752109527588
    4. 'Ye' → logprob: -10.03175163269043
    5. 'yes' → logprob: -10.15675163269043
    6. 'es' → logprob: -10.65675163269043
    7. '"' → logprob: -10.78175163269043
    8. ' Yes' → logprob: -10.78175163269043
    9. 'e' → logprob: -12.03175163269043
    10. 'NO' → logprob: -12.28175163269043

Token 193: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0008120091515593231
    2. '")
' → logprob: -7.12581205368042
    3. ')' → logprob: -12.875811576843262
    4. '");' → logprob: -13.250811576843262
    5. ')")' → logprob: -13.625811576843262
    6. '")
' → logprob: -14.125811576843262
    7. '")

' → logprob: -14.250811576843262
    8. '"' → logprob: -14.625811576843262
    9. ' ")' → logprob: -16.625812530517578
    10. '!")' → logprob: -17.000812530517578

Token 194: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.012746959924697876
    2. 'y' → logprob: -4.887746810913086
    3. 'def' → logprob: -5.512746810913086
    4. 'N' → logprob: -8.262746810913086
    5. 'YES' → logprob: -9.012746810913086
    6. 'no' → logprob: -9.137746810913086
    7. '
' → logprob: -9.387746810913086
    8. 'x' → logprob: -9.512746810913086
    9. 'ndef' → logprob: -9.512746810913086
    10. 'No' → logprob: -9.637746810913086

Token 195: 'O' (ID: 46)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -6.52788148727268e-05
    2. '	o' → logprob: -10.000064849853516
    3. 'O' → logprob: -11.125064849853516
    4. ')o' → logprob: -13.375064849853516
    5. '```' → logprob: -13.750064849853516
    6. '<|end|>' → logprob: -14.000064849853516
    7. '
' → logprob: -15.125064849853516
    8. '{o' → logprob: -15.250064849853516
    9. '0' → logprob: -15.375064849853516
    10. ''o' → logprob: -15.750064849853516

Token 196: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.2925911545753479
    2. '=' → logprob: -1.5425910949707031
    3. 'ne' → logprob: -3.917591094970703
    4. 't' → logprob: -4.917591094970703
    5. 'w' → logprob: -5.167591094970703
    6. '()' → logprob: -5.792591094970703
    7. 'lambda' → logprob: -6.667591094970703
    8. '(lambda' → logprob: -7.417591094970703
    9. '```' → logprob: -7.917591094970703
    10. 'print' → logprob: -8.667591094970703

Token 197: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.13039468228816986
    2. ':' → logprob: -2.130394697189331
    3. '()' → logprob: -6.130394458770752
    4. ' ():' → logprob: -6.755394458770752
    5. 'print' → logprob: -10.00539493560791
    6. ' :' → logprob: -10.38039493560791
    7. ' ()' → logprob: -11.13039493560791
    8. ':void' → logprob: -11.38039493560791
    9. '()
' → logprob: -12.13039493560791
    10. '):' → logprob: -12.50539493560791

Token 198: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. ' print' → logprob: -16.5
    3. 'pr' → logprob: -17.75
    4. '(print' → logprob: -18.875
    5. 'prin' → logprob: -19.875
    6. '```' → logprob: -20.375
    7. 'pri' → logprob: -21.375
    8. 'prit' → logprob: -21.625
    9. '	print' → logprob: -21.625
    10. 'p' → logprob: -21.75

Token 199: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0032024311367422342
    2. '(' → logprob: -5.753202438354492
    3. '()' → logprob: -12.003202438354492
    4. '("")' → logprob: -12.003202438354492
    5. '('' → logprob: -12.128202438354492
    6. ' ("' → logprob: -12.878202438354492
    7. '(""' → logprob: -13.378202438354492
    8. '(
' → logprob: -13.753202438354492
    9. '(False' → logprob: -14.503202438354492
    10. '(None' → logprob: -14.753202438354492

Token 200: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0005587508203461766
    2. '"No' → logprob: -7.500558853149414
    3. '"' → logprob: -12.875558853149414
    4. '")' → logprob: -13.375558853149414
    5. 'NO' → logprob: -14.000558853149414
    6. 'no' → logprob: -14.625558853149414
    7. ' No' → logprob: -15.500558853149414
    8. ')' → logprob: -17.000558853149414
    9. '“No' → logprob: -17.125558853149414
    10. '(No' → logprob: -17.250558853149414

Token 201: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.31338241696357727
    2. ')' → logprob: -1.3133823871612549
    3. '()' → logprob: -9.688382148742676
    4. ')")' → logprob: -9.938382148742676
    5. '")
' → logprob: -12.813382148742676
    6. '())' → logprob: -12.813382148742676
    7. ')
' → logprob: -13.188382148742676
    8. '')' → logprob: -13.438382148742676
    9. '#' → logprob: -14.688382148742676
    10. ')"' → logprob: -15.313382148742676

Token 202: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03961018845438957
    2. 'd' → logprob: -3.5396101474761963
    3. '#' → logprob: -4.914610385894775
    4. 'D' → logprob: -7.414610385894775
    5. ' ' → logprob: -7.414610385894775
    6. 'n' → logprob: -8.539609909057617
    7. 'class' → logprob: -8.914609909057617
    8. 'A' → logprob: -9.289609909057617
    9. 'from' → logprob: -9.289609909057617
    10. '\' → logprob: -9.539609909057617

Token 203: ' EXIT' (ID: 73154)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.09451795369386673
    2. 'main' → logprob: -3.094517946243286
    3. ' solve' → logprob: -3.469517946243286
    4. 'solve' → logprob: -5.094518184661865
    5. ' gcd' → logprob: -7.094518184661865
    6. ' is' → logprob: -7.469518184661865
    7. ' binary' → logprob: -7.469518184661865
    8. 'pow' → logprob: -7.594518184661865
    9. ' factor' → logprob: -7.594518184661865
    10. ' pow' → logprob: -7.844518184661865

Token 204: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0014065440045669675
    2. '()' → logprob: -7.251406669616699
    3. ' ():' → logprob: -7.626406669616699
    4. '(' → logprob: -8.8764066696167
    5. '():
' → logprob: -10.1264066696167
    6. '(code' → logprob: -11.7514066696167
    7. '(msg' → logprob: -12.1264066696167
    8. '(:' → logprob: -12.2514066696167
    9. ' ()' → logprob: -12.7514066696167
    10. '(status' → logprob: -13.7514066696167

Token 205: ' exit' (ID: 10654)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022155288606882095
    2. ' sys' → logprob: -4.772155284881592
    3. 'sys' → logprob: -5.022155284881592
    4. 'import' → logprob: -5.397155284881592
    5. '	sys' → logprob: -6.772155284881592
    6. 'exit' → logprob: -8.14715576171875
    7. ' import' → logprob: -8.14715576171875
    8. ' exit' → logprob: -8.39715576171875
    9. '	exit' → logprob: -9.27215576171875
    10. '   ' → logprob: -9.27215576171875

Token 206: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05697333440184593
    2. '(' → logprob: -2.9319732189178467
    3. '()
' → logprob: -6.556973457336426
    4. '_' → logprob: -8.056973457336426
    5. '()\' → logprob: -8.681973457336426
    6. '(
' → logprob: -10.056973457336426
    7. '()

' → logprob: -10.181973457336426
    8. '();' → logprob: -10.681973457336426
    9. ' ()' → logprob: -11.431973457336426
    10. '#' → logprob: -12.056973457336426

Token 207: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004764518700540066
    2. '<|end|>' → logprob: -6.004764556884766
    3. '
' → logprob: -7.004764556884766
    4. '#' → logprob: -7.004764556884766
    5. ')' → logprob: -9.129764556884766
    6. 'class' → logprob: -9.379764556884766
    7. '<|end|>' → logprob: -9.754764556884766
    8. ' def' → logprob: -11.004764556884766
    9. '\' → logprob: -11.004764556884766
    10. ' ' → logprob: -11.129764556884766

Token 208: ' pe' (ID: 1045)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.029186809435486794
    2. 'main' → logprob: -3.654186725616455
    3. ' solve' → logprob: -6.779186725616455
    4. 'solve' → logprob: -8.404187202453613
    5. ' MAIN' → logprob: -8.654187202453613
    6. ' run' → logprob: -8.779187202453613
    7. ' ' → logprob: -9.029187202453613
    8. 'MAIN' → logprob: -9.529187202453613
    9. ' m' → logprob: -9.654187202453613
    10. ' dp' → logprob: -9.966687202453613

Token 209: '(x' (ID: 4061)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.257673740386963
    2. 'r' → logprob: -1.757673740386963
    3. 'p' → logprob: -2.007673740386963
    4. 'ek' → logprob: -2.132673740386963
    5. 'ep' → logprob: -2.507673740386963
    6. 'nd' → logprob: -3.257673740386963
    7. 'k' → logprob: -3.507673740386963
    8. 'ak' → logprob: -3.882673740386963
    9. 'print' → logprob: -4.257673740386963
    10. 'P' → logprob: -4.632673740386963

Token 210: '):' (ID: 3127)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.46564388275146484
    2. '):' → logprob: -1.2156438827514648
    3. ',' → logprob: -3.340643882751465
    4. 'ek' → logprob: -4.340643882751465
    5. 'ak' → logprob: -5.215643882751465
    6. ':' → logprob: -5.340643882751465
    7. '):
' → logprob: -5.465643882751465
    8. 'nd' → logprob: -6.340643882751465
    9. '=' → logprob: -6.465643882751465
    10. 'x' → logprob: -6.965643882751465

Token 211: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.23531299829483032
    2. 'print' → logprob: -2.1103129386901855
    3. '   ' → logprob: -2.4853129386901855
    4. ' sys' → logprob: -5.6103129386901855
    5. '    ' → logprob: -7.6103129386901855
    6. 'import' → logprob: -7.8603129386901855
    7. ' return' → logprob: -8.485313415527344
    8. 'sys' → logprob: -8.610313415527344
    9. ' import' → logprob: -9.235313415527344
    10. ' ' → logprob: -10.110313415527344

Token 212: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.12317731231451035
    2. '(' → logprob: -2.8731772899627686
    3. '(f' → logprob: -3.1231772899627686
    4. '(re' → logprob: -4.248177528381348
    5. '(*' → logprob: -7.498177528381348
    6. '(str' → logprob: -8.123177528381348
    7. '(eval' → logprob: -9.623177528381348
    8. '((' → logprob: -10.373177528381348
    9. '(
' → logprob: -10.998177528381348
    10. '()' → logprob: -11.248177528381348

Token 213: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3185597062110901
    2. ',end' → logprob: -1.3185596466064453
    3. ')' → logprob: -5.318559646606445
    4. ' ,' → logprob: -8.943559646606445
    5. ',)' → logprob: -9.318559646606445
    6. ',en' → logprob: -9.693559646606445
    7. ',file' → logprob: -9.943559646606445
    8. ',f' → logprob: -11.568559646606445
    9. ',e' → logprob: -11.568559646606445
    10. ',p' → logprob: -12.443559646606445

Token 214: ' ;' (ID: 4605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 215: ' exit' (ID: 10654)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.794488251209259
    2. 'return' → logprob: -1.5444881916046143
    3. 'sys' → logprob: -1.5444881916046143
    4. 'import' → logprob: -3.2944881916046143
    5. 'exit' → logprob: -3.4194881916046143
    6. ' sys' → logprob: -3.9194881916046143
    7. ' return' → logprob: -4.169488430023193
    8. ' pass' → logprob: -5.169488430023193
    9. 'x' → logprob: -5.669488430023193
    10. ' ' → logprob: -6.794488430023193

Token 216: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.033805448561906815
    2. '(' → logprob: -3.4088053703308105
    3. '()
' → logprob: -9.033805847167969
    4. '();' → logprob: -11.408805847167969
    5. '()\' → logprob: -11.408805847167969
    6. '()

' → logprob: -11.908805847167969
    7. '()`' → logprob: -13.033805847167969
    8. '()<' → logprob: -13.533805847167969
    9. ' ()' → logprob: -13.658805847167969
    10. '()]' → logprob: -13.783805847167969

Token 217: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014364237431436777
    2. 'class' → logprob: -7.501436233520508
    3. '#' → logprob: -7.626436233520508
    4. 'd' → logprob: -8.626436233520508
    5. 'n' → logprob: -9.751436233520508
    6. '
' → logprob: -10.376436233520508
    7. '\' → logprob: -10.876436233520508
    8. '(' → logprob: -11.376436233520508
    9. ' ' → logprob: -11.501436233520508
    10. 'x' → logprob: -11.626436233520508

Token 218: ' YES' (ID: 32968)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.7797038555145264
    2. 'p' → logprob: -2.2797038555145264
    3. ' p' → logprob: -2.2797038555145264
    4. ' dp' → logprob: -2.6547038555145264
    5. ' pw' → logprob: -3.1547038555145264
    6. ' pe' → logprob: -3.1547038555145264
    7. ' yes' → logprob: -3.2797038555145264
    8. 'main' → logprob: -3.7797038555145264
    9. ' dbg' → logprob: -3.7797038555145264
    10. ' debug' → logprob: -3.9047038555145264

Token 219: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.209963900502771e-05
    2. '():
' → logprob: -9.625092506408691
    3. ' ():' → logprob: -10.875092506408691
    4. '()' → logprob: -11.875092506408691
    5. '():

' → logprob: -16.625091552734375
    6. '(' → logprob: -17.125091552734375
    7. '():
' → logprob: -18.125091552734375
    8. ' ()' → logprob: -18.250091552734375
    9. '();' → logprob: -19.000091552734375
    10. '()<<' → logprob: -20.625091552734375

Token 220: 'print' (ID: 1598)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3507448136806488
    2. 'print' → logprob: -1.9757448434829712
    3. ' y' → logprob: -2.4757447242736816
    4. 'y' → logprob: -2.9757447242736816
    5. ' print' → logprob: -3.8507447242736816
    6. ' ' → logprob: -8.22574520111084
    7. '	print' → logprob: -8.85074520111084
    8. 'n' → logprob: -9.10074520111084
    9. '	y' → logprob: -9.22574520111084
    10. '    ' → logprob: -9.72574520111084

Token 221: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.00026860725483857095
    2. '(' → logprob: -8.250268936157227
    3. '('' → logprob: -12.125268936157227
    4. '()' → logprob: -13.500268936157227
    5. ' ("' → logprob: -15.000268936157227
    6. '("""' → logprob: -16.125268936157227
    7. '("")' → logprob: -16.250268936157227
    8. '(
' → logprob: -17.125268936157227
    9. '(\"' → logprob: -17.250268936157227
    10. '(("' → logprob: -18.000268936157227

Token 222: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0001434690784662962
    2. 'YES' → logprob: -8.875143051147461
    3. ' Yes' → logprob: -13.500143051147461
    4. 'No' → logprob: -13.750143051147461
    5. '"' → logprob: -14.875143051147461
    6. 'Ye' → logprob: -15.000143051147461
    7. '")' → logprob: -15.000143051147461
    8. 'Y' → logprob: -16.75014305114746
    9. 'True' → logprob: -17.75014305114746
    10. '“Yes' → logprob: -17.75014305114746

Token 223: '");' (ID: 9835)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00019531534053385258
    2. '");' → logprob: -9.125195503234863
    3. '")
' → logprob: -9.375195503234863
    4. '"' → logprob: -14.125195503234863
    5. '")
' → logprob: -15.000195503234863
    6. ')' → logprob: -15.625195503234863
    7. '!")' → logprob: -15.750195503234863
    8. '")

' → logprob: -16.625194549560547
    9. ' ")' → logprob: -16.750194549560547
    10. ')")' → logprob: -16.875194549560547

Token 224: 'exit' (ID: 30264)
  Prédit: 'exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.02061055600643158
    2. ' exit' → logprob: -3.8956105709075928
    3. 'return' → logprob: -11.020610809326172
    4. '
' → logprob: -11.395610809326172
    5. 'def' → logprob: -11.395610809326172
    6. '	exit' → logprob: -11.520610809326172
    7. '   ' → logprob: -11.520610809326172
    8. 'import' → logprob: -12.520610809326172
    9. ' return' → logprob: -13.770610809326172
    10. '(exit' → logprob: -13.770610809326172

Token 225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002646735229063779
    2. '()
' → logprob: -8.250265121459961
    3. '(' → logprob: -13.750265121459961
    4. '()\' → logprob: -14.125265121459961
    5. '()

' → logprob: -14.500265121459961
    6. '()`' → logprob: -14.625265121459961
    7. '()"' → logprob: -15.625265121459961
    8. ' ()' → logprob: -16.00026512145996
    9. '()<' → logprob: -16.37526512145996
    10. '())' → logprob: -16.37526512145996

Token 226: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.7954958821064793e-05
    2. 'de' → logprob: -12.000018119812012
    3. 'd' → logprob: -12.375018119812012
    4. 'NO' → logprob: -12.375018119812012
    5. 'n' → logprob: -13.250018119812012
    6. 'N' → logprob: -14.750018119812012
    7. ' def' → logprob: -15.750018119812012
    8. 'ndef' → logprob: -15.750018119812012
    9. 'YES' → logprob: -16.000017166137695
    10. '\' → logprob: -16.125017166137695

Token 227: ' NO' (ID: 9319)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -0.0014066596049815416
    2. 'No' → logprob: -7.251406669616699
    3. 'n' → logprob: -7.501406669616699
    4. 'no' → logprob: -9.7514066696167
    5. ' NO' → logprob: -10.0014066696167
    6. 'N' → logprob: -10.2514066696167
    7. 'def' → logprob: -13.7514066696167
    8. 'YES' → logprob: -13.7514066696167
    9. ' n' → logprob: -14.1264066696167
    10. ' No' → logprob: -14.6264066696167

Token 228: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.1689596148207784e-05
    2. '()' → logprob: -10.000051498413086
    3. ' ():' → logprob: -12.125051498413086
    4. '():
' → logprob: -14.500051498413086
    5. '(' → logprob: -16.000051498413086
    6. '()>' → logprob: -16.375051498413086
    7. '();' → logprob: -17.250051498413086
    8. '()<' → logprob: -18.250051498413086
    9. ' ()' → logprob: -18.375051498413086
    10. '()*' → logprob: -19.250051498413086

Token 229: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.531315314830863e-06
    2. ' print' → logprob: -12.750003814697266
    3. '()' → logprob: -14.500003814697266
    4. '(print' → logprob: -17.000003814697266
    5. '#print' → logprob: -17.250003814697266
    6. 'println' → logprob: -17.375003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '_print' → logprob: -18.250003814697266
    9. '
' → logprob: -18.625003814697266
    10. '():' → logprob: -18.750003814697266

Token 230: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '('' → logprob: -15.625021934509277
    4. '(
' → logprob: -18.12502098083496
    5. '"' → logprob: -19.37502098083496
    6. ' ("' → logprob: -19.50002098083496
    7. '("""' → logprob: -19.50002098083496
    8. '("("' → logprob: -20.25002098083496
    9. '("")' → logprob: -21.00002098083496
    10. '(""' → logprob: -21.50002098083496

Token 231: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0024835076183080673
    2. '"No' → logprob: -6.002483367919922
    3. '("' → logprob: -12.502483367919922
    4. '"' → logprob: -12.752483367919922
    5. ' No' → logprob: -14.627483367919922
    6. '(No' → logprob: -15.127483367919922
    7. 'NO' → logprob: -16.377483367919922
    8. '“No' → logprob: -16.627483367919922
    9. '")' → logprob: -16.627483367919922
    10. '```' → logprob: -17.377483367919922

Token 232: '");' (ID: 9835)
  Prédit: '");'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '");' → logprob: -0.011088967323303223
    2. '")' → logprob: -4.511088848114014
    3. '()' → logprob: -10.261089324951172
    4. '();' → logprob: -12.636089324951172
    5. '")
' → logprob: -13.886089324951172
    6. ')' → logprob: -14.261089324951172
    7. ');' → logprob: -14.511089324951172
    8. '");
' → logprob: -15.261089324951172
    9. '"' → logprob: -15.511089324951172
    10. ' ");' → logprob: -16.136089324951172

Token 233: 'exit' (ID: 30264)
  Prédit: 'exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -3.173704271830502e-06
    2. ' exit' → logprob: -12.75000286102295
    3. '(exit' → logprob: -15.87500286102295
    4. '
' → logprob: -17.375003814697266
    5. 'def' → logprob: -19.125003814697266
    6. '	exit' → logprob: -19.250003814697266
    7. '```' → logprob: -20.000003814697266
    8. '.exit' → logprob: -20.375003814697266
    9. ';' → logprob: -20.500003814697266
    10. 'EXIT' → logprob: -21.250003814697266

Token 234: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -9.729906196298543e-06
    2. '()
' → logprob: -12.000009536743164
    3. '()"' → logprob: -13.750009536743164
    4. '()]' → logprob: -14.125009536743164
    5. '())' → logprob: -14.375009536743164
    6. '()`' → logprob: -15.125009536743164
    7. '(' → logprob: -15.500009536743164
    8. '()\' → logprob: -15.500009536743164
    9. '()<' → logprob: -16.125009536743164
    10. '()">' → logprob: -16.500009536743164

Token 235: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001349403290078044
    2. '#' → logprob: -7.626349449157715
    3. 'class' → logprob: -8.126349449157715
    4. 'n' → logprob: -8.626349449157715
    5. 'd' → logprob: -8.626349449157715
    6. 'from' → logprob: -9.626349449157715
    7. 'for' → logprob: -10.626349449157715
    8. 'de' → logprob: -11.001349449157715
    9. ' def' → logprob: -11.501349449157715
    10. 'a' → logprob: -11.501349449157715

Token 236: ' DD' (ID: 52933)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3611188232898712
    2. 'main' → logprob: -1.8611187934875488
    3. ' solve' → logprob: -3.486118793487549
    4. ' yes' → logprob: -3.611118793487549
    5. 'YES' → logprob: -3.986118793487549
    6. ' YES' → logprob: -4.736118793487549
    7. 'Yes' → logprob: -4.986118793487549
    8. 'solve' → logprob: -5.111118793487549
    9. ' gcd' → logprob: -5.111118793487549
    10. 'yes' → logprob: -5.611118793487549

Token 237: '(x' (ID: 4061)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.16618923842906952
    2. '(*' → logprob: -2.041189193725586
    3. '():
' → logprob: -4.291189193725586
    4. '(' → logprob: -5.666189193725586
    5. '(x' → logprob: -6.291189193725586
    6. '(arg' → logprob: -7.041189193725586
    7. '(a' → logprob: -7.166189193725586
    8. '()' → logprob: -7.416189193725586
    9. '(**' → logprob: -7.916189193725586
    10. 'ef' → logprob: -8.416189193725586

Token 238: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008228256367146969
    2. '):
' → logprob: -5.383228302001953
    3. ')' → logprob: -6.758228302001953
    4. ' ):' → logprob: -6.758228302001953
    5. ',' → logprob: -7.383228302001953
    6. ',x' → logprob: -8.133228302001953
    7. 'print' → logprob: -10.258228302001953
    8. ',d' → logprob: -10.258228302001953
    9. ':' → logprob: -10.383228302001953
    10. ',y' → logprob: -10.508228302001953

Token 239: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9211747646331787
    2. 'print' → logprob: -1.0461747646331787
    3. ' print' → logprob: -2.1711747646331787
    4. ' return' → logprob: -3.2961747646331787
    5. 'return' → logprob: -3.4211747646331787
    6. 'from' → logprob: -3.6711747646331787
    7. ' from' → logprob: -4.421175003051758
    8. 'import' → logprob: -4.546175003051758
    9. 'd' → logprob: -4.796175003051758
    10. ' for' → logprob: -5.671175003051758

Token 240: ' dd' (ID: 18636)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -1.1020368337631226
    2. 'default' → logprob: -1.1020368337631226
    3. 'dict' → logprob: -1.8520368337631226
    4. 'x' → logprob: -2.727036952972412
    5. '{' → logprob: -3.102036952972412
    6. ' defaultdict' → logprob: -3.352036952972412
    7. '{x' → logprob: -3.852036952972412
    8. ' dict' → logprob: -5.602036952972412
    9. ' dd' → logprob: -6.102036952972412
    10. '{}' → logprob: -6.852036952972412

Token 241: '(x' (ID: 4061)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.024475375190377235
    2. '(list' → logprob: -4.024475574493408
    3. '(lambda' → logprob: -5.149475574493408
    4. '(' → logprob: -8.14947509765625
    5. '(<' → logprob: -9.39947509765625
    6. 'int' → logprob: -10.02447509765625
    7. '(dict' → logprob: -10.64947509765625
    8. '(float' → logprob: -10.64947509765625
    9. '(bool' → logprob: -11.64947509765625
    10. '[int' → logprob: -12.02447509765625

Token 242: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002820920431986451
    2. 'int' → logprob: -6.00282096862793
    3. '(int' → logprob: -9.25282096862793
    4. 'list' → logprob: -9.37782096862793
    5. ',int' → logprob: -9.37782096862793
    6. ')`' → logprob: -10.37782096862793
    7. '))' → logprob: -10.50282096862793
    8. '<int' → logprob: -12.25282096862793
    9. ');' → logprob: -12.62782096862793
    10. '=int' → logprob: -13.37782096862793

Token 243: 'def' (ID: 1314)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.6390410661697388
    2. ')' → logprob: -1.2640410661697388
    3. '()' → logprob: -2.014040946960449
    4. '(lambda' → logprob: -3.764040946960449
    5. 'def' → logprob: -4.764040946960449
    6. 'int' → logprob: -4.889040946960449
    7. '(list' → logprob: -5.639040946960449
    8. '(' → logprob: -5.639040946960449
    9. '())' → logprob: -6.264040946960449
    10. 'list' → logprob: -6.514040946960449

Token 244: ' inv' (ID: 1827)
  Prédit: 'ef'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ef' → logprob: -0.7985713481903076
    2. 'lambda' → logprob: -2.2985713481903076
    3. 'q' → logprob: -2.4235713481903076
    4. 'dq' → logprob: -2.7985713481903076
    5. ' lambda' → logprob: -2.9235713481903076
    6. 'd' → logprob: -3.1735713481903076
    7. 'list' → logprob: -3.6735713481903076
    8. 'default' → logprob: -3.6735713481903076
    9. 'int' → logprob: -3.6735713481903076
    10. 'ict' → logprob: -3.7985713481903076

Token 245: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.24330851435661316
    2. 'mod' → logprob: -2.1183085441589355
    3. '(a' → logprob: -3.4933085441589355
    4. 'erse' → logprob: -3.6183085441589355
    5. '_mod' → logprob: -4.1183085441589355
    6. '(n' → logprob: -4.6183085441589355
    7. 'ert' → logprob: -5.8683085441589355
    8. 'ersion' → logprob: -6.2433085441589355
    9. 'al' → logprob: -6.9933085441589355
    10. 'a' → logprob: -7.1183085441589355

Token 246: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001322146039456129
    2. ')' → logprob: -6.751322269439697
    3. ' ):' → logprob: -9.626321792602539
    4. ':' → logprob: -10.501321792602539
    5. ',' → logprob: -10.501321792602539
    6. '):
' → logprob: -10.626321792602539
    7. '(x' → logprob: -13.501321792602539
    8. '=' → logprob: -13.751321792602539
    9. ')：' → logprob: -14.126321792602539
    10. '(' → logprob: -14.876321792602539

Token 247: ' return' (ID: 622)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.016908418387174606
    2. ' pow' → logprob: -4.141908645629883
    3. 'return' → logprob: -7.641908645629883
    4. '1' → logprob: -8.141908645629883
    5. '   ' → logprob: -10.391908645629883
    6. '(pow' → logprob: -10.391908645629883
    7. 'x' → logprob: -10.891908645629883
    8. ' return' → logprob: -11.516908645629883
    9. ' ' → logprob: -11.766908645629883
    10. ' x' → logprob: -14.016908645629883

Token 248: ' pow' (ID: 9779)
  Prédit: 'pow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pow' → logprob: -0.09577692300081253
    2. '1' → logprob: -2.4707770347595215
    3. 'x' → logprob: -5.0957770347595215
    4. ' pow' → logprob: -8.220776557922363
    5. '(pow' → logprob: -8.220776557922363
    6. 'int' → logprob: -9.595776557922363
    7. '[' → logprob: -10.720776557922363
    8. ' ' → logprob: -11.220776557922363
    9. '(' → logprob: -11.220776557922363
    10. 'MOD' → logprob: -12.095776557922363

Token 249: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2519512474536896
    2. '(x' → logprob: -1.5019512176513672
    3. '(
' → logprob: -10.876951217651367
    4. '<|end|>' → logprob: -13.501951217651367
    5. '(pow' → logprob: -15.001951217651367
    6. '(

' → logprob: -15.001951217651367
    7. 'x' → logprob: -15.251951217651367
    8. ',' → logprob: -15.626951217651367
    9. '(end' → logprob: -16.626951217651367
    10. '```' → logprob: -16.626951217651367

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11317078769207001
    2. '(' → logprob: -2.363170862197876
    3. ',-' → logprob: -5.238170623779297
    4. '(M' → logprob: -6.488170623779297
    5. 'MOD' → logprob: -6.488170623779297
    6. '(-' → logprob: -6.613170623779297
    7. ',M' → logprob: -7.238170623779297
    8. '(x' → logprob: -7.238170623779297
    9. ' ,' → logprob: -7.738170623779297
    10. ')' → logprob: -7.863170623779297

Token 251: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.023441478610038757
    2. '-' → logprob: -3.7734415531158447
    3. ' MOD' → logprob: -8.648441314697266
    4. ' -' → logprob: -11.523441314697266
    5. '_MOD' → logprob: -12.398441314697266
    6. '.MOD' → logprob: -13.023441314697266
    7. '```' → logprob: -13.398441314697266
    8. '-M' → logprob: -14.398441314697266
    9. ' ' → logprob: -14.648441314697266
    10. '
' → logprob: -14.773441314697266

Token 252: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.7610454708337784e-05
    2. ' -' → logprob: -10.500027656555176
    3. '()-' → logprob: -17.12502670288086
    4. '−' → logprob: -17.62502670288086
    5. '-
' → logprob: -17.87502670288086
    6. 'MOD' → logprob: -18.12502670288086
    7. ')' → logprob: -18.25002670288086
    8. '```' → logprob: -18.50002670288086
    9. '_MINUS' → logprob: -18.75002670288086
    10. '-M' → logprob: -18.87502670288086

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '
' → logprob: -14.937501907348633
    3. ' ' → logprob: -15.625001907348633
    4. '۲' → logprob: -15.625001907348633
    5. '```' → logprob: -15.750001907348633
    6. '

' → logprob: -16.125001907348633
    7. '-' → logprob: -16.812501907348633
    8. '٢' → logprob: -16.812501907348633
    9. '₂' → logprob: -17.125001907348633
    10. '２' → logprob: -17.125001907348633

Token 254: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10079487413167953
    2. ',' → logprob: -2.350794792175293
    3. ' )' → logprob: -8.100794792175293
    4. ' ,' → logprob: -8.225794792175293
    5. '}' → logprob: -11.850794792175293
    6. ')%' → logprob: -13.850794792175293
    7. ',None' → logprob: -13.975794792175293
    8. ',)' → logprob: -14.100794792175293
    9. ' ' → logprob: -14.225794792175293
    10. ')
' → logprob: -14.225794792175293

Token 255: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -8.180258191714529e-06
    2. ' MOD' → logprob: -11.750008583068848
    3. ')' → logprob: -15.500008583068848
    4. '_MOD' → logprob: -17.87500762939453
    5. '.MOD' → logprob: -19.00000762939453
    6. '```' → logprob: -20.00000762939453
    7. '   ' → logprob: -20.25000762939453
    8. 'MO' → logprob: -20.62500762939453
    9. 'MD' → logprob: -21.75000762939453
    10. ' ' → logprob: -22.00000762939453

Token 256: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.625000953674316
    3. ')
' → logprob: -14.750000953674316
    4. ')`' → logprob: -15.750000953674316
    5. '))' → logprob: -18.125001907348633
    6. ')

' → logprob: -18.125001907348633
    7. '),' → logprob: -18.125001907348633
    8. ')}' → logprob: -18.625001907348633
    9. ')return' → logprob: -18.875001907348633
    10. ')**' → logprob: -19.000001907348633

Token 257: '_k' (ID: 11637)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3639666736125946
    2. '(' → logprob: -2.113966703414917
    3. ')' → logprob: -2.738966703414917
    4. ' ' → logprob: -3.488966703414917
    5. '=' → logprob: -3.863966703414917
    6. '#' → logprob: -4.488966464996338
    7. '
' → logprob: -4.738966464996338
    8. ',' → logprob: -4.863966464996338
    9. '\n' → logprob: -4.863966464996338
    10. ':' → logprob: -5.363966464996338

Token 258: 'j' (ID: 73)
  Prédit: 'eys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eys' → logprob: -0.5531250834465027
    2. 'ey' → logprob: -1.4281251430511475
    3. '=' → logprob: -2.1781251430511475
    4. ' =' → logprob: -3.3031251430511475
    5. 'e' → logprob: -4.553124904632568
    6. 's' → logprob: -5.303124904632568
    7. 'EY' → logprob: -5.678124904632568
    8. 'v' → logprob: -5.928124904632568
    9. '=[]' → logprob: -6.303124904632568
    10. 'ernel' → logprob: -6.428124904632568

Token 259: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19718778133392334
    2. '=[]' → logprob: -2.072187900543213
    3. '={}' → logprob: -3.822187900543213
    4. ' =' → logprob: -4.197187900543213
    5. '=[' → logprob: -6.197187900543213
    6. 'w' → logprob: -6.822187900543213
    7. 's' → logprob: -7.072187900543213
    8. '_=' → logprob: -7.197187900543213
    9. '=[]
' → logprob: -7.447187900543213
    10. '=None' → logprob: -7.447187900543213

Token 260: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14099310338497162
    2. ']' → logprob: -2.765993118286133
    3. '1' → logprob: -3.140993118286133
    4. '-' → logprob: -4.890993118286133
    5. 'None' → logprob: -5.765993118286133
    6. '[]' → logprob: -6.015993118286133
    7. '()]' → logprob: -6.015993118286133
    8. 'i' → logprob: -6.640993118286133
    9. '(' → logprob: -6.765993118286133
    10. '100' → logprob: -6.890993118286133

Token 261: ']
' (ID: 1592)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03529481962323189
    2. ']' → logprob: -3.535294771194458
    3. '0' → logprob: -6.410295009613037
    4. ',
' → logprob: -7.035295009613037
    5. '2' → logprob: -7.160295009613037
    6. ' ,' → logprob: -7.910295009613037
    7. '7' → logprob: -7.910295009613037
    8. '6' → logprob: -8.160294532775879
    9. '5' → logprob: -8.535294532775879
    10. ',-' → logprob: -8.660294532775879

Token 262: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48696914315223694
    2. '_k' → logprob: -1.8619691133499146
    3. '_' → logprob: -2.111969232559204
    4. ' for' → logprob: -3.236969232559204
    5. 'def' → logprob: -3.361969232559204
    6. '0' → logprob: -4.236968994140625
    7. 'k' → logprob: -5.361968994140625
    8. '*' → logprob: -5.861968994140625
    9. ']' → logprob: -6.236968994140625
    10. ',' → logprob: -6.611968994140625

Token 263: ' ka' (ID: 1908)
  Prédit: ' kj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' kj' → logprob: -1.4447373151779175
    2. ' k' → logprob: -1.6947373151779175
    3. 'pow' → logprob: -2.194737434387207
    4. 'n' → logprob: -2.569737434387207
    5. ' pow' → logprob: -3.069737434387207
    6. 'k' → logprob: -3.444737434387207
    7. ' fact' → logprob: -3.569737434387207
    8. ' mul' → logprob: -3.694737434387207
    9. '_k' → logprob: -3.944737434387207
    10. 'mul' → logprob: -4.194737434387207

Token 264: 'ijo' (ID: 11585)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.6540935039520264
    2. 'gi' → logprob: -1.6540935039520264
    3. 'g' → logprob: -1.9040935039520264
    4. 'ge' → logprob: -2.1540935039520264
    5. 'ji' → logprob: -2.1540935039520264
    6. 'i' → logprob: -2.6540935039520264
    7. 'j' → logprob: -3.0290935039520264
    8. 'wa' → logprob: -3.7790935039520264
    9. 'wai' → logprob: -4.2790937423706055
    10. 'n' → logprob: -4.6540937423706055

Token 265: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.007245603017508984
    2. '(' → logprob: -5.0072455406188965
    3. '(k' → logprob: -7.7572455406188965
    4. '(x' → logprob: -9.632246017456055
    5. 'n' → logprob: -11.632246017456055
    6. '(N' → logprob: -11.757246017456055
    7. '(i' → logprob: -12.382246017456055
    8. '(_' → logprob: -12.382246017456055
    9. '(
' → logprob: -12.507246017456055
    10. 'def' → logprob: -13.132246017456055

Token 266: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028777492698282003
    2. '):
' → logprob: -6.502877712249756
    3. ')' → logprob: -6.752877712249756
    4. ',k' → logprob: -9.627878189086914
    5. ' ):' → logprob: -10.377878189086914
    6. '):
' → logprob: -10.377878189086914
    7. '(n' → logprob: -10.877878189086914
    8. ',' → logprob: -11.002878189086914
    9. '=' → logprob: -11.377878189086914
    10. ':' → logprob: -12.127878189086914

Token 267: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5691675543785095
    2. ' if' → logprob: -1.0691676139831543
    3. '_k' → logprob: -2.9441676139831543
    4. ' _' → logprob: -4.194167613983154
    5. ' res' → logprob: -5.194167613983154
    6. ' for' → logprob: -5.194167613983154
    7. ' while' → logprob: -5.194167613983154
    8. ' k' → logprob: -5.944167613983154
    9. 'if' → logprob: -7.194167613983154
    10. ' ' → logprob: -7.319167613983154

Token 268: ' while' (ID: 2049)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.583330512046814
    2. '_k' → logprob: -1.458330512046814
    3. 'while' (adapté à ' while') → logprob: -2.3333306312561035
    4. 'for' → logprob: -2.5833306312561035
    5. ' if' → logprob: -4.3333306312561035
    6. 'res' → logprob: -4.7083306312561035
    7. ' while' → logprob: -4.9583306312561035
    8. 'k' → logprob: -5.8333306312561035
    9. ' res' → logprob: -6.7083306312561035
    10. ' for' → logprob: -7.0833306312561035

Token 269: ' len' (ID: 4631)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.12187421321868896
    2. ' len' → logprob: -2.9968743324279785
    3. 'len' → logprob: -3.1218743324279785
    4. ' _' → logprob: -4.6218743324279785
    5. '_n' → logprob: -4.9968743324279785
    6. '_len' → logprob: -5.8718743324279785
    7. ' n' → logprob: -7.9968743324279785
    8. '_' → logprob: -8.12187385559082
    9. '(len' → logprob: -8.37187385559082
    10. '_K' → logprob: -8.62187385559082

Token 270: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.00028946425300091505
    2. '_k' → logprob: -8.250289916992188
    3. '(' → logprob: -10.500289916992188
    4. '(k' → logprob: -15.250289916992188
    5. '(
' → logprob: -15.625289916992188
    6. '_K' → logprob: -17.250289916992188
    7. ' (_' → logprob: -17.375289916992188
    8. ' _' → logprob: -17.375289916992188
    9. '(K' → logprob: -17.625289916992188
    10. '_' → logprob: -18.000289916992188

Token 271: 'kj' (ID: 38076)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -6.392202976712724e-06
    2. '(_' → logprob: -13.000006675720215
    3. ' _' → logprob: -13.125006675720215
    4. '_j' → logprob: -13.250006675720215
    5. '
' → logprob: -16.3750057220459
    6. '(k' → logprob: -16.6250057220459
    7. 'kj' → logprob: -18.1250057220459
    8. '[_' → logprob: -18.3750057220459
    9. '

' → logprob: -18.5000057220459
    10. ' ' → logprob: -18.6250057220459

Token 272: ')<=' (ID: 176862)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.11750572174787521
    2. ')<=' → logprob: -2.2425057888031006
    3. ']<=' → logprob: -5.4925055503845215
    4. ')' → logprob: -8.74250602722168
    5. ' <=' → logprob: -8.86750602722168
    6. ')<' → logprob: -9.24250602722168
    7. '<' → logprob: -9.36750602722168
    8. '```' → logprob: -10.24250602722168
    9. '<n' → logprob: -10.99250602722168
    10. '<len' → logprob: -11.24250602722168

Token 273: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0052360063418745995
    2. ' n' → logprob: -5.2552361488342285
    3. '	n' → logprob: -13.13023567199707
    4. ')n' → logprob: -15.50523567199707
    5. '_n' → logprob: -18.25523567199707
    6. '[n' → logprob: -18.88023567199707
    7. '(n' → logprob: -19.38023567199707
    8. ',n' → logprob: -19.75523567199707
    9. '*n' → logprob: -19.88023567199707
    10. '?n' → logprob: -20.00523567199707

Token 274: ':_' (ID: 54242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05719210207462311
    2. ':
' → logprob: -2.932192087173462
    3. '_k' → logprob: -6.432192325592041
    4. ':_' → logprob: -7.807192325592041
    5. '   ' → logprob: -9.057191848754883
    6. ' and' → logprob: -9.182191848754883
    7. ':k' → logprob: -10.182191848754883
    8. '[' → logprob: -12.182191848754883
    9. ' :' → logprob: -12.307191848754883
    10. ' _' → logprob: -12.432191848754883

Token 275: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.018199576064944267
    2. '_k' → logprob: -4.018199443817139
    3. '_j' → logprob: -10.768199920654297
    4. 'k' → logprob: -11.518199920654297
    5. '(k' → logprob: -12.268199920654297
    6. ' kj' → logprob: -12.768199920654297
    7. 'kja' → logprob: -13.018199920654297
    8. '   ' → logprob: -13.268199920654297
    9. '-k' → logprob: -13.893199920654297
    10. '```' → logprob: -13.893199920654297

Token 276: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.145118848304264e-05
    2. '.' → logprob: -10.250051498413086
    3. 'append' → logprob: -11.750051498413086
    4. '.app' → logprob: -12.250051498413086
    5. '.extend' → logprob: -13.750051498413086
    6. ' .' → logprob: -13.875051498413086
    7. '.ap' → logprob: -14.500051498413086
    8. '[-' → logprob: -15.375051498413086
    9. '
' → logprob: -15.500051498413086
    10. '+=' → logprob: -16.375051498413086

Token 277: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.0001601539261173457
    2. '(' → logprob: -9.500160217285156
    3. '((_' → logprob: -9.625160217285156
    4. '_' → logprob: -11.000160217285156
    5. '_k' → logprob: -13.250160217285156
    6. '((' → logprob: -14.625160217285156
    7. '_n' → logprob: -16.000160217285156
    8. '(k' → logprob: -17.125160217285156
    9. '(len' → logprob: -17.125160217285156
    10. '(
' → logprob: -17.500160217285156

Token 278: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.062102798372507095
    2. '_k' → logprob: -2.812102794647217
    3. '_j' → logprob: -9.062103271484375
    4. 'k' → logprob: -11.187103271484375
    5. '-k' → logprob: -13.312103271484375
    6. '
' → logprob: -14.062103271484375
    7. ' kj' → logprob: -14.187103271484375
    8. '[-' → logprob: -14.562103271484375
    9. '(k' → logprob: -14.937103271484375
    10. 'len' → logprob: -15.937103271484375

Token 279: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. ' [-' → logprob: -16.375
    3. '   ' → logprob: -17.25
    4. '[' → logprob: -18.0
    5. '-' → logprob: -18.125
    6. '
' → logprob: -18.5
    7. '[
' → logprob: -18.875
    8. '][-' → logprob: -19.75
    9. '	' → logprob: -20.375
    10. '```' → logprob: -20.375

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '-' → logprob: -12.75000286102295
    3. '-k' → logprob: -16.375003814697266
    4. ' -' → logprob: -17.000003814697266
    5. '```' → logprob: -17.000003814697266
    6. ' ' → logprob: -17.500003814697266
    7. '
' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '１' → logprob: -19.375003814697266
    10. 'k' → logprob: -20.000003814697266

Token 281: ']*' (ID: 18579)
  Prédit: '*n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*n' → logprob: -0.13673105835914612
    2. '*' → logprob: -2.1367311477661133
    3. '*k' → logprob: -5.261731147766113
    4. '*x' → logprob: -6.261731147766113
    5. '*i' → logprob: -6.886731147766113
    6. '**' → logprob: -7.511731147766113
    7. '*q' → logprob: -8.136731147766113
    8. ']*' → logprob: -8.511731147766113
    9. '*
' → logprob: -8.636731147766113
    10. '*j' → logprob: -8.636731147766113

Token 282: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.11603433638811111
    2. '_k' → logprob: -2.2410342693328857
    3. '_len' → logprob: -6.366034507751465
    4. '_' → logprob: -7.741034507751465
    5. ' len' → logprob: -7.741034507751465
    6. '(len' → logprob: -7.991034507751465
    7. '_n' → logprob: -9.241034507751465
    8. 'n' → logprob: -9.866034507751465
    9. 'kj' → logprob: -9.991034507751465
    10. '(_' → logprob: -10.241034507751465

Token 283: '(_' (ID: 4963)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.20157483220100403
    2. '(_' → logprob: -1.7015748023986816
    3. '_j' → logprob: -9.57657527923584
    4. '(' → logprob: -10.32657527923584
    5. ' _' → logprob: -10.45157527923584
    6. '(k' → logprob: -11.07657527923584
    7. '_' → logprob: -12.82657527923584
    8. '[_' → logprob: -12.95157527923584
    9. '
' → logprob: -13.07657527923584
    10. '(
' → logprob: -13.20157527923584

Token 284: 'kj' (ID: 38076)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.0023624442983418703
    2. '(_' → logprob: -6.127362251281738
    3. '_j' → logprob: -8.752362251281738
    4. ' _' → logprob: -12.252362251281738
    5. '(k' → logprob: -12.627362251281738
    6. '(' → logprob: -12.627362251281738
    7. '_' → logprob: -13.127362251281738
    8. '
' → logprob: -13.127362251281738
    9. ')' → logprob: -14.377362251281738
    10. '[_' → logprob: -14.502362251281738

Token 285: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14845676720142365
    2. '))' → logprob: -2.2734568119049072
    3. ')%' → logprob: -3.5234568119049072
    4. ' )' → logprob: -6.023456573486328
    5. '())' → logprob: -6.023456573486328
    6. '%)' → logprob: -8.773456573486328
    7. '()%' → logprob: -8.773456573486328
    8. '%' → logprob: -9.523456573486328
    9. ')
' → logprob: -9.898456573486328
    10. ' %' → logprob: -10.148456573486328

Token 286: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.054500666621607e-06
    2. ' MOD' → logprob: -12.75000286102295
    3. '100' → logprob: -16.875003814697266
    4. '_MOD' → logprob: -17.250003814697266
    5. '(' → logprob: -17.750003814697266
    6. '
' → logprob: -18.500003814697266
    7. '(M' → logprob: -19.250003814697266
    8. '998' → logprob: -20.250003814697266
    9. '.MOD' → logprob: -20.500003814697266
    10. '10' → logprob: -21.000003814697266

Token 287: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.466968650580384e-05
    2. ')
' → logprob: -10.625054359436035
    3. ' )' → logprob: -11.125054359436035
    4. '+)' → logprob: -12.375054359436035
    5. '))' → logprob: -12.500054359436035
    6. '*)' → logprob: -13.500054359436035
    7. ')

' → logprob: -13.875054359436035
    8. '())' → logprob: -14.000054359436035
    9. '_)' → logprob: -14.000054359436035
    10. '+' → logprob: -14.375054359436035

Token 288: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4041943848133087
    2. ' ' → logprob: -2.5291943550109863
    3. '+' → logprob: -2.7791943550109863
    4. ' return' → logprob: -3.0291943550109863
    5. 'return' → logprob: -3.4041943550109863
    6. ')' → logprob: -3.5291943550109863
    7. '<|end|>' → logprob: -3.6541943550109863
    8. ':return' → logprob: -4.029194355010986
    9. '	return' → logprob: -5.029194355010986
    10. '[' → logprob: -5.404194355010986

Token 289: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.359565407037735
    2. '   ' → logprob: -1.3595653772354126
    3. ' return' → logprob: -3.109565496444702
    4. ' ' → logprob: -9.109565734863281
    5. '_return' → logprob: -9.109565734863281
    6. 'def' → logprob: -9.234565734863281
    7. '	return' → logprob: -9.234565734863281
    8. 'for' → logprob: -10.734565734863281
    9. '[' → logprob: -10.984565734863281
    10. 'k' → logprob: -11.109565734863281

Token 290: ' _' (ID: 1175)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -1.1994775377388578e-05
    2. '_j' → logprob: -11.375012397766113
    3. ' _' → logprob: -14.750012397766113
    4. ' ' → logprob: -17.625011444091797
    5. '(_' → logprob: -17.750011444091797
    6. '_n' → logprob: -17.875011444091797
    7. '
' → logprob: -18.000011444091797
    8. 'kj' → logprob: -18.000011444091797
    9. '(k' → logprob: -18.500011444091797
    10. '   ' → logprob: -18.750011444091797

Token 291: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.1269427090883255
    2. '_k' → logprob: -2.1269426345825195
    3. '_j' → logprob: -11.62694263458252
    4. 'k' → logprob: -12.25194263458252
    5. ' kj' → logprob: -15.00194263458252
    6. '[k' → logprob: -15.50194263458252
    7. '(k' → logprob: -15.62694263458252
    8. '-k' → logprob: -16.001943588256836
    9. 'kja' → logprob: -16.876943588256836
    10. '.k' → logprob: -18.626943588256836

Token 292: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.146429223008454e-05
    2. '[' → logprob: -9.75006103515625
    3. '[-' → logprob: -12.75006103515625
    4. '[len' → logprob: -15.75006103515625
    5. '[
' → logprob: -16.87506103515625
    6. ' [' → logprob: -17.50006103515625
    7. '[N' → logprob: -17.62506103515625
    8. 'n' → logprob: -17.87506103515625
    9. '[m' → logprob: -18.00006103515625
    10. '[k' → logprob: -18.12506103515625

Token 293: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00015574338613077998
    2. ' ]' → logprob: -9.500155448913574
    3. ']*' → logprob: -10.125155448913574
    4. ']
' → logprob: -10.875155448913574
    5. ']%' → logprob: -11.875155448913574
    6. '<|end|>' → logprob: -12.625155448913574
    7. ')' → logprob: -12.875155448913574
    8. '*' → logprob: -13.000155448913574
    9. ']+' → logprob: -13.375155448913574
    10. '%' → logprob: -14.000155448913574

Token 294: '_g' (ID: 5439)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0931156873703003
    2. ')' → logprob: -1.0931156873703003
    3. '[' → logprob: -1.5931156873703003
    4. '_' → logprob: -2.84311580657959
    5. '=' → logprob: -4.34311580657959
    6. '<|end|>' → logprob: -4.46811580657959
    7. ' ' → logprob: -4.84311580657959
    8. '#' → logprob: -5.09311580657959
    9. ':' → logprob: -5.21811580657959
    10. ',' → logprob: -5.34311580657959

Token 295: 'kj' (ID: 38076)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=[]' → logprob: -1.1069679260253906
    2. '=' → logprob: -1.2319679260253906
    3. '=[' → logprob: -1.6069679260253906
    4. 'cd' → logprob: -2.2319679260253906
    5. '_k' → logprob: -4.606967926025391
    6. '_cd' → logprob: -4.731967926025391
    7. '_cnt' → logprob: -5.481967926025391
    8. 'k' → logprob: -5.481967926025391
    9. 'c' → logprob: -5.856967926025391
    10. '_' → logprob: -5.981967926025391

Token 296: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.014797027222812176
    2. '=' → logprob: -4.514797210693359
    3. '=[]' → logprob: -5.889797210693359
    4. '[' → logprob: -7.014797210693359
    5. ' =' → logprob: -10.13979721069336
    6. '=None' → logprob: -11.38979721069336
    7. '=_' → logprob: -12.01479721069336
    8. '=lambda' → logprob: -12.38979721069336
    9. '={}' → logprob: -12.88979721069336
    10. ' =[' → logprob: -12.88979721069336

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -11.875007629394531
    3. ']' → logprob: -15.250007629394531
    4. '0' → logprob: -15.625007629394531
    5. '(' → logprob: -16.75000762939453
    6. '2' → logprob: -17.37500762939453
    7. '```' → logprob: -17.50000762939453
    8. '
' → logprob: -17.87500762939453
    9. '-' → logprob: -18.12500762939453
    10. '

' → logprob: -18.81250762939453

Token 298: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.049301162362098694
    2. ']
' → logprob: -3.0493011474609375
    3. ',' → logprob: -7.2993011474609375
    4. ']

' → logprob: -10.799301147460938
    5. ']
' → logprob: -11.799301147460938
    6. ',
' → logprob: -12.674301147460938
    7. ' ]' → logprob: -13.049301147460938
    8. '1' → logprob: -13.674301147460938
    9. ' ]
' → logprob: -14.674301147460938
    10. '0' → logprob: -15.049301147460938

Token 299: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.896309739408025e-07
    2. '_def' → logprob: -14.125000953674316
    3. '_g' → logprob: -18.375
    4. '
' → logprob: -18.5
    5. 'd' → logprob: -18.625
    6. '_k' → logprob: -19.5
    7. '_' → logprob: -19.5
    8. ' def' → logprob: -19.75
    9. '	def' → logprob: -20.5
    10. '_d' → logprob: -20.75

Token 300: ' gy' (ID: 11045)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.03394027799367905
    2. 'gin' → logprob: -4.158940315246582
    3. 'gy' → logprob: -4.533940315246582
    4. 'gen' → logprob: -5.408940315246582
    5. 'ge' → logprob: -6.908940315246582
    6. 'G' → logprob: -7.658940315246582
    7. 'gj' → logprob: -7.783940315246582
    8. 'gf' → logprob: -8.783940315246582
    9. '_g' → logprob: -9.783940315246582
    10. 'gek' → logprob: -9.908940315246582

Token 301: 'aku' (ID: 9385)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.3818915784358978
    2. 'k' → logprob: -2.0068914890289307
    3. '_k' → logprob: -2.8818914890289307
    4. '```' → logprob: -3.0068914890289307
    5. 'ou' → logprob: -3.2568914890289307
    6. 'oji' → logprob: -4.75689172744751
    7. 'aku' → logprob: -4.75689172744751
    8. 'akus' → logprob: -5.25689172744751
    9. '_' → logprob: -5.75689172744751
    10. '``' → logprob: -6.25689172744751

Token 302: '_' (ID: 62)
  Prédit: 'ka'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.8003456592559814
    2. '(n' → logprob: -1.3003456592559814
    3. '_k' → logprob: -1.5503456592559814
    4. 'k' → logprob: -3.1753456592559814
    5. '_' → logprob: -4.800345420837402
    6. 'def' → logprob: -5.425345420837402
    7. 'kj' → logprob: -6.675345420837402
    8. 'jo' → logprob: -6.800345420837402
    9. 'ke' → logprob: -6.800345420837402
    10. '```' → logprob: -6.925345420837402

Token 303: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.0025555691681802273
    2. 'ke' → logprob: -7.2525553703308105
    3. 'kaj' → logprob: -7.5025553703308105
    4. 'ko' → logprob: -8.002555847167969
    5. 'k' → logprob: -8.627555847167969
    6. 'kj' → logprob: -8.627555847167969
    7. 'ga' → logprob: -8.627555847167969
    8. '(n' → logprob: -9.127555847167969
    9. 'kai' → logprob: -10.377555847167969
    10. 'g' → logprob: -10.627555847167969

Token 304: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.011354668065905571
    2. 'ij' → logprob: -4.511354446411133
    3. 'i' → logprob: -8.261354446411133
    4. '(' → logprob: -11.761354446411133
    5. '[i' → logprob: -12.011354446411133
    6. '_' → logprob: -12.136354446411133
    7. '

' → logprob: -12.261354446411133
    8. 'j' → logprob: -12.886354446411133
    9. '(i' → logprob: -12.886354446411133
    10. '_i' → logprob: -13.011354446411133

Token 305: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.2200749754119897e-06
    2. ' (' → logprob: -13.625001907348633
    3. 'def' → logprob: -14.125001907348633
    4. '(' → logprob: -15.875001907348633
    5. '(k' → logprob: -16.000001907348633
    6. '(N' → logprob: -18.375001907348633
    7. 'n' → logprob: -18.625001907348633
    8. '(x' → logprob: -19.375001907348633
    9. '(m' → logprob: -19.375001907348633
    10. ' def' → logprob: -19.875001907348633

Token 306: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0004552215104922652
    2. '):
' → logprob: -7.750455379486084
    3. '(n' → logprob: -11.375454902648926
    4. ')' → logprob: -12.000454902648926
    5. '):
' → logprob: -12.250454902648926
    6. ':' → logprob: -13.500454902648926
    7. ' ):' → logprob: -14.750454902648926
    8. ',n' → logprob: -16.375455856323242
    9. '):

' → logprob: -16.500455856323242
    10. 'def' → logprob: -16.750455856323242

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.041046567261219025
    2. ' while' → logprob: -3.791046619415283
    3. 'while' → logprob: -4.041046619415283
    4. '	while' → logprob: -9.666046142578125
    5. '    
' → logprob: -14.916046142578125
    6. ' ' → logprob: -15.291046142578125
    7. 'While' → logprob: -15.916046142578125
    8. '  ' → logprob: -16.041046142578125
    9. '```' → logprob: -16.416046142578125
    10. '
' → logprob: -16.541046142578125

Token 308: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -4.56102097814437e-05
    2. ' while' → logprob: -10.000045776367188
    3. 'if' → logprob: -16.375045776367188
    4. '	while' → logprob: -17.375045776367188
    5. '   ' → logprob: -17.750045776367188
    6. 'While' → logprob: -19.875045776367188
    7. '  ' → logprob: -22.250045776367188
    8. ' ' → logprob: -23.000045776367188
    9. '```' → logprob: -23.250045776367188
    10. '    ' → logprob: -23.500045776367188

Token 309: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.6931540369987488
    2. ' len' → logprob: -0.6931540369987488
    3. '(len' → logprob: -12.568154335021973
    4. ' ' → logprob: -13.568154335021973
    5. '   ' → logprob: -13.693154335021973
    6. '	len' → logprob: -14.318154335021973
    7. '  ' → logprob: -15.943154335021973
    8. '=len' → logprob: -17.068153381347656
    9. '[len' → logprob: -17.443153381347656
    10. '<len' → logprob: -17.568153381347656

Token 310: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -6.372916686814278e-05
    2. '_g' → logprob: -9.7500638961792
    3. '(' → logprob: -12.2500638961792
    4. '_k' → logprob: -15.6250638961792
    5. ' (_' → logprob: -15.8750638961792
    6. '_' → logprob: -16.375062942504883
    7. ' _' → logprob: -17.125062942504883
    8. '(
' → logprob: -17.625062942504883
    9. '```' → logprob: -18.250062942504883
    10. '   ' → logprob: -18.875062942504883

Token 311: 'g' (ID: 70)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.5703702569007874
    2. 'g' → logprob: -1.0703701972961426
    3. 'kj' → logprob: -2.4453701972961426
    4. '_k' → logprob: -5.570370197296143
    5. 'gj' → logprob: -6.695370197296143
    6. 'k' → logprob: -9.9453706741333
    7. '_j' → logprob: -11.9453706741333
    8. '
' → logprob: -14.1953706741333
    9. '(g' → logprob: -14.1953706741333
    10. 'kja' → logprob: -14.3203706741333

Token 312: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.011075528338551521
    2. '_k' → logprob: -4.511075496673584
    3. 'k' → logprob: -11.136075973510742
    4. '_g' → logprob: -12.136075973510742
    5. 'gj' → logprob: -12.261075973510742
    6. '_j' → logprob: -13.011075973510742
    7. 'g' → logprob: -15.386075973510742
    8. ' kj' → logprob: -15.886075973510742
    9. 'kja' → logprob: -16.136075973510742
    10. 'j' → logprob: -17.136075973510742

Token 313: ')<=' (ID: 176862)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.018858760595321655
    2. ')<=' → logprob: -4.018858909606934
    3. ']<=' → logprob: -7.268858909606934
    4. ' <=' → logprob: -11.393858909606934
    5. '```' → logprob: -15.143858909606934
    6. ')' → logprob: -15.518858909606934
    7. '<' → logprob: -16.393857955932617
    8. '   ' → logprob: -17.643857955932617
    9. '<len' → logprob: -17.893857955932617
    10. '()' → logprob: -18.018857955932617

Token 314: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.128163257315464e-07
    2. ' n' → logprob: -15.375
    3. '	n' → logprob: -18.375
    4. '<|end|>' → logprob: -19.375
    5. '_n' → logprob: -19.875
    6. '[n' → logprob: -20.5
    7. '(n' → logprob: -20.5
    8. ')n' → logprob: -20.75
    9. '[' → logprob: -21.125
    10. '
' → logprob: -21.375

Token 315: ':_' (ID: 54242)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1271124631166458
    2. ':_' → logprob: -2.12711238861084
    3. ':
' → logprob: -8.75211238861084
    4. '_k' → logprob: -11.50211238861084
    5. ' :' → logprob: -12.37711238861084
    6. ':k' → logprob: -12.62711238861084
    7. ':
' → logprob: -12.75211238861084
    8. '   ' → logprob: -13.37711238861084
    9. '_g' → logprob: -14.12711238861084
    10. ':\' → logprob: -14.25211238861084

Token 316: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0017850141739472747
    2. 'kj' → logprob: -6.501784801483154
    3. '_g' → logprob: -8.376785278320312
    4. 'gj' → logprob: -9.876785278320312
    5. '
' → logprob: -15.001785278320312
    6. '_' → logprob: -15.126785278320312
    7. 'k' → logprob: -15.626785278320312
    8. '_k' → logprob: -15.751785278320312
    9. '```' → logprob: -16.751785278320312
    10. '	g' → logprob: -16.876785278320312

Token 317: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.0018698560306802392
    2. '_k' → logprob: -6.3768696784973145
    3. 'k' → logprob: -9.501870155334473
    4. '_j' → logprob: -9.876870155334473
    5. 'j' → logprob: -10.251870155334473
    6. ' kj' → logprob: -13.501870155334473
    7. '[' → logprob: -14.126870155334473
    8. '[k' → logprob: -14.126870155334473
    9. '_' → logprob: -14.251870155334473
    10. 'g' → logprob: -14.876870155334473

Token 318: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008143932209350169
    2. 'append' → logprob: -7.125814437866211
    3. '.' → logprob: -12.625814437866211
    4. ' append' → logprob: -12.875814437866211
    5. ' .' → logprob: -13.375814437866211
    6. '   ' → logprob: -14.000814437866211
    7. '	append' → logprob: -14.125814437866211
    8. '[-' → logprob: -15.500814437866211
    9. '+' → logprob: -15.750814437866211
    10. '       ' → logprob: -16.25081443786621

Token 319: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -5.967624019831419e-05
    2. '_' → logprob: -10.125060081481934
    3. '((_' → logprob: -11.750060081481934
    4. '_g' → logprob: -12.250060081481934
    5. '(' → logprob: -12.625060081481934
    6. '(g' → logprob: -13.875060081481934
    7. '(inv' → logprob: -14.000060081481934
    8. 'inv' → logprob: -14.250060081481934
    9. ' (_' → logprob: -14.750060081481934
    10. '_inv' → logprob: -15.000060081481934

Token 320: 'g' (ID: 70)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.3134300708770752
    2. 'g' → logprob: -1.3134300708770752
    3. '-g' → logprob: -9.063429832458496
    4. '-' → logprob: -10.938429832458496
    5. '_k' → logprob: -11.063429832458496
    6. '-_' → logprob: -12.063429832458496
    7. 'kj' → logprob: -12.938429832458496
    8. ' g' → logprob: -13.438429832458496
    9. '-k' → logprob: -13.563429832458496
    10. 'gj' → logprob: -13.688429832458496

Token 321: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.18977908790111542
    2. '[-' → logprob: -2.189779043197632
    3. '_k' → logprob: -3.564779043197632
    4. '_g' → logprob: -4.064779281616211
    5. '_j' → logprob: -4.439779281616211
    6. 'j' → logprob: -7.064779281616211
    7. 'k' → logprob: -7.439779281616211
    8. '_' → logprob: -7.814779281616211
    9. '(_' → logprob: -7.814779281616211
    10. 'g' → logprob: -8.439779281616211

Token 322: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.008129963040119e-06
    2. '
' → logprob: -13.500003814697266
    3. '[' → logprob: -13.625003814697266
    4. '[
' → logprob: -15.000003814697266
    5. '_' → logprob: -15.375003814697266
    6. ' [-' → logprob: -16.250003814697266
    7. '	' → logprob: -16.375003814697266
    8. '#' → logprob: -16.625003814697266
    9. 's' → logprob: -16.625003814697266
    10. '-' → logprob: -16.750003814697266

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. '
' → logprob: -13.687506675720215
    3. 'len' → logprob: -13.750006675720215
    4. ' ' → logprob: -14.000006675720215
    5. '_' → logprob: -15.125006675720215
    6. 'kj' → logprob: -15.312506675720215
    7. ']' → logprob: -15.375006675720215
    8. '11' → logprob: -15.375006675720215
    9. '   ' → logprob: -15.437506675720215
    10. '```' → logprob: -15.500006675720215

Token 324: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003900391166098416
    2. ' *' → logprob: -8.12539005279541
    3. '*(' → logprob: -9.87539005279541
    4. '*
' → logprob: -10.75039005279541
    5. '*n' → logprob: -12.62539005279541
    6. '*[' → logprob: -12.62539005279541
    7. '*p' → logprob: -13.37539005279541
    8. '*object' → logprob: -13.62539005279541
    9. '*s' → logprob: -13.75039005279541
    10. '*l' → logprob: -13.75039005279541

Token 325: 'pow' (ID: 30304)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.018473928794264793
    2. '(len' → logprob: -4.143474102020264
    3. 'pow' → logprob: -6.143474102020264
    4. ' len' → logprob: -8.893473625183105
    5. '[len' → logprob: -9.643473625183105
    6. 'inv' → logprob: -10.268473625183105
    7. '(' → logprob: -10.768473625183105
    8. '(pow' → logprob: -11.518473625183105
    9. '<len' → logprob: -12.768473625183105
    10. 'ka' → logprob: -12.768473625183105

Token 326: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00017386233957950026
    2. 'len' → logprob: -8.750173568725586
    3. '(' → logprob: -11.250173568725586
    4. '[len' → logprob: -13.750173568725586
    5. '(_' → logprob: -14.625173568725586
    6. '<len' → logprob: -15.500173568725586
    7. ' len' → logprob: -15.750173568725586
    8. '(
' → logprob: -16.125173568725586
    9. '	len' → logprob: -16.250173568725586
    10. '(k' → logprob: -16.375173568725586

Token 327: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -4.286852345103398e-05
    2. '(' → logprob: -10.625042915344238
    3. '_k' → logprob: -11.500042915344238
    4. '(
' → logprob: -11.875042915344238
    5. '(k' → logprob: -13.750042915344238
    6. '(

' → logprob: -15.750042915344238
    7. '_g' → logprob: -16.875041961669922
    8. '(
' → logprob: -17.500041961669922
    9. '()' → logprob: -17.625041961669922
    10. ' (_' → logprob: -17.875041961669922

Token 328: 'g' (ID: 70)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.1114320456981659
    2. '(_' → logprob: -2.6114320755004883
    3. '_g' → logprob: -3.7364320755004883
    4. '_j' → logprob: -4.861432075500488
    5. '(k' → logprob: -7.986432075500488
    6. '(' → logprob: -10.486432075500488
    7. ')' → logprob: -10.736432075500488
    8. ' _' → logprob: -10.861432075500488
    9. '(g' → logprob: -12.361432075500488
    10. '```' → logprob: -12.736432075500488

Token 329: 'kj' (ID: 38076)
  Prédit: '_k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.3998165428638458
    2. '(_' → logprob: -1.7748165130615234
    3. '_' → logprob: -2.5248165130615234
    4. '_j' → logprob: -2.6498165130615234
    5. '_g' → logprob: -5.149816513061523
    6. '(k' → logprob: -5.774816513061523
    7. 'kj' → logprob: -9.149816513061523
    8. ')' → logprob: -9.399816513061523
    9. ' _' → logprob: -9.774816513061523
    10. '(' → logprob: -10.399816513061523

Token 330: '),' (ID: 936)
  Prédit: ',len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.8297619819641113
    2. ',' → logprob: -0.9547619819641113
    3. ',-' → logprob: -2.4547619819641113
    4. ',_' → logprob: -2.9547619819641113
    5. ',M' → logprob: -3.8297619819641113
    6. ' ,' → logprob: -5.329761981964111
    7. ',k' → logprob: -5.704761981964111
    8. ',n' → logprob: -6.079761981964111
    9. '(len' → logprob: -6.079761981964111
    10. '(M' → logprob: -6.079761981964111

Token 331: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -9.729906196298543e-06
    2. ' MOD' → logprob: -11.625009536743164
    3. '_MOD' → logprob: -14.625009536743164
    4. '.MOD' → logprob: -15.250009536743164
    5. '
' → logprob: -17.875009536743164
    6. '(M' → logprob: -18.375009536743164
    7. 'MO' → logprob: -18.875009536743164
    8. '-' → logprob: -19.500009536743164
    9. '-M' → logprob: -19.875009536743164
    10. '   ' → logprob: -20.000009536743164

Token 332: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00010902655776590109
    2. ' -' → logprob: -9.12510871887207
    3. '-mod' → logprob: -16.25010871887207
    4. '-M' → logprob: -17.12510871887207
    5. '−' → logprob: -18.25010871887207
    6. '()-' → logprob: -18.75010871887207
    7. '{-' → logprob: -19.12510871887207
    8. '-Mod' → logprob: -19.12510871887207
    9. 'MOD' → logprob: -19.37510871887207
    10. '```' → logprob: -19.87510871887207

Token 333: '2' (ID: 17)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.006016253028064966
    2. '2' → logprob: -5.131016254425049
    3. ' -' → logprob: -9.38101577758789
    4. '-
' → logprob: -14.13101577758789
    5. '−' → logprob: -14.50601577758789
    6. '-M' → logprob: -14.63101577758789
    7. '{-' → logprob: -15.00601577758789
    8. '
' → logprob: -15.00601577758789
    9. '9' → logprob: -16.00601577758789
    10. 'MOD' → logprob: -16.00601577758789

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024989593657664955
    2. ' ,' → logprob: -8.375249862670898
    3. 'MOD' → logprob: -11.125249862670898
    4. ',
' → logprob: -12.625249862670898
    5. ',M' → logprob: -14.500249862670898
    6. '%' → logprob: -14.875249862670898
    7. ' MOD' → logprob: -15.875249862670898
    8. '_MOD' → logprob: -16.3752498626709
    9. '
' → logprob: -16.5002498626709
    10. ',%' → logprob: -16.8752498626709

Token 335: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.8624639324116288e-06
    2. ' MOD' → logprob: -13.250001907348633
    3. 'MO' → logprob: -18.375001907348633
    4. ')' → logprob: -18.750001907348633
    5. '_MOD' → logprob: -19.625001907348633
    6. '.MOD' → logprob: -19.750001907348633
    7. 'M' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.500001907348633
    9. 'MODE' → logprob: -21.250001907348633
    10. 'MODULE' → logprob: -22.875001907348633

Token 336: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.22612515091896057
    2. ')' → logprob: -1.7261251211166382
    3. ',' → logprob: -3.7261252403259277
    4. '))' → logprob: -8.85112476348877
    5. ']%' → logprob: -9.47612476348877
    6. ' ,' → logprob: -10.60112476348877
    7. ' )' → logprob: -10.60112476348877
    8. ')
' → logprob: -11.10112476348877
    9. '%' → logprob: -11.10112476348877
    10. '   ' → logprob: -12.35112476348877

Token 337: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -4.320199877838604e-07
    2. ' MOD' → logprob: -14.75
    3. '_MOD' → logprob: -19.75
    4. 'MO' → logprob: -20.25
    5. '.MOD' → logprob: -22.625
    6. '   ' → logprob: -23.0
    7. '(M' → logprob: -23.125
    8. '```' → logprob: -24.0
    9. '
' → logprob: -24.25
    10. 'M' → logprob: -24.75

Token 338: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032159762922674417
    2. ')
' → logprob: -5.753215789794922
    3. ' )' → logprob: -10.503215789794922
    4. ')return' → logprob: -12.253215789794922
    5. '   ' → logprob: -13.128215789794922
    6. ')n' → logprob: -13.878215789794922
    7. ')
' → logprob: -14.003215789794922
    8. ' )
' → logprob: -14.253215789794922
    9. ')

' → logprob: -14.253215789794922
    10. 'return' → logprob: -15.878215789794922

Token 339: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10074573010206223
    2. 'return' → logprob: -2.350745677947998
    3. ' return' → logprob: -7.850745677947998
    4. 'def' → logprob: -9.100746154785156
    5. '	return' → logprob: -10.850746154785156
    6. '
' → logprob: -11.350746154785156
    7. 'while' → logprob: -13.100746154785156
    8. ':return' → logprob: -13.725746154785156
    9. ')return' → logprob: -14.350746154785156
    10. '_return' → logprob: -14.600746154785156

Token 340: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.001202254556119442
    2. '   ' → logprob: -7.12620210647583
    3. ' return' → logprob: -7.87620210647583
    4. 'def' → logprob: -11.751202583312988
    5. '	return' → logprob: -12.376202583312988
    6. '
' → logprob: -12.501202583312988
    7. ':return' → logprob: -13.876202583312988
    8. 'eturn' → logprob: -15.376202583312988
    9. ' ' → logprob: -15.626202583312988
    10. '_return' → logprob: -15.751202583312988

Token 341: ' _' (ID: 1175)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.1472419600977446e-06
    2. ' _' → logprob: -13.750000953674316
    3. '_k' → logprob: -16.875001907348633
    4. '_' → logprob: -18.375001907348633
    5. '\' → logprob: -20.500001907348633
    6. '   ' → logprob: -20.875001907348633
    7. '_G' → logprob: -21.375001907348633
    8. 'g' → logprob: -21.625001907348633
    9. '	' → logprob: -21.750001907348633
    10. '_ga' → logprob: -22.125001907348633

Token 342: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.0012999961618334055
    2. '_g' → logprob: -6.876299858093262
    3. 'kj' → logprob: -8.251299858093262
    4. '_k' → logprob: -12.626299858093262
    5. 'gj' → logprob: -13.751299858093262
    6. 'k' → logprob: -13.751299858093262
    7. 'n' → logprob: -14.876299858093262
    8. 'j' → logprob: -15.876299858093262
    9. '_j' → logprob: -16.626300811767578
    10. '```' → logprob: -16.751300811767578

Token 343: 'kj' (ID: 38076)
  Prédit: 'kj'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'kj' → logprob: -0.00021402664424385875
    2. '_k' → logprob: -8.750213623046875
    3. 'k' → logprob: -9.875213623046875
    4. '_' → logprob: -13.625213623046875
    5. 'j' → logprob: -14.000213623046875
    6. '[k' → logprob: -14.250213623046875
    7. '[n' → logprob: -15.250213623046875
    8. 'n' → logprob: -15.375213623046875
    9. '_j' → logprob: -15.625213623046875
    10. ' kj' → logprob: -15.625213623046875

Token 344: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -1.1472419600977446e-06
    2. 'n' → logprob: -14.375000953674316
    3. '[' → logprob: -15.125000953674316
    4. '[-' → logprob: -16.375001907348633
    5. '[len' → logprob: -16.375001907348633
    6. '(n' → logprob: -19.000001907348633
    7. ' [' → logprob: -19.750001907348633
    8. '[m' → logprob: -21.000001907348633
    9. '[
' → logprob: -21.125001907348633
    10. '[int' → logprob: -21.125001907348633

Token 345: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06201798468828201
    2. ']' → logprob: -2.8120179176330566
    3. '}' → logprob: -11.562018394470215
    4. ')]' → logprob: -11.562018394470215
    5. '<|end|>' → logprob: -11.812018394470215
    6. '])' → logprob: -11.937018394470215
    7. ')n' → logprob: -12.187018394470215
    8. ' )' → logprob: -12.937018394470215
    9. '）' → logprob: -13.312018394470215
    10. '#' → logprob: -13.312018394470215

Token 346: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7135877013206482
    2. 'def' → logprob: -0.8385877013206482
    3. '(' → logprob: -2.963587760925293
    4. '#' → logprob: -4.588587760925293
    5. '*' → logprob: -5.088587760925293
    6. '<|end|>' → logprob: -5.463587760925293
    7. '_' → logprob: -6.588587760925293
    8. ',' → logprob: -7.338587760925293
    9. '(n' → logprob: -7.338587760925293
    10. ']' → logprob: -7.338587760925293

Token 347: ' n' (ID: 297)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.8716729283332825
    2. ' n' → logprob: -1.3716728687286377
    3. ' cmb' → logprob: -1.9966728687286377
    4. ' mod' → logprob: -2.2466728687286377
    5. 'n' → logprob: -3.4966728687286377
    6. ' ka' → logprob: -4.496673107147217
    7. ' main' → logprob: -5.121673107147217
    8. 'comb' → logprob: -5.246673107147217
    9. ' komb' → logprob: -5.371673107147217
    10. 'C' → logprob: -5.371673107147217

Token 348: 'Cr' (ID: 14225)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.9295304417610168
    2. 'Cr' → logprob: -1.304530382156372
    3. 'C' → logprob: -1.679530382156372
    4. 'ew' → logprob: -2.679530382156372
    5. 'cr' → logprob: -3.804530382156372
    6. 'e' → logprob: -4.304530620574951
    7. 'um' → logprob: -4.429530620574951
    8. 'o' → logprob: -5.054530620574951
    9. '_choose' → logprob: -5.304530620574951
    10. 'CR' → logprob: -5.554530620574951

Token 349: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00018780550453811884
    2. '(' → logprob: -8.625187873840332
    3. ' (' → logprob: -11.875187873840332
    4. '(
' → logprob: -13.750187873840332
    5. '(N' → logprob: -16.250186920166016
    6. '(a' → logprob: -17.625186920166016
    7. '(k' → logprob: -17.625186920166016
    8. '_(' → logprob: -18.125186920166016
    9. '(p' → logprob: -18.250186920166016
    10. 'n' → logprob: -18.250186920166016

Token 350: ',r' (ID: 33654)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032326136715710163
    2. ',r' → logprob: -6.253232479095459
    3. ',k' → logprob: -6.753232479095459
    4. ',n' → logprob: -9.003232955932617
    5. ' ,' → logprob: -11.503232955932617
    6. ',m' → logprob: -13.378232955932617
    7. ',K' → logprob: -15.003232955932617
    8. ',c' → logprob: -15.628232955932617
    9. 'r' → logprob: -15.878232955932617
    10. ',i' → logprob: -16.003232955932617

Token 351: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0003015001420862973
    2. '):
' → logprob: -8.375301361083984
    3. ')' → logprob: -9.625301361083984
    4. ' ):' → logprob: -12.500301361083984
    5. '):
' → logprob: -14.125301361083984
    6. ':' → logprob: -15.125301361083984
    7. ')：' → logprob: -16.875301361083984
    8. ',' → logprob: -17.125301361083984
    9. '):

' → logprob: -17.375301361083984
    10. '=' → logprob: -17.625301361083984

Token 352: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0061553544364869595
    2. ':' → logprob: -5.381155490875244
    3. ' if' → logprob: -7.506155490875244
    4. ':
' → logprob: -8.631155014038086
    5. ' ' → logprob: -8.881155014038086
    6. '):' → logprob: -9.006155014038086
    7. ':return' → logprob: -9.131155014038086
    8. ' return' → logprob: -9.506155014038086
    9. '  ' → logprob: -9.506155014038086
    10. '    
' → logprob: -10.006155014038086

Token 353: ' n' (ID: 297)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.10023459792137146
    2. 'r' → logprob: -2.3502345085144043
    3. ' n' → logprob: -10.850234985351562
    4. ' ' → logprob: -12.100234985351562
    5. 'n' → logprob: -13.850234985351562
    6. '0' → logprob: -13.975234985351562
    7. ' not' → logprob: -14.725234985351562
    8. '	r' → logprob: -15.350234985351562
    9. '(r' → logprob: -15.850234985351562
    10. ' ' → logprob: -16.225234985351562

Token 354: '==' (ID: 560)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.010607603006064892
    2. ' <' → logprob: -4.885607719421387
    3. '<n' → logprob: -5.885607719421387
    4. '==' → logprob: -8.885607719421387
    5. '>=' → logprob: -10.385607719421387
    6. '<len' → logprob: -11.010607719421387
    7. '<m' → logprob: -12.135607719421387
    8. '<p' → logprob: -12.260607719421387
    9. '<t' → logprob: -12.510607719421387
    10. ' ==' → logprob: -12.885607719421387

Token 355: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0009165783412754536
    2. '0' → logprob: -7.000916481018066
    3. ' r' → logprob: -12.250916481018066
    4. ' ' → logprob: -16.125917434692383
    5. '	r' → logprob: -17.250917434692383
    6. 'None' → logprob: -17.500917434692383
    7. '   ' → logprob: -17.500917434692383
    8. '<' → logprob: -17.750917434692383
    9. 'n' → logprob: -17.875917434692383
    10. 'return' → logprob: -18.625917434692383

Token 356: ':return' (ID: 188357)
  Prédit: ':return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.6749376654624939
    2. ':' → logprob: -0.9249376654624939
    3. ' or' → logprob: -2.7999377250671387
    4. '==' → logprob: -3.4249377250671387
    5. ':
' → logprob: -8.29993724822998
    6. ' ==' → logprob: -8.42493724822998
    7. ' :' → logprob: -8.67493724822998
    8. 'return' → logprob: -9.42493724822998
    9. 'or' → logprob: -9.42493724822998
    10. ' return' → logprob: -10.29993724822998

Token 357: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '   ' → logprob: -17.00006675720215
    4. '_k' → logprob: -17.00006675720215
    5. '_' → logprob: -17.25006675720215
    6. '
' → logprob: -18.12506675720215
    7. '１' → logprob: -18.12506675720215
    8. '  ' → logprob: -18.12506675720215
    9. '(' → logprob: -18.25006675720215
    10. '```' → logprob: -19.06256675720215

Token 358: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.62500762939453
    4. '
' → logprob: -17.31250762939453
    5. '(' → logprob: -17.50000762939453
    6. 'MOD' → logprob: -17.50000762939453
    7. 'k' → logprob: -18.00000762939453
    8. '１' → logprob: -18.12500762939453
    9. '  ' → logprob: -18.12500762939453
    10. 'int' → logprob: -18.43750762939453

Token 359: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2456488013267517
    2. '
' → logprob: -1.7456488609313965
    3. ' elif' → logprob: -3.9956488609313965
    4. ' 
' → logprob: -4.8706488609313965
    5. ' return' → logprob: -4.9956488609313965
    6. '\n' → logprob: -5.7456488609313965
    7. '   ' → logprob: -6.4956488609313965
    8. 'if' → logprob: -6.6206488609313965
    9. '<|end|>' → logprob: -6.9956488609313965
    10. ' ' → logprob: -7.1206488609313965

Token 360: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00784309022128582
    2. 'if' → logprob: -5.257843017578125
    3. ' return' → logprob: -6.257843017578125
    4. ' elif' → logprob: -7.632843017578125
    5. 'elif' → logprob: -9.382843017578125
    6. ' res' → logprob: -10.007843017578125
    7. 'return' → logprob: -10.382843017578125
    8. ' r' → logprob: -10.507843017578125
    9. '   ' → logprob: -11.132843017578125
    10. 'r' → logprob: -13.382843017578125

Token 361: ' (' (ID: 350)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.034958746284246445
    2. ' r' → logprob: -3.409958839416504
    3. 'n' → logprob: -6.784958839416504
    4. ' n' → logprob: -8.659958839416504
    5. '0' → logprob: -12.909958839416504
    6. ' ' → logprob: -13.159958839416504
    7. '   ' → logprob: -14.159958839416504
    8. ' not' → logprob: -14.159958839416504
    9. '
' → logprob: -14.909958839416504
    10. '	r' → logprob: -14.909958839416504

Token 362: 'n' (ID: 77)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.026771502569317818
    2. ' r' → logprob: -3.9017715454101562
    3. 'n' → logprob: -5.151771545410156
    4. ' n' → logprob: -7.901771545410156
    5. '0' → logprob: -10.526771545410156
    6. ' ' → logprob: -11.776771545410156
    7. 'not' → logprob: -12.901771545410156
    8. ' not' → logprob: -13.151771545410156
    9. '   ' → logprob: -13.151771545410156
    10. '(n' → logprob: -13.401771545410156

Token 363: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03520816192030907
    2. ' <' → logprob: -3.660208225250244
    3. '==' → logprob: -5.535208225250244
    4. 'r' → logprob: -6.660208225250244
    5. '<n' → logprob: -6.785208225250244
    6. ' r' → logprob: -7.285208225250244
    7. ')<' → logprob: -7.785208225250244
    8. ' ==' → logprob: -8.285207748413086
    9. '>' → logprob: -8.285207748413086
    10. ',r' → logprob: -8.285207748413086

Token 364: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -7.135819760151207e-05
    2. '0' → logprob: -10.12507152557373
    3. ' r' → logprob: -10.37507152557373
    4. ' ' → logprob: -17.375070571899414
    5. '	r' → logprob: -19.000070571899414
    6. '   ' → logprob: -19.000070571899414
    7. '1' → logprob: -19.750070571899414
    8. '<' → logprob: -19.875070571899414
    9. ')' → logprob: -20.125070571899414
    10. '
' → logprob: -20.375070571899414

Token 365: ')|(' (ID: 148376)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30383795499801636
    2. ')' → logprob: -1.9288380146026611
    3. ')return' → logprob: -2.803838014602661
    4. ' or' → logprob: -2.928838014602661
    5. ' ):' → logprob: -6.803837776184082
    6. '):
' → logprob: -7.303837776184082
    7. ':return' → logprob: -7.928837776184082
    8. 'or' → logprob: -8.303837776184082
    9. ' )' → logprob: -8.803837776184082
    10. 'return' → logprob: -9.678837776184082

Token 366: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03446950763463974
    2. ' r' → logprob: -3.4094696044921875
    3. '0' → logprob: -7.4094696044921875
    4. 'n' → logprob: -9.534469604492188
    5. 'True' → logprob: -9.909469604492188
    6. ' ' → logprob: -10.534469604492188
    7. ')' → logprob: -11.159469604492188
    8. ' n' → logprob: -11.284469604492188
    9. '
' → logprob: -11.784469604492188
    10. ' True' → logprob: -11.784469604492188

Token 367: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1845066100358963
    2. '==' → logprob: -1.8095066547393799
    3. '0' → logprob: -6.184506416320801
    4. '>' → logprob: -6.934506416320801
    5. ' ==' → logprob: -7.184506416320801
    6. ' <' → logprob: -7.559506416320801
    7. ' ' → logprob: -7.934506416320801
    8. ')' → logprob: -10.6845064163208
    9. '=' → logprob: -10.8095064163208
    10. ')==' → logprob: -11.8095064163208

Token 368: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.11996734328568e-05
    2. ' ' → logprob: -10.125041007995605
    3. '=' → logprob: -14.750041007995605
    4. '۰' → logprob: -15.250041007995605
    5. '```' → logprob: -15.750041007995605
    6. '０' → logprob: -16.875041961669922
    7. '1' → logprob: -16.937541961669922
    8. ')' → logprob: -17.562541961669922
    9. '
' → logprob: -18.062541961669922
    10. ' =' → logprob: -18.187541961669922

Token 369: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.010060270316898823
    2. ':return' → logprob: -5.0100603103637695
    3. ')return' → logprob: -6.3850603103637695
    4. ' ):' → logprob: -6.6350603103637695
    5. ')' → logprob: -8.38506031036377
    6. ':' → logprob: -10.01006031036377
    7. '):
' → logprob: -10.01006031036377
    8. 'return' → logprob: -12.01006031036377
    9. ' ' → logprob: -12.26006031036377
    10. ' return' → logprob: -13.01006031036377

Token 370: 'return' (ID: 1034)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4115806818008423
    2. '   ' → logprob: -1.1615806818008423
    3. 'return' → logprob: -3.7865805625915527
    4. '	return' → logprob: -7.036580562591553
    5. ' ' → logprob: -7.786580562591553
    6. '0' → logprob: -8.161581039428711
    7. ':return' → logprob: -9.411581039428711
    8. '       ' → logprob: -10.161581039428711
    9. '
' → logprob: -11.661581039428711
    10. '  ' → logprob: -12.161581039428711

Token 371: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008045066497288644
    2. ' ' → logprob: -7.125804424285889
    3. '   ' → logprob: -19.500804901123047
    4. '۰' → logprob: -19.875804901123047
    5. '  ' → logprob: -20.625804901123047
    6. '
' → logprob: -21.000804901123047
    7. ' ' → logprob: -21.125804901123047
    8. ' 
' → logprob: -21.250804901123047
    9. '<|end|>' → logprob: -21.375804901123047
    10. '０' → logprob: -21.750804901123047

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '۰' → logprob: -20.2500057220459
    4. '   ' → logprob: -20.7500057220459
    5. '```' → logprob: -21.1250057220459
    6. '<|end|>' → logprob: -21.3750057220459
    7. '
' → logprob: -21.5000057220459
    8. '  ' → logprob: -22.1250057220459
    9. '00' → logprob: -22.5000057220459
    10. '000' → logprob: -22.7500057220459

Token 373: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0010779452277347445
    2. '   ' → logprob: -7.751078128814697
    3. 'return' → logprob: -7.876078128814697
    4. ' r' → logprob: -9.126077651977539
    5. ' if' → logprob: -9.501077651977539
    6. '	return' → logprob: -10.376077651977539
    7. '
' → logprob: -10.876077651977539
    8. ' res' → logprob: -11.876077651977539
    9. ' n' → logprob: -12.001077651977539
    10. '    
' → logprob: -12.376077651977539

Token 374: ' t' (ID: 260)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.019530121237039566
    2. 'return' → logprob: -4.269530296325684
    3. '   ' → logprob: -5.394530296325684
    4. ' res' → logprob: -7.894530296325684
    5. ' p' → logprob: -8.644530296325684
    6. ' a' → logprob: -9.269530296325684
    7. ' s' → logprob: -9.894530296325684
    8. ' r' → logprob: -10.644530296325684
    9. 'a' → logprob: -10.894530296325684
    10. ' x' → logprob: -11.144530296325684

Token 375: '=' (ID: 28)
  Prédit: 'ry'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ry' → logprob: -0.547751784324646
    2. '=' → logprob: -1.047751784324646
    3. 'mp' → logprob: -3.9227519035339355
    4. ' =' → logprob: -4.1727519035339355
    5. 'return' → logprob: -4.4227519035339355
    6. 'emp' → logprob: -5.1727519035339355
    7. 'r' → logprob: -5.2977519035339355
    8. ':' → logprob: -5.9227519035339355
    9. ' return' → logprob: -6.0477519035339355
    10. '=r' → logprob: -6.7977519035339355

Token 376: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.0063895611092448235
    2. '(' → logprob: -5.131389617919922
    3. '(k' → logprob: -8.631389617919922
    4. ' ka' → logprob: -9.131389617919922
    5. '(_' → logprob: -9.381389617919922
    6. '_' → logprob: -10.006389617919922
    7. '_k' → logprob: -10.381389617919922
    8. ' (' → logprob: -12.006389617919922
    9. '1' → logprob: -13.631389617919922
    10. 'kan' → logprob: -13.881389617919922

Token 377: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.00013727048644796014
    2. 'ij' → logprob: -9.125137329101562
    3. 'i' → logprob: -10.625137329101562
    4. 'ijos' → logprob: -14.250137329101562
    5. 'ijoje' → logprob: -14.250137329101562
    6. 'jo' → logprob: -14.625137329101562
    7. '

' → logprob: -14.750137329101562
    8. '```' → logprob: -14.875137329101562
    9. '[i' → logprob: -15.125137329101562
    10. '   ' → logprob: -15.750137329101562

Token 378: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.372294698550832e-06
    2. '[n' → logprob: -11.750009536743164
    3. 'n' → logprob: -14.375009536743164
    4. '(' → logprob: -14.500009536743164
    5. ' (' → logprob: -16.000009536743164
    6. '
' → logprob: -16.250009536743164
    7. '(
' → logprob: -17.625009536743164
    8. '	n' → logprob: -18.125009536743164
    9. '(r' → logprob: -18.375009536743164
    10. '```' → logprob: -18.500009536743164

Token 379: ')*' (ID: 11043)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6133612990379333
    2. ')*' → logprob: -0.9883612990379333
    3. ')
' → logprob: -2.488361358642578
    4. ')n' → logprob: -6.363361358642578
    5. ')t' → logprob: -7.863361358642578
    6. ')//' → logprob: -8.488361358642578
    7. ')
' → logprob: -8.488361358642578
    8. '   ' → logprob: -9.113361358642578
    9. '[r' → logprob: -9.363361358642578
    10. ' ' → logprob: -9.363361358642578

Token 380: 'gy' (ID: 4544)
  Prédit: 'inv'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inv' → logprob: -0.08118996769189835
    2. 'gy' → logprob: -2.5811898708343506
    3. ' inv' → logprob: -6.45619010925293
    4. ' gy' → logprob: -7.45619010925293
    5. '(inv' → logprob: -9.20619010925293
    6. 'pow' → logprob: -11.33119010925293
    7. '(' → logprob: -11.58119010925293
    8. 'gyro' → logprob: -12.58119010925293
    9. '_inv' → logprob: -12.70619010925293
    10. '
' → logprob: -12.83119010925293

Token 381: 'aku' (ID: 9385)
  Prédit: 'aku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aku' → logprob: -2.7014437364414334e-05
    2. 'a' → logprob: -11.37502670288086
    3. 'ak' → logprob: -11.62502670288086
    4. 'аку' → logprob: -13.00002670288086
    5. '_' → logprob: -13.87502670288086
    6. '```' → logprob: -14.37502670288086
    7. ' aku' → logprob: -14.50002670288086
    8. 'akku' → logprob: -14.87502670288086
    9. 'ako' → logprob: -15.25002670288086
    10. 'akus' → logprob: -15.37502670288086

Token 382: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.320199877838604e-07
    2. 'ka' → logprob: -14.75
    3. '-ka' → logprob: -17.875
    4. '_ga' → logprob: -17.875
    5. '```' → logprob: -18.625
    6. '_k' → logprob: -19.75
    7. '‌' → logprob: -20.0
    8. '​' → logprob: -20.125
    9. ' ka' → logprob: -20.25
    10. '

' → logprob: -20.25

Token 383: 'ka' (ID: 1854)
  Prédit: 'ka'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ka' → logprob: -0.0007222028798423707
    2. '_' → logprob: -7.250722408294678
    3. '(n' → logprob: -12.50072193145752
    4. 'n' → logprob: -13.37572193145752
    5. ' ka' → logprob: -13.62572193145752
    6. 'k' → logprob: -13.75072193145752
    7. '(' → logprob: -14.12572193145752
    8. '```' → logprob: -14.37572193145752
    9. 'Ka' → logprob: -14.87572193145752
    10. '-ka' → logprob: -14.87572193145752

Token 384: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -0.0004733294772449881
    2. 'jo' → logprob: -8.250473022460938
    3. 'ij' → logprob: -8.625473022460938
    4. 'j' → logprob: -10.875473022460938
    5. '_' → logprob: -12.500473022460938
    6. 'i' → logprob: -12.750473022460938
    7. 'jou' → logprob: -13.500473022460938
    8. '[i' → logprob: -14.000473022460938
    9. '

' → logprob: -14.125473022460938
    10. '(' → logprob: -14.250473022460938

Token 385: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.0009184855734929442
    2. '(n' → logprob: -7.000918388366699
    3. 'r' → logprob: -12.2509183883667
    4. '[r' → logprob: -14.0009183883667
    5. '(' → logprob: -14.2509183883667
    6. '
' → logprob: -15.7509183883667
    7. '```' → logprob: -16.000919342041016
    8. '

' → logprob: -16.125919342041016
    9. '((' → logprob: -16.625919342041016
    10. '   ' → logprob: -16.750919342041016

Token 386: ')%' (ID: 57656)
  Prédit: ')*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.41900014877319336
    2. ')*(' → logprob: -1.4190001487731934
    3. ')' → logprob: -3.0440001487731934
    4. '(n' → logprob: -3.4190001487731934
    5. '```' → logprob: -5.419000148773193
    6. '(r' → logprob: -5.794000148773193
    7. '*)' → logprob: -6.044000148773193
    8. '')' → logprob: -6.669000148773193
    9. ')(' → logprob: -6.669000148773193
    10. '(' → logprob: -6.669000148773193

Token 387: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -7.827200897736475e-05
    2. ' MOD' → logprob: -9.625078201293945
    3. '(' → logprob: -11.875078201293945
    4. '_MOD' → logprob: -12.625078201293945
    5. '(M' → logprob: -13.875078201293945
    6. ' (' → logprob: -15.250078201293945
    7. '.MOD' → logprob: -15.750078201293945
    8. '(Mod' → logprob: -15.875078201293945
    9. 'MO' → logprob: -16.375078201293945
    10. '100' → logprob: -16.500078201293945

Token 388: '*' (ID: 9)
  Prédit: '*t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*t' → logprob: -0.5880932211875916
    2. 't' → logprob: -1.4630932807922363
    3. ' t' → logprob: -1.7130932807922363
    4. '   ' → logprob: -3.7130932807922363
    5. '`t' → logprob: -5.338093280792236
    6. '*' → logprob: -6.463093280792236
    7. '	t' → logprob: -7.588093280792236
    8. '_t' → logprob: -7.963093280792236
    9. ' ' → logprob: -8.463092803955078
    10. '```' → logprob: -8.588092803955078

Token 389: 'gy' (ID: 4544)
  Prédit: 'gy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gy' → logprob: -1.1279553291387856e-05
    2. ' gy' → logprob: -11.500011444091797
    3. '(' → logprob: -14.750011444091797
    4. 'gh' → logprob: -14.875011444091797
    5. 'g' → logprob: -15.500011444091797
    6. '   ' → logprob: -17.375011444091797
    7. 'Gy' → logprob: -17.500011444091797
    8. '```' → logprob: -17.750011444091797
    9. 'py' → logprob: -18.000011444091797
    10. 'gym' → logprob: -18.250011444091797

Token 390: 'aku' (ID: 9385)
  Prédit: 'aku'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aku' → logprob: -3.6789137084269896e-05
    2. 'ak' → logprob: -10.87503719329834
    3. 'аку' → logprob: -11.62503719329834
    4. '```' → logprob: -13.12503719329834
    5. 'aky' → logprob: -13.62503719329834
    6. '_' → logprob: -13.75003719329834
    7. 'akku' → logprob: -14.00003719329834
    8. 'a' → logprob: -14.62503719329834
    9. '(' → logprob: -14.62503719329834
    10. 'k' → logprob: -15.00003719329834

Token 391: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '[' → logprob: -17.0
    3. '(' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. 'r' → logprob: -19.375
    6. '‌' → logprob: -19.875
    7. '(n' → logprob: -20.125
    8. 'n' → logprob: -20.75
    9. 'ka' → logprob: -20.75
    10. '_r' → logprob: -21.25

Token 392: 'ka' (ID: 1854)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021877337712794542
    2. 'ka' → logprob: -6.127187728881836
    3. 'Ka' → logprob: -13.752187728881836
    4. ' ka' → logprob: -14.752187728881836
    5. '-ka' → logprob: -14.877187728881836
    6. '```' → logprob: -15.127187728881836
    7. 'ika' → logprob: -16.127187728881836
    8. 'n' → logprob: -16.377187728881836
    9. '(' → logprob: -16.502187728881836
    10. '[' → logprob: -16.877187728881836

Token 393: 'ijo' (ID: 11585)
  Prédit: 'ijo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijo' → logprob: -4.47757811343763e-05
    2. 'jo' → logprob: -10.375044822692871
    3. 'ij' → logprob: -12.250044822692871
    4. 'ojo' → logprob: -12.625044822692871
    5. 'i' → logprob: -14.125044822692871
    6. 'j' → logprob: -14.250044822692871
    7. 'ujo' → logprob: -14.250044822692871
    8. '_' → logprob: -14.250044822692871
    9. '

' → logprob: -14.500044822692871
    10. 'jou' → logprob: -14.750044822692871

Token 394: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.522638169466518e-05
    2. 'n' → logprob: -10.750024795532227
    3. '(' → logprob: -12.875024795532227
    4. ' (' → logprob: -14.375024795532227
    5. '(
' → logprob: -15.250024795532227
    6. '((' → logprob: -15.625024795532227
    7. '(r' → logprob: -16.500024795532227
    8. '[n' → logprob: -17.000024795532227
    9. '(nd' → logprob: -17.625024795532227
    10. '```' → logprob: -17.625024795532227

Token 395: '-r' (ID: 6335)
  Prédit: '-r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-r' → logprob: -0.0003920655872207135
    2. ' -' → logprob: -8.375391960144043
    3. 'r' → logprob: -9.375391960144043
    4. '-' → logprob: -9.500391960144043
    5. '[r' → logprob: -14.250391960144043
    6. '-
' → logprob: -14.875391960144043
    7. ' r' → logprob: -15.000391960144043
    8. '-ra' → logprob: -15.875391960144043
    9. '-risk' → logprob: -16.25039291381836
    10. '[' → logprob: -16.25039291381836

Token 396: ')%' (ID: 57656)
  Prédit: ')%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')%' → logprob: -0.16137097775936127
    2. ')' → logprob: -2.0363709926605225
    3. '(r' → logprob: -4.036370754241943
    4. 'r' → logprob: -7.786370754241943
    5. ' )' → logprob: -8.286371231079102
    6. '(n' → logprob: -9.411371231079102
    7. ']%' → logprob: -10.536371231079102
    8. ')return' → logprob: -11.286371231079102
    9. ')n' → logprob: -11.661371231079102
    10. '()%' → logprob: -11.786371231079102

Token 397: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. '(M' → logprob: -13.250003814697266
    3. ' MOD' → logprob: -13.625003814697266
    4. '_MOD' → logprob: -14.250003814697266
    5. '.MOD' → logprob: -17.125003814697266
    6. '```' → logprob: -18.375003814697266
    7. '(Mod' → logprob: -18.500003814697266
    8. 'MO' → logprob: -19.750003814697266
    9. 'M' → logprob: -19.875003814697266
    10. '(' → logprob: -20.625003814697266

Token 398: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2306419610977173
    2. ' return' → logprob: -1.2306419610977173
    3. '	return' → logprob: -1.7306419610977173
    4. ')' → logprob: -2.2306418418884277
    5. ' ' → logprob: -2.6056418418884277
    6. 'return' → logprob: -4.105641841888428
    7. '<|end|>' → logprob: -4.230641841888428
    8. '
' → logprob: -4.730641841888428
    9. '	' → logprob: -5.480641841888428
    10. ')return' → logprob: -5.730641841888428

Token 399: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4994630217552185
    2. 'return' → logprob: -0.9994630217552185
    3. '	return' → logprob: -3.7494630813598633
    4. '   ' → logprob: -6.749463081359863
    5. ':return' → logprob: -7.999463081359863
    6. '```' → logprob: -11.749463081359863
    7. ' ' → logprob: -12.249463081359863
    8. '
' → logprob: -12.624463081359863
    9. ')return' → logprob: -12.749463081359863
    10. '{return' → logprob: -12.874463081359863

Token 400: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.029751179739832878
    2. ' t' → logprob: -3.5297510623931885
    3. '(t' → logprob: -14.27975082397461
    4. '`t' → logprob: -17.02975082397461
    5. '	t' → logprob: -17.15475082397461
    6. ' ' → logprob: -18.15475082397461
    7. ' ' → logprob: -18.15475082397461
    8. 'int' → logprob: -18.27975082397461
    9. '
' → logprob: -18.52975082397461
    10. ' (' → logprob: -20.02975082397461

Token 401: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 402: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3515639305114746
    2. ':' → logprob: -1.3515639305114746
    3. '#' → logprob: -2.2265639305114746
    4. '_' → logprob: -2.6015639305114746
    5. ' ' → logprob: -2.8515639305114746
    6. '[' → logprob: -2.9765639305114746
    7. '(' → logprob: -3.3515639305114746
    8. 'n' → logprob: -3.3515639305114746
    9. 'def' → logprob: -3.4765639305114746
    10. ',' → logprob: -3.6015639305114746

Token 403: ' factor' (ID: 12332)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3363633453845978
    2. 'n' → logprob: -1.3363633155822754
    3. 'pow' → logprob: -4.586363315582275
    4. 'solve' → logprob: -5.336363315582275
    5. 'ka' → logprob: -6.086363315582275
    6. 'factor' → logprob: -6.586363315582275
    7. 'mod' → logprob: -6.836363315582275
    8. ' main' → logprob: -7.086363315582275
    9. ' n' → logprob: -7.711363315582275
    10. 'power' → logprob: -8.336363792419434

Token 404: 'ization' (ID: 2860)
  Prédit: 'ize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ize' → logprob: -0.014896037988364697
    2. 'ization' → logprob: -5.139895915985107
    3. 'ialize' → logprob: -5.264895915985107
    4. 's' → logprob: -6.764895915985107
    5. '```' → logprob: -7.264895915985107
    6. '_' → logprob: -7.389895915985107
    7. 'ial' → logprob: -7.889895915985107
    8. 'int' → logprob: -8.514896392822266
    9. 'al' → logprob: -8.764896392822266
    10. 'iz' → logprob: -8.889896392822266

Token 405: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009021693258546293
    2. '(x' → logprob: -7.25090217590332
    3. '(num' → logprob: -9.12590217590332
    4. '(' → logprob: -9.75090217590332
    5. '(N' → logprob: -11.25090217590332
    6. ' (' → logprob: -11.62590217590332
    7. '(a' → logprob: -13.25090217590332
    8. 'def' → logprob: -13.62590217590332
    9. '(m' → logprob: -16.62590217590332
    10. '(k' → logprob: -17.25090217590332

Token 406: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11489535123109818
    2. '):' → logprob: -2.2398953437805176
    3. '(' → logprob: -6.489895343780518
    4. '(x' → logprob: -7.989895343780518
    5. ':' → logprob: -9.364895820617676
    6. '):
' → logprob: -10.614895820617676
    7. ' ):' → logprob: -10.989895820617676
    8. ')' → logprob: -11.239895820617676
    9. '(k' → logprob: -11.489895820617676
    10. '(num' → logprob: -11.489895820617676

Token 407: ' arr' (ID: 1724)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.06850814819335938
    2. '   ' → logprob: -3.3185081481933594
    3. 'f' → logprob: -4.318508148193359
    4. ' d' → logprob: -4.568508148193359
    5. 'r' → logprob: -6.318508148193359
    6. 'pf' → logprob: -6.818508148193359
    7. 'out' → logprob: -7.193508148193359
    8. 'res' → logprob: -7.443508148193359
    9. 'fact' → logprob: -8.19350814819336
    10. 'i' → logprob: -8.31850814819336

Token 408: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7024708390235901
    2. '=[]' → logprob: -0.7024708390235901
    3. '=[]
' → logprob: -4.952470779418945
    4. ' =' → logprob: -6.827470779418945
    5. '={}' → logprob: -7.202470779418945
    6. '[]' → logprob: -8.577470779418945
    7. '=[]
' → logprob: -9.327470779418945
    8. '=[' → logprob: -9.577470779418945
    9. '=[],' → logprob: -11.952470779418945
    10. '={}
' → logprob: -12.077470779418945

Token 409: ' t' (ID: 260)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6143805384635925
    2. ' i' → logprob: -0.8643805384635925
    3. 'd' → logprob: -3.6143805980682373
    4. ' d' → logprob: -4.739380359649658
    5. 'f' → logprob: -7.489380359649658
    6. '   ' → logprob: -7.614380359649658
    7. ' while' → logprob: -7.989380359649658
    8. 'while' → logprob: -8.489380836486816
    9. ' f' → logprob: -9.114380836486816
    10. 'x' → logprob: -9.239380836486816

Token 410: '=n' (ID: 47985)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04880242049694061
    2. '=n' → logprob: -3.048802375793457
    3. '=i' → logprob: -9.048802375793457
    4. ' =' → logprob: -9.548802375793457
    5. '=f' → logprob: -11.548802375793457
    6. '=p' → logprob: -12.298802375793457
    7. '=int' → logprob: -12.548802375793457
    8. '=t' → logprob: -12.923802375793457
    9. '=
' → logprob: -13.298802375793457
    10. '=x' → logprob: -13.923802375793457

Token 411: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.16765096783638
    2. '
' → logprob: -2.4176509380340576
    3. '=' → logprob: -3.0426509380340576
    4. ' while' → logprob: -5.167651176452637
    5. '2' → logprob: -5.917651176452637
    6. 'for' → logprob: -5.917651176452637
    7. ' ' → logprob: -6.917651176452637
    8. 'i' → logprob: -7.042651176452637
    9. '```' → logprob: -7.167651176452637
    10. '1' → logprob: -7.542651176452637

Token 412: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8825072646141052
    2. 'd' → logprob: -1.25750732421875
    3. ' i' → logprob: -2.00750732421875
    4. 'for' → logprob: -2.50750732421875
    5. 'f' → logprob: -2.88250732421875
    6. ' for' → logprob: -3.88250732421875
    7. ' d' → logprob: -5.00750732421875
    8. ' f' → logprob: -6.63250732421875
    9. '2' → logprob: -8.00750732421875
    10. ' ' → logprob: -8.13250732421875

Token 413: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010012515122070909
    2. ' i' → logprob: -7.251001358032227
    3. 'p' → logprob: -9.251001358032227
    4. 'x' → logprob: -9.501001358032227
    5. 'd' → logprob: -10.001001358032227
    6. 'j' → logprob: -10.626001358032227
    7. 'f' → logprob: -10.751001358032227
    8. 'a' → logprob: -10.751001358032227
    9. 'k' → logprob: -12.501001358032227
    10. '	i' → logprob: -13.626001358032227

Token 414: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02996973693370819
    2. 'in' → logprob: -3.5299696922302246
    3. ' ' → logprob: -8.529970169067383
    4. '1' → logprob: -12.029970169067383
    5. ' i' → logprob: -12.529970169067383
    6. '  ' → logprob: -12.529970169067383
    7. 'range' → logprob: -13.404970169067383
    8. '2' → logprob: -13.779970169067383
    9. '```' → logprob: -13.779970169067383
    10. '(' → logprob: -13.779970169067383

Token 415: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868878483772278
    2. 'range' → logprob: -1.136887788772583
    3. '[' → logprob: -11.386887550354004
    4. '	range' → logprob: -13.636887550354004
    5. '2' → logprob: -13.761887550354004
    6. ' ' → logprob: -14.011887550354004
    7. ' ra' → logprob: -14.261887550354004
    8. 'ra' → logprob: -14.261887550354004
    9. '1' → logprob: -14.636887550354004
    10. 'r' → logprob: -15.511887550354004

Token 416: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3137767016887665
    2. '2' → logprob: -1.3137767314910889
    3. ' ' → logprob: -7.81377649307251
    4. '1' → logprob: -9.188776969909668
    5. ' (' → logprob: -12.438776969909668
    6. '```' → logprob: -13.438776969909668
    7. ',' → logprob: -13.563776969909668
    8. '
' → logprob: -14.063776969909668
    9. '   ' → logprob: -14.563776969909668
    10. '	' → logprob: -15.813776969909668

Token 417: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010973571334034204
    2. '1' → logprob: -6.876097202301025
    3. ' ' → logprob: -9.751097679138184
    4. '(' → logprob: -12.001097679138184
    5. '２' → logprob: -17.126096725463867
    6. '   ' → logprob: -17.126096725463867
    7. '
' → logprob: -17.251096725463867
    8. '```' → logprob: -17.876096725463867
    9. '	' → logprob: -19.126096725463867
    10. 'int' → logprob: -19.376096725463867

Token 418: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2043870985507965
    2. ',int' → logprob: -1.7043870687484741
    3. ' ,' → logprob: -6.454387187957764
    4. ',t' → logprob: -7.079387187957764
    5. ',i' → logprob: -8.079386711120605
    6. ',(' → logprob: -9.204386711120605
    7. ',s' → logprob: -9.579386711120605
    8. ',n' → logprob: -9.954386711120605
    9. 'int' → logprob: -10.954386711120605
    10. '(int' → logprob: -12.329386711120605

Token 419: '(-' (ID: 8087)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.2577499449253082
    2. '(t' → logprob: -1.5077499151229858
    3. 'sqrt' → logprob: -5.757750034332275
    4. 't' → logprob: -6.132750034332275
    5. '(n' → logprob: -8.007749557495117
    6. '(i' → logprob: -9.507749557495117
    7. '(' → logprob: -10.132749557495117
    8. 'n' → logprob: -11.757749557495117
    9. 's' → logprob: -11.882749557495117
    10. '```' → logprob: -12.507749557495117

Token 420: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2690589725971222
    2. 't' → logprob: -1.8940589427947998
    3. '(' → logprob: -2.8940589427948
    4. 'n' → logprob: -3.8940589427948
    5. '1' → logprob: -5.519059181213379
    6. '(t' → logprob: -6.644059181213379
    7. '-' → logprob: -6.769059181213379
    8. '(-(' → logprob: -6.769059181213379
    9. '((-' → logprob: -7.644059181213379
    10. '(n' → logprob: -7.769059181213379

Token 421: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03139345347881317
    2. 'sqrt' → logprob: -3.781393527984619
    3. 't' → logprob: -5.031393527984619
    4. ' n' → logprob: -6.656393527984619
    5. '(n' → logprob: -9.281393051147461
    6. 's' → logprob: -9.406393051147461
    7. ' sqrt' → logprob: -9.781393051147461
    8. ' t' → logprob: -10.281393051147461
    9. ' ' → logprob: -11.156393051147461
    10. '(s' → logprob: -11.906393051147461

Token 422: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.19189782440662384
    2. '0' → logprob: -1.9418978691101074
    3. 'sqrt' → logprob: -4.191897869110107
    4. ' **' → logprob: -5.191897869110107
    5. '1' → logprob: -5.941897869110107
    6. ' ' → logprob: -6.316897869110107
    7. '(i' → logprob: -6.566897869110107
    8. 's' → logprob: -6.691897869110107
    9. '.sqrt' → logprob: -7.316897869110107
    10. 't' → logprob: -7.816897869110107

Token 423: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.309382373117842e-05
    2. '.' → logprob: -10.375033378601074
    3. ' ' → logprob: -13.375033378601074
    4. '(' → logprob: -15.125033378601074
    5. '```' → logprob: -18.375032424926758
    6. '
' → logprob: -18.500032424926758
    7. '-' → logprob: -19.000032424926758
    8. '00' → logprob: -20.000032424926758
    9. '    ' → logprob: -20.375032424926758
    10. '05' → logprob: -20.625032424926758

Token 424: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.040457421680912e-05
    2. '0' → logprob: -9.750070571899414
    3. '.' → logprob: -12.000070571899414
    4. '05' → logprob: -12.875070571899414
    5. '```' → logprob: -13.750070571899414
    6. '
' → logprob: -14.000070571899414
    7. '4' → logprob: -14.875070571899414
    8. '``' → logprob: -15.750070571899414
    9. '

' → logprob: -16.000070571899414
    10. '**' → logprob: -16.562570571899414

Token 425: '//' (ID: 393)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30654817819595337
    2. '.' → logprob: -1.5565481185913086
    3. '2' → logprob: -3.5565481185913086
    4. '**' → logprob: -3.9315481185913086
    5. '5' → logprob: -7.181548118591309
    6. '().' → logprob: -7.306548118591309
    7. ' .' → logprob: -7.306548118591309
    8. ')' → logprob: -7.431548118591309
    9. ')**' → logprob: -7.556548118591309
    10. '```' → logprob: -7.806548118591309

Token 426: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032241756562143564
    2. '2' → logprob: -5.7532243728637695
    3. ' ' → logprob: -10.37822437286377
    4. 'i' → logprob: -11.12822437286377
    5. ' i' → logprob: -14.75322437286377
    6. '0' → logprob: -16.253223419189453
    7. '3' → logprob: -17.003223419189453
    8. '  ' → logprob: -17.503223419189453
    9. '4' → logprob: -17.628223419189453
    10. '   ' → logprob: -17.628223419189453

Token 427: '))+' (ID: 103968)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.004684783983975649
    2. ')' → logprob: -5.629684925079346
    3. '))+' → logprob: -7.254684925079346
    4. '+' → logprob: -8.379684448242188
    5. ' )' → logprob: -9.629684448242188
    6. '1' → logprob: -10.754684448242188
    7. '))' → logprob: -10.879684448242188
    8. '2' → logprob: -11.879684448242188
    9. ')+(' → logprob: -12.004684448242188
    10. ')+"' → logprob: -12.504684448242188

Token 428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '+' → logprob: -15.87510871887207
    4. '   ' → logprob: -18.12510871887207
    5. '  ' → logprob: -18.75010871887207
    6. '
' → logprob: -18.87510871887207
    7. '{' → logprob: -19.37510871887207
    8. '2' → logprob: -19.50010871887207
    9. ' +' → logprob: -19.87510871887207
    10. ')' → logprob: -20.25010871887207

Token 429: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05859624594449997
    2. '):
' → logprob: -3.058596134185791
    3. ':' → logprob: -4.933596134185791
    4. ' ):' → logprob: -6.308596134185791
    5. '():' → logprob: -7.558596134185791
    6. ',' → logprob: -9.18359661102295
    7. ' ):
' → logprob: -9.18359661102295
    8. ' :' → logprob: -9.30859661102295
    9. '():
' → logprob: -10.18359661102295
    10. '(' → logprob: -10.80859661102295

Token 430: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7015810012817383
    2. ':' → logprob: -1.2015810012817383
    3. ' ' → logprob: -2.2015810012817383
    4. '       ' → logprob: -3.3265810012817383
    5. ' if' → logprob: -3.8265810012817383
    6. '<|end|>' → logprob: -4.701581001281738
    7. ' :' → logprob: -4.826581001281738
    8. '  ' → logprob: -5.326581001281738
    9. ':
' → logprob: -5.826581001281738
    10. ',' → logprob: -5.951581001281738

Token 431: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.245862364768982
    2. ' ' → logprob: -1.495862364768982
    3. ' if' → logprob: -1.495862364768982
    4. ':' → logprob: -1.745862364768982
    5. '    ' → logprob: -3.7458624839782715
    6. ' :' → logprob: -3.7458624839782715
    7. ' while' → logprob: -4.2458624839782715
    8. ' i' → logprob: -5.6208624839782715
    9. '1' → logprob: -5.6208624839782715
    10. '  ' → logprob: -5.7458624839782715

Token 432: ' not' (ID: 625)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.523173987865448
    2. ' t' → logprob: -0.898173987865448
    3. '(t' → logprob: -11.273174285888672
    4. ' ' → logprob: -11.523174285888672
    5. 'n' → logprob: -11.648174285888672
    6. ' n' → logprob: -12.273174285888672
    7. '   ' → logprob: -12.773174285888672
    8. '	t' → logprob: -12.773174285888672
    9. 'i' → logprob: -13.398174285888672
    10. ' i' → logprob: -13.648174285888672

Token 433: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4757823348045349
    2. ' t' → logprob: -0.9757823348045349
    3. '(t' → logprob: -6.47578239440918
    4. ' (' → logprob: -9.35078239440918
    5. ' n' → logprob: -10.35078239440918
    6. 'n' → logprob: -10.85078239440918
    7. ' ' → logprob: -11.85078239440918
    8. '(' → logprob: -12.10078239440918
    9. '(n' → logprob: -12.22578239440918
    10. '	t' → logprob: -12.60078239440918

Token 434: '%i' (ID: 157265)
  Prédit: '%i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.04937661066651344
    2. '%' → logprob: -3.0493767261505127
    3. ' %' → logprob: -7.174376487731934
    4. '%x' → logprob: -11.049376487731934
    5. '%e' → logprob: -12.424376487731934
    6. '%d' → logprob: -13.799376487731934
    7. '%n' → logprob: -14.424376487731934
    8. '%b' → logprob: -14.924376487731934
    9. ' ' → logprob: -15.424376487731934
    10. '%A' → logprob: -15.424376487731934

Token 435: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007676983950659633
    2. '==' → logprob: -7.625767707824707
    3. ':
' → logprob: -9.125767707824707
    4. ' :' → logprob: -9.625767707824707
    5. '<|end|>' → logprob: -10.375767707824707
    6. '=' → logprob: -10.625767707824707
    7. '):' → logprob: -10.625767707824707
    8. ' ==' → logprob: -12.375767707824707
    9. '0' → logprob: -12.500767707824707
    10. ' ' → logprob: -12.625767707824707

Token 436: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.30315494537353516
    2. ' while' → logprob: -1.9281549453735352
    3. '   ' → logprob: -2.303154945373535
    4. ' ' → logprob: -4.553154945373535
    5. ' arr' → logprob: -6.678154945373535
    6. 'while' → logprob: -6.928154945373535
    7. '```' → logprob: -7.178154945373535
    8. '    ' → logprob: -7.678154945373535
    9. ' t' → logprob: -8.178154945373535
    10. '  ' → logprob: -8.428154945373535

Token 437: ' c' (ID: 274)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.6109115481376648
    2. 'cnt' → logprob: -0.9859115481376648
    3. ' c' → logprob: -3.3609116077423096
    4. ' while' → logprob: -3.8609116077423096
    5. 'c' (adapté à ' c') → logprob: -4.4859113693237305
    6. '0' → logprob: -5.1109113693237305
    7. 'while' → logprob: -5.3609113693237305
    8. 'count' → logprob: -6.3609113693237305
    9. ' ' → logprob: -6.3609113693237305
    10. ' count' → logprob: -6.8609113693237305

Token 438: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001828457461670041
    2. 'ount' → logprob: -6.876828670501709
    3. 'nt' → logprob: -7.251828670501709
    4. ' =' → logprob: -9.75182819366455
    5. 'ounter' → logprob: -12.00182819366455
    6. '=count' → logprob: -12.62682819366455
    7. 't' → logprob: -12.75182819366455
    8. '0' → logprob: -13.12682819366455
    9. '+=' → logprob: -13.12682819366455
    10. 'cnt' → logprob: -13.12682819366455

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015028368216007948
    2. ' ' → logprob: -6.501502990722656
    3. '1' → logprob: -14.751502990722656
    4. '   ' → logprob: -16.814002990722656
    5. '
' → logprob: -17.876502990722656
    6. '  ' → logprob: -17.939002990722656
    7. '```' → logprob: -17.939002990722656
    8. ' ' → logprob: -18.814002990722656
    9. '۰' → logprob: -18.876502990722656
    10. '=' → logprob: -19.001502990722656

Token 440: '
' (ID: 198)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.4525192081928253
    2. '   ' → logprob: -1.202519178390503
    3. ' ' → logprob: -3.577519178390503
    4. '   
' → logprob: -4.452519416809082
    5. '<|end|>' → logprob: -4.827519416809082
    6. '  
' → logprob: -5.452519416809082
    7. ' while' → logprob: -5.952519416809082
    8. '```' → logprob: -6.702519416809082
    9. '	while' → logprob: -7.202519416809082
    10. ':' → logprob: -7.202519416809082

Token 441: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.2715991139411926
    2. ' ' → logprob: -1.6465990543365479
    3. ' while' → logprob: -3.646599054336548
    4. '   ' → logprob: -4.396599292755127
    5. 'while' → logprob: -5.646599292755127
    6. '	while' → logprob: -6.021599292755127
    7. '```' → logprob: -7.771599292755127
    8. '<|end|>' → logprob: -9.521598815917969
    9. 'While' → logprob: -10.271598815917969
    10. '``' → logprob: -10.771598815917969

Token 442: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5930540561676025
    2. 'while' (adapté à ' while') → logprob: -0.8430540561676025
    3. ' ' → logprob: -4.218053817749023
    4. '  ' → logprob: -6.468053817749023
    5. '	while' → logprob: -7.468053817749023
    6. '   ' → logprob: -10.343053817749023
    7. 't' → logprob: -10.343053817749023
    8. 'c' → logprob: -11.343053817749023
    9. '```' → logprob: -11.343053817749023
    10. ' t' → logprob: -11.593053817749023

Token 443: ' t' (ID: 260)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.9590140581130981
    2. 't' → logprob: -1.2090140581130981
    3. 'not' → logprob: -1.4590140581130981
    4. ' t' → logprob: -2.4590139389038086
    5. '(not' → logprob: -8.584013938903809
    6. '(t' → logprob: -10.334013938903809
    7. ' ' → logprob: -11.709013938903809
    8. '`t' → logprob: -11.959013938903809
    9. ' (' → logprob: -12.709013938903809
    10. 'Not' → logprob: -13.084013938903809

Token 444: '%i' (ID: 157265)
  Prédit: '%i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -8.673547563375905e-05
    2. '%x' → logprob: -10.375086784362793
    3. '%c' → logprob: -10.625086784362793
    4. '%' → logprob: -11.000086784362793
    5. '%d' → logprob: -12.125086784362793
    6. '%e' → logprob: -12.125086784362793
    7. ' %' → logprob: -12.875086784362793
    8. '%=' → logprob: -15.000086784362793
    9. '%n' → logprob: -15.500086784362793
    10. '%m' → logprob: -15.500086784362793

Token 445: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00603568134829402
    2. ' ==' → logprob: -5.131035804748535
    3. '%' → logprob: -10.006035804748535
    4. '0' → logprob: -10.131035804748535
    5. '=' → logprob: -12.381035804748535
    6. '()==' → logprob: -12.381035804748535
    7. '%i' → logprob: -12.506035804748535
    8. '%=' → logprob: -12.756035804748535
    9. ']==' → logprob: -13.256035804748535
    10. ')==' → logprob: -13.506035804748535

Token 446: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005530327325686812
    2. ' ' → logprob: -7.500553131103516
    3. '  ' → logprob: -16.875553131103516
    4. '   ' → logprob: -18.625553131103516
    5. '00' → logprob: -20.125553131103516
    6. ' ' → logprob: -21.000553131103516
    7. '    ' → logprob: -21.000553131103516
    8. '۰' → logprob: -21.000553131103516
    9. 'not' → logprob: -21.250553131103516
    10. '000' → logprob: -21.500553131103516

Token 447: ':c' (ID: 88289)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024849651381373405
    2. '  ' → logprob: -5.1498494148254395
    3. '      ' → logprob: -5.2748494148254395
    4. ' c' → logprob: -6.0248494148254395
    5. '	c' → logprob: -6.3998494148254395
    6. '       ' → logprob: -6.3998494148254395
    7. ':' → logprob: -6.6498494148254395
    8. ':
' → logprob: -6.7748494148254395
    9. ':c' → logprob: -6.7748494148254395
    10. '     ' → logprob: -7.5248494148254395

Token 448: '+=' (ID: 18287)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7972754836082458
    2. '+=' → logprob: -1.1722755432128906
    3. ' c' → logprob: -2.9222755432128906
    4. 't' → logprob: -2.9222755432128906
    5. ',c' → logprob: -3.7972755432128906
    6. '	c' → logprob: -3.7972755432128906
    7. '+c' → logprob: -3.7972755432128906
    8. '  ' → logprob: -4.047275543212891
    9. ' +=' → logprob: -4.297275543212891
    10. ' ' → logprob: -4.797275543212891

Token 449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '
' → logprob: -16.75007438659668
    4. '   ' → logprob: -17.00007438659668
    5. ',' → logprob: -18.56257438659668
    6. '0' → logprob: -19.18757438659668
    7. '```' → logprob: -19.18757438659668
    8. '１' → logprob: -19.25007438659668
    9. '  ' → logprob: -19.50007438659668
    10. '2' → logprob: -19.56257438659668

Token 450: ';t' (ID: 83219)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8000382781028748
    2. 't' → logprob: -1.1750383377075195
    3. ' t' → logprob: -2.0500383377075195
    4. ';t' → logprob: -3.1750383377075195
    5. '
' → logprob: -3.3000383377075195
    6. ',t' → logprob: -4.1750383377075195
    7. ',' → logprob: -4.9250383377075195
    8. '	t' → logprob: -5.5500383377075195
    9. '  ' → logprob: -5.6750383377075195
    10. ';' → logprob: -6.3000383377075195

Token 451: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.002000250155106187
    2. 't' → logprob: -7.252000331878662
    3. '=t' → logprob: -7.502000331878662
    4. ' //' → logprob: -8.001999855041504
    5. '/=' → logprob: -9.001999855041504
    6. ' t' → logprob: -9.001999855041504
    7. '//' → logprob: -9.251999855041504
    8. ';t' → logprob: -10.626999855041504
    9. '=' → logprob: -11.126999855041504
    10. ',t' → logprob: -11.251999855041504

Token 452: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.493430894101039e-05
    2. ' i' → logprob: -9.500075340270996
    3. '	i' → logprob: -19.37507438659668
    4. ' ' → logprob: -19.87507438659668
    5. '
' → logprob: -20.25007438659668
    6. '%i' → logprob: -20.50007438659668
    7. '```' → logprob: -21.37507438659668
    8. '   ' → logprob: -21.87507438659668
    9. '  ' → logprob: -22.37507438659668
    10. '{i' → logprob: -23.12507438659668

Token 453: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.44213640689849854
    2. '  ' → logprob: -1.6921364068984985
    3. ' i' → logprob: -2.817136287689209
    4. '<|end|>' → logprob: -3.692136287689209
    5. ' c' → logprob: -4.067136287689209
    6. ' return' → logprob: -4.442136287689209
    7. ',' → logprob: -4.817136287689209
    8. ' t' → logprob: -4.817136287689209
    9. '   ' → logprob: -4.817136287689209
    10. ' 
' → logprob: -4.942136287689209

Token 454: '  ' (ID: 256)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.05617869272828102
    2. ' ' → logprob: -3.0561788082122803
    3. 'arr' → logprob: -5.806178569793701
    4. '	arr' → logprob: -6.681178569793701
    5. '[arr' → logprob: -7.056178569793701
    6. '  ' → logprob: -7.806178569793701
    7. ' return' → logprob: -7.806178569793701
    8. '   ' → logprob: -8.18117904663086
    9. ' i' → logprob: -8.30617904663086
    10. ' 
' → logprob: -8.43117904663086

Token 455: ' arr' (ID: 1724)
  Prédit: ' arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.4723278880119324
    2. '   ' → logprob: -1.5973279476165771
    3. 'arr' (adapté à ' arr') → logprob: -1.9723279476165771
    4. '  ' → logprob: -3.972327947616577
    5. ' ' → logprob: -4.222327709197998
    6. '[arr' → logprob: -7.472327709197998
    7. '	arr' → logprob: -7.847327709197998
    8. '<arr' → logprob: -8.597328186035156
    9. '```' → logprob: -9.097328186035156
    10. '(arr' → logprob: -10.222328186035156

Token 456: '+' (ID: 10)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1272188127040863
    2. '.' → logprob: -2.127218723297119
    3. '.app' → logprob: -9.377219200134277
    4. '+' → logprob: -9.502219200134277
    5. '+.' → logprob: -9.752219200134277
    6. '.ap' → logprob: -10.377219200134277
    7. ' .' → logprob: -10.752219200134277
    8. '+=' → logprob: -12.127219200134277
    9. '.extend' → logprob: -12.252219200134277
    10. 'append' → logprob: -12.252219200134277

Token 457: '=[[' (ID: 112637)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.005179320462048054
    2. '=' → logprob: -5.505179405212402
    3. '[(' → logprob: -7.255179405212402
    4. '=[[' → logprob: -8.380179405212402
    5. '[' → logprob: -9.005179405212402
    6. '=[
' → logprob: -10.255179405212402
    7. ' [(' → logprob: -13.380179405212402
    8. '.append' → logprob: -13.880179405212402
    9. '+' → logprob: -13.880179405212402
    10. '=((' → logprob: -14.505179405212402

Token 458: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0001238004770129919
    2. ' i' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.375123977661133
    4. ' ' → logprob: -16.625123977661133
    5. '(i' → logprob: -17.125123977661133
    6. '	i' → logprob: -17.375123977661133
    7. ',i' → logprob: -18.250123977661133
    8. '
' → logprob: -18.500123977661133
    9. '[i' → logprob: -18.625123977661133
    10. '  ' → logprob: -19.125123977661133

Token 459: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.004741741344332695
    2. ',' → logprob: -5.379741668701172
    3. ' ,' → logprob: -9.254741668701172
    4. 'c' → logprob: -10.629741668701172
    5. ' c' → logprob: -14.379741668701172
    6. ',
' → logprob: -14.629741668701172
    7. '
' → logprob: -14.879741668701172
    8. '	c' → logprob: -16.379741668701172
    9. ',\
' → logprob: -17.504741668701172
    10. ',int' → logprob: -17.629741668701172

Token 460: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.004421216901391745
    2. ']' → logprob: -5.504421234130859
    3. ']]
' → logprob: -8.62942123413086
    4. ' ]]' → logprob: -9.00442123413086
    5. ' ]' → logprob: -11.25442123413086
    6. ')]' → logprob: -11.50442123413086
    7. ']]

' → logprob: -11.75442123413086
    8. ']
' → logprob: -12.62942123413086
    9. ']}' → logprob: -13.00442123413086
    10. ']],' → logprob: -14.00442123413086

Token 461: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.02791207656264305
    2. ' ' → logprob: -3.777912139892578
    3. 'return' → logprob: -5.402912139892578
    4. '	return' → logprob: -9.527912139892578
    5. ' 
' → logprob: -10.777912139892578
    6. '  ' → logprob: -11.402912139892578
    7. '  
' → logprob: -11.652912139892578
    8. ' i' → logprob: -11.652912139892578
    9. '   ' → logprob: -12.277912139892578
    10. ' if' → logprob: -12.652912139892578

Token 462: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3132859468460083
    2. ' t' → logprob: -1.3132859468460083
    3. ' ' → logprob: -11.063285827636719
    4. '(t' → logprob: -13.188285827636719
    5. '1' → logprob: -13.688285827636719
    6. '	t' → logprob: -13.813285827636719
    7. '_t' → logprob: -13.938285827636719
    8. ' not' → logprob: -14.563285827636719
    9. 'f' → logprob: -14.688285827636719
    10. ' ' → logprob: -14.938285827636719

Token 463: '!=' (ID: 11408)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.00013464801304508
    2. '!=' → logprob: -9.500134468078613
    3. ' >' → logprob: -9.750134468078613
    4. ' !=' → logprob: -14.750134468078613
    5. ' ' → logprob: -15.000134468078613
    6. '()>' → logprob: -15.500134468078613
    7. '```' → logprob: -15.625134468078613
    8. '">' → logprob: -15.875134468078613
    9. '
' → logprob: -16.62513542175293
    10. '1' → logprob: -16.75013542175293

Token 464: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1782583391759545e-05
    2. ' ' → logprob: -10.375031471252441
    3. 'n' → logprob: -14.875031471252441
    4. '0' → logprob: -16.000032424926758
    5. '
' → logprob: -17.000032424926758
    6. '>' → logprob: -17.125032424926758
    7. '   ' → logprob: -17.500032424926758
    8. '```' → logprob: -19.000032424926758
    9. '  ' → logprob: -19.500032424926758
    10. '

' → logprob: -19.875032424926758

Token 465: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2261544167995453
    2. ':
' → logprob: -1.6011544466018677
    3. ' :' → logprob: -7.976154327392578
    4. '[arr' → logprob: -8.726154327392578
    5. ' :
' → logprob: -9.476154327392578
    6. '<arr' → logprob: -9.851154327392578
    7. 'arr' → logprob: -10.101154327392578
    8. ':return' → logprob: -11.226154327392578
    9. '	arr' → logprob: -11.976154327392578
    10. ' arr' → logprob: -11.976154327392578

Token 466: 'arr' (ID: 1614)
  Prédit: ' arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' arr' → logprob: -0.06310843676328659
    2. 'arr' → logprob: -2.813108444213867
    3. '	arr' → logprob: -6.813108444213867
    4. '[arr' → logprob: -10.313108444213867
    5. '   ' → logprob: -13.313108444213867
    6. '<arr' → logprob: -13.438108444213867
    7. '
' → logprob: -13.813108444213867
    8. ' ' → logprob: -13.938108444213867
    9. '_arr' → logprob: -14.188108444213867
    10. '(arr' → logprob: -14.438108444213867

Token 467: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3245508670806885
    2. '.append' → logprob: -1.3245508670806885
    3. '+.' → logprob: -5.074550628662109
    4. '.' → logprob: -5.449550628662109
    5. '+=' → logprob: -7.949550628662109
    6. '+[' → logprob: -8.32455062866211
    7. '.+' → logprob: -9.82455062866211
    8. ' +=' → logprob: -10.82455062866211
    9. 'append' → logprob: -13.82455062866211
    10. ' .' → logprob: -13.94955062866211

Token 468: '=[[' (ID: 112637)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.12924714386463165
    2. '=[[' → logprob: -2.1292471885681152
    3. ' [[' → logprob: -6.379247188568115
    4. '([[' → logprob: -8.504246711730957
    5. '=' → logprob: -8.879246711730957
    6. ':[[' → logprob: -9.254246711730957
    7. '=[' → logprob: -9.629246711730957
    8. '[' → logprob: -9.879246711730957
    9. '+' → logprob: -10.879246711730957
    10. ' =' → logprob: -10.879246711730957

Token 469: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012916464766021818
    2. ' t' → logprob: -9.000128746032715
    3. '(t' → logprob: -12.250128746032715
    4. '	t' → logprob: -15.125128746032715
    5. '`t' → logprob: -15.125128746032715
    6. 'int' → logprob: -15.875128746032715
    7. '   ' → logprob: -16.00012969970703
    8. ' ' → logprob: -16.87512969970703
    9. '```' → logprob: -17.12512969970703
    10. '
' → logprob: -17.62512969970703

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022523177904076874
    2. '1' → logprob: -8.500225067138672
    3. ' ,' → logprob: -10.750225067138672
    4. ' ' → logprob: -15.500225067138672
    5. '```' → logprob: -16.750225067138672
    6. ',
' → logprob: -17.875225067138672
    7. '   ' → logprob: -18.625225067138672
    8. '  ' → logprob: -19.000225067138672
    9. '0' → logprob: -19.125225067138672
    10. '
' → logprob: -19.250225067138672

Token 471: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '
' → logprob: -18.750015258789062
    4. '   ' → logprob: -19.375015258789062
    5. '１' → logprob: -19.812515258789062
    6. '```' → logprob: -19.812515258789062
    7. ']' → logprob: -19.875015258789062
    8. ']]' → logprob: -20.187515258789062
    9. '  ' → logprob: -20.312515258789062
    10. '

' → logprob: -20.687515258789062

Token 472: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.25222158432006836
    2. ']]
' → logprob: -1.5022215843200684
    3. ']]

' → logprob: -8.502222061157227
    4. ']]
' → logprob: -10.127222061157227
    5. ']' → logprob: -10.752222061157227
    6. ' ]]' → logprob: -11.127222061157227
    7. ']
' → logprob: -11.877222061157227
    8. ' ]]
' → logprob: -13.002222061157227
    9. ']])
' → logprob: -14.502222061157227
    10. '']]' → logprob: -14.502222061157227

Token 473: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0019348275382071733
    2. '   ' → logprob: -7.001935005187988
    3. 'return' → logprob: -7.376935005187988
    4. '	return' → logprob: -8.001935005187988
    5. ' ' → logprob: -9.876935005187988
    6. ':return' → logprob: -11.876935005187988
    7. '<|end|>' → logprob: -14.376935005187988
    8. ')return' → logprob: -14.501935005187988
    9. '{return' → logprob: -14.501935005187988
    10. ' arr' → logprob: -15.001935005187988

Token 474: ' not' (ID: 625)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -1.0160115957260132
    2. 'n' → logprob: -1.1410115957260132
    3. 'len' → logprob: -2.7660117149353027
    4. 'not' → logprob: -2.8910117149353027
    5. ' not' → logprob: -3.0160117149353027
    6. ' n' → logprob: -3.0160117149353027
    7. '__' → logprob: -3.3910117149353027
    8. ' len' → logprob: -4.141011714935303
    9. 't' → logprob: -4.391011714935303
    10. '_' → logprob: -4.391011714935303

Token 475: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.5895237922668457
    2. ' arr' → logprob: -0.8395237922668457
    3. ' n' → logprob: -4.964523792266846
    4. 'n' → logprob: -5.089523792266846
    5. ' isinstance' → logprob: -8.839523315429688
    6. '_arr' → logprob: -9.839523315429688
    7. '(arr' → logprob: -9.964523315429688
    8. '	arr' → logprob: -10.089523315429688
    9. '__' → logprob: -11.714523315429688
    10. ' len' → logprob: -12.089523315429688

Token 476: ':' (ID: 25)
  Prédit: ':return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':return' → logprob: -0.25214532017707825
    2. ':' → logprob: -1.5021452903747559
    3. ':
' → logprob: -8.502145767211914
    4. ' :' → logprob: -11.752145767211914
    5. ':def' → logprob: -12.877145767211914
    6. 'return' → logprob: -14.377145767211914
    7. ':list' → logprob: -14.502145767211914
    8. ':[[' → logprob: -14.627145767211914
    9. ':=' → logprob: -14.877145767211914
    10. '{return' → logprob: -15.377145767211914

Token 477: 'arr' (ID: 1614)
  Prédit: 'arr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.08866579830646515
    2. ' arr' → logprob: -3.213665723800659
    3. 'return' → logprob: -3.338665723800659
    4. ' return' → logprob: -4.963665962219238
    5. '[[' → logprob: -6.588665962219238
    6. '[arr' → logprob: -7.213665962219238
    7. ' [[' → logprob: -11.338665962219238
    8. '	arr' → logprob: -11.463665962219238
    9. '[['' → logprob: -11.463665962219238
    10. '[(' → logprob: -12.088665962219238

Token 478: '=[[' (ID: 112637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2624024748802185
    2. '=[]' → logprob: -1.7624025344848633
    3. '=[' → logprob: -3.0124025344848633
    4. '+' → logprob: -4.887402534484863
    5. '+=' → logprob: -6.762402534484863
    6. '.append' → logprob: -7.262402534484863
    7. '=[]
' → logprob: -8.012402534484863
    8. '==' → logprob: -9.387402534484863
    9. ' =' → logprob: -10.262402534484863
    10. '=[[' → logprob: -10.387402534484863

Token 479: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004543453920632601
    2. '[n' → logprob: -6.004543304443359
    3. '(n' → logprob: -6.254543304443359
    4. '0' → logprob: -10.00454330444336
    5. '1' → logprob: -10.00454330444336
    6. ')n' → logprob: -11.37954330444336
    7. ']' → logprob: -11.50454330444336
    8. ' n' → logprob: -11.87954330444336
    9. ']]' → logprob: -12.37954330444336
    10. '
' → logprob: -12.62954330444336

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011892046313732862
    2. ' ,' → logprob: -9.12511920928955
    3. '1' → logprob: -11.62511920928955
    4. ',
' → logprob: -14.12511920928955
    5. ' ' → logprob: -16.250118255615234
    6. '
' → logprob: -17.125118255615234
    7. '0' → logprob: -17.375118255615234
    8. '2' → logprob: -17.875118255615234
    9. '  ' → logprob: -18.875118255615234
    10. '   ' → logprob: -19.000118255615234

Token 481: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018208740220870823
    2. ' ' → logprob: -9.000182151794434
    3. '0' → logprob: -9.750182151794434
    4. '-' → logprob: -16.250181198120117
    5. ']' → logprob: -16.875181198120117
    6. '
' → logprob: -17.000181198120117
    7. '   ' → logprob: -17.000181198120117
    8. '  ' → logprob: -17.375181198120117
    9. ']]' → logprob: -17.437681198120117
    10. '(' → logprob: -17.625181198120117

Token 482: ']]
' (ID: 29446)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.5499898791313171
    2. ']' → logprob: -1.549989938735962
    3. ']]
' → logprob: -1.674989938735962
    4. ']]' → logprob: -3.799989938735962
    5. ' ]
' → logprob: -7.799989700317383
    6. ' ]' → logprob: -8.299989700317383
    7. ']
' → logprob: -8.924989700317383
    8. ' ]]
' → logprob: -9.424989700317383
    9. ' ]]' → logprob: -9.674989700317383
    10. ']]

' → logprob: -9.799989700317383

Token 483: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.015649287030100822
    2. '	return' → logprob: -4.265649318695068
    3. '   ' → logprob: -7.015649318695068
    4. 'return' → logprob: -7.640649318695068
    5. ' ' → logprob: -9.76564884185791
    6. ':return' → logprob: -10.51564884185791
    7. '{return' → logprob: -12.39064884185791
    8. ')return' → logprob: -13.01564884185791
    9. '```' → logprob: -13.14064884185791
    10. '<|end|>' → logprob: -13.39064884185791

Token 484: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.00033546582562848926
    2. ' arr' → logprob: -8.000335693359375
    3. '[arr' → logprob: -17.750335693359375
    4. '(arr' → logprob: -18.250335693359375
    5. '	arr' → logprob: -19.625335693359375
    6. '_arr' → logprob: -21.625335693359375
    7. '$arr' → logprob: -22.250335693359375
    8. 'ar' → logprob: -22.750335693359375
    9. '.arr' → logprob: -23.500335693359375
    10. '<arr' → logprob: -23.750335693359375

Token 485: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 486: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7640960216522217
    2. ':' → logprob: -1.0140960216522217
    3. '[' → logprob: -3.2640960216522217
    4. '<|end|>' → logprob: -3.2640960216522217
    5. '
' → logprob: -3.7640960216522217
    6. '):' → logprob: -4.264096260070801
    7. 'def' → logprob: -4.389096260070801
    8. ',' → logprob: -4.639096260070801
    9. ' ' → logprob: -4.764096260070801
    10. '#' → logprob: -5.514096260070801

Token 487: ' make' (ID: 1520)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.15841464698314667
    2. ' main' → logprob: -2.908414602279663
    3. 'pow' → logprob: -2.908414602279663
    4. 'prime' → logprob: -4.408414840698242
    5. 'factor' → logprob: -5.158414840698242
    6. 'solve' → logprob: -5.658414840698242
    7. 'g' → logprob: -5.908414840698242
    8. ' gcd' → logprob: -6.033414840698242
    9. 'binary' → logprob: -6.158414840698242
    10. 'is' → logprob: -6.658414840698242

Token 488: '_div' (ID: 36926)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.7641882300376892
    2. '_arr' → logprob: -2.264188289642334
    3. 'arr' → logprob: -2.389188289642334
    4. '_list' → logprob: -2.639188289642334
    5. '_' → logprob: -3.014188289642334
    6. '_div' → logprob: -3.014188289642334
    7. '_array' → logprob: -3.639188289642334
    8. '_dp' → logprob: -3.889188289642334
    9. '_comb' → logprob: -4.139188289642334
    10. '_mod' → logprob: -4.389188289642334

Token 489: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.003674417734146118
    2. 's' → logprob: -5.753674507141113
    3. '```' → logprob: -9.253674507141113
    4. 'iders' → logprob: -9.503674507141113
    5. '_' → logprob: -10.003674507141113
    6. 'isible' → logprob: -10.253674507141113
    7. 'isor' → logprob: -10.628674507141113
    8. '=' → logprob: -10.753674507141113
    9. '``' → logprob: -10.878674507141113
    10. '()' → logprob: -11.003674507141113

Token 490: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0011839192593470216
    2. 'or' → logprob: -6.751183986663818
    3. '```' → logprob: -11.62618350982666
    4. '_' → logprob: -14.62618350982666
    5. 'iors' → logprob: -14.62618350982666
    6. 'tors' → logprob: -14.75118350982666
    7. '
' → logprob: -14.75118350982666
    8. '`' → logprob: -14.87618350982666
    9. 'rors' → logprob: -15.37618350982666
    10. '   ' → logprob: -15.37618350982666

Token 491: '(x' (ID: 4061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -5.9153885558771435e-06
    2. '(' → logprob: -12.125005722045898
    3. ' (' → logprob: -15.250005722045898
    4. 'n' → logprob: -16.2500057220459
    5. '(
' → logprob: -16.5000057220459
    6. '(N' → logprob: -17.1250057220459
    7. '(x' → logprob: -18.6250057220459
    8. '(num' → logprob: -19.6250057220459
    9. 'def' → logprob: -19.8750057220459
    10. '(a' → logprob: -20.8750057220459

Token 492: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008729901164770126
    2. '):
' → logprob: -7.25087308883667
    3. ' ):' → logprob: -9.500872611999512
    4. ')' → logprob: -9.750872611999512
    5. '(x' → logprob: -11.125872611999512
    6. ':' → logprob: -11.625872611999512
    7. '(n' → logprob: -12.750872611999512
    8. '(' → logprob: -13.375872611999512
    9. '):
' → logprob: -13.625872611999512
    10. '):

' → logprob: -15.125872611999512

Token 493: ' D' (ID: 415)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.049651265144348145
    2. 'res' → logprob: -3.4246511459350586
    3. '   ' → logprob: -5.799651145935059
    4. 'ret' → logprob: -6.049651145935059
    5. ' divis' → logprob: -6.049651145935059
    6. '	div' → logprob: -6.299651145935059
    7. 'arr' → logprob: -6.549651145935059
    8. 'out' → logprob: -6.674651145935059
    9. 'r' → logprob: -7.049651145935059
    10. ' div' → logprob: -7.049651145935059

Token 494: '=[]
' (ID: 63466)
  Prédit: '=[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[]' → logprob: -0.026640232652425766
    2. '=' → logprob: -4.02664041519165
    3. '=[' → logprob: -5.15164041519165
    4. '=[]
' → logprob: -6.52664041519165
    5. '={}' → logprob: -7.02664041519165
    6. ' =' → logprob: -8.776639938354492
    7. '=set' → logprob: -9.401639938354492
    8. '=[]
' → logprob: -10.526639938354492
    9. '=[],' → logprob: -11.526639938354492
    10. ',' → logprob: -11.526639938354492

Token 495: ' for' (ID: 395)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.019284360110759735
    2. 'for' → logprob: -4.269284248352051
    3. ' i' → logprob: -5.519284248352051
    4. ' for' → logprob: -7.019284248352051
    5. '   ' → logprob: -8.89428424835205
    6. 'd' → logprob: -9.76928424835205
    7. ' ' → logprob: -12.51928424835205
    8. '	i' → logprob: -12.89428424835205
    9. 'import' → logprob: -13.64428424835205
    10. 'r' → logprob: -14.14428424835205

Token 496: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00044092073221690953
    2. ' i' → logprob: -8.00044059753418
    3. 'd' → logprob: -9.37544059753418
    4. 'a' → logprob: -11.62544059753418
    5. 'k' → logprob: -12.37544059753418
    6. 'j' → logprob: -12.62544059753418
    7. '	i' → logprob: -14.50044059753418
    8. 'y' → logprob: -14.62544059753418
    9. 'p' → logprob: -14.87544059753418
    10. 'f' → logprob: -15.12544059753418

Token 497: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07004103064537048
    2. 'in' → logprob: -2.6950409412384033
    3. ' ' → logprob: -9.570040702819824
    4. 'range' → logprob: -11.320040702819824
    5. 'n' → logprob: -11.570040702819824
    6. '1' → logprob: -13.195040702819824
    7. ' i' → logprob: -13.195040702819824
    8. 'd' → logprob: -13.445040702819824
    9. '  ' → logprob: -13.570040702819824
    10. '(' → logprob: -13.570040702819824

Token 498: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061967913061380386
    2. ' range' → logprob: -2.8119678497314453
    3. '	range' → logprob: -16.311967849731445
    4. 'r' → logprob: -17.436967849731445
    5. 'rang' → logprob: -17.811967849731445
    6. 'ra' → logprob: -17.811967849731445
    7. ' ' → logprob: -17.811967849731445
    8. '(range' → logprob: -17.936967849731445
    9. 'ran' → logprob: -18.061967849731445
    10. '[' → logprob: -18.436967849731445

Token 499: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017037445213645697
    2. '1' → logprob: -6.37670373916626
    3. ' ' → logprob: -14.126704216003418
    4. ' (' → logprob: -14.376704216003418
    5. '
' → logprob: -15.501704216003418
    6. 'int' → logprob: -17.3767032623291
    7. '	' → logprob: -17.3767032623291
    8. ',' → logprob: -17.6267032623291
    9. '(int' → logprob: -18.0017032623291
    10. '```' → logprob: -18.0017032623291

Token 500: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -9.875052452087402
    3. '(' → logprob: -14.750052452087402
    4. 'int' → logprob: -16.250051498413086
    5. '１' → logprob: -16.875051498413086
    6. '2' → logprob: -17.125051498413086
    7. '
' → logprob: -18.375051498413086
    8. 'x' → logprob: -19.125051498413086
    9. '   ' → logprob: -19.375051498413086
    10. '```' → logprob: -20.000051498413086

Token 501: ',int' (ID: 20909)
  Prédit: ',x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.6491568684577942
    2. ',' → logprob: -1.1491568088531494
    3. ',i' → logprob: -1.8991568088531494
    4. ',int' → logprob: -4.8991570472717285
    5. ',(' → logprob: -6.3991570472717285
    6. ' ,' → logprob: -6.3991570472717285
    7. ',len' → logprob: -9.14915657043457
    8. 'x' → logprob: -11.77415657043457
    9. '(x' → logprob: -12.27415657043457
    10. ',l' → logprob: -13.27415657043457

Token 502: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0002753981971181929
    2. 'x' → logprob: -8.500275611877441
    3. '(s' → logprob: -10.500275611877441
    4. '(-' → logprob: -10.750275611877441
    5. '((' → logprob: -11.000275611877441
    6. '(' → logprob: -12.875275611877441
    7. ' (' → logprob: -13.250275611877441
    8. 'sqrt' → logprob: -14.625275611877441
    9. '(pow' → logprob: -14.625275611877441
    10. '((-' → logprob: -15.750275611877441

Token 503: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16314539313316345
    2. '(x' → logprob: -2.2881453037261963
    3. '+' → logprob: -3.1631453037261963
    4. '(' → logprob: -5.538145542144775
    5. ' (' → logprob: -6.788145542144775
    6. '+(' → logprob: -7.663145542144775
    7. '+x' → logprob: -8.538145065307617
    8. ' **' → logprob: -8.663145065307617
    9. '0' → logprob: -8.913145065307617
    10. '
' → logprob: -9.163145065307617

Token 504: '.' (ID: 13)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003224295098334551
    2. '.' → logprob: -5.7532243728637695
    3. '(' → logprob: -10.00322437286377
    4. '(.' → logprob: -14.37822437286377
    5. ' ' → logprob: -15.00322437286377
    6. '2' → logprob: -15.37822437286377
    7. '+' → logprob: -16.128223419189453
    8. '(x' → logprob: -16.253223419189453
    9. ' .' → logprob: -16.378223419189453
    10. '+.' → logprob: -17.628223419189453

Token 505: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005264829844236374
    2. '0' → logprob: -5.380264759063721
    3. '.' → logprob: -7.380264759063721
    4. '(' → logprob: -12.005265235900879
    5. ' ' → logprob: -12.255265235900879
    6. '```' → logprob: -12.880265235900879
    7. '
' → logprob: -13.005265235900879
    8. '

' → logprob: -13.505265235900879
    9. '{' → logprob: -14.130265235900879
    10. '   ' → logprob: -14.380265235900879

Token 506: ')+' (ID: 16161)
  Prédit: '()+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()+' → logprob: -0.018263379111886024
    2. '()' → logprob: -4.518263339996338
    3. '+' → logprob: -5.393263339996338
    4. '(' → logprob: -6.268263339996338
    5. '0' → logprob: -7.893263339996338
    6. ' +' → logprob: -9.018263816833496
    7. '().' → logprob: -9.268263816833496
    8. ' ()' → logprob: -9.893263816833496
    9. ')+' → logprob: -10.393263816833496
    10. '2' → logprob: -10.768263816833496

Token 507: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2007883671903983e-05
    2. ' ' → logprob: -10.750021934509277
    3. '(' → logprob: -15.500021934509277
    4. '(i' → logprob: -16.250022888183594
    5. '2' → logprob: -16.375022888183594
    6. '```' → logprob: -17.375022888183594
    7. '+' → logprob: -17.625022888183594
    8. '   ' → logprob: -18.625022888183594
    9. '(x' → logprob: -18.750022888183594
    10. 'i' → logprob: -18.750022888183594

Token 508: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07397951930761337
    2. ':' → logprob: -3.073979616165161
    3. '):' → logprob: -4.698979377746582
    4. ' ):
' → logprob: -4.823979377746582
    5. ':
' → logprob: -5.073979377746582
    6. ',' → logprob: -7.573979377746582
    7. ' :
' → logprob: -8.323979377746582
    8. ' ' → logprob: -8.323979377746582
    9. '   ' → logprob: -8.698979377746582
    10. ' :' → logprob: -8.698979377746582

Token 509: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7946552038192749
    2. ' if' → logprob: -0.9196552038192749
    3. '       ' → logprob: -3.0446553230285645
    4. '	' → logprob: -3.1696553230285645
    5. '<|end|>' → logprob: -3.4196553230285645
    6. '   ' → logprob: -4.2946553230285645
    7. '	if' → logprob: -4.6696553230285645
    8. ',' → logprob: -6.9196553230285645
    9. '	   ' → logprob: -7.4196553230285645
    10. 'if' → logprob: -7.7946553230285645

Token 510: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11226359754800797
    2. '       ' → logprob: -3.3622636795043945
    3. 'if' (adapté à ' if') → logprob: -3.4872636795043945
    4. ' ' → logprob: -3.9872636795043945
    5. '   ' → logprob: -4.3622636795043945
    6. '	if' → logprob: -5.4872636795043945
    7. '    ' → logprob: -6.1122636795043945
    8. '	' → logprob: -7.1122636795043945
    9. '<|end|>' → logprob: -7.1122636795043945
    10. '  ' → logprob: -8.112263679504395

Token 511: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6931559443473816
    2. ' x' → logprob: -0.6931559443473816
    3. '(x' → logprob: -12.318156242370605
    4. ' ' → logprob: -12.818156242370605
    5. '	x' → logprob: -14.568156242370605
    6. ' not' → logprob: -14.818156242370605
    7. ' (' → logprob: -15.318156242370605
    8. '   ' → logprob: -16.06815528869629
    9. ' ' → logprob: -16.44315528869629
    10. '  ' → logprob: -16.44315528869629

Token 512: '%i' (ID: 157265)
  Prédit: '%i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.0016038904432207346
    2. '%' → logprob: -6.751604080200195
    3. ' %' → logprob: -7.751604080200195
    4. '%x' → logprob: -12.751604080200195
    5. '%e' → logprob: -15.376604080200195
    6. '%d' → logprob: -16.251604080200195
    7. '%D' → logprob: -16.876604080200195
    8. '%s' → logprob: -16.876604080200195
    9. '%
' → logprob: -16.876604080200195
    10. '%c' → logprob: -17.876604080200195

Token 513: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0022147269919514656
    2. ' ==' → logprob: -6.1272149085998535
    3. '=' → logprob: -11.002214431762695
    4. '0' → logprob: -11.877214431762695
    5. '==
' → logprob: -13.252214431762695
    6. '===' → logprob: -13.502214431762695
    7. ')==' → logprob: -14.002214431762695
    8. ']==' → logprob: -14.002214431762695
    9. '()==' → logprob: -14.377214431762695
    10. '```' → logprob: -15.127214431762695

Token 514: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012356207298580557
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -16.875123977661133
    4. '  ' → logprob: -17.625123977661133
    5. '    ' → logprob: -18.375123977661133
    6. '00' → logprob: -19.125123977661133
    7. '۰' → logprob: -19.250123977661133
    8. '=' → logprob: -19.875123977661133
    9. '```' → logprob: -19.875123977661133
    10. '<|end|>' → logprob: -20.125123977661133

Token 515: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6922515034675598
    2. '       ' → logprob: -1.192251443862915
    3. ':
' → logprob: -1.692251443862915
    4. ',' → logprob: -5.067251682281494
    5. ',D' → logprob: -6.442251682281494
    6. ' :' → logprob: -6.942251682281494
    7. '   ' → logprob: -7.067251682281494
    8. ' :
' → logprob: -7.692251682281494
    9. ':D' → logprob: -8.192251205444336
    10. '      ' → logprob: -8.442251205444336

Token 516: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046982116997241974
    2. ' D' → logprob: -3.5469820499420166
    3. '    ' → logprob: -4.421982288360596
    4. '     ' → logprob: -6.421982288360596
    5. '   ' → logprob: -6.546982288360596
    6. 'D' → logprob: -6.796982288360596
    7. '      ' → logprob: -7.546982288360596
    8. '	   ' → logprob: -9.171981811523438
    9. ' ' → logprob: -9.296981811523438
    10. '           ' → logprob: -10.421981811523438

Token 517: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' (adapté à ' D') → logprob: -0.007698895409703255
    2. ' D' → logprob: -4.882699012756348
    3. '       ' → logprob: -10.007699012756348
    4. '   ' → logprob: -10.632699012756348
    5. 'if' → logprob: -11.632699012756348
    6. ' ' → logprob: -12.257699012756348
    7. '	D' → logprob: -12.382699012756348
    8. ' if' → logprob: -12.632699012756348
    9. '
' → logprob: -13.757699012756348
    10. '           ' → logprob: -14.757699012756348

Token 518: '+' (ID: 10)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5786275267601013
    2. '.append' → logprob: -0.8286275267601013
    3. '+.' → logprob: -6.078627586364746
    4. ' .' → logprob: -9.328627586364746
    5. '.extend' → logprob: -9.328627586364746
    6. '+=' → logprob: -9.328627586364746
    7. '+' → logprob: -9.328627586364746
    8. '.ap' → logprob: -10.828627586364746
    9. '.app' → logprob: -11.578627586364746
    10. ' +=' → logprob: -12.828627586364746

Token 519: '=[' (ID: 13370)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006589963100850582
    2. '[' → logprob: -5.256589889526367
    3. '=[' → logprob: -7.131589889526367
    4. '.append' → logprob: -8.506589889526367
    5. '[x' → logprob: -9.381589889526367
    6. '[ip' → logprob: -10.006589889526367
    7. '[I' → logprob: -10.131589889526367
    8. '[idx' → logprob: -10.131589889526367
    9. '[ii' → logprob: -10.881589889526367
    10. '[j' → logprob: -11.131589889526367

Token 520: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0004311460361350328
    2. ' i' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.625431060791016
    4. '	i' → logprob: -17.125431060791016
    5. '  ' → logprob: -17.250431060791016
    6. ' ' → logprob: -17.500431060791016
    7. '
' → logprob: -17.750431060791016
    8. '{i' → logprob: -18.125431060791016
    9. '[i' → logprob: -18.250431060791016
    10. '    ' → logprob: -20.000431060791016

Token 521: ']
' (ID: 1592)
  Prédit: ',i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',i' → logprob: -1.0744878053665161
    2. ',' → logprob: -1.1994878053665161
    3. ',x' → logprob: -1.3244878053665161
    4. ']
' → logprob: -2.8244876861572266
    5. ']' → logprob: -4.449487686157227
    6. '       ' → logprob: -4.949487686157227
    7. ',D' → logprob: -5.199487686157227
    8. ' ,' → logprob: -5.449487686157227
    9. ',
' → logprob: -6.324487686157227
    10. ',d' → logprob: -8.199487686157227

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.147740689106286e-05
    2. ' if' → logprob: -10.25007152557373
    3. '        
' → logprob: -11.25007152557373
    4. 'if' → logprob: -11.75007152557373
    5. '   ' → logprob: -12.75007152557373
    6. ',' → logprob: -12.75007152557373
    7. '      ' → logprob: -13.12507152557373
    8. '```' → logprob: -13.25007152557373
    9. '
' → logprob: -13.62507152557373
    10. '           ' → logprob: -14.00007152557373

Token 523: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006650181603617966
    2. '       ' → logprob: -7.500665187835693
    3. ' if' → logprob: -9.250664710998535
    4. '
' → logprob: -11.125664710998535
    5. '        
' → logprob: -14.875664710998535
    6. '```' → logprob: -15.125664710998535
    7. '	if' → logprob: -15.875664710998535
    8. ';if' → logprob: -16.75066566467285
    9. '​
' → logprob: -16.87566566467285
    10. '﻿' → logprob: -17.00066566467285

Token 524: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05952272564172745
    2. 'x' → logprob: -2.9345226287841797
    3. ' i' → logprob: -5.55952262878418
    4. '(i' → logprob: -7.55952262878418
    5. ' x' → logprob: -8.68452262878418
    6. '   ' → logprob: -10.30952262878418
    7. '(x' → logprob: -10.43452262878418
    8. ' (' → logprob: -11.05952262878418
    9. ' ' → logprob: -12.55952262878418
    10. '  ' → logprob: -13.30952262878418

Token 525: '!=' (ID: 11408)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.4772110879421234
    2. '!=' → logprob: -0.9772111177444458
    3. '*' → logprob: -6.477210998535156
    4. ' !=' → logprob: -6.602210998535156
    5. '*x' → logprob: -9.477210998535156
    6. '**' → logprob: -9.852210998535156
    7. '!=(' → logprob: -10.352210998535156
    8. 'i' → logprob: -10.727210998535156
    9. ']!=' → logprob: -11.227210998535156
    10. '!==' → logprob: -11.477210998535156

Token 526: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00015860427811276168
    2. ' x' → logprob: -8.750158309936523
    3. '(x' → logprob: -16.625158309936523
    4. '	x' → logprob: -16.750158309936523
    5. '   ' → logprob: -17.375158309936523
    6. ' ' → logprob: -17.500158309936523
    7. '
' → logprob: -17.750158309936523
    8. '```' → logprob: -18.250158309936523
    9. ' ' → logprob: -19.250158309936523
    10. '  ' → logprob: -19.875158309936523

Token 527: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -2.9160102712921798e-05
    2. '/i' → logprob: -10.750029563903809
    3. ' //' → logprob: -12.375029563903809
    4. '//=' → logprob: -13.250029563903809
    5. 'i' → logprob: -14.250029563903809
    6. '
' → logprob: -15.250029563903809
    7. '```' → logprob: -15.250029563903809
    8. '//
' → logprob: -16.250028610229492
    9. '#' → logprob: -16.500028610229492
    10. '   ' → logprob: -16.875028610229492

Token 528: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.612634362885728e-05
    2. ' i' → logprob: -9.500076293945312
    3. '   ' → logprob: -14.500076293945312
    4. ' ' → logprob: -14.500076293945312
    5. '  ' → logprob: -16.125076293945312
    6. '	i' → logprob: -16.625076293945312
    7. '```' → logprob: -17.625076293945312
    8. '
' → logprob: -17.750076293945312
    9. '    ' → logprob: -18.125076293945312
    10. '
' → logprob: -18.375076293945312

Token 529: ':D' (ID: 98485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.33330363035202026
    2. ':
' → logprob: -1.333303689956665
    3. ':D' → logprob: -4.083303451538086
    4. ' and' → logprob: -6.208303451538086
    5. '       ' → logprob: -7.833303451538086
    6. ' :' → logprob: -8.458303451538086
    7. '           ' → logprob: -9.333303451538086
    8. ' D' → logprob: -9.833303451538086
    9. 'and' → logprob: -9.833303451538086
    10. ' :
' → logprob: -10.208303451538086

Token 530: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008666928857564926
    2. '.' → logprob: -5.7586669921875
    3. '.append' → logprob: -6.2586669921875
    4. '+D' → logprob: -6.2586669921875
    5. '+[' → logprob: -7.3836669921875
    6. '+=' → logprob: -7.5086669921875
    7. '[' → logprob: -8.8836669921875
    8. '           ' → logprob: -10.0086669921875
    9. '[D' → logprob: -10.1336669921875
    10. ' +' → logprob: -10.2586669921875

Token 531: '=[' (ID: 13370)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.46264922618865967
    2. '[i' → logprob: -1.4626492261886597
    3. '=[' → logprob: -2.087649345397949
    4. '.append' → logprob: -5.462649345397949
    5. '[b' → logprob: -6.712649345397949
    6. '[ind' → logprob: -6.837649345397949
    7. '+' → logprob: -6.962649345397949
    8. '[n' → logprob: -6.962649345397949
    9. '[x' → logprob: -6.962649345397949
    10. '[idx' → logprob: -7.462649345397949

Token 532: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007102862582542002
    2. ' x' → logprob: -7.250710487365723
    3. '(x' → logprob: -15.625710487365723
    4. '   ' → logprob: -16.000709533691406
    5. '
' → logprob: -16.750709533691406
    6. '	x' → logprob: -17.250709533691406
    7. ' ' → logprob: -17.625709533691406
    8. '  ' → logprob: -19.375709533691406
    9. '```' → logprob: -19.875709533691406
    10. ',x' → logprob: -21.125709533691406

Token 533: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.00032390307751484215
    2. '/i' → logprob: -8.125324249267578
    3. ' //' → logprob: -10.500324249267578
    4. 'i' → logprob: -16.250324249267578
    5. '/' → logprob: -16.500324249267578
    6. '//=' → logprob: -16.500324249267578
    7. '%i' → logprob: -16.750324249267578
    8. '```' → logprob: -17.500324249267578
    9. '	' → logprob: -17.875324249267578
    10. '   ' → logprob: -18.000324249267578

Token 534: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7120533811976202e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -15.875017166137695
    4. ' ' → logprob: -16.375017166137695
    5. '   ' → logprob: -17.125017166137695
    6. '_i' → logprob: -17.625017166137695
    7. '```' → logprob: -18.000017166137695
    8. '
' → logprob: -18.125017166137695
    9. '  ' → logprob: -18.625017166137695
    10. ']' → logprob: -19.250017166137695

Token 535: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0011559356935322285
    2. ']
' → logprob: -6.876155853271484
    3. ' ]' → logprob: -9.501155853271484
    4. '()]' → logprob: -11.376155853271484
    5. ')]' → logprob: -11.751155853271484
    6. ']
' → logprob: -12.126155853271484
    7. '       ' → logprob: -12.126155853271484
    8. '   ' → logprob: -12.251155853271484
    9. ',' → logprob: -12.751155853271484
    10. ']

' → logprob: -13.376155853271484

Token 536: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.13785484433174133
    2. '   ' → logprob: -2.137854814529419
    3. 'return' → logprob: -5.137855052947998
    4. '	return' → logprob: -6.012855052947998
    5. ' ' → logprob: -6.387855052947998
    6. ' 
' → logprob: -8.26285457611084
    7. '  ' → logprob: -8.88785457611084
    8. '
' → logprob: -9.01285457611084
    9. ' D' → logprob: -9.13785457611084
    10. '  
' → logprob: -9.38785457611084

Token 537: ' D' (ID: 415)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.39737728238105774
    2. 'D' → logprob: -1.1473772525787354
    3. ' sorted' → logprob: -5.1473774909973145
    4. ' D' → logprob: -5.3973774909973145
    5. ' ' → logprob: -10.022377014160156
    6. '(sorted' → logprob: -10.147377014160156
    7. 'list' → logprob: -12.397377014160156
    8. 'sort' → logprob: -12.397377014160156
    9. ' ' → logprob: -12.522377014160156
    10. 'd' → logprob: -12.647377014160156

Token 538: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 539: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 540: ' make' (ID: 1520)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6299760937690735
    2. 'main' → logprob: -1.0049760341644287
    3. ' gcd' → logprob: -3.0049760341644287
    4. 'pow' → logprob: -3.5049760341644287
    5. ' pow' → logprob: -5.004976272583008
    6. 'g' → logprob: -5.129976272583008
    7. ' l' → logprob: -6.254976272583008
    8. ' solve' → logprob: -6.879976272583008
    9. 'binary' → logprob: -7.129976272583008
    10. 'solve' → logprob: -7.129976272583008

Token 541: '_pr' (ID: 18177)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.24401269853115082
    2. '_sub' → logprob: -3.6190125942230225
    3. '_prefix' → logprob: -3.8690125942230225
    4. '_' → logprob: -3.9940125942230225
    5. '_sorted' → logprob: -3.9940125942230225
    6. '_factor' → logprob: -4.119012832641602
    7. '_subset' → logprob: -4.244012832641602
    8. '_list' → logprob: -4.494012832641602
    9. '_comb' → logprob: -5.119012832641602
    10. '_counter' → logprob: -5.119012832641602

Token 542: 'imes' (ID: 2332)
  Prédit: 'imes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imes' → logprob: -0.18359218537807465
    2. 'ime' → logprob: -1.8085922002792358
    3. 'im' → logprob: -6.433592319488525
    4. '_' → logprob: -7.058592319488525
    5. '[' → logprob: -8.058591842651367
    6. '{' → logprob: -9.183591842651367
    7. '(' → logprob: -9.433591842651367
    8. '

' → logprob: -9.683591842651367
    9. 'imer' → logprob: -9.683591842651367
    10. 'imest' → logprob: -9.683591842651367

Token 543: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0020991105120629072
    2. '(' → logprob: -6.50209903717041
    3. '(limit' → logprob: -8.37709903717041
    4. '_up' → logprob: -9.12709903717041
    5. '(N' → logprob: -9.37709903717041
    6. '(u' → logprob: -9.62709903717041
    7. '_until' → logprob: -10.75209903717041
    8. '(up' → logprob: -10.87709903717041
    9. '_list' → logprob: -11.12709903717041
    10. '_u' → logprob: -11.25209903717041

Token 544: '):
' (ID: 1883)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3945145606994629
    2. '):
' → logprob: -1.769514560699463
    3. '):' → logprob: -2.019514560699463
    4. '(N' → logprob: -3.894514560699463
    5. '(' → logprob: -6.894514560699463
    6. ')' → logprob: -7.144514560699463
    7. ':' → logprob: -8.519514083862305
    8. '=' → logprob: -9.269514083862305
    9. '):
' → logprob: -9.394514083862305
    10. ' (' → logprob: -9.519514083862305

Token 545: ' max' (ID: 2999)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7200630903244019
    2. ' sieve' → logprob: -1.2200630903244019
    3. 'pr' → logprob: -2.3450632095336914
    4. 's' → logprob: -2.7200632095336914
    5. ' is' → logprob: -4.220063209533691
    6. 'is' → logprob: -4.220063209533691
    7. ' primes' → logprob: -4.845063209533691
    8. 'prime' → logprob: -4.970063209533691
    9. 'A' → logprob: -6.095063209533691
    10. ' prime' → logprob: -6.345063209533691

Token 546: 'x' (ID: 87)
  Prédit: '_n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.4265749454498291
    2. '_num' → logprob: -2.301574945449829
    3. '_' → logprob: -2.801574945449829
    4. 'N' → logprob: -2.801574945449829
    5. '_val' → logprob: -3.051574945449829
    6. '_N' → logprob: -3.676574945449829
    7. 'n' → logprob: -4.30157470703125
    8. '_limit' → logprob: -4.42657470703125
    9. '(' → logprob: -4.80157470703125
    10. '=' → logprob: -5.42657470703125

Token 547: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17932143807411194
    2. '=N' → logprob: -2.054321527481079
    3. ' =' → logprob: -3.679321527481079
    4. 'N' → logprob: -4.8043212890625
    5. 'n' → logprob: -7.0543212890625
    6. '=n' → logprob: -7.5543212890625
    7. '=int' → logprob: -8.0543212890625
    8. '_=' → logprob: -8.3043212890625
    9. 'v' → logprob: -8.8043212890625
    10. '(N' → logprob: -9.1793212890625

Token 548: '(s' (ID: 1858)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.001589131192304194
    2. '((' → logprob: -6.501589298248291
    3. '(' → logprob: -10.001588821411133
    4. '(s' → logprob: -10.626588821411133
    5. 'N' → logprob: -11.376588821411133
    6. '(pow' → logprob: -13.126588821411133
    7. '(n' → logprob: -13.626588821411133
    8. '(-' → logprob: -14.376588821411133
    9. '(math' → logprob: -14.501588821411133
    10. '(((' → logprob: -15.001588821411133

Token 549: 'qrt' (ID: 17629)
  Prédit: 'qrt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.00636657839640975
    2. '(N' → logprob: -5.256366729736328
    3. 'q' → logprob: -7.506366729736328
    4. 'ys' → logprob: -8.631366729736328
    5. 'N' → logprob: -8.881366729736328
    6. 'qr' → logprob: -8.881366729736328
    7. 'Q' → logprob: -9.631366729736328
    8. '(' → logprob: -11.381366729736328
    9. 'ql' → logprob: -11.631366729736328
    10. '
' → logprob: -12.256366729736328

Token 550: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00408516637980938
    2. 'N' → logprob: -5.504085063934326
    3. '(' → logprob: -12.129085540771484
    4. '{' → logprob: -14.504085540771484
    5. '
' → logprob: -15.379085540771484
    6. ')' → logprob: -15.879085540771484
    7. '(n' → logprob: -16.254085540771484
    8. '	N' → logprob: -16.254085540771484
    9. '```' → logprob: -16.629085540771484
    10. ' (' → logprob: -16.754085540771484

Token 551: '))
' (ID: 2210)
  Prédit: '))+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))+' → logprob: -0.057935092598199844
    2. ')+' → logprob: -2.9329349994659424
    3. ')' → logprob: -6.6829352378845215
    4. '(' → logprob: -7.0579352378845215
    5. '))' → logprob: -7.3079352378845215
    6. '(N' → logprob: -8.807934761047363
    7. '()))' → logprob: -10.182934761047363
    8. '+' → logprob: -10.682934761047363
    9. '())' → logprob: -11.182934761047363
    10. '))
' → logprob: -11.682934761047363

Token 552: ' sl' (ID: 1925)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22265154123306274
    2. 'is' → logprob: -2.222651481628418
    3. 'prime' → logprob: -2.847651481628418
    4. 'pr' → logprob: -4.347651481628418
    5. 's' → logprob: -4.597651481628418
    6. ' sieve' → logprob: -6.222651481628418
    7. ' prime' → logprob: -6.472651481628418
    8. 'A' → logprob: -6.597651481628418
    9. ' primes' → logprob: -7.097651481628418
    10. 'p' → logprob: -7.472651481628418

Token 553: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.13012751936912537
    2. '=' → logprob: -2.255127429962158
    3. 'ist' → logprob: -5.005127429962158
    4. ' =' → logprob: -5.380127429962158
    5. '=(' → logprob: -7.130127429962158
    6. '=[]' → logprob: -7.380127429962158
    7. 'ice' → logprob: -7.505127429962158
    8. '=max' → logprob: -7.505127429962158
    9. 'eep' → logprob: -7.630127429962158
    10. '=[]
' → logprob: -7.630127429962158

Token 554: 'i' (ID: 72)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.006333529949188232
    2. '1' → logprob: -5.256333351135254
    3. 'False' → logprob: -6.881333351135254
    4. '0' → logprob: -10.131333351135254
    5. ' True' → logprob: -10.506333351135254
    6. '(True' → logprob: -12.381333351135254
    7. '
' → logprob: -14.631333351135254
    8. '   ' → logprob: -16.13133430480957
    9. 'Tr' → logprob: -16.25633430480957
    10. '[' → logprob: -17.00633430480957

Token 555: ' for' (ID: 395)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.14797468483448029
    2. ' for' → logprob: -2.647974729537964
    3. 'for' → logprob: -3.022974729537964
    4. '=True' → logprob: -4.397974491119385
    5. ' True' → logprob: -5.397974491119385
    6. '(True' → logprob: -8.022974967956543
    7. ' ' → logprob: -8.522974967956543
    8. '   ' → logprob: -8.772974967956543
    9. '=' → logprob: -9.022974967956543
    10. '
' → logprob: -9.147974967956543

Token 556: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26463422179222107
    2. 'range' → logprob: -1.5146342515945435
    3. ' range' → logprob: -4.764634132385254
    4. ' i' → logprob: -5.764634132385254
    5. 'in' → logprob: -7.264634132385254
    6. ' in' → logprob: -8.639634132385254
    7. ' ' → logprob: -10.514634132385254
    8. '_' → logprob: -11.389634132385254
    9. '_range' → logprob: -11.764634132385254
    10. '(range' → logprob: -11.889634132385254

Token 557: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4129292368888855
    2. 'range' → logprob: -1.6629292964935303
    3. 'in' → logprob: -2.1629292964935303
    4. ' range' → logprob: -3.4129292964935303
    5. 'n' → logprob: -8.03792953491211
    6. ' ' → logprob: -8.53792953491211
    7. 'i' → logprob: -8.78792953491211
    8. '2' → logprob: -10.66292953491211
    9. ' i' → logprob: -11.03792953491211
    10. '(range' → logprob: -11.28792953491211

Token 558: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -7.493430894101039e-05
    2. ' range' → logprob: -9.500075340270996
    3. '(range' → logprob: -17.62507438659668
    4. '	range' → logprob: -19.87507438659668
    5. ' ' → logprob: -21.37507438659668
    6. '
' → logprob: -21.62507438659668
    7. '   ' → logprob: -21.87507438659668
    8. '  ' → logprob: -22.37507438659668
    9. '[' → logprob: -22.75007438659668
    10. '_range' → logprob: -23.37507438659668

Token 559: '(' (ID: 7)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1033473089337349
    2. '(' → logprob: -2.3533473014831543
    3. '(N' → logprob: -6.603347301483154
    4. '(max' → logprob: -6.853347301483154
    5. 'max' → logprob: -7.728347301483154
    6. 'N' → logprob: -8.228347778320312
    7. ' ' → logprob: -12.103347778320312
    8. '1' → logprob: -12.353347778320312
    9. '
' → logprob: -12.728347778320312
    10. ' max' → logprob: -13.978347778320312

Token 560: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007404190837405622
    2. 'max' → logprob: -7.3757405281066895
    3. 'N' → logprob: -9.250740051269531
    4. '0' → logprob: -11.375740051269531
    5. '(max' → logprob: -13.000740051269531
    6. '(' → logprob: -13.500740051269531
    7. '1' → logprob: -13.750740051269531
    8. ' ' → logprob: -14.000740051269531
    9. '(N' → logprob: -15.625740051269531
    10. '
' → logprob: -15.750740051269531

Token 561: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2596186399459839
    2. ',N' → logprob: -1.7596186399459839
    3. ',max' → logprob: -3.0096187591552734
    4. ' ,' → logprob: -5.134618759155273
    5. '(N' → logprob: -7.134618759155273
    6. 'N' → logprob: -8.509618759155273
    7. ',(' → logprob: -9.134618759155273
    8. '(max' → logprob: -9.509618759155273
    9. 'max' → logprob: -10.009618759155273
    10. ',int' → logprob: -10.384618759155273

Token 562: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006985911168158054
    2. ')]' → logprob: -5.006986141204834
    3. ' +' → logprob: -8.631985664367676
    4. ')' → logprob: -10.381985664367676
    5. ')]
' → logprob: -10.381985664367676
    6. ')])' → logprob: -10.756985664367676
    7. ')][' → logprob: -12.381985664367676
    8. '```' → logprob: -14.006985664367676
    9. ' )' → logprob: -14.381985664367676
    10. ')]
' → logprob: -14.506985664367676

Token 563: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '+' → logprob: -16.875009536743164
    4. '
' → logprob: -18.625009536743164
    5. '```' → logprob: -18.625009536743164
    6. ')' → logprob: -19.750009536743164
    7. '(' → logprob: -19.750009536743164
    8. ',' → logprob: -19.875009536743164
    9. '１' → logprob: -20.000009536743164
    10. '   ' → logprob: -20.000009536743164

Token 564: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7539763450622559
    2. ')]' → logprob: -0.8789763450622559
    3. ' if' → logprob: -2.253976345062256
    4. 'if' → logprob: -5.253976345062256
    5. ']' → logprob: -6.003976345062256
    6. ' )' → logprob: -7.128976345062256
    7. ')]
' → logprob: -7.503976345062256
    8. ')])' → logprob: -9.378976821899414
    9. ')],' → logprob: -10.128976821899414
    10. ' ]' → logprob: -10.503976821899414

Token 565: ' p' (ID: 275)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09384366869926453
    2. 'for' → logprob: -2.843843698501587
    3. ' i' → logprob: -3.968843698501587
    4. '   ' → logprob: -4.718843460083008
    5. 'i' → logprob: -5.843843460083008
    6. '	for' → logprob: -8.718843460083008
    7. '
' → logprob: -9.593843460083008
    8. 's' → logprob: -9.718843460083008
    9. ' ' → logprob: -10.093843460083008
    10. ' sieve' → logprob: -10.218843460083008

Token 566: 'N' (ID: 45)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028575770556926727
    2. '=[' → logprob: -4.653575897216797
    3. 'r' → logprob: -5.278575897216797
    4. ' =' → logprob: -5.403575897216797
    5. '=i' → logprob: -6.028575897216797
    6. '=len' → logprob: -6.278575897216797
    7. '=[]
' → logprob: -6.778575897216797
    8. '=[]' → logprob: -6.778575897216797
    9. '=os' → logprob: -7.528575897216797
    10. '=r' → logprob: -8.028575897216797

Token 567: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15139353275299072
    2. '=len' → logprob: -2.901393413543701
    3. '=[' → logprob: -3.276393413543701
    4. '=[]' → logprob: -3.651393413543701
    5. '=[]
' → logprob: -4.526393413543701
    6. ' =' → logprob: -5.651393413543701
    7. 'r' → logprob: -5.776393413543701
    8. 'os' → logprob: -6.651393413543701
    9. '=int' → logprob: -7.901393413543701
    10. '=
' → logprob: -8.02639389038086

Token 568: ' while' (ID: 2049)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09033261239528656
    2. 'for' → logprob: -2.715332508087158
    3. ' i' → logprob: -4.590332508087158
    4. '   ' → logprob: -5.215332508087158
    5. 'i' → logprob: -5.465332508087158
    6. ' while' → logprob: -9.090332984924316
    7. '	for' → logprob: -9.840332984924316
    8. ' sieve' → logprob: -10.215332984924316
    9. 'j' → logprob: -10.465332984924316
    10. ' j' → logprob: -10.590332984924316

Token 569: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.11866560578346252
    2. 'len' → logprob: -2.2436656951904297
    3. 'max' → logprob: -5.61866569519043
    4. ' sl' → logprob: -6.36866569519043
    5. 'p' → logprob: -8.49366569519043
    6. 'True' → logprob: -8.99366569519043
    7. ' len' → logprob: -9.36866569519043
    8. ' max' → logprob: -10.61866569519043
    9. 's' → logprob: -11.49366569519043
    10. '(sl' → logprob: -11.61866569519043

Token 570: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6205486059188843
    2. 'and' → logprob: -0.8705486059188843
    3. ':' → logprob: -3.495548725128174
    4. ':
' → logprob: -4.495548725128174
    5. '[' → logprob: -6.870548725128174
    6. '!=' → logprob: -7.495548725128174
    7. '	and' → logprob: -9.495548248291016
    8. '   ' → logprob: -9.495548248291016
    9. '=' → logprob: -10.370548248291016
    10. '&&' → logprob: -10.495548248291016

Token 571: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.7538843154907227
    2. 'p' → logprob: -1.3788843154907227
    3. 'True' → logprob: -1.3788843154907227
    4. 'max' → logprob: -4.628884315490723
    5. 'len' → logprob: -4.878884315490723
    6. ' sl' → logprob: -5.753884315490723
    7. ' True' → logprob: -5.753884315490723
    8. '
' → logprob: -7.628884315490723
    9. ' p' → logprob: -7.878884315490723
    10. '1' → logprob: -8.003884315490723

Token 572: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005030709784477949
    2. '.pop' → logprob: -6.005030632019043
    3. ':
' → logprob: -6.880030632019043
    4. ':' → logprob: -7.130030632019043
    5. '=' → logprob: -8.380030632019043
    6. 'pop' → logprob: -8.630030632019043
    7. '0' → logprob: -9.380030632019043
    8. 'and' → logprob: -9.755030632019043
    9. ':=' → logprob: -9.755030632019043
    10. '```' → logprob: -9.755030632019043

Token 573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014704519708175212
    2. ' ' → logprob: -9.625146865844727
    3. '-' → logprob: -10.375146865844727
    4. '   ' → logprob: -10.875146865844727
    5. 'p' → logprob: -12.312646865844727
    6. '```' → logprob: -12.312646865844727
    7. '[' → logprob: -12.625146865844727
    8. ':' → logprob: -12.687646865844727
    9. '
' → logprob: -13.062646865844727
    10. ' -' → logprob: -13.625146865844727

Token 574: ']<=' (ID: 175609)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.11913438141345978
    2. ']' → logprob: -3.1191344261169434
    3. ']<=' → logprob: -3.1191344261169434
    4. ']<' → logprob: -4.494134426116943
    5. ']!=' → logprob: -4.494134426116943
    6. '**' → logprob: -6.994134426116943
    7. '<=' → logprob: -8.744133949279785
    8. '==' → logprob: -8.994133949279785
    9. '```' → logprob: -9.119133949279785
    10. ']>=' → logprob: -9.744133949279785

Token 575: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -9.674858301877975e-05
    2. ' max' → logprob: -9.250096321105957
    3. '(max' → logprob: -14.375096321105957
    4. 'int' → logprob: -17.250097274780273
    5. '	max' → logprob: -17.500097274780273
    6. ' ' → logprob: -19.375097274780273
    7. '
' → logprob: -19.500097274780273
    8. 'sqrt' → logprob: -19.625097274780273
    9. '[max' → logprob: -19.625097274780273
    10. '   ' → logprob: -20.000097274780273

Token 576: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00016992862219922245
    2. 'sl' → logprob: -9.62516975402832
    3. 'i' → logprob: -11.25016975402832
    4. 'p' → logprob: -11.25016975402832
    5. '(max' → logprob: -11.25016975402832
    6. '(sl' → logprob: -11.25016975402832
    7. '_sl' → logprob: -11.50016975402832
    8. '(' → logprob: -11.62516975402832
    9. '
' → logprob: -11.75016975402832
    10. '(i' → logprob: -12.37516975402832

Token 577: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.005814317613840103
    2. ':' → logprob: -5.255814552307129
    3. ' :
' → logprob: -7.880814552307129
    4. '):
' → logprob: -9.130814552307129
    5. ' and' → logprob: -9.630814552307129
    6. '   ' → logprob: -11.255814552307129
    7. ':
' → logprob: -12.630814552307129
    8. ' :' → logprob: -12.880814552307129
    9. ':

' → logprob: -13.005814552307129
    10. ' ' → logprob: -13.005814552307129

Token 578: '  ' (ID: 256)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8717077970504761
    2. 'x' → logprob: -2.1217079162597656
    3. 'v' → logprob: -2.2467079162597656
    4. ' p' → logprob: -2.3717079162597656
    5. ' v' → logprob: -2.4967079162597656
    6. ' t' → logprob: -3.2467079162597656
    7. 't' → logprob: -3.4967079162597656
    8. ' c' → logprob: -3.4967079162597656
    9. 'p' → logprob: -3.4967079162597656
    10. 'c' → logprob: -4.371707916259766

Token 579: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.6678903698921204
    2. 'x' → logprob: -1.0428903102874756
    3. 'v' → logprob: -2.7928903102874756
    4. 'c' → logprob: -3.9178903102874756
    5. 'f' → logprob: -4.417890548706055
    6. 't' → logprob: -4.667890548706055
    7. 'i' → logprob: -5.417890548706055
    8. 'k' → logprob: -5.667890548706055
    9. '   ' → logprob: -5.667890548706055
    10. 'cur' → logprob: -5.792890548706055

Token 580: 'N' (ID: 45)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020791897550225258
    2. 'v' → logprob: -4.895792007446289
    3. '=p' → logprob: -5.395792007446289
    4. ' =' → logprob: -6.020792007446289
    5. 'ivot' → logprob: -6.145792007446289
    6. 'iv' → logprob: -7.145792007446289
    7. 'i' → logprob: -7.395792007446289
    8. '=v' → logprob: -7.520792007446289
    9. '=i' → logprob: -7.645792007446289
    10. 'N' → logprob: -7.645792007446289

Token 581: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07207667827606201
    2. '=[' → logprob: -2.9470767974853516
    3. ' =' → logprob: -6.072076797485352
    4. '2' → logprob: -6.322076797485352
    5. 'p' → logprob: -6.322076797485352
    6. '=[]
' → logprob: -6.697076797485352
    7. '=[]' → logprob: -6.947076797485352
    8. '0' → logprob: -6.947076797485352
    9. '=p' → logprob: -7.072076797485352
    10. 'val' → logprob: -7.072076797485352

Token 582: '(sl' (ID: 65010)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.01122796069830656
    2. '(sl' → logprob: -4.511228084564209
    3. ' sl' → logprob: -8.88622760772705
    4. '	sl' → logprob: -10.26122760772705
    5. '_sl' → logprob: -12.88622760772705
    6. '(' → logprob: -14.13622760772705
    7. 's' → logprob: -14.13622760772705
    8. '   ' → logprob: -14.51122760772705
    9. 'p' → logprob: -14.88622760772705
    10. ' ' → logprob: -15.13622760772705

Token 583: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9489326477050781
    2. '.pop' → logprob: -1.1989326477050781
    3. '(' → logprob: -1.3239326477050781
    4. 'pop' → logprob: -3.323932647705078
    5. '0' → logprob: -4.698932647705078
    6. 'Pop' → logprob: -10.573932647705078
    7. '1' → logprob: -11.198932647705078
    8. '.' → logprob: -11.448932647705078
    9. '(
' → logprob: -11.448932647705078
    10. 'p' → logprob: -11.573932647705078

Token 584: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -11.00002670288086
    3. '[' → logprob: -11.75002670288086
    4. '(' → logprob: -14.37502670288086
    5. '1' → logprob: -14.68752670288086
    6. '.pop' → logprob: -15.37502670288086
    7. 'pop' → logprob: -15.50002670288086
    8. ':' → logprob: -15.93752670288086
    9. '   ' → logprob: -16.43752670288086
    10. 'b' → logprob: -16.93752670288086

Token 585: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.00014048899174667895
    2. ')' → logprob: -9.125140190124512
    3. ')
' → logprob: -10.500140190124512
    4. ' )
' → logprob: -12.500140190124512
    5. ')

' → logprob: -16.125141143798828
    6. '')
' → logprob: -17.000141143798828
    7. ']
' → logprob: -17.375141143798828
    8. '")
' → logprob: -18.125141143798828
    9. 'while' → logprob: -18.125141143798828
    10. ' ' → logprob: -18.250141143798828

Token 586: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.05770726129412651
    2. 'i' → logprob: -4.3077073097229
    3. ' i' → logprob: -4.3077073097229
    4. '   ' → logprob: -4.8077073097229
    5. ' ' → logprob: -5.0577073097229
    6. ' for' → logprob: -5.4327073097229
    7. 'sl' → logprob: -5.9327073097229
    8. 'for' → logprob: -6.8077073097229
    9. '   
' → logprob: -6.9327073097229
    10. '```' → logprob: -7.0577073097229

Token 587: ' t' (ID: 260)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.2723991870880127
    2. 'x' → logprob: -1.5223991870880127
    3. 'sl' → logprob: -1.7723991870880127
    4. 'tmp' → logprob: -2.1473991870880127
    5. 'del' → logprob: -3.1473991870880127
    6. 'c' → logprob: -3.6473991870880127
    7. 'd' → logprob: -3.6473991870880127
    8. 'rem' → logprob: -3.7723991870880127
    9. 'val' → logprob: -3.8973991870880127
    10. 'temp' → logprob: -4.522398948669434

Token 588: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0014215452829375863
    2. ' =' → logprob: -7.3764214515686035
    3. '=[' → logprob: -8.376421928405762
    4. 'sl' → logprob: -8.876421928405762
    5. '=[]
' → logprob: -9.251421928405762
    6. 'mp' → logprob: -9.751421928405762
    7. 'r' → logprob: -10.001421928405762
    8. 'l' → logprob: -10.126421928405762
    9. '=
' → logprob: -10.126421928405762
    10. '=[]' → logprob: -10.626421928405762

Token 589: 'sl' (ID: 4500)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2833235263824463
    2. 'sl' → logprob: -2.1583235263824463
    3. '[]
' → logprob: -3.2833235263824463
    4. '[b' → logprob: -3.5333235263824463
    5. '[s' → logprob: -3.5333235263824463
    6. 'list' → logprob: -4.533323287963867
    7. '[i' → logprob: -5.033323287963867
    8. '[]' → logprob: -5.408323287963867
    9. '[p' → logprob: -5.408323287963867
    10. '[list' → logprob: -5.533323287963867

Token 590: '[' (ID: 58)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.208215594291687
    2. '=[' → logprob: -1.833215594291687
    3. '[' → logprob: -3.8332157135009766
    4. '=list' → logprob: -5.708215713500977
    5. '0' → logprob: -7.083215713500977
    6. ' =' → logprob: -7.083215713500977
    7. '.pop' → logprob: -7.708215713500977
    8. ':=' → logprob: -8.333215713500977
    9. ' =[' → logprob: -9.208215713500977
    10. '=t' → logprob: -9.333215713500977

Token 591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00031949623371474445
    2. ' ' → logprob: -8.875319480895996
    3. '1' → logprob: -9.000319480895996
    4. '[' → logprob: -10.625319480895996
    5. ':' → logprob: -11.937819480895996
    6. '   ' → logprob: -12.312819480895996
    7. '  ' → logprob: -12.500319480895996
    8. 'b' → logprob: -13.437819480895996
    9. '
' → logprob: -13.625319480895996
    10. 't' → logprob: -13.687819480895996

Token 592: ']
' (ID: 1592)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5206894874572754
    2. ')
' → logprob: -1.7706894874572754
    3. 'sl' → logprob: -2.5206894874572754
    4. '*t' → logprob: -3.0206894874572754
    5. '*p' → logprob: -3.5206894874572754
    6. '**' → logprob: -3.7706894874572754
    7. '*i' → logprob: -4.270689487457275
    8. '
' → logprob: -4.645689487457275
    9. ')' → logprob: -4.645689487457275
    10. '*
' → logprob: -5.520689487457275

Token 593: '  ' (ID: 256)
  Prédit: '  '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.0012133294949308038
    2. 'sl' → logprob: -6.876213550567627
    3. ' ' → logprob: -9.626213073730469
    4. ' sl' → logprob: -9.751213073730469
    5. '   ' → logprob: -10.876213073730469
    6. '[' → logprob: -12.251213073730469
    7. 't' → logprob: -12.376213073730469
    8. '_sl' → logprob: -12.376213073730469
    9. '	sl' → logprob: -12.751213073730469
    10. ',' → logprob: -12.876213073730469

Token 594: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' (adapté à ' sl') → logprob: -0.03181283175945282
    2. '  ' → logprob: -3.531812906265259
    3. ' sl' → logprob: -6.78181266784668
    4. '   ' → logprob: -7.40681266784668
    5. ' ' → logprob: -8.28181266784668
    6. 's' → logprob: -10.90681266784668
    7. '	sl' → logprob: -11.15681266784668
    8. 'new' → logprob: -12.40681266784668
    9. '_sl' → logprob: -12.65681266784668
    10. 'l' → logprob: -12.78181266784668

Token 595: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.16082344949245453
    2. '=' → logprob: -1.9108234643936157
    3. '=list' → logprob: -7.535823345184326
    4. '=(' → logprob: -11.660823822021484
    5. '=b' → logprob: -11.660823822021484
    6. ' =' → logprob: -11.660823822021484
    7. '={' → logprob: -11.785823822021484
    8. ' =[' → logprob: -11.910823822021484
    9. '[:' → logprob: -12.285823822021484
    10. '[:]' → logprob: -12.660823822021484

Token 596: 'ii' (ID: 3573)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16031979024410248
    2. 'i' → logprob: -2.1603198051452637
    3. 'v' → logprob: -4.535319805145264
    4. 'j' → logprob: -5.160319805145264
    5. 'e' → logprob: -5.410319805145264
    6. 'y' → logprob: -5.535319805145264
    7. 's' → logprob: -5.910319805145264
    8. 'k' → logprob: -6.910319805145264
    9. 'num' → logprob: -7.285319805145264
    10. 'a' → logprob: -7.410319805145264

Token 597: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03804963827133179
    2. 'for' → logprob: -3.2880496978759766
    3. ' ' → logprob: -12.413049697875977
    4. 'i' → logprob: -13.538049697875977
    5. '	for' → logprob: -14.163049697875977
    6. 't' → logprob: -14.538049697875977
    7. '
' → logprob: -14.663049697875977
    8. 'ii' → logprob: -14.788049697875977
    9. ' ii' → logprob: -15.413049697875977
    10. '%' → logprob: -16.288049697875977

Token 598: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.00020389800192788243
    2. ' ii' → logprob: -8.500204086303711
    3. 'i' → logprob: -15.500204086303711
    4. '
' → logprob: -16.87520408630371
    5. ' ' → logprob: -17.00020408630371
    6. ' in' → logprob: -17.62520408630371
    7. 'in' → logprob: -18.12520408630371
    8. 'iii' → logprob: -18.12520408630371
    9. '  ' → logprob: -18.25020408630371
    10. '(ii' → logprob: -18.62520408630371

Token 599: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4324902892112732
    2. 'in' → logprob: -1.057490348815918
    3. 'sl' → logprob: -5.932490348815918
    4. 'ii' → logprob: -7.307490348815918
    5. ' sl' → logprob: -7.807490348815918
    6. ' ii' → logprob: -10.682490348815918
    7. 'iii' → logprob: -11.682490348815918
    8. 'i' → logprob: -11.807490348815918
    9. ' ' → logprob: -12.557490348815918
    10. 's' → logprob: -13.057490348815918

Token 600: ' sl' (ID: 1925)
  Prédit: 'sl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.002186426194384694
    2. ' sl' → logprob: -6.127186298370361
    3. '	sl' → logprob: -15.00218677520752
    4. 's' → logprob: -15.37718677520752
    5. ' ' → logprob: -15.62718677520752
    6. '
' → logprob: -15.75218677520752
    7. 'ss' → logprob: -15.75218677520752
    8. '   ' → logprob: -15.87718677520752
    9. 'sk' → logprob: -17.127185821533203
    10. '    ' → logprob: -17.127185821533203

Token 601: ' if' (ID: 538)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4246191382408142
    2. 'in' → logprob: -1.174619197845459
    3. 'if' → logprob: -3.424619197845459
    4. ' if' → logprob: -5.424619197845459
    5. ' ' → logprob: -10.1746187210083
    6. '  ' → logprob: -10.7996187210083
    7. 't' → logprob: -12.0496187210083
    8. 'not' → logprob: -12.7996187210083
    9. '0' → logprob: -13.4246187210083
    10. 'ii' → logprob: -13.6746187210083

Token 602: ' ii' (ID: 28354)
  Prédit: 'ii'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ii' → logprob: -0.0009265877306461334
    2. ' ii' → logprob: -7.375926494598389
    3. '(ii' → logprob: -8.125926971435547
    4. ' ' → logprob: -13.500926971435547
    5. '  ' → logprob: -14.250926971435547
    6. '   ' → logprob: -14.375926971435547
    7. ' not' → logprob: -14.875926971435547
    8. 'not' → logprob: -14.875926971435547
    9. '
' → logprob: -15.875926971435547
    10. '(' → logprob: -15.875926971435547

Token 603: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.002011910080909729
    2. '%i' → logprob: -6.752011775970459
    3. ' %' → logprob: -7.127011775970459
    4. '%
' → logprob: -10.627012252807617
    5. '%s' → logprob: -11.752012252807617
    6. '%d' → logprob: -13.002012252807617
    7. '%b' → logprob: -13.502012252807617
    8. '%x' → logprob: -13.877012252807617
    9. '%e' → logprob: -14.502012252807617
    10. '
' → logprob: -15.127012252807617

Token 604: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00020497082732617855
    2. ' t' → logprob: -8.500205039978027
    3. '`t' → logprob: -14.625205039978027
    4. '
' → logprob: -15.125205039978027
    5. '!=' → logprob: -15.125205039978027
    6. '	t' → logprob: -15.500205039978027
    7. '  ' → logprob: -16.12520408630371
    8. ' ' → logprob: -16.25020408630371
    9. '```' → logprob: -17.37520408630371
    10. '(t' → logprob: -17.50020408630371

Token 605: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03354472666978836
    2. ']!=' → logprob: -3.6585447788238525
    3. '!=' → logprob: -5.033544540405273
    4. 't' → logprob: -8.408544540405273
    5. ' ]' → logprob: -9.283544540405273
    6. '<|end|>' → logprob: -9.658544540405273
    7. ' !=' → logprob: -9.783544540405273
    8. '];' → logprob: -9.908544540405273
    9. ']
' → logprob: -10.533544540405273
    10. '```' → logprob: -10.658544540405273

Token 606: ' p' (ID: 275)
  Prédit: '  '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '  ' → logprob: -0.4609893262386322
    2. ' ' → logprob: -1.0859893560409546
    3. '<|end|>' → logprob: -3.835989236831665
    4. '   ' → logprob: -5.460989475250244
    5. ' return' → logprob: -5.585989475250244
    6. '[' → logprob: -7.835989475250244
    7. '  
' → logprob: -7.835989475250244
    8. '<|end|>' → logprob: -8.210988998413086
    9. 'return' → logprob: -8.335988998413086
    10. '	return' → logprob: -8.710988998413086

Token 607: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3136947453022003
    2. 'r' → logprob: -1.313694715499878
    3. 'return' → logprob: -8.688694953918457
    4. '=' → logprob: -9.688694953918457
    5. '#' → logprob: -10.063694953918457
    6. 'ython' → logprob: -10.813694953918457
    7. '```' → logprob: -11.313694953918457
    8. 'p' → logprob: -11.563694953918457
    9. 'print' → logprob: -11.688694953918457
    10. 'n' → logprob: -11.688694953918457

Token 608: '+=' (ID: 18287)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04374925047159195
    2. '.extend' → logprob: -4.0437493324279785
    3. '+=' → logprob: -4.2937493324279785
    4. '.append' → logprob: -5.1687493324279785
    5. '<|end|>' → logprob: -5.2937493324279785
    6. '+
' → logprob: -8.16874885559082
    7. '+p' → logprob: -8.16874885559082
    8. ' +=' → logprob: -9.54374885559082
    9. '
' → logprob: -9.66874885559082
    10. ' +' → logprob: -10.04374885559082

Token 609: 'sl' (ID: 4500)
  Prédit: 'sl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sl' → logprob: -0.0021242110524326563
    2. '[' → logprob: -6.252124309539795
    3. 'list' → logprob: -9.127123832702637
    4. ' sl' → logprob: -9.877123832702637
    5. '[s' → logprob: -11.002123832702637
    6. ' [' → logprob: -11.877123832702637
    7. '[i' → logprob: -12.252123832702637
    8. '   ' → logprob: -13.252123832702637
    9. 's' → logprob: -13.502123832702637
    10. ' list' → logprob: -14.127123832702637

Token 610: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05893591791391373
    2. 'return' → logprob: -3.1839358806610107
    3. ' return' → logprob: -4.55893611907959
    4. '<|end|>' → logprob: -5.93393611907959
    5. ' ' → logprob: -6.68393611907959
    6. '	return' → logprob: -8.18393611907959
    7. '   ' → logprob: -8.30893611907959
    8. '[' → logprob: -8.68393611907959
    9. ':return' → logprob: -8.93393611907959
    10. '
' → logprob: -9.05893611907959

Token 611: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 612: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0024756586644798517
    2. ' p' → logprob: -6.002475738525391
    3. '[p' → logprob: -22.00247573852539
    4. ' ' → logprob: -22.50247573852539
    5. '	p' → logprob: -23.12747573852539
    6. ' ' → logprob: -23.62747573852539
    7. '(p' → logprob: -23.75247573852539
    8. '  ' → logprob: -24.62747573852539
    9. '_p' → logprob: -25.37747573852539
    10. '<p' → logprob: -25.50247573852539

Token 613: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00021509946964215487
    2. '_' → logprob: -9.250215530395508
    3. 'r' → logprob: -9.750215530395508
    4. 'p' → logprob: -10.125215530395508
    5. '_N' → logprob: -11.750215530395508
    6. 'n' → logprob: -13.250215530395508
    7. '#' → logprob: -13.625215530395508
    8. '[' → logprob: -13.750215530395508
    9. '[]' → logprob: -14.125215530395508
    10. '<|end|>' → logprob: -14.125215530395508

Token 614: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 615: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9722498059272766
    2. '#' → logprob: -1.7222497463226318
    3. 'def' → logprob: -1.7222497463226318
    4. '<|end|>' → logprob: -1.8472497463226318
    5. '[' → logprob: -3.222249746322632
    6. ')' → logprob: -4.222249984741211
    7. '```' → logprob: -4.847249984741211
    8. 'n' → logprob: -4.847249984741211
    9. 'd' → logprob: -5.222249984741211
    10. 'x' → logprob: -5.722249984741211

Token 616: ' _' (ID: 1175)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.3962422311306
    2. 'main' → logprob: -1.3962422609329224
    3. ' gcd' → logprob: -3.771242141723633
    4. 'pow' → logprob: -4.146242141723633
    5. 'solve' → logprob: -5.146242141723633
    6. ' pow' → logprob: -5.271242141723633
    7. ' solve' → logprob: -5.271242141723633
    8. 'g' → logprob: -5.396242141723633
    9. 'binary' → logprob: -5.896242141723633
    10. ' binary' → logprob: -6.396242141723633

Token 617: 'g' (ID: 70)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0623955726623535
    2. 'cache' → logprob: -1.3123955726623535
    3. 'pow' → logprob: -2.0623955726623535
    4. 'g' → logprob: -3.0623955726623535
    5. 'input' → logprob: -3.8123955726623535
    6. 'l' → logprob: -3.9373955726623535
    7. 'dfs' → logprob: -3.9373955726623535
    8. 'range' → logprob: -4.3123955726623535
    9. 's' → logprob: -4.6873955726623535
    10. 'is' → logprob: -4.8123955726623535

Token 618: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.7225393652915955
    2. 'kj' → logprob: -0.8475393652915955
    3. 'a' → logprob: -4.09753942489624
    4. 'def' → logprob: -5.09753942489624
    5. 'et' → logprob: -5.34753942489624
    6. '=' → logprob: -5.34753942489624
    7. 'n' → logprob: -5.84753942489624
    8. 'ka' → logprob: -5.84753942489624
    9. 'c' → logprob: -6.09753942489624
    10. 'g' → logprob: -6.16003942489624

Token 619: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.1447368860244751
    2. '(' → logprob: -2.0197367668151855
    3. '(x' → logprob: -6.2697367668151855
    4. 'a' → logprob: -9.769737243652344
    5. '_' → logprob: -9.894737243652344
    6. 'def' → logprob: -10.769737243652344
    7. '(_' → logprob: -11.519737243652344
    8. '(A' → logprob: -11.644737243652344
    9. '(k' → logprob: -12.019737243652344
    10. '(n' → logprob: -12.394737243652344

Token 620: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.2540532350540161
    2. ',' → logprob: -1.5040532350540161
    3. ',a' → logprob: -7.004053115844727
    4. ' ,' → logprob: -7.129053115844727
    5. '_,' → logprob: -8.504053115844727
    6. 'b' → logprob: -9.004053115844727
    7. '(a' → logprob: -10.629053115844727
    8. ',_' → logprob: -10.879053115844727
    9. '(b' → logprob: -11.629053115844727
    10. ',g' → logprob: -11.879053115844727

Token 621: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8860677480697632
    2. ',' → logprob: -1.1360677480697632
    3. ',b' → logprob: -2.1360678672790527
    4. ',a' → logprob: -2.1360678672790527
    5. '):
' → logprob: -3.5110678672790527
    6. '   ' → logprob: -8.761067390441895
    7. ' ,' → logprob: -9.011067390441895
    8. ':' → logprob: -9.511067390441895
    9. '(a' → logprob: -10.011067390441895
    10. ')' → logprob: -10.011067390441895

Token 622: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5826113820075989
    2. ' return' → logprob: -1.582611322402954
    3. ' if' → logprob: -2.207611322402954
    4. ' while' → logprob: -2.207611322402954
    5. ' ' → logprob: -5.082611560821533
    6. '	return' → logprob: -5.582611560821533
    7. ' a' → logprob: -5.957611560821533
    8. '	if' → logprob: -6.957611560821533
    9. '	while' → logprob: -7.332611560821533
    10. '    ' → logprob: -8.207611083984375

Token 623: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.01815006136894226
    2. ' b' → logprob: -4.0181498527526855
    3. '	b' → logprob: -16.518150329589844
    4. 'a' → logprob: -16.768150329589844
    5. ' ' → logprob: -17.018150329589844
    6. '_b' → logprob: -19.143150329589844
    7. '(b' → logprob: -19.768150329589844
    8. '   ' → logprob: -19.893150329589844
    9. ' a' → logprob: -20.018150329589844
    10. ',b' → logprob: -21.268150329589844

Token 624: ':a' (ID: 77025)
  Prédit: ':a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':a' → logprob: -0.995354413986206
    2. 'a' → logprob: -1.370354413986206
    3. ':
' → logprob: -1.370354413986206
    4. '!=' → logprob: -2.620354413986206
    5. ':' → logprob: -3.495354413986206
    6. ',a' → logprob: -4.370354652404785
    7. ':b' → logprob: -5.870354652404785
    8. '>a' → logprob: -6.620354652404785
    9. ' a' → logprob: -6.745354652404785
    10. 'b' → logprob: -8.495354652404785

Token 625: ',b' (ID: 17568)
  Prédit: ',a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.9245693683624268
    2. 'a' → logprob: -1.2995693683624268
    3. ',b' → logprob: -1.4245693683624268
    4. ',' → logprob: -2.4245693683624268
    5. 'b' → logprob: -7.424569129943848
    6. '%=' → logprob: -8.049569129943848
    7. ' a' → logprob: -8.424569129943848
    8. ',g' → logprob: -9.049569129943848
    9. '=a' → logprob: -9.049569129943848
    10. ' ,' → logprob: -9.424569129943848

Token 626: '=b' (ID: 49769)
  Prédit: '=b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=b' → logprob: -0.27867385745048523
    2. '=' → logprob: -1.5286738872528076
    3. '=a' → logprob: -3.7786738872528076
    4. ' =' → logprob: -5.6536736488342285
    5. 'b' → logprob: -11.028674125671387
    6. '=
' → logprob: -12.028674125671387
    7. ',b' → logprob: -12.153674125671387
    8. 'a' → logprob: -13.653674125671387
    9. '%=' → logprob: -14.028674125671387
    10. ' b' → logprob: -14.278674125671387

Token 627: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.23067738115787506
    2. ',' → logprob: -1.6056773662567139
    3. ',b' → logprob: -5.605677604675293
    4. 'a' → logprob: -6.605677604675293
    5. ' a' → logprob: -9.230677604675293
    6. ',_' → logprob: -9.855677604675293
    7. ' ,' → logprob: -10.355677604675293
    8. '%' → logprob: -11.230677604675293
    9. '<|end|>' → logprob: -12.480677604675293
    10. '	a' → logprob: -12.980677604675293

Token 628: '%b' (ID: 148937)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5323428511619568
    2. '%b' → logprob: -0.9073428511619568
    3. ' %' → logprob: -5.032342910766602
    4. '<|end|>' → logprob: -6.657342910766602
    5. '%B' → logprob: -6.907342910766602
    6. '%=' → logprob: -8.532342910766602
    7. '%x' → logprob: -10.157342910766602
    8. 'b' → logprob: -10.532342910766602
    9. '[' → logprob: -10.532342910766602
    10. '%
' → logprob: -11.157342910766602

Token 629: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 630: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6580554246902466
    2. 'return' → logprob: -0.7830554246902466
    3. ' ' → logprob: -5.033055305480957
    4. 'a' → logprob: -5.658055305480957
    5. ' a' → logprob: -5.908055305480957
    6. ':return' → logprob: -6.033055305480957
    7. '	return' → logprob: -6.158055305480957
    8. '<|end|>' → logprob: -6.408055305480957
    9. '   ' → logprob: -6.908055305480957
    10. 'eturn' → logprob: -6.908055305480957

Token 631: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019286326132714748
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -19.626928329467773
    4. 'b' → logprob: -20.251928329467773
    5. '_a' → logprob: -21.376928329467773
    6. ' ' → logprob: -22.376928329467773
    7. ' ' → logprob: -24.001928329467773
    8. ' b' → logprob: -24.251928329467773
    9. 'а' → logprob: -24.626928329467773
    10. 'abs' → logprob: -25.001928329467773

Token 632: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 633: 'l' (ID: 75)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.45842602849006653
    2. '_' → logprob: -1.4584259986877441
    3. '<|end|>' → logprob: -2.708425998687744
    4. ')' → logprob: -3.708425998687744
    5. ' ' → logprob: -4.208425998687744
    6. '
' → logprob: -5.333425998687744
    7. 'a' → logprob: -5.458425998687744
    8. '#' → logprob: -5.708425998687744
    9. ' def' → logprob: -5.833425998687744
    10. ',' → logprob: -6.083425998687744

Token 634: 'cm' (ID: 7871)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -1.3178907632827759
    2. 'eft' → logprob: -1.4428907632827759
    3. 'ist' → logprob: -2.1928906440734863
    4. 'r' → logprob: -2.1928906440734863
    5. 'a' → logprob: -2.6928906440734863
    6. 'e' → logprob: -3.1928906440734863
    7. 'ambda' → logprob: -3.1928906440734863
    8. '=' → logprob: -3.4428906440734863
    9. 'l' → logprob: -4.442890644073486
    10. 'og' → logprob: -4.567890644073486

Token 635: '=lambda' (ID: 64865)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.4869843125343323
    2. '(' → logprob: -1.3619842529296875
    3. '=' → logprob: -2.6119842529296875
    4. '=lambda' → logprob: -2.9869842529296875
    5. 'def' → logprob: -5.6119842529296875
    6. '=(' → logprob: -7.2369842529296875
    7. ' =' → logprob: -7.6119842529296875
    8. '(lambda' → logprob: -8.111984252929688
    9. '_' → logprob: -9.486984252929688
    10. 'a' → logprob: -9.611984252929688

Token 636: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0042702388018369675
    2. ' a' → logprob: -5.504270076751709
    3. 'lambda' → logprob: -8.754270553588867
    4. ' lambda' → logprob: -10.379270553588867
    5. 'x' → logprob: -13.004270553588867
    6. ' x' → logprob: -15.254270553588867
    7. '```' → logprob: -15.754270553588867
    8. '	a' → logprob: -16.379270553588867
    9. '=lambda' → logprob: -16.629270553588867
    10. '(a' → logprob: -16.754270553588867

Token 637: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.053071752190589905
    2. ',' → logprob: -3.0530717372894287
    3. ' ,' → logprob: -5.553071975708008
    4. ',a' → logprob: -7.428071975708008
    5. ',x' → logprob: -13.553071975708008
    6. 'b' → logprob: -13.803071975708008
    7. ' b' → logprob: -14.178071975708008
    8. '_,' → logprob: -15.178071975708008
    9. 'a' → logprob: -15.678071975708008
    10. ',l' → logprob: -15.803071975708008

Token 638: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6625651717185974
    2. ' :' → logprob: -1.2875652313232422
    3. ':a' → logprob: -1.7875652313232422
    4. ',a' → logprob: -3.537565231323242
    5. ':(' → logprob: -4.912565231323242
    6. ',' → logprob: -6.412565231323242
    7. ' :(' → logprob: -6.787565231323242
    8. ',b' → logprob: -6.912565231323242
    9. ':b' → logprob: -7.787565231323242
    10. 'a' → logprob: -8.662565231323242

Token 639: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08082827180624008
    2. ' a' → logprob: -2.5808281898498535
    3. '(a' → logprob: -6.4558281898498535
    4. ' (' → logprob: -7.9558281898498535
    5. 'abs' → logprob: -12.080828666687012
    6. ' abs' → logprob: -12.705828666687012
    7. '(' → logprob: -12.830828666687012
    8. '	a' → logprob: -13.580828666687012
    9. ' ' → logprob: -14.205828666687012
    10. '(abs' → logprob: -14.955828666687012

Token 640: '*b' (ID: 72162)
  Prédit: '*b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*b' → logprob: -0.0006284446571953595
    2. '*' → logprob: -7.500628471374512
    3. '//' → logprob: -9.625628471374512
    4. '*a' → logprob: -12.000628471374512
    5. ' *' → logprob: -12.875628471374512
    6. '//*' → logprob: -15.000628471374512
    7. 'b' → logprob: -15.500628471374512
    8. '*l' → logprob: -17.000627517700195
    9. '*x' → logprob: -17.500627517700195
    10. '*(' → logprob: -17.750627517700195

Token 641: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -9.794061770662665e-05
    2. ' //' → logprob: -9.37509822845459
    3. '//=' → logprob: -11.37509822845459
    4. '//#' → logprob: -13.75009822845459
    5. '//'' → logprob: -15.12509822845459
    6. '#' → logprob: -16.375097274780273
    7. '\/\/' → logprob: -17.250097274780273
    8. ' //_' → logprob: -17.250097274780273
    9. '%b' → logprob: -17.500097274780273
    10. '
' → logprob: -17.875097274780273

Token 642: '_' (ID: 62)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_g' → logprob: -1.843177233240567e-05
    2. 'g' → logprob: -11.000018119812012
    3. ' _' → logprob: -14.125018119812012
    4. '__' → logprob: -15.000018119812012
    5. '\' → logprob: -16.250019073486328
    6. '_b' → logprob: -16.250019073486328
    7. '_k' → logprob: -16.500019073486328
    8. '_a' → logprob: -16.500019073486328
    9. '_j' → logprob: -16.750019073486328
    10. 'a' → logprob: -16.875019073486328

Token 643: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.014173386618494987
    2. '_g' → logprob: -4.26417350769043
    3. 'b' → logprob: -12.76417350769043
    4. ' gcd' → logprob: -12.88917350769043
    5. '__' → logprob: -13.01417350769043
    6. '```' → logprob: -14.63917350769043
    7. '_b' → logprob: -14.88917350769043
    8. '`' → logprob: -15.51417350769043
    9. '-g' → logprob: -15.88917350769043
    10. '.g' → logprob: -16.01417350769043

Token 644: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0005687602679245174
    2. '_cd' → logprob: -7.500568866729736
    3. 'b' → logprob: -11.500568389892578
    4. '_c' → logprob: -13.125568389892578
    5. 'CD' → logprob: -13.625568389892578
    6. 'a' → logprob: -13.750568389892578
    7. 'c' → logprob: -13.875568389892578
    8. '_b' → logprob: -15.250568389892578
    9. 'cdf' → logprob: -16.500568389892578
    10. '	cd' → logprob: -17.375568389892578

Token 645: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.001179512357339263
    2. 'a' → logprob: -6.7511796951293945
    3. ' (' → logprob: -12.001179695129395
    4. '(' → logprob: -13.001179695129395
    5. '(
' → logprob: -14.126179695129395
    6. '(b' → logprob: -16.001178741455078
    7. ' a' → logprob: -18.251178741455078
    8. 'b' → logprob: -19.751178741455078
    9. '(
' → logprob: -20.126178741455078
    10. '```' → logprob: -20.626178741455078

Token 646: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.006020164117217064
    2. ',' → logprob: -5.2560200691223145
    3. 'b' → logprob: -7.3810200691223145
    4. ' ,' → logprob: -8.756020545959473
    5. ',a' → logprob: -12.881020545959473
    6. ' b' → logprob: -14.006020545959473
    7. ',
' → logprob: -14.131020545959473
    8. '(b' → logprob: -14.506020545959473
    9. ')' → logprob: -14.881020545959473
    10. 'a' → logprob: -15.506020545959473

Token 647: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.015417808666825294
    2. 'b' → logprob: -4.640417575836182
    3. ',b' → logprob: -5.515417575836182
    4. ' )' → logprob: -7.765417575836182
    5. ',' → logprob: -8.01541805267334
    6. '(b' → logprob: -8.01541805267334
    7. ')b' → logprob: -8.26541805267334
    8. '(a' → logprob: -9.14041805267334
    9. 'a' → logprob: -10.01541805267334
    10. ')
' → logprob: -10.39041805267334

Token 648: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2180510014295578
    2. '#' → logprob: -2.968050956726074
    3. ':' → logprob: -3.093050956726074
    4. ')' → logprob: -3.593050956726074
    5. '_' → logprob: -4.468050956726074
    6. '[' → logprob: -4.468050956726074
    7. '<|end|>' → logprob: -4.593050956726074
    8. '
' → logprob: -4.843050956726074
    9. ',' → logprob: -5.343050956726074
    10. 'a' → logprob: -5.468050956726074

Token 649: ' cnt' (ID: 27340)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3942429721355438
    2. ' main' → logprob: -1.1442430019378662
    3. 'solve' → logprob: -6.519242763519287
    4. ' solve' → logprob: -6.644242763519287
    5. 'pow' → logprob: -6.644242763519287
    6. 'binary' → logprob: -7.769242763519287
    7. 'is' → logprob: -7.894242763519287
    8. 'dfs' → logprob: -8.144243240356445
    9. ' pow' → logprob: -8.644243240356445
    10. ' ch' → logprob: -8.644243240356445

Token 650: 'bt' (ID: 16051)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.4484186172485352
    2. '_elements' → logprob: -1.5734186172485352
    3. 'inue' → logprob: -1.6984186172485352
    4. '_chars' → logprob: -2.323418617248535
    5. '_digits' → logprob: -2.448418617248535
    6. '_bits' → logprob: -2.698418617248535
    7. '_occ' → logprob: -3.073418617248535
    8. '_sub' → logprob: -4.198418617248535
    9. '_oc' → logprob: -4.948418617248535
    10. '_letters' → logprob: -5.198418617248535

Token 651: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.03260478004813194
    2. '(' → logprob: -4.032604694366455
    3. '(x' → logprob: -4.657604694366455
    4. '(s' → logprob: -6.282604694366455
    5. '(a' → logprob: -7.532604694366455
    6. '(bits' → logprob: -7.532604694366455
    7. '(b' → logprob: -7.657604694366455
    8. '(p' → logprob: -8.532605171203613
    9. '(l' → logprob: -8.532605171203613
    10. '(i' → logprob: -8.532605171203613

Token 652: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00813934113830328
    2. '(n' → logprob: -5.883139133453369
    3. ')' → logprob: -6.008139133453369
    4. ',' → logprob: -6.383139133453369
    5. '):
' → logprob: -7.508139133453369
    6. '(' → logprob: -8.008139610290527
    7. ',n' → logprob: -9.633139610290527
    8. 'n' → logprob: -9.883139610290527
    9. ',k' → logprob: -10.508139610290527
    10. '=' → logprob: -10.883139610290527

Token 653: ' c' (ID: 274)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7984667420387268
    2. 'return' → logprob: -1.173466682434082
    3. 'r' → logprob: -2.173466682434082
    4. 'c' → logprob: -3.048466682434082
    5. '   ' → logprob: -3.548466682434082
    6. ' r' → logprob: -4.298466682434082
    7. ' c' → logprob: -4.673466682434082
    8. 's' → logprob: -5.048466682434082
    9. 'cnt' → logprob: -5.298466682434082
    10. ' if' → logprob: -5.548466682434082

Token 654: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007409627549350262
    2. 'nt' → logprob: -5.507409572601318
    3. 'ount' → logprob: -6.382409572601318
    4. ' =' → logprob: -7.507409572601318
    5. '=n' → logprob: -8.132410049438477
    6. '=int' → logprob: -8.507410049438477
    7. '=(' → logprob: -8.632410049438477
    8. 'ont' → logprob: -9.382410049438477
    9. '=c' → logprob: -9.757410049438477
    10. '=len' → logprob: -10.007410049438477

Token 655: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008012931793928146
    2. 'n' → logprob: -5.508012771606445
    3. 'bin' → logprob: -5.633012771606445
    4. ' ' → logprob: -9.258012771606445
    5. '(n' → logprob: -9.883012771606445
    6. ' bin' → logprob: -10.258012771606445
    7. '[n' → logprob: -10.383012771606445
    8. '[' → logprob: -10.633012771606445
    9. ' n' → logprob: -10.758012771606445
    10. '(bin' → logprob: -11.008012771606445

Token 656: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.05003086477518082
    2. 'while' → logprob: -3.1750309467315674
    3. '   ' → logprob: -5.175030708312988
    4. ' n' → logprob: -7.425030708312988
    5. '	while' → logprob: -7.675030708312988
    6. ' for' → logprob: -9.050030708312988
    7. '
' → logprob: -10.675030708312988
    8. ' ' → logprob: -10.675030708312988
    9. ' =' → logprob: -10.925030708312988
    10. 'for' → logprob: -10.925030708312988

Token 657: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.10289420187473297
    2. 'while' → logprob: -2.3528943061828613
    3. ' n' → logprob: -6.352894306182861
    4. 'n' → logprob: -7.477894306182861
    5. '   ' → logprob: -8.852893829345703
    6. '	while' → logprob: -9.477893829345703
    7. ' for' → logprob: -9.602893829345703
    8. 'b' → logprob: -11.102893829345703
    9. ' i' → logprob: -11.102893829345703
    10. 'for' → logprob: -11.352893829345703

Token 658: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.011076119728386402
    2. ' n' → logprob: -4.511075973510742
    3. '(n' → logprob: -10.511075973510742
    4. ' (' → logprob: -14.511075973510742
    5. 'not' → logprob: -15.386075973510742
    6. ' not' → logprob: -16.011075973510742
    7. '(' → logprob: -16.136075973510742
    8. '
' → logprob: -16.761075973510742
    9. '   ' → logprob: -16.886075973510742
    10. ' ' → logprob: -16.886075973510742

Token 659: ':
' (ID: 734)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.43449509143829346
    2. '&' → logprob: -1.0594950914382935
    3. '&gt' → logprob: -5.809494972229004
    4. '%' → logprob: -7.059494972229004
    5. '>>' → logprob: -7.059494972229004
    6. ' >' → logprob: -8.434494972229004
    7. ' &' → logprob: -8.684494972229004
    8. ':' → logprob: -8.809494972229004
    9. ':
' → logprob: -9.309494972229004
    10. '>>&' → logprob: -9.684494972229004

Token 660: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11529313772916794
    2. 'n' → logprob: -2.240293025970459
    3. '   ' → logprob: -6.240293025970459
    4. '	n' → logprob: -7.740293025970459
    5. '```' → logprob: -10.365293502807617
    6. ' c' → logprob: -10.490293502807617
    7. ' ' → logprob: -11.990293502807617
    8. '       ' → logprob: -11.990293502807617
    9. '(n' → logprob: -12.990293502807617
    10. ',n' → logprob: -12.990293502807617

Token 661: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5827077627182007
    2. 'n' → logprob: -0.8327077627182007
    3. ' c' → logprob: -5.58270788192749
    4. 'c' → logprob: -6.20770788192749
    5. '   ' → logprob: -7.33270788192749
    6. '	n' → logprob: -8.207707405090332
    7. ' ' → logprob: -10.332707405090332
    8. '
' → logprob: -12.457707405090332
    9. '	c' → logprob: -12.957707405090332
    10. '  ' → logprob: -13.707707405090332

Token 662: '&' (ID: 5)
  Prédit: '&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.030269090086221695
    2. '>>' → logprob: -3.530269145965576
    3. '//=' → logprob: -8.155268669128418
    4. ' &=' → logprob: -9.280268669128418
    5. '&
' → logprob: -9.655268669128418
    6. ' >>=' → logprob: -9.905268669128418
    7. '=n' → logprob: -12.280268669128418
    8. '&gt' → logprob: -12.530268669128418
    9. ' &' → logprob: -12.905268669128418
    10. '
' → logprob: -13.030268669128418

Token 663: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012410636991262436
    2. '=n' → logprob: -7.001241207122803
    3. '=-' → logprob: -8.126240730285645
    4. '1' → logprob: -10.751240730285645
    5. '=(' → logprob: -11.876240730285645
    6. 'n' → logprob: -13.251240730285645
    7. ' n' → logprob: -14.001240730285645
    8. '=
' → logprob: -14.126240730285645
    9. '-' → logprob: -14.251240730285645
    10. '=(-' → logprob: -14.751240730285645

Token 664: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00267494167201221
    2. '(n' → logprob: -6.5026750564575195
    3. ' n' → logprob: -6.7526750564575195
    4. ' (' → logprob: -13.12767505645752
    5. '	n' → logprob: -13.62767505645752
    6. '(' → logprob: -14.00267505645752
    7. '(
' → logprob: -15.62767505645752
    8. ' ' → logprob: -17.502674102783203
    9. '_n' → logprob: -17.502674102783203
    10. '-' → logprob: -17.877674102783203

Token 665: '-' (ID: 12)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.017765667289495468
    2. '(n' → logprob: -4.267765522003174
    3. ' n' → logprob: -5.642765522003174
    4. ' (' → logprob: -10.517765998840332
    5. '(' → logprob: -11.392765998840332
    6. '	n' → logprob: -12.142765998840332
    7. '
' → logprob: -13.142765998840332
    8. '-' → logprob: -13.267765998840332
    9. ' ' → logprob: -13.892765998840332
    10. '_n' → logprob: -13.892765998840332

Token 666: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.130576806142926e-05
    2. ' ' → logprob: -10.375031471252441
    3. '  ' → logprob: -19.000030517578125
    4. '１' → logprob: -19.500030517578125
    5. '```' → logprob: -20.375030517578125
    6. ' ' → logprob: -20.625030517578125
    7. '   ' → logprob: -20.750030517578125
    8. '
' → logprob: -21.062530517578125
    9. '۱' → logprob: -21.250030517578125
    10. '' → logprob: -21.312530517578125

Token 667: ';c' (ID: 166578)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0032412861473858356
    2. '  
' → logprob: -6.253241062164307
    3. ',' → logprob: -8.253241539001465
    4. ',c' → logprob: -8.253241539001465
    5. ' 
' → logprob: -8.378241539001465
    6. ' c' → logprob: -8.628241539001465
    7. '	c' → logprob: -9.503241539001465
    8. '  ' → logprob: -9.753241539001465
    9. ' ' → logprob: -10.253241539001465
    10. 'c' → logprob: -10.253241539001465

Token 668: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4399045407772064
    2. ' +=' → logprob: -1.5649045705795288
    3. '+' → logprob: -1.9399045705795288
    4. ' +' → logprob: -6.189904689788818
    5. ' ' → logprob: -7.314904689788818
    6. '++' → logprob: -9.56490421295166
    7. '+
' → logprob: -9.81490421295166
    8. '	' → logprob: -9.93990421295166
    9. '+c' → logprob: -10.18990421295166
    10. '1' → logprob: -10.68990421295166

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015023599844425917
    2. ' ' → logprob: -6.501502513885498
    3. ' ' → logprob: -18.626502990722656
    4. '  ' → logprob: -18.876502990722656
    5. '   ' → logprob: -20.501502990722656
    6. '۱' → logprob: -21.126502990722656
    7. '１' → logprob: -21.376502990722656
    8. '```' → logprob: -22.001502990722656
    9. '    ' → logprob: -22.376502990722656
    10. '	' → logprob: -22.501502990722656

Token 670: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6554244756698608
    2. ' return' → logprob: -0.9054244756698608
    3. ' ' → logprob: -2.9054245948791504
    4. '  
' → logprob: -4.15542459487915
    5. '	return' → logprob: -5.78042459487915
    6. 'return' → logprob: -7.28042459487915
    7. '
' → logprob: -7.65542459487915
    8. ' c' → logprob: -8.155424118041992
    9. '   ' → logprob: -8.405424118041992
    10. '<|end|>' → logprob: -8.655424118041992

Token 671: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.19862936437129974
    2. ' ' → logprob: -2.448629379272461
    3. ' 
' → logprob: -2.448629379272461
    4. '	return' → logprob: -5.823629379272461
    5. '  
' → logprob: -6.823629379272461
    6. ' ' → logprob: -7.198629379272461
    7. ' c' → logprob: -7.448629379272461
    8. 'return' → logprob: -7.948629379272461
    9. ' ,' → logprob: -8.198629379272461
    10. '	' → logprob: -8.323629379272461

Token 672: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011055603623390198
    2. ' c' → logprob: -4.5110554695129395
    3. '	c' → logprob: -11.761055946350098
    4. ')c' → logprob: -19.26105499267578
    5. ' ' → logprob: -19.76105499267578
    6. ' ' → logprob: -19.88605499267578
    7. '$c' → logprob: -20.26105499267578
    8. '
' → logprob: -20.38605499267578
    9. '(c' → logprob: -20.51105499267578
    10. ',c' → logprob: -20.63605499267578

Token 673: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 674: 'def' (ID: 1314)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0085649490356445
    2. '<|end|>' → logprob: -1.0085649490356445
    3. '#' → logprob: -2.2585649490356445
    4. ' ' → logprob: -3.6335649490356445
    5. '[' → logprob: -3.8835649490356445
    6. 'def' → logprob: -4.1335649490356445
    7. '```' → logprob: -4.1335649490356445
    8. '<|end|>' → logprob: -4.2585649490356445
    9. ':' → logprob: -4.3835649490356445
    10. '
' → logprob: -4.3835649490356445

Token 675: ' base' (ID: 3611)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.6851294040679932
    2. 'main' → logprob: -1.6851294040679932
    3. 'pop' → logprob: -1.8101294040679932
    4. 'pow' → logprob: -2.935129404067993
    5. 'is' → logprob: -3.935129404067993
    6. 'bis' → logprob: -4.185129165649414
    7. 'dfs' → logprob: -4.935129165649414
    8. 'binary' → logprob: -5.060129165649414
    9. 'ceil' → logprob: -5.435129165649414
    10. 'bs' → logprob: -5.560129165649414

Token 676: '_' (ID: 62)
  Prédit: '_convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_convert' → logprob: -1.060922384262085
    2. 'convert' → logprob: -1.435922384262085
    3. '_repr' → logprob: -1.685922384262085
    4. 'conv' → logprob: -2.435922384262085
    5. 'case' → logprob: -2.685922384262085
    6. '(n' → logprob: -4.185922622680664
    7. '_n' → logprob: -4.685922622680664
    8. '_' → logprob: -5.060922622680664
    9. '(' → logprob: -5.310922622680664
    10. '_converter' → logprob: -5.685922622680664

Token 677: '10' (ID: 702)
  Prédit: 'convert'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'convert' → logprob: -0.36322489380836487
    2. 'count' → logprob: -2.738224983215332
    3. 'change' → logprob: -2.863224983215332
    4. 'conv' → logprob: -2.988224983215332
    5. 'n' → logprob: -3.238224983215332
    6. 'string' → logprob: -3.738224983215332
    7. '10' → logprob: -4.238224983215332
    8. 'print' → logprob: -4.363224983215332
    9. 'cnt' → logprob: -4.488224983215332
    10. 'converter' → logprob: -4.738224983215332

Token 678: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.7368287444114685
    2. 'to' → logprob: -1.2368288040161133
    3. '(n' → logprob: -2.9868288040161133
    4. '_repr' → logprob: -2.9868288040161133
    5. '(x' → logprob: -3.4868288040161133
    6. '_encode' → logprob: -3.8618288040161133
    7. 'To' → logprob: -5.111828804016113
    8. 'string' → logprob: -5.236828804016113
    9. '(num' → logprob: -5.486828804016113
    10. '_str' → logprob: -5.611828804016113

Token 679: '_n' (ID: 2170)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8789618611335754
    2. 'k' → logprob: -1.6289618015289307
    3. '2' → logprob: -1.8789618015289307
    4. 'base' → logprob: -3.0039618015289307
    5. 'x' → logprob: -3.2539618015289307
    6. 'bin' → logprob: -3.2539618015289307
    7. 'b' → logprob: -3.5039618015289307
    8. 's' → logprob: -3.7539618015289307
    9. 'binary' → logprob: -3.7539618015289307
    10. '(n' → logprob: -5.12896203994751

Token 680: '(X' (ID: 17061)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.9809027314186096
    2. '(base' → logprob: -1.7309026718139648
    3. '_' → logprob: -2.230902671813965
    4. '_base' → logprob: -2.480902671813965
    5. '(' → logprob: -2.605902671813965
    6. '(x' → logprob: -3.230902671813965
    7. 'def' → logprob: -3.230902671813965
    8. '_(' → logprob: -4.105902671813965
    9. '(num' → logprob: -4.480902671813965
    10. '(_)' → logprob: -4.605902671813965

Token 681: ',' (ID: 11)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.49531224370002747
    2. '(x' → logprob: -1.370312213897705
    3. '(' → logprob: -2.370312213897705
    4. '(X' → logprob: -3.745312213897705
    5. '):' → logprob: -4.120312213897705
    6. ')' → logprob: -6.745312213897705
    7. ' (' → logprob: -7.870312213897705
    8. '(N' → logprob: -8.120312690734863
    9. '(a' → logprob: -8.245312690734863
    10. '(base' → logprob: -8.620312690734863

Token 682: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00039825684507377446
    2. 'N' → logprob: -8.500398635864258
    3. ' n' → logprob: -9.000398635864258
    4. 'b' → logprob: -10.125398635864258
    5. 'def' → logprob: -11.500398635864258
    6. 'd' → logprob: -12.125398635864258
    7. 'x' → logprob: -12.625398635864258
    8. 'base' → logprob: -13.000398635864258
    9. '```' → logprob: -13.375398635864258
    10. ')' → logprob: -13.375398635864258

Token 683: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008227337966673076
    2. '):
' → logprob: -7.2508225440979
    3. ',' → logprob: -9.625823020935059
    4. ')' → logprob: -10.500823020935059
    5. ':' → logprob: -11.250823020935059
    6. ',n' → logprob: -13.375823020935059
    7. '):
' → logprob: -13.375823020935059
    8. ' ):' → logprob: -13.875823020935059
    9. '=' → logprob: -14.875823020935059
    10. '(n' → logprob: -15.250823020935059

Token 684: ' if' (ID: 538)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.8542606830596924
    2. ' r' → logprob: -1.7292606830596924
    3. ' q' → logprob: -1.8542606830596924
    4. '   ' → logprob: -2.1042606830596924
    5. ' if' → logprob: -3.1042606830596924
    6. ' s' → logprob: -3.2292606830596924
    7. 'r' → logprob: -4.604260444641113
    8. ' R' → logprob: -5.104260444641113
    9. ' out' → logprob: -5.229260444641113
    10. 'q' → logprob: -5.604260444641113

Token 685: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0011874916963279247
    2. ' X' → logprob: -6.751187324523926
    3. 'not' → logprob: -11.501187324523926
    4. ' not' → logprob: -11.876187324523926
    5. 'x' → logprob: -16.751188278198242
    6. ' ' → logprob: -16.876188278198242
    7. '0' → logprob: -17.126188278198242
    8. '	X' → logprob: -17.251188278198242
    9. 'n' → logprob: -17.626188278198242
    10. '!' → logprob: -17.751188278198242

Token 686: '//' (ID: 393)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7112822532653809
    2. ' ==' → logprob: -0.7112822532653809
    3. '<' → logprob: -4.711282253265381
    4. ' <' → logprob: -4.836282253265381
    5. '=' → logprob: -7.586282253265381
    6. ' ' → logprob: -8.586282730102539
    7. '<n' → logprob: -8.586282730102539
    8. '[' → logprob: -10.711282730102539
    9. ' =' → logprob: -10.711282730102539
    10. ':' → logprob: -10.961282730102539

Token 687: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -7.493430894101039e-05
    2. ' n' → logprob: -9.500075340270996
    3. '10' → logprob: -17.12507438659668
    4. '
' → logprob: -18.25007438659668
    5. '	n' → logprob: -18.62507438659668
    6. '_n' → logprob: -18.75007438659668
    7. ')n' → logprob: -19.62507438659668
    8. '1' → logprob: -20.00007438659668
    9. '(n' → logprob: -20.25007438659668
    10. '=n' → logprob: -20.37507438659668

Token 688: ':return' (ID: 188357)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3409748673439026
    2. '>' → logprob: -1.3409748077392578
    3. ' >' → logprob: -4.090974807739258
    4. '>:' → logprob: -5.215974807739258
    5. ' :' → logprob: -5.590974807739258
    6. '==' → logprob: -7.465974807739258
    7. '):' → logprob: -8.090974807739258
    8. ':
' → logprob: -9.340974807739258
    9. '!=' → logprob: -9.465974807739258
    10. ' ==' → logprob: -9.465974807739258

Token 689: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.0031781906727701426
    2. ' base' → logprob: -5.753178119659424
    3. '(base' → logprob: -14.753178596496582
    4. '	base' → logprob: -16.753177642822266
    5. 'str' → logprob: -17.378177642822266
    6. ' ' → logprob: -17.753177642822266
    7. '   ' → logprob: -17.753177642822266
    8. 'f' → logprob: -18.753177642822266
    9. 'b' → logprob: -18.878177642822266
    10. '
' → logprob: -19.503177642822266

Token 690: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: 0.0
    2. '10' → logprob: -17.0
    3. '_base' → logprob: -20.125
    4. '```' → logprob: -20.375
    5. '_
' → logprob: -21.125
    6. '
' → logprob: -21.125
    7. '‌' → logprob: -21.375
    8. ' ' → logprob: -21.75
    9. 'base' → logprob: -22.25
    10. ' _' → logprob: -22.5

Token 691: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00020354038861114532
    2. '_' → logprob: -8.500203132629395
    3. ' ' → logprob: -17.00020408630371
    4. '```' → logprob: -19.75020408630371
    5. '１０' → logprob: -20.75020408630371
    6. '
' → logprob: -20.75020408630371
    7. 'base' → logprob: -21.12520408630371
    8. '۱۰' → logprob: -22.37520408630371
    9. ' ' → logprob: -22.50020408630371
    10. '
' → logprob: -22.62520408630371

Token 692: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '```' → logprob: -19.5
    3. ' _' → logprob: -19.875
    4. 'to' → logprob: -20.125
    5. '
' → logprob: -20.75
    6. 'To' → logprob: -21.0
    7. '*_' → logprob: -21.125
    8. '"_' → logprob: -21.375
    9. '_t' → logprob: -21.375
    10. '(_' → logprob: -21.5

Token 693: '_n' (ID: 2170)
  Prédit: '_n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_n' → logprob: -0.0015023599844425917
    2. 'n' → logprob: -6.501502513885498
    3. '(n' → logprob: -18.126502990722656
    4. '
' → logprob: -18.376502990722656
    5. 'a' → logprob: -18.501502990722656
    6. '```' → logprob: -18.876502990722656
    7. 'X' → logprob: -19.001502990722656
    8. '_' → logprob: -19.126502990722656
    9. '	n' → logprob: -19.501502990722656
    10. 'int' → logprob: -19.501502990722656

Token 694: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -4.842555426876061e-06
    2. 'X' → logprob: -12.750004768371582
    3. '(' → logprob: -13.625004768371582
    4. ' (' → logprob: -14.500004768371582
    5. '(
' → logprob: -15.750004768371582
    6. '((' → logprob: -16.8750057220459
    7. '(x' → logprob: -20.0000057220459
    8. ' X' → logprob: -21.2500057220459
    9. '[X' → logprob: -21.5000057220459
    10. ' ' → logprob: -22.1250057220459

Token 695: '//' (ID: 393)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.03978914022445679
    2. 'X' → logprob: -3.2897891998291016
    3. '//' → logprob: -6.414789199829102
    4. ' (' → logprob: -9.664789199829102
    5. '(
' → logprob: -11.039789199829102
    6. '(' → logprob: -11.164789199829102
    7. ' X' → logprob: -12.664789199829102
    8. '((' → logprob: -12.789789199829102
    9. ' //' → logprob: -13.164789199829102
    10. '
' → logprob: -13.164789199829102

Token 696: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001097417771234177
    2. ' n' → logprob: -9.125109672546387
    3. '(n' → logprob: -14.375109672546387
    4. '	n' → logprob: -16.375110626220703
    5. '_n' → logprob: -16.500110626220703
    6. '
' → logprob: -18.375110626220703
    7. ')n' → logprob: -18.375110626220703
    8. ' ' → logprob: -18.750110626220703
    9. '   ' → logprob: -19.125110626220703
    10. ',n' → logprob: -19.625110626220703

Token 697: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.012574875727295876
    2. ',' → logprob: -4.387574672698975
    3. 'n' → logprob: -9.887575149536133
    4. '(n' → logprob: -12.512575149536133
    5. ' n' → logprob: -12.637575149536133
    6. ')n' → logprob: -12.762575149536133
    7. ')' → logprob: -13.137575149536133
    8. ' ,' → logprob: -13.762575149536133
    9. ')+' → logprob: -14.262575149536133
    10. ',X' → logprob: -15.387575149536133

Token 698: ')+' (ID: 16161)
  Prédit: ')+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.00799849908798933
    2. ')' → logprob: -5.257998466491699
    3. ')+(' → logprob: -6.382998466491699
    4. '")+' → logprob: -7.257998466491699
    5. ')+'' → logprob: -8.5079984664917
    6. '")+"' → logprob: -9.7579984664917
    7. ' ' → logprob: -10.2579984664917
    8. ')+"' → logprob: -11.0079984664917
    9. ' )' → logprob: -11.0079984664917
    10. ']+' → logprob: -11.6329984664917

Token 699: '[' (ID: 58)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.00010223194840364158
    2. ' str' → logprob: -9.250102043151855
    3. '(str' → logprob: -12.500102043151855
    4. '[str' → logprob: -13.000102043151855
    5. '	str' → logprob: -18.250102996826172
    6. ' ' → logprob: -18.500102996826172
    7. 'chr' → logprob: -18.625102996826172
    8. 'f' → logprob: -19.250102996826172
    9. 'repr' → logprob: -19.875102996826172
    10. '=str' → logprob: -20.750102996826172

Token 700: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -6.392202976712724e-06
    2. ' X' → logprob: -12.000006675720215
    3. '(X' → logprob: -16.0000057220459
    4. 'int' → logprob: -18.6250057220459
    5. ' ' → logprob: -19.3750057220459
    6. '   ' → logprob: -20.1250057220459
    7. 'x' → logprob: -20.2500057220459
    8. '  ' → logprob: -20.3750057220459
    9. 'str' → logprob: -20.3750057220459
    10. '	X' → logprob: -21.0000057220459

Token 701: '%n' (ID: 73647)
  Prédit: '%n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%n' → logprob: -0.004257900174707174
    2. ' %' → logprob: -5.504257678985596
    3. '%' → logprob: -8.629258155822754
    4. '%
' → logprob: -15.129258155822754
    5. '%i' → logprob: -16.004257202148438
    6. '%x' → logprob: -16.754257202148438
    7. '
' → logprob: -16.754257202148438
    8. '%d' → logprob: -17.254257202148438
    9. '%c' → logprob: -17.379257202148438
    10. 'n' → logprob: -17.629257202148438

Token 702: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004909569397568703
    2. ' ]' → logprob: -7.875491142272949
    3. ']
' → logprob: -9.12549114227295
    4. ']

' → logprob: -13.50049114227295
    5. ')' → logprob: -15.50049114227295
    6. '']' → logprob: -16.250490188598633
    7. ']
' → logprob: -16.500490188598633
    8. ' ]
' → logprob: -16.625490188598633
    9. '<|end|>' → logprob: -16.625490188598633
    10. '()]' → logprob: -16.875490188598633

Token 703: ' return' (ID: 622)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.37110936641693115
    2. 'else' → logprob: -1.2461093664169312
    3. '+[' → logprob: -4.371109485626221
    4. '[' → logprob: -5.121109485626221
    5. '+' → logprob: -6.121109485626221
    6. ' +' → logprob: -7.121109485626221
    7. '[X' → logprob: -7.996109485626221
    8. '[]' → logprob: -8.996109008789062
    9. '	else' → logprob: -9.121109008789062
    10. ' [' → logprob: -9.121109008789062

Token 704: ' [' (ID: 723)
  Prédit: '[X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.030367277562618256
    2. '[' → logprob: -3.530367374420166
    3. ' [' → logprob: -7.405367374420166
    4. '[]' → logprob: -13.030366897583008
    5. '[n' → logprob: -13.155366897583008
    6. '[x' → logprob: -14.030366897583008
    7. '[List' → logprob: -14.155366897583008
    8. '[Int' → logprob: -14.530366897583008
    9. '[int' → logprob: -15.030366897583008
    10. '[
' → logprob: -15.155366897583008

Token 705: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -4.320199877838604e-07
    2. ' X' → logprob: -15.0
    3. 'x' → logprob: -18.5
    4. '	X' → logprob: -21.125
    5. '(X' → logprob: -21.125
    6. '_X' → logprob: -22.75
    7. '0' → logprob: -22.875
    8. ']' → logprob: -23.0
    9. '```' → logprob: -23.875
    10. '`' → logprob: -24.25

Token 706: '%n' (ID: 73647)
  Prédit: '%n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%n' → logprob: -0.00038658222183585167
    2. ' %' → logprob: -8.500386238098145
    3. '%' → logprob: -8.625386238098145
    4. ']%' → logprob: -13.375386238098145
    5. '%s' → logprob: -14.500386238098145
    6. ']' → logprob: -14.750386238098145
    7. '()%' → logprob: -15.250386238098145
    8. '[n' → logprob: -15.375386238098145
    9. ')%' → logprob: -15.625386238098145
    10. '[%' → logprob: -16.50038719177246

Token 707: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 708: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 709: ' base' (ID: 3611)
  Prédit: 'base'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'base' → logprob: -0.002089592395350337
    2. 'n' → logprob: -6.627089500427246
    3. ' base' → logprob: -7.627089500427246
    4. 'main' → logprob: -9.502089500427246
    5. 'pow' → logprob: -9.627089500427246
    6. 'bit' → logprob: -10.627089500427246
    7. 'int' → logprob: -11.502089500427246
    8. 'to' → logprob: -11.502089500427246
    9. 'print' → logprob: -11.752089500427246
    10. 'l' → logprob: -11.752089500427246

Token 710: '_n' (ID: 2170)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.531315314830863e-06
    2. '_n' → logprob: -14.000003814697266
    3. '10' → logprob: -14.250003814697266
    4. '=' → logprob: -14.500003814697266
    5. '```' → logprob: -14.625003814697266
    6. '<|end|>' → logprob: -15.000003814697266
    7. '_
' → logprob: -15.375003814697266
    8. ' _' → logprob: -16.125003814697266
    9. '_=' → logprob: -16.250003814697266
    10. '_a' → logprob: -17.125003814697266

Token 711: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.00020938136731274426
    2. 'to' → logprob: -8.50020980834961
    3. '_t' → logprob: -12.87520980834961
    4. '_' → logprob: -13.37520980834961
    5. 'To' → logprob: -14.12520980834961
    6. 't' → logprob: -15.75020980834961
    7. '_TO' → logprob: -15.75020980834961
    8. '```' → logprob: -15.75020980834961
    9. 'toa' → logprob: -16.00020980834961
    10. '(' → logprob: -16.12520980834961

Token 712: '_' (ID: 62)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3873122036457062
    2. '_' → logprob: -1.1373121738433838
    3. '```' → logprob: -8.512311935424805
    4. 'base' → logprob: -9.387311935424805
    5. '_t' → logprob: -10.387311935424805
    6. 'int' → logprob: -10.512311935424805
    7. '
' → logprob: -11.137311935424805
    8. '``' → logprob: -11.262311935424805
    9. '_base' → logprob: -11.387311935424805
    10. '１０' → logprob: -11.387311935424805

Token 713: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.128163257315464e-07
    2. 'base' → logprob: -15.25
    3. '```' → logprob: -18.0
    4. 'n' → logprob: -18.875
    5. '_' → logprob: -19.125
    6. '１０' → logprob: -19.25
    7. 'int' → logprob: -19.375
    8. 'decimal' → logprob: -20.625
    9. '``' → logprob: -21.625
    10. '(base' → logprob: -22.0

Token 714: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.04291480779647827
    2. '(x' → logprob: -3.542914867401123
    3. '(arr' → logprob: -5.167914867401123
    4. '(A' → logprob: -6.167914867401123
    5. '(L' → logprob: -6.667914867401123
    6. '(S' → logprob: -7.042914867401123
    7. '(n' → logprob: -7.292914867401123
    8. '(a' → logprob: -7.542914867401123
    9. '(B' → logprob: -7.667914867401123
    10. '(lst' → logprob: -7.917914867401123

Token 715: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2145618349313736
    2. ',X' → logprob: -2.339561939239502
    3. ',n' → logprob: -2.464561939239502
    4. ' ,' → logprob: -5.589561939239502
    5. '(X' → logprob: -6.339561939239502
    6. ',x' → logprob: -6.589561939239502
    7. ',l' → logprob: -6.714561939239502
    8. ',L' → logprob: -7.214561939239502
    9. ',N' → logprob: -7.464561939239502
    10. ',(' → logprob: -8.339561462402344

Token 716: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004809722304344177
    2. ' n' → logprob: -5.379809856414795
    3. 'lambda' → logprob: -9.379809379577637
    4. 'x' → logprob: -10.254809379577637
    5. '<|end|>' → logprob: -10.879809379577637
    6. 'X' → logprob: -11.254809379577637
    7. ')' → logprob: -11.504809379577637
    8. '[n' → logprob: -12.004809379577637
    9. ' ' → logprob: -12.754809379577637
    10. '[' → logprob: -13.004809379577637

Token 717: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20175206661224365
    2. '):' → logprob: -1.7017520666122437
    3. '):
' → logprob: -8.076751708984375
    4. ')' → logprob: -11.201751708984375
    5. '):

' → logprob: -11.701751708984375
    6. ',X' → logprob: -13.326751708984375
    7. ',' → logprob: -13.451751708984375
    8. ',x' → logprob: -13.701751708984375
    9. ' ):
' → logprob: -14.451751708984375
    10. ',n' → logprob: -15.076751708984375

Token 718: ' return' (ID: 622)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5125912427902222
    2. 'res' → logprob: -1.3875912427902222
    3. 'ret' → logprob: -2.7625913619995117
    4. ' res' → logprob: -3.0125913619995117
    5. 's' → logprob: -4.262591361999512
    6. ' r' → logprob: -4.887591361999512
    7. 'out' → logprob: -5.012591361999512
    8. 'ans' → logprob: -5.887591361999512
    9. ' ret' → logprob: -6.012591361999512
    10. '```' → logprob: -6.762591361999512

Token 719: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0005989041528664529
    2. ' sum' → logprob: -7.500598907470703
    3. 'int' → logprob: -10.000598907470703
    4. '(sum' → logprob: -15.125598907470703
    5. '0' → logprob: -15.750598907470703
    6. ' int' → logprob: -16.500598907470703
    7. '	sum' → logprob: -18.250598907470703
    8. ' ' → logprob: -18.875598907470703
    9. '=sum' → logprob: -19.500598907470703
    10. '[int' → logprob: -19.500598907470703

Token 720: '(int' (ID: 2742)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.3886653184890747
    2. '[x' → logprob: -1.8886653184890747
    3. '([' → logprob: -2.013665199279785
    4. '[i' → logprob: -4.513665199279785
    5. 'x' → logprob: -4.763665199279785
    6. '(i' → logprob: -4.888665199279785
    7. '(' → logprob: -5.763665199279785
    8. '[' → logprob: -5.888665199279785
    9. '(d' → logprob: -7.013665199279785
    10. '(v' → logprob: -7.263665199279785

Token 721: '(str' (ID: 7946)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.38226890563964844
    2. '(d' → logprob: -1.5072689056396484
    3. '(str' → logprob: -3.5072689056396484
    4. '(a' → logprob: -3.5072689056396484
    5. '(c' → logprob: -4.007268905639648
    6. '(i' → logprob: -4.757268905639648
    7. '(X' → logprob: -5.507268905639648
    8. '(s' → logprob: -6.382268905639648
    9. '(v' → logprob: -6.382268905639648
    10. '(e' → logprob: -7.382268905639648

Token 722: '(X' (ID: 17061)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.0178542137145996
    2. '(X' → logprob: -1.3928542137145996
    3. 'X' → logprob: -1.5178542137145996
    4. 'x' → logprob: -2.5178542137145996
    5. '(d' → logprob: -3.1428542137145996
    6. '(i' → logprob: -3.3928542137145996
    7. 'd' → logprob: -5.2678542137146
    8. 'i' → logprob: -5.3928542137146
    9. '(c' → logprob: -6.8928542137146
    10. '(a' → logprob: -7.0178542137146

Token 723: ')[' (ID: 13637)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0005271765403449535
    2. '[x' → logprob: -8.375527381896973
    3. '[::-' → logprob: -9.250527381896973
    4. '[' → logprob: -10.250527381896973
    5. '[idx' → logprob: -10.375527381896973
    6. '[_' → logprob: -10.625527381896973
    7. '[k' → logprob: -11.125527381896973
    8. '[j' → logprob: -11.125527381896973
    9. ')' → logprob: -11.500527381896973
    10. '[n' → logprob: -11.625527381896973

Token 724: '-' (ID: 12)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015070053050294518
    2. '[i' → logprob: -8.001506805419922
    3. '::-' → logprob: -8.251506805419922
    4. '_i' → logprob: -8.376506805419922
    5. ':i' → logprob: -9.001506805419922
    6. ' i' → logprob: -9.001506805419922
    7. '_' → logprob: -9.126506805419922
    8. 'j' → logprob: -10.251506805419922
    9. '[::-' → logprob: -10.251506805419922
    10. '-i' → logprob: -10.376506805419922

Token 725: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12328913062810898
    2. '(i' → logprob: -2.248289108276367
    3. '(' → logprob: -4.623289108276367
    4. '{i' → logprob: -8.748289108276367
    5. '(_' → logprob: -9.248289108276367
    6. ' (' → logprob: -9.373289108276367
    7. '1' → logprob: -9.623289108276367
    8. ' i' → logprob: -10.248289108276367
    9. '[i' → logprob: -10.748289108276367
    10. '_(' → logprob: -10.748289108276367

Token 726: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.271651953458786
    2. '1' → logprob: -2.2716519832611084
    3. '])*' → logprob: -2.5216519832611084
    4. ']' → logprob: -3.3966519832611084
    5. ']*' → logprob: -4.271651744842529
    6. ':' → logprob: -5.521651744842529
    7. ' ])' → logprob: -7.646651744842529
    8. '*' → logprob: -7.896651744842529
    9. '])+' → logprob: -7.896651744842529
    10. ':i' → logprob: -8.521652221679688

Token 727: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '(' → logprob: -16.1250057220459
    4. '```' → logprob: -16.6250057220459
    5. '
' → logprob: -17.0000057220459
    6. '-' → logprob: -18.0000057220459
    7. '`' → logprob: -18.3750057220459
    8. '{' → logprob: -19.2500057220459
    9. '   ' → logprob: -19.2500057220459
    10. '2' → logprob: -19.7500057220459

Token 728: '])*' (ID: 114661)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.31356650590896606
    2. '])*' → logprob: -1.3135664463043213
    3. '],' → logprob: -8.938566207885742
    4. ':' → logprob: -10.063566207885742
    5. ']' → logprob: -10.188566207885742
    6. ']*' → logprob: -10.313566207885742
    7. ' ])' → logprob: -10.813566207885742
    8. ' ' → logprob: -10.938566207885742
    9. '])+' → logprob: -12.188566207885742
    10. ']*(' → logprob: -12.313566207885742

Token 729: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0012424940941855311
    2. 'n' → logprob: -7.376242637634277
    3. ' (' → logprob: -7.876242637634277
    4. '(' → logprob: -9.126242637634277
    5. '(pow' → logprob: -9.251242637634277
    6. 'pow' → logprob: -10.626242637634277
    7. '
' → logprob: -12.251242637634277
    8. ' n' → logprob: -13.876242637634277
    9. '((' → logprob: -14.876242637634277
    10. '(N' → logprob: -15.376242637634277

Token 730: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0009508833172731102
    2. '*i' → logprob: -7.125950813293457
    3. 'i' → logprob: -9.875950813293457
    4. '^' → logprob: -9.875950813293457
    5. '[i' → logprob: -10.625950813293457
    6. '*' → logprob: -11.750950813293457
    7. ' i' → logprob: -12.250950813293457
    8. '
' → logprob: -12.750950813293457
    9. '%i' → logprob: -13.750950813293457
    10. '**
' → logprob: -13.875950813293457

Token 731: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.676292231422849e-05
    2. ' i' → logprob: -11.000017166137695
    3. '	i' → logprob: -18.000017166137695
    4. '
' → logprob: -18.375017166137695
    5. ' ' → logprob: -19.750017166137695
    6. '_i' → logprob: -20.000017166137695
    7. '(i' → logprob: -20.500017166137695
    8. '(' → logprob: -20.750017166137695
    9. '
' → logprob: -21.125017166137695
    10. '```' → logprob: -21.500017166137695

Token 732: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07894707471132278
    2. 'for' → logprob: -2.578947067260742
    3. ' i' → logprob: -9.953947067260742
    4. 'i' → logprob: -12.078947067260742
    5. '	for' → logprob: -13.078947067260742
    6. ' ' → logprob: -14.078947067260742
    7. ')' → logprob: -14.328947067260742
    8. '+i' → logprob: -14.828947067260742
    9. '(i' → logprob: -16.328947067260742
    10. 'or' → logprob: -16.703947067260742

Token 733: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004169337451457977
    2. ' i' → logprob: -5.504169464111328
    3. 'range' → logprob: -9.379169464111328
    4. ' range' → logprob: -12.254169464111328
    5. '
' → logprob: -13.379169464111328
    6. '	i' → logprob: -15.504169464111328
    7. ' ' → logprob: -18.379169464111328
    8. 'enumer' → logprob: -18.629169464111328
    9. ')i' → logprob: -19.004169464111328
    10. ',i' → logprob: -19.004169464111328

Token 734: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011861803941428661
    2. 'in' → logprob: -7.001186370849609
    3. ' i' → logprob: -8.37618637084961
    4. ' range' → logprob: -10.87618637084961
    5. 'range' → logprob: -11.25118637084961
    6. 'i' → logprob: -12.12618637084961
    7. ')' → logprob: -12.87618637084961
    8. ',' → logprob: -13.00118637084961
    9. '<|end|>' → logprob: -14.00118637084961
    10. ' ' → logprob: -14.50118637084961

Token 735: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005233763717114925
    2. ' range' → logprob: -5.2552337646484375
    3. '	range' → logprob: -17.505233764648438
    4. ' ' → logprob: -19.255233764648438
    5. '
' → logprob: -19.755233764648438
    6. '(range' → logprob: -19.880233764648438
    7. '  ' → logprob: -23.630233764648438
    8. 'rang' → logprob: -23.630233764648438
    9. 'enumer' → logprob: -23.630233764648438
    10. '.range' → logprob: -23.755233764648438

Token 736: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00022678142704535276
    2. ' len' → logprob: -8.500226974487305
    3. '(len' → logprob: -10.750226974487305
    4. '0' → logprob: -13.875226974487305
    5. '	len' → logprob: -14.250226974487305
    6. '
' → logprob: -16.500226974487305
    7. '10' → logprob: -16.625226974487305
    8. '[len' → logprob: -16.875226974487305
    9. ' ' → logprob: -17.375226974487305
    10. '<len' → logprob: -17.625226974487305

Token 737: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -1.0087516784551553e-05
    2. '(X' → logprob: -11.62501049041748
    3. '(' → logprob: -14.00001049041748
    4. '((' → logprob: -15.62501049041748
    5. 'str' → logprob: -17.875009536743164
    6. '(Str' → logprob: -18.500009536743164
    7. '[str' → logprob: -19.000009536743164
    8. '(s' → logprob: -19.500009536743164
    9. '(S' → logprob: -19.500009536743164
    10. '(
' → logprob: -19.500009536743164

Token 738: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.014171971939504147
    2. '(str' → logprob: -4.264172077178955
    3. 'X' → logprob: -12.389171600341797
    4. '(' → logprob: -12.514171600341797
    5. '((' → logprob: -15.139171600341797
    6. '(x' → logprob: -15.139171600341797
    7. 'str' → logprob: -16.764171600341797
    8. '(
' → logprob: -17.514171600341797
    9. ' (' → logprob: -18.264171600341797
    10. ' str' → logprob: -18.389171600341797

Token 739: '))))

' (ID: 161772)
  Prédit: '(X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.033626336604356766
    2. '))' → logprob: -3.6586263179779053
    3. ')))' → logprob: -5.408626556396484
    4. ')' → logprob: -6.658626556396484
    5. 'X' → logprob: -6.658626556396484
    6. ' ' → logprob: -9.283626556396484
    7. '[X' → logprob: -10.033626556396484
    8. ' X' → logprob: -10.158626556396484
    9. ' ))' → logprob: -11.408626556396484
    10. '(str' → logprob: -11.408626556396484

Token 740: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5868845582008362
    2. '<|end|>' → logprob: -1.2118844985961914
    3. ')' → logprob: -3.2118844985961914
    4. '#' → logprob: -3.2118844985961914
    5. '```' → logprob: -3.7118844985961914
    6. '<|end|>' → logprob: -3.8368844985961914
    7. '
' → logprob: -5.836884498596191
    8. '[' → logprob: -6.086884498596191
    9. '_' → logprob: -6.211884498596191
    10. 'n' → logprob: -6.336884498596191

Token 741: ' int' (ID: 677)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.1348025798797607
    2. 'pow' → logprob: -1.6348025798797607
    3. 'bit' → logprob: -1.8848025798797607
    4. 'pop' → logprob: -2.5098025798797607
    5. 'base' → logprob: -2.6348025798797607
    6. 'is' → logprob: -2.8848025798797607
    7. 'prime' → logprob: -4.25980281829834
    8. 'dfs' → logprob: -4.63480281829834
    9. 'solve' → logprob: -4.63480281829834
    10. 'binary' → logprob: -4.63480281829834

Token 742: '_log' (ID: 9545)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.2902374565601349
    2. '_to' → logprob: -2.7902374267578125
    3. 'eger' → logprob: -3.1652374267578125
    4. 'rospection' → logprob: -3.2902374267578125
    5. 'er' → logprob: -4.1652374267578125
    6. '_' → logprob: -4.4152374267578125
    7. 'pow' → logprob: -4.5402374267578125
    8. 's' → logprob: -4.6652374267578125
    9. '()' → logprob: -5.2902374267578125
    10. 'ro' → logprob: -5.5402374267578125

Token 743: '(n' (ID: 2406)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2393019199371338
    2. '=lambda' → logprob: -1.8643019199371338
    3. '10' → logprob: -2.989301919937134
    4. '(lambda' → logprob: -5.989301681518555
    5. '_' → logprob: -6.489301681518555
    6. 'a' → logprob: -7.489301681518555
    7. '=' → logprob: -7.489301681518555
    8. 'lambda' → logprob: -8.114301681518555
    9. '```' → logprob: -8.614301681518555
    10. ' ' → logprob: -8.739301681518555

Token 744: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23932425677776337
    2. ',n' → logprob: -1.6143242120742798
    3. ',x' → logprob: -5.36432409286499
    4. ' ,' → logprob: -5.36432409286499
    5. '10' → logprob: -6.73932409286499
    6. 'n' → logprob: -6.86432409286499
    7. '(n' → logprob: -7.48932409286499
    8. '2' → logprob: -7.86432409286499
    9. ',k' → logprob: -7.86432409286499
    10. ',b' → logprob: -8.489324569702148

Token 745: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.5959020256996155
    2. 'x' → logprob: -0.8459020256996155
    3. 'a' → logprob: -5.345901966094971
    4. 'k' → logprob: -5.470901966094971
    5. ' b' → logprob: -5.720901966094971
    6. 'base' → logprob: -5.970901966094971
    7. 'n' → logprob: -6.470901966094971
    8. ' x' → logprob: -6.595901966094971
    9. ' base' → logprob: -6.595901966094971
    10. '2' → logprob: -8.345902442932129

Token 746: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10059643536806107
    2. '):
' → logprob: -2.3505964279174805
    3. '=' → logprob: -8.60059642791748
    4. '):
' → logprob: -8.85059642791748
    5. ')' → logprob: -9.97559642791748
    6. '):

' → logprob: -11.97559642791748
    7. ' ):' → logprob: -12.10059642791748
    8. '(' → logprob: -13.85059642791748
    9. ' ):
' → logprob: -14.72559642791748
    10. ':' → logprob: -15.22559642791748

Token 747: ' cnt' (ID: 27340)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2587602138519287
    2. 'import' → logprob: -2.5087602138519287
    3. 'return' → logprob: -3.5087602138519287
    4. ' import' → logprob: -3.5087602138519287
    5. ' i' → logprob: -3.7587602138519287
    6. ' from' → logprob: -3.8837602138519287
    7. ' if' → logprob: -4.258760452270508
    8. ' r' → logprob: -5.133760452270508
    9. 'from' → logprob: -5.258760452270508
    10. '0' → logprob: -5.758760452270508

Token 748: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020663968462031335
    2. '+=' → logprob: -9.12520694732666
    3. ' =' → logprob: -9.25020694732666
    4. '=int' → logprob: -14.75020694732666
    5. ' +=' → logprob: -14.87520694732666
    6. '=n' → logprob: -15.12520694732666
    7. '=-' → logprob: -15.37520694732666
    8. '=(' → logprob: -16.375205993652344
    9. '=i' → logprob: -16.625205993652344
    10. '=
' → logprob: -16.875205993652344

Token 749: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008265409851446748
    2. ' ' → logprob: -7.125826358795166
    3. '-' → logprob: -11.000826835632324
    4. '1' → logprob: -12.250826835632324
    5. 'int' → logprob: -15.750826835632324
    6. 'n' → logprob: -15.750826835632324
    7. ' -' → logprob: -16.063325881958008
    8. 'a' → logprob: -17.000825881958008
    9. '=' → logprob: -17.750825881958008
    10. 'ans' → logprob: -17.813325881958008

Token 750: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.11353980004787445
    2. 'while' → logprob: -2.488539695739746
    3. '
' → logprob: -4.113539695739746
    4. 'n' → logprob: -5.613539695739746
    5. '	while' → logprob: -6.113539695739746
    6. '   ' → logprob: -6.988539695739746
    7. ' n' → logprob: -8.488539695739746
    8. ' 
' → logprob: -8.488539695739746
    9. 'a' → logprob: -8.613539695739746
    10. 'While' → logprob: -9.113539695739746

Token 751: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.020094143226742744
    2. 'while' → logprob: -4.27009391784668
    3. ' n' → logprob: -5.64509391784668
    4. 'n' → logprob: -6.64509391784668
    5. ' if' → logprob: -7.77009391784668
    6. ' 
' → logprob: -8.77009391784668
    7. '	while' → logprob: -8.77009391784668
    8. ' a' → logprob: -9.27009391784668
    9. '   ' → logprob: -9.27009391784668
    10. ' ' → logprob: -9.52009391784668

Token 752: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.003979854751378298
    2. 'a' → logprob: -6.003979682922363
    3. ' n' → logprob: -6.503979682922363
    4. '(n' → logprob: -12.628979682922363
    5. ' a' → logprob: -13.503979682922363
    6. '1' → logprob: -14.378979682922363
    7. '(a' → logprob: -15.878979682922363
    8. '	n' → logprob: -16.12898063659668
    9. 'pow' → logprob: -16.25398063659668
    10. 'True' → logprob: -16.87898063659668

Token 753: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -5.7530574849806726e-05
    2. '>' → logprob: -10.625057220458984
    3. 'a' → logprob: -11.375057220458984
    4. '>a' → logprob: -12.000057220458984
    5. '//' → logprob: -12.250057220458984
    6. ' >=' → logprob: -12.375057220458984
    7. '≥' → logprob: -12.625057220458984
    8. '//=' → logprob: -12.875057220458984
    9. '/a' → logprob: -16.000057220458984
    10. '/=' → logprob: -16.250057220458984

Token 754: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3856492842023727e-06
    2. ' a' → logprob: -13.625000953674316
    3. '1' → logprob: -16.250001907348633
    4. '   ' → logprob: -19.000001907348633
    5. ' ' → logprob: -19.125001907348633
    6. '
' → logprob: -20.000001907348633
    7. '0' → logprob: -20.750001907348633
    8. '```' → logprob: -21.125001907348633
    9. '	a' → logprob: -21.250001907348633
    10. '  ' → logprob: -21.750001907348633

Token 755: ':n' (ID: 20109)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34948644042015076
    2. ':n' → logprob: -1.9744864702224731
    3. 'n' → logprob: -2.2244863510131836
    4. ':' → logprob: -3.0994863510131836
    5. ' and' → logprob: -7.349486351013184
    6. 'and' → logprob: -7.349486351013184
    7. ' n' → logprob: -7.474486351013184
    8. 'a' → logprob: -8.224486351013184
    9. ':a' → logprob: -8.599486351013184
    10. ' :' → logprob: -8.974486351013184

Token 756: '//=' (ID: 171954)
  Prédit: '//='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.02346523478627205
    2. '/=' → logprob: -4.148465156555176
    3. ' //' → logprob: -5.273465156555176
    4. '//' → logprob: -6.148465156555176
    5. '=n' → logprob: -9.648465156555176
    6. 'n' → logprob: -10.273465156555176
    7. '=' → logprob: -11.398465156555176
    8. ' /=' → logprob: -11.648465156555176
    9. '/' → logprob: -11.773465156555176
    10. 'a' → logprob: -12.898465156555176

Token 757: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.7697225252486533e-06
    2. ' a' → logprob: -12.500003814697266
    3. ' ' → logprob: -20.250003814697266
    4. '   ' → logprob: -20.750003814697266
    5. '10' → logprob: -22.250003814697266
    6. '	a' → logprob: -22.875003814697266
    7. '  ' → logprob: -23.875003814697266
    8. '_a' → logprob: -24.250003814697266
    9. '
' → logprob: -24.750003814697266
    10. '>a' → logprob: -25.000003814697266

Token 758: ';' (ID: 26)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.12275122106075287
    2. '
' → logprob: -2.622751235961914
    3. '	cnt' → logprob: -4.247751235961914
    4. ' cnt' → logprob: -4.497751235961914
    5. '   ' → logprob: -5.122751235961914
    6. '```' → logprob: -5.372751235961914
    7. '[cnt' → logprob: -5.747751235961914
    8. '(cnt' → logprob: -6.747751235961914
    9. '       ' → logprob: -6.747751235961914
    10. '<|end|>' → logprob: -7.997751235961914

Token 759: 'cnt' (ID: 33160)
  Prédit: 'cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.25205713510513306
    2. ' cnt' → logprob: -1.5020570755004883
    3. '	cnt' → logprob: -9.252057075500488
    4. '   ' → logprob: -10.752057075500488
    5. '(cnt' → logprob: -12.002057075500488
    6. '[cnt' → logprob: -13.127057075500488
    7. '
' → logprob: -13.627057075500488
    8. 'count' → logprob: -14.377057075500488
    9. ' ' → logprob: -14.627057075500488
    10. '```' → logprob: -15.752057075500488

Token 760: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.00021807955636177212
    2. '+' → logprob: -8.875218391418457
    3. ' +=' → logprob: -9.625218391418457
    4. '=' → logprob: -12.750218391418457
    5. '
' → logprob: -13.375218391418457
    6. ']+=' → logprob: -13.375218391418457
    7. '+='' → logprob: -13.625218391418457
    8. '+=(' → logprob: -13.750218391418457
    9. '```' → logprob: -14.000218391418457
    10. '++' → logprob: -14.125218391418457

Token 761: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '```' → logprob: -19.875001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '
' → logprob: -21.250001907348633
    6. '<|end|>' → logprob: -22.000001907348633
    7. '１' → logprob: -22.750001907348633
    8. '১' → logprob: -23.125001907348633
    9. '  ' → logprob: -23.375001907348633
    10. '`' → logprob: -23.625001907348633

Token 762: '
' (ID: 198)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.0018345147836953402
    2. ' ' → logprob: -6.626834392547607
    3. '   ' → logprob: -8.251834869384766
    4. 'return' → logprob: -8.626834869384766
    5. '	return' → logprob: -10.001834869384766
    6. '  ' → logprob: -12.251834869384766
    7. '
' → logprob: -12.501834869384766
    8. ' cnt' → logprob: -12.626834869384766
    9. ' 
' → logprob: -12.876834869384766
    10. ' ' → logprob: -13.126834869384766

Token 763: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1602276712656021
    2. 'return' → logprob: -1.910227656364441
    3. '	return' → logprob: -13.28522777557373
    4. '   ' → logprob: -13.78522777557373
    5. ' ' → logprob: -14.41022777557373
    6. '{return' → logprob: -16.035226821899414
    7. '```' → logprob: -17.660226821899414
    8. ':return' → logprob: -17.660226821899414
    9. 'Return' → logprob: -18.660226821899414
    10. '_return' → logprob: -19.285226821899414

Token 764: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.306760805164231e-05
    2. ' cnt' → logprob: -11.25001335144043
    3. '(cnt' → logprob: -17.25001335144043
    4. '	cnt' → logprob: -18.62501335144043
    5. 'count' → logprob: -18.87501335144043
    6. '[cnt' → logprob: -19.62501335144043
    7. 'ct' → logprob: -20.75001335144043
    8. 'counter' → logprob: -21.25001335144043
    9. '
' → logprob: -22.00001335144043
    10. 'c' → logprob: -22.50001335144043

Token 765: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 766: 'N' (ID: 45)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6644149422645569
    2. ':' → logprob: -2.664414882659912
    3. '#' → logprob: -2.789414882659912
    4. '
' → logprob: -2.789414882659912
    5. 'def' → logprob: -2.914414882659912
    6. '[' → logprob: -3.039414882659912
    7. '_' → logprob: -3.289414882659912
    8. 'n' → logprob: -3.289414882659912
    9. ' ' → logprob: -4.039414882659912
    10. ',' → logprob: -4.164414882659912

Token 767: ',M' (ID: 54127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18728286027908325
    2. ',' → logprob: -1.9372828006744385
    3. ' =' → logprob: -3.8122828006744385
    4. '=int' → logprob: -5.687283039093018
    5. ',N' → logprob: -7.312283039093018
    6. '=input' → logprob: -8.56228256225586
    7. ',n' → logprob: -9.18728256225586
    8. '=N' → logprob: -10.31228256225586
    9. ' ' → logprob: -10.43728256225586
    10. ' ,' → logprob: -10.43728256225586

Token 768: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00704403268173337
    2. ',' → logprob: -5.257043838500977
    3. ' =' → logprob: -6.507043838500977
    4. '=int' → logprob: -9.132043838500977
    5. ',N' → logprob: -9.507043838500977
    6. '=input' → logprob: -9.882043838500977
    7. ',M' → logprob: -10.757043838500977
    8. '=M' → logprob: -11.007043838500977
    9. '=N' → logprob: -11.132043838500977
    10. ',Q' → logprob: -12.632043838500977

Token 769: 'IL' (ID: 2654)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.08884774893522263
    2. ' map' → logprob: -3.0888476371765137
    3. 'I' → logprob: -3.8388476371765137
    4. 'IL' → logprob: -4.213847637176514
    5. 'ILL' → logprob: -7.338847637176514
    6. '0' → logprob: -7.588847637176514
    7. ' I' → logprob: -7.713847637176514
    8. '[' → logprob: -8.213848114013672
    9. 'S' → logprob: -8.463848114013672
    10. 'list' → logprob: -8.463848114013672

Token 770: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17015334963798523
    2. 'D' → logprob: -3.5451533794403076
    3. 'a' → logprob: -3.6701533794403076
    4. 'Q' → logprob: -4.1701531410217285
    5. 'd' → logprob: -4.2951531410217285
    6. 'G' → logprob: -4.2951531410217285
    7. 'A' → logprob: -4.9201531410217285
    8. '' → logprob: -5.4201531410217285
    9. 'b' → logprob: -5.5451531410217285
    10. 'DP' → logprob: -5.6701531410217285

Token 771: 'A' (ID: 32)
  Prédit: 'AB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AB' → logprob: -1.5845929384231567
    2. 'A' → logprob: -1.7095929384231567
    3. 'graph' → logprob: -1.7095929384231567
    4. 'G' → logprob: -1.7095929384231567
    5. 'dp' → logprob: -2.834592819213867
    6. 'ab' → logprob: -3.209592819213867
    7. 'a' → logprob: -3.834592819213867
    8. 'edges' → logprob: -4.084592819213867
    9. 'abc' → logprob: -4.209592819213867
    10. 'd' → logprob: -4.459592819213867

Token 772: ',S' (ID: 42097)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0043521481566131115
    2. '=[]' → logprob: -6.50435209274292
    3. '=[' → logprob: -7.00435209274292
    4. ' =' → logprob: -7.25435209274292
    5. '=b' → logprob: -8.129352569580078
    6. '=B' → logprob: -8.254352569580078
    7. ',' → logprob: -8.754352569580078
    8. '()' → logprob: -8.754352569580078
    9. ',b' → logprob: -9.754352569580078
    10. '=A' → logprob: -9.754352569580078

Token 773: '3' (ID: 18)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005344442906789482
    2. '=A' → logprob: -8.375534057617188
    3. '=L' → logprob: -9.000534057617188
    4. ' =' → logprob: -9.500534057617188
    5. '=[]' → logprob: -10.625534057617188
    6. '=B' → logprob: -11.000534057617188
    7. '=M' → logprob: -11.125534057617188
    8. '=N' → logprob: -11.750534057617188
    9. '=[' → logprob: -12.000534057617188
    10. ',' → logprob: -12.125534057617188

Token 774: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.0722858102526516e-05
    2. ' =' → logprob: -11.000041007995605
    3. '=A' → logprob: -11.375041007995605
    4. '=[]' → logprob: -12.750041007995605
    5. '=S' → logprob: -13.250041007995605
    6. '=L' → logprob: -13.375041007995605
    7. '=N' → logprob: -13.750041007995605
    8. '=[' → logprob: -13.875041007995605
    9. '=M' → logprob: -14.000041007995605
    10. '_=' → logprob: -14.125041007995605

Token 775: ' S' (ID: 336)
  Prédit: 'IL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'IL' → logprob: -0.10113561153411865
    2. 'ILL' → logprob: -2.351135730743408
    3. ' IL' → logprob: -8.10113525390625
    4. 'ILLE' → logprob: -8.72613525390625
    5. '	IL' → logprob: -9.60113525390625
    6. 'ILLS' → logprob: -9.60113525390625
    7. 'I' → logprob: -9.97613525390625
    8. 'ILLI' → logprob: -10.10113525390625
    9. 'ILD' → logprob: -10.10113525390625
    10. 'ILS' → logprob: -10.47613525390625

Token 776: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3555847108364105
    2. '().' → logprob: -1.230584740638733
    3. '(),' → logprob: -5.355584621429443
    4. '(' → logprob: -6.480584621429443
    5. ',' → logprob: -7.730584621429443
    6. '()
' → logprob: -8.730585098266602
    7. '=' → logprob: -9.605585098266602
    8. ' ()' → logprob: -9.855585098266602
    9. '();' → logprob: -10.730585098266602
    10. '()[' → logprob: -10.980585098266602

Token 777: 'S' (ID: 50)
  Prédit: 'SL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'SL' → logprob: -0.6632320284843445
    2. 'IL' → logprob: -0.9132320284843445
    3. 'S' → logprob: -2.6632320880889893
    4. 'ILL' → logprob: -5.41323184967041
    5. ' IL' → logprob: -5.66323184967041
    6. ' SL' → logprob: -6.03823184967041
    7. ' S' → logprob: -6.78823184967041
    8. '[]' → logprob: -7.16323184967041
    9. 'I' → logprob: -7.91323184967041
    10. '_IL' → logprob: -8.41323184967041

Token 778: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1606888473033905
    2. '3' → logprob: -1.910688877105713
    3. '(' → logprob: -9.160688400268555
    4. '()[' → logprob: -9.535688400268555
    5. '()
' → logprob: -9.660688400268555
    6. '().' → logprob: -9.910688400268555
    7. '()(' → logprob: -10.785688400268555
    8. '_' → logprob: -10.785688400268555
    9. '()]' → logprob: -10.785688400268555
    10. '())' → logprob: -11.160688400268555

Token 779: 'B' (ID: 33)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.061669036746025085
    2. '<|end|>' → logprob: -3.561669111251831
    3. 'for' → logprob: -5.061668872833252
    4. '[' → logprob: -5.061668872833252
    5. 'd' → logprob: -6.436668872833252
    6. '[]' → logprob: -6.436668872833252
    7. 'i' → logprob: -6.436668872833252
    8. '#' → logprob: -6.686668872833252
    9. 'if' → logprob: -6.811668872833252
    10. 'def' → logprob: -6.811668872833252

Token 780: '=str' (ID: 36106)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014867850579321384
    2. '=[]' → logprob: -4.639867782592773
    3. '=C' → logprob: -6.639867782592773
    4. ' =' → logprob: -6.889867782592773
    5. ',' → logprob: -7.139867782592773
    6. '=S' → logprob: -7.514867782592773
    7. '=[' → logprob: -7.889867782592773
    8. '=A' → logprob: -7.889867782592773
    9. '=int' → logprob: -8.639867782592773
    10. '=N' → logprob: -9.014867782592773

Token 781: '(S' (ID: 6181)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7651240825653076
    2. '(S' → logprob: -1.0151240825653076
    3. '(M' → logprob: -2.6401240825653076
    4. '()' → logprob: -3.1401240825653076
    5. 'input' → logprob: -4.390124320983887
    6. '(' → logprob: -4.390124320983887
    7. '(N' → logprob: -4.890124320983887
    8. '("")' → logprob: -5.265124320983887
    9. '(sys' → logprob: -5.515124320983887
    10. '(A' → logprob: -5.640124320983887

Token 782: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11354341357946396
    2. '(' → logprob: -2.6135435104370117
    3. '())' → logprob: -3.4885435104370117
    4. '[' → logprob: -7.113543510437012
    5. '2' → logprob: -7.363543510437012
    6. '())
' → logprob: -7.863543510437012
    7. ')' → logprob: -7.988543510437012
    8. '()' → logprob: -8.238543510437012
    9. '()[' → logprob: -8.363543510437012
    10. '(N' → logprob: -8.613543510437012

Token 783: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027118228375911713
    2. ').' → logprob: -4.02711820602417
    3. '[' → logprob: -6.02711820602417
    4. ')+' → logprob: -6.02711820602417
    5. '[::-' → logprob: -6.40211820602417
    6. ')[' → logprob: -6.90211820602417
    7. ' )' → logprob: -7.90211820602417
    8. '.split' → logprob: -8.652118682861328
    9. '[:' → logprob: -9.277118682861328
    10. ');' → logprob: -9.402118682861328

Token 784: 'C' (ID: 34)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.741027295589447
    2. '[' → logprob: -1.6160273551940918
    3. '#' → logprob: -2.741027355194092
    4. '=' → logprob: -3.241027355194092
    5. ')' → logprob: -3.491027355194092
    6. '<|end|>' → logprob: -3.866027355194092
    7. 'A' → logprob: -3.991027355194092
    8. ' ' → logprob: -4.116027355194092
    9. '[]' → logprob: -4.241027355194092
    10. 'x' → logprob: -4.491027355194092

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03292342275381088
    2. ' =' → logprob: -3.657923460006714
    3. '=[]' → logprob: -5.657923221588135
    4. '=input' → logprob: -7.532923221588135
    5. '[' → logprob: -8.157923698425293
    6. '=int' → logprob: -8.157923698425293
    7. '=[' → logprob: -8.282923698425293
    8. '_' → logprob: -8.532923698425293
    9. '=S' → logprob: -8.532923698425293
    10. '='' → logprob: -9.032923698425293

Token 786: ' S' (ID: 336)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -1.5789988040924072
    2. 'S' → logprob: -1.5789988040924072
    3. '[]' → logprob: -1.5789988040924072
    4. '""' → logprob: -1.5789988040924072
    5. 'A' → logprob: -3.3289988040924072
    6. '[' → logprob: -3.3289988040924072
    7. '0' → logprob: -3.8289988040924072
    8. 'list' → logprob: -3.9539988040924072
    9. 'str' → logprob: -4.828998565673828
    10. 'b' → logprob: -4.953998565673828

Token 787: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006178391631692648
    2. '()
' → logprob: -7.500617980957031
    3. '(' → logprob: -11.250617980957031
    4. '())' → logprob: -11.375617980957031
    5. '().' → logprob: -11.500617980957031
    6. '()]' → logprob: -12.000617980957031
    7. '()[' → logprob: -12.125617980957031
    8. '();' → logprob: -12.125617980957031
    9. '(),' → logprob: -12.875617980957031
    10. '()

' → logprob: -13.500617980957031

Token 788: 'G' (ID: 38)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.0850261449813843
    2. '#' → logprob: -2.335026264190674
    3. 'D' → logprob: -2.335026264190674
    4. '[' → logprob: -2.585026264190674
    5. 'a' → logprob: -2.710026264190674
    6. '_' → logprob: -2.710026264190674
    7. ')' → logprob: -3.210026264190674
    8. 'x' → logprob: -3.585026264190674
    9. 'n' → logprob: -3.710026264190674
    10. 'for' → logprob: -3.835026264190674

Token 789: 'CD' (ID: 8257)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.51628577709198
    2. '=[]' → logprob: -1.14128577709198
    3. ' =' → logprob: -3.1412858963012695
    4. '={}' → logprob: -4.1412858963012695
    5. '=[' → logprob: -4.6412858963012695
    6. '=A' → logprob: -5.5162858963012695
    7. '=B' → logprob: -5.8912858963012695
    8. '=[]
' → logprob: -6.6412858963012695
    9. '=set' → logprob: -6.7662858963012695
    10. '=N' → logprob: -7.5162858963012695

Token 790: '=_' (ID: 51761)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18670976161956787
    2. '=_' → logprob: -2.4367098808288574
    3. ' =' → logprob: -3.5617098808288574
    4. '(' → logprob: -3.5617098808288574
    5. '=lambda' → logprob: -4.311709880828857
    6. '=l' → logprob: -5.061709880828857
    7. '_' → logprob: -6.061709880828857
    8. '(_' → logprob: -6.811709880828857
    9. '_=' → logprob: -6.936709880828857
    10. '=int' → logprob: -7.561709880828857

Token 791: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.007639044430106878
    2. '_g' → logprob: -4.882638931274414
    3. 'cd' → logprob: -10.882638931274414
    4. 'int' → logprob: -12.632638931274414
    5. '(g' → logprob: -13.257638931274414
    6. ' gcd' → logprob: -13.257638931274414
    7. 'cnt' → logprob: -13.507638931274414
    8. '=g' → logprob: -14.132638931274414
    9. '[g' → logprob: -14.632638931274414
    10. 'k' → logprob: -15.007638931274414

Token 792: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.024325761944055557
    2. 'CD' → logprob: -3.7743258476257324
    3. '_cd' → logprob: -7.149325847625732
    4. '_c' → logprob: -8.274325370788574
    5. 'C' → logprob: -11.649325370788574
    6. 'c' → logprob: -11.899325370788574
    7. 'Cd' → logprob: -12.024325370788574
    8. 'cdn' → logprob: -12.524325370788574
    9. 'cdf' → logprob: -13.149325370788574
    10. '_a' → logprob: -13.899325370788574

Token 793: '(N' (ID: 10564)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.9996591210365295
    2. '(len' → logprob: -0.9996591210365295
    3. '(N' → logprob: -1.4996590614318848
    4. '(M' → logprob: -4.624659061431885
    5. 'len' → logprob: -4.749659061431885
    6. '(' → logprob: -4.874659061431885
    7. 'int' → logprob: -5.249659061431885
    8. '(A' → logprob: -5.499659061431885
    9. 'N' → logprob: -6.374659061431885
    10. '(ord' → logprob: -6.624659061431885

Token 794: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.07163634151220322
    2. ',' → logprob: -2.696636438369751
    3. ',B' → logprob: -7.571636199951172
    4. '(M' → logprob: -8.196636199951172
    5. ',N' → logprob: -8.321636199951172
    6. ',C' → logprob: -8.446636199951172
    7. ' ,' → logprob: -8.571636199951172
    8. ',m' → logprob: -9.196636199951172
    9. 'M' → logprob: -10.071636199951172
    10. ',
' → logprob: -10.571636199951172

Token 795: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015158153837546706
    2. ')
' → logprob: -6.501515865325928
    3. ' )' → logprob: -11.50151538848877
    4. ')

' → logprob: -14.25151538848877
    5. ',)' → logprob: -14.37651538848877
    6. ')#' → logprob: -14.62651538848877
    7. '))' → logprob: -15.25151538848877
    8. ')
' → logprob: -15.25151538848877
    9. ',' → logprob: -15.25151538848877
    10. ');' → logprob: -15.37651538848877

Token 796: 'L' (ID: 43)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6860166788101196
    2. 'dp' → logprob: -2.68601655960083
    3. 'd' → logprob: -2.81101655960083
    4. 'i' → logprob: -2.81101655960083
    5. 'a' → logprob: -3.43601655960083
    6. 'x' → logprob: -3.43601655960083
    7. 'def' → logprob: -3.56101655960083
    8. 'if' → logprob: -3.56101655960083
    9. 'r' → logprob: -3.68601655960083
    10. 'p' → logprob: -3.81101655960083

Token 797: '=l' (ID: 103670)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07431070506572723
    2. '=l' → logprob: -3.199310779571533
    3. '=L' → logprob: -4.324310779571533
    4. 'CM' → logprob: -5.324310779571533
    5. ' =' → logprob: -5.449310779571533
    6. '=C' → logprob: -5.699310779571533
    7. '=int' → logprob: -6.199310779571533
    8. '=N' → logprob: -6.699310779571533
    9. '=(' → logprob: -6.824310779571533
    10. 'cm' → logprob: -8.699310302734375

Token 798: 'cm' (ID: 7871)
  Prédit: 'CM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CM' → logprob: -0.02240769751369953
    2. 'C' → logprob: -4.272407531738281
    3. 'N' → logprob: -5.022407531738281
    4. 'cm' → logprob: -6.897407531738281
    5. '(N' → logprob: -8.522407531738281
    6. '
' → logprob: -9.272407531738281
    7. 'M' → logprob: -9.897407531738281
    8. ' N' → logprob: -10.147407531738281
    9. '(C' → logprob: -10.397407531738281
    10. '(' → logprob: -10.647407531738281

Token 799: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0036125436890870333
    2. '(' → logprob: -5.753612518310547
    3. 'N' → logprob: -7.878612518310547
    4. '(
' → logprob: -10.628612518310547
    5. '```' → logprob: -12.003612518310547
    6. '=' → logprob: -12.128612518310547
    7. ' (' → logprob: -12.253612518310547
    8. '
' → logprob: -12.503612518310547
    9. '_N' → logprob: -12.878612518310547
    10. '(n' → logprob: -13.003612518310547

Token 800: ',M' (ID: 54127)
  Prédit: ',M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',M' → logprob: -0.0002719449403230101
    2. ',' → logprob: -8.250271797180176
    3. 'M' → logprob: -11.875271797180176
    4. ' ,' → logprob: -12.625271797180176
    5. '(M' → logprob: -15.875271797180176
    6. ',m' → logprob: -16.125272750854492
    7. ',N' → logprob: -16.125272750854492
    8. ',
' → logprob: -16.500272750854492
    9. '```' → logprob: -17.875272750854492
    10. ',B' → logprob: -18.000272750854492

Token 801: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020641859620809555
    2. ')
' → logprob: -3.895641803741455
    3. ')
' → logprob: -9.770642280578613
    4. ')

' → logprob: -10.395642280578613
    5. ')`' → logprob: -12.645642280578613
    6. ' )' → logprob: -13.145642280578613
    7. ');' → logprob: -13.895642280578613
    8. '()' → logprob: -13.895642280578613
    9. ')`
' → logprob: -13.895642280578613
    10. ')#' → logprob: -14.270642280578613

Token 802: 'for' (ID: 1938)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6711198091506958
    2. 'dp' → logprob: -1.7961198091506958
    3. 'for' → logprob: -2.4211196899414062
    4. 'res' → logprob: -2.7961196899414062
    5. 'D' → logprob: -3.1711196899414062
    6. 'out' → logprob: -4.046119689941406
    7. 'R' → logprob: -4.171119689941406
    8. 'ok' → logprob: -4.296119689941406
    9. 'if' → logprob: -4.421119689941406
    10. 'A' → logprob: -4.671119689941406

Token 803: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.010040207765996456
    2. 'i' → logprob: -4.635040283203125
    3. ' _' → logprob: -9.010040283203125
    4. '_' → logprob: -10.135040283203125
    5. ' ' → logprob: -10.260040283203125
    6. ' k' → logprob: -10.885040283203125
    7. ' x' → logprob: -10.885040283203125
    8. '(i' → logprob: -11.760040283203125
    9. ' t' → logprob: -11.885040283203125
    10. '_i' → logprob: -11.885040283203125

Token 804: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22688399255275726
    2. 'in' → logprob: -1.6018840074539185
    3. ' ' → logprob: -6.601883888244629
    4. ',' → logprob: -9.851883888244629
    5. 'n' → logprob: -11.226883888244629
    6. ' i' → logprob: -11.726883888244629
    7. '  ' → logprob: -11.851883888244629
    8. '	in' → logprob: -11.976883888244629
    9. 'range' → logprob: -12.101883888244629
    10. ',in' → logprob: -12.101883888244629

Token 805: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31351685523986816
    2. 'range' → logprob: -1.3135168552398682
    3. ' ' → logprob: -9.188516616821289
    4. 'r' → logprob: -10.563516616821289
    5. '   ' → logprob: -10.688516616821289
    6. '  ' → logprob: -11.063516616821289
    7. '[' → logprob: -11.438516616821289
    8. '	range' → logprob: -11.688516616821289
    9. '(range' → logprob: -11.813516616821289
    10. ' r' → logprob: -11.876016616821289

Token 806: '(G' (ID: 12449)
  Prédit: '(G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(G' → logprob: -0.7371252775192261
    2. '(L' → logprob: -1.112125277519226
    3. 'G' → logprob: -2.1121253967285156
    4. 'L' → logprob: -2.7371253967285156
    5. '(' → logprob: -5.237125396728516
    6. '(N' → logprob: -6.862125396728516
    7. '0' → logprob: -9.112125396728516
    8. '(M' → logprob: -9.237125396728516
    9. '(len' → logprob: -9.362125396728516
    10. '(C' → logprob: -9.737125396728516

Token 807: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.011672371067106724
    2. 'C' → logprob: -4.511672496795654
    3. 'G' → logprob: -7.761672496795654
    4. 'cd' → logprob: -9.761672019958496
    5. 'D' → logprob: -10.136672019958496
    6. '   ' → logprob: -10.136672019958496
    7. ')' → logprob: -11.636672019958496
    8. '(C' → logprob: -11.886672019958496
    9. 'DC' → logprob: -12.386672019958496
    10. ' CD' → logprob: -12.386672019958496

Token 808: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0017424124525859952
    2. '):
' → logprob: -6.501742362976074
    3. ' ):' → logprob: -8.501742362976074
    4. '+' → logprob: -11.001742362976074
    5. ':' → logprob: -11.501742362976074
    6. ' ' → logprob: -13.126742362976074
    7. ')' → logprob: -13.376742362976074
    8. '=' → logprob: -13.501742362976074
    9. '):
' → logprob: -13.876742362976074
    10. '}:' → logprob: -13.876742362976074

Token 809: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023982714861631393
    2. ' if' → logprob: -3.7739827632904053
    3. '   ' → logprob: -7.648982524871826
    4. ' ' → logprob: -8.273983001708984
    5. '  ' → logprob: -13.648983001708984
    6. '	if' → logprob: -13.898983001708984
    7. 'i' → logprob: -14.148983001708984
    8. '```' → logprob: -14.523983001708984
    9. 'n' → logprob: -14.648983001708984
    10. '  
' → logprob: -15.148983001708984

Token 810: ' idx' (ID: 14016)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.861651490908116e-05
    2. ' if' → logprob: -9.750068664550781
    3. 'a' → logprob: -11.750068664550781
    4. '   ' → logprob: -14.000068664550781
    5. 'x' → logprob: -14.750068664550781
    6. 'assert' → logprob: -14.750068664550781
    7. ' ' → logprob: -15.375068664550781
    8. 'i' → logprob: -15.875068664550781
    9. 'ai' → logprob: -16.00006866455078
    10. 'print' → logprob: -16.62506866455078

Token 811: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2271915078163147
    2. ' =' → logprob: -1.97719144821167
    3. 'A' → logprob: -3.72719144821167
    4. '=A' → logprob: -4.72719144821167
    5. '1' → logprob: -4.85219144821167
    6. '=N' → logprob: -4.97719144821167
    7. 'N' → logprob: -5.10219144821167
    8. '=int' → logprob: -5.97719144821167
    9. 'a' → logprob: -6.10219144821167
    10. '=i' → logprob: -6.72719144821167

Token 812: '=i' (ID: 48141)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2910885810852051
    2. ' =' → logprob: -1.666088581085205
    3. '=N' → logprob: -3.416088581085205
    4. '=i' → logprob: -3.541088581085205
    5. '=A' → logprob: -7.291088581085205
    6. '=int' → logprob: -8.041088104248047
    7. '=B' → logprob: -8.666088104248047
    8. ',' → logprob: -8.666088104248047
    9. '=n' → logprob: -9.916088104248047
    10. '=
' → logprob: -9.916088104248047

Token 813: '*N' (ID: 107360)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8225799798965454
    2. 'idx' → logprob: -1.1975799798965454
    3. '=' → logprob: -2.697579860687256
    4. ',' → logprob: -2.697579860687256
    5. '+=' → logprob: -3.072579860687256
    6. '*' → logprob: -4.572579860687256
    7. '    
' → logprob: -4.697579860687256
    8. '<|end|>' → logprob: -5.072579860687256
    9. '   ' → logprob: -5.197579860687256
    10. '   
' → logprob: -5.197579860687256

Token 814: '//' (ID: 393)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8450043797492981
    2. '//' → logprob: -0.9700043797492981
    3. 'i' → logprob: -3.2200043201446533
    4. '+' → logprob: -3.3450043201446533
    5. '   ' → logprob: -3.7200043201446533
    6. 'L' → logprob: -3.7200043201446533
    7. 'idx' → logprob: -4.220004558563232
    8. '/L' → logprob: -4.345004558563232
    9. '#' → logprob: -4.720004558563232
    10. '*i' → logprob: -4.970004558563232

Token 815: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -4.320199877838604e-07
    2. 'M' → logprob: -15.5
    3. ' G' → logprob: -15.75
    4. '	G' → logprob: -18.75
    5. '
' → logprob: -18.875
    6. '   ' → logprob: -19.375
    7. '_G' → logprob: -19.875
    8. '<|end|>' → logprob: -19.875
    9. '(G' → logprob: -20.5
    10. '  ' → logprob: -21.25

Token 816: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -2.951771421066951e-05
    2. 'C' → logprob: -10.500029563903809
    3. 'cd' → logprob: -14.000029563903809
    4. 'D' → logprob: -14.625029563903809
    5. 'i' → logprob: -15.500029563903809
    6. 'G' → logprob: -15.750029563903809
    7. '_cd' → logprob: -16.250028610229492
    8. '_CD' → logprob: -16.500028610229492
    9. 'Cd' → logprob: -16.875028610229492
    10. ' CD' → logprob: -17.125028610229492

Token 817: '
' (ID: 198)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.741803765296936
    2. '   ' → logprob: -1.491803765296936
    3. 'idx' → logprob: -1.491803765296936
    4. '
' → logprob: -3.6168036460876465
    5. '	idx' → logprob: -4.1168036460876465
    6. ',' → logprob: -4.7418036460876465
    7. '<|end|>' → logprob: -4.8668036460876465
    8. '    
' → logprob: -5.3668036460876465
    9. ' ' → logprob: -5.9918036460876465
    10. ' 
' → logprob: -6.3668036460876465

Token 818: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34213292598724365
    2. ' idx' → logprob: -1.7171329259872437
    3. '<|end|>' → logprob: -2.967133045196533
    4. 'idx' → logprob: -3.592133045196533
    5. ' ,' → logprob: -4.717133045196533
    6. ',' → logprob: -4.717133045196533
    7. '    
' → logprob: -5.592133045196533
    8. ' 
' → logprob: -6.217133045196533
    9. ' ' → logprob: -6.342133045196533
    10. '[idx' → logprob: -6.467133045196533

Token 819: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -1.0564331205387134e-05
    2. ' idx' → logprob: -12.12501049041748
    3. '   ' → logprob: -12.75001049041748
    4. 'i' → logprob: -13.12501049041748
    5. ' ' → logprob: -16.875011444091797
    6. '    
' → logprob: -17.375011444091797
    7. '	idx' → logprob: -17.500011444091797
    8. '  ' → logprob: -18.000011444091797
    9. 'id' → logprob: -18.250011444091797
    10. '
' → logprob: -19.375011444091797

Token 820: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1504257172346115
    2. '=i' → logprob: -2.025425672531128
    3. '1' → logprob: -5.150425910949707
    4. '=' → logprob: -6.650425910949707
    5. 'i' → logprob: -8.275425910949707
    6. ' =' → logprob: -9.025425910949707
    7. '=M' → logprob: -10.150425910949707
    8. '
' → logprob: -10.525425910949707
    9. ' i' → logprob: -10.525425910949707
    10. ',i' → logprob: -10.900425910949707

Token 821: '=i' (ID: 48141)
  Prédit: '=i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=i' → logprob: -0.038090839982032776
    2. '=' → logprob: -3.288090944290161
    3. ' =' → logprob: -10.788090705871582
    4. 'i' → logprob: -10.788090705871582
    5. '=int' → logprob: -12.413090705871582
    6. '=
' → logprob: -12.538090705871582
    7. ' i' → logprob: -15.038090705871582
    8. '```' → logprob: -17.2880916595459
    9. '=a' → logprob: -17.4130916595459
    10. '
' → logprob: -17.5380916595459

Token 822: '*M' (ID: 151552)
  Prédit: '*M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*M' → logprob: -0.005859582219272852
    2. 'M' → logprob: -5.255859375
    3. '*' → logprob: -7.380859375
    4. ' *' → logprob: -13.380859375
    5. '```' → logprob: -15.005859375
    6. ' M' → logprob: -15.630859375
    7. '*l' → logprob: -16.255859375
    8. '`' → logprob: -16.630859375
    9. '*i' → logprob: -16.755859375
    10. '*N' → logprob: -17.005859375

Token 823: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -1.8624639324116288e-06
    2. ' //' → logprob: -14.000001907348633
    3. '```' → logprob: -14.750001907348633
    4. '//=' → logprob: -14.750001907348633
    5. '#' → logprob: -15.875001907348633
    6. '//#' → logprob: -16.500001907348633
    7. '\/\/' → logprob: -19.750001907348633
    8. '1' → logprob: -19.750001907348633
    9. '//*' → logprob: -19.875001907348633
    10. '//@' → logprob: -20.000001907348633

Token 824: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -1.9361264946837764e-07
    2. ' G' → logprob: -15.875
    3. '_G' → logprob: -20.625
    4. '<|end|>' → logprob: -21.5
    5. '   ' → logprob: -21.625
    6. '```' → logprob: -21.75
    7. '<G' → logprob: -21.875
    8. ':G' → logprob: -22.875
    9. '(G' → logprob: -22.875
    10. '	G' → logprob: -23.125

Token 825: 'CD' (ID: 8257)
  Prédit: 'CD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CD' → logprob: -0.006881130393594503
    2. 'C' → logprob: -5.006881237030029
    3. 'G' → logprob: -8.756880760192871
    4. 'D' → logprob: -12.131880760192871
    5. 'cd' → logprob: -14.006880760192871
    6. '_CD' → logprob: -14.006880760192871
    7. 'CDD' → logprob: -15.131880760192871
    8. '2' → logprob: -15.506880760192871
    9. '_C' → logprob: -15.631880760192871
    10. 'CDF' → logprob: -15.756880760192871

Token 826: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02068798616528511
    2. ' if' → logprob: -4.520688056945801
    3. 'if' → logprob: -4.895688056945801
    4. '
' → logprob: -6.520688056945801
    5. '    
' → logprob: -7.895688056945801
    6. ' 
' → logprob: -9.6456880569458
    7. '	if' → logprob: -10.0206880569458
    8. ' ' → logprob: -10.0206880569458
    9. '   
' → logprob: -10.1456880569458
    10. '  
' → logprob: -10.6456880569458

Token 827: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01442685816437006
    2. 'if' → logprob: -4.2644267082214355
    3. ' if' → logprob: -8.264427185058594
    4. '    
' → logprob: -12.889427185058594
    5. '```' → logprob: -14.014427185058594
    6. '<|end|>' → logprob: -14.264427185058594
    7. '	if' → logprob: -14.389427185058594
    8. 'assert' → logprob: -14.639427185058594
    9. '
' → logprob: -14.889427185058594
    10. ' ' → logprob: -15.764427185058594

Token 828: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -4.320199877838604e-07
    2. '
' → logprob: -15.0
    3. ' if' → logprob: -16.75
    4. '    
' → logprob: -18.25
    5. '   ' → logprob: -18.5
    6. '  
' → logprob: -20.375
    7. 'If' → logprob: -20.875
    8. '```' → logprob: -21.25
    9. 'print' → logprob: -21.5
    10. '   
' → logprob: -21.5

Token 829: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.19200240075588226
    2. 'B' → logprob: -1.8170024156570435
    3. ' A' → logprob: -4.567002296447754
    4. ' B' → logprob: -6.692002296447754
    5. 'S' → logprob: -8.067002296447754
    6. 'C' → logprob: -8.817002296447754
    7. '(A' → logprob: -10.317002296447754
    8. ' ' → logprob: -11.192002296447754
    9. '(B' → logprob: -11.317002296447754
    10. '   ' → logprob: -11.692002296447754

Token 830: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -1.0564331205387134e-05
    2. '[' → logprob: -12.37501049041748
    3. '[
' → logprob: -13.00001049041748
    4. ' [' → logprob: -13.87501049041748
    5. '
' → logprob: -14.25001049041748
    6. '```' → logprob: -14.25001049041748
    7. '[i' → logprob: -14.50001049041748
    8. 'idx' → logprob: -14.50001049041748
    9. '[int' → logprob: -14.87501049041748
    10. '[id' → logprob: -15.75001049041748

Token 831: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008794554509222507
    2. '[idx' → logprob: -5.758794784545898
    3. 'idx' → logprob: -5.758794784545898
    4. ']' → logprob: -6.383794784545898
    5. '```' → logprob: -8.508794784545898
    6. ' idx' → logprob: -8.758794784545898
    7. '(idx' → logprob: -8.758794784545898
    8. 'x' → logprob: -9.633794784545898
    9. ']==' → logprob: -10.008794784545898
    10. 's' → logprob: -10.758794784545898

Token 832: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.5237651467323303
    2. '!=' → logprob: -0.8987651467323303
    3. ']' → logprob: -8.148765563964844
    4. ' !=' → logprob: -8.148765563964844
    5. ')!=' → logprob: -10.523765563964844
    6. '```' → logprob: -11.398765563964844
    7. '!==' → logprob: -12.273765563964844
    8. '()!=' → logprob: -12.398765563964844
    9. ' ' → logprob: -12.523765563964844
    10. ' ]' → logprob: -12.523765563964844

Token 833: 'C' (ID: 34)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.908022285439074e-05
    2. ' B' → logprob: -9.750059127807617
    3. 'C' → logprob: -14.125059127807617
    4. '	B' → logprob: -19.750059127807617
    5. '   ' → logprob: -20.250059127807617
    6. ' ' → logprob: -21.375059127807617
    7. '```' → logprob: -21.750059127807617
    8. '_B' → logprob: -22.000059127807617
    9. '  ' → logprob: -22.125059127807617
    10. '`' → logprob: -22.375059127807617

Token 834: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -3.9054008084349334e-05
    2. 'idx' → logprob: -11.000039100646973
    3. '[' → logprob: -11.875039100646973
    4. '[i' → logprob: -12.500039100646973
    5. '```' → logprob: -12.500039100646973
    6. ' [' → logprob: -12.875039100646973
    7. '(idx' → logprob: -13.500039100646973
    8. '[
' → logprob: -13.500039100646973
    9. '   ' → logprob: -14.125039100646973
    10. ' idx' → logprob: -14.375039100646973

Token 835: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001487140398239717
    2. '1' → logprob: -9.62514877319336
    3. 'x' → logprob: -9.75014877319336
    4. ']' → logprob: -11.87514877319336
    5. 'i' → logprob: -12.37514877319336
    6. '```' → logprob: -12.37514877319336
    7. '   ' → logprob: -13.50014877319336
    8. '[i' → logprob: -13.87514877319336
    9. 'ex' → logprob: -13.87514877319336
    10. 'idx' → logprob: -14.25014877319336

Token 836: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.35320284962654114
    2. '):' → logprob: -1.3532028198242188
    3. ':' → logprob: -4.103202819824219
    4. ']' → logprob: -4.478202819824219
    5. ')' → logprob: -5.603202819824219
    6. ' and' → logprob: -6.228202819824219
    7. ']):' → logprob: -6.603202819824219
    8. ']:
' → logprob: -7.103202819824219
    9. '):
' → logprob: -7.103202819824219
    10. ' ):' → logprob: -7.603202819824219

Token 837: '       ' (ID: 309)
  Prédit: 'NO'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NO' → logprob: -1.1466232538223267
    2. 'print' → logprob: -1.5216232538223267
    3. '   ' → logprob: -1.8966232538223267
    4. '       ' → logprob: -2.146623134613037
    5. 'n' → logprob: -2.396623134613037
    6. ' NO' → logprob: -3.021623134613037
    7. ' print' → logprob: -3.771623134613037
    8. 'YES' → logprob: -3.896623134613037
    9. ' n' → logprob: -5.521623134613037
    10. '=' → logprob: -5.896623134613037

Token 838: ' pe' (ID: 1045)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.9633492827415466
    2. 'print' → logprob: -0.9633492827415466
    3. 'NO' → logprob: -1.5883493423461914
    4. 'pr' → logprob: -3.9633493423461914
    5. 'pe' (adapté à ' pe') → logprob: -5.213349342346191
    6. 'p' → logprob: -5.838349342346191
    7. 'PE' → logprob: -6.713349342346191
    8. '   ' → logprob: -6.838349342346191
    9. 'no' → logprob: -7.338349342346191
    10. 'Pr' → logprob: -7.463349342346191

Token 839: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.018717894330620766
    2. '("-' → logprob: -4.3937177658081055
    3. '-' → logprob: -5.6437177658081055
    4. '(' → logprob: -6.3937177658081055
    5. '("' → logprob: -7.0187177658081055
    6. '('-' → logprob: -10.768717765808105
    7. '0' → logprob: -11.143717765808105
    8. '"-' → logprob: -11.643717765808105
    9. '(n' → logprob: -11.893717765808105
    10. '()-' → logprob: -12.143717765808105

Token 840: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ')' → logprob: -15.562500953674316
    3. ' ' → logprob: -15.625000953674316
    4. '１' → logprob: -16.8125
    5. '```' → logprob: -16.9375
    6. '۱' → logprob: -17.9375
    7. '}' → logprob: -18.0625
    8. '১' → logprob: -18.125
    9. '१' → logprob: -18.125
    10. '2' → logprob: -18.1875

Token 841: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018218543380498886
    2. ')
' → logprob: -4.018218517303467
    3. ')return' → logprob: -10.268218994140625
    4. '   ' → logprob: -11.643218994140625
    5. '       ' → logprob: -11.768218994140625
    6. ' )' → logprob: -12.518218994140625
    7. ')

' → logprob: -12.643218994140625
    8. ')
' → logprob: -13.393218994140625
    9. '<|end|>' → logprob: -13.518218994140625
    10. ')#' → logprob: -13.768218994140625

Token 842: 'Pr' (ID: 2938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00425623869523406
    2. 'pr' → logprob: -5.629256248474121
    3. 'else' → logprob: -8.254256248474121
    4. '```' → logprob: -9.254256248474121
    5. 'exit' → logprob: -9.254256248474121
    6. 'Pr' → logprob: -9.879256248474121
    7. '       ' → logprob: -10.379256248474121
    8. 'pe' → logprob: -10.379256248474121
    9. 'p' → logprob: -10.754256248474121
    10. '0' → logprob: -10.879256248474121

Token 843: 'nt' (ID: 578)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00020866614067927003
    2. 'nt' → logprob: -8.875208854675293
    3. 't' → logprob: -10.375208854675293
    4. '(int' → logprob: -10.875208854675293
    5. '(' → logprob: -12.250208854675293
    6. '()' → logprob: -12.375208854675293
    7. '```' → logprob: -13.000208854675293
    8. 'i' → logprob: -13.000208854675293
    9. 'l' → logprob: -13.750208854675293
    10. '
' → logprob: -14.375208854675293

Token 844: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.03403867781162262
    2. '(' → logprob: -3.409038782119751
    3. '((' → logprob: -8.659038543701172
    4. '("' → logprob: -9.784038543701172
    5. '(B' → logprob: -10.284038543701172
    6. '('' → logprob: -10.659038543701172
    7. '(A' → logprob: -10.659038543701172
    8. 'L' → logprob: -10.909038543701172
    9. '(N' → logprob: -11.159038543701172
    10. '(l' → logprob: -11.784038543701172

Token 845: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.15441757265944e-05
    2. ' )' → logprob: -10.500031471252441
    3. ')
' → logprob: -13.375031471252441
    4. '))' → logprob: -14.375031471252441
    5. '*' → logprob: -14.375031471252441
    6. '`)' → logprob: -15.250031471252441
    7. ')`' → logprob: -15.500031471252441
    8. '*)' → logprob: -15.500031471252441
    9. ')return' → logprob: -16.125032424926758
    10. '())' → logprob: -16.625032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 843
Tokens correctement prédits (1ère position, stricte): 378
Tokens correctement prédits (1ère position, avec adaptation): 389
Tokens correctement prédits (top 10): 693
Précision stricte (1ère position): 44.84%
Précision adaptée (1ère position): 46.14%
Précision (top 10): 82.21%
================================================================================
