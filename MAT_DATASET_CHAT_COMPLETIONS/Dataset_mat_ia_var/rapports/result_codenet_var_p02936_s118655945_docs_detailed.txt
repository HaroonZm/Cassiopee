================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:48:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Main function to process a rooted tree and perform incremental updates
    at given nodes, then propagate the increments to all descendants. 
    Finally, it prints the accumulated value at each node after all operations.
    """
    # Read number of nodes in tree (N) and number of queries (Q)
    N, Q = map(int, input().split())
    
    # Initialize adjacency list for the tree.
    # Each index in 'point' represents a node, and contains a list of its children.
    point = [[] for _ in range(N)]
    
    # Initialize the list to store extra value added to each node from queries.
    plus = [0] * N

    # Read N-1 edges to build the tree.
    # The input edges are 1-indexed; converting to 0-indexed.
    for _ in range(N - 1):
        a, b = map(int, input().split())
        a -= 1  # convert to 0-based indexing
        b -= 1  # convert to 0-based indexing
        point[a].append(b)

    # Apply the Q queries that increment the value at node p by x.
    for _ in range(Q):
        p, x = map(int, input().split())
        p -= 1  # convert to 0-based indexing
        plus[p] += x

    # Initialize the answer list to store the propagated value for each node.
    ans = [0] * N

    # Use a stack to perform an explicit depth-first traversal starting from the root (node 0).
    # Each stack item is a tuple: (current_node, inherited_value)
    dfs = [(0, 0)]
    while len(dfs):
        n, p = dfs.pop()
        # Add the value explicitly set at this node
        p += plus[n]
        # Store cumulative value at this node
        ans[n] = p
        # Traverse each child, passing down the cumulative sum
        for child in point[n]:
            dfs.append((child, p))

    # Output the answer as space-separated values.
    for a in ans:
        print(a, end=' ')
    print()

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.27129265666007996
    2. '\n' → logprob: -1.6462926864624023
    3. '   ' → logprob: -3.8962926864624023
    4. '    
' → logprob: -5.021292686462402
    5. '    ' → logprob: -5.646292686462402
    6. ''' → logprob: -5.896292686462402
    7. '```' → logprob: -6.146292686462402
    8. '(' → logprob: -6.396292686462402
    9. ' 
' → logprob: -6.521292686462402
    10. '\r' → logprob: -6.896292686462402

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20469899475574493
    2. 'pass' → logprob: -2.3296990394592285
    3. '   ' → logprob: -2.8296990394592285
    4. 'return' → logprob: -4.0796990394592285
    5. 'p' → logprob: -5.3296990394592285
    6. '#' → logprob: -6.3296990394592285
    7. 'r' → logprob: -6.4546990394592285
    8. 'a' → logprob: -7.3296990394592285
    9. '```' → logprob: -7.3296990394592285
    10. 'n' → logprob: -8.07969856262207

Token 5: '   ' (ID: 271)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.9128408432006836
    2. 'Calculate' → logprob: -2.1628408432006836
    3. 'This' → logprob: -2.4128408432006836
    4. 'Initialize' → logprob: -2.4128408432006836
    5. 'T' → logprob: -3.7878408432006836
    6. 'Run' → logprob: -3.7878408432006836
    7. '   ' → logprob: -4.037840843200684
    8. 'Initial' → logprob: -4.037840843200684
    9. 'Runs' → logprob: -4.037840843200684
    10. 'Main' → logprob: -4.162840843200684

Token 6: ' Main' (ID: 7956)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'This' → logprob: -1.6862215995788574
    2. 'Calculate' → logprob: -1.6862215995788574
    3. 'Run' → logprob: -1.8112215995788574
    4. '   ' → logprob: -2.0612215995788574
    5. 'Initialize' → logprob: -2.3112215995788574
    6. '"""' → logprob: -3.5612215995788574
    7. 'Print' → logprob: -3.8112215995788574
    8. 'Process' → logprob: -3.8112215995788574
    9. 'Main' (adapté à ' Main') → logprob: -3.9362215995788574
    10. 'Initial' → logprob: -4.186221599578857

Token 7: ' function' (ID: 1114)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07776337116956711
    2. '   ' → logprob: -3.202763319015503
    3. ' ' → logprob: -4.452763557434082
    4. '()' → logprob: -4.952763557434082
    5. ' function' → logprob: -5.327763557434082
    6. '```' → logprob: -5.702763557434082
    7. '_function' → logprob: -6.452763557434082
    8. '\' → logprob: -7.202763557434082
    9. ')' → logprob: -7.202763557434082
    10. '():' → logprob: -7.327763557434082

Token 8: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6090474724769592
    2. '```' → logprob: -0.9840474724769592
    3. '"""' → logprob: -3.1090474128723145
    4. ' to' → logprob: -4.2340474128723145
    5. 'def' → logprob: -5.2340474128723145
    6. '.' → logprob: -5.3590474128723145
    7. ')' → logprob: -5.9840474128723145
    8. '()' → logprob: -6.6090474128723145
    9. '"""
' → logprob: -6.6090474128723145
    10. '``' → logprob: -6.7340474128723145

Token 9: ' process' (ID: 2273)
  Prédit: ' run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' run' → logprob: -0.33120617270469666
    2. 'run' → logprob: -1.456206202507019
    3. 'start' → logprob: -4.206206321716309
    4. 'execute' → logprob: -4.956206321716309
    5. ' execute' → logprob: -5.081206321716309
    6. ' start' → logprob: -5.081206321716309
    7. 'initialize' → logprob: -5.581206321716309
    8. 'process' → logprob: -6.081206321716309
    9. ' process' → logprob: -6.456206321716309
    10. '   ' → logprob: -6.581206321716309

Token 10: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5396194458007812
    2. 'data' → logprob: -2.4146194458007812
    3. ' code' → logprob: -2.5396194458007812
    4. ' data' → logprob: -2.6646194458007812
    5. '   ' → logprob: -2.6646194458007812
    6. 'the' → logprob: -3.2896194458007812
    7. ' input' → logprob: -3.4146194458007812
    8. 'input' → logprob: -4.539619445800781
    9. '"""' → logprob: -5.664619445800781
    10. ' inputs' → logprob: -5.789619445800781

Token 11: ' rooted' (ID: 73759)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2559036612510681
    2. ' file' → logprob: -2.755903720855713
    3. ' data' → logprob: -2.880903720855713
    4. ' text' → logprob: -3.255903720855713
    5. ' string' → logprob: -3.880903720855713
    6. 'data' → logprob: -4.630903720855713
    7. ' dataset' → logprob: -5.005903720855713
    8. ' n' → logprob: -5.130903720855713
    9. ' input' → logprob: -5.505903720855713
    10. 'text' → logprob: -5.630903720855713

Token 12: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.20951467752456665
    2. ' ' → logprob: -2.209514617919922
    3. '_' → logprob: -2.834514617919922
    4. ' binary' → logprob: -3.959514617919922
    5. ' _' → logprob: -7.834514617919922
    6. '_tree' → logprob: -7.959514617919922
    7. '   ' → logprob: -8.459514617919922
    8. 'tree' → logprob: -9.209514617919922
    9. ' string' → logprob: -9.459514617919922
    10. '  ' → logprob: -9.834514617919922

Token 13: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10315744578838348
    2. '```' → logprob: -2.9781575202941895
    3. '
' → logprob: -3.6031575202941895
    4. '.' → logprob: -5.3531575202941895
    5. '\n' → logprob: -5.9781575202941895
    6. '    
' → logprob: -6.1031575202941895
    7. 'def' → logprob: -6.3531575202941895
    8. ' and' → logprob: -6.4781575202941895
    9. ',' → logprob: -6.6031575202941895
    10. '    ' → logprob: -6.8531575202941895

Token 14: ' perform' (ID: 3347)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.4741387665271759
    2. ' analyze' → logprob: -1.9741387367248535
    3. ' calculate' → logprob: -2.4741387367248535
    4. ' find' → logprob: -3.4741387367248535
    5. ' generate' → logprob: -3.7241387367248535
    6. ' return' → logprob: -3.8491387367248535
    7. ' process' → logprob: -4.5991387367248535
    8. ' perform' → logprob: -4.8491387367248535
    9. ' check' → logprob: -4.9741387367248535
    10. ' build' → logprob: -5.0991387367248535

Token 15: ' incremental' (ID: 101067)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5823370814323425
    2. ' a' → logprob: -1.5823371410369873
    3. ' operations' → logprob: -2.0823371410369873
    4. ' ' → logprob: -3.7073371410369873
    5. ' analysis' → logprob: -4.082336902618408
    6. ' traversal' → logprob: -4.457336902618408
    7. ' an' → logprob: -4.832336902618408
    8. ' BFS' → logprob: -5.082336902618408
    9. '   ' → logprob: -5.332336902618408
    10. ' DFS' → logprob: -5.582336902618408

Token 16: ' updates' (ID: 12663)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.724878191947937
    2. ' ' → logprob: -0.849878191947937
    3. ' _' → logprob: -2.8498783111572266
    4. 'ly' → logprob: -4.349878311157227
    5. ' analysis' → logprob: -5.849878311157227
    6. ' space' → logprob: -6.349878311157227
    7. ' ```' → logprob: -6.974878311157227
    8. '```' → logprob: -6.974878311157227
    9. '"' → logprob: -7.349878311157227
    10. ' input' → logprob: -7.349878311157227

Token 17: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04113774374127388
    2. '```' → logprob: -3.4161376953125
    3. '.' → logprob: -5.5411376953125
    4. ' to' → logprob: -6.5411376953125
    5. ' and' → logprob: -7.9161376953125
    6. ' on' → logprob: -7.9161376953125
    7. '
' → logprob: -8.1661376953125
    8. 'def' → logprob: -8.5411376953125
    9. ' for' → logprob: -8.7911376953125
    10. '`' → logprob: -9.1661376953125

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037879657465964556
    2. '```' → logprob: -6.128787994384766
    3. '.' → logprob: -7.753787994384766
    4. ' to' → logprob: -8.378787994384766
    5. '"' → logprob: -8.878787994384766
    6. '`' → logprob: -9.003787994384766
    7. '    ' → logprob: -9.128787994384766
    8. '"""' → logprob: -9.128787994384766
    9. '"""
' → logprob: -9.378787994384766
    10. '    
' → logprob: -9.503787994384766

Token 19: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001348688150756061
    2. '```' → logprob: -7.501348495483398
    3. '"""' → logprob: -8.001348495483398
    4. '\n' → logprob: -9.001348495483398
    5. '`' → logprob: -9.501348495483398
    6. '"' → logprob: -9.626348495483398
    7. '\' → logprob: -9.876348495483398
    8. '    
' → logprob: -10.751348495483398
    9. '"""
' → logprob: -10.751348495483398
    10. 'n' → logprob: -10.751348495483398

Token 20: ' given' (ID: 4335)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.0792674794793129
    2. ' the' → logprob: -3.2042675018310547
    3. 'each' → logprob: -4.829267501831055
    4. ' a' → logprob: -5.329267501831055
    5. ' different' → logprob: -5.329267501831055
    6. ' nodes' → logprob: -5.579267501831055
    7. ' least' → logprob: -5.704267501831055
    8. ' leaves' → logprob: -6.079267501831055
    9. ' its' → logprob: -6.204267501831055
    10. ' leaf' → logprob: -6.329267501831055

Token 21: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.5230175852775574
    2. ' times' → logprob: -2.148017644882202
    3. ' points' → logprob: -2.273017644882202
    4. ' time' → logprob: -3.148017644882202
    5. ' vertices' → logprob: -3.898017644882202
    6. ' queries' → logprob: -3.898017644882202
    7. ' edges' → logprob: -4.148017406463623
    8. ' steps' → logprob: -4.148017406463623
    9. ' query' → logprob: -4.648017406463623
    10. ' positions' → logprob: -4.648017406463623

Token 22: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007826530374586582
    2. '```' → logprob: -5.632826328277588
    3. '\n' → logprob: -7.382826328277588
    4. '
' → logprob: -7.507826328277588
    5. '.' → logprob: -7.632826328277588
    6. '    
' → logprob: -7.757826328277588
    7. ')' → logprob: -8.132826805114746
    8. '\' → logprob: -8.257826805114746
    9. ' ' → logprob: -8.257826805114746
    10. ':' → logprob: -8.632826805114746

Token 23: ' then' (ID: 1815)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06836175918579102
    2. ' and' → logprob: -3.318361759185791
    3. '    ' → logprob: -4.193361759185791
    4. ' starting' → logprob: -5.443361759185791
    5. ' then' → logprob: -5.693361759185791
    6. '```' → logprob: -6.693361759185791
    7. ' leading' → logprob: -7.068361759185791
    8. ' with' → logprob: -7.693361759185791
    9. '       ' → logprob: -7.693361759185791
    10. ' allowing' → logprob: -8.068361282348633

Token 24: ' propagate' (ID: 125190)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6841921210289001
    2. ' compute' → logprob: -0.9341921210289001
    3. ' print' → logprob: -3.059192180633545
    4. ' calculate' → logprob: -3.559192180633545
    5. ' output' → logprob: -3.934192180633545
    6. 'return' → logprob: -6.559192180633545
    7. ' evaluate' → logprob: -6.559192180633545
    8. ' find' → logprob: -7.309192180633545
    9. ' perform' → logprob: -7.809192180633545
    10. ' analyze' → logprob: -7.809192180633545

Token 25: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.20479777455329895
    2. ' updates' → logprob: -2.4547977447509766
    3. ' changes' → logprob: -2.7047977447509766
    4. '   ' → logprob: -3.8297977447509766
    5. ' to' → logprob: -6.204797744750977
    6. 'the' → logprob: -6.454797744750977
    7. ' them' → logprob: -6.579797744750977
    8. 'updates' → logprob: -7.079797744750977
    9. ' def' → logprob: -7.579797744750977
    10. 's' → logprob: -7.579797744750977

Token 26: ' increments' (ID: 124105)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.6826986074447632
    2. ' changes' → logprob: -0.9326986074447632
    3. ' result' → logprob: -3.9326987266540527
    4. ' results' → logprob: -4.307698726654053
    5. ' values' → logprob: -4.307698726654053
    6. ' updated' → logprob: -4.682698726654053
    7. ' update' → logprob: -4.807698726654053
    8. 'updates' → logprob: -5.432698726654053
    9. ' influence' → logprob: -5.807698726654053
    10. ' incremental' → logprob: -5.807698726654053

Token 27: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.058849941939115524
    2. '```' → logprob: -3.308850049972534
    3. '\' → logprob: -4.558849811553955
    4. '\n' → logprob: -5.808849811553955
    5. '
' → logprob: -6.058849811553955
    6. '    
' → logprob: -6.183849811553955
    7. '`' → logprob: -6.933849811553955
    8. '``' → logprob: -7.558849811553955
    9. 'n' → logprob: -8.558850288391113
    10. '    ' → logprob: -8.683850288391113

Token 28: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.4614255428314209
    2. ' its' → logprob: -1.836425542831421
    3. ' the' → logprob: -2.586425542831421
    4. ' child' → logprob: -2.961425542831421
    5. ' their' → logprob: -3.586425542831421
    6. ' descendants' → logprob: -3.711425542831421
    7. 'all' → logprob: -4.58642578125
    8. ' children' → logprob: -4.71142578125
    9. ' descendant' → logprob: -4.83642578125
    10. ' each' → logprob: -6.71142578125

Token 29: ' descendants' (ID: 95619)
  Prédit: ' descendants'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' descendants' → logprob: -0.49490946531295776
    2. '   ' → logprob: -2.1199095249176025
    3. ' nodes' → logprob: -2.3699095249176025
    4. ' children' → logprob: -2.9949095249176025
    5. 'desc' → logprob: -3.2449095249176025
    6. ' child' → logprob: -3.7449095249176025
    7. ' descendant' → logprob: -4.119909286499023
    8. '\n' → logprob: -4.369909286499023
    9. 'children' → logprob: -4.869909286499023
    10. 'nodes' → logprob: -5.119909286499023

Token 30: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03839683532714844
    2. '.' → logprob: -3.6633968353271484
    3. ':' → logprob: -5.288396835327148
    4. '
' → logprob: -6.538396835327148
    5. '```' → logprob: -6.663396835327148
    6. '\' → logprob: -7.038396835327148
    7. '\n' → logprob: -7.038396835327148
    8. '    
' → logprob: -7.413396835327148
    9. ' ' → logprob: -8.038396835327148
    10. ',' → logprob: -8.538396835327148

Token 31: ' 
' (ID: 793)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3087006211280823
    2. '
' → logprob: -1.8087005615234375
    3. '\n' → logprob: -3.1837005615234375
    4. '```' → logprob: -3.8087005615234375
    5. '    
' → logprob: -4.0587005615234375
    6. '\' → logprob: -4.0587005615234375
    7. '  
' → logprob: -7.1837005615234375
    8. '`' → logprob: -7.4337005615234375
    9. '"""
' → logprob: -8.058700561523438
    10. '   
' → logprob: -8.308700561523438

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033384013921022415
    2. '"""
' → logprob: -4.033383846282959
    3. '"""' → logprob: -4.533383846282959
    4. '
' → logprob: -5.658383846282959
    5. '```' → logprob: -8.033384323120117
    6. '    
' → logprob: -8.783384323120117
    7. '\n' → logprob: -8.783384323120117
    8. '"' → logprob: -9.408384323120117
    9. '""' → logprob: -9.658384323120117
    10. '"""

' → logprob: -10.783384323120117

Token 33: ' Finally' (ID: 23568)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04146580398082733
    2. '"""' → logprob: -3.2914657592773438
    3. '"""
' → logprob: -6.416465759277344
    4. '\n' → logprob: -7.291465759277344
    5. '```' → logprob: -7.416465759277344
    6. '"' → logprob: -8.041465759277344
    7. '""' → logprob: -9.916465759277344
    8. '    
' → logprob: -10.291465759277344
    9. '
' → logprob: -10.541465759277344
    10. '`' → logprob: -10.791465759277344

Token 34: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01548014860600233
    2. ',' → logprob: -4.890480041503906
    3. '(' → logprob: -6.140480041503906
    4. '    ' → logprob: -6.515480041503906
    5. '_' → logprob: -6.765480041503906
    6. '    
' → logprob: -7.765480041503906
    7. ' ' → logprob: -7.890480041503906
    8. ' to' → logprob: -8.140480041503906
    9. ')' → logprob: -8.265480041503906
    10. '  ' → logprob: -8.390480041503906

Token 35: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9170634150505066
    2. ' return' → logprob: -1.2920634746551514
    3. ' the' → logprob: -2.0420634746551514
    4. ' compute' → logprob: -2.5420634746551514
    5. ' print' → logprob: -3.4170634746551514
    6. ' it' → logprob: -4.167063236236572
    7. ' calculate' → logprob: -4.292063236236572
    8. ' we' → logprob: -4.417063236236572
    9. '    ' → logprob: -4.417063236236572
    10. ' you' → logprob: -4.917063236236572

Token 36: ' prints' (ID: 33767)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9909297227859497
    2. ' returns' → logprob: -0.9909297227859497
    3. ' calculates' → logprob: -2.99092960357666
    4. ' prints' → logprob: -3.24092960357666
    5. ' updates' → logprob: -3.36592960357666
    6. ' ' → logprob: -3.74092960357666
    7. ' completes' → logprob: -3.86592960357666
    8. ' processes' → logprob: -4.36592960357666
    9. ' will' → logprob: -4.49092960357666
    10. ' continues' → logprob: -4.49092960357666

Token 37: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.11189422011375427
    2. '(' → logprob: -2.361894130706787
    3. 'the' → logprob: -4.736894130706787
    4. '   ' → logprob: -7.361894130706787
    5. ' a' → logprob: -7.986894130706787
    6. ' ' → logprob: -8.111894607543945
    7. '    ' → logprob: -8.361894607543945
    8. '("' → logprob: -8.361894607543945
    9. ' out' → logprob: -8.736894607543945
    10. ' each' → logprob: -8.861894607543945

Token 38: ' accumulated' (ID: 64757)
  Prédit: ' total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.9931060671806335
    2. ' updated' → logprob: -1.3681061267852783
    3. ' final' → logprob: -2.2431061267852783
    4. ' cumulative' → logprob: -2.6181061267852783
    5. ' number' → logprob: -2.8681061267852783
    6. ' result' → logprob: -2.9931061267852783
    7. ' accumulated' → logprob: -3.2431061267852783
    8. ' results' → logprob: -4.868105888366699
    9. ' sum' → logprob: -4.993105888366699
    10. ' ' → logprob: -5.243105888366699

Token 39: ' value' (ID: 1432)
  Prédit: ' values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' values' → logprob: -0.0644560307264328
    2. ' value' → logprob: -3.689455986022949
    3. ' increments' → logprob: -4.314455986022949
    4. ' counts' → logprob: -4.939455986022949
    5. ' result' → logprob: -5.064455986022949
    6. ' amounts' → logprob: -6.064455986022949
    7. ' updates' → logprob: -6.439455986022949
    8. ' ' → logprob: -6.689455986022949
    9. ' results' → logprob: -6.939455986022949
    10. 'increments' → logprob: -7.314455986022949

Token 40: ' at' (ID: 540)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034217480570077896
    2. ' ' → logprob: -4.409217357635498
    3. '\' → logprob: -4.784217357635498
    4. '\n' → logprob: -5.409217357635498
    5. '(' → logprob: -6.159217357635498
    6. '
' → logprob: -6.659217357635498
    7. '    ' → logprob: -7.159217357635498
    8. '    
' → logprob: -7.659217357635498
    9. ')' → logprob: -7.784217357635498
    10. '.' → logprob: -7.784217357635498

Token 41: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.012532021850347519
    2. 'each' → logprob: -4.8875322341918945
    3. ' the' → logprob: -5.6375322341918945
    4. ' all' → logprob: -6.7625322341918945
    5. ' a' → logprob: -9.387532234191895
    6. 'the' → logprob: -10.137532234191895
    7. ' root' → logprob: -10.762532234191895
    8. 'all' → logprob: -11.137532234191895
    9. ' every' → logprob: -11.637532234191895
    10. ' given' → logprob: -12.387532234191895

Token 42: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.010106298141181469
    2. 'node' → logprob: -4.635106086730957
    3. ' line' → logprob: -8.385106086730957
    4. ' vertex' → logprob: -10.510106086730957
    5. ' of' → logprob: -11.135106086730957
    6. 'def' → logprob: -11.385106086730957
    7. '   ' → logprob: -11.760106086730957
    8. 'n' → logprob: -12.010106086730957
    9. ' root' → logprob: -12.135106086730957
    10. '\n' → logprob: -12.135106086730957

Token 43: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11943180114030838
    2. '
' → logprob: -2.744431734085083
    3. '\n' → logprob: -3.619431734085083
    4. '\' → logprob: -4.744431972503662
    5. '```' → logprob: -5.369431972503662
    6. '    
' → logprob: -5.744431972503662
    7. 'n' → logprob: -7.119431972503662
    8. ' ' → logprob: -7.244431972503662
    9. '' → logprob: -7.494431972503662
    10. '"""' → logprob: -7.494431972503662

Token 44: ' all' (ID: 722)
  Prédit: ' processing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processing' → logprob: -0.9515959024429321
    2. ' performing' → logprob: -1.0765959024429321
    3. ' all' → logprob: -2.2015957832336426
    4. ' the' → logprob: -2.4515957832336426
    5. ' reading' → logprob: -3.9515957832336426
    6. ' applying' → logprob: -4.576595783233643
    7. 'all' → logprob: -5.076595783233643
    8. ' each' → logprob: -5.076595783233643
    9. ' completing' → logprob: -5.076595783233643
    10. ' updates' → logprob: -5.451595783233643

Token 45: ' operations' (ID: 12084)
  Prédit: ' updates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' updates' → logprob: -0.021585771813988686
    2. ' operations' → logprob: -4.146585941314697
    3. ' increments' → logprob: -5.896585941314697
    4. '   ' → logprob: -6.896585941314697
    5. 'updates' → logprob: -7.021585941314697
    6. ' queries' → logprob: -7.896585941314697
    7. 'increments' → logprob: -9.396585464477539
    8. ' incremental' → logprob: -9.521585464477539
    9. ' ' → logprob: -9.521585464477539
    10. '_updates' → logprob: -10.146585464477539

Token 46: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06810019910335541
    2. '
' → logprob: -3.1931002140045166
    3. '```' → logprob: -4.4430999755859375
    4. '\n' → logprob: -5.5680999755859375
    5. '"""' → logprob: -5.5680999755859375
    6. '"""
' → logprob: -6.0680999755859375
    7. '    
' → logprob: -6.5680999755859375
    8. '.' → logprob: -7.1930999755859375
    9. '"' → logprob: -8.318099975585938
    10. '\' → logprob: -9.318099975585938

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08635955303907394
    2. '"""' → logprob: -2.8363595008850098
    3. '```' → logprob: -4.21135950088501
    4. '"""
' → logprob: -4.96135950088501
    5. '"' → logprob: -6.83635950088501
    6. '`' → logprob: -7.58635950088501
    7. '
' → logprob: -8.336359977722168
    8. '""' → logprob: -8.711359977722168
    9. '\n' → logprob: -9.711359977722168
    10. '    ' → logprob: -9.836359977722168

Token 48: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05464347079396248
    2. '"""' → logprob: -3.429643392562866
    3. '```' → logprob: -4.304643630981445
    4. '
' → logprob: -6.304643630981445
    5. '\n' → logprob: -6.304643630981445
    6. '"' → logprob: -6.679643630981445
    7. '"""
' (adapté à ' """
') → logprob: -7.554643630981445
    8. '    
' → logprob: -7.679643630981445
    9. ')' → logprob: -7.929643630981445
    10. 'n' → logprob: -7.929643630981445

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19706785678863525
    2. '
' → logprob: -2.5720677375793457
    3. 'n' → logprob: -2.8220677375793457
    4. '    
' → logprob: -4.572067737579346
    5. '```' → logprob: -4.572067737579346
    6. 'import' → logprob: -4.697067737579346
    7. '\n' → logprob: -5.197067737579346
    8. '    ' → logprob: -5.822067737579346
    9. '\' → logprob: -6.947067737579346
    10. 'newline' → logprob: -7.572067737579346

Token 50: ' #' (ID: 1069)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5034216642379761
    2. '   ' → logprob: -1.128421664237976
    3. ' n' → logprob: -3.1284217834472656
    4. 'import' → logprob: -4.253421783447266
    5. '#' (adapté à ' #') → logprob: -5.128421783447266
    6. ' #' → logprob: -5.878421783447266
    7. ' import' → logprob: -6.628421783447266
    8. '    
' → logprob: -7.003421783447266
    9. ' ' → logprob: -7.878421783447266
    10. '
' → logprob: -8.003421783447266

Token 51: ' Read' (ID: 5405)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.23767635226249695
    2. 'n' → logprob: -1.7376763820648193
    3. '   ' → logprob: -4.48767614364624
    4. ' #' → logprob: -4.98767614364624
    5. ' import' → logprob: -5.23767614364624
    6. ' N' → logprob: -5.48767614364624
    7. 'import' → logprob: -6.36267614364624
    8. '#' → logprob: -6.73767614364624
    9. ' input' → logprob: -7.11267614364624
    10. ' tree' → logprob: -7.48767614364624

Token 52: ' number' (ID: 2086)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1884145587682724
    2. ' ' → logprob: -2.4384145736694336
    3. 'n' → logprob: -3.4384145736694336
    4. '    ' → logprob: -3.8134145736694336
    5. ' input' → logprob: -4.313414573669434
    6. '   ' → logprob: -5.063414573669434
    7. '(n' → logprob: -5.688414573669434
    8. 'input' → logprob: -6.438414573669434
    9. ' )' → logprob: -6.688414573669434
    10. '(' → logprob: -7.188414573669434

Token 53: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8778162002563477
    2. ' ' → logprob: -0.8778162002563477
    3. '_' → logprob: -2.1278162002563477
    4. 's' → logprob: -3.6278162002563477
    5. ' (' → logprob: -4.627816200256348
    6. ' of' → logprob: -5.877816200256348
    7. ')' → logprob: -6.252816200256348
    8. '=' → logprob: -6.627816200256348
    9. '<|end|>' → logprob: -6.627816200256348
    10. '   ' → logprob: -6.752816200256348

Token 54: ' nodes' (ID: 15749)
  Prédit: ' nodes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.019901225343346596
    2. ' ' → logprob: -4.144901275634766
    3. 'nodes' → logprob: -6.019901275634766
    4. ' n' → logprob: -6.769901275634766
    5. '_nodes' → logprob: -9.019901275634766
    6. 'n' → logprob: -9.394901275634766
    7. ' vertices' → logprob: -9.894901275634766
    8. '	nodes' → logprob: -11.144901275634766
    9. ' node' → logprob: -12.894901275634766
    10. '   ' → logprob: -13.019901275634766

Token 55: ' in' (ID: 306)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.027181698009371758
    2. '   ' → logprob: -3.652181625366211
    3. ' n' → logprob: -7.527181625366211
    4. '    
' → logprob: -9.277181625366211
    5. '    ' → logprob: -9.402181625366211
    6. '\n' → logprob: -10.027181625366211
    7. '```' → logprob: -10.402181625366211
    8. '	n' → logprob: -10.652181625366211
    9. '(n' → logprob: -10.902181625366211
    10. '  ' → logprob: -11.902181625366211

Token 56: ' tree' (ID: 8165)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13926954567432404
    2. ' n' → logprob: -2.1392695903778076
    3. 'n' → logprob: -5.2642693519592285
    4. 'the' → logprob: -5.2642693519592285
    5. ' tree' → logprob: -7.3892693519592285
    6. '   ' → logprob: -7.7642693519592285
    7. ' a' → logprob: -8.139269828796387
    8. ' ' → logprob: -8.764269828796387
    9. ' N' → logprob: -9.764269828796387
    10. ' nodes' → logprob: -9.764269828796387

Token 57: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034265171736478806
    2. '   ' → logprob: -3.4092652797698975
    3. ' n' → logprob: -8.409265518188477
    4. '    
' → logprob: -9.034265518188477
    5. '	n' → logprob: -9.409265518188477
    6. '
' → logprob: -10.034265518188477
    7. '    ' → logprob: -10.159265518188477
    8. '\n' → logprob: -10.159265518188477
    9. '```' → logprob: -10.534265518188477
    10. '(n' → logprob: -11.284265518188477

Token 58: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05192160978913307
    2. ' n' → logprob: -3.4269216060638428
    3. ')' → logprob: -4.551921844482422
    4. '   ' → logprob: -5.426921844482422
    5. ')n' → logprob: -6.301921844482422
    6. ' )' → logprob: -6.801921844482422
    7. 'N' → logprob: -8.801921844482422
    8. '  ' → logprob: -11.301921844482422
    9. ' N' → logprob: -11.301921844482422
    10. ' ' → logprob: -11.551921844482422

Token 59: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009333726949989796
    2. ' )' → logprob: -5.134333610534668
    3. '   ' → logprob: -6.509333610534668
    4. ',' → logprob: -7.134333610534668
    5. '=' → logprob: -7.884333610534668
    6. ' =' → logprob: -8.259333610534668
    7. ')n' → logprob: -8.509333610534668
    8. ' and' → logprob: -9.509333610534668
    9. '),' → logprob: -9.884333610534668
    10. 'n' → logprob: -9.884333610534668

Token 60: ' and' (ID: 326)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5789526104927063
    2. '   ' → logprob: -1.2039525508880615
    3. 'N' → logprob: -2.0789525508880615
    4. ' N' → logprob: -5.078952789306641
    5. '```' → logprob: -6.078952789306641
    6. '
' → logprob: -6.703952789306641
    7. '    
' → logprob: -6.703952789306641
    8. '\n' → logprob: -6.828952789306641
    9. ' =' → logprob: -7.828952789306641
    10. '<|end|>' → logprob: -8.32895278930664

Token 61: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -0.3246150612831116
    2. ' Q' → logprob: -2.074615001678467
    3. ' M' → logprob: -2.949615001678467
    4. 'number' → logprob: -3.199615001678467
    5. ' queries' → logprob: -3.699615001678467
    6. 'Q' → logprob: -4.074615001678467
    7. ' the' → logprob: -5.449615001678467
    8. 'M' → logprob: -5.699615001678467
    9. ' operations' → logprob: -6.074615001678467
    10. 'queries' → logprob: -6.699615001678467

Token 62: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1781359165906906
    2. ' =' → logprob: -2.678135871887207
    3. ')' → logprob: -3.553135871887207
    4. ' of' → logprob: -3.678135871887207
    5. '_of' → logprob: -4.178135871887207
    6. 's' → logprob: -5.428135871887207
    7. '_tokens' → logprob: -5.428135871887207
    8. '_token' → logprob: -5.928135871887207
    9. 'of' → logprob: -5.928135871887207
    10. '<|end|>' → logprob: -6.178135871887207

Token 63: ' queries' (ID: 32122)
  Prédit: ' operations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operations' → logprob: -0.4788045585155487
    2. ' updates' → logprob: -1.353804588317871
    3. ' queries' → logprob: -2.228804588317871
    4. 'operations' → logprob: -4.728804588317871
    5. 'updates' → logprob: -5.603804588317871
    6. ' increments' → logprob: -7.603804588317871
    7. ' ' → logprob: -7.853804588317871
    8. 'queries' → logprob: -7.853804588317871
    9. ' edges' → logprob: -8.103804588317871
    10. ' incremental' → logprob: -9.978804588317871

Token 64: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.16889406740665436
    2. '   ' → logprob: -2.293894052505493
    3. 'N' → logprob: -3.293894052505493
    4. '```' → logprob: -5.168894290924072
    5. ' N' → logprob: -5.668894290924072
    6. '    
' → logprob: -6.418894290924072
    7. ' =' → logprob: -6.793894290924072
    8. ' n' → logprob: -7.293894290924072
    9. '
' → logprob: -7.418894290924072
    10. '[' → logprob: -7.918894290924072

Token 65: 'Q' (ID: 48)
  Prédit: 'Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.9224584102630615
    2. ' Q' → logprob: -0.9224584102630615
    3. ' )' → logprob: -2.5474584102630615
    4. ' ' → logprob: -3.0474584102630615
    5. ' K' → logprob: -3.5474584102630615
    6. ' M' → logprob: -4.297458648681641
    7. ')' → logprob: -4.422458648681641
    8. 'K' → logprob: -4.547458648681641
    9. ',' → logprob: -4.797458648681641
    10. 'M' → logprob: -6.047458648681641

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03278903663158417
    2. '):' → logprob: -3.7827889919281006
    3. ',' → logprob: -5.40778923034668
    4. '   ' → logprob: -5.78278923034668
    5. ')
' → logprob: -7.03278923034668
    6. '):
' → logprob: -7.65778923034668
    7. '),' → logprob: -8.65778923034668
    8. ' )' → logprob: -8.65778923034668
    9. '```' → logprob: -9.65778923034668
    10. '`)' → logprob: -10.15778923034668

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40575945377349854
    2. '
' → logprob: -1.4057594537734985
    3. '    
' → logprob: -3.030759334564209
    4. 'n' → logprob: -4.030759334564209
    5. '```' → logprob: -4.530759334564209
    6. '\n' → logprob: -5.405759334564209
    7. ' 
' → logprob: -6.155759334564209
    8. '<|end|>' → logprob: -6.405759334564209
    9. '  
' → logprob: -7.405759334564209
    10. '   
' → logprob: -7.530759334564209

Token 68: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.25025349855422974
    2. 'N' (adapté à ' N') → logprob: -2.000253438949585
    3. ' 
' → logprob: -3.375253438949585
    4. 'n' → logprob: -3.375253438949585
    5. ' n' → logprob: -4.875253677368164
    6. '   ' → logprob: -5.250253677368164
    7. ' ' → logprob: -6.500253677368164
    8. '    
' → logprob: -6.750253677368164
    9. '```' → logprob: -7.125253677368164
    10. '
' → logprob: -7.750253677368164

Token 69: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003646633995231241
    2. ' ,' → logprob: -8.000364303588867
    3. '=' → logprob: -10.750364303588867
    4. ' =' → logprob: -12.750364303588867
    5. ',N' → logprob: -13.625364303588867
    6. '   ' → logprob: -14.625364303588867
    7. ',int' → logprob: -15.000364303588867
    8. '```' → logprob: -15.125364303588867
    9. '‌,' → logprob: -15.250364303588867
    10. ' ' → logprob: -15.500364303588867

Token 70: ' Q' (ID: 1486)
  Prédit: ' Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Q' → logprob: -0.7791951298713684
    2. ' ' → logprob: -1.2791950702667236
    3. '<|end|>' → logprob: -1.4041950702667236
    4. 'Q' → logprob: -4.779195308685303
    5. ' =' → logprob: -5.029195308685303
    6. '=' → logprob: -7.404195308685303
    7. '<|end|>' → logprob: -7.404195308685303
    8. ' ' → logprob: -8.279194831848145
    9. '  ' → logprob: -8.404194831848145
    10. ' q' → logprob: -8.654194831848145

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. '=input' → logprob: -14.12692928314209
    4. ',' → logprob: -14.75192928314209
    5. '=int' → logprob: -16.001930236816406
    6. ')' → logprob: -17.251930236816406
    7. '＝' → logprob: -18.001930236816406
    8. ' =
' → logprob: -19.126930236816406
    9. '=line' → logprob: -19.126930236816406
    10. '[' → logprob: -19.251930236816406

Token 72: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0003850325592793524
    2. 'map' → logprob: -7.87538480758667
    3. ' list' → logprob: -12.375385284423828
    4. ' ' → logprob: -14.750385284423828
    5. ' tuple' → logprob: -16.000385284423828
    6. '	map' → logprob: -16.000385284423828
    7. ' [' → logprob: -16.875385284423828
    8. ' input' → logprob: -16.875385284423828
    9. ' mapa' → logprob: -17.625385284423828
    10. '[' → logprob: -18.500385284423828

Token 73: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.11574482172727585
    2. '(' → logprob: -2.2407448291778564
    3. '(input' → logprob: -6.490744590759277
    4. '(str' → logprob: -6.615744590759277
    5. '(lambda' → logprob: -11.365744590759277
    6. '()' → logprob: -11.490744590759277
    7. '(list' → logprob: -11.865744590759277
    8. 'int' → logprob: -12.240744590759277
    9. '(
' → logprob: -12.490744590759277
    10. 'input' → logprob: -12.740744590759277

Token 74: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017726195976138115
    2. ',int' → logprob: -4.642726421356201
    3. ',input' → logprob: -4.892726421356201
    4. '(int' → logprob: -8.642725944519043
    5. 'input' → logprob: -9.142725944519043
    6. ' ,' → logprob: -9.642725944519043
    7. '(' → logprob: -10.892725944519043
    8. '(input' → logprob: -10.892725944519043
    9. ')' → logprob: -11.142725944519043
    10. '   ' → logprob: -11.767725944519043

Token 75: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.575942873954773
    2. ' input' → logprob: -0.825942873954773
    3. ' ' → logprob: -13.700942993164062
    4. '(input' → logprob: -14.325942993164062
    5. '=input' → logprob: -14.700942993164062
    6. ',input' → logprob: -14.825942993164062
    7. '	input' → logprob: -15.200942993164062
    8. ')' → logprob: -15.200942993164062
    9. '   ' → logprob: -15.700942993164062
    10. '<input' → logprob: -16.200942993164062

Token 76: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.016204573214054108
    2. '()' → logprob: -4.266204357147217
    3. '())' → logprob: -6.516204357147217
    4. ')' → logprob: -7.766204357147217
    5. '(),' → logprob: -9.391204833984375
    6. '()>' → logprob: -11.766204833984375
    7. '(' → logprob: -12.016204833984375
    8. '()[' → logprob: -12.141204833984375
    9. ' ()' → logprob: -12.766204833984375
    10. '()))' → logprob: -12.891204833984375

Token 77: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00672211404889822
    2. 'strip' → logprob: -5.0067219734191895
    3. 'rstrip' → logprob: -12.131722450256348
    4. ')' → logprob: -14.256722450256348
    5. 'read' → logprob: -15.006722450256348
    6. ' split' → logprob: -15.506722450256348
    7. '(split' → logprob: -17.13172149658203
    8. 'decode' → logprob: -17.50672149658203
    9. 'spl' → logprob: -17.63172149658203
    10. 's' → logprob: -17.75672149658203

Token 78: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009018116979859769
    2. '()' → logprob: -7.625901699066162
    3. '())' → logprob: -8.12590217590332
    4. '))' → logprob: -9.12590217590332
    5. '(' → logprob: -12.62590217590332
    6. ')`' → logprob: -13.37590217590332
    7. ' )' → logprob: -13.62590217590332
    8. '),' → logprob: -14.25090217590332
    9. ')
' → logprob: -14.37590217590332
    10. ')(' → logprob: -14.62590217590332

Token 79: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5293534994125366
    2. '```' → logprob: -1.5293534994125366
    3. '   ' → logprob: -1.7793534994125366
    4. '    
' → logprob: -4.654353618621826
    5. '\n' → logprob: -4.904353618621826
    6. '\' → logprob: -6.404353618621826
    7. 'nodes' → logprob: -6.529353618621826
    8. '``' → logprob: -7.029353618621826
    9. 'newline' → logprob: -7.529353618621826
    10. 'graph' → logprob: -7.779353618621826

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04678692668676376
    2. 'parent' → logprob: -4.671786785125732
    3. 'graph' → logprob: -4.796786785125732
    4. ' graph' → logprob: -5.046786785125732
    5. '#' → logprob: -5.171786785125732
    6. ' parent' → logprob: -5.796786785125732
    7. '```' → logprob: -6.171786785125732
    8. ' edges' → logprob: -6.421786785125732
    9. 'parents' → logprob: -6.421786785125732
    10. ' parents' → logprob: -6.671786785125732

Token 81: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.044458031654358
    2. 'tree' → logprob: -1.669458031654358
    3. 'parent' → logprob: -1.794458031654358
    4. 'parents' → logprob: -2.1694579124450684
    5. 'edges' → logprob: -2.5444579124450684
    6. 'adj' → logprob: -3.9194579124450684
    7. ' graph' → logprob: -4.169457912445068
    8. ' parents' → logprob: -4.294457912445068
    9. 'children' → logprob: -4.419457912445068
    10. '#' (adapté à ' #') → logprob: -4.419457912445068

Token 82: ' Initialize' (ID: 19496)
  Prédit: ' parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' parent' → logprob: -1.4142364263534546
    2. ' parents' → logprob: -1.4142364263534546
    3. ' edges' → logprob: -1.7892364263534546
    4. 'parent' → logprob: -2.414236545562744
    5. '#' → logprob: -2.914236545562744
    6. 'parents' → logprob: -3.539236545562744
    7. ' children' → logprob: -3.539236545562744
    8. 'children' → logprob: -3.914236545562744
    9. ' tree' → logprob: -4.164236545562744
    10. ' adjacency' → logprob: -4.164236545562744

Token 83: ' adjacency' (ID: 177015)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5154765248298645
    2. 'graph' → logprob: -1.5154764652252197
    3. ' tree' → logprob: -2.6404764652252197
    4. 'adj' → logprob: -3.5154764652252197
    5. 'tree' → logprob: -3.7654764652252197
    6. ' parent' → logprob: -4.015476703643799
    7. ' adjacency' → logprob: -4.765476703643799
    8. 'parent' → logprob: -5.015476703643799
    9. '   ' → logprob: -5.140476703643799
    10. ' adj' → logprob: -5.640476703643799

Token 84: ' list' (ID: 1562)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.012781322933733463
    2. '_lists' → logprob: -5.387781143188477
    3. '_' → logprob: -6.012781143188477
    4. ' =' → logprob: -6.137781143188477
    5. 'list' → logprob: -6.637781143188477
    6. '   ' → logprob: -7.387781143188477
    7. 'List' → logprob: -7.637781143188477
    8. '[' → logprob: -7.887781143188477
    9. ' ' → logprob: -8.512781143188477
    10. ' list' → logprob: -9.012781143188477

Token 85: ' for' (ID: 395)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14415238797664642
    2. 'tree' → logprob: -3.0191524028778076
    3. '   ' → logprob: -3.8941524028778076
    4. 'graph' → logprob: -4.0191521644592285
    5. '[' → logprob: -4.2691521644592285
    6. '=' → logprob: -4.3941521644592285
    7. ' tree' → logprob: -5.1441521644592285
    8. '[]' → logprob: -5.2691521644592285
    9. ' graph' → logprob: -6.5191521644592285
    10. '_tree' → logprob: -6.6441521644592285

Token 86: ' the' (ID: 290)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.6007791757583618
    2. ' the' → logprob: -1.6007791757583618
    3. ' ' → logprob: -2.8507790565490723
    4. ' [[]' → logprob: -3.2257790565490723
    5. ' graph' → logprob: -3.3507790565490723
    6. ' nodes' → logprob: -3.6007790565490723
    7. 'tree' → logprob: -3.9757790565490723
    8. ' adjacency' → logprob: -4.100779056549072
    9. ' defaultdict' → logprob: -4.475779056549072
    10. ' range' → logprob: -4.725779056549072

Token 87: ' tree' (ID: 8165)
  Prédit: ' tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.202438622713089
    2. 'tree' → logprob: -1.7024385929107666
    3. ' graph' → logprob: -7.452438831329346
    4. 'graph' → logprob: -8.327438354492188
    5. '_tree' → logprob: -10.202438354492188
    6. ' nodes' → logprob: -10.702438354492188
    7. ' children' → logprob: -10.952438354492188
    8. 'children' → logprob: -11.077438354492188
    9. '	tree' → logprob: -11.077438354492188
    10. ' adjacency' → logprob: -11.202438354492188

Token 88: '.
' (ID: 558)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.8629617094993591
    2. ' tree' → logprob: -1.612961769104004
    3. 'graph' → logprob: -2.362961769104004
    4. '
' → logprob: -2.862961769104004
    5. 'adj' → logprob: -3.487961769104004
    6. ' graph' → logprob: -3.612961769104004
    7. '```' → logprob: -3.612961769104004
    8. ' adjacency' → logprob: -3.737961769104004
    9. '/tree' → logprob: -4.112961769104004
    10. '_tree' → logprob: -4.362961769104004

Token 89: '   ' (ID: 271)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.48017418384552
    2. ' graph' → logprob: -1.35517418384552
    3. 'tree' → logprob: -2.8551740646362305
    4. 'graph' → logprob: -3.3551740646362305
    5. ' adj' → logprob: -4.2301740646362305
    6. 'adj' → logprob: -4.7301740646362305
    7. ' adjacency' → logprob: -5.8551740646362305
    8. ' edges' → logprob: -5.9801740646362305
    9. ' children' → logprob: -7.3551740646362305
    10. '   ' → logprob: -7.6051740646362305

Token 90: ' #' (ID: 1069)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.19629201292991638
    2. 'tree' → logprob: -2.321291923522949
    3. ' graph' → logprob: -3.571291923522949
    4. ' adjacency' → logprob: -4.696291923522949
    5. ' trees' → logprob: -5.071291923522949
    6. 'graph' → logprob: -5.196291923522949
    7. ' 
' → logprob: -5.696291923522949
    8. ' ' → logprob: -5.696291923522949
    9. 'adj' → logprob: -5.696291923522949
    10. '	tree' → logprob: -5.821291923522949

Token 91: ' Each' (ID: 11555)
  Prédit: ' tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tree' → logprob: -0.5741111040115356
    2. ' graph' → logprob: -1.9491111040115356
    3. 'tree' → logprob: -2.199110984802246
    4. 'graph' → logprob: -3.074110984802246
    5. 'adj' → logprob: -3.074110984802246
    6. ' adj' → logprob: -3.199110984802246
    7. ' adjacency' → logprob: -3.449110984802246
    8. ' edges' → logprob: -4.824110984802246
    9. ' children' → logprob: -5.824110984802246
    10. 'children' → logprob: -5.949110984802246

Token 92: ' index' (ID: 3472)
  Prédit: ' node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.25999048352241516
    2. ' ' → logprob: -2.5099904537200928
    3. '[' → logprob: -3.5099904537200928
    4. '[]' → logprob: -3.7599904537200928
    5. ' []' → logprob: -4.009990692138672
    6. ' [' → logprob: -4.134990692138672
    7. '[node' → logprob: -4.134990692138672
    8. ' _' → logprob: -4.384990692138672
    9. 'node' → logprob: -4.509990692138672
    10. '_' → logprob: -5.259990692138672

Token 93: ' in' (ID: 306)
  Prédit: ' represents'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' represents' → logprob: -0.33146584033966064
    2. ' is' → logprob: -2.831465721130371
    3. ' =' → logprob: -2.956465721130371
    4. ']' → logprob: -3.206465721130371
    5. ' ' → logprob: -3.581465721130371
    6. '=' → logprob: -4.081465721130371
    7. '[' → logprob: -4.081465721130371
    8. '[]' → logprob: -4.456465721130371
    9. ' of' → logprob: -4.706465721130371
    10. ' []' → logprob: -4.831465721130371

Token 94: ' '' (ID: 461)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5547196269035339
    2. 'adj' → logprob: -1.0547196865081787
    3. ' adj' → logprob: -3.1797196865081787
    4. 'graph' → logprob: -4.6797194480896
    5. 'tree' → logprob: -4.9297194480896
    6. ' graph' → logprob: -5.0547194480896
    7. ' tree' → logprob: -5.1797194480896
    8. ' the' → logprob: -6.0547194480896
    9. ' range' → logprob: -6.4297194480896
    10. 'children' → logprob: -6.9297194480896

Token 95: 'point' (ID: 4859)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.2970169186592102
    2. 'graph' → logprob: -1.6720168590545654
    3. 'tree' → logprob: -3.4220168590545654
    4. 'edges' → logprob: -4.5470170974731445
    5. 'children' → logprob: -4.6720170974731445
    6. 'g' → logprob: -4.7970170974731445
    7. 'G' → logprob: -5.5470170974731445
    8. ' adjacency' → logprob: -6.7970170974731445
    9. ' graph' → logprob: -7.0470170974731445
    10. ' adj' → logprob: -7.7970170974731445

Token 96: ''' (ID: 6)
  Prédit: 'ers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ers' → logprob: -0.5309489965438843
    2. 's' → logprob: -0.9059489965438843
    3. 'er' → logprob: -5.280949115753174
    4. 'sers' → logprob: -7.655949115753174
    5. '[]' → logprob: -8.030948638916016
    6. '_list' → logprob: -8.030948638916016
    7. '[' → logprob: -8.030948638916016
    8. ' ers' → logprob: -8.155948638916016
    9. 'rs' → logprob: -8.655948638916016
    10. '   ' → logprob: -8.780948638916016

Token 97: ' represents' (ID: 18627)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4975461959838867
    2. ' represents' → logprob: -1.3725461959838867
    3. '=' → logprob: -2.9975461959838867
    4. ' is' → logprob: -3.2475461959838867
    5. 'rep' → logprob: -3.9975461959838867
    6. '[]' → logprob: -4.872546195983887
    7. ' contains' → logprob: -5.247546195983887
    8. '[' → logprob: -5.372546195983887
    9. ']' → logprob: -5.872546195983887
    10. ' has' → logprob: -5.997546195983887

Token 98: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6139551401138306
    2. ' a' → logprob: -0.8639551401138306
    3. '[]' → logprob: -3.738955020904541
    4. ' the' → logprob: -5.488955020904541
    5. 'the' → logprob: -5.738955020904541
    6. ' an' → logprob: -5.738955020904541
    7. 'children' → logprob: -7.363955020904541
    8. 'an' → logprob: -7.613955020904541
    9. ' nodes' → logprob: -7.613955020904541
    10. ' children' → logprob: -7.988955020904541

Token 99: ' node' (ID: 4596)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.1727563887834549
    2. ' node' → logprob: -2.5477564334869385
    3. 'list' → logprob: -2.7977564334869385
    4. '[]' → logprob: -4.422756195068359
    5. 'node' → logprob: -5.297756195068359
    6. ' []' → logprob: -7.547756195068359
    7. ' child' → logprob: -7.922756195068359
    8. 'children' → logprob: -8.29775619506836
    9. 'n' → logprob: -8.42275619506836
    10. '[node' → logprob: -8.42275619506836

Token 100: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009276322089135647
    2. '   ' → logprob: -5.884276390075684
    3. '[]' → logprob: -6.009276390075684
    4. '=' → logprob: -6.259276390075684
    5. 's' → logprob: -7.759276390075684
    6. ',' → logprob: -8.009276390075684
    7. ']' → logprob: -8.259276390075684
    8. ':' → logprob: -8.384276390075684
    9. '[' → logprob: -8.509276390075684
    10. '=[]' → logprob: -8.759276390075684

Token 101: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.21075767278671265
    2. '[]' → logprob: -2.7107577323913574
    3. ' pointing' → logprob: -3.3357577323913574
    4. ' with' → logprob: -3.9607577323913574
    5. 'and' → logprob: -4.210757732391357
    6. ' []' → logprob: -4.460757732391357
    7. ' ' → logprob: -4.460757732391357
    8. '   ' → logprob: -4.960757732391357
    9. ' containing' → logprob: -5.210757732391357
    10. ' points' → logprob: -5.585757732391357

Token 102: ' contains' (ID: 8895)
  Prédit: ' its'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.6133567094802856
    2. ' stores' → logprob: -1.3633567094802856
    3. ' contains' → logprob: -1.9883567094802856
    4. ' holds' → logprob: -3.238356590270996
    5. ' the' → logprob: -4.738356590270996
    6. 'the' → logprob: -5.863356590270996
    7. 'stores' → logprob: -5.863356590270996
    8. 'its' → logprob: -6.113356590270996
    9. 'contains' → logprob: -6.113356590270996
    10. 'holds' → logprob: -6.613356590270996

Token 103: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.7468300461769104
    2. '[]' → logprob: -0.8718300461769104
    3. ' an' → logprob: -2.9968299865722656
    4. 'a' → logprob: -3.4968299865722656
    5. ' []' → logprob: -4.121829986572266
    6. ' its' → logprob: -4.746829986572266
    7. 'an' → logprob: -6.496829986572266
    8. ' the' → logprob: -7.246829986572266
    9. 'the' → logprob: -8.246829986572266
    10. 'its' → logprob: -9.121829986572266

Token 104: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.08257578313350677
    2. 'list' → logprob: -2.582575798034668
    3. '[]' → logprob: -5.707575798034668
    4. ' []' → logprob: -8.082575798034668
    5. 'n' → logprob: -11.207575798034668
    6. '[' → logprob: -11.332575798034668
    7. 'lst' → logprob: -12.332575798034668
    8. ' [' → logprob: -12.457575798034668
    9. 's' → logprob: -12.832575798034668
    10. ' lists' → logprob: -12.957575798034668

Token 105: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6062256097793579
    2. '<|end|>' → logprob: -0.8562256097793579
    3. '[]' → logprob: -3.8562254905700684
    4. '<|end|>' → logprob: -5.356225490570068
    5. '   ' → logprob: -6.481225490570068
    6. ' ' → logprob: -7.356225490570068
    7. 'of' → logprob: -8.106225967407227
    8. 's' → logprob: -8.231225967407227
    9. ' for' → logprob: -8.481225967407227
    10. '[' → logprob: -8.606225967407227

Token 106: ' its' (ID: 1617)
  Prédit: ' its'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' its' → logprob: -0.3371208906173706
    2. ' children' → logprob: -1.4621208906173706
    3. 'children' → logprob: -3.83712100982666
    4. ' connected' → logprob: -4.21212100982666
    5. ' child' → logprob: -5.08712100982666
    6. 'its' → logprob: -5.96212100982666
    7. ' integers' → logprob: -5.96212100982666
    8. ' neighbors' → logprob: -6.46212100982666
    9. ' adjacent' → logprob: -6.46212100982666
    10. ' nodes' → logprob: -6.71212100982666

Token 107: ' children' (ID: 3953)
  Prédit: ' children'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' children' → logprob: -0.25577491521835327
    2. 'children' → logprob: -1.505774974822998
    3. ' neighbors' → logprob: -6.380774974822998
    4. ' connected' → logprob: -7.380774974822998
    5. ' child' → logprob: -7.505774974822998
    6. 'neighbors' → logprob: -7.755774974822998
    7. ' adjacent' → logprob: -8.88077449798584
    8. ' descendants' → logprob: -8.88077449798584
    9. 'child' → logprob: -9.13077449798584
    10. 'adj' → logprob: -9.38077449798584

Token 108: '.
' (ID: 558)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6069716215133667
    2. '   ' → logprob: -1.3569716215133667
    3. '.' → logprob: -2.8569717407226562
    4. '[]' → logprob: -3.2319717407226562
    5. ']' → logprob: -3.7319717407226562
    6. ',' → logprob: -4.231971740722656
    7. 'point' → logprob: -4.606971740722656
    8. '=' → logprob: -4.731971740722656
    9. 'points' → logprob: -5.106971740722656
    10. ')' → logprob: -5.231971740722656

Token 109: '   ' (ID: 271)
  Prédit: ' point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' point' → logprob: -0.8889736533164978
    2. 'point' → logprob: -0.8889736533164978
    3. '   ' → logprob: -1.7639737129211426
    4. '
' → logprob: -5.388973712921143
    5. '```' → logprob: -7.388973712921143
    6. '	point' → logprob: -7.888973712921143
    7. '    
' → logprob: -8.513973236083984
    8. '(point' → logprob: -8.638973236083984
    9. '\n' → logprob: -8.888973236083984
    10. '_point' → logprob: -9.138973236083984

Token 110: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.25218313932418823
    2. ' point' → logprob: -1.502183198928833
    3. '
' → logprob: -8.502182960510254
    4. '```' → logprob: -11.377182960510254
    5. ' 
' → logprob: -11.877182960510254
    6. '_point' → logprob: -12.002182960510254
    7. '(point' → logprob: -12.127182960510254
    8. '	point' → logprob: -12.252182960510254
    9. '-point' → logprob: -12.377182960510254
    10. '   ' → logprob: -12.627182960510254

Token 111: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269339919090271
    2. '=' → logprob: -2.126934051513672
    3. '=[' → logprob: -13.126934051513672
    4. '[' → logprob: -13.376934051513672
    5. '=[]' → logprob: -13.751934051513672
    6. ' =[' → logprob: -14.501934051513672
    7. ' ' → logprob: -14.751934051513672
    8. '   ' → logprob: -16.501934051513672
    9. '[]' → logprob: -16.876934051513672
    10. 's' → logprob: -17.126934051513672

Token 112: ' [[]' (ID: 182908)
  Prédit: ' [[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [[]' → logprob: -0.38695526123046875
    2. '[' → logprob: -1.1369552612304688
    3. ' [' → logprob: -9.386955261230469
    4. '[]' → logprob: -15.011955261230469
    5. '[[' → logprob: -17.13695526123047
    6. '   ' → logprob: -17.13695526123047
    7. ' ' → logprob: -17.76195526123047
    8. '[N' → logprob: -18.63695526123047
    9. '[n' → logprob: -18.76195526123047
    10. '[int' → logprob: -19.01195526123047

Token 113: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25221017003059387
    2. 'for' → logprob: -1.5022101402282715
    3. ')' → logprob: -8.62721061706543
    4. '   ' → logprob: -9.87721061706543
    5. '(N' → logprob: -10.75221061706543
    6. ',' → logprob: -11.37721061706543
    7. ' ' → logprob: -11.75221061706543
    8. ' (' → logprob: -12.50221061706543
    9. ']' → logprob: -13.37721061706543
    10. '(' → logprob: -13.50221061706543

Token 114: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5008995532989502
    2. '(' → logprob: -1.5008995532989502
    3. ' range' → logprob: -2.12589955329895
    4. '(range' → logprob: -3.75089955329895
    5. 'range' → logprob: -4.125899314880371
    6. ' _' → logprob: -4.875899314880371
    7. ' (' → logprob: -6.375899314880371
    8. '<|end|>' → logprob: -7.250899314880371
    9. '()' → logprob: -7.625899314880371
    10. '(_' → logprob: -8.125899314880371

Token 115: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.016886260360479355
    2. ' range' → logprob: -4.141886234283447
    3. 'in' → logprob: -7.266886234283447
    4. ' in' → logprob: -9.641886711120605
    5. '(range' → logprob: -9.766886711120605
    6. 'ange' → logprob: -11.641886711120605
    7. ' ' → logprob: -11.891886711120605
    8. '   ' → logprob: -12.141886711120605
    9. ')' → logprob: -12.266886711120605
    10. 'ran' → logprob: -13.141886711120605

Token 116: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16022604703903198
    2. ' range' → logprob: -1.9102261066436768
    3. '(range' → logprob: -13.285225868225098
    4. '   ' → logprob: -16.785226821899414
    5. ' ' → logprob: -16.910226821899414
    6. '	range' → logprob: -18.410226821899414
    7. ')' → logprob: -18.535226821899414
    8. '  ' → logprob: -19.535226821899414
    9. '    ' → logprob: -19.910226821899414
    10. '_range' → logprob: -20.035226821899414

Token 117: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001254693343071267
    2. '(' → logprob: -9.000125885009766
    3. ' (' → logprob: -13.250125885009766
    4. '(n' → logprob: -15.625125885009766
    5. '((' → logprob: -17.500125885009766
    6. '(
' → logprob: -18.000125885009766
    7. '(NUM' → logprob: -19.250125885009766
    8. 'N' → logprob: -19.500125885009766
    9. '(num' → logprob: -19.875125885009766
    10. ')' → logprob: -19.875125885009766

Token 118: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0005107374745421112
    2. ' )' → logprob: -7.8755106925964355
    3. '+' → logprob: -9.375511169433594
    4. ')' → logprob: -10.125511169433594
    5. ')]
' → logprob: -13.500511169433594
    6. ')],' → logprob: -13.625511169433594
    7. ')])' → logprob: -14.375511169433594
    8. ' +' → logprob: -14.375511169433594
    9. ' ]' → logprob: -14.875511169433594
    10. ']' → logprob: -15.000511169433594

Token 119: '    
' (ID: 1944)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6882643103599548
    2. ' for' → logprob: -1.1882643699645996
    3. '   ' → logprob: -1.8132643699645996
    4. '
' → logprob: -4.6882643699646
    5. '<|end|>' → logprob: -4.8132643699646
    6. '    
' → logprob: -5.6882643699646
    7. '```' → logprob: -6.1882643699646
    8. 'parent' → logprob: -6.5632643699646
    9. '\n' → logprob: -6.5632643699646
    10. ')' → logprob: -7.5632643699646

Token 120: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008807787671685219
    2. ' for' → logprob: -5.38380765914917
    3. '   ' → logprob: -5.50880765914917
    4. '#' → logprob: -9.008808135986328
    5. '	for' → logprob: -13.383808135986328
    6. ' ' → logprob: -13.758808135986328
    7. '
' → logprob: -14.133808135986328
    8. '    
' → logprob: -14.383808135986328
    9. '```' → logprob: -14.508808135986328
    10. 'parent' → logprob: -15.258808135986328

Token 121: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016420685278717428
    2. ' for' → logprob: -8.875164031982422
    3. 'parent' → logprob: -11.125164031982422
    4. '#' (adapté à ' #') → logprob: -12.250164031982422
    5. '   ' → logprob: -12.750164031982422
    6. 'import' → logprob: -14.125164031982422
    7. 'parents' → logprob: -14.625164031982422
    8. 'from' → logprob: -15.750164031982422
    9. 'root' → logprob: -15.875164031982422
    10. '    
' → logprob: -16.000164031982422

Token 122: ' Initialize' (ID: 19496)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002299420302733779
    2. '#' → logprob: -7.0022993087768555
    3. ' for' → logprob: -7.2522993087768555
    4. 'parent' → logprob: -7.5022993087768555
    5. 'parents' → logprob: -9.252299308776855
    6. 'from' → logprob: -11.252299308776855
    7. 'For' → logprob: -12.127299308776855
    8. 'import' → logprob: -12.502299308776855
    9. 'par' → logprob: -12.877299308776855
    10. 'p' → logprob: -14.002299308776855

Token 123: ' the' (ID: 290)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -1.0913665294647217
    2. ' an' → logprob: -1.9663665294647217
    3. ' parent' → logprob: -2.3413665294647217
    4. ' a' → logprob: -2.4663665294647217
    5. 'a' → logprob: -2.5913665294647217
    6. 'par' → logprob: -2.8413665294647217
    7. ' par' → logprob: -3.4663665294647217
    8. ' the' → logprob: -3.5913665294647217
    9. 'parents' → logprob: -3.5913665294647217
    10. 'depth' → logprob: -3.7163665294647217

Token 124: ' list' (ID: 1562)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.10531207174062729
    2. 'parents' → logprob: -3.1053121089935303
    3. ' parent' → logprob: -3.6053121089935303
    4. 'par' → logprob: -4.355311870574951
    5. 'depth' → logprob: -4.605311870574951
    6. ' parents' → logprob: -6.230311870574951
    7. 'values' → logprob: -8.10531234741211
    8. 'dp' → logprob: -8.10531234741211
    9. ' depth' → logprob: -8.23031234741211
    10. 'root' → logprob: -8.23031234741211

Token 125: ' to' (ID: 316)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5658323764801025
    2. 'A' → logprob: -1.6908323764801025
    3. 's' → logprob: -3.1908323764801025
    4. ' A' → logprob: -3.1908323764801025
    5. ' to' → logprob: -3.4408323764801025
    6. 'a' → logprob: -3.6908323764801025
    7. ' for' → logprob: -4.190832138061523
    8. 'of' → logprob: -4.315832138061523
    9. 'to' → logprob: -4.690832138061523
    10. 'values' → logprob: -4.815832138061523

Token 126: ' store' (ID: 4897)
  Prédit: ' store'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' store' → logprob: -0.4037688076496124
    2. 'store' → logprob: -1.15376877784729
    3. 'hold' → logprob: -4.778769016265869
    4. ' hold' → logprob: -5.403769016265869
    5. 'count' → logprob: -6.778769016265869
    6. ' accumulate' → logprob: -6.903769016265869
    7. 'keep' → logprob: -7.778769016265869
    8. 'read' → logprob: -7.903769016265869
    9. 'acc' → logprob: -8.278768539428711
    10. 'track' → logprob: -8.528768539428711

Token 127: ' extra' (ID: 5018)
  Prédit: 'increments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'increments' → logprob: -0.36917972564697266
    2. 'increment' → logprob: -2.1191797256469727
    3. 'values' → logprob: -3.1191797256469727
    4. ' increments' → logprob: -3.3691797256469727
    5. 'the' → logprob: -3.6191797256469727
    6. ' the' → logprob: -3.7441797256469727
    7. 'parent' → logprob: -3.9941797256469727
    8. ' values' → logprob: -4.244179725646973
    9. 'initial' → logprob: -5.119179725646973
    10. 'acc' → logprob: -5.369179725646973

Token 128: ' value' (ID: 1432)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2134536504745483
    2. '_values' → logprob: -1.2134536504745483
    3. '[]' → logprob: -2.463453769683838
    4. 'values' → logprob: -2.463453769683838
    5. 'increments' → logprob: -2.713453769683838
    6. ' increments' → logprob: -3.463453769683838
    7. ' values' → logprob: -3.588453769683838
    8. '_counts' → logprob: -3.838453769683838
    9. 'value' → logprob: -4.338453769683838
    10. 'increment' → logprob: -4.588453769683838

Token 129: ' added' (ID: 5768)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.003963112831115723
    2. ' for' → logprob: -6.628962993621826
    3. ' s' → logprob: -6.878962993621826
    4. ' at' → logprob: -7.003962993621826
    5. 'for' → logprob: -8.628963470458984
    6. '   ' → logprob: -9.378963470458984
    7. 'increments' → logprob: -9.378963470458984
    8. ' ' → logprob: -9.628963470458984
    9. ' increments' → logprob: -9.628963470458984
    10. 'at' → logprob: -10.128963470458984

Token 130: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6366677284240723
    2. ' to' → logprob: -0.8866677284240723
    3. ' at' → logprob: -3.5116677284240723
    4. 'to' → logprob: -3.6366677284240723
    5. ' for' → logprob: -7.511667728424072
    6. ' ' → logprob: -7.511667728424072
    7. '   ' → logprob: -7.636667728424072
    8. ' s' → logprob: -8.011667251586914
    9. ' per' → logprob: -8.261667251586914
    10. 'at' → logprob: -8.511667251586914

Token 131: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.3885018527507782
    2. ' each' → logprob: -1.1385018825531006
    3. ' nodes' → logprob: -7.3885016441345215
    4. 'nodes' → logprob: -7.6385016441345215
    5. 'node' → logprob: -8.76350212097168
    6. ' node' → logprob: -9.63850212097168
    7. 'points' → logprob: -9.76350212097168
    8. '[node' → logprob: -10.13850212097168
    9. '   ' → logprob: -10.63850212097168
    10. 'point' → logprob: -10.88850212097168

Token 132: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.1130535677075386
    2. 'node' → logprob: -2.238053560256958
    3. '[node' → logprob: -9.113053321838379
    4. ' point' → logprob: -10.113053321838379
    5. 'point' → logprob: -10.488053321838379
    6. 'vertex' → logprob: -12.113053321838379
    7. 'def' → logprob: -12.238053321838379
    8. '	node' → logprob: -12.363053321838379
    9. '<|end|>' → logprob: -12.488053321838379
    10. 'value' → logprob: -12.613053321838379

Token 133: ' from' (ID: 591)
  Prédit: ' at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.5199655890464783
    2. 's' → logprob: -2.019965648651123
    3. ':' → logprob: -3.144965648651123
    4. ',' → logprob: -3.144965648651123
    5. ' for' → logprob: -3.269965648651123
    6. '   ' → logprob: -3.269965648651123
    7. '.' → logprob: -3.894965648651123
    8. 'extra' → logprob: -4.019965648651123
    9. 'at' → logprob: -4.144965648651123
    10. ' (' → logprob: -4.769965648651123

Token 134: ' queries' (ID: 32122)
  Prédit: ' queries'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queries' → logprob: -0.5182235240936279
    2. ' the' → logprob: -1.893223524093628
    3. ' input' → logprob: -2.268223524093628
    4. '0' → logprob: -3.768223524093628
    5. ' incremental' → logprob: -4.143223762512207
    6. ' operations' → logprob: -4.518223762512207
    7. ' its' → logprob: -4.518223762512207
    8. ' each' → logprob: -4.643223762512207
    9. ' root' → logprob: -4.643223762512207
    10. 'queries' → logprob: -4.893223762512207

Token 135: '.
' (ID: 558)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.1633627861738205
    2. ' extra' → logprob: -3.288362741470337
    3. ',' → logprob: -3.788362741470337
    4. '.' → logprob: -4.038362979888916
    5. '_extra' → logprob: -4.413362979888916
    6. 'extras' → logprob: -4.413362979888916
    7. ' at' → logprob: -4.788362979888916
    8. ' ans' → logprob: -5.288362979888916
    9. '(extra' → logprob: -5.288362979888916
    10. ':' → logprob: -5.538362979888916

Token 136: '   ' (ID: 271)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.551063060760498
    2. ' extra' → logprob: -0.926063060760498
    3. '   ' → logprob: -5.051063060760498
    4. 'extras' → logprob: -5.426063060760498
    5. ' extras' → logprob: -5.676063060760498
    6. 'ex' → logprob: -5.676063060760498
    7. 'extr' → logprob: -6.301063060760498
    8. ' ex' → logprob: -6.426063060760498
    9. ' extr' → logprob: -6.426063060760498
    10. 'x' → logprob: -7.176063060760498

Token 137: ' plus' (ID: 2932)
  Prédit: 'extra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extra' → logprob: -0.12822148203849792
    2. 'ex' → logprob: -2.5032215118408203
    3. 'extras' → logprob: -4.50322151184082
    4. 'extr' → logprob: -5.37822151184082
    5. 'added' → logprob: -6.00322151184082
    6. 'add' → logprob: -6.12822151184082
    7. ' extra' → logprob: -6.25322151184082
    8. 'plus' (adapté à ' plus') → logprob: -6.37822151184082
    9. 'x' → logprob: -6.62822151184082
    10. 'adds' → logprob: -7.12822151184082

Token 138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.523672342300415
    2. '=' → logprob: -0.898672342300415
    3. '_values' → logprob: -7.773672103881836
    4. '=[' → logprob: -10.773672103881836
    5. '_value' → logprob: -10.773672103881836
    6. 's' → logprob: -11.023672103881836
    7. '=[]' → logprob: -11.023672103881836
    8. '_vals' → logprob: -11.023672103881836
    9. 'values' → logprob: -11.648672103881836
    10. ' ' → logprob: -11.773672103881836

Token 139: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12692894041538239
    2. ' [' → logprob: -2.1269290447235107
    3. '[N' → logprob: -15.12692928314209
    4. '[n' → logprob: -15.62692928314209
    5. '[int' → logprob: -16.376928329467773
    6. '[len' → logprob: -17.126928329467773
    7. ' ' → logprob: -17.376928329467773
    8. '0' → logprob: -17.376928329467773
    9. '[a' → logprob: -17.376928329467773
    10. '[-' → logprob: -17.501928329467773

Token 140: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -16.500179290771484
    4. '000' → logprob: -18.625179290771484
    5. ']' → logprob: -18.812679290771484
    6. '00' → logprob: -18.812679290771484
    7. '  ' → logprob: -18.937679290771484
    8. '۰' → logprob: -19.000179290771484
    9. '０' → logprob: -19.312679290771484
    10. ')' → logprob: -19.375179290771484

Token 141: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3641449809074402
    2. ']' → logprob: -1.239145040512085
    3. 'for' → logprob: -4.364144802093506
    4. ']*' → logprob: -6.114144802093506
    5. ' ]' → logprob: -7.614144802093506
    6. ' ' → logprob: -9.614145278930664
    7. ')' → logprob: -9.739145278930664
    8. '   ' → logprob: -11.739145278930664
    9. ']*(' → logprob: -12.614145278930664
    10. '	for' → logprob: -13.364145278930664

Token 142: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06428747624158859
    2. 'for' → logprob: -2.8142874240875244
    3. '*' → logprob: -6.5642876625061035
    4. ']' → logprob: -7.5642876625061035
    5. ']*' → logprob: -8.814287185668945
    6. ' *' → logprob: -8.939287185668945
    7. ',' → logprob: -10.314287185668945
    8. ')' → logprob: -10.689287185668945
    9. ' ' → logprob: -10.939287185668945
    10. '*N' → logprob: -11.189287185668945

Token 143: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0019420842872932553
    2. ' N' → logprob: -6.251942157745361
    3. '(N' → logprob: -11.251941680908203
    4. '   ' → logprob: -15.376941680908203
    5. '(' → logprob: -15.626941680908203
    6. ' ' → logprob: -16.126941680908203
    7. ' (' → logprob: -16.876941680908203
    8. '	N' → logprob: -17.126941680908203
    9. 'n' → logprob: -17.626941680908203
    10. '  ' → logprob: -18.751941680908203

Token 144: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2531820237636566
    2. 'for' → logprob: -2.0031819343566895
    3. '    
' → logprob: -2.6281819343566895
    4. ' for' → logprob: -4.7531819343566895
    5. '
' → logprob: -4.8781819343566895
    6. '<|end|>' → logprob: -9.128182411193848
    7. '  
' → logprob: -10.253182411193848
    8. '#' → logprob: -10.503182411193848
    9. '```' → logprob: -10.878182411193848
    10. '	for' → logprob: -10.878182411193848

Token 145: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24008609354496002
    2. 'for' → logprob: -1.7400860786437988
    3. ' for' → logprob: -3.365086078643799
    4. '    
' → logprob: -6.115086078643799
    5. '#' → logprob: -7.240086078643799
    6. '
' → logprob: -8.490086555480957
    7. '	for' → logprob: -9.365086555480957
    8. '<|end|>' → logprob: -10.115086555480957
    9. '  
' → logprob: -10.615086555480957
    10. 'parent' → logprob: -10.990086555480957

Token 146: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.040585584938526154
    2. '   ' → logprob: -3.790585517883301
    3. ' for' → logprob: -4.540585517883301
    4. '#' (adapté à ' #') → logprob: -5.040585517883301
    5. '    
' → logprob: -10.7905855178833
    6. 'parent' → logprob: -11.0405855178833
    7. ' #' → logprob: -12.2905855178833
    8. '	for' → logprob: -12.4155855178833
    9. 'parents' → logprob: -13.0405855178833
    10. 'import' → logprob: -13.7905855178833

Token 147: ' Read' (ID: 5405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0029418058693408966
    2. '#' → logprob: -5.877941608428955
    3. ' for' → logprob: -9.627942085266113
    4. '   ' → logprob: -9.877942085266113
    5. 'For' → logprob: -11.877942085266113
    6. 'import' → logprob: -12.002942085266113
    7. 'from' → logprob: -12.502942085266113
    8. 'parent' → logprob: -14.127942085266113
    9. '
' → logprob: -14.752942085266113
    10. '```' → logprob: -15.377942085266113

Token 148: ' N' (ID: 478)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.665425717830658
    2. ' the' → logprob: -1.5404257774353027
    3. 'for' → logprob: -1.9154257774353027
    4. ' edges' → logprob: -2.6654257774353027
    5. ' N' → logprob: -3.2904257774353027
    6. 'N' → logprob: -4.915425777435303
    7. 'the' → logprob: -5.540425777435303
    8. ' parent' → logprob: -6.040425777435303
    9. 'edges' → logprob: -6.540425777435303
    10. 'parent' → logprob: -7.165425777435303

Token 149: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.34845906496047974
    2. ' -' → logprob: -1.223459005355835
    3. ' ' → logprob: -12.723459243774414
    4. '−' → logprob: -12.723459243774414
    5. '
' → logprob: -13.223459243774414
    6. '1' → logprob: -13.348459243774414
    7. 'minus' → logprob: -13.473459243774414
    8. ' ' → logprob: -14.223459243774414
    9. '0' → logprob: -14.848459243774414
    10. ' times' → logprob: -14.973459243774414

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036066018510609865
    2. ' ' → logprob: -5.628606796264648
    3. '-' → logprob: -13.253606796264648
    4. '```' → logprob: -13.253606796264648
    5. '   ' → logprob: -13.503606796264648
    6. 'def' → logprob: -15.003606796264648
    7. '<|end|>' → logprob: -15.753606796264648
    8. 'for' → logprob: -15.753606796264648
    9. '2' → logprob: -16.00360679626465
    10. '0' → logprob: -16.12860679626465

Token 151: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.040530528873205185
    2. ' lines' → logprob: -3.4155304431915283
    3. 'edges' → logprob: -5.165530681610107
    4. ' for' → logprob: -7.415530681610107
    5. '_edges' → logprob: -8.29053020477295
    6. 'for' → logprob: -9.16553020477295
    7. ' times' → logprob: -9.79053020477295
    8. '<|end|>' → logprob: -10.04053020477295
    9. 'times' → logprob: -10.91553020477295
    10. 'lines' → logprob: -10.91553020477295

Token 152: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19858410954475403
    2. ' for' → logprob: -1.9485840797424316
    3. 'for' → logprob: -3.5735840797424316
    4. '
' → logprob: -4.698584079742432
    5. '	for' → logprob: -8.44858455657959
    6. '    
' → logprob: -9.07358455657959
    7. '<|end|>' → logprob: -9.32358455657959
    8. '<|end|>' → logprob: -11.07358455657959
    9. ',' → logprob: -11.82358455657959
    10. '  
' → logprob: -12.07358455657959

Token 153: ' build' (ID: 3024)
  Prédit: ' build'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' build' → logprob: -0.23127910494804382
    2. ' construct' → logprob: -2.231279134750366
    3. 'build' → logprob: -2.481279134750366
    4. 'construct' → logprob: -4.856278896331787
    5. ' connect' → logprob: -6.106278896331787
    6. ' establish' → logprob: -6.356278896331787
    7. ' form' → logprob: -6.481278896331787
    8. ' define' → logprob: -6.606278896331787
    9. 'connect' → logprob: -8.106279373168945
    10. 'define' → logprob: -8.606279373168945

Token 154: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.0815381109714508
    2. 'the' → logprob: -2.581538200378418
    3. 'point' → logprob: -6.706538200378418
    4. ' point' → logprob: -6.956538200378418
    5. ' for' → logprob: -8.206538200378418
    6. 'for' → logprob: -9.206538200378418
    7. 'tree' → logprob: -9.956538200378418
    8. ' tree' → logprob: -10.581538200378418
    9. ' ' → logprob: -11.956538200378418
    10. ' a' → logprob: -12.456538200378418

Token 155: ' tree' (ID: 8165)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.39003410935401917
    2. ' tree' → logprob: -1.6400340795516968
    3. 'point' → logprob: -2.1400341987609863
    4. ' point' → logprob: -4.640034198760986
    5. 'for' → logprob: -6.890034198760986
    6. ' adjacency' → logprob: -8.640033721923828
    7. 'graph' → logprob: -9.140033721923828
    8. 'root' → logprob: -9.515033721923828
    9. ' for' → logprob: -9.515033721923828
    10. 'parent' → logprob: -9.640033721923828

Token 156: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10757125914096832
    2. ' for' → logprob: -2.6075713634490967
    3. 'for' → logprob: -3.6075713634490967
    4. '
' → logprob: -6.857571125030518
    5. '    
' → logprob: -9.857571601867676
    6. '	for' → logprob: -10.357571601867676
    7. '<|end|>' → logprob: -11.857571601867676
    8. ',' → logprob: -11.982571601867676
    9. '  
' → logprob: -13.232571601867676
    10. '  ' → logprob: -13.857571601867676

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09365284442901611
    2. ' for' → logprob: -2.8436527252197266
    3. 'for' → logprob: -3.4686527252197266
    4. '	for' → logprob: -11.093652725219727
    5. '
' → logprob: -11.718652725219727
    6. '```' → logprob: -12.718652725219727
    7. '    
' → logprob: -13.093652725219727
    8. ' ' → logprob: -15.343652725219727
    9. '<|end|>' → logprob: -15.593652725219727
    10. '  ' → logprob: -15.718652725219727

Token 158: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.474918395280838
    2. ' for' → logprob: -0.9749183654785156
    3. '   ' → logprob: -7.099918365478516
    4. '	for' → logprob: -11.599918365478516
    5. '
' → logprob: -12.099918365478516
    6. '```' → logprob: -15.099918365478516
    7. ' ' → logprob: -15.224918365478516
    8. '    
' → logprob: -15.224918365478516
    9. ' 
' → logprob: -15.474918365478516
    10. 'For' → logprob: -16.599918365478516

Token 159: ' The' (ID: 623)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003205519402399659
    2. ' for' → logprob: -5.753205299377441
    3. '   ' → logprob: -10.503205299377441
    4. '	for' → logprob: -15.503205299377441
    5. '
' → logprob: -17.128206253051758
    6. 'from' → logprob: -17.378206253051758
    7. '```' → logprob: -17.378206253051758
    8. '    
' → logprob: -17.628206253051758
    9. ' ' → logprob: -17.628206253051758
    10. 'For' → logprob: -17.878206253051758

Token 160: ' input' (ID: 3422)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01438808161765337
    2. ' for' → logprob: -4.264388084411621
    3. 'parent' → logprob: -8.514388084411621
    4. 'root' → logprob: -11.889388084411621
    5. ' parent' → logprob: -12.389388084411621
    6. 'edges' → logprob: -12.514388084411621
    7. 'next' → logprob: -13.139388084411621
    8. '   ' → logprob: -13.639388084411621
    9. ' edges' → logprob: -14.264388084411621
    10. '#' → logprob: -14.389388084411621

Token 161: ' edges' (ID: 22569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5980499386787415
    2. ' for' → logprob: -0.8480499386787415
    3. ' is' → logprob: -4.598050117492676
    4. '   ' → logprob: -6.223050117492676
    5. ' continues' → logprob: -6.223050117492676
    6. ' edges' → logprob: -6.473050117492676
    7. ' consists' → logprob: -6.973050117492676
    8. ' lines' → logprob: -6.973050117492676
    9. 'is' → logprob: -7.723050117492676
    10. ' will' → logprob: -7.973050117492676

Token 162: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.47449031472206116
    2. ' for' → logprob: -1.7244902849197388
    3. 'for' → logprob: -2.2244904041290283
    4. ' =' → logprob: -3.7244904041290283
    5. '=' → logprob: -4.349490165710449
    6. 'are' → logprob: -4.599490165710449
    7. ' is' → logprob: -5.099490165710449
    8. ' represent' → logprob: -5.099490165710449
    9. '.' → logprob: -5.224490165710449
    10. ' represents' → logprob: -5.599490165710449

Token 163: ' ' (ID: 220)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.2577939033508301
    2. ' for' → logprob: -2.25779390335083
    3. 'for' → logprob: -3.00779390335083
    4. ' provided' → logprob: -4.13279390335083
    5. 'given' → logprob: -4.25779390335083
    6. '0' → logprob: -4.38279390335083
    7. ' ' → logprob: -4.63279390335083
    8. ' assumed' → logprob: -5.38279390335083
    9. ' in' → logprob: -5.63279390335083
    10. ' directed' → logprob: -5.75779390335083

Token 164: '1' (ID: 16)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6491273045539856
    2. ' for' → logprob: -1.5241272449493408
    3. ' given' → logprob: -1.6491272449493408
    4. 'given' → logprob: -3.274127244949341
    5. ' provided' → logprob: -5.02412748336792
    6. '0' → logprob: -5.14912748336792
    7. ' in' → logprob: -5.52412748336792
    8. 'provided' → logprob: -5.77412748336792
    9. ' ' → logprob: -6.27412748336792
    10. '1' → logprob: -6.52412748336792

Token 165: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.11395377665758133
    2. 'based' → logprob: -2.7389538288116455
    3. '-index' → logprob: -3.9889538288116455
    4. ' for' → logprob: -4.863953590393066
    5. ' based' → logprob: -5.238953590393066
    6. '-' → logprob: -5.363953590393066
    7. 'for' → logprob: -5.738953590393066
    8. ' -' → logprob: -7.113953590393066
    9. ' ' → logprob: -7.613953590393066
    10. 'indexed' → logprob: -7.738953590393066

Token 166: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.981667537620524e-06
    2. 'based' → logprob: -13.500001907348633
    3. 'd' → logprob: -15.625001907348633
    4. ' based' → logprob: -16.125001907348633
    5. 'e' → logprob: -16.500001907348633
    6. '-based' → logprob: -16.625001907348633
    7. 'ing' → logprob: -17.375001907348633
    8. '   ' → logprob: -17.375001907348633
    9. '#' → logprob: -17.375001907348633
    10. '_based' → logprob: -17.750001907348633

Token 167: ';' (ID: 26)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5453582406044006
    2. ' for' → logprob: -1.0453581809997559
    3. '   ' → logprob: -3.295358180999756
    4. '
' → logprob: -3.545358180999756
    5. ',' → logprob: -6.670358180999756
    6. '    
' → logprob: -7.795358180999756
    7. '	for' → logprob: -7.920358180999756
    8. ' ' → logprob: -8.545358657836914
    9. '\n' → logprob: -8.920358657836914
    10. ' and' → logprob: -9.295358657836914

Token 168: ' converting' (ID: 55111)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2857457101345062
    2. 'for' → logprob: -1.4107457399368286
    3. '   ' → logprob: -5.410745620727539
    4. '	for' → logprob: -9.785745620727539
    5. ' ' → logprob: -10.410745620727539
    6. '    ' → logprob: -11.035745620727539
    7. '  ' → logprob: -12.285745620727539
    8. '
' → logprob: -13.160745620727539
    9. ' ' → logprob: -13.598245620727539
    10. ' to' → logprob: -13.973245620727539

Token 169: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5926192402839661
    2. ' for' → logprob: -1.2176191806793213
    3. 'for' → logprob: -2.5926191806793213
    4. 'to' → logprob: -2.8426191806793213
    5. ' them' → logprob: -4.2176194190979
    6. '   ' → logprob: -6.9676194190979
    7. ' ' → logprob: -7.2176194190979
    8. ' edges' → logprob: -7.7176194190979
    9. ' u' → logprob: -8.342618942260742
    10. 'edges' → logprob: -8.717618942260742

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04767703264951706
    2. ' ' → logprob: -3.1726770401000977
    3. ' zero' → logprob: -5.422677040100098
    4. 'zero' → logprob: -8.297677040100098
    5. '   ' → logprob: -13.547677040100098
    6. '```' → logprob: -14.422677040100098
    7. ' a' → logprob: -16.04767608642578
    8. '  ' → logprob: -16.17267608642578
    9. '-zero' → logprob: -16.79767608642578
    10. 'a' → logprob: -16.79767608642578

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006246338016353548
    2. ' ' → logprob: -7.750624656677246
    3. ' zero' → logprob: -9.125624656677246
    4. 'zero' → logprob: -9.375624656677246
    5. '   ' → logprob: -15.750624656677246
    6. '
' → logprob: -16.75062370300293
    7. '```' → logprob: -16.75062370300293
    8. '  ' → logprob: -19.00062370300293
    9. '-zero' → logprob: -19.25062370300293
    10. '#' → logprob: -19.50062370300293

Token 172: '-index' (ID: 45533)
  Prédit: '-based'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.05702490732073784
    2. '-index' → logprob: -3.0570249557495117
    3. 'based' → logprob: -4.807024955749512
    4. '-base' → logprob: -9.182024955749512
    5. '-' → logprob: -10.057024955749512
    6. ' -' → logprob: -10.182024955749512
    7. 'index' → logprob: -10.557024955749512
    8. 'indexed' → logprob: -11.432024955749512
    9. '#index' → logprob: -12.932024955749512
    10. '_based' → logprob: -13.182024955749512

Token 173: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.044923245906829834
    2. 'ing' → logprob: -3.4199233055114746
    3. 'def' → logprob: -5.794923305511475
    4. 'ex' → logprob: -6.294923305511475
    5. '-' → logprob: -6.419923305511475
    6. 'd' → logprob: -6.794923305511475
    7. 'based' → logprob: -7.044923305511475
    8. ' ' → logprob: -7.669923305511475
    9. '-based' → logprob: -7.669923305511475
    10. ' based' → logprob: -8.294922828674316

Token 174: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2991202473640442
    2. 'for' → logprob: -1.4241201877593994
    3. '   ' → logprob: -4.0491204261779785
    4. ',' → logprob: -8.79911994934082
    5. '	for' → logprob: -9.04911994934082
    6. '
' → logprob: -10.17411994934082
    7. '.' → logprob: -10.29911994934082
    8. ' and' → logprob: -11.92411994934082
    9. '    
' → logprob: -12.04911994934082
    10. ' to' → logprob: -12.42411994934082

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018808331340551376
    2. ' for' → logprob: -4.143808364868164
    3. 'for' → logprob: -5.893808364868164
    4. '	for' → logprob: -11.643808364868164
    5. '```' → logprob: -12.768808364868164
    6. '    
' → logprob: -13.768808364868164
    7. '
' → logprob: -14.268808364868164
    8. '    ' → logprob: -16.018808364868164
    9. '   ' → logprob: -16.143808364868164
    10. ' ' → logprob: -16.393808364868164

Token 176: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011205670423805714
    2. ' for' → logprob: -4.511205673217773
    3. '   ' → logprob: -8.761205673217773
    4. '	for' → logprob: -14.011205673217773
    5. '```' → logprob: -15.261205673217773
    6. ' ' → logprob: -17.011205673217773
    7. '
' → logprob: -17.511205673217773
    8. '``' → logprob: -17.761205673217773
    9. 'For' → logprob: -17.886205673217773
    10. 'fo' → logprob: -18.261205673217773

Token 177: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2077668160200119
    2. '_' → logprob: -2.2077667713165283
    3. ' i' → logprob: -2.5827667713165283
    4. 'i' → logprob: -6.832767009735107
    5. '_i' → logprob: -7.332767009735107
    6. ' ' → logprob: -7.957767009735107
    7. '__' → logprob: -13.45776653289795
    8. '	i' → logprob: -13.95776653289795
    9. ' __' → logprob: -13.95776653289795
    10. '＿' → logprob: -14.02026653289795

Token 178: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2815709710121155
    2. ' in' → logprob: -1.4065709114074707
    3. 'range' → logprob: -7.906570911407471
    4. ' ' → logprob: -10.406571388244629
    5. 'import' → logprob: -12.656571388244629
    6. '  ' → logprob: -13.031571388244629
    7. '0' → logprob: -13.156571388244629
    8. 'i' → logprob: -13.281571388244629
    9. ' range' → logprob: -13.406571388244629
    10. 'n' → logprob: -13.406571388244629

Token 179: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00011343709047650918
    2. ' range' → logprob: -9.125113487243652
    3. '(range' → logprob: -13.375113487243652
    4. 'ange' → logprob: -13.500113487243652
    5. '	range' → logprob: -14.750113487243652
    6. '```' → logprob: -14.875113487243652
    7. 'in' → logprob: -16.125112533569336
    8. '   ' → logprob: -16.625112533569336
    9. '  ' → logprob: -16.625112533569336
    10. '.range' → logprob: -17.000112533569336

Token 180: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0001681405701674521
    2. '(' → logprob: -8.750167846679688
    3. ' (' → logprob: -11.750167846679688
    4. ' N' → logprob: -14.250167846679688
    5. 'N' → logprob: -15.000167846679688
    6. '(n' → logprob: -15.000167846679688
    7. '((' → logprob: -15.750167846679688
    8. '(
' → logprob: -16.500167846679688
    9. '(int' → logprob: -16.750167846679688
    10. ' ' → logprob: -17.500167846679688

Token 181: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3132895827293396
    2. '-' → logprob: -1.3132896423339844
    3. '1' → logprob: -11.063289642333984
    4. '   ' → logprob: -12.188289642333984
    5. ' ' → logprob: -12.438289642333984
    6. ')' → logprob: -13.438289642333984
    7. ' ' → logprob: -14.813289642333984
    8. '()-' → logprob: -15.313289642333984
    9. '):
' → logprob: -15.313289642333984
    10. 'minus' → logprob: -15.563289642333984

Token 182: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08893991261720657
    2. ' ' → logprob: -2.463939905166626
    3. '   ' → logprob: -15.463939666748047
    4. '```' → logprob: -16.088939666748047
    5. '2' → logprob: -16.338939666748047
    6. ')' → logprob: -16.838939666748047
    7. '  ' → logprob: -17.213939666748047
    8. ' ' → logprob: -17.338939666748047
    9. '１' → logprob: -18.026439666748047
    10. '<|end|>' → logprob: -18.276439666748047

Token 183: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. ')' → logprob: -15.000008583068848
    4. '   ' → logprob: -15.750008583068848
    5. '```' → logprob: -16.00000762939453
    6. '１' → logprob: -16.25000762939453
    7. 'def' → logprob: -16.56250762939453
    8. '2' → logprob: -16.68750762939453
    9. '
' → logprob: -17.00000762939453
    10. '۱' → logprob: -17.37500762939453

Token 184: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.14361236989498138
    2. '):' → logprob: -2.0186123847961426
    3. '):
' → logprob: -7.393612384796143
    4. ' ):
' → logprob: -8.268611907958984
    5. ' ):' → logprob: -10.393611907958984
    6. ':' → logprob: -10.768611907958984
    7. ')' → logprob: -11.643611907958984
    8. ':
' → logprob: -13.268611907958984
    9. '   ' → logprob: -13.893611907958984
    10. '):

' → logprob: -14.393611907958984

Token 185: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7096933722496033
    2. '       ' → logprob: -1.334693431854248
    3. ' u' → logprob: -1.709693431854248
    4. 'u' → logprob: -3.334693431854248
    5. 'a' → logprob: -5.084693431854248
    6. ' p' → logprob: -5.459693431854248
    7. ' a' → logprob: -5.709693431854248
    8. ' x' → logprob: -5.959693431854248
    9. 'b' → logprob: -6.084693431854248
    10. ' s' → logprob: -6.084693431854248

Token 186: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.07287684828042984
    2. 'u' → logprob: -3.1978769302368164
    3. 'p' → logprob: -3.8228769302368164
    4. ' a' → logprob: -5.447876930236816
    5. '   ' → logprob: -7.072876930236816
    6. ' u' → logprob: -7.072876930236816
    7. 'x' → logprob: -7.197876930236816
    8. ' p' → logprob: -7.822876930236816
    9. ' ' → logprob: -9.072876930236816
    10. 's' → logprob: -9.072876930236816

Token 187: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002619318547658622
    2. ',b' → logprob: -8.750262260437012
    3. ' ,' → logprob: -9.250262260437012
    4. '=' → logprob: -13.000262260437012
    5. ',a' → logprob: -13.125262260437012
    6. 'b' → logprob: -13.500262260437012
    7. ',v' → logprob: -15.250262260437012
    8. ',int' → logprob: -15.250262260437012
    9. '_,' → logprob: -15.250262260437012
    10. ' =' → logprob: -15.375262260437012

Token 188: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.011047814972698689
    2. ' b' → logprob: -4.511047840118408
    3. '	b' → logprob: -18.26104736328125
    4. ' ' → logprob: -18.51104736328125
    5. 'p' → logprob: -18.51104736328125
    6. '   ' → logprob: -18.88604736328125
    7. 'v' → logprob: -19.01104736328125
    8. 'e' → logprob: -19.76104736328125
    9. ' ' → logprob: -20.01104736328125
    10. 'w' → logprob: -20.63604736328125

Token 189: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.061967797577381134
    2. ' =' → logprob: -2.8119678497314453
    3. '=input' → logprob: -16.436967849731445
    4. '＝' → logprob: -17.436967849731445
    5. ')' → logprob: -17.686967849731445
    6. '=int' → logprob: -18.561967849731445
    7. '=line' → logprob: -19.311967849731445
    8. ',' → logprob: -19.561967849731445
    9. ')=' → logprob: -19.561967849731445
    10. '=
' → logprob: -19.561967849731445

Token 190: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4740801155567169
    2. 'map' → logprob: -0.9740800857543945
    3. ' ' → logprob: -13.349080085754395
    4. '	map' → logprob: -14.099080085754395
    5. '   ' → logprob: -14.724080085754395
    6. 'list' → logprob: -15.974080085754395
    7. '  ' → logprob: -16.34908103942871
    8. 'm' → logprob: -16.59908103942871
    9. ' list' → logprob: -16.84908103942871
    10. '(map' → logprob: -17.47408103942871

Token 191: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008157044649124146
    2. 'int' → logprob: -7.1258158683776855
    3. '(' → logprob: -12.000815391540527
    4. '[int' → logprob: -13.000815391540527
    5. '<int' → logprob: -13.625815391540527
    6. '=int' → logprob: -14.500815391540527
    7. '(input' → logprob: -14.625815391540527
    8. ',int' → logprob: -15.625815391540527
    9. ']int' → logprob: -16.500816345214844
    10. '```' → logprob: -16.750816345214844

Token 192: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03888336196541786
    2. ',input' → logprob: -3.2888834476470947
    3. ',int' → logprob: -7.288883209228516
    4. 'input' → logprob: -9.538883209228516
    5. ' ,' → logprob: -10.163883209228516
    6. '(' → logprob: -11.038883209228516
    7. '   ' → logprob: -12.038883209228516
    8. '```' → logprob: -12.288883209228516
    9. '(input' → logprob: -12.788883209228516
    10. 'int' → logprob: -13.038883209228516

Token 193: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0019287518225610256
    2. ' input' → logprob: -6.251928806304932
    3. ' ' → logprob: -15.751928329467773
    4. '(input' → logprob: -17.626928329467773
    5. '=input' → logprob: -18.251928329467773
    6. '	input' → logprob: -18.751928329467773
    7. ',input' → logprob: -18.751928329467773
    8. ')' → logprob: -18.876928329467773
    9. '   ' → logprob: -19.001928329467773
    10. '<input' → logprob: -19.626928329467773

Token 194: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.226628895296017e-06
    2. '()' → logprob: -12.125007629394531
    3. ')' → logprob: -13.875007629394531
    4. '.split' → logprob: -15.250007629394531
    5. ' ().' → logprob: -15.375007629394531
    6. '.' → logprob: -15.875007629394531
    7. '()
' → logprob: -16.37500762939453
    8. 'split' → logprob: -17.12500762939453
    9. '   ' → logprob: -17.12500762939453
    10. '())' → logprob: -17.37500762939453

Token 195: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -16.25
    3. ' split' → logprob: -16.875
    4. 'spl' → logprob: -19.5
    5. '(split' → logprob: -19.625
    6. 'rstrip' → logprob: -21.0
    7. '.split' → logprob: -21.875
    8. ')' → logprob: -22.0
    9. 's' → logprob: -23.375
    10. 'plit' → logprob: -24.125

Token 196: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005258779972791672
    2. ')
' → logprob: -5.255258560180664
    3. '())' → logprob: -11.380258560180664
    4. '()' → logprob: -12.130258560180664
    5. ')
' → logprob: -12.380258560180664
    6. '))' → logprob: -13.630258560180664
    7. ')

' → logprob: -14.255258560180664
    8. ' )' → logprob: -14.255258560180664
    9. '())
' → logprob: -14.755258560180664
    10. ')`' → logprob: -14.880258560180664

Token 197: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03195381909608841
    2. '       ' → logprob: -3.906953811645508
    3. '
' → logprob: -5.281953811645508
    4. ' point' → logprob: -5.531953811645508
    5. 'point' → logprob: -6.781953811645508
    6. ')' → logprob: -7.906953811645508
    7. '    
' → logprob: -8.531953811645508
    8. 'a' → logprob: -8.781953811645508
    9. ',' → logprob: -9.031953811645508
    10. '<|end|>' → logprob: -9.156953811645508

Token 198: ' a' (ID: 261)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.5810646414756775
    2. 'a' (adapté à ' a') → logprob: -0.8310646414756775
    3. ' point' → logprob: -5.581064701080322
    4. ' a' → logprob: -6.706064701080322
    5. '       ' → logprob: -9.331064224243164
    6. '   ' → logprob: -11.206064224243164
    7. 'b' → logprob: -12.706064224243164
    8. '	point' → logprob: -13.206064224243164
    9. '-point' → logprob: -13.331064224243164
    10. '        
' → logprob: -13.331064224243164

Token 199: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.30095136165618896
    2. '-' → logprob: -2.0509514808654785
    3. '-=' → logprob: -2.0509514808654785
    4. '=' → logprob: -6.9259514808654785
    5. ' -' → logprob: -7.8009514808654785
    6. '[' → logprob: -7.9259514808654785
    7. ' =' → logprob: -8.05095100402832
    8. 'a' → logprob: -8.55095100402832
    9. '   ' → logprob: -9.17595100402832
    10. ' ' → logprob: -9.30095100402832

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -15.875335693359375
    4. '```' → logprob: -17.125335693359375
    5. '１' → logprob: -18.000335693359375
    6. '<|end|>' → logprob: -19.125335693359375
    7. '  ' → logprob: -19.187835693359375
    8. '2' → logprob: -19.187835693359375
    9. '-' → logprob: -19.250335693359375
    10. '۱' → logprob: -19.562835693359375

Token 201: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '```' → logprob: -18.0
    4. '   ' → logprob: -18.625
    5. '１' → logprob: -19.4375
    6. '2' → logprob: -20.125
    7. 'a' → logprob: -20.1875
    8. '<|end|>' → logprob: -20.1875
    9. '
' → logprob: -20.5625
    10. 'def' → logprob: -20.6875

Token 202: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4108198285102844
    2. ' b' → logprob: -1.5358197689056396
    3. ' point' → logprob: -2.4108197689056396
    4. 'point' → logprob: -3.9108197689056396
    5. '       ' → logprob: -4.660820007324219
    6. '   ' → logprob: -6.535820007324219
    7. '
' → logprob: -7.285820007324219
    8. ',' → logprob: -8.660820007324219
    9. ' ' → logprob: -11.035820007324219
    10. ' 
' → logprob: -11.535820007324219

Token 203: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11046499013900757
    2. 'point' → logprob: -2.6104650497436523
    3. '       ' → logprob: -3.4854650497436523
    4. '
' → logprob: -8.235465049743652
    5. ' b' → logprob: -9.610465049743652
    6. '   ' → logprob: -9.735465049743652
    7. ' point' → logprob: -10.610465049743652
    8. '
' → logprob: -11.360465049743652
    9. '        
' → logprob: -12.485465049743652
    10. '#' → logprob: -13.485465049743652

Token 204: ' convert' (ID: 8452)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.25199589133262634
    2. 'b' → logprob: -1.5019959211349487
    3. ' point' → logprob: -10.251996040344238
    4. 'a' → logprob: -11.251996040344238
    5. ' b' → logprob: -11.251996040344238
    6. '
' → logprob: -13.751996040344238
    7. ' 
' → logprob: -13.876996040344238
    8. 'points' → logprob: -14.001996040344238
    9. '#' → logprob: -14.376996040344238
    10. '```' → logprob: -14.876996040344238

Token 205: ' to' (ID: 316)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.11503284424543381
    2. 'a' → logprob: -2.615032911300659
    3. ' to' → logprob: -3.865032911300659
    4. ' b' → logprob: -4.86503267288208
    5. ' a' → logprob: -5.36503267288208
    6. '<|end|>' → logprob: -7.11503267288208
    7. 'to' → logprob: -7.24003267288208
    8. '       ' → logprob: -8.615033149719238
    9. ' ' → logprob: -9.115033149719238
    10. ' ,' → logprob: -10.115033149719238

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.406038373708725
    2. ' zero' → logprob: -1.6560384035110474
    3. 'zero' → logprob: -2.531038284301758
    4. 'a' → logprob: -2.781038284301758
    5. ' ' → logprob: -7.031038284301758
    6. ' a' → logprob: -7.906038284301758
    7. 'index' → logprob: -11.656038284301758
    8. '-zero' → logprob: -12.906038284301758
    9. '```' → logprob: -13.031038284301758
    10. 'int' → logprob: -13.281038284301758

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10196109116077423
    2. 'zero' → logprob: -2.351961135864258
    3. 'a' → logprob: -6.601961135864258
    4. ' zero' → logprob: -7.851961135864258
    5. 'index' → logprob: -12.726961135864258
    6. ' ' → logprob: -13.226961135864258
    7. '```' → logprob: -14.351961135864258
    8. '-zero' → logprob: -14.476961135864258
    9. 'python' → logprob: -17.101961135864258
    10. 'Zero' → logprob: -17.226961135864258

Token 208: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.12247999012470245
    2. '-index' → logprob: -2.3724799156188965
    3. 'based' → logprob: -3.8724799156188965
    4. 'index' → logprob: -7.4974799156188965
    5. 'indexed' → logprob: -8.122480392456055
    6. ' based' → logprob: -9.372480392456055
    7. ' -' → logprob: -9.372480392456055
    8. '   ' → logprob: -10.372480392456055
    9. '#index' → logprob: -10.497480392456055
    10. ' indexing' → logprob: -10.622480392456055

Token 209: ' indexing' (ID: 105989)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.025434039533138275
    2. ' b' → logprob: -4.0254340171813965
    3. '
' → logprob: -5.7754340171813965
    4. '       ' → logprob: -5.9004340171813965
    5. 'a' → logprob: -7.1504340171813965
    6. '   ' → logprob: -8.650434494018555
    7. '
' → logprob: -9.150434494018555
    8. '<|end|>' → logprob: -9.525434494018555
    9. ' ' → logprob: -10.025434494018555
    10. '        
' → logprob: -10.775434494018555

Token 210: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020154789090156555
    2. 'b' → logprob: -7.127015590667725
    3. 'point' → logprob: -7.502015590667725
    4. ' point' → logprob: -7.627015590667725
    5. ',' → logprob: -9.752015113830566
    6. ' b' → logprob: -9.877015113830566
    7. '   ' → logprob: -10.002015113830566
    8. '
' → logprob: -12.127015113830566
    9. '<|end|>' → logprob: -13.377015113830566
    10. ',b' → logprob: -13.627015113830566

Token 211: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007427014876157045
    2. 'b' → logprob: -5.007427215576172
    3. ' b' → logprob: -7.757427215576172
    4. '   ' → logprob: -9.132427215576172
    5. ',' → logprob: -9.507427215576172
    6. '<|end|>' → logprob: -10.632427215576172
    7. ' point' → logprob: -11.007427215576172
    8. 'point' → logprob: -11.257427215576172
    9. ',b' → logprob: -11.507427215576172
    10. '        
' → logprob: -11.757427215576172

Token 212: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.6047699318733066e-05
    2. 'point' → logprob: -11.625016212463379
    3. ' b' → logprob: -11.875016212463379
    4. '   ' → logprob: -17.375015258789062
    5. '       ' → logprob: -18.250015258789062
    6. '	b' → logprob: -18.875015258789062
    7. ' point' → logprob: -18.875015258789062
    8. '    ' → logprob: -21.250015258789062
    9. '_b' → logprob: -21.500015258789062
    10. '#' → logprob: -21.750015258789062

Token 213: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.07715030014514923
    2. '-=' → logprob: -2.702150344848633
    3. '-' → logprob: -4.952150344848633
    4. '   ' → logprob: -9.452150344848633
    5. ' ' → logprob: -11.327150344848633
    6. '=' → logprob: -11.577150344848633
    7. ' -' → logprob: -11.827150344848633
    8. '    ' → logprob: -12.952150344848633
    9. '```' → logprob: -13.702150344848633
    10. '>' → logprob: -13.702150344848633

Token 214: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024764856789261103
    2. ' ' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.127476692199707
    4. '<|end|>' → logprob: -15.627476692199707
    5. '```' → logprob: -16.06497573852539
    6. '=' → logprob: -16.75247573852539
    7. '0' → logprob: -17.00247573852539
    8. '-' → logprob: -17.37747573852539
    9. '  ' → logprob: -17.68997573852539
    10. ')' → logprob: -18.37747573852539

Token 215: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '<|end|>' → logprob: -17.000001907348633
    4. '0' → logprob: -18.062501907348633
    5. '```' → logprob: -18.187501907348633
    6. '   ' → logprob: -18.562501907348633
    7. '2' → logprob: -19.375001907348633
    8. '１' → logprob: -19.562501907348633
    9. '-' → logprob: -19.562501907348633
    10. '۱' → logprob: -19.812501907348633

Token 216: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7123717665672302
    2. '       ' → logprob: -0.7123717665672302
    3. '   ' → logprob: -4.212371826171875
    4. 'point' → logprob: -6.212371826171875
    5. '<|end|>' → logprob: -6.962371826171875
    6. ' point' → logprob: -7.712371826171875
    7. '    
' → logprob: -8.462371826171875
    8. '        
' → logprob: -8.462371826171875
    9. ')' → logprob: -9.462371826171875
    10. '
' → logprob: -9.587371826171875

Token 217: ' #' (ID: 1069)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.06454142183065414
    2. '       ' → logprob: -3.0645413398742676
    3. '
' → logprob: -4.814541339874268
    4. '   ' → logprob: -5.189541339874268
    5. ' point' → logprob: -6.189541339874268
    6. '    
' → logprob: -10.814541816711426
    7. '
' → logprob: -11.189541816711426
    8. ',' → logprob: -11.189541816711426
    9. '        
' → logprob: -11.439541816711426
    10. '	point' → logprob: -11.564541816711426

Token 218: ' convert' (ID: 8452)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.41422659158706665
    2. ' point' → logprob: -1.1642265319824219
    3. ' continue' → logprob: -4.539226531982422
    4. 'continue' → logprob: -5.539226531982422
    5. ' 
' → logprob: -5.789226531982422
    6. ')' → logprob: -6.539226531982422
    7. '
' → logprob: -6.664226531982422
    8. '#' → logprob: -7.039226531982422
    9. ' ' → logprob: -7.039226531982422
    10. ' )' → logprob: -7.164226531982422

Token 219: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5759528875350952
    2. 'to' → logprob: -0.8259528875350952
    3. '_to' → logprob: -11.325952529907227
    4. '	to' → logprob: -14.575952529907227
    5. ' ' → logprob: -15.075952529907227
    6. '=' → logprob: -16.075952529907227
    7. 'To' → logprob: -16.325952529907227
    8. '   ' → logprob: -16.450952529907227
    9. '<|end|>' → logprob: -16.450952529907227
    10. '(' → logprob: -16.575952529907227

Token 220: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03757786378264427
    2. 'a' → logprob: -4.4125776290893555
    3. ' b' → logprob: -4.5375776290893555
    4. '1' → logprob: -4.7875776290893555
    5. 'point' → logprob: -5.5375776290893555
    6. '0' → logprob: -6.6625776290893555
    7. ' ' → logprob: -8.287577629089355
    8. ' a' → logprob: -8.787577629089355
    9. ' point' → logprob: -9.662577629089355
    10. 'space' → logprob: -10.537577629089355

Token 221: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014179613441228867
    2. '0' → logprob: -4.264179706573486
    3. ' ' → logprob: -11.389179229736328
    4. 'b' → logprob: -12.264179229736328
    5. '```' → logprob: -16.764179229736328
    6. '-' → logprob: -18.139179229736328
    7. 'a' → logprob: -18.264179229736328
    8. 'int' → logprob: -18.514179229736328
    9. '
' → logprob: -18.514179229736328
    10. '#' → logprob: -18.764179229736328

Token 222: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.04015246406197548
    2. 'based' → logprob: -3.2901525497436523
    3. '-' → logprob: -6.165152549743652
    4. ' based' → logprob: -13.165152549743652
    5. 'b' → logprob: -13.540152549743652
    6. '_based' → logprob: -13.540152549743652
    7. '1' → logprob: -14.040152549743652
    8. ' -' → logprob: -14.415152549743652
    9. '-base' → logprob: -14.790152549743652
    10. 'Based' → logprob: -15.290152549743652

Token 223: ' indexing' (ID: 105989)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.020620018243789673
    2. ' indexing' → logprob: -3.895620107650757
    3. ' index' → logprob: -9.770620346069336
    4. '_index' → logprob: -11.270620346069336
    5. '1' → logprob: -12.395620346069336
    6. 'idx' → logprob: -13.895620346069336
    7. ' ' → logprob: -13.895620346069336
    8. '#index' → logprob: -14.770620346069336
    9. '```' → logprob: -15.270620346069336
    10. '
' → logprob: -15.520620346069336

Token 224: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8106199502944946
    2. '       ' → logprob: -1.0606199502944946
    3. 'point' → logprob: -1.6856199502944946
    4. ' point' → logprob: -3.810619831085205
    5. '
' → logprob: -6.560619831085205
    6. ' if' → logprob: -9.185620307922363
    7. '```' → logprob: -10.060620307922363
    8. 'if' → logprob: -10.310620307922363
    9. '    
' → logprob: -10.435620307922363
    10. '	point' → logprob: -10.560620307922363

Token 225: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09314154088497162
    2. '       ' → logprob: -2.968141555786133
    3. ' point' → logprob: -3.968141555786133
    4. 'point' → logprob: -4.218141555786133
    5. '
' → logprob: -5.593141555786133
    6. '    
' → logprob: -9.343141555786133
    7. '```' → logprob: -10.093141555786133
    8. '	point' → logprob: -11.093141555786133
    9. '        
' → logprob: -11.343141555786133
    10. ' 
' → logprob: -12.843141555786133

Token 226: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' (adapté à ' point') → logprob: -0.00011427151912357658
    2. ' point' → logprob: -9.500114440917969
    3. '   ' → logprob: -10.250114440917969
    4. '       ' → logprob: -12.500114440917969
    5. '
' → logprob: -16.00011444091797
    6. '	point' → logprob: -16.75011444091797
    7. '```' → logprob: -16.87511444091797
    8. '(point' → logprob: -18.12511444091797
    9. 'points' → logprob: -18.25011444091797
    10. 'pointer' → logprob: -18.62511444091797

Token 227: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1041145626222715e-05
    2. 'a' → logprob: -12.000011444091797
    3. '[' → logprob: -12.875011444091797
    4. '[b' → logprob: -13.375011444091797
    5. ' [' → logprob: -15.250011444091797
    6. '   ' → logprob: -15.375011444091797
    7. '```' → logprob: -16.750011444091797
    8. '\[' → logprob: -16.875011444091797
    9. ')[' → logprob: -18.250011444091797
    10. '       ' → logprob: -18.500011444091797

Token 228: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0003460712905507535
    2. '.append' → logprob: -8.000346183776855
    3. '.' → logprob: -12.250346183776855
    4. ']' → logprob: -12.750346183776855
    5. ' ].' → logprob: -13.625346183776855
    6. '[' → logprob: -13.750346183776855
    7. ').' → logprob: -15.375346183776855
    8. '[].' → logprob: -15.875346183776855
    9. 'append' → logprob: -16.75034523010254
    10. ''].' → logprob: -16.87534523010254

Token 229: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.9361264946837764e-07
    2. '.append' → logprob: -16.25
    3. ' append' → logprob: -17.0
    4. 'app' → logprob: -20.125
    5. 'appen' → logprob: -21.125
    6. '_append' → logprob: -22.25
    7. '	append' → logprob: -22.375
    8. 'Append' → logprob: -22.625
    9. 'push' → logprob: -24.5
    10. 'appe' → logprob: -26.0

Token 230: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -7.896309739408025e-07
    2. 'b' → logprob: -14.250000953674316
    3. '(' → logprob: -16.0
    4. '(
' → logprob: -21.25
    5. ' (' → logprob: -21.625
    6. '	b' → logprob: -22.0
    7. '(B' → logprob: -22.125
    8. ' b' → logprob: -24.5
    9. '((' → logprob: -24.5
    10. ')b' → logprob: -24.75

Token 231: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.12127808178775e-05
    2. ')
' → logprob: -10.250051498413086
    3. ' )' → logprob: -11.250051498413086
    4. '<|end|>' → logprob: -13.125051498413086
    5. '   ' → logprob: -15.000051498413086
    6. ')

' → logprob: -16.250051498413086
    7. '[' → logprob: -16.250051498413086
    8. '),' → logprob: -16.625051498413086
    9. '<|end|>' → logprob: -16.625051498413086
    10. '       ' → logprob: -17.000051498413086

Token 232: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 233: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7760376930236816
    2. '   ' → logprob: -1.1510376930236816
    3. ' for' → logprob: -1.5260376930236816
    4. '    
' → logprob: -5.401037693023682
    5. 'plus' → logprob: -7.651037693023682
    6. '    ' → logprob: -8.276037216186523
    7. '```' → logprob: -8.776037216186523
    8. '
' → logprob: -8.901037216186523
    9. 'def' → logprob: -9.151037216186523
    10. ' plus' → logprob: -9.776037216186523

Token 234: ' Apply' (ID: 28921)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.015617369674146175
    2. 'from' → logprob: -4.265617370605469
    3. ' for' → logprob: -7.140617370605469
    4. 'def' → logprob: -8.390617370605469
    5. 'import' → logprob: -8.640617370605469
    6. '   ' → logprob: -9.140617370605469
    7. 'visited' → logprob: -9.515617370605469
    8. 'stack' → logprob: -10.640617370605469
    9. ' from' → logprob: -11.015617370605469
    10. '#' → logprob: -11.265617370605469

Token 235: ' the' (ID: 290)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.400970458984375
    2. 'for' → logprob: -1.400970458984375
    3. ' Q' → logprob: -3.650970458984375
    4. 'Q' → logprob: -3.650970458984375
    5. ' plus' → logprob: -5.025970458984375
    6. '<|end|>' → logprob: -5.400970458984375
    7. 's' → logprob: -5.650970458984375
    8. 'plus' → logprob: -5.650970458984375
    9. ' queries' → logprob: -6.025970458984375
    10. '[' → logprob: -6.150970458984375

Token 236: ' Q' (ID: 1486)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04385843873023987
    2. ' for' → logprob: -3.293858528137207
    3. 'plus' → logprob: -5.793858528137207
    4. ' plus' → logprob: -7.043858528137207
    5. '[' → logprob: -7.293858528137207
    6. ' queries' → logprob: -8.043858528137207
    7. 'queries' → logprob: -8.293858528137207
    8. 'updates' → logprob: -9.293858528137207
    9. '+' → logprob: -9.543858528137207
    10. '#' → logprob: -10.293858528137207

Token 237: ' queries' (ID: 32122)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.30070507526397705
    2. ' for' → logprob: -1.425705075263977
    3. ' queries' → logprob: -4.6757049560546875
    4. 'queries' → logprob: -6.0507049560546875
    5. 'updates' → logprob: -6.9257049560546875
    6. ' +=' → logprob: -7.0507049560546875
    7. ' lines' → logprob: -7.3007049560546875
    8. 'plus' → logprob: -7.3007049560546875
    9. ' updates' → logprob: -7.4257049560546875
    10. '+=' → logprob: -8.050704956054688

Token 238: ' that' (ID: 484)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09102178364992142
    2. ' for' → logprob: -2.966021776199341
    3. 'for' → logprob: -3.341021776199341
    4. '
' → logprob: -9.591021537780762
    5. '    
' → logprob: -11.466021537780762
    6. '	for' → logprob: -11.966021537780762
    7. ' ' → logprob: -12.966021537780762
    8. ',' → logprob: -13.591021537780762
    9. '       ' → logprob: -13.966021537780762
    10. '    ' → logprob: -14.216021537780762

Token 239: ' increment' (ID: 24032)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.9700852632522583
    2. 'add' → logprob: -1.2200852632522583
    3. 'increment' → logprob: -1.5950852632522583
    4. ' increment' → logprob: -2.7200851440429688
    5. ' update' → logprob: -4.095085144042969
    6. 'update' → logprob: -4.220085144042969
    7. 'increase' → logprob: -5.470085144042969
    8. 'modify' → logprob: -5.845085144042969
    9. ' directly' → logprob: -5.845085144042969
    10. ' involve' → logprob: -6.595085144042969

Token 240: ' the' (ID: 290)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.2837405204772949
    2. ' the' → logprob: -2.533740520477295
    3. ' values' → logprob: -2.533740520477295
    4. 'plus' → logprob: -2.533740520477295
    5. 'values' → logprob: -5.658740520477295
    6. 'the' → logprob: -6.158740520477295
    7. ' at' → logprob: -7.033740520477295
    8. ' increments' → logprob: -7.158740520477295
    9. 'increments' → logprob: -7.658740520477295
    10. '<|end|>' → logprob: -8.158740997314453

Token 241: ' value' (ID: 1432)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.05067019909620285
    2. ' plus' → logprob: -3.0506701469421387
    3. 'values' → logprob: -6.925670146942139
    4. 'value' → logprob: -7.175670146942139
    5. ' values' → logprob: -8.675670623779297
    6. ' value' → logprob: -9.175670623779297
    7. 'node' → logprob: -11.925670623779297
    8. '`' → logprob: -12.050670623779297
    9. 'extra' → logprob: -12.300670623779297
    10. 'val' → logprob: -12.300670623779297

Token 242: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.1224963441491127
    2. '   ' → logprob: -2.9974963665008545
    3. 'at' → logprob: -3.4974963665008545
    4. ' to' → logprob: -4.372496128082275
    5. ' for' → logprob: -4.622496128082275
    6. ' of' → logprob: -5.497496128082275
    7. ',' → logprob: -6.122496128082275
    8. ' in' → logprob: -6.497496128082275
    9. 'for' → logprob: -6.747496128082275
    10. 'to' → logprob: -6.872496128082275

Token 243: ' node' (ID: 4596)
  Prédit: ' nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nodes' → logprob: -0.7025786638259888
    2. 'nodes' → logprob: -2.202578544616699
    3. ' the' → logprob: -2.327578544616699
    4. ' a' → logprob: -2.702578544616699
    5. 'a' → logprob: -3.202578544616699
    6. 'the' → logprob: -3.577578544616699
    7. ' specific' → logprob: -4.077578544616699
    8. 'specified' → logprob: -4.202578544616699
    9. 'certain' → logprob: -4.452578544616699
    10. ' specified' → logprob: -4.452578544616699

Token 244: ' p' (ID: 275)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8166740536689758
    2. 's' → logprob: -0.9416740536689758
    3. ' a' → logprob: -3.191673994064331
    4. 'v' → logprob: -4.44167423248291
    5. '[' → logprob: -4.69167423248291
    6. 'plus' → logprob: -4.69167423248291
    7. ',' → logprob: -4.81667423248291
    8. 'x' → logprob: -4.94167423248291
    9. '   ' → logprob: -4.94167423248291
    10. '[a' → logprob: -4.94167423248291

Token 245: ' by' (ID: 656)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04879685491323471
    2. '   ' → logprob: -3.9237968921661377
    3. ' ,' → logprob: -5.048796653747559
    4. ' by' → logprob: -5.173796653747559
    5. ' for' → logprob: -5.423796653747559
    6. '[' → logprob: -5.548796653747559
    7. 'for' → logprob: -6.798796653747559
    8. 's' → logprob: -7.048796653747559
    9. ',
' → logprob: -7.048796653747559
    10. ' and' → logprob: -7.423796653747559

Token 246: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.012581470422446728
    2. ' x' → logprob: -4.3875813484191895
    3. 'val' → logprob: -10.262581825256348
    4. 'amount' → logprob: -11.887581825256348
    5. 'v' → logprob: -12.137581825256348
    6. 'int' → logprob: -13.262581825256348
    7. '`' → logprob: -13.512581825256348
    8. ' ' → logprob: -13.512581825256348
    9. '```' → logprob: -13.637581825256348
    10. 'a' → logprob: -13.637581825256348

Token 247: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07438971102237701
    2. 'for' → logprob: -3.074389696121216
    3. ' for' → logprob: -3.699389696121216
    4. '    
' → logprob: -7.699389934539795
    5. '
' → logprob: -8.699389457702637
    6. '	for' → logprob: -9.449389457702637
    7. ' ' → logprob: -11.449389457702637
    8. '    ' → logprob: -12.574389457702637
    9. ',' → logprob: -12.824389457702637
    10. ':' → logprob: -13.074389457702637

Token 248: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3325726091861725
    2. '   ' → logprob: -1.33257257938385
    3. ' for' → logprob: -3.9575726985931396
    4. '	for' → logprob: -11.207572937011719
    5. '    
' → logprob: -13.707572937011719
    6. '
' → logprob: -14.457572937011719
    7. '```' → logprob: -14.457572937011719
    8. ' ' → logprob: -15.582572937011719
    9. '       ' → logprob: -16.58257293701172
    10. '    ' → logprob: -17.33257293701172

Token 249: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00790518056601286
    2. ' for' → logprob: -4.882905006408691
    3. '   ' → logprob: -8.132905006408691
    4. '	for' → logprob: -12.257905006408691
    5. '    
' → logprob: -15.132905006408691
    6. '
' → logprob: -15.507905006408691
    7. ' ' → logprob: -16.757905960083008
    8. '```' → logprob: -16.882905960083008
    9. '\n' → logprob: -18.132905960083008
    10. ' 
' → logprob: -18.132905960083008

Token 250: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5759628415107727
    2. ' _' → logprob: -0.8259628415107727
    3. ' ' → logprob: -10.950963020324707
    4. ' in' → logprob: -12.325963020324707
    5. ' i' → logprob: -13.950963020324707
    6. ' ' → logprob: -14.700963020324707
    7. '_i' → logprob: -15.825963020324707
    8. '_in' → logprob: -17.95096206665039
    9. ' __' → logprob: -18.20096206665039
    10. 'i' → logprob: -18.45096206665039

Token 251: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.16213122010231018
    2. ' in' → logprob: -1.9121311902999878
    3. 'range' → logprob: -6.287131309509277
    4. ' range' → logprob: -10.787131309509277
    5. '_' → logprob: -11.787131309509277
    6. ' ' → logprob: -12.037131309509277
    7. 'i' → logprob: -12.787131309509277
    8. '0' → logprob: -13.162131309509277
    9. '   ' → logprob: -13.537131309509277
    10. '  ' → logprob: -13.912131309509277

Token 252: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006716079078614712
    2. ' range' → logprob: -5.006716251373291
    3. 'map' → logprob: -14.506715774536133
    4. '(range' → logprob: -16.256715774536133
    5. 'in' → logprob: -17.381715774536133
    6. 'input' → logprob: -17.881715774536133
    7. '[' → logprob: -18.006715774536133
    8. '	range' → logprob: -18.256715774536133
    9. '```' → logprob: -18.756715774536133
    10. '0' → logprob: -18.756715774536133

Token 253: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -0.0003930192324332893
    2. '(' → logprob: -8.00039291381836
    3. ' Q' → logprob: -10.50039291381836
    4. ' (' → logprob: -11.00039291381836
    5. 'Q' → logprob: -11.25039291381836
    6. ' ' → logprob: -15.25039291381836
    7. 'range' → logprob: -17.12539291381836
    8. '	Q' → logprob: -17.12539291381836
    9. ' range' → logprob: -18.00039291381836
    10. '(range' → logprob: -18.00039291381836

Token 254: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2016368955373764
    2. '):' → logprob: -1.7016369104385376
    3. ' ):
' → logprob: -8.826637268066406
    4. ' ):' → logprob: -9.701637268066406
    5. '):
' → logprob: -11.326637268066406
    6. '():
' → logprob: -13.701637268066406
    7. ')' → logprob: -13.826637268066406
    8. '):

' → logprob: -14.576637268066406
    9. ':' → logprob: -14.951637268066406
    10. '   ' → logprob: -15.201637268066406

Token 255: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06775692850351334
    2. '   ' → logprob: -2.8177568912506104
    3. ' p' → logprob: -5.9427571296691895
    4. 'p' → logprob: -6.0677571296691895
    5. '    ' → logprob: -8.442756652832031
    6. '    
' → logprob: -9.192756652832031
    7. '	' → logprob: -9.317756652832031
    8. '	   ' → logprob: -9.317756652832031
    9. '
' → logprob: -9.442756652832031
    10. '	p' → logprob: -9.942756652832031

Token 256: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.005251780152320862
    2. ' p' → logprob: -5.255251884460449
    3. '   ' → logprob: -11.25525188446045
    4. '       ' → logprob: -12.25525188446045
    5. '	p' → logprob: -15.88025188446045
    6. 'x' → logprob: -17.130250930786133
    7. 'P' → logprob: -17.255250930786133
    8. 'a' → logprob: -17.380250930786133
    9. ' ' → logprob: -17.380250930786133
    10. '    ' → logprob: -17.755250930786133

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015489027136936784
    2. ' ,' → logprob: -6.501548767089844
    3. ',x' → logprob: -10.126548767089844
    4. 'x' → logprob: -12.376548767089844
    5. '_,' → logprob: -14.626548767089844
    6. 's' → logprob: -14.751548767089844
    7. ' x' → logprob: -15.251548767089844
    8. '=' → logprob: -15.501548767089844
    9. ' ' → logprob: -15.626548767089844
    10. '‌,' → logprob: -15.751548767089844

Token 258: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170460251159966
    2. ' x' → logprob: -6.751170635223389
    3. ' ' → logprob: -16.001171112060547
    4. '	x' → logprob: -17.501171112060547
    5. '   ' → logprob: -17.501171112060547
    6. '    ' → logprob: -18.251171112060547
    7. '```' → logprob: -18.251171112060547
    8. '
' → logprob: -18.376171112060547
    9. '  ' → logprob: -18.563671112060547
    10. 'X' → logprob: -18.876171112060547

Token 259: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326213479042053
    2. ' =' → logprob: -1.3132621049880981
    3. ')' → logprob: -15.063261985778809
    4. ' ' → logprob: -16.813262939453125
    5. '＝' → logprob: -17.313262939453125
    6. ')=' → logprob: -17.688262939453125
    7. ',' → logprob: -17.938262939453125
    8. '=input' → logprob: -17.938262939453125
    9. '   ' → logprob: -18.438262939453125
    10. '=
' → logprob: -19.188262939453125

Token 260: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011047935113310814
    2. ' map' → logprob: -4.511047840118408
    3. 'm' → logprob: -16.63604736328125
    4. '   ' → logprob: -17.38604736328125
    5. ' ' → logprob: -17.38604736328125
    6. '	map' → logprob: -17.63604736328125
    7. '.map' → logprob: -18.63604736328125
    8. '(map' → logprob: -19.13604736328125
    9. 'list' → logprob: -19.26104736328125
    10. '
' → logprob: -19.63604736328125

Token 261: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00013738969573751092
    2. 'int' → logprob: -9.000137329101562
    3. '[int' → logprob: -12.000137329101562
    4. '=int' → logprob: -12.500137329101562
    5. '(' → logprob: -13.375137329101562
    6. ' (' → logprob: -14.375137329101562
    7. ',int' → logprob: -14.375137329101562
    8. '<int' → logprob: -14.500137329101562
    9. '```' → logprob: -15.125137329101562
    10. '   ' → logprob: -15.375137329101562

Token 262: ',' (ID: 11)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.26570868492126465
    2. ',int' → logprob: -2.1407086849212646
    3. ',' → logprob: -2.2657086849212646
    4. 'int' → logprob: -5.640708923339844
    5. '=int' → logprob: -5.765708923339844
    6. '[int' → logprob: -6.015708923339844
    7. ' ,' → logprob: -6.890708923339844
    8. '(' → logprob: -7.390708923339844
    9. '<int' → logprob: -7.765708923339844
    10. '   ' → logprob: -8.765708923339844

Token 263: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.31396788358688354
    2. 'int' → logprob: -1.3139679431915283
    3. ' input' → logprob: -7.313967704772949
    4. ' int' → logprob: -10.18896770477295
    5. 'list' → logprob: -14.31396770477295
    6. 'map' → logprob: -14.68896770477295
    7. 'str' → logprob: -14.68896770477295
    8. ' ' → logprob: -15.06396770477295
    9. '[int' → logprob: -16.313968658447266
    10. '(int' → logprob: -16.563968658447266

Token 264: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.314625690924004e-05
    2. '.split' → logprob: -10.625073432922363
    3. '()' → logprob: -11.000073432922363
    4. '.readline' → logprob: -11.625073432922363
    5. '=lambda' → logprob: -12.750073432922363
    6. '=' → logprob: -12.750073432922363
    7. '()
' → logprob: -12.875073432922363
    8. ' .' → logprob: -12.875073432922363
    9. '(),' → logprob: -13.125073432922363
    10. '=int' → logprob: -13.250073432922363

Token 265: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.0
    3. 'spl' → logprob: -18.0
    4. '(split' → logprob: -18.25
    5. ')' → logprob: -19.125
    6. '.split' → logprob: -21.125
    7. 'plit' → logprob: -21.625
    8. 'skip' → logprob: -21.875
    9. 'strip' → logprob: -22.0
    10. '_split' → logprob: -22.375

Token 266: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20494472980499268
    2. ')
' → logprob: -1.7049447298049927
    3. '()' → logprob: -6.079944610595703
    4. '())
' → logprob: -7.454944610595703
    5. '())' → logprob: -7.954944610595703
    6. '()
' → logprob: -8.454944610595703
    7. '       ' → logprob: -9.579944610595703
    8. ')
' → logprob: -12.079944610595703
    9. ' )' → logprob: -12.579944610595703
    10. ' )
' → logprob: -12.704944610595703

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03389763832092285
    2. '<|end|>' → logprob: -3.783897638320923
    3. '        
' → logprob: -5.033897399902344
    4. '<|end|>' → logprob: -6.908897399902344
    5. '
' → logprob: -7.033897399902344
    6. ' 
' → logprob: -7.533897399902344
    7. ' p' → logprob: -7.908897399902344
    8. 'p' → logprob: -8.158897399902344
    9. '   ' → logprob: -8.408897399902344
    10. '    
' → logprob: -8.533897399902344

Token 268: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.5743405818939209
    2. ' p' → logprob: -1.574340581893921
    3. ' plus' → logprob: -1.699340581893921
    4. 'plus' → logprob: -3.074340581893921
    5. '       ' → logprob: -8.0743408203125
    6. '   ' → logprob: -8.3243408203125
    7. '+' → logprob: -9.0743408203125
    8. '_plus' → logprob: -11.5743408203125
    9. ' +' → logprob: -11.8243408203125
    10. '	p' → logprob: -11.9493408203125

Token 269: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.20244260132312775
    2. '-=' → logprob: -1.8274426460266113
    3. '-' → logprob: -3.8274426460266113
    4. '=' → logprob: -7.577442646026611
    5. '   ' → logprob: -9.327442169189453
    6. '[' → logprob: -10.827442169189453
    7. ' =' → logprob: -11.327442169189453
    8. ' ' → logprob: -11.452442169189453
    9. '```' → logprob: -11.577442169189453
    10. ' -' → logprob: -11.952442169189453

Token 270: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019287518225610256
    2. ' ' → logprob: -6.251928806304932
    3. '   ' → logprob: -16.814428329467773
    4. '```' → logprob: -17.626928329467773
    5. '１' → logprob: -17.751928329467773
    6. '0' → logprob: -18.064428329467773
    7. '=' → logprob: -18.689428329467773
    8. '<|end|>' → logprob: -18.939428329467773
    9. ')' → logprob: -19.126928329467773
    10. '  ' → logprob: -19.189428329467773

Token 271: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '１' → logprob: -19.5
    4. '```' → logprob: -19.625
    5. '<|end|>' → logprob: -20.3125
    6. '   ' → logprob: -20.625
    7. '۱' → logprob: -21.0
    8. '0' → logprob: -21.125
    9. '१' → logprob: -21.75
    10. '-' → logprob: -21.75

Token 272: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10744385421276093
    2. 'plus' → logprob: -2.6074438095092773
    3. '   ' → logprob: -4.232443809509277
    4. ' plus' → logprob: -4.607443809509277
    5. '       ' → logprob: -5.732443809509277
    6. '    
' → logprob: -8.607443809509277
    7. '+' → logprob: -9.482443809509277
    8. '        
' → logprob: -10.232443809509277
    9. '
' → logprob: -11.107443809509277
    10. ')' → logprob: -11.232443809509277

Token 273: ' #' (ID: 1069)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.004612876567989588
    2. '
' → logprob: -5.754612922668457
    3. ' plus' → logprob: -6.629612922668457
    4. '   ' → logprob: -9.504612922668457
    5. '+' → logprob: -10.504612922668457
    6. '    
' → logprob: -12.129612922668457
    7. '       ' → logprob: -13.004612922668457
    8. '+
' → logprob: -13.629612922668457
    9. '```' → logprob: -14.504612922668457
    10. ';' → logprob: -14.629612922668457

Token 274: ' convert' (ID: 8452)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4239308834075928
    2. ' ' → logprob: -1.9239308834075928
    3. '1' → logprob: -2.2989308834075928
    4. ' #' → logprob: -3.0489308834075928
    5. ' p' → logprob: -4.423931121826172
    6. '```' → logprob: -4.423931121826172
    7. '
' → logprob: -5.173931121826172
    8. '0' → logprob: -5.173931121826172
    9. '<|end|>' → logprob: -5.923931121826172
    10. 'p' → logprob: -6.048931121826172

Token 275: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6456478834152222
    2. ' to' → logprob: -0.7706478834152222
    3. 'p' → logprob: -5.020648002624512
    4. '<|end|>' → logprob: -5.645648002624512
    5. '(p' → logprob: -6.145648002624512
    6. ' p' → logprob: -7.770648002624512
    7. '_to' → logprob: -8.895648002624512
    8. ')' → logprob: -10.270648002624512
    9. '<|end|>' → logprob: -10.520648002624512
    10. 'To' → logprob: -10.770648002624512

Token 276: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011405241675674915
    2. ' ' → logprob: -4.7614054679870605
    3. '1' → logprob: -5.8864054679870605
    4. 'p' → logprob: -12.261404991149902
    5. 'based' → logprob: -13.636404991149902
    6. ' p' → logprob: -14.136404991149902
    7. '
' → logprob: -14.136404991149902
    8. '```' → logprob: -14.386404991149902
    9. '<|end|>' → logprob: -14.636404991149902
    10. 'zero' → logprob: -15.136404991149902

Token 277: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'based' → logprob: -14.500003814697266
    4. '1' → logprob: -15.375003814697266
    5. 'zero' → logprob: -16.750003814697266
    6. '```' → logprob: -17.500003814697266
    7. 'index' → logprob: -18.000003814697266
    8. 'base' → logprob: -18.250003814697266
    9. '#' → logprob: -19.125003814697266
    10. '
' → logprob: -19.250003814697266

Token 278: '-based' (ID: 8235)
  Prédit: '-based'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-based' → logprob: -0.0031962506473064423
    2. 'based' → logprob: -5.7531962394714355
    3. '-' → logprob: -11.378196716308594
    4. '#' → logprob: -12.753196716308594
    5. '-base' → logprob: -13.878196716308594
    6. '-index' → logprob: -14.503196716308594
    7. '-Based' → logprob: -14.878196716308594
    8. '```' → logprob: -14.878196716308594
    9. '_based' → logprob: -15.128196716308594
    10. ' based' → logprob: -15.128196716308594

Token 279: ' indexing' (ID: 105989)
  Prédit: ' indexing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' indexing' → logprob: -0.1432722955942154
    2. 'index' → logprob: -2.0182723999023438
    3. ' index' → logprob: -7.643272399902344
    4. '<|end|>' → logprob: -10.268272399902344
    5. '#index' → logprob: -10.893272399902344
    6. 'idx' → logprob: -11.643272399902344
    7. '_index' → logprob: -11.768272399902344
    8. 'encoding' → logprob: -11.893272399902344
    9. '   ' → logprob: -12.268272399902344
    10. ' ' → logprob: -12.268272399902344

Token 280: '
' (ID: 198)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.665439784526825
    2. '       ' → logprob: -0.790439784526825
    3. ' plus' → logprob: -3.6654398441314697
    4. '   ' → logprob: -5.290439605712891
    5. '
' → logprob: -6.540439605712891
    6. '+' → logprob: -9.29043960571289
    7. '        
' → logprob: -10.16543960571289
    8. '    
' → logprob: -10.66543960571289
    9. '           ' → logprob: -11.29043960571289
    10. ',' → logprob: -11.66543960571289

Token 281: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01599518395960331
    2. 'plus' → logprob: -5.015995025634766
    3. ' plus' → logprob: -5.265995025634766
    4. '   ' → logprob: -5.515995025634766
    5. '
' → logprob: -10.515995025634766
    6. '        
' → logprob: -11.765995025634766
    7. '+' → logprob: -12.390995025634766
    8. '           ' → logprob: -12.765995025634766
    9. '    
' → logprob: -12.765995025634766
    10. '      ' → logprob: -13.640995025634766

Token 282: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' (adapté à ' plus') → logprob: -5.512236498361744e-07
    2. ' plus' → logprob: -15.000000953674316
    3. '   ' → logprob: -17.125
    4. '       ' → logprob: -17.625
    5. '+' → logprob: -20.625
    6. '```' → logprob: -21.125
    7. '
' → logprob: -21.375
    8. '           ' → logprob: -22.625
    9. 'Plus' → logprob: -22.875
    10. '_plus' → logprob: -23.125

Token 283: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.696889623621246e-06
    2. '[' → logprob: -13.12500286102295
    3. 'p' → logprob: -14.25000286102295
    4. ' [' → logprob: -16.750001907348633
    5. '```' → logprob: -17.375001907348633
    6. '   ' → logprob: -18.375001907348633
    7. '\[' → logprob: -19.500001907348633
    8. '
' → logprob: -20.250001907348633
    9. '[P' → logprob: -20.625001907348633
    10. ' ' → logprob: -20.750001907348633

Token 284: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.48328250646591187
    2. ']+=' → logprob: -0.9832825064659119
    3. '+=' → logprob: -4.733282566070557
    4. ' +=' → logprob: -7.983282566070557
    5. ')' → logprob: -11.733282089233398
    6. '[' → logprob: -12.233282089233398
    7. ']+' → logprob: -12.608282089233398
    8. ' ]' → logprob: -12.858282089233398
    9. '```' → logprob: -13.358282089233398
    10. '+]' → logprob: -13.983282089233398

Token 285: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005587508203461766
    2. ' +=' → logprob: -7.500558853149414
    3. ']+=' → logprob: -12.125558853149414
    4. '=' → logprob: -15.250558853149414
    5. '+' → logprob: -16.000558853149414
    6. '[' → logprob: -16.875558853149414
    7. '   ' → logprob: -18.750558853149414
    8. '+=(' → logprob: -19.250558853149414
    9. '```' → logprob: -20.375558853149414
    10. '+="' → logprob: -20.500558853149414

Token 286: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0007099286303855479
    2. ' x' → logprob: -7.2507100105285645
    3. '	x' → logprob: -21.000709533691406
    4. '(x' → logprob: -22.125709533691406
    5. '   ' → logprob: -23.000709533691406
    6. 'int' → logprob: -23.250709533691406
    7. ' ' → logprob: -23.625709533691406
    8. '$x' → logprob: -24.375709533691406
    9. '_x' → logprob: -24.500709533691406
    10. '{x' → logprob: -24.625709533691406

Token 287: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0581170953810215
    2. '
' → logprob: -3.933117151260376
    3. 'def' → logprob: -4.183116912841797
    4. 'for' → logprob: -4.808116912841797
    5. '    
' → logprob: -4.808116912841797
    6. ' for' → logprob: -5.433116912841797
    7. '<|end|>' → logprob: -7.808116912841797
    8. '  
' → logprob: -8.558116912841797
    9. '```' → logprob: -9.308116912841797
    10. ' def' → logprob: -9.808116912841797

Token 288: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6092339754104614
    2. '   ' → logprob: -0.8592339754104614
    3. '    
' → logprob: -3.734233856201172
    4. 'def' → logprob: -4.859233856201172
    5. 'for' → logprob: -7.234233856201172
    6. ' for' → logprob: -8.984233856201172
    7. '

' → logprob: -10.234233856201172
    8. ' def' → logprob: -10.359233856201172
    9. '        
' → logprob: -10.359233856201172
    10. '```' → logprob: -10.359233856201172

Token 289: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34757357835769653
    2. 'def' → logprob: -1.8475735187530518
    3. 'from' → logprob: -2.4725735187530518
    4. '
' → logprob: -3.2225735187530518
    5. 'stack' → logprob: -5.097573757171631
    6. '    
' → logprob: -6.097573757171631
    7. ' from' → logprob: -6.722573757171631
    8. '```' → logprob: -6.847573757171631
    9. 'import' → logprob: -7.222573757171631
    10. 'visited' → logprob: -8.972573280334473

Token 290: ' Initialize' (ID: 19496)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3289143741130829
    2. 'from' → logprob: -1.3289144039154053
    3. 'stack' → logprob: -4.578914165496826
    4. 'import' → logprob: -5.953914165496826
    5. 'visited' → logprob: -6.453914165496826
    6. '   ' → logprob: -7.328914165496826
    7. '#' → logprob: -7.953914165496826
    8. ' from' → logprob: -10.453914642333984
    9. 'seen' → logprob: -11.203914642333984
    10. 'sys' → logprob: -11.203914642333984

Token 291: ' the' (ID: 290)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5750483274459839
    2. 'acc' → logprob: -1.9500483274459839
    3. 'stack' → logprob: -2.2000484466552734
    4. 'dp' → logprob: -3.5750484466552734
    5. 'from' → logprob: -3.7000484466552734
    6. 'res' → logprob: -3.8250484466552734
    7. 'result' → logprob: -3.9500484466552734
    8. ' ans' → logprob: -4.200048446655273
    9. 'visited' → logprob: -4.200048446655273
    10. 'answer' → logprob: -4.325048446655273

Token 292: ' answer' (ID: 6052)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5447971820831299
    2. 'def' → logprob: -1.2947971820831299
    3. 'stack' → logprob: -2.16979718208313
    4. 'import' → logprob: -4.419796943664551
    5. 'acc' → logprob: -4.919796943664551
    6. 'visited' → logprob: -4.919796943664551
    7. 'ans' → logprob: -6.544796943664551
    8. ' from' → logprob: -7.169796943664551
    9. 'queue' → logprob: -7.419796943664551
    10. '#' → logprob: -7.669796943664551

Token 293: ' list' (ID: 1562)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0073654912412166595
    2. '=' → logprob: -5.507365703582764
    3. 'ans' → logprob: -6.382365703582764
    4. 'list' → logprob: -7.632365703582764
    5. 's' → logprob: -8.257365226745605
    6. 'answer' → logprob: -8.757365226745605
    7. 'array' → logprob: -8.882365226745605
    8. '[]' → logprob: -9.007365226745605
    9. ' ans' → logprob: -9.757365226745605
    10. '   ' → logprob: -10.007365226745605

Token 294: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6374079585075378
    2. 'ans' → logprob: -1.2624080181121826
    3. ' ans' → logprob: -1.8874080181121826
    4. ' =' → logprob: -3.8874080181121826
    5. 'answer' → logprob: -4.3874077796936035
    6. ' answer' → logprob: -6.7624077796936035
    7. '=' → logprob: -7.0124077796936035
    8. '	ans' → logprob: -7.6374077796936035
    9. '
' → logprob: -7.7624077796936035
    10. ',' → logprob: -8.137408256530762

Token 295: ' store' (ID: 4897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14519661664962769
    2. 'plus' → logprob: -2.0201966762542725
    3. ' plus' → logprob: -6.270196437835693
    4. ' [' → logprob: -7.520196437835693
    5. '0' → logprob: -10.270196914672852
    6. 'list' → logprob: -12.145196914672852
    7. 'store' → logprob: -12.270196914672852
    8. '[-' → logprob: -12.395196914672852
    9. '[]' → logprob: -12.645196914672852
    10. 'copy' → logprob: -12.770196914672852

Token 296: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.40573880076408386
    2. 'the' → logprob: -1.2807388305664062
    3. 'acc' → logprob: -3.9057388305664062
    4. 'final' → logprob: -3.9057388305664062
    5. '[' → logprob: -5.155738830566406
    6. ' accumulated' → logprob: -5.905738830566406
    7. ' cumulative' → logprob: -6.155738830566406
    8. ' final' → logprob: -6.405738830566406
    9. 'ans' → logprob: -6.905738830566406
    10. 'result' → logprob: -7.405738830566406

Token 297: ' propagated' (ID: 192666)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.4613087475299835
    2. 'final' → logprob: -1.2113087177276611
    3. 'result' → logprob: -4.08630895614624
    4. ' final' → logprob: -4.33630895614624
    5. ' accumulated' → logprob: -4.33630895614624
    6. 'total' → logprob: -4.46130895614624
    7. 'def' → logprob: -5.33630895614624
    8. 'c' → logprob: -6.08630895614624
    9. 'answer' → logprob: -6.46130895614624
    10. 'ans' → logprob: -6.71130895614624

Token 298: ' value' (ID: 1432)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.14639705419540405
    2. ' values' → logprob: -2.021397113800049
    3. 'value' → logprob: -6.146397113800049
    4. 'increments' → logprob: -7.646397113800049
    5. 'acc' → logprob: -7.896397113800049
    6. 'vals' → logprob: -8.77139663696289
    7. 'plus' → logprob: -9.02139663696289
    8. ' value' → logprob: -9.27139663696289
    9. 's' → logprob: -9.77139663696289
    10. ' increments' → logprob: -10.02139663696289

Token 299: ' for' (ID: 395)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.3246454894542694
    2. 'answer' → logprob: -1.9496455192565918
    3. '   ' → logprob: -2.199645519256592
    4. ' ans' → logprob: -3.949645519256592
    5. ' for' → logprob: -6.824645519256592
    6. ' answer' → logprob: -6.949645519256592
    7. 'for' → logprob: -7.324645519256592
    8. ' at' → logprob: -8.074645042419434
    9. '(ans' → logprob: -8.324645042419434
    10. 'answers' → logprob: -8.449645042419434

Token 300: ' each' (ID: 2454)
  Prédit: ' each'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' each' → logprob: -0.7528323531150818
    2. 'each' → logprob: -0.7528323531150818
    3. ' all' → logprob: -3.1278324127197266
    4. 'all' → logprob: -4.377832412719727
    5. 'i' → logprob: -7.252832412719727
    6. ' i' → logprob: -7.377832412719727
    7. 'node' → logprob: -9.377832412719727
    8. ' node' → logprob: -9.377832412719727
    9. 's' → logprob: -11.127832412719727
    10. ' nodes' → logprob: -11.752832412719727

Token 301: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.12718752026557922
    2. ' node' → logprob: -2.127187490463257
    3. 'def' → logprob: -9.877187728881836
    4. 'i' → logprob: -10.252187728881836
    5. '
' → logprob: -10.377187728881836
    6. '[node' → logprob: -10.752187728881836
    7. 'answer' → logprob: -11.127187728881836
    8. ' i' → logprob: -11.627187728881836
    9. 'index' → logprob: -11.752187728881836
    10. 'value' → logprob: -11.752187728881836

Token 302: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44232606887817383
    2. 'ans' → logprob: -1.1923260688781738
    3. 'answer' → logprob: -3.192326068878174
    4. ' ans' → logprob: -4.442326068878174
    5. ' answer' → logprob: -7.692326068878174
    6. '	ans' → logprob: -8.817325592041016
    7. 'answers' → logprob: -8.942325592041016
    8. '
' → logprob: -9.567325592041016
    9. '(ans' → logprob: -9.567325592041016
    10. ',' → logprob: -10.067325592041016

Token 303: '   ' (ID: 271)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12872689962387085
    2. 'answer' → logprob: -2.3787269592285156
    3. '   ' → logprob: -4.128726959228516
    4. ' ans' → logprob: -4.503726959228516
    5. ' answer' → logprob: -7.253726959228516
    6. 'answers' → logprob: -10.003726959228516
    7. '	ans' → logprob: -10.253726959228516
    8. ' ' → logprob: -10.503726959228516
    9. 'ANS' → logprob: -10.628726959228516
    10. '
' → logprob: -11.128726959228516

Token 304: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.1433553397655487
    2. 'answer' → logprob: -2.018355369567871
    3. ' ans' → logprob: -8.143355369567871
    4. 'ANS' → logprob: -8.518355369567871
    5. '   ' → logprob: -10.143355369567871
    6. ' answer' → logprob: -10.518355369567871
    7. 'answers' → logprob: -10.893355369567871
    8. 'Ans' → logprob: -11.018355369567871
    9. 'dp' → logprob: -11.268355369567871
    10. 'a' → logprob: -11.643355369567871

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889143377542496
    2. '=' → logprob: -2.5788915157318115
    3. '[' → logprob: -14.45389175415039
    4. '=[' → logprob: -14.70389175415039
    5. '   ' → logprob: -15.70389175415039
    6. ' =[' → logprob: -15.70389175415039
    7. ' ' → logprob: -15.82889175415039
    8. ',' → logprob: -16.20389175415039
    9. '=[]' → logprob: -16.45389175415039
    10. 's' → logprob: -16.82889175415039

Token 306: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.049503691494464874
    2. 'plus' → logprob: -3.174503803253174
    3. ' plus' → logprob: -5.674503803253174
    4. ' [' → logprob: -5.799503803253174
    5. '[-' → logprob: -11.924503326416016
    6. '   ' → logprob: -12.424503326416016
    7. '[N' → logprob: -13.674503326416016
    8. 'list' → logprob: -13.674503326416016
    9. '[i' → logprob: -14.174503326416016
    10. '[*' → logprob: -14.174503326416016

Token 307: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4259644558478612e-05
    2. ' ' → logprob: -11.500014305114746
    3. 'None' → logprob: -13.000014305114746
    4. '   ' → logprob: -14.125014305114746
    5. 'plus' → logprob: -15.000014305114746
    6. '-' → logprob: -15.125014305114746
    7. '+' → logprob: -16.87501335144043
    8. '
' → logprob: -16.93751335144043
    9. '[' → logprob: -17.00001335144043
    10. '```' → logprob: -17.56251335144043

Token 308: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017096864758059382
    2. ']*' → logprob: -6.501709461212158
    3. ' for' → logprob: -9.626709938049316
    4. 'for' → logprob: -9.626709938049316
    5. ' ]' → logprob: -10.376709938049316
    6. ')' → logprob: -10.501709938049316
    7. '   ' → logprob: -11.251709938049316
    8. '*' → logprob: -13.376709938049316
    9. ']*(' → logprob: -14.751709938049316
    10. '*N' → logprob: -15.001709938049316

Token 309: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7618783712387085
    2. ' for' → logprob: -1.3868783712387085
    3. '<|end|>' → logprob: -2.511878490447998
    4. 'for' → logprob: -2.636878490447998
    5. 'def' → logprob: -3.136878490447998
    6. '
' → logprob: -3.761878490447998
    7. ' *' → logprob: -4.136878490447998
    8. ')' → logprob: -4.636878490447998
    9. '(N' → logprob: -4.761878490447998
    10. '*' → logprob: -5.636878490447998

Token 310: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015872348740231246
    2. ' N' → logprob: -8.750158309936523
    3. '   ' → logprob: -15.375158309936523
    4. '(N' → logprob: -17.000158309936523
    5. ' ' → logprob: -19.500158309936523
    6. '	N' → logprob: -19.500158309936523
    7. 'n' → logprob: -21.125158309936523
    8. '  ' → logprob: -21.375158309936523
    9. 'Ｎ' → logprob: -21.375158309936523
    10. '    ' → logprob: -21.500158309936523

Token 311: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03304257243871689
    2. '
' → logprob: -4.0330424308776855
    3. 'def' → logprob: -4.4080424308776855
    4. '    
' → logprob: -6.5330424308776855
    5. ' def' → logprob: -7.1580424308776855
    6. 'stack' → logprob: -8.658042907714844
    7. ' stack' → logprob: -8.783042907714844
    8. ' for' → logprob: -11.408042907714844
    9. 'for' → logprob: -11.908042907714844
    10. ',' → logprob: -12.533042907714844

Token 312: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01944747008383274
    2. 'def' → logprob: -4.019447326660156
    3. ' def' → logprob: -6.894447326660156
    4. 'stack' → logprob: -9.019447326660156
    5. ' stack' → logprob: -9.144447326660156
    6. '
' → logprob: -10.394447326660156
    7. '    
' → logprob: -10.894447326660156
    8. 'import' → logprob: -13.019447326660156
    9. 'from' → logprob: -13.894447326660156
    10. '	stack' → logprob: -14.394447326660156

Token 313: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0475323423743248
    2. '   ' → logprob: -3.422532320022583
    3. 'stack' → logprob: -4.422532558441162
    4. 'from' → logprob: -6.797532558441162
    5. 'ans' → logprob: -8.297532081604004
    6. 'import' → logprob: -8.422532081604004
    7. ' def' → logprob: -9.172532081604004
    8. ' stack' → logprob: -10.672532081604004
    9. 'for' → logprob: -10.922532081604004
    10. '    
' → logprob: -11.922532081604004

Token 314: ' Use' (ID: 7649)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08819091320037842
    2. 'from' → logprob: -2.588191032409668
    3. 'import' → logprob: -5.088191032409668
    4. 'stack' → logprob: -5.838191032409668
    5. '   ' → logprob: -8.963191032409668
    6. 'visited' → logprob: -10.838191032409668
    7. ' def' → logprob: -11.963191032409668
    8. ' from' → logprob: -12.213191032409668
    9. 'ans' → logprob: -12.338191032409668
    10. '#' → logprob: -12.463191032409668

Token 315: ' a' (ID: 261)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.036326758563518524
    2. 'import' → logprob: -3.9113266468048096
    3. 'def' → logprob: -4.911326885223389
    4. ' from' → logprob: -4.911326885223389
    5. 'stack' → logprob: -7.411326885223389
    6. 'a' → logprob: -9.28632640838623
    7. ' a' → logprob: -9.66132640838623
    8. 'deque' → logprob: -10.28632640838623
    9. '```' → logprob: -10.66132640838623
    10. ' stack' → logprob: -10.66132640838623

Token 316: ' stack' (ID: 10825)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6812379956245422
    2. 'from' → logprob: -0.8062379956245422
    3. 'stack' → logprob: -3.4312379360198975
    4. 'import' → logprob: -4.681238174438477
    5. ' from' → logprob: -5.306238174438477
    6. ' stack' → logprob: -7.306238174438477
    7. 'deque' → logprob: -9.056238174438477
    8. ' def' → logprob: -9.556238174438477
    9. 'queue' → logprob: -11.556238174438477
    10. 'de' → logprob: -11.806238174438477

Token 317: ' to' (ID: 316)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006712059024721384
    2. '=' → logprob: -5.631711959838867
    3. '   ' → logprob: -6.756711959838867
    4. ' to' → logprob: -7.381711959838867
    5. 'stack' → logprob: -7.631711959838867
    6. ' stack' → logprob: -8.256711959838867
    7. '[' → logprob: -8.881711959838867
    8. ',' → logprob: -9.006711959838867
    9. '(stack' → logprob: -9.381711959838867
    10. 'to' → logprob: -9.881711959838867

Token 318: ' perform' (ID: 3347)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5408957004547119
    2. '[(' → logprob: -1.040895700454712
    3. ' [' → logprob: -3.915895700454712
    4. ' [(' → logprob: -4.165895462036133
    5. 'stack' → logprob: -4.665895462036133
    6. ' stack' → logprob: -5.165895462036133
    7. '[]' → logprob: -5.290895462036133
    8. '[start' → logprob: -5.290895462036133
    9. '[node' → logprob: -7.040895462036133
    10. '[-' → logprob: -7.165895462036133

Token 319: ' an' (ID: 448)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.8715161681175232
    2. ' dfs' → logprob: -2.121516227722168
    3. 'DFS' → logprob: -2.121516227722168
    4. '[' → logprob: -2.246516227722168
    5. ' DFS' → logprob: -2.246516227722168
    6. '[(' → logprob: -3.246516227722168
    7. 'a' → logprob: -3.746516227722168
    8. ' a' → logprob: -4.246516227722168
    9. 'depth' → logprob: -4.621516227722168
    10. ' iterative' → logprob: -4.746516227722168

Token 320: ' explicit' (ID: 23141)
  Prédit: ' iterative'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' iterative' → logprob: -0.9453975558280945
    2. 'explicit' → logprob: -1.4453976154327393
    3. ' explicit' → logprob: -1.5703976154327393
    4. 'iter' → logprob: -1.9453976154327393
    5. '   ' → logprob: -3.8203976154327393
    6. 'stack' → logprob: -7.44539737701416
    7. ' stack' → logprob: -7.44539737701416
    8. 'in' → logprob: -7.82039737701416
    9. 'initial' → logprob: -8.19539737701416
    10. ' iter' → logprob: -8.82039737701416

Token 321: ' depth' (ID: 13636)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -1.0616878271102905
    2. 'depth' → logprob: -1.1866878271102905
    3. 'DFS' → logprob: -1.9366878271102905
    4. ' DFS' → logprob: -2.18668794631958
    5. 'stack' → logprob: -3.18668794631958
    6. ' depth' → logprob: -3.18668794631958
    7. ' stack' → logprob: -5.18668794631958
    8. ' dfs' → logprob: -5.56168794631958
    9. ' traversal' → logprob: -9.061687469482422
    10. 'Depth' → logprob: -9.061687469482422

Token 322: '-first' (ID: 70119)
  Prédit: '-first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-first' → logprob: -0.004474985413253307
    2. 'first' → logprob: -6.004475116729736
    3. '_first' → logprob: -6.254475116729736
    4. '-' → logprob: -10.379474639892578
    5. ' first' → logprob: -10.879474639892578
    6. 'First' → logprob: -11.254474639892578
    7. '   ' → logprob: -11.879474639892578
    8. ' -' → logprob: -12.754474639892578
    9. '-FIRST' → logprob: -13.129474639892578
    10. ' First' → logprob: -15.254474639892578

Token 323: ' traversal' (ID: 131388)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.5309948325157166
    2. 'search' → logprob: -1.0309948921203613
    3. ' traversal' → logprob: -2.9059948921203613
    4. '-search' → logprob: -8.280994415283203
    5. 'stack' → logprob: -9.030994415283203
    6. ' stack' → logprob: -9.155994415283203
    7. '   ' → logprob: -10.155994415283203
    8. '_search' → logprob: -10.655994415283203
    9. 'first' → logprob: -11.280994415283203
    10. '-' → logprob: -11.280994415283203

Token 324: ' starting' (ID: 8601)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007585679180920124
    2. ' stack' → logprob: -5.257585525512695
    3. 'stack' → logprob: -6.507585525512695
    4. '(stack' → logprob: -7.632585525512695
    5. ',' → logprob: -8.882585525512695
    6. ' for' → logprob: -9.382585525512695
    7. ' to' → logprob: -9.757585525512695
    8. '	stack' → logprob: -10.007585525512695
    9. ' with' → logprob: -11.007585525512695
    10. '.' → logprob: -11.882585525512695

Token 325: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17127451300621033
    2. ' from' → logprob: -2.046274423599243
    3. ' at' → logprob: -4.171274662017822
    4. '   ' → logprob: -4.671274662017822
    5. 'with' → logprob: -6.546274662017822
    6. 'at' → logprob: -6.921274662017822
    7. ' with' → logprob: -7.046274662017822
    8. 'stack' → logprob: -10.921274185180664
    9. '0' → logprob: -11.046274185180664
    10. '[' → logprob: -11.296274185180664

Token 326: ' the' (ID: 290)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005284877843223512
    2. ' ' → logprob: -7.750528335571289
    3. '   ' → logprob: -10.125528335571289
    4. 'node' → logprob: -10.500528335571289
    5. 'root' → logprob: -11.250528335571289
    6. '[' → logprob: -11.375528335571289
    7. ' node' → logprob: -12.875528335571289
    8. ' root' → logprob: -14.250528335571289
    9. 'the' → logprob: -14.500528335571289
    10. ' [' → logprob: -14.500528335571289

Token 327: ' root' (ID: 6577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015359772078227252
    2. ' ' → logprob: -9.375153541564941
    3. 'root' → logprob: -10.000153541564941
    4. '[' → logprob: -11.250153541564941
    5. '   ' → logprob: -13.000153541564941
    6. '
' → logprob: -13.000153541564941
    7. 'stack' → logprob: -13.250153541564941
    8. ' root' → logprob: -14.000153541564941
    9. ' [' → logprob: -14.500153541564941
    10. 'node' → logprob: -15.125153541564941

Token 328: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22025208175182343
    2. ':' → logprob: -2.47025203704834
    3. '(stack' → logprob: -3.22025203704834
    4. 'stack' → logprob: -3.47025203704834
    5. '(' → logprob: -4.72025203704834
    6. ' stack' → logprob: -4.84525203704834
    7. ' (' → logprob: -4.84525203704834
    8. ' =' → logprob: -5.34525203704834
    9. ',' → logprob: -5.84525203704834
    10. '.' → logprob: -5.97025203704834

Token 329: 'node' (ID: 7005)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005342855118215084
    2. ' ' → logprob: -5.255342960357666
    3. ')' → logprob: -9.880342483520508
    4. 'node' → logprob: -11.005342483520508
    5. '   ' → logprob: -11.130342483520508
    6. ' node' → logprob: -11.755342483520508
    7. '[' → logprob: -12.380342483520508
    8. '(' → logprob: -12.380342483520508
    9. ' [' → logprob: -13.505342483520508
    10. ' (' → logprob: -13.505342483520508

Token 330: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13233748078346252
    2. ' ' → logprob: -2.1323375701904297
    3. '=' → logprob: -5.63233757019043
    4. ' =' → logprob: -6.38233757019043
    5. ')' → logprob: -9.38233757019043
    6. '(' → logprob: -11.38233757019043
    7. ',' → logprob: -11.75733757019043
    8. ' (' → logprob: -11.88233757019043
    9. '```' → logprob: -12.63233757019043
    10. '[' → logprob: -12.88233757019043

Token 331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.3458322731312364e-06
    2. ' ' → logprob: -11.875007629394531
    3. '=' → logprob: -15.625007629394531
    4. '(' → logprob: -16.37500762939453
    5. '```' → logprob: -18.75000762939453
    6. '[' → logprob: -18.87500762939453
    7. ' =' → logprob: -18.87500762939453
    8. ')' → logprob: -19.50000762939453
    9. '   ' → logprob: -19.75000762939453
    10. '`' → logprob: -20.50000762939453

Token 332: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3629865050315857
    2. '   ' → logprob: -1.2379865646362305
    3. ')
' → logprob: -4.3629865646362305
    4. ',' → logprob: -7.4879865646362305
    5. '):' → logprob: -7.6129865646362305
    6. ' )' → logprob: -8.23798656463623
    7. '):
' → logprob: -8.86298656463623
    8. '
' → logprob: -9.98798656463623
    9. ':' → logprob: -10.11298656463623
    10. ').' → logprob: -10.11298656463623

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0657745972275734
    2. ' stack' → logprob: -3.19077467918396
    3. 'stack' → logprob: -3.81577467918396
    4. '	stack' → logprob: -8.190774917602539
    5. '    
' → logprob: -9.315774917602539
    6. '
' → logprob: -9.940774917602539
    7. '(stack' → logprob: -10.565774917602539
    8. '```' → logprob: -10.940774917602539
    9. '    ' → logprob: -12.065774917602539
    10. '_stack' → logprob: -12.315774917602539

Token 334: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.24132482707500458
    2. '   ' → logprob: -2.1163249015808105
    3. ' stack' → logprob: -2.3663249015808105
    4. '	stack' → logprob: -9.491324424743652
    5. 'stk' → logprob: -10.991324424743652
    6. '
' → logprob: -11.866324424743652
    7. '```' → logprob: -12.741324424743652
    8. 'st' → logprob: -12.866324424743652
    9. '    
' → logprob: -13.116324424743652
    10. ' stk' → logprob: -13.116324424743652

Token 335: ' Each' (ID: 11555)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.019175613299012184
    2. ' stack' → logprob: -4.0191755294799805
    3. '   ' → logprob: -6.8941755294799805
    4. '	stack' → logprob: -12.01917552947998
    5. 'from' → logprob: -13.26917552947998
    6. 'stk' → logprob: -13.76917552947998
    7. 'st' → logprob: -14.01917552947998
    8. '
' → logprob: -14.26917552947998
    9. '```' → logprob: -14.76917552947998
    10. '    
' → logprob: -15.14417552947998

Token 336: ' stack' (ID: 10825)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.989008903503418
    2. ' stack' → logprob: -1.239008903503418
    3. '(stack' → logprob: -1.864008903503418
    4. 'stack' → logprob: -3.114008903503418
    5. '(node' → logprob: -3.614008903503418
    6. ' element' → logprob: -3.614008903503418
    7. ' item' → logprob: -4.114008903503418
    8. '(token' → logprob: -4.114008903503418
    9. '(' → logprob: -4.864008903503418
    10. '(item' → logprob: -4.864008903503418

Token 337: ' item' (ID: 2169)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.4644497334957123
    2. ' =' → logprob: -1.3394497632980347
    3. ' element' → logprob: -2.964449644088745
    4. ' entry' → logprob: -4.214449882507324
    5. '=' → logprob: -4.714449882507324
    6. 'element' → logprob: -4.839449882507324
    7. '_item' → logprob: -5.214449882507324
    8. '_entry' → logprob: -5.214449882507324
    9. ' item' → logprob: -5.839449882507324
    10. 'entry' → logprob: -5.964449882507324

Token 338: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5388895869255066
    2. '=' → logprob: -1.1638896465301514
    3. ' is' → logprob: -2.2888896465301514
    4. ',' → logprob: -6.288889408111572
    5. ' consists' → logprob: -8.03888988494873
    6. ' will' → logprob: -8.28888988494873
    7. ')' → logprob: -8.53888988494873
    8. ' comprises' → logprob: -9.41388988494873
    9. ':' → logprob: -9.91388988494873
    10. '   ' → logprob: -10.03888988494873

Token 339: ' a' (ID: 261)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.10752705484628677
    2. ' a' → logprob: -3.107527017593384
    3. '(node' → logprob: -3.732527017593384
    4. '(a' → logprob: -3.982527017593384
    5. '(' → logprob: -4.357527256011963
    6. '(n' → logprob: -6.732527256011963
    7. '(p' → logprob: -8.482526779174805
    8. 'a' → logprob: -8.857526779174805
    9. '(root' → logprob: -9.732526779174805
    10. '(tuple' → logprob: -9.982526779174805

Token 340: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.12973842024803162
    2. ' tuple' → logprob: -2.1297383308410645
    3. '(tuple' → logprob: -6.0047383308410645
    4. 'pair' → logprob: -8.879738807678223
    5. '(' → logprob: -9.379738807678223
    6. '(node' → logprob: -10.504738807678223
    7. ' (' → logprob: -10.629738807678223
    8. 'list' → logprob: -11.254738807678223
    9. '(pair' → logprob: -11.754738807678223
    10. ' pair' → logprob: -11.754738807678223

Token 341: ':' (ID: 25)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.13756439089775085
    2. ' (' → logprob: -2.1375644207000732
    3. ',' → logprob: -4.887564182281494
    4. ' of' → logprob: -7.137564182281494
    5. '   ' → logprob: -7.137564182281494
    6. '(stack' → logprob: -8.012564659118652
    7. '(current' → logprob: -8.512564659118652
    8. ':' → logprob: -8.762564659118652
    9. '(' → logprob: -8.762564659118652
    10. ' =' → logprob: -9.137564659118652

Token 342: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.010380403138697147
    2. ' (' → logprob: -4.885380268096924
    3. '   ' → logprob: -6.635380268096924
    4. '(current' → logprob: -6.635380268096924
    5. '(index' → logprob: -10.385380744934082
    6. '(vertex' → logprob: -10.635380744934082
    7. '(stack' → logprob: -10.635380744934082
    8. '(' → logprob: -11.135380744934082
    9. '(u' → logprob: -11.260380744934082
    10. '(cur' → logprob: -11.885380744934082

Token 343: 'current' (ID: 5804)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.47443386912345886
    2. 'current' → logprob: -0.9744338989257812
    3. ' node' → logprob: -9.099433898925781
    4. ' current' → logprob: -9.349433898925781
    5. 'index' → logprob: -9.974433898925781
    6. '(node' → logprob: -10.099433898925781
    7. 'vertex' → logprob: -11.099433898925781
    8. '(current' → logprob: -11.224433898925781
    9. 'cur' → logprob: -11.599433898925781
    10. 'u' → logprob: -11.724433898925781

Token 344: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.08643828332424164
    2. ',' → logprob: -2.5864381790161133
    3. 'node' → logprob: -5.586438179016113
    4. ' node' → logprob: -6.086438179016113
    5. '_index' → logprob: -7.211438179016113
    6. ',node' → logprob: -8.586438179016113
    7. ' ,' → logprob: -8.711438179016113
    8. '   ' → logprob: -8.836438179016113
    9. 'Node' → logprob: -9.461438179016113
    10. '_idx' → logprob: -9.836438179016113

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.263011578586884e-05
    2. ' ,' → logprob: -10.375042915344238
    3. ',
' → logprob: -11.500042915344238
    4. '   ' → logprob: -14.875042915344238
    5. '
' → logprob: -16.000041961669922
    6. ')' → logprob: -16.250041961669922
    7. ',node' → logprob: -16.500041961669922
    8. ',int' → logprob: -16.625041961669922
    9. 'import' → logprob: -16.625041961669922
    10. '‌,' → logprob: -16.750041961669922

Token 346: ' inherited' (ID: 55759)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.3434833884239197
    2. 'current' → logprob: -1.3434834480285645
    3. 'c' → logprob: -4.4684834480285645
    4. ' accumulated' → logprob: -5.0934834480285645
    5. 'increment' → logprob: -5.5934834480285645
    6. ' current' → logprob: -5.7184834480285645
    7. 'value' → logprob: -6.0934834480285645
    8. 'parent' → logprob: -6.5934834480285645
    9. 'in' → logprob: -7.2184834480285645
    10. ' cumulative' → logprob: -8.718482971191406

Token 347: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.01746956631541252
    2. '_increment' → logprob: -5.01746940612793
    3. '_sum' → logprob: -5.26746940612793
    4. ')' → logprob: -5.89246940612793
    5. '_plus' → logprob: -6.39246940612793
    6. '_val' → logprob: -7.64246940612793
    7. '_acc' → logprob: -8.14246940612793
    8. '_add' → logprob: -9.39246940612793
    9. '_amount' → logprob: -10.01746940612793
    10. 'value' → logprob: -10.14246940612793

Token 348: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.22597792744636536
    2. ')' → logprob: -1.600977897644043
    3. '   ' → logprob: -8.600977897644043
    4. ' ,' → logprob: -8.975977897644043
    5. ' )' → logprob: -9.475977897644043
    6. ')
' → logprob: -9.850977897644043
    7. '),' → logprob: -10.725977897644043
    8. ',)' → logprob: -10.725977897644043
    9. ',
' → logprob: -10.850977897644043
    10. '[' → logprob: -12.663477897644043

Token 349: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0021150470711290836
    2. ',' → logprob: -7.127115249633789
    3. 'stack' → logprob: -7.877115249633789
    4. '
' → logprob: -8.502115249633789
    5. '    
' → logprob: -8.502115249633789
    6. '	stack' → logprob: -8.627115249633789
    7. ' stack' → logprob: -8.752115249633789
    8. ')' → logprob: -9.752115249633789
    9. '(stack' → logprob: -10.127115249633789
    10. ',
' → logprob: -10.877115249633789

Token 350: ' dfs' (ID: 51252)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6159735321998596
    2. '   ' → logprob: -0.8659735321998596
    3. ' stack' → logprob: -3.240973472595215
    4. '	stack' → logprob: -9.365973472595215
    5. 'stk' → logprob: -11.740973472595215
    6. '
' → logprob: -12.240973472595215
    7. '    
' → logprob: -12.740973472595215
    8. '_stack' → logprob: -12.740973472595215
    9. '    ' → logprob: -13.365973472595215
    10. '```' → logprob: -13.365973472595215

Token 351: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6982219815254211
    2. '_stack' → logprob: -0.6982219815254211
    3. '=' → logprob: -6.1982221603393555
    4. 'stack' → logprob: -6.3232221603393555
    5. '   ' → logprob: -7.5732221603393555
    6. '(stack' → logprob: -7.8232221603393555
    7. 'Stack' → logprob: -9.198222160339355
    8. '_' → logprob: -9.823222160339355
    9. '(' → logprob: -9.948222160339355
    10. ' stack' → logprob: -10.573222160339355

Token 352: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.00020377879263833165
    2. ' [(' → logprob: -8.500204086303711
    3. '[((' → logprob: -16.00020408630371
    4. '[' → logprob: -16.37520408630371
    5. '   ' → logprob: -16.75020408630371
    6. '([(' → logprob: -16.87520408630371
    7. ' ' → logprob: -17.12520408630371
    8. '[[' → logprob: -20.50020408630371
    9. '  ' → logprob: -21.75020408630371
    10. '[]' → logprob: -22.12520408630371

Token 353: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -17.375001907348633
    4. '(' → logprob: -17.750001907348633
    5. ')' → logprob: -19.375001907348633
    6. '۰' → logprob: -19.375001907348633
    7. '０' → logprob: -19.500001907348633
    8. '```' → logprob: -20.500001907348633
    9. ',' → logprob: -20.750001907348633
    10. '00' → logprob: -20.750001907348633

Token 354: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004701146390289068
    2. '0' → logprob: -7.750470161437988
    3. ' ,' → logprob: -10.375470161437988
    4. ',
' → logprob: -12.125470161437988
    5. '   ' → logprob: -13.500470161437988
    6. ' ' → logprob: -14.125470161437988
    7. '```' → logprob: -15.875470161437988
    8. '
' → logprob: -16.375469207763672
    9. '1' → logprob: -16.500469207763672
    10. '2' → logprob: -16.875469207763672

Token 355: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.580111026763916
    2. 'plus' → logprob: -0.830111026763916
    3. ' plus' → logprob: -5.580111026763916
    4. ' ' → logprob: -8.330110549926758
    5. '+' → logprob: -10.080110549926758
    6. '   ' → logprob: -10.205110549926758
    7. ')' → logprob: -11.267610549926758
    8. 'pl' → logprob: -12.142610549926758
    9. '-plus' → logprob: -12.205110549926758
    10. '_plus' → logprob: -12.580110549926758

Token 356: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.089021697640419
    2. 'plus' → logprob: -2.464021682739258
    3. ' plus' → logprob: -9.964021682739258
    4. ' ' → logprob: -11.589021682739258
    5. '+' → logprob: -11.964021682739258
    6. '   ' → logprob: -12.651521682739258
    7. ')' → logprob: -13.214021682739258
    8. 'Plus' → logprob: -13.526521682739258
    9. '-plus' → logprob: -13.589021682739258
    10. 'zero' → logprob: -13.651521682739258

Token 357: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.959636033978313e-05
    2. ')' → logprob: -10.125089645385742
    3. ')]
' → logprob: -10.125089645385742
    4. ' )' → logprob: -12.375089645385742
    5. ')]

' → logprob: -13.000089645385742
    6. '),' → logprob: -13.750089645385742
    7. '))' → logprob: -14.750089645385742
    8. ')][' → logprob: -15.375089645385742
    9. ')]
' → logprob: -15.500089645385742
    10. ')].' → logprob: -15.500089645385742

Token 358: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2271007001399994
    2. 'while' → logprob: -1.8521007299423218
    3. ' while' → logprob: -3.1021006107330322
    4. '	while' → logprob: -6.727100849151611
    5. '```' → logprob: -9.602100372314453
    6. ')' → logprob: -10.977100372314453
    7. '    
' → logprob: -12.477100372314453
    8. 'While' → logprob: -12.852100372314453
    9. '
' → logprob: -12.977100372314453
    10. '``' → logprob: -13.352100372314453

Token 359: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.07696378231048584
    2. '   ' → logprob: -3.0769639015197754
    3. ' while' → logprob: -3.5769639015197754
    4. '	while' → logprob: -11.076963424682617
    5. '    
' → logprob: -14.201963424682617
    6. 'While' → logprob: -14.451963424682617
    7. '
' → logprob: -16.076963424682617
    8. ')' → logprob: -16.201963424682617
    9. '```' → logprob: -17.076963424682617
    10. '   ' → logprob: -17.951963424682617

Token 360: ' len' (ID: 4631)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.008615754544734955
    2. ' dfs' → logprob: -4.758615970611572
    3. 'len' → logprob: -14.258615493774414
    4. 'df' → logprob: -14.758615493774414
    5. '   ' → logprob: -15.883615493774414
    6. ' len' → logprob: -18.508615493774414
    7. ' ' → logprob: -19.383615493774414
    8. '
' → logprob: -19.508615493774414
    9. 'ds' → logprob: -19.633615493774414
    10. 'd' → logprob: -19.758615493774414

Token 361: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.0033853515051305e-05
    2. 'dfs' → logprob: -10.000060081481934
    3. '(' → logprob: -11.875060081481934
    4. '(stack' → logprob: -12.375060081481934
    5. '(df' → logprob: -13.500060081481934
    6. ' (' → logprob: -14.000060081481934
    7. 'd' → logprob: -15.375060081481934
    8. '(depth' → logprob: -15.625060081481934
    9. 'DFS' → logprob: -15.750060081481934
    10. ' dfs' → logprob: -16.000059127807617

Token 362: 'fs' (ID: 6469)
  Prédit: 'fs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fs' → logprob: -2.15310683415737e-05
    2. 'dfs' → logprob: -11.125021934509277
    3. 'f' → logprob: -13.125021934509277
    4. '(fs' → logprob: -13.375021934509277
    5. 's' → logprob: -13.500021934509277
    6. ' fs' → logprob: -14.625021934509277
    7. 'efs' → logprob: -15.125021934509277
    8. 'ds' → logprob: -15.375021934509277
    9. '[' → logprob: -15.500021934509277
    10. 'FS' → logprob: -16.00002098083496

Token 363: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.053238265216350555
    2. ')>' → logprob: -3.0532381534576416
    3. '):' → logprob: -6.053238391876221
    4. '>' → logprob: -6.428238391876221
    5. '):
' → logprob: -7.428238391876221
    6. ' >' → logprob: -9.803237915039062
    7. ' )' → logprob: -12.053237915039062
    8. '   ' → logprob: -12.178237915039062
    9. ')>
' → logprob: -12.303237915039062
    10. ' ' → logprob: -12.928237915039062

Token 364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012885245494544506
    2. 'node' → logprob: -5.012885093688965
    3. 'v' → logprob: -5.762885093688965
    4. ' node' → logprob: -6.762885093688965
    5. 'current' → logprob: -7.512885093688965
    6. ' v' → logprob: -7.637885093688965
    7. 'n' → logprob: -8.387885093688965
    8. 'u' → logprob: -8.637885093688965
    9. 'c' → logprob: -9.012885093688965
    10. ' current' → logprob: -9.137885093688965

Token 365: ' n' (ID: 297)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3090803325176239
    2. 'node' → logprob: -2.4340803623199463
    3. 'now' → logprob: -2.6840803623199463
    4. 'u' → logprob: -3.1840803623199463
    5. 'cur' → logprob: -3.8090803623199463
    6. 'current' → logprob: -4.309080123901367
    7. 'pos' → logprob: -5.059080123901367
    8. 'p' → logprob: -5.184080123901367
    9. 'c' → logprob: -5.684080123901367
    10. 'i' → logprob: -5.809080123901367

Token 366: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3464544432936236e-05
    2. ',n' → logprob: -10.875043869018555
    3. '_,' → logprob: -12.250043869018555
    4. ' ,' → logprob: -12.500043869018555
    5. ',node' → logprob: -12.500043869018555
    6. ',
' → logprob: -12.875043869018555
    7. ',current' → logprob: -13.500043869018555
    8. ',d' → logprob: -13.500043869018555
    9. '=' → logprob: -14.000043869018555
    10. 'n' → logprob: -14.125043869018555

Token 367: ' p' (ID: 275)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.825046956539154
    2. 'val' → logprob: -0.950046956539154
    3. 'acc' → logprob: -3.700047016143799
    4. 'd' → logprob: -4.075047016143799
    5. 's' → logprob: -4.075047016143799
    6. 'value' → logprob: -4.075047016143799
    7. 'p' → logprob: -4.200047016143799
    8. 'cur' → logprob: -4.825047016143799
    9. 'x' → logprob: -4.950047016143799
    10. 'now' → logprob: -4.950047016143799

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.659365177154541
    2. '=' → logprob: -1.534365177154541
    3. '_val' → logprob: -1.784365177154541
    4. 'val' → logprob: -3.284365177154541
    5. '_value' → logprob: -4.159365177154541
    6. 'lus' → logprob: -4.284365177154541
    7. 'sum' → logprob: -4.909365177154541
    8. '_sum' → logprob: -5.159365177154541
    9. 'value' → logprob: -5.284365177154541
    10. 'v' → logprob: -6.409365177154541

Token 369: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.004126961342990398
    2. ' dfs' → logprob: -5.504127025604248
    3. 'df' → logprob: -10.12912654876709
    4. ' ' → logprob: -13.00412654876709
    5. '   ' → logprob: -13.37912654876709
    6. 'd' → logprob: -13.62912654876709
    7. 'ds' → logprob: -14.00412654876709
    8. '
' → logprob: -14.75412654876709
    9. 'point' → logprob: -15.44162654876709
    10. 'daf' → logprob: -15.62912654876709

Token 370: '.pop' (ID: 15746)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5890910625457764
    2. ')' → logprob: -1.5890910625457764
    3. ' =' → logprob: -1.8390910625457764
    4. '.pop' → logprob: -3.0890910625457764
    5. 'pop' → logprob: -4.0890913009643555
    6. ',' → logprob: -5.9640913009643555
    7. '.append' → logprob: -6.0890913009643555
    8. '   ' → logprob: -6.0890913009643555
    9. '+' → logprob: -6.0890913009643555
    10. ')=' → logprob: -6.0890913009643555

Token 371: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01110806129872799
    2. '()
' → logprob: -4.511107921600342
    3. '(' → logprob: -10.0111083984375
    4. ' ()' → logprob: -11.8861083984375
    5. '()
' → logprob: -12.8861083984375
    6. ')' → logprob: -13.2611083984375
    7. '()

' → logprob: -13.3861083984375
    8. '   ' → logprob: -13.8861083984375
    9. '();' → logprob: -15.0111083984375
    10. '       ' → logprob: -15.3861083984375

Token 372: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4695829749107361
    2. 'ans' → logprob: -1.4695830345153809
    3. ' ans' → logprob: -2.344583034515381
    4. '       ' → logprob: -3.219583034515381
    5. '	ans' → logprob: -5.719583034515381
    6. '+' → logprob: -6.094583034515381
    7. ' plus' → logprob: -7.594583034515381
    8. 'plus' → logprob: -7.719583034515381
    9. ' for' → logprob: -7.844583034515381
    10. '    
' → logprob: -8.219582557678223

Token 373: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28357812762260437
    2. 'p' → logprob: -2.1585781574249268
    3. 'ans' → logprob: -2.6585781574249268
    4. 'v' → logprob: -4.033577919006348
    5. 'val' → logprob: -4.658577919006348
    6. ' p' → logprob: -4.783577919006348
    7. 'current' → logprob: -5.033577919006348
    8. 's' → logprob: -5.283577919006348
    9. ' ans' → logprob: -6.158577919006348
    10. '   ' → logprob: -6.408577919006348

Token 374: ' Add' (ID: 4063)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22807246446609497
    2. 'p' → logprob: -2.60307240486145
    3. 'current' → logprob: -2.72807240486145
    4. 'val' → logprob: -3.97807240486145
    5. 'cur' → logprob: -4.228072643280029
    6. 'curr' → logprob: -4.978072643280029
    7. 'total' → logprob: -5.353072643280029
    8. 'now' → logprob: -5.478072643280029
    9. 'acc' → logprob: -5.853072643280029
    10. 'v' → logprob: -5.978072643280029

Token 375: ' the' (ID: 290)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.6502910256385803
    2. 'plus' → logprob: -1.0252909660339355
    3. ' p' → logprob: -2.4002909660339355
    4. 'p' → logprob: -3.6502909660339355
    5. 'ans' → logprob: -6.5252909660339355
    6. ' ans' → logprob: -6.9002909660339355
    7. '   ' → logprob: -8.900291442871094
    8. ' the' → logprob: -11.025291442871094
    9. '       ' → logprob: -11.275291442871094
    10. '+' → logprob: -11.275291442871094

Token 376: ' value' (ID: 1432)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.18905889987945557
    2. 'p' → logprob: -2.314058780670166
    3. ' plus' → logprob: -2.939058780670166
    4. ' p' → logprob: -4.314058780670166
    5. 'in' → logprob: -5.064058780670166
    6. ' inherited' → logprob: -7.689058780670166
    7. 'ans' → logprob: -9.564059257507324
    8. 'inherit' → logprob: -9.689059257507324
    9. 'current' → logprob: -10.064059257507324
    10. '+' → logprob: -10.564059257507324

Token 377: ' explicitly' (ID: 45615)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.8701841235160828
    2. ' plus' → logprob: -1.7451841831207275
    3. ' at' → logprob: -2.3701841831207275
    4. ' =' → logprob: -2.3701841831207275
    5. 'plus' → logprob: -3.1201841831207275
    6. '=' → logprob: -3.1201841831207275
    7. ' to' → logprob: -3.3701841831207275
    8. '   ' → logprob: -3.8701841831207275
    9. '+=' → logprob: -3.8701841831207275
    10. '+' → logprob: -4.120183944702148

Token 378: ' set' (ID: 920)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.1066407710313797
    2. 'plus' → logprob: -2.6066408157348633
    3. ' at' → logprob: -4.356640815734863
    4. '+' → logprob: -5.106640815734863
    5. ' +' → logprob: -5.231640815734863
    6. '   ' → logprob: -6.356640815734863
    7. ' p' → logprob: -8.481640815734863
    8. 'at' → logprob: -8.856640815734863
    9. ' for' → logprob: -8.856640815734863
    10. ' stored' → logprob: -9.356640815734863

Token 379: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.4040614664554596
    2. ' to' → logprob: -1.9040614366531372
    3. ' plus' → logprob: -2.6540615558624268
    4. 'at' → logprob: -3.1540615558624268
    5. 'to' → logprob: -3.1540615558624268
    6. 'plus' → logprob: -4.279061317443848
    7. '   ' → logprob: -5.529061317443848
    8. ' for' → logprob: -6.029061317443848
    9. '+' → logprob: -6.154061317443848
    10. ' +' → logprob: -6.654061317443848

Token 380: ' this' (ID: 495)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03228731453418732
    2. 'node' → logprob: -4.282287120819092
    3. 'the' → logprob: -4.782287120819092
    4. 'this' → logprob: -5.407287120819092
    5. ' n' → logprob: -6.032287120819092
    6. ' the' → logprob: -6.782287120819092
    7. ' node' → logprob: -7.157287120819092
    8. ' this' → logprob: -7.532287120819092
    9. 'current' → logprob: -8.65728759765625
    10. 'that' → logprob: -10.03228759765625

Token 381: ' node' (ID: 4596)
  Prédit: ' node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' node' → logprob: -0.5938610434532166
    2. 'node' → logprob: -0.8438610434532166
    3. 'n' → logprob: -4.093861103057861
    4. ' n' → logprob: -6.843861103057861
    5. 'space' → logprob: -12.343860626220703
    6. 'point' → logprob: -12.343860626220703
    7. '[node' → logprob: -12.718860626220703
    8. ' point' → logprob: -13.218860626220703
    9. ' space' → logprob: -13.593860626220703
    10. '	node' → logprob: -13.843860626220703

Token 382: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.17570653557777405
    2. '+' → logprob: -2.175706624984741
    3. '       ' → logprob: -3.300706624984741
    4. ' plus' → logprob: -4.675706386566162
    5. 'plus' → logprob: -7.175706386566162
    6. ' to' → logprob: -8.17570686340332
    7. '   ' → logprob: -8.67570686340332
    8. 'to' → logprob: -9.30070686340332
    9. ',' → logprob: -10.80070686340332
    10. '        ' → logprob: -10.80070686340332

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03247496858239174
    2. ' +' → logprob: -3.782474994659424
    3. ' to' → logprob: -5.657474994659424
    4. '+' → logprob: -5.782474994659424
    5. ' plus' → logprob: -6.282474994659424
    6. 'plus' → logprob: -8.282474517822266
    7. 'to' → logprob: -8.657474517822266
    8. ',' → logprob: -8.782474517822266
    9. '   ' → logprob: -9.907474517822266
    10. ' and' → logprob: -11.032474517822266

Token 384: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.09877479076385498
    2. ' p' → logprob: -2.9737749099731445
    3. 'ans' → logprob: -4.9737749099731445
    4. 'v' → logprob: -5.2237749099731445
    5. '       ' → logprob: -5.4737749099731445
    6. 'cur' → logprob: -5.5987749099731445
    7. 'current' → logprob: -5.7237749099731445
    8. 'plus' → logprob: -5.7237749099731445
    9. 's' → logprob: -5.9737749099731445
    10. 'val' → logprob: -6.0987749099731445

Token 385: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023504015058279037
    2. ' +=' → logprob: -3.7735040187835693
    3. '+' → logprob: -8.773504257202148
    4. '=' → logprob: -9.898504257202148
    5. '   ' → logprob: -9.898504257202148
    6. ' +' → logprob: -14.273504257202148
    7. ' =' → logprob: -14.523504257202148
    8. '+=(' → logprob: -14.773504257202148
    9. ']+=' → logprob: -14.898504257202148
    10. '	' → logprob: -15.148504257202148

Token 386: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -2.165027217415627e-05
    2. ' plus' → logprob: -10.750021934509277
    3. '   ' → logprob: -15.750021934509277
    4. '       ' → logprob: -18.75002098083496
    5. '           ' → logprob: -19.12502098083496
    6. 'Plus' → logprob: -20.00002098083496
    7. '+' → logprob: -20.25002098083496
    8. ' ' → logprob: -21.25002098083496
    9. '
' → logprob: -21.50002098083496
    10. '  ' → logprob: -21.50002098083496

Token 387: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0007413726998493075
    2. '
' → logprob: -8.125741004943848
    3. '[' → logprob: -8.250741004943848
    4. 'n' → logprob: -8.750741004943848
    5. '[node' → logprob: -11.125741004943848
    6. '   ' → logprob: -12.500741004943848
    7. 'ans' → logprob: -13.000741004943848
    8. '[now' → logprob: -13.375741004943848
    9. '(n' → logprob: -14.125741004943848
    10. '       ' → logprob: -14.250741004943848

Token 388: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4752184748649597
    2. ')' → logprob: -0.9752184748649597
    3. '       ' → logprob: -6.975218296051025
    4. ']
' → logprob: -9.350218772888184
    5. ')
' → logprob: -9.850218772888184
    6. ']' → logprob: -10.350218772888184
    7. '   ' → logprob: -11.100218772888184
    8. ')

' → logprob: -11.600218772888184
    9. ' )
' → logprob: -13.225218772888184
    10. ')]' → logprob: -13.350218772888184

Token 389: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6813040375709534
    2. '   ' → logprob: -1.1813039779663086
    3. 'ans' → logprob: -1.6813039779663086
    4. '	ans' → logprob: -7.306303977966309
    5. ' ans' → logprob: -8.056303977966309
    6. '```' → logprob: -11.056303977966309
    7. '(ans' → logprob: -11.306303977966309
    8. 'for' → logprob: -11.806303977966309
    9. 'answer' → logprob: -13.181303977966309
    10. '           ' → logprob: -13.431303977966309

Token 390: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004671018570661545
    2. '   ' → logprob: -5.504671096801758
    3. '       ' → logprob: -7.754671096801758
    4. ' ans' → logprob: -9.004671096801758
    5. '	ans' → logprob: -10.129671096801758
    6. '(ans' → logprob: -14.129671096801758
    7. '_ans' → logprob: -16.379671096801758
    8. '```' → logprob: -16.504671096801758
    9. 'answer' → logprob: -17.379671096801758
    10. 'anst' → logprob: -17.504671096801758

Token 391: ' Store' (ID: 12600)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0009423116571269929
    2. '   ' → logprob: -7.375942230224609
    3. ' ans' → logprob: -8.37594223022461
    4. '       ' → logprob: -9.50094223022461
    5. '	ans' → logprob: -11.62594223022461
    6. '(ans' → logprob: -14.00094223022461
    7. 'answer' → logprob: -15.37594223022461
    8. '
' → logprob: -15.62594223022461
    9. '  ' → logprob: -16.37594223022461
    10. 'anst' → logprob: -16.75094223022461

Token 392: ' cumulative' (ID: 75628)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.01939929649233818
    2. ' ans' → logprob: -4.144399166107178
    3. 'p' → logprob: -5.769399166107178
    4. ' p' → logprob: -8.644399642944336
    5. '(ans' → logprob: -10.019399642944336
    6. '	ans' → logprob: -11.769399642944336
    7. ' the' → logprob: -12.269399642944336
    8. 'answer' → logprob: -13.394399642944336
    9. 'the' → logprob: -13.519399642944336
    10. '_ans' → logprob: -14.519399642944336

Token 393: ' value' (ID: 1432)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7216974496841431
    2. ' value' → logprob: -1.596697449684143
    3. 'ans' → logprob: -1.971697449684143
    4. 'value' → logprob: -2.0966973304748535
    5. ' p' → logprob: -3.3466973304748535
    6. ' ans' → logprob: -4.3466973304748535
    7. 'val' → logprob: -7.7216973304748535
    8. 'answer' → logprob: -8.221697807312012
    9. '   ' → logprob: -9.096697807312012
    10. '_value' → logprob: -9.471697807312012

Token 394: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014742881059646606
    2. ' at' → logprob: -4.639742851257324
    3. '   ' → logprob: -5.764742851257324
    4. ' in' → logprob: -6.639742851257324
    5. ' for' → logprob: -8.764742851257324
    6. '
' → logprob: -9.014742851257324
    7. 'ans' → logprob: -9.639742851257324
    8. ',' → logprob: -10.014742851257324
    9. ' ans' → logprob: -10.014742851257324
    10. '           ' → logprob: -10.889742851257324

Token 395: ' this' (ID: 495)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0005552975926548243
    2. 'n' → logprob: -7.500555515289307
    3. ' ans' → logprob: -13.250555038452148
    4. '   ' → logprob: -15.250555038452148
    5. 'node' → logprob: -15.500555038452148
    6. '	ans' → logprob: -17.00055503845215
    7. 'this' → logprob: -17.25055503845215
    8. '[n' → logprob: -17.50055503845215
    9. '(ans' → logprob: -17.75055503845215
    10. ' n' → logprob: -18.62555503845215

Token 396: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07136023044586182
    2. ' node' → logprob: -2.8213601112365723
    3. 'n' → logprob: -4.696360111236572
    4. '[node' → logprob: -9.82136058807373
    5. 'ans' → logprob: -9.94636058807373
    6. 'point' → logprob: -10.19636058807373
    7. '
' → logprob: -10.57136058807373
    8. 'index' → logprob: -10.82136058807373
    9. ' point' → logprob: -11.32136058807373
    10. ' n' → logprob: -12.32136058807373

Token 397: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06790218502283096
    2. '   ' → logprob: -2.942902088165283
    3. '
' → logprob: -4.442902088165283
    4. ' ans' → logprob: -7.567902088165283
    5. 'ans' → logprob: -7.817902088165283
    6. '        
' → logprob: -9.942902565002441
    7. '    
' → logprob: -10.192902565002441
    8. '(ans' → logprob: -10.317902565002441
    9. '	ans' → logprob: -10.567902565002441
    10. '           ' → logprob: -10.692902565002441

Token 398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0774502083659172
    2. 'ans' → logprob: -3.0774502754211426
    3. '   ' → logprob: -3.8274502754211426
    4. ' ans' → logprob: -5.077450275421143
    5. '	ans' → logprob: -8.077449798583984
    6. '(ans' → logprob: -9.327449798583984
    7. '```' → logprob: -10.702449798583984
    8. '
' → logprob: -11.327449798583984
    9. '           ' → logprob: -12.452449798583984
    10. ' ' → logprob: -13.077449798583984

Token 399: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.0021439548581838608
    2. ' ans' → logprob: -6.252143859863281
    3. '       ' → logprob: -9.002143859863281
    4. '   ' → logprob: -9.377143859863281
    5. '	ans' → logprob: -12.127143859863281
    6. '(ans' → logprob: -13.127143859863281
    7. '_ans' → logprob: -17.12714385986328
    8. 'anst' → logprob: -17.12714385986328
    9. 'answer' → logprob: -17.75214385986328
    10. '```' → logprob: -17.75214385986328

Token 400: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.375001907348633
    3. ' [' → logprob: -15.000001907348633
    4. 'n' → logprob: -16.000001907348633
    5. '```' → logprob: -16.625001907348633
    6. '\[' → logprob: -17.000001907348633
    7. '[node' → logprob: -17.375001907348633
    8. '   ' → logprob: -18.250001907348633
    9. '
' → logprob: -18.625001907348633
    10. '[
' → logprob: -18.750001907348633

Token 401: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -9.698698704596609e-05
    2. ']=' → logprob: -9.250097274780273
    3. ' ]' → logprob: -14.750097274780273
    4. '=' → logprob: -15.500097274780273
    5. ')' → logprob: -16.375097274780273
    6. ']
' → logprob: -20.375097274780273
    7. ']

' → logprob: -21.000097274780273
    8. ']+=' → logprob: -21.375097274780273
    9. ' =' → logprob: -21.625097274780273
    10. ')=' → logprob: -22.250097274780273

Token 402: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0007101670489646494
    2. ' =' → logprob: -7.2507100105285645
    3. '=p' → logprob: -16.000709533691406
    4. ']=' → logprob: -19.000709533691406
    5. '＝' → logprob: -19.000709533691406
    6. ')' → logprob: -19.375709533691406
    7. ',' → logprob: -19.500709533691406
    8. '=
' → logprob: -19.500709533691406
    9. ')=' → logprob: -19.500709533691406
    10. '=

' → logprob: -19.625709533691406

Token 403: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -2.7610454708337784e-05
    2. ' p' → logprob: -10.500027656555176
    3. '	p' → logprob: -22.75002670288086
    4. '   ' → logprob: -23.25002670288086
    5. '<p' → logprob: -23.37502670288086
    6. '(p' → logprob: -23.37502670288086
    7. '$p' → logprob: -24.62502670288086
    8. '```' → logprob: -24.87502670288086
    9. '
' → logprob: -25.00002670288086
    10. ''p' → logprob: -25.00002670288086

Token 404: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7068004012107849
    2. 'for' → logprob: -0.7068004012107849
    3. '   ' → logprob: -4.83180046081543
    4. ' for' → logprob: -5.20680046081543
    5. '	for' → logprob: -9.33180046081543
    6. '```' → logprob: -12.33180046081543
    7. ' ' → logprob: -12.45680046081543
    8. '        
' → logprob: -12.45680046081543
    9. '    
' → logprob: -12.83180046081543
    10. '
' → logprob: -12.95680046081543

Token 405: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2573534846305847
    2. 'for' → logprob: -2.0073535442352295
    3. '   ' → logprob: -2.5073535442352295
    4. ' for' → logprob: -4.50735330581665
    5. '	for' → logprob: -10.007353782653809
    6. '```' → logprob: -13.507353782653809
    7. '	   ' → logprob: -14.132353782653809
    8. '   ' → logprob: -14.257353782653809
    9. ' ' → logprob: -14.507353782653809
    10. '	' → logprob: -14.632353782653809

Token 406: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04135794937610626
    2. '       ' → logprob: -3.29135799407959
    3. ' for' → logprob: -5.79135799407959
    4. '   ' → logprob: -8.79135799407959
    5. 'dfs' → logprob: -9.79135799407959
    6. '	for' → logprob: -10.04135799407959
    7. '        
' → logprob: -13.04135799407959
    8. '    
' → logprob: -13.91635799407959
    9. '```' → logprob: -14.41635799407959
    10. ' ' → logprob: -14.66635799407959

Token 407: ' Traverse' (ID: 155771)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.978233846486546e-05
    2. '   ' → logprob: -10.250049591064453
    3. '       ' → logprob: -11.875049591064453
    4. ' for' → logprob: -12.375049591064453
    5. 'dfs' → logprob: -12.750049591064453
    6. '	for' → logprob: -16.500049591064453
    7. 'stack' → logprob: -16.500049591064453
    8. '    
' → logprob: -18.125049591064453
    9. '#' → logprob: -18.250049591064453
    10. '        
' → logprob: -18.375049591064453

Token 408: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10386054962873459
    2. ' for' → logprob: -2.35386061668396
    3. 'point' → logprob: -5.978860378265381
    4. '   ' → logprob: -6.978860378265381
    5. 'children' → logprob: -9.603860855102539
    6. ' point' → logprob: -9.978860855102539
    7. 'child' → logprob: -10.853860855102539
    8. ' children' → logprob: -11.228860855102539
    9. 're' → logprob: -11.478860855102539
    10. '       ' → logprob: -11.978860855102539

Token 409: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.37889835238456726
    2. ' child' → logprob: -1.3788983821868896
    3. 'c' → logprob: -2.8788983821868896
    4. ' c' → logprob: -5.3788981437683105
    5. 'm' → logprob: -7.2538981437683105
    6. 'v' → logprob: -7.2538981437683105
    7. ' v' → logprob: -8.378898620605469
    8. 'neighbor' → logprob: -8.878898620605469
    9. 'ch' → logprob: -9.128898620605469
    10. 'children' → logprob: -9.253898620605469

Token 410: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5029500722885132
    2. ' in' → logprob: -1.7529500722885132
    3. 'for' → logprob: -2.0029501914978027
    4. '       ' → logprob: -2.5029501914978027
    5. 'in' → logprob: -5.877950191497803
    6. ',' → logprob: -6.627950191497803
    7. ' of' → logprob: -8.502949714660645
    8. ' child' → logprob: -9.127949714660645
    9. 'n' → logprob: -9.377949714660645
    10. 'child' → logprob: -9.377949714660645

Token 411: ' passing' (ID: 21178)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13078896701335907
    2. 'dfs' → logprob: -3.130789041519165
    3. '           ' → logprob: -3.630789041519165
    4. '       ' → logprob: -3.630789041519165
    5. ' for' → logprob: -3.880789041519165
    6. '   ' → logprob: -6.380788803100586
    7. ' dfs' → logprob: -6.380788803100586
    8. '               ' → logprob: -6.755788803100586
    9. '                   ' → logprob: -8.255788803100586
    10. '                       ' → logprob: -9.880788803100586

Token 412: ' down' (ID: 1917)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.039723966270685196
    2. '(p' → logprob: -3.5397238731384277
    3. 'the' → logprob: -5.414723873138428
    4. ' p' → logprob: -6.664723873138428
    5. 'down' → logprob: -6.664723873138428
    6. '(n' → logprob: -7.039723873138428
    7. ' (' → logprob: -7.289723873138428
    8. 'dfs' → logprob: -7.914723873138428
    9. 'along' → logprob: -8.414724349975586
    10. ' the' → logprob: -9.039724349975586

Token 413: ' the' (ID: 290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.013993307948112488
    2. ' p' → logprob: -4.388993263244629
    3. ' the' → logprob: -7.513993263244629
    4. 'the' → logprob: -7.763993263244629
    5. '(p' → logprob: -8.013993263244629
    6. ' (' → logprob: -9.513993263244629
    7. '(n' → logprob: -9.638993263244629
    8. '   ' → logprob: -10.763993263244629
    9. 'n' → logprob: -11.888993263244629
    10. '(' → logprob: -12.638993263244629

Token 414: ' cumulative' (ID: 75628)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00036263695801608264
    2. ' p' → logprob: -8.000362396240234
    3. 'current' → logprob: -11.250362396240234
    4. 'c' → logprob: -13.000362396240234
    5. 'acc' → logprob: -13.125362396240234
    6. ' cumulative' → logprob: -13.500362396240234
    7. ' accumulated' → logprob: -13.500362396240234
    8. ' current' → logprob: -13.625362396240234
    9. 'value' → logprob: -13.875362396240234
    10. '   ' → logprob: -14.000362396240234

Token 415: ' sum' (ID: 4215)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.06926625967025757
    2. 'value' → logprob: -3.0692663192749023
    3. ' p' → logprob: -4.319266319274902
    4. ' value' → logprob: -4.944266319274902
    5. 'increment' → logprob: -11.694266319274902
    6. ',' → logprob: -11.819266319274902
    7. '+' → logprob: -12.694266319274902
    8. 'val' → logprob: -12.694266319274902
    9. 'space' → logprob: -13.944266319274902
    10. 'v' → logprob: -13.944266319274902

Token 416: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004058809485286474
    2. ',' → logprob: -6.629058837890625
    3. ' for' → logprob: -6.754058837890625
    4. ' to' → logprob: -7.754058837890625
    5. ' as' → logprob: -7.879058837890625
    6. '           ' → logprob: -8.629058837890625
    7. 'for' → logprob: -9.004058837890625
    8. ' in' → logprob: -9.254058837890625
    9. ' dfs' → logprob: -10.004058837890625
    10. '   ' → logprob: -10.254058837890625

Token 417: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030121387913823128
    2. ' for' → logprob: -3.530121326446533
    3. 'for' → logprob: -8.780121803283691
    4. '   ' → logprob: -9.530121803283691
    5. '        
' → logprob: -9.905121803283691
    6. '	for' → logprob: -10.280121803283691
    7. '	' → logprob: -10.655121803283691
    8. '           ' → logprob: -11.530121803283691
    9. '<|end|>' → logprob: -12.030121803283691
    10. ',' → logprob: -12.155121803283691

Token 418: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004225847311317921
    2. ' for' → logprob: -5.504225730895996
    3. '       ' → logprob: -9.129225730895996
    4. 'dfs' → logprob: -10.629225730895996
    5. '   ' → logprob: -11.254225730895996
    6. '	for' → logprob: -13.504225730895996
    7. '```' → logprob: -15.879225730895996
    8. '           ' → logprob: -16.629226684570312
    9. ' dfs' → logprob: -17.254226684570312
    10. 'd' → logprob: -17.629226684570312

Token 419: ' child' (ID: 2320)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.33325469493865967
    2. 'child' → logprob: -1.9582546949386597
    3. 'nx' → logprob: -3.583254814147949
    4. 'v' → logprob: -3.833254814147949
    5. 'ch' → logprob: -3.958254814147949
    6. 'e' → logprob: -4.208254814147949
    7. 'm' → logprob: -4.458254814147949
    8. 'i' → logprob: -4.708254814147949
    9. 'x' → logprob: -4.833254814147949
    10. 'to' → logprob: -5.083254814147949

Token 420: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759517550468445
    2. 'in' → logprob: -0.8259517550468445
    3. '	in' → logprob: -11.57595157623291
    4. ' ' → logprob: -13.20095157623291
    5. '_in' → logprob: -15.07595157623291
    6. ',' → logprob: -15.82595157623291
    7. 's' → logprob: -15.82595157623291
    8. '   ' → logprob: -16.075952529907227
    9. '  ' → logprob: -16.200952529907227
    10. 'n' → logprob: -16.325952529907227

Token 421: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.688212614681106e-05
    2. ' point' → logprob: -11.000017166137695
    3. '(point' → logprob: -16.625017166137695
    4. '	point' → logprob: -19.250017166137695
    5. 're' → logprob: -19.625017166137695
    6. '   ' → logprob: -20.250017166137695
    7. '[' → logprob: -21.000017166137695
    8. ' ' → logprob: -21.375017166137695
    9. 'range' → logprob: -22.000017166137695
    10. 'punkt' → logprob: -23.125017166137695

Token 422: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -6.2729995988775045e-06
    2. 'n' → logprob: -12.625006675720215
    3. '[' → logprob: -12.875006675720215
    4. ' [' → logprob: -16.1250057220459
    5. '[
' → logprob: -16.1250057220459
    6. '```' → logprob: -17.2500057220459
    7. '[node' → logprob: -17.6250057220459
    8. '	n' → logprob: -18.0000057220459
    9. '   ' → logprob: -18.3750057220459
    10. '<n' → logprob: -18.3750057220459

Token 423: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.412596195936203
    2. ']:
' → logprob: -1.7875962257385254
    3. '):' → logprob: -2.2875962257385254
    4. '):
' → logprob: -2.7875962257385254
    5. ':' → logprob: -5.412596225738525
    6. ':
' → logprob: -7.287596225738525
    7. ']' → logprob: -7.287596225738525
    8. ']):' → logprob: -7.662596225738525
    9. '       ' → logprob: -8.037595748901367
    10. '   ' → logprob: -8.287595748901367

Token 424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13700811564922333
    2. 'dfs' → logprob: -2.1370081901550293
    3. ' dfs' → logprob: -4.637008190155029
    4. '   ' → logprob: -8.887007713317871
    5. '       ' → logprob: -9.137007713317871
    6. '               ' → logprob: -9.762007713317871
    7. 'd' → logprob: -10.887007713317871
    8. 'df' → logprob: -12.262007713317871
    9. '          ' → logprob: -12.387007713317871
    10. '[' → logprob: -12.762007713317871

Token 425: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.003702212357893586
    2. ' dfs' → logprob: -6.003702163696289
    3. '               ' → logprob: -6.753702163696289
    4. '   ' → logprob: -10.128702163696289
    5. '           ' → logprob: -11.128702163696289
    6. '       ' → logprob: -13.628702163696289
    7. 'df' → logprob: -13.628702163696289
    8. 'd' → logprob: -14.253702163696289
    9. ' ' → logprob: -15.003702163696289
    10. 'ds' → logprob: -15.253702163696289

Token 426: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -7.743758760625497e-05
    2. '.' → logprob: -9.500077247619629
    3. 'append' → logprob: -13.000077247619629
    4. ' .' → logprob: -15.875077247619629
    5. '   ' → logprob: -16.250078201293945
    6. '.app' → logprob: -16.750078201293945
    7. '.extend' → logprob: -18.000078201293945
    8. '_append' → logprob: -18.500078201293945
    9. '	append' → logprob: -18.625078201293945
    10. 'Append' → logprob: -18.750078201293945

Token 427: '((' (ID: 2054)
  Prédit: '(child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -0.16987255215644836
    2. '(' → logprob: -1.919872522354126
    3. '((' → logprob: -4.669872760772705
    4. ' (' → logprob: -8.419872283935547
    5. '(children' → logprob: -12.544872283935547
    6. '   ' → logprob: -12.919872283935547
    7. '(
' → logprob: -14.419872283935547
    8. '(chunk' → logprob: -15.419872283935547
    9. '(chat' → logprob: -15.544872283935547
    10. '(parent' → logprob: -16.044872283935547

Token 428: 'child' (ID: 5573)
  Prédit: 'child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -4.320199877838604e-07
    2. ' child' → logprob: -14.75
    3. '(child' → logprob: -18.125
    4. '	child' → logprob: -18.75
    5. '   ' → logprob: -20.625
    6. '.child' → logprob: -22.375
    7. 'children' → logprob: -23.625
    8. 'Child' → logprob: -24.5
    9. '_child' → logprob: -24.875
    10. 'chat' → logprob: -25.875

Token 429: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000608198344707489
    2. ',p' → logprob: -7.500607967376709
    3. ' ,' → logprob: -9.875608444213867
    4. 'p' → logprob: -12.750608444213867
    5. ',
' → logprob: -14.750608444213867
    6. ' p' → logprob: -15.375608444213867
    7. '(p' → logprob: -16.375608444213867
    8. '   ' → logprob: -17.125608444213867
    9. '`,' → logprob: -17.250608444213867
    10. ' ' → logprob: -17.250608444213867

Token 430: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.007606866303831339
    2. ' p' → logprob: -4.8826069831848145
    3. '   ' → logprob: -14.382606506347656
    4. ' ' → logprob: -17.132606506347656
    5. '           ' → logprob: -17.132606506347656
    6. '    ' → logprob: -17.382606506347656
    7. '       ' → logprob: -18.257606506347656
    8. '  ' → logprob: -18.632606506347656
    9. '<p' → logprob: -18.632606506347656
    10. '	p' → logprob: -18.757606506347656

Token 431: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00012761499965563416
    2. '))
' → logprob: -9.000127792358398
    3. ' ))' → logprob: -12.875127792358398
    4. ')' → logprob: -13.750127792358398
    5. '))

' → logprob: -15.000127792358398
    6. ')))' → logprob: -15.375127792358398
    7. '));' → logprob: -16.6251277923584
    8. '   ' → logprob: -17.8751277923584
    9. '+' → logprob: -17.8751277923584
    10. '))
' → logprob: -18.1251277923584

Token 432: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5153055787086487
    2. '   ' → logprob: -1.390305519104004
    3. 'for' → logprob: -2.015305519104004
    4. ' for' → logprob: -4.265305519104004
    5. '```' → logprob: -5.765305519104004
    6. '
' → logprob: -6.390305519104004
    7. ' print' → logprob: -7.765305519104004
    8. '<|end|>' → logprob: -8.015305519104004
    9. '    
' → logprob: -8.140305519104004
    10. ')' → logprob: -8.390305519104004

Token 433: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02435520477592945
    2. ' for' → logprob: -4.524355411529541
    3. 'print' → logprob: -5.024355411529541
    4. '   ' → logprob: -5.024355411529541
    5. '```' → logprob: -10.774354934692383
    6. '
' → logprob: -10.899354934692383
    7. 'return' → logprob: -11.149354934692383
    8. '    
' → logprob: -11.649354934692383
    9. '	for' → logprob: -12.774354934692383
    10. ' print' → logprob: -13.649354934692383

Token 434: ' Output' (ID: 18315)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005685003008693457
    2. 'print' → logprob: -5.505684852600098
    3. ' for' → logprob: -6.505684852600098
    4. '   ' → logprob: -9.380684852600098
    5. 'return' → logprob: -10.755684852600098
    6. ' print' → logprob: -12.880684852600098
    7. '#' → logprob: -13.255684852600098
    8. '
' → logprob: -15.880684852600098
    9. '#print' → logprob: -16.505685806274414
    10. ' return' → logprob: -16.630685806274414

Token 435: ' the' (ID: 290)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6146394610404968
    2. '   ' → logprob: -1.4896395206451416
    3. '
' → logprob: -1.6146395206451416
    4. '('\' → logprob: -4.1146392822265625
    5. '(*' → logprob: -4.9896392822265625
    6. '("\' → logprob: -5.6146392822265625
    7. 'print' → logprob: -6.2396392822265625
    8. '\n' → logprob: -6.6146392822265625
    9. ' for' → logprob: -6.7396392822265625
    10. '*' → logprob: -6.9896392822265625

Token 436: ' answer' (ID: 6052)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6836051940917969
    2. ''' → logprob: -0.8086051940917969
    3. 'ans' → logprob: -4.433605194091797
    4. 'print' → logprob: -4.558605194091797
    5. '*' → logprob: -5.183605194091797
    6. 'final' → logprob: -5.558605194091797
    7. 'result' → logprob: -5.933605194091797
    8. ' "' → logprob: -6.183605194091797
    9. 'for' → logprob: -6.308605194091797
    10. '
' → logprob: -6.308605194091797

Token 437: ' as' (ID: 472)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0195087268948555
    2. 'for' → logprob: -4.0195088386535645
    3. ' for' → logprob: -6.6445088386535645
    4. 'print' → logprob: -10.269508361816406
    5. '
' → logprob: -11.019508361816406
    6. '    
' → logprob: -12.394508361816406
    7. '```' → logprob: -14.269508361816406
    8. '	for' → logprob: -14.894508361816406
    9. '       ' → logprob: -15.519508361816406
    10. '\n' → logprob: -16.394508361816406

Token 438: ' space' (ID: 4918)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21381589770317078
    2. 'print' → logprob: -1.7138159275054932
    3. '"' → logprob: -4.713815689086914
    4. ' print' → logprob: -5.838815689086914
    5. ' '' → logprob: -8.963815689086914
    6. 'list' → logprob: -9.088815689086914
    7. '   ' → logprob: -9.713815689086914
    8. ''s' → logprob: -9.963815689086914
    9. ' ' → logprob: -10.588815689086914
    10. ' list' → logprob: -10.713815689086914

Token 439: '-separated' (ID: 189658)
  Prédit: '.join'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.4899161159992218
    2. 'print' → logprob: -1.2399160861968994
    3. 'join' → logprob: -2.4899160861968994
    4. '.' → logprob: -4.4899163246154785
    5. ' join' → logprob: -6.3649163246154785
    6. ''' → logprob: -7.4899163246154785
    7. '.print' → logprob: -7.4899163246154785
    8. ' print' → logprob: -7.6149163246154785
    9. ' .' → logprob: -8.11491584777832
    10. '"' → logprob: -10.11491584777832

Token 440: ' values' (ID: 4824)
  Prédit: 'inte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inte' → logprob: -0.3578815758228302
    2. 'values' → logprob: -1.6078815460205078
    3. 'print' → logprob: -2.607881546020508
    4. ' integers' → logprob: -3.857881546020508
    5. ' values' → logprob: -5.357881546020508
    6. 'numbers' → logprob: -7.357881546020508
    7. 'ints' → logprob: -8.607881546020508
    8. 'strings' → logprob: -9.357881546020508
    9. ' print' → logprob: -9.607881546020508
    10. 'ans' → logprob: -10.607881546020508

Token 441: '.
' (ID: 558)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00035119339008815587
    2. ' print' → logprob: -8.750350952148438
    3. '
' → logprob: -9.250350952148438
    4. '   ' → logprob: -9.250350952148438
    5. '    
' → logprob: -14.875350952148438
    6. '```' → logprob: -16.250350952148438
    7. ' 
' → logprob: -17.750350952148438
    8. ')
' → logprob: -18.375350952148438
    9. ',' → logprob: -18.500350952148438
    10. 'for' → logprob: -18.875350952148438

Token 442: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0002631238894537091
    2. ' print' → logprob: -8.250263214111328
    3. '   ' → logprob: -13.250263214111328
    4. '```' → logprob: -18.750263214111328
    5. 'for' → logprob: -19.000263214111328
    6. '
' → logprob: -19.625263214111328
    7. '    
' → logprob: -21.000263214111328
    8. '`' → logprob: -21.375263214111328
    9. '	print' → logprob: -22.000263214111328
    10. ' 
' → logprob: -23.125263214111328

Token 443: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.088346359931165e-07
    2. ' print' → logprob: -14.250000953674316
    3. '   ' → logprob: -15.500000953674316
    4. '```' → logprob: -21.875
    5. '    
' → logprob: -22.875
    6. '
' → logprob: -22.875
    7. 'for' (adapté à ' for') → logprob: -24.125
    8. '`' → logprob: -25.25
    9. '	print' → logprob: -25.625
    10. ' ' → logprob: -27.5

Token 444: ' a' (ID: 261)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.33089643716812134
    2. 'a' → logprob: -2.4558963775634766
    3. 'i' → logprob: -2.8308963775634766
    4. 'val' → logprob: -2.8308963775634766
    5. 'x' → logprob: -3.2058963775634766
    6. 'ans' → logprob: -3.9558963775634766
    7. 'value' → logprob: -4.080896377563477
    8. 'num' → logprob: -6.955896377563477
    9. ' v' → logprob: -9.080896377563477
    10. 'node' → logprob: -9.455896377563477

Token 445: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002491706982254982
    2. 'in' → logprob: -6.002491474151611
    3. 'n' → logprob: -11.62749195098877
    4. ' ' → logprob: -12.12749195098877
    5. '  ' → logprob: -14.75249195098877
    6. ' n' → logprob: -15.00249195098877
    7. 'a' → logprob: -15.25249195098877
    8. ' i' → logprob: -15.50249195098877
    9. '   ' → logprob: -15.62749195098877
    10. 'print' → logprob: -16.127490997314453

Token 446: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0445127372804563e-05
    2. ' ans' → logprob: -11.50001049041748
    3. '(ans' → logprob: -15.25001049041748
    4. 'print' → logprob: -17.000009536743164
    5. 'answer' → logprob: -18.875009536743164
    6. '	ans' → logprob: -20.625009536743164
    7. '_ans' → logprob: -20.875009536743164
    8. 'range' → logprob: -21.250009536743164
    9. '   ' → logprob: -21.625009536743164
    10. 'a' → logprob: -23.125009536743164

Token 447: ':
' (ID: 734)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16407082974910736
    2. ':' → logprob: -2.0390708446502686
    3. '.print' → logprob: -5.0390706062316895
    4. '   ' → logprob: -5.0390706062316895
    5. ' print' → logprob: -5.0390706062316895
    6. ':
' → logprob: -7.0390706062316895
    7. ',' → logprob: -7.7890706062316895
    8. '       ' → logprob: -8.789071083068848
    9. '_print' → logprob: -9.914071083068848
    10. '(print' → logprob: -9.914071083068848

Token 448: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06745453923940659
    2. ' print' → logprob: -3.3174545764923096
    3. '       ' → logprob: -3.5674545764923096
    4. '   ' → logprob: -7.1924543380737305
    5. '	print' → logprob: -12.56745433807373
    6. '```' → logprob: -14.31745433807373
    7. '.print' → logprob: -14.69245433807373
    8. 'printf' → logprob: -16.067455291748047
    9. '           ' → logprob: -16.192455291748047
    10. '    ' → logprob: -16.942455291748047

Token 449: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: 0.0
    2. ' print' → logprob: -18.75
    3. '   ' → logprob: -21.0
    4. 'printf' → logprob: -22.0
    5. '	print' → logprob: -26.625
    6. '       ' → logprob: -27.125
    7. '_print' → logprob: -27.625
    8. 'pr' → logprob: -27.875
    9. '.print' → logprob: -28.125
    10. '#print' → logprob: -28.875

Token 450: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0005577972042374313
    2. 'a' → logprob: -7.500557899475098
    3. '(f' → logprob: -12.500557899475098
    4. '(' → logprob: -13.750557899475098
    5. ' a' → logprob: -18.00055694580078
    6. 'f' → logprob: -18.62555694580078
    7. ' (' → logprob: -19.50055694580078
    8. '(
' → logprob: -21.25055694580078
    9. '()' → logprob: -21.50055694580078
    10. '("{}' → logprob: -21.62555694580078

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12720830738544464
    2. ')' → logprob: -2.3772082328796387
    3. ',end' → logprob: -3.6272082328796387
    4. ',)' → logprob: -10.627208709716797
    5. ',a' → logprob: -11.127208709716797
    6. ' ,' → logprob: -12.252208709716797
    7. '(),' → logprob: -13.752208709716797
    8. 'end' → logprob: -13.877208709716797
    9. '(' → logprob: -14.002208709716797
    10. ',b' → logprob: -14.502208709716797

Token 452: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.005243122112005949
    2. ' end' → logprob: -5.255243301391602
    3. ',end' → logprob: -12.005243301391602
    4. ''end' → logprob: -13.380243301391602
    5. '(end' → logprob: -13.755243301391602
    6. ')' → logprob: -14.505243301391602
    7. '	end' → logprob: -17.0052433013916
    8. ',' → logprob: -17.5052433013916
    9. '=end' → logprob: -17.5052433013916
    10. ''' → logprob: -18.5052433013916

Token 453: '='' (ID: 2053)
  Prédit: '=''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '='' → logprob: -0.0066100917756557465
    2. '=' → logprob: -5.506609916687012
    3. '="' → logprob: -6.006609916687012
    4. ''' → logprob: -9.756609916687012
    5. '"' → logprob: -11.756609916687012
    6. '('' → logprob: -16.256610870361328
    7. '=
' → logprob: -16.881610870361328
    8. '=('' → logprob: -17.506610870361328
    9. ')' → logprob: -17.756610870361328
    10. '=

' → logprob: -17.881610870361328

Token 454: ' ')
' (ID: 49195)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.35827022790908813
    2. ' ' → logprob: -1.2332701683044434
    3. ' '' → logprob: -4.733270168304443
    4. ' )' → logprob: -7.733270168304443
    5. ' ')' → logprob: -7.858270168304443
    6. '"' → logprob: -8.983270645141602
    7. ')' → logprob: -11.108270645141602
    8. ' ' → logprob: -12.233270645141602
    9. '')' → logprob: -12.358270645141602
    10. ' "' → logprob: -13.733270645141602

Token 455: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: ' print' (ID: 2123)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8163701891899109
    2. '<|end|>' → logprob: -1.0663702487945557
    3. '\n' → logprob: -1.5663702487945557
    4. '```' → logprob: -6.191370010375977
    5. ' ' → logprob: -7.816370010375977
    6. ')' → logprob: -7.941370010375977
    7. ' 
' → logprob: -7.941370010375977
    8. '\' → logprob: -8.066370010375977
    9. '<|end|>' → logprob: -8.316370010375977
    10. '    
' → logprob: -8.816370010375977

Token 457: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.690834273584187e-05
    2. '(' → logprob: -10.87503719329834
    3. '()
' → logprob: -11.12503719329834
    4. '()\' → logprob: -12.87503719329834
    5. ' ()' → logprob: -15.00003719329834
    6. '()

' → logprob: -16.500036239624023
    7. '()`' → logprob: -16.625036239624023
    8. '("")' → logprob: -17.000036239624023
    9. '\' → logprob: -18.125036239624023
    10. '())' → logprob: -18.375036239624023

Token 458: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.048605531454086304
    2. '__' → logprob: -3.048605442047119
    3. '_' → logprob: -11.298605918884277
    4. '_name' → logprob: -12.923605918884277
    5. ' _' → logprob: -13.298605918884277
    6. '___' → logprob: -14.673605918884277
    7. ' ' → logprob: -14.673605918884277
    8. ' ' → logprob: -14.923605918884277
    9. 'name' → logprob: -15.548605918884277
    10. ' ___' → logprob: -16.79860496520996

Token 460: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0841539055109024
    2. ' ==' → logprob: -2.834153890609741
    3. '==' → logprob: -3.959153890609741
    4. ' __' → logprob: -6.08415412902832
    5. 'name' → logprob: -7.70915412902832
    6. '=="' → logprob: -10.70915412902832
    7. '_' → logprob: -11.08415412902832
    8. 'if' → logprob: -11.33415412902832
    9. '=' → logprob: -11.45915412902832
    10. 'main' → logprob: -11.70915412902832

Token 461: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.696889623621246e-06
    2. '==' → logprob: -12.87500286102295
    3. '_' → logprob: -17.375001907348633
    4. '____' → logprob: -17.500001907348633
    5. '___' → logprob: -17.625001907348633
    6. '__.__' → logprob: -17.875001907348633
    7. ' ==' → logprob: -19.125001907348633
    8. '=="' → logprob: -19.625001907348633
    9. '__[' → logprob: -19.750001907348633
    10. '__.' → logprob: -19.875001907348633

Token 462: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2840953767299652
    2. '__' → logprob: -1.5340954065322876
    3. ' ==' → logprob: -3.659095287322998
    4. '=="' → logprob: -5.659095287322998
    5. '=='' → logprob: -6.034095287322998
    6. '=' → logprob: -11.784095764160156
    7. '==
' → logprob: -12.534095764160156
    8. '===' → logprob: -13.534095764160156
    9. '_' → logprob: -14.034095764160156
    10. '"' → logprob: -14.159095764160156

Token 463: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0040835049003362656
    2. ''' → logprob: -5.504083633422852
    3. ' "__' → logprob: -12.879083633422852
    4. '__' → logprob: -13.004083633422852
    5. '"name' → logprob: -16.00408363342285
    6. '"user' → logprob: -17.00408363342285
    7. '"class' → logprob: -17.50408363342285
    8. '("__' → logprob: -17.87908363342285
    9. '"_' → logprob: -18.12908363342285
    10. '"'' → logprob: -18.12908363342285

Token 464: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0280383548888494e-06
    2. 'name' → logprob: -14.375000953674316
    3. '__' → logprob: -15.250000953674316
    4. '"' → logprob: -15.625000953674316
    5. ' main' → logprob: -17.750001907348633
    6. '_main' → logprob: -18.625001907348633
    7. 'ma' → logprob: -19.125001907348633
    8. ''' → logprob: -19.375001907348633
    9. '	main' → logprob: -19.750001907348633
    10. 'built' → logprob: -19.875001907348633

Token 465: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.16262029111385345
    2. '__' → logprob: -1.9126203060150146
    3. '__':
' → logprob: -6.0376200675964355
    4. '__:' → logprob: -13.037620544433594
    5. '__.' → logprob: -13.537620544433594
    6. '==' → logprob: -14.162620544433594
    7. '__["' → logprob: -14.537620544433594
    8. ' ==' → logprob: -15.162620544433594
    9. '__.__' → logprob: -15.412620544433594
    10. '_' → logprob: -15.537620544433594

Token 466: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001129602751461789
    2. '   ' → logprob: -9.500112533569336
    3. ' main' → logprob: -10.250112533569336
    4. '	main' → logprob: -12.875112533569336
    5. '_main' → logprob: -15.375112533569336
    6. 'Main' → logprob: -19.500112533569336
    7. '__' → logprob: -19.750112533569336
    8. '.main' → logprob: -19.875112533569336
    9. '    
' → logprob: -20.125112533569336
    10. '(main' → logprob: -20.250112533569336

Token 467: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.0
    3. '	main' → logprob: -23.75
    4. '_main' → logprob: -25.0
    5. 'import' → logprob: -26.5
    6. '.main' → logprob: -26.875
    7. '   ' → logprob: -27.0
    8. '(main' → logprob: -27.25
    9. 'Main' → logprob: -27.875
    10. '主' → logprob: -29.875

Token 468: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 466
Tokens correctement prédits (1ère position, stricte): 144
Tokens correctement prédits (1ère position, avec adaptation): 161
Tokens correctement prédits (top 10): 341
Précision stricte (1ère position): 30.90%
Précision adaptée (1ère position): 34.55%
Précision (top 10): 73.18%
================================================================================
