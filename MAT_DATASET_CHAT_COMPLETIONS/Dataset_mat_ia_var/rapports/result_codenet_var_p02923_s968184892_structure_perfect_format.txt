================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
h = list(map(int, input().split()))

cnt = 0
cache = 0
last = h[0]
for x in h[1:]:
    if last >= x:
        cnt += 1
    else:
        cnt = 0
    if cache < cnt:
        cache = cnt
    last = x

print(cache)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'h' (ID: 71)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6515942215919495
    2. 'for' → logprob: -1.4015941619873047
    3. 'i' → logprob: -2.1515941619873047
    4. 's' → logprob: -2.7765941619873047
    5. 'x' → logprob: -4.651594161987305
    6. ')' → logprob: -5.151594161987305
    7. 'a' → logprob: -5.401594161987305
    8. '*' → logprob: -5.401594161987305
    9. ' ' → logprob: -5.651594161987305
    10. 'f' → logprob: -5.901594161987305

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16057433187961578
    2. 'e' → logprob: -2.410574436187744
    3. '[i' → logprob: -3.160574436187744
    4. 'i' → logprob: -5.285574436187744
    5. ' =' → logprob: -6.160574436187744
    6. 'a' → logprob: -6.160574436187744
    7. '=' → logprob: -6.660574436187744
    8. '[e' → logprob: -6.785574436187744
    9. 't' → logprob: -7.410574436187744
    10. ')' → logprob: -7.410574436187744

Token 7: ' list' (ID: 1562)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8353172540664673
    2. 'n' → logprob: -1.8353172540664673
    3. '[int' → logprob: -1.9603172540664673
    4. ' [' → logprob: -2.0853171348571777
    5. '[]' → logprob: -2.2103171348571777
    6. ' n' → logprob: -2.3353171348571777
    7. '[' → logprob: -2.8353171348571777
    8. ' []' → logprob: -3.2103171348571777
    9. 'int' → logprob: -3.4603171348571777
    10. ' ' → logprob: -3.5853171348571777

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005399276851676404
    2. '(range' → logprob: -8.250539779663086
    3. '()' → logprob: -9.500539779663086
    4. '(h' → logprob: -9.625539779663086
    5. '(open' → logprob: -11.000539779663086
    6. ' (' → logprob: -11.250539779663086
    7. '(n' → logprob: -11.375539779663086
    8. '((' → logprob: -11.625539779663086
    9. '(input' → logprob: -11.875539779663086
    10. '("("' → logprob: -11.875539779663086

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0709153488278389
    2. '(' → logprob: -2.820915460586548
    3. '(str' → logprob: -4.945915222167969
    4. '(input' → logprob: -7.570915222167969
    5. '(lambda' → logprob: -7.695915222167969
    6. '<int' → logprob: -8.445915222167969
    7. 'int' → logprob: -8.445915222167969
    8. ')' → logprob: -9.195915222167969
    9. '(eval' → logprob: -9.445915222167969
    10. '=int' → logprob: -9.570915222167969

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01215958222746849
    2. '(' → logprob: -4.51215934753418
    3. ',input' → logprob: -7.51215934753418
    4. ')' → logprob: -9.01215934753418
    5. '))' → logprob: -9.01215934753418
    6. '(int' → logprob: -9.51215934753418
    7. ',' → logprob: -10.01215934753418
    8. '=input' → logprob: -10.38715934753418
    9. '(eval' → logprob: -10.38715934753418
    10. 'input' → logprob: -10.63715934753418

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25211355090141296
    2. ' input' → logprob: -1.5021135807037354
    3. '(input' → logprob: -8.752113342285156
    4. ',input' → logprob: -11.377113342285156
    5. ')' → logprob: -11.502113342285156
    6. ' ' → logprob: -13.377113342285156
    7. '=input' → logprob: -13.752113342285156
    8. '	input' → logprob: -14.627113342285156
    9. '[input' → logprob: -15.252113342285156
    10. 'range' → logprob: -15.377113342285156

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6236603260040283
    2. '()' → logprob: -1.3736603260040283
    3. '())' → logprob: -1.7486603260040283
    4. '().' → logprob: -3.3736603260040283
    5. '(' → logprob: -7.373660087585449
    6. '()));' → logprob: -7.373660087585449
    7. ')' → logprob: -7.748660087585449
    8. '))' → logprob: -8.12366008758545
    9. '()>' → logprob: -8.62366008758545
    10. '())))' → logprob: -9.24866008758545

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021438424300868064
    2. 'strip' → logprob: -8.500214576721191
    3. 'rstrip' → logprob: -11.625214576721191
    4. ' split' → logprob: -13.375214576721191
    5. '(split' → logprob: -15.000214576721191
    6. 'spl' → logprob: -16.625213623046875
    7. ')' → logprob: -17.500213623046875
    8. 's' → logprob: -18.875213623046875
    9. 'read' → logprob: -19.375213623046875
    10. 'startswith' → logprob: -19.625213623046875

Token 14: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.40011483430862427
    2. ')' → logprob: -1.6501147747039795
    3. '()))' → logprob: -2.2751147747039795
    4. '())' → logprob: -3.9001147747039795
    5. '(' → logprob: -4.275115013122559
    6. '()' → logprob: -8.025115013122559
    7. '('' → logprob: -9.025115013122559
    8. ')))' → logprob: -9.025115013122559
    9. ''))' → logprob: -10.275115013122559
    10. '(','' → logprob: -10.775115013122559

Token 15: 'cnt' (ID: 33160)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4151635468006134
    2. 'max' → logprob: -1.790163516998291
    3. 'h' → logprob: -2.665163516998291
    4. 'ans' → logprob: -3.915163516998291
    5. 'count' → logprob: -4.415163516998291
    6. 'res' → logprob: -4.665163516998291
    7. 'd' → logprob: -4.665163516998291
    8. 'result' → logprob: -4.790163516998291
    9. 'c' → logprob: -5.040163516998291
    10. 'answer' → logprob: -5.290163516998291

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10838387906551361
    2. '_' → logprob: -2.483383893966675
    3. '[' → logprob: -4.358383655548096
    4. '=' → logprob: -5.233383655548096
    5. ' =' → logprob: -8.483384132385254
    6. ' ' → logprob: -8.608384132385254
    7. ' +=' → logprob: -8.608384132385254
    8. ')' → logprob: -9.108384132385254
    9. ' (' → logprob: -9.108384132385254
    10. '+' → logprob: -9.358384132385254

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1428789496421814
    2. ' ' → logprob: -2.017879009246826
    3. '1' → logprob: -8.517878532409668
    4. ' n' → logprob: -14.017878532409668
    5. ' ' → logprob: -14.267878532409668
    6. 'n' → logprob: -14.517878532409668
    7. ' h' → logprob: -15.267878532409668
    8. '`' → logprob: -15.392878532409668
    9. 'len' → logprob: -15.705378532409668
    10. '  ' → logprob: -15.705378532409668

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013480921043083072
    2. '1' → logprob: -6.62634801864624
    3. ' ' → logprob: -11.626348495483398
    4. '[' → logprob: -12.251348495483398
    5. 'len' → logprob: -13.001348495483398
    6. 'n' → logprob: -13.001348495483398
    7. '{' → logprob: -14.126348495483398
    8. 'h' → logprob: -14.376348495483398
    9. '{}' → logprob: -14.376348495483398
    10. '(' → logprob: -15.251348495483398

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5333248376846313
    2. '
' → logprob: -1.7833248376846313
    3. ' for' → logprob: -1.9083248376846313
    4. '\n' → logprob: -2.408324718475342
    5. '<|end|>' → logprob: -5.908324718475342
    6. '```' → logprob: -6.658324718475342
    7. 'n' → logprob: -7.408324718475342
    8. ' ' → logprob: -7.408324718475342
    9. ' 
' → logprob: -7.658324718475342
    10. '\' → logprob: -7.658324718475342

Token 20: 'cache' (ID: 18949)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001959201879799366
    2. '```' → logprob: -6.376959323883057
    3. ' for' → logprob: -8.876958847045898
    4. '``' → logprob: -10.126958847045898
    5. 'i' → logprob: -10.501958847045898
    6. '\n' → logprob: -10.626958847045898
    7. '
' → logprob: -11.126958847045898
    8. '`' → logprob: -12.126958847045898
    9. 'prev' → logprob: -12.876958847045898
    10. '\' → logprob: -13.751958847045898

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07262822985649109
    2. ' =' → logprob: -3.4476282596588135
    3. '_' → logprob: -3.6976282596588135
    4. '=' → logprob: -4.822628021240234
    5. '[]' → logprob: -6.072628021240234
    6. '[:]' → logprob: -6.447628021240234
    7. '.setdefault' → logprob: -7.822628021240234
    8. '.append' → logprob: -8.447628021240234
    9. ' ' → logprob: -8.947628021240234
    10. '.' → logprob: -8.947628021240234

Token 22: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.3965485692024231
    2. ' {}' → logprob: -1.8965485095977783
    3. ' []' → logprob: -2.1465485095977783
    4. '[]' → logprob: -2.8965485095977783
    5. ' [' → logprob: -5.896548748016357
    6. '[' → logprob: -6.396548748016357
    7. ' set' → logprob: -8.0215482711792
    8. 'set' → logprob: -8.2715482711792
    9. 'dict' → logprob: -9.6465482711792
    10. ' ' → logprob: -10.1465482711792

Token 23: '0' (ID: 15)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.14119653403759003
    2. '[]' → logprob: -2.3911964893341064
    3. '[' → logprob: -3.2661964893341064
    4. '[-' → logprob: -7.1411967277526855
    5. 'set' → logprob: -7.5161967277526855
    6. '{' → logprob: -7.8911967277526855
    7. '0' → logprob: -9.141196250915527
    8. 'dict' → logprob: -9.516196250915527
    9. ' {}' → logprob: -10.891196250915527
    10. '{}
' → logprob: -11.016196250915527

Token 24: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2143770456314087
    2. ' for' → logprob: -1.8393770456314087
    3. '
' → logprob: -3.589376926422119
    4. '\n' → logprob: -5.089376926422119
    5. ' 
' → logprob: -9.339377403259277
    6. '<|end|>' → logprob: -9.464377403259277
    7. '```' → logprob: -9.964377403259277
    8. '\' → logprob: -11.214377403259277
    9. '' → logprob: -11.964377403259277
    10. ' ' → logprob: -12.214377403259277

Token 25: 'last' (ID: 6684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017348088324069977
    2. ' for' → logprob: -4.142348289489746
    3. '
' → logprob: -6.767348289489746
    4. '\n' → logprob: -8.892348289489746
    5. '<|end|>' → logprob: -12.142348289489746
    6. '```' → logprob: -12.267348289489746
    7. ' 
' → logprob: -12.642348289489746
    8. '' → logprob: -12.892348289489746
    9. 'n' → logprob: -13.267348289489746
    10. ')' → logprob: -13.892348289489746

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6161044836044312
    2. '_' → logprob: -1.1161044836044312
    3. '=' → logprob: -2.3661046028137207
    4. '_height' → logprob: -3.6161046028137207
    5. '_index' → logprob: -5.866104602813721
    6. '_idx' → logprob: -6.366104602813721
    7. '_val' → logprob: -6.616104602813721
    8. '_h' → logprob: -7.116104602813721
    9. '_space' → logprob: -7.491104602813721
    10. '_pos' → logprob: -7.616104602813721

Token 27: ' h' (ID: 312)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.010595440864563
    2. '-' → logprob: -1.385595440864563
    3. '0' → logprob: -1.635595440864563
    4. ' ' → logprob: -2.0105953216552734
    5. 'h' → logprob: -3.1355953216552734
    6. ' h' → logprob: -4.510595321655273
    7. ' None' → logprob: -6.885595321655273
    8. 'None' → logprob: -7.135595321655273
    9. '100' → logprob: -8.385595321655273
    10. 'n' → logprob: -9.010595321655273

Token 28: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.582260251045227
    2. '[-' → logprob: -0.832260251045227
    3. '[:]' → logprob: -5.7072601318359375
    4. '[len' → logprob: -6.9572601318359375
    5. '[last' → logprob: -7.5822601318359375
    6. '[n' → logprob: -8.582260131835938
    7. '[]' → logprob: -8.832260131835938
    8. '[count' → logprob: -8.832260131835938
    9. '[cnt' → logprob: -8.832260131835938
    10. '[:' → logprob: -9.207260131835938

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.010712926276028156
    2. '-' → logprob: -4.63571310043335
    3. 'cnt' → logprob: -7.38571310043335
    4. 'cache' → logprob: -9.385712623596191
    5. ' ' → logprob: -9.635712623596191
    6. ' -' → logprob: -9.760712623596191
    7. '1' → logprob: -10.135712623596191
    8. '])' → logprob: -10.135712623596191
    9. 'len' → logprob: -11.385712623596191
    10. ']' → logprob: -11.385712623596191

Token 30: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24943728744983673
    2. ']' → logprob: -1.6244373321533203
    3. '])' → logprob: -3.8744373321533203
    4. ' )' → logprob: -6.24943733215332
    5. '+' → logprob: -7.87443733215332
    6. ' ]' → logprob: -8.62443733215332
    7. ' ])' → logprob: -8.99943733215332
    8. ']+' → logprob: -9.24943733215332
    9. '-' → logprob: -9.74943733215332
    10. ')]' → logprob: -9.87443733215332

Token 31: 'for' (ID: 1938)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.47147366404533386
    2. '
' → logprob: -1.5964736938476562
    3. '<|end|>' → logprob: -2.9714736938476562
    4. ':' → logprob: -3.2214736938476562
    5. '```' → logprob: -3.2214736938476562
    6. ' 
' → logprob: -3.5964736938476562
    7. '\' → logprob: -5.721473693847656
    8. ':
' → logprob: -5.846473693847656
    9. ' for' → logprob: -6.221473693847656
    10. '  
' → logprob: -6.346473693847656

Token 32: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2200174331665039
    2. ' ' → logprob: -1.845017433166504
    3. ' _' → logprob: -3.970017433166504
    4. ' h' → logprob: -4.470017433166504
    5. '_' → logprob: -4.845017433166504
    6. '  ' → logprob: -7.845017433166504
    7. ' x' → logprob: -8.220017433166504
    8. 'i' → logprob: -8.470017433166504
    9. ' item' → logprob: -8.720017433166504
    10. ' n' → logprob: -9.845017433166504

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018172068521380424
    2. 'in' → logprob: -4.018172264099121
    3. ' ' → logprob: -11.018172264099121
    4. 's' → logprob: -13.143172264099121
    5. ',' → logprob: -14.518172264099121
    6. 'n' → logprob: -14.518172264099121
    7. '	in' → logprob: -14.518172264099121
    8. 'import' → logprob: -15.455672264099121
    9. ' ' → logprob: -15.705672264099121
    10. ' ,' → logprob: -15.705672264099121

Token 34: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.16065484285354614
    2. 'h' → logprob: -1.9106547832489014
    3. ' range' → logprob: -7.9106550216674805
    4. 'range' → logprob: -9.91065502166748
    5. '(h' → logprob: -12.41065502166748
    6. '[h' → logprob: -12.41065502166748
    7. 's' → logprob: -13.53565502166748
    8. '	h' → logprob: -14.16065502166748
    9. ' ' → logprob: -14.28565502166748
    10. ':h' → logprob: -14.84815502166748

Token 35: '[' (ID: 58)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006209735292941332
    2. '[' → logprob: -5.131209850311279
    3. ' :' → logprob: -8.756209373474121
    4. ':
' → logprob: -9.756209373474121
    5. '>' → logprob: -10.006209373474121
    6. '>:' → logprob: -12.506209373474121
    7. '):' → logprob: -13.131209373474121
    8. '[:' → logprob: -13.256209373474121
    9. ' >' → logprob: -13.256209373474121
    10. ' in' → logprob: -13.506209373474121

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015043997205793858
    2. ':' → logprob: -4.265044212341309
    3. '):' → logprob: -7.640044212341309
    4. ']:' → logprob: -8.890044212341309
    5. ']):' → logprob: -9.140044212341309
    6. ' :' → logprob: -9.765044212341309
    7. ' ' → logprob: -10.015044212341309
    8. ':]' → logprob: -11.265044212341309
    9. ' ):' → logprob: -11.515044212341309
    10. '   ' → logprob: -12.390044212341309

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8978129029273987
    2. '):' → logprob: -0.8978129029273987
    3. ' ):' → logprob: -2.022812843322754
    4. ' :' → logprob: -3.022812843322754
    5. ')' → logprob: -6.147812843322754
    6. ']:' → logprob: -6.772812843322754
    7. ' )' → logprob: -8.897812843322754
    8. ',' → logprob: -8.897812843322754
    9. '>:' → logprob: -9.272812843322754
    10. ' in' → logprob: -9.397812843322754

Token 38: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.25422242283821106
    2. ':' → logprob: -1.8792223930358887
    3. ' ):' → logprob: -3.0042223930358887
    4. ']:' → logprob: -4.004222393035889
    5. ')' → logprob: -6.254222393035889
    6. ' :' → logprob: -6.754222393035889
    7. '):
' → logprob: -8.754222869873047
    8. ']):' → logprob: -8.754222869873047
    9. ']' → logprob: -9.379222869873047
    10. '}:' → logprob: -9.504222869873047

Token 39: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.050382211804389954
    2. ' ' → logprob: -3.925382137298584
    3. ' if' → logprob: -4.550382137298584
    4. '   ' → logprob: -4.925382137298584
    5. '```' → logprob: -5.300382137298584
    6. '    
' → logprob: -5.550382137298584
    7. '<|end|>' → logprob: -7.550382137298584
    8. '   
' → logprob: -7.675382137298584
    9. '  
' → logprob: -7.675382137298584
    10. ' 
 
' → logprob: -8.425382614135742

Token 40: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26813098788261414
    2. ' if' → logprob: -1.7681310176849365
    3. ' 
' → logprob: -3.1431310176849365
    4. '    ' → logprob: -4.268130779266357
    5. 'if' (adapté à ' if') → logprob: -6.143130779266357
    6. '<|end|>' → logprob: -6.268130779266357
    7. '```' → logprob: -6.643130779266357
    8. '   ' → logprob: -7.393130779266357
    9. ' ```' → logprob: -8.018131256103516
    10. '     
' → logprob: -8.143131256103516

Token 41: ' last' (ID: 2174)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.01848914474248886
    2. 'x' → logprob: -4.018489360809326
    3. ' ' → logprob: -8.518488883972168
    4. ' last' → logprob: -9.018488883972168
    5. 'last' → logprob: -12.143488883972168
    6. ' abs' → logprob: -12.143488883972168
    7. ' (' → logprob: -13.018488883972168
    8. 'abs' → logprob: -13.518488883972168
    9. ' ' → logprob: -13.518488883972168
    10. '(x' → logprob: -14.143488883972168

Token 42: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4437628388404846
    2. '<' → logprob: -1.9437627792358398
    3. ' >' → logprob: -2.19376277923584
    4. '>' → logprob: -2.69376277923584
    5. ' <=' → logprob: -4.31876277923584
    6. ' >=' → logprob: -4.81876277923584
    7. '<=' → logprob: -5.31876277923584
    8. ' ==' → logprob: -5.69376277923584
    9. '>=' → logprob: -5.81876277923584
    10. '==' → logprob: -6.06876277923584

Token 43: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061975300312042236
    2. ' x' → logprob: -2.8119752407073975
    3. ' ' → logprob: -12.561975479125977
    4. '0' → logprob: -12.811975479125977
    5. '	x' → logprob: -15.061975479125977
    6. '1' → logprob: -15.061975479125977
    7. '2' → logprob: -15.436975479125977
    8. '   ' → logprob: -16.186975479125977
    9. '6' → logprob: -16.686975479125977
    10. '>x' → logprob: -16.811975479125977

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0962342619895935
    2. ':
' → logprob: -2.4712343215942383
    3. '   ' → logprob: -5.971234321594238
    4. '       ' → logprob: -6.471234321594238
    5. ' and' → logprob: -6.846234321594238
    6. ' :' → logprob: -7.471234321594238
    7. '+' → logprob: -7.471234321594238
    8. '    ' → logprob: -7.721234321594238
    9. ' :
' → logprob: -8.471234321594238
    10. ' +' → logprob: -9.096234321594238

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011355140246450901
    2. '   ' → logprob: -5.636354923248291
    3. '\n' → logprob: -5.761354923248291
    4. '1' → logprob: -6.011354923248291
    5. ' ' → logprob: -8.13635540008545
    6. '0' → logprob: -8.38635540008545
    7. '        
' → logprob: -8.51135540008545
    8. ' 
' → logprob: -9.13635540008545
    9. '```' → logprob: -9.13635540008545
    10. ' cnt' → logprob: -9.26135540008545

Token 46: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.038484130054712296
    2. ' cnt' → logprob: -3.5384840965270996
    3. '   ' → logprob: -5.0384840965271
    4. 'cache' → logprob: -6.5384840965271
    5. '	cnt' → logprob: -7.6634840965271
    6. '1' → logprob: -9.788484573364258
    7. '```' → logprob: -10.163484573364258
    8. ' cache' → logprob: -10.288484573364258
    9. '       ' → logprob: -10.538484573364258
    10. 'count' → logprob: -10.538484573364258

Token 47: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0019489870173856616
    2. '+=' → logprob: -6.251948833465576
    3. ' =' → logprob: -11.751949310302734
    4. '+' → logprob: -12.001949310302734
    5. ' +' → logprob: -12.126949310302734
    6. '=' → logprob: -15.001949310302734
    7. ' ' → logprob: -15.251949310302734
    8. ' -=' → logprob: -15.251949310302734
    9. ']+=' → logprob: -17.126949310302734
    10. '<|end|>' → logprob: -18.251949310302734

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003816703101620078
    2. ' ' → logprob: -5.628816604614258
    3. 'cache' → logprob: -8.753816604614258
    4. 'last' → logprob: -10.378816604614258
    5. 'cnt' → logprob: -11.128816604614258
    6. '(cache' → logprob: -12.628816604614258
    7. '(last' → logprob: -12.878816604614258
    8. '0' → logprob: -13.253816604614258
    9. '(cnt' → logprob: -13.878816604614258
    10. ' cache' → logprob: -14.003816604614258

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012773562222719193
    2. 'cache' → logprob: -4.387773513793945
    3. ' ' → logprob: -9.387773513793945
    4. '(cache' → logprob: -9.637773513793945
    5. 'last' → logprob: -10.262773513793945
    6. 'cnt' → logprob: -10.387773513793945
    7. 'x' → logprob: -11.262773513793945
    8. '(' → logprob: -11.512773513793945
    9. '(x' → logprob: -11.887773513793945
    10. '0' → logprob: -12.137773513793945

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02811388671398163
    2. '       ' → logprob: -4.278113842010498
    3. '    
' → logprob: -5.153113842010498
    4. ' else' → logprob: -5.403113842010498
    5. '        
' → logprob: -6.903113842010498
    6. '
' → logprob: -7.153113842010498
    7. ' 
' → logprob: -7.528113842010498
    8. '```' → logprob: -8.278114318847656
    9. 'else' → logprob: -8.403114318847656
    10. '   
' → logprob: -8.653114318847656

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7979162335395813
    2. ' else' → logprob: -0.9229162335395813
    3. '       ' → logprob: -2.5479161739349365
    4. 'else' → logprob: -2.9229161739349365
    5. ' last' → logprob: -4.547916412353516
    6. '    
' → logprob: -5.672916412353516
    7. '
' → logprob: -5.922916412353516
    8. 'last' → logprob: -7.172916412353516
    9. '        
' → logprob: -7.547916412353516
    10. ' ' → logprob: -7.797916412353516

Token 52: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5599760413169861
    2. 'else' (adapté à ' else') → logprob: -1.0599761009216309
    3. '   ' → logprob: -2.559976100921631
    4. ' last' → logprob: -6.059976100921631
    5. 'last' → logprob: -7.059976100921631
    6. '    
' → logprob: -7.684976100921631
    7. ' ' → logprob: -8.059975624084473
    8. 'elif' → logprob: -8.184975624084473
    9. ' elif' → logprob: -8.434975624084473
    10. '       ' → logprob: -8.684975624084473

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004128503613173962
    2. ':
' → logprob: -5.504128456115723
    3. '   ' → logprob: -11.004128456115723
    4. ' :' → logprob: -11.379128456115723
    5. '       ' → logprob: -11.879128456115723
    6. ',' → logprob: -12.754128456115723
    7. ':
' → logprob: -12.754128456115723
    8. '<|end|>' → logprob: -13.629128456115723
    9. '{' → logprob: -13.754128456115723
    10. '=' → logprob: -13.879128456115723

Token 54: '       ' (ID: 309)
  Prédit: ' cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cache' → logprob: -0.6729909181594849
    2. 'cache' → logprob: -1.9229909181594849
    3. '   ' → logprob: -2.0479907989501953
    4. '       ' → logprob: -2.1729907989501953
    5. ' cnt' → logprob: -2.6729907989501953
    6. 'cnt' → logprob: -4.172990798950195
    7. ' last' → logprob: -4.672990798950195
    8. '```' → logprob: -6.172990798950195
    9. 'last' → logprob: -7.047990798950195
    10. ' counter' → logprob: -7.172990798950195

Token 55: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.9725756645202637
    2. 'cache' → logprob: -1.0975756645202637
    3. ' cnt' → logprob: -1.5975756645202637
    4. ' cache' → logprob: -2.5975756645202637
    5. ' if' → logprob: -5.597575664520264
    6. 'if' → logprob: -6.222575664520264
    7. 'count' → logprob: -6.222575664520264
    8. 'last' → logprob: -6.972575664520264
    9. ' last' → logprob: -7.347575664520264
    10. '   ' → logprob: -7.722575664520264

Token 56: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08454133570194244
    2. '=' → logprob: -2.5845413208007812
    3. ' +=' → logprob: -5.209541320800781
    4. '+=' → logprob: -9.084541320800781
    5. ' ' → logprob: -10.084541320800781
    6. '+' → logprob: -11.709541320800781
    7. ' +' → logprob: -13.084541320800781
    8. ' -=' → logprob: -13.709541320800781
    9. ' *=' → logprob: -13.959541320800781
    10. '    ' → logprob: -14.459541320800781

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.429465115070343
    2. ' ' → logprob: -1.0544650554656982
    3. '1' → logprob: -7.179465293884277
    4. ' x' → logprob: -14.929465293884277
    5. 'max' → logprob: -15.491965293884277
    6. 'x' → logprob: -15.616965293884277
    7. ' ' → logprob: -15.929465293884277
    8. '   ' → logprob: -16.11696434020996
    9. ' max' → logprob: -16.17946434020996
    10. '2' → logprob: -16.30446434020996

Token 58: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005449920892715454
    2. '1' → logprob: -5.2554497718811035
    3. ' ' → logprob: -8.505450248718262
    4. 'max' → logprob: -11.380450248718262
    5. 'cache' → logprob: -14.880450248718262
    6. '01' → logprob: -14.942950248718262
    7. '2' → logprob: -15.255450248718262
    8. '000' → logprob: -15.567950248718262
    9. '00' → logprob: -15.880450248718262
    10. 'x' → logprob: -16.192949295043945

Token 59: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5573247075080872
    2. ' last' → logprob: -1.3073246479034424
    3. '   ' → logprob: -2.4323246479034424
    4. ' 
' → logprob: -3.3073246479034424
    5. '<|end|>' → logprob: -4.5573248863220215
    6. 'last' → logprob: -5.1823248863220215
    7. '    
' → logprob: -5.1823248863220215
    8. '  
' → logprob: -6.1823248863220215
    9. ' ' → logprob: -6.1823248863220215
    10. '	last' → logprob: -6.4323248863220215

Token 60: '   ' (ID: 271)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.642894446849823
    2. ' 
' → logprob: -1.6428945064544678
    3. '   ' → logprob: -1.7678945064544678
    4. 'last' → logprob: -3.3928945064544678
    5. ' ' → logprob: -3.5178945064544678
    6. '    
' → logprob: -4.142894268035889
    7. ' if' → logprob: -4.642894268035889
    8. '
' → logprob: -4.767894268035889
    9. '       ' → logprob: -5.642894268035889
    10. '        
' → logprob: -6.142894268035889

Token 61: ' if' (ID: 538)
  Prédit: ' last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' last' → logprob: -0.6423481702804565
    2. 'last' → logprob: -0.8923481702804565
    3. '   ' → logprob: -3.017348289489746
    4. ' if' → logprob: -4.267348289489746
    5. 'if' (adapté à ' if') → logprob: -6.767348289489746
    6. '	last' → logprob: -10.142348289489746
    7. 'cache' → logprob: -10.642348289489746
    8. '
' → logprob: -10.767348289489746
    9. ' ' → logprob: -10.892348289489746
    10. '       ' → logprob: -11.267348289489746

Token 62: ' cache' (ID: 11956)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.000455340719781816
    2. 'cnt' → logprob: -7.750455379486084
    3. ' cache' → logprob: -11.125454902648926
    4. '(cnt' → logprob: -11.750454902648926
    5. '	cnt' → logprob: -14.000454902648926
    6. '[cnt' → logprob: -15.000454902648926
    7. ' cn' → logprob: -15.875454902648926
    8. ' c' → logprob: -16.125455856323242
    9. ' counter' → logprob: -16.250455856323242
    10. 'cache' → logprob: -16.375455856323242

Token 63: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.048610758036375046
    2. '<' → logprob: -3.0486106872558594
    3. ' ' → logprob: -11.79861068725586
    4. '<|end|>' → logprob: -12.04861068725586
    5. '<count' → logprob: -12.79861068725586
    6. ' <=' → logprob: -13.42361068725586
    7. '<n' → logprob: -14.04861068725586
    8. ' >' → logprob: -14.29861068725586
    9. 'max' → logprob: -14.92361068725586
    10. '[' → logprob: -15.04861068725586

Token 64: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.07893858850002289
    2. 'cnt' → logprob: -2.5789384841918945
    3. '	cnt' → logprob: -10.203938484191895
    4. '(cnt' → logprob: -11.703938484191895
    5. '[cnt' → logprob: -13.203938484191895
    6. ' ' → logprob: -14.203938484191895
    7. ' cn' → logprob: -15.703938484191895
    8. '   ' → logprob: -15.828938484191895
    9. 'cn' → logprob: -15.828938484191895
    10. '_cnt' → logprob: -15.953938484191895

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033547841012477875
    2. ' =' → logprob: -4.033547878265381
    3. ' :' → logprob: -4.408547878265381
    4. ':
' → logprob: -6.908547878265381
    5. '=' → logprob: -7.158547878265381
    6. '   ' → logprob: -7.658547878265381
    7. ' :
' → logprob: -8.158547401428223
    8. ' +' → logprob: -8.658547401428223
    9. '       ' → logprob: -9.158547401428223
    10. ' ' → logprob: -9.158547401428223

Token 66: '       ' (ID: 309)
  Prédit: ' cache'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cache' → logprob: -0.373222291469574
    2. '       ' → logprob: -1.6232223510742188
    3. 'cache' → logprob: -2.3732223510742188
    4. '	cache' → logprob: -4.123222351074219
    5. '   ' → logprob: -5.873222351074219
    6. '<|end|>' → logprob: -7.248222351074219
    7. '(cache' → logprob: -7.373222351074219
    8. ' ' → logprob: -8.748222351074219
    9. '.cache' → logprob: -8.873222351074219
    10. '    ' → logprob: -9.498222351074219

Token 67: ' cache' (ID: 11956)
  Prédit: ' cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cache' → logprob: -0.07306912541389465
    2. 'cache' (adapté à ' cache') → logprob: -2.6980690956115723
    3. '       ' → logprob: -5.948069095611572
    4. '	cache' → logprob: -7.823069095611572
    5. '   ' → logprob: -9.69806957244873
    6. '(cache' → logprob: -11.57306957244873
    7. '```' → logprob: -11.57306957244873
    8. '_cache' → logprob: -11.69806957244873
    9. '.cache' → logprob: -11.94806957244873
    10. ' ' → logprob: -12.82306957244873

Token 68: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.001326433615759015
    2. '=' → logprob: -6.626326560974121
    3. ' ' → logprob: -15.251326560974121
    4. ' +=' → logprob: -16.001325607299805
    5. '=count' → logprob: -17.251325607299805
    6. '=c' → logprob: -17.501325607299805
    7. '<|end|>' → logprob: -17.626325607299805
    8. ' =
' → logprob: -17.751325607299805
    9. '=cut' → logprob: -18.501325607299805
    10. ',' → logprob: -18.751325607299805

Token 69: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.38687872886657715
    2. 'cnt' → logprob: -1.1368787288665771
    3. '	cnt' → logprob: -12.261878967285156
    4. '(cnt' → logprob: -13.011878967285156
    5. '[cnt' → logprob: -14.886878967285156
    6. 'c' → logprob: -16.511878967285156
    7. 'cn' → logprob: -16.511878967285156
    8. '_cnt' → logprob: -16.761878967285156
    9. ' cn' → logprob: -17.511878967285156
    10. ' ' → logprob: -17.511878967285156

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.085286945104599
    2. 'last' → logprob: -2.710286855697632
    3. ' last' → logprob: -5.210287094116211
    4. '
' → logprob: -5.460287094116211
    5. '    
' → logprob: -5.835287094116211
    6. ' 
' → logprob: -6.835287094116211
    7. '  
' → logprob: -7.585287094116211
    8. ',last' → logprob: -8.585287094116211
    9. '	last' → logprob: -8.710287094116211
    10. '   
' → logprob: -8.835287094116211

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08274129033088684
    2. 'last' → logprob: -3.2077412605285645
    3. '    
' → logprob: -4.2077412605285645
    4. ' last' → logprob: -4.3327412605285645
    5. '
' → logprob: -5.5827412605285645
    6. ' 
' → logprob: -6.0827412605285645
    7. '	last' → logprob: -6.3327412605285645
    8. ',last' → logprob: -6.8327412605285645
    9. '[last' → logprob: -7.4577412605285645
    10. '   
' → logprob: -7.7077412605285645

Token 72: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' (adapté à ' last') → logprob: -0.016737157478928566
    2. '   ' → logprob: -4.26673698425293
    3. ' last' → logprob: -6.01673698425293
    4. '    
' → logprob: -9.76673698425293
    5. '	last' → logprob: -10.01673698425293
    6. '
' → logprob: -10.89173698425293
    7. ' 
' → logprob: -12.89173698425293
    8. ',last' → logprob: -13.01673698425293
    9. '[last' → logprob: -13.26673698425293
    10. '(last' → logprob: -13.51673698425293

Token 73: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0059290360659360886
    2. '=' → logprob: -5.130928993225098
    3. ' ' → logprob: -15.130928993225098
    4. ' =
' → logprob: -17.130929946899414
    5. '=x' → logprob: -17.130929946899414
    6. ' +=' → logprob: -17.505929946899414
    7. ' =)' → logprob: -17.755929946899414
    8. '＝' → logprob: -18.630929946899414
    9. ',' → logprob: -19.630929946899414
    10. ' ==' → logprob: -19.755929946899414

Token 74: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03804149478673935
    2. ' x' → logprob: -3.288041591644287
    3. '	x' → logprob: -19.038042068481445
    4. ' ' → logprob: -21.913042068481445
    5. '"x' → logprob: -22.413042068481445
    6. ')x' → logprob: -22.413042068481445
    7. '$x' → logprob: -22.413042068481445
    8. ''x' → logprob: -22.788042068481445
    9. '(x' → logprob: -23.163042068481445
    10. '>x' → logprob: -23.538042068481445

Token 75: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007731315214186907
    2. '
' → logprob: -4.8827314376831055
    3. ' print' → logprob: -9.507731437683105
    4. ' 
' → logprob: -11.382731437683105
    5. '<|end|>' → logprob: -11.632731437683105
    6. '\n' → logprob: -11.757731437683105
    7. '```' → logprob: -11.757731437683105
    8. '  
' → logprob: -12.507731437683105
    9. ')' → logprob: -12.882731437683105
    10. '
' → logprob: -13.132731437683105

Token 76: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00042388198198750615
    2. '
' → logprob: -8.000423431396484
    3. ' print' → logprob: -10.000423431396484
    4. '\n' → logprob: -10.875423431396484
    5. '```' → logprob: -11.750423431396484
    6. ' 
' → logprob: -11.875423431396484
    7. '  
' → logprob: -13.000423431396484
    8. ')' → logprob: -13.250423431396484
    9. '\' → logprob: -13.625423431396484
    10. '<|end|>' → logprob: -14.125423431396484

Token 77: '(cache' (ID: 65481)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17541490495204926
    2. '(cache' → logprob: -2.175414800643921
    3. '(max' → logprob: -3.175414800643921
    4. '(len' → logprob: -5.4254150390625
    5. '(cnt' → logprob: -7.0504150390625
    6. '()' → logprob: -8.4254150390625
    7. '(count' → logprob: -10.6754150390625
    8. '('' → logprob: -11.5504150390625
    9. '((' → logprob: -12.0504150390625
    10. '(
' → logprob: -12.4254150390625

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. '+' → logprob: -12.750005722045898
    3. '))' → logprob: -13.750005722045898
    4. ' )' → logprob: -13.750005722045898
    5. ')`' → logprob: -15.625005722045898
    6. ')}' → logprob: -16.6250057220459
    7. '`)' → logprob: -16.8750057220459
    8. '+)' → logprob: -17.1250057220459
    9. ')
' → logprob: -17.1250057220459
    10. '')' → logprob: -17.6250057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 27
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 63
Précision stricte (1ère position): 35.53%
Précision adaptée (1ère position): 39.47%
Précision (top 10): 82.89%
================================================================================
