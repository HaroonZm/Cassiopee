================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import groupby, starmap
from operator import itemgetter, floordiv

N = int(input())
a = list(map(int, input().split()))

chunk_lengths = list(map(len, map(list, groupby(a))))
res = sum(starmap(floordiv, zip(chunk_lengths, [2]*len(chunk_lengths))))
print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'partial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'partial' → logprob: -0.612085223197937
    2. 'wrap' → logprob: -0.862085223197937
    3. 'reduce' → logprob: -3.4870853424072266
    4. 'l' → logprob: -6.112085342407227
    5. ' wraps' → logprob: -6.487085342407227
    6. 'cached' → logprob: -7.612085342407227
    7. 'cache' → logprob: -8.112085342407227
    8. 'cmp' → logprob: -9.237085342407227
    9. '```' → logprob: -9.237085342407227
    10. ' partial' → logprob: -9.612085342407227

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010317044332623482
    2. '(lambda' → logprob: -4.760316848754883
    3. ' (' → logprob: -7.385316848754883
    4. ',' → logprob: -7.885316848754883
    5. 'def' → logprob: -8.135316848754883
    6. '.' → logprob: -8.635316848754883
    7. '```' → logprob: -10.135316848754883
    8. '(
' → logprob: -10.385316848754883
    9. 'lambda' → logprob: -10.635316848754883
    10. ' ' → logprob: -10.760316848754883

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014403714798390865
    2. '(
' → logprob: -5.139403820037842
    3. '(lambda' → logprob: -5.389403820037842
    4. 'def' → logprob: -6.639403820037842
    5. ',' → logprob: -7.139403820037842
    6. '\' → logprob: -8.139403343200684
    7. ' ' → logprob: -8.264403343200684
    8. ' (' → logprob: -8.389403343200684
    9. '
' → logprob: -9.139403343200684
    10. '' → logprob: -9.139403343200684

Token 6: ' itertools' (ID: 103178)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.4023585617542267
    2. ' operator' → logprob: -2.0273585319519043
    3. ' itertools' → logprob: -2.2773585319519043
    4. ' collections' → logprob: -2.5273585319519043
    5. ' os' → logprob: -4.152358531951904
    6. 'operator' → logprob: -7.277358531951904
    7. 'math' → logprob: -8.027359008789062
    8. ' sys' → logprob: -8.902359008789062
    9. 'collections' → logprob: -9.027359008789062
    10. ' ' → logprob: -9.527359008789062

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.6086577773094177
    2. 'import' → logprob: -0.8586577773094177
    3. '.' → logprob: -3.4836578369140625
    4. '.import' → logprob: -6.7336578369140625
    5. ' .' → logprob: -9.358657836914062
    6. '	import' → logprob: -9.733657836914062
    7. '.im' → logprob: -10.108657836914062
    8. '_import' → logprob: -10.483657836914062
    9. ' ' → logprob: -10.483657836914062
    10. '<|end|>' → logprob: -11.358657836914062

Token 8: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.8675806522369385
    2. 'chain' → logprob: -1.7425806522369385
    3. 'acc' → logprob: -1.8675806522369385
    4. 'count' → logprob: -1.9925806522369385
    5. 'cycle' → logprob: -2.8675806522369385
    6. 'com' → logprob: -3.3675806522369385
    7. 'is' → logprob: -4.992580413818359
    8. 'product' → logprob: -5.367580413818359
    9. ' group' → logprob: -5.492580413818359
    10. 'per' → logprob: -5.867580413818359

Token 9: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.0005389740690588951
    2. 'y' → logprob: -8.25053882598877
    3. 'py' → logprob: -8.50053882598877
    4. 's' → logprob: -10.50053882598877
    5. 'r' → logprob: -11.37553882598877
    6. 'ertools' → logprob: -11.37553882598877
    7. 'from' → logprob: -12.12553882598877
    8. 'tools' → logprob: -12.37553882598877
    9. 'b' → logprob: -12.50053882598877
    10. 't' → logprob: -12.87553882598877

Token 10: ',' (ID: 11)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -1.101599931716919
    2. 'def' → logprob: -1.226599931716919
    3. '\n' → logprob: -1.976599931716919
    4. 'd' → logprob: -2.476599931716919
    5. '(' → logprob: -2.726599931716919
    6. '#' → logprob: -3.351599931716919
    7. '`' → logprob: -4.35159969329834
    8. '```' → logprob: -4.60159969329834
    9. '' → logprob: -5.10159969329834
    10. ',' → logprob: -5.47659969329834

Token 11: ' st' (ID: 420)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.36603397130966187
    2. 'count' → logprob: -2.3660340309143066
    3. 'chain' → logprob: -2.8660340309143066
    4. 'com' → logprob: -3.1160340309143066
    5. 'product' → logprob: -3.1160340309143066
    6. ' accumulate' → logprob: -3.6160340309143066
    7. 'filter' → logprob: -4.366034030914307
    8. 'cycle' → logprob: -4.616034030914307
    9. 'zip' → logprob: -5.241034030914307
    10. 'tee' → logprob: -5.866034030914307

Token 12: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -0.046031299978494644
    2. 'ar' → logprob: -3.1710312366485596
    3. 'art' → logprob: -6.796031475067139
    4. 'r' → logprob: -7.171031475067139
    5. 'at' → logprob: -8.54603099822998
    6. 'arts' → logprob: -9.04603099822998
    7. 'ep' → logprob: -9.04603099822998
    8. 'ring' → logprob: -9.17103099822998
    9. 'a' → logprob: -9.29603099822998
    10. 'op' → logprob: -9.42103099822998

Token 13: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.0683535037969705e-05
    2. 'ethod' → logprob: -12.12501049041748
    3. 'atch' → logprob: -13.00001049041748
    4. 'a' → logprob: -13.75001049041748
    5. 'apse' → logprob: -14.62501049041748
    6. 'at' → logprob: -15.00001049041748
    7. 'ep' → logprob: -15.75001049041748
    8. 'up' → logprob: -15.87501049041748
    9. 'er' → logprob: -16.000011444091797
    10. 'e' → logprob: -16.250011444091797

Token 14: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9097408652305603
    2. 'def' → logprob: -1.284740924835205
    3. ',' → logprob: -2.284740924835205
    4. '(
' → logprob: -2.534740924835205
    5. '\n' → logprob: -2.534740924835205
    6. '\' → logprob: -3.659740924835205
    7. 'import' → logprob: -4.784740924835205
    8. '
' → logprob: -5.284740924835205
    9. ',
' → logprob: -5.409740924835205
    10. '(

' → logprob: -6.284740924835205

Token 15: 'from' (ID: 2845)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.638926088809967
    2. 'def' → logprob: -1.0139260292053223
    3. '\' → logprob: -3.1389260292053223
    4. '#' → logprob: -3.8889260292053223
    5. '`' → logprob: -5.013926029205322
    6. ',' → logprob: -5.013926029205322
    7. '\n' → logprob: -5.013926029205322
    8. '```' → logprob: -5.263926029205322
    9. '(' → logprob: -5.388926029205322
    10. '' → logprob: -5.763926029205322

Token 16: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.0411737784743309
    2. 'operator' → logprob: -3.2911736965179443
    3. ' math' → logprob: -6.166173934936523
    4. ' collections' → logprob: -7.666173934936523
    5. 'math' → logprob: -8.041173934936523
    6. 'collections' → logprob: -9.041173934936523
    7. ' ' → logprob: -9.541173934936523
    8. '_operator' → logprob: -11.291173934936523
    9. ' typing' → logprob: -11.291173934936523
    10. ' os' → logprob: -13.041173934936523

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08256766200065613
    2. 'import' → logprob: -2.5825676918029785
    3. '.' → logprob: -5.8325676918029785
    4. '<|end|>' → logprob: -7.7075676918029785
    5. ' ' → logprob: -8.70756721496582
    6. '	import' → logprob: -10.33256721496582
    7. ' as' → logprob: -10.45756721496582
    8. '<|end|>' → logprob: -10.70756721496582
    9. ' .' → logprob: -11.45756721496582
    10. '_import' → logprob: -11.70756721496582

Token 18: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.1883087158203125
    2. 'item' → logprob: -2.1883087158203125
    3. ' add' → logprob: -3.0633087158203125
    4. 'add' → logprob: -5.4383087158203125
    5. ' mul' → logprob: -6.3133087158203125
    6. 'getitem' → logprob: -6.3133087158203125
    7. ' import' → logprob: -6.5633087158203125
    8. ' attr' → logprob: -7.1883087158203125
    9. ' ' → logprob: -7.3133087158203125
    10. 'import' → logprob: -7.5633087158203125

Token 19: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0015680687502026558
    2. 'get' → logprob: -6.501567840576172
    3. 'getitem' → logprob: -9.876567840576172
    4. 'gett' → logprob: -11.376567840576172
    5. 'item' → logprob: -14.501567840576172
    6. 'attr' → logprob: -14.751567840576172
    7. '```' → logprob: -15.126567840576172
    8. 'g' → logprob: -15.501567840576172
    9. 'ge' → logprob: -15.626567840576172
    10. '   ' → logprob: -15.751567840576172

Token 20: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9549874663352966
    2. 'def' → logprob: -1.4549875259399414
    3. '

' → logprob: -1.9549875259399414
    4. '\n' → logprob: -2.5799875259399414
    5. '\' → logprob: -2.8299875259399414
    6. ',' → logprob: -3.5799875259399414
    7. '```' → logprob: -3.9549875259399414
    8. 'import' → logprob: -4.329987525939941
    9. '' → logprob: -4.954987525939941
    10. '#' → logprob: -4.954987525939941

Token 21: ' flo' (ID: 15037)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.8464218378067017
    2. ' attr' → logprob: -1.4714218378067017
    3. 'add' → logprob: -2.221421718597412
    4. ' mul' → logprob: -2.346421718597412
    5. 'mul' → logprob: -2.471421718597412
    6. 'method' → logprob: -3.596421718597412
    7. ' add' → logprob: -4.846421718597412
    8. ' method' → logprob: -5.221421718597412
    9. '```' → logprob: -5.346421718597412
    10. 'eq' → logprob: -6.471421718597412

Token 22: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.34938836097717285
    2. 'or' → logprob: -1.2243883609771729
    3. 'r' → logprob: -7.974388122558594
    4. 'orm' → logprob: -8.224388122558594
    5. 'o' → logprob: -8.974388122558594
    6. 'od' → logprob: -9.099388122558594
    7. '```' → logprob: -10.849388122558594
    8. 'ormap' → logprob: -11.224388122558594
    9. 'rd' → logprob: -11.849388122558594
    10. 'ol' → logprob: -12.099388122558594

Token 23: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -3.128163257315464e-07
    2. 'ivid' → logprob: -15.875
    3. 'vision' → logprob: -16.25
    4. 'ivi' → logprob: -17.5
    5. '_iv' → logprob: -17.75
    6. 'i' → logprob: -18.375
    7. 'ive' → logprob: -18.5
    8. ' iv' → logprob: -18.75
    9. 'ivin' → logprob: -19.125
    10. 'ivs' → logprob: -19.375

Token 24: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0515961647033691
    2. ',' → logprob: -1.5515961647033691
    3. '

' → logprob: -1.8015961647033691
    4. 'def' → logprob: -2.426596164703369
    5. 'import' → logprob: -2.926596164703369
    6. ',
' → logprob: -3.301596164703369
    7. '\n' → logprob: -3.551596164703369
    8. ',

' → logprob: -4.676596164703369
    9. '\' → logprob: -4.801596164703369
    10. '```' → logprob: -4.926596164703369

Token 25: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.28480929136276245
    2. 'd' → logprob: -1.7848093509674072
    3. '#' → logprob: -3.5348093509674072
    4. '\' → logprob: -4.659809112548828
    5. 'de' → logprob: -4.909809112548828
    6. '@' → logprob: -5.034809112548828
    7. '(' → logprob: -5.159809112548828
    8. ',' → logprob: -5.784809112548828
    9. '=' → logprob: -5.784809112548828
    10. '```' → logprob: -6.159809112548828

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6802200078964233
    2. ' =' → logprob: -0.9302200078964233
    3. '_' → logprob: -2.555220127105713
    4. ',' → logprob: -4.430220127105713
    5. ' ' → logprob: -5.055220127105713
    6. '   ' → logprob: -7.430220127105713
    7. '.' → logprob: -7.805220127105713
    8. ')' → logprob: -8.180219650268555
    9. 'umber' → logprob: -8.305219650268555
    10. 'E' → logprob: -8.305219650268555

Token 27: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13093119859695435
    2. '10' → logprob: -2.3809311389923096
    3. '100' → logprob: -3.6309311389923096
    4. '20' → logprob: -7.005931377410889
    5. '5' → logprob: -7.505931377410889
    6. '16' → logprob: -7.630931377410889
    7. '0' → logprob: -7.755931377410889
    8. '1' → logprob: -8.00593090057373
    9. 'int' → logprob: -8.13093090057373
    10. '50' → logprob: -8.50593090057373

Token 28: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03948390856385231
    2. '(input' → logprob: -3.2894840240478516
    3. '('' → logprob: -7.039484024047852
    4. '()' → logprob: -8.289484024047852
    5. 'input' → logprob: -9.164484024047852
    6. ''' → logprob: -10.289484024047852
    7. '(
' → logprob: -10.664484024047852
    8. ')' → logprob: -10.914484024047852
    9. '("' → logprob: -10.914484024047852
    10. '(N' → logprob: -11.164484024047852

Token 29: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7737438082695007
    2. '())' → logprob: -1.1487438678741455
    3. '(' → logprob: -2.1487438678741455
    4. ')' → logprob: -2.2737438678741455
    5. '(()' → logprob: -7.523743629455566
    6. '('' → logprob: -7.648743629455566
    7. '))' → logprob: -7.773743629455566
    8. '()))' → logprob: -8.773743629455566
    9. '(
' → logprob: -9.273743629455566
    10. '`)' → logprob: -9.773743629455566

Token 30: 'a' (ID: 64)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.3017171621322632
    2. 'arr' → logprob: -2.0517172813415527
    3. 'a' → logprob: -2.5517172813415527
    4. 'A' → logprob: -3.8017172813415527
    5. 'array' → logprob: -4.926717281341553
    6. 'lst' → logprob: -5.176717281341553
    7. 'numbers' → logprob: -5.426717281341553
    8. 'values' → logprob: -5.801717281341553
    9. 'points' → logprob: -6.051717281341553
    10. 'nums' → logprob: -6.301717281341553

Token 31: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37615713477134705
    2. '=' → logprob: -2.25115704536438
    3. 'rray' → logprob: -2.62615704536438
    4. 'rr' → logprob: -2.62615704536438
    5. '[' → logprob: -4.126157283782959
    6. 's' → logprob: -4.251157283782959
    7. ' ' → logprob: -4.501157283782959
    8. 'r' → logprob: -4.626157283782959
    9. '_' → logprob: -5.376157283782959
    10. '[]' → logprob: -6.251157283782959

Token 32: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.4668501317501068
    2. ' list' → logprob: -1.0918501615524292
    3. '[list' → logprob: -3.8418500423431396
    4. ' [' → logprob: -4.591850280761719
    5. '[' → logprob: -5.341850280761719
    6. '[input' → logprob: -7.841850280761719
    7. '[]' → logprob: -8.216850280761719
    8. '[int' → logprob: -8.591850280761719
    9. ' []' → logprob: -8.966850280761719
    10. '[a' → logprob: -11.341850280761719

Token 33: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.07903960347175598
    2. '(' → logprob: -2.7040395736694336
    3. '(input' → logprob: -5.079039573669434
    4. '(int' → logprob: -6.079039573669434
    5. '(range' → logprob: -8.079039573669434
    6. '(eval' → logprob: -8.829039573669434
    7. '(filter' → logprob: -10.829039573669434
    8. '()' → logprob: -11.204039573669434
    9. '(a' → logprob: -11.454039573669434
    10. 'map' → logprob: -12.329039573669434

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005819845828227699
    2. '(' → logprob: -7.625582218170166
    3. '<int' → logprob: -10.250581741333008
    4. 'int' → logprob: -10.625581741333008
    5. '(lambda' → logprob: -11.500581741333008
    6. ')' → logprob: -11.625581741333008
    7. '```' → logprob: -12.375581741333008
    8. ',int' → logprob: -12.750581741333008
    9. '[int' → logprob: -12.875581741333008
    10. '=int' → logprob: -13.625581741333008

Token 35: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.4315687417984009
    2. '(input' → logprob: -1.3065687417984009
    3. ',' → logprob: -2.5565686225891113
    4. '(' → logprob: -6.431568622589111
    5. 'input' → logprob: -8.05656909942627
    6. ' ,' → logprob: -8.80656909942627
    7. '=input' → logprob: -10.55656909942627
    8. ',(' → logprob: -10.80656909942627
    9. ' input' → logprob: -10.93156909942627
    10. '(),' → logprob: -11.18156909942627

Token 36: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004081128165125847
    2. ' input' → logprob: -5.5040812492370605
    3. '(input' → logprob: -13.629080772399902
    4. ',input' → logprob: -14.129080772399902
    5. ' ' → logprob: -14.879080772399902
    6. '=input' → logprob: -16.00408172607422
    7. '	input' → logprob: -16.12908172607422
    8. 'range' → logprob: -16.37908172607422
    9. ')' → logprob: -16.87908172607422
    10. '<input' → logprob: -17.25408172607422

Token 37: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.65707261255011e-06
    2. '()' → logprob: -12.625008583068848
    3. '()))' → logprob: -12.875008583068848
    4. '(' → logprob: -14.125008583068848
    5. ')' → logprob: -14.875008583068848
    6. '))' → logprob: -15.000008583068848
    7. '()));' → logprob: -15.000008583068848
    8. '())' → logprob: -15.500008583068848
    9. ' ().' → logprob: -15.625008583068848
    10. '.' → logprob: -15.750008583068848

Token 38: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002655079588294029
    2. 'strip' → logprob: -8.250265121459961
    3. 'rstrip' → logprob: -12.625265121459961
    4. '(split' → logprob: -14.750265121459961
    5. ' split' → logprob: -14.875265121459961
    6. 'spl' → logprob: -16.62526512145996
    7. ')' → logprob: -17.25026512145996
    8. 'read' → logprob: -17.62526512145996
    9. '.split' → logprob: -18.37526512145996
    10. 's' → logprob: -19.12526512145996

Token 39: '()))

' (ID: 125972)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2529962360858917
    2. '))' → logprob: -1.5029962062835693
    3. '()))' → logprob: -8.002996444702148
    4. '())' → logprob: -8.127996444702148
    5. '(' → logprob: -8.377996444702148
    6. ')))' → logprob: -8.752996444702148
    7. '),' → logprob: -10.752996444702148
    8. '()' → logprob: -11.377996444702148
    9. ')>' → logprob: -13.002996444702148
    10. ')`' → logprob: -13.377996444702148

Token 40: 'chunk' (ID: 56156)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9827797412872314
    2. 'result' → logprob: -1.7327797412872314
    3. 'd' → logprob: -2.9827797412872314
    4. ')' → logprob: -3.2327797412872314
    5. 'pairs' → logprob: -3.2327797412872314
    6. 's' → logprob: -3.3577797412872314
    7. '#' → logprob: -3.6077797412872314
    8. 'b' → logprob: -3.8577797412872314
    9. 'group' → logprob: -3.8577797412872314
    10. 'res' → logprob: -3.8577797412872314

Token 41: '_lengths' (ID: 139878)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.49240824580192566
    2. 's' → logprob: -1.242408275604248
    3. '_' → logprob: -2.867408275604248
    4. 'ed' → logprob: -3.367408275604248
    5. '_s' → logprob: -5.617408275604248
    6. 'size' → logprob: -6.492408275604248
    7. '_sizes' → logprob: -6.742408275604248
    8. 'd' → logprob: -6.992408275604248
    9. '_len' → logprob: -7.242408275604248
    10. '(' → logprob: -7.742408275604248

Token 42: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18995694816112518
    2. '=' → logprob: -2.1899569034576416
    3. ' =' → logprob: -2.8149569034576416
    4. '_' → logprob: -7.314957141876221
    5. ',' → logprob: -9.189956665039062
    6. 's' → logprob: -9.314956665039062
    7. ' ' → logprob: -9.689956665039062
    8. '[' → logprob: -10.314956665039062
    9. ')' → logprob: -10.314956665039062
    10. '=[]' → logprob: -10.564956665039062

Token 43: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5107976198196411
    2. '[]' → logprob: -1.1357976198196411
    3. '[list' → logprob: -3.6357975006103516
    4. 'list' → logprob: -4.135797500610352
    5. '[a' → logprob: -4.385797500610352
    6. '(list' → logprob: -5.135797500610352
    7. '[(' → logprob: -5.510797500610352
    8. '[i' → logprob: -5.760797500610352
    9. '([' → logprob: -6.010797500610352
    10. '(' → logprob: -6.135797500610352

Token 44: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4560418426990509
    2. '(st' → logprob: -1.4560418128967285
    3. '(chain' → logprob: -3.0810418128967285
    4. '(map' → logprob: -3.9560418128967285
    5. '(filter' → logprob: -3.9560418128967285
    6. '(f' → logprob: -4.2060418128967285
    7. '(chunk' → logprob: -4.4560418128967285
    8. '(group' → logprob: -4.4560418128967285
    9. '(lambda' → logprob: -5.5810418128967285
    10. '(range' → logprob: -6.4560418128967285

Token 45: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5657646656036377
    2. '(len' → logprob: -1.6907646656036377
    3. '(int' → logprob: -2.0657646656036377
    4. '(lambda' → logprob: -2.1907646656036377
    5. '(f' → logprob: -4.940764427185059
    6. '(
' → logprob: -7.190764427185059
    7. '(abs' → logprob: -7.440764427185059
    8. '(length' → logprob: -8.690764427185059
    9. 'len' → logprob: -9.565764427185059
    10. '(float' → logprob: -9.565764427185059

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2388838827610016
    2. '(' → logprob: -1.7388838529586792
    3. '<|end|>' → logprob: -4.113883972167969
    4. ',(' → logprob: -4.363883972167969
    5. '))' → logprob: -6.113883972167969
    6. '),' → logprob: -6.988883972167969
    7. '(group' → logprob: -6.988883972167969
    8. ' ,' → logprob: -7.238883972167969
    9. ',
' → logprob: -7.988883972167969
    10. ',...' → logprob: -8.238883972167969

Token 47: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.343142032623291
    2. 'group' → logprob: -1.343142032623291
    3. '[' → logprob: -1.718142032623291
    4. ' list' → logprob: -2.593142032623291
    5. ' group' → logprob: -2.593142032623291
    6. ' [' → logprob: -2.718142032623291
    7. '[group' → logprob: -3.468142032623291
    8. '(group' → logprob: -4.718142032623291
    9. 'st' → logprob: -5.093142032623291
    10. 'a' → logprob: -5.468142032623291

Token 48: '(list' (ID: 13116)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7831231355667114
    2. '(lambda' → logprob: -1.0331231355667114
    3. '(list' → logprob: -1.7831231355667114
    4. '(part' → logprob: -4.783123016357422
    5. '(str' → logprob: -5.658123016357422
    6. '(group' → logprob: -6.158123016357422
    7. '(tuple' → logprob: -6.408123016357422
    8. '(split' → logprob: -6.908123016357422
    9. ' (' → logprob: -7.283123016357422
    10. '(
' → logprob: -7.658123016357422

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008933556382544339
    2. '(group' → logprob: -7.750893592834473
    3. 'group' → logprob: -9.000893592834473
    4. '(' → logprob: -9.125893592834473
    5. ',(' → logprob: -9.250893592834473
    6. ',g' → logprob: -10.000893592834473
    7. '.groupby' → logprob: -11.375893592834473
    8. ',
' → logprob: -11.500893592834473
    9. ' ,' → logprob: -11.625893592834473
    10. ',map' → logprob: -11.750893592834473

Token 50: ' group' (ID: 3566)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.00878746435046196
    2. ' group' → logprob: -4.758787631988525
    3. ' ' → logprob: -9.383787155151367
    4. 'st' → logprob: -10.508787155151367
    5. '   ' → logprob: -11.508787155151367
    6. 'chunk' → logprob: -11.633787155151367
    7. 'g' → logprob: -11.758787155151367
    8. '	group' → logprob: -11.758787155151367
    9. '(group' → logprob: -12.383787155151367
    10. ' grou' → logprob: -13.008787155151367

Token 51: 'by' (ID: 2345)
  Prédit: 'by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'by' → logprob: -2.5776860184123507e-06
    2. 'b' → logprob: -13.75000286102295
    3. '```' → logprob: -13.87500286102295
    4. 'y' → logprob: -15.12500286102295
    5. ')' → logprob: -16.375001907348633
    6. 'group' → logprob: -17.125001907348633
    7. 'a' → logprob: -17.125001907348633
    8. '

' → logprob: -17.625001907348633
    9. 'ing' → logprob: -17.750001907348633
    10. '
' → logprob: -17.875001907348633

Token 52: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0002116462419508025
    2. '(lambda' → logprob: -9.000211715698242
    3. '(' → logprob: -9.500211715698242
    4. ' (' → logprob: -12.375211715698242
    5. 'a' → logprob: -12.625211715698242
    6. '(
' → logprob: -13.375211715698242
    7. '))' → logprob: -14.250211715698242
    8. '((' → logprob: -14.500211715698242
    9. ',a' → logprob: -14.500211715698242
    10. ' a' → logprob: -14.750211715698242

Token 53: '))))
' (ID: 55084)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9696452617645264
    2. ')))' → logprob: -1.0946452617645264
    3. '))))' → logprob: -1.3446452617645264
    4. '(lambda' → logprob: -4.7196455001831055
    5. ',a' → logprob: -5.3446455001831055
    6. '))' → logprob: -6.0946455001831055
    7. 'a' → logprob: -6.3446455001831055
    8. ')' → logprob: -6.3446455001831055
    9. '))))
' → logprob: -6.3446455001831055
    10. '(a' → logprob: -6.9696455001831055

Token 54: 'res' (ID: 430)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3205454647541046
    2. ')
' → logprob: -1.8205454349517822
    3. '
' → logprob: -3.9455454349517822
    4. '(' → logprob: -4.445545673370361
    5. '\n' → logprob: -4.695545673370361
    6. '#' → logprob: -4.820545673370361
    7. '(
' → logprob: -4.820545673370361
    8. '[' → logprob: -5.195545673370361
    9. 'for' → logprob: -5.445545673370361
    10. '+
' → logprob: -5.445545673370361

Token 55: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6358728408813477
    2. ' =' → logprob: -0.7608728408813477
    3. 's' → logprob: -6.510872840881348
    4. '=[]' → logprob: -6.885872840881348
    5. '_' → logprob: -7.760872840881348
    6. '(' → logprob: -9.260872840881348
    7. ',' → logprob: -9.385872840881348
    8. '+=' → logprob: -10.260872840881348
    9. ' +=' → logprob: -11.010872840881348
    10. ')' → logprob: -11.135872840881348

Token 56: ' sum' (ID: 4215)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.39058256149292
    2. ' list' → logprob: -1.76558256149292
    3. '[' → logprob: -1.89058256149292
    4. '[]' → logprob: -1.89058256149292
    5. 'reduce' → logprob: -2.26558256149292
    6. ' [' → logprob: -2.76558256149292
    7. ' []' → logprob: -3.51558256149292
    8. ' reduce' → logprob: -4.26558256149292
    9. 'chunk' → logprob: -4.26558256149292
    10. ' chunk' → logprob: -4.51558256149292

Token 57: '(st' (ID: 4065)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.687447190284729
    2. '(chunk' → logprob: -0.812447190284729
    3. '(f' → logprob: -3.6874470710754395
    4. '(st' → logprob: -4.3124470710754395
    5. '(map' → logprob: -5.1874470710754395
    6. '((' → logprob: -6.0624470710754395
    7. '(lambda' → logprob: -6.1874470710754395
    8. '(a' → logprob: -7.1874470710754395
    9. '([' → logprob: -7.1874470710754395
    10. '(min' → logprob: -7.4374470710754395

Token 58: 'arm' (ID: 2218)
  Prédit: 'arm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arm' → logprob: -7.226628895296017e-06
    2. 'ar' → logprob: -12.500007629394531
    3. 'arp' → logprob: -12.875007629394531
    4. 'erm' → logprob: -15.250007629394531
    5. 'r' → logprob: -16.00000762939453
    6. 'armac' → logprob: -16.12500762939453
    7. 'map' → logprob: -16.37500762939453
    8. 'ermap' → logprob: -16.75000762939453
    9. 'armor' → logprob: -16.87500762939453
    10. 'арм' → logprob: -17.00000762939453

Token 59: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -1.0280383548888494e-06
    2. 'a' → logprob: -14.500000953674316
    3. 'map' → logprob: -16.000001907348633
    4. 'ап' → logprob: -16.000001907348633
    5. 'app' → logprob: -16.500001907348633
    6. 'apse' → logprob: -16.500001907348633
    7. 'at' → logprob: -17.000001907348633
    8. '_map' → logprob: -17.125001907348633
    9. 'e' → logprob: -17.250001907348633
    10. 'apply' → logprob: -17.750001907348633

Token 60: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.3432910144329071
    2. '(lambda' → logprob: -1.5932910442352295
    3. '(' → logprob: -2.4682910442352295
    4. '(operator' → logprob: -6.46829080581665
    5. '(len' → logprob: -8.468291282653809
    6. '(item' → logprob: -8.593291282653809
    7. '(
' → logprob: -8.968291282653809
    8. '((' → logprob: -9.468291282653809
    9. ')' → logprob: -9.593291282653809
    10. '(min' → logprob: -10.093291282653809

Token 61: 'lo' (ID: 746)
  Prédit: 'lo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lo' → logprob: -0.00037323508877307177
    2. 'l' → logprob: -8.750372886657715
    3. 'loor' → logprob: -9.125372886657715
    4. 'ro' → logprob: -10.250372886657715
    5. 'lood' → logprob: -11.125372886657715
    6. '```' → logprob: -11.500372886657715
    7. 'o' → logprob: -11.750372886657715
    8. 'loat' → logprob: -11.750372886657715
    9. 'lu' → logprob: -12.625372886657715
    10. '##' → logprob: -13.125372886657715

Token 62: 'ord' (ID: 604)
  Prédit: 'ord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ord' → logprob: -0.012819930911064148
    2. 'rd' → logprob: -4.387819766998291
    3. 'r' → logprob: -8.13782024383545
    4. 'ard' → logprob: -12.63782024383545
    5. 'or' → logprob: -12.76282024383545
    6. '```' → logprob: -13.01282024383545
    7. '...' → logprob: -13.51282024383545
    8. '#' → logprob: -13.63782024383545
    9. '``' → logprob: -14.38782024383545
    10. '   ' → logprob: -14.51282024383545

Token 63: 'iv' (ID: 349)
  Prédit: 'iv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iv' → logprob: -0.00025192240718752146
    2. 'div' → logprob: -8.375251770019531
    3. 'Div' → logprob: -12.125251770019531
    4. 'ir' → logprob: -12.375251770019531
    5. ' div' → logprob: -12.875251770019531
    6. 'v' → logprob: -13.000251770019531
    7. '_div' → logprob: -13.250251770019531
    8. 'or' → logprob: -13.625251770019531
    9. 'ив' → logprob: -14.375251770019531
    10. '<div' → logprob: -14.500251770019531

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030358207877725363
    2. '(chunk' → logprob: -6.878036022186279
    3. ',(' → logprob: -6.878036022186279
    4. ' ,' → logprob: -7.878036022186279
    5. ',len' → logprob: -8.753035545349121
    6. '<|end|>' → logprob: -9.753035545349121
    7. ',length' → logprob: -9.753035545349121
    8. ',[' → logprob: -10.253035545349121
    9. 'chunk' → logprob: -10.253035545349121
    10. ')' → logprob: -10.628035545349121

Token 65: ' zip' (ID: 16216)
  Prédit: '(zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(zip' → logprob: -0.42611730098724365
    2. 'zip' → logprob: -1.8011173009872437
    3. ' zip' → logprob: -1.8011173009872437
    4. '[(' → logprob: -4.551117420196533
    5. '(chunk' → logprob: -6.051117420196533
    6. ')' → logprob: -7.176117420196533
    7. 'chunk' → logprob: -7.176117420196533
    8. '[' → logprob: -7.676117420196533
    9. ',' → logprob: -7.801117420196533
    10. '((' → logprob: -7.926117420196533

Token 66: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.005406403914093971
    2. '(a' → logprob: -5.380406379699707
    3. '(' → logprob: -7.380406379699707
    4. 'chunk' → logprob: -9.380406379699707
    5. ')(' → logprob: -10.755406379699707
    6. '((' → logprob: -11.505406379699707
    7. ')' → logprob: -12.005406379699707
    8. '(len' → logprob: -12.130406379699707
    9. '(N' → logprob: -12.130406379699707
    10. 'a' → logprob: -12.255406379699707

Token 67: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -7.898723561083898e-05
    2. '(chunk' → logprob: -9.875079154968262
    3. 'ength' → logprob: -11.375079154968262
    4. 's' → logprob: -12.625079154968262
    5. 'chunk' → logprob: -12.625079154968262
    6. '_chunk' → logprob: -13.000079154968262
    7. '_chunks' → logprob: -13.375079154968262
    8. 'length' → logprob: -13.875079154968262
    9. '(length' → logprob: -13.875079154968262
    10. 'Lengths' → logprob: -14.000079154968262

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02404811792075634
    2. ',(' → logprob: -4.399048328399658
    3. ',[' → logprob: -4.649048328399658
    4. '(' → logprob: -6.774048328399658
    5. '[' → logprob: -8.5240478515625
    6. ' ,' → logprob: -8.6490478515625
    7. 'chunk' → logprob: -9.0240478515625
    8. ',a' → logprob: -10.1490478515625
    9. '),' → logprob: -10.3990478515625
    10. ',len' → logprob: -11.0240478515625

Token 69: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007966920733451843
    2. ' [' → logprob: -5.257966995239258
    3. '([' → logprob: -7.007966995239258
    4. '[N' → logprob: -7.632966995239258
    5. '[a' → logprob: -7.757966995239258
    6. '[n' → logprob: -9.007966995239258
    7. '[it' → logprob: -9.007966995239258
    8. ' ' → logprob: -9.382966995239258
    9. '(' → logprob: -9.382966995239258
    10. '[len' → logprob: -9.632966995239258

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.31751149892807007
    2. '3' → logprob: -1.8175115585327148
    3. '[' → logprob: -3.442511558532715
    4. 'k' → logprob: -3.567511558532715
    5. 'N' → logprob: -3.692511558532715
    6. '(' → logprob: -4.692511558532715
    7. '4' → logprob: -5.567511558532715
    8. ' ' → logprob: -6.317511558532715
    9. ' [' → logprob: -6.567511558532715
    10. '[N' → logprob: -6.567511558532715

Token 71: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7272773385047913
    2. '])))' → logprob: -1.1022772789001465
    3. ']*' → logprob: -1.8522772789001465
    4. ']))' → logprob: -3.8522772789001465
    5. ',' → logprob: -5.2272772789001465
    6. ']*(' → logprob: -8.477277755737305
    7. '1' → logprob: -8.727277755737305
    8. '0' → logprob: -8.977277755737305
    9. ']+' → logprob: -9.227277755737305
    10. ' ]' → logprob: -9.352277755737305

Token 72: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.002224125899374485
    2. 'N' → logprob: -6.252223968505859
    3. '(len' → logprob: -8.62722396850586
    4. ' len' → logprob: -9.12722396850586
    5. '7' → logprob: -13.75222396850586
    6. ' ' → logprob: -13.87722396850586
    7. ' N' → logprob: -14.00222396850586
    8. '9' → logprob: -14.00222396850586
    9. '6' → logprob: -14.12722396850586
    10. '4' → logprob: -14.25222396850586

Token 73: '(chunk' (ID: 92058)
  Prédit: '(chunk'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chunk' → logprob: -0.0002774246677290648
    2. 'chunk' → logprob: -8.625277519226074
    3. '(' → logprob: -9.250277519226074
    4. '(a' → logprob: -14.250277519226074
    5. ' chunk' → logprob: -15.250277519226074
    6. '```' → logprob: -15.625277519226074
    7. '(c' → logprob: -15.750277519226074
    8. '(
' → logprob: -16.000276565551758
    9. ')' → logprob: -16.250276565551758
    10. 'a' → logprob: -16.500276565551758

Token 74: '_lengths' (ID: 139878)
  Prédit: '_lengths'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lengths' → logprob: -0.00010533124441280961
    2. 's' → logprob: -9.875104904174805
    3. 'Lengths' → logprob: -10.375104904174805
    4. ' lengths' → logprob: -12.000104904174805
    5. 'ength' → logprob: -12.000104904174805
    6. 'length' → logprob: -12.500104904174805
    7. 'chunk' → logprob: -13.250104904174805
    8. 'a' → logprob: -14.000104904174805
    9. '```' → logprob: -14.375104904174805
    10. 'es' → logprob: -14.875104904174805

Token 75: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.21375593543052673
    2. '))))' → logprob: -1.7137559652328491
    3. ')' → logprob: -4.463756084442139
    4. '))' → logprob: -7.338756084442139
    5. ')))
' → logprob: -10.21375560760498
    6. '))))
' → logprob: -10.58875560760498
    7. ')));' → logprob: -11.58875560760498
    8. ')))

' → logprob: -12.33875560760498
    9. '))))

' → logprob: -12.33875560760498
    10. ' ' → logprob: -12.46375560760498

Token 76: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.01294855959713459
    2. 'if' → logprob: -5.387948513031006
    3. ')' → logprob: -5.887948513031006
    4. 'for' → logprob: -5.887948513031006
    5. '```' → logprob: -7.637948513031006
    6. '
' → logprob: -8.012948989868164
    7. '#' → logprob: -8.012948989868164
    8. '*' → logprob: -8.262948989868164
    9. '+' → logprob: -8.512948989868164
    10. '\n' → logprob: -8.762948989868164

Token 77: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47468113899230957
    2. '(res' → logprob: -0.9746811389923096
    3. '(sum' → logprob: -7.8496809005737305
    4. '('' → logprob: -9.22468090057373
    5. '(len' → logprob: -9.47468090057373
    6. '()' → logprob: -11.47468090057373
    7. '((' → logprob: -11.84968090057373
    8. '("("' → logprob: -12.09968090057373
    9. '(
' → logprob: -12.84968090057373
    10. '(`' → logprob: -12.97468090057373

Token 78: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008621077984571457
    2. '))' → logprob: -4.7586212158203125
    3. ' )' → logprob: -13.133621215820312
    4. '`)' → logprob: -13.258621215820312
    5. ')))' → logprob: -13.508621215820312
    6. ')
' → logprob: -14.633621215820312
    7. ')`' → logprob: -15.883621215820312
    8. '')' → logprob: -16.008621215820312
    9. '})' → logprob: -16.008621215820312
    10. ')")' → logprob: -16.133621215820312


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 60
Précision stricte (1ère position): 46.05%
Précision adaptée (1ère position): 46.05%
Précision (top 10): 78.95%
================================================================================
