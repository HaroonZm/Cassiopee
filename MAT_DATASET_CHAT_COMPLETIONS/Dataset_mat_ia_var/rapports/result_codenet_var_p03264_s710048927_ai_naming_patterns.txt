================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_value = int(input())

half_value = input_value // 2

if input_value % 2 == 0:
    result_value = half_value ** 2
else:
    result_value = half_value * (half_value + 1)

print(result_value)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_value' (ID: 6734)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2533738315105438
    2. '"' → logprob: -2.628373861312866
    3. 'input' → logprob: -2.628373861312866
    4. ' input' → logprob: -3.253373861312866
    5. ' "' → logprob: -4.003373622894287
    6. ''' → logprob: -4.503373622894287
    7. ' '' → logprob: -5.753373622894287
    8. '0' → logprob: -6.003373622894287
    9. ' a' → logprob: -6.753373622894287
    10. '_' → logprob: -7.003373622894287

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002594799967482686
    2. '(input' → logprob: -6.377594947814941
    3. '```' → logprob: -7.877594947814941
    4. '('' → logprob: -9.252594947814941
    5. '[' → logprob: -9.502594947814941
    6. '`' → logprob: -9.752594947814941
    7. '("("' → logprob: -10.252594947814941
    8. ''' → logprob: -10.252594947814941
    9. '()' → logprob: -10.377594947814941
    10. ' (' → logprob: -10.502594947814941

Token 5: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6188415288925171
    2. '(' → logprob: -0.9938415288925171
    3. '())' → logprob: -2.8688416481018066
    4. '()' → logprob: -3.4938416481018066
    5. '))' → logprob: -6.118841648101807
    6. '('' → logprob: -7.243841648101807
    7. '')' → logprob: -8.368841171264648
    8. '")' → logprob: -8.743841171264648
    9. '()))' → logprob: -9.118841171264648
    10. '(()' → logprob: -9.243841171264648

Token 6: 'half' (ID: 52836)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17877286672592163
    2. '*' → logprob: -2.0537729263305664
    3. '%' → logprob: -3.9287729263305664
    4. 'if' → logprob: -4.928772926330566
    5. '#' → logprob: -5.803772926330566
    6. ')' → logprob: -6.928772926330566
    7. ' if' → logprob: -7.553772926330566
    8. '\n' → logprob: -7.553772926330566
    9. 'i' → logprob: -7.678772926330566
    10. '```' → logprob: -7.928772926330566

Token 7: '_value' (ID: 6734)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.010126234963536263
    2. '(' → logprob: -4.885126113891602
    3. '()' → logprob: -7.510126113891602
    4. ')' → logprob: -7.635126113891602
    5. '_value' → logprob: -7.885126113891602
    6. ' _' → logprob: -8.635126113891602
    7. '```' → logprob: -8.635126113891602
    8. '(_)' → logprob: -8.760126113891602
    9. '_val' → logprob: -9.385126113891602
    10. '_)' → logprob: -9.885126113891602

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11480671167373657
    2. '(' → logprob: -2.864806652069092
    3. '=' → logprob: -3.614806652069092
    4. '*' → logprob: -4.614806652069092
    5. ' =' → logprob: -5.489806652069092
    6. '()' → logprob: -5.739806652069092
    7. ')' → logprob: -5.989806652069092
    8. '//' → logprob: -6.364806652069092
    9. '```' → logprob: -7.364806652069092
    10. '**' → logprob: -7.614806652069092

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.009758212603628635
    2. 'input' → logprob: -4.634757995605469
    3. ' int' → logprob: -13.634757995605469
    4. ' ' → logprob: -15.134757995605469
    5. '(input' → logprob: -15.134757995605469
    6. 'int' → logprob: -15.134757995605469
    7. ' len' → logprob: -16.63475799560547
    8. '```' → logprob: -17.75975799560547
    9. ' (' → logprob: -18.25975799560547
    10. ' value' → logprob: -18.25975799560547

Token 10: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0003100791363976896
    2. '_' → logprob: -8.375309944152832
    3. '_val' → logprob: -10.000309944152832
    4. ')_' → logprob: -11.625309944152832
    5. '(' → logprob: -11.875309944152832
    6. '_values' → logprob: -12.625309944152832
    7. '```' → logprob: -12.875309944152832
    8. '()' → logprob: -13.000309944152832
    9. '_VALUE' → logprob: -13.125309944152832
    10. ')' → logprob: -13.500309944152832

Token 11: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.022242730483412743
    2. '//' → logprob: -3.897242784500122
    3. '```' → logprob: -7.772242546081543
    4. '_' → logprob: -7.897242546081543
    5. '`' → logprob: -8.022242546081543
    6. ' ' → logprob: -8.897242546081543
    7. ' /' → logprob: -9.022242546081543
    8. ')' → logprob: -9.772242546081543
    9. ' *' → logprob: -10.022242546081543
    10. '/' → logprob: -10.147242546081543

Token 12: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00014036978245712817
    2. ' ' → logprob: -8.875140190124512
    3. '```' → logprob: -14.625140190124512
    4. '   ' → logprob: -18.125141143798828
    5. '۲' → logprob: -18.125141143798828
    6. '3' → logprob: -18.375141143798828
    7. '  ' → logprob: -18.875141143798828
    8. '２' → logprob: -19.000141143798828
    9. ' ' → logprob: -19.187641143798828
    10. '٢' → logprob: -19.812641143798828

Token 13: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -14.750003814697266
    4. '   ' → logprob: -18.125003814697266
    5. '۲' → logprob: -18.875003814697266
    6. '3' → logprob: -19.250003814697266
    7. '  ' → logprob: -19.625003814697266
    8. '２' → logprob: -19.875003814697266
    9. '٢' → logprob: -20.062503814697266
    10. '२' → logprob: -20.687503814697266

Token 14: '

' (ID: 279)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38910654187202454
    2. 'print' → logprob: -1.3891065120697021
    3. 'if' → logprob: -3.389106512069702
    4. 'result' → logprob: -3.889106512069702
    5. '*' → logprob: -4.514106750488281
    6. '\n' → logprob: -7.014106750488281
    7. 'rest' → logprob: -7.139106750488281
    8. '
' → logprob: -7.139106750488281
    9. ' if' → logprob: -7.139106750488281
    10. '#' → logprob: -7.264106750488281

Token 15: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48881813883781433
    2. 'print' → logprob: -1.1138181686401367
    3. '+' → logprob: -4.113818168640137
    4. '*' → logprob: -4.738818168640137
    5. 'i' → logprob: -4.738818168640137
    6. 'result' → logprob: -5.113818168640137
    7. '#' → logprob: -5.238818168640137
    8. ' if' → logprob: -5.363818168640137
    9. '```' → logprob: -6.863818168640137
    10. 'p' → logprob: -6.988818168640137

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.10132381319999695
    2. ' half' → logprob: -2.4763238430023193
    3. ' ' → logprob: -4.60132360458374
    4. 'input' → logprob: -6.47632360458374
    5. ' ' → logprob: -7.60132360458374
    6. 'half' → logprob: -8.601324081420898
    7. ' space' → logprob: -11.601324081420898
    8. '_half' → logprob: -11.601324081420898
    9. ' not' → logprob: -11.726324081420898
    10. '  ' → logprob: -12.226324081420898

Token 17: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.05002463236451149
    2. '_' → logprob: -3.0500247478485107
    3. '_val' → logprob: -6.675024509429932
    4. ' _' → logprob: -9.05002498626709
    5. '_v' → logprob: -10.17502498626709
    6. '_Value' → logprob: -12.30002498626709
    7. '__' → logprob: -13.17502498626709
    8. '_values' → logprob: -13.55002498626709
    9. '```' → logprob: -13.55002498626709
    10. ')_' → logprob: -13.80002498626709

Token 18: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07123923301696777
    2. ' %' → logprob: -3.6962392330169678
    3. ' >=' → logprob: -3.9462392330169678
    4. ' ' → logprob: -4.196239471435547
    5. '>' → logprob: -5.321239471435547
    6. '%' → logprob: -6.071239471435547
    7. ' <=' → logprob: -6.821239471435547
    8. ' ==' → logprob: -6.946239471435547
    9. ' <' → logprob: -8.696239471435547
    10. '>=' → logprob: -10.321239471435547

Token 19: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.34844544529914856
    2. ' ' → logprob: -1.2234454154968262
    3. '```' → logprob: -15.223445892333984
    4. '3' → logprob: -15.348445892333984
    5. '  ' → logprob: -16.098445892333984
    6. '1' → logprob: -16.473445892333984
    7. ' ' → logprob: -17.098445892333984
    8. 'half' → logprob: -17.160945892333984
    9. '   ' → logprob: -17.723445892333984
    10. '<|end|>' → logprob: -17.848445892333984

Token 20: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001093841710826382
    2. ' ' → logprob: -9.125109672546387
    3. '```' → logprob: -15.875109672546387
    4. '3' → logprob: -16.75010871887207
    5. '  ' → logprob: -17.12510871887207
    6. '   ' → logprob: -17.12510871887207
    7. 'half' → logprob: -17.37510871887207
    8. '1' → logprob: -18.31260871887207
    9. '۲' → logprob: -18.50010871887207
    10. '4' → logprob: -19.31260871887207

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01175013929605484
    2. '==' → logprob: -4.886750221252441
    3. ' !=' → logprob: -5.636750221252441
    4. ' ' → logprob: -7.636750221252441
    5. ' =' → logprob: -10.511750221252441
    6. ':' → logprob: -10.761750221252441
    7. '!=' → logprob: -10.886750221252441
    8. '=' → logprob: -11.386750221252441
    9. ' :' → logprob: -13.136750221252441
    10. ')' → logprob: -13.261750221252441

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033646274358034134
    2. '0' → logprob: -3.40864634513855
    3. ' ' → logprob: -14.908646583557129
    4. '  ' → logprob: -16.283645629882812
    5. '1' → logprob: -16.408645629882812
    6. '=' → logprob: -17.408645629882812
    7. '```' → logprob: -17.908645629882812
    8. '==' → logprob: -18.096145629882812
    9. ')' → logprob: -18.283645629882812
    10. '<|end|>' → logprob: -18.408645629882812

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004083385691046715
    2. ' ' → logprob: -5.504083156585693
    3. '1' → logprob: -12.254083633422852
    4. '2' → logprob: -15.879083633422852
    5. '==' → logprob: -18.06658363342285
    6. '```' → logprob: -18.25408363342285
    7. ' ' → logprob: -18.31658363342285
    8. '  ' → logprob: -18.75408363342285
    9. '   ' → logprob: -19.25408363342285
    10. '00' → logprob: -19.44158363342285

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.3306015716807451e-05
    2. ':**' → logprob: -12.12501335144043
    3. ' :' → logprob: -12.37501335144043
    4. '':'' → logprob: -13.87501335144043
    5. '>:' → logprob: -14.37501335144043
    6. '):' → logprob: -14.37501335144043
    7. '':' → logprob: -14.62501335144043
    8. ':
' → logprob: -14.75001335144043
    9. '":"' → logprob: -15.37501335144043
    10. '":' → logprob: -16.37501335144043

Token 25: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4083405137062073
    2. '\' → logprob: -2.4083404541015625
    3. '   ' → logprob: -2.9083404541015625
    4. 'print' → logprob: -2.9083404541015625
    5. ' print' → logprob: -3.0333404541015625
    6. ' 
' → logprob: -3.0333404541015625
    7. ' ' → logprob: -4.1583404541015625
    8. '    
' → logprob: -4.6583404541015625
    9. '<|end|>' → logprob: -5.1583404541015625
    10. '    ' → logprob: -5.5333404541015625

Token 26: ' result' (ID: 1534)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.014157398603856564
    2. 'print' → logprob: -4.639157295227051
    3. '   ' → logprob: -5.514157295227051
    4. '    ' → logprob: -8.88915729522705
    5. ' 
' → logprob: -9.51415729522705
    6. ' ' → logprob: -10.26415729522705
    7. ' \' → logprob: -10.51415729522705
    8. '\n' → logprob: -10.51415729522705
    9. '\' → logprob: -11.26415729522705
    10. '    
' → logprob: -11.38915729522705

Token 27: '_value' (ID: 6734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018633302301168442
    2. '=' → logprob: -4.0186333656311035
    3. '_' → logprob: -8.393632888793945
    4. ' +=' → logprob: -8.518632888793945
    5. ' ' → logprob: -10.393632888793945
    6. ')' → logprob: -11.893632888793945
    7. ' ==' → logprob: -12.518632888793945
    8. 's' → logprob: -13.018632888793945
    9. '<|end|>' → logprob: -13.143632888793945
    10. ' *=' → logprob: -13.268632888793945

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0034186739940196276
    2. '=' → logprob: -6.003418445587158
    3. ' +=' → logprob: -7.003418445587158
    4. ' ' → logprob: -11.378418922424316
    5. '_' → logprob: -11.878418922424316
    6. ' ==' → logprob: -12.753418922424316
    7. ' *=' → logprob: -13.003418922424316
    8. ' |=' → logprob: -13.378418922424316
    9. '<|end|>' → logprob: -13.503418922424316
    10. ')' → logprob: -13.628418922424316

Token 29: ' half' (ID: 6375)
  Prédit: ' half'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' half' → logprob: -0.03709195926785469
    2. 'half' → logprob: -3.4120919704437256
    3. ' input' → logprob: -6.4120917320251465
    4. '"' → logprob: -6.5370917320251465
    5. 'input' → logprob: -8.662092208862305
    6. ' "' → logprob: -9.537092208862305
    7. ' ' → logprob: -10.287092208862305
    8. ''' → logprob: -10.412092208862305
    9. '_half' → logprob: -11.912092208862305
    10. ' '' → logprob: -12.162092208862305

Token 30: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.034592388459714e-06
    2. '_val' → logprob: -12.625005722045898
    3. '_' → logprob: -13.125005722045898
    4. ' _' → logprob: -14.625005722045898
    5. '_input' → logprob: -16.6250057220459
    6. 'value' → logprob: -16.7500057220459
    7. '```' → logprob: -16.8750057220459
    8. '_v' → logprob: -17.1250057220459
    9. '"_' → logprob: -17.2500057220459
    10. '_va' → logprob: -17.5000057220459

Token 31: ' **' (ID: 6240)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2684461176395416
    2. 'else' → logprob: -2.268446207046509
    3. ' else' → logprob: -3.018446207046509
    4. '+' → logprob: -3.018446207046509
    5. ' *' → logprob: -3.643446207046509
    6. ' +' → logprob: -5.26844596862793
    7. '
' → logprob: -7.51844596862793
    8. '```' → logprob: -7.51844596862793
    9. '<|end|>' → logprob: -7.89344596862793
    10. '-' → logprob: -8.14344596862793

Token 32: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0004320996522437781
    2. ' ' → logprob: -7.750432014465332
    3. '3' → logprob: -14.625432014465332
    4. '   ' → logprob: -14.625432014465332
    5. '```' → logprob: -16.06293296813965
    6. '  ' → logprob: -16.56293296813965
    7. '²' → logprob: -16.87543296813965
    8. '۲' → logprob: -17.18793296813965
    9. ' ' → logprob: -17.37543296813965
    10. '+' → logprob: -17.87543296813965

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.37503719329834
    3. '3' → logprob: -12.12503719329834
    4. '```' → logprob: -15.62503719329834
    5. '  ' → logprob: -16.687538146972656
    6. '**' → logprob: -16.812538146972656
    7. '<|end|>' → logprob: -16.875038146972656
    8. '   ' → logprob: -16.937538146972656
    9. ')' → logprob: -17.312538146972656
    10. '۲' → logprob: -17.500038146972656

Token 34: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.10752254724502563
    2. '
' → logprob: -2.607522487640381
    3. ' else' → logprob: -4.482522487640381
    4. '<|end|>' → logprob: -4.482522487640381
    5. '\n' → logprob: -5.732522487640381
    6. '\' → logprob: -7.732522487640381
    7. '+' → logprob: -7.982522487640381
    8. '*' → logprob: -8.107522964477539
    9. 'e' → logprob: -8.607522964477539
    10. '```' → logprob: -8.982522964477539

Token 35: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0446484312415123
    2. '
' → logprob: -3.7946484088897705
    3. 'e' → logprob: -4.29464864730835
    4. '<|end|>' → logprob: -5.79464864730835
    5. ' else' → logprob: -6.29464864730835
    6. '\n' → logprob: -7.16964864730835
    7. '```' → logprob: -7.91964864730835
    8. '    
' → logprob: -8.044648170471191
    9. ' 
' → logprob: -8.294648170471191
    10. '*' → logprob: -9.044648170471191

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.723973582556937e-05
    2. ' :' → logprob: -11.750017166137695
    3. ':
' → logprob: -12.125017166137695
    4. '   ' → logprob: -12.625017166137695
    5. ':return' → logprob: -16.000017166137695
    6. ':**' → logprob: -16.500017166137695
    7. '<|end|>' → logprob: -16.750017166137695
    8. '):' → logprob: -16.750017166137695
    9. '    ' → logprob: -17.125017166137695
    10. ':def' → logprob: -18.000017166137695

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6986121535301208
    2. '    ' → logprob: -0.9486121535301208
    3. ' ' → logprob: -3.1986122131347656
    4. '1' → logprob: -3.9486122131347656
    5. ' input' → logprob: -3.9486122131347656
    6. ' result' → logprob: -4.323612213134766
    7. ' (' → logprob: -4.698612213134766
    8. '0' → logprob: -5.698612213134766
    9. '     
' → logprob: -6.073612213134766
    10. '4' → logprob: -6.823612213134766

Token 38: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.3238758146762848
    2. 'result' (adapté à ' result') → logprob: -1.3238757848739624
    3. ' input' → logprob: -5.323875904083252
    4. ' (' → logprob: -5.823875904083252
    5. 'input' → logprob: -7.448875904083252
    6. '(' → logprob: -7.823875904083252
    7. ' half' → logprob: -7.823875904083252
    8. '(result' → logprob: -7.948875904083252
    9. '0' → logprob: -8.073875427246094
    10. '1' → logprob: -8.573875427246094

Token 39: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -8.792751032160595e-05
    2. '_val' → logprob: -9.75008773803711
    3. '_' → logprob: -10.50008773803711
    4. ' _' → logprob: -13.37508773803711
    5. '_values' → logprob: -16.12508773803711
    6. '_Value' → logprob: -16.87508773803711
    7. '_va' → logprob: -17.12508773803711
    8. '__' → logprob: -17.12508773803711
    9. '_s' → logprob: -17.25008773803711
    10. 'value' → logprob: -17.37508773803711

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004132541827857494
    2. '=' → logprob: -5.5041327476501465
    3. ' +=' → logprob: -10.504132270812988
    4. ' ' → logprob: -10.754132270812988
    5. ' *=' → logprob: -12.754132270812988
    6. '_' → logprob: -13.379132270812988
    7. '*' → logprob: -15.879132270812988
    8. ' *' → logprob: -16.129133224487305
    9. '+=' → logprob: -16.254133224487305
    10. ')' → logprob: -16.629133224487305

Token 41: ' half' (ID: 6375)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.0757073163986206
    2. ' half' → logprob: -1.2007073163986206
    3. 'half' → logprob: -1.2007073163986206
    4. 'input' → logprob: -3.45070743560791
    5. ' (' → logprob: -3.95070743560791
    6. '(' → logprob: -5.57570743560791
    7. '(input' → logprob: -7.20070743560791
    8. ' ' → logprob: -7.57570743560791
    9. ' result' → logprob: -7.95070743560791
    10. '2' → logprob: -8.95070743560791

Token 42: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.00015264409012161195
    2. '_val' → logprob: -8.875152587890625
    3. '_' → logprob: -11.500152587890625
    4. '_v' → logprob: -13.375152587890625
    5. '_va' → logprob: -14.875152587890625
    6. ' _' → logprob: -15.125152587890625
    7. '__' → logprob: -15.750152587890625
    8. '_values' → logprob: -17.250152587890625
    9. '"_' → logprob: -17.500152587890625
    10. 'value' → logprob: -17.500152587890625

Token 43: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.5653010606765747
    2. '+' → logprob: -1.8153010606765747
    3. '\n' → logprob: -2.565300941467285
    4. '```' → logprob: -2.940300941467285
    5. '
' → logprob: -3.190300941467285
    6. 'print' → logprob: -3.940300941467285
    7. '\' → logprob: -4.065300941467285
    8. '<|end|>' → logprob: -4.065300941467285
    9. '  
' → logprob: -4.440300941467285
    10. ' ' → logprob: -4.440300941467285

Token 44: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.8297620415687561
    2. '(' → logprob: -1.0797619819641113
    3. ' (' → logprob: -1.8297619819641113
    4. '3' → logprob: -3.3297619819641113
    5. ' ' → logprob: -3.8297619819641113
    6. '(
' → logprob: -5.329761981964111
    7. '(h' → logprob: -7.329761981964111
    8. '1' → logprob: -8.32976245880127
    9. 'half' → logprob: -9.32976245880127
    10. ' (
' → logprob: -9.57976245880127

Token 45: 'half' (ID: 52836)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23311078548431396
    2. '(' → logprob: -1.733110785484314
    3. ' ' → logprob: -4.2331109046936035
    4. ' (' → logprob: -4.4831109046936035
    5. '(
' → logprob: -5.6081109046936035
    6. '3' → logprob: -6.6081109046936035
    7. '1' → logprob: -8.858110427856445
    8. '(h' → logprob: -9.108110427856445
    9. 'half' → logprob: -10.108110427856445
    10. ' (
' → logprob: -11.358110427856445

Token 46: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -7.982165698194876e-05
    2. '_' → logprob: -9.875080108642578
    3. '+' → logprob: -11.000080108642578
    4. '_val' → logprob: -11.750080108642578
    5. ' _' → logprob: -13.625080108642578
    6. '_v' → logprob: -13.625080108642578
    7. 'value' → logprob: -15.000080108642578
    8. '_values' → logprob: -15.625080108642578
    9. '_va' → logprob: -15.875080108642578
    10. '__' → logprob: -16.000080108642578

Token 47: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4742991030216217
    2. ' +' → logprob: -0.9742990732192993
    3. '2' → logprob: -9.349299430847168
    4. ' plus' → logprob: -10.224299430847168
    5. '1' → logprob: -10.724299430847168
    6. '```' → logprob: -10.849299430847168
    7. 'plus' → logprob: -10.974299430847168
    8. ' ' → logprob: -12.099299430847168
    9. ')' → logprob: -12.099299430847168
    10. '+)' → logprob: -12.224299430847168

Token 48: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02975129522383213
    2. ' ' → logprob: -3.5297513008117676
    3. ' ' → logprob: -15.27975082397461
    4. '```' → logprob: -15.27975082397461
    5. '2' → logprob: -15.40475082397461
    6. '`' → logprob: -17.02975082397461
    7. '   ' → logprob: -17.15475082397461
    8. ')' → logprob: -17.40475082397461
    9. '  ' → logprob: -17.52975082397461
    10. '<|end|>' → logprob: -18.52975082397461

Token 49: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '```' → logprob: -19.875017166137695
    4. '2' → logprob: -20.000017166137695
    5. '１' → logprob: -21.250017166137695
    6. '۱' → logprob: -21.375017166137695
    7. '<|end|>' → logprob: -21.500017166137695
    8. ')' → logprob: -22.375017166137695
    9. '`' → logprob: -22.500017166137695
    10. ' ' → logprob: -22.750017166137695

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002370329457335174
    2. '<|end|>' → logprob: -8.750237464904785
    3. '}' → logprob: -10.625237464904785
    4. ')
' → logprob: -11.000237464904785
    5. '```' → logprob: -11.250237464904785
    6. ' )' → logprob: -11.875237464904785
    7. '*' → logprob: -12.625237464904785
    8. '#' → logprob: -12.875237464904785
    9. '**' → logprob: -13.000237464904785
    10. ')**' → logprob: -13.250237464904785

Token 51: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22244247794151306
    2. 'p' → logprob: -2.222442388534546
    3. '\n' → logprob: -3.597442388534546
    4. '
' → logprob: -3.597442388534546
    5. '#' → logprob: -3.722442388534546
    6. 'r' → logprob: -5.722442626953125
    7. '\' → logprob: -5.972442626953125
    8. '<|end|>' → logprob: -6.222442626953125
    9. '```' → logprob: -6.597442626953125
    10. 'pr' → logprob: -7.222442626953125

Token 52: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07889694720506668
    2. '(result' → logprob: -2.578896999359131
    3. '(input' → logprob: -13.328896522521973
    4. '(output' → logprob: -13.828896522521973
    5. ' (' → logprob: -13.953896522521973
    6. '(res' → logprob: -14.078896522521973
    7. 'result' → logprob: -14.453896522521973
    8. '(print' → logprob: -14.828896522521973
    9. '("("' → logprob: -14.953896522521973
    10. '(value' → logprob: -15.453896522521973

Token 53: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0017505073919892311
    2. '_val' → logprob: -6.876750469207764
    3. ')_' → logprob: -7.501750469207764
    4. '_' → logprob: -9.501750946044922
    5. '_v' → logprob: -9.876750946044922
    6. ')' → logprob: -11.126750946044922
    7. '_va' → logprob: -11.376750946044922
    8. '_t' → logprob: -12.876750946044922
    9. ' _' → logprob: -12.876750946044922
    10. '_)' → logprob: -13.001750946044922

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.625
    3. '))' → logprob: -17.25
    4. ')
' → logprob: -18.375
    5. ')`' → logprob: -18.5
    6. '}' → logprob: -19.0
    7. '`)' → logprob: -19.375
    8. '')' → logprob: -19.5
    9. '(' → logprob: -20.0
    10. '()' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 43
Précision stricte (1ère position): 50.00%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 82.69%
================================================================================
