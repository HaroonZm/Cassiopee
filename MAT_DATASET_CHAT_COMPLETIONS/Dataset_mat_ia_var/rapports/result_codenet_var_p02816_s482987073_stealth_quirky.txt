================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:32:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys as _sys
from collections import Counter as __C, defaultdict as __D

_buf_rline = _sys.stdin.buffer.readline
_std_rline = _sys.stdin.readline

def _i(): return int(_buf_rline())
def _il(): return list(map(int, _buf_rline().split()))

class ___Hashinator:
    zz = {}
    def __init__(p, s, bb, mm):
        p.bb, p.mm = bb, mm
        n = len(s)
        h = [0]*(n+1)
        t = 0
        for j,z in enumerate(s):
            t = (t*bb + z) % mm
            h[j+1] = t
        p._h = h

        key = (bb, mm, n)
        if key not in ___Hashinator.zz:
            pw = [1]*(n+1)
            u = 1
            for q in range(n):
                pw[q+1] = u = u*bb % mm
            ___Hashinator.zz[key] = pw
        p._pw = ___Hashinator.zz[key]
    def spin(p, a, b):
        # Returns hash for [a,b)
        return (p._h[b] - p._h[a]*p._pw[b-a])%p.mm

def _solve(n, a, b):
    crazy_bitlen = max(max(a),max(b)).bit_length()
    ah, bh, cbh = [], [], []
    _BASE, _MOD = 641, int(1e9+7)
    for i in range(crazy_bitlen):
        ta, tb, tbn = [], [], []
        for aa, bb in zip(a,b):
            ta.append((aa>>i)&1)
            tb.append((bb>>i)&1)
            tbn.append(tb[-1]^1)
        ah.append(___Hashinator(ta,_BASE,_MOD))
        bh.append(___Hashinator(tb,_BASE,_MOD))
        cbh.append(___Hashinator(tbn,_BASE,_MOD))
    X = [0]*n
    for i in range(crazy_bitlen):
        for spot in range(n):
            lhs = ah[i].spin(spot, n)
            rhs = ah[i].spin(0, spot)
            if X[spot] is None:
                continue
            if lhs == cbh[i].spin(0, n-spot) and rhs == cbh[i].spin(n-spot, n):
                X[spot] += (1 << i)
            elif lhs == bh[i].spin(0, n-spot) and rhs == bh[i].spin(n-spot, n):
                pass
            else:
                X[spot] = None
    return ['{} {}'.format(ix,xv) for ix,xv in enumerate(X) if xv is not None]

main = lambda: print(*_solve(_i(), _il(), _il()), sep='\n')

if __name__=='__main__': main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: ' as' (ID: 472)
  → Token d'amorce (pas de prédiction)

Token 3: ' _' (ID: 1175)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.5253707766532898
    2. ' sys' → logprob: -1.1503708362579346
    3. ' ' → logprob: -2.7753708362579346
    4. '   ' → logprob: -4.6503705978393555
    5. 'sy' → logprob: -4.6503705978393555
    6. 's' → logprob: -5.7753705978393555
    7. ' sy' → logprob: -6.7753705978393555
    8. '```' → logprob: -6.7753705978393555
    9. '`' → logprob: -7.1503705978393555
    10. '  ' → logprob: -7.1503705978393555

Token 4: 'sys' (ID: 17324)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5891063213348389
    2. 'sys' → logprob: -0.8391063213348389
    3. '_' → logprob: -5.214106559753418
    4. '_s' → logprob: -6.089106559753418
    5. 'sy' → logprob: -6.714106559753418
    6. 'm' → logprob: -6.714106559753418
    7. 'is' → logprob: -7.464106559753418
    8. 'ys' → logprob: -7.714106559753418
    9. 'i' → logprob: -8.089106559753418
    10. 'sx' → logprob: -8.339106559753418

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.023022297769784927
    2. '
' → logprob: -4.523022174835205
    3. 'newline' → logprob: -5.648022174835205
    4. 'import' → logprob: -6.023022174835205
    5. '\n' → logprob: -6.523022174835205
    6. '.import' → logprob: -6.648022174835205
    7. '

' → logprob: -7.398022174835205
    8. '<|end|>' → logprob: -7.773022174835205
    9. '```' → logprob: -7.898022174835205
    10. '\' → logprob: -8.023022651672363

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18244890868663788
    2. '
' → logprob: -2.8074488639831543
    3. '\n' → logprob: -3.4324488639831543
    4. '<|end|>' → logprob: -3.9324488639831543
    5. 'newline' → logprob: -4.057448863983154
    6. '

' → logprob: -4.182448863983154
    7. 'import' → logprob: -4.557448863983154
    8. '' → logprob: -5.807448863983154
    9. '<|end|>' → logprob: -5.932448863983154
    10. ',' → logprob: -6.432448863983154

Token 7: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.008430296555161476
    2. ' typing' → logprob: -5.383430480957031
    3. ' io' → logprob: -6.758430480957031
    4. 'os' → logprob: -7.008430480957031
    5. ' import' → logprob: -7.633430480957031
    6. ' pathlib' → logprob: -8.008430480957031
    7. ' collections' → logprob: -8.758430480957031
    8. ' setuptools' → logprob: -9.008430480957031
    9. ' math' → logprob: -9.133430480957031
    10. ' re' → logprob: -9.258430480957031

Token 8: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0790669173002243
    2. 'import' → logprob: -2.5790669918060303
    3. '.' → logprob: -9.07906723022461
    4. ' ' → logprob: -10.82906723022461
    5. '_' → logprob: -11.45406723022461
    6. '_import' → logprob: -11.70406723022461
    7. ' abc' → logprob: -12.45406723022461
    8. '```' → logprob: -12.45406723022461
    9. '	import' → logprob: -12.70406723022461
    10. '.import' → logprob: -12.82906723022461

Token 9: ' Counter' (ID: 32251)
  Prédit: ' abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abc' → logprob: -0.061128564178943634
    2. ' defaultdict' → logprob: -3.061128616333008
    3. ' deque' → logprob: -4.686128616333008
    4. 'abc' → logprob: -6.561128616333008
    5. ' named' → logprob: -6.811128616333008
    6. 'deque' → logprob: -8.061128616333008
    7. ' Counter' → logprob: -8.936128616333008
    8. ' Ordered' → logprob: -9.061128616333008
    9. ' collections' → logprob: -10.436128616333008
    10. 'named' → logprob: -11.061128616333008

Token 10: ' as' (ID: 472)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.17544686794281
    2. '\n' → logprob: -1.17544686794281
    3. ',' → logprob: -2.0504469871520996
    4. '\' → logprob: -2.5504469871520996
    5. '(' → logprob: -3.4254469871520996
    6. '.' → logprob: -3.5504469871520996
    7. ' ' → logprob: -3.5504469871520996
    8. 'newline' → logprob: -4.0504469871521
    9. '_' → logprob: -4.1754469871521
    10. '<|end|>' → logprob: -4.3004469871521

Token 11: ' __' (ID: 2516)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.8710575103759766
    2. '_C' → logprob: -1.2460575103759766
    3. '_' → logprob: -1.7460575103759766
    4. ' _' → logprob: -2.3710575103759766
    5. 'Counter' → logprob: -3.8710575103759766
    6. '_counter' → logprob: -5.371057510375977
    7. ' ' → logprob: -8.746057510375977
    8. '.Counter' → logprob: -8.746057510375977
    9. ' ' → logprob: -9.746057510375977
    10. ' counter' → logprob: -10.246057510375977

Token 12: 'C' (ID: 34)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.1677694022655487
    2. '_C' → logprob: -2.292769432067871
    3. 'collections' → logprob: -3.542769432067871
    4. '_counter' → logprob: -4.542769432067871
    5. 'Cole' → logprob: -5.042769432067871
    6. 'counter' → logprob: -6.042769432067871
    7. '_col' → logprob: -6.167769432067871
    8. '```' → logprob: -7.542769432067871
    9. 'deque' → logprob: -8.417769432067871
    10. 'col' → logprob: -8.417769432067871

Token 13: ',' (ID: 11)
  Prédit: 'ounter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ounter' → logprob: -0.5589712262153625
    2. '(' → logprob: -2.0589711666107178
    3. 'o' → logprob: -2.4339711666107178
    4. '__' → logprob: -2.8089711666107178
    5. '_' → logprob: -3.1839711666107178
    6. 'ount' → logprob: -3.9339711666107178
    7. 'ol' → logprob: -3.9339711666107178
    8. '.' → logprob: -4.183971405029297
    9. 'oun' → logprob: -4.558971405029297
    10. '```' → logprob: -4.933971405029297

Token 14: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.0654502809047699
    2. 'default' → logprob: -3.3154501914978027
    3. 'deque' → logprob: -4.565450191497803
    4. ' deque' → logprob: -5.065450191497803
    5. ' Ordered' → logprob: -5.815450191497803
    6. ' itertools' → logprob: -5.815450191497803
    7. ' default' → logprob: -6.815450191497803
    8. 'Ordered' → logprob: -6.940450191497803
    9. ' abc' → logprob: -7.690450191497803
    10. '_' → logprob: -7.940450191497803

Token 15: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.47600042819976807
    2. 'as' → logprob: -0.9760004281997681
    3. '<|end|>' → logprob: -6.4760003089904785
    4. '<|end|>' → logprob: -8.226000785827637
    5. ')' → logprob: -10.601000785827637
    6. '```' → logprob: -10.601000785827637
    7. '(' → logprob: -11.601000785827637
    8. ' ' → logprob: -11.851000785827637
    9. '	as' → logprob: -12.226000785827637
    10. 'from' → logprob: -12.226000785827637

Token 16: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.6665788888931274
    2. '__' → logprob: -1.4165788888931274
    3. ' _' → logprob: -1.5415788888931274
    4. '_default' → logprob: -4.041578769683838
    5. '_def' → logprob: -5.666578769683838
    6. '_' → logprob: -6.041578769683838
    7. '_dd' → logprob: -6.416578769683838
    8. ' defaultdict' → logprob: -6.541578769683838
    9. '_Default' → logprob: -6.541578769683838
    10. '_d' → logprob: -7.166578769683838

Token 17: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.8584752678871155
    2. '_dd' → logprob: -1.3584752082824707
    3. '_d' → logprob: -1.8584752082824707
    4. 'd' → logprob: -3.2334752082824707
    5. 'def' → logprob: -3.6084752082824707
    6. 'default' → logprob: -3.7334752082824707
    7. '_def' → logprob: -3.7334752082824707
    8. '_df' → logprob: -4.358475208282471
    9. '_default' → logprob: -4.608475208282471
    10. '_D' → logprob: -4.983475208282471

Token 18: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: '_buf' (ID: 24144)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7039209008216858
    2. ',' → logprob: -1.078920841217041
    3. '.' → logprob: -3.328920841217041
    4. '__' → logprob: -3.828920841217041
    5. '
' → logprob: -3.953920841217041
    6. ' ' → logprob: -4.578920841217041
    7. 'import' → logprob: -4.828920841217041
    8. '_

' → logprob: -4.828920841217041
    9. '(' → logprob: -4.953920841217041
    10. '

' → logprob: -4.953920841217041

Token 20: '_r' (ID: 3442)
  Prédit: 'fer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fer' → logprob: -0.155813530087471
    2. '_' → logprob: -2.905813455581665
    3. 'uf' → logprob: -3.405813455581665
    4. 'f' → logprob: -3.530813455581665
    5. ' =' → logprob: -4.530813694000244
    6. 'uffer' → logprob: -4.905813694000244
    7. '```' → logprob: -6.030813694000244
    8. '_buf' → logprob: -6.155813694000244
    9. 'er' → logprob: -6.905813694000244
    10. 'ffer' → logprob: -7.030813694000244

Token 21: 'line' (ID: 1137)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.0014759370824322104
    2. 'e' → logprob: -7.126475811004639
    3. 'ef' → logprob: -7.751475811004639
    4. 'ec' → logprob: -9.251476287841797
    5. 'eg' → logprob: -10.126476287841797
    6. '_e' → logprob: -10.126476287841797
    7. '```' → logprob: -10.626476287841797
    8. 'ea' → logprob: -11.376476287841797
    9. '_' → logprob: -12.126476287841797
    10. 'ew' → logprob: -12.626476287841797

Token 22: ' =' (ID: 314)
  Prédit: 'ad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ad' → logprob: -0.3116244673728943
    2. ' =' → logprob: -1.811624526977539
    3. 'f' → logprob: -2.811624526977539
    4. 's' → logprob: -4.561624526977539
    5. '_' → logprob: -4.686624526977539
    6. 'd' → logprob: -5.436624526977539
    7. '=' → logprob: -5.561624526977539
    8. 'ader' → logprob: -5.686624526977539
    9. 'ads' → logprob: -6.311624526977539
    10. '_buf' → logprob: -6.561624526977539

Token 23: ' _' (ID: 1175)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '''' → logprob: -0.5864265561103821
    2. 'b' → logprob: -1.7114264965057373
    3. '[]' → logprob: -2.7114264965057373
    4. '""' → logprob: -2.9614264965057373
    5. '_b' → logprob: -3.3364264965057373
    6. '_lambda' → logprob: -3.9614264965057373
    7. ' b' → logprob: -4.211426734924316
    8. '_buf' → logprob: -4.211426734924316
    9. 'lambda' → logprob: -4.211426734924316
    10. 'None' → logprob: -4.961426734924316

Token 24: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.386147626675665e-05
    2. '_sys' → logprob: -9.625073432922363
    3. 'buf' → logprob: -12.125073432922363
    4. ' sys' → logprob: -14.250073432922363
    5. '=sys' → logprob: -14.625073432922363
    6. '	sys' → logprob: -14.875073432922363
    7. '_buf' → logprob: -15.000073432922363
    8. 'sy' → logprob: -15.500073432922363
    9. '(sys' → logprob: -16.12507438659668
    10. 'Sys' → logprob: -16.62507438659668

Token 25: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0031333938241004944
    2. '.stdout' → logprob: -6.128133296966553
    3. '.' → logprob: -7.503133296966553
    4. '._' → logprob: -8.878133773803711
    5. '.stderr' → logprob: -9.003133773803711
    6. '.readline' → logprob: -9.378133773803711
    7. '.std' → logprob: -10.628133773803711
    8. '.version' → logprob: -11.003133773803711
    9. '.argv' → logprob: -12.878133773803711
    10. 'stdin' → logprob: -13.253133773803711

Token 26: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000630947935860604
    2. '.read' → logprob: -8.000631332397461
    3. '.' → logprob: -8.375631332397461
    4. '.buffer' → logprob: -10.000631332397461
    5. 'read' → logprob: -12.000631332397461
    6. '.readlines' → logprob: -12.000631332397461
    7. 'buffer' → logprob: -12.875631332397461
    8. '_read' → logprob: -13.500631332397461
    9. ' readline' → logprob: -13.625631332397461
    10. '```' → logprob: -14.125631332397461

Token 27: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.025133339688181877
    2. '.' → logprob: -4.15013313293457
    3. '.read' → logprob: -4.77513313293457
    4. '._' → logprob: -8.40013313293457
    5. '_read' → logprob: -9.02513313293457
    6. 'read' → logprob: -9.02513313293457
    7. '_' → logprob: -10.02513313293457
    8. '.readlines' → logprob: -10.52513313293457
    9. '<|end|>' → logprob: -11.15013313293457
    10. '```' → logprob: -11.40013313293457

Token 28: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7054075002670288
    2. '()' → logprob: -0.7054075002670288
    3. '(
' → logprob: -5.330407619476318
    4. '
' → logprob: -5.955407619476318
    5. ',' → logprob: -6.955407619476318
    6. '<|end|>' → logprob: -6.955407619476318
    7. ')' → logprob: -7.455407619476318
    8. '()
' → logprob: -7.455407619476318
    9. '_' → logprob: -7.580407619476318
    10. '\n' → logprob: -8.58040714263916

Token 29: '_std' (ID: 50550)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6963056921958923
    2. '()' → logprob: -1.696305751800537
    3. '_' → logprob: -1.946305751800537
    4. 'def' → logprob: -2.321305751800537
    5. '(' → logprob: -4.196305751800537
    6. '(
' → logprob: -4.571305751800537
    7. '

' → logprob: -4.696305751800537
    8. '#' → logprob: -5.071305751800537
    9. '__' → logprob: -5.071305751800537
    10. '()
' → logprob: -5.321305751800537

Token 30: '_r' (ID: 3442)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6971836090087891
    2. 'out' → logprob: -0.6971836090087891
    3. 'err' → logprob: -5.947183609008789
    4. '_err' → logprob: -7.447183609008789
    5. '_out' → logprob: -8.072183609008789
    6. '_in' → logprob: -8.572183609008789
    7. '_' → logprob: -9.947183609008789
    8. 'er' → logprob: -10.572183609008789
    9. '__' → logprob: -10.947183609008789
    10. 'outin' → logprob: -11.072183609008789

Token 31: 'line' (ID: 1137)
  Prédit: 'ead'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ead' → logprob: -0.00812787376344204
    2. 'ad' → logprob: -6.258127689361572
    3. 'aw' → logprob: -6.383127689361572
    4. 'e' → logprob: -6.758127689361572
    5. 'un' → logprob: -7.008127689361572
    6. 'ec' → logprob: -7.383127689361572
    7. 'ine' → logprob: -7.383127689361572
    8. 'line' → logprob: -7.758127689361572
    9. 'ef' → logprob: -8.50812816619873
    10. 'ow' → logprob: -9.13312816619873

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05553904548287392
    2. '=' → logprob: -2.930539131164551
    3. '_' → logprob: -7.930539131164551
    4. 'ine' → logprob: -9.18053913116455
    5. ' ' → logprob: -9.30553913116455
    6. '_buf' → logprob: -10.43053913116455
    7. 'ne' → logprob: -10.55553913116455
    8. ' _' → logprob: -11.80553913116455
    9. '=_' → logprob: -11.93053913116455
    10. ',' → logprob: -12.55553913116455

Token 33: ' _' (ID: 1175)
  Prédit: '_sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sys' → logprob: -0.05375795066356659
    2. ' _' → logprob: -3.303757905960083
    3. '_buf' → logprob: -4.303758144378662
    4. '_std' → logprob: -7.178758144378662
    5. ' sys' → logprob: -7.928758144378662
    6. 'sys' → logprob: -8.303757667541504
    7. ' ' → logprob: -9.053757667541504
    8. '_b' → logprob: -9.428757667541504
    9. '_s' → logprob: -9.803757667541504
    10. '_stdout' → logprob: -10.178757667541504

Token 34: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0015671150758862495
    2. 'buf' → logprob: -6.5015668869018555
    3. '_sys' → logprob: -9.876566886901855
    4. '_buf' → logprob: -11.876566886901855
    5. 'sy' → logprob: -13.001566886901855
    6. '=sys' → logprob: -13.751566886901855
    7. ' sys' → logprob: -14.626566886901855
    8. '	sys' → logprob: -14.626566886901855
    9. 'std' → logprob: -14.751566886901855
    10. 's' → logprob: -14.751566886901855

Token 35: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6232931017875671
    2. '.stdin' → logprob: -1.748293161392212
    3. '.buffer' → logprob: -1.873293161392212
    4. '.readline' → logprob: -2.748293161392212
    5. '.stdout' → logprob: -3.373293161392212
    6. '.buf' → logprob: -3.748293161392212
    7. '.std' → logprob: -5.748292922973633
    8. '._' → logprob: -6.498292922973633
    9. '_r' → logprob: -6.623292922973633
    10. '_buf' → logprob: -6.623292922973633

Token 36: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.028918396681547165
    2. '.' → logprob: -3.653918504714966
    3. '.buffer' → logprob: -6.653918266296387
    4. '.read' → logprob: -7.028918266296387
    5. '<|end|>' → logprob: -8.403918266296387
    6. 'buffer' → logprob: -10.028918266296387
    7. 'read' → logprob: -10.403918266296387
    8. ' readline' → logprob: -10.528918266296387
    9. '<|end|>' → logprob: -11.028918266296387
    10. '```' → logprob: -11.153918266296387

Token 37: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.19887122511863708
    2. 'def' → logprob: -2.32387113571167
    3. '

' → logprob: -4.07387113571167
    4. '_' → logprob: -4.07387113571167
    5. '_buf' → logprob: -4.57387113571167
    6. '\n' → logprob: -4.82387113571167
    7. '_
' → logprob: -4.82387113571167
    8. '__' → logprob: -5.69887113571167
    9. '_

' → logprob: -6.32387113571167
    10. '
' → logprob: -6.44887113571167

Token 38: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.052302051335573196
    2. '_' → logprob: -3.552302122116089
    3. '__' → logprob: -5.17730188369751
    4. '
' → logprob: -5.67730188369751
    5. '_def' → logprob: -6.17730188369751
    6. '_de' → logprob: -6.55230188369751
    7. 'class' → logprob: -7.05230188369751
    8. 'd' → logprob: -7.17730188369751
    9. '#' → logprob: -7.17730188369751
    10. 'import' → logprob: -7.55230188369751

Token 39: ' _' (ID: 1175)
  Prédit: ' read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.6668840646743774
    2. ' _' → logprob: -1.2918840646743774
    3. ' ' → logprob: -2.291883945465088
    4. ' readline' → logprob: -3.541883945465088
    5. ' solve' → logprob: -3.791883945465088
    6. '_read' → logprob: -3.916883945465088
    7. '_' → logprob: -4.416883945465088
    8. ' main' → logprob: -4.541883945465088
    9. ' parse' → logprob: -5.166883945465088
    10. ' input' → logprob: -5.916883945465088

Token 40: 'i' (ID: 72)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.3397391438484192
    2. 'r' → logprob: -1.4647390842437744
    3. 'get' → logprob: -4.0897393226623535
    4. 'main' → logprob: -4.5897393226623535
    5. 'input' → logprob: -5.2147393226623535
    6. 'fast' → logprob: -5.9647393226623535
    7. 'buf' → logprob: -5.9647393226623535
    8. 'stdin' → logprob: -6.0897393226623535
    9. 'getline' → logprob: -6.0897393226623535
    10. '_read' → logprob: -6.4647393226623535

Token 41: '():' (ID: 9442)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04257659614086151
    2. 'nit' → logprob: -3.417576551437378
    3. 'nt' → logprob: -4.792576789855957
    4. 'm' → logprob: -8.292576789855957
    5. 'np' → logprob: -8.792576789855957
    6. '_n' → logprob: -10.417576789855957
    7. 'ntl' → logprob: -10.417576789855957
    8. 'ndef' → logprob: -10.792576789855957
    9. 'nner' → logprob: -10.792576789855957
    10. 'nite' → logprob: -11.042576789855957

Token 42: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21955019235610962
    2. 'return' → logprob: -2.344550132751465
    3. ' ' → logprob: -2.969550132751465
    4. ' _' → logprob: -3.719550132751465
    5. '    ' → logprob: -4.094550132751465
    6. '   ' → logprob: -5.219550132751465
    7. ' 
' → logprob: -7.469550132751465
    8. 'int' → logprob: -7.719550132751465
    9. ' int' → logprob: -8.094550132751465
    10. '    
' → logprob: -8.219550132751465

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3141711354255676
    2. 'int' → logprob: -1.6891710758209229
    3. ' _' → logprob: -3.564171075820923
    4. '_int' → logprob: -3.814171075820923
    5. ' next' → logprob: -4.064171314239502
    6. ' ' → logprob: -5.189171314239502
    7. ' map' → logprob: -5.314171314239502
    8. '_' → logprob: -6.314171314239502
    9. '_next' → logprob: -6.439171314239502
    10. '_map' → logprob: -7.189171314239502

Token 44: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6936892867088318
    2. '(_' → logprob: -0.6936892867088318
    3. '(
' → logprob: -9.068689346313477
    4. '(next' → logprob: -9.068689346313477
    5. '()' → logprob: -9.568689346313477
    6. '((' → logprob: -9.818689346313477
    7. '_' → logprob: -9.943689346313477
    8. '(_)' → logprob: -10.068689346313477
    9. '((_' → logprob: -10.568689346313477
    10. '(__' → logprob: -10.943689346313477

Token 45: 'buf' (ID: 13119)
  Prédit: '_buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.2764226794242859
    2. '_std' → logprob: -2.0264227390289307
    3. 'buf' → logprob: -2.5264227390289307
    4. 'std' → logprob: -3.5264227390289307
    5. 'i' → logprob: -9.526422500610352
    6. ' _' → logprob: -9.651422500610352
    7. '_sys' → logprob: -10.026422500610352
    8. ' std' → logprob: -10.026422500610352
    9. '_i' → logprob: -10.526422500610352
    10. 'sys' → logprob: -10.651422500610352

Token 46: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -1.306760805164231e-05
    2. '_b' → logprob: -12.37501335144043
    3. ' _' → logprob: -12.75001335144043
    4. '_' → logprob: -13.75001335144043
    5. 'r' → logprob: -14.25001335144043
    6. '_s' → logprob: -14.37501335144043
    7. '_read' → logprob: -14.87501335144043
    8. '_buf' → logprob: -15.00001335144043
    9. '_i' → logprob: -15.00001335144043
    10. '```' → logprob: -15.12501335144043

Token 47: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0011074711801484227
    2. 'ine' → logprob: -7.001107692718506
    3. '_line' → logprob: -8.876107215881348
    4. 'l' → logprob: -10.751107215881348
    5. 'lin' → logprob: -12.001107215881348
    6. 'ile' → logprob: -12.501107215881348
    7. 'li' → logprob: -13.001107215881348
    8. '```' → logprob: -13.001107215881348
    9. '_' → logprob: -13.126107215881348
    10. 'in' → logprob: -13.751107215881348

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.081908218562603
    2. '()' → logprob: -2.5819082260131836
    3. '().' → logprob: -5.831908226013184
    4. ' ())' → logprob: -10.331908226013184
    5. ')' → logprob: -11.331908226013184
    6. '())
' → logprob: -11.706908226013184
    7. '(),' → logprob: -11.706908226013184
    8. '()[' → logprob: -11.956908226013184
    9. '(' → logprob: -12.456908226013184
    10. '();)' → logprob: -12.956908226013184

Token 49: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4603075087070465
    2. 'def' → logprob: -1.2103074789047241
    3. '<|end|>' → logprob: -3.2103075981140137
    4. '\n' → logprob: -4.335307598114014
    5. '()' → logprob: -5.835307598114014
    6. '_' → logprob: -5.835307598114014
    7. ' 
' → logprob: -6.460307598114014
    8. 'newline' → logprob: -6.585307598114014
    9. '' → logprob: -6.835307598114014
    10. '```' → logprob: -6.960307598114014

Token 50: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.3089621067047119
    2. '_f' → logprob: -1.808962106704712
    3. '_' → logprob: -2.808962106704712
    4. '_i' → logprob: -4.058961868286133
    5. '_s' → logprob: -4.433961868286133
    6. '_str' → logprob: -5.558961868286133
    7. ' f' → logprob: -5.808961868286133
    8. 's' → logprob: -7.308961868286133
    9. ' s' → logprob: -7.308961868286133
    10. '_l' → logprob: -7.433961868286133

Token 51: 'il' (ID: 311)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5675615072250366
    2. 'f' → logprob: -1.5675615072250366
    3. 'i' → logprob: -1.8175615072250366
    4. 'l' → logprob: -3.567561626434326
    5. 'r' → logprob: -3.942561626434326
    6. 'is' → logprob: -6.067561626434326
    7. 'a' → logprob: -6.317561626434326
    8. '():' → logprob: -6.567561626434326
    9. '()' → logprob: -6.692561626434326
    10. 'b' → logprob: -6.942561626434326

Token 52: '():' (ID: 9442)
  Prédit: '():'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0761590301990509
    2. '()' → logprob: -3.0761590003967285
    3. 'ine' → logprob: -3.8261590003967285
    4. 'ist' → logprob: -5.4511590003967285
    5. 'ines' → logprob: -7.3261590003967285
    6. 'st' → logprob: -8.076159477233887
    7. 's' → logprob: -10.826159477233887
    8. ':' → logprob: -11.451159477233887
    9. '():
' → logprob: -11.451159477233887
    10. 'map' → logprob: -11.701159477233887

Token 53: ' return' (ID: 622)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.01153993234038353
    2. ' map' → logprob: -4.636539936065674
    3. 'list' → logprob: -6.636539936065674
    4. ' [' → logprob: -8.386539459228516
    5. ' return' → logprob: -8.761539459228516
    6. 'map' → logprob: -10.011539459228516
    7. '[' → logprob: -11.261539459228516
    8. ' lambda' → logprob: -11.886539459228516
    9. ' ' → logprob: -12.011539459228516
    10. 'return' → logprob: -13.011539459228516

Token 54: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.05193338543176651
    2. 'list' → logprob: -3.0519332885742188
    3. ' map' → logprob: -5.926933288574219
    4. 'map' → logprob: -8.051933288574219
    5. ' [' → logprob: -8.676933288574219
    6. '[' → logprob: -9.176933288574219
    7. ' ' → logprob: -10.676933288574219
    8. '_list' → logprob: -10.801933288574219
    9. '[list' → logprob: -11.301933288574219
    10. ' ' → logprob: -12.176933288574219

Token 55: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006349971517920494
    2. '(' → logprob: -7.500635147094727
    3. '(_' → logprob: -9.500635147094727
    4. '(int' → logprob: -12.625635147094727
    5. '_map' → logprob: -13.375635147094727
    6. '()' → logprob: -14.125635147094727
    7. 'map' → logprob: -14.500635147094727
    8. '	map' → logprob: -15.000635147094727
    9. ' (' → logprob: -15.500635147094727
    10. ' map' → logprob: -16.000635147094727

Token 56: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0027890654746443033
    2. 'int' → logprob: -6.00278902053833
    3. '(' → logprob: -8.252789497375488
    4. ',int' → logprob: -11.127789497375488
    5. '<int' → logprob: -11.252789497375488
    6. '=int' → logprob: -11.752789497375488
    7. ' int' → logprob: -12.002789497375488
    8. ')' → logprob: -12.877789497375488
    9. '[int' → logprob: -13.127789497375488
    10. ']int' → logprob: -13.252789497375488

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33279141783714294
    2. '_buf' → logprob: -1.5827914476394653
    3. ',_' → logprob: -2.832791328430176
    4. ' ,' → logprob: -4.207791328430176
    5. '(_' → logprob: -5.707791328430176
    6. ')(_' → logprob: -8.707791328430176
    7. '(' → logprob: -9.207791328430176
    8. '_buff' → logprob: -9.582791328430176
    9. '_BUF' → logprob: -9.707791328430176
    10. 'buf' → logprob: -10.582791328430176

Token 58: ' _' (ID: 1175)
  Prédit: '_buf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_buf' → logprob: -0.2304142266511917
    2. ' _' → logprob: -1.6054142713546753
    3. '_i' → logprob: -5.730414390563965
    4. '_sys' → logprob: -7.230414390563965
    5. ' buf' → logprob: -8.730414390563965
    6. '_' → logprob: -8.730414390563965
    7. '_buff' → logprob: -9.105414390563965
    8. ' i' → logprob: -9.230414390563965
    9. '_BUF' → logprob: -9.355414390563965
    10. ' ' → logprob: -9.605414390563965

Token 59: 'buf' (ID: 13119)
  Prédit: 'buf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'buf' → logprob: -0.0060065328143537045
    2. 'std' → logprob: -5.256006717681885
    3. '_buf' → logprob: -7.881006717681885
    4. ' buf' → logprob: -8.631006240844727
    5. '_std' → logprob: -9.131006240844727
    6. 'sys' → logprob: -9.881006240844727
    7. ' std' → logprob: -11.006006240844727
    8. '.buf' → logprob: -11.256006240844727
    9. '(buf' → logprob: -12.131006240844727
    10. '  ' → logprob: -12.881006240844727

Token 60: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0007585270795971155
    2. 'r' → logprob: -7.625758647918701
    3. 'line' → logprob: -8.250758171081543
    4. '_line' → logprob: -13.000758171081543
    5. '.readline' → logprob: -13.125758171081543
    6. '_' → logprob: -13.625758171081543
    7. 'rstrip' → logprob: -14.375758171081543
    8. '_l' → logprob: -14.625758171081543
    9. '_rl' → logprob: -14.625758171081543
    10. 'l' → logprob: -15.375758171081543

Token 61: 'line' (ID: 1137)
  Prédit: 'line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -2.3557529857498594e-05
    2. '_line' → logprob: -10.75002384185791
    3. '(line' → logprob: -14.62502384185791
    4. 'l' → logprob: -15.00002384185791
    5. 'ine' → logprob: -15.12502384185791
    6. '_l' → logprob: -15.87502384185791
    7. '(_' → logprob: -16.125022888183594
    8. '```' → logprob: -16.125022888183594
    9. 'ile' → logprob: -16.375022888183594
    10. 'list' → logprob: -16.625022888183594

Token 62: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7432603272027336e-06
    2. '()' → logprob: -14.000001907348633
    3. ' ().' → logprob: -15.125001907348633
    4. '))' → logprob: -15.375001907348633
    5. '()))' → logprob: -16.250001907348633
    6. ')' → logprob: -16.750001907348633
    7. '.decode' → logprob: -17.250001907348633
    8. '.strip' → logprob: -17.375001907348633
    9. '.split' → logprob: -17.375001907348633
    10. '(' → logprob: -17.625001907348633

Token 63: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08105640858411789
    2. 'decode' → logprob: -3.0810563564300537
    3. 'strip' → logprob: -3.8310563564300537
    4. 'rstrip' → logprob: -4.581056594848633
    5. ' split' → logprob: -12.206056594848633
    6. '().' → logprob: -12.706056594848633
    7. 'read' → logprob: -13.081056594848633
    8. '(split' → logprob: -13.206056594848633
    9. '_split' → logprob: -13.706056594848633
    10. ' decode' → logprob: -13.956056594848633

Token 64: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.008739493787288666
    2. '()' → logprob: -5.008739471435547
    3. '))' → logprob: -6.633739471435547
    4. '()))
' → logprob: -7.383739471435547
    5. '())' → logprob: -10.133739471435547
    6. '(' → logprob: -10.508739471435547
    7. 'b' → logprob: -11.633739471435547
    8. '()))

' → logprob: -12.758739471435547
    9. '()));' → logprob: -12.758739471435547
    10. '()))
' → logprob: -13.758739471435547

Token 65: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14238539338111877
    2. '_' → logprob: -2.767385482788086
    3. '
' → logprob: -3.517385482788086
    4. '()' → logprob: -4.392385482788086
    5. '#' → logprob: -5.392385482788086
    6. '\n' → logprob: -5.892385482788086
    7. '__' → logprob: -5.892385482788086
    8. ':' → logprob: -6.017385482788086
    9. '_
' → logprob: -6.142385482788086
    10. '\' → logprob: -6.142385482788086

Token 66: ' ___' (ID: 14092)
  Prédit: ' Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Counter' → logprob: -0.2650430202484131
    2. ' _' → logprob: -2.265043020248413
    3. ' ' → logprob: -2.765043020248413
    4. ' defaultdict' → logprob: -3.765043020248413
    5. ' Trie' → logprob: -4.515043258666992
    6. '_' → logprob: -5.015043258666992
    7. ' My' → logprob: -5.265043258666992
    8. 'Counter' → logprob: -5.390043258666992
    9. ' dict' → logprob: -6.140043258666992
    10. ' Solver' → logprob: -6.390043258666992

Token 67: 'Hash' (ID: 8579)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.2375398725271225
    2. 'dict' → logprob: -2.487539768218994
    3. 'default' → logprob: -2.862539768218994
    4. 'list' → logprob: -4.237539768218994
    5. 'int' → logprob: -5.112539768218994
    6. '_counter' → logprob: -5.112539768218994
    7. 'Default' → logprob: -5.362539768218994
    8. 'deque' → logprob: -5.362539768218994
    9. '__' → logprob: -5.487539768218994
    10. '_' → logprob: -5.862539768218994

Token 68: 'inator' (ID: 80972)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03086688555777073
    2. 'Map' → logprob: -4.780867099761963
    3. '():' → logprob: -4.905867099761963
    4. 'ing' → logprob: -5.655867099761963
    5. 'able' → logprob: -5.905867099761963
    6. '(' → logprob: -5.905867099761963
    7. 'Table' → logprob: -6.155867099761963
    8. '{' → logprob: -6.905867099761963
    9. '(object' → logprob: -7.780867099761963
    10. 'Mixin' → logprob: -7.905867099761963

Token 69: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004966750275343657
    2. '(' → logprob: -7.750496864318848
    3. '(object' → logprob: -10.625496864318848
    4. ' :' → logprob: -10.750496864318848
    5. ':
' → logprob: -11.625496864318848
    6. '():' → logprob: -12.125496864318848
    7. '{' → logprob: -13.375496864318848
    8. '(:' → logprob: -14.125496864318848
    9. ':**' → logprob: -14.500496864318848
    10. '<|end|>' → logprob: -14.500496864318848

Token 70: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1093347817659378
    2. '   ' → logprob: -2.609334707260132
    3. ':
' → logprob: -4.734334945678711
    4. ' :' → logprob: -5.234334945678711
    5. '(object' → logprob: -5.484334945678711
    6. '():' → logprob: -5.609334945678711
    7. ' ' → logprob: -5.859334945678711
    8. '(' → logprob: -6.234334945678711
    9. '<|end|>' → logprob: -7.109334945678711
    10. '_' → logprob: -7.734334945678711

Token 71: ' zz' (ID: 41240)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22284606099128723
    2. ' def' → logprob: -2.222846031188965
    3. 'def' → logprob: -2.847846031188965
    4. '_' → logprob: -4.347846031188965
    5. ' _' → logprob: -4.972846031188965
    6. '    ' → logprob: -5.847846031188965
    7. ' ' → logprob: -5.847846031188965
    8. ' __' → logprob: -6.347846031188965
    9. '__' → logprob: -6.597846031188965
    10. '    
' → logprob: -6.972846031188965

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4865144193172455
    2. '=' → logprob: -2.1115143299102783
    3. '__' → logprob: -2.2365143299102783
    4. 'def' → logprob: -3.3615143299102783
    5. '_' → logprob: -3.4865143299102783
    6. '_init' → logprob: -4.736514568328857
    7. '_hash' → logprob: -4.736514568328857
    8. '_seed' → logprob: -4.736514568328857
    9. '   ' → logprob: -4.986514568328857
    10. 'a' → logprob: -5.111514568328857

Token 73: ' {}
' (ID: 11421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3003214597702026
    2. ' ' → logprob: -1.3003214597702026
    3. '100' → logprob: -2.050321578979492
    4. '31' → logprob: -3.050321578979492
    5. '10' → logprob: -3.050321578979492
    6. '{}' → logprob: -3.425321578979492
    7. '[' → logprob: -3.925321578979492
    8. '1' → logprob: -4.300321578979492
    9. '(' → logprob: -4.550321578979492
    10. '17' → logprob: -4.675321578979492

Token 74: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06923756748437881
    2. 'def' → logprob: -2.819237470626831
    3. '_' → logprob: -6.06923770904541
    4. ' def' → logprob: -6.44423770904541
    5. '    
' → logprob: -6.69423770904541
    6. ' ' → logprob: -7.44423770904541
    7. '	def' → logprob: -7.81923770904541
    8. '    ' → logprob: -8.56923770904541
    9. '(' → logprob: -8.81923770904541
    10. '__' → logprob: -9.06923770904541

Token 75: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.33096441626548767
    2. '   ' → logprob: -1.45596444606781
    3. '@' → logprob: -3.9559643268585205
    4. ' def' → logprob: -4.5809645652771
    5. '    
' → logprob: -4.9559645652771
    6. ' ' → logprob: -5.0809645652771
    7. '_' → logprob: -6.0809645652771
    8. '__' → logprob: -6.8309645652771
    9. '(' → logprob: -7.8309645652771
    10. '    ' → logprob: -7.9559645652771

Token 76: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0715896487236023
    2. ' init' → logprob: -2.946589708328247
    3. '__' → logprob: -5.196589469909668
    4. ' ' → logprob: -5.446589469909668
    5. ' _' → logprob: -5.571589469909668
    6. '_init' → logprob: -7.071589469909668
    7. 'init' → logprob: -7.321589469909668
    8. ' get' → logprob: -7.946589469909668
    9. '_' → logprob: -8.321589469909668
    10. ' set' → logprob: -8.446589469909668

Token 77: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0003606104583013803
    2. 'new' → logprob: -8.500360488891602
    3. 'hash' → logprob: -9.750360488891602
    4. 'call' → logprob: -9.875360488891602
    5. 'ini' → logprob: -11.125360488891602
    6. 'get' → logprob: -11.375360488891602
    7. 'eq' → logprob: -12.000360488891602
    8. ' init' → logprob: -12.375360488891602
    9. 'in' → logprob: -12.625360488891602
    10. 'int' → logprob: -13.375360488891602

Token 78: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.006136157549917698
    2. '__' → logprob: -5.131135940551758
    3. '(' → logprob: -9.756135940551758
    4. '_(' → logprob: -9.756135940551758
    5. '(self' → logprob: -10.131135940551758
    6. '__(
' → logprob: -10.881135940551758
    7. '__((' → logprob: -11.631135940551758
    8. '___' → logprob: -11.631135940551758
    9. '__('' → logprob: -11.756135940551758
    10. '__(*' → logprob: -12.631135940551758

Token 79: 'p' (ID: 79)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0013432084815576673
    2. ' self' → logprob: -7.126343250274658
    3. 's' → logprob: -7.751343250274658
    4. '_' → logprob: -10.3763427734375
    5. '_self' → logprob: -10.7513427734375
    6. ')' → logprob: -11.2513427734375
    7. '__' → logprob: -11.2513427734375
    8. '   ' → logprob: -11.7513427734375
    9. ' ' → logprob: -12.2513427734375
    10. '(self' → logprob: -13.1263427734375

Token 80: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47657448053359985
    2. 'self' → logprob: -1.101574420928955
    3. ',self' → logprob: -3.601574420928955
    4. '_self' → logprob: -5.101574420928955
    5. 'elf' → logprob: -5.226574420928955
    6. ' self' → logprob: -5.476574420928955
    7. ',p' → logprob: -7.101574420928955
    8. '(self' → logprob: -7.226574420928955
    9. ',s' → logprob: -7.601574420928955
    10. ' ,' → logprob: -7.601574420928955

Token 81: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1353548765182495
    2. 's' → logprob: -1.7603548765182495
    3. ' self' → logprob: -2.385354995727539
    4. 'self' → logprob: -2.510354995727539
    5. ' data' → logprob: -3.510354995727539
    6. ' x' → logprob: -3.635354995727539
    7. 'x' → logprob: -3.760354995727539
    8. ' n' → logprob: -3.885354995727539
    9. 'lst' → logprob: -4.010354995727539
    10. ' a' → logprob: -4.260354995727539

Token 82: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020417040213942528
    2. ':' → logprob: -4.020417213439941
    3. ')' → logprob: -6.895417213439941
    4. ' ):' → logprob: -7.895417213439941
    5. ':str' → logprob: -8.270417213439941
    6. '):
' → logprob: -8.270417213439941
    7. ' :' → logprob: -9.270417213439941
    8. 't' → logprob: -9.520417213439941
    9. 'tr' → logprob: -9.645417213439941
    10. '=' → logprob: -9.770417213439941

Token 83: ' bb' (ID: 32433)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -2.306495189666748
    2. ' seed' → logprob: -2.431495189666748
    3. ' base' → logprob: -2.556495189666748
    4. ' _' → logprob: -2.681495189666748
    5. ' mod' → logprob: -2.806495189666748
    6. ' l' → logprob: -2.806495189666748
    7. ' M' → logprob: -2.931495189666748
    8. ' n' → logprob: -3.181495189666748
    9. ' k' → logprob: -3.181495189666748
    10. ' p' → logprob: -3.306495189666748

Token 84: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.147429957985878
    2. '=' → logprob: -3.022429943084717
    3. ',' → logprob: -3.147429943084717
    4. 'b' → logprob: -3.647429943084717
    5. ')' → logprob: -5.397429943084717
    6. '):
' → logprob: -5.397429943084717
    7. '=None' → logprob: -5.897429943084717
    8. ':' → logprob: -6.647429943084717
    9. 'f' → logprob: -6.897429943084717
    10. 'r' → logprob: -7.147429943084717

Token 85: ' mm' (ID: 8957)
  Prédit: ' M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' M' → logprob: -1.9844048023223877
    2. ' m' → logprob: -2.2344048023223877
    3. ' p' → logprob: -2.6094048023223877
    4. ' mod' → logprob: -3.0469048023223877
    5. ' mm' → logprob: -3.2969048023223877
    6. ' n' → logprob: -3.5469048023223877
    7. 'M' → logprob: -3.6094048023223877
    8. ' k' → logprob: -3.6094048023223877
    9. ' b' → logprob: -3.7344048023223877
    10. 'mod' → logprob: -3.7969048023223877

Token 86: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004290303681045771
    2. ',' → logprob: -5.7542901039123535
    3. ' ):' → logprob: -7.2542901039123535
    4. ')' → logprob: -8.254290580749512
    5. '=' → logprob: -10.004290580749512
    6. ':' → logprob: -10.129290580749512
    7. '):
' → logprob: -10.254290580749512
    8. '   ' → logprob: -12.629290580749512
    9. '=None' → logprob: -12.629290580749512
    10. ' ,' → logprob: -12.879290580749512

Token 87: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2126847803592682
    2. ':' → logprob: -1.8376847505569458
    3. ',' → logprob: -3.9626848697662354
    4. '):' → logprob: -5.587684631347656
    5. '   ' → logprob: -5.712684631347656
    6. '	   ' → logprob: -6.712684631347656
    7. '    ' → logprob: -7.212684631347656
    8. ' ' → logprob: -7.337684631347656
    9. ',p' → logprob: -7.462684631347656
    10. '	' → logprob: -7.837684631347656

Token 88: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.07520592212677002
    2. 'p' (adapté à ' p') → logprob: -3.2002058029174805
    3. '       ' → logprob: -4.3252058029174805
    4. '   ' → logprob: -4.4502058029174805
    5. ' ' → logprob: -5.5752058029174805
    6. '    ' → logprob: -7.2002058029174805
    7. '           ' → logprob: -7.5752058029174805
    8. '        ' → logprob: -7.9502058029174805
    9. 'n' → logprob: -8.82520580291748
    10. 'import' → logprob: -8.95020580291748

Token 89: '.bb' (ID: 188167)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.011006437242031097
    2. '.ss' → logprob: -5.3860063552856445
    3. '.sz' → logprob: -6.1360063552856445
    4. '.' → logprob: -6.3860063552856445
    5. '.bb' → logprob: -7.1360063552856445
    6. '.zz' → logprob: -7.8860063552856445
    7. '._' → logprob: -8.136006355285645
    8. '.hash' → logprob: -8.636006355285645
    9. ' .' → logprob: -8.636006355285645
    10. '.si' → logprob: -9.886006355285645

Token 90: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2544117569923401
    2. ' =' → logprob: -1.5044116973876953
    3. ',' → logprob: -6.004411697387695
    4. '=int' → logprob: -12.754411697387695
    5. '=b' → logprob: -13.379411697387695
    6. ' ,' → logprob: -13.504411697387695
    7. '=s' → logprob: -13.879411697387695
    8. '=p' → logprob: -14.254411697387695
    9. '=}' → logprob: -14.254411697387695
    10. ')' → logprob: -14.504411697387695

Token 91: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10097397863864899
    2. ' p' → logprob: -2.3509740829467773
    3. 's' → logprob: -7.850974082946777
    4. 'mm' → logprob: -8.350974082946777
    5. 'm' → logprob: -9.975974082946777
    6. ' mm' → logprob: -10.475974082946777
    7. ' s' → logprob: -10.975974082946777
    8. 'pp' → logprob: -11.475974082946777
    9. '   ' → logprob: -11.850974082946777
    10. '=' → logprob: -12.225974082946777

Token 92: '.mm' (ID: 55027)
  Prédit: '.s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.19180531799793243
    2. '.mm' → logprob: -1.941805362701416
    3. '.ss' → logprob: -3.566805362701416
    4. '.' → logprob: -6.941805362701416
    5. '.m' → logprob: -7.316805362701416
    6. 's' → logprob: -7.316805362701416
    7. ' =' → logprob: -9.066804885864258
    8. '=' → logprob: -9.191804885864258
    9. '.zz' → logprob: -9.816804885864258
    10. 'mm' → logprob: -9.816804885864258

Token 93: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5766931176185608
    2. '=' → logprob: -0.8266931176185608
    3. ',' → logprob: -7.201693058013916
    4. ' ' → logprob: -12.451693534851074
    5. '=s' → logprob: -12.826693534851074
    6. ' ,' → logprob: -14.451693534851074
    7. '=p' → logprob: -15.826693534851074
    8. '<|end|>' → logprob: -15.826693534851074
    9. '=int' → logprob: -16.076692581176758
    10. ',s' → logprob: -16.201692581176758

Token 94: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.5770465731620789
    2. ' bb' → logprob: -0.8270465731620789
    3. '(bb' → logprob: -6.9520463943481445
    4. ' ' → logprob: -9.452046394348145
    5. 'b' → logprob: -10.577046394348145
    6. '_bb' → logprob: -10.827046394348145
    7. '.bb' → logprob: -11.077046394348145
    8. '  ' → logprob: -12.952046394348145
    9. '   ' → logprob: -13.202046394348145
    10. '	b' → logprob: -13.702046394348145

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020756712183356285
    2. ' ,' → logprob: -6.252075672149658
    3. ',p' → logprob: -9.5020751953125
    4. ',s' → logprob: -10.5020751953125
    5. ',m' → logprob: -10.6270751953125
    6. ' ' → logprob: -11.3770751953125
    7. ',ll' → logprob: -13.8770751953125
    8. '<|end|>' → logprob: -13.8770751953125
    9. ',b' → logprob: -14.3770751953125
    10. ',int' → logprob: -14.6270751953125

Token 96: ' mm' (ID: 8957)
  Prédit: ' mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mm' → logprob: -0.07893098890781403
    2. 'mm' → logprob: -2.5789310932159424
    3. ' ' → logprob: -11.078930854797363
    4. 'm' → logprob: -11.703930854797363
    5. 'mmm' → logprob: -12.578930854797363
    6. '(mm' → logprob: -12.578930854797363
    7. ':mm' → logprob: -12.703930854797363
    8. '/mm' → logprob: -13.203930854797363
    9. '_mm' → logprob: -13.328930854797363
    10. ' m' → logprob: -13.953930854797363

Token 97: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013867855304852128
    2. '   ' → logprob: -7.251386642456055
    3. 'p' → logprob: -8.501386642456055
    4. 's' → logprob: -8.876386642456055
    5. ',' → logprob: -9.001386642456055
    6. ' p' → logprob: -9.251386642456055
    7. ' ' → logprob: -9.751386642456055
    8. ',p' → logprob: -11.001386642456055
    9. ' s' → logprob: -11.126386642456055
    10. '	p' → logprob: -12.501386642456055

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00886888150125742
    2. '
' → logprob: -5.50886869430542
    3. '<|end|>' → logprob: -6.00886869430542
    4. 's' → logprob: -7.13386869430542
    5. ',' → logprob: -7.50886869430542
    6. '   ' → logprob: -8.258869171142578
    7. ' ' → logprob: -8.508869171142578
    8. 'p' → logprob: -9.258869171142578
    9. '        
' → logprob: -9.508869171142578
    10. ',p' → logprob: -10.508869171142578

Token 99: ' n' (ID: 297)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.024982208386063576
    2. '       ' → logprob: -3.774982213973999
    3. ' p' → logprob: -6.52498197555542
    4. '   ' → logprob: -8.524982452392578
    5. ' ' → logprob: -10.399982452392578
    6. 's' → logprob: -11.399982452392578
    7. 'import' → logprob: -12.649982452392578
    8. '  ' → logprob: -13.024982452392578
    9. 'for' → logprob: -13.149982452392578
    10. '	p' → logprob: -13.149982452392578

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12708516418933868
    2. '=' → logprob: -2.1270852088928223
    3. '=len' → logprob: -9.252084732055664
    4. ',' → logprob: -10.252084732055664
    5. '=p' → logprob: -11.877084732055664
    6. ' ' → logprob: -12.002084732055664
    7. '   ' → logprob: -12.502084732055664
    8. 'p' → logprob: -12.502084732055664
    9. 's' → logprob: -13.252084732055664
    10. '=s' → logprob: -13.502084732055664

Token 101: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.1426934450864792
    2. 'len' → logprob: -2.017693519592285
    3. '(len' → logprob: -11.642693519592285
    4. 's' → logprob: -12.517693519592285
    5. '=len' → logprob: -12.892693519592285
    6. ' s' → logprob: -14.142693519592285
    7. ' ' → logprob: -14.642693519592285
    8. '[len' → logprob: -14.642693519592285
    9. '	len' → logprob: -14.892693519592285
    10. ',len' → logprob: -15.017693519592285

Token 102: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -7.32654589228332e-05
    2. '(' → logprob: -9.625073432922363
    3. 's' → logprob: -11.875073432922363
    4. '(
' → logprob: -16.625072479248047
    5. '(ss' → logprob: -17.125072479248047
    6. '(p' → logprob: -17.500072479248047
    7. ' s' → logprob: -18.000072479248047
    8. ' (' → logprob: -18.125072479248047
    9. '(n' → logprob: -19.375072479248047
    10. '(S' → logprob: -21.125072479248047

Token 103: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2017294466495514
    2. ')
' → logprob: -1.701729416847229
    3. ' )' → logprob: -8.951729774475098
    4. ')
' → logprob: -9.701729774475098
    5. ')p' → logprob: -9.826729774475098
    6. ' )
' → logprob: -10.076729774475098
    7. '       ' → logprob: -11.076729774475098
    8. ')

' → logprob: -12.576729774475098
    9. '   ' → logprob: -13.326729774475098
    10. ');' → logprob: -13.576729774475098

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004716464783996344
    2. '<|end|>' → logprob: -6.129716396331787
    3. 'p' → logprob: -6.504716396331787
    4. ' p' → logprob: -7.879716396331787
    5. '   ' → logprob: -8.254716873168945
    6. 's' → logprob: -9.504716873168945
    7. 'n' → logprob: -10.004716873168945
    8. ',' → logprob: -10.629716873168945
    9. ' ' → logprob: -10.754716873168945
    10. 'z' → logprob: -10.879716873168945

Token 105: ' h' (ID: 312)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0022513647563755512
    2. '       ' → logprob: -6.627251148223877
    3. ' p' → logprob: -7.377251148223877
    4. '   ' → logprob: -8.377251625061035
    5. 'hh' → logprob: -11.127251625061035
    6. 's' → logprob: -11.627251625061035
    7. 'h' (adapté à ' h') → logprob: -12.127251625061035
    8. 'assert' → logprob: -12.502251625061035
    9. 'v' → logprob: -12.752251625061035
    10. ' ' → logprob: -12.752251625061035

Token 106: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3096536695957184
    2. 'ash' → logprob: -1.934653639793396
    3. 's' → logprob: -2.9346537590026855
    4. '=' → logprob: -3.0596537590026855
    5. 'p' → logprob: -4.1846537590026855
    6. 'sh' → logprob: -6.3096537590026855
    7. 'h' → logprob: -7.3096537590026855
    8. '=p' → logprob: -7.3096537590026855
    9. ',' → logprob: -7.6846537590026855
    10. '0' → logprob: -7.8096537590026855

Token 107: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.378967821598053
    2. '0' → logprob: -1.2539677619934082
    3. '[p' → logprob: -3.753967761993408
    4. ' [' → logprob: -5.378967761993408
    5. ' ' → logprob: -7.503967761993408
    6. '[]' → logprob: -7.628967761993408
    7. 'p' → logprob: -8.253968238830566
    8. '[b' → logprob: -8.253968238830566
    9. '[s' → logprob: -8.503968238830566
    10. '1' → logprob: -10.503968238830566

Token 108: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -13.625003814697266
    3. '1' → logprob: -13.750003814697266
    4. '[' → logprob: -14.125003814697266
    5. 'p' → logprob: -14.125003814697266
    6. '   ' → logprob: -16.375003814697266
    7. 'None' → logprob: -16.500003814697266
    8. 's' → logprob: -17.125003814697266
    9. ']' → logprob: -17.187503814697266
    10. '(' → logprob: -17.250003814697266

Token 109: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03582794591784477
    2. ']*(' → logprob: -3.410827875137329
    3. ']*' → logprob: -6.535828113555908
    4. ']
' → logprob: -7.785828113555908
    5. ',' → logprob: -9.16082763671875
    6. ']+' → logprob: -9.28582763671875
    7. '0' → logprob: -10.66082763671875
    8. ')' → logprob: -10.91082763671875
    9. ' for' → logprob: -11.16082763671875
    10. ' ]' → logprob: -11.28582763671875

Token 110: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.054500666621607e-06
    2. ' n' → logprob: -13.37500286102295
    3. '(n' → logprob: -13.50000286102295
    4. '   ' → logprob: -17.500003814697266
    5. '	n' → logprob: -17.750003814697266
    6. '
' → logprob: -18.000003814697266
    7. '_n' → logprob: -18.125003814697266
    8. ')n' → logprob: -18.125003814697266
    9. '[n' → logprob: -18.250003814697266
    10. '1' → logprob: -18.875003814697266

Token 111: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009495720732957125
    2. ' +' → logprob: -7.000949382781982
    3. ')' → logprob: -10.62594985961914
    4. '+)' → logprob: -11.87594985961914
    5. '+n' → logprob: -12.75094985961914
    6. '+
' → logprob: -13.12594985961914
    7. '+p' → logprob: -13.50094985961914
    8. '+h' → logprob: -15.25094985961914
    9. '1' → logprob: -16.75094985961914
    10. ' )' → logprob: -16.87594985961914

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012678056373260915
    2. ' ' → logprob: -9.000126838684082
    3. '2' → logprob: -14.000126838684082
    4. '7' → logprob: -14.250126838684082
    5. '   ' → logprob: -14.812626838684082
    6. '```' → logprob: -14.875126838684082
    7. '  ' → logprob: -15.687626838684082
    8. '4' → logprob: -16.187625885009766
    9. '5' → logprob: -16.187625885009766
    10. '
' → logprob: -16.375125885009766

Token 113: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04865174740552902
    2. ')
' → logprob: -3.048651695251465
    3. ')
' → logprob: -9.798651695251465
    4. ')

' → logprob: -12.548651695251465
    5. ' )' → logprob: -12.923651695251465
    6. ' )
' → logprob: -14.048651695251465
    7. '       ' → logprob: -14.798651695251465
    8. '
' → logprob: -15.423651695251465
    9. ')#' → logprob: -15.673651695251465
    10. '),' → logprob: -15.798651695251465

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0743686780333519
    2. ' for' → logprob: -2.824368715286255
    3. 'for' → logprob: -4.824368476867676
    4. '<|end|>' → logprob: -6.199368476867676
    5. '   ' → logprob: -7.074368476867676
    6. '	for' → logprob: -7.074368476867676
    7. ' ' → logprob: -9.199368476867676
    8. 'x' → logprob: -9.949368476867676
    9. '	       ' → logprob: -10.074368476867676
    10. '	' → logprob: -10.199368476867676

Token 115: ' t' (ID: 260)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10957232117652893
    2. 'p' → logprob: -2.734572410583496
    3. ' for' → logprob: -3.859572410583496
    4. '       ' → logprob: -4.234572410583496
    5. 'pow' → logprob: -6.484572410583496
    6. '   ' → logprob: -7.109572410583496
    7. 'b' → logprob: -7.859572410583496
    8. ' p' → logprob: -8.359572410583496
    9. 'x' → logprob: -9.859572410583496
    10. 'base' → logprob: -10.109572410583496

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03426862880587578
    2. '=' → logprob: -3.409268617630005
    3. 'p' → logprob: -9.034268379211426
    4. 'o' → logprob: -9.159268379211426
    5. '=p' → logprob: -9.784268379211426
    6. 'oken' → logprob: -9.909268379211426
    7. 't' → logprob: -10.034268379211426
    8. 'k' → logprob: -10.159268379211426
    9. 'ok' → logprob: -10.284268379211426
    10. ',' → logprob: -10.284268379211426

Token 117: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014907543547451496
    2. 'p' → logprob: -4.514907360076904
    3. ' ' → logprob: -6.514907360076904
    4. 'pow' → logprob: -7.139907360076904
    5. 'bb' → logprob: -8.139907836914062
    6. '0' → logprob: -8.514907836914062
    7. '[p' → logprob: -8.639907836914062
    8. '127' → logprob: -8.639907836914062
    9. '[' → logprob: -9.014907836914062
    10. ' p' → logprob: -9.014907836914062

Token 118: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05530727654695511
    2. 'p' → logprob: -3.305307388305664
    3. 'bb' → logprob: -5.180307388305664
    4. 'pow' → logprob: -5.430307388305664
    5. '127' → logprob: -6.430307388305664
    6. '131' → logprob: -6.805307388305664
    7. '31' → logprob: -7.055307388305664
    8. '0' → logprob: -7.305307388305664
    9. ' ' → logprob: -8.180307388305664
    10. '257' → logprob: -8.430307388305664

Token 119: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.238458052277565
    2. '
' → logprob: -2.2384581565856934
    3. ' for' → logprob: -2.7384581565856934
    4. 'for' → logprob: -4.238458156585693
    5. '   ' → logprob: -4.488458156585693
    6. 'x' → logprob: -5.488458156585693
    7. ',' → logprob: -5.988458156585693
    8. ' p' → logprob: -6.363458156585693
    9. ' 
' → logprob: -6.738458156585693
    10. '    ' → logprob: -7.113458156585693

Token 120: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07701124995946884
    2. 'for' → logprob: -3.2020113468170166
    3. ' for' → logprob: -4.2020111083984375
    4. '<|end|>' → logprob: -4.3270111083984375
    5. '   ' → logprob: -5.4520111083984375
    6. 'x' → logprob: -8.702011108398438
    7. '	' → logprob: -8.827011108398438
    8. '	for' → logprob: -9.202011108398438
    9. 'b' → logprob: -9.327011108398438
    10. ' ' → logprob: -9.452011108398438

Token 121: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6362389326095581
    2. 'p' → logprob: -1.386238932609558
    3. ' for' → logprob: -1.886238932609558
    4. '       ' → logprob: -2.8862390518188477
    5. 'b' → logprob: -5.511239051818848
    6. ' p' → logprob: -5.886239051818848
    7. 'x' → logprob: -6.011239051818848
    8. '   ' → logprob: -6.261239051818848
    9. 'pow' → logprob: -6.761239051818848
    10. 'a' → logprob: -9.136239051818848

Token 122: ' j' (ID: 441)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.006011510267853737
    2. 'i' → logprob: -5.131011486053467
    3. ' ' → logprob: -9.881011962890625
    4. '	i' → logprob: -11.881011962890625
    5. '(i' → logprob: -12.256011962890625
    6. '_i' → logprob: -12.631011962890625
    7. ' j' → logprob: -13.006011962890625
    8. '  ' → logprob: -13.506011962890625
    9. '_' → logprob: -13.506011962890625
    10. ' _' → logprob: -13.631011962890625

Token 123: ',z' (ID: 54920)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.032298628240823746
    2. 'in' → logprob: -3.5322985649108887
    3. ',' → logprob: -6.032298564910889
    4. ' ' → logprob: -9.282299041748047
    5. ' ,' → logprob: -10.407299041748047
    6. 'n' → logprob: -12.907299041748047
    7. '  ' → logprob: -13.157299041748047
    8. ',in' → logprob: -13.157299041748047
    9. 'import' → logprob: -13.407299041748047
    10. 's' → logprob: -13.657299041748047

Token 124: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2887914776802063
    2. 'in' → logprob: -1.4137914180755615
    3. ',' → logprob: -4.913791656494141
    4. ' ' → logprob: -9.66379165649414
    5. 'enumer' → logprob: -10.16379165649414
    6. ',n' → logprob: -10.28879165649414
    7. ' ,' → logprob: -10.53879165649414
    8. ',in' → logprob: -10.91379165649414
    9. '   ' → logprob: -11.28879165649414
    10. ',z' → logprob: -11.41379165649414

Token 125: ' enumerate' (ID: 29671)
  Prédit: ' enumerate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enumerate' → logprob: -0.01815848983824253
    2. 'enumer' → logprob: -4.018158435821533
    3. ' zip' → logprob: -12.518158912658691
    4. 'en' → logprob: -13.643158912658691
    5. '(en' → logprob: -13.893158912658691
    6. '
' → logprob: -14.018158912658691
    7. 'zip' → logprob: -14.643158912658691
    8. '```' → logprob: -14.893158912658691
    9. ' range' → logprob: -15.018158912658691
    10. 'range' → logprob: -15.268158912658691

Token 126: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00045486391172744334
    2. 's' → logprob: -8.375454902648926
    3. '(range' → logprob: -8.875454902648926
    4. '(zip' → logprob: -10.625454902648926
    5. '(' → logprob: -10.875454902648926
    6. 'range' → logprob: -11.250454902648926
    7. '(ord' → logprob: -11.500454902648926
    8. ' s' → logprob: -12.250454902648926
    9. '((' → logprob: -12.375454902648926
    10. '(en' → logprob: -12.500454902648926

Token 127: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005356501322239637
    2. '):
' → logprob: -5.255356311798096
    3. ':' → logprob: -9.755356788635254
    4. ' ):' → logprob: -10.005356788635254
    5. ',' → logprob: -11.380356788635254
    6. '):

' → logprob: -13.255356788635254
    7. ')' → logprob: -13.755356788635254
    8. ']:' → logprob: -14.130356788635254
    9. '):
' → logprob: -14.255356788635254
    10. '}:' → logprob: -14.380356788635254

Token 128: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008700374513864517
    2. '       ' → logprob: -5.508700370788574
    3. ' ' → logprob: -7.008700370788574
    4. 't' → logprob: -7.508700370788574
    5. ',' → logprob: -7.758700370788574
    6. '   ' → logprob: -7.758700370788574
    7. '        ' → logprob: -8.133700370788574
    8. ' t' → logprob: -8.258700370788574
    9. ':' → logprob: -8.383700370788574
    10. '            
' → logprob: -8.508700370788574

Token 129: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0862107202410698
    2. 't' (adapté à ' t') → logprob: -2.7112107276916504
    3. ' p' → logprob: -4.58621072769165
    4. '           ' → logprob: -5.71121072769165
    5. '               ' → logprob: -7.21121072769165
    6. 'p' → logprob: -7.46121072769165
    7. ' ' → logprob: -8.211210250854492
    8. '
' → logprob: -8.211210250854492
    9. ' z' → logprob: -8.586210250854492
    10. '       ' → logprob: -8.961210250854492

Token 130: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48326125741004944
    2. ' =' → logprob: -1.108261227607727
    3. '+=' → logprob: -3.6082613468170166
    4. '*=' → logprob: -4.3582611083984375
    5. ' +=' → logprob: -4.4832611083984375
    6. '=(' → logprob: -6.8582611083984375
    7. ' *=' → logprob: -7.4832611083984375
    8. '+=(' → logprob: -8.733261108398438
    9. '+' → logprob: -10.358261108398438
    10. ' <<=' → logprob: -10.608261108398438

Token 131: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.7561177611351013
    2. '(t' → logprob: -1.006117820739746
    3. '(z' → logprob: -2.256117820739746
    4. '(p' → logprob: -2.881117820739746
    5. '((' → logprob: -6.756117820739746
    6. '(ord' → logprob: -6.881117820739746
    7. '(j' → logprob: -7.256117820739746
    8. '(' → logprob: -8.131117820739746
    9. ' ' → logprob: -8.506117820739746
    10. '(q' → logprob: -8.881117820739746

Token 132: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6359865069389343
    2. '(t' → logprob: -0.7609865069389343
    3. ' t' → logprob: -6.385986328125
    4. ' (' → logprob: -7.260986328125
    5. 'p' → logprob: -8.260986328125
    6. '(p' → logprob: -8.510986328125
    7. '   ' → logprob: -8.760986328125
    8. '(' → logprob: -9.010986328125
    9. '((' → logprob: -9.385986328125
    10. 'z' → logprob: -10.135986328125

Token 133: '*' (ID: 9)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.04103924334049225
    2. '*' → logprob: -3.291039228439331
    3. '*z' → logprob: -6.04103946685791
    4. '*p' → logprob: -7.79103946685791
    5. '*t' → logprob: -9.79103946685791
    6. '*(' → logprob: -9.79103946685791
    7. '*b' → logprob: -10.16603946685791
    8. '*j' → logprob: -11.41603946685791
    9. '+' → logprob: -11.54103946685791
    10. ' +' → logprob: -11.54103946685791

Token 134: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.5326693058013916
    2. 'p' → logprob: -0.9076693058013916
    3. ' p' → logprob: -5.1576690673828125
    4. ' bb' → logprob: -5.6576690673828125
    5. 'b' → logprob: -8.907669067382812
    6. '_bb' → logprob: -11.157669067382812
    7. '.bb' → logprob: -11.157669067382812
    8. '31' → logprob: -11.407669067382812
    9. '   ' → logprob: -11.532669067382812
    10. ' ' → logprob: -11.657669067382812

Token 135: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3133057951927185
    2. ' +' → logprob: -1.3133058547973633
    3. '+j' → logprob: -10.313305854797363
    4. '+p' → logprob: -12.063305854797363
    5. '+x' → logprob: -13.813305854797363
    6. '+(' → logprob: -13.938305854797363
    7. '+y' → logprob: -14.688305854797363
    8. ' ' → logprob: -14.813305854797363
    9. 'z' → logprob: -14.938305854797363
    10. '+t' → logprob: -15.063305854797363

Token 136: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3834272027015686
    2. ' z' → logprob: -1.8834271430969238
    3. 'ord' → logprob: -2.508427143096924
    4. '(ord' → logprob: -3.008427143096924
    5. ' ord' → logprob: -3.508427143096924
    6. '(z' → logprob: -5.508427143096924
    7. ' (' → logprob: -6.508427143096924
    8. '(' → logprob: -9.258427619934082
    9. ' ' → logprob: -11.133427619934082
    10. '   ' → logprob: -11.133427619934082

Token 137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021521867893170565
    2. ' )' → logprob: -8.875215530395508
    3. ')%' → logprob: -9.500215530395508
    4. ')&' → logprob: -15.375215530395508
    5. ')
' → logprob: -16.250215530395508
    6. ')#' → logprob: -16.500215530395508
    7. '   ' → logprob: -17.250215530395508
    8. '%' → logprob: -18.125215530395508
    9. ')p' → logprob: -19.125215530395508
    10. '1' → logprob: -19.125215530395508

Token 138: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38758420944213867
    2. ' %' → logprob: -1.1375842094421387
    3. ')' → logprob: -7.762584209442139
    4. '%n' → logprob: -9.137584686279297
    5. '%c' → logprob: -10.387584686279297
    6. '%m' → logprob: -10.637584686279297
    7. '%b' → logprob: -10.637584686279297
    8. ')%' → logprob: -10.762584686279297
    9. '%x' → logprob: -11.012584686279297
    10. '%e' → logprob: -11.012584686279297

Token 139: ' mm' (ID: 8957)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.10126812011003494
    2. ' mm' → logprob: -2.3512680530548096
    3. 'p' → logprob: -7.101268291473389
    4. 'm' → logprob: -9.47626781463623
    5. '_mm' → logprob: -9.47626781463623
    6. ' p' → logprob: -10.60126781463623
    7. '(mm' → logprob: -10.97626781463623
    8. '/mm' → logprob: -11.10126781463623
    9. 'mmm' → logprob: -11.72626781463623
    10. 'pm' → logprob: -11.85126781463623

Token 140: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08128152042627335
    2. '
' → logprob: -2.5812814235687256
    3. 'h' → logprob: -7.456281661987305
    4. ',' → logprob: -7.581281661987305
    5. '       ' → logprob: -7.706281661987305
    6. ' h' → logprob: -8.581281661987305
    7. '
' → logprob: -8.831281661987305
    8. '               ' → logprob: -9.331281661987305
    9. ',
' → logprob: -9.456281661987305
    10. '   ' → logprob: -9.831281661987305

Token 141: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001713590754661709
    2. '       ' → logprob: -9.500171661376953
    3. '   ' → logprob: -10.375171661376953
    4. 'h' → logprob: -10.625171661376953
    5. ',' → logprob: -11.125171661376953
    6. ' h' → logprob: -11.250171661376953
    7. '          ' → logprob: -12.375171661376953
    8. ' ' → logprob: -13.000171661376953
    9. '               ' → logprob: -13.000171661376953
    10. '__' → logprob: -14.500171661376953

Token 142: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.13591504096984863
    2. ' h' → logprob: -2.1359150409698486
    3. '           ' → logprob: -4.7609148025512695
    4. '       ' → logprob: -8.63591480255127
    5. '   ' → logprob: -9.38591480255127
    6. ' ' → logprob: -9.51091480255127
    7. '	h' → logprob: -11.01091480255127
    8. '_h' → logprob: -11.88591480255127
    9. '<|end|>' → logprob: -12.13591480255127
    10. '```' → logprob: -12.63591480255127

Token 143: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. '[h' → logprob: -16.500001907348633
    4. 'j' → logprob: -18.000001907348633
    5. '[js' → logprob: -18.500001907348633
    6. ' [' → logprob: -18.750001907348633
    7. '[p' → logprob: -18.750001907348633
    8. '[i' → logprob: -19.125001907348633
    9. '[++' → logprob: -19.750001907348633
    10. '.append' → logprob: -20.000001907348633

Token 144: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028280578553676605
    2. ' +' → logprob: -5.877828121185303
    3. ']' → logprob: -10.752827644348145
    4. ']+' → logprob: -14.252827644348145
    5. '+]' → logprob: -14.627827644348145
    6. '1' → logprob: -14.877827644348145
    7. '+j' → logprob: -15.752827644348145
    8. '＋' → logprob: -16.50282859802246
    9. '+
' → logprob: -16.87782859802246
    10. '=' → logprob: -17.12782859802246

Token 145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.25000286102295
    3. '```' → logprob: -15.00000286102295
    4. ')' → logprob: -15.50000286102295
    5. ']' → logprob: -15.62500286102295
    6. '   ' → logprob: -16.750001907348633
    7. '
' → logprob: -17.000001907348633
    8. '{' → logprob: -17.250001907348633
    9. '`' → logprob: -17.687501907348633
    10. '۱' → logprob: -17.937501907348633

Token 146: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0001733855315251276
    2. ' ]' → logprob: -9.625173568725586
    3. ']=' → logprob: -9.750173568725586
    4. ')' → logprob: -10.375173568725586
    5. '=' → logprob: -11.000173568725586
    6. ' =' → logprob: -14.000173568725586
    7. ')]' → logprob: -16.875173568725586
    8. ']+=' → logprob: -17.250173568725586
    9. ')=' → logprob: -17.500173568725586
    10. ' )' → logprob: -17.625173568725586

Token 147: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022463142871857
    2. ' =' → logprob: -1.9102246761322021
    3. '=h' → logprob: -15.160224914550781
    4. '=t' → logprob: -16.28522491455078
    5. ')' → logprob: -16.78522491455078
    6. '＝' → logprob: -18.03522491455078
    7. ']' → logprob: -18.28522491455078
    8. '=int' → logprob: -18.28522491455078
    9. ' ' → logprob: -18.41022491455078
    10. ']=' → logprob: -18.41022491455078

Token 148: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804171830415726
    2. ' t' → logprob: -3.288041830062866
    3. '	t' → logprob: -15.788042068481445
    4. ' ' → logprob: -16.288042068481445
    5. '_t' → logprob: -17.038042068481445
    6. '`t' → logprob: -17.163042068481445
    7. ' ' → logprob: -17.538042068481445
    8. '(t' → logprob: -17.913042068481445
    9. ')t' → logprob: -18.913042068481445
    10. 'p' → logprob: -18.913042068481445

Token 149: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00878604594618082
    2. '
' → logprob: -4.883786201477051
    3. '<|end|>' → logprob: -7.133786201477051
    4. '
' → logprob: -9.25878620147705
    5. '   ' → logprob: -9.75878620147705
    6. '	' → logprob: -9.75878620147705
    7. ',' → logprob: -10.38378620147705
    8. 'return' → logprob: -10.63378620147705
    9. '           ' → logprob: -10.88378620147705
    10. '<|end|>' → logprob: -11.50878620147705

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23289351165294647
    2. '<|end|>' → logprob: -1.982893466949463
    3. '   ' → logprob: -3.232893466949463
    4. '
' → logprob: -4.232893466949463
    5. 'def' → logprob: -4.482893466949463
    6. '        
' → logprob: -6.232893466949463
    7. '    
' → logprob: -7.482893466949463
    8. ' def' → logprob: -7.857893466949463
    9. ' ' → logprob: -7.982893466949463
    10. 'return' → logprob: -8.357893943786621

Token 151: ' p' (ID: 275)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015812043100595474
    2. 'p' (adapté à ' p') → logprob: -4.390811920166016
    3. '   ' → logprob: -6.515811920166016
    4. ' p' → logprob: -6.765811920166016
    5. 'def' → logprob: -7.890811920166016
    6. '
' → logprob: -8.515811920166016
    7. '	p' → logprob: -10.890811920166016
    8. '        
' → logprob: -11.140811920166016
    9. '           ' → logprob: -12.015811920166016
    10. ',p' → logprob: -12.140811920166016

Token 152: '._' (ID: 2697)
  Prédit: '.h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.00022952310973778367
    2. '._' → logprob: -9.125229835510254
    3. '.hh' → logprob: -9.875229835510254
    4. '.hs' → logprob: -10.375229835510254
    5. '.ht' → logprob: -11.375229835510254
    6. '.' → logprob: -12.250229835510254
    7. '.hl' → logprob: -12.250229835510254
    8. 'h' → logprob: -13.000229835510254
    9. '.hm' → logprob: -13.000229835510254
    10. '.hash' → logprob: -13.500229835510254

Token 153: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.008689268492162228
    2. 'hh' → logprob: -5.6336894035339355
    3. 'hash' → logprob: -5.7586894035339355
    4. '_h' → logprob: -7.7586894035339355
    5. 's' → logprob: -8.133688926696777
    6. 'H' → logprob: -8.383688926696777
    7. 'zz' → logprob: -8.508688926696777
    8. '_hash' → logprob: -8.883688926696777
    9. 'Hash' → logprob: -9.133688926696777
    10. 'hz' → logprob: -9.133688926696777

Token 154: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2814609706401825
    2. ' =' → logprob: -1.4064610004425049
    3. '=h' → logprob: -8.781460762023926
    4. ',' → logprob: -9.906460762023926
    5. 's' → logprob: -10.906460762023926
    6. '<|end|>' → logprob: -11.031460762023926
    7. 'h' → logprob: -11.406460762023926
    8. 'a' → logprob: -11.406460762023926
    9. '.append' → logprob: -11.531460762023926
    10. ' ' → logprob: -12.656460762023926

Token 155: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00014060820103622973
    2. ' h' → logprob: -8.875140190124512
    3. 'tuple' → logprob: -14.750140190124512
    4. '	h' → logprob: -16.500141143798828
    5. ' tuple' → logprob: -16.750141143798828
    6. '[h' → logprob: -16.750141143798828
    7. '(h' → logprob: -17.125141143798828
    8. '_h' → logprob: -17.125141143798828
    9. '   ' → logprob: -17.375141143798828
    10. ' ' → logprob: -17.750141143798828

Token 156: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04508506506681442
    2. '   ' → logprob: -3.2950849533081055
    3. ' def' → logprob: -5.2950849533081055
    4. '<|end|>' → logprob: -6.9200849533081055
    5. '
' → logprob: -7.4200849533081055
    6. '	def' → logprob: -8.420084953308105
    7. '       ' → logprob: -9.045084953308105
    8. '    
' → logprob: -10.045084953308105
    9. '        
' → logprob: -11.545084953308105
    10. '<|end|>' → logprob: -12.045084953308105

Token 157: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5872161984443665
    2. '<|end|>' → logprob: -1.5872161388397217
    3. '       ' → logprob: -2.0872161388397217
    4. '   ' → logprob: -2.2122161388397217
    5. ' def' → logprob: -5.337216377258301
    6. '<|end|>' → logprob: -7.837216377258301
    7. '
' → logprob: -8.4622163772583
    8. '	def' → logprob: -8.7122163772583
    9. ' ' → logprob: -8.9622163772583
    10. '```' → logprob: -9.7122163772583

Token 158: ' key' (ID: 2140)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1590796262025833
    2. 'p' → logprob: -2.0340795516967773
    3. '       ' → logprob: -4.534079551696777
    4. '   ' → logprob: -5.284079551696777
    5. ' def' → logprob: -8.659079551696777
    6. 's' → logprob: -9.534079551696777
    7. ' p' → logprob: -9.909079551696777
    8. 'b' → logprob: -11.159079551696777
    9. '#' → logprob: -11.409079551696777
    10. 'd' → logprob: -11.534079551696777

Token 159: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20148341357707977
    2. ' =' → logprob: -1.7014833688735962
    3. '(p' → logprob: -11.076483726501465
    4. ',' → logprob: -11.326483726501465
    5. 's' → logprob: -11.451483726501465
    6. '=p' → logprob: -11.576483726501465
    7. ')' → logprob: -11.826483726501465
    8. '=(' → logprob: -12.576483726501465
    9. '(' → logprob: -12.951483726501465
    10. '   ' → logprob: -13.701483726501465

Token 160: ' (' (ID: 350)
  Prédit: '(bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bb' → logprob: -1.0867154598236084
    2. '(tuple' → logprob: -1.7117154598236084
    3. '(mm' → logprob: -2.2117154598236084
    4. '(hash' → logprob: -2.3367154598236084
    5. '(s' → logprob: -2.4617154598236084
    6. ' (' → logprob: -3.7117154598236084
    7. '(p' → logprob: -3.8367154598236084
    8. '(b' → logprob: -3.9617154598236084
    9. '(bytes' → logprob: -3.9617154598236084
    10. '(' → logprob: -4.0867156982421875

Token 161: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.07722755521535873
    2. 'tuple' → logprob: -2.9522275924682617
    3. 'p' → logprob: -4.452227592468262
    4. 's' → logprob: -5.327227592468262
    5. '(bb' → logprob: -6.577227592468262
    6. 'len' → logprob: -6.702227592468262
    7. 'id' → logprob: -7.327227592468262
    8. 'mm' → logprob: -7.452227592468262
    9. ' bb' → logprob: -7.577227592468262
    10. '_bb' → logprob: -8.452227592468262

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005840110243298113
    2. ' ,' → logprob: -8.12558364868164
    3. ',m' → logprob: -8.37558364868164
    4. ',len' → logprob: -10.50058364868164
    5. ',n' → logprob: -11.00058364868164
    6. ',ll' → logprob: -12.12558364868164
    7. ',p' → logprob: -12.87558364868164
    8. ',s' → logprob: -13.12558364868164
    9. ',
' → logprob: -13.87558364868164
    10. ',length' → logprob: -14.87558364868164

Token 163: ' mm' (ID: 8957)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.006048955023288727
    2. ' mm' → logprob: -5.131049156188965
    3. 'n' → logprob: -9.256049156188965
    4. '_mm' → logprob: -12.131049156188965
    5. 'mmm' → logprob: -12.631049156188965
    6. ' n' → logprob: -12.631049156188965
    7. '(mm' → logprob: -13.131049156188965
    8. 'nn' → logprob: -13.256049156188965
    9. 'len' → logprob: -13.381049156188965
    10. '   ' → logprob: -13.506049156188965

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19634462893009186
    2. ')' → logprob: -1.8213446140289307
    3. ')
' → logprob: -4.32134485244751
    4. ' ,' → logprob: -6.57134485244751
    5. ' )' → logprob: -7.57134485244751
    6. ',n' → logprob: -8.071344375610352
    7. '       ' → logprob: -8.196344375610352
    8. ',len' → logprob: -8.321344375610352
    9. ',
' → logprob: -8.946344375610352
    10. ' )
' → logprob: -9.196344375610352

Token 165: ' n' (ID: 297)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.10149098187685013
    2. ' tuple' → logprob: -2.4764909744262695
    3. 'h' → logprob: -5.7264909744262695
    4. 'len' → logprob: -5.9764909744262695
    5. 'bytes' → logprob: -6.4764909744262695
    6. ')' → logprob: -6.7264909744262695
    7. ' h' → logprob: -7.1014909744262695
    8. 'n' → logprob: -7.1014909744262695
    9. ' bytes' → logprob: -7.4764909744262695
    10. 'id' → logprob: -7.4764909744262695

Token 166: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004034706857055426
    2. ')
' → logprob: -5.879034519195557
    3. ',' → logprob: -6.879034519195557
    4. '       ' → logprob: -8.879034996032715
    5. ' )' → logprob: -9.879034996032715
    6. ',)' → logprob: -12.879034996032715
    7. ')
' → logprob: -13.504034996032715
    8. '   ' → logprob: -13.754034996032715
    9. ' ,' → logprob: -14.004034996032715
    10. ')

' → logprob: -14.254034996032715

Token 167: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5115506052970886
    2. '
' → logprob: -1.0115506649017334
    3. '<|end|>' → logprob: -3.3865506649017334
    4. ',' → logprob: -7.011550426483154
    5. '        
' → logprob: -7.636550426483154
    6. 'def' → logprob: -8.011550903320312
    7. 'if' → logprob: -8.636550903320312
    8. '
' → logprob: -8.761550903320312
    9. ')' → logprob: -9.011550903320312
    10. ' if' → logprob: -9.136550903320312

Token 168: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04367291182279587
    2. '       ' → logprob: -3.418672800064087
    3. 'p' → logprob: -5.668673038482666
    4. 'try' → logprob: -6.043673038482666
    5. ' if' → logprob: -6.293673038482666
    6. 'k' → logprob: -7.418673038482666
    7. 'v' → logprob: -7.418673038482666
    8. 'c' → logprob: -8.418672561645508
    9. 'count' → logprob: -9.168672561645508
    10. 's' → logprob: -9.293672561645508

Token 169: ' key' (ID: 2140)
  Prédit: 'key'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.5760251879692078
    2. ' key' → logprob: -0.8260251879692078
    3. 'not' → logprob: -10.326025009155273
    4. ' not' → logprob: -10.451025009155273
    5. '(key' → logprob: -11.951025009155273
    6. '       ' → logprob: -12.576025009155273
    7. '
' → logprob: -12.701025009155273
    8. ' ' → logprob: -12.826025009155273
    9. '   ' → logprob: -13.076025009155273
    10. '           ' → logprob: -13.326025009155273

Token 170: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1638079434633255
    2. 'not' → logprob: -2.4138078689575195
    3. ' in' → logprob: -3.0388078689575195
    4. 'in' → logprob: -4.2888078689575195
    5. ')' → logprob: -12.53880786895752
    6. '   ' → logprob: -13.41380786895752
    7. '	not' → logprob: -13.91380786895752
    8. ' ' → logprob: -14.03880786895752
    9. '[' → logprob: -15.78880786895752
    10. '_not' → logprob: -15.91380786895752

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022664234042167664
    2. 'in' → logprob: -4.3976640701293945
    3. '___' → logprob: -5.3976640701293945
    4. ' p' → logprob: -6.1476640701293945
    5. ' not' → logprob: -6.5226640701293945
    6. ' __' → logprob: -7.3976640701293945
    7. 'p' → logprob: -7.5226640701293945
    8. '__' → logprob: -8.147664070129395
    9. ' ___' → logprob: -8.272664070129395
    10. 'not' → logprob: -10.022664070129395

Token 172: ' ___' (ID: 14092)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.040682993829250336
    2. 'p' → logprob: -3.2906830310821533
    3. '__' → logprob: -6.040682792663574
    4. ' ___' → logprob: -9.165682792663574
    5. ' p' → logprob: -9.415682792663574
    6. '.__' → logprob: -10.290682792663574
    7. '____' → logprob: -11.915682792663574
    8. '@@' → logprob: -12.915682792663574
    9. 'class' → logprob: -13.040682792663574
    10. '_' → logprob: -13.040682792663574

Token 173: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -8.53050296427682e-05
    2. '__' → logprob: -10.25008487701416
    3. '_H' → logprob: -11.25008487701416
    4. '_hash' → logprob: -11.75008487701416
    5. '.__' → logprob: -11.87508487701416
    6. 'Hasher' → logprob: -12.00008487701416
    7. '.Hash' → logprob: -12.37508487701416
    8. '___' → logprob: -12.62508487701416
    9. ' Hash' → logprob: -13.62508487701416
    10. '	Hash' → logprob: -14.00008487701416

Token 174: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -1.6240566083070007e-06
    2. 'aginator' → logprob: -14.500001907348633
    3. 'in' → logprob: -15.250001907348633
    4. 'imator' → logprob: -15.625001907348633
    5. 'enerator' → logprob: -16.000001907348633
    6. 'inin' → logprob: -16.125001907348633
    7. 'inat' → logprob: -16.250001907348633
    8. 'ominator' → logprob: -16.625001907348633
    9. 'ministrator' → logprob: -16.750001907348633
    10. 'imulator' → logprob: -17.375001907348633

Token 175: '.zz' (ID: 47122)
  Prédit: '.zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zz' → logprob: -3.702754474943504e-05
    2. '.' → logprob: -10.75003719329834
    3. ' .' → logprob: -11.75003719329834
    4. '   ' → logprob: -13.25003719329834
    5. ':' → logprob: -13.62503719329834
    6. '

' → logprob: -13.62503719329834
    7. 'zz' → logprob: -13.75003719329834
    8. '..' → logprob: -14.62503719329834
    9. '_.' → logprob: -15.25003719329834
    10. '__.' → logprob: -15.25003719329834

Token 176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02329276315867901
    2. ':
' → logprob: -3.7732927799224854
    3. '   ' → logprob: -11.148292541503906
    4. ' :' → logprob: -11.523292541503906
    5. ' and' → logprob: -11.773292541503906
    6. ':
' → logprob: -12.398292541503906
    7. ' or' → logprob: -12.523292541503906
    8. ':

' → logprob: -12.898292541503906
    9. '       ' → logprob: -14.273292541503906
    10. ',' → logprob: -14.273292541503906

Token 177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6639845967292786
    2. '___' → logprob: -0.7889845967292786
    3. ' ___' → logprob: -3.663984537124634
    4. 'p' → logprob: -6.788984775543213
    5. 's' → logprob: -7.663984775543213
    6. ' __' → logprob: -7.788984775543213
    7. '__' → logprob: -8.038984298706055
    8. ' p' → logprob: -8.288984298706055
    9. 'v' → logprob: -8.413984298706055
    10. '          ' → logprob: -8.538984298706055

Token 178: ' pw' (ID: 24359)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.38185691833496094
    2. 'pp' → logprob: -2.256856918334961
    3. 'pw' (adapté à ' pw') → logprob: -2.506856918334961
    4. 'pow' → logprob: -3.006856918334961
    5. '___' → logprob: -4.256856918334961
    6. 'b' → logprob: -4.506856918334961
    7. '_p' → logprob: -4.631856918334961
    8. 'bb' → logprob: -5.131856918334961
    9. '__' → logprob: -5.506856918334961
    10. 'x' → logprob: -5.756856918334961

Token 179: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20340730249881744
    2. '=' → logprob: -1.7034072875976562
    3. '=[]
' → logprob: -7.953407287597656
    4. '           ' → logprob: -8.328407287597656
    5. 'w' → logprob: -8.328407287597656
    6. '   ' → logprob: -8.828407287597656
    7. '=[' → logprob: -8.953407287597656
    8. '       ' → logprob: -9.203407287597656
    9. '=[]' → logprob: -9.328407287597656
    10. '[' → logprob: -9.328407287597656

Token 180: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006949679926037788
    2. '1' → logprob: -5.6319499015808105
    3. ' [' → logprob: -5.8819499015808105
    4. '{' → logprob: -7.7569499015808105
    5. '[p' → logprob: -9.131949424743652
    6. ' ' → logprob: -12.131949424743652
    7. 'pow' → logprob: -12.381949424743652
    8. '   ' → logprob: -12.631949424743652
    9. '[b' → logprob: -14.131949424743652
    10. '[n' → logprob: -14.256949424743652

Token 181: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2352385965641588e-05
    2. ' ' → logprob: -11.875012397766113
    3. '0' → logprob: -12.375012397766113
    4. '   ' → logprob: -14.625012397766113
    5. 'pow' → logprob: -15.000012397766113
    6. ']' → logprob: -16.375011444091797
    7. 'None' → logprob: -16.375011444091797
    8. '[' → logprob: -16.625011444091797
    9. '       ' → logprob: -17.125011444091797
    10. '           ' → logprob: -17.250011444091797

Token 182: ']*(' (ID: 92627)
  Prédit: ']
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6742284893989563
    2. ']' → logprob: -0.7992284893989563
    3. ']*(' → logprob: -3.2992284297943115
    4. ']*' → logprob: -5.924228668212891
    5. ']
' → logprob: -7.549228668212891
    6. '*(' → logprob: -8.17422866821289
    7. '           ' → logprob: -8.67422866821289
    8. ']+' → logprob: -9.29922866821289
    9. ',' → logprob: -10.04922866821289
    10. '       ' → logprob: -11.54922866821289

Token 183: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.300083648762666e-05
    2. ' n' → logprob: -10.250053405761719
    3. 'key' → logprob: -12.000053405761719
    4. '   ' → logprob: -12.875053405761719
    5. '(n' → logprob: -13.250053405761719
    6. '  ' → logprob: -13.750053405761719
    7. ' ' → logprob: -13.875053405761719
    8. 'max' → logprob: -13.875053405761719
    9. '_n' → logprob: -14.000053405761719
    10. '100' → logprob: -14.625053405761719

Token 184: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.822646693966817e-06
    2. ' +' → logprob: -12.125007629394531
    3. '+p' → logprob: -13.625007629394531
    4. '+
' → logprob: -14.625007629394531
    5. '+n' → logprob: -15.125007629394531
    6. '+j' → logprob: -16.00000762939453
    7. 'p' → logprob: -17.37500762939453
    8. ')' → logprob: -17.37500762939453
    9. '```' → logprob: -17.62500762939453
    10. '       ' → logprob: -17.62500762939453

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. ' ' → logprob: -11.62501049041748
    3. '2' → logprob: -13.87501049041748
    4. '   ' → logprob: -15.62501049041748
    5. '+' → logprob: -15.75001049041748
    6. '
' → logprob: -16.250011444091797
    7. '```' → logprob: -16.437511444091797
    8. '       ' → logprob: -17.812511444091797
    9. '``' → logprob: -18.062511444091797
    10. '１' → logprob: -18.125011444091797

Token 186: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.06137927249073982
    2. ')' → logprob: -2.9363791942596436
    3. '           ' → logprob: -5.061379432678223
    4. ')
' → logprob: -8.936379432678223
    5. ' )
' → logprob: -13.061379432678223
    6. ')

' → logprob: -14.061379432678223
    7. '       ' → logprob: -14.311379432678223
    8. '               ' → logprob: -14.686379432678223
    9. 'for' → logprob: -14.936379432678223
    10. ');
' → logprob: -15.061379432678223

Token 187: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00654057739302516
    2. ' for' → logprob: -5.506540775299072
    3. 'for' → logprob: -6.381540775299072
    4. '	       ' → logprob: -8.381540298461914
    5. '		' → logprob: -8.881540298461914
    6. '<|end|>' → logprob: -8.881540298461914
    7. '       ' → logprob: -9.006540298461914
    8. '   ' → logprob: -10.256540298461914
    9. '
' → logprob: -10.381540298461914
    10. '	   ' → logprob: -10.756540298461914

Token 188: ' u' (ID: 337)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01632384955883026
    2. '           ' → logprob: -4.266324043273926
    3. ' for' → logprob: -6.141324043273926
    4. '   ' → logprob: -12.766324043273926
    5. '       ' → logprob: -13.766324043273926
    6. '
' → logprob: -14.641324043273926
    7. '	for' → logprob: -15.016324043273926
    8. '		' → logprob: -15.516324043273926
    9. '	       ' → logprob: -15.641324043273926
    10. '               ' → logprob: -16.01632308959961

Token 189: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5890240669250488
    2. 'p' → logprob: -1.2140240669250488
    3. '=' → logprob: -1.9640240669250488
    4. 'for' → logprob: -5.589024066925049
    5. 'ntil' → logprob: -7.339024066925049
    6. '=u' → logprob: -8.08902359008789
    7. '=_' → logprob: -8.21402359008789
    8. 'ser' → logprob: -8.33902359008789
    9. '_=' → logprob: -8.33902359008789
    10. 'pper' → logprob: -8.46402359008789

Token 190: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007523931562900543
    2. 'pw' → logprob: -5.507524013519287
    3. ' ' → logprob: -5.882524013519287
    4. 'bb' → logprob: -8.007523536682129
    5. '   ' → logprob: -9.757523536682129
    6. '___' → logprob: -10.007523536682129
    7. '  ' → logprob: -10.382523536682129
    8. ' pw' → logprob: -10.632523536682129
    9. '__' → logprob: -10.882523536682129
    10. 'b' → logprob: -11.132523536682129

Token 191: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08963021636009216
    2. 'bb' → logprob: -2.589630126953125
    3. 'pw' → logprob: -4.839630126953125
    4. 'p' → logprob: -7.214630126953125
    5. ' ' → logprob: -7.464630126953125
    6. '___' → logprob: -8.214630126953125
    7. '_bb' → logprob: -8.214630126953125
    8. '__' → logprob: -8.339630126953125
    9. '(bb' → logprob: -9.089630126953125
    10. '0' → logprob: -9.589630126953125

Token 192: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029569268226623535
    2. '<|end|>' → logprob: -3.779569149017334
    3. 'for' → logprob: -5.779569149017334
    4. ' for' → logprob: -6.279569149017334
    5. '<|end|>' → logprob: -6.904569149017334
    6. '		' → logprob: -9.654569625854492
    7. 'def' → logprob: -9.654569625854492
    8. '          ' → logprob: -9.904569625854492
    9. ',' → logprob: -10.279569625854492
    10. '	       ' → logprob: -11.154569625854492

Token 193: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0030232255812734365
    2. 'for' → logprob: -6.128023147583008
    3. ' for' → logprob: -7.128023147583008
    4. '<|end|>' → logprob: -11.003023147583008
    5. '	       ' → logprob: -12.128023147583008
    6. '		' → logprob: -12.128023147583008
    7. '       ' → logprob: -12.878023147583008
    8. '   ' → logprob: -14.128023147583008
    9. '		   ' → logprob: -14.253023147583008
    10. '          ' → logprob: -14.253023147583008

Token 194: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.11477620899677277
    2. ' for' → logprob: -2.364776134490967
    3. '           ' → logprob: -4.239776134490967
    4. '	for' → logprob: -11.114776611328125
    5. '		' → logprob: -11.614776611328125
    6. '       ' → logprob: -11.864776611328125
    7. '
' → logprob: -12.239776611328125
    8. '	       ' → logprob: -12.239776611328125
    9. '   ' → logprob: -12.614776611328125
    10. '               ' → logprob: -13.489776611328125

Token 195: ' q' (ID: 2335)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.034737009555101395
    2. ' i' → logprob: -3.9097371101379395
    3. 'j' → logprob: -5.0347371101379395
    4. 'k' → logprob: -5.1597371101379395
    5. '_' → logprob: -7.5347371101379395
    6. '_i' → logprob: -7.6597371101379395
    7. 'x' → logprob: -8.034736633300781
    8. ' j' → logprob: -8.909736633300781
    9. ' k' → logprob: -9.284736633300781
    10. 'r' → logprob: -10.909736633300781

Token 196: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3872472047805786
    2. 'in' → logprob: -1.1372472047805786
    3. 'n' → logprob: -9.387247085571289
    4. ' ' → logprob: -9.512247085571289
    5. '1' → logprob: -9.637247085571289
    6. '
' → logprob: -10.887247085571289
    7. 'range' → logprob: -11.137247085571289
    8. 'i' → logprob: -11.387247085571289
    9. ',' → logprob: -11.512247085571289
    10. 'import' → logprob: -11.887247085571289

Token 197: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0003361774142831564
    2. ' range' → logprob: -8.000336647033691
    3. ' ' → logprob: -15.125336647033691
    4. '   ' → logprob: -15.375336647033691
    5. '	range' → logprob: -16.000335693359375
    6. '
' → logprob: -16.375335693359375
    7. '  ' → logprob: -16.625335693359375
    8. '(range' → logprob: -16.750335693359375
    9. 'r' → logprob: -18.250335693359375
    10. '_' → logprob: -18.250335693359375

Token 198: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20155395567417145
    2. '(n' → logprob: -1.7015539407730103
    3. '1' → logprob: -9.076554298400879
    4. 'n' → logprob: -10.701554298400879
    5. ' (' → logprob: -13.451554298400879
    6. '   ' → logprob: -14.326554298400879
    7. '(p' → logprob: -14.951554298400879
    8. '(q' → logprob: -14.951554298400879
    9. ' ' → logprob: -15.076554298400879
    10. ' n' → logprob: -15.076554298400879

Token 199: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2778435945510864
    2. '+' → logprob: -2.152843475341797
    3. '):' → logprob: -2.152843475341797
    4. '1' → logprob: -4.652843475341797
    5. ' +' → logprob: -8.652843475341797
    6. '           ' → logprob: -8.777843475341797
    7. '):
' → logprob: -9.402843475341797
    8. ' ):
' → logprob: -9.652843475341797
    9. '-' → logprob: -10.027843475341797
    10. '       ' → logprob: -10.152843475341797

Token 200: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38159260153770447
    2. ' u' → logprob: -1.2565926313400269
    3. 'u' → logprob: -3.7565925121307373
    4. '           ' → logprob: -6.131592750549316
    5. '            ' → logprob: -6.881592750549316
    6. ' pw' → logprob: -7.256592750549316
    7. '	           ' → logprob: -7.256592750549316
    8. ',' → logprob: -7.381592750549316
    9. '                
' → logprob: -8.006592750549316
    10. ' ' → logprob: -8.131592750549316

Token 201: ' pw' (ID: 24359)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' (adapté à ' pw') → logprob: -0.800015389919281
    2. 'u' → logprob: -1.5500154495239258
    3. ' pw' → logprob: -1.9250154495239258
    4. '               ' → logprob: -1.9250154495239258
    5. ' u' → logprob: -3.175015449523926
    6. '           ' → logprob: -5.550015449523926
    7. '	pw' → logprob: -8.550015449523926
    8. 'q' → logprob: -8.925015449523926
    9. '                   ' → logprob: -9.175015449523926
    10. '   ' → logprob: -9.425015449523926

Token 202: '[q' (ID: 99278)
  Prédit: '[q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[q' → logprob: -3.869639476761222e-05
    2. ' [' → logprob: -11.000039100646973
    3. '   ' → logprob: -12.250039100646973
    4. '[' → logprob: -12.375039100646973
    5. '
' → logprob: -12.875039100646973
    6. '(q' → logprob: -13.000039100646973
    7. '[u' → logprob: -13.125039100646973
    8. '=' → logprob: -13.375039100646973
    9. ' =' → logprob: -13.750039100646973
    10. '=q' → logprob: -14.625039100646973

Token 203: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0026848025154322386
    2. ' +' → logprob: -6.002684593200684
    3. ']' → logprob: -8.502684593200684
    4. '1' → logprob: -13.127684593200684
    5. ']+=' → logprob: -13.877684593200684
    6. '+
' → logprob: -15.002684593200684
    7. '+]' → logprob: -15.127684593200684
    8. 'q' → logprob: -15.127684593200684
    9. ']+' → logprob: -15.252684593200684
    10. '+=' → logprob: -15.252684593200684

Token 204: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.1557283111615106e-05
    2. ' ' → logprob: -10.750041961669922
    3. '   ' → logprob: -11.125041961669922
    4. '+' → logprob: -13.125041961669922
    5. ']' → logprob: -13.625041961669922
    6. 'q' → logprob: -14.375041961669922
    7. '```' → logprob: -14.687541961669922
    8. '=' → logprob: -16.000041961669922
    9. '    ' → logprob: -16.062541961669922
    10. '' → logprob: -16.500041961669922

Token 205: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004963174578733742
    2. ']=' → logprob: -8.000495910644531
    3. ' ]' → logprob: -9.250495910644531
    4. '=' → logprob: -10.125495910644531
    5. ' =' → logprob: -11.375495910644531
    6. ']=(' → logprob: -11.750495910644531
    7. ')' → logprob: -13.000495910644531
    8. 'q' → logprob: -14.500495910644531
    9. '=q' → logprob: -14.500495910644531
    10. ' ' → logprob: -14.750495910644531

Token 206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007608755491673946
    2. ' =' → logprob: -4.882608890533447
    3. '*=' → logprob: -13.382608413696289
    4. '=u' → logprob: -14.882608413696289
    5. ']' → logprob: -15.132608413696289
    6. ' ' → logprob: -16.13260841369629
    7. ',' → logprob: -16.25760841369629
    8. ']=' → logprob: -16.38260841369629
    9. '=(' → logprob: -16.38260841369629
    10. '=

' → logprob: -16.88260841369629

Token 207: ' u' (ID: 337)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.30186164379119873
    2. 'pw' → logprob: -1.6768616437911987
    3. ' (' → logprob: -3.6768617630004883
    4. '(p' → logprob: -3.6768617630004883
    5. 'u' → logprob: -4.051861763000488
    6. ' pw' → logprob: -5.426861763000488
    7. '(' → logprob: -7.676861763000488
    8. ' u' → logprob: -8.301861763000488
    9. 'p' → logprob: -8.926861763000488
    10. '   ' → logprob: -9.676861763000488

Token 208: ' =' (ID: 314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13271450996398926
    2. ' *' → logprob: -2.1327145099639893
    3. '*u' → logprob: -5.50771427154541
    4. '*p' → logprob: -6.38271427154541
    5. '*b' → logprob: -11.88271427154541
    6. '*q' → logprob: -12.25771427154541
    7. '*(' → logprob: -12.63271427154541
    8. '*w' → logprob: -12.63271427154541
    9. '
' → logprob: -13.50771427154541
    10. '*pi' → logprob: -14.63271427154541

Token 209: ' u' (ID: 337)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.6420488953590393
    2. ' (' → logprob: -0.7670488953590393
    3. ' u' → logprob: -5.0170488357543945
    4. 'u' → logprob: -5.8920488357543945
    5. '(' → logprob: -11.142048835754395
    6. ' ' → logprob: -13.392048835754395
    7. '	u' → logprob: -13.642048835754395
    8. '   ' → logprob: -14.892048835754395
    9. '(p' → logprob: -15.142048835754395
    10. '_u' → logprob: -15.517048835754395

Token 210: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10441042482852936
    2. ' *' → logprob: -2.354410409927368
    3. '*p' → logprob: -5.479410648345947
    4. '*b' → logprob: -11.604410171508789
    5. '*q' → logprob: -12.104410171508789
    6. '*u' → logprob: -12.479410171508789
    7. '*(' → logprob: -13.729410171508789
    8. ' ' → logprob: -14.479410171508789
    9. '*object' → logprob: -14.479410171508789
    10. '*pi' → logprob: -14.979410171508789

Token 211: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -4.584861744660884e-05
    2. ' bb' → logprob: -10.000045776367188
    3. 'p' → logprob: -14.875045776367188
    4. '_bb' → logprob: -17.125045776367188
    5. '(bb' → logprob: -17.125045776367188
    6. 'b' → logprob: -17.250045776367188
    7. 'bbb' → logprob: -18.250045776367188
    8. ' p' → logprob: -19.000045776367188
    9. '.bb' → logprob: -19.500045776367188
    10. '   ' → logprob: -19.625045776367188

Token 212: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.2014191895723343
    2. '%' → logprob: -1.7014192342758179
    3. '%c' → logprob: -12.82641887664795
    4. '%m' → logprob: -13.82641887664795
    5. '%n' → logprob: -14.32641887664795
    6. '%b' → logprob: -14.45141887664795
    7. '%d' → logprob: -14.70141887664795
    8. ' ' → logprob: -15.70141887664795
    9. '%x' → logprob: -15.82641887664795
    10. '%e' → logprob: -15.95141887664795

Token 213: ' mm' (ID: 8957)
  Prédit: 'mm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mm' → logprob: -0.011069400236010551
    2. ' mm' → logprob: -4.511069297790527
    3. '_mm' → logprob: -11.011069297790527
    4. 'mmm' → logprob: -12.636069297790527
    5. 'm' → logprob: -14.011069297790527
    6. ' ' → logprob: -15.136069297790527
    7. '(mm' → logprob: -15.261069297790527
    8. ':mm' → logprob: -15.636069297790527
    9. '/mm' → logprob: -16.011070251464844
    10. 'mmmm' → logprob: -16.261070251464844

Token 214: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.839809238910675
    2. '       ' → logprob: -1.7148091793060303
    3. ' return' → logprob: -2.0898091793060303
    4. 'return' → logprob: -2.0898091793060303
    5. '<|end|>' → logprob: -2.7148091793060303
    6. ')' → logprob: -3.0898091793060303
    7. '
' → logprob: -4.589809417724609
    8. ')return' → logprob: -5.214809417724609
    9. '               ' → logprob: -5.589809417724609
    10. '<|end|>' → logprob: -5.839809417724609

Token 215: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2977815568447113
    2. '<|end|>' → logprob: -1.5477815866470337
    3. '           ' → logprob: -3.797781467437744
    4. ')' → logprob: -4.547781467437744
    5. 'return' → logprob: -5.547781467437744
    6. '   ' → logprob: -6.172781467437744
    7. ' return' → logprob: -6.297781467437744
    8. '<|end|>' → logprob: -6.297781467437744
    9. '               ' → logprob: -8.172781944274902
    10. ')return' → logprob: -8.172781944274902

Token 216: ' ___' (ID: 14092)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' (adapté à ' ___') → logprob: -0.08402622491121292
    2. '       ' → logprob: -2.584026336669922
    3. '           ' → logprob: -5.709026336669922
    4. '   ' → logprob: -7.459026336669922
    5. 'p' → logprob: -7.584026336669922
    6. '__' → logprob: -8.834026336669922
    7. '          ' → logprob: -9.209026336669922
    8. '               ' → logprob: -9.584026336669922
    9. 'def' → logprob: -10.209026336669922
    10. '      ' → logprob: -10.209026336669922

Token 217: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -3.953082341467962e-05
    2. '_hash' → logprob: -10.500039100646973
    3. '	Hash' → logprob: -12.750039100646973
    4. ' Hash' → logprob: -13.125039100646973
    5. '_H' → logprob: -13.250039100646973
    6. '_HASH' → logprob: -13.750039100646973
    7. '__' → logprob: -13.875039100646973
    8. '<Hash' → logprob: -13.875039100646973
    9. 'Hasher' → logprob: -13.875039100646973
    10. '.Hash' → logprob: -14.500039100646973

Token 218: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -6.704273118884885e-07
    2. 'ominator' → logprob: -15.875000953674316
    3. 'ocator' → logprob: -16.25
    4. 'imator' → logprob: -16.5
    5. 'inin' → logprob: -16.625
    6. 'enerator' → logprob: -17.0
    7. 'ilator' → logprob: -17.375
    8. 'aginator' → logprob: -17.5
    9. 'inat' → logprob: -17.75
    10. 'ibrator' → logprob: -17.875

Token 219: '.zz' (ID: 47122)
  Prédit: '.zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zz' → logprob: -6.749814019713085e-06
    2. 'zz' → logprob: -12.500006675720215
    3. ' .' → logprob: -13.000006675720215
    4. '.' → logprob: -15.375006675720215
    5. '.z' → logprob: -15.875006675720215
    6. '.qq' → logprob: -16.37500762939453
    7. '.zza' → logprob: -16.75000762939453
    8. ' zz' → logprob: -16.87500762939453
    9. '.gg' → logprob: -17.37500762939453
    10. '__.' → logprob: -17.62500762939453

Token 220: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -1.2471589798224159e-05
    2. '[' → logprob: -11.375012397766113
    3. ' [' → logprob: -14.250012397766113
    4. 'key' → logprob: -15.500012397766113
    5. ',key' → logprob: -17.25001335144043
    6. ' key' → logprob: -17.25001335144043
    7. '[q' → logprob: -17.62501335144043
    8. '[k' → logprob: -18.25001335144043
    9. '__[' → logprob: -18.25001335144043
    10. ')[' → logprob: -18.75001335144043

Token 221: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009326283819973469
    2. ']=' → logprob: -4.884326457977295
    3. '=' → logprob: -6.634326457977295
    4. '][' → logprob: -8.384325981140137
    5. ' =' → logprob: -10.009325981140137
    6. '[q' → logprob: -10.009325981140137
    7. ' ]' → logprob: -10.509325981140137
    8. '[key' → logprob: -10.634325981140137
    9. ')' → logprob: -11.634325981140137
    10. '[' → logprob: -12.259325981140137

Token 222: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00861456897109747
    2. ' =' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. '=p' → logprob: -18.258615493774414
    5. '   ' → logprob: -18.383615493774414
    6. '[key' → logprob: -18.633615493774414
    7. '  ' → logprob: -18.883615493774414
    8. '=q' → logprob: -19.008615493774414
    9. '[' → logprob: -19.383615493774414
    10. '＝' → logprob: -19.383615493774414

Token 223: ' pw' (ID: 24359)
  Prédit: 'pw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' → logprob: -0.16022716462612152
    2. ' pw' → logprob: -1.9102271795272827
    3. '	pw' → logprob: -12.910226821899414
    4. '_pw' → logprob: -14.785226821899414
    5. ' ' → logprob: -17.535226821899414
    6. 'pow' → logprob: -17.660226821899414
    7. 'fw' → logprob: -17.660226821899414
    8. 'p' → logprob: -18.035226821899414
    9. 'qw' → logprob: -18.535226821899414
    10. 'Pw' → logprob: -18.535226821899414

Token 224: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018802721053361893
    2. 'p' → logprob: -4.393802642822266
    3. 'def' → logprob: -5.518802642822266
    4. '
' → logprob: -6.518802642822266
    5. ' p' → logprob: -8.268802642822266
    6. '<|end|>' → logprob: -8.643802642822266
    7. '   ' → logprob: -9.268802642822266
    8. '        
' → logprob: -9.643802642822266
    9. 'pw' → logprob: -10.768802642822266
    10. '           ' → logprob: -11.018802642822266

Token 225: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19126346707344055
    2. 'def' → logprob: -1.8162634372711182
    3. 'p' → logprob: -5.191263675689697
    4. '   ' → logprob: -6.316263675689697
    5. 'pw' → logprob: -6.816263675689697
    6. '<|end|>' → logprob: -7.066263675689697
    7. '
' → logprob: -7.316263675689697
    8. ' def' → logprob: -8.316263198852539
    9. '           ' → logprob: -8.566263198852539
    10. 'class' → logprob: -8.941263198852539

Token 226: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.008321654051542282
    2. 'def' → logprob: -5.133321762084961
    3. '       ' → logprob: -6.258321762084961
    4. ' p' → logprob: -8.258321762084961
    5. 'pw' → logprob: -9.633321762084961
    6. '<|end|>' → logprob: -10.133321762084961
    7. '	p' → logprob: -10.508321762084961
    8. '   ' → logprob: -10.508321762084961
    9. '
' → logprob: -11.758321762084961
    10. ' ' → logprob: -12.508321762084961

Token 227: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.3870576322078705
    2. '.p' → logprob: -1.1370576620101929
    3. '.pp' → logprob: -9.012057304382324
    4. '_pw' → logprob: -10.512057304382324
    5. '.pb' → logprob: -11.012057304382324
    6. '.ps' → logprob: -13.262057304382324
    7. '.pm' → logprob: -13.387057304382324
    8. '.dw' → logprob: -13.387057304382324
    9. '.P' → logprob: -13.512057304382324
    10. '.pow' → logprob: -13.762057304382324

Token 228: 'pw' (ID: 62764)
  Prédit: 'pw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' → logprob: -0.008728857152163982
    2. '_pw' → logprob: -5.133728981018066
    3. 'p' → logprob: -6.508728981018066
    4. 'w' → logprob: -7.133728981018066
    5. 'pow' → logprob: -8.133728981018066
    6. '_p' → logprob: -9.383728981018066
    7. 'pp' → logprob: -10.008728981018066
    8. 'power' → logprob: -11.133728981018066
    9. 'Pw' → logprob: -11.258728981018066
    10. '_pow' → logprob: -11.383728981018066

Token 229: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1269425004720688
    2. ' =' → logprob: -2.1269423961639404
    3. '=p' → logprob: -11.25194263458252
    4. ' ' → logprob: -15.00194263458252
    5. 's' → logprob: -15.25194263458252
    6. 'p' → logprob: -15.50194263458252
    7. ',' → logprob: -15.62694263458252
    8. '<|end|>' → logprob: -15.75194263458252
    9. '   ' → logprob: -16.626941680908203
    10. '=s' → logprob: -17.126941680908203

Token 230: ' ___' (ID: 14092)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -2.629921436891891e-05
    2. ' ___' → logprob: -10.75002670288086
    3. '__' → logprob: -12.25002670288086
    4. '____' → logprob: -17.12502670288086
    5. '@@' → logprob: -18.37502670288086
    6. ' &___' → logprob: -18.50002670288086
    7. '(__' → logprob: -18.87502670288086
    8. '_' → logprob: -19.25002670288086
    9. '.__' → logprob: -19.25002670288086
    10. '  ' → logprob: -19.37502670288086

Token 231: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -1.4259644558478612e-05
    2. '_hash' → logprob: -11.750014305114746
    3. '_H' → logprob: -13.125014305114746
    4. '__' → logprob: -13.625014305114746
    5. '	Hash' → logprob: -14.000014305114746
    6. '<Hash' → logprob: -14.000014305114746
    7. '_HASH' → logprob: -14.500014305114746
    8. 'Hasher' → logprob: -14.625014305114746
    9. ' Hash' → logprob: -15.625014305114746
    10. '___' → logprob: -16.37501335144043

Token 232: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -2.816093228830141e-06
    2. 'ator' → logprob: -14.25000286102295
    3. 'In' → logprob: -14.75000286102295
    4. 'Hash' → logprob: -15.12500286102295
    5. 'in' → logprob: -15.12500286102295
    6. 'inat' → logprob: -15.25000286102295
    7. 'inin' → logprob: -15.37500286102295
    8. '__' → logprob: -15.75000286102295
    9. 'ominator' → logprob: -16.375001907348633
    10. '_in' → logprob: -16.375001907348633

Token 233: '.zz' (ID: 47122)
  Prédit: '.zz'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.zz' → logprob: -0.0002622894535306841
    2. 'zz' → logprob: -8.250262260437012
    3. '.z' → logprob: -14.250262260437012
    4. ' .' → logprob: -15.625262260437012
    5. ' zz' → logprob: -16.625263214111328
    6. 'ZZ' → logprob: -17.000263214111328
    7. '.' → logprob: -17.750263214111328
    8. '
' → logprob: -18.500263214111328
    9. '.qq' → logprob: -18.750263214111328
    10. '.xx' → logprob: -18.875263214111328

Token 234: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -7.226628895296017e-06
    2. 'key' → logprob: -11.875007629394531
    3. ' key' → logprob: -15.875007629394531
    4. '(key' → logprob: -16.25000762939453
    5. ',key' → logprob: -17.75000762939453
    6. '[' → logprob: -18.25000762939453
    7. ' [' → logprob: -19.37500762939453
    8. '   ' → logprob: -19.37500762939453
    9. '	key' → logprob: -19.62500762939453
    10. '[p' → logprob: -20.12500762939453

Token 235: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05524568632245064
    2. '<|end|>' → logprob: -2.9302456378936768
    3. ']' → logprob: -8.805245399475098
    4. '<|end|>' → logprob: -9.180245399475098
    5. '}' → logprob: -10.430245399475098
    6. ' )' → logprob: -10.930245399475098
    7. ')return' → logprob: -11.055245399475098
    8. ')
' → logprob: -11.555245399475098
    9. '```' → logprob: -11.930245399475098
    10. '[' → logprob: -12.555245399475098

Token 236: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5644608736038208
    2. '   ' → logprob: -0.9394608736038208
    3. '<|end|>' → logprob: -3.6894607543945312
    4. ' def' → logprob: -5.064460754394531
    5. '    
' → logprob: -5.314460754394531
    6. '        
' → logprob: -6.814460754394531
    7. '
' → logprob: -6.814460754394531
    8. ' ' → logprob: -7.564460754394531
    9. '       ' → logprob: -7.689460754394531
    10. '	def' → logprob: -7.814460754394531

Token 237: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.020144619047641754
    2. '<|end|>' → logprob: -4.395144462585449
    3. '   ' → logprob: -5.520144462585449
    4. ' def' → logprob: -5.895144462585449
    5. '    
' → logprob: -7.895144462585449
    6. ')' → logprob: -8.64514446258545
    7. ' ' → logprob: -10.02014446258545
    8. '  
' → logprob: -10.27014446258545
    9. '<|end|>' → logprob: -10.39514446258545
    10. '[' → logprob: -10.64514446258545

Token 238: ' spin' (ID: 17464)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.1852891743183136
    2. ' hash' → logprob: -3.060289144515991
    3. 'get' → logprob: -3.435289144515991
    4. ' h' → logprob: -3.810289144515991
    5. '__' → logprob: -3.935289144515991
    6. ' __' → logprob: -4.06028938293457
    7. ' sub' → logprob: -4.43528938293457
    8. ' _' → logprob: -5.81028938293457
    9. 'h' → logprob: -5.93528938293457
    10. 'hash' → logprob: -6.06028938293457

Token 239: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0019342314917594194
    2. '(' → logprob: -6.876934051513672
    3. '(self' → logprob: -7.876934051513672
    4. '(s' → logprob: -8.876934051513672
    5. 'self' → logprob: -10.501934051513672
    6. 'len' → logprob: -10.501934051513672
    7. 'range' → logprob: -10.626934051513672
    8. 's' → logprob: -10.876934051513672
    9. '_len' → logprob: -11.001934051513672
    10. ' (' → logprob: -11.001934051513672

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.053934626281261444
    2. ',i' → logprob: -3.6789345741271973
    3. ',l' → logprob: -4.553934574127197
    4. ',s' → logprob: -5.678934574127197
    5. ',a' → logprob: -5.803934574127197
    6. ' ,' → logprob: -5.928934574127197
    7. ',p' → logprob: -5.928934574127197
    8. ',k' → logprob: -6.678934574127197
    9. ',x' → logprob: -6.803934574127197
    10. ',j' → logprob: -7.428934574127197

Token 241: ' a' (ID: 261)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7572763562202454
    2. 'i' → logprob: -1.2572762966156006
    3. 'a' → logprob: -2.2572762966156006
    4. 'x' → logprob: -3.6322762966156006
    5. ' l' → logprob: -3.6322762966156006
    6. 's' → logprob: -4.00727653503418
    7. ' i' → logprob: -4.00727653503418
    8. 'b' → logprob: -4.75727653503418
    9. 'start' → logprob: -4.88227653503418
    10. 'L' → logprob: -5.13227653503418

Token 242: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030506379902362823
    2. ',b' → logprob: -3.5305063724517822
    3. ' ,' → logprob: -7.655506610870361
    4. ',a' → logprob: -9.780506134033203
    5. ',r' → logprob: -10.155506134033203
    6. ',i' → logprob: -10.155506134033203
    7. '):' → logprob: -10.280506134033203
    8. ',l' → logprob: -10.655506134033203
    9. ',j' → logprob: -11.155506134033203
    10. 'b' → logprob: -11.405506134033203

Token 243: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0032340367324650288
    2. ' b' → logprob: -5.753233909606934
    3. 'z' → logprob: -10.753233909606934
    4. 'l' → logprob: -11.128233909606934
    5. 'd' → logprob: -12.503233909606934
    6. 'k' → logprob: -12.878233909606934
    7. '   ' → logprob: -13.253233909606934
    8. 'c' → logprob: -13.378233909606934
    9. 'r' → logprob: -13.378233909606934
    10. ' ' → logprob: -13.628233909606934

Token 244: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6332447528839111
    2. '):' → logprob: -0.7582447528839111
    3. '):
' → logprob: -7.383244514465332
    4. ')' → logprob: -11.758244514465332
    5. '):

' → logprob: -11.883244514465332
    6. '   ' → logprob: -13.008244514465332
    7. ' ):' → logprob: -13.258244514465332
    8. '=None' → logprob: -13.508244514465332
    9. ' ):
' → logprob: -13.758244514465332
    10. '=' → logprob: -14.133244514465332

Token 245: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004516039043664932
    2. ' return' → logprob: -6.004516124725342
    3. '   ' → logprob: -7.004516124725342
    4. '<|end|>' → logprob: -7.879516124725342
    5. '    ' → logprob: -8.754515647888184
    6. 'return' → logprob: -8.879515647888184
    7. ':return' → logprob: -9.629515647888184
    8. ',' → logprob: -9.879515647888184
    9. '        ' → logprob: -9.879515647888184
    10. '	return' → logprob: -10.629515647888184

Token 246: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.07233908027410507
    2. 'return' → logprob: -2.9473390579223633
    3. ' s' → logprob: -4.822339057922363
    4. '       ' → logprob: -5.197339057922363
    5. ' r' → logprob: -6.697339057922363
    6. 's' → logprob: -7.072339057922363
    7. 'r' → logprob: -7.072339057922363
    8. ' res' → logprob: -8.697339057922363
    9. '   ' → logprob: -8.697339057922363
    10. ' if' → logprob: -8.947339057922363

Token 247: ' Returns' (ID: 9609)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21580374240875244
    2. 'return' → logprob: -2.215803623199463
    3. ' s' → logprob: -3.215803623199463
    4. '       ' → logprob: -4.715803623199463
    5. 's' → logprob: -4.840803623199463
    6. ' res' → logprob: -5.090803623199463
    7. 'a' → logprob: -5.340803623199463
    8. '   ' → logprob: -5.465803623199463
    9. ' a' → logprob: -5.715803623199463
    10. ' l' → logprob: -6.465803623199463

Token 248: ' hash' (ID: 10691)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.13593220710754395
    2. '(p' → logprob: -2.260932207107544
    3. ' p' → logprob: -4.010931968688965
    4. 'p' → logprob: -5.385931968688965
    5. '(' → logprob: -9.010931968688965
    6. ' (_' → logprob: -11.885931968688965
    7. ' _' → logprob: -12.135931968688965
    8. '_p' → logprob: -13.135931968688965
    9. ' ((' → logprob: -13.635931968688965
    10. '    ' → logprob: -13.635931968688965

Token 249: ' for' (ID: 395)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.10877680778503418
    2. ' =' → logprob: -2.608776807785034
    3. '=' → logprob: -4.733777046203613
    4. 's' → logprob: -5.733777046203613
    5. '(' → logprob: -5.858777046203613
    6. ' p' → logprob: -6.108777046203613
    7. '       ' → logprob: -6.483777046203613
    8. ' of' → logprob: -6.608777046203613
    9. ' (' → logprob: -6.983777046203613
    10. '   ' → logprob: -6.983777046203613

Token 250: ' [' (ID: 723)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4697157144546509
    2. 'a' → logprob: -1.2197157144546509
    3. ' p' → logprob: -3.4697155952453613
    4. 'p' → logprob: -4.094715595245361
    5. '(a' → logprob: -4.219715595245361
    6. ' (' → logprob: -4.844715595245361
    7. '[a' → logprob: -5.719715595245361
    8. ' s' → logprob: -6.719715595245361
    9. '(p' → logprob: -6.844715595245361
    10. 's' → logprob: -6.969715595245361

Token 251: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804333135485649
    2. ' a' → logprob: -3.288043260574341
    3. '   ' → logprob: -13.663043022155762
    4. '	a' → logprob: -15.163043022155762
    5. ')a' → logprob: -15.288043022155762
    6. ')' → logprob: -16.038043975830078
    7. ' ' → logprob: -16.163043975830078
    8. '    ' → logprob: -17.788043975830078
    9. ' p' → logprob: -18.038043975830078
    10. ',' → logprob: -18.038043975830078

Token 252: ',b' (ID: 17568)
  Prédit: ':b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':b' → logprob: -0.030711714178323746
    2. ':' → logprob: -3.6557116508483887
    3. ' :' → logprob: -5.905711650848389
    4. ',' → logprob: -6.780711650848389
    5. ',b' → logprob: -7.780711650848389
    6. ' b' → logprob: -10.030712127685547
    7. 'b' → logprob: -10.155712127685547
    8. ' ' → logprob: -11.280712127685547
    9. ' ,' → logprob: -11.405712127685547
    10. '	b' → logprob: -12.155712127685547

Token 253: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2912958860397339
    2. ']' → logprob: -1.4162958860397339
    3. ' +' → logprob: -4.666296005249023
    4. ' ]' → logprob: -7.791296005249023
    5. ')' → logprob: -8.791296005249023
    6. ']
' → logprob: -9.416296005249023
    7. '+]' → logprob: -11.291296005249023
    8. '   ' → logprob: -11.916296005249023
    9. '],' → logprob: -12.666296005249023
    10. '[' → logprob: -13.041296005249023

Token 254: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6068626046180725
    2. ')' → logprob: -1.8568625450134277
    3. '(p' → logprob: -3.1068625450134277
    4. ':return' → logprob: -3.1068625450134277
    5. '   ' → logprob: -3.2318625450134277
    6. ' :' → logprob: -3.3568625450134277
    7. '):' → logprob: -3.4818625450134277
    8. '       ' → logprob: -3.8568625450134277
    9. ' ' → logprob: -3.8568625450134277
    10. ' return' → logprob: -4.356862545013428

Token 255: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6874239444732666
    2. ' return' → logprob: -0.8124239444732666
    3. 'return' (adapté à ' return') → logprob: -3.0624239444732666
    4. ' s' → logprob: -5.4374237060546875
    5. '	return' → logprob: -7.9374237060546875
    6. ' if' → logprob: -8.437423706054688
    7. '   ' → logprob: -8.437423706054688
    8. 's' → logprob: -8.437423706054688
    9. ' t' → logprob: -9.062423706054688
    10. 'v' → logprob: -9.187423706054688

Token 256: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.693181574344635
    2. '(p' → logprob: -0.693181574344635
    3. '(' → logprob: -10.818181991577148
    4. 'p' → logprob: -11.568181991577148
    5. ' p' → logprob: -12.818181991577148
    6. '((' → logprob: -14.068181991577148
    7. '   ' → logprob: -14.693181991577148
    8. ' ' → logprob: -14.943181991577148
    9. '
' → logprob: -15.818181991577148
    10. ' ((' → logprob: -16.31818199157715

Token 257: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004979863297194242
    2. ' p' → logprob: -7.625497817993164
    3. '(p' → logprob: -11.625497817993164
    4. '_p' → logprob: -14.750497817993164
    5. '   ' → logprob: -15.250497817993164
    6. '	p' → logprob: -16.125497817993164
    7. ' (' → logprob: -16.500497817993164
    8. '
' → logprob: -16.875497817993164
    9. '<p' → logprob: -17.625497817993164
    10. '(' → logprob: -17.875497817993164

Token 258: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -14.875001907348633
    3. ' .' → logprob: -15.125001907348633
    4. '.' → logprob: -15.375001907348633
    5. ')._' → logprob: -15.375001907348633
    6. '_spin' → logprob: -15.750001907348633
    7. '_p' → logprob: -16.250001907348633
    8. '
' → logprob: -16.750001907348633
    9. '	' → logprob: -17.125001907348633
    10. '_h' → logprob: -17.125001907348633

Token 259: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.107425062713446e-06
    2. '_h' → logprob: -12.500006675720215
    3. ' h' → logprob: -12.750006675720215
    4. '(h' → logprob: -16.00000762939453
    5. '	h' → logprob: -16.87500762939453
    6. '[h' → logprob: -17.12500762939453
    7. '<h' → logprob: -17.50000762939453
    8. 'hh' → logprob: -17.87500762939453
    9. 'hash' → logprob: -18.50000762939453
    10. '
' → logprob: -18.50000762939453

Token 260: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0007145775598473847
    2. 'b' → logprob: -7.2507147789001465
    3. ' b' → logprob: -13.375714302062988
    4. '[' → logprob: -13.625714302062988
    5. '[p' → logprob: -14.000714302062988
    6. '[a' → logprob: -14.625714302062988
    7. '	b' → logprob: -16.000715255737305
    8. '_b' → logprob: -16.000715255737305
    9. ' [' → logprob: -16.125715255737305
    10. '(b' → logprob: -16.750715255737305

Token 261: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02318980172276497
    2. ']-' → logprob: -4.273190021514893
    3. ' -' → logprob: -4.898190021514893
    4. '-' → logprob: -6.523190021514893
    5. ' ]' → logprob: -10.523189544677734
    6. 'p' → logprob: -11.898189544677734
    7. '[' → logprob: -11.898189544677734
    8. ')' → logprob: -12.523189544677734
    9. ']+' → logprob: -13.398189544677734
    10. ']
' → logprob: -13.398189544677734

Token 262: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.008619066327810287
    2. '-' → logprob: -4.7586188316345215
    3. '-p' → logprob: -12.50861930847168
    4. ' ' → logprob: -14.75861930847168
    5. ' ' → logprob: -15.50861930847168
    6. ' -
' → logprob: -16.13361930847168
    7. 'p' → logprob: -16.50861930847168
    8. '-
' → logprob: -17.25861930847168
    9. ' p' → logprob: -18.13361930847168
    10. '  ' → logprob: -18.50861930847168

Token 263: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.030353624373674393
    2. ' p' → logprob: -3.530353546142578
    3. '(p' → logprob: -7.530353546142578
    4. ' (' → logprob: -9.655353546142578
    5. '(' → logprob: -14.155353546142578
    6. '   ' → logprob: -14.405353546142578
    7. ')p' → logprob: -15.280353546142578
    8. '	p' → logprob: -15.405353546142578
    9. ' ' → logprob: -15.780353546142578
    10. '    ' → logprob: -16.405353546142578

Token 264: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -7.32654589228332e-05
    2. '_h' → logprob: -10.750073432922363
    3. '_p' → logprob: -11.375073432922363
    4. ' ' → logprob: -11.625073432922363
    5. ' _' → logprob: -11.625073432922363
    6. '.' → logprob: -12.250073432922363
    7. '_' → logprob: -12.625073432922363
    8. '_a' → logprob: -12.750073432922363
    9. 'a' → logprob: -12.875073432922363
    10. ' .' → logprob: -13.250073432922363

Token 265: 'h' (ID: 71)
  Prédit: '_h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_h' → logprob: -0.043344441801309586
    2. 'h' → logprob: -3.168344497680664
    3. '_p' → logprob: -9.043344497680664
    4. '.h' → logprob: -9.543344497680664
    5. '._' → logprob: -9.668344497680664
    6. '_pw' → logprob: -10.418344497680664
    7. 'pw' → logprob: -10.918344497680664
    8. 'a' → logprob: -11.293344497680664
    9. 'p' → logprob: -11.293344497680664
    10. '_w' → logprob: -12.418344497680664

Token 266: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.014191007241606712
    2. 'a' → logprob: -4.264191150665283
    3. '[' → logprob: -11.514190673828125
    4. ' a' → logprob: -12.514190673828125
    5. '[
' → logprob: -12.514190673828125
    6. '```' → logprob: -13.264190673828125
    7. '   ' → logprob: -13.389190673828125
    8. '
' → logprob: -13.514190673828125
    9. ' [' → logprob: -13.514190673828125
    10. '(a' → logprob: -13.889190673828125

Token 267: ']*' (ID: 18579)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08244067430496216
    2. '*p' → logprob: -3.0824406147003174
    3. '*' → logprob: -3.4574406147003174
    4. ']*' → logprob: -7.4574408531188965
    5. 'p' → logprob: -7.7074408531188965
    6. ')*' → logprob: -8.457440376281738
    7. ']' → logprob: -8.582440376281738
    8. ')' → logprob: -9.082440376281738
    9. ' ' → logprob: -9.332440376281738
    10. ' p' → logprob: -10.207440376281738

Token 268: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0007099286303855479
    2. ' p' → logprob: -7.2507100105285645
    3. '(p' → logprob: -18.750709533691406
    4. '_p' → logprob: -19.500709533691406
    5. '	p' → logprob: -19.875709533691406
    6. ' ' → logprob: -21.125709533691406
    7. '*p' → logprob: -21.250709533691406
    8. ')p' → logprob: -21.625709533691406
    9. '<p' → logprob: -21.750709533691406
    10. '
' → logprob: -22.125709533691406

Token 269: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -2.2961512513575144e-05
    2. '_pw' → logprob: -11.125022888183594
    3. '_p' → logprob: -11.875022888183594
    4. '.p' → logprob: -14.250022888183594
    5. '.' → logprob: -15.125022888183594
    6. 'p' → logprob: -15.375022888183594
    7. '_' → logprob: -17.250022888183594
    8. '_pwm' → logprob: -17.250022888183594
    9. ']._' → logprob: -18.250022888183594
    10. ')._' → logprob: -18.500022888183594

Token 270: 'pw' (ID: 62764)
  Prédit: 'pw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pw' → logprob: -0.0006407116306945682
    2. '_pw' → logprob: -7.375640869140625
    3. 'p' → logprob: -11.750640869140625
    4. ' pw' → logprob: -12.375640869140625
    5. '[p' → logprob: -14.000640869140625
    6. '	pw' → logprob: -14.375640869140625
    7. '.p' → logprob: -15.250640869140625
    8. 'PW' → logprob: -16.375640869140625
    9. 'Pw' → logprob: -16.875640869140625
    10. ' ' → logprob: -17.125640869140625

Token 271: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.250009536743164
    3. 'b' → logprob: -12.750009536743164
    4. ' [' → logprob: -14.000009536743164
    5. '[p' → logprob: -14.250009536743164
    6. '[a' → logprob: -15.625009536743164
    7. '[
' → logprob: -16.375009536743164
    8. '[(' → logprob: -17.750009536743164
    9. ' b' → logprob: -17.875009536743164
    10. '```' → logprob: -18.625009536743164

Token 272: '-a' (ID: 8575)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.04872111976146698
    2. 'a' → logprob: -3.5487210750579834
    3. '-a' → logprob: -4.0487213134765625
    4. ' -' → logprob: -6.9237213134765625
    5. '[' → logprob: -8.673721313476562
    6. '-' → logprob: -9.423721313476562
    7. '[-' → logprob: -10.048721313476562
    8. ' [' → logprob: -10.673721313476562
    9. ' a' → logprob: -11.423721313476562
    10. '   ' → logprob: -11.423721313476562

Token 273: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.021648535504937172
    2. ']' → logprob: -4.271648406982422
    3. ']%' → logprob: -5.271648406982422
    4. ')' → logprob: -6.271648406982422
    5. ')%' → logprob: -7.771648406982422
    6. ' ])' → logprob: -12.896648406982422
    7. '%' → logprob: -13.646648406982422
    8. '[' → logprob: -13.646648406982422
    9. ' )' → logprob: -14.521648406982422
    10. 'p' → logprob: -14.521648406982422

Token 274: '%' (ID: 4)
  Prédit: '%'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.03814041242003441
    2. ' %' → logprob: -3.288140296936035
    3. '%b' → logprob: -9.288140296936035
    4. '%d' → logprob: -13.413140296936035
    5. '%n' → logprob: -13.413140296936035
    6. '%m' → logprob: -13.538140296936035
    7. ')%' → logprob: -14.538140296936035
    8. '%x' → logprob: -14.538140296936035
    9. '%c' → logprob: -14.913140296936035
    10. ')' → logprob: -15.663140296936035

Token 275: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0564331205387134e-05
    2. ' p' → logprob: -11.62501049041748
    3. '(p' → logprob: -13.37501049041748
    4. '_p' → logprob: -19.000011444091797
    5. '   ' → logprob: -19.500011444091797
    6. '	p' → logprob: -20.000011444091797
    7. ' ' → logprob: -20.125011444091797
    8. '  ' → logprob: -21.000011444091797
    9. '(' → logprob: -21.000011444091797
    10. '
' → logprob: -21.500011444091797

Token 276: '.mm' (ID: 55027)
  Prédit: '.mm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.mm' → logprob: -0.024129344150424004
    2. 'mm' → logprob: -3.7741293907165527
    3. '_mm' → logprob: -7.149129390716553
    4. ':mm' → logprob: -9.649128913879395
    5. ' mm' → logprob: -10.774128913879395
    6. 'm' → logprob: -12.274128913879395
    7. '(mm' → logprob: -12.899128913879395
    8. '-mm' → logprob: -13.399128913879395
    9. '.m' → logprob: -14.024128913879395
    10. '```' → logprob: -14.274128913879395

Token 277: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6580733060836792
    2. ' main' → logprob: -0.9080733060836792
    3. ' __' → logprob: -3.2830734252929688
    4. '_' → logprob: -4.033073425292969
    5. ' solve' → logprob: -4.158073425292969
    6. '__' → logprob: -5.658073425292969
    7. 'main' → logprob: -6.908073425292969
    8. ' ' → logprob: -7.408073425292969
    9. ' solution' → logprob: -7.783073425292969
    10. 'solve' → logprob: -8.158073425292969

Token 280: 'solve' (ID: 117273)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10438131541013718
    2. 'il' → logprob: -2.3543813228607178
    3. 'main' → logprob: -6.604381084442139
    4. 'r' → logprob: -7.354381084442139
    5. 'l' → logprob: -7.354381084442139
    6. 's' → logprob: -8.354381561279297
    7. 'in' → logprob: -8.729381561279297
    8. 'ir' → logprob: -8.854381561279297
    9. 'is' → logprob: -8.854381561279297
    10. '()' → logprob: -9.229381561279297

Token 281: '(n' (ID: 2406)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.004597803577780724
    2. '():
' → logprob: -5.6295976638793945
    3. '(a' → logprob: -7.5045976638793945
    4. '(p' → logprob: -8.379597663879395
    5. '(s' → logprob: -10.129597663879395
    6. '(n' → logprob: -10.379597663879395
    7. '()' → logprob: -10.379597663879395
    8. ' ():' → logprob: -10.754597663879395
    9. '(_' → logprob: -10.879597663879395
    10. '(' → logprob: -10.879597663879395

Token 282: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001514557225164026
    2. '):' → logprob: -9.250151634216309
    3. ' ,' → logprob: -10.250151634216309
    4. ',a' → logprob: -12.250151634216309
    5. ',p' → logprob: -12.375151634216309
    6. ',n' → logprob: -12.750151634216309
    7. ',s' → logprob: -13.125151634216309
    8. ',k' → logprob: -13.500151634216309
    9. ',b' → logprob: -14.125151634216309
    10. '):
' → logprob: -14.750151634216309

Token 283: ' a' (ID: 261)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6844941973686218
    2. 'a' → logprob: -0.9344941973686218
    3. 'arr' → logprob: -3.6844942569732666
    4. 'k' → logprob: -4.3094940185546875
    5. 'A' → logprob: -4.3094940185546875
    6. ' s' → logprob: -4.6844940185546875
    7. 'm' → logprob: -4.6844940185546875
    8. 'l' → logprob: -5.3094940185546875
    9. ' a' → logprob: -5.6844940185546875
    10. 'lst' → logprob: -5.8094940185546875

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001765501219779253
    2. '):' → logprob: -6.626765727996826
    3. '):
' → logprob: -7.876765727996826
    4. ' ,' → logprob: -10.376765251159668
    5. ',a' → logprob: -11.126765251159668
    6. ':' → logprob: -12.751765251159668
    7. '):
' → logprob: -13.126765251159668
    8. ',b' → logprob: -13.376765251159668
    9. ',p' → logprob: -13.876765251159668
    10. '   ' → logprob: -13.876765251159668

Token 285: ' b' (ID: 287)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.8359153270721436
    2. 'b' → logprob: -0.9609153270721436
    3. 'bb' → logprob: -2.5859153270721436
    4. 'k' → logprob: -3.4609153270721436
    5. ' m' → logprob: -4.585915565490723
    6. 'p' → logprob: -4.710915565490723
    7. ' b' → logprob: -4.960915565490723
    8. ' bb' → logprob: -5.210915565490723
    9. '_' → logprob: -5.460915565490723
    10. 'q' → logprob: -5.710915565490723

Token 286: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033135995268821716
    2. ',' → logprob: -3.5331358909606934
    3. '):
' → logprob: -5.783135890960693
    4. ')' → logprob: -8.408136367797852
    5. ' ):' → logprob: -10.533136367797852
    6. '   ' → logprob: -11.033136367797852
    7. '):
' → logprob: -11.783136367797852
    8. ':' → logprob: -12.283136367797852
    9. ',n' → logprob: -12.408136367797852
    10. ' ,' → logprob: -12.533136367797852

Token 287: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008062121458351612
    2. ' if' → logprob: -6.88306188583374
    3. ':' → logprob: -7.25806188583374
    4. ' res' → logprob: -7.63306188583374
    5. ' return' → logprob: -7.75806188583374
    6. '    
' → logprob: -7.75806188583374
    7. ' p' → logprob: -8.008062362670898
    8. ' for' → logprob: -8.008062362670898
    9. 'c' → logprob: -8.133062362670898
    10. 'r' → logprob: -8.133062362670898

Token 288: ' crazy' (ID: 21528)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4507395029067993
    2. 'l' → logprob: -2.2007393836975098
    3. 'r' → logprob: -3.5757393836975098
    4. 'm' → logprob: -3.8257393836975098
    5. 'p' → logprob: -3.8257393836975098
    6. 'h' → logprob: -3.9507393836975098
    7. 'dp' → logprob: -3.9507393836975098
    8. 'pw' → logprob: -4.20073938369751
    9. ' l' → logprob: -4.70073938369751
    10. 'if' → logprob: -4.82573938369751

Token 289: '_bit' (ID: 39574)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8640133738517761
    2. '   ' → logprob: -1.489013433456421
    3. '=' → logprob: -1.614013433456421
    4. ':' → logprob: -2.989013433456421
    5. '_' → logprob: -3.239013433456421
    6. '_hash' → logprob: -4.739013195037842
    7. '_len' → logprob: -5.364013195037842
    8. 'a' → logprob: -5.614013195037842
    9. 'def' → logprob: -5.864013195037842
    10. '_n' → logprob: -5.864013195037842

Token 290: 'len' (ID: 3303)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13273778557777405
    2. '=' → logprob: -2.257737874984741
    3. 's' → logprob: -4.257737636566162
    4. '   ' → logprob: -5.757737636566162
    5. 'mask' → logprob: -7.007737636566162
    6. ',' → logprob: -8.38273811340332
    7. ' ' → logprob: -8.75773811340332
    8. '  ' → logprob: -9.00773811340332
    9. 'set' → logprob: -9.13273811340332
    10. '_mask' → logprob: -9.25773811340332

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07034507393836975
    2. '=' → logprob: -2.695345163345337
    3. ',' → logprob: -8.820344924926758
    4. '   ' → logprob: -9.195344924926758
    5. ' ' → logprob: -9.945344924926758
    6. '_' → logprob: -10.195344924926758
    7. '    ' → logprob: -10.695344924926758
    8. '=n' → logprob: -11.945344924926758
    9. '(' → logprob: -12.445344924926758
    10. '=int' → logprob: -12.445344924926758

Token 292: ' max' (ID: 2999)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7622342109680176
    2. 'b' → logprob: -1.8872342109680176
    3. '60' → logprob: -2.2622342109680176
    4. 'a' → logprob: -2.3872342109680176
    5. 'max' → logprob: -3.2622342109680176
    6. '30' → logprob: -4.012234210968018
    7. '64' → logprob: -4.137234210968018
    8. '(n' → logprob: -4.262234210968018
    9. '20' → logprob: -4.512234210968018
    10. '1' → logprob: -4.762234210968018

Token 293: '(max' (ID: 17178)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10013074427843094
    2. '(len' → logprob: -2.975130796432495
    3. '(n' → logprob: -3.350130796432495
    4. '(' → logprob: -4.850130558013916
    5. '(max' → logprob: -7.725130558013916
    6. 'len' → logprob: -8.100131034851074
    7. 'a' → logprob: -8.225131034851074
    8. '((' → logprob: -8.600131034851074
    9. 'n' → logprob: -10.350131034851074
    10. '(abs' → logprob: -11.100131034851074

Token 294: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.010464869439601898
    2. 'a' → logprob: -4.760464668273926
    3. '(' → logprob: -7.135464668273926
    4. '(len' → logprob: -8.010464668273926
    5. '(max' → logprob: -8.760464668273926
    6. ')' → logprob: -8.885464668273926
    7. '(b' → logprob: -9.385464668273926
    8. 'len' → logprob: -9.510464668273926
    9. '(n' → logprob: -9.635464668273926
    10. '(_' → logprob: -10.260464668273926

Token 295: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2010592818260193
    2. ',' → logprob: -1.951059341430664
    3. ',b' → logprob: -3.576059341430664
    4. ')' → logprob: -5.701059341430664
    5. ',a' → logprob: -6.201059341430664
    6. ')+' → logprob: -6.576059341430664
    7. '[b' → logprob: -6.701059341430664
    8. '[a' → logprob: -6.701059341430664
    9. '   ' → logprob: -7.826059341430664
    10. '.bit' → logprob: -7.826059341430664

Token 296: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0015411654021590948
    2. '1' → logprob: -7.1265411376953125
    3. ' max' → logprob: -7.8765411376953125
    4. 'b' → logprob: -8.501541137695312
    5. 'n' → logprob: -10.376541137695312
    6. '255' → logprob: -10.626541137695312
    7. 'len' → logprob: -10.751541137695312
    8. '256' → logprob: -10.751541137695312
    9. 'min' → logprob: -10.751541137695312
    10. '   ' → logprob: -11.626541137695312

Token 297: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.001998819876462221
    2. 'b' → logprob: -6.3769989013671875
    3. '(max' → logprob: -8.751998901367188
    4. ' (' → logprob: -9.626998901367188
    5. ')' → logprob: -10.626998901367188
    6. '(a' → logprob: -11.376998901367188
    7. '(' → logprob: -11.501998901367188
    8. ' b' → logprob: -12.126998901367188
    9. ',b' → logprob: -12.626998901367188
    10. ',' → logprob: -12.626998901367188

Token 298: ')).' (ID: 8784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8276694416999817
    2. ')+' → logprob: -0.8276694416999817
    3. '))' → logprob: -2.202669382095337
    4. '))+' → logprob: -4.202669620513916
    5. '))
' → logprob: -9.702669143676758
    6. ')))' → logprob: -9.702669143676758
    7. '),' → logprob: -9.702669143676758
    8. '   ' → logprob: -9.952669143676758
    9. ' )' → logprob: -10.327669143676758
    10. ')-' → logprob: -10.827669143676758

Token 299: 'bit' (ID: 6516)
  Prédit: 'bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.3306015716807451e-05
    2. '.bit' → logprob: -11.50001335144043
    3. '```' → logprob: -13.12501335144043
    4. ' bit' → logprob: -13.87501335144043
    5. '_bit' → logprob: -16.00001335144043
    6. '**' → logprob: -17.50001335144043
    7. 'n' → logprob: -18.00001335144043
    8. ' ' → logprob: -18.00001335144043
    9. '   ' → logprob: -18.00001335144043
    10. '
' → logprob: -18.12501335144043

Token 300: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003864630125463009
    2. 'length' → logprob: -7.8753862380981445
    3. 'ength' → logprob: -12.250386238098145
    4. 'len' → logprob: -15.250386238098145
    5. '_' → logprob: -15.375386238098145
    6. '```' → logprob: -15.375386238098145
    7. 'l' → logprob: -15.500386238098145
    8. '\' → logprob: -16.00038719177246
    9. '_size' → logprob: -16.12538719177246
    10. '
' → logprob: -16.12538719177246

Token 301: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010860578157007694
    2. ' +' → logprob: -5.885860443115234
    3. '+' → logprob: -6.010860443115234
    4. '<|end|>' → logprob: -6.510860443115234
    5. '
' → logprob: -6.635860443115234
    6. '    
' → logprob: -6.760860443115234
    7. ')' → logprob: -7.010860443115234
    8. '<|end|>' → logprob: -8.885860443115234
    9. '()' → logprob: -9.135860443115234
    10. '    ' → logprob: -9.510860443115234

Token 302: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09890492260456085
    2. '<|end|>' → logprob: -2.848904848098755
    3. '
' → logprob: -4.223905086517334
    4. ')' → logprob: -4.598905086517334
    5. '+' → logprob: -5.848905086517334
    6. ' ' → logprob: -6.348905086517334
    7. '    
' → logprob: -6.598905086517334
    8. ',' → logprob: -6.973905086517334
    9. ' 
' → logprob: -6.973905086517334
    10. 'def' → logprob: -8.098904609680176

Token 303: ' ah' (ID: 5369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20364023745059967
    2. 'm' → logprob: -3.2036402225494385
    3. ' m' → logprob: -3.5786402225494385
    4. ' res' → logprob: -3.7036402225494385
    5. 'mask' → logprob: -4.578640460968018
    6. ' mask' → logprob: -4.703640460968018
    7. 'r' → logprob: -5.328640460968018
    8. 'l' → logprob: -5.578640460968018
    9. 'res' → logprob: -5.703640460968018
    10. 'n' → logprob: -5.953640460968018

Token 304: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10067965090274811
    2. '=' → logprob: -2.475679636001587
    3. ',' → logprob: -4.475679874420166
    4. ' ' → logprob: -9.225679397583008
    5. 'ash' → logprob: -10.100679397583008
    6. 'p' → logprob: -10.725679397583008
    7. '_' → logprob: -10.975679397583008
    8. '  ' → logprob: -10.975679397583008
    9. '   ' → logprob: -10.975679397583008
    10. 'a' → logprob: -11.350679397583008

Token 305: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.018589427694678307
    2. ' bh' → logprob: -4.018589496612549
    3. '__' → logprob: -8.51858901977539
    4. '_' → logprob: -9.89358901977539
    5. ' ' → logprob: -10.26858901977539
    6. ' _' → logprob: -10.64358901977539
    7. ' __' → logprob: -10.76858901977539
    8. '___' → logprob: -11.26858901977539
    9. '   ' → logprob: -11.39358901977539
    10. '  ' → logprob: -11.89358901977539

Token 306: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7318797707557678
    2. ',' → logprob: -1.231879711151123
    3. '=' → logprob: -1.481879711151123
    4. ' ' → logprob: -10.606880187988281
    5. ' ,' → logprob: -11.606880187988281
    6. 'ash' → logprob: -13.231880187988281
    7. '   ' → logprob: -13.856880187988281
    8. '  ' → logprob: -13.981880187988281
    9. '=[' → logprob: -14.481880187988281
    10. ',_' → logprob: -14.856880187988281

Token 307: ' cb' (ID: 17799)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6501780152320862
    2. ' =' → logprob: -0.7751780152320862
    3. '___' → logprob: -4.275177955627441
    4. 'ch' → logprob: -6.525177955627441
    5. ' ___' → logprob: -7.900177955627441
    6. '__' → logprob: -8.525177955627441
    7. 'p' → logprob: -8.650177955627441
    8. ' ' → logprob: -8.650177955627441
    9. '_=' → logprob: -8.650177955627441
    10. '_' → logprob: -8.650177955627441

Token 308: 'h' (ID: 71)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16766931116580963
    2. ' =' → logprob: -1.9176692962646484
    3. ',' → logprob: -4.917669296264648
    4. '=_' → logprob: -9.917669296264648
    5. '_' → logprob: -10.792669296264648
    6. ' ' → logprob: -11.167669296264648
    7. '   ' → logprob: -12.542669296264648
    8. ',_' → logprob: -13.042669296264648
    9. '  ' → logprob: -13.417669296264648
    10. '=[' → logprob: -13.542669296264648

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1273716390132904
    2. '=' → logprob: -2.1273715496063232
    3. ',' → logprob: -7.752371788024902
    4. '=_' → logprob: -11.877371788024902
    5. ' ' → logprob: -12.752371788024902
    6. ',_' → logprob: -13.252371788024902
    7. ' ,' → logprob: -14.002371788024902
    8. ',c' → logprob: -15.127371788024902
    9. '_' → logprob: -15.627371788024902
    10. ' ' → logprob: -16.502370834350586

Token 310: ' [],' (ID: 22188)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '___' → logprob: -0.04089438170194626
    2. ' ___' → logprob: -3.4158942699432373
    3. '__' → logprob: -5.290894508361816
    4. '[' → logprob: -7.290894508361816
    5. ' __' → logprob: -7.415894508361816
    6. '(__' → logprob: -8.415894508361816
    7. '__,' → logprob: -9.415894508361816
    8. ' [' → logprob: -9.665894508361816
    9. '[],' → logprob: -9.790894508361816
    10. '  ' → logprob: -9.915894508361816

Token 311: ' [],' (ID: 22188)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.36779385805130005
    2. '[],' → logprob: -1.8677937984466553
    3. ' []' → logprob: -2.3677937984466553
    4. '__' → logprob: -3.6177937984466553
    5. ' [],' → logprob: -3.7427937984466553
    6. ' __' → logprob: -5.492794036865234
    7. '[' → logprob: -7.117794036865234
    8. '__,' → logprob: -7.117794036865234
    9. '___' → logprob: -7.492794036865234
    10. '[]
' → logprob: -7.992794036865234

Token 312: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06872943043708801
    2. '__' → logprob: -3.5687294006347656
    3. '[]
' → logprob: -3.5687294006347656
    4. '[],' → logprob: -5.193729400634766
    5. ' []' → logprob: -5.818729400634766
    6. '___' → logprob: -7.943729400634766
    7. '[' → logprob: -7.943729400634766
    8. '{}' → logprob: -8.068729400634766
    9. '0' → logprob: -8.693729400634766
    10. ' __' → logprob: -9.943729400634766

Token 313: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14831268787384033
    2. '
' → logprob: -2.398312568664551
    3. ' for' → logprob: -3.648312568664551
    4. '    
' → logprob: -4.898312568664551
    5. 'for' → logprob: -5.773312568664551
    6. ' 
' → logprob: -6.023312568664551
    7. '  
' → logprob: -6.023312568664551
    8. '<|end|>' → logprob: -6.148312568664551
    9. ',' → logprob: -7.273312568664551
    10. '[' → logprob: -7.648312568664551

Token 314: ' _' (ID: 1175)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5102974772453308
    2. '   ' → logprob: -1.5102975368499756
    3. 'for' → logprob: -1.7602975368499756
    4. 'bb' → logprob: -6.3852972984313965
    5. '
' → logprob: -6.5102972984313965
    6. ' bb' → logprob: -6.6352972984313965
    7. ' 
' → logprob: -7.5102972984313965
    8. '    ' → logprob: -7.8852972984313965
    9. '[' → logprob: -8.510297775268555
    10. '    
' → logprob: -8.510297775268555

Token 315: 'BASE' (ID: 34439)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12242388725280762
    2. 'pw' → logprob: -2.6224238872528076
    3. 'buf' → logprob: -4.122424125671387
    4. 'bb' → logprob: -4.747424125671387
    5. 'a' → logprob: -5.622424125671387
    6. 'h' → logprob: -5.997424125671387
    7. 'p' → logprob: -6.122424125671387
    8. 'm' → logprob: -6.997424125671387
    9. 'pb' → logprob: -7.122424125671387
    10. 'aa' → logprob: -7.122424125671387

Token 316: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07758479565382004
    2. ',' → logprob: -3.077584743499756
    3. '=' → logprob: -3.952584743499756
    4. '1' → logprob: -4.827584743499756
    5. '_BASE' → logprob: -7.452584743499756
    6. 's' → logprob: -8.702585220336914
    7. '_' → logprob: -8.702585220336914
    8. '   ' → logprob: -9.077585220336914
    9. ' ,' → logprob: -9.202585220336914
    10. 'S' → logprob: -9.577585220336914

Token 317: ' _' (ID: 1175)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4676303565502167
    2. '100' → logprob: -1.467630386352539
    3. '_' → logprob: -2.842630386352539
    4. '_BASE' → logprob: -3.717630386352539
    5. '_MOD' → logprob: -3.717630386352539
    6. ' ' → logprob: -4.467630386352539
    7. '1' → logprob: -4.967630386352539
    8. ' _' → logprob: -5.092630386352539
    9. '2' → logprob: -6.717630386352539
    10. '123' → logprob: -7.092630386352539

Token 318: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.012849711813032627
    2. 'M' → logprob: -5.012849807739258
    3. 'MASK' → logprob: -6.137849807739258
    4. 'MM' → logprob: -7.262849807739258
    5. 'mod' → logprob: -7.387849807739258
    6. '_MOD' → logprob: -7.887849807739258
    7. '1' → logprob: -8.137849807739258
    8. '_mod' → logprob: -8.137849807739258
    9. '=' → logprob: -8.887849807739258
    10. 'BASE' → logprob: -8.887849807739258

Token 319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20192916691303253
    2. '=' → logprob: -1.7019292116165161
    3. ',' → logprob: -7.576929092407227
    4. ' ' → logprob: -13.701929092407227
    5. '=_' → logprob: -14.076929092407227
    6. '1' → logprob: -14.326929092407227
    7. '   ' → logprob: -14.451929092407227
    8. '  ' → logprob: -15.701929092407227
    9. ' ,' → logprob: -15.701929092407227
    10. '=int' → logprob: -16.576929092407227

Token 320: ' ' (ID: 220)
  Prédit: '911'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '911' → logprob: -0.7709788084030151
    2. '10' → logprob: -1.5209788084030151
    3. '100' → logprob: -1.7709788084030151
    4. '131' → logprob: -2.5209789276123047
    5. '257' → logprob: -3.7709789276123047
    6. '129' → logprob: -5.395978927612305
    7. '127' → logprob: -5.395978927612305
    8. ' ' → logprob: -5.520978927612305
    9. '313' → logprob: -5.645978927612305
    10. '192' → logprob: -5.645978927612305

Token 321: '641' (ID: 45293)
  Prédit: '911'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '911' → logprob: -0.9034650921821594
    2. '100' → logprob: -1.6534650325775146
    3. '10' → logprob: -1.7784650325775146
    4. '131' → logprob: -1.9034650325775146
    5. '257' → logprob: -4.153465270996094
    6. '129' → logprob: -4.653465270996094
    7. '192' → logprob: -5.153465270996094
    8. '999' → logprob: -5.278465270996094
    9. '127' → logprob: -5.278465270996094
    10. '313' → logprob: -5.403465270996094

Token 322: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010838286019861698
    2. '_' → logprob: -6.260838508605957
    3. '9' → logprob: -6.510838508605957
    4. '3' → logprob: -6.885838508605957
    5. ' ,' → logprob: -7.260838508605957
    6. '   ' → logprob: -7.510838508605957
    7. '```' → logprob: -7.760838508605957
    8. '23' → logprob: -8.010838508605957
    9. '+' → logprob: -8.135838508605957
    10. ' ' → logprob: -8.135838508605957

Token 323: ' int' (ID: 677)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.3580782413482666
    2. '100' → logprob: -1.2330782413482666
    3. '230' → logprob: -5.9830780029296875
    4. '998' → logprob: -5.9830780029296875
    5. '999' → logprob: -6.6080780029296875
    6. ' ' → logprob: -7.1080780029296875
    7. '1' → logprob: -7.6080780029296875
    8. '123' → logprob: -8.983078002929688
    9. '982' → logprob: -9.108078002929688
    10. '214' → logprob: -9.108078002929688

Token 324: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007139815716072917
    2. '1' → logprob: -7.25071382522583
    3. '_' → logprob: -13.750714302062988
    4. '[' → logprob: -14.500714302062988
    5. '9' → logprob: -14.625714302062988
    6. ' (' → logprob: -14.750714302062988
    7. '2' → logprob: -14.875714302062988
    8. '998' → logprob: -15.125714302062988
    9. ' ' → logprob: -15.375714302062988
    10. '()' → logprob: -15.625714302062988

Token 325: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041613372741267085
    2. '(' → logprob: -8.750415802001953
    3. '998' → logprob: -9.750415802001953
    4. ' ' → logprob: -10.000415802001953
    5. '100' → logprob: -10.000415802001953
    6. '10' → logprob: -10.750415802001953
    7. '2' → logprob: -11.125415802001953
    8. '[' → logprob: -11.375415802001953
    9. '9' → logprob: -11.500415802001953
    10. '999' → logprob: -11.875415802001953

Token 326: 'e' (ID: 68)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.003363431431353092
    2. 'e' → logprob: -6.378363609313965
    3. '_' → logprob: -6.503363609313965
    4. '002' → logprob: -11.003363609313965
    5. '234' → logprob: -11.253363609313965
    6. '0' → logprob: -11.253363609313965
    7. '009' → logprob: -11.628363609313965
    8. '273' → logprob: -11.753363609313965
    9. '1' → logprob: -11.878363609313965
    10. '099' → logprob: -12.003363609313965

Token 327: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.289473822107539e-05
    2. '+' → logprob: -9.750062942504883
    3. '10' → logprob: -13.750062942504883
    4. '7' → logprob: -14.000062942504883
    5. '09' → logprob: -14.500062942504883
    6. '8' → logprob: -14.750062942504883
    7. '12' → logprob: -15.000062942504883
    8. '6' → logprob: -15.125062942504883
    9. '```' → logprob: -15.500062942504883
    10. ' ' → logprob: -15.625062942504883

Token 328: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001950417528860271
    2. ')+' → logprob: -6.626950263977051
    3. '7' → logprob: -7.876950263977051
    4. ' +' → logprob: -9.12695026397705
    5. ')' → logprob: -9.50195026397705
    6. '9' → logprob: -9.75195026397705
    7. '+)' → logprob: -14.00195026397705
    8. '+
' → logprob: -14.00195026397705
    9. '＋' → logprob: -14.50195026397705
    10. '```' → logprob: -15.37695026397705

Token 329: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0009855312528088689
    2. '+' → logprob: -7.500985622406006
    3. '9' → logprob: -7.750985622406006
    4. '```' → logprob: -14.375985145568848
    5. '   ' → logprob: -14.750985145568848
    6. '
' → logprob: -15.000985145568848
    7. ' +' → logprob: -15.625985145568848
    8. '

' → logprob: -15.875985145568848
    9. ' ' → logprob: -16.250986099243164
    10. '``' → logprob: -16.375986099243164

Token 330: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5058367252349854
    2. '+' → logprob: -1.0058367252349854
    3. ')+' → logprob: -3.5058367252349854
    4. ' +' → logprob: -7.505836486816406
    5. '+)' → logprob: -7.755836486816406
    6. '7' → logprob: -8.755836486816406
    7. ')
' → logprob: -10.130836486816406
    8. ' )' → logprob: -10.255836486816406
    9. '1' → logprob: -12.380836486816406
    10. '9' → logprob: -12.630836486816406

Token 331: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06269984692335129
    2. '
' → logprob: -3.062699794769287
    3. '    
' → logprob: -4.937699794769287
    4. '<|end|>' → logprob: -5.437699794769287
    5. '  
' → logprob: -7.687699794769287
    6. ',' → logprob: -7.812699794769287
    7. 'for' → logprob: -7.812699794769287
    8. ' for' → logprob: -8.312700271606445
    9. '<|end|>' → logprob: -9.312700271606445
    10. '  ' → logprob: -9.437700271606445

Token 332: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8927772045135498
    2. '   ' → logprob: -1.1427772045135498
    3. ' for' → logprob: -1.6427772045135498
    4. 'for' (adapté à ' for') → logprob: -3.01777720451355
    5. ' 
' → logprob: -4.142777442932129
    6. '    
' → logprob: -4.767777442932129
    7. '  
' → logprob: -6.767777442932129
    8. '<|end|>' → logprob: -6.767777442932129
    9. ' _' → logprob: -7.767777442932129
    10. '	
' → logprob: -8.267777442932129

Token 333: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.9368581175804138
    2. 'i' → logprob: -1.4368581771850586
    3. ' x' → logprob: -2.0618581771850586
    4. 'x' → logprob: -2.0618581771850586
    5. ' z' → logprob: -4.061858177185059
    6. '_' → logprob: -4.186858177185059
    7. 'z' → logprob: -4.436858177185059
    8. '(x' → logprob: -4.811858177185059
    9. ' _' → logprob: -5.186858177185059
    10. ' aa' → logprob: -5.186858177185059

Token 334: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055656205862760544
    2. 'in' → logprob: -2.9306561946868896
    3. ',' → logprob: -7.305656433105469
    4. ' ' → logprob: -10.930656433105469
    5. '   ' → logprob: -11.180656433105469
    6. 'n' → logprob: -11.430656433105469
    7. ')' → logprob: -11.555656433105469
    8. 'range' → logprob: -11.555656433105469
    9. '_' → logprob: -12.180656433105469
    10. '(' → logprob: -12.305656433105469

Token 335: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.576144814491272
    2. ' range' → logprob: -0.826144814491272
    3. ' ' → logprob: -9.70114517211914
    4. '_' → logprob: -9.95114517211914
    5. 'a' → logprob: -10.20114517211914
    6. '   ' → logprob: -11.20114517211914
    7. ' a' → logprob: -11.32614517211914
    8. '  ' → logprob: -12.45114517211914
    9. ' _' → logprob: -12.70114517211914
    10. '_range' → logprob: -12.70114517211914

Token 336: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002198676229454577
    2. '(' → logprob: -8.75022029876709
    3. 'n' → logprob: -9.87522029876709
    4. '(len' → logprob: -11.87522029876709
    5. ' n' → logprob: -14.25022029876709
    6. '   ' → logprob: -14.62522029876709
    7. ' (' → logprob: -14.75022029876709
    8. '(
' → logprob: -14.75022029876709
    9. '((' → logprob: -15.00022029876709
    10. '(_' → logprob: -15.75022029876709

Token 337: 'ra' (ID: 614)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0007855892181396
    2. '(n' → logprob: -1.3757855892181396
    3. 'r' → logprob: -1.6257855892181396
    4. 'range' → logprob: -3.2507855892181396
    5. '(' → logprob: -3.5007855892181396
    6. 'ount' → logprob: -3.8757855892181396
    7. '[n' → logprob: -4.625785827636719
    8. ')' → logprob: -4.625785827636719
    9. 'nt' → logprob: -4.750785827636719
    10. '[' → logprob: -4.875785827636719

Token 338: 'zy' (ID: 3705)
  Prédit: 'zy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zy' → logprob: -0.006251907907426357
    2. 'z' → logprob: -5.881251811981201
    3. 'py' → logprob: -6.506251811981201
    4. 'cy' → logprob: -7.381251811981201
    5. 'fy' → logprob: -8.13125228881836
    6. '   ' → logprob: -8.25625228881836
    7. 'y' → logprob: -8.50625228881836
    8. 'p' → logprob: -9.00625228881836
    9. 'n' → logprob: -9.13125228881836
    10. 'f' → logprob: -9.25625228881836

Token 339: '_bit' (ID: 39574)
  Prédit: '_bit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bit' → logprob: -0.003959786146879196
    2. '_len' → logprob: -5.753959655761719
    3. 'bit' → logprob: -7.878959655761719
    4. 'len' → logprob: -8.878959655761719
    5. '   ' → logprob: -9.378959655761719
    6. ')' → logprob: -10.253959655761719
    7. '_bits' → logprob: -10.503959655761719
    8. ' bit' → logprob: -11.253959655761719
    9. 'Bit' → logprob: -11.378959655761719
    10. '.bit' → logprob: -11.378959655761719

Token 340: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00018542143516242504
    2. 'length' → logprob: -8.625185012817383
    3. '   ' → logprob: -12.500185012817383
    4. '_length' → logprob: -14.375185012817383
    5. 'leni' → logprob: -15.250185012817383
    6. ')' → logprob: -15.375185012817383
    7. '_len' → logprob: -15.750185012817383
    8. ' len' → logprob: -16.000185012817383
    9. 'l' → logprob: -16.250185012817383
    10. 'ength' → logprob: -16.500185012817383

Token 341: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11505420506000519
    2. '):' → logprob: -2.240054130554199
    3. '+' → logprob: -6.365054130554199
    4. '   ' → logprob: -7.990054130554199
    5. '):
' → logprob: -9.2400541305542
    6. ':' → logprob: -10.6150541305542
    7. '-' → logprob: -11.4900541305542
    8. ' +' → logprob: -11.7400541305542
    9. '       ' → logprob: -12.4900541305542
    10. ' ):
' → logprob: -12.4900541305542

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020568605395965278
    2. ',' → logprob: -9.500205993652344
    3. 'a' → logprob: -10.500205993652344
    4. '   ' → logprob: -10.750205993652344
    5. '        
' → logprob: -11.250205993652344
    6. ' _' → logprob: -11.750205993652344
    7. ' ah' → logprob: -11.875205993652344
    8. '           ' → logprob: -12.125205993652344
    9. '[' → logprob: -12.250205993652344
    10. '      ' → logprob: -12.250205993652344

Token 343: ' ta' (ID: 2868)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030642123892903328
    2. 'a' → logprob: -4.780642032623291
    3. '   ' → logprob: -5.655642032623291
    4. 'ac' → logprob: -6.030642032623291
    5. 'ah' → logprob: -6.280642032623291
    6. 'ra' → logprob: -6.655642032623291
    7. 'ai' → logprob: -6.655642032623291
    8. ' ah' → logprob: -6.780642032623291
    9. ' ca' → logprob: -6.905642032623291
    10. ' a' → logprob: -7.030642032623291

Token 344: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4270077049732208
    2. '=' → logprob: -1.6770076751708984
    3. ',' → logprob: -2.4270076751708984
    4. 'a' → logprob: -3.4270076751708984
    5. 'h' → logprob: -4.302007675170898
    6. '=a' → logprob: -4.927007675170898
    7. ',a' → logprob: -5.302007675170898
    8. ',_' → logprob: -5.677007675170898
    9. '_a' → logprob: -5.927007675170898
    10. '.append' → logprob: -5.927007675170898

Token 345: ' tb' (ID: 25078)
  Prédit: 'tb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tb' → logprob: -0.2052702009677887
    2. ' tb' → logprob: -1.7052701711654663
    3. 't' → logprob: -7.580270290374756
    4. ' ' → logprob: -7.580270290374756
    5. '   ' → logprob: -7.580270290374756
    6. ' t' → logprob: -7.705270290374756
    7. '	tb' → logprob: -8.580269813537598
    8. 'tk' → logprob: -8.705269813537598
    9. 'ua' → logprob: -8.830269813537598
    10. 'a' → logprob: -8.830269813537598

Token 346: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08952702581882477
    2. ' =' → logprob: -2.464527130126953
    3. ',' → logprob: -7.464527130126953
    4. '.append' → logprob: -11.839527130126953
    5. '=[' → logprob: -13.339527130126953
    6. '=[]' → logprob: -13.839527130126953
    7. ' ,' → logprob: -14.089527130126953
    8. '=a' → logprob: -14.089527130126953
    9. '=[],' → logprob: -14.714527130126953
    10. 'a' → logprob: -15.089527130126953

Token 347: ' t' (ID: 260)
  Prédit: 'tc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tc' → logprob: -0.20246227085590363
    2. ' tc' → logprob: -2.3274621963500977
    3. 't' → logprob: -2.5774621963500977
    4. ' t' → logprob: -5.577462196350098
    5. '   ' → logprob: -6.077462196350098
    6. ' tch' → logprob: -7.327462196350098
    7. '       ' → logprob: -7.577462196350098
    8. 'ca' → logprob: -7.827462196350098
    9. '	tc' → logprob: -7.827462196350098
    10. '[]' → logprob: -7.952462196350098

Token 348: 'bn' (ID: 22040)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.673003077507019
    2. 'a' → logprob: -1.048003077507019
    3. '=' → logprob: -2.6730031967163086
    4. ' =' → logprob: -2.9230031967163086
    5. '_c' → logprob: -5.423003196716309
    6. '_a' → logprob: -5.673003196716309
    7. 't' → logprob: -6.298003196716309
    8. 's' → logprob: -6.548003196716309
    9. ',' → logprob: -7.048003196716309
    10. 'ca' → logprob: -7.423003196716309

Token 349: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011340413242578506
    2. ' =' → logprob: -4.511340618133545
    3. '=[]' → logprob: -8.511340141296387
    4. '=[],' → logprob: -9.511340141296387
    5. '=[]
' → logprob: -11.886340141296387
    6. 'a' → logprob: -12.636340141296387
    7. ',' → logprob: -12.886340141296387
    8. '=[' → logprob: -13.136340141296387
    9. ' ' → logprob: -13.886340141296387
    10. '   ' → logprob: -14.886340141296387

Token 350: ' [],' (ID: 22188)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.06349023431539536
    2. ' [],' → logprob: -3.188490152359009
    3. '0' → logprob: -4.563490390777588
    4. '[' → logprob: -4.813490390777588
    5. ' [' → logprob: -7.438490390777588
    6. '[]' → logprob: -7.813490390777588
    7. '   ' → logprob: -8.06348991394043
    8. ' ' → logprob: -8.18848991394043
    9. '([],' → logprob: -9.93848991394043
    10. '       ' → logprob: -10.31348991394043

Token 351: ' [],' (ID: 22188)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2537800669670105
    2. '[],' → logprob: -1.6287801265716553
    3. ' []' → logprob: -4.128779888153076
    4. ' [],' → logprob: -4.503779888153076
    5. '[]
' → logprob: -7.753779888153076
    6. ' ' → logprob: -9.128780364990234
    7. 't' → logprob: -9.753780364990234
    8. '   ' → logprob: -9.878780364990234
    9. '  ' → logprob: -10.378780364990234
    10. '[]

' → logprob: -10.753780364990234

Token 352: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.12700948119163513
    2. '[]
' → logprob: -2.127009391784668
    3. '[' → logprob: -10.627009391784668
    4. '[]

' → logprob: -10.877009391784668
    5. ' []' → logprob: -11.127009391784668
    6. '0' → logprob: -11.627009391784668
    7. ' []
' → logprob: -12.002009391784668
    8. '[],' → logprob: -13.252009391784668
    9. '{}' → logprob: -13.502009391784668
    10. '__' → logprob: -14.127009391784668

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009037189302034676
    2. ' for' → logprob: -7.250903606414795
    3. 'for' → logprob: -8.875904083251953
    4. '   ' → logprob: -10.500904083251953
    5. ',' → logprob: -11.125904083251953
    6. '<|end|>' → logprob: -12.250904083251953
    7. ' ' → logprob: -13.375904083251953
    8. '           ' → logprob: -13.625904083251953
    9. '        
' → logprob: -14.625904083251953
    10. '	   ' → logprob: -14.750904083251953

Token 354: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09152263402938843
    2. ' for' → logprob: -2.466522693634033
    3. '   ' → logprob: -6.466522693634033
    4. '       ' → logprob: -6.966522693634033
    5. ' ' → logprob: -10.216522216796875
    6. '	for' → logprob: -10.966522216796875
    7. '<|end|>' → logprob: -12.091522216796875
    8. '  ' → logprob: -12.591522216796875
    9. '#' → logprob: -12.716522216796875
    10. '           ' → logprob: -13.091522216796875

Token 355: ' aa' (ID: 40260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.356993168592453
    2. 'j' → logprob: -1.3569931983947754
    3. 'v' → logprob: -3.9819931983947754
    4. 'z' → logprob: -5.231993198394775
    5. 'aa' → logprob: -5.356993198394775
    6. ' x' → logprob: -5.606993198394775
    7. ' j' → logprob: -5.731993198394775
    8. 'k' → logprob: -6.356993198394775
    9. 'ai' → logprob: -6.481993198394775
    10. '(x' → logprob: -7.731993198394775

Token 356: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1159214973449707
    2. ' in' → logprob: -2.2409214973449707
    3. ',' → logprob: -6.115921497344971
    4. 'i' → logprob: -8.115921020507812
    5. 'n' → logprob: -8.490921020507812
    6. 'a' → logprob: -9.115921020507812
    7. '[' → logprob: -9.240921020507812
    8. 's' → logprob: -10.240921020507812
    9. 'x' → logprob: -10.615921020507812
    10. ' ' → logprob: -10.865921020507812

Token 357: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.004781476687639952
    2. ' bb' → logprob: -5.504781246185303
    3. 'ba' → logprob: -7.629781246185303
    4. 'ab' → logprob: -8.504781723022461
    5. ' ba' → logprob: -11.879781723022461
    6. ' ab' → logprob: -12.254781723022461
    7. '_bb' → logprob: -13.379781723022461
    8. 'b' → logprob: -14.879781723022461
    9. '(bb' → logprob: -15.129781723022461
    10. 'bit' → logprob: -15.129781723022461

Token 358: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4292050004005432
    2. 'in' → logprob: -1.0542049407958984
    3. '       ' → logprob: -8.304204940795898
    4. '   ' → logprob: -9.179204940795898
    5. ',' → logprob: -9.554204940795898
    6. ' ' → logprob: -10.929204940795898
    7. '        ' → logprob: -11.304204940795898
    8. '    ' → logprob: -11.804204940795898
    9. 'a' → logprob: -12.179204940795898
    10. '           ' → logprob: -12.304204940795898

Token 359: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.2851310074329376
    2. ' zip' → logprob: -1.7851309776306152
    3. 'a' → logprob: -2.5351309776306152
    4. ' a' → logprob: -7.160130977630615
    5. '(zip' → logprob: -8.410131454467773
    6. '(a' → logprob: -10.535131454467773
    7. ' ' → logprob: -11.160131454467773
    8. '_zip' → logprob: -12.660131454467773
    9. 'range' → logprob: -12.910131454467773
    10. '.zip' → logprob: -13.035131454467773

Token 360: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.000556843588128686
    2. 'a' → logprob: -7.500556945800781
    3. '(' → logprob: -12.625556945800781
    4. ' a' → logprob: -16.00055694580078
    5. '   ' → logprob: -16.12555694580078
    6. '_a' → logprob: -16.75055694580078
    7. '(_' → logprob: -16.87555694580078
    8. '((' → logprob: -17.37555694580078
    9. '(
' → logprob: -17.87555694580078
    10. '
' → logprob: -17.87555694580078

Token 361: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6931615471839905
    2. ',b' → logprob: -0.6931615471839905
    3. ' ,' → logprob: -11.568161964416504
    4. 'b' → logprob: -12.818161964416504
    5. ',t' → logprob: -13.818161964416504
    6. '   ' → logprob: -14.568161964416504
    7. '       ' → logprob: -15.318161964416504
    8. ',p' → logprob: -15.943161964416504
    9. '     ' → logprob: -16.818161010742188
    10. ',
' → logprob: -16.943161010742188

Token 362: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31335964798927307
    2. '):' → logprob: -1.3133596181869507
    3. '       ' → logprob: -10.188359260559082
    4. '):
' → logprob: -10.188359260559082
    5. ':' → logprob: -11.688359260559082
    6. '   ' → logprob: -12.313359260559082
    7. ',' → logprob: -12.563359260559082
    8. '           ' → logprob: -13.188359260559082
    9. ' ):
' → logprob: -13.938359260559082
    10. ':
' → logprob: -14.063359260559082

Token 363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001992755103856325
    2. ':' → logprob: -6.751992702484131
    3. ',' → logprob: -8.001993179321289
    4. ':
' → logprob: -9.001993179321289
    5. '               ' → logprob: -9.501993179321289
    6. ' if' → logprob: -9.626993179321289
    7. '):
' → logprob: -10.126993179321289
    8. '	       ' → logprob: -10.501993179321289
    9. '       ' → logprob: -10.751993179321289
    10. '          ' → logprob: -11.126993179321289

Token 364: ' ta' (ID: 2868)
  Prédit: ' ta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ta' → logprob: -0.10630962252616882
    2. '               ' → logprob: -2.481309652328491
    3. 'ta' (adapté à ' ta') → logprob: -4.481309413909912
    4. '           ' → logprob: -5.731309413909912
    5. '            ' → logprob: -6.606309413909912
    6. 't' → logprob: -7.981309413909912
    7. ' ' → logprob: -8.35630989074707
    8. '                ' → logprob: -8.73130989074707
    9. '   ' → logprob: -9.23130989074707
    10. '             ' → logprob: -9.73130989074707

Token 365: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00031532408320344985
    2. '.' → logprob: -8.12531566619873
    3. 'append' → logprob: -11.12531566619873
    4. ' .' → logprob: -13.12531566619873
    5. '.app' → logprob: -13.75031566619873
    6. '.ap' → logprob: -14.25031566619873
    7. '.a' → logprob: -15.37531566619873
    8. '=' → logprob: -15.87531566619873
    9. '_append' → logprob: -16.125314712524414
    10. 'Append' → logprob: -16.375314712524414

Token 366: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27451279759407043
    2. 'aa' → logprob: -1.524512767791748
    3. '((' → logprob: -4.399512767791748
    4. ' (' → logprob: -5.274512767791748
    5. ' aa' → logprob: -5.524512767791748
    6. '1' → logprob: -7.649512767791748
    7. '   ' → logprob: -9.274513244628906
    8. ' ' → logprob: -9.274513244628906
    9. ' ((' → logprob: -9.649513244628906
    10. '(((' → logprob: -10.274513244628906

Token 367: 'aa' (ID: 3545)
  Prédit: 'aa'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aa' → logprob: -0.10069022327661514
    2. '(' → logprob: -2.3506901264190674
    3. ' aa' → logprob: -8.100689888000488
    4. ' (' → logprob: -9.475689888000488
    5. '1' → logprob: -10.100689888000488
    6. '((' → logprob: -10.850689888000488
    7. '   ' → logprob: -11.225689888000488
    8. ' ' → logprob: -11.850689888000488
    9. '  ' → logprob: -12.350689888000488
    10. '(a' → logprob: -12.975689888000488

Token 368: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0010865206131711602
    2. ' >>' → logprob: -7.126086711883545
    3. '&' → logprob: -8.251086235046387
    4. ' &' → logprob: -11.626086235046387
    5. '>>(' → logprob: -12.376086235046387
    6. '&gt' → logprob: -13.001086235046387
    7. ')>>' → logprob: -13.376086235046387
    8. '>>&' → logprob: -13.751086235046387
    9. '>>>' → logprob: -13.876086235046387
    10. ' ' → logprob: -14.251086235046387

Token 369: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033558503491804004
    2. ' i' → logprob: -8.000335693359375
    3. '_i' → logprob: -16.500335693359375
    4. '   ' → logprob: -17.250335693359375
    5. ')i' → logprob: -17.375335693359375
    6. ' ' → logprob: -17.750335693359375
    7. '
' → logprob: -18.125335693359375
    8. '	i' → logprob: -18.125335693359375
    9. ')' → logprob: -19.625335693359375
    10. '```' → logprob: -19.875335693359375

Token 370: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.20278312265872955
    2. ')' → logprob: -1.7027831077575684
    3. ' )' → logprob: -6.827783107757568
    4. '&' → logprob: -8.202783584594727
    5. ' &' → logprob: -12.202783584594727
    6. '1' → logprob: -13.202783584594727
    7. ' ' → logprob: -13.452783584594727
    8. ')%' → logprob: -13.577783584594727
    9. '&)' → logprob: -14.327783584594727
    10. '   ' → logprob: -14.702783584594727

Token 371: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.65101717156358e-05
    2. ' ' → logprob: -9.250096321105957
    3. '
' → logprob: -15.625096321105957
    4. '   ' → logprob: -16.500097274780273
    5. '0' → logprob: -17.875097274780273
    6. '01' → logprob: -18.000097274780273
    7. '  ' → logprob: -18.312597274780273
    8. '' → logprob: -18.312597274780273
    9. '```' → logprob: -18.312597274780273
    10. '127' → logprob: -18.375097274780273

Token 372: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20144949853420258
    2. ')
' → logprob: -1.7014495134353638
    3. ' )' → logprob: -11.576449394226074
    4. ')
' → logprob: -11.701449394226074
    5. ' )
' → logprob: -11.826449394226074
    6. '),' → logprob: -12.576449394226074
    7. '       ' → logprob: -12.826449394226074
    8. '           ' → logprob: -12.951449394226074
    9. ')

' → logprob: -14.201449394226074
    10. '))' → logprob: -14.951449394226074

Token 373: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015469235368072987
    2. 'tb' → logprob: -4.265469074249268
    3. ' tb' → logprob: -6.890469074249268
    4. ',' → logprob: -9.390469551086426
    5. '       ' → logprob: -9.765469551086426
    6. '(tb' → logprob: -10.140469551086426
    7. '	tb' → logprob: -10.390469551086426
    8. '               ' → logprob: -10.890469551086426
    9. '_tb' → logprob: -11.390469551086426
    10. ')' → logprob: -11.640469551086426

Token 374: ' tb' (ID: 25078)
  Prédit: 'tb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tb' (adapté à ' tb') → logprob: -0.35015687346458435
    2. 't' → logprob: -1.3501569032669067
    3. ' tb' → logprob: -3.850156784057617
    4. '(tb' → logprob: -4.600156784057617
    5. ' t' → logprob: -5.475156784057617
    6. '(t' → logprob: -7.350156784057617
    7. '           ' → logprob: -11.225156784057617
    8. '	tb' → logprob: -11.475156784057617
    9. ' ' → logprob: -11.725156784057617
    10. ' (' → logprob: -11.725156784057617

Token 375: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00021712594025302678
    2. '.' → logprob: -8.62521743774414
    3. ' .' → logprob: -11.00021743774414
    4. 'append' → logprob: -11.25021743774414
    5. '           ' → logprob: -12.00021743774414
    6. ').' → logprob: -14.37521743774414
    7. '       ' → logprob: -15.50021743774414
    8. '          ' → logprob: -15.62521743774414
    9. '=' → logprob: -16.00021743774414
    10. '         ' → logprob: -16.25021743774414

Token 376: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000271706550847739
    2. ' ((' → logprob: -8.875271797180176
    3. '(' → logprob: -9.125271797180176
    4. ' (' → logprob: -11.125271797180176
    5. '(bb' → logprob: -12.375271797180176
    6. ' ' → logprob: -13.375271797180176
    7. '   ' → logprob: -13.750271797180176
    8. '  ' → logprob: -15.250271797180176
    9. '           ' → logprob: -15.250271797180176
    10. '       ' → logprob: -15.750271797180176

Token 377: 'bb' (ID: 10029)
  Prédit: 'bb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0620848722755909
    2. '(bb' → logprob: -2.812084913253784
    3. 'aa' → logprob: -9.937085151672363
    4. '(' → logprob: -10.187085151672363
    5. ' bb' → logprob: -10.562085151672363
    6. ' (' → logprob: -13.062085151672363
    7. '_bb' → logprob: -13.687085151672363
    8. '(b' → logprob: -14.187085151672363
    9. ' ' → logprob: -14.812085151672363
    10. '.bb' → logprob: -15.437085151672363

Token 378: '>>' (ID: 3920)
  Prédit: '>>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>>' → logprob: -0.0011705794604495168
    2. '&' → logprob: -7.751170635223389
    3. ' >>' → logprob: -8.00117015838623
    4. '>>&' → logprob: -9.00117015838623
    5. ')&' → logprob: -9.25117015838623
    6. ')>>' → logprob: -9.75117015838623
    7. ')' → logprob: -10.50117015838623
    8. '&gt' → logprob: -10.87617015838623
    9. '>' → logprob: -10.87617015838623
    10. '>>(' → logprob: -11.25117015838623

Token 379: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.1782583391759545e-05
    2. ' i' → logprob: -10.500031471252441
    3. ')' → logprob: -12.875031471252441
    4. '1' → logprob: -14.375031471252441
    5. ')i' → logprob: -14.500031471252441
    6. '_i' → logprob: -15.625031471252441
    7. '<|end|>' → logprob: -15.625031471252441
    8. '0' → logprob: -16.125032424926758
    9. '(i' → logprob: -16.625032424926758
    10. ' ' → logprob: -17.125032424926758

Token 380: ')&' (ID: 34370)
  Prédit: ')&'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')&' → logprob: -0.00015359772078227252
    2. ')' → logprob: -8.875153541564941
    3. ' )' → logprob: -12.375153541564941
    4. '&' → logprob: -12.500153541564941
    5. ')>>' → logprob: -12.875153541564941
    6. '   ' → logprob: -14.000153541564941
    7. ' ' → logprob: -14.375153541564941
    8. '       ' → logprob: -14.875153541564941
    9. ')i' → logprob: -15.375153541564941
    10. '1' → logprob: -15.500153541564941

Token 381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.125016212463379
    3. '0' → logprob: -13.500016212463379
    4. 'i' → logprob: -17.125017166137695
    5. ')' → logprob: -17.625017166137695
    6. '   ' → logprob: -17.875017166137695
    7. '```' → logprob: -18.125017166137695
    8. '           ' → logprob: -18.250017166137695
    9. '(' → logprob: -19.000017166137695
    10. 'int' → logprob: -20.000017166137695

Token 382: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.2756275534629822
    2. ')' → logprob: -1.650627613067627
    3. '           ' → logprob: -3.275627613067627
    4. '       ' → logprob: -4.525627613067627
    5. ')
' → logprob: -8.150627136230469
    6. ')

' → logprob: -10.900627136230469
    7. '               ' → logprob: -11.400627136230469
    8. ' )
' → logprob: -12.025627136230469
    9. '   ' → logprob: -12.150627136230469
    10. ',' → logprob: -12.775627136230469

Token 383: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01109309121966362
    2. '       ' → logprob: -4.5110931396484375
    3. '   ' → logprob: -11.386093139648438
    4. '               ' → logprob: -11.636093139648438
    5. ',' → logprob: -12.136093139648438
    6. '          ' → logprob: -12.386093139648438
    7. '
' → logprob: -12.636093139648438
    8. '	       ' → logprob: -13.386093139648438
    9. ')' → logprob: -13.511093139648438
    10. '            
' → logprob: -13.511093139648438

Token 384: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.039301566779613495
    2. ' t' → logprob: -3.289301633834839
    3. '           ' → logprob: -7.03930139541626
    4. '       ' → logprob: -9.039301872253418
    5. '   ' → logprob: -9.664301872253418
    6. 'tb' → logprob: -10.164301872253418
    7. ' ' → logprob: -10.914301872253418
    8. '0' → logprob: -11.101801872253418
    9. '#' → logprob: -11.351801872253418
    10. '
' → logprob: -11.351801872253418

Token 385: 'bn' (ID: 22040)
  Prédit: 'bn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bn' → logprob: -0.00017743845819495618
    2. 'b' → logprob: -8.750177383422852
    3. ' bn' → logprob: -12.750177383422852
    4. 'bm' → logprob: -13.000177383422852
    5. 'bin' → logprob: -13.125177383422852
    6. '_bn' → logprob: -13.250177383422852
    7. 'bt' → logprob: -13.375177383422852
    8. 'n' → logprob: -14.250177383422852
    9. '
' → logprob: -14.250177383422852
    10. 'bi' → logprob: -14.250177383422852

Token 386: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00044103997061029077
    2. '.' → logprob: -7.750441074371338
    3. 'append' → logprob: -11.87544059753418
    4. ' .' → logprob: -12.87544059753418
    5. '.ap' → logprob: -15.12544059753418
    6. '=' → logprob: -16.12544059753418
    7. '.extend' → logprob: -16.62544059753418
    8. '.app' → logprob: -16.75044059753418
    9. 'Append' → logprob: -16.87544059753418
    10. '.Append' → logprob: -17.00044059753418

Token 387: '(tb' (ID: 115468)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.4672473669052124
    2. '(' → logprob: -1.4672473669052124
    3. '(((' → logprob: -2.092247486114502
    4. '(tb' → logprob: -4.342247486114502
    5. '((((' → logprob: -6.592247486114502
    6. 'ta' → logprob: -6.592247486114502
    7. '(t' → logprob: -7.092247486114502
    8. '(int' → logprob: -7.217247486114502
    9. 'tb' → logprob: -7.217247486114502
    10. '1' → logprob: -7.967247486114502

Token 388: '[-' (ID: 17503)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05030025914311409
    2. '[-' → logprob: -3.050300359725952
    3. '.append' → logprob: -6.425300121307373
    4. '[' → logprob: -10.550300598144531
    5. ')' → logprob: -11.550300598144531
    6. 'b' → logprob: -11.800300598144531
    7. 'i' → logprob: -11.925300598144531
    8. '[j' → logprob: -11.925300598144531
    9. '[a' → logprob: -11.925300598144531
    10. '[]' → logprob: -12.175300598144531

Token 389: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03871949017047882
    2. '-' → logprob: -3.413719415664673
    3. '-i' → logprob: -5.663719654083252
    4. '1' → logprob: -6.788719654083252
    5. '[-' → logprob: -9.288719177246094
    6. ' -' → logprob: -9.288719177246094
    7. ' i' → logprob: -9.663719177246094
    8. '(i' → logprob: -10.038719177246094
    9. ']' → logprob: -10.538719177246094
    10. ' ' → logprob: -11.038719177246094

Token 390: ']^' (ID: 144683)
  Prédit: '^'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '^' → logprob: -0.12551338970661163
    2. ' ^' → logprob: -2.6255133152008057
    3. ')' → logprob: -3.3755133152008057
    4. '|' → logprob: -5.375513553619385
    5. '^(' → logprob: -6.375513553619385
    6. '+' → logprob: -6.875513553619385
    7. '-' → logprob: -7.000513553619385
    8. '&' → logprob: -7.500513553619385
    9. ')^' → logprob: -7.500513553619385
    10. ' |' → logprob: -7.750513553619385

Token 391: '1' (ID: 16)
  Prédit: 'ta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ta' → logprob: -9.491498531133402e-06
    2. ' ta' → logprob: -12.750009536743164
    3. '(' → logprob: -12.875009536743164
    4. '((' → logprob: -13.375009536743164
    5. '
' → logprob: -14.750009536743164
    6. '   ' → logprob: -14.750009536743164
    7. '0' → logprob: -14.750009536743164
    8. '1' → logprob: -15.000009536743164
    9. ' ' → logprob: -15.625009536743164
    10. ' ' → logprob: -15.875009536743164

Token 392: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029264725744724274
    2. ')
' → logprob: -6.127926349639893
    3. ' )' → logprob: -7.502926349639893
    4. '))' → logprob: -9.62792682647705
    5. '       ' → logprob: -9.75292682647705
    6. '           ' → logprob: -10.87792682647705
    7. ')))' → logprob: -11.12792682647705
    8. ' ^' → logprob: -12.75292682647705
    9. '<|end|>' → logprob: -12.87792682647705
    10. ' )
' → logprob: -13.00292682647705

Token 393: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014376221224665642
    2. '<|end|>' → logprob: -4.264376163482666
    3. ',' → logprob: -9.764376640319824
    4. '<|end|>' → logprob: -9.889376640319824
    5. '
' → logprob: -10.514376640319824
    6. '        
' → logprob: -10.639376640319824
    7. ')' → logprob: -11.264376640319824
    8. '   ' → logprob: -11.389376640319824
    9. ' for' → logprob: -12.701876640319824
    10. '           ' → logprob: -13.076876640319824

Token 394: ' ah' (ID: 5369)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1826392114162445
    2. '       ' → logprob: -1.932639241218567
    3. ' ah' → logprob: -4.807639122009277
    4. '
' → logprob: -5.432639122009277
    5. ' for' → logprob: -6.432639122009277
    6. ' ' → logprob: -6.432639122009277
    7. 'ah' (adapté à ' ah') → logprob: -7.057639122009277
    8. ' _' → logprob: -7.057639122009277
    9. '<|end|>' → logprob: -7.057639122009277
    10. '  ' → logprob: -7.307639122009277

Token 395: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.906711546937004e-05
    2. '.' → logprob: -10.375048637390137
    3. '.app' → logprob: -12.000048637390137
    4. '.ap' → logprob: -12.250048637390137
    5. 'append' → logprob: -12.875048637390137
    6. ' .' → logprob: -13.000048637390137
    7. ',' → logprob: -14.000048637390137
    8. '_append' → logprob: -14.500048637390137
    9. '.extend' → logprob: -15.750048637390137
    10. '.p' → logprob: -16.750049591064453

Token 396: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.0006042646709829569
    2. '(' → logprob: -8.250604629516602
    3. '((' → logprob: -8.375604629516602
    4. '(
' → logprob: -10.750604629516602
    5. '([' → logprob: -11.000604629516602
    6. '.__' → logprob: -11.000604629516602
    7. '___' → logprob: -11.000604629516602
    8. '(_' → logprob: -11.125604629516602
    9. ' (' → logprob: -12.000604629516602
    10. '(-' → logprob: -12.125604629516602

Token 397: '_' (ID: 62)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00025108797126449645
    2. 'D' → logprob: -8.500250816345215
    3. '___' → logprob: -10.625250816345215
    4. '__' → logprob: -11.625250816345215
    5. '_C' → logprob: -11.750250816345215
    6. '_' → logprob: -12.375250816345215
    7. ' C' → logprob: -13.500250816345215
    8. '
' → logprob: -15.250250816345215
    9. '_D' → logprob: -15.500250816345215
    10. 'H' → logprob: -15.875250816345215

Token 398: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.0003455944824963808
    2. '_H' → logprob: -8.500345230102539
    3. '__' → logprob: -9.375345230102539
    4. '___' → logprob: -10.000345230102539
    5. '_hash' → logprob: -12.500345230102539
    6. ' Hash' → logprob: -13.125345230102539
    7. '_HASH' → logprob: -13.250345230102539
    8. '	Hash' → logprob: -14.375345230102539
    9. 'HASH' → logprob: -14.625345230102539
    10. '<Hash' → logprob: -14.750345230102539

Token 399: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -4.008129963040119e-06
    2. 'aginator' → logprob: -13.500003814697266
    3. 'inin' → logprob: -13.875003814697266
    4. 'in' → logprob: -14.500003814697266
    5. 'ominator' → logprob: -15.250003814697266
    6. 'inat' → logprob: -15.750003814697266
    7. '_in' → logprob: -16.250003814697266
    8. 'enerator' → logprob: -16.500003814697266
    9. '__' → logprob: -16.875003814697266
    10. 'initializer' → logprob: -17.000003814697266

Token 400: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003312937042210251
    2. '(t' → logprob: -8.625330924987793
    3. '(list' → logprob: -10.000330924987793
    4. ')(' → logprob: -10.375330924987793
    5. '([' → logprob: -10.500330924987793
    6. '((' → logprob: -10.750330924987793
    7. '(tuple' → logprob: -11.375330924987793
    8. '(_' → logprob: -12.375330924987793
    9. ')' → logprob: -12.875330924987793
    10. '.__' → logprob: -13.875330924987793

Token 401: 'ta' (ID: 1524)
  Prédit: 'ta'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ta' → logprob: -0.0010047047398984432
    2. ' ta' → logprob: -7.626004695892334
    3. 'tuple' → logprob: -8.626005172729492
    4. '[' → logprob: -8.876005172729492
    5. '   ' → logprob: -9.251005172729492
    6. 'tu' → logprob: -10.251005172729492
    7. '(' → logprob: -11.376005172729492
    8. 't' → logprob: -11.876005172729492
    9. 'tb' → logprob: -12.001005172729492
    10. ' ' → logprob: -12.001005172729492

Token 402: ',_' (ID: 46431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003341805888339877
    2. ',_' → logprob: -5.7533416748046875
    3. ' ,' → logprob: -8.753341674804688
    4. ',
' → logprob: -13.253341674804688
    5. '_,' → logprob: -13.753341674804688
    6. '   ' → logprob: -14.378341674804688
    7. '_BASE' → logprob: -14.628341674804688
    8. ' _' → logprob: -15.253341674804688
    9. ' ' → logprob: -15.253341674804688
    10. '```' → logprob: -15.378341674804688

Token 403: 'BASE' (ID: 34439)
  Prédit: 'BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -8.2994620242971e-06
    2. '_BASE' → logprob: -12.125008583068848
    3. 'B' → logprob: -13.500008583068848
    4. 'MOD' → logprob: -14.375008583068848
    5. '(BASE' → logprob: -14.875008583068848
    6. '.BASE' → logprob: -15.750008583068848
    7. 'BUF' → logprob: -16.50000762939453
    8. ' BASE' → logprob: -16.75000762939453
    9. ')' → logprob: -17.37500762939453
    10. '
' → logprob: -17.87500762939453

Token 404: ',_' (ID: 46431)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5789333581924438
    2. ',_' → logprob: -0.8289333581924438
    3. ' ,' → logprob: -5.828933238983154
    4. ',
' → logprob: -10.828933715820312
    5. ' _' → logprob: -11.203933715820312
    6. ',

' → logprob: -12.828933715820312
    7. ' ' → logprob: -13.078933715820312
    8. '   ' → logprob: -13.328933715820312
    9. ',__' → logprob: -13.328933715820312
    10. '

' → logprob: -14.203933715820312

Token 405: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.5776860184123507e-06
    2. '_MOD' → logprob: -13.12500286102295
    3. ' MOD' → logprob: -15.25000286102295
    4. '
' → logprob: -16.875001907348633
    5. '.MOD' → logprob: -17.750001907348633
    6. 'MO' → logprob: -17.875001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '```' → logprob: -18.250001907348633
    9. 'BASE' → logprob: -18.750001907348633
    10. '1' → logprob: -19.250001907348633

Token 406: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06075171381235123
    2. '))
' → logprob: -3.3107516765594482
    3. ')' → logprob: -3.8107516765594482
    4. ')
' → logprob: -8.560751914978027
    5. '))
' → logprob: -10.060751914978027
    6. '));' → logprob: -10.935751914978027
    7. ',' → logprob: -11.310751914978027
    8. '))

' → logprob: -11.435751914978027
    9. ' ))' → logprob: -11.435751914978027
    10. ')),' → logprob: -11.560751914978027

Token 407: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2528078854084015
    2. '       ' → logprob: -1.502807855606079
    3. 'bh' → logprob: -7.252808094024658
    4. '           ' → logprob: -9.6278076171875
    5. ' bh' → logprob: -10.6278076171875
    6. 'cb' → logprob: -10.6278076171875
    7. ',' → logprob: -11.0028076171875
    8. 'b' → logprob: -11.6278076171875
    9. ' ' → logprob: -12.0028076171875
    10. '      ' → logprob: -12.8778076171875

Token 408: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' (adapté à ' bh') → logprob: -0.018554789945483208
    2. ' bh' → logprob: -4.0185546875
    3. 'cb' → logprob: -8.3935546875
    4. ' cb' → logprob: -9.1435546875
    5. '   ' → logprob: -10.6435546875
    6. '       ' → logprob: -11.3935546875
    7. 'ah' → logprob: -11.5185546875
    8. ' ' → logprob: -11.6435546875
    9. 'b' → logprob: -12.5185546875
    10. '  ' → logprob: -12.7685546875

Token 409: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.4121114822482923e-06
    2. '.' → logprob: -13.375003814697266
    3. 'append' → logprob: -13.750003814697266
    4. '.app' → logprob: -14.250003814697266
    5. '.ap' → logprob: -16.500003814697266
    6. '.Append' → logprob: -17.125003814697266
    7. ' .' → logprob: -17.375003814697266
    8. 'appen' → logprob: -18.500003814697266
    9. '_append' → logprob: -18.625003814697266
    10. 'Append' → logprob: -18.625003814697266

Token 410: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.0005538671393878758
    2. '___' → logprob: -7.625554084777832
    3. '(b' → logprob: -10.625554084777832
    4. '.__' → logprob: -11.000554084777832
    5. '(_' → logprob: -11.875554084777832
    6. '((' → logprob: -12.750554084777832
    7. 'b' → logprob: -12.875554084777832
    8. '(c' → logprob: -13.000554084777832
    9. '(' → logprob: -13.375554084777832
    10. '(cb' → logprob: -13.750554084777832

Token 411: '_' (ID: 62)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.038277413696050644
    2. '_' → logprob: -3.4132773876190186
    3. 'b' → logprob: -6.163277626037598
    4. '  ' → logprob: -6.788277626037598
    5. '__' → logprob: -7.788277626037598
    6. '_B' → logprob: -8.038277626037598
    7. 't' → logprob: -8.163277626037598
    8. ' ___' → logprob: -10.038277626037598
    9. 'bt' → logprob: -10.413277626037598
    10. '_b' → logprob: -10.538277626037598

Token 412: 'Hash' (ID: 8579)
  Prédit: 'Hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Hash' → logprob: -0.00020663968462031335
    2. 'b' → logprob: -9.50020694732666
    3. '___' → logprob: -9.50020694732666
    4. 'bh' → logprob: -11.12520694732666
    5. '(Hash' → logprob: -11.12520694732666
    6. '_hash' → logprob: -12.00020694732666
    7. '_H' → logprob: -12.12520694732666
    8. '__' → logprob: -12.25020694732666
    9. '_HASH' → logprob: -13.50020694732666
    10. '	Hash' → logprob: -13.62520694732666

Token 413: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -1.843177233240567e-05
    2. 'in' → logprob: -11.875018119812012
    3. 'ator' → logprob: -12.875018119812012
    4. '(b' → logprob: -13.000018119812012
    5. '(tb' → logprob: -13.125018119812012
    6. '(t' → logprob: -14.000018119812012
    7. 'Hash' → logprob: -14.250018119812012
    8. '(_' → logprob: -14.375018119812012
    9. 'b' → logprob: -14.875018119812012
    10. 'In' → logprob: -15.000018119812012

Token 414: '(tb' (ID: 115468)
  Prédit: '(tb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tb' → logprob: -0.00026896485360339284
    2. '(t' → logprob: -8.250268936157227
    3. 'tb' → logprob: -12.375268936157227
    4. '(' → logprob: -13.125268936157227
    5. ' (' → logprob: -14.000268936157227
    6. '	tb' → logprob: -15.250268936157227
    7. '   ' → logprob: -16.250268936157227
    8. '(tc' → logprob: -16.375268936157227
    9. '(tbl' → logprob: -16.875268936157227
    10. ' tb' → logprob: -17.000268936157227

Token 415: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.0041330186650156975
    2. ',' → logprob: -5.504133224487305
    3. ',b' → logprob: -11.379133224487305
    4. '[_' → logprob: -11.754133224487305
    5. ',[' → logprob: -11.754133224487305
    6. ' ,' → logprob: -11.879133224487305
    7. ',__' → logprob: -12.504133224487305
    8. ',
' → logprob: -13.129133224487305
    9. ',(' → logprob: -13.254133224487305
    10. ',p' → logprob: -13.379133224487305

Token 416: 'BASE' (ID: 34439)
  Prédit: 'BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -0.10045737028121948
    2. '_BASE' → logprob: -2.3504574298858643
    3. 'b' → logprob: -8.350457191467285
    4. 't' → logprob: -12.100457191467285
    5. '_base' → logprob: -12.975457191467285
    6. 'bb' → logprob: -13.600457191467285
    7. 'B' → logprob: -13.600457191467285
    8. 'tb' → logprob: -13.850457191467285
    9. 'base' → logprob: -14.225457191467285
    10. '(BASE' → logprob: -14.350457191467285

Token 417: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.000918604782782495
    2. ',' → logprob: -7.000918388366699
    3. ' ,' → logprob: -12.8759183883667
    4. '_MOD' → logprob: -13.0009183883667
    5. ',
' → logprob: -14.6259183883667
    6. '_B' → logprob: -15.3759183883667
    7. ',__' → logprob: -15.5009183883667
    8. '_BASE' → logprob: -15.5009183883667
    9. ' _' → logprob: -15.6259183883667
    10. '_,' → logprob: -16.125919342041016

Token 418: 'MOD' (ID: 52135)
  Prédit: '_MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -4.084206375409849e-05
    2. '_mod' → logprob: -10.250041007995605
    3. 'MOD' → logprob: -13.250041007995605
    4. '_M' → logprob: -13.500041007995605
    5. '_MODAL' → logprob: -14.125041007995605
    6. '_Mod' → logprob: -14.500041007995605
    7. '_MON' → logprob: -15.875041007995605
    8. '_BASE' → logprob: -15.875041007995605
    9. ' _' → logprob: -16.25004005432129
    10. '\' → logprob: -16.25004005432129

Token 419: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.019451677799224854
    2. '))
' → logprob: -4.26945161819458
    3. ')' → logprob: -5.26945161819458
    4. ')
' → logprob: -9.019452095031738
    5. '       ' → logprob: -12.769452095031738
    6. ')))' → logprob: -13.644452095031738
    7. '))

' → logprob: -14.019452095031738
    8. '   ' → logprob: -14.644452095031738
    9. '))
' → logprob: -14.894452095031738
    10. '),' → logprob: -15.394452095031738

Token 420: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.097437315271236e-05
    2. 'cb' → logprob: -10.12505054473877
    3. '   ' → logprob: -11.75005054473877
    4. '           ' → logprob: -14.12505054473877
    5. '<|end|>' → logprob: -14.50005054473877
    6. ')' → logprob: -15.25005054473877
    7. ' cb' → logprob: -15.62505054473877
    8. '	' → logprob: -15.62505054473877
    9. ',' → logprob: -15.75005054473877
    10. 'c' → logprob: -16.000051498413086

Token 421: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' (adapté à ' cb') → logprob: -0.0019454145804047585
    2. ' cb' → logprob: -6.251945495605469
    3. '       ' → logprob: -11.501945495605469
    4. '   ' → logprob: -12.001945495605469
    5. ' ' → logprob: -15.876945495605469
    6. '           ' → logprob: -16.00194549560547
    7. '
' → logprob: -16.25194549560547
    8. '_cb' → logprob: -16.37694549560547
    9. '	cb' → logprob: -16.50194549560547
    10. '(cb' → logprob: -17.00194549560547

Token 422: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -3.845798710244708e-05
    2. '.append' → logprob: -10.250038146972656
    3. 'bh' → logprob: -13.625038146972656
    4. 'ah' → logprob: -14.125038146972656
    5. '(h' → logprob: -14.750038146972656
    6. '_h' → logprob: -14.750038146972656
    7. '[h' → logprob: -16.125038146972656
    8. 'b' → logprob: -16.250038146972656
    9. 'hi' → logprob: -17.125038146972656
    10. '=' → logprob: -17.125038146972656

Token 423: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.537868779967539e-06
    2. '.' → logprob: -12.000008583068848
    3. '.app' → logprob: -13.250008583068848
    4. 'append' → logprob: -15.250008583068848
    5. '.Append' → logprob: -15.750008583068848
    6. '.ap' → logprob: -17.00000762939453
    7. '.extend' → logprob: -17.62500762939453
    8. 'Append' → logprob: -18.25000762939453
    9. '_append' → logprob: -18.62500762939453
    10. 'app' → logprob: -18.62500762939453

Token 424: '(__' (ID: 11782)
  Prédit: '(__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(__' → logprob: -0.005248579662293196
    2. '___' → logprob: -5.255248546600342
    3. '(' → logprob: -11.8802490234375
    4. '(
' → logprob: -12.7552490234375
    5. '(_' → logprob: -13.5052490234375
    6. '((' → logprob: -13.7552490234375
    7. '.__' → logprob: -14.2552490234375
    8. ' (' → logprob: -15.3802490234375
    9. '_' → logprob: -15.7552490234375
    10. '->___' → logprob: -15.7552490234375

Token 425: '_' (ID: 62)
  Prédit: '___'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '___' → logprob: -0.0013752338709309697
    2. '__' → logprob: -7.626375198364258
    3. 't' → logprob: -8.126375198364258
    4. '_' → logprob: -8.251375198364258
    5. '[' → logprob: -9.501375198364258
    6. '(t' → logprob: -9.876375198364258
    7. 'b' → logprob: -10.126375198364258
    8. '[t' → logprob: -10.501375198364258
    9. '(' → logprob: -10.626375198364258
    10. ' ___' → logprob: -10.751375198364258

Token 426: 'Hash' (ID: 8579)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.7293936610221863
    2. '___' → logprob: -1.229393720626831
    3. 'Hash' → logprob: -1.854393720626831
    4. 't' → logprob: -3.979393720626831
    5. '(Hash' → logprob: -4.229393482208252
    6. 'n' → logprob: -4.604393482208252
    7. '__' → logprob: -5.229393482208252
    8. '(__' → logprob: -5.729393482208252
    9. 'in' → logprob: -5.854393482208252
    10. 'b' → logprob: -5.854393482208252

Token 427: 'inator' (ID: 80972)
  Prédit: 'inator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inator' → logprob: -6.420598219847307e-05
    2. '(t' → logprob: -10.1250638961792
    3. 'in' → logprob: -10.8750638961792
    4. 't' → logprob: -13.3750638961792
    5. 'ator' → logprob: -13.5000638961792
    6. 'In' → logprob: -14.6250638961792
    7. 'imator' → logprob: -15.1250638961792
    8. 'n' → logprob: -15.3750638961792
    9. 'inat' → logprob: -15.5000638961792
    10. '(b' → logprob: -15.8750638961792

Token 428: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0001319063303526491
    2. 't' → logprob: -9.250131607055664
    3. '(' → logprob: -10.500131607055664
    4. ' (' → logprob: -12.250131607055664
    5. ' t' → logprob: -13.125131607055664
    6. '   ' → logprob: -14.625131607055664
    7. '((' → logprob: -15.625131607055664
    8. ')' → logprob: -15.875131607055664
    9. '           ' → logprob: -16.000131607055664
    10. '       ' → logprob: -16.375131607055664

Token 429: 'bn' (ID: 22040)
  Prédit: 'bn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bn' → logprob: -5.88418151892256e-05
    2. 't' → logprob: -10.000059127807617
    3. 'tn' → logprob: -12.375059127807617
    4. '(t' → logprob: -12.500059127807617
    5. 'b' → logprob: -12.625059127807617
    6. ' bn' → logprob: -13.500059127807617
    7. '_bn' → logprob: -14.750059127807617
    8. 'n' → logprob: -16.750059127807617
    9. 'bm' → logprob: -16.875059127807617
    10. ' t' → logprob: -17.125059127807617

Token 430: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.004059521481394768
    2. ',' → logprob: -5.629059314727783
    3. '(_' → logprob: -7.754059314727783
    4. ' ,' → logprob: -10.504059791564941
    5. '[_' → logprob: -13.379059791564941
    6. ' ' → logprob: -15.629059791564941
    7. ',__' → logprob: -15.629059791564941
    8. ',
' → logprob: -15.754059791564941
    9. '(' → logprob: -15.879059791564941
    10. ' _' → logprob: -16.129058837890625

Token 431: 'BASE' (ID: 34439)
  Prédit: 'BASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BASE' → logprob: -0.38690707087516785
    2. '_BASE' → logprob: -1.1369071006774902
    3. '_base' → logprob: -10.761906623840332
    4. '(BASE' → logprob: -12.011906623840332
    5. '0' → logprob: -13.261906623840332
    6. ',' → logprob: -13.511906623840332
    7. ' BASE' → logprob: -13.761906623840332
    8. 'Base' → logprob: -14.011906623840332
    9. '.BASE' → logprob: -14.136906623840332
    10. ')' → logprob: -14.511906623840332

Token 432: ',_' (ID: 46431)
  Prédit: ',_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',_' → logprob: -0.0005603004829026759
    2. ',' → logprob: -7.500560283660889
    3. '_MOD' → logprob: -12.625560760498047
    4. ' ,' → logprob: -13.250560760498047
    5. ',
' → logprob: -13.875560760498047
    6. '_mod' → logprob: -15.000560760498047
    7. ' _' → logprob: -15.375560760498047
    8. ',__' → logprob: -15.625560760498047
    9. '._' → logprob: -16.625560760498047
    10. '_,' → logprob: -16.875560760498047

Token 433: 'MOD' (ID: 52135)
  Prédit: '_MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_MOD' → logprob: -0.00676700659096241
    2. 'MOD' → logprob: -5.0067667961120605
    3. '_mod' → logprob: -10.631767272949219
    4. '_BASE' → logprob: -10.756767272949219
    5. '_MODAL' → logprob: -12.756767272949219
    6. 'mod' → logprob: -14.256767272949219
    7. 'BASE' → logprob: -14.506767272949219
    8. 'Mod' → logprob: -15.131767272949219
    9. ' _' → logprob: -15.256767272949219
    10. '_Mod' → logprob: -15.381767272949219

Token 434: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0028463639318943024
    2. '))
' → logprob: -6.5028462409973145
    3. ')' → logprob: -6.6278462409973145
    4. '       ' → logprob: -11.502846717834473
    5. ')
' → logprob: -12.002846717834473
    6. ')))' → logprob: -12.627846717834473
    7. '   ' → logprob: -15.252846717834473
    8. '))

' → logprob: -15.377846717834473
    9. '           ' → logprob: -16.502845764160156
    10. '));' → logprob: -16.752845764160156

Token 435: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' X' (ID: 2127)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018973276019096375
    2. '<|end|>' → logprob: -4.143973350524902
    3. 'return' → logprob: -7.143973350524902
    4. ')' → logprob: -7.768973350524902
    5. 'def' → logprob: -7.893973350524902
    6. ' return' → logprob: -8.518973350524902
    7. '...' → logprob: -8.518973350524902
    8. ' ' → logprob: -8.893973350524902
    9. '#' → logprob: -9.143973350524902
    10. '	return' → logprob: -9.143973350524902

Token 437: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12460280954837799
    2. '=' → logprob: -2.499602794647217
    3. ',' → logprob: -3.749602794647217
    4. '_' → logprob: -4.749602794647217
    5. 'X' → logprob: -7.374602794647217
    6. '=[]' → logprob: -7.749602794647217
    7. '.' → logprob: -8.999603271484375
    8. 'for' → logprob: -9.124603271484375
    9. ' ' → logprob: -9.124603271484375
    10. ',i' → logprob: -9.249603271484375

Token 438: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7138268351554871
    2. '[' → logprob: -2.088826894760132
    3. '___' → logprob: -2.088826894760132
    4. '[]' → logprob: -2.963826894760132
    5. '__' → logprob: -3.213826894760132
    6. '_' → logprob: -3.838826894760132
    7. '[n' → logprob: -3.963826894760132
    8. '[a' → logprob: -4.213826656341553
    9. ' [' → logprob: -4.463826656341553
    10. '_c' → logprob: -4.588826656341553

Token 439: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16192805767059326
    2. '___' → logprob: -2.661928176879883
    3. '[]' → logprob: -3.661928176879883
    4. '__' → logprob: -4.411928176879883
    5. ']' → logprob: -4.661928176879883
    6. '_' → logprob: -4.786928176879883
    7. '-' → logprob: -5.536928176879883
    8. '[' → logprob: -5.786928176879883
    9. 'False' → logprob: -6.036928176879883
    10. '(' → logprob: -6.286928176879883

Token 440: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8636292219161987
    2. ']*' → logprob: -0.8636292219161987
    3. ']*(' → logprob: -1.8636292219161987
    4. ',' → logprob: -7.613629341125488
    5. ' for' → logprob: -7.988629341125488
    6. 'for' → logprob: -8.738629341125488
    7. ']+' → logprob: -8.738629341125488
    8. '*' → logprob: -9.363629341125488
    9. ' ]' → logprob: -9.363629341125488
    10. '])' → logprob: -9.863629341125488

Token 441: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.21823377907276154
    2. '(n' → logprob: -1.9682338237762451
    3. 'cra' → logprob: -3.718233823776245
    4. '(' → logprob: -4.468233585357666
    5. 'len' → logprob: -4.968233585357666
    6. '(c' → logprob: -5.093233585357666
    7. '(len' → logprob: -6.468233585357666
    8. '((' → logprob: -7.218233585357666
    9. '3' → logprob: -7.343233585357666
    10. 'max' → logprob: -7.468233585357666

Token 442: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8456128835678101
    2. '<|end|>' → logprob: -0.8456128835678101
    3. '
' → logprob: -2.2206130027770996
    4. ' for' → logprob: -4.2206130027771
    5. '    
' → logprob: -5.5956130027771
    6. ' 
' → logprob: -5.7206130027771
    7. 'for' → logprob: -5.8456130027771
    8. ' ' → logprob: -6.2206130027771
    9. '	for' → logprob: -6.8456130027771
    10. '[' → logprob: -7.2206130027771

Token 444: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1533285230398178
    2. ' for' → logprob: -2.1533284187316895
    3. '   ' → logprob: -3.7783284187316895
    4. 'i' → logprob: -6.5283284187316895
    5. 'p' → logprob: -7.1533284187316895
    6. 'def' → logprob: -8.153328895568848
    7. 'x' → logprob: -9.153328895568848
    8. '	for' → logprob: -9.653328895568848
    9. '_' → logprob: -9.903328895568848
    10. ' i' → logprob: -10.028328895568848

Token 445: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3231833279132843
    2. ' i' → logprob: -1.448183298110962
    3. 'j' → logprob: -3.948183298110962
    4. ' j' → logprob: -5.073183536529541
    5. 'k' → logprob: -5.198183536529541
    6. 'x' → logprob: -6.198183536529541
    7. ' k' → logprob: -6.698183536529541
    8. '_' → logprob: -6.823183536529541
    9. 'q' → logprob: -7.573183536529541
    10. '_i' → logprob: -7.573183536529541

Token 446: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19026823341846466
    2. 'in' → logprob: -1.8152682781219482
    3. ',' → logprob: -4.815268039703369
    4. '_' → logprob: -6.565268039703369
    5. ' ' → logprob: -7.940268039703369
    6. ',n' → logprob: -9.315268516540527
    7. '0' → logprob: -9.690268516540527
    8. '_,' → logprob: -9.940268516540527
    9. '(' → logprob: -9.940268516540527
    10. 'n' → logprob: -10.065268516540527

Token 447: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007636439986526966
    2. ' range' → logprob: -4.882636547088623
    3. '_' → logprob: -11.507636070251465
    4. 'n' → logprob: -11.757636070251465
    5. ' ' → logprob: -12.507636070251465
    6. '(range' → logprob: -12.757636070251465
    7. '_range' → logprob: -13.382636070251465
    8. '   ' → logprob: -13.632636070251465
    9. '	range' → logprob: -14.632636070251465
    10. 'r' → logprob: -14.882636070251465

Token 448: '(c' (ID: 2410)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.3530235290527344
    2. 'n' → logprob: -1.2280235290527344
    3. '(' → logprob: -5.853023529052734
    4. ' n' → logprob: -7.228023529052734
    5. '1' → logprob: -7.603023529052734
    6. '(c' → logprob: -8.728023529052734
    7. '_n' → logprob: -8.853023529052734
    8. ' (' → logprob: -10.728023529052734
    9. '   ' → logprob: -10.853023529052734
    10. 'c' → logprob: -11.353023529052734

Token 449: 'ra' (ID: 614)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0038309525698423386
    2. ' n' → logprob: -6.378830909729004
    3. '<n' → logprob: -7.753830909729004
    4. '_n' → logprob: -8.003830909729004
    5. '(n' → logprob: -8.378830909729004
    6. ',n' → logprob: -8.378830909729004
    7. '   ' → logprob: -8.753830909729004
    8. ')' → logprob: -9.253830909729004
    9. '*n' → logprob: -9.253830909729004
    10. '+' → logprob: -9.628830909729004

Token 450: 'zy' (ID: 3705)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.013147641904652119
    2. 'r' → logprob: -5.013147830963135
    3. ' n' → logprob: -6.138147830963135
    4. 'rd' → logprob: -6.513147830963135
    5. 'nt' → logprob: -7.263147830963135
    6. '   ' → logprob: -7.638147830963135
    7. 'rl' → logprob: -7.888147830963135
    8. 'rr' → logprob: -8.388147354125977
    9. 'rc' → logprob: -8.513147354125977
    10. '_n' → logprob: -8.888147354125977

Token 451: '_bit' (ID: 39574)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8260461091995239
    2. '):' → logprob: -0.9510461091995239
    3. '_n' → logprob: -2.4510459899902344
    4. '):
' → logprob: -2.8260459899902344
    5. '*n' → logprob: -4.326045989990234
    6. '_len' → logprob: -4.951045989990234
    7. ',n' → logprob: -5.951045989990234
    8. ' n' → logprob: -6.826045989990234
    9. 'len' → logprob: -6.826045989990234
    10. '+' → logprob: -6.951045989990234

Token 452: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -5.438573680294212e-06
    2. 'n' → logprob: -13.000005722045898
    3. 'en' → logprob: -13.000005722045898
    4. '_len' → logprob: -15.125005722045898
    5. 'l' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.1250057220459
    7. 'leni' → logprob: -16.2500057220459
    8. '=len' → logprob: -16.6250057220459
    9. '(len' → logprob: -17.2500057220459
    10. 'in' → logprob: -17.6250057220459

Token 453: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4349578022956848
    2. '):
' → logprob: -1.05995774269104
    3. '+' → logprob: -5.934957981109619
    4. ',' → logprob: -6.434957981109619
    5. ':' → logprob: -6.809957981109619
    6. '   ' → logprob: -7.309957981109619
    7. ',n' → logprob: -9.934957504272461
    8. ')' → logprob: -10.309957504272461
    9. ':
' → logprob: -10.434957504272461
    10. '-' → logprob: -10.809957504272461

Token 454: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38153520226478577
    2. ' for' → logprob: -2.131535291671753
    3. '    ' → logprob: -2.381535291671753
    4. ' ' → logprob: -3.006535291671753
    5. '   ' → logprob: -3.506535291671753
    6. 'for' → logprob: -5.256535053253174
    7. '        ' → logprob: -5.631535053253174
    8. ' if' → logprob: -5.631535053253174
    9. ' _' → logprob: -6.256535053253174
    10. ' X' → logprob: -6.256535053253174

Token 455: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1320793628692627
    2. 'X' → logprob: -1.2570793628692627
    3. 'if' → logprob: -1.8820793628692627
    4. 'x' → logprob: -2.5070793628692627
    5. '   ' → logprob: -3.0070793628692627
    6. 'mask' → logprob: -3.8820793628692627
    7. 'h' → logprob: -4.382079124450684
    8. 'm' → logprob: -4.632079124450684
    9. 'p' → logprob: -5.257079124450684
    10. 'c' → logprob: -5.257079124450684

Token 456: ' spot' (ID: 10021)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2891708314418793
    2. ' j' → logprob: -1.4141708612442017
    3. 'x' → logprob: -6.039170742034912
    4. 'k' → logprob: -6.289170742034912
    5. '0' → logprob: -7.289170742034912
    6. ' x' → logprob: -7.664170742034912
    7. '_j' → logprob: -7.914170742034912
    8. ' k' → logprob: -7.914170742034912
    9. '_' → logprob: -8.03917121887207
    10. 'i' → logprob: -8.53917121887207

Token 457: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14382052421569824
    2. 'in' → logprob: -2.0188205242156982
    3. ',' → logprob: -7.643820762634277
    4. ' ' → logprob: -9.018820762634277
    5. '   ' → logprob: -9.518820762634277
    6. '0' → logprob: -9.643820762634277
    7. 'n' → logprob: -10.018820762634277
    8. ')' → logprob: -10.268820762634277
    9. 'X' → logprob: -10.393820762634277
    10. '    ' → logprob: -10.518820762634277

Token 458: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.22555476427078247
    2. ' range' → logprob: -1.6005547046661377
    3. ' ' → logprob: -9.475554466247559
    4. '   ' → logprob: -11.225554466247559
    5. '0' → logprob: -11.225554466247559
    6. '_' → logprob: -11.475554466247559
    7. '[' → logprob: -12.100554466247559
    8. 'n' → logprob: -12.350554466247559
    9. '  ' → logprob: -12.850554466247559
    10. 'X' → logprob: -12.975554466247559

Token 459: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.038651373237371445
    2. '(n' → logprob: -3.913651466369629
    3. ' n' → logprob: -4.038651466369629
    4. '0' → logprob: -9.163651466369629
    5. '       ' → logprob: -9.913651466369629
    6. '(' → logprob: -10.038651466369629
    7. '_n' → logprob: -10.413651466369629
    8. '   ' → logprob: -10.788651466369629
    9. '1' → logprob: -10.913651466369629
    10. ' (' → logprob: -11.413651466369629

Token 460: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062348559498786926
    2. '):' → logprob: -3.1873486042022705
    3. '+' → logprob: -4.312348365783691
    4. '       ' → logprob: -6.062348365783691
    5. ',' → logprob: -6.687348365783691
    6. '           ' → logprob: -7.312348365783691
    7. ':' → logprob: -8.062348365783691
    8. '   ' → logprob: -8.437348365783691
    9. ' +' → logprob: -8.937348365783691
    10. ':
' → logprob: -8.937348365783691

Token 461: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07658611238002777
    2. ' if' → logprob: -2.7015860080718994
    3. '               ' → logprob: -5.8265862464904785
    4. 'if' → logprob: -6.5765862464904785
    5. '            ' → logprob: -7.4515862464904785
    6. '                   ' → logprob: -8.32658576965332
    7. '        ' → logprob: -8.45158576965332
    8. ' _' → logprob: -8.82658576965332
    9. '	       ' → logprob: -8.82658576965332
    10. '       ' → logprob: -9.07658576965332

Token 462: ' lhs' (ID: 51302)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.21849767863750458
    2. 'if' → logprob: -1.968497633934021
    3. '           ' → logprob: -2.9684977531433105
    4. '               ' → logprob: -5.8434977531433105
    5. 'X' → logprob: -7.0934977531433105
    6. 'x' → logprob: -7.7184977531433105
    7. '       ' → logprob: -8.218497276306152
    8. ' X' → logprob: -8.468497276306152
    9. ' x' → logprob: -8.593497276306152
    10. '   ' → logprob: -9.343497276306152

Token 463: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7464184165000916
    2. ' =' → logprob: -0.7464184165000916
    3. '[' → logprob: -3.6214184761047363
    4. ')' → logprob: -5.996418476104736
    5. '+' → logprob: -5.996418476104736
    6. ',' → logprob: -5.996418476104736
    7. '[p' → logprob: -6.371418476104736
    8. ' +=' → logprob: -6.496418476104736
    9. ' ==' → logprob: -6.621418476104736
    10. '[i' → logprob: -6.621418476104736

Token 464: ' ah' (ID: 5369)
  Prédit: 'ah'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ah' → logprob: -0.09467748552560806
    2. 'bh' → logprob: -3.344677448272705
    3. 'cb' → logprob: -3.469677448272705
    4. ' ah' → logprob: -4.719677448272705
    5. '(' → logprob: -5.094677448272705
    6. 'X' → logprob: -6.094677448272705
    7. ' cb' → logprob: -6.469677448272705
    8. '0' → logprob: -6.844677448272705
    9. ' bh' → logprob: -7.344677448272705
    10. '   ' → logprob: -7.969677448272705

Token 465: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000261216628132388
    2. '[p' → logprob: -9.000261306762695
    3. '[' → logprob: -9.250261306762695
    4. '[-' → logprob: -10.750261306762695
    5. '[I' → logprob: -12.125261306762695
    6. '[a' → logprob: -12.500261306762695
    7. '[s' → logprob: -13.125261306762695
    8. '[j' → logprob: -13.375261306762695
    9. 'i' → logprob: -13.500261306762695
    10. ' [' → logprob: -14.000261306762695

Token 466: '].' (ID: 1651)
  Prédit: '.spin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.spin' → logprob: -0.002339612226933241
    2. '].' → logprob: -6.627339839935303
    3. 'spin' → logprob: -7.627339839935303
    4. '[' → logprob: -8.502339363098145
    5. '.sp' → logprob: -9.627339363098145
    6. '
' → logprob: -10.002339363098145
    7. ').' → logprob: -10.127339363098145
    8. ' .' → logprob: -10.377339363098145
    9. '.' → logprob: -10.752339363098145
    10. ',' → logprob: -11.002339363098145

Token 467: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -2.3319124011322856e-05
    2. '_spin' → logprob: -11.000022888183594
    3. ' spin' → logprob: -12.500022888183594
    4. '.spin' → logprob: -13.750022888183594
    5. '	spin' → logprob: -14.750022888183594
    6. '   ' → logprob: -15.250022888183594
    7. 'span' → logprob: -15.500022888183594
    8. ' ' → logprob: -15.625022888183594
    9. '_' → logprob: -15.875022888183594
    10. '
' → logprob: -15.875022888183594

Token 468: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005443345289677382
    2. '(i' → logprob: -8.500544548034668
    3. '(n' → logprob: -9.500544548034668
    4. '(b' → logprob: -9.500544548034668
    5. '(sp' → logprob: -9.750544548034668
    6. 'spot' → logprob: -10.000544548034668
    7. '(lhs' → logprob: -10.750544548034668
    8. '(c' → logprob: -11.500544548034668
    9. '(
' → logprob: -11.750544548034668
    10. '(a' → logprob: -11.750544548034668

Token 469: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.2521391212940216
    2. '0' → logprob: -1.5021390914916992
    3. '(' → logprob: -9.5021390914917
    4. '
' → logprob: -9.7521390914917
    5. ' spot' → logprob: -10.7521390914917
    6. ')' → logprob: -11.6271390914917
    7. ' ' → logprob: -11.7521390914917
    8. '   ' → logprob: -12.2521390914917
    9. '           ' → logprob: -12.7521390914917
    10. 'span' → logprob: -12.7521390914917

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010679395636543632
    2. ' ,' → logprob: -6.876068115234375
    3. ',n' → logprob: -10.876068115234375
    4. '   ' → logprob: -12.126068115234375
    5. ',
' → logprob: -12.751068115234375
    6. '  ' → logprob: -13.251068115234375
    7. ' ' → logprob: -13.251068115234375
    8. '    ' → logprob: -14.001068115234375
    9. '
' → logprob: -14.501068115234375
    10. '       ' → logprob: -14.751068115234375

Token 471: ' n' (ID: 297)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.1616462618112564
    2. 'n' → logprob: -1.9116462469100952
    3. '   ' → logprob: -7.536646366119385
    4. ' spot' → logprob: -8.161645889282227
    5. ' n' → logprob: -8.536645889282227
    6. '
' → logprob: -10.349145889282227
    7. '    
' → logprob: -10.849145889282227
    8. '       ' → logprob: -10.911645889282227
    9. 'pot' → logprob: -11.036645889282227
    10. '    ' → logprob: -11.036645889282227

Token 472: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03405619412660599
    2. ')
' → logprob: -3.4090561866760254
    3. ' )' → logprob: -8.909056663513184
    4. ')-' → logprob: -9.284056663513184
    5. '-' → logprob: -10.284056663513184
    6. '           ' → logprob: -10.659056663513184
    7. ')
' → logprob: -10.784056663513184
    8. '       ' → logprob: -11.034056663513184
    9. ' )
' → logprob: -11.034056663513184
    10. ')#' → logprob: -11.784056663513184

Token 473: '           ' (ID: 352)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.8336002230644226
    2. '           ' → logprob: -1.3336002826690674
    3. ')' → logprob: -1.7086002826690674
    4. '-' → logprob: -3.2086002826690674
    5. '<|end|>' → logprob: -3.4586002826690674
    6. ' %' → logprob: -4.458600044250488
    7. '       ' → logprob: -4.708600044250488
    8. '%' → logprob: -4.833600044250488
    9. ' ^' → logprob: -5.083600044250488
    10. '               ' → logprob: -5.458600044250488

Token 474: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' (adapté à ' rhs') → logprob: -0.2737123668193817
    2. ' if' → logprob: -2.523712396621704
    3. 'if' → logprob: -3.023712396621704
    4. ' rhs' → logprob: -3.148712396621704
    5. '(rhs' → logprob: -3.648712396621704
    6. '==' → logprob: -4.523712158203125
    7. ')' → logprob: -4.648712158203125
    8. '^' → logprob: -5.648712158203125
    9. '<|end|>' → logprob: -5.648712158203125
    10. '_rhs' → logprob: -6.023712158203125

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39165398478507996
    2. '=' → logprob: -1.1416540145874023
    3. '[i' → logprob: -5.641654014587402
    4. '(i' → logprob: -7.266654014587402
    5. ')' → logprob: -8.391654014587402
    6. '=i' → logprob: -9.641654014587402
    7. '=
' → logprob: -9.766654014587402
    8. '[' → logprob: -9.766654014587402
    9. ' =
' → logprob: -10.391654014587402
    10. ')=' → logprob: -10.641654014587402

Token 476: ' ah' (ID: 5369)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.22816820442676544
    2. ' bh' → logprob: -1.603168249130249
    3. 'cb' → logprob: -6.72816801071167
    4. ' cb' → logprob: -6.85316801071167
    5. '   ' → logprob: -9.228168487548828
    6. ' ' → logprob: -9.478168487548828
    7. 'ah' → logprob: -9.603168487548828
    8. '  ' → logprob: -10.353168487548828
    9. '0' → logprob: -10.478168487548828
    10. '(' → logprob: -10.728168487548828

Token 477: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.822646693966817e-06
    2. '[' → logprob: -11.875007629394531
    3. 'i' → logprob: -14.750007629394531
    4. '```' → logprob: -15.875007629394531
    5. '[I' → logprob: -16.12500762939453
    6. '<|end|>' → logprob: -16.87500762939453
    7. ' [' → logprob: -17.12500762939453
    8. '[ii' → logprob: -17.62500762939453
    9. '{i' → logprob: -17.75000762939453
    10. '[
' → logprob: -17.75000762939453

Token 478: '].' (ID: 1651)
  Prédit: '.spin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.spin' → logprob: -0.011827543377876282
    2. '.' → logprob: -5.88682746887207
    3. '[i' → logprob: -5.88682746887207
    4. '[' → logprob: -6.01182746887207
    5. '.sp' → logprob: -6.76182746887207
    6. '].' → logprob: -6.76182746887207
    7. ').' → logprob: -7.13682746887207
    8. ' .' → logprob: -7.76182746887207
    9. '.i' → logprob: -9.13682746887207
    10. '>.' → logprob: -11.38682746887207

Token 479: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -0.0001462107611587271
    2. '.spin' → logprob: -9.12514591217041
    3. '_spin' → logprob: -11.25014591217041
    4. 'i' → logprob: -12.12514591217041
    5. 'sp' → logprob: -12.50014591217041
    6. ' spin' → logprob: -13.00014591217041
    7. '	spin' → logprob: -13.25014591217041
    8. 'n' → logprob: -13.62514591217041
    9. '[i' → logprob: -13.75014591217041
    10. '
' → logprob: -14.00014591217041

Token 480: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012737659562844783
    2. 'spot' → logprob: -9.750127792358398
    3. '0' → logprob: -10.625127792358398
    4. '((' → logprob: -11.250127792358398
    5. '(sp' → logprob: -11.875127792358398
    6. '(_' → logprob: -11.875127792358398
    7. '(n' → logprob: -12.125127792358398
    8. '(
' → logprob: -12.875127792358398
    9. 'Spot' → logprob: -13.250127792358398
    10. '(i' → logprob: -13.250127792358398

Token 481: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.29559603333473206
    2. '(' → logprob: -1.5455960035324097
    3. 'spot' → logprob: -3.170596122741699
    4. '(n' → logprob: -8.1705961227417
    5. 'n' → logprob: -9.1705961227417
    6. '((' → logprob: -9.9205961227417
    7. 'max' → logprob: -10.2955961227417
    8. '(i' → logprob: -10.7330961227417
    9. '(max' → logprob: -10.9205961227417
    10. '(sp' → logprob: -10.9205961227417

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001000655465759337
    2. ' ,' → logprob: -7.251000881195068
    3. ')' → logprob: -8.62600040435791
    4. '),' → logprob: -10.00100040435791
    5. ',
' → logprob: -10.62600040435791
    6. '           ' → logprob: -11.12600040435791
    7. '[' → logprob: -11.62600040435791
    8. '       ' → logprob: -13.37600040435791
    9. '               ' → logprob: -13.62600040435791
    10. '(),' → logprob: -13.75100040435791

Token 483: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.08123843371868134
    2. 'n' → logprob: -2.7062385082244873
    3. ' spot' → logprob: -4.581238269805908
    4. ' n' → logprob: -7.456238269805908
    5. '           ' → logprob: -9.581238746643066
    6. 'len' → logprob: -9.706238746643066
    7. '       ' → logprob: -10.268738746643066
    8. '   ' → logprob: -10.893738746643066
    9. '1' → logprob: -11.018738746643066
    10. 'Spot' → logprob: -11.331238746643066

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003757383383344859
    2. ')
' → logprob: -8.500375747680664
    3. ')+' → logprob: -9.375375747680664
    4. ' )' → logprob: -10.750375747680664
    5. '+' → logprob: -10.875375747680664
    6. ')*' → logprob: -11.000375747680664
    7. '           ' → logprob: -12.000375747680664
    8. '<|end|>' → logprob: -12.500375747680664
    9. '))' → logprob: -12.625375747680664
    10. '())' → logprob: -13.000375747680664

Token 485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056877050548791885
    2. '<|end|>' → logprob: -3.3068771362304688
    3. ' if' → logprob: -4.056877136230469
    4. ')' → logprob: -7.556877136230469
    5. 'if' → logprob: -8.306877136230469
    6. '          ' → logprob: -8.806877136230469
    7. '<|end|>' → logprob: -8.806877136230469
    8. '       ' → logprob: -9.056877136230469
    9. '               ' → logprob: -10.431877136230469
    10. '+' → logprob: -10.556877136230469

Token 486: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21349512040615082
    2. ' if' → logprob: -2.2134950160980225
    3. '<|end|>' → logprob: -3.0884950160980225
    4. '       ' → logprob: -4.588495254516602
    5. ')' → logprob: -4.838495254516602
    6. 'if' (adapté à ' if') → logprob: -4.963495254516602
    7. '          ' → logprob: -6.213495254516602
    8. '               ' → logprob: -6.213495254516602
    9. '+' → logprob: -6.838495254516602
    10. '==' → logprob: -6.963495254516602

Token 487: ' X' (ID: 2127)
  Prédit: ' lhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.14927791059017181
    2. 'lhs' → logprob: -2.149277925491333
    3. '(lhs' → logprob: -3.899277925491333
    4. ' (' → logprob: -7.024277687072754
    5. ' rhs' → logprob: -7.774277687072754
    6. '(' → logprob: -8.774277687072754
    7. ' lh' → logprob: -9.274277687072754
    8. 'rhs' → logprob: -9.399277687072754
    9. ' ' → logprob: -10.024277687072754
    10. ' not' → logprob: -10.336777687072754

Token 488: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03372926265001297
    2. '[i' → logprob: -3.408729314804077
    3. ' [' → logprob: -10.908729553222656
    4. '[token' → logprob: -11.283729553222656
    5. '[I' → logprob: -11.783729553222656
    6. '<|end|>' → logprob: -12.158729553222656
    7. '[
' → logprob: -12.533729553222656
    8. '[pos' → logprob: -12.658729553222656
    9. '[s' → logprob: -12.908729553222656
    10. '[X' → logprob: -12.908729553222656

Token 489: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.0003622793301474303
    2. 'i' → logprob: -8.375362396240234
    3. '[' → logprob: -9.500362396240234
    4. ' spot' → logprob: -10.375362396240234
    5. ']' → logprob: -11.125362396240234
    6. '][' → logprob: -13.000362396240234
    7. '```' → logprob: -13.125362396240234
    8. '[i' → logprob: -13.750362396240234
    9. '
' → logprob: -14.250362396240234
    10. '   ' → logprob: -14.250362396240234

Token 490: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2940833866596222
    2. ']==' → logprob: -1.6690833568572998
    3. ' ]' → logprob: -3.2940833568573
    4. ']!=' → logprob: -4.669083595275879
    5. '==' → logprob: -5.544083595275879
    6. '^' → logprob: -5.669083595275879
    7. ']^' → logprob: -5.919083595275879
    8. ' ==' → logprob: -5.919083595275879
    9. ' ^' → logprob: -6.419083595275879
    10. ' ^=' → logprob: -7.169083595275879

Token 491: ' is' (ID: 382)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.2311216592788696
    2. ' ==' → logprob: -1.3561216592788696
    3. '=' → logprob: -1.6061216592788696
    4. ' ^=' → logprob: -1.6061216592788696
    5. ' =' → logprob: -3.48112154006958
    6. '^' → logprob: -4.73112154006958
    7. ' !=' → logprob: -5.98112154006958
    8. '!=' → logprob: -6.10612154006958
    9. ' ^' → logprob: -6.35612154006958
    10. ' <<=' → logprob: -7.10612154006958

Token 492: ' None' (ID: 4662)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05103853717446327
    2. ' None' → logprob: -3.5510385036468506
    3. ' ' → logprob: -4.05103874206543
    4. 'None' → logprob: -5.67603874206543
    5. '1' → logprob: -9.05103874206543
    6. ' not' → logprob: -9.80103874206543
    7. 'not' → logprob: -11.30103874206543
    8. 'False' → logprob: -12.05103874206543
    9. ' (' → logprob: -12.30103874206543
    10. '=' → logprob: -12.30103874206543

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.738864541053772
    2. ' or' → logprob: -1.363864541053772
    3. '               ' → logprob: -2.3638644218444824
    4. ' and' → logprob: -3.2388644218444824
    5. ' :' → logprob: -3.7388644218444824
    6. ':
' → logprob: -3.8638644218444824
    7. ' ==' → logprob: -4.363864421844482
    8. '==' → logprob: -4.488864421844482
    9. '<|end|>' → logprob: -4.613864421844482
    10. '=' → logprob: -4.738864421844482

Token 494: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05130413547158241
    2. ' =' → logprob: -3.9263041019439697
    3. ':' → logprob: -4.426304340362549
    4. '=' → logprob: -5.301304340362549
    5. '<|end|>' → logprob: -5.551304340362549
    6. ' ' → logprob: -5.676304340362549
    7. '                ' → logprob: -6.551304340362549
    8. '                               ' → logprob: -7.301304340362549
    9. '            ' → logprob: -7.926304340362549
    10. '           ' → logprob: -8.05130386352539

Token 495: ' continue' (ID: 4901)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.501583993434906
    2. ' continue' → logprob: -2.126584053039551
    3. '                ' → logprob: -2.501584053039551
    4. '               ' → logprob: -3.001584053039551
    5. ' X' → logprob: -3.126584053039551
    6. 'X' → logprob: -3.501584053039551
    7. '<|end|>' → logprob: -3.501584053039551
    8. '            ' → logprob: -4.501584053039551
    9. 'continue' (adapté à ' continue') → logprob: -5.001584053039551
    10. ')' → logprob: -5.501584053039551

Token 496: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36953985691070557
    2. '<|end|>' → logprob: -1.8695398569107056
    3. '               ' → logprob: -3.244539737701416
    4. ' 
' → logprob: -3.244539737701416
    5. ' ' → logprob: -3.744539737701416
    6. '       ' → logprob: -4.994539737701416
    7. '            
' → logprob: -5.369539737701416
    8. ' else' → logprob: -5.619539737701416
    9. '
' → logprob: -5.744539737701416
    10. '\n' → logprob: -5.869539737701416

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025728721171617508
    2. '<|end|>' → logprob: -4.025728702545166
    3. ' ' → logprob: -6.025728702545166
    4. '               ' → logprob: -6.525728702545166
    5. '       ' → logprob: -6.775728702545166
    6. ' else' → logprob: -7.900728702545166
    7. '            
' → logprob: -8.150729179382324
    8. '   ' → logprob: -8.275729179382324
    9. '            ' → logprob: -8.650729179382324
    10. '		' → logprob: -8.650729179382324

Token 498: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005530423019081354
    2. '               ' → logprob: -6.38053035736084
    3. '            ' → logprob: -6.50553035736084
    4. '          ' → logprob: -7.75553035736084
    5. ' if' → logprob: -8.25553035736084
    6. '       ' → logprob: -8.38053035736084
    7. '<|end|>' → logprob: -8.38053035736084
    8. 'if' (adapté à ' if') → logprob: -8.63053035736084
    9. '		' → logprob: -8.88053035736084
    10. ' ' → logprob: -9.25553035736084

Token 499: ' lhs' (ID: 51302)
  Prédit: ' lhs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lhs' → logprob: -0.6582764387130737
    2. 'lhs' → logprob: -0.7832764387130737
    3. '(lhs' → logprob: -3.9082765579223633
    4. ' (' → logprob: -6.783276557922363
    5. 'ah' → logprob: -7.033276557922363
    6. ' ah' → logprob: -7.283276557922363
    7. ' rhs' → logprob: -7.408276557922363
    8. 'rhs' → logprob: -7.533276557922363
    9. '(' → logprob: -8.033276557922363
    10. ' lh' → logprob: -8.533276557922363

Token 500: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7001234292984009
    2. ' ==' → logprob: -1.2001234292984009
    3. '==' → logprob: -1.9501234292984009
    4. '!=' → logprob: -2.8251233100891113
    5. ' ^' → logprob: -8.45012378692627
    6. ')' → logprob: -8.82512378692627
    7. '^' → logprob: -9.20012378692627
    8. ')==' → logprob: -9.70012378692627
    9. ')!=' → logprob: -9.95012378692627
    10. '[' → logprob: -10.20012378692627

Token 501: ' cb' (ID: 17799)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.0077194939367473125
    2. ' rhs' → logprob: -4.88271951675415
    3. '(rhs' → logprob: -9.882719039916992
    4. '0' → logprob: -10.007719039916992
    5. 'lhs' → logprob: -11.757719039916992
    6. 'X' → logprob: -12.507719039916992
    7. '
' → logprob: -13.632719039916992
    8. 'None' → logprob: -14.007719039916992
    9. '1' → logprob: -14.257719039916992
    10. '_rhs' → logprob: -14.382719039916992

Token 502: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -7.896309739408025e-07
    2. '[h' → logprob: -15.125000953674316
    3. '_h' → logprob: -15.625000953674316
    4. '```' → logprob: -16.625
    5. '(h' → logprob: -16.875
    6. 'bh' → logprob: -16.875
    7. 'ah' → logprob: -17.375
    8. '
' → logprob: -17.375
    9. '	h' → logprob: -17.75
    10. '[' → logprob: -17.875

Token 503: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.107425062713446e-06
    2. '[' → logprob: -12.750006675720215
    3. 'i' → logprob: -13.125006675720215
    4. '```' → logprob: -13.875006675720215
    5. '[
' → logprob: -14.875006675720215
    6. '<|end|>' → logprob: -15.625006675720215
    7. '[I' → logprob: -15.875006675720215
    8. 's' → logprob: -16.75000762939453
    9. ')' → logprob: -17.12500762939453
    10. '[j' → logprob: -17.37500762939453

Token 504: '].' (ID: 1651)
  Prédit: '.spin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.spin' → logprob: -0.05964323505759239
    2. '].' → logprob: -2.934643268585205
    3. ').' → logprob: -5.684643268585205
    4. '.' → logprob: -6.809643268585205
    5. ' .' → logprob: -9.684642791748047
    6. '.sp' → logprob: -9.934642791748047
    7. '}.' → logprob: -10.059642791748047
    8. 'spin' → logprob: -10.684642791748047
    9. '>.' → logprob: -11.559642791748047
    10. '[' → logprob: -11.559642791748047

Token 505: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -8.537868779967539e-06
    2. ' spin' → logprob: -12.500008583068848
    3. '.spin' → logprob: -12.500008583068848
    4. '	spin' → logprob: -14.125008583068848
    5. 'sp' → logprob: -15.875008583068848
    6. '
' → logprob: -17.00000762939453
    7. 'span' → logprob: -17.37500762939453
    8. '_spin' → logprob: -17.37500762939453
    9. '-spin' → logprob: -17.75000762939453
    10. '```' → logprob: -18.00000762939453

Token 506: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.856408536899835e-05
    2. '(n' → logprob: -10.875028610229492
    3. ' (' → logprob: -12.750028610229492
    4. '((' → logprob: -13.500028610229492
    5. '(
' → logprob: -14.375028610229492
    6. '(sp' → logprob: -14.500028610229492
    7. '(_' → logprob: -14.750028610229492
    8. '(rhs' → logprob: -14.750028610229492
    9. 'spot' → logprob: -14.875028610229492
    10. '0' → logprob: -14.875028610229492

Token 507: '0' (ID: 15)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.22924171388149261
    2. '0' → logprob: -1.7292417287826538
    3. '(' → logprob: -3.6042416095733643
    4. ' spot' → logprob: -9.979241371154785
    5. 'span' → logprob: -11.041741371154785
    6. 'sp' → logprob: -11.416741371154785
    7. ' ' → logprob: -11.416741371154785
    8. '   ' → logprob: -11.541741371154785
    9. 'n' → logprob: -11.729241371154785
    10. 'Spot' → logprob: -11.791741371154785

Token 508: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11331119388341904
    2. ',n' → logprob: -2.238311290740967
    3. ' ,' → logprob: -8.488310813903809
    4. 'spot' → logprob: -9.113310813903809
    5. ',i' → logprob: -10.363310813903809
    6. ',
' → logprob: -10.488310813903809
    7. 'n' → logprob: -10.738310813903809
    8. '   ' → logprob: -11.363310813903809
    9. ' spot' → logprob: -11.363310813903809
    10. '       ' → logprob: -11.613310813903809

Token 509: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01885770820081234
    2. 'spot' → logprob: -4.018857479095459
    3. ' n' → logprob: -8.268857955932617
    4. '
' → logprob: -8.268857955932617
    5. '           ' → logprob: -10.393857955932617
    6. ' spot' → logprob: -10.643857955932617
    7. '(n' → logprob: -10.893857955932617
    8. '   ' → logprob: -11.268857955932617
    9. '            
' → logprob: -11.268857955932617
    10. '
' → logprob: -11.706357955932617

Token 510: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22950422763824463
    2. '):
' → logprob: -1.9795042276382446
    3. '):' → logprob: -2.729504108428955
    4. '           ' → logprob: -7.479504108428955
    5. ' )' → logprob: -8.354504585266113
    6. '):
' → logprob: -8.604504585266113
    7. '               ' → logprob: -8.729504585266113
    8. '):

' → logprob: -8.979504585266113
    9. '-' → logprob: -9.604504585266113
    10. '       ' → logprob: -9.979504585266113

Token 511: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.12802022695541382
    2. '1' → logprob: -2.1280202865600586
    3. ' spot' → logprob: -7.628020286560059
    4. '   ' → logprob: -8.378020286560059
    5. ' ' → logprob: -9.253020286560059
    6. '       ' → logprob: -10.003020286560059
    7. ')' → logprob: -10.253020286560059
    8. 'Spot' → logprob: -10.940520286560059
    9. '           ' → logprob: -11.065520286560059
    10. 'spots' → logprob: -11.065520286560059

Token 512: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1398802250623703
    2. '):' → logprob: -2.5148801803588867
    3. '):
' → logprob: -3.0148801803588867
    4. ' )' → logprob: -8.639880180358887
    5. '):

' → logprob: -9.264880180358887
    6. ')
' → logprob: -9.889880180358887
    7. '       ' → logprob: -10.014880180358887
    8. '           ' → logprob: -10.389880180358887
    9. '):
' → logprob: -10.389880180358887
    10. '))' → logprob: -10.389880180358887

Token 513: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.029500514268875122
    2. ':' → logprob: -4.404500484466553
    3. '               ' → logprob: -4.904500484466553
    4. 'and' → logprob: -5.529500484466553
    5. '           ' → logprob: -6.154500484466553
    6. ':
' → logprob: -6.904500484466553
    7. ')' → logprob: -7.529500484466553
    8. ' or' → logprob: -7.529500484466553
    9. '              ' → logprob: -8.029500961303711
    10. '):' → logprob: -8.529500961303711

Token 514: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.005169600713998079
    2. ' rhs' → logprob: -5.88016939163208
    3. 'X' → logprob: -6.50516939163208
    4. 'bh' → logprob: -8.505169868469238
    5. 'rh' → logprob: -9.255169868469238
    6. '_rhs' → logprob: -9.505169868469238
    7. '(rhs' → logprob: -9.505169868469238
    8. 'lhs' → logprob: -9.630169868469238
    9. 'cb' → logprob: -10.005169868469238
    10. '   ' → logprob: -10.005169868469238

Token 515: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07017361372709274
    2. ' ==' → logprob: -2.695173501968384
    3. '!=' → logprob: -9.445173263549805
    4. '==
' → logprob: -9.695173263549805
    5. ')==' → logprob: -10.445173263549805
    6. ' !=' → logprob: -11.070173263549805
    7. ']==' → logprob: -11.445173263549805
    8. '+' → logprob: -11.570173263549805
    9. '==(' → logprob: -11.570173263549805
    10. '()==' → logprob: -12.320173263549805

Token 516: ' cb' (ID: 17799)
  Prédit: 'cb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cb' → logprob: -0.29813677072525024
    2. ' cb' → logprob: -1.4231367111206055
    3. 'bh' → logprob: -4.2981367111206055
    4. ' bh' → logprob: -6.1731367111206055
    5. ' ' → logprob: -8.423136711120605
    6. '(cb' → logprob: -8.860636711120605
    7. 'ah' → logprob: -9.048136711120605
    8. 'c' → logprob: -9.423136711120605
    9. 'gh' → logprob: -9.485636711120605
    10. '_cb' → logprob: -9.860636711120605

Token 517: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.00019710339256562293
    2. 'bh' → logprob: -8.750197410583496
    3. 'i' → logprob: -11.625197410583496
    4. '[i' → logprob: -11.625197410583496
    5. 'b' → logprob: -11.875197410583496
    6. '_h' → logprob: -12.125197410583496
    7. '(i' → logprob: -13.625197410583496
    8. 'hi' → logprob: -13.625197410583496
    9. 'w' → logprob: -14.250197410583496
    10. '[h' → logprob: -14.625197410583496

Token 518: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.870950215263292e-05
    2. 'i' → logprob: -10.250048637390137
    3. '[' → logprob: -11.500048637390137
    4. '```' → logprob: -14.000048637390137
    5. '(i' → logprob: -14.500048637390137
    6. '[_' → logprob: -16.000049591064453
    7. '_i' → logprob: -16.000049591064453
    8. ',i' → logprob: -16.000049591064453
    9. ')' → logprob: -16.125049591064453
    10. ' i' → logprob: -16.437549591064453

Token 519: '].' (ID: 1651)
  Prédit: '.spin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.spin' → logprob: -5.073596548754722e-05
    2. '.' → logprob: -10.75005054473877
    3. '.sp' → logprob: -10.75005054473877
    4. 'spin' → logprob: -13.00005054473877
    5. ' .' → logprob: -13.00005054473877
    6. ').' → logprob: -13.50005054473877
    7. '	spin' → logprob: -14.50005054473877
    8. '.spi' → logprob: -15.00005054473877
    9. '.s' → logprob: -15.75005054473877
    10. '   ' → logprob: -16.000051498413086

Token 520: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -0.0004740447038784623
    2. '.spin' → logprob: -7.750473976135254
    3. ' spin' → logprob: -10.875473976135254
    4. '_spin' → logprob: -11.500473976135254
    5. '	spin' → logprob: -12.250473976135254
    6. 'sp' → logprob: -12.875473976135254
    7. '
' → logprob: -13.000473976135254
    8. 'n' → logprob: -13.625473976135254
    9. ' ' → logprob: -14.250473976135254
    10. '
' → logprob: -14.500473976135254

Token 521: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005896099028177559
    2. '(' → logprob: -7.625589847564697
    3. 'n' → logprob: -9.500589370727539
    4. '
' → logprob: -11.625589370727539
    5. 'spot' → logprob: -12.250589370727539
    6. '

' → logprob: -12.375589370727539
    7. '[n' → logprob: -12.375589370727539
    8. '(sp' → logprob: -13.250589370727539
    9. ' (' → logprob: -14.000589370727539
    10. '(
' → logprob: -14.500589370727539

Token 522: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.13388703338569e-06
    2. ' -' → logprob: -11.625009536743164
    3. '   ' → logprob: -17.125009536743164
    4. 'spot' → logprob: -17.125009536743164
    5. ' spot' → logprob: -18.625009536743164
    6. '-
' → logprob: -18.875009536743164
    7. '-sp' → logprob: -19.000009536743164
    8. 'Spot' → logprob: -19.125009536743164
    9. '-stop' → logprob: -19.125009536743164
    10. '-place' → logprob: -19.250009536743164

Token 523: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.47425732016563416
    2. '-' → logprob: -0.9742573499679565
    3. ' spot' → logprob: -9.474257469177246
    4. 'pot' → logprob: -9.474257469177246
    5. '-n' → logprob: -11.224257469177246
    6. 'Spot' → logprob: -12.099257469177246
    7. ' -' → logprob: -12.849257469177246
    8. '   ' → logprob: -13.724257469177246
    9. 'n' → logprob: -13.849257469177246
    10. '-sp' → logprob: -13.974257469177246

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03654250502586365
    2. ',n' → logprob: -3.5365424156188965
    3. ' ,' → logprob: -5.0365424156188965
    4. '   ' → logprob: -9.036542892456055
    5. '0' → logprob: -10.161542892456055
    6. ' ' → logprob: -11.036542892456055
    7. ',
' → logprob: -11.411542892456055
    8. '  ' → logprob: -11.661542892456055
    9. '(n' → logprob: -11.911542892456055
    10. '```' → logprob: -12.036542892456055

Token 525: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00012761499965563416
    2. ' n' → logprob: -9.125127792358398
    3. '_n' → logprob: -11.250127792358398
    4. '0' → logprob: -13.625127792358398
    5. '
' → logprob: -13.750127792358398
    6. ')' → logprob: -13.875127792358398
    7. ')n' → logprob: -14.750127792358398
    8. 'None' → logprob: -14.875127792358398
    9. ' ' → logprob: -15.250127792358398
    10. 'len' → logprob: -15.500127792358398

Token 526: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5258421301841736
    2. '):' → logprob: -0.9008421301841736
    3. ')' → logprob: -6.150842189788818
    4. '):
' → logprob: -7.900842189788818
    5. '       ' → logprob: -9.40084171295166
    6. '):

' → logprob: -9.77584171295166
    7. '-' → logprob: -11.27584171295166
    8. '   ' → logprob: -11.65084171295166
    9. ')):
' → logprob: -11.90084171295166
    10. ')):' → logprob: -11.90084171295166

Token 527: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0433151051402092
    2. ':' → logprob: -3.7933151721954346
    3. ':
' → logprob: -4.5433149337768555
    4. '                               ' → logprob: -6.0433149337768555
    5. ' and' → logprob: -6.6683149337768555
    6. '                       ' → logprob: -6.6683149337768555
    7. '           ' → logprob: -6.7933149337768555
    8. '                   ' → logprob: -7.4183149337768555
    9. '):
' → logprob: -7.6683149337768555
    10. '                           ' → logprob: -8.043314933776855

Token 528: ' X' (ID: 2127)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23367121815681458
    2. 'X' (adapté à ' X') → logprob: -2.108671188354492
    3. ' X' → logprob: -2.858671188354492
    4. '                   ' → logprob: -3.608671188354492
    5. '           ' → logprob: -6.358671188354492
    6. ' continue' → logprob: -7.983671188354492
    7. '   ' → logprob: -8.733671188354492
    8. 'continue' → logprob: -9.108671188354492
    9. '                       ' → logprob: -9.233671188354492
    10. '       ' → logprob: -9.983671188354492

Token 529: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.128163257315464e-07
    2. '[i' → logprob: -15.25
    3. ' [' → logprob: -17.375
    4. '
' → logprob: -18.125
    5. '[pos' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. '[in' → logprob: -18.75
    8. '=' → logprob: -18.875
    9. '[X' → logprob: -18.875
    10. '[start' → logprob: -19.375

Token 530: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.0015149809187278152
    2. '[' → logprob: -6.501514911651611
    3. ' spot' → logprob: -11.62651538848877
    4. 'Spot' → logprob: -13.75151538848877
    5. ']' → logprob: -14.37651538848877
    6. '```' → logprob: -14.62651538848877
    7. '
' → logprob: -14.87651538848877
    8. 'sp' → logprob: -15.50151538848877
    9. 'pos' → logprob: -15.87651538848877
    10. '][' → logprob: -16.001514434814453

Token 531: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016640445217490196
    2. ']=' → logprob: -4.266640663146973
    3. ']+=' → logprob: -6.141640663146973
    4. ' ]' → logprob: -8.766640663146973
    5. ']^' → logprob: -10.266640663146973
    6. '[' → logprob: -10.516640663146973
    7. '[i' → logprob: -10.516640663146973
    8. '^' → logprob: -11.266640663146973
    9. '|' → logprob: -11.266640663146973
    10. '=' → logprob: -11.766640663146973

Token 532: ' +=' (ID: 2757)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11165393888950348
    2. ' ^=' → logprob: -3.236654043197632
    3. ' =' → logprob: -3.361654043197632
    4. '^' → logprob: -3.986654043197632
    5. '|' → logprob: -5.111653804779053
    6. '+=' → logprob: -5.236653804779053
    7. ' |=' → logprob: -6.486653804779053
    8. ' +=' → logprob: -9.736654281616211
    9. '[i' → logprob: -9.861654281616211
    10. '[' → logprob: -10.236654281616211

Token 533: ' (' (ID: 350)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.056949909776449203
    2. '(' → logprob: -2.9319498538970947
    3. '0' → logprob: -6.306950092315674
    4. '2' → logprob: -9.306949615478516
    5. ' ' → logprob: -9.306949615478516
    6. ' (' → logprob: -10.306949615478516
    7. '   ' → logprob: -10.806949615478516
    8. 'pow' → logprob: -13.181949615478516
    9. '[' → logprob: -13.681949615478516
    10. '
' → logprob: -14.181949615478516

Token 534: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003878934367094189
    2. ' ' → logprob: -8.625388145446777
    3. '(' → logprob: -8.875388145446777
    4. '0' → logprob: -9.625388145446777
    5. ' (' → logprob: -13.625388145446777
    6. '   ' → logprob: -14.125388145446777
    7. '2' → logprob: -15.000388145446777
    8. '[' → logprob: -16.62538719177246
    9. '           ' → logprob: -17.12538719177246
    10. ')' → logprob: -17.50038719177246

Token 535: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.38687923550605774
    2. ' <<' → logprob: -1.1368792057037354
    3. ')' → logprob: -13.011878967285156
    4. ')<<' → logprob: -13.011878967285156
    5. '<<<' → logprob: -13.636878967285156
    6. ' ' → logprob: -14.136878967285156
    7. ' <<=' → logprob: -14.636878967285156
    8. '<<(' → logprob: -15.136878967285156
    9. ' ' → logprob: -15.261878967285156
    10. '	' → logprob: -15.511878967285156

Token 536: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -7.5649528298527e-05
    2. ' i' → logprob: -9.500075340270996
    3. ')i' → logprob: -15.500075340270996
    4. '	i' → logprob: -15.750075340270996
    5. '(i' → logprob: -16.250076293945312
    6. ')' → logprob: -16.625076293945312
    7. '_i' → logprob: -17.000076293945312
    8. '   ' → logprob: -17.250076293945312
    9. '[i' → logprob: -17.375076293945312
    10. ' ' → logprob: -17.500076293945312

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006785589735955
    2. ')
' → logprob: -5.0067853927612305
    3. ' )' → logprob: -10.50678539276123
    4. '       ' → logprob: -10.63178539276123
    5. ')return' → logprob: -12.25678539276123
    6. '           ' → logprob: -12.38178539276123
    7. ')#' → logprob: -13.00678539276123
    8. '<|end|>' → logprob: -13.38178539276123
    9. '               ' → logprob: -13.50678539276123
    10. ')
' → logprob: -14.13178539276123

Token 538: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9088231921195984
    2. '       ' → logprob: -1.1588232517242432
    3. '<|end|>' → logprob: -1.7838232517242432
    4. 'else' → logprob: -3.408823251724243
    5. 'return' → logprob: -3.908823251724243
    6. ' else' → logprob: -4.283823013305664
    7. '   ' → logprob: -5.033823013305664
    8. '        ' → logprob: -5.033823013305664
    9. '               ' → logprob: -5.408823013305664
    10. '[' → logprob: -5.908823013305664

Token 539: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.5384045839309692
    2. ' else' → logprob: -1.7884045839309692
    3. '       ' → logprob: -2.0384044647216797
    4. '           ' → logprob: -2.1634044647216797
    5. 'elif' (adapté à ' elif') → logprob: -6.41340446472168
    6. '        ' → logprob: -6.91340446472168
    7. '         ' → logprob: -7.03840446472168
    8. '          ' → logprob: -9.28840446472168
    9. '   ' → logprob: -9.53840446472168
    10. ' elif' → logprob: -9.66340446472168

Token 540: ' lhs' (ID: 51302)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.8701931238174438
    2. ' bh' → logprob: -1.2451931238174438
    3. 'bh' → logprob: -2.1201930046081543
    4. ' X' → logprob: -2.2451930046081543
    5. 'ah' → logprob: -4.370193004608154
    6. ' lhs' → logprob: -4.370193004608154
    7. 'lhs' → logprob: -4.870193004608154
    8. ' not' → logprob: -5.120193004608154
    9. 'False' → logprob: -5.245193004608154
    10. 'rhs' → logprob: -5.745193004608154

Token 541: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5835556983947754
    2. '==' → logprob: -1.3335556983947754
    3. ' !=' → logprob: -1.8335556983947754
    4. '!=' → logprob: -4.333555698394775
    5. ' is' → logprob: -6.958555698394775
    6. '[' → logprob: -6.958555698394775
    7. '+' → logprob: -7.333555698394775
    8. ' .' → logprob: -7.833555698394775
    9. 'is' → logprob: -7.958555698394775
    10. 'else' → logprob: -8.458555221557617

Token 542: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.002901758998632431
    2. ' bh' → logprob: -6.002901554107666
    3. ' ' → logprob: -8.752902030944824
    4. 'ah' → logprob: -9.002902030944824
    5. '   ' → logprob: -9.752902030944824
    6. '  ' → logprob: -10.377902030944824
    7. 'cb' → logprob: -10.752902030944824
    8. 'bah' → logprob: -12.252902030944824
    9. '    ' → logprob: -12.690402030944824
    10. '     ' → logprob: -12.815402030944824

Token 543: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0023906370624899864
    2. '.spin' → logprob: -6.6273908615112305
    3. '[' → logprob: -7.7523908615112305
    4. '.i' → logprob: -7.8773908615112305
    5. 'spin' → logprob: -8.75239086151123
    6. 'i' → logprob: -9.75239086151123
    7. '(i' → logprob: -11.50239086151123
    8. '{i' → logprob: -11.87739086151123
    9. ',i' → logprob: -12.00239086151123
    10. '```' → logprob: -12.62739086151123

Token 544: '].' (ID: 1651)
  Prédit: '.spin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.spin' → logprob: -8.351697033504024e-05
    2. ' .' → logprob: -9.875083923339844
    3. '.' → logprob: -11.375083923339844
    4. '].' → logprob: -11.750083923339844
    5. '.sp' → logprob: -11.875083923339844
    6. ').' → logprob: -12.500083923339844
    7. '	spin' → logprob: -14.500083923339844
    8. '   ' → logprob: -14.625083923339844
    9. '.spi' → logprob: -15.875083923339844
    10. '}.' → logprob: -15.875083923339844

Token 545: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -0.00016599490481894463
    2. '.spin' → logprob: -8.750165939331055
    3. ' spin' → logprob: -12.125165939331055
    4. '	spin' → logprob: -14.125165939331055
    5. '_spin' → logprob: -14.875165939331055
    6. '```' → logprob: -15.250165939331055
    7. '
' → logprob: -15.500165939331055
    8. 'n' → logprob: -15.750165939331055
    9. 'sp' → logprob: -15.750165939331055
    10. ' ' → logprob: -16.500165939331055

Token 546: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008172504603862762
    2. '(n' → logprob: -7.25081729888916
    3. '0' → logprob: -9.25081729888916
    4. ' (' → logprob: -12.62581729888916
    5. '((' → logprob: -13.50081729888916
    6. '(sp' → logprob: -13.62581729888916
    7. ' ' → logprob: -14.12581729888916
    8. '(i' → logprob: -14.25081729888916
    9. '   ' → logprob: -14.37581729888916
    10. '(
' → logprob: -14.37581729888916

Token 547: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0331035852432251
    2. 'spot' → logprob: -3.5331034660339355
    3. 'n' → logprob: -5.9081034660339355
    4. '(' → logprob: -8.408103942871094
    5. ' ' → logprob: -9.408103942871094
    6. '
' → logprob: -9.783103942871094
    7. '(n' → logprob: -9.908103942871094
    8. ' spot' → logprob: -10.283103942871094
    9. '   ' → logprob: -10.470603942871094
    10. ' n' → logprob: -10.783103942871094

Token 548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014202766120433807
    2. ',n' → logprob: -4.26420259475708
    3. ' ,' → logprob: -10.639203071594238
    4. 'n' → logprob: -11.514203071594238
    5. ',
' → logprob: -12.889203071594238
    6. '   ' → logprob: -15.014203071594238
    7. ',next' → logprob: -15.139203071594238
    8. ',p' → logprob: -15.264203071594238
    9. ',b' → logprob: -15.764203071594238
    10. ' ' → logprob: -15.889203071594238

Token 549: ' n' (ID: 297)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.058746546506881714
    2. 'n' → logprob: -3.058746576309204
    3. ' spot' → logprob: -4.808746337890625
    4. ' n' → logprob: -6.433746337890625
    5. '   ' → logprob: -8.308746337890625
    6. '       ' → logprob: -11.308746337890625
    7. ' ' → logprob: -11.433746337890625
    8. '  ' → logprob: -11.683746337890625
    9. '    ' → logprob: -11.808746337890625
    10. 'sp' → logprob: -11.808746337890625

Token 550: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0003171121352352202
    2. ' -' → logprob: -8.250317573547363
    3. ')' → logprob: -9.875317573547363
    4. '       ' → logprob: -13.625317573547363
    5. '   ' → logprob: -14.000317573547363
    6. ')-' → logprob: -14.250317573547363
    7. '):
' → logprob: -14.500317573547363
    8. '           ' → logprob: -14.750317573547363
    9. '-sp' → logprob: -15.625317573547363
    10. '):' → logprob: -15.750317573547363

Token 551: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -1.8550976164988242e-05
    2. ' spot' → logprob: -11.125018119812012
    3. ')' → logprob: -13.000018119812012
    4. '   ' → logprob: -15.500018119812012
    5. 'stop' → logprob: -15.625018119812012
    6. 'Spot' → logprob: -15.625018119812012
    7. 'n' → logprob: -15.875018119812012
    8. '```' → logprob: -16.250019073486328
    9. 'pot' → logprob: -16.375019073486328
    10. '...' → logprob: -16.750019073486328

Token 552: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010349531657993793
    2. '):
' → logprob: -7.751034736633301
    3. '):' → logprob: -8.1260347366333
    4. '           ' → logprob: -8.6260347366333
    5. ' )' → logprob: -9.3760347366333
    6. '               ' → logprob: -11.3760347366333
    7. '       ' → logprob: -11.3760347366333
    8. '):

' → logprob: -12.5010347366333
    9. '          ' → logprob: -13.1260347366333
    10. '   ' → logprob: -13.2510347366333

Token 553: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09037934243679047
    2. '           ' → logprob: -3.465379238128662
    3. '               ' → logprob: -3.590379238128662
    4. ':' → logprob: -4.465379238128662
    5. 'and' → logprob: -5.090379238128662
    6. ' or' → logprob: -5.090379238128662
    7. ':
' → logprob: -6.340379238128662
    8. ')' → logprob: -7.965379238128662
    9. '            ' → logprob: -8.09037971496582
    10. '              ' → logprob: -8.09037971496582

Token 554: ' rhs' (ID: 29564)
  Prédit: 'rhs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rhs' → logprob: -0.31362879276275635
    2. ' rhs' → logprob: -1.3136287927627563
    3. 'X' → logprob: -8.688629150390625
    4. '(rhs' → logprob: -9.188629150390625
    5. '   ' → logprob: -11.188629150390625
    6. ' X' → logprob: -11.563629150390625
    7. '      ' → logprob: -11.688629150390625
    8. '     ' → logprob: -12.063629150390625
    9. '       ' → logprob: -12.063629150390625
    10. 'lhs' → logprob: -12.063629150390625

Token 555: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029776068404316902
    2. '==' → logprob: -3.529776096343994
    3. '[' → logprob: -11.154775619506836
    4. ' ==
' → logprob: -13.154775619506836
    5. ' ' → logprob: -13.279775619506836
    6. ')==' → logprob: -13.404775619506836
    7. ' ' → logprob: -13.529775619506836
    8. '[i' → logprob: -13.654775619506836
    9. ']==' → logprob: -14.279775619506836
    10. ')' → logprob: -14.279775619506836

Token 556: ' bh' (ID: 11387)
  Prédit: 'bh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bh' → logprob: -0.021182609722018242
    2. ' bh' → logprob: -3.8961825370788574
    3. 'ah' → logprob: -7.521182537078857
    4. ' ah' → logprob: -10.396183013916016
    5. ' ' → logprob: -10.896183013916016
    6. '__' → logprob: -11.771183013916016
    7. '  ' → logprob: -11.896183013916016
    8. '   ' → logprob: -12.146183013916016
    9. ' ' → logprob: -12.396183013916016
    10. '_b' → logprob: -13.208683013916016

Token 557: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.082895273109898e-05
    2. '[' → logprob: -11.000030517578125
    3. '```' → logprob: -11.875030517578125
    4. '(i' → logprob: -12.500030517578125
    5. 'i' → logprob: -13.250030517578125
    6. '[n' → logprob: -13.875030517578125
    7. '_i' → logprob: -14.875030517578125
    8. '   ' → logprob: -16.250030517578125
    9. '[I' → logprob: -17.000030517578125
    10. '[(' → logprob: -17.750030517578125

Token 558: '].' (ID: 1651)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.1994122862815857
    2. '.spin' → logprob: -2.3244123458862305
    3. '.i' → logprob: -2.6994123458862305
    4. ' .' → logprob: -5.5744123458862305
    5. ').' → logprob: -5.5744123458862305
    6. '.' → logprob: -6.0744123458862305
    7. '].' → logprob: -6.1994123458862305
    8. '[' → logprob: -7.1994123458862305
    9. 'i' → logprob: -7.1994123458862305
    10. '.sp' → logprob: -7.4494123458862305

Token 559: 'spin' (ID: 80288)
  Prédit: 'spin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spin' → logprob: -4.961759259458631e-06
    2. ' spin' → logprob: -12.875004768371582
    3. 'n' → logprob: -13.875004768371582
    4. '(n' → logprob: -14.250004768371582
    5. '	spin' → logprob: -14.750004768371582
    6. '.spin' → logprob: -15.375004768371582
    7. '
' → logprob: -16.0000057220459
    8. 'sp' → logprob: -17.5000057220459
    9. '
' → logprob: -17.6250057220459
    10. 'pin' → logprob: -17.7500057220459

Token 560: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00023488728038500994
    2. '(' → logprob: -8.375234603881836
    3. 'n' → logprob: -12.500234603881836
    4. 'spot' → logprob: -14.875234603881836
    5. ' (' → logprob: -16.250234603881836
    6. '   ' → logprob: -16.500234603881836
    7. ',' → logprob: -17.750234603881836
    8. '(
' → logprob: -18.000234603881836
    9. '((' → logprob: -18.125234603881836
    10. '[n' → logprob: -18.375234603881836

Token 561: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -3.128163257315464e-07
    2. ' -' → logprob: -15.25
    3. '-stop' → logprob: -18.625
    4. '-sp' → logprob: -20.125
    5. '   ' → logprob: -20.25
    6. '-part' → logprob: -20.875
    7. '-n' → logprob: -21.0
    8. '-not' → logprob: -21.125
    9. '```' → logprob: -21.375
    10. '-s' → logprob: -21.375

Token 562: 'spot' (ID: 22607)
  Prédit: 'spot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -8.061054359131958e-06
    2. ' spot' → logprob: -11.750007629394531
    3. 'shot' → logprob: -17.62500762939453
    4. 'spo' → logprob: -17.75000762939453
    5. 'Spot' → logprob: -17.75000762939453
    6. 'stop' → logprob: -18.12500762939453
    7. 'slot' → logprob: -18.37500762939453
    8. '   ' → logprob: -18.62500762939453
    9. 'pot' → logprob: -18.62500762939453
    10. ' ' → logprob: -18.75000762939453

Token 563: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007534049218520522
    2. ',n' → logprob: -7.375753402709961
    3. ' ,' → logprob: -9.000753402709961
    4. ',
' → logprob: -13.125753402709961
    5. 'n' → logprob: -13.875753402709961
    6. '```' → logprob: -15.375753402709961
    7. '   ' → logprob: -16.62575340270996
    8. '
' → logprob: -17.00075340270996
    9. '(),' → logprob: -17.25075340270996
    10. '‌,' → logprob: -17.25075340270996

Token 564: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0009345670696347952
    2. ' n' → logprob: -7.125934600830078
    3. 'spot' → logprob: -9.000934600830078
    4. '	n' → logprob: -13.375934600830078
    5. '0' → logprob: -13.500934600830078
    6. '   ' → logprob: -14.500934600830078
    7. ' spot' → logprob: -14.500934600830078
    8. '_n' → logprob: -14.625934600830078
    9. '(n' → logprob: -14.750934600830078
    10. '```' → logprob: -15.250934600830078

Token 565: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3491232991218567
    2. '):' → logprob: -1.224123239517212
    3. ')' → logprob: -7.849123477935791
    4. '):
' → logprob: -9.224123001098633
    5. '           ' → logprob: -9.724123001098633
    6. '):

' → logprob: -10.099123001098633
    7. '       ' → logprob: -10.349123001098633
    8. '          ' → logprob: -11.099123001098633
    9. '               ' → logprob: -11.349123001098633
    10. ' ):
' → logprob: -11.724123001098633

Token 566: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014712990960106254
    2. ' continue' → logprob: -7.126471519470215
    3. 'continue' → logprob: -8.126471519470215
    4. 'X' → logprob: -8.751471519470215
    5. '           ' → logprob: -9.751471519470215
    6. ' X' → logprob: -10.626471519470215
    7. ':' → logprob: -10.626471519470215
    8. '[' → logprob: -11.251471519470215
    9. '                
' → logprob: -11.251471519470215
    10. 'None' → logprob: -11.251471519470215

Token 567: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.26116713881492615
    2. 'continue' → logprob: -1.7611671686172485
    3. 'X' → logprob: -3.136167049407959
    4. '               ' → logprob: -4.636167049407959
    5. 'None' → logprob: -5.886167049407959
    6. '                   ' → logprob: -6.761167049407959
    7. '           ' → logprob: -8.136167526245117
    8. ' pass' → logprob: -8.136167526245117
    9. ' continue' → logprob: -8.386167526245117
    10. '   ' → logprob: -9.636167526245117

Token 568: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025080014020204544
    2. 'else' → logprob: -6.002508163452148
    3. ' else' → logprob: -10.377508163452148
    4. '               ' → logprob: -14.627508163452148
    5. '		' → logprob: -14.877508163452148
    6. '```' → logprob: -15.127508163452148
    7. '                   ' → logprob: -17.25250816345215
    8. '       ' → logprob: -17.50250816345215
    9. '          ' → logprob: -17.62750816345215
    10. '	else' → logprob: -17.87750816345215

Token 569: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05124706029891968
    2. 'else' → logprob: -3.4262471199035645
    3. ' else' → logprob: -4.0512471199035645
    4. '[' → logprob: -11.176246643066406
    5. '               ' → logprob: -11.676246643066406
    6. '       ' → logprob: -11.801246643066406
    7. '          ' → logprob: -12.676246643066406
    8. '<|end|>' → logprob: -12.801246643066406
    9. '	else' → logprob: -13.426246643066406
    10. '		' → logprob: -13.426246643066406

Token 570: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038789328187704086
    2. 'else' (adapté à ' else') → logprob: -3.4137892723083496
    3. ' else' → logprob: -5.28878927230835
    4. '       ' → logprob: -9.538789749145508
    5. '               ' → logprob: -12.163789749145508
    6. '          ' → logprob: -13.163789749145508
    7. '   ' → logprob: -14.038789749145508
    8. '		' → logprob: -14.413789749145508
    9. '	else' → logprob: -14.413789749145508
    10. 'elif' → logprob: -15.038789749145508

Token 571: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0010459087789058685
    2. ' return' → logprob: -7.1260457038879395
    3. '                   ' → logprob: -9.876046180725098
    4. '           ' → logprob: -10.001046180725098
    5. ' raise' → logprob: -10.001046180725098
    6. 'return' → logprob: -10.126046180725098
    7. '                
' → logprob: -11.251046180725098
    8. '                       ' → logprob: -11.251046180725098
    9. '                ' → logprob: -11.876046180725098
    10. '   ' → logprob: -12.001046180725098

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019853383128065616
    2. ' return' → logprob: -9.625198364257812
    3. ' X' → logprob: -10.000198364257812
    4. 'X' → logprob: -10.500198364257812
    5. '                   ' → logprob: -10.625198364257812
    6. ' raise' → logprob: -11.500198364257812
    7. 'return' → logprob: -11.500198364257812
    8. '           ' → logprob: -12.500198364257812
    9. '   ' → logprob: -12.500198364257812
    10. 'raise' → logprob: -13.000198364257812

Token 573: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.019479498267173767
    2. '               ' → logprob: -4.019479274749756
    3. ' X' → logprob: -7.269479274749756
    4. '                   ' → logprob: -8.144479751586914
    5. '           ' → logprob: -8.269479751586914
    6. '   ' → logprob: -9.519479751586914
    7. 'for' → logprob: -12.644479751586914
    8. '       ' → logprob: -13.019479751586914
    9. '                ' → logprob: -13.394479751586914
    10. ' ' → logprob: -13.644479751586914

Token 574: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2948405128554441e-05
    2. '=' → logprob: -11.75001335144043
    3. ' =' → logprob: -13.25001335144043
    4. 'None' → logprob: -14.00001335144043
    5. '
' → logprob: -14.25001335144043
    6. '```' → logprob: -14.75001335144043
    7. '=None' → logprob: -15.37501335144043
    8. '   ' → logprob: -15.50001335144043
    9. ' [' → logprob: -16.00001335144043
    10. '=[' → logprob: -16.12501335144043

Token 575: 'spot' (ID: 22607)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007656915578991175
    2. 'spot' → logprob: -4.882657051086426
    3. 'None' → logprob: -10.257657051086426
    4. '```' → logprob: -12.507657051086426
    5. '=' → logprob: -12.757657051086426
    6. '
' → logprob: -12.882657051086426
    7. 'X' → logprob: -13.132657051086426
    8. '[
' → logprob: -13.507657051086426
    9. 'sp' → logprob: -14.257657051086426
    10. '[pos' → logprob: -14.757657051086426

Token 576: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.005852460861206
    2. ' =' → logprob: -1.005852460861206
    3. '[' → logprob: -1.755852460861206
    4. '=' → logprob: -2.380852460861206
    5. ']=' → logprob: -5.880852699279785
    6. '=None' → logprob: -8.005852699279785
    7. ' is' → logprob: -10.505852699279785
    8. ')' → logprob: -10.880852699279785
    9. ' ' → logprob: -11.005852699279785
    10. '<|end|>' → logprob: -11.255852699279785

Token 577: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0263079684227705
    2. ' =' → logprob: -3.651308059692383
    3. '[' → logprob: -12.526308059692383
    4. '=None' → logprob: -13.026308059692383
    5. ']' → logprob: -13.776308059692383
    6. ']=' → logprob: -14.901308059692383
    7. '   ' → logprob: -16.151308059692383
    8. '           ' → logprob: -16.401308059692383
    9. '       ' → logprob: -16.651308059692383
    10. '        ' → logprob: -16.901308059692383

Token 578: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0006279678200371563
    2. ' None' → logprob: -7.3756279945373535
    3. '_None' → logprob: -14.250627517700195
    4. '=None' → logprob: -14.625627517700195
    5. '(None' → logprob: -16.250627517700195
    6. '   ' → logprob: -16.375627517700195
    7. ',None' → logprob: -16.625627517700195
    8. 'none' → logprob: -17.000627517700195
    9. '_none' → logprob: -17.625627517700195
    10. '0' → logprob: -18.000627517700195

Token 579: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 580: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 581: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.040682993829250336
    2. 'return' (adapté à ' return') → logprob: -3.5406830310821533
    3. '<|end|>' → logprob: -4.915682792663574
    4. ' return' → logprob: -6.165682792663574
    5. '	return' → logprob: -6.915682792663574
    6. 'for' → logprob: -9.540682792663574
    7. '       ' → logprob: -9.540682792663574
    8. ')' → logprob: -10.040682792663574
    9. '.' → logprob: -10.540682792663574
    10. ' ' → logprob: -10.790682792663574

Token 582: ' ['' (ID: 5140)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.0008726324886083603
    2. ' X' → logprob: -7.500872611999512
    3. '[' → logprob: -8.500872611999512
    4. '[X' → logprob: -9.625872611999512
    5. ' [' → logprob: -10.000872611999512
    6. '[n' → logprob: -13.375872611999512
    7. '[
' → logprob: -13.625872611999512
    8. ' ' → logprob: -14.875872611999512
    9. 'list' → logprob: -15.000872611999512
    10. '[x' → logprob: -15.375872611999512

Token 583: '{}' (ID: 12083)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.023739902302622795
    2. ''' → logprob: -5.398739814758301
    3. 'x' → logprob: -5.398739814758301
    4. '(str' → logprob: -5.398739814758301
    5. ' str' → logprob: -5.648739814758301
    6. '"' → logprob: -6.523739814758301
    7. '-' → logprob: -6.523739814758301
    8. 'None' → logprob: -7.023739814758301
    9. ''-' → logprob: -7.273739814758301
    10. '0' → logprob: -7.398739814758301

Token 584: ' {}'.' (ID: 62777)
  Prédit: '{}'.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}'.' → logprob: -0.41820794343948364
    2. '.format' → logprob: -1.5432078838348389
    3. ''.' → logprob: -2.543207883834839
    4. 'format' → logprob: -3.918207883834839
    5. '}'.' → logprob: -4.293208122253418
    6. '(x' → logprob: -4.918208122253418
    7. '({' → logprob: -6.418208122253418
    8. '.' → logprob: -6.418208122253418
    9. '}' → logprob: -7.293208122253418
    10. ''' → logprob: -7.793208122253418

Token 585: 'format' (ID: 4078)
  Prédit: 'format'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.00803006999194622
    2. '.format' → logprob: -5.508029937744141
    3. '(x' → logprob: -6.383029937744141
    4. 'x' → logprob: -6.633029937744141
    5. 'X' → logprob: -7.883029937744141
    6. '(format' → logprob: -8.25802993774414
    7. '(i' → logprob: -9.50802993774414
    8. '(a' → logprob: -9.63302993774414
    9. 'f' → logprob: -10.13302993774414
    10. '(X' → logprob: -10.38302993774414

Token 586: '(ix' (ID: 183917)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(x' → logprob: -1.1743576526641846
    2. '(X' → logprob: -1.1743576526641846
    3. '(i' → logprob: -1.5493576526641846
    4. '(a' → logprob: -2.6743576526641846
    5. '(' → logprob: -3.1743576526641846
    6. '(*' → logprob: -3.4243576526641846
    7. '(n' → logprob: -4.4243574142456055
    8. '(_' → logprob: -5.4243574142456055
    9. 'a' → logprob: -6.2993574142456055
    10. '(_,' → logprob: -6.4243574142456055

Token 587: ',x' (ID: 29748)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4187889099121094
    2. ',' → logprob: -1.1687889099121094
    3. 'X' → logprob: -4.293788909912109
    4. ',X' → logprob: -4.918788909912109
    5. '(X' → logprob: -5.043788909912109
    6. ' +' → logprob: -6.418788909912109
    7. '[X' → logprob: -7.168788909912109
    8. ',x' → logprob: -7.918788909912109
    9. 'x' → logprob: -8.41878890991211
    10. '+x' → logprob: -8.66878890991211

Token 588: 'v' (ID: 85)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.6532716155052185
    2. '[' → logprob: -1.0282716751098633
    3. 'ix' → logprob: -3.0282716751098633
    4. ',' → logprob: -3.7782716751098633
    5. '+' → logprob: -3.7782716751098633
    6. 'for' → logprob: -4.153271675109863
    7. ' for' → logprob: -4.903271675109863
    8. '(ix' → logprob: -5.903271675109863
    9. 'x' → logprob: -7.028271675109863
    10. ')' → logprob: -7.278271675109863

Token 589: ')' (ID: 8)
  Prédit: '[ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[ix' → logprob: -0.16373902559280396
    2. '[' → logprob: -2.288738965988159
    3. 'ix' → logprob: -3.288738965988159
    4. ',' → logprob: -5.038739204406738
    5. '(ix' → logprob: -5.913739204406738
    6. '+' → logprob: -6.538739204406738
    7. ')' → logprob: -7.038739204406738
    8. 'x' → logprob: -8.038739204406738
    9. 'for' → logprob: -8.538739204406738
    10. '_ix' → logprob: -9.413739204406738

Token 590: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5789336562156677
    2. ' for' → logprob: -0.8289336562156677
    3. '(ix' → logprob: -7.0789337158203125
    4. '   ' → logprob: -7.5789337158203125
    5. '(' → logprob: -7.8289337158203125
    6. '[ix' → logprob: -7.8289337158203125
    7. '       ' → logprob: -7.9539337158203125
    8. '(x' → logprob: -8.953933715820312
    9. '           ' → logprob: -9.203933715820312
    10. '(i' → logprob: -9.703933715820312

Token 591: ' ix' (ID: 44402)
  Prédit: 'ix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ix' → logprob: -0.07889837771654129
    2. ' ix' → logprob: -2.5788984298706055
    3. '(ix' → logprob: -12.203898429870605
    4. '_ix' → logprob: -12.828898429870605
    5. '[ix' → logprob: -14.703898429870605
    6. 'idx' → logprob: -16.07889747619629
    7. 'inx' → logprob: -16.70389747619629
    8. ' ' → logprob: -17.07889747619629
    9. 'x' → logprob: -17.20389747619629
    10. ' in' → logprob: -17.32889747619629

Token 592: ',x' (ID: 29748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4882862865924835
    2. ' in' → logprob: -1.3632862567901611
    3. ',x' → logprob: -2.113286256790161
    4. 'in' → logprob: -4.73828649520874
    5. ' ,' → logprob: -8.363286018371582
    6. 'x' → logprob: -8.488286018371582
    7. ',v' → logprob: -8.613286018371582
    8. 'ix' → logprob: -9.363286018371582
    9. ',n' → logprob: -9.488286018371582
    10. ',value' → logprob: -10.613286018371582

Token 593: 'v' (ID: 85)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.058215171098709106
    2. ',' → logprob: -3.1832151412963867
    3. 'in' → logprob: -4.683215141296387
    4. ',x' → logprob: -5.808215141296387
    5. 'v' → logprob: -6.558215141296387
    6. ',v' → logprob: -7.058215141296387
    7. ',_' → logprob: -8.433215141296387
    8. 'x' → logprob: -8.933215141296387
    9. ',in' → logprob: -9.933215141296387
    10. ',(' → logprob: -10.558215141296387

Token 594: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12737330794334412
    2. 'in' → logprob: -2.127373218536377
    3. ',' → logprob: -7.752373218536377
    4. ',in' → logprob: -12.502373695373535
    5. ',n' → logprob: -13.127373695373535
    6. 'inx' → logprob: -13.252373695373535
    7. ' ,' → logprob: -13.502373695373535
    8. ',_' → logprob: -13.752373695373535
    9. ',x' → logprob: -14.127373695373535
    10. 'enumer' → logprob: -14.252373695373535

Token 595: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0009120595059357584
    2. ' enumerate' → logprob: -7.000912189483643
    3. '
' → logprob: -14.750911712646484
    4. 'en' → logprob: -16.000911712646484
    5. 'zip' → logprob: -16.125911712646484
    6. 'range' → logprob: -17.500911712646484
    7. '```' → logprob: -17.625911712646484
    8. 'enum' → logprob: -18.625911712646484
    9. '

' → logprob: -18.875911712646484
    10. '_' → logprob: -19.750911712646484

Token 596: '(X' (ID: 17061)
  Prédit: '(X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(X' → logprob: -0.20198343694210052
    2. 'X' → logprob: -1.7019834518432617
    3. '(n' → logprob: -8.576983451843262
    4. '(range' → logprob: -8.701983451843262
    5. '(' → logprob: -8.951983451843262
    6. ' X' → logprob: -10.201983451843262
    7. '(zip' → logprob: -11.076983451843262
    8. '(en' → logprob: -11.201983451843262
    9. '((' → logprob: -11.701983451843262
    10. '(_' → logprob: -13.076983451843262

Token 597: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00196836213581264
    2. ',' → logprob: -6.6269683837890625
    3. ')' → logprob: -7.8769683837890625
    4. ']' → logprob: -8.376968383789062
    5. ' if' → logprob: -12.376968383789062
    6. ' )' → logprob: -12.376968383789062
    7. '}]' → logprob: -12.376968383789062
    8. ')])' → logprob: -12.501968383789062
    9. '')]' → logprob: -12.751968383789062
    10. ' ]' → logprob: -13.001968383789062

Token 598: ' if' (ID: 538)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022730084601789713
    2. ')]' → logprob: -6.252273082733154
    3. ' ]' → logprob: -8.502272605895996
    4. '()]' → logprob: -9.127272605895996
    5. ' if' → logprob: -11.752272605895996
    6. '}]' → logprob: -12.377272605895996
    7. '+]' → logprob: -12.627272605895996
    8. 'if' → logprob: -12.752272605895996
    9. '   ' → logprob: -12.752272605895996
    10. ']}' → logprob: -13.377272605895996

Token 599: ' xv' (ID: 193000)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0036106400657445192
    2. ' xv' → logprob: -5.628610610961914
    3. 'xiv' → logprob: -12.003610610961914
    4. ' x' → logprob: -12.878610610961914
    5. '_x' → logprob: -14.378610610961914
    6. ' ' → logprob: -14.878610610961914
    7. '(x' → logprob: -15.128610610961914
    8. ' xav' → logprob: -15.378610610961914
    9. ' ' → logprob: -15.503610610961914
    10. '	x' → logprob: -16.503610610961914

Token 600: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3136221766471863
    2. 'is' → logprob: -1.313622236251831
    3. '!=' → logprob: -8.31362247467041
    4. 'not' → logprob: -10.56362247467041
    5. ' ' → logprob: -10.68862247467041
    6. '>=' → logprob: -10.81362247467041
    7. '<|end|>' → logprob: -11.56362247467041
    8. ')' → logprob: -11.81362247467041
    9. '==' → logprob: -11.93862247467041
    10. ' not' → logprob: -12.56362247467041

Token 601: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.38723212480545044
    2. ' not' → logprob: -1.1372320652008057
    3. '```' → logprob: -9.012231826782227
    4. '``' → logprob: -9.887231826782227
    5. '0' → logprob: -10.137231826782227
    6. '
' → logprob: -10.387231826782227
    7. 'None' → logprob: -10.762231826782227
    8. '!' → logprob: -11.012231826782227
    9. 'n' → logprob: -11.387231826782227
    10. ' ' → logprob: -11.887231826782227

Token 602: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00023071514442563057
    2. ' None' → logprob: -8.37523078918457
    3. '_None' → logprob: -17.50023078918457
    4. '=None' → logprob: -17.62523078918457
    5. '(None' → logprob: -17.62523078918457
    6. '0' → logprob: -18.25023078918457
    7. '
' → logprob: -18.25023078918457
    8. ' ' → logprob: -18.62523078918457
    9. 'none' → logprob: -19.00023078918457
    10. 'not' → logprob: -19.37523078918457

Token 603: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000421974720666185
    2. ' ]' → logprob: -8.000421524047852
    3. ')]' → logprob: -10.000421524047852
    4. '()]' → logprob: -10.875421524047852
    5. '   ' → logprob: -11.500421524047852
    6. '}]' → logprob: -13.000421524047852
    7. ']
' → logprob: -13.000421524047852
    8. '`]' → logprob: -13.125421524047852
    9. '']' → logprob: -13.625421524047852
    10. ']}' → logprob: -13.875421524047852

Token 604: 'main' (ID: 7731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1257934719324112
    2. '<|end|>' → logprob: -2.25079345703125
    3. '[' → logprob: -5.50079345703125
    4. ']' → logprob: -5.62579345703125
    5. '#' → logprob: -6.50079345703125
    6. '_' → logprob: -7.37579345703125
    7. '<|end|>' → logprob: -7.37579345703125
    8. '   ' → logprob: -7.62579345703125
    9. '
' → logprob: -8.12579345703125
    10. ',' → logprob: -8.25079345703125

Token 605: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.08135844767093658
    2. '_' → logprob: -3.8313584327697754
    3. '():' → logprob: -4.081358432769775
    4. '():
' → logprob: -4.456358432769775
    5. '()
' → logprob: -4.581358432769775
    6. '(' → logprob: -4.956358432769775
    7. '(_' → logprob: -5.956358432769775
    8. 'def' → logprob: -6.081358432769775
    9. '(
' → logprob: -6.206358432769775
    10. '()`' → logprob: -7.331358432769775

Token 606: ' lambda' (ID: 27871)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.32225432991981506
    2. 'lambda' → logprob: -2.1972544193267822
    3. '_lambda' → logprob: -2.3222544193267822
    4. '_sys' → logprob: -4.072254180908203
    5. 'def' → logprob: -4.322254180908203
    6. ' _' → logprob: -4.447254180908203
    7. '_S' → logprob: -5.322254180908203
    8. ' lambda' → logprob: -5.447254180908203
    9. '(lambda' → logprob: -6.197254180908203
    10. '_sol' → logprob: -6.197254180908203

Token 607: ':' (ID: 25)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6135184168815613
    2. ' lambda' → logprob: -1.863518476486206
    3. ' _' → logprob: -2.238518476486206
    4. '_s' → logprob: -2.488518476486206
    5. '_sys' → logprob: -2.863518476486206
    6. ':' → logprob: -3.988518476486206
    7. ' sys' → logprob: -4.488518238067627
    8. '(lambda' → logprob: -4.738518238067627
    9. '_lambda' → logprob: -5.363518238067627
    10. '():' → logprob: -5.488518238067627

Token 608: ' print' (ID: 2123)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.2716211080551147
    2. 'lambda' → logprob: -1.7716211080551147
    3. '_lambda' → logprob: -1.8966211080551147
    4. ' _' → logprob: -2.0216212272644043
    5. ' lambda' → logprob: -2.0216212272644043
    6. '_sys' → logprob: -3.7716212272644043
    7. ' (' → logprob: -3.7716212272644043
    8. '_i' → logprob: -4.521621227264404
    9. '```' → logprob: -4.521621227264404
    10. '\
' → logprob: -4.521621227264404

Token 609: '(*' (ID: 9000)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.16941790282726288
    2. '(_' → logprob: -2.6694178581237793
    3. '(*' → logprob: -3.5444178581237793
    4. '('' → logprob: -3.5444178581237793
    5. '(' → logprob: -4.044417858123779
    6. '("\' → logprob: -5.544417858123779
    7. '()' → logprob: -5.794417858123779
    8. '('_' → logprob: -5.919417858123779
    9. '(
' → logprob: -7.544417858123779
    10. '("' → logprob: -8.294418334960938

Token 610: '_' (ID: 62)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.004457297269254923
    2. ' _' → logprob: -6.754457473754883
    3. '_solver' → logprob: -7.129457473754883
    4. '_sol' → logprob: -7.254457473754883
    5. '(_' → logprob: -7.379457473754883
    6. '_map' → logprob: -8.004457473754883
    7. '_split' → logprob: -8.129457473754883
    8. '_replace' → logprob: -9.129457473754883
    9. '\' → logprob: -9.754457473754883
    10. '_solution' → logprob: -10.254457473754883

Token 611: 'solve' (ID: 117273)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.31372007727622986
    2. 'solve' → logprob: -1.3137201070785522
    3. '.solve' → logprob: -8.563719749450684
    4. '_solver' → logprob: -9.938719749450684
    5. 'list' → logprob: -10.313719749450684
    6. 'map' → logprob: -10.563719749450684
    7. '_map' → logprob: -11.063719749450684
    8. ' solve' → logprob: -11.063719749450684
    9. 's' → logprob: -11.313719749450684
    10. '(s' → logprob: -11.438719749450684

Token 612: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.467791348695755
    2. '(' → logprob: -1.3427913188934326
    3. '(len' → logprob: -3.2177913188934326
    4. '(n' → logprob: -3.9677913188934326
    5. '(*' → logprob: -3.9677913188934326
    6. ')' → logprob: -4.342791557312012
    7. '(_,' → logprob: -4.342791557312012
    8. '(int' → logprob: -4.967791557312012
    9. '(__' → logprob: -8.092791557312012
    10. '(*(' → logprob: -8.217791557312012

Token 613: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5194652676582336
    2. 'il' → logprob: -1.0194652080535889
    3. 'sys' → logprob: -4.144465446472168
    4. 'len' → logprob: -4.769465446472168
    5. 'int' → logprob: -5.019465446472168
    6. '_sys' → logprob: -5.519465446472168
    7. '_il' → logprob: -5.519465446472168
    8. '_i' → logprob: -6.519465446472168
    9. '_len' → logprob: -7.269465446472168
    10. 'read' → logprob: -7.644465446472168

Token 614: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0010274506639689207
    2. '()' → logprob: -7.501027584075928
    3. '(),
' → logprob: -8.37602710723877
    4. '()),' → logprob: -8.62602710723877
    5. '(),"' → logprob: -10.50102710723877
    6. '(),'' → logprob: -11.25102710723877
    7. '()
' → logprob: -11.62602710723877
    8. '(),

' → logprob: -12.25102710723877
    9. '()],' → logprob: -13.00102710723877
    10. '()},' → logprob: -13.12602710723877

Token 615: ' _' (ID: 1175)
  Prédit: '_il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_il' → logprob: -9.610702363715973e-06
    2. ' _' → logprob: -11.750009536743164
    3. '_ir' → logprob: -14.500009536743164
    4. '_Il' → logprob: -15.000009536743164
    5. '_i' → logprob: -15.375009536743164
    6. '_IL' → logprob: -16.125009536743164
    7. '_iv' → logprob: -16.250009536743164
    8. '_ie' → logprob: -16.375009536743164
    9. '   ' → logprob: -17.000009536743164
    10. '_im' → logprob: -17.125009536743164

Token 616: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -4.723352049040841e-06
    2. '_il' → logprob: -13.000004768371582
    3. 'i' → logprob: -13.750004768371582
    4. '(il' → logprob: -14.000004768371582
    5. '	il' → logprob: -15.875004768371582
    6. 'ил' → logprob: -16.250003814697266
    7. '
' → logprob: -16.750003814697266
    8. 'ilst' → logprob: -17.125003814697266
    9. '[' → logprob: -17.375003814697266
    10. '

' → logprob: -17.500003814697266

Token 617: '(),' (ID: 2547)
  Prédit: '(),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(),' → logprob: -8.208653162000701e-05
    2. '()' → logprob: -9.875082015991211
    3. ',' → logprob: -10.875082015991211
    4. '()),' → logprob: -12.250082015991211
    5. '(),
' → logprob: -13.250082015991211
    6. '()[' → logprob: -13.500082015991211
    7. '(' → logprob: -14.000082015991211
    8. ' (),' → logprob: -14.125082015991211
    9. '().' → logprob: -14.750082015991211
    10. '(),"' → logprob: -14.875082015991211

Token 618: ' _' (ID: 1175)
  Prédit: '_il'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_il' → logprob: -1.9361264946837764e-07
    2. '_Il' → logprob: -16.75
    3. '_i' → logprob: -17.125
    4. '	il' → logprob: -17.375
    5. ' _' → logprob: -18.125
    6. '<il' → logprob: -18.125
    7. '_IL' → logprob: -18.125
    8. '_li' → logprob: -18.625
    9. 'il' → logprob: -18.625
    10. ' il' → logprob: -19.125

Token 619: 'il' (ID: 311)
  Prédit: 'il'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'il' → logprob: -9.13388703338569e-06
    2. '_il' → logprob: -12.375009536743164
    3. 'i' → logprob: -13.250009536743164
    4. '(il' → logprob: -13.500009536743164
    5. ' il' → logprob: -14.875009536743164
    6. '	il' → logprob: -15.000009536743164
    7. '
' → logprob: -15.250009536743164
    8. 'ил' → logprob: -15.875009536743164
    9. ')il' → logprob: -16.375009536743164
    10. 'ol' → logprob: -16.812509536743164

Token 620: '()),' (ID: 24379)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6988091468811035
    2. '()),' → logprob: -0.6988091468811035
    3. '()' → logprob: -5.4488091468811035
    4. '()))
' → logprob: -7.1988091468811035
    5. '())' → logprob: -7.8238091468811035
    6. '))' → logprob: -9.573808670043945
    7. '(),' → logprob: -10.198808670043945
    8. '()));' → logprob: -10.323808670043945
    9. '()))

' → logprob: -10.948808670043945
    10. '),' → logprob: -11.198808670043945

Token 621: ' sep' (ID: 31529)
  Prédit: 'sep'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sep' → logprob: -0.00863123033195734
    2. ' sep' → logprob: -4.758631229400635
    3. 'se' → logprob: -12.008631706237793
    4. 'end' → logprob: -12.383631706237793
    5. 'flush' → logprob: -12.758631706237793
    6. ')' → logprob: -13.883631706237793
    7. 'separator' → logprob: -14.008631706237793
    8. ' ' → logprob: -14.133631706237793
    9. '   ' → logprob: -14.508631706237793
    10. 'file' → logprob: -15.133631706237793

Token 622: '='\' (ID: 106410)
  Prédit: ''\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''\' → logprob: -0.02558732032775879
    2. '='\' → logprob: -4.52558708190918
    3. '"\' → logprob: -4.90058708190918
    4. '('\' → logprob: -5.02558708190918
    5. ''' → logprob: -8.27558708190918
    6. '="\' → logprob: -9.40058708190918
    7. ''
' → logprob: -10.02558708190918
    8. ''''
' → logprob: -11.40058708190918
    9. '("\' → logprob: -11.52558708190918
    10. '`
' → logprob: -12.40058708190918

Token 623: 'n' (ID: 77)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17589041590690613
    2. 'n' → logprob: -1.9258904457092285
    3. ''\' → logprob: -4.1758904457092285
    4. ''' → logprob: -9.92588996887207
    5. '\' → logprob: -10.30088996887207
    6. '')' → logprob: -10.80088996887207
    7. '"\' → logprob: -10.80088996887207
    8. 'newline' → logprob: -10.92588996887207
    9. ''n' → logprob: -11.30088996887207
    10. ''
' → logprob: -12.55088996887207

Token 624: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00011677479778882116
    2. '))' → logprob: -9.125116348266602
    3. '')' → logprob: -13.000116348266602
    4. '())' → logprob: -13.125116348266602
    5. '()' → logprob: -13.625116348266602
    6. '`)' → logprob: -14.625116348266602
    7. ')`' → logprob: -14.750116348266602
    8. ')
' → logprob: -14.875116348266602
    9. '")' → logprob: -15.125116348266602
    10. ')")' → logprob: -15.375116348266602

Token 625: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0436861515045166
    2. 'main' → logprob: -3.5436861515045166
    3. '_main' → logprob: -4.2936859130859375
    4. '_' → logprob: -9.793685913085938
    5. '#' → logprob: -10.168685913085938
    6. '___' → logprob: -10.793685913085938
    7. 'for' → logprob: -11.043685913085938
    8. '__' → logprob: -11.043685913085938
    9. 'X' → logprob: -11.793685913085938
    10. ' if' → logprob: -11.918685913085938

Token 626: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.10024689882993698
    2. '__' → logprob: -2.3502469062805176
    3. 'name' → logprob: -10.85024642944336
    4. ''' → logprob: -11.47524642944336
    5. ' '__' → logprob: -12.22524642944336
    6. ' "__' → logprob: -12.97524642944336
    7. '_name' → logprob: -13.85024642944336
    8. ' ' → logprob: -13.85024642944336
    9. '___' → logprob: -14.72524642944336
    10. ' ' → logprob: -15.72524642944336

Token 627: 'name' (ID: 897)
  Prédit: 'name'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.045610006898641586
    2. '__' → logprob: -3.170609951019287
    3. ' ==' → logprob: -6.545609951019287
    4. '.name' → logprob: -8.045610427856445
    5. '==' → logprob: -8.295610427856445
    6. ' __' → logprob: -8.420610427856445
    7. ' name' → logprob: -9.795610427856445
    8. '=="' → logprob: -10.045610427856445
    9. '_name' → logprob: -10.170610427856445
    10. '_' → logprob: -10.295610427856445

Token 628: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.968312951968983e-06
    2. '==' → logprob: -12.250009536743164
    3. '__.__' → logprob: -12.625009536743164
    4. '__.' → logprob: -14.250009536743164
    5. 'name' → logprob: -14.625009536743164
    6. ' ==' → logprob: -15.250009536743164
    7. '=="' → logprob: -16.000009536743164
    8. '___' → logprob: -16.750009536743164
    9. '_' → logprob: -17.000009536743164
    10. '=='' → logprob: -17.250009536743164

Token 629: '=='' (ID: 20651)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8484357595443726
    2. ' ==' → logprob: -1.3484357595443726
    3. '==' → logprob: -1.5984357595443726
    4. '=="' → logprob: -2.223435878753662
    5. '=='' → logprob: -6.348435878753662
    6. '==
' → logprob: -10.098435401916504
    7. ' =="' → logprob: -11.598435401916504
    8. '_' → logprob: -11.723435401916504
    9. '"' → logprob: -12.473435401916504
    10. '=' → logprob: -13.473435401916504

Token 630: '__' (ID: 771)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6691545248031616
    2. '"' → logprob: -0.9191545248031616
    3. '__' → logprob: -2.419154644012451
    4. 'main' → logprob: -12.544154167175293
    5. ' "__' → logprob: -14.294154167175293
    6. '_main' → logprob: -14.419154167175293
    7. ' '__' → logprob: -15.169154167175293
    8. '___' → logprob: -15.669154167175293
    9. 'Main' → logprob: -16.16915512084961
    10. ' __' → logprob: -16.66915512084961

Token 631: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000758288602810353
    2. '__' → logprob: -7.250758171081543
    3. '"' → logprob: -10.250758171081543
    4. ''' → logprob: -11.500758171081543
    5. 'name' → logprob: -13.750758171081543
    6. '_main' → logprob: -13.750758171081543
    7. ' main' → logprob: -15.125758171081543
    8. 'built' → logprob: -15.875758171081543
    9. '-main' → logprob: -16.50075912475586
    10. 'm' → logprob: -17.50075912475586

Token 632: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.40057697892189026
    2. '__':
' → logprob: -1.1505769491195679
    3. '__:' → logprob: -4.400577068328857
    4. '__":
' → logprob: -7.150577068328857
    5. ':' → logprob: -7.650577068328857
    6. ':
' → logprob: -10.2755765914917
    7. '_' → logprob: -10.5255765914917
    8. '__
' → logprob: -11.5255765914917
    9. '():
' → logprob: -12.6505765914917
    10. '____' → logprob: -13.4005765914917

Token 633: '':' (ID: 2337)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01606346294283867
    2. ':
' → logprob: -4.141063690185547
    3. '():
' → logprob: -11.016063690185547
    4. '():' → logprob: -12.516063690185547
    5. '__:' → logprob: -13.266063690185547
    6. '__':
' → logprob: -13.641063690185547
    7. ':
' → logprob: -13.641063690185547
    8. '   ' → logprob: -13.766063690185547
    9. '):' → logprob: -14.016063690185547
    10. ':

' → logprob: -14.516063690185547

Token 634: ' main' (ID: 2758)
  Prédit: '	main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '	main' → logprob: -0.041417766362428665
    2. 'main' → logprob: -3.2914178371429443
    3. ' main' → logprob: -6.416417598724365
    4. '   ' → logprob: -6.416417598724365
    5. '_main' → logprob: -9.291418075561523
    6. '
' → logprob: -12.416418075561523
    7. '	Main' → logprob: -12.916418075561523
    8. '\t' → logprob: -13.416418075561523
    9. '   ' → logprob: -14.416418075561523
    10. ' ' → logprob: -15.666418075561523

Token 635: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 633
Tokens correctement prédits (1ère position, stricte): 303
Tokens correctement prédits (1ère position, avec adaptation): 322
Tokens correctement prédits (top 10): 534
Précision stricte (1ère position): 47.87%
Précision adaptée (1ère position): 50.87%
Précision (top 10): 84.36%
================================================================================
