================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:24
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = map(int, input().split())
print(max(A + B, A - B, A * B))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11805965006351471
    2. '+' → logprob: -2.9930596351623535
    3. '.' → logprob: -4.2430596351623535
    4. ')' → logprob: -4.2430596351623535
    5. ',' → logprob: -4.6180596351623535
    6. '[' → logprob: -5.1180596351623535
    7. ';' → logprob: -5.6180596351623535
    8. ' =' → logprob: -5.6180596351623535
    9. '(' → logprob: -5.8680596351623535
    10. ':' → logprob: -5.9930596351623535

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5059782266616821
    2. '0' → logprob: -1.7559782266616821
    3. '10' → logprob: -3.1309781074523926
    4. '[]' → logprob: -3.1309781074523926
    5. ' []' → logprob: -3.3809781074523926
    6. 'input' → logprob: -3.8809781074523926
    7. '1' → logprob: -4.130978107452393
    8. ' input' → logprob: -4.380978107452393
    9. ' [],' → logprob: -4.880978107452393
    10. ' B' → logprob: -5.380978107452393

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0032415243331342936
    2. '(lambda' → logprob: -6.253241539001465
    3. '```' → logprob: -7.128241539001465
    4. '<|end|>' → logprob: -9.003241539001465
    5. ')' → logprob: -9.128241539001465
    6. '(
' → logprob: -10.628241539001465
    7. '(user' → logprob: -10.628241539001465
    8. '(int' → logprob: -10.753241539001465
    9. '(token' → logprob: -10.878241539001465
    10. '(`' → logprob: -11.128241539001465

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.1315252184867859
    2. ')' → logprob: -2.5065252780914307
    3. '(' → logprob: -3.3815252780914307
    4. 'input' → logprob: -5.506525039672852
    5. '```' → logprob: -6.631525039672852
    6. ',' → logprob: -7.631525039672852
    7. '`)' → logprob: -8.256525039672852
    8. '`' → logprob: -8.756525039672852
    9. ',input' → logprob: -8.756525039672852
    10. '(user' → logprob: -8.881525039672852

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1428544670343399
    2. ' input' → logprob: -2.0178544521331787
    3. '(input' → logprob: -8.767854690551758
    4. ')' → logprob: -11.142854690551758
    5. ',input' → logprob: -12.892854690551758
    6. ' ' → logprob: -13.267854690551758
    7. '=input' → logprob: -13.392854690551758
    8. '	input' → logprob: -14.392854690551758
    9. '```' → logprob: -14.392854690551758
    10. '[input' → logprob: -14.517854690551758

Token 8: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0385277234017849
    2. '()' → logprob: -4.038527488708496
    3. ')' → logprob: -4.788527488708496
    4. '())' → logprob: -5.163527488708496
    5. '('' → logprob: -5.663527488708496
    6. '(()' → logprob: -7.038527488708496
    7. '("("' → logprob: -8.288527488708496
    8. '(""))' → logprob: -8.538527488708496
    9. '().' → logprob: -8.913527488708496
    10. '(
' → logprob: -8.913527488708496

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.000505730917211622
    2. 'strip' → logprob: -7.6255059242248535
    3. 'rstrip' → logprob: -11.250505447387695
    4. ' split' → logprob: -12.875505447387695
    5. 'read' → logprob: -13.625505447387695
    6. ')' → logprob: -14.500505447387695
    7. 'spl' → logprob: -15.250505447387695
    8. '(split' → logprob: -15.750505447387695
    9. 'replace' → logprob: -17.000505447387695
    10. 'startswith' → logprob: -17.250505447387695

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06084616854786873
    2. '))' → logprob: -3.1858460903167725
    3. '())' → logprob: -4.060846328735352
    4. '()' → logprob: -8.560846328735352
    5. '()))' → logprob: -9.185846328735352
    6. '`)' → logprob: -9.685846328735352
    7. '(' → logprob: -9.935846328735352
    8. ')`' → logprob: -10.935846328735352
    9. ')))' → logprob: -11.935846328735352
    10. ' )' → logprob: -12.435846328735352

Token 11: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.21293513476848602
    2. '#' → logprob: -2.212935209274292
    3. '*' → logprob: -3.087935209274292
    4. 'if' → logprob: -4.837934970855713
    5. '+
' → logprob: -4.962934970855713
    6. '
' → logprob: -6.087934970855713
    7. '\n' → logprob: -6.212934970855713
    8. 'print' → logprob: -6.462934970855713
    9. ')' → logprob: -6.587934970855713
    10. '>' → logprob: -6.587934970855713

Token 12: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006794307846575975
    2. '('' → logprob: -8.000679016113281
    3. '("("' → logprob: -8.125679016113281
    4. '((' → logprob: -11.500679016113281
    5. '(A' → logprob: -11.750679016113281
    6. '()' → logprob: -12.000679016113281
    7. '("""' → logprob: -12.500679016113281
    8. '(f' → logprob: -12.750679016113281
    9. '(`' → logprob: -13.000679016113281
    10. '(
' → logprob: -13.750679016113281

Token 13: '(A' (ID: 10706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22196167707443237
    2. '(A' → logprob: -1.8469617366790771
    3. '()' → logprob: -3.221961736679077
    4. '())' → logprob: -7.721961498260498
    5. '(B' → logprob: -7.846961498260498
    6. ')' → logprob: -8.846961975097656
    7. '((' → logprob: -8.971961975097656
    8. '(()' → logprob: -9.221961975097656
    9. '(max' → logprob: -10.346961975097656
    10. '(
' → logprob: -10.346961975097656

Token 14: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001189041300676763
    2. ' ,' → logprob: -7.376189231872559
    3. ',B' → logprob: -7.501189231872559
    4. ',b' → logprob: -12.376189231872559
    5. ',A' → logprob: -12.876189231872559
    6. ')' → logprob: -13.626189231872559
    7. ',
' → logprob: -15.126189231872559
    8. 'B' → logprob: -15.376189231872559
    9. ' ' → logprob: -15.626189231872559
    10. ',max' → logprob: -16.001188278198242

Token 15: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.4741497337818146
    2. 'B' → logprob: -0.9741497039794922
    3. ' ' → logprob: -10.724149703979492
    4. '1' → logprob: -10.849149703979492
    5. ',' → logprob: -10.974149703979492
    6. ' (' → logprob: -12.849149703979492
    7. ' ,' → logprob: -12.974149703979492
    8. '(B' → logprob: -13.099149703979492
    9. '(' → logprob: -13.599149703979492
    10. ')' → logprob: -14.099149703979492

Token 16: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.05224626883864403
    2. ')' → logprob: -3.302246332168579
    3. ',' → logprob: -4.30224609375
    4. ')))' → logprob: -8.05224609375
    5. ' ))' → logprob: -9.55224609375
    6. ' ,' → logprob: -9.67724609375
    7. '),' → logprob: -10.67724609375
    8. ' ' → logprob: -10.80224609375
    9. '))
' → logprob: -11.30224609375
    10. '(A' → logprob: -11.67724609375

Token 17: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.48035117983818054
    2. 'A' → logprob: -0.9803512096405029
    3. '0' → logprob: -5.730350971221924
    4. ' max' → logprob: -7.105350971221924
    5. ' B' → logprob: -7.480350971221924
    6. 'B' → logprob: -7.605350971221924
    7. ' ' → logprob: -7.730350971221924
    8. 'max' → logprob: -8.105351448059082
    9. 'abs' → logprob: -9.355351448059082
    10. '(A' → logprob: -9.730351448059082

Token 18: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3936183750629425
    2. '-' → logprob: -1.1436183452606201
    3. '-B' → logprob: -5.268618583679199
    4. '*' → logprob: -7.268618583679199
    5. ',' → logprob: -7.518618583679199
    6. ' *' → logprob: -8.6436185836792
    7. ')' → logprob: -9.8936185836792
    8. '+' → logprob: -10.2686185836792
    9. ' ' → logprob: -10.6436185836792
    10. ' ,' → logprob: -11.0186185836792

Token 19: ' B' (ID: 418)
  Prédit: ' B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' B' → logprob: -0.38687291741371155
    2. 'B' → logprob: -1.1368728876113892
    3. ' ' → logprob: -13.636873245239258
    4. ')' → logprob: -15.386873245239258
    5. ' ' → logprob: -16.136873245239258
    6. '<|end|>' → logprob: -16.261873245239258
    7. '	B' → logprob: -17.011873245239258
    8. ' (' → logprob: -17.011873245239258
    9. 'b' → logprob: -17.386873245239258
    10. '_B' → logprob: -17.386873245239258

Token 20: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07902484387159348
    2. ')' → logprob: -2.5790247917175293
    3. ',' → logprob: -9.829025268554688
    4. ')))' → logprob: -9.829025268554688
    5. ' ))' → logprob: -11.454025268554688
    6. '),' → logprob: -11.829025268554688
    7. '))
' → logprob: -13.329025268554688
    8. ' )' → logprob: -13.454025268554688
    9. ' ' → logprob: -13.704025268554688
    10. ''))' → logprob: -14.454025268554688

Token 21: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3902824819087982
    2. 'A' → logprob: -1.1402825117111206
    3. '0' → logprob: -5.76528263092041
    4. ' ' → logprob: -8.39028263092041
    5. 'B' → logprob: -11.39028263092041
    6. ')' → logprob: -11.51528263092041
    7. ' B' → logprob: -11.89028263092041
    8. ',' → logprob: -12.14028263092041
    9. ' ' → logprob: -13.26528263092041
    10. '(A' → logprob: -13.26528263092041

Token 22: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.732754111289978
    2. ' *' → logprob: -0.732754111289978
    3. ' -' → logprob: -3.3577542304992676
    4. '-' → logprob: -5.607754230499268
    5. ' ' → logprob: -8.98275375366211
    6. ')' → logprob: -9.10775375366211
    7. '<|end|>' → logprob: -9.98275375366211
    8. ',' → logprob: -10.85775375366211
    9. ' +' → logprob: -11.23275375366211
    10. '+' → logprob: -11.73275375366211

Token 23: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.10020849853754044
    2. ' B' → logprob: -2.3502085208892822
    3. ' ' → logprob: -13.225208282470703
    4. ')' → logprob: -17.100208282470703
    5. '<|end|>' → logprob: -17.475208282470703
    6. '_B' → logprob: -18.975208282470703
    7. '  ' → logprob: -19.600208282470703
    8. '	B' → logprob: -19.600208282470703
    9. ' ' → logprob: -19.975208282470703
    10. '(' → logprob: -20.600208282470703

Token 24: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02325211651623249
    2. ')' → logprob: -3.773252010345459
    3. ')))' → logprob: -12.148252487182617
    4. ' ))' → logprob: -14.398252487182617
    5. '))
' → logprob: -15.523252487182617
    6. '),' → logprob: -16.023252487182617
    7. ''))' → logprob: -16.523252487182617
    8. '()))' → logprob: -16.648252487182617
    9. '```' → logprob: -16.773252487182617
    10. ' )' → logprob: -16.898252487182617


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 22
Tokens correctement prédits (1ère position, stricte): 7
Tokens correctement prédits (1ère position, avec adaptation): 7
Tokens correctement prédits (top 10): 18
Précision stricte (1ère position): 31.82%
Précision adaptée (1ère position): 31.82%
Précision (top 10): 81.82%
================================================================================
