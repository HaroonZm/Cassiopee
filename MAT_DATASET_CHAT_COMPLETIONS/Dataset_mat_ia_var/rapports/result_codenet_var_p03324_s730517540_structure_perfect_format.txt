================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def solve(a, b):
    if a == 0 and b <= 99:
        return b
    elif a == 1 and b <= 99:
        return 100 * b
    elif a == 2 and b <= 99:
        return 10000 * b
    elif a == 0:
        return 101
    elif a == 1:
        return 10100
    else:
        return 1010000

def readQuestion():
    line = sys.stdin.readline().rstrip()
    str_a, str_b = line.split(' ')
    return int(str_a), int(str_b)

def main():
    a, b = readQuestion()
    answer = solve(a, b)
    print(answer)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' solve' (ID: 17722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02042287401854992
    2. ' ' → logprob: -5.39542293548584
    3. '  ' → logprob: -6.39542293548584
    4. '<|end|>' → logprob: -6.39542293548584
    5. ' process' → logprob: -6.52042293548584
    6. ' space' → logprob: -6.64542293548584
    7. ' sys' → logprob: -6.89542293548584
    8. ' main' → logprob: -6.89542293548584
    9. ' a' → logprob: -7.02042293548584
    10. ')' → logprob: -7.27042293548584

Token 5: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004436055198311806
    2. ':' → logprob: -6.754436016082764
    3. '():' → logprob: -6.879436016082764
    4. '_' → logprob: -7.129436016082764
    5. '(:' → logprob: -7.504436016082764
    6. '```' → logprob: -8.379436492919922
    7. '):' → logprob: -8.754436492919922
    8. '(
' → logprob: -9.129436492919922
    9. '(":' → logprob: -9.879436492919922
    10. ' (' → logprob: -9.879436492919922

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21294830739498138
    2. ',' → logprob: -1.7129483222961426
    3. ')' → logprob: -4.712948322296143
    4. '[' → logprob: -6.962948322296143
    5. ',b' → logprob: -7.837948322296143
    6. ':' → logprob: -7.962948322296143
    7. 's' → logprob: -8.462947845458984
    8. '):
' → logprob: -9.337947845458984
    9. '[]):' → logprob: -9.462947845458984
    10. ',a' → logprob: -9.587947845458984

Token 7: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.016140645369887352
    2. 'b' → logprob: -4.141140460968018
    3. ' ' → logprob: -9.516140937805176
    4. ')' → logprob: -10.641140937805176
    5. ' )' → logprob: -12.766140937805176
    6. ' n' → logprob: -13.891140937805176
    7. ' ' → logprob: -14.266140937805176
    8. ',' → logprob: -14.391140937805176
    9. '):' → logprob: -14.641140937805176
    10. ')b' → logprob: -14.641140937805176

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01691955141723156
    2. ')' → logprob: -4.1419196128845215
    3. ',' → logprob: -7.1419196128845215
    4. ':' → logprob: -9.641919136047363
    5. '):
' → logprob: -11.266919136047363
    6. ''):' → logprob: -12.391919136047363
    7. '),' → logprob: -13.266919136047363
    8. '```' → logprob: -13.766919136047363
    9. '[' → logprob: -14.266919136047363
    10. ' ' → logprob: -14.516919136047363

Token 9: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002787526696920395
    2. '   ' → logprob: -6.3777875900268555
    3. '():' → logprob: -7.6277875900268555
    4. ':
' → logprob: -7.8777875900268555
    5. '):' → logprob: -9.752787590026855
    6. '':' → logprob: -10.502787590026855
    7. '(' → logprob: -10.502787590026855
    8. ':return' → logprob: -10.502787590026855
    9. ':**' → logprob: -11.377787590026855
    10. '```' → logprob: -11.627787590026855

Token 10: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1832647323608398
    2. ' ' → logprob: -1.3082647323608398
    3. ' return' → logprob: -1.9332647323608398
    4. 'return' → logprob: -2.30826473236084
    5. '    ' → logprob: -3.43326473236084
    6. '\' → logprob: -3.43326473236084
    7. ''' → logprob: -3.55826473236084
    8. '\n' → logprob: -3.80826473236084
    9. '`' → logprob: -4.30826473236084
    10. ' 
' → logprob: -4.55826473236084

Token 11: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.018318504095077515
    2. ' ' → logprob: -4.2683186531066895
    3. 'a' → logprob: -5.6433186531066895
    4. ' not' → logprob: -7.5183186531066895
    5. '  ' → logprob: -10.268318176269531
    6. ' b' → logprob: -11.518318176269531
    7. ' ' → logprob: -12.768318176269531
    8. ' isinstance' → logprob: -12.893318176269531
    9. ' an' → logprob: -13.143318176269531
    10. ' (' → logprob: -13.393318176269531

Token 12: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.08478022366762161
    2. ' <' → logprob: -2.959780216217041
    3. '>' → logprob: -3.709780216217041
    4. ' ==' → logprob: -5.959780216217041
    5. '<' → logprob: -7.084780216217041
    6. ' >=' → logprob: -7.834780216217041
    7. '==' → logprob: -7.834780216217041
    8. ' <=' → logprob: -7.959780216217041
    9. ' ' → logprob: -8.2097806930542
    10. '   ' → logprob: -10.4597806930542

Token 13: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6951533555984497
    2. ' b' → logprob: -0.6951533555984497
    3. ' ' → logprob: -6.82015323638916
    4. '0' → logprob: -7.19515323638916
    5. '=' → logprob: -9.69515323638916
    6. '=b' → logprob: -10.32015323638916
    7. ' None' → logprob: -10.94515323638916
    8. '1' → logprob: -11.07015323638916
    9. 'None' → logprob: -11.94515323638916
    10. ''' → logprob: -12.19515323638916

Token 14: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0005632805987261236
    2. ' b' → logprob: -7.500563144683838
    3. '0' → logprob: -11.625563621520996
    4. ' ' → logprob: -13.750563621520996
    5. 'None' → logprob: -15.625563621520996
    6. ' None' → logprob: -15.750563621520996
    7. '=' → logprob: -17.00056266784668
    8. '=b' → logprob: -17.75056266784668
    9. ')b' → logprob: -18.00056266784668
    10. '>b' → logprob: -18.62556266784668

Token 15: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004177171736955643
    2. ' :' → logprob: -5.629177093505859
    3. ' and' → logprob: -7.629177093505859
    4. '):' → logprob: -10.62917709350586
    5. ':
' → logprob: -11.12917709350586
    6. ':return' → logprob: -11.25417709350586
    7. '   ' → logprob: -11.37917709350586
    8. ':**' → logprob: -12.12917709350586
    9. ' or' → logprob: -12.25417709350586
    10. 'and' → logprob: -12.62917709350586

Token 16: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.02058369852602482
    2. 'b' → logprob: -3.8955836296081543
    3. ' ' → logprob: -10.145584106445312
    4. ' ' → logprob: -13.395584106445312
    5. '  ' → logprob: -14.895584106445312
    6. ' not' → logprob: -15.020584106445312
    7. '```' → logprob: -17.145584106445312
    8. 'nbsp' → logprob: -17.270584106445312
    9. '	b' → logprob: -17.270584106445312
    10. ' б' → logprob: -17.395584106445312

Token 17: ' <=' (ID: 5017)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.009282112121582031
    2. '==' → logprob: -4.759282112121582
    3. ' ' → logprob: -7.509282112121582
    4. ' !=' → logprob: -9.259282112121582
    5. ' >' → logprob: -11.384282112121582
    6. '>' → logprob: -12.634282112121582
    7. ' <' → logprob: -12.884282112121582
    8. '  ' → logprob: -13.759282112121582
    9. '!=' → logprob: -14.384282112121582
    10. ' ' → logprob: -14.384282112121582

Token 18: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34870222210884094
    2. '0' → logprob: -1.2237021923065186
    3. '1' → logprob: -8.348702430725098
    4. '9' → logprob: -12.473702430725098
    5. '  ' → logprob: -12.723702430725098
    6. ' b' → logprob: -12.973702430725098
    7. 'b' → logprob: -12.973702430725098
    8. '5' → logprob: -13.473702430725098
    9. '2' → logprob: -13.598702430725098
    10. '6' → logprob: -13.661202430725098

Token 19: '99' (ID: 2058)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013375865295529366
    2. ' ' → logprob: -4.513375759124756
    3. '1' → logprob: -6.138375759124756
    4. '9' → logprob: -10.138376235961914
    5. '3' → logprob: -10.763376235961914
    6. '2' → logprob: -11.013376235961914
    7. '-' → logprob: -11.013376235961914
    8. '5' → logprob: -11.263376235961914
    9. '6' → logprob: -11.388376235961914
    10. '10' → logprob: -11.763376235961914

Token 20: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.939851037808694e-05
    2. ':return' → logprob: -11.500029563903809
    3. ':
' → logprob: -11.875029563903809
    4. '):' → logprob: -12.125029563903809
    5. ' :' → logprob: -12.750029563903809
    6. ':**' → logprob: -13.500029563903809
    7. '   ' → logprob: -14.250029563903809
    8. ',' → logprob: -14.250029563903809
    9. '.' → logprob: -15.250029563903809
    10. ' and' → logprob: -15.500029563903809

Token 21: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13269467651844025
    2. '       ' → logprob: -2.132694721221924
    3. ' :' → logprob: -6.007694721221924
    4. ':
' → logprob: -6.007694721221924
    5. ':return' → logprob: -7.882694721221924
    6. '):' → logprob: -9.132694244384766
    7. ' :
' → logprob: -9.632694244384766
    8. '.' → logprob: -10.007694244384766
    9. ':\' → logprob: -10.132694244384766
    10. ' return' → logprob: -10.257694244384766

Token 22: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.304118275642395
    2. ' return' → logprob: -1.554118275642395
    3. '\n' → logprob: -3.6791181564331055
    4. 'return' (adapté à ' return') → logprob: -4.3041181564331055
    5. '   ' → logprob: -5.6791181564331055
    6. '           ' → logprob: -6.5541181564331055
    7. ':return' → logprob: -6.5541181564331055
    8. ':' → logprob: -7.1791181564331055
    9. '    ' → logprob: -7.1791181564331055
    10. '\' → logprob: -7.1791181564331055

Token 23: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.005380630493164
    2. ' ' → logprob: -1.755380630493164
    3. '"' → logprob: -2.130380630493164
    4. ' True' → logprob: -2.130380630493164
    5. 'b' → logprob: -2.255380630493164
    6. ' None' → logprob: -3.630380630493164
    7. '0' → logprob: -3.755380630493164
    8. ' "' → logprob: -4.005380630493164
    9. 'True' → logprob: -4.505380630493164
    10. ''' → logprob: -4.630380630493164

Token 24: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07685240358114243
    2. '    
' → logprob: -3.451852321624756
    3. '
' → logprob: -4.076852321624756
    4. ':' → logprob: -5.326852321624756
    5. '<|end|>' → logprob: -5.326852321624756
    6. '*' → logprob: -6.326852321624756
    7. ',' → logprob: -6.451852321624756
    8. '\n' → logprob: -6.826852321624756
    9. ' else' → logprob: -6.951852321624756
    10. '.' → logprob: -6.951852321624756

Token 26: ' elif' (ID: 9497)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5885647535324097
    2. '   ' → logprob: -1.3385647535324097
    3. ')' → logprob: -3.588564872741699
    4. '*' → logprob: -4.088564872741699
    5. ' ' → logprob: -4.088564872741699
    6. '-' → logprob: -4.213564872741699
    7. '<|end|>' → logprob: -4.213564872741699
    8. ' else' → logprob: -4.463564872741699
    9. 'elif' (adapté à ' elif') → logprob: -4.713564872741699
    10. ' elif' → logprob: -4.838564872741699

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1540585309267044
    2. ' b' → logprob: -2.1540584564208984
    3. ' ' → logprob: -4.279058456420898
    4. 'a' → logprob: -4.654058456420898
    5. 'b' → logprob: -6.404058456420898
    6. ' not' → logprob: -6.529058456420898
    7. ' ' → logprob: -9.404058456420898
    8. ' (' → logprob: -9.654058456420898
    9. '    ' → logprob: -10.529058456420898
    10. 'not' → logprob: -11.154058456420898

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13263213634490967
    2. ' >' → logprob: -2.382632255554199
    3. ' <' → logprob: -4.382632255554199
    4. '==' → logprob: -4.382632255554199
    5. ' ' → logprob: -5.382632255554199
    6. '>' → logprob: -7.007632255554199
    7. ' <=' → logprob: -7.382632255554199
    8. ' >=' → logprob: -8.6326322555542
    9. ' %' → logprob: -9.0076322555542
    10. '<' → logprob: -9.1326322555542

Token 29: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5809301137924194
    2. '1' → logprob: -0.8309301137924194
    3. '0' → logprob: -5.330930233001709
    4. '2' → logprob: -10.14342975616455
    5. '100' → logprob: -10.89342975616455
    6. ' -' → logprob: -11.51842975616455
    7. '99' → logprob: -11.76842975616455
    8. '-' → logprob: -11.95592975616455
    9. '10' → logprob: -12.01842975616455
    10. '4' → logprob: -12.08092975616455

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02872856892645359
    2. ' ' → logprob: -3.778728485107422
    3. '0' → logprob: -5.278728485107422
    4. '2' → logprob: -9.153728485107422
    5. '-' → logprob: -9.841228485107422
    6. '100' → logprob: -9.841228485107422
    7. '99' → logprob: -10.466228485107422
    8. '3' → logprob: -10.716228485107422
    9. '4' → logprob: -10.716228485107422
    10. '9' → logprob: -10.841228485107422

Token 31: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15474766492843628
    2. ' and' → logprob: -2.404747724533081
    3. ' :' → logprob: -3.529747724533081
    4. ' ' → logprob: -4.154747486114502
    5. ' *' → logprob: -6.154747486114502
    6. 'and' → logprob: -6.279747486114502
    7. '    ' → logprob: -7.279747486114502
    8. '   ' → logprob: -7.529747486114502
    9. '<|end|>' → logprob: -7.529747486114502
    10. '):' → logprob: -7.779747486114502

Token 32: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.1037391796708107
    2. ' ' → logprob: -2.4787392616271973
    3. 'b' → logprob: -4.353739261627197
    4. ' a' → logprob: -7.103739261627197
    5. '0' → logprob: -8.728738784790039
    6. ' not' → logprob: -8.853738784790039
    7. ''' → logprob: -8.978738784790039
    8. 'a' → logprob: -9.916238784790039
    9. '  ' → logprob: -9.978738784790039
    10. '1' → logprob: -10.041238784790039

Token 33: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8223024010658264
    2. ' ==' → logprob: -1.5723023414611816
    3. ' >=' → logprob: -2.1973023414611816
    4. ' %' → logprob: -2.4473023414611816
    5. ' ' → logprob: -2.6973023414611816
    6. ' <' → logprob: -3.3223023414611816
    7. ' >' → logprob: -3.5723023414611816
    8. '==' → logprob: -4.947302341461182
    9. '%' → logprob: -5.572302341461182
    10. '<=' → logprob: -5.822302341461182

Token 34: ' ' (ID: 220)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.27857956290245056
    2. ' ' → logprob: -1.903579592704773
    3. '9' → logprob: -3.0285794734954834
    4. '100' → logprob: -4.9035797119140625
    5. '199' → logprob: -5.0285797119140625
    6. '1' → logprob: -5.5285797119140625
    7. '0' → logprob: -5.5285797119140625
    8. '49' → logprob: -5.6535797119140625
    9. '999' → logprob: -5.6535797119140625
    10. '10' → logprob: -5.9035797119140625

Token 35: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.1222158744931221
    2. '9' → logprob: -2.497215986251831
    3. '0' → logprob: -5.747215747833252
    4. '999' → logprob: -5.747215747833252
    5. '1' → logprob: -5.872215747833252
    6. ' ' → logprob: -5.872215747833252
    7. '100' → logprob: -6.122215747833252
    8. '10' → logprob: -6.247215747833252
    9. '199' → logprob: -6.372215747833252
    10. '49' → logprob: -6.372215747833252

Token 36: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007763965986669064
    2. ' :' → logprob: -7.750776290893555
    3. ':
' → logprob: -8.375776290893555
    4. ':return' → logprob: -9.625776290893555
    5. '   ' → logprob: -10.750776290893555
    6. '       ' → logprob: -11.250776290893555
    7. ' and' → logprob: -12.125776290893555
    8. '):' → logprob: -13.250776290893555
    9. '+' → logprob: -13.625776290893555
    10. ' ' → logprob: -14.125776290893555

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0809541642665863
    2. ' return' → logprob: -3.955954074859619
    3. ' ' → logprob: -4.080954074859619
    4. '        ' → logprob: -4.580954074859619
    5. ':' → logprob: -4.705954074859619
    6. ' +' → logprob: -5.705954074859619
    7. '    ' → logprob: -5.830954074859619
    8. '   ' → logprob: -5.955954074859619
    9. '+' → logprob: -6.080954074859619
    10. '0' → logprob: -6.205954074859619

Token 38: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.1892043501138687
    2. 'return' (adapté à ' return') → logprob: -2.189204454421997
    3. ' b' → logprob: -3.439204454421997
    4. 'b' → logprob: -3.814204454421997
    5. '       ' → logprob: -6.439204216003418
    6. ' ' → logprob: -6.564204216003418
    7. ' a' → logprob: -6.689204216003418
    8. 'a' → logprob: -7.564204216003418
    9. '   ' → logprob: -8.189204216003418
    10. ' ' → logprob: -8.814204216003418

Token 39: ' ' (ID: 220)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -1.1597493886947632
    2. ' a' → logprob: -1.4097493886947632
    3. 'a' → logprob: -1.6597493886947632
    4. 'b' → logprob: -1.9097493886947632
    5. ' ' → logprob: -2.6597495079040527
    6. '99' → logprob: -4.284749507904053
    7. '100' → logprob: -4.534749507904053
    8. ' (' → logprob: -5.909749507904053
    9. '1' → logprob: -6.534749507904053
    10. '0' → logprob: -6.784749507904053

Token 40: '100' (ID: 1353)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7553664445877075
    2. 'b' → logprob: -0.7553664445877075
    3. '99' → logprob: -3.755366325378418
    4. '100' → logprob: -4.630366325378418
    5. ' a' → logprob: -5.005366325378418
    6. ' b' → logprob: -5.005366325378418
    7. '(' → logprob: -5.880366325378418
    8. '1' → logprob: -6.130366325378418
    9. ' ' → logprob: -6.130366325378418
    10. '(a' → logprob: -6.380366325378418

Token 41: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003465952118858695
    2. ' b' → logprob: -5.7534661293029785
    3. 'a' → logprob: -8.25346565246582
    4. '1' → logprob: -10.75346565246582
    5. ' a' → logprob: -13.12846565246582
    6. ' ' → logprob: -13.37846565246582
    7. '100' → logprob: -14.37846565246582
    8. '0' → logprob: -14.75346565246582
    9. '9' → logprob: -14.75346565246582
    10. '10' → logprob: -14.75346565246582

Token 43: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 44: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31423911452293396
    2. '\n' → logprob: -2.439239025115967
    3. ' else' → logprob: -3.439239025115967
    4. ' ' → logprob: -3.564239025115967
    5. '<|end|>' → logprob: -3.689239025115967
    6. 'elif' (adapté à ' elif') → logprob: -3.814239025115967
    7. '\' → logprob: -4.064239025115967
    8. 'else' → logprob: -4.189239025115967
    9. ' elif' → logprob: -4.564239025115967
    10. '    
' → logprob: -4.939239025115967

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.009082136675715446
    2. 'a' → logprob: -4.884082317352295
    3. ' b' → logprob: -7.009082317352295
    4. ' ' → logprob: -7.884082317352295
    5. ' (' → logprob: -9.759081840515137
    6. 'b' → logprob: -9.884081840515137
    7. ' not' → logprob: -10.134081840515137
    8. ' ' → logprob: -11.259081840515137
    9. '(a' → logprob: -11.634081840515137
    10. '(' → logprob: -12.134081840515137

Token 47: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01016046293079853
    2. '==' → logprob: -4.885160446166992
    3. ' ' → logprob: -6.010160446166992
    4. ' >' → logprob: -9.885160446166992
    5. ' =' → logprob: -12.135160446166992
    6. ' <' → logprob: -12.135160446166992
    7. '[' → logprob: -12.385160446166992
    8. '0' → logprob: -12.385160446166992
    9. ' ===' → logprob: -12.635160446166992
    10. '>' → logprob: -12.760160446166992

Token 48: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47439855337142944
    2. ' ' → logprob: -0.9743985533714294
    3. '0' → logprob: -8.849398612976074
    4. '3' → logprob: -9.474398612976074
    5. '1' → logprob: -10.349398612976074
    6. '100' → logprob: -11.349398612976074
    7. '10' → logprob: -11.411898612976074
    8. '4' → logprob: -12.099398612976074
    9. '5' → logprob: -12.849398612976074
    10. '9' → logprob: -12.974398612976074

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036535258404910564
    2. '0' → logprob: -6.253653526306152
    3. ' ' → logprob: -6.878653526306152
    4. '3' → logprob: -8.003653526306152
    5. '1' → logprob: -8.628653526306152
    6. '100' → logprob: -10.191153526306152
    7. '10' → logprob: -10.441153526306152
    8. '4' → logprob: -10.628653526306152
    9. '99' → logprob: -10.628653526306152
    10. '9' → logprob: -10.878653526306152

Token 50: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.39792969822883606
    2. ':' → logprob: -2.0229296684265137
    3. ' ' → logprob: -2.0229296684265137
    4. '   ' → logprob: -4.522929668426514
    5. ' *' → logprob: -4.522929668426514
    6. 'and' → logprob: -4.897929668426514
    7. ' <' → logprob: -5.147929668426514
    8. ' <=' → logprob: -5.647929668426514
    9. ' :' → logprob: -5.897929668426514
    10. ' >' → logprob: -6.022929668426514

Token 51: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.12553484737873077
    2. 'b' → logprob: -2.875534772872925
    3. ' ' → logprob: -3.000534772872925
    4. ' (' → logprob: -5.250535011291504
    5. '99' → logprob: -6.125535011291504
    6. '100' → logprob: -6.250535011291504
    7. ' a' → logprob: -7.375535011291504
    8. '(' → logprob: -8.125535011291504
    9. '(b' → logprob: -8.125535011291504
    10. 'a' → logprob: -8.750535011291504

Token 52: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0641552284359932
    2. ' ==' → logprob: -4.189155101776123
    3. ' ' → logprob: -4.314155101776123
    4. ' <' → logprob: -4.564155101776123
    5. ' >=' → logprob: -4.689155101776123
    6. '<=' → logprob: -4.689155101776123
    7. ' >' → logprob: -6.189155101776123
    8. '==' → logprob: -7.564155101776123
    9. '<' → logprob: -7.689155101776123
    10. ' %' → logprob: -8.189155578613281

Token 53: ' ' (ID: 220)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.33600884675979614
    2. ' ' → logprob: -1.5860087871551514
    3. '9' → logprob: -3.0860087871551514
    4. '999' → logprob: -5.2110090255737305
    5. '49' → logprob: -5.3360090255737305
    6. '100' → logprob: -6.0860090255737305
    7. '98' → logprob: -6.4610090255737305
    8. '14' → logprob: -6.5860090255737305
    9. '10' → logprob: -6.7735090255737305
    10. '50' → logprob: -6.7735090255737305

Token 54: '99' (ID: 2058)
  Prédit: '99'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '99' → logprob: -0.03346933051943779
    2. '9' → logprob: -3.9084694385528564
    3. ' ' → logprob: -5.033469200134277
    4. '14' → logprob: -7.533469200134277
    5. '98' → logprob: -7.533469200134277
    6. '10' → logprob: -7.658469200134277
    7. '49' → logprob: -7.783469200134277
    8. '20' → logprob: -7.908469200134277
    9. '19' → logprob: -7.908469200134277
    10. '4' → logprob: -8.095969200134277

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008278381079435349
    2. ' :' → logprob: -5.3832783699035645
    3. ':
' → logprob: -6.2582783699035645
    4. '   ' → logprob: -7.7582783699035645
    5. '       ' → logprob: -7.8832783699035645
    6. '**' → logprob: -8.508278846740723
    7. ' ' → logprob: -8.758278846740723
    8. '*' → logprob: -9.008278846740723
    9. '):' → logprob: -9.633278846740723
    10. ' *' → logprob: -9.633278846740723

Token 56: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19687803089618683
    2. ' return' → logprob: -3.196877956390381
    3. '100' → logprob: -3.321877956390381
    4. ' b' → logprob: -3.446877956390381
    5. '    ' → logprob: -3.946877956390381
    6. '   ' → logprob: -4.446877956390381
    7. 'b' → logprob: -5.071877956390381
    8. '       ' → logprob: -5.071877956390381
    9. ' (' → logprob: -5.071877956390381
    10. '(' → logprob: -5.821877956390381

Token 57: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9410587549209595
    2. ' ' → logprob: -1.0660587549209595
    3. 'return' (adapté à ' return') → logprob: -2.44105863571167
    4. ' b' → logprob: -2.69105863571167
    5. '100' → logprob: -2.69105863571167
    6. 'b' → logprob: -3.69105863571167
    7. '0' → logprob: -5.44105863571167
    8. ' (' → logprob: -5.81605863571167
    9. '(' → logprob: -5.81605863571167
    10. '10' → logprob: -6.81605863571167

Token 58: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9071502685546875
    2. '100' → logprob: -1.2821502685546875
    3. 'b' → logprob: -1.6571502685546875
    4. ' b' → logprob: -2.4071502685546875
    5. '(' → logprob: -4.7821502685546875
    6. '999' → logprob: -5.2821502685546875
    7. '10' → logprob: -5.5321502685546875
    8. '1' → logprob: -5.7821502685546875
    9. ' (' → logprob: -5.9071502685546875
    10. 'a' → logprob: -6.0321502685546875

Token 59: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.21123965084552765
    2. 'b' → logprob: -2.2112395763397217
    3. 'a' → logprob: -3.5862395763397217
    4. '(' → logprob: -4.211239814758301
    5. '10' → logprob: -4.461239814758301
    6. '999' → logprob: -5.211239814758301
    7. '1' → logprob: -5.336239814758301
    8. '2' → logprob: -5.711239814758301
    9. '200' → logprob: -5.961239814758301
    10. '99' → logprob: -6.211239814758301

Token 60: '00' (ID: 504)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03599125146865845
    2. '*' → logprob: -3.6609911918640137
    3. '*b' → logprob: -5.910991191864014
    4. '00' → logprob: -6.285991191864014
    5. ' **' → logprob: -6.410991191864014
    6. ' +' → logprob: -6.785991191864014
    7. ' -' → logprob: -7.160991191864014
    8. '**' → logprob: -7.535991191864014
    9. '0' → logprob: -7.660991191864014
    10. '000' → logprob: -7.910991191864014

Token 61: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.039725568145513535
    2. '*' → logprob: -3.2897255420684814
    3. ' +' → logprob: -6.5397257804870605
    4. '+' → logprob: -9.414725303649902
    5. '*b' → logprob: -9.664725303649902
    6. ' ' → logprob: -10.539725303649902
    7. '**' → logprob: -10.789725303649902
    8. ' **' → logprob: -10.914725303649902
    9. ' ' → logprob: -11.289725303649902
    10. '0' → logprob: -12.289725303649902

Token 62: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.38688334822654724
    2. 'b' → logprob: -1.1368833780288696
    3. ' ' → logprob: -11.636883735656738
    4. ' ' → logprob: -13.761883735656738
    5. '100' → logprob: -14.261883735656738
    6. '<|end|>' → logprob: -14.636883735656738
    7. '	b' → logprob: -15.636883735656738
    8. ')b' → logprob: -15.761883735656738
    9. '   ' → logprob: -16.261882781982422
    10. '*b' → logprob: -16.386882781982422

Token 63: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.002772189909592271
    2. 'a' → logprob: -6.377772331237793
    3. ' b' → logprob: -7.877772331237793
    4. ' ' → logprob: -7.877772331237793
    5. ' ' → logprob: -8.752772331237793
    6. ' (' → logprob: -9.377772331237793
    7. '<|end|>' → logprob: -10.627772331237793
    8. 'b' → logprob: -11.627772331237793
    9. ' not' → logprob: -11.752772331237793
    10. 's' → logprob: -12.002772331237793

Token 67: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.027642395347356796
    2. '==' → logprob: -3.6526424884796143
    3. ' >' → logprob: -7.277642250061035
    4. ' ' → logprob: -7.527642250061035
    5. '<|end|>' → logprob: -9.902642250061035
    6. '>' → logprob: -10.652642250061035
    7. ' <' → logprob: -11.152642250061035
    8. ' =' → logprob: -12.027642250061035
    9. ' >=' → logprob: -12.152642250061035
    10. ' ' → logprob: -12.652642250061035

Token 68: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1426871418952942
    2. ' ' → logprob: -2.0176870822906494
    3. '<|end|>' → logprob: -12.51768684387207
    4. '0' → logprob: -13.26768684387207
    5. '  ' → logprob: -14.33018684387207
    6. '2' → logprob: -14.33018684387207
    7. '...' → logprob: -14.39268684387207
    8. 'int' → logprob: -14.76768684387207
    9. 's' → logprob: -15.20518684387207
    10. '1' → logprob: -15.26768684387207

Token 69: '0' (ID: 15)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00013131031300872564
    2. ' ' → logprob: -9.375131607055664
    3. '0' → logprob: -10.375131607055664
    4. '2' → logprob: -12.125131607055664
    5. '1' → logprob: -12.500131607055664
    6. '4' → logprob: -13.500131607055664
    7. '100' → logprob: -13.875131607055664
    8. '99' → logprob: -14.000131607055664
    9. '-' → logprob: -14.937631607055664
    10. '9' → logprob: -15.375131607055664

Token 70: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12325498461723328
    2. ':' → logprob: -2.6232550144195557
    3. '0' → logprob: -4.623254776000977
    4. ' >' → logprob: -4.748254776000977
    5. 'and' → logprob: -4.873254776000977
    6. ' :' → logprob: -5.123254776000977
    7. '>' → logprob: -5.498254776000977
    8. ' ' → logprob: -6.123254776000977
    9. ' or' → logprob: -6.873254776000977
    10. '   ' → logprob: -7.248254776000977

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03350264951586723
    2. '   ' → logprob: -3.7835025787353516
    3. 'return' → logprob: -6.158502578735352
    4. '0' → logprob: -6.283502578735352
    5. '100' → logprob: -6.283502578735352
    6. ' return' → logprob: -6.908502578735352
    7. 'b' → logprob: -7.408502578735352
    8. '      ' → logprob: -7.658502578735352
    9. ' ' → logprob: -8.033502578735352
    10. ':' → logprob: -8.283502578735352

Token 72: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.7668242454528809
    2. 'b' → logprob: -1.5168242454528809
    3. '99' → logprob: -2.516824245452881
    4. ' return' → logprob: -2.766824245452881
    5. '100' → logprob: -2.891824245452881
    6. ' ' → logprob: -3.391824245452881
    7. ' b' → logprob: -3.891824245452881
    8. '0' → logprob: -4.391824245452881
    9. '   ' → logprob: -4.516824245452881
    10. '"' → logprob: -4.891824245452881

Token 73: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1944694519042969
    2. '99' → logprob: -1.1944694519042969
    3. 'b' → logprob: -2.319469451904297
    4. '999' → logprob: -2.444469451904297
    5. '100' → logprob: -2.819469451904297
    6. '"' → logprob: -3.444469451904297
    7. 'None' → logprob: -3.444469451904297
    8. ' None' → logprob: -3.569469451904297
    9. ' b' → logprob: -4.069469451904297
    10. '-' → logprob: -4.819469451904297

Token 74: '101' (ID: 7959)
  Prédit: '99'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '99' → logprob: -1.001107931137085
    2. '-' → logprob: -1.501107931137085
    3. '"' → logprob: -2.126107931137085
    4. 'b' → logprob: -2.251107931137085
    5. '100' → logprob: -2.501107931137085
    6. '999' → logprob: -3.501107931137085
    7. 'None' → logprob: -3.501107931137085
    8. '0' → logprob: -3.876107931137085
    9. ''' → logprob: -5.001108169555664
    10. 'a' → logprob: -6.001108169555664

Token 75: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 77: ' elif' (ID: 9497)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2275642454624176
    2. 'a' → logprob: -1.6025642156600952
    3. ' b' → logprob: -7.102564334869385
    4. 'b' → logprob: -7.227564334869385
    5. ' ' → logprob: -7.602564334869385
    6. ' not' → logprob: -10.477563858032227
    7. '1' → logprob: -11.227563858032227
    8. '<|end|>' → logprob: -11.227563858032227
    9. '0' → logprob: -11.602563858032227
    10. '	a' → logprob: -12.040063858032227

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.060136571526527405
    2. '==' → logprob: -3.060136556625366
    3. ' >' → logprob: -5.060136795043945
    4. ' ' → logprob: -5.560136795043945
    5. '1' → logprob: -7.810136795043945
    6. ' <' → logprob: -8.185136795043945
    7. '>' → logprob: -8.435136795043945
    8. '0' → logprob: -8.560136795043945
    9. ' !=' → logprob: -10.560136795043945
    10. '<' → logprob: -10.935136795043945

Token 80: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012832170352339745
    2. ' ' → logprob: -4.387832164764404
    3. '2' → logprob: -9.137832641601562
    4. '<|end|>' → logprob: -9.700332641601562
    5. '0' → logprob: -10.012832641601562
    6. '3' → logprob: -10.575332641601562
    7. '   ' → logprob: -11.262832641601562
    8. '4' → logprob: -11.575332641601562
    9. '100' → logprob: -11.637832641601562
    10. '  ' → logprob: -12.387832641601562

Token 81: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001375089050270617
    2. ' ' → logprob: -9.875137329101562
    3. '2' → logprob: -10.250137329101562
    4. '100' → logprob: -11.562637329101562
    5. '<|end|>' → logprob: -11.562637329101562
    6. '3' → logprob: -11.750137329101562
    7. '0' → logprob: -12.187637329101562
    8. 'elif' → logprob: -12.687637329101562
    9. '<|end|>' → logprob: -13.250137329101562
    10. '4' → logprob: -13.375137329101562

Token 82: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03586658835411072
    2. ' and' → logprob: -3.9108664989471436
    3. '<|end|>' → logprob: -5.410866737365723
    4. '       ' → logprob: -5.660866737365723
    5. ' ' → logprob: -5.910866737365723
    6. ' :' → logprob: -6.160866737365723
    7. ':return' → logprob: -7.410866737365723
    8. '   ' → logprob: -7.910866737365723
    9. 'and' → logprob: -8.035866737365723
    10. ':
' → logprob: -8.410866737365723

Token 83: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2589735984802246
    2. '       ' → logprob: -2.3839735984802246
    3. ' return' → logprob: -2.7589735984802246
    4. '        ' → logprob: -3.6339735984802246
    5. 'return' → logprob: -4.258973598480225
    6. '101' → logprob: -5.008973598480225
    7. '    ' → logprob: -5.508973598480225
    8. '100' → logprob: -5.508973598480225
    9. '10' → logprob: -6.008973598480225
    10. '  ' → logprob: -6.383973598480225

Token 84: ' return' (ID: 622)
  Prédit: '102'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '102' → logprob: -0.9124222993850708
    2. ' ' → logprob: -1.5374222993850708
    3. '101' → logprob: -1.6624222993850708
    4. 'return' (adapté à ' return') → logprob: -2.1624221801757812
    5. ' return' → logprob: -3.2874221801757812
    6. '100' → logprob: -3.5374221801757812
    7. '104' → logprob: -6.162422180175781
    8. '103' → logprob: -6.537422180175781
    9. '110' → logprob: -6.537422180175781
    10. '10' → logprob: -6.537422180175781

Token 85: ' ' (ID: 220)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.317872017621994
    2. '102' → logprob: -2.0678720474243164
    3. ' ' → logprob: -2.6928720474243164
    4. '100' → logprob: -3.3178720474243164
    5. '202' → logprob: -3.4428720474243164
    6. '200' → logprob: -6.317872047424316
    7. '-' → logprob: -6.442872047424316
    8. 'b' → logprob: -6.567872047424316
    9. '201' → logprob: -6.567872047424316
    10. '10' → logprob: -7.067872047424316

Token 86: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.21650952100753784
    2. '102' → logprob: -1.7165095806121826
    3. '202' → logprob: -5.0915093421936035
    4. '100' → logprob: -5.3415093421936035
    5. 'b' → logprob: -6.9665093421936035
    6. ' ' → logprob: -7.2165093421936035
    7. '10' → logprob: -7.4665093421936035
    8. '201' → logprob: -7.9665093421936035
    9. '110' → logprob: -8.341509819030762
    10. '-' → logprob: -8.466509819030762

Token 87: '00' (ID: 504)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04041925445199013
    2. '<|end|>' → logprob: -3.540419340133667
    3. 'elif' → logprob: -5.165419101715088
    4. '	elif' → logprob: -6.665419101715088
    5. ' elif' → logprob: -6.915419101715088
    6. '<|end|>' → logprob: -7.165419101715088
    7. '  ' → logprob: -7.540419101715088
    8. 'else' → logprob: -7.915419101715088
    9. ' else' → logprob: -8.040419578552246
    10. '    
' → logprob: -8.165419578552246

Token 89: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05738449469208717
    2. ' elif' → logprob: -3.557384490966797
    3. 'elif' → logprob: -4.057384490966797
    4. ' else' → logprob: -5.182384490966797
    5. '	elif' → logprob: -6.182384490966797
    6. 'else' → logprob: -6.932384490966797
    7. '<|end|>' → logprob: -7.182384490966797
    8. '    
' → logprob: -8.932384490966797
    9. '    ' → logprob: -9.182384490966797
    10. '  ' → logprob: -9.307384490966797

Token 90: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.3477194905281067
    2. 'elif' → logprob: -1.597719430923462
    3. ' else' → logprob: -2.722719430923462
    4. '   ' → logprob: -3.847719430923462
    5. '<|end|>' → logprob: -6.097719669342041
    6. ' elif' → logprob: -6.597719669342041
    7. '[]' → logprob: -8.972719192504883
    8. '	elif' → logprob: -9.472719192504883
    9. ')' → logprob: -9.472719192504883
    10. '  ' → logprob: -9.597719192504883

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009222944267094135
    2. ' :' → logprob: -4.759222984313965
    3. ':
' → logprob: -7.759222984313965
    4. ':return' → logprob: -9.384222984313965
    5. '{' → logprob: -10.259222984313965
    6. ' :
' → logprob: -10.759222984313965
    7. '   ' → logprob: -10.884222984313965
    8. '  ' → logprob: -12.259222984313965
    9. ' ' → logprob: -12.634222984313965
    10. 'return' → logprob: -13.009222984313965

Token 92: '       ' (ID: 309)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.3805665671825409
    2. 'return' → logprob: -2.2555665969848633
    3. '       ' → logprob: -3.0055665969848633
    4. '100' → logprob: -3.1305665969848633
    5. ' ' → logprob: -3.2555665969848633
    6. '   ' → logprob: -3.3805665969848633
    7. ' return' → logprob: -4.005566596984863
    8. '102' → logprob: -4.130566596984863
    9. '10' → logprob: -5.880566596984863
    10. '104' → logprob: -6.005566596984863

Token 93: ' return' (ID: 622)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.38031789660453796
    2. 'return' (adapté à ' return') → logprob: -1.2553179264068604
    3. ' return' → logprob: -4.380317687988281
    4. ' ' → logprob: -5.130317687988281
    5. '100' → logprob: -5.255317687988281
    6. '102' → logprob: -5.380317687988281
    7. '   ' → logprob: -7.130317687988281
    8. '0' → logprob: -7.505317687988281
    9. '10' → logprob: -7.630317687988281
    10. '104' → logprob: -8.380317687988281

Token 94: ' ' (ID: 220)
  Prédit: '101'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.0010407903464511037
    2. '100' → logprob: -7.001040935516357
    3. '102' → logprob: -9.5010404586792
    4. ' ' → logprob: -10.1260404586792
    5. '10' → logprob: -11.8760404586792
    6. '0' → logprob: -13.6260404586792
    7. '1' → logprob: -13.6260404586792
    8. 'None' → logprob: -14.2510404586792
    9. '  ' → logprob: -14.3760404586792
    10. '010' → logprob: -14.5010404586792

Token 95: '101' (ID: 7959)
  Prédit: '101'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '101' → logprob: -0.003186386078596115
    2. '100' → logprob: -5.878186225891113
    3. '102' → logprob: -8.628186225891113
    4. '0' → logprob: -9.628186225891113
    5. '1' → logprob: -10.003186225891113
    6. '10' → logprob: -10.128186225891113
    7. '999' → logprob: -10.878186225891113
    8. 'None' → logprob: -11.878186225891113
    9. '202' → logprob: -12.378186225891113
    10. '```' → logprob: -12.503186225891113

Token 96: '000' (ID: 1302)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: '0' (ID: 15)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6259369850158691
    2. '<|end|>' → logprob: -1.0009369850158691
    3. '
' → logprob: -2.375936985015869
    4. '```' → logprob: -6.625936985015869
    5. '<|end|>' → logprob: -7.250936985015869
    6. '#' → logprob: -7.375936985015869
    7. 'newline' → logprob: -7.500936985015869
    8. '\' → logprob: -7.500936985015869
    9. ')' → logprob: -8.500936508178711
    10. ' ' → logprob: -9.375936508178711

Token 98: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8994578123092651
    2. '<|end|>' → logprob: -1.0244578123092651
    3. '
' → logprob: -1.6494578123092651
    4. '```' → logprob: -3.7744579315185547
    5. '#' → logprob: -4.899457931518555
    6. 'newline' → logprob: -5.649457931518555
    7. '<|end|>' → logprob: -5.774457931518555
    8. '[' → logprob: -6.274457931518555
    9. ' ' → logprob: -7.899457931518555
    10. '\' → logprob: -8.024457931518555

Token 99: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13324017822742462
    2. ' ' → logprob: -3.508240222930908
    3. ' solve' → logprob: -3.758240222930908
    4. '_' → logprob: -3.758240222930908
    5. ' _' → logprob: -4.133240222930908
    6. ' __' → logprob: -4.383240222930908
    7. ' sys' → logprob: -4.383240222930908
    8. ' test' → logprob: -5.883240222930908
    9. ' ' → logprob: -6.633240222930908
    10. ' process' → logprob: -8.00823974609375

Token 101: 'Question' (ID: 15143)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16267642378807068
    2. '_input' → logprob: -2.7876763343811035
    3. '_line' → logprob: -2.9126763343811035
    4. 'line' → logprob: -4.0376763343811035
    5. '():' → logprob: -4.7876763343811035
    6. '():
' → logprob: -5.5376763343811035
    7. '_' → logprob: -6.6626763343811035
    8. '())' → logprob: -7.2876763343811035
    9. ' ()' → logprob: -7.6626763343811035
    10. 'input' → logprob: -8.662676811218262

Token 102: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.018233058974146843
    2. '()' → logprob: -4.268232822418213
    3. '(' → logprob: -5.643232822418213
    4. '_line' → logprob: -9.018233299255371
    5. 's' → logprob: -9.143233299255371
    6. '_input' → logprob: -9.643233299255371
    7. 'Input' → logprob: -9.893233299255371
    8. '_' → logprob: -10.268233299255371
    9. 'Line' → logprob: -10.518233299255371
    10. '```' → logprob: -11.893233299255371

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008296403102576733
    2. '()' → logprob: -7.500829696655273
    3. '():' → logprob: -8.500829696655273
    4. '():
' → logprob: -10.875829696655273
    5. 'input' → logprob: -11.875829696655273
    6. '<|end|>' → logprob: -12.000829696655273
    7. ':' → logprob: -12.375829696655273
    8. '```' → logprob: -12.625829696655273
    9. '()>' → logprob: -12.875829696655273
    10. 'import' → logprob: -13.000829696655273

Token 104: ' line' (ID: 2543)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.390609622001648
    2. '   ' → logprob: -1.515609622001648
    3. ' try' → logprob: -1.640609622001648
    4. ' line' → logprob: -1.640609622001648
    5. ' n' → logprob: -3.2656097412109375
    6. ' input' → logprob: -3.7656097412109375
    7. 'try' → logprob: -4.0156097412109375
    8. ' import' → logprob: -4.3906097412109375
    9. ' data' → logprob: -4.7656097412109375
    10. 'return' → logprob: -5.0156097412109375

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013407855294644833
    2. '=' → logprob: -5.0134077072143555
    3. 's' → logprob: -5.0134077072143555
    4. '_' → logprob: -11.263407707214355
    5. '=line' → logprob: -12.388407707214355
    6. ' ' → logprob: -13.513407707214355
    7. '=input' → logprob: -14.013407707214355
    8. '_input' → logprob: -14.638407707214355
    9. '.' → logprob: -14.888407707214355
    10. '()' → logprob: -14.888407707214355

Token 106: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.14380958676338196
    2. 'sys' → logprob: -2.1438095569610596
    3. ' input' → logprob: -4.518809795379639
    4. 'input' → logprob: -5.143809795379639
    5. '	sys' → logprob: -13.39380931854248
    6. '=sys' → logprob: -14.76880931854248
    7. ' ' → logprob: -15.14380931854248
    8. '(sys' → logprob: -15.89380931854248
    9. 'stdin' → logprob: -17.393810272216797
    10. 's' → logprob: -17.643810272216797

Token 107: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.5570885807392187e-05
    2. '.' → logprob: -11.750015258789062
    3. '.stdout' → logprob: -12.000015258789062
    4. '.argv' → logprob: -14.250015258789062
    5. '.std' → logprob: -14.750015258789062
    6. '.readline' → logprob: -15.500015258789062
    7. 'stdin' → logprob: -15.625015258789062
    8. '.st' → logprob: -16.875015258789062
    9. '.stderr' → logprob: -17.500015258789062
    10. ' stdin' → logprob: -19.500015258789062

Token 108: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -2.868328920158092e-05
    2. '.' → logprob: -10.500028610229492
    3. '.read' → logprob: -14.000028610229492
    4. '.readlines' → logprob: -16.375028610229492
    5. ' readline' → logprob: -16.875028610229492
    6. '.stdin' → logprob: -17.875028610229492
    7. 'read' → logprob: -18.500028610229492
    8. '().' → logprob: -18.625028610229492
    9. '_read' → logprob: -20.000028610229492
    10. ' .' → logprob: -20.500028610229492

Token 109: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31331712007522583
    2. '().' → logprob: -1.313317060470581
    3. '()
' → logprob: -10.06331729888916
    4. '(' → logprob: -11.81331729888916
    5. '()

' → logprob: -12.81331729888916
    6. '()`' → logprob: -14.43831729888916
    7. '.strip' → logprob: -15.06331729888916
    8. 'rstrip' → logprob: -15.18831729888916
    9. '()\' → logprob: -15.31331729888916
    10. '())' → logprob: -15.43831729888916

Token 110: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.018150178715586662
    2. 'rstrip' → logprob: -4.018150329589844
    3. ' strip' → logprob: -15.518150329589844
    4. '(strip' → logprob: -18.143150329589844
    5. '_strip' → logprob: -18.643150329589844
    6. 'decode' → logprob: -19.018150329589844
    7. 'split' → logprob: -19.768150329589844
    8. '.rstrip' → logprob: -20.268150329589844
    9. '.strip' → logprob: -20.268150329589844
    10. 'r' → logprob: -20.768150329589844

Token 111: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0013173815095797181
    2. '(' → logprob: -7.626317501068115
    3. '('\' → logprob: -8.001317024230957
    4. '()\' → logprob: -8.001317024230957
    5. '()
' → logprob: -9.001317024230957
    6. '('' → logprob: -11.376317024230957
    7. '("\' → logprob: -11.501317024230957
    8. '().' → logprob: -12.751317024230957
    9. '()

' → logprob: -13.001317024230957
    10. ' ()' → logprob: -13.501317024230957

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32012835144996643
    2. ' if' → logprob: -1.820128321647644
    3. '()' → logprob: -3.1951284408569336
    4. 'if' → logprob: -3.3201284408569336
    5. 'tokens' → logprob: -4.570128440856934
    6. 'return' → logprob: -5.445128440856934
    7. ')' → logprob: -6.070128440856934
    8. '()
' → logprob: -6.070128440856934
    9. ' tokens' → logprob: -6.195128440856934
    10. ' return' → logprob: -6.320128440856934

Token 113: ' str' (ID: 989)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.082562804222107
    2. 'if' → logprob: -1.332562804222107
    3. 'parts' → logprob: -1.457562804222107
    4. 'tokens' → logprob: -2.4575629234313965
    5. 'a' → logprob: -3.5825629234313965
    6. 'values' → logprob: -3.7075629234313965
    7. ' parts' → logprob: -5.0825629234313965
    8. 'data' → logprob: -6.0825629234313965
    9. 'params' → logprob: -6.0825629234313965
    10. ' return' → logprob: -6.3325629234313965

Token 114: '_a' (ID: 10852)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05046043172478676
    2. 'ings' → logprob: -3.1754603385925293
    3. 'ing' → logprob: -5.800460338592529
    4. 'ip' → logprob: -6.175460338592529
    5. '_tokens' → logprob: -7.175460338592529
    6. 'ips' → logprob: -8.175460815429688
    7. 'ipped' → logprob: -8.425460815429688
    8. '_parts' → logprob: -8.550460815429688
    9. '_arr' → logprob: -9.050460815429688
    10. '_values' → logprob: -9.050460815429688

Token 115: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12783288955688477
    2. 's' → logprob: -2.6278328895568848
    3. '=' → logprob: -3.6278328895568848
    4. ',' → logprob: -3.8778328895568848
    5. '_a' → logprob: -8.877832412719727
    6. 'a' → logprob: -9.627832412719727
    7. ' ' → logprob: -10.127832412719727
    8. '_parts' → logprob: -10.252832412719727
    9. ' ,' → logprob: -10.377832412719727
    10. ',a' → logprob: -10.502832412719727

Token 116: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0011508172610774636
    2. ' str' → logprob: -6.876150608062744
    3. ' ' → logprob: -9.376151084899902
    4. 'space' → logprob: -11.376151084899902
    5. '_str' → logprob: -11.376151084899902
    6. '	str' → logprob: -12.876151084899902
    7. '<|end|>' → logprob: -13.126151084899902
    8. '=str' → logprob: -13.376151084899902
    9. 'rest' → logprob: -14.001151084899902
    10. '_' → logprob: -14.251151084899902

Token 117: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00032831361750140786
    2. '_' → logprob: -8.125328063964844
    3. 'b' → logprob: -10.625328063964844
    4. '_a' → logprob: -13.375328063964844
    5. '_=' → logprob: -13.625328063964844
    6. '=' → logprob: -13.750328063964844
    7. '_input' → logprob: -14.250328063964844
    8. '_,' → logprob: -14.625328063964844
    9. '_line' → logprob: -14.750328063964844
    10. '_val' → logprob: -14.750328063964844

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868747651576996
    2. '=' → logprob: -1.136874794960022
    3. ',' → logprob: -12.63687515258789
    4. ' ' → logprob: -16.01187515258789
    5. '=line' → logprob: -16.38687515258789
    6. ')' → logprob: -16.76187515258789
    7. 's' → logprob: -17.01187515258789
    8. '_' → logprob: -17.38687515258789
    9. ' ,' → logprob: -17.76187515258789
    10. '＝' → logprob: -17.76187515258789

Token 119: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.008614926598966122
    2. 'line' → logprob: -4.758615016937256
    3. '	line' → logprob: -15.383614540100098
    4. '(line' → logprob: -16.758615493774414
    5. '[line' → logprob: -17.383615493774414
    6. '=line' → logprob: -17.633615493774414
    7. '#line' → logprob: -19.133615493774414
    8. '_line' → logprob: -20.008615493774414
    9. ' ' → logprob: -20.133615493774414
    10. 'Line' → logprob: -20.883615493774414

Token 120: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.25236737728118896
    2. '.' → logprob: -1.502367377281189
    3. ' .' → logprob: -8.12736701965332
    4. '.strip' → logprob: -9.12736701965332
    5. 'split' → logprob: -10.87736701965332
    6. ' split' → logprob: -12.37736701965332
    7. '().' → logprob: -12.87736701965332
    8. '.s' → logprob: -13.37736701965332
    9. '.rstrip' → logprob: -13.37736701965332
    10. ' =' → logprob: -13.87736701965332

Token 121: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.47662246227264404
    2. '()' → logprob: -0.976622462272644
    3. '(' → logprob: -6.226622581481934
    4. '("' → logprob: -7.851622581481934
    5. '("("' → logprob: -9.226622581481934
    6. '(',' → logprob: -9.601622581481934
    7. '('.')' → logprob: -12.976622581481934
    8. '(None' → logprob: -13.226622581481934
    9. ''' → logprob: -13.601622581481934
    10. '()='' → logprob: -13.976622581481934

Token 122: ' ')
' (ID: 49195)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11164849251508713
    2. ' ')' → logprob: -2.9866485595703125
    3. '('' → logprob: -3.9866485595703125
    4. ' ' → logprob: -4.3616485595703125
    5. ')' → logprob: -4.4866485595703125
    6. '')' → logprob: -4.9866485595703125
    7. '(' → logprob: -6.2366485595703125
    8. ' )' → logprob: -6.2366485595703125
    9. ''' → logprob: -6.8616485595703125
    10. '())' → logprob: -8.861648559570312

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03904135525226593
    2. '<|end|>' → logprob: -3.91404128074646
    3. 'a' → logprob: -4.539041519165039
    4. ',' → logprob: -5.914041519165039
    5. '    
' → logprob: -6.289041519165039
    6. 'return' → logprob: -7.164041519165039
    7. ' ' → logprob: -7.289041519165039
    8. ')' → logprob: -7.414041519165039
    9. '  ' → logprob: -8.539041519165039
    10. '
' → logprob: -8.664041519165039

Token 124: ' return' (ID: 622)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00019126241386402398
    2. 'return' (adapté à ' return') → logprob: -8.625191688537598
    3. 'print' → logprob: -12.375191688537598
    4. ' a' → logprob: -12.375191688537598
    5. '   ' → logprob: -13.125191688537598
    6. 'try' → logprob: -15.250191688537598
    7. '    
' → logprob: -15.500191688537598
    8. 'int' → logprob: -16.00019073486328
    9. '```' → logprob: -16.00019073486328
    10. 'b' → logprob: -16.50019073486328

Token 125: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.002485050121322274
    2. ' int' → logprob: -6.002485275268555
    3. '(int' → logprob: -11.627485275268555
    4. '[int' → logprob: -15.002485275268555
    5. '  ' → logprob: -16.377485275268555
    6. '   ' → logprob: -17.502485275268555
    7. '<int' → logprob: -18.752485275268555
    8. ',int' → logprob: -19.002485275268555
    9. ' ' → logprob: -19.127485275268555
    10. '	int' → logprob: -19.502485275268555

Token 126: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.01833723485469818
    2. '(' → logprob: -4.018337249755859
    3. 'str' → logprob: -8.76833724975586
    4. ' str' → logprob: -10.64333724975586
    5. ' (' → logprob: -12.76833724975586
    6. '(s' → logprob: -13.26833724975586
    7. '	str' → logprob: -13.64333724975586
    8. ' ' → logprob: -14.76833724975586
    9. '_str' → logprob: -15.14333724975586
    10. 's' → logprob: -15.26833724975586

Token 127: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -4.723352049040841e-06
    2. '_b' → logprob: -12.375004768371582
    3. 'a' → logprob: -15.500004768371582
    4. '_' → logprob: -15.875004768371582
    5. ')_' → logprob: -16.750003814697266
    6. ' _' → logprob: -16.875003814697266
    7. ')' → logprob: -17.000003814697266
    8. '_)' → logprob: -18.000003814697266
    9. '_x' → logprob: -19.375003814697266
    10. '_c' → logprob: -19.500003814697266

Token 128: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004790141712874174
    2. ',' → logprob: -5.879790306091309
    3. ')' → logprob: -6.254790306091309
    4. ' ),' → logprob: -9.879790306091309
    5. '),(' → logprob: -12.254790306091309
    6. ' ,' → logprob: -12.879790306091309
    7. ' ' → logprob: -13.129790306091309
    8. ',),' → logprob: -14.129790306091309
    9. '},' → logprob: -15.754790306091309
    10. '`,' → logprob: -15.879790306091309

Token 129: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0040785204619169235
    2. ' int' → logprob: -5.504078388214111
    3. '<int' → logprob: -18.004077911376953
    4. '[int' → logprob: -18.004077911376953
    5. '(int' → logprob: -18.254077911376953
    6. '	int' → logprob: -19.254077911376953
    7. ' ' → logprob: -20.379077911376953
    8. '=int' → logprob: -20.754077911376953
    9. '   ' → logprob: -21.379077911376953
    10. ':int' → logprob: -21.504077911376953

Token 130: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.02975454181432724
    2. 'str' → logprob: -3.529754638671875
    3. '	str' → logprob: -13.279754638671875
    4. '[str' → logprob: -13.779754638671875
    5. '(' → logprob: -14.904754638671875
    6. '_str' → logprob: -15.279754638671875
    7. ' str' → logprob: -15.279754638671875
    8. ':str' → logprob: -15.904754638671875
    9. '$str' → logprob: -15.904754638671875
    10. 's' → logprob: -16.279754638671875

Token 131: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -6.704273118884885e-07
    2. '_a' → logprob: -14.375000953674316
    3. '_B' → logprob: -19.0
    4. ')' → logprob: -19.875
    5. '_' → logprob: -19.875
    6. 'b' → logprob: -20.5
    7. '_c' → logprob: -21.125
    8. ' _' → logprob: -21.125
    9. 'a' → logprob: -21.375
    10. '__' → logprob: -21.5

Token 132: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -13.375001907348633
    3. '<|end|>' → logprob: -16.375001907348633
    4. ' )' → logprob: -16.875001907348633
    5. '),' → logprob: -17.750001907348633
    6. ')return' → logprob: -17.875001907348633
    7. ')

' → logprob: -18.375001907348633
    8. '}' → logprob: -18.625001907348633
    9. '))' → logprob: -18.875001907348633
    10. ')}}' → logprob: -19.000001907348633

Token 133: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9414247870445251
    2. 'if' → logprob: -1.19142484664917
    3. 'for' → logprob: -2.06642484664917
    4. 'a' → logprob: -2.19142484664917
    5. 'while' → logprob: -3.06642484664917
    6. 'n' → logprob: -4.81642484664917
    7. 'print' → logprob: -4.81642484664917
    8. 'line' → logprob: -5.81642484664917
    9. 'num' → logprob: -6.94142484664917
    10. 'result' → logprob: -7.69142484664917

Token 134: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.005237075500190258
    2. 'main' → logprob: -5.255237102508545
    3. ' solve' → logprob: -13.505236625671387
    4. ' process' → logprob: -13.755236625671387
    5. '	main' → logprob: -15.380236625671387
    6. ' solution' → logprob: -15.505236625671387
    7. ' ' → logprob: -15.880236625671387
    8. 'solve' → logprob: -16.505237579345703
    9. ' run' → logprob: -16.755237579345703
    10. 'process' → logprob: -16.880237579345703

Token 135: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.2729995988775045e-06
    2. ' ():' → logprob: -12.875006675720215
    3. '():
' → logprob: -13.500006675720215
    4. '(' → logprob: -13.625006675720215
    5. '()' → logprob: -13.750006675720215
    6. '():
' → logprob: -17.3750057220459
    7. '(":' → logprob: -17.8750057220459
    8. '(:' → logprob: -18.2500057220459
    9. ':' → logprob: -18.5000057220459
    10. '()>' → logprob: -18.7500057220459

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004499785136431456
    2. 'a' → logprob: -5.754499912261963
    3. ' a' → logprob: -7.254499912261963
    4. ' while' → logprob: -7.879499912261963
    5. 'while' → logprob: -8.504499435424805
    6. 'import' → logprob: -10.504499435424805
    7. 'try' → logprob: -13.754499435424805
    8. '    
' → logprob: -14.129499435424805
    9. '    ' → logprob: -14.379499435424805
    10. ' for' → logprob: -14.504499435424805

Token 137: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.1283639669418335
    2. ' a' → logprob: -2.128364086151123
    3. 'while' → logprob: -7.128364086151123
    4. ' while' → logprob: -7.753364086151123
    5. '   ' → logprob: -8.628363609313965
    6. 'import' → logprob: -12.003363609313965
    7. 'try' → logprob: -12.128363609313965
    8. '	a' → logprob: -12.628363609313965
    9. ' ' → logprob: -12.878363609313965
    10. '    
' → logprob: -13.753363609313965

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001370320824207738
    2. ',b' → logprob: -9.000137329101562
    3. ' ,' → logprob: -11.250137329101562
    4. ',a' → logprob: -15.125137329101562
    5. 'b' → logprob: -16.500137329101562
    6. 'a' → logprob: -16.500137329101562
    7. ' ' → logprob: -16.875137329101562
    8. ' b' → logprob: -17.625137329101562
    9. '_,' → logprob: -18.000137329101562
    10. ' =' → logprob: -18.125137329101562

Token 139: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04859054833650589
    2. ' b' → logprob: -3.048590660095215
    3. '<|end|>' → logprob: -12.673590660095215
    4. ' ' → logprob: -16.7985897064209
    5. 'read' → logprob: -17.0485897064209
    6. '_b' → logprob: -17.9235897064209
    7. ' read' → logprob: -18.4235897064209
    8. '  ' → logprob: -18.7985897064209
    9. ' =' → logprob: -19.4235897064209
    10. '    ' → logprob: -19.4235897064209

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007606151048094034
    2. '=' → logprob: -4.882606029510498
    3. ',' → logprob: -17.632606506347656
    4. ' ' → logprob: -18.007606506347656
    5. '<|end|>' → logprob: -18.382606506347656
    6. '＝' → logprob: -18.507606506347656
    7. ')' → logprob: -18.507606506347656
    8. ' =)' → logprob: -18.757606506347656
    9. ' =
' → logprob: -19.507606506347656
    10. '  ' → logprob: -19.632606506347656

Token 141: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.47407710552215576
    2. 'read' → logprob: -0.9740771055221558
    3. '	read' → logprob: -16.599077224731445
    4. '(read' → logprob: -19.474077224731445
    5. '_read' → logprob: -20.724077224731445
    6. '   ' → logprob: -20.849077224731445
    7. ' readline' → logprob: -21.349077224731445
    8. ' ' → logprob: -21.474077224731445
    9. '  ' → logprob: -21.724077224731445
    10. '.read' → logprob: -21.849077224731445

Token 142: 'Question' (ID: 15143)
  Prédit: 'Question'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Question' → logprob: -6.704273118884885e-07
    2. 'Answer' → logprob: -15.125000953674316
    3. 'Q' → logprob: -16.0
    4. 'Questions' → logprob: -16.25
    5. '_question' → logprob: -17.125
    6. '<Question' → logprob: -17.375
    7. '(' → logprob: -18.125
    8. 'Input' → logprob: -18.625
    9. '.Question' → logprob: -18.75
    10. ' Question' → logprob: -18.75

Token 143: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.38236504793167114
    2. '()
' → logprob: -1.5073649883270264
    3. '()' → logprob: -2.7573649883270264
    4. '<|end|>' → logprob: -4.1323652267456055
    5. '   ' → logprob: -5.1323652267456055
    6. '<|end|>' → logprob: -5.5073652267456055
    7. '(
' → logprob: -6.8823652267456055
    8. ')' → logprob: -6.8823652267456055
    9. '    
' → logprob: -7.1323652267456055
    10. 'def' → logprob: -7.3823652267456055

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38130566477775574
    2. 'print' → logprob: -1.8813056945800781
    3. 'result' → logprob: -2.256305694580078
    4. ' result' → logprob: -3.006305694580078
    5. ' print' → logprob: -4.631305694580078
    6. '    
' → logprob: -7.506305694580078
    7. 'res' → logprob: -10.881305694580078
    8. 'output' → logprob: -11.006305694580078
    9. ' res' → logprob: -11.131305694580078
    10. 'c' → logprob: -11.381305694580078

Token 145: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16183944046497345
    2. 'result' → logprob: -1.911839485168457
    3. 'answer' (adapté à ' answer') → logprob: -7.161839485168457
    4. ' result' → logprob: -7.911839485168457
    5. ' print' → logprob: -8.036839485168457
    6. 'res' → logprob: -9.161839485168457
    7. 'ans' → logprob: -10.411839485168457
    8. 'output' → logprob: -12.286839485168457
    9. ' answer' → logprob: -12.911839485168457
    10. 'value' → logprob: -13.286839485168457

Token 146: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07004502415657043
    2. '=' → logprob: -2.695044994354248
    3. '(' → logprob: -9.570045471191406
    4. '()' → logprob: -10.945045471191406
    5. ' ' → logprob: -12.070045471191406
    6. ')' → logprob: -12.445045471191406
    7. '   ' → logprob: -12.945045471191406
    8. ':' → logprob: -13.070045471191406
    9. '_' → logprob: -13.695045471191406
    10. '  ' → logprob: -13.820045471191406

Token 147: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.31326770782470703
    2. ' solve' → logprob: -1.313267707824707
    3. '   ' → logprob: -12.438267707824707
    4. ' ' → logprob: -14.188267707824707
    5. '.solve' → logprob: -14.688267707824707
    6. ' ' → logprob: -15.438267707824707
    7. 'sol' → logprob: -15.438267707824707
    8. '  ' → logprob: -15.938267707824707
    9. '```' → logprob: -16.81326675415039
    10. 'solver' → logprob: -17.18826675415039

Token 148: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0007111206650733948
    2. '(' → logprob: -7.250710964202881
    3. ' (' → logprob: -14.125711441040039
    4. '(
' → logprob: -15.750711441040039
    5. '((' → logprob: -16.50071144104004
    6. '(A' → logprob: -17.25071144104004
    7. '```' → logprob: -17.87571144104004
    8. '(ai' → logprob: -18.50071144104004
    9. '(

' → logprob: -19.00071144104004
    10. ' ' → logprob: -19.37571144104004

Token 149: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027456742827780545
    2. ',b' → logprob: -8.250274658203125
    3. ' ,' → logprob: -11.250274658203125
    4. ',
' → logprob: -16.625274658203125
    5. 'b' → logprob: -17.250274658203125
    6. ',a' → logprob: -18.000274658203125
    7. '‌,' → logprob: -18.250274658203125
    8. ' ' → logprob: -18.375274658203125
    9. 'a' → logprob: -18.375274658203125
    10. ')' → logprob: -18.625274658203125

Token 150: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759395360946655
    2. 'b' → logprob: -0.8259395360946655
    3. ')b' → logprob: -16.325939178466797
    4. ' ' → logprob: -16.825939178466797
    5. ')' → logprob: -17.200939178466797
    6. '	b' → logprob: -18.325939178466797
    7. ' ' → logprob: -18.450939178466797
    8. '    ' → logprob: -19.325939178466797
    9. ' б' → logprob: -19.575939178466797
    10. '   ' → logprob: -19.950939178466797

Token 151: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3868935704231262
    2. ')' → logprob: -1.1368935108184814
    3. ')
' → logprob: -10.761893272399902
    4. ')

' → logprob: -13.886893272399902
    5. ' )
' → logprob: -15.261893272399902
    6. '   ' → logprob: -16.01189422607422
    7. ' )' → logprob: -17.38689422607422
    8. ')`
' → logprob: -18.13689422607422
    9. '),' → logprob: -18.38689422607422
    10. ')return' → logprob: -19.63689422607422

Token 152: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1272323578596115
    2. 'print' → logprob: -2.127232313156128
    3. ' print' → logprob: -8.127232551574707
    4. '
' → logprob: -12.377232551574707
    5. '```' → logprob: -13.002232551574707
    6. '    
' → logprob: -13.502232551574707
    7. '	print' → logprob: -13.877232551574707
    8. '.print' → logprob: -17.00223159790039
    9. '#print' → logprob: -17.37723159790039
    10. '_print' → logprob: -17.62723159790039

Token 153: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.1994775377388578e-05
    2. ' print' → logprob: -11.500012397766113
    3. '   ' → logprob: -13.250012397766113
    4. '```' → logprob: -17.625011444091797
    5. 'sys' → logprob: -19.000011444091797
    6. '
' → logprob: -19.000011444091797
    7. '	print' → logprob: -20.125011444091797
    8. '#print' → logprob: -21.875011444091797
    9. '.print' → logprob: -22.250011444091797
    10. 'printf' → logprob: -22.375011444091797

Token 154: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.0052360063418745995
    2. '(' → logprob: -5.2552361488342285
    3. '()' → logprob: -14.00523567199707
    4. '(f' → logprob: -14.38023567199707
    5. '(ans' → logprob: -14.50523567199707
    6. ' (' → logprob: -16.13023567199707
    7. '('' → logprob: -16.50523567199707
    8. 'answer' → logprob: -17.00523567199707
    9. '(question' → logprob: -18.00523567199707
    10. '(
' → logprob: -18.00523567199707

Token 155: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -16.0
    3. ')
' → logprob: -16.125
    4. '()' → logprob: -16.375
    5. ')`' → logprob: -17.75
    6. '())' → logprob: -18.25
    7. '))' → logprob: -18.5
    8. '')' → logprob: -18.625
    9. '(' → logprob: -18.75
    10. '`)' → logprob: -19.625

Token 156: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004589026793837547
    2. '
' → logprob: -5.504589080810547
    3. '\n' → logprob: -7.754589080810547
    4. '<|end|>' → logprob: -10.254589080810547
    5. '```' → logprob: -10.879589080810547
    6. ' if' → logprob: -11.254589080810547
    7. '  
' → logprob: -12.379589080810547
    8. '#' → logprob: -13.004589080810547
    9. '\' → logprob: -13.004589080810547
    10. '    
' → logprob: -13.379589080810547

Token 157: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.006847269367426634
    2. '__' → logprob: -5.006847381591797
    3. ' ' → logprob: -9.506847381591797
    4. '_' → logprob: -9.881847381591797
    5. ' ' → logprob: -13.006847381591797
    6. '_name' → logprob: -13.381847381591797
    7. ' _' → logprob: -14.006847381591797
    8. ' ' → logprob: -14.881847381591797
    9. ' ___' → logprob: -15.256847381591797
    10. ' name' → logprob: -15.631847381591797

Token 158: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.38976770639419556
    2. '__' → logprob: -1.1397676467895508
    3. ' ==' → logprob: -5.889767646789551
    4. '.__' → logprob: -10.38976764678955
    5. '_' → logprob: -10.88976764678955
    6. '==' → logprob: -11.26476764678955
    7. ' .' → logprob: -11.51476764678955
    8. ' ' → logprob: -11.51476764678955
    9. ' _' → logprob: -11.88976764678955
    10. '```' → logprob: -12.13976764678955

Token 159: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.5120287066092715e-05
    2. '==' → logprob: -10.375035285949707
    3. '__.__' → logprob: -13.750035285949707
    4. ' ==' → logprob: -14.000035285949707
    5. '_' → logprob: -14.250035285949707
    6. '___' → logprob: -14.375035285949707
    7. '=="' → logprob: -15.500035285949707
    8. '____' → logprob: -15.750035285949707
    9. '=='' → logprob: -16.50003433227539
    10. '__('' → logprob: -16.50003433227539

Token 160: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1278451681137085
    2. '==' → logprob: -2.377845287322998
    3. '__' → logprob: -3.627845287322998
    4. '=="' → logprob: -7.377845287322998
    5. ' =="' → logprob: -11.00284481048584
    6. '=='' → logprob: -11.12784481048584
    7. '.__' → logprob: -11.87784481048584
    8. '=' → logprob: -12.62784481048584
    9. '.' → logprob: -12.62784481048584
    10. ' ' → logprob: -12.87784481048584

Token 161: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.029816336929798126
    2. ''' → logprob: -3.5298163890838623
    3. ' "__' → logprob: -9.779816627502441
    4. '__' → logprob: -11.779816627502441
    5. ' '__' → logprob: -14.029816627502441
    6. ' "' → logprob: -15.279816627502441
    7. '"user' → logprob: -15.404816627502441
    8. '"_' → logprob: -15.529816627502441
    9. '"name' → logprob: -17.154815673828125
    10. ''"' → logprob: -17.529815673828125

Token 162: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -2.339278580620885e-06
    2. 'name' → logprob: -13.000001907348633
    3. 'm' → logprob: -17.875001907348633
    4. '_main' → logprob: -18.000001907348633
    5. '__' → logprob: -18.625001907348633
    6. ' main' → logprob: -19.125001907348633
    7. 'ma' → logprob: -19.375001907348633
    8. '-main' → logprob: -21.000001907348633
    9. '	main' → logprob: -21.875001907348633
    10. '__':
' → logprob: -22.750001907348633

Token 163: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.10022855550050735
    2. '__' → logprob: -2.3502285480499268
    3. '__:' → logprob: -11.225228309631348
    4. '__":
' → logprob: -12.100228309631348
    5. '':' → logprob: -13.100228309631348
    6. '_' → logprob: -14.100228309631348
    7. '___' → logprob: -16.225229263305664
    8. '__('' → logprob: -17.600229263305664
    9. '__.' → logprob: -17.850229263305664
    10. '':
' → logprob: -17.975229263305664

Token 164: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.6939576268196106
    2. 'main' → logprob: -0.6939576268196106
    3. '	main' → logprob: -7.318957805633545
    4. '   ' → logprob: -8.943957328796387
    5. '_main' → logprob: -12.318957328796387
    6. ' ' → logprob: -12.318957328796387
    7. '    
' → logprob: -12.943957328796387
    8. ' ' → logprob: -13.443957328796387
    9. ' 
' → logprob: -13.943957328796387
    10. '  ' → logprob: -14.068957328796387

Token 165: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.69316166639328
    2. 'main' (adapté à ' main') → logprob: -0.69316166639328
    3. '	main' → logprob: -11.193161964416504
    4. '   ' → logprob: -14.568161964416504
    5. '_main' → logprob: -16.068161010742188
    6. ' ' → logprob: -17.818161010742188
    7. '.main' → logprob: -18.068161010742188
    8. '(main' → logprob: -18.193161010742188
    9. ' ' → logprob: -18.818161010742188
    10. 'Main' → logprob: -18.943161010742188

Token 166: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 76
Tokens correctement prédits (1ère position, avec adaptation): 80
Tokens correctement prédits (top 10): 131
Précision stricte (1ère position): 46.34%
Précision adaptée (1ère position): 48.78%
Précision (top 10): 79.88%
================================================================================
