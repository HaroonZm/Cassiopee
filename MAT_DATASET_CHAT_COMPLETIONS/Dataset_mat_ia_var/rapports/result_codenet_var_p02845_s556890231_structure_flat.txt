================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:01
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

N = int(sys.stdin.readline().rstrip())
A = list(map(int, sys.stdin.readline().rstrip().split()))
hat = [0, 0, 0]
MOD = 10 ** 9 + 7
answer = 1
for i in range(N):
    cnt = 0
    for h in hat:
        if h == A[i]:
            cnt += 1
    if cnt == 0:
        answer = 0
    else:
        answer *= cnt
        for j in range(3):
            if hat[j] == A[i]:
                hat[j] += 1
                break
        answer %= MOD

print(answer % MOD)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.19751352071762085
    2. ' =' → logprob: -2.0725135803222656
    3. ' ' → logprob: -3.3225135803222656
    4. '.' → logprob: -4.947513580322266
    5. '_' → logprob: -5.572513580322266
    6. ',' → logprob: -6.197513580322266
    7. ')' → logprob: -6.447513580322266
    8. '  ' → logprob: -7.072513580322266
    9. 'u' → logprob: -8.072513580322266
    10. '   ' → logprob: -8.072513580322266

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0865667387843132
    2. ' ' → logprob: -2.586566686630249
    3. 'int' → logprob: -4.961566925048828
    4. '10' → logprob: -7.836566925048828
    5. ' input' → logprob: -8.961566925048828
    6. '20' → logprob: -10.336566925048828
    7. '5' → logprob: -10.461566925048828
    8. '32' → logprob: -11.711566925048828
    9. ' len' → logprob: -11.836566925048828
    10. '=int' → logprob: -11.961566925048828

Token 6: '(sys' (ID: 41042)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.492120155598968e-05
    2. '```' → logprob: -11.000064849853516
    3. '('' → logprob: -11.625064849853516
    4. ' (' → logprob: -11.750064849853516
    5. '`' → logprob: -11.875064849853516
    6. '(sys' → logprob: -12.250064849853516
    7. '("("' → logprob: -12.750064849853516
    8. ''' → logprob: -12.750064849853516
    9. '(**' → logprob: -13.000064849853516
    10. '(
' → logprob: -13.000064849853516

Token 7: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00036084887688048184
    2. '.)' → logprob: -8.750360488891602
    3. '.readline' → logprob: -9.750360488891602
    4. '.argv' → logprob: -9.875360488891602
    5. '.stdin' → logprob: -10.125360488891602
    6. '.")' → logprob: -10.625360488891602
    7. '.')' → logprob: -11.375360488891602
    8. ')' → logprob: -12.375360488891602
    9. '.read' → logprob: -13.250360488891602
    10. '.​' → logprob: -13.750360488891602

Token 8: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.09006857872009277
    2. '.' → logprob: -2.8400685787200928
    3. '.read' → logprob: -3.5900685787200928
    4. '.)' → logprob: -9.465068817138672
    5. '.Read' → logprob: -11.715068817138672
    6. '.readlines' → logprob: -11.715068817138672
    7. ' .' → logprob: -12.590068817138672
    8. '.READ' → logprob: -12.840068817138672
    9. ')' → logprob: -12.965068817138672
    10. '.
' → logprob: -13.340068817138672

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2559667229652405
    2. ')' → logprob: -1.8809666633605957
    3. '()' → logprob: -2.6309666633605957
    4. '().' → logprob: -7.505966663360596
    5. '(' → logprob: -8.130967140197754
    6. '()[' → logprob: -8.880967140197754
    7. '()))' → logprob: -9.005967140197754
    8. '))' → logprob: -9.255967140197754
    9. ' ())' → logprob: -9.630967140197754
    10. '[' → logprob: -10.130967140197754

Token 10: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.029477249830961227
    2. ')' → logprob: -3.65447735786438
    3. 'rstrip' → logprob: -5.779477119445801
    4. 'read' → logprob: -10.4044771194458
    5. 'split' → logprob: -10.5294771194458
    6. ' strip' → logprob: -11.6544771194458
    7. '())' → logprob: -12.1544771194458
    8. '_strip' → logprob: -12.4044771194458
    9. '()' → logprob: -12.7794771194458
    10. '-strip' → logprob: -14.1544771194458

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03016604483127594
    2. '))' → logprob: -3.5301661491394043
    3. '())' → logprob: -7.905166149139404
    4. '()' → logprob: -10.530165672302246
    5. '()))' → logprob: -11.405165672302246
    6. '(' → logprob: -12.155165672302246
    7. ')
' → logprob: -13.905165672302246
    8. '`)' → logprob: -14.655165672302246
    9. ')))' → logprob: -14.905165672302246
    10. ')`' → logprob: -15.030165672302246

Token 12: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08884349465370178
    2. 'if' → logprob: -2.838843584060669
    3. 'a' → logprob: -5.46384334564209
    4. 'data' → logprob: -5.46384334564209
    5. 'print' → logprob: -5.71384334564209
    6. ' for' → logprob: -5.83884334564209
    7. ')' → logprob: -5.96384334564209
    8. '\n' → logprob: -6.33884334564209
    9. 'x' → logprob: -6.83884334564209
    10. '#' → logprob: -6.96384334564209

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014883243478834629
    2. ' =' → logprob: -4.889883041381836
    3. '.' → logprob: -5.639883041381836
    4. '=' → logprob: -6.514883041381836
    5. '[]' → logprob: -7.764883041381836
    6. '[i' → logprob: -7.889883041381836
    7. '_' → logprob: -8.514883041381836
    8. ')' → logprob: -8.764883041381836
    9. '[:]' → logprob: -8.764883041381836
    10. ',' → logprob: -9.014883041381836

Token 14: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.6470516324043274
    2. 'list' → logprob: -0.7720516324043274
    3. ' [' → logprob: -5.397051811218262
    4. ' []' → logprob: -5.522051811218262
    5. '[]' → logprob: -5.772051811218262
    6. '[list' → logprob: -6.772051811218262
    7. '[' → logprob: -7.022051811218262
    8. '[int' → logprob: -7.397051811218262
    9. ' ' → logprob: -11.147051811218262
    10. '[input' → logprob: -11.397051811218262

Token 15: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00013846253568772227
    2. '(range' → logprob: -9.625138282775879
    3. '(int' → logprob: -10.250138282775879
    4. '(map' → logprob: -11.250138282775879
    5. '(
' → logprob: -12.625138282775879
    6. '(A' → logprob: -13.125138282775879
    7. '(input' → logprob: -13.125138282775879
    8. '()' → logprob: -13.375138282775879
    9. '(

' → logprob: -13.375138282775879
    10. '(`' → logprob: -13.625138282775879

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005382929928600788
    2. '(' → logprob: -5.255383014678955
    3. '(lambda' → logprob: -9.505382537841797
    4. '(str' → logprob: -10.505382537841797
    5. 'int' → logprob: -10.880382537841797
    6. '<int' → logprob: -11.255382537841797
    7. '=int' → logprob: -12.130382537841797
    8. '[int' → logprob: -12.880382537841797
    9. '(
' → logprob: -13.005382537841797
    10. 'list' → logprob: -13.755382537841797

Token 17: ',' (ID: 11)
  Prédit: '(sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.04810703173279762
    2. '(' → logprob: -3.423107147216797
    3. ',' → logprob: -4.298107147216797
    4. ' ,' → logprob: -8.798107147216797
    5. '=sys' → logprob: -8.798107147216797
    6. '(input' → logprob: -9.673107147216797
    7. '(),' → logprob: -9.673107147216797
    8. ')' → logprob: -9.798107147216797
    9. '(int' → logprob: -9.798107147216797
    10. ' (' → logprob: -10.048107147216797

Token 18: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0017250381642952561
    2. ' sys' → logprob: -6.376725196838379
    3. 'input' → logprob: -11.626725196838379
    4. '(sys' → logprob: -11.626725196838379
    5. '=sys' → logprob: -12.876725196838379
    6. '	sys' → logprob: -13.376725196838379
    7. ')' → logprob: -14.501725196838379
    8. '_sys' → logprob: -16.626724243164062
    9. '.sys' → logprob: -17.001724243164062
    10. '/sys' → logprob: -17.251724243164062

Token 19: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00019495772721711546
    2. '.' → logprob: -8.625194549560547
    3. '.stdout' → logprob: -12.250194549560547
    4. '.std' → logprob: -12.750194549560547
    5. '.st' → logprob: -12.750194549560547
    6. '.argv' → logprob: -13.250194549560547
    7. 'stdin' → logprob: -13.375194549560547
    8. '.readline' → logprob: -13.750194549560547
    9. '(stdin' → logprob: -16.375194549560547
    10. ' .' → logprob: -16.625194549560547

Token 20: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011930383741855621
    2. '.stdin' → logprob: -4.511930465698242
    3. '.' → logprob: -7.511930465698242
    4. '.read' → logprob: -8.261930465698242
    5. '.readlines' → logprob: -10.011930465698242
    6. '.stdout' → logprob: -10.886930465698242
    7. ' .' → logprob: -12.011930465698242
    8. '.argv' → logprob: -12.886930465698242
    9. '.strptime' → logprob: -14.511930465698242
    10. '.reader' → logprob: -14.636930465698242

Token 21: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -8.895480277715251e-06
    2. '()' → logprob: -12.250008583068848
    3. '.readline' → logprob: -13.250008583068848
    4. ' ().' → logprob: -13.375008583068848
    5. '.' → logprob: -15.000008583068848
    6. '(' → logprob: -15.875008583068848
    7. '().'' → logprob: -16.250009536743164
    8. ' .' → logprob: -17.500009536743164
    9. '('').' → logprob: -17.875009536743164
    10. '()).' → logprob: -18.000009536743164

Token 22: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -6.670925358776003e-05
    2. 'split' → logprob: -9.750066757202148
    3. 'strip' → logprob: -12.000066757202148
    4. 'read' → logprob: -13.125066757202148
    5. '.rstrip' → logprob: -15.750066757202148
    6. 'rs' → logprob: -16.37506675720215
    7. 'rst' → logprob: -18.62506675720215
    8. 'rl' → logprob: -19.00006675720215
    9. ')' → logprob: -19.50006675720215
    10. '```' → logprob: -20.75006675720215

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001382241171086207
    2. '()))' → logprob: -9.625138282775879
    3. '()' → logprob: -10.625138282775879
    4. '())' → logprob: -10.750138282775879
    5. ')' → logprob: -11.250138282775879
    6. '))' → logprob: -12.250138282775879
    7. '(' → logprob: -12.625138282775879
    8. ' ().' → logprob: -13.250138282775879
    9. '())))' → logprob: -13.375138282775879
    10. ')))' → logprob: -14.750138282775879

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7120533811976202e-05
    2. ' split' → logprob: -11.125017166137695
    3. 'strip' → logprob: -14.125017166137695
    4. '(split' → logprob: -14.250017166137695
    5. 's' → logprob: -14.625017166137695
    6. 'rstrip' → logprob: -15.125017166137695
    7. ')' → logprob: -15.500017166137695
    8. 'spl' → logprob: -17.000017166137695
    9. '.split' → logprob: -18.250017166137695
    10. ')s' → logprob: -18.875017166137695

Token 25: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.6074416041374207
    2. '())' → logprob: -0.9824416041374207
    3. '(' → logprob: -2.7324416637420654
    4. '()' → logprob: -4.857441425323486
    5. '('' → logprob: -5.732441425323486
    6. '))' → logprob: -6.107441425323486
    7. ')' → logprob: -6.232441425323486
    8. '()))
' → logprob: -8.232441902160645
    9. '("' → logprob: -9.482441902160645
    10. '(
' → logprob: -9.857441902160645

Token 26: 'hat' (ID: 13274)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9405550956726074
    2. 'a' → logprob: -2.1905550956726074
    3. 's' → logprob: -2.1905550956726074
    4. 'for' → logprob: -2.5655550956726074
    5. 'result' → logprob: -2.9405550956726074
    6. 'c' → logprob: -3.3155550956726074
    7. 'count' → logprob: -3.5655550956726074
    8. 'd' → logprob: -3.8155550956726074
    9. 'dp' → logprob: -4.065555095672607
    10. 'max' → logprob: -4.065555095672607

Token 27: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5280981659889221
    2. '_' → logprob: -1.9030981063842773
    3. ' =' → logprob: -2.7780981063842773
    4. ')' → logprob: -3.2780981063842773
    5. 'e' → logprob: -3.2780981063842773
    6. '[' → logprob: -3.4030981063842773
    7. '[]' → logprob: -4.153098106384277
    8. '()' → logprob: -4.903098106384277
    9. 'a' → logprob: -5.028098106384277
    10. '_s' → logprob: -5.028098106384277

Token 28: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3475184142589569
    2. '[' → logprob: -2.3475184440612793
    3. ' {}' → logprob: -2.4725184440612793
    4. '{}' → logprob: -2.5975184440612793
    5. ' []' → logprob: -3.4725184440612793
    6. '[]' → logprob: -5.347518444061279
    7. '[A' → logprob: -6.347518444061279
    8. ' ' → logprob: -7.847518444061279
    9. '[len' → logprob: -8.222517967224121
    10. 'A' → logprob: -8.847517967224121

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004199848044663668
    2. 'False' → logprob: -6.129199981689453
    3. ' ' → logprob: -7.254199981689453
    4. '-' → logprob: -8.004199981689453
    5. ']' → logprob: -8.129199981689453
    6. '1' → logprob: -8.504199981689453
    7. 'A' → logprob: -9.129199981689453
    8. 'int' → logprob: -9.504199981689453
    9. '[' → logprob: -9.629199981689453
    10. 'True' → logprob: -10.129199981689453

Token 30: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020205019041895866
    2. ']*' → logprob: -4.145205020904541
    3. ' for' → logprob: -6.145205020904541
    4. ',' → logprob: -7.395205020904541
    5. ']*(' → logprob: -7.395205020904541
    6. ' ]' → logprob: -8.145204544067383
    7. 'for' → logprob: -8.270204544067383
    8. ')]' → logprob: -8.770204544067383
    9. ')' → logprob: -10.020204544067383
    10. ']+' → logprob: -10.395204544067383

Token 31: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06467217206954956
    2. '1' → logprob: -3.3146722316741943
    3. ']' → logprob: -4.689671993255615
    4. ' ' → logprob: -4.814671993255615
    5. 'N' → logprob: -5.439671993255615
    6. 'A' → logprob: -6.314671993255615
    7. '2' → logprob: -7.564671993255615
    8. ']+' → logprob: -8.064672470092773
    9. '100' → logprob: -8.189672470092773
    10. '-' → logprob: -8.189672470092773

Token 32: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07895059883594513
    2. '1' → logprob: -2.9539506435394287
    3. 'N' → logprob: -4.45395040512085
    4. 'A' → logprob: -5.45395040512085
    5. ']' → logprob: -5.95395040512085
    6. '2' → logprob: -6.70395040512085
    7. ' ' → logprob: -6.95395040512085
    8. '-' → logprob: -7.45395040512085
    9. '3' → logprob: -7.70395040512085
    10. '4' → logprob: -8.453950881958008

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00326172704808414
    2. ']' → logprob: -6.253261566162109
    3. ' ,' → logprob: -6.753261566162109
    4. '0' → logprob: -9.62826156616211
    5. '1' → logprob: -10.25326156616211
    6. ' ]' → logprob: -10.75326156616211
    7. ')' → logprob: -11.37826156616211
    8. '])' → logprob: -11.62826156616211
    9. ',
' → logprob: -12.37826156616211
    10. ' ' → logprob: -12.50326156616211

Token 34: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008757920935750008
    2. ' ' → logprob: -5.258758068084717
    3. '1' → logprob: -6.133758068084717
    4. 'N' → logprob: -7.508758068084717
    5. ']' → logprob: -7.633758068084717
    6. 'A' → logprob: -9.883757591247559
    7. ' N' → logprob: -10.133757591247559
    8. '3' → logprob: -10.258757591247559
    9. 'len' → logprob: -10.258757591247559
    10. '2' → logprob: -10.883757591247559

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0020213089883327484
    2. '1' → logprob: -6.752021312713623
    3. ' ' → logprob: -8.127020835876465
    4. 'N' → logprob: -8.502020835876465
    5. ']' → logprob: -8.752020835876465
    6. 'A' → logprob: -10.252020835876465
    7. '3' → logprob: -10.252020835876465
    8. '2' → logprob: -10.564520835876465
    9. '4' → logprob: -11.752020835876465
    10. '-' → logprob: -11.814520835876465

Token 36: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3907252252101898
    2. ',' → logprob: -1.1407252550125122
    3. ')' → logprob: -5.890725135803223
    4. ' ]' → logprob: -7.140725135803223
    5. ')]' → logprob: -9.015725135803223
    6. '])' → logprob: -9.140725135803223
    7. ' ,' → logprob: -10.515725135803223
    8. '0' → logprob: -11.765725135803223
    9. ' )' → logprob: -12.265725135803223
    10. '1' → logprob: -12.390725135803223

Token 37: 'MOD' (ID: 52135)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0001963881659321487
    2. ' for' → logprob: -9.87519645690918
    3. '
' → logprob: -10.00019645690918
    4. '\n' → logprob: -10.00019645690918
    5. '```' → logprob: -10.12519645690918
    6. '' → logprob: -12.50019645690918
    7. 'A' → logprob: -13.50019645690918
    8. '[' → logprob: -13.87519645690918
    9. 'hat' → logprob: -13.87519645690918
    10. '0' → logprob: -14.12519645690918

Token 38: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8187939524650574
    2. '=' → logprob: -1.4437940120697021
    3. '_' → logprob: -1.9437940120697021
    4. ' ' → logprob: -2.068794012069702
    5. ')' → logprob: -3.693794012069702
    6. '<|end|>' → logprob: -4.693793773651123
    7. ' )' → logprob: -5.318793773651123
    8. ',' → logprob: -6.068793773651123
    9. '  ' → logprob: -6.068793773651123
    10. ' ,' → logprob: -6.318793773651123

Token 39: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.13091792166233063
    2. '10' → logprob: -2.130918025970459
    3. '998' → logprob: -5.630918025970459
    4. ' ' → logprob: -8.0059175491333
    5. '1' → logprob: -10.0059175491333
    6. '(' → logprob: -11.7559175491333
    7. '3' → logprob: -13.3809175491333
    8. '2' → logprob: -13.3809175491333
    9. '999' → logprob: -13.6309175491333
    10. '987' → logprob: -13.8809175491333

Token 40: '10' (ID: 702)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.06841006875038147
    2. '10' → logprob: -2.9434101581573486
    3. '998' → logprob: -4.3184099197387695
    4. '1' → logprob: -9.94340991973877
    5. ' ' → logprob: -10.81840991973877
    6. '(' → logprob: -11.19340991973877
    7. '3' → logprob: -11.44340991973877
    8. '2' → logprob: -12.56840991973877
    9. '999' → logprob: -12.81840991973877
    10. '7' → logprob: -12.81840991973877

Token 41: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.04933870583772659
    2. '**' → logprob: -3.0493388175964355
    3. '09' → logprob: -7.2993388175964355
    4. '```' → logprob: -10.299338340759277
    5. '7' → logprob: -11.174338340759277
    6. '6' → logprob: -12.174338340759277
    7. '000' → logprob: -12.799338340759277
    8. ' ' → logprob: -12.799338340759277
    9. '009' → logprob: -12.924338340759277
    10. '0' → logprob: -13.424338340759277

Token 42: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -4.127333340875339e-06
    2. '09' → logprob: -12.625003814697266
    3. '```' → logprob: -14.875003814697266
    4. '+' → logprob: -15.000003814697266
    5. ' ' → logprob: -16.875003814697266
    6. '９' → logprob: -17.875003814697266
    7. '10' → logprob: -18.125003814697266
    8. '**' → logprob: -18.375003814697266
    9. '   ' → logprob: -19.125003814697266
    10. '18' → logprob: -19.250003814697266

Token 43: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.935296834039036e-06
    2. '+' → logprob: -13.75000286102295
    3. '09' → logprob: -13.75000286102295
    4. '18' → logprob: -15.25000286102295
    5. '**' → logprob: -16.750003814697266
    6. '
' → logprob: -16.750003814697266
    7. ' ' → logprob: -16.875003814697266
    8. '10' → logprob: -16.875003814697266
    9. '```' → logprob: -16.875003814697266
    10. '8' → logprob: -16.875003814697266

Token 44: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005480298423208296
    2. ' +' → logprob: -7.875547885894775
    3. '7' → logprob: -8.750548362731934
    4. '+
' → logprob: -12.000548362731934
    5. '＋' → logprob: -13.375548362731934
    6. '+

' → logprob: -14.500548362731934
    7. '9' → logprob: -14.750548362731934
    8. '+</' → logprob: -15.250548362731934
    9. ' +
' → logprob: -15.500548362731934
    10. ' ' → logprob: -15.875548362731934

Token 45: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '+' → logprob: -17.625
    4. '07' → logprob: -17.875
    5. '７' → logprob: -18.375
    6. '```' → logprob: -18.375
    7. '9' → logprob: -19.0
    8. '   ' → logprob: -19.25
    9. ' ' → logprob: -20.375
    10. '

' → logprob: -20.4375

Token 46: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -17.5
    3. '+' → logprob: -18.375
    4. '７' → logprob: -18.75
    5. '```' → logprob: -19.0
    6. '07' → logprob: -19.125
    7. '   ' → logprob: -20.0
    8. '9' → logprob: -20.5
    9. '

' → logprob: -20.6875
    10. ' ' → logprob: -20.9375

Token 47: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08374658972024918
    2. 'for' → logprob: -2.8337466716766357
    3. '\n' → logprob: -4.583746433258057
    4. '
' → logprob: -4.833746433258057
    5. '' → logprob: -6.458746433258057
    6. ' for' → logprob: -7.333746433258057
    7. '

' → logprob: -8.083746910095215
    8. '<|end|>' → logprob: -8.333746910095215
    9. ' 
' → logprob: -8.708746910095215
    10. '```' → logprob: -9.083746910095215

Token 48: 'answer' (ID: 17021)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049454327672719955
    2. '
' → logprob: -3.2994542121887207
    3. '\n' → logprob: -4.924454212188721
    4. ' for' → logprob: -5.924454212188721
    5. '\' → logprob: -8.049454689025879
    6. '' → logprob: -8.174454689025879
    7. 'if' → logprob: -8.549454689025879
    8. '```' → logprob: -8.674454689025879
    9. '[' → logprob: -8.924454689025879
    10. '
' → logprob: -9.674454689025879

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028005395084619522
    2. '=' → logprob: -3.653005361557007
    3. ' ' → logprob: -6.903005599975586
    4. ' +=' → logprob: -7.528005599975586
    5. '_' → logprob: -8.903005599975586
    6. ' =
' → logprob: -12.778005599975586
    7. '.' → logprob: -12.903005599975586
    8. '+=' → logprob: -12.903005599975586
    9. '1' → logprob: -13.153005599975586
    10. '_space' → logprob: -13.278005599975586

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04908120632171631
    2. '0' → logprob: -3.049081325531006
    3. ' ' → logprob: -7.674081325531006
    4. 'hat' → logprob: -11.674080848693848
    5. '[' → logprob: -12.049080848693848
    6. 'pow' → logprob: -12.424080848693848
    7. '(' → logprob: -13.174080848693848
    8. '3' → logprob: -13.549080848693848
    9. 'A' → logprob: -13.674080848693848
    10. ' hat' → logprob: -13.799080848693848

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003256973112002015
    2. '0' → logprob: -5.753256797790527
    3. 'pow' → logprob: -10.503256797790527
    4. '[' → logprob: -10.878256797790527
    5. 'hat' → logprob: -11.628256797790527
    6. 'A' → logprob: -11.628256797790527
    7. '```' → logprob: -12.753256797790527
    8. '(' → logprob: -13.003256797790527
    9. '3' → logprob: -13.003256797790527
    10. '[A' → logprob: -13.503256797790527

Token 52: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3407704830169678
    2. '
' → logprob: -2.0907704830169678
    3. '\n' → logprob: -2.3407704830169678
    4. ' for' → logprob: -2.9657704830169678
    5. '' → logprob: -4.715770721435547
    6. '```' → logprob: -5.590770721435547
    7. '<|end|>' → logprob: -6.215770721435547
    8. ' 
' → logprob: -6.965770721435547
    9. '\' → logprob: -6.965770721435547
    10. '
' → logprob: -8.215770721435547

Token 53: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00019007037917617708
    2. ' for' → logprob: -9.125189781188965
    3. '```' → logprob: -9.750189781188965
    4. '\n' → logprob: -11.250189781188965
    5. '
' → logprob: -11.625189781188965
    6. '' → logprob: -14.500189781188965
    7. 'i' → logprob: -16.62519073486328
    8. '[' → logprob: -16.87519073486328
    9. '``' → logprob: -16.87519073486328
    10. '\' → logprob: -17.00019073486328

Token 54: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.45399534702301025
    2. ' i' → logprob: -1.3289953470230103
    3. ' x' → logprob: -3.0789952278137207
    4. 'a' → logprob: -3.5789952278137207
    5. ' ' → logprob: -4.453995227813721
    6. 'i' → logprob: -5.453995227813721
    7. ' num' → logprob: -5.453995227813721
    8. 'x' → logprob: -6.828995227813721
    9. '_' → logprob: -6.953995227813721
    10. ' v' → logprob: -7.328995227813721

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03127295896410942
    2. 'in' → logprob: -4.156272888183594
    3. ' ' → logprob: -4.406272888183594
    4. ',' → logprob: -5.906272888183594
    5. ' ,' → logprob: -8.781272888183594
    6. '  ' → logprob: -11.156272888183594
    7. ' i' → logprob: -11.406272888183594
    8. 'range' → logprob: -12.406272888183594
    9. ',n' → logprob: -13.031272888183594
    10. 'n' → logprob: -13.656272888183594

Token 56: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.17352154850959778
    2. 'A' → logprob: -2.4235215187072754
    3. ' range' → logprob: -2.6735215187072754
    4. ' A' → logprob: -6.423521518707275
    5. '(range' → logprob: -11.298521995544434
    6. 'a' → logprob: -11.923521995544434
    7. ' ' → logprob: -12.048521995544434
    8. '	range' → logprob: -12.423521995544434
    9. 'r' → logprob: -12.548521995544434
    10. 'rang' → logprob: -12.673521995544434

Token 57: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.03173868730664253
    2. '(' → logprob: -3.531738758087158
    3. '(len' → logprob: -6.281738758087158
    4. '(n' → logprob: -9.65673828125
    5. ' (' → logprob: -10.65673828125
    6. '(A' → logprob: -11.15673828125
    7. '(i' → logprob: -12.53173828125
    8. '(
' → logprob: -13.15673828125
    9. 'N' → logprob: -13.53173828125
    10. '((' → logprob: -13.65673828125

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0016954151215031743
    2. ')' → logprob: -6.75169563293457
    3. ' ):' → logprob: -7.75169563293457
    4. '):
' → logprob: -9.62669563293457
    5. ':' → logprob: -11.12669563293457
    6. '-' → logprob: -12.12669563293457
    7. '+' → logprob: -12.37669563293457
    8. ',' → logprob: -13.75169563293457
    9. ' )' → logprob: -13.75169563293457
    10. ']:' → logprob: -14.25169563293457

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36268019676208496
    2. ' ' → logprob: -1.862680196762085
    3. ' if' → logprob: -2.487680196762085
    4. '```' → logprob: -3.362680196762085
    5. 'if' → logprob: -4.612680435180664
    6. '    ' → logprob: -5.237680435180664
    7. '  ' → logprob: -6.112680435180664
    8. '[' → logprob: -6.112680435180664
    9. ' hat' → logprob: -6.237680435180664
    10. '\t' → logprob: -6.237680435180664

Token 60: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5266815423965454
    2. 'if' → logprob: -1.0266815423965454
    3. 'hat' → logprob: -3.776681423187256
    4. '   ' → logprob: -4.651681423187256
    5. ' hat' → logprob: -4.776681423187256
    6. ' ' → logprob: -5.526681423187256
    7. '```' → logprob: -5.776681423187256
    8. ' for' → logprob: -7.401681423187256
    9. 'a' → logprob: -7.651681423187256
    10. 'for' → logprob: -7.901681423187256

Token 61: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0528416708111763
    2. '[' → logprob: -3.4278416633605957
    3. '=' → logprob: -4.052841663360596
    4. ' ' → logprob: -7.427841663360596
    5. ',' → logprob: -8.302842140197754
    6. 's' → logprob: -8.677842140197754
    7. ']' → logprob: -9.052842140197754
    8. 'hat' → logprob: -9.052842140197754
    9. '_' → logprob: -9.677842140197754
    10. ')' → logprob: -10.740342140197754

Token 62: ' ' (ID: 220)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.3936755657196045
    2. '[' → logprob: -1.2686755657196045
    3. '0' → logprob: -3.8936755657196045
    4. '[i' → logprob: -5.018675804138184
    5. '3' → logprob: -5.518675804138184
    6. '[A' → logprob: -5.643675804138184
    7. 'sum' → logprob: -6.143675804138184
    8. ' [' → logprob: -6.518675804138184
    9. ' hat' → logprob: -6.893675804138184
    10. '[N' → logprob: -7.268675804138184

Token 63: '0' (ID: 15)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.3472517430782318
    2. '0' → logprob: -1.3472517728805542
    3. 'sum' → logprob: -3.7222516536712646
    4. '(' → logprob: -5.972251892089844
    5. '3' → logprob: -6.097251892089844
    6. '(h' → logprob: -6.847251892089844
    7. '[' → logprob: -7.222251892089844
    8. '1' → logprob: -8.097251892089844
    9. '(sum' → logprob: -8.097251892089844
    10. '2' → logprob: -8.347251892089844

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8812879920005798
    2. ' for' → logprob: -1.2562880516052246
    3. ' if' → logprob: -2.0062880516052246
    4. 'if' → logprob: -2.1312880516052246
    5. '<|end|>' → logprob: -3.6312880516052246
    6. ' ' → logprob: -4.256288051605225
    7. '   ' → logprob: -5.631288051605225
    8. '```' → logprob: -7.131288051605225
    9. '[' → logprob: -7.256288051605225
    10. ')' → logprob: -7.756288051605225

Token 66: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.6380980610847473
    2. 'if' → logprob: -0.7630980610847473
    3. ' for' → logprob: -6.638098239898682
    4. 'hat' → logprob: -6.638098239898682
    5. ' if' → logprob: -7.388098239898682
    6. '[' → logprob: -7.638098239898682
    7. '```' → logprob: -8.138097763061523
    8. '0' → logprob: -8.388097763061523
    9. 'i' → logprob: -8.388097763061523
    10. '
' → logprob: -8.638097763061523

Token 67: ' h' (ID: 312)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6327480673789978
    2. ' j' → logprob: -0.7577480673789978
    3. ' hat' → logprob: -10.007747650146484
    4. 'k' → logprob: -10.257747650146484
    5. ' t' → logprob: -11.507747650146484
    6. 't' → logprob: -11.882747650146484
    7. ' k' → logprob: -12.007747650146484
    8. 'hat' → logprob: -12.132747650146484
    9. '_j' → logprob: -12.257747650146484
    10. ' ' → logprob: -12.257747650146484

Token 68: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.04935210570693016
    2. ' in' → logprob: -3.0493521690368652
    3. 'i' → logprob: -7.424352169036865
    4. 'at' → logprob: -10.049351692199707
    5. 'int' → logprob: -10.049351692199707
    6. ',' → logprob: -10.924351692199707
    7. ' ' → logprob: -11.799351692199707
    8. 'h' → logprob: -11.799351692199707
    9. '[' → logprob: -11.924351692199707
    10. 'index' → logprob: -12.174351692199707

Token 69: ' hat' (ID: 4545)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.734285295009613
    2. ' range' → logprob: -1.3592853546142578
    3. 'hat' → logprob: -1.4842853546142578
    4. ' hat' → logprob: -3.984285354614258
    5. '[' → logprob: -4.109285354614258
    6. ' [' → logprob: -7.609285354614258
    7. ' ' → logprob: -7.859285354614258
    8. '(' → logprob: -8.546785354614258
    9. '0' → logprob: -8.859285354614258
    10. '(range' → logprob: -9.796785354614258

Token 70: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016401484608650208
    2. ':
' → logprob: -4.141401290893555
    3. '[' → logprob: -8.766401290893555
    4. 's' → logprob: -10.266401290893555
    5. '):' → logprob: -10.266401290893555
    6. '):
' → logprob: -10.266401290893555
    7. ':
' → logprob: -10.891401290893555
    8. '<|end|>' → logprob: -11.141401290893555
    9. ':

' → logprob: -11.391401290893555
    10. ' :' → logprob: -11.766401290893555

Token 71: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4159993529319763
    2. ' if' → logprob: -1.665999412536621
    3. 'if' → logprob: -1.915999412536621
    4. '   ' → logprob: -6.040999412536621
    5. '[' → logprob: -7.415999412536621
    6. ':' → logprob: -7.790999412536621
    7. ':
' → logprob: -8.915999412536621
    8. '<|end|>' → logprob: -9.165999412536621
    9. '	if' → logprob: -9.290999412536621
    10. '    ' → logprob: -9.415999412536621

Token 72: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002121234778314829
    2. ' if' → logprob: -6.627121448516846
    3. 'abs' → logprob: -7.752121448516846
    4. 'h' → logprob: -8.627120971679688
    5. 'A' → logprob: -9.002120971679688
    6. '       ' → logprob: -10.502120971679688
    7. '           ' → logprob: -11.502120971679688
    8. 'If' → logprob: -12.252120971679688
    9. '   ' → logprob: -12.877120971679688
    10. ' h' → logprob: -13.002120971679688

Token 73: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.042336780577898026
    2. ' h' → logprob: -3.2923367023468018
    3. 'A' → logprob: -5.792336940765381
    4. ' A' → logprob: -7.167336940765381
    5. 'abs' → logprob: -8.667336463928223
    6. ' not' → logprob: -9.542336463928223
    7. ' abs' → logprob: -9.917336463928223
    8. ' ' → logprob: -10.167336463928223
    9. '   ' → logprob: -10.417336463928223
    10. 'not' → logprob: -10.667336463928223

Token 74: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4342522621154785
    2. '==' → logprob: -1.1842522621154785
    3. ' <' → logprob: -3.4342522621154785
    4. ' <=' → logprob: -5.1842522621154785
    5. '<=' → logprob: -5.9342522621154785
    6. '<' → logprob: -6.1842522621154785
    7. '!=' → logprob: -6.8092522621154785
    8. ' !=' → logprob: -6.8092522621154785
    9. ' in' → logprob: -7.9342522621154785
    10. '>' → logprob: -8.30925178527832

Token 75: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05545028671622276
    2. ' A' → logprob: -2.930450201034546
    3. '0' → logprob: -7.930450439453125
    4. ' ' → logprob: -8.680450439453125
    5. '   ' → logprob: -11.305450439453125
    6. '	A' → logprob: -11.555450439453125
    7. '  ' → logprob: -12.742950439453125
    8. '=A' → logprob: -13.305450439453125
    9. 'a' → logprob: -13.555450439453125
    10. ' ' → logprob: -13.680450439453125

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00011117222311440855
    2. '[' → logprob: -9.12511157989502
    3. ' [' → logprob: -14.50011157989502
    4. 'i' → logprob: -14.62511157989502
    5. '```' → logprob: -15.00011157989502
    6. '[I' → logprob: -15.12511157989502
    7. '[
' → logprob: -15.75011157989502
    8. '[h' → logprob: -15.75011157989502
    9. '[A' → logprob: -15.87511157989502
    10. '[count' → logprob: -16.375110626220703

Token 77: ']:
' (ID: 22152)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8698363900184631
    2. '):' → logprob: -0.9948363900184631
    3. ' or' → logprob: -1.6198363304138184
    4. '):
' → logprob: -5.619836330413818
    5. '-' → logprob: -5.869836330413818
    6. ' )' → logprob: -5.994836330413818
    7. 'or' → logprob: -6.119836330413818
    8. ' ):' → logprob: -6.744836330413818
    9. ':' → logprob: -8.494836807250977
    10. ' -' → logprob: -8.619836807250977

Token 78: '           ' (ID: 352)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.22744306921958923
    2. '           ' → logprob: -2.352442979812622
    3. 'cnt' → logprob: -2.852442979812622
    4. ' cnt' → logprob: -3.977442979812622
    5. '       ' → logprob: -4.477443218231201
    6. 'or' → logprob: -4.977443218231201
    7. ':' → logprob: -5.352443218231201
    8. '
' → logprob: -6.227443218231201
    9. ')' → logprob: -6.602443218231201
    10. '(cnt' → logprob: -7.102443218231201

Token 79: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.10447850078344345
    2. ' cnt' → logprob: -2.354478597640991
    3. '	cnt' → logprob: -6.604478359222412
    4. '
' → logprob: -6.729478359222412
    5. '           ' → logprob: -7.229478359222412
    6. '       ' → logprob: -7.604478359222412
    7. '(cnt' → logprob: -8.47947883605957
    8. '[cnt' → logprob: -9.22947883605957
    9. '_cnt' → logprob: -9.97947883605957
    10. '   ' → logprob: -10.47947883605957

Token 80: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.05493102967739105
    2. ' +=' → logprob: -2.9299309253692627
    3. '=' → logprob: -11.054930686950684
    4. '>' → logprob: -11.554930686950684
    5. ']+=' → logprob: -11.679930686950684
    6. '+' → logprob: -11.929930686950684
    7. '+=(' → logprob: -13.304930686950684
    8. '   ' → logprob: -13.679930686950684
    9. ' ' → logprob: -14.179930686950684
    10. '1' → logprob: -14.179930686950684

Token 81: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009138475870713592
    2. ' ' → logprob: -7.000913619995117
    3. '0' → logprob: -13.750913619995117
    4. '2' → logprob: -15.375913619995117
    5. 'i' → logprob: -15.500913619995117
    6. 'answer' → logprob: -15.500913619995117
    7. 'hat' → logprob: -15.500913619995117
    8. ' i' → logprob: -17.063413619995117
    9. '```' → logprob: -17.063413619995117
    10. ' ' → logprob: -17.250913619995117

Token 82: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. '0' → logprob: -14.000060081481934
    4. 'hat' → logprob: -14.375060081481934
    5. '<|end|>' → logprob: -16.18756103515625
    6. 'answer' → logprob: -16.37506103515625
    7. '-' → logprob: -16.50006103515625
    8. 'i' → logprob: -17.00006103515625
    9. '```' → logprob: -17.00006103515625
    10. '2' → logprob: -17.18756103515625

Token 83: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026271380484104156
    2. '    
' → logprob: -4.276271343231201
    3. '
' → logprob: -5.151271343231201
    4. '    ' → logprob: -5.901271343231201
    5. 'if' → logprob: -7.276271343231201
    6. ' 
' → logprob: -7.526271343231201
    7. ' if' → logprob: -7.526271343231201
    8. '     
' → logprob: -7.901271343231201
    9. '       ' → logprob: -8.77627182006836
    10. ')' → logprob: -8.77627182006836

Token 84: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.246389389038086
    2. 'answer' → logprob: -1.371389389038086
    3. '   ' → logprob: -1.996389389038086
    4. 'if' → logprob: -2.121389389038086
    5. ' answer' → logprob: -2.621389389038086
    6. ' 
' → logprob: -3.246389389038086
    7. ')' → logprob: -3.496389389038086
    8. '    ' → logprob: -4.496389389038086
    9. '     
' → logprob: -4.621389389038086
    10. '    
' → logprob: -4.621389389038086

Token 85: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.537967324256897
    2. 'answer' → logprob: -1.162967324256897
    3. ' if' → logprob: -2.6629672050476074
    4. '   ' → logprob: -3.6629672050476074
    5. ' answer' → logprob: -5.037967205047607
    6. '```' → logprob: -7.662967205047607
    7. 'for' → logprob: -7.912967205047607
    8. '    
' → logprob: -8.537967681884766
    9. ')' → logprob: -8.787967681884766
    10. ' for' → logprob: -9.412967681884766

Token 86: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.0026265503838658333
    2. 'cnt' → logprob: -6.002626419067383
    3. ' not' → logprob: -9.627626419067383
    4. '(cnt' → logprob: -10.127626419067383
    5. ' cn' → logprob: -11.502626419067383
    6. ' c' → logprob: -11.627626419067383
    7. '	cnt' → logprob: -11.877626419067383
    8. ' ' → logprob: -12.502626419067383
    9. ' answer' → logprob: -13.002626419067383
    10. '[cnt' → logprob: -13.002626419067383

Token 87: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.28428566455841064
    2. '==' → logprob: -1.4092856645584106
    3. ' >' → logprob: -6.284285545349121
    4. '>' → logprob: -6.909285545349121
    5. ' <' → logprob: -9.159285545349121
    6. '=' → logprob: -10.409285545349121
    7. '<' → logprob: -10.534285545349121
    8. '0' → logprob: -10.659285545349121
    9. ':' → logprob: -10.909285545349121
    10. ' ' → logprob: -11.159285545349121

Token 88: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25217434763908386
    2. ' ' → logprob: -1.5021743774414062
    3. '1' → logprob: -8.752174377441406
    4. '2' → logprob: -9.502174377441406
    5. '3' → logprob: -12.377174377441406
    6. ' ' → logprob: -12.502174377441406
    7. '  ' → logprob: -13.689674377441406
    8. '<|end|>' → logprob: -14.189674377441406
    9. '```' → logprob: -14.377174377441406
    10. '4' → logprob: -14.689674377441406

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004156568902544677
    2. ' ' → logprob: -8.125415802001953
    3. '1' → logprob: -9.500415802001953
    4. '2' → logprob: -10.375415802001953
    5. '3' → logprob: -11.375415802001953
    6. '```' → logprob: -14.937915802001953
    7. '  ' → logprob: -15.250415802001953
    8. '4' → logprob: -15.312915802001953
    9. '   ' → logprob: -15.312915802001953
    10. '０' → logprob: -15.500415802001953

Token 90: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0934385359287262
    2. ':
' → logprob: -2.4684386253356934
    3. '):' → logprob: -5.843438625335693
    4. '   ' → logprob: -7.093438625335693
    5. ')' → logprob: -8.343438148498535
    6. '):
' → logprob: -8.968438148498535
    7. '       ' → logprob: -9.093438148498535
    8. ' :' → logprob: -9.843438148498535
    9. ' or' → logprob: -9.968438148498535
    10. ':

' → logprob: -10.093438148498535

Token 91: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2506738305091858
    2. 'print' → logprob: -1.625673770904541
    3. '   ' → logprob: -4.125673770904541
    4. 'answer' → logprob: -5.000673770904541
    5. '```' → logprob: -6.375673770904541
    6. ' print' → logprob: -8.7506742477417
    7. '           ' → logprob: -10.1256742477417
    8. ' answer' → logprob: -10.2506742477417
    9. '``' → logprob: -11.3756742477417
    10. 'break' → logprob: -11.3756742477417

Token 92: ' answer' (ID: 6052)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1323506385087967
    2. 'answer' (adapté à ' answer') → logprob: -2.2573506832122803
    3. 'continue' → logprob: -4.382350444793701
    4. '   ' → logprob: -5.757350444793701
    5. '```' → logprob: -6.132350444793701
    6. 'hat' → logprob: -7.132350444793701
    7. 'break' → logprob: -8.00735092163086
    8. '       ' → logprob: -9.88235092163086
    9. ' answer' → logprob: -10.13235092163086
    10. 'exit' → logprob: -10.25735092163086

Token 93: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.255476176738739
    2. ' =' → logprob: -1.5054762363433838
    3. '*=' → logprob: -5.755475997924805
    4. ' *=' → logprob: -8.005475997924805
    5. '*' → logprob: -10.380475997924805
    6. ' ' → logprob: -12.630475997924805
    7. '0' → logprob: -12.755475997924805
    8. '```' → logprob: -13.255475997924805
    9. '＝' → logprob: -14.380475997924805
    10. '+=' → logprob: -15.130475997924805

Token 94: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001129602751461789
    2. ' ' → logprob: -9.125112533569336
    3. 'answer' → logprob: -13.250112533569336
    4. '(' → logprob: -14.375112533569336
    5. '```' → logprob: -14.375112533569336
    6. '   ' → logprob: -15.375112533569336
    7. '(answer' → logprob: -15.875112533569336
    8. '000' → logprob: -15.875112533569336
    9. '  ' → logprob: -16.500112533569336
    10. '۰' → logprob: -16.625112533569336

Token 95: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.632542913896032e-05
    2. '(' → logprob: -11.000046730041504
    3. ' ' → logprob: -11.000046730041504
    4. 'answer' → logprob: -11.750046730041504
    5. '(answer' → logprob: -12.750046730041504
    6. '```' → logprob: -14.375046730041504
    7. '   ' → logprob: -15.812546730041504
    8. '000' → logprob: -15.812546730041504
    9. '０' → logprob: -15.875046730041504
    10. 'ANSWER' → logprob: -15.875046730041504

Token 96: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4408034086227417
    2. '   ' → logprob: -1.0658034086227417
    3. 'else' → logprob: -4.690803527832031
    4. ' else' → logprob: -6.065803527832031
    5. '           ' → logprob: -8.940803527832031
    6. '    ' → logprob: -9.440803527832031
    7. 'break' → logprob: -9.565803527832031
    8. '    
' → logprob: -10.065803527832031
    9. '```' → logprob: -10.315803527832031
    10. '        
' → logprob: -10.315803527832031

Token 97: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35077333450317383
    2. '   ' → logprob: -1.2257733345031738
    3. 'else' → logprob: -6.850773334503174
    4. ' else' → logprob: -7.100773334503174
    5. '        
' → logprob: -9.350772857666016
    6. '    ' → logprob: -9.475772857666016
    7. '    
' → logprob: -9.600772857666016
    8. '```' → logprob: -9.975772857666016
    9. '           ' → logprob: -10.850772857666016
    10. '        ' → logprob: -11.100772857666016

Token 98: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6400988698005676
    2. ' else' → logprob: -1.3900988101959229
    3. '   ' → logprob: -1.5150988101959229
    4. '    
' → logprob: -6.765099048614502
    5. '	else' → logprob: -7.515099048614502
    6. ' ' → logprob: -7.640099048614502
    7. '*' → logprob: -8.390098571777344
    8. 'elif' → logprob: -8.515098571777344
    9. ' answer' → logprob: -8.640098571777344
    10. 'answer' → logprob: -8.765098571777344

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06729327887296677
    2. ':
' → logprob: -2.942293167114258
    3. '       ' → logprob: -4.817293167114258
    4. '   ' → logprob: -5.692293167114258
    5. ',' → logprob: -8.442293167114258
    6. '*' → logprob: -8.567293167114258
    7. '    ' → logprob: -9.817293167114258
    8. '):' → logprob: -9.942293167114258
    9. '):
' → logprob: -10.317293167114258
    10. '```' → logprob: -10.442293167114258

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16431716084480286
    2. 'answer' → logprob: -1.9143171310424805
    3. ' answer' → logprob: -5.6643171310424805
    4. '   ' → logprob: -8.03931713104248
    5. '	answer' → logprob: -8.53931713104248
    6. '           ' → logprob: -9.41431713104248
    7. '```' → logprob: -11.66431713104248
    8. '(answer' → logprob: -12.66431713104248
    9. '               ' → logprob: -13.16431713104248
    10. '	' → logprob: -14.78931713104248

Token 101: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.030281245708465576
    2. ' answer' → logprob: -3.5302813053131104
    3. '       ' → logprob: -7.655281066894531
    4. '   ' → logprob: -10.155281066894531
    5. '	answer' → logprob: -11.155281066894531
    6. '           ' → logprob: -13.405281066894531
    7. '(answer' → logprob: -13.530281066894531
    8. '```' → logprob: -15.655281066894531
    9. ' ' → logprob: -16.03028106689453
    10. '_answer' → logprob: -16.15528106689453

Token 102: ' *=' (ID: 25253)
  Prédit: ' *='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *=' → logprob: -0.16164200007915497
    2. ' =' → logprob: -2.286642074584961
    3. '=' → logprob: -3.411642074584961
    4. '*=' → logprob: -4.286642074584961
    5. '*' → logprob: -7.161642074584961
    6. ' ' → logprob: -9.911642074584961
    7. ' *' → logprob: -10.036642074584961
    8. ' ' → logprob: -10.911642074584961
    9. '```' → logprob: -11.411642074584961
    10. '	' → logprob: -12.661642074584961

Token 103: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.02975349873304367
    2. ' cnt' → logprob: -3.5297534465789795
    3. '(cnt' → logprob: -13.029753684997559
    4. '	cnt' → logprob: -14.154753684997559
    5. '[cnt' → logprob: -16.404752731323242
    6. '   ' → logprob: -18.029752731323242
    7. 'count' → logprob: -18.779752731323242
    8. '_cnt' → logprob: -19.029752731323242
    9. '       ' → logprob: -19.029752731323242
    10. '
' → logprob: -19.279752731323242

Token 104: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.49244022369384766
    2. ' %' → logprob: -0.9924402236938477
    3. '<|end|>' → logprob: -4.992440223693848
    4. '   ' → logprob: -5.367440223693848
    5. '       ' → logprob: -5.617440223693848
    6. ')' → logprob: -6.992440223693848
    7. '%
' → logprob: -7.117440223693848
    8. ' %=' → logprob: -7.992440223693848
    9. ' %
' → logprob: -8.117440223693848
    10. ')%' → logprob: -8.742440223693848

Token 105: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3028927445411682
    2. '       ' → logprob: -1.5528926849365234
    3. ' %' → logprob: -4.052892684936523
    4. 'answer' → logprob: -4.177892684936523
    5. '   ' → logprob: -5.052892684936523
    6. '%
' → logprob: -5.802892684936523
    7. '<|end|>' → logprob: -5.802892684936523
    8. ' answer' → logprob: -6.927892684936523
    9. '```' → logprob: -7.302892684936523
    10. ')' → logprob: -7.302892684936523

Token 106: ' for' (ID: 395)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.25298285484313965
    2. ' answer' → logprob: -1.5029828548431396
    3. '       ' → logprob: -6.877983093261719
    4. '	answer' → logprob: -11.002983093261719
    5. '_answer' → logprob: -13.627983093261719
    6. '   ' → logprob: -13.627983093261719
    7. '```' → logprob: -13.752983093261719
    8. 'Answer' → logprob: -14.377983093261719
    9. '           ' → logprob: -14.752983093261719
    10. '.answer' → logprob: -14.877983093261719

Token 107: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.10036194324493408
    2. 'j' → logprob: -2.3503618240356445
    3. ' idx' → logprob: -9.225361824035645
    4. ' h' → logprob: -10.600361824035645
    5. 'idx' → logprob: -11.725361824035645
    6. ' ' → logprob: -11.850361824035645
    7. 'h' → logprob: -12.350361824035645
    8. ' k' → logprob: -12.600361824035645
    9. ' i' → logprob: -12.850361824035645
    10. 'index' → logprob: -13.600361824035645

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03372350335121155
    2. 'in' → logprob: -3.4087235927581787
    3. ' ' → logprob: -9.658723831176758
    4. '	in' → logprob: -12.158723831176758
    5. ',' → logprob: -12.908723831176758
    6. '<|end|>' → logprob: -13.283723831176758
    7. 'range' → logprob: -13.533723831176758
    8. '  ' → logprob: -14.783723831176758
    9. ' ,' → logprob: -14.783723831176758
    10. ' range' → logprob: -15.158723831176758

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07889308780431747
    2. ' range' → logprob: -2.5788931846618652
    3. ' ' → logprob: -13.703892707824707
    4. 'hat' → logprob: -14.453892707824707
    5. '[' → logprob: -14.953892707824707
    6. '	range' → logprob: -15.078892707824707
    7. '   ' → logprob: -15.453892707824707
    8. '  ' → logprob: -15.578892707824707
    9. '(range' → logprob: -15.578892707824707
    10. 'rang' → logprob: -16.328893661499023

Token 110: '(' (ID: 7)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5486916899681091
    2. '(' → logprob: -0.9236916899681091
    3. '(len' → logprob: -3.798691749572754
    4. 'len' → logprob: -5.923691749572754
    5. ' ' → logprob: -9.173691749572754
    6. '   ' → logprob: -10.548691749572754
    7. ' len' → logprob: -10.673691749572754
    8. '```' → logprob: -12.548691749572754
    9. ')' → logprob: -13.423691749572754
    10. ' (' → logprob: -13.798691749572754

Token 111: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0036522182635962963
    2. 'len' → logprob: -5.628652095794678
    3. ' ' → logprob: -10.128652572631836
    4. ' len' → logprob: -12.378652572631836
    5. 'hat' → logprob: -12.878652572631836
    6. '   ' → logprob: -12.878652572631836
    7. ')' → logprob: -14.503652572631836
    8. '(len' → logprob: -14.503652572631836
    9. '```' → logprob: -14.941152572631836
    10. '1' → logprob: -15.191152572631836

Token 112: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03414398059248924
    2. '):' → logprob: -3.4091439247131348
    3. '):
' → logprob: -7.659143924713135
    4. ':
' → logprob: -11.909144401550293
    5. ' ):
' → logprob: -12.159144401550293
    6. '       ' → logprob: -12.284144401550293
    7. ':' → logprob: -12.784144401550293
    8. '   ' → logprob: -13.284144401550293
    9. '):

' → logprob: -13.409144401550293
    10. ')' → logprob: -13.534144401550293

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2591440677642822
    2. '       ' → logprob: -2.1341440677642822
    3. '	       ' → logprob: -3.0091440677642822
    4. '<|end|>' → logprob: -3.5091440677642822
    5. ' if' → logprob: -4.884143829345703
    6. '   ' → logprob: -5.134143829345703
    7. '<|end|>' → logprob: -5.509143829345703
    8. ' ' → logprob: -6.134143829345703
    9. '	' → logprob: -6.509143829345703
    10. '	   ' → logprob: -6.509143829345703

Token 114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0036581491585820913
    2. '       ' → logprob: -6.253658294677734
    3. ' if' → logprob: -6.503658294677734
    4. '           ' → logprob: -8.503658294677734
    5. '   ' → logprob: -10.753658294677734
    6. '               ' → logprob: -12.753658294677734
    7. '	if' → logprob: -13.128658294677734
    8. '```' → logprob: -14.503658294677734
    9. ' ' → logprob: -14.628658294677734
    10. 'If' → logprob: -16.628658294677734

Token 115: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.0006285638664849102
    2. ' hat' → logprob: -7.375628471374512
    3. 'h' → logprob: -13.625628471374512
    4. '   ' → logprob: -14.375628471374512
    5. '    ' → logprob: -16.750629425048828
    6. ' ' → logprob: -17.125629425048828
    7. '           ' → logprob: -17.375629425048828
    8. 'hay' → logprob: -17.875629425048828
    9. '_hat' → logprob: -18.000629425048828
    10. 'hit' → logprob: -18.125629425048828

Token 116: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.250009536743164
    3. '==' → logprob: -12.875009536743164
    4. ' ==' → logprob: -13.875009536743164
    5. '[i' → logprob: -14.000009536743164
    6. ' [' → logprob: -15.875009536743164
    7. 'j' → logprob: -16.500009536743164
    8. '```' → logprob: -17.750009536743164
    9. '[
' → logprob: -17.875009536743164
    10. '   ' → logprob: -18.375009536743164

Token 117: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06197597458958626
    2. '==' → logprob: -2.8119759559631348
    3. ')' → logprob: -12.436976432800293
    4. ']==' → logprob: -13.436976432800293
    5. ' ' → logprob: -13.561976432800293
    6. ')==' → logprob: -13.936976432800293
    7. '=' → logprob: -15.186976432800293
    8. ']' → logprob: -15.686976432800293
    9. '   ' → logprob: -16.436975479125977
    10. ' =' → logprob: -16.686975479125977

Token 118: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.575946569442749
    2. ' ==' → logprob: -0.825946569442749
    3. ']==' → logprob: -12.700946807861328
    4. '==
' → logprob: -13.700946807861328
    5. '=' → logprob: -14.200946807861328
    6. ')==' → logprob: -14.200946807861328
    7. '===' → logprob: -14.825946807861328
    8. ' ' → logprob: -14.950946807861328
    9. ')' → logprob: -15.325946807861328
    10. ' =' → logprob: -16.075946807861328

Token 119: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0005533903022296727
    2. ' A' → logprob: -7.500553607940674
    3. '   ' → logprob: -15.125553131103516
    4. '	A' → logprob: -16.125553131103516
    5. '=A' → logprob: -18.375553131103516
    6. ' ' → logprob: -18.500553131103516
    7. '  ' → logprob: -19.500553131103516
    8. '_A' → logprob: -20.125553131103516
    9. '>A' → logprob: -20.750553131103516
    10. '           ' → logprob: -20.875553131103516

Token 120: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[I' → logprob: -16.25
    3. '[j' → logprob: -16.375
    4. '[' → logprob: -16.75
    5. '[user' → logprob: -19.125
    6. 'i' → logprob: -19.5
    7. '[int' → logprob: -19.5
    8. '```' → logprob: -20.0
    9. '[
' → logprob: -20.125
    10. '[N' → logprob: -21.5

Token 121: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0648149698972702
    2. '):' → logprob: -3.189815044403076
    3. ':
' → logprob: -4.689815044403076
    4. ']:
' → logprob: -4.814815044403076
    5. ':' → logprob: -5.939815044403076
    6. ']:' → logprob: -6.939815044403076
    7. '           ' → logprob: -8.439814567565918
    8. '():
' → logprob: -9.189814567565918
    9. ' ):
' → logprob: -9.439814567565918
    10. '       ' → logprob: -9.814814567565918

Token 122: '               ' (ID: 506)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' → logprob: -0.009307032451033592
    2. ' hat' → logprob: -5.259306907653809
    3. '               ' → logprob: -5.509306907653809
    4. '_hat' → logprob: -12.009306907653809
    5. '                
' → logprob: -13.009306907653809
    6. '           ' → logprob: -13.009306907653809
    7. 'h' → logprob: -13.634306907653809
    8. '```' → logprob: -13.634306907653809
    9. '
' → logprob: -15.134306907653809
    10. '              ' → logprob: -15.134306907653809

Token 123: ' hat' (ID: 4545)
  Prédit: 'hat'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hat' (adapté à ' hat') → logprob: -1.3856492842023727e-06
    2. ' hat' → logprob: -14.125000953674316
    3. '               ' → logprob: -14.750000953674316
    4. '                   ' → logprob: -17.125001907348633
    5. '           ' → logprob: -17.875001907348633
    6. 'h' → logprob: -18.000001907348633
    7. 'answer' → logprob: -18.375001907348633
    8. '_hat' → logprob: -18.500001907348633
    9. '   ' → logprob: -21.000001907348633
    10. 'hut' → logprob: -21.125001907348633

Token 124: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: 0.0
    2. '
' → logprob: -19.375
    3. 'j' → logprob: -19.625
    4. ' [' → logprob: -19.75
    5. '[i' → logprob: -19.75
    6. '```' → logprob: -19.75
    7. '[
' → logprob: -20.125
    8. '[' → logprob: -20.125
    9. '

' → logprob: -22.75
    10. '   ' → logprob: -23.25

Token 125: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6903687715530396
    2. ']+=' → logprob: -1.0653687715530396
    3. ' +=' → logprob: -2.19036865234375
    4. ']' → logprob: -3.19036865234375
    5. '=' → logprob: -7.19036865234375
    6. ')' → logprob: -9.44036865234375
    7. ' ]' → logprob: -10.06536865234375
    8. ']=' → logprob: -10.44036865234375
    9. '+' → logprob: -10.94036865234375
    10. ' =' → logprob: -11.06536865234375

Token 126: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0009364743018522859
    2. '=' → logprob: -7.500936508178711
    3. ' +=' → logprob: -7.875936508178711
    4. ']+=' → logprob: -12.750936508178711
    5. '-=' → logprob: -14.375936508178711
    6. '+' → logprob: -16.12593650817871
    7. ' =' → logprob: -17.12593650817871
    8. '+='' → logprob: -17.75093650817871
    9. '+=(' → logprob: -17.87593650817871
    10. '*=' → logprob: -18.37593650817871

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. ' ' → logprob: -11.875006675720215
    3. '   ' → logprob: -16.37500762939453
    4. '+' → logprob: -17.25000762939453
    5. '  ' → logprob: -18.50000762939453
    6. '2' → logprob: -19.12500762939453
    7. '```' → logprob: -20.25000762939453
    8. '<|end|>' → logprob: -20.37500762939453
    9. ' +' → logprob: -20.50000762939453
    10. ' ' → logprob: -20.62500762939453

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '+' → logprob: -16.125001907348633
    4. '   ' → logprob: -17.375001907348633
    5. '```' → logprob: -19.250001907348633
    6. '１' → logprob: -19.437501907348633
    7. '  ' → logprob: -19.750001907348633
    8. '2' → logprob: -20.062501907348633
    9. '۱' → logprob: -20.500001907348633
    10. '
' → logprob: -20.812501907348633

Token 129: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10057196766138077
    2. ' 
' → logprob: -3.850571870803833
    3. '<|end|>' → logprob: -3.850571870803833
    4. '               ' → logprob: -4.475572109222412
    5. '       ' → logprob: -4.475572109222412
    6. '  
' → logprob: -4.975572109222412
    7. '    
' → logprob: -5.100572109222412
    8. '        
' → logprob: -5.975572109222412
    9. '\n' → logprob: -5.975572109222412
    10. '                
' → logprob: -6.100572109222412

Token 130: '               ' (ID: 506)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.8954989314079285
    2. '
' → logprob: -1.2704989910125732
    3. ' answer' → logprob: -2.5204989910125732
    4. '       ' → logprob: -2.5204989910125732
    5. '%' → logprob: -3.0204989910125732
    6. '        
' → logprob: -3.6454989910125732
    7. ' 
' → logprob: -3.8954989910125732
    8. '            
' → logprob: -4.770498752593994
    9. '    
' → logprob: -4.770498752593994
    10. '%
' → logprob: -5.020498752593994

Token 131: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.37886929512023926
    2. '               ' → logprob: -1.6288692951202393
    3. ' break' → logprob: -2.1288692951202393
    4. '       ' → logprob: -9.00386905670166
    5. '	break' → logprob: -9.12886905670166
    6. '           ' → logprob: -13.12886905670166
    7. '```' → logprob: -13.12886905670166
    8. 'print' → logprob: -13.25386905670166
    9. '   ' → logprob: -13.37886905670166
    10. '                
' → logprob: -14.12886905670166

Token 132: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04238465800881386
    2. 'answer' → logprob: -3.542384624481201
    3. '\n' → logprob: -5.417384624481201
    4. '    
' → logprob: -5.917384624481201
    5. '  
' → logprob: -6.417384624481201
    6. ' 
' → logprob: -7.042384624481201
    7. '   ' → logprob: -7.167384624481201
    8. ' answer' → logprob: -7.667384624481201
    9. '<|end|>' → logprob: -8.04238510131836
    10. '        
' → logprob: -8.16738510131836

Token 133: '       ' (ID: 309)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.003823349252343178
    2. ' answer' → logprob: -6.003823280334473
    3. '
' → logprob: -7.128823280334473
    4. '\n' → logprob: -8.378823280334473
    5. 'print' → logprob: -8.878823280334473
    6. '   ' → logprob: -10.503823280334473
    7. '(answer' → logprob: -10.503823280334473
    8. '	answer' → logprob: -10.628823280334473
    9. '    
' → logprob: -10.753823280334473
    10. '\' → logprob: -10.753823280334473

Token 134: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.004215520340949297
    2. ' answer' → logprob: -5.504215717315674
    3. '   ' → logprob: -9.379215240478516
    4. 'print' → logprob: -10.129215240478516
    5. '	answer' → logprob: -12.004215240478516
    6. '       ' → logprob: -12.754215240478516
    7. 'Answer' → logprob: -14.004215240478516
    8. '_answer' → logprob: -14.129215240478516
    9. '    
' → logprob: -14.504215240478516
    10. '        
' → logprob: -14.879215240478516

Token 135: ' %=' (ID: 117035)
  Prédit: ' %='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %=' → logprob: -0.2524084150791168
    2. '%=' → logprob: -1.5024083852767944
    3. '%' → logprob: -8.002408027648926
    4. ' ' → logprob: -9.002408027648926
    5. ' %' → logprob: -11.752408027648926
    6. '=' → logprob: -12.002408027648926
    7. '	' → logprob: -12.252408027648926
    8. '%s' → logprob: -14.752408027648926
    9. ')%' → logprob: -14.752408027648926
    10. '```' → logprob: -14.752408027648926

Token 136: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0024758970830589533
    2. ' MOD' → logprob: -6.002475738525391
    3. '10' → logprob: -15.62747573852539
    4. ' ' → logprob: -18.25247573852539
    5. '_MOD' → logprob: -18.37747573852539
    6. '100' → logprob: -18.62747573852539
    7. '(M' → logprob: -20.00247573852539
    8. '```' → logprob: -20.12747573852539
    9. '.MOD' → logprob: -20.50247573852539
    10. '(' → logprob: -21.00247573852539

Token 137: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008198728901334107
    2. '
' → logprob: -7.125819683074951
    3. ' print' → logprob: -11.62582015991211
    4. '```' → logprob: -12.75082015991211
    5. ' 
' → logprob: -13.75082015991211
    6. '

' → logprob: -14.00082015991211
    7. '
' → logprob: -14.75082015991211
    8. '  
' → logprob: -14.87582015991211
    9. ')' → logprob: -15.25082015991211
    10. '(print' → logprob: -15.50082015991211

Token 138: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1994775377388578e-05
    2. ' print' → logprob: -12.125012397766113
    3. '
' → logprob: -12.375012397766113
    4. '```' → logprob: -13.875012397766113
    5. '<|end|>' → logprob: -14.375012397766113
    6. ')' → logprob: -15.500012397766113
    7. '#print' → logprob: -15.875012397766113
    8. '(print' → logprob: -15.875012397766113
    9. '#' → logprob: -16.625011444091797
    10. '  
' → logprob: -16.625011444091797

Token 139: '(answer' (ID: 78433)
  Prédit: '(answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.47459155321121216
    2. '(' → logprob: -0.9745915532112122
    3. '()' → logprob: -8.599591255187988
    4. '(ans' → logprob: -8.849591255187988
    5. '(print' → logprob: -8.974591255187988
    6. '('' → logprob: -11.224591255187988
    7. '("("' → logprob: -11.224591255187988
    8. 'answer' → logprob: -11.599591255187988
    9. '((' → logprob: -12.599591255187988
    10. '(output' → logprob: -12.599591255187988

Token 140: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.375005722045898
    3. '))' → logprob: -14.625005722045898
    4. ')`' → logprob: -14.750005722045898
    5. ')
' → logprob: -15.625005722045898
    6. '()' → logprob: -16.6250057220459
    7. '`)' → logprob: -16.7500057220459
    8. '(' → logprob: -17.2500057220459
    9. ')}' → logprob: -18.0000057220459
    10. '')' → logprob: -18.0000057220459

Token 141: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.16352535784244537
    2. ' MOD' → logprob: -1.9135253429412842
    3. '(M' → logprob: -6.038525581359863
    4. ')' → logprob: -7.163525581359863
    5. '(' → logprob: -9.413525581359863
    6. '_MOD' → logprob: -10.663525581359863
    7. ' (' → logprob: -11.163525581359863
    8. '(Mod' → logprob: -11.913525581359863
    9. ' ' → logprob: -12.288525581359863
    10. '.MOD' → logprob: -12.413525581359863

Token 142: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ' )' → logprob: -12.75000286102295
    3. ')
' → logprob: -15.75000286102295
    4. '()' → logprob: -17.000003814697266
    5. ')`' → logprob: -17.250003814697266
    6. '())' → logprob: -17.750003814697266
    7. '))' → logprob: -17.750003814697266
    8. '`)' → logprob: -18.875003814697266
    9. '```' → logprob: -19.125003814697266
    10. '')' → logprob: -19.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 140
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 62
Tokens correctement prédits (top 10): 121
Précision stricte (1ère position): 37.14%
Précision adaptée (1ère position): 44.29%
Précision (top 10): 86.43%
================================================================================
