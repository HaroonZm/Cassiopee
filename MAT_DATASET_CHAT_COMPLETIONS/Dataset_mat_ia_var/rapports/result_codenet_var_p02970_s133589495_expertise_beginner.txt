================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:51:09
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N_D = input().split(' ')
N = int(N_D[0])
D = int(N_D[1])

d = 2 * D + 1
cnt = 1

while N > d:
    cnt = cnt + 1
    d = d + (2 * D + 1)

print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: '_D' (ID: 2958)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12596899271011353
    2. '10' → logprob: -2.5009689331054688
    3. '32' → logprob: -3.6259689331054688
    4. '100' → logprob: -6.000968933105469
    5. '64' → logprob: -6.125968933105469
    6. '16' → logprob: -6.500968933105469
    7. '20' → logprob: -7.250968933105469
    8. '1' → logprob: -7.875968933105469
    9. '4' → logprob: -7.875968933105469
    10. '8' → logprob: -8.000968933105469

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0191288311034441
    2. ''' → logprob: -4.269128799438477
    3. '"' → logprob: -5.894128799438477
    4. '[' → logprob: -7.269128799438477
    5. '('' → logprob: -7.394128799438477
    6. '_' → logprob: -8.519128799438477
    7. '(
' → logprob: -8.519128799438477
    8. '.' → logprob: -8.644128799438477
    9. ')' → logprob: -10.144128799438477
    10. '("("' → logprob: -10.394128799438477

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.20675766468048096
    2. '+' → logprob: -2.0817575454711914
    3. '.strip' → logprob: -3.4567575454711914
    4. ')' → logprob: -4.956757545471191
    5. '_' → logprob: -5.456757545471191
    6. ' ' → logprob: -5.456757545471191
    7. '*' → logprob: -5.456757545471191
    8. '=' → logprob: -6.456757545471191
    9. '#' → logprob: -6.706757545471191
    10. '```' → logprob: -6.831757545471191

Token 6: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00035488870344124734
    2. '()' → logprob: -9.000354766845703
    3. '(
' → logprob: -9.875354766845703
    4. '("("' → logprob: -9.875354766845703
    5. '('' → logprob: -10.000354766845703
    6. '(

' → logprob: -10.500354766845703
    7. '((' → logprob: -11.250354766845703
    8. '`' → logprob: -11.500354766845703
    9. ' (' → logprob: -11.750354766845703
    10. '"' → logprob: -12.000354766845703

Token 7: ' ')
' (ID: 49195)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005090971942991018
    2. '')' → logprob: -5.505091190338135
    3. ' ' → logprob: -8.380090713500977
    4. '(' → logprob: -8.380090713500977
    5. '()' → logprob: -8.755090713500977
    6. ' )' → logprob: -9.005090713500977
    7. ''' → logprob: -9.005090713500977
    8. ' ')' → logprob: -10.380090713500977
    9. '[' → logprob: -10.505090713500977
    10. ',' → logprob: -10.630090713500977

Token 8: 'N' (ID: 45)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13151603937149048
    2. '[' → logprob: -2.1315159797668457
    3. 'N' → logprob: -6.131515979766846
    4. '#' → logprob: -7.506515979766846
    5. 'n' → logprob: -8.381516456604004
    6. '+' → logprob: -8.631516456604004
    7. ' =' → logprob: -8.756516456604004
    8. ',' → logprob: -8.881516456604004
    9. '0' → logprob: -9.006516456604004
    10. '.' → logprob: -9.006516456604004

Token 9: ' =' (ID: 314)
  Prédit: '_D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.49173814058303833
    2. '_' → logprob: -0.9917381405830383
    3. '[' → logprob: -4.116738319396973
    4. '_[' → logprob: -7.616738319396973
    5. '[_' → logprob: -7.991738319396973
    6. 'D' → logprob: -8.491738319396973
    7. '_d' → logprob: -10.366738319396973
    8. '\[' → logprob: -10.866738319396973
    9. '[]' → logprob: -10.991738319396973
    10. ' _' → logprob: -10.991738319396973

Token 10: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006735265254974365
    2. ' int' → logprob: -5.006735324859619
    3. 'len' → logprob: -11.006734848022461
    4. 'N' → logprob: -13.381734848022461
    5. '[int' → logprob: -14.006734848022461
    6. ' N' → logprob: -14.506734848022461
    7. ' len' → logprob: -15.381734848022461
    8. '(int' → logprob: -16.00673484802246
    9. 'input' → logprob: -16.50673484802246
    10. ' ' → logprob: -16.75673484802246

Token 11: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5773050785064697
    2. '(N' → logprob: -0.8273050785064697
    3. '(_' → logprob: -7.077304840087891
    4. '('' → logprob: -7.952304840087891
    5. '_N' → logprob: -10.32730484008789
    6. '('_' → logprob: -10.70230484008789
    7. 'N' → logprob: -10.82730484008789
    8. '(_)' → logprob: -11.07730484008789
    9. '(`' → logprob: -11.07730484008789
    10. '```' → logprob: -11.57730484008789

Token 12: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.009877204895019531
    2. '[' → logprob: -4.6348772048950195
    3. ')' → logprob: -9.63487720489502
    4. 'D' → logprob: -11.13487720489502
    5. '_[' → logprob: -11.13487720489502
    6. '[_' → logprob: -11.25987720489502
    7. '_N' → logprob: -12.75987720489502
    8. '```' → logprob: -13.25987720489502
    9. '\[' → logprob: -14.00987720489502
    10. '`' → logprob: -14.25987720489502

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1472419600977446e-06
    2. ')' → logprob: -14.125000953674316
    3. ' [' → logprob: -15.500000953674316
    4. '\[' → logprob: -16.625001907348633
    5. '[N' → logprob: -17.000001907348633
    6. '[
' → logprob: -17.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. '['' → logprob: -18.000001907348633
    9. ')[' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.125001907348633

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. '1' → logprob: -13.000003814697266
    3. ' ' → logprob: -13.750003814697266
    4. ')' → logprob: -17.625003814697266
    5. ''' → logprob: -19.375003814697266
    6. ']' → logprob: -19.875003814697266
    7. '])' → logprob: -20.000003814697266
    8. '```' → logprob: -20.000003814697266
    9. '۰' → logprob: -20.125003814697266
    10. '`' → logprob: -20.250003814697266

Token 15: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0897737443447113
    2. '])' → logprob: -2.464773654937744
    3. ']' → logprob: -7.589773654937744
    4. ')]' → logprob: -8.839774131774902
    5. ')])' → logprob: -9.464774131774902
    6. ''])' → logprob: -10.339774131774902
    7. '[' → logprob: -11.339774131774902
    8. ' ])' → logprob: -11.339774131774902
    9. '))' → logprob: -11.464774131774902
    10. ' )' → logprob: -11.589774131774902

Token 16: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00047261794679798186
    2. ' D' → logprob: -8.000473022460938
    3. ',' → logprob: -9.625473022460938
    4. 'M' → logprob: -10.750473022460938
    5. 'd' → logprob: -10.875473022460938
    6. ')' → logprob: -11.500473022460938
    7. '=' → logprob: -12.000473022460938
    8. ' ' → logprob: -12.500473022460938
    9. ' =' → logprob: -13.000473022460938
    10. 'N' → logprob: -13.000473022460938

Token 17: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.515486478805542
    2. '=' → logprob: -1.765486478805542
    3. ')' → logprob: -2.015486478805542
    4. ' =' → logprob: -3.265486478805542
    5. '[' → logprob: -3.515486478805542
    6. '<|end|>' → logprob: -3.890486478805542
    7. ',' → logprob: -6.515486717224121
    8. '.' → logprob: -6.640486717224121
    9. '_space' → logprob: -6.765486717224121
    10. ' ' → logprob: -7.015486717224121

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141607522964478
    2. ' int' → logprob: -1.701416015625
    3. ' N' → logprob: -13.326416015625
    4. 'N' → logprob: -14.326416015625
    5. '(int' → logprob: -15.576416015625
    6. ' ' → logprob: -15.951416015625
    7. '=int' → logprob: -16.076416015625
    8. '<int' → logprob: -17.326416015625
    9. 'float' → logprob: -17.576416015625
    10. '[int' → logprob: -17.701416015625

Token 19: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5829551219940186
    2. '(N' → logprob: -0.8329551219940186
    3. '(D' → logprob: -5.082955360412598
    4. '('' → logprob: -7.707955360412598
    5. '()' → logprob: -9.457955360412598
    6. ' (' → logprob: -10.082955360412598
    7. '```' → logprob: -10.457955360412598
    8. '(n' → logprob: -10.582955360412598
    9. ''' → logprob: -10.582955360412598
    10. ' ' → logprob: -10.707955360412598

Token 20: '_D' (ID: 2958)
  Prédit: '_D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_D' → logprob: -0.0010494812158867717
    2. '_' → logprob: -7.001049518585205
    3. ')' → logprob: -9.501049041748047
    4. '[' → logprob: -10.751049041748047
    5. '_)' → logprob: -10.751049041748047
    6. '])' → logprob: -12.376049041748047
    7. ' ' → logprob: -13.126049041748047
    8. ' _' → logprob: -13.376049041748047
    9. ')_' → logprob: -13.376049041748047
    10. '-' → logprob: -13.501049041748047

Token 21: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012987985974177718
    2. '_D' → logprob: -9.750129699707031
    3. ')' → logprob: -10.500129699707031
    4. '])' → logprob: -11.375129699707031
    5. ')[' → logprob: -11.625129699707031
    6. ' [' → logprob: -12.250129699707031
    7. '```' → logprob: -12.375129699707031
    8. '   ' → logprob: -12.750129699707031
    9. ' ' → logprob: -12.875129699707031
    10. '][' → logprob: -13.000129699707031

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9862216504407115e-05
    2. '0' → logprob: -11.000020027160645
    3. '])' → logprob: -13.500020027160645
    4. '2' → logprob: -14.125020027160645
    5. ' ' → logprob: -14.500020027160645
    6. '```' → logprob: -15.000020027160645
    7. '-' → logprob: -16.000019073486328
    8. ')' → logprob: -17.375019073486328
    9. '' → logprob: -17.937519073486328
    10. ']' → logprob: -18.000019073486328

Token 23: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. '')' → logprob: -12.000014305114746
    3. ')
' → logprob: -12.875014305114746
    4. '))' → logprob: -13.250014305114746
    5. '`)' → logprob: -13.375014305114746
    6. '])' → logprob: -14.250014305114746
    7. ''])' → logprob: -15.000014305114746
    8. '）' → logprob: -15.250014305114746
    9. '```' → logprob: -15.250014305114746
    10. '")' → logprob: -16.125015258789062

Token 24: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.20180344581604
    2. 'for' → logprob: -1.45180344581604
    3. 'if' → logprob: -2.57680344581604
    4. 's' → logprob: -2.70180344581604
    5. 'n' → logprob: -2.95180344581604
    6. 'i' → logprob: -3.20180344581604
    7. 'x' → logprob: -3.32680344581604
    8. 'r' → logprob: -3.82680344581604
    9. 'f' → logprob: -4.076803207397461
    10. 't' → logprob: -4.201803207397461

Token 25: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8529375195503235
    2. ' =' → logprob: -1.9779374599456787
    3. 'ef' → logprob: -2.2279374599456787
    4. '_' → logprob: -2.2279374599456787
    5. 'istance' → logprob: -3.3529374599456787
    6. 'i' → logprob: -3.3529374599456787
    7. 'e' → logprob: -3.3529374599456787
    8. ')' → logprob: -3.8529374599456787
    9. 'f' → logprob: -3.8529374599456787
    10. 'iv' → logprob: -4.102937698364258

Token 26: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.34575626254081726
    2. '[]' → logprob: -2.0957562923431396
    3. '[' → logprob: -2.5957562923431396
    4. '0' → logprob: -3.2207562923431396
    5. 'D' → logprob: -3.8457562923431396
    6. '[int' → logprob: -4.8457560539245605
    7. 'int' → logprob: -5.2207560539245605
    8. 'dict' → logprob: -5.4707560539245605
    9. '{' → logprob: -5.9707560539245605
    10. '[D' → logprob: -6.0957560539245605

Token 27: '2' (ID: 17)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.2717915177345276
    2. '[]' → logprob: -2.646791458129883
    3. '0' → logprob: -2.771791458129883
    4. 'D' → logprob: -2.771791458129883
    5. 'int' → logprob: -4.771791458129883
    6. '[' → logprob: -5.021791458129883
    7. 'list' → logprob: -5.146791458129883
    8. 'd' → logprob: -5.396791458129883
    9. '{' → logprob: -5.521791458129883
    10. 'dict' → logprob: -5.646791458129883

Token 28: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2289762645959854
    2. ' **' → logprob: -2.353976249694824
    3. '*' → logprob: -2.478976249694824
    4. '<|end|>' → logprob: -4.728976249694824
    5. ' ' → logprob: -4.853976249694824
    6. '+' → logprob: -5.728976249694824
    7. ' *' → logprob: -5.978976249694824
    8. '
' → logprob: -6.728976249694824
    9. '0' → logprob: -7.478976249694824
    10. '***' → logprob: -7.853976249694824

Token 29: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.05400927737355232
    2. '3' → logprob: -3.804009199142456
    3. ' D' → logprob: -3.804009199142456
    4. 'N' → logprob: -5.804009437561035
    5. '10' → logprob: -5.804009437561035
    6. ' ' → logprob: -6.554009437561035
    7. ' N' → logprob: -9.054009437561035
    8. 'int' → logprob: -9.304009437561035
    9. '(' → logprob: -9.679009437561035
    10. '*' → logprob: -10.054009437561035

Token 30: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20339426398277283
    2. ' +' → logprob: -1.7033942937850952
    3. ' ' → logprob: -6.453394412994385
    4. '\n' → logprob: -9.828393936157227
    5. '**' → logprob: -10.078393936157227
    6. ' 
' → logprob: -10.203393936157227
    7. '+
' → logprob: -10.453393936157227
    8. '<|end|>' → logprob: -10.453393936157227
    9. ' +
' → logprob: -10.828393936157227
    10. '*' → logprob: -10.828393936157227

Token 31: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005566088366322219
    2. ' ' → logprob: -7.500556468963623
    3. '2' → logprob: -14.000556945800781
    4. '3' → logprob: -14.188056945800781
    5. '11' → logprob: -14.188056945800781
    6. '0' → logprob: -15.125556945800781
    7. '+' → logprob: -15.313056945800781
    8. '10' → logprob: -15.750556945800781
    9. '...' → logprob: -16.50055694580078
    10. '5' → logprob: -16.87555694580078

Token 32: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -9.750061988830566
    3. '11' → logprob: -13.687561988830566
    4. '2' → logprob: -14.375061988830566
    5. '3' → logprob: -14.500061988830566
    6. '0' → logprob: -15.437561988830566
    7. '+' → logprob: -15.562561988830566
    8. '10' → logprob: -15.937561988830566
    9. '7' → logprob: -16.187562942504883
    10. '13' → logprob: -16.375062942504883

Token 33: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2719593048095703
    2. '<|end|>' → logprob: -1.8969593048095703
    3. '\n' → logprob: -3.7719593048095703
    4. ' ' → logprob: -4.02195930480957
    5. ')' → logprob: -4.27195930480957
    6. ' 
' → logprob: -4.77195930480957
    7. 'for' → logprob: -4.89695930480957
    8. 'n' → logprob: -5.52195930480957
    9. 'if' → logprob: -6.14695930480957
    10. ' for' → logprob: -6.52195930480957

Token 34: 'cnt' (ID: 33160)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5353944301605225
    2. '\n' → logprob: -2.0353944301605225
    3. 'n' → logprob: -2.4103944301605225
    4. ' 
' → logprob: -3.2853944301605225
    5. 'for' → logprob: -3.6603944301605225
    6. 'x' → logprob: -3.9103944301605225
    7. ' ' → logprob: -3.9103944301605225
    8. 'a' → logprob: -4.285394668579102
    9. 'if' → logprob: -4.410394668579102
    10. '\' → logprob: -4.535394668579102

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026307502761483192
    2. '=' → logprob: -3.6513075828552246
    3. ' ' → logprob: -12.401307106018066
    4. ' +=' → logprob: -13.776307106018066
    5. ',' → logprob: -14.401307106018066
    6. '_' → logprob: -14.526307106018066
    7. 's' → logprob: -15.776307106018066
    8. ' ,' → logprob: -15.901307106018066
    9. ')' → logprob: -16.151308059692383
    10. '<|end|>' → logprob: -16.526308059692383

Token 36: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03436457738280296
    2. ' ' → logprob: -3.4093644618988037
    3. 'N' → logprob: -7.659364700317383
    4. ' N' → logprob: -8.659364700317383
    5. '1' → logprob: -10.284364700317383
    6. '(' → logprob: -10.784364700317383
    7. ' (' → logprob: -11.409364700317383
    8. '(N' → logprob: -13.409364700317383
    9. 'int' → logprob: -14.159364700317383
    10. 'max' → logprob: -14.846864700317383

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003151457756757736
    2. 'N' → logprob: -6.3781514167785645
    3. '(' → logprob: -7.3781514167785645
    4. '1' → logprob: -7.6281514167785645
    5. ' ' → logprob: -9.003151893615723
    6. '(N' → logprob: -9.128151893615723
    7. 'int' → logprob: -10.503151893615723
    8. '-' → logprob: -10.753151893615723
    9. 'max' → logprob: -11.128151893615723
    10. '[]' → logprob: -12.003151893615723

Token 38: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36065399646759033
    2. '\n' → logprob: -1.6106539964675903
    3. 'for' → logprob: -3.485653877258301
    4. ' 
' → logprob: -3.610653877258301
    5. ' for' → logprob: -4.610653877258301
    6. '<|end|>' → logprob: -4.735653877258301
    7. '+' → logprob: -5.235653877258301
    8. ' ' → logprob: -5.360653877258301
    9. '\' → logprob: -5.610653877258301
    10. 'n' → logprob: -5.610653877258301

Token 39: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.17980676889419556
    2. ' for' → logprob: -3.054806709289551
    3. '
' → logprob: -3.679806709289551
    4. 'while' → logprob: -3.679806709289551
    5. 'i' → logprob: -4.304806709289551
    6. 'a' → logprob: -4.679806709289551
    7. 'x' → logprob: -5.179806709289551
    8. 'if' → logprob: -5.304806709289551
    9. ' 
' → logprob: -5.554806709289551
    10. ' while' → logprob: -5.679806709289551

Token 40: ' N' (ID: 478)
  Prédit: ' cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.5249658823013306
    2. ' N' → logprob: -1.2749658823013306
    3. 'cnt' → logprob: -2.524965763092041
    4. ' d' → logprob: -3.774965763092041
    5. 'N' → logprob: -4.149965763092041
    6. ' D' → logprob: -5.649965763092041
    7. '(cnt' → logprob: -6.024965763092041
    8. ' True' → logprob: -6.774965763092041
    9. 'd' → logprob: -7.024965763092041
    10. ' i' → logprob: -7.649965763092041

Token 41: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.06536887586116791
    2. ' >=' → logprob: -2.940368890762329
    3. '>' → logprob: -4.69036865234375
    4. '-' → logprob: -7.56536865234375
    5. ' -' → logprob: -7.94036865234375
    6. '>=' → logprob: -8.31536865234375
    7. ' ' → logprob: -9.56536865234375
    8. ' -=' → logprob: -10.06536865234375
    9. ' <=' → logprob: -12.19036865234375
    10. ' >
' → logprob: -13.06536865234375

Token 42: ' d' (ID: 272)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3744582533836365
    2. ' ' → logprob: -1.7494583129882812
    3. ' d' → logprob: -2.6244583129882812
    4. 'd' → logprob: -2.7494583129882812
    5. '=' → logprob: -6.874458312988281
    6. 'cnt' → logprob: -7.249458312988281
    7. ' cnt' → logprob: -8.374458312988281
    8. '>' → logprob: -11.124458312988281
    9. '=d' → logprob: -11.374458312988281
    10. '1' → logprob: -11.999458312988281

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01262865960597992
    2. ':
' → logprob: -4.387628555297852
    3. ' and' → logprob: -9.762628555297852
    4. ' :' → logprob: -10.137628555297852
    5. ' :
' → logprob: -11.637628555297852
    6. ':
' → logprob: -12.137628555297852
    7. 'and' → logprob: -12.637628555297852
    8. ':

' → logprob: -13.137628555297852
    9. '*' → logprob: -13.762628555297852
    10. ',' → logprob: -15.762628555297852

Token 44: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.789548397064209
    2. 'N' → logprob: -1.414548397064209
    3. ' N' → logprob: -1.789548397064209
    4. ' 
' → logprob: -3.289548397064209
    5. ' ' → logprob: -3.414548397064209
    6. '```' → logprob: -3.789548397064209
    7. '    
' → logprob: -4.289548397064209
    8. '<|end|>' → logprob: -4.914548397064209
    9. '	N' → logprob: -5.414548397064209
    10. 'cnt' → logprob: -6.039548397064209

Token 45: ' cnt' (ID: 27340)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.013007047586143017
    2. ' N' → logprob: -5.013007164001465
    3. '   ' → logprob: -5.388007164001465
    4. 'cnt' (adapté à ' cnt') → logprob: -6.888007164001465
    5. '    
' → logprob: -8.263007164001465
    6. '
' → logprob: -9.013007164001465
    7. '```' → logprob: -9.638007164001465
    8. '	N' → logprob: -9.888007164001465
    9. 'n' → logprob: -10.138007164001465
    10. ' cnt' → logprob: -10.513007164001465

Token 46: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04727710410952568
    2. '+=' → logprob: -3.1722772121429443
    3. ' *=' → logprob: -5.547276973724365
    4. ' ' → logprob: -9.172277450561523
    5. ' =' → logprob: -9.297277450561523
    6. '=' → logprob: -9.797277450561523
    7. '*=' → logprob: -10.297277450561523
    8. ' *' → logprob: -10.422277450561523
    9. '*' → logprob: -10.922277450561523
    10. '  ' → logprob: -11.922277450561523

Token 47: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.36037877202033997
    2. 'cnt' → logprob: -1.2353787422180176
    3. '(cnt' → logprob: -4.610378742218018
    4. ' ' → logprob: -7.235378742218018
    5. '	cnt' → logprob: -7.610378742218018
    6. '2' → logprob: -8.610379219055176
    7. ' (' → logprob: -8.985379219055176
    8. '[cnt' → logprob: -8.985379219055176
    9. '+' → logprob: -9.735379219055176
    10. '1' → logprob: -9.860379219055176

Token 48: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038105640560388565
    2. ' +' → logprob: -3.2881057262420654
    3. '*' → logprob: -9.788105964660645
    4. '＋' → logprob: -12.788105964660645
    5. ' *' → logprob: -13.038105964660645
    6. ' plus' → logprob: -14.038105964660645
    7. '+=' → logprob: -14.163105964660645
    8. '2' → logprob: -14.788105964660645
    9. '++' → logprob: -14.913105964660645
    10. 'plus' → logprob: -15.788105964660645

Token 49: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.7069059014320374
    2. '1' → logprob: -0.8319059014320374
    3. ' d' → logprob: -2.7069058418273926
    4. ' ' → logprob: -5.331905841827393
    5. '2' → logprob: -10.58190631866455
    6. 'cnt' → logprob: -12.83190631866455
    7. '   ' → logprob: -13.45690631866455
    8. '  ' → logprob: -13.58190631866455
    9. '	d' → logprob: -13.83190631866455
    10. '3' → logprob: -14.70690631866455

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14301565289497375
    2. 'd' → logprob: -2.0180156230926514
    3. ' ' → logprob: -8.76801586151123
    4. ' d' → logprob: -9.01801586151123
    5. '2' → logprob: -10.26801586151123
    6. 'cnt' → logprob: -11.14301586151123
    7. 'N' → logprob: -12.26801586151123
    8. 'D' → logprob: -13.51801586151123
    9. '(d' → logprob: -13.76801586151123
    10. '3' → logprob: -13.76801586151123

Token 51: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14777255058288574
    2. 'N' → logprob: -2.1477725505828857
    3. '
' → logprob: -4.647772789001465
    4. ' N' → logprob: -5.022772789001465
    5. 'n' → logprob: -6.272772789001465
    6. '    
' → logprob: -6.897772789001465
    7. ' 
' → logprob: -8.022772789001465
    8. '   
' → logprob: -8.147772789001465
    9. '  
' → logprob: -8.272772789001465
    10. '  ' → logprob: -8.647772789001465

Token 52: '   ' (ID: 271)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.001736943726427853
    2. ' N' → logprob: -7.001737117767334
    3. '   ' → logprob: -7.626737117767334
    4. 'n' → logprob: -9.126736640930176
    5. '    
' → logprob: -9.626736640930176
    6. '```' → logprob: -10.001736640930176
    7. '	N' → logprob: -10.376736640930176
    8. ' 
' → logprob: -11.001736640930176
    9. '
' → logprob: -11.001736640930176
    10. '\n' → logprob: -11.626736640930176

Token 53: ' d' (ID: 272)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -5.991464786347933e-05
    2. 'd' (adapté à ' d') → logprob: -10.500060081481934
    3. '   ' → logprob: -10.625060081481934
    4. ' N' → logprob: -11.875060081481934
    5. 'n' → logprob: -15.375060081481934
    6. 'D' → logprob: -15.625060081481934
    7. '  ' → logprob: -16.000059127807617
    8. '	N' → logprob: -16.000059127807617
    9. ' ' → logprob: -16.375059127807617
    10. '```' → logprob: -16.375059127807617

Token 54: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2788381278514862
    2. ' +=' → logprob: -1.5288381576538086
    3. '=' → logprob: -3.6538381576538086
    4. ' =' → logprob: -7.528838157653809
    5. '*=' → logprob: -9.153838157653809
    6. ' *=' → logprob: -11.403838157653809
    7. '+=(' → logprob: -12.903838157653809
    8. '+' → logprob: -15.028838157653809
    9. ' <<=' → logprob: -15.278838157653809
    10. '	' → logprob: -15.278838157653809

Token 55: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048646070063114166
    2. ' d' → logprob: -3.0486459732055664
    3. ' ' → logprob: -10.423645973205566
    4. '2' → logprob: -10.548645973205566
    5. '   ' → logprob: -13.798645973205566
    6. '  ' → logprob: -14.673645973205566
    7. '	d' → logprob: -14.798645973205566
    8. '3' → logprob: -15.548645973205566
    9. '_d' → logprob: -15.673645973205566
    10. '(d' → logprob: -15.798645973205566

Token 56: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23370802402496338
    2. ' +' → logprob: -1.6087080240249634
    3. 'd' → logprob: -4.983707904815674
    4. '+d' → logprob: -6.733707904815674
    5. '2' → logprob: -9.733708381652832
    6. '*' → logprob: -9.983708381652832
    7. ' ' → logprob: -10.233708381652832
    8. ' plus' → logprob: -11.233708381652832
    9. ' d' → logprob: -11.608708381652832
    10. ' +=' → logprob: -11.733708381652832

Token 57: ' (' (ID: 350)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.04487082362174988
    2. ' ' → logprob: -3.7948708534240723
    3. '(' → logprob: -3.9198708534240723
    4. ' (' → logprob: -7.169870853424072
    5. 'd' → logprob: -7.294870853424072
    6. ' d' → logprob: -9.544870376586914
    7. 'D' → logprob: -12.044870376586914
    8. '(d' → logprob: -12.669870376586914
    9. '   ' → logprob: -12.794870376586914
    10. '1' → logprob: -12.794870376586914

Token 58: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.030454576015472412
    2. ' ' → logprob: -3.780454635620117
    3. 'd' → logprob: -5.530454635620117
    4. '(' → logprob: -6.030454635620117
    5. ' (' → logprob: -8.030454635620117
    6. ' d' → logprob: -8.155454635620117
    7. ')' → logprob: -9.280454635620117
    8. 'D' → logprob: -9.530454635620117
    9. '1' → logprob: -12.155454635620117
    10. ' D' → logprob: -12.405454635620117

Token 59: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.24327971041202545
    2. 'D' → logprob: -1.9932796955108643
    3. ' *' → logprob: -2.6182796955108643
    4. ' D' → logprob: -5.368279933929443
    5. ' ' → logprob: -6.493279933929443
    6. ')' → logprob: -8.368279457092285
    7. 'd' → logprob: -8.368279457092285
    8. ' ' → logprob: -9.743279457092285
    9. '*d' → logprob: -10.868279457092285
    10. ' )' → logprob: -11.493279457092285

Token 60: ' D' (ID: 415)
  Prédit: 'D'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.001095330691896379
    2. ' D' → logprob: -6.876095294952393
    3. ')' → logprob: -10.37609577178955
    4. '*' → logprob: -10.75109577178955
    5. ' ' → logprob: -12.25109577178955
    6. ' *' → logprob: -14.00109577178955
    7. '   ' → logprob: -14.37609577178955
    8. '	D' → logprob: -14.37609577178955
    9. ' )' → logprob: -14.50109577178955
    10. 'd' → logprob: -14.62609577178955

Token 61: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0891430675983429
    2. '+' → logprob: -2.4641430377960205
    3. ')' → logprob: -8.714142799377441
    4. ')+' → logprob: -10.964142799377441
    5. 's' → logprob: -11.964142799377441
    6. ' +
' → logprob: -12.714142799377441
    7. ' plus' → logprob: -12.964142799377441
    8. '1' → logprob: -13.214142799377441
    9. ' ' → logprob: -13.339142799377441
    10. ' )' → logprob: -13.589142799377441

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002981624274980277
    2. ' ' → logprob: -8.250298500061035
    3. ')' → logprob: -10.250298500061035
    4. '<|end|>' → logprob: -14.875298500061035
    5. ' ' → logprob: -15.000298500061035
    6. ' )' → logprob: -16.43779754638672
    7. '   ' → logprob: -16.50029754638672
    8. '`)' → logprob: -16.75029754638672
    9. '')' → logprob: -16.81279754638672
    10. '")' → logprob: -17.00029754638672

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.404745439183898e-05
    2. ')' → logprob: -11.00003433227539
    3. ' ' → logprob: -11.00003433227539
    4. '<|end|>' → logprob: -15.00003433227539
    5. '１' → logprob: -16.62503433227539
    6. '۱' → logprob: -17.06253433227539
    7. '<|end|>' → logprob: -17.12503433227539
    8. '```' → logprob: -17.37503433227539
    9. '+' → logprob: -18.06253433227539
    10. ' ' → logprob: -18.06253433227539

Token 64: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.191489642835222e-05
    2. ' )' → logprob: -10.125041961669922
    3. ')
' → logprob: -13.375041961669922
    4. '')' → logprob: -16.875041961669922
    5. '))' → logprob: -17.625041961669922
    6. '）' → logprob: -18.000041961669922
    7. ')#' → logprob: -18.500041961669922
    8. ')

' → logprob: -18.500041961669922
    9. '),' → logprob: -18.625041961669922
    10. '`)' → logprob: -18.625041961669922

Token 65: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.700132997939363e-05
    2. ' print' → logprob: -11.125017166137695
    3. 'if' → logprob: -13.625017166137695
    4. '```' → logprob: -14.750017166137695
    5. '
' → logprob: -15.000017166137695
    6. 'N' → logprob: -16.000017166137695
    7. '\n' → logprob: -16.875017166137695
    8. '\' → logprob: -17.000017166137695
    9. ' if' → logprob: -17.875017166137695
    10. '#' → logprob: -18.375017166137695

Token 66: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6932793259620667
    2. '(cnt' → logprob: -0.6932793259620667
    3. '('' → logprob: -9.818279266357422
    4. '()' → logprob: -9.943279266357422
    5. '(count' → logprob: -11.193279266357422
    6. '(C' → logprob: -12.818279266357422
    7. '(len' → logprob: -12.943279266357422
    8. '("' → logprob: -13.068279266357422
    9. '((' → logprob: -13.568279266357422
    10. '(
' → logprob: -13.693279266357422

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.875
    3. '))' → logprob: -16.625
    4. '')' → logprob: -17.25
    5. ')`' → logprob: -17.375
    6. ')
' → logprob: -17.875
    7. '`)' → logprob: -17.875
    8. '）' → logprob: -18.75
    9. ')}' → logprob: -19.875
    10. '")' → logprob: -19.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 65
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 19
Tokens correctement prédits (top 10): 53
Précision stricte (1ère position): 29.23%
Précision adaptée (1ère position): 29.23%
Précision (top 10): 81.54%
================================================================================
