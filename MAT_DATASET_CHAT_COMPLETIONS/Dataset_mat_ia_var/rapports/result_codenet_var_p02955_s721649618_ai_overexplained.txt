================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Définition de la fonction yakusu qui retourne tous les diviseurs de n
def yakusu(n):
    # Création de deux listes pour stocker les diviseurs trouvés :
    # lower_divisors pour les petits diviseurs, upper_divisors pour les grands diviseurs
    lower_divisors , upper_divisors = [], []
    # Initialisation d'un compteur i qui sera utilisé pour vérifier tous les nombres de 1 à la racine carrée de n
    i = 1
    # La boucle continue tant que i * i <= n, c'est-à-dire jusqu'à la racine carrée de n
    while i*i <= n:
        # Si n est divisible par i, c'est-à-dire que le reste de la division de n par i est 0
        if n % i == 0:
            # On ajoute i à la liste des petits diviseurs
            lower_divisors.append(i)
            # Si i n'est pas égal à n//i (pour ne pas ajouter deux fois la racine carrée si n est un carré parfait)
            if i != n // i:
                # On ajoute n//i à la liste des grands diviseurs
                upper_divisors.append(n//i)
        # Incrémentation de i pour tester le nombre suivant
        i += 1
    # Retourne la liste complète des diviseurs en pratiquant une concaténation de la première avec la seconde inversée
    return lower_divisors + upper_divisors[::-1]

# Lecture de deux entiers N et K à partir de l'entrée standard, séparés par un espace
N,K=map(int,input().split())
# Lecture d'une liste de N entiers séparés par un espace et création de la liste L
L=list(map(int,input().split()))
# Calcule la somme totale de tous les entiers dans la liste L
a=sum(L)
# Obtient tous les diviseurs de la somme a, puis inverse cette liste pour traiter les grands diviseurs en premier
R=yakusu(a)[::-1]

# Boucle pour traiter chaque diviseur potentiel (chaque valeur de s dans R)
for i in range(len(R)):
    # Initialisation des variables pour compter le nombre total de modifications pour "ajouter" ou "retirer" des éléments
    add=0  # Compte le nombre total à ajouter pour que les éléments deviennent multiples de s
    minus=0  # Compte le nombre total à enlever pour arriver à un multiple de s
    s=R[i]  # Le diviseur courant à traiter
    # Création de deux listes vides pour stocker les opérations élémentaires (détails des modifications pour chaque élément)
    A=list()  # Stocke les valeurs à retirer (minus)
    B=list()  # Stocke les valeurs à ajouter (add)
    # Parcourt chaque élément dans la liste L (pour chaque participant/élément)
    for j in range(N):
        k=L[j]    # Prend la valeur de l'élément courant
        a=k%s     # Calcule le reste (modulo) de k par s pour savoir combien il faut retirer pour arriver à un multiple
        b=s-a     # Calcule combien il faudrait ajouter à k pour arriver au multiple supérieur de s
        # Si retirer a coûterait plus qu'ajouter b, on préfère ajouter
        if a>b:
            add+=b       # On incrémente le coût total à ajouter
            B.append(b)  # On ajoute la quantité ajoutée à la liste B
        # Sinon, si retirer est moins coûteux que d'ajouter, on retire
        elif a<b:
            minus+=a      # On incrémente le coût total à retirer
            A.append(a)   # On ajoute cette quantité à la liste A
        else:
            # Si les coûts d'ajouter et de retirer sont égaux, on les compte comme des additions
            add+=a
            B.append(a)
    # Trie la liste A (valeurs à retirer) par ordre croissant
    A=sorted(A)
    # Trie la liste B (valeurs à ajouter) par ordre croissant
    B=sorted(B)
    # Si le total à retirer est égal au total à ajouter
    if minus==add:
        d=minus      # On peut les appeler "d", le coût total nécessaire pour l'équilibrage
        if d<=K:     # Si ce coût total ne dépasse pas la limite permise K
            print(s) # Affiche le diviseur actuel (la réponse)
            exit()   # Arrête immédiatement l'exécution du programme (puisqu'une solution a été trouvée)
    # Si le total à retirer dépasse le total à ajouter
    elif minus>add:
        # On détermine combien d'éléments parmi les plus grands de A on peut ignorer pour "équilibrer les deux côtés"
        q=(minus-add)//s   # La différence divisée par s donne combien d'éléments on doit ignorer
        # On somme les plus petits éléments de A (en ignorant les plus grands pour équilibrage)
        d=sum(A[:len(A)-q])
        if d<=K:     # Si le coût ne dépasse pas K, c'est valide
            print(s) # Affiche la valeur de s retenue
            exit()   # Fin immédiate
    else:
        # Même logique que ci-dessus, mais on s'intéresse maintenant aux ajouts (B) car add > minus
        q=(add-minus)//s   # Nombre d'éléments à ignorer du haut de B pour équilibrer
        # On somme les plus petits éléments de B
        d=sum(B[:len(B)-q])
        if d<=K:           # Si le coût ne dépasse pas K, c'est valable
            print(s)       # On affiche s
            exit()         # Fin immédiate du programme
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dé' (ID: 27247)
  → Token d'amorce (pas de prédiction)

Token 2: 'fin' (ID: 6994)
  → Token d'amorce (pas de prédiction)

Token 3: 'ition' (ID: 868)
  Prédit: 'ition'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ition' → logprob: -0.5385986566543579
    2. 'inition' → logprob: -1.038598656654358
    3. 't' → logprob: -3.2885985374450684
    4. 'it' → logprob: -5.163598537445068
    5. 'i' → logprob: -5.288598537445068
    6. '#' → logprob: -6.163598537445068
    7. ' ```' → logprob: -6.413598537445068
    8. 'tion' → logprob: -6.413598537445068
    9. 'ation' → logprob: -6.913598537445068
    10. 'ine' → logprob: -7.038598537445068

Token 4: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8412037491798401
    2. ' ' → logprob: -1.8412036895751953
    3. ' de' → logprob: -2.3412036895751953
    4. ' d' → logprob: -2.4662036895751953
    5. ' :' → logprob: -2.4662036895751953
    6. '_' → logprob: -2.5912036895751953
    7. 's' → logprob: -3.2162036895751953
    8. ' =' → logprob: -5.216203689575195
    9. '```' → logprob: -5.341203689575195
    10. 'd' → logprob: -5.466203689575195

Token 5: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.2887917757034302
    2. 'la' → logprob: -2.4137916564941406
    3. 'l' → logprob: -3.0387916564941406
    4. 'class' → logprob: -3.6637916564941406
    5. 'une' → logprob: -3.7887916564941406
    6. ' l' → logprob: -4.413791656494141
    7. ' ' → logprob: -4.663791656494141
    8. ' class' → logprob: -4.663791656494141
    9. 'classe' → logprob: -4.913791656494141
    10. '```' → logprob: -5.038791656494141

Token 6: ' fonction' (ID: 17610)
  Prédit: 'fonction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fonction' → logprob: -0.13947102427482605
    2. 'classe' → logprob: -2.3894710540771484
    3. 'class' → logprob: -4.389471054077148
    4. ' fonction' → logprob: -4.514471054077148
    5. 'f' → logprob: -5.264471054077148
    6. 'function' → logprob: -6.014471054077148
    7. 'fon' → logprob: -6.139471054077148
    8. ' ' → logprob: -6.889471054077148
    9. ' classe' → logprob: -6.889471054077148
    10. '#' → logprob: -7.639471054077148

Token 7: ' yak' (ID: 16000)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.701842188835144
    2. ' ' → logprob: -1.951842188835144
    3. 'd' → logprob: -2.2018423080444336
    4. 's' → logprob: -2.2018423080444336
    5. ':' → logprob: -3.2018423080444336
    6. ' def' → logprob: -3.8268423080444336
    7. '_' → logprob: -4.076842308044434
    8. '```' → logprob: -4.076842308044434
    9. ' d' → logprob: -4.326842308044434
    10. '(' → logprob: -4.951842308044434

Token 8: 'usu' (ID: 21118)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013073168694972992
    2. '_' → logprob: -5.263072967529297
    3. 'def' → logprob: -5.638072967529297
    4. ' (' → logprob: -6.638072967529297
    5. 's' → logprob: -7.513072967529297
    6. '```' → logprob: -7.763072967529297
    7. '=' → logprob: -7.888072967529297
    8. '()' → logprob: -8.138072967529297
    9. ' ' → logprob: -8.513072967529297
    10. ':' → logprob: -8.513072967529297

Token 9: ' qui' (ID: 2780)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2108996957540512
    2. '(' → logprob: -1.9608997106552124
    3. ':' → logprob: -3.960899591445923
    4. ' ' → logprob: -4.710899829864502
    5. ' :' → logprob: -4.835899829864502
    6. ' def' → logprob: -5.210899829864502
    7. ' (' → logprob: -5.835899829864502
    8. '():' → logprob: -6.585899829864502
    9. ' =' → logprob: -7.585899829864502
    10. '_' → logprob: -7.835899829864502

Token 10: ' retourne' (ID: 178818)
  Prédit: ' calc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calc' → logprob: -1.2546559572219849
    2. ' prend' → logprob: -1.6296559572219849
    3. 'calcul' → logprob: -1.8796559572219849
    4. 'cal' → logprob: -2.0046558380126953
    5. 'calc' → logprob: -2.1296558380126953
    6. 'mult' → logprob: -3.1296558380126953
    7. ' multipl' → logprob: -3.5046558380126953
    8. 'pr' → logprob: -4.129655838012695
    9. 'multip' → logprob: -5.504655838012695
    10. ' prends' → logprob: -5.879655838012695

Token 11: ' tous' (ID: 10688)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.43279603123664856
    2. 'la' → logprob: -1.9327960014343262
    3. ' le' → logprob: -2.307796001434326
    4. 'le' → logprob: -2.807796001434326
    5. ' ' → logprob: -4.307796001434326
    6. 'l' → logprob: -5.432796001434326
    7. ' l' → logprob: -5.432796001434326
    8. ' une' → logprob: -5.682796001434326
    9. 'lambda' → logprob: -5.807796001434326
    10. 'a' → logprob: -5.932796001434326

Token 12: ' les' (ID: 1341)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.32111820578575134
    2. ' ' → logprob: -1.9461182355880737
    3. 's' → logprob: -3.196118116378784
    4. ' les' → logprob: -3.196118116378784
    5. 'les' → logprob: -3.571118116378784
    6. '(' → logprob: -4.696118354797363
    7. 'es' → logprob: -5.446118354797363
    8. '_le' → logprob: -6.321118354797363
    9. '_l' → logprob: -6.446118354797363
    10. '_t' → logprob: -7.196118354797363

Token 13: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.04994570463895798
    2. 'ent' → logprob: -4.049945831298828
    3. ' div' → logprob: -4.549945831298828
    4. ' nombres' → logprob: -5.049945831298828
    5. 'd' → logprob: -5.549945831298828
    6. ' facteurs' → logprob: -5.799945831298828
    7. 'multip' → logprob: -6.174945831298828
    8. 'n' → logprob: -6.924945831298828
    9. 'fact' → logprob: -7.049945831298828
    10. '\t' → logprob: -7.424945831298828

Token 14: 'ise' (ID: 1096)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3770194947719574
    2. '(' → logprob: -2.3770194053649902
    3. '_' → logprob: -2.6270194053649902
    4. 'def' → logprob: -2.7520194053649902
    5. '```' → logprob: -3.3770194053649902
    6. '_elements' → logprob: -3.7520194053649902
    7. '[' → logprob: -5.62701940536499
    8. 'elements' → logprob: -5.62701940536499
    9. 'e' → logprob: -6.25201940536499
    10. 'u' → logprob: -6.50201940536499

Token 15: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.4753005802631378
    2. 'u' → logprob: -0.9753005504608154
    3. 'r' → logprob: -7.7253007888793945
    4. 'ur' → logprob: -7.7253007888793945
    5. 'n' → logprob: -8.725300788879395
    6. 'rs' → logprob: -9.600300788879395
    7. 'm' → logprob: -10.350300788879395
    8. '```' → logprob: -10.850300788879395
    9. 's' → logprob: -10.975300788879395
    10. '_' → logprob: -11.225300788879395

Token 16: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11827349662780762
    2. '_' → logprob: -2.4932734966278076
    3. 's' → logprob: -4.368273735046387
    4. 'def' → logprob: -5.368273735046387
    5. 'u' → logprob: -5.868273735046387
    6. ''' → logprob: -5.993273735046387
    7. ':' → logprob: -6.118273735046387
    8. ' (' → logprob: -6.868273735046387
    9. 'de' → logprob: -6.993273735046387
    10. ',' → logprob: -7.368273735046387

Token 17: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5118095874786377
    2. ' n' → logprob: -1.0118095874786377
    3. ' ' → logprob: -4.636809349060059
    4. 'l' → logprob: -5.011809349060059
    5. 'a' → logprob: -5.136809349060059
    6. 'nombre' → logprob: -6.136809349060059
    7. 'la' → logprob: -6.261809349060059
    8. ' a' → logprob: -6.386809349060059
    9. 'un' → logprob: -6.386809349060059
    10. ' la' → logprob: -6.511809349060059

Token 18: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11905989050865173
    2. ':' → logprob: -2.6190598011016846
    3. '```' → logprob: -3.4940598011016846
    4. 'd' → logprob: -5.494060039520264
    5. ' :' → logprob: -6.119060039520264
    6. ' def' → logprob: -7.869060039520264
    7. ':def' → logprob: -7.994060039520264
    8. ',' → logprob: -8.119059562683105
    9. ''' → logprob: -8.119059562683105
    10. '(' → logprob: -8.369059562683105

Token 19: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017081163823604584
    2. '```' → logprob: -4.642081260681152
    3. ':' → logprob: -5.017081260681152
    4. ' :' → logprob: -8.392081260681152
    5. ' def' → logprob: -8.642081260681152
    6. ':def' → logprob: -9.017081260681152
    7. ',' → logprob: -10.392081260681152
    8. ' ```' → logprob: -10.642081260681152
    9. 'd' → logprob: -10.767081260681152
    10. 'de' → logprob: -10.767081260681152

Token 20: ' yak' (ID: 16000)
  Prédit: ' yak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yak' → logprob: -0.004290064796805382
    2. ' ' → logprob: -5.5042901039123535
    3. ' ' → logprob: -8.754289627075195
    4. 'yak' → logprob: -10.004289627075195
    5. ' y' → logprob: -13.254289627075195
    6. ' ‌' → logprob: -13.754289627075195
    7. ' ' → logprob: -13.879289627075195
    8. ' Yak' → logprob: -14.004289627075195
    9. ' yat' → logprob: -14.379289627075195
    10. ' yax' → logprob: -14.629289627075195

Token 21: 'usu' (ID: 21118)
  Prédit: 'usu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usu' → logprob: -0.01944945752620697
    2. 'su' → logprob: -4.519449234008789
    3. ' usu' → logprob: -6.269449234008789
    4. 's' → logprob: -6.519449234008789
    5. '_s' → logprob: -7.144449234008789
    6. 'us' → logprob: -7.394449234008789
    7. '_' → logprob: -7.644449234008789
    8. ' su' → logprob: -7.644449234008789
    9. '_us' → logprob: -7.769449234008789
    10. 'u' → logprob: -8.019449234008789

Token 22: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018274961039423943
    2. '(n' → logprob: -4.018274784088135
    3. '_' → logprob: -9.768275260925293
    4. ' (' → logprob: -9.893275260925293
    5. 's' → logprob: -12.268275260925293
    6. 'def' → logprob: -13.393275260925293
    7. '(_' → logprob: -13.518275260925293
    8. '```' → logprob: -13.518275260925293
    9. '(x' → logprob: -13.643275260925293
    10. '("("' → logprob: -14.268275260925293

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016137711703777313
    2. ')' → logprob: -4.141137599945068
    3. ':' → logprob: -9.391138076782227
    4. ' ):' → logprob: -11.141138076782227
    5. ')：' → logprob: -13.266138076782227
    6. '):
' → logprob: -13.891138076782227
    7. '   ' → logprob: -14.641138076782227
    8. '）：' → logprob: -15.141138076782227
    9. ' :' → logprob: -15.641138076782227
    10. ',' → logprob: -15.641138076782227

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021220779046416283
    2. ':' → logprob: -4.021220684051514
    3. ' ' → logprob: -6.896220684051514
    4. '[' → logprob: -7.271220684051514
    5. '```' → logprob: -8.021221160888672
    6. '    
' → logprob: -8.271221160888672
    7. ':
' → logprob: -8.771221160888672
    8. '    ' → logprob: -9.396221160888672
    9. '  
' → logprob: -9.521221160888672
    10. '   
' → logprob: -9.521221160888672

Token 25: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011102055199444294
    2. '    ' → logprob: -6.011102199554443
    3. '[' → logprob: -6.136102199554443
    4. 'd' → logprob: -6.386102199554443
    5. ' ' → logprob: -6.511102199554443
    6. '```' → logprob: -7.761102199554443
    7. 'r' → logprob: -8.011101722717285
    8. ' return' → logprob: -8.136101722717285
    9. 's' → logprob: -8.136101722717285
    10. '   ' → logprob: -8.386101722717285

Token 26: ' Cré' (ID: 109203)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.1832141876220703
    2. ' div' → logprob: -1.3082141876220703
    3. '   ' → logprob: -1.4332141876220703
    4. ' divis' → logprob: -2.9332141876220703
    5. ' result' → logprob: -3.4332141876220703
    6. 'result' → logprob: -3.8082141876220703
    7. ' return' → logprob: -4.05821418762207
    8. '    ' → logprob: -4.30821418762207
    9. ' lst' → logprob: -5.18321418762207
    10. ' ' → logprob: -5.30821418762207

Token 27: 'ation' (ID: 387)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.06486870348453522
    2. 'ation' → logprob: -3.439868688583374
    3. 'ate' → logprob: -3.939868688583374
    4. 'd' → logprob: -4.689868927001953
    5. 'r' → logprob: -7.814868927001953
    6. 'tion' → logprob: -8.064868927001953
    7. '```' → logprob: -8.189868927001953
    8. 't' → logprob: -8.564868927001953
    9. 'e' → logprob: -8.939868927001953
    10. 'ons' → logprob: -8.939868927001953

Token 28: ' de' (ID: 334)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.5963224768638611
    2. '[]' → logprob: -0.9713224768638611
    3. ' d' → logprob: -3.346322536468506
    4. '   ' → logprob: -4.221322536468506
    5. ' ' → logprob: -4.846322536468506
    6. '[' → logprob: -5.346322536468506
    7. '=[]' → logprob: -6.096322536468506
    8. ' [' → logprob: -6.846322536468506
    9. ' de' → logprob: -7.221322536468506
    10. 's' → logprob: -7.346322536468506

Token 29: ' deux' (ID: 10301)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.030391214415431023
    2. '[]' → logprob: -3.905391216278076
    3. ' [' → logprob: -5.030391216278076
    4. ' ' → logprob: -7.030391216278076
    5. ' la' → logprob: -7.280391216278076
    6. '[' → logprob: -7.530391216278076
    7. ' une' → logprob: -8.030390739440918
    8. ' un' → logprob: -8.280390739440918
    9. ' a' → logprob: -9.030390739440918
    10. 'une' → logprob: -9.530390739440918

Token 30: ' listes' (ID: 179198)
  Prédit: ' listes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' listes' → logprob: -0.19363486766815186
    2. ' list' → logprob: -2.6936349868774414
    3. 'list' → logprob: -3.1936349868774414
    4. ' lists' → logprob: -3.4436349868774414
    5. ' []' → logprob: -3.6936349868774414
    6. ' liste' → logprob: -5.443634986877441
    7. ' ' → logprob: -5.943634986877441
    8. '_list' → logprob: -6.568634986877441
    9. 'lists' → logprob: -7.193634986877441
    10. 'liste' → logprob: -7.693634986877441

Token 31: ' pour' (ID: 1930)
  Prédit: ' divis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' divis' → logprob: -0.6553624272346497
    2. 'div' → logprob: -1.4053623676300049
    3. ' des' → logprob: -3.655362367630005
    4. '_div' → logprob: -3.905362367630005
    5. ' div' → logprob: -4.030362606048584
    6. '[]' → logprob: -4.030362606048584
    7. ' []' → logprob: -4.030362606048584
    8. '```' → logprob: -4.155362606048584
    9. ' =' → logprob: -4.530362606048584
    10. ' ' → logprob: -4.530362606048584

Token 32: ' stock' (ID: 6546)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.17553701996803284
    2. ' stock' → logprob: -3.300537109375
    3. 'les' → logprob: -3.425537109375
    4. ' []' → logprob: -3.675537109375
    5. '[]' → logprob: -4.050537109375
    6. ' ' → logprob: -4.425537109375
    7. 'r' → logprob: -5.175537109375
    8. '[' → logprob: -5.675537109375
    9. ' recop' → logprob: -5.675537109375
    10. ' r' → logprob: -6.175537109375

Token 33: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0008408344583585858
    2. 'e' → logprob: -7.375840663909912
    3. '_er' → logprob: -9.62584114074707
    4. '   ' → logprob: -10.00084114074707
    5. '_' → logprob: -10.25084114074707
    6. '­er' → logprob: -11.62584114074707
    7. 'r' → logprob: -11.75084114074707
    8. '[]' → logprob: -11.75084114074707
    9. '[' → logprob: -11.75084114074707
    10. '#' → logprob: -11.87584114074707

Token 34: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.14465641975402832
    2. '[]' → logprob: -3.0196564197540283
    3. 'les' → logprob: -3.2696564197540283
    4. ' []' → logprob: -3.7696564197540283
    5. ' ' → logprob: -4.519656181335449
    6. ' la' → logprob: -5.519656181335449
    7. ' [' → logprob: -6.019656181335449
    8. '[' → logprob: -6.144656181335449
    9. 's' → logprob: -7.019656181335449
    10. ' ceux' → logprob: -7.394656181335449

Token 35: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.32691529393196106
    2. ' div' → logprob: -1.5769152641296387
    3. ' ' → logprob: -3.4519152641296387
    4. ' petits' → logprob: -4.076915264129639
    5. ' facteurs' → logprob: -5.076915264129639
    6. ' nombres' → logprob: -5.201915264129639
    7. ' divis' → logprob: -5.701915264129639
    8. '   ' → logprob: -6.576915264129639
    9. '1' → logprob: -6.701915264129639
    10. ' i' → logprob: -6.951915264129639

Token 36: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.06469418853521347
    2. '   ' → logprob: -3.0646941661834717
    3. 'is' → logprob: -5.564694404602051
    4. 'i' → logprob: -6.314694404602051
    5. 'isateurs' → logprob: -6.564694404602051
    6. 'eurs' → logprob: -6.689694404602051
    7. ' ' → logprob: -6.939694404602051
    8. '     ' → logprob: -7.064694404602051
    9. 'iseur' → logprob: -7.189694404602051
    10. '    ' → logprob: -7.189694404602051

Token 37: 'urs' (ID: 1628)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.17996689677238464
    2. 'urs' → logprob: -1.804966926574707
    3. 'ur' → logprob: -9.429966926574707
    4. '```' → logprob: -10.554966926574707
    5. '[u' → logprob: -11.054966926574707
    6. 'uers' → logprob: -11.179966926574707
    7. 'rs' → logprob: -11.179966926574707
    8. '   ' → logprob: -11.429966926574707
    9. 'r' → logprob: -11.679966926574707
    10. 'urse' → logprob: -11.804966926574707

Token 38: ' trouv' (ID: 40254)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5880683660507202
    2. '[' → logprob: -1.8380683660507202
    3. 'div' → logprob: -2.2130684852600098
    4. '[]' → logprob: -3.3380684852600098
    5. 's' → logprob: -3.8380684852600098
    6. 'd' → logprob: -4.21306848526001
    7. 'a' → logprob: -4.21306848526001
    8. ' gauche' → logprob: -4.58806848526001
    9. 'de' → logprob: -4.58806848526001
    10. ' divis' → logprob: -4.71306848526001

Token 39: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.005303720012307167
    2. 'é' → logprob: -5.630303859710693
    3. 'es' → logprob: -6.505303859710693
    4. 'ées' → logprob: -9.005303382873535
    5. 'e' → logprob: -10.380303382873535
    6. 'ès' → logprob: -11.130303382873535
    7. 'er' → logprob: -11.380303382873535
    8. 'ée' → logprob: -11.380303382873535
    9. '   ' → logprob: -12.505303382873535
    10. 's' → logprob: -13.005303382873535

Token 40: ' :
' (ID: 10039)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2681342363357544
    2. 'div' → logprob: -1.2681342363357544
    3. '   ' → logprob: -2.143134117126465
    4. '_' → logprob: -2.768134117126465
    5. ' divis' → logprob: -3.143134117126465
    6. 's' → logprob: -3.268134117126465
    7. '[]' → logprob: -3.643134117126465
    8. 'a' → logprob: -3.643134117126465
    9. ' ' → logprob: -4.143134117126465
    10. 'd' → logprob: -4.768134117126465

Token 41: '   ' (ID: 271)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.2896864414215088
    2. ' []' → logprob: -1.2896864414215088
    3. '[' → logprob: -1.7896864414215088
    4. 'div' → logprob: -2.789686441421509
    5. ' [' → logprob: -3.539686441421509
    6. '   ' → logprob: -3.539686441421509
    7. ' d' → logprob: -3.789686441421509
    8. ' divis' → logprob: -4.03968620300293
    9. ' gauche' → logprob: -4.28968620300293
    10. 'd' → logprob: -4.28968620300293

Token 42: ' #' (ID: 1069)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -1.1639057397842407
    2. 'div' → logprob: -1.6639057397842407
    3. 'small' → logprob: -2.538905620574951
    4. '[' → logprob: -2.788905620574951
    5. ' []' → logprob: -3.163905620574951
    6. ' petits' → logprob: -3.413905620574951
    7. ' small' → logprob: -3.538905620574951
    8. 'liste' → logprob: -3.663905620574951
    9. ' petites' → logprob: -3.788905620574951
    10. ' divis' → logprob: -3.788905620574951

Token 43: ' lower' (ID: 6931)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -1.3014371395111084
    2. ' divis' → logprob: -1.8014371395111084
    3. ' div' → logprob: -2.5514371395111084
    4. ' small' → logprob: -2.5514371395111084
    5. ' gauche' → logprob: -3.1764371395111084
    6. ' []' → logprob: -3.3014371395111084
    7. '[' → logprob: -3.5514371395111084
    8. ' a' → logprob: -3.8014371395111084
    9. '[]' → logprob: -3.9264371395111084
    10. ' [' → logprob: -3.9264371395111084

Token 44: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.27093517780303955
    2. 's' → logprob: -1.5209351778030396
    3. '_s' → logprob: -4.52093505859375
    4. '_div' → logprob: -5.14593505859375
    5. '_list' → logprob: -7.52093505859375
    6. ' _' → logprob: -7.77093505859375
    7. '=[]' → logprob: -8.52093505859375
    8. '_bound' → logprob: -8.52093505859375
    9. ' =' → logprob: -8.64593505859375
    10. '_indices' → logprob: -9.39593505859375

Token 45: 'is' (ID: 276)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24886353313922882
    2. '_' → logprob: -2.623863458633423
    3. 'ers' → logprob: -3.248863458633423
    4. 'eurs' → logprob: -3.373863458633423
    5. 'ors' → logprob: -3.748863458633423
    6. 'es' → logprob: -4.748863697052002
    7. 'is' → logprob: -4.748863697052002
    8. '=[]' → logprob: -4.998863697052002
    9. 'ieurs' → logprob: -5.623863697052002
    10. 'iers' → logprob: -5.623863697052002

Token 46: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.3491978645324707
    2. 'eurs' → logprob: -1.4741978645324707
    3. 'e' → logprob: -3.3491978645324707
    4. 'urs' → logprob: -4.349197864532471
    5. '```' → logprob: -5.099197864532471
    6. 'ers' → logprob: -5.974197864532471
    7. 'eux' → logprob: -6.224197864532471
    8. 'rs' → logprob: -6.474197864532471
    9. 'se' → logprob: -6.849197864532471
    10. 's' → logprob: -6.849197864532471

Token 47: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.002349122893065214
    2. '=' → logprob: -6.252348899841309
    3. '=[]' → logprob: -8.127348899841309
    4. ',' → logprob: -10.002348899841309
    5. 's' → logprob: -10.252348899841309
    6. ' =[' → logprob: -11.002348899841309
    7. '_' → logprob: -11.877348899841309
    8. '=[]
' → logprob: -12.002348899841309
    9. ' ,' → logprob: -12.752348899841309
    10. '[]' → logprob: -13.127348899841309

Token 48: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.10228797793388367
    2. 'les' → logprob: -2.602288007736206
    3. ' ceux' → logprob: -4.227287769317627
    4. '<|end|>' → logprob: -5.852287769317627
    5. 's' → logprob: -6.727287769317627
    6. 'div' → logprob: -7.102287769317627
    7. ' celles' → logprob: -7.727287769317627
    8. ' ' → logprob: -7.727287769317627
    9. 'the' → logprob: -8.352288246154785
    10. '100' → logprob: -8.477288246154785

Token 49: ' petits' (ID: 38141)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6917304396629333
    2. ' petits' → logprob: -1.5667304992675781
    3. 'pet' → logprob: -1.9417304992675781
    4. ' div' → logprob: -2.816730499267578
    5. ' petites' → logprob: -2.941730499267578
    6. ' plus' → logprob: -3.816730499267578
    7. ' pet' → logprob: -5.691730499267578
    8. ' petit' → logprob: -5.941730499267578
    9. 'plus' → logprob: -6.441730499267578
    10. ' divis' → logprob: -6.566730499267578

Token 50: ' div' (ID: 4223)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.09627291560173035
    2. 'is' → logprob: -2.8462729454040527
    3. 'i' → logprob: -4.596272945404053
    4. '   ' → logprob: -4.971272945404053
    5. '```' → logprob: -5.471272945404053
    6. 'iseur' → logprob: -5.721272945404053
    7. 's' → logprob: -6.346272945404053
    8. 'iv' → logprob: -6.596272945404053
    9. 'vise' → logprob: -6.846272945404053
    10. 'e' → logprob: -7.471272945404053

Token 52: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.020600629970431328
    2. 'u' → logprob: -3.8956005573272705
    3. 'ur' → logprob: -10.145600318908691
    4. '```' → logprob: -12.520600318908691
    5. '   ' → logprob: -12.895600318908691
    6. 'urse' → logprob: -13.395600318908691
    7. 'urses' → logprob: -13.520600318908691
    8. 'us' → logprob: -13.645600318908691
    9. 's' → logprob: -13.895600318908691
    10. ' u' → logprob: -14.145600318908691

Token 53: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15885286033153534
    2. ' =' → logprob: -3.1588528156280518
    3. '[]' → logprob: -3.5338528156280518
    4. ',' → logprob: -3.7838528156280518
    5. '[' → logprob: -3.7838528156280518
    6. '<|end|>' → logprob: -5.158853054046631
    7. '    ' → logprob: -5.283853054046631
    8. ' ' → logprob: -5.533853054046631
    9. '=' → logprob: -6.158853054046631
    10. ' ,' → logprob: -6.283853054046631

Token 54: ' upper' (ID: 13057)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.6520382165908813
    2. '   ' → logprob: -1.2770382165908813
    3. 'lower' → logprob: -1.6520382165908813
    4. ' and' → logprob: -6.027038097381592
    5. '    
' → logprob: -6.902038097381592
    6. '    ' → logprob: -6.902038097381592
    7. '[]' → logprob: -7.277038097381592
    8. '(lower' → logprob: -7.652038097381592
    9. '```' → logprob: -7.777038097381592
    10. '_lower' → logprob: -8.02703857421875

Token 55: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.011112194508314133
    2. '_' → logprob: -4.511112213134766
    3. ' _' → logprob: -10.386112213134766
    4. '_de' → logprob: -12.261112213134766
    5. '_d' → logprob: -12.386112213134766
    6. 'div' → logprob: -12.511112213134766
    7. '<|end|>' → logprob: -12.886112213134766
    8. '_part' → logprob: -13.136112213134766
    9. '_def' → logprob: -13.261112213134766
    10. '```' → logprob: -13.511112213134766

Token 56: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.02457704022526741
    2. 's' → logprob: -3.8995771408081055
    3. 'ors' → logprob: -5.8995771408081055
    4. 'iors' → logprob: -8.274577140808105
    5. 'ise' → logprob: -8.649577140808105
    6. 'ectors' → logprob: -9.149577140808105
    7. 'iders' → logprob: -9.649577140808105
    8. 'ers' → logprob: -9.649577140808105
    9. 'itors' → logprob: -9.899577140808105
    10. 'isi' → logprob: -9.899577140808105

Token 57: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0013272607466205955
    2. 'ons' → logprob: -7.251327037811279
    3. 'on' → logprob: -8.626327514648438
    4. 'tors' → logprob: -9.501327514648438
    5. 'or' → logprob: -9.751327514648438
    6. '   ' → logprob: -10.126327514648438
    7. '```' → logprob: -10.251327514648438
    8. 'o' → logprob: -11.001327514648438
    9. 'vors' → logprob: -11.001327514648438
    10. 'rs' → logprob: -11.126327514648438

Token 58: ' pour' (ID: 1930)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.015819085761904716
    2. '=' → logprob: -4.515819072723389
    3. '=[]' → logprob: -5.390819072723389
    4. ' for' → logprob: -9.265819549560547
    5. 'for' → logprob: -10.515819549560547
    6. '[]' → logprob: -10.765819549560547
    7. '=[]
' → logprob: -11.265819549560547
    8. ' pour' → logprob: -11.765819549560547
    9. ':' → logprob: -11.765819549560547
    10. ' ' → logprob: -12.390819549560547

Token 59: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.38906213641166687
    2. 'les' → logprob: -1.1390621662139893
    3. '<|end|>' → logprob: -7.51406192779541
    4. 's' → logprob: -7.88906192779541
    5. '```' → logprob: -8.63906192779541
    6. 'des' → logprob: -9.01406192779541
    7. '[]' → logprob: -9.01406192779541
    8. ' leurs' → logprob: -9.13906192779541
    9. 'es' → logprob: -9.51406192779541
    10. '#' → logprob: -9.51406192779541

Token 60: ' grands' (ID: 43085)
  Prédit: ' grands'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grands' → logprob: -0.167046919465065
    2. 'gr' → logprob: -1.9170469045639038
    3. ' grandes' → logprob: -5.917047023773193
    4. ' grand' → logprob: -6.667047023773193
    5. 'grand' → logprob: -6.917047023773193
    6. ' plus' → logprob: -6.917047023773193
    7. ' larger' → logprob: -8.667046546936035
    8. ' grans' → logprob: -8.667046546936035
    9. 'larg' → logprob: -8.792046546936035
    10. ' gros' → logprob: -9.417046546936035

Token 61: ' div' (ID: 4223)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3890064060688019
    2. '_div' → logprob: -1.1390063762664795
    3. 'div' → logprob: -7.514006614685059
    4. ' ' → logprob: -7.514006614685059
    5. 's' → logprob: -7.639006614685059
    6. '   ' → logprob: -9.264006614685059
    7. ' =' → logprob: -9.389006614685059
    8. ' _' → logprob: -9.514006614685059
    9. '_lower' → logprob: -10.264006614685059
    10. '_s' → logprob: -10.389006614685059

Token 62: 'ise' (ID: 1096)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5852878093719482
    2. 'is' → logprob: -1.3352878093719482
    3. 'ise' → logprob: -2.2102878093719482
    4. 'iv' → logprob: -3.4602878093719482
    5. '   ' → logprob: -5.085288047790527
    6. '_' → logprob: -5.210288047790527
    7. '_i' → logprob: -5.460288047790527
    8. 's' → logprob: -5.585288047790527
    9. '```' → logprob: -5.835288047790527
    10. 'e' → logprob: -5.960288047790527

Token 63: 'urs' (ID: 1628)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.47968584299087524
    2. 'urs' → logprob: -0.9796858429908752
    3. 'v' → logprob: -5.6046857833862305
    4. 'rs' → logprob: -7.3546857833862305
    5. 'ur' → logprob: -7.7296857833862305
    6. 'r' → logprob: -8.35468578338623
    7. 's' → logprob: -8.60468578338623
    8. '```' → logprob: -9.47968578338623
    9. 'uers' → logprob: -9.47968578338623
    10. 'urse' → logprob: -10.35468578338623

Token 64: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004421574529260397
    2. 'lower' → logprob: -6.004421710968018
    3. '    
' → logprob: -7.129421710968018
    4. ' lower' → logprob: -7.379421710968018
    5. '    ' → logprob: -8.87942123413086
    6. ' =' → logprob: -9.25442123413086
    7. '
' → logprob: -10.00442123413086
    8. '```' → logprob: -10.00442123413086
    9. '  ' → logprob: -10.50442123413086
    10. ' ' → logprob: -10.62942123413086

Token 65: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038251334335654974
    2. ' lower' → logprob: -6.2538251876831055
    3. '    
' → logprob: -6.8788251876831055
    4. 'lower' → logprob: -7.5038251876831055
    5. '    ' → logprob: -9.378825187683105
    6. '
' → logprob: -9.628825187683105
    7. '```' → logprob: -9.753825187683105
    8. '  ' → logprob: -10.628825187683105
    9. '   
' → logprob: -11.128825187683105
    10. '(lower' → logprob: -11.253825187683105

Token 66: ' lower' (ID: 6931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09829419106245041
    2. ' lower' → logprob: -2.473294258117676
    3. 'lower' (adapté à ' lower') → logprob: -4.973294258117676
    4. '    
' → logprob: -6.598294258117676
    5. '    ' → logprob: -8.598294258117676
    6. ' ' → logprob: -9.223294258117676
    7. '```' → logprob: -9.223294258117676
    8. '
' → logprob: -9.348294258117676
    9. '[' → logprob: -9.723294258117676
    10. 'div' → logprob: -9.848294258117676

Token 67: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.004133137874305248
    2. '_' → logprob: -5.504133224487305
    3. '_s' → logprob: -11.129133224487305
    4. '_de' → logprob: -11.254133224487305
    5. '_d' → logprob: -11.879133224487305
    6. ' _' → logprob: -11.879133224487305
    7. '_des' → logprob: -12.629133224487305
    8. '_del' → logprob: -14.004133224487305
    9. '_list' → logprob: -14.129133224487305
    10. 's' → logprob: -14.504133224487305

Token 68: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.012432890944182873
    2. 'ors' → logprob: -4.637433052062988
    3. 's' → logprob: -7.012433052062988
    4. 'ectors' → logprob: -7.887433052062988
    5. 'itors' → logprob: -8.137433052062988
    6. 'ers' → logprob: -8.762433052062988
    7. '_' → logprob: -9.137433052062988
    8. 'isateurs' → logprob: -9.512433052062988
    9. 'esseurs' → logprob: -9.512433052062988
    10. 'isseurs' → logprob: -9.512433052062988

Token 69: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0005305142258293927
    2. 's' → logprob: -8.125530242919922
    3. 'tors' → logprob: -10.125530242919922
    4. '   ' → logprob: -10.625530242919922
    5. 'vors' → logprob: -10.750530242919922
    6. 'orsi' → logprob: -11.000530242919922
    7. 'ators' → logprob: -11.375530242919922
    8. 'rors' → logprob: -11.500530242919922
    9. 'orsu' → logprob: -11.500530242919922
    10. 'o' → logprob: -11.500530242919922

Token 70: ' ,' (ID: 1366)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007803934160619974
    2. '=' → logprob: -4.882803916931152
    3. ',' → logprob: -8.882803916931152
    4. '=[]' → logprob: -10.007803916931152
    5. ' ,' → logprob: -12.132803916931152
    6. ' ' → logprob: -12.632803916931152
    7. ' =[' → logprob: -13.132803916931152
    8. ' ' → logprob: -13.257803916931152
    9. '=[]
' → logprob: -14.632803916931152
    10. '=[' → logprob: -15.382803916931152

Token 71: ' upper' (ID: 13057)
  Prédit: ' upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' upper' → logprob: -0.10480005294084549
    2. ' ' → logprob: -3.10479998588562
    3. 'upper' → logprob: -3.47979998588562
    4. ' =' → logprob: -4.104800224304199
    5. ' []' → logprob: -5.604800224304199
    6. '=[]' → logprob: -6.729800224304199
    7. '[]' → logprob: -6.729800224304199
    8. '=' → logprob: -6.979800224304199
    9. '_upper' → logprob: -9.3548002243042
    10. '  ' → logprob: -9.4798002243042

Token 72: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.12902146577835083
    2. '_' → logprob: -2.129021406173706
    3. 's' → logprob: -7.129021644592285
    4. '=' → logprob: -7.379021644592285
    5. ' =' → logprob: -8.629021644592285
    6. ' _' → logprob: -8.629021644592285
    7. 'div' → logprob: -9.754021644592285
    8. '_des' → logprob: -10.004021644592285
    9. '_d' → logprob: -10.129021644592285
    10. '_=' → logprob: -10.379021644592285

Token 73: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.3653973639011383
    2. 'ors' → logprob: -1.240397334098816
    3. 's' → logprob: -4.1153974533081055
    4. 'itors' → logprob: -9.365397453308105
    5. 'iors' → logprob: -9.865397453308105
    6. 'ectors' → logprob: -9.865397453308105
    7. '=' → logprob: -9.990397453308105
    8. 'os' → logprob: -10.240397453308105
    9. 'rs' → logprob: -10.865397453308105
    10. 'ers' → logprob: -10.990397453308105

Token 74: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.0003360582049936056
    2. 's' → logprob: -8.125335693359375
    3. 'tors' → logprob: -12.000335693359375
    4. '   ' → logprob: -12.500335693359375
    5. 'rs' → logprob: -12.625335693359375
    6. 'or' → logprob: -12.625335693359375
    7. '[' → logprob: -12.750335693359375
    8. 'orsi' → logprob: -12.750335693359375
    9. '=' → logprob: -13.250335693359375
    10. '{' → logprob: -13.250335693359375

Token 75: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694312632083893
    2. ' =' → logprob: -2.1269431114196777
    3. '=[]' → logprob: -11.251943588256836
    4. ' ' → logprob: -13.751943588256836
    5. '=[' → logprob: -15.251943588256836
    6. ' =[' → logprob: -15.751943588256836
    7. '＝' → logprob: -15.876943588256836
    8. '=[],' → logprob: -16.001943588256836
    9. ',' → logprob: -16.126943588256836
    10. '=[]
' → logprob: -17.251943588256836

Token 76: ' [],' (ID: 22188)
  Prédit: ' [],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [],' → logprob: -1.0420665740966797
    2. '[],' → logprob: -1.2920665740966797
    3. '[]' → logprob: -1.4170665740966797
    4. ' []' → logprob: -2.0420665740966797
    5. '([],' → logprob: -8.41706657409668
    6. '[' → logprob: -9.16706657409668
    7. ' [' → logprob: -10.54206657409668
    8. ' ' → logprob: -11.04206657409668
    9. '([]' → logprob: -12.16706657409668
    10. '[]

' → logprob: -12.16706657409668

Token 77: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.6931484341621399
    2. ' []' → logprob: -0.6931484341621399
    3. '[]}' → logprob: -14.318148612976074
    4. '[]
' → logprob: -15.443148612976074
    5. ' ' → logprob: -16.068147659301758
    6. ' []
' → logprob: -16.193147659301758
    7. '[])' → logprob: -16.568147659301758
    8. '[]>' → logprob: -16.693147659301758
    9. '[],' → logprob: -17.193147659301758
    10. '[' → logprob: -17.693147659301758

Token 78: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.12204158306121826
    2. '   ' → logprob: -2.497041702270508
    3. 'for' → logprob: -3.622041702270508
    4. '
' → logprob: -5.372041702270508
    5. ' ' → logprob: -7.372041702270508
    6. ' 
' → logprob: -8.747041702270508
    7. '    
' → logprob: -9.122041702270508
    8. '	for' → logprob: -9.247041702270508
    9. '  ' → logprob: -9.997041702270508
    10. ':' → logprob: -9.997041702270508

Token 79: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4364362359046936
    2. 'for' → logprob: -1.0614361763000488
    3. ' ' → logprob: -5.311436176300049
    4. ' i' → logprob: -6.811436176300049
    5. 'i' → logprob: -7.561436176300049
    6. '   ' → logprob: -7.811436176300049
    7. ' 
' → logprob: -7.936436176300049
    8. '    
' → logprob: -9.561436653137207
    9. ':' → logprob: -9.936436653137207
    10. 'import' → logprob: -10.061436653137207

Token 80: ' Initial' (ID: 9209)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5015361905097961
    2. 'for' → logprob: -1.2515361309051514
    3. ' i' → logprob: -3.0015361309051514
    4. 'import' → logprob: -4.1265363693237305
    5. ' import' → logprob: -4.5015363693237305
    6. ' from' → logprob: -4.5015363693237305
    7. 'from' → logprob: -4.5015363693237305
    8. 'i' → logprob: -4.7515363693237305
    9. '   ' → logprob: -8.12653636932373
    10. ' ' → logprob: -9.00153636932373

Token 81: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -0.8383972644805908
    2. 'isation' → logprob: -1.2133972644805908
    3. 'ement' → logprob: -2.463397264480591
    4. 'ization' → logprob: -2.963397264480591
    5. 'izer' → logprob: -3.213397264480591
    6. 'is' → logprob: -4.088397026062012
    7. 'er' → logprob: -4.338397026062012
    8. 'i' → logprob: -4.588397026062012
    9. 'izing' → logprob: -4.838397026062012
    10. 'ize' → logprob: -5.213397026062012

Token 82: ' d' (ID: 272)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4858296811580658
    2. ' for' → logprob: -1.3608297109603882
    3. ' de' → logprob: -3.2358295917510986
    4. ' range' → logprob: -4.110829830169678
    5. 'import' → logprob: -4.235829830169678
    6. ' import' → logprob: -4.235829830169678
    7. ' ' → logprob: -4.610829830169678
    8. 'i' → logprob: -4.985829830169678
    9. 'for' → logprob: -4.985829830169678
    10. ' d' → logprob: -5.360829830169678

Token 83: ''un' (ID: 9788)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.642827033996582
    2. 'i' → logprob: -0.767827033996582
    3. 'a' → logprob: -5.142827033996582
    4. ' ' → logprob: -6.392827033996582
    5. 'e' → logprob: -6.767827033996582
    6. '(i' → logprob: -7.142827033996582
    7. ' a' → logprob: -8.642827033996582
    8. '(' → logprob: -8.767827033996582
    9. ' un' → logprob: -10.017827033996582
    10. '_' → logprob: -10.017827033996582

Token 84: ' compteur' (ID: 163344)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3908423185348511
    2. ' i' → logprob: -1.140842318534851
    3. ' import' → logprob: -7.015842437744141
    4. 'import' → logprob: -7.015842437744141
    5. ' ' → logprob: -7.140842437744141
    6. 'a' → logprob: -7.640842437744141
    7. 'e' → logprob: -7.890842437744141
    8. ' for' → logprob: -9.14084243774414
    9. '_' → logprob: -9.64084243774414
    10. ' a' → logprob: -10.14084243774414

Token 85: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1276010274887085
    2. 'i' → logprob: -2.127601146697998
    3. ' ' → logprob: -7.502601146697998
    4. ' d' → logprob: -9.62760066986084
    5. 'd' → logprob: -10.75260066986084
    6. ' for' → logprob: -11.37760066986084
    7. ' =' → logprob: -12.25260066986084
    8. '	i' → logprob: -12.50260066986084
    9. ' ,' → logprob: -13.00260066986084
    10. ' ' → logprob: -13.25260066986084

Token 86: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004289234522730112
    2. '=' → logprob: -5.504289150238037
    3. ' ' → logprob: -8.629289627075195
    4. ' i' → logprob: -10.629289627075195
    5. 'i' → logprob: -13.379289627075195
    6. ' ,' → logprob: -13.379289627075195
    7. '   ' → logprob: -14.004289627075195
    8. ',' → logprob: -14.129289627075195
    9. '  ' → logprob: -14.129289627075195
    10. ' for' → logprob: -14.254289627075195

Token 87: ' sera' (ID: 15511)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6339861750602722
    2. ' =' → logprob: -0.8839861750602722
    3. ' ' → logprob: -4.258985996246338
    4. '1' → logprob: -4.383985996246338
    5. 's' → logprob: -4.508985996246338
    6. ' i' → logprob: -5.508985996246338
    7. 'i' → logprob: -5.633985996246338
    8. 'range' → logprob: -5.758985996246338
    9. ' va' → logprob: -6.258985996246338
    10. '<|end|>' → logprob: -7.008985996246338

Token 88: ' utilisé' (ID: 53138)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2563791573047638
    2. ' ' → logprob: -1.5063791275024414
    3. ' utilisé' → logprob: -6.506379127502441
    4. ' i' → logprob: -6.756379127502441
    5. ' parcour' → logprob: -7.631379127502441
    6. '2' → logprob: -8.381379127502441
    7. 'i' → logprob: -8.631379127502441
    8. ' range' → logprob: -8.881379127502441
    9. ' compris' → logprob: -9.131379127502441
    10. 'range' → logprob: -9.256379127502441

Token 89: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5593187212944031
    2. ' i' → logprob: -2.309318780899048
    3. ' to' → logprob: -2.434318780899048
    4. ' ' → logprob: -2.559318780899048
    5. 'for' → logprob: -3.059318780899048
    6. 'i' → logprob: -3.434318780899048
    7. ' pour' → logprob: -4.309318542480469
    8. ' à' → logprob: -4.309318542480469
    9. 'range' → logprob: -4.309318542480469
    10. '1' → logprob: -5.059318542480469

Token 90: ' vérifier' (ID: 93671)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1524821519851685
    2. 'i' → logprob: -2.027482032775879
    3. ' parcour' → logprob: -2.027482032775879
    4. ' i' → logprob: -2.277482032775879
    5. 'range' → logprob: -2.277482032775879
    6. ' ' → logprob: -2.402482032775879
    7. ' range' → logprob: -2.902482032775879
    8. ' iter' → logprob: -3.277482032775879
    9. '0' → logprob: -5.277482032775879
    10. ' vérifier' → logprob: -5.527482032775879

Token 91: ' tous' (ID: 10688)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19094134867191315
    2. ' ' → logprob: -1.940941333770752
    3. ' range' → logprob: -4.565941333770752
    4. ' l' → logprob: -4.940941333770752
    5. 'range' → logprob: -5.565941333770752
    6. ' for' → logprob: -5.940941333770752
    7. 'i' → logprob: -5.940941333770752
    8. ' les' → logprob: -7.065941333770752
    9. ' ' → logprob: -7.315941333770752
    10. ' la' → logprob: -7.315941333770752

Token 92: ' les' (ID: 1341)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.48227354884147644
    2. ' ' → logprob: -0.9822735786437988
    3. 'i' → logprob: -5.107273578643799
    4. '  ' → logprob: -7.607273578643799
    5. ' range' → logprob: -8.10727310180664
    6. ' l' → logprob: -8.48227310180664
    7. '<|end|>' → logprob: -8.60727310180664
    8. 's' → logprob: -8.60727310180664
    9. 'range' → logprob: -8.98227310180664
    10. ' ' → logprob: -9.48227310180664

Token 93: ' nombres' (ID: 76205)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1463853120803833
    2. 'i' → logprob: -2.0213851928710938
    3. ' nombres' → logprob: -6.271385192871094
    4. ' ' → logprob: -6.521385192871094
    5. ' nombre' → logprob: -9.646385192871094
    6. ' num' → logprob: -9.771385192871094
    7. ' ent' → logprob: -10.146385192871094
    8. ' k' → logprob: -10.146385192871094
    9. '1' → logprob: -11.021385192871094
    10. 'div' → logprob: -11.146385192871094

Token 94: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1530008167028427
    2. ' ' → logprob: -2.778000831604004
    3. 'i' → logprob: -3.778000831604004
    4. ' from' → logprob: -4.028000831604004
    5. ' allant' → logprob: -4.653000831604004
    6. ' de' → logprob: -4.903000831604004
    7. ' range' → logprob: -5.653000831604004
    8. '1' → logprob: -5.778000831604004
    9. 'from' → logprob: -6.028000831604004
    10. ' ' → logprob: -6.153000831604004

Token 95: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.43595439195632935
    2. ' ' → logprob: -1.0609543323516846
    3. '2' → logprob: -4.935954570770264
    4. ' ' → logprob: -10.685954093933105
    5. '```' → logprob: -12.185954093933105
    6. '  ' → logprob: -12.685954093933105
    7. '   ' → logprob: -13.185954093933105
    8. 'import' → logprob: -13.310954093933105
    9. ' i' → logprob: -13.498454093933105
    10. 'i' → logprob: -13.623454093933105

Token 96: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03713860735297203
    2. '2' → logprob: -3.5371387004852295
    3. ' ' → logprob: -4.91213846206665
    4. 'i' → logprob: -14.037138938903809
    5. '   ' → logprob: -14.287138938903809
    6. ' i' → logprob: -14.412138938903809
    7. '```' → logprob: -14.662138938903809
    8. '  ' → logprob: -15.162138938903809
    9. 'import' → logprob: -15.287138938903809
    10. '(' → logprob: -15.599638938903809

Token 97: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.048374537378549576
    2. 'à' → logprob: -3.548374652862549
    3. ' ' → logprob: -4.798374652862549
    4. ' jusqu' → logprob: -5.548374652862549
    5. ' a' → logprob: -5.673374652862549
    6. ' to' → logprob: -7.173374652862549
    7. 'a' → logprob: -7.423374652862549
    8. '1' → logprob: -8.04837417602539
    9. ' i' → logprob: -8.29837417602539
    10. 'i' → logprob: -8.92337417602539

Token 98: ' la' (ID: 557)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.04286489635705948
    2. ' n' → logprob: -3.9178647994995117
    3. 'int' → logprob: -3.9178647994995117
    4. ' i' → logprob: -6.917864799499512
    5. 'n' → logprob: -7.167864799499512
    6. ' ' → logprob: -8.292864799499512
    7. '	int' → logprob: -9.667864799499512
    8. '   ' → logprob: -10.292864799499512
    9. ' ' → logprob: -10.917864799499512
    10. '    ' → logprob: -11.292864799499512

Token 99: ' rac' (ID: 12334)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.09305650740861893
    2. ' int' → logprob: -2.4680564403533936
    3. 'n' → logprob: -5.968056678771973
    4. ' n' → logprob: -6.718056678771973
    5. ' i' → logprob: -9.093056678771973
    6. '(int' → logprob: -9.593056678771973
    7. 'i' → logprob: -10.218056678771973
    8. ' ' → logprob: -10.718056678771973
    9. '[int' → logprob: -10.718056678771973
    10. '	int' → logprob: -10.968056678771973

Token 100: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.08007977157831192
    2. 't' → logprob: -3.7050797939300537
    3. '```' → logprob: -4.705079555511475
    4. 'ïne' → logprob: -5.080079555511475
    5. '2' → logprob: -5.330079555511475
    6. 'îne' → logprob: -5.705079555511475
    7. 'ic' → logprob: -5.830079555511475
    8. '``' → logprob: -5.830079555511475
    9. '(' → logprob: -5.830079555511475
    10. 'i' → logprob: -6.642579555511475

Token 101: ' carr' (ID: 18321)
  Prédit: ' carr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carr' → logprob: -0.25377413630485535
    2. '   ' → logprob: -2.6287741661071777
    3. ' ' → logprob: -3.2537741661071777
    4. ' carre' → logprob: -3.3787741661071777
    5. ' carré' → logprob: -3.6287741661071777
    6. 'car' → logprob: -4.253774166107178
    7. '_' → logprob: -4.628774166107178
    8. ' de' → logprob: -5.003774166107178
    9. '```' → logprob: -5.503774166107178
    10. ' int' → logprob: -5.753774166107178

Token 102: 'ée' (ID: 2894)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3500547409057617
    2. 'iné' → logprob: -1.8500547409057617
    3. 'ine' → logprob: -1.9750547409057617
    4. 'ic' → logprob: -2.1000547409057617
    5. '```' → logprob: -2.3500547409057617
    6. 'é' → logprob: -2.4750547409057617
    7. 'i' → logprob: -2.8500547409057617
    8. 'in' → logprob: -4.600054740905762
    9. 'ée' → logprob: -4.600054740905762
    10. 'è' → logprob: -5.350054740905762

Token 103: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.49906229972839355
    2. ' ' → logprob: -2.3740622997283936
    3. 'int' → logprob: -2.7490622997283936
    4. ' n' → logprob: -2.9990622997283936
    5. ' int' → logprob: -2.9990622997283936
    6. '(' → logprob: -3.2490622997283936
    7. '(n' → logprob: -3.4990622997283936
    8. 'de' → logprob: -3.8740622997283936
    9. '   ' → logprob: -4.249062538146973
    10. 'n' → logprob: -4.499062538146973

Token 104: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.160295307636261
    2. 'n' → logprob: -1.9102952480316162
    3. ' ' → logprob: -10.035295486450195
    4. ' ' → logprob: -11.535295486450195
    5. '	n' → logprob: -11.785295486450195
    6. '(n' → logprob: -13.035295486450195
    7. '```' → logprob: -13.285295486450195
    8. '   ' → logprob: -13.785295486450195
    9. ' la' → logprob: -14.160295486450195
    10. 'int' → logprob: -14.285295486450195

Token 105: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.49826547503471375
    2. 'i' → logprob: -1.4982655048370361
    3. '   ' → logprob: -1.9982655048370361
    4. ' ' → logprob: -3.873265504837036
    5. ' for' → logprob: -4.873265266418457
    6. ' (' → logprob: -6.623265266418457
    7. 'import' → logprob: -7.123265266418457
    8. '    
' → logprob: -7.998265266418457
    9. 'for' → logprob: -7.998265266418457
    10. ' =' → logprob: -8.248265266418457

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23557302355766296
    2. ' i' → logprob: -1.9855730533599854
    3. 'i' → logprob: -2.8605730533599854
    4. ' for' → logprob: -4.360572814941406
    5. '
' → logprob: -7.360572814941406
    6. '    
' → logprob: -7.610572814941406
    7. 'import' → logprob: -7.735572814941406
    8. 'for' → logprob: -8.360572814941406
    9. ' 
' → logprob: -8.485572814941406
    10. ' ' → logprob: -8.860572814941406

Token 107: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10779432952404022
    2. 'i' (adapté à ' i') → logprob: -2.4827942848205566
    3. 'import' → logprob: -5.232794284820557
    4. '   ' → logprob: -5.232794284820557
    5. ' for' → logprob: -5.607794284820557
    6. ' import' → logprob: -5.982794284820557
    7. ' ' → logprob: -6.857794284820557
    8. '1' → logprob: -8.232794761657715
    9. 'for' → logprob: -8.982794761657715
    10. ' 
' → logprob: -9.607794761657715

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014483015052974224
    2. '=' → logprob: -4.2644829750061035
    3. ' ' → logprob: -8.139483451843262
    4. ' in' → logprob: -10.764483451843262
    5. ' ,' → logprob: -13.264483451843262
    6. ',' → logprob: -13.514483451843262
    7. '1' → logprob: -13.764483451843262
    8. ' =
' → logprob: -14.639483451843262
    9. 's' → logprob: -14.889483451843262
    10. ' ' → logprob: -15.139483451843262

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.048589982092380524
    2. ' ' → logprob: -3.0485899448394775
    3. '   ' → logprob: -13.923589706420898
    4. 'int' → logprob: -14.298589706420898
    5. '0' → logprob: -14.798589706420898
    6. '  ' → logprob: -16.0485897064209
    7. '2' → logprob: -16.2360897064209
    8. ' ' → logprob: -16.2985897064209
    9. '１' → logprob: -16.5485897064209
    10. ' int' → logprob: -16.8610897064209

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001605115394340828
    2. ' ' → logprob: -8.750160217285156
    3. 'int' → logprob: -14.125160217285156
    4. '2' → logprob: -14.125160217285156
    5. '0' → logprob: -14.625160217285156
    6. '```' → logprob: -17.125160217285156
    7. '１' → logprob: -18.000160217285156
    8. '   ' → logprob: -18.000160217285156
    9. ' int' → logprob: -18.187660217285156
    10. '  ' → logprob: -18.250160217285156

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.007387855555862188
    2. '<|end|>' → logprob: -5.882387638092041
    3. ' 
' → logprob: -6.007387638092041
    4. '  
' → logprob: -6.882387638092041
    5. '    
' → logprob: -7.507387638092041
    6. '   ' → logprob: -9.0073881149292
    7. '   
' → logprob: -9.0073881149292
    8. '<|end|>' → logprob: -9.3823881149292
    9. '\n' → logprob: -9.7573881149292
    10. ' while' → logprob: -10.5073881149292

Token 112: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.00343161984346807
    2. ' 
' → logprob: -6.628431797027588
    3. '    
' → logprob: -7.253431797027588
    4. '   ' → logprob: -7.503431797027588
    5. '  
' → logprob: -8.50343132019043
    6. '<|end|>' → logprob: -8.75343132019043
    7. ' while' → logprob: -9.12843132019043
    8. '   
' → logprob: -9.37843132019043
    9. '\n' → logprob: -9.37843132019043
    10. 'while' → logprob: -9.37843132019043

Token 113: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2567703127861023
    2. 'while' → logprob: -2.381770372390747
    3. ' while' → logprob: -2.631770372390747
    4. ' 
' → logprob: -3.131770372390747
    5. '    
' → logprob: -4.756770133972168
    6. '  
' → logprob: -6.381770133972168
    7. '   
' → logprob: -6.631770133972168
    8. ' ' → logprob: -6.881770133972168
    9. '

' → logprob: -7.131770133972168
    10. ',' → logprob: -7.256770133972168

Token 114: ' La' (ID: 3038)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.23175320029258728
    2. 'while' → logprob: -1.6067532300949097
    3. ' import' → logprob: -5.606753349304199
    4. 'import' → logprob: -5.981753349304199
    5. ' i' → logprob: -9.8567533493042
    6. ' from' → logprob: -10.3567533493042
    7. 'from' → logprob: -10.7317533493042
    8. 'i' → logprob: -12.6067533493042
    9. '	while' → logprob: -12.7317533493042
    10. ' n' → logprob: -12.9817533493042

Token 115: ' boucle' (ID: 174211)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.03530989959836006
    2. 'while' → logprob: -3.7853097915649414
    3. ' import' → logprob: -4.785309791564941
    4. ' ' → logprob: -6.285309791564941
    5. 'import' → logprob: -6.910309791564941
    6. ' ' → logprob: -8.910309791564941
    7. 's' → logprob: -9.035309791564941
    8. 'n' → logprob: -9.035309791564941
    9. ' from' → logprob: -9.410309791564941
    10. 'r' → logprob: -9.535309791564941

Token 116: ' continue' (ID: 4901)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.007758292369544506
    2. 'while' → logprob: -4.882758140563965
    3. ' import' → logprob: -9.132758140563965
    4. ' ' → logprob: -10.382758140563965
    5. 'import' → logprob: -12.257758140563965
    6. '	while' → logprob: -12.632758140563965
    7. ' ' → logprob: -13.757758140563965
    8. ' for' → logprob: -14.007758140563965
    9. ' While' → logprob: -14.632758140563965
    10. ' tandis' → logprob: -15.132758140563965

Token 117: ' tant' (ID: 16235)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2891393005847931
    2. ' tant' → logprob: -1.5391392707824707
    3. ' ' → logprob: -4.164139270782471
    4. 'while' → logprob: -4.414139270782471
    5. ' jusqu' → logprob: -5.414139270782471
    6. 'tant' → logprob: -7.039139270782471
    7. '   ' → logprob: -7.289139270782471
    8. ',' → logprob: -7.289139270782471
    9. ' i' → logprob: -7.289139270782471
    10. ' until' → logprob: -7.789139270782471

Token 118: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.0010841365437954664
    2. 'que' → logprob: -7.376084327697754
    3. ' i' → logprob: -8.376084327697754
    4. ' ' → logprob: -8.626084327697754
    5. ' (' → logprob: -11.376084327697754
    6. '   ' → logprob: -11.751084327697754
    7. ' qu' → logprob: -12.001084327697754
    8. 'Que' → logprob: -12.126084327697754
    9. 'i' → logprob: -12.501084327697754
    10. '  ' → logprob: -12.626084327697754

Token 119: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004691780544817448
    2. 'i' → logprob: -5.3796916007995605
    3. ' ' → logprob: -10.254692077636719
    4. ' ' → logprob: -11.129692077636719
    5. '	i' → logprob: -11.504692077636719
    6. '(i' → logprob: -12.504692077636719
    7. ' (' → logprob: -12.504692077636719
    8. '```' → logprob: -13.879692077636719
    9. '(' → logprob: -14.004692077636719
    10. '   ' → logprob: -14.629692077636719

Token 120: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.010973893105983734
    2. '*' → logprob: -5.510973930358887
    3. ' <=' → logprob: -5.510973930358887
    4. '*i' → logprob: -5.885973930358887
    5. '<=' → logprob: -10.385973930358887
    6. '**' → logprob: -11.385973930358887
    7. ' ' → logprob: -11.885973930358887
    8. ' **' → logprob: -13.885973930358887
    9. ' i' → logprob: -14.510973930358887
    10. ' ' → logprob: -14.885973930358887

Token 121: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020559638738632202
    2. ' i' → logprob: -3.895559549331665
    3. ' ' → logprob: -12.020559310913086
    4. '	i' → logprob: -12.395559310913086
    5. ' ' → logprob: -12.645559310913086
    6. '*i' → logprob: -13.270559310913086
    7. '```' → logprob: -14.583059310913086
    8. '

' → logprob: -15.208059310913086
    9. '<|end|>' → logprob: -15.270559310913086
    10. '_i' → logprob: -15.333059310913086

Token 122: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.054946716874837875
    2. '<=' → logprob: -2.9299466609954834
    3. ' <' → logprob: -10.304946899414062
    4. '<' → logprob: -11.679946899414062
    5. ' ' → logprob: -11.679946899414062
    6. ')<=' → logprob: -12.554946899414062
    7. ' <=",' → logprob: -13.054946899414062
    8. '<|end|>' → logprob: -13.179946899414062
    9. ' ' → logprob: -13.304946899414062
    10. ']<=' → logprob: -13.304946899414062

Token 123: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10021983087062836
    2. 'n' → logprob: -2.3502197265625
    3. '	n' → logprob: -11.6002197265625
    4. ' ' → logprob: -12.9752197265625
    5. ' ' → logprob: -13.8502197265625
    6. '(n' → logprob: -15.1002197265625
    7. '```' → logprob: -16.2252197265625
    8. ' н' → logprob: -16.8502197265625
    9. ')n' → logprob: -17.0377197265625
    10. '_n' → logprob: -17.4752197265625

Token 124: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20945978164672852
    2. ':
' → logprob: -2.0844597816467285
    3. '   ' → logprob: -2.8344597816467285
    4. '
' → logprob: -5.9594597816467285
    5. ' :
' → logprob: -7.2094597816467285
    6. ' while' → logprob: -7.2094597816467285
    7. 'while' → logprob: -7.3344597816467285
    8. ' :' → logprob: -8.08445930480957
    9. '    
' → logprob: -8.08445930480957
    10. ' 
' → logprob: -8.83445930480957

Token 125: ' c' (ID: 274)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04561798647046089
    2. '   ' → logprob: -3.9206180572509766
    3. ' ' → logprob: -4.920618057250977
    4. 'i' → logprob: -5.295618057250977
    5. '    ' → logprob: -5.295618057250977
    6. ' while' → logprob: -6.170618057250977
    7. ' 
' → logprob: -7.295618057250977
    8. '
' → logprob: -7.420618057250977
    9. ' et' → logprob: -7.420618057250977
    10. '    
' → logprob: -7.420618057250977

Token 126: ''est' (ID: 6616)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.3020312488079071
    2. ':' → logprob: -2.0520312786102295
    3. 'e' → logprob: -3.1770312786102295
    4. 'i' → logprob: -3.3020312786102295
    5. 'ont' → logprob: -3.9270312786102295
    6. '   ' → logprob: -5.05203104019165
    7. 'es' → logprob: -5.55203104019165
    8. ' ' → logprob: -6.17703104019165
    9. ' i' → logprob: -6.17703104019165
    10. 'o' → logprob: -6.30203104019165

Token 127: '-à' (ID: 56297)
  Prédit: '-à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-à' → logprob: -0.984062671661377
    2. ' à' → logprob: -1.359062671661377
    3. ' que' → logprob: -2.484062671661377
    4. 'à' → logprob: -2.859062671661377
    5. ' ' → logprob: -3.109062671661377
    6. 'n' → logprob: -3.359062671661377
    7. ' vrai' → logprob: -3.359062671661377
    8. '-' → logprob: -3.734062671661377
    9. ' True' → logprob: -3.984062671661377
    10. ' i' → logprob: -4.859062671661377

Token 128: '-dire' (ID: 76064)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.20658674836158752
    2. ' True' → logprob: -2.8315868377685547
    3. '1' → logprob: -3.5815868377685547
    4. 'n' → logprob: -4.206586837768555
    5. '   ' → logprob: -4.331586837768555
    6. 'False' → logprob: -4.331586837768555
    7. 'i' → logprob: -4.331586837768555
    8. ' possible' → logprob: -4.581586837768555
    9. 'possible' → logprob: -4.831586837768555
    10. 'pas' → logprob: -5.081586837768555

Token 129: ' jusqu' (ID: 21961)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02366899698972702
    2. ' ' → logprob: -4.1486687660217285
    3. 'i' → logprob: -5.6486687660217285
    4. ' while' → logprob: -6.5236687660217285
    5. 'n' → logprob: -6.7736687660217285
    6. ' n' → logprob: -7.3986687660217285
    7. ' (' → logprob: -8.148669242858887
    8. ' que' → logprob: -8.773669242858887
    9. ' ' → logprob: -9.023669242858887
    10. '  ' → logprob: -9.898669242858887

Token 130: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.006641956511884928
    2. ''au' → logprob: -5.631641864776611
    3. '’à' → logprob: -6.381641864776611
    4. 'à' → logprob: -7.256641864776611
    5. ''' → logprob: -8.38164234161377
    6. ' à' → logprob: -8.50664234161377
    7. 'a' → logprob: -9.25664234161377
    8. ''a' → logprob: -9.50664234161377
    9. 'au' → logprob: -10.63164234161377
    10. '’au' → logprob: -12.25664234161377

Token 131: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.32882601022720337
    2. ' int' → logprob: -1.7038259506225586
    3. 'i' → logprob: -2.5788259506225586
    4. 'int' → logprob: -3.8288259506225586
    5. '	i' → logprob: -8.953825950622559
    6. '(int' → logprob: -9.078825950622559
    7. ' (' → logprob: -9.328825950622559
    8. ' ' → logprob: -9.453825950622559
    9. '	int' → logprob: -9.953825950622559
    10. '```' → logprob: -9.953825950622559

Token 132: ' rac' (ID: 12334)
  Prédit: ' rac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rac' → logprob: -0.5069915652275085
    2. 'i' → logprob: -1.8819916248321533
    3. ' i' → logprob: -2.0069916248321533
    4. 'int' → logprob: -2.6319916248321533
    5. 'rac' → logprob: -3.5069916248321533
    6. ' int' → logprob: -5.131991386413574
    7. ' ' → logprob: -7.131991386413574
    8. 'r' → logprob: -7.256991386413574
    9. '```' → logprob: -7.756991386413574
    10. ' valeur' → logprob: -8.006991386413574

Token 133: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.03729284927248955
    2. 'o' → logprob: -4.662292957305908
    3. '```' → logprob: -4.787292957305908
    4. 'otte' → logprob: -5.162292957305908
    5. 'ot' → logprob: -6.162292957305908
    6. 'ote' → logprob: -6.537292957305908
    7. 'ïne' → logprob: -6.787292957305908
    8. 'oine' → logprob: -7.412292957305908
    9. 'ôte' → logprob: -7.537292957305908
    10. '``' → logprob: -7.537292957305908

Token 134: ' carr' (ID: 18321)
  Prédit: ' carr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' carr' → logprob: -0.1515788733959198
    2. 'car' → logprob: -3.026578903198242
    3. ' carré' → logprob: -3.151578903198242
    4. ' carre' → logprob: -4.026578903198242
    5. ' ' → logprob: -4.526578903198242
    6. ' car' → logprob: -5.026578903198242
    7. 'c' → logprob: -5.276578903198242
    8. '   ' → logprob: -5.401578903198242
    9. '_c' → logprob: -6.651578903198242
    10. ' i' → logprob: -7.401578903198242

Token 135: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.49878308176994324
    2. 'é' → logprob: -1.6237831115722656
    3. 'i' → logprob: -2.1237831115722656
    4. 'ière' → logprob: -3.2487831115722656
    5. 'ot' → logprob: -4.373783111572266
    6. 'e' → logprob: -5.373783111572266
    7. 'ine' → logprob: -5.873783111572266
    8. 'ié' → logprob: -5.873783111572266
    9. '```' → logprob: -6.123783111572266
    10. 'o' → logprob: -6.248783111572266

Token 136: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.03538307920098305
    2. ' ' → logprob: -3.6603829860687256
    3. 'de' → logprob: -5.160383224487305
    4. ' of' → logprob: -6.660383224487305
    5. ' n' → logprob: -6.910383224487305
    6. '(n' → logprob: -7.785383224487305
    7. '   ' → logprob: -8.785383224487305
    8. '(' → logprob: -9.035383224487305
    9. 'n' → logprob: -9.035383224487305
    10. '  ' → logprob: -9.285383224487305

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859941080212593
    2. 'n' → logprob: -3.0485994815826416
    3. ' ' → logprob: -12.048599243164062
    4. '	n' → logprob: -12.423599243164062
    5. ' ' → logprob: -13.673599243164062
    6. '(n' → logprob: -14.673599243164062
    7. '```' → logprob: -16.173599243164062
    8. '  ' → logprob: -17.111099243164062
    9. ' н' → logprob: -17.173599243164062
    10. '   ' → logprob: -17.298599243164062

Token 138: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.40968814492225647
    2. '   ' → logprob: -1.409688115119934
    3. ':
' → logprob: -2.5346882343292236
    4. '
' → logprob: -5.4096879959106445
    5. ' :
' → logprob: -5.9096879959106445
    6. ' while' → logprob: -6.5346879959106445
    7. '    
' → logprob: -6.7846879959106445
    8. ' :' → logprob: -6.7846879959106445
    9. ' 
' → logprob: -7.6596879959106445
    10. 'while' → logprob: -7.9096879959106445

Token 139: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7297720909118652
    2. '   ' → logprob: -1.3547720909118652
    3. ':
' → logprob: -1.7297720909118652
    4. '
' → logprob: -3.2297720909118652
    5. ' :
' → logprob: -4.604772090911865
    6. '\n' → logprob: -4.604772090911865
    7. ' while' → logprob: -4.979772090911865
    8. ' 
' → logprob: -5.229772090911865
    9. '    
' → logprob: -5.729772090911865
    10. '  
' → logprob: -6.354772090911865

Token 140: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32871606945991516
    2. ' while' → logprob: -1.5787160396575928
    3. 'while' (adapté à ' while') → logprob: -2.7037160396575928
    4. '
' → logprob: -5.703716278076172
    5. '    
' → logprob: -6.578716278076172
    6. '	while' → logprob: -6.828716278076172
    7. ' 
' → logprob: -7.203716278076172
    8. '    ' → logprob: -9.578716278076172
    9. '  
' → logprob: -9.578716278076172
    10. '  ' → logprob: -9.953716278076172

Token 141: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0009850544156506658
    2. 'i' → logprob: -7.000985145568848
    3. ' ' → logprob: -10.625985145568848
    4. '(i' → logprob: -10.750985145568848
    5. ' ' → logprob: -11.375985145568848
    6. ' (' → logprob: -11.625985145568848
    7. '	i' → logprob: -12.125985145568848
    8. '(' → logprob: -13.875985145568848
    9. '  ' → logprob: -15.000985145568848
    10. '   ' → logprob: -15.125985145568848

Token 142: '*i' (ID: 51147)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12911440432071686
    2. '*' → logprob: -2.2541143894195557
    3. '*i' → logprob: -4.129114627838135
    4. ' ' → logprob: -10.504114151000977
    5. '**' → logprob: -11.004114151000977
    6. ' <=' → logprob: -11.379114151000977
    7. '<=' → logprob: -12.379114151000977
    8. 'i' → logprob: -13.754114151000977
    9. ' i' → logprob: -14.629114151000977
    10. ' ' → logprob: -15.254114151000977

Token 143: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.05490180477499962
    2. '<=' → logprob: -2.9299018383026123
    3. ' ' → logprob: -11.429902076721191
    4. '<|end|>' → logprob: -12.929902076721191
    5. ')<=' → logprob: -13.179902076721191
    6. ']<=' → logprob: -13.429902076721191
    7. ' ' → logprob: -14.304902076721191
    8. 'le' → logprob: -15.554902076721191
    9. ' <=",' → logprob: -15.554902076721191
    10. 'n' → logprob: -15.679902076721191

Token 144: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.04859236627817154
    2. 'n' → logprob: -3.0485923290252686
    3. ' ' → logprob: -12.673592567443848
    4. ' ' → logprob: -13.923592567443848
    5. '	n' → logprob: -14.173592567443848
    6. '_n' → logprob: -16.92359161376953
    7. ' 
' → logprob: -17.04859161376953
    8. ' н' → logprob: -17.67359161376953
    9. ')n' → logprob: -17.92359161376953
    10. '```' → logprob: -17.92359161376953

Token 145: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009663687669672072
    2. ':
' → logprob: -7.375966548919678
    3. ' :' → logprob: -8.00096607208252
    4. '):' → logprob: -13.12596607208252
    5. ' :
' → logprob: -13.37596607208252
    6. '():' → logprob: -15.25096607208252
    7. ':

' → logprob: -15.50096607208252
    8. ':**' → logprob: -16.250967025756836
    9. '   ' → logprob: -16.625967025756836
    10. ':
' → logprob: -16.750967025756836

Token 146: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09057458490133286
    2. '       ' → logprob: -3.4655745029449463
    3. '   ' → logprob: -3.7155745029449463
    4. ' :' → logprob: -4.465574741363525
    5. ':
' → logprob: -4.590574741363525
    6. '<|end|>' → logprob: -4.965574741363525
    7. ' :
' → logprob: -6.965574741363525
    8. '    ' → logprob: -7.465574741363525
    9. ' ' → logprob: -7.965574741363525
    10. '<|end|>' → logprob: -9.090574264526367

Token 147: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41536909341812134
    2. ' if' → logprob: -1.6653690338134766
    3. ' ' → logprob: -2.4153690338134766
    4. 'if' → logprob: -3.5403690338134766
    5. '<|end|>' → logprob: -4.165369033813477
    6. '   ' → logprob: -4.915369033813477
    7. ' 
' → logprob: -6.165369033813477
    8. '    ' → logprob: -6.415369033813477
    9. '        ' → logprob: -6.415369033813477
    10. ':' → logprob: -7.415369033813477

Token 148: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47412970662117004
    2. 'if' → logprob: -0.9741296768188477
    3. '    ' → logprob: -10.724129676818848
    4. '   ' → logprob: -10.849129676818848
    5. ' ' → logprob: -13.099129676818848
    6. ' ' → logprob: -13.099129676818848
    7. 'If' → logprob: -13.349129676818848
    8. '       ' → logprob: -13.349129676818848
    9. '	if' → logprob: -13.974129676818848
    10. '#' → logprob: -14.849129676818848

Token 149: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.005239445250481367
    2. 'n' → logprob: -5.255239486694336
    3. ' ' → logprob: -12.880239486694336
    4. ' ' → logprob: -13.380239486694336
    5. '	n' → logprob: -13.880239486694336
    6. ' (' → logprob: -14.630239486694336
    7. '(n' → logprob: -16.005239486694336
    8. ' н' → logprob: -17.817739486694336
    9. ' ‌' → logprob: -18.005239486694336
    10. '```' → logprob: -18.380239486694336

Token 150: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01867273636162281
    2. '%' → logprob: -4.018672943115234
    3. '%i' → logprob: -7.643672943115234
    4. ' ' → logprob: -10.143672943115234
    5. ' ' → logprob: -12.643672943115234
    6. '%e' → logprob: -14.643672943115234
    7. '%d' → logprob: -15.268672943115234
    8. '%n' → logprob: -15.893672943115234
    9. '%s' → logprob: -16.018672943115234
    10. ' %
' → logprob: -16.143672943115234

Token 151: ' divisible' (ID: 167813)
  Prédit: ' divisible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' divisible' → logprob: -0.0003305784775875509
    2. ' n' → logprob: -8.375330924987793
    3. ' %' → logprob: -9.625330924987793
    4. ' divis' → logprob: -11.250330924987793
    5. 'div' → logprob: -12.375330924987793
    6. '%n' → logprob: -12.375330924987793
    7. 'n' → logprob: -12.375330924987793
    8. ' ' → logprob: -12.750330924987793
    9. '%i' → logprob: -13.000330924987793
    10. '%' → logprob: -13.375330924987793

Token 152: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.07304418832063675
    2. 'par' → logprob: -2.6980443000793457
    3. ' ' → logprob: -6.448044300079346
    4. ' n' → logprob: -7.448044300079346
    5. 'n' → logprob: -8.323043823242188
    6. ' by' → logprob: -8.573043823242188
    7. '(n' → logprob: -9.073043823242188
    8. '   ' → logprob: -9.073043823242188
    9. ' i' → logprob: -9.573043823242188
    10. 'by' → logprob: -10.073043823242188

Token 153: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.31327372789382935
    2. 'i' → logprob: -1.3132736682891846
    3. ' ' → logprob: -11.938273429870605
    4. ' ' → logprob: -12.688273429870605
    5. '	i' → logprob: -13.063273429870605
    6. '   ' → logprob: -16.063274383544922
    7. '  ' → logprob: -16.813274383544922
    8. '```' → logprob: -16.813274383544922
    9. '    ' → logprob: -18.563274383544922
    10. '(i' → logprob: -18.938274383544922

Token 154: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.046525247395038605
    2. ' :' → logprob: -3.171525239944458
    3. ',' → logprob: -5.921525478363037
    4. ' and' → logprob: -7.671525478363037
    5. ':
' → logprob: -8.671525001525879
    6. ' ,' → logprob: -8.796525001525879
    7. ' :
' → logprob: -11.046525001525879
    8. 'and' → logprob: -11.296525001525879
    9. '   ' → logprob: -11.421525001525879
    10. ' ' → logprob: -13.171525001525879

Token 155: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9186316728591919
    2. '    ' → logprob: -1.418631672859192
    3. '       ' → logprob: -2.1686315536499023
    4. ' if' → logprob: -2.2936315536499023
    5. '   ' → logprob: -2.5436315536499023
    6. '        ' → logprob: -4.168631553649902
    7. 'if' → logprob: -4.293631553649902
    8. ' ' → logprob: -5.293631553649902
    9. '```' → logprob: -5.293631553649902
    10. ' 
' → logprob: -5.668631553649902

Token 156: ''est' (ID: 6616)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.6750526428222656
    2. 'e' → logprob: -1.8000526428222656
    3. ''est' → logprob: -1.9250526428222656
    4. '   ' → logprob: -2.8000526428222656
    5. ''' → logprob: -3.6750526428222656
    6. 'i' → logprob: -3.9250526428222656
    7. 'on' → logprob: -4.300052642822266
    8. ':' → logprob: -4.925052642822266
    9. ''s' → logprob: -5.050052642822266
    10. 'ela' → logprob: -5.300052642822266

Token 157: '-à' (ID: 56297)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.033101972192525864
    2. ' un' → logprob: -4.158102035522461
    3. ' parce' → logprob: -5.158102035522461
    4. ' qu' → logprob: -5.658102035522461
    5. 'que' → logprob: -6.033102035522461
    6. 'n' → logprob: -6.908102035522461
    7. '-à' → logprob: -6.908102035522461
    8. ' une' → logprob: -7.408102035522461
    9. '   ' → logprob: -7.408102035522461
    10. '-' → logprob: -7.783102035522461

Token 158: '-dire' (ID: 76064)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.9802345633506775
    2. ' un' → logprob: -1.2302346229553223
    3. 'un' → logprob: -2.3552346229553223
    4. ' que' → logprob: -2.6052346229553223
    5. 'que' → logprob: -2.7302346229553223
    6. '   ' → logprob: -3.2302346229553223
    7. 'qu' → logprob: -3.8552346229553223
    8. ' qu' → logprob: -4.605234622955322
    9. 'div' → logprob: -5.230234622955322
    10. '#' → logprob: -5.605234622955322

Token 159: ' que' (ID: 661)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0017797837499529123
    2. 'n' → logprob: -6.376779556274414
    3. ' (' → logprob: -10.126779556274414
    4. '	n' → logprob: -11.376779556274414
    5. ' ' → logprob: -11.626779556274414
    6. ' if' → logprob: -12.001779556274414
    7. '(n' → logprob: -12.126779556274414
    8. ' ' → logprob: -12.876779556274414
    9. '   ' → logprob: -13.376779556274414
    10. '  ' → logprob: -14.501779556274414

Token 160: ' le' (ID: 505)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11282698810100555
    2. 'n' → logprob: -2.2378270626068115
    3. ' ' → logprob: -13.48782730102539
    4. '	n' → logprob: -13.48782730102539
    5. ' ' → logprob: -14.11282730102539
    6. '   ' → logprob: -14.48782730102539
    7. '(n' → logprob: -14.61282730102539
    8. ' (' → logprob: -15.61282730102539
    9. '  ' → logprob: -17.48782730102539
    10. ' н' → logprob: -17.61282730102539

Token 161: ' reste' (ID: 26769)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34846922755241394
    2. ' n' → logprob: -1.2234692573547363
    3. ' ' → logprob: -11.848468780517578
    4. '	n' → logprob: -12.473468780517578
    5. '   ' → logprob: -12.848468780517578
    6. '(n' → logprob: -13.098468780517578
    7. ' if' → logprob: -13.223468780517578
    8. 'if' → logprob: -13.473468780517578
    9. '%n' → logprob: -14.223468780517578
    10. ' remainder' → logprob: -14.348468780517578

Token 162: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6234267354011536
    2. ' ' → logprob: -0.8734267354011536
    3. ' de' → logprob: -3.498426675796509
    4. '==' → logprob: -4.373426914215088
    5. ' n' → logprob: -6.373426914215088
    6. ' du' → logprob: -8.12342643737793
    7. '   ' → logprob: -8.24842643737793
    8. ' =' → logprob: -8.74842643737793
    9. ' des' → logprob: -8.87342643737793
    10. 'n' → logprob: -9.12342643737793

Token 163: ' la' (ID: 557)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.02976403571665287
    2. 'n' → logprob: -3.52976393699646
    3. ' ' → logprob: -11.529764175415039
    4. '	n' → logprob: -13.154764175415039
    5. '  ' → logprob: -14.779764175415039
    6. ' ' → logprob: -15.029764175415039
    7. '(n' → logprob: -16.02976417541504
    8. '```' → logprob: -16.40476417541504
    9. ' н' → logprob: -16.65476417541504
    10. 'div' → logprob: -16.77976417541504

Token 164: ' division' (ID: 21629)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6491751670837402
    2. ' n' → logprob: -0.7741751670837402
    3. ' division' → logprob: -4.52417516708374
    4. 'division' → logprob: -5.39917516708374
    5. 'div' → logprob: -7.27417516708374
    6. ' ' → logprob: -8.024175643920898
    7. '   ' → logprob: -11.399175643920898
    8. '%n' → logprob: -11.524175643920898
    9. '%' → logprob: -11.899175643920898
    10. ' %' → logprob: -12.024175643920898

Token 165: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.3706788718700409
    2. ' n' → logprob: -1.3706789016723633
    3. ' ' → logprob: -3.6206789016723633
    4. ' est' → logprob: -4.120678901672363
    5. 'n' → logprob: -4.870678901672363
    6. ' ==' → logprob: -5.870678901672363
    7. 'de' → logprob: -7.495678901672363
    8. ' i' → logprob: -7.495678901672363
    9. '   ' → logprob: -7.745678901672363
    10. ' is' → logprob: -8.495678901672363

Token 166: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06994732469320297
    2. 'n' → logprob: -2.6949472427368164
    3. ' ' → logprob: -11.694947242736816
    4. '	n' → logprob: -13.444947242736816
    5. '   ' → logprob: -14.444947242736816
    6. ' ' → logprob: -15.444947242736816
    7. '(n' → logprob: -15.944947242736816
    8. '    ' → logprob: -16.194948196411133
    9. '  ' → logprob: -16.444948196411133
    10. '```' → logprob: -17.069948196411133

Token 167: ' par' (ID: 686)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7897982597351074
    2. ' %' → logprob: -1.4147982597351074
    3. '%n' → logprob: -1.7897982597351074
    4. '%i' → logprob: -2.1647982597351074
    5. ' ' → logprob: -4.414798259735107
    6. '%d' → logprob: -5.664798259735107
    7. '%b' → logprob: -6.789798259735107
    8. ' i' → logprob: -6.914798259735107
    9. '%c' → logprob: -7.539798259735107
    10. ' modulo' → logprob: -7.539798259735107

Token 168: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04862097650766373
    2. 'i' → logprob: -3.0486209392547607
    3. ' ' → logprob: -10.92362117767334
    4. ' n' → logprob: -12.04862117767334
    5. '	i' → logprob: -12.04862117767334
    6. 'n' → logprob: -13.04862117767334
    7. ' ' → logprob: -14.04862117767334
    8. '   ' → logprob: -15.17362117767334
    9. '  ' → logprob: -15.54862117767334
    10. '```' → logprob: -16.173620223999023

Token 169: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1484474092721939
    2. '==' → logprob: -2.8984475135803223
    3. ' ' → logprob: -3.0234475135803223
    4. ' est' → logprob: -3.3984475135803223
    5. 'est' → logprob: -7.648447513580322
    6. ')==' → logprob: -9.898447036743164
    7. ' vaut' → logprob: -10.273447036743164
    8. ' is' → logprob: -10.273447036743164
    9. ' ' → logprob: -10.398447036743164
    10. '=' → logprob: -10.523447036743164

Token 170: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3136782646179199
    2. ' ' → logprob: -1.31367826461792
    3. ' zéro' → logprob: -8.563678741455078
    4. ' zero' → logprob: -8.688678741455078
    5. ' égal' → logprob: -11.563678741455078
    6. '  ' → logprob: -11.688678741455078
    7. '   ' → logprob: -11.688678741455078
    8. ' nul' → logprob: -11.813678741455078
    9. 'zero' → logprob: -12.188678741455078
    10. ' ==' → logprob: -12.688678741455078

Token 171: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011054071597754955
    2. ' ' → logprob: -4.511054039001465
    3. ' zero' → logprob: -12.886054039001465
    4. ' zéro' → logprob: -13.261054039001465
    5. 'zero' → logprob: -14.136054039001465
    6. '   ' → logprob: -14.886054039001465
    7. '  ' → logprob: -15.136054039001465
    8. ' ==' → logprob: -15.636054039001465
    9. '```' → logprob: -15.636054039001465
    10. '==' → logprob: -15.636054039001465

Token 172: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048603612929582596
    2. ':
' → logprob: -3.2986035346984863
    3. ' :' → logprob: -5.298603534698486
    4. ' :
' → logprob: -6.173603534698486
    5. '   ' → logprob: -6.298603534698486
    6. '       ' → logprob: -7.048603534698486
    7. ',' → logprob: -7.423603534698486
    8. ' if' → logprob: -9.673604011535645
    9. ' ,' → logprob: -10.548604011535645
    10. 'if' → logprob: -11.798604011535645

Token 173: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41378313302993774
    2. ':' → logprob: -1.163783073425293
    3. ':
' → logprob: -4.163783073425293
    4. ' :' → logprob: -5.038783073425293
    5. '   ' → logprob: -6.163783073425293
    6. ' :
' → logprob: -6.288783073425293
    7. ' if' → logprob: -8.663783073425293
    8. ',' → logprob: -8.913783073425293
    9. '           ' → logprob: -9.413783073425293
    10. 'if' → logprob: -10.663783073425293

Token 174: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006658534519374371
    2. ' if' → logprob: -5.881658554077148
    3. '        
' → logprob: -7.256658554077148
    4. '   ' → logprob: -7.256658554077148
    5. 'if' (adapté à ' if') → logprob: -7.256658554077148
    6. '
' → logprob: -7.756658554077148
    7. ':' → logprob: -8.006658554077148
    8. ' 
' → logprob: -8.131658554077148
    9. '    ' → logprob: -8.381658554077148
    10. '        ' → logprob: -9.131658554077148

Token 175: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.018150296062231064
    2. 'n' → logprob: -4.018150329589844
    3. '	n' → logprob: -15.143150329589844
    4. ' ' → logprob: -17.018150329589844
    5. ' ' → logprob: -17.143150329589844
    6. ' (' → logprob: -17.143150329589844
    7. '(n' → logprob: -17.268150329589844
    8. '   ' → logprob: -19.268150329589844
    9. ' н' → logprob: -19.268150329589844
    10. '_n' → logprob: -19.518150329589844

Token 176: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10042718052864075
    2. '%' → logprob: -2.3504271507263184
    3. '%i' → logprob: -8.600427627563477
    4. ' ' → logprob: -10.350427627563477
    5. ' ' → logprob: -12.600427627563477
    6. '%d' → logprob: -15.350427627563477
    7. ' %
' → logprob: -15.350427627563477
    8. '   ' → logprob: -15.975427627563477
    9. '%s' → logprob: -15.975427627563477
    10. '%n' → logprob: -16.100427627563477

Token 177: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10020796209573746
    2. ' i' → logprob: -2.350208044052124
    3. '	i' → logprob: -13.975208282470703
    4. '   ' → logprob: -15.600208282470703
    5. ' ' → logprob: -15.600208282470703
    6. '  ' → logprob: -16.975208282470703
    7. '```' → logprob: -18.725208282470703
    8. '[i' → logprob: -19.475208282470703
    9. '(i' → logprob: -19.475208282470703
    10. '_i' → logprob: -19.725208282470703

Token 178: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38688480854034424
    2. '==' → logprob: -1.1368848085403442
    3. ')==' → logprob: -12.261884689331055
    4. ' ' → logprob: -12.386884689331055
    5. '=' → logprob: -12.636884689331055
    6. ']==' → logprob: -14.636884689331055
    7. '===' → logprob: -14.886884689331055
    8. '()==' → logprob: -15.136884689331055
    9. '0' → logprob: -15.636884689331055
    10. ')' → logprob: -16.011884689331055

Token 179: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16022422909736633
    2. ' ' → logprob: -1.910224199295044
    3. '  ' → logprob: -16.16022491455078
    4. '   ' → logprob: -16.91022491455078
    5. ' ' → logprob: -17.16022491455078
    6. '    ' → logprob: -19.03522491455078
    7. '۰' → logprob: -19.28522491455078
    8. '	' → logprob: -19.47272491455078
    9. '```' → logprob: -20.47272491455078
    10. '
' → logprob: -20.53522491455078

Token 180: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -19.250335693359375
    4. '  ' → logprob: -19.375335693359375
    5. '۰' → logprob: -20.625335693359375
    6. '    ' → logprob: -21.375335693359375
    7. ' ' → logprob: -22.187835693359375
    8. '00' → logprob: -22.250335693359375
    9. '０' → logprob: -22.437835693359375
    10. '     ' → logprob: -22.500335693359375

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002206639386713505
    2. ':
' → logprob: -6.127206802368164
    3. ' :' → logprob: -11.002206802368164
    4. '):' → logprob: -13.252206802368164
    5. ':
' → logprob: -14.002206802368164
    6. ':

' → logprob: -14.252206802368164
    7. '):
' → logprob: -14.377206802368164
    8. '       ' → logprob: -14.502206802368164
    9. ',' → logprob: -15.252206802368164
    10. ' :
' → logprob: -15.877206802368164

Token 182: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06672939658164978
    2. ':' → logprob: -3.4417293071746826
    3. '       ' → logprob: -3.6917293071746826
    4. 'lower' → logprob: -6.441729545593262
    5. ' :' → logprob: -6.566729545593262
    6. ':
' → logprob: -7.066729545593262
    7. '        ' → logprob: -7.066729545593262
    8. '            
' → logprob: -7.316729545593262
    9. ' lower' → logprob: -7.566729545593262
    10. '        
' → logprob: -7.816729545593262

Token 183: ' #' (ID: 1069)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.5536974668502808
    2. '           ' → logprob: -1.5536974668502808
    3. 'lower' → logprob: -1.5536974668502808
    4. '       ' → logprob: -6.55369758605957
    5. '   ' → logprob: -7.92869758605957
    6. '               ' → logprob: -9.30369758605957
    7. ' if' → logprob: -9.30369758605957
    8. '
' → logprob: -9.80369758605957
    9. '        ' → logprob: -10.42869758605957
    10. '    ' → logprob: -10.42869758605957

Token 184: ' On' (ID: 2160)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.739652156829834
    2. 'lower' → logprob: -1.364652156829834
    3. ' if' → logprob: -1.989652156829834
    4. 'if' → logprob: -2.114652156829834
    5. '   ' → logprob: -5.364652156829834
    6. '#' → logprob: -6.364652156829834
    7. 'upper' → logprob: -6.864652156829834
    8. '    ' → logprob: -6.989652156829834
    9. ' upper' → logprob: -7.239652156829834
    10. ' #' → logprob: -8.489652633666992

Token 185: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.17806687951087952
    2. ' append' → logprob: -2.4280669689178467
    3. 'lower' → logprob: -3.1780669689178467
    4. '.append' → logprob: -3.6780669689178467
    5. ' lower' → logprob: -5.178066730499268
    6. ' ajoute' → logprob: -7.428066730499268
    7. 'aj' → logprob: -7.553066730499268
    8. 'ower' → logprob: -8.303067207336426
    9. ' app' → logprob: -8.678067207336426
    10. '_append' → logprob: -8.928067207336426

Token 186: ' i' (ID: 575)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.884667694568634
    2. 'i' → logprob: -1.0096676349639893
    3. ' i' → logprob: -2.1346676349639893
    4. ' lower' → logprob: -2.2596676349639893
    5. '   ' → logprob: -10.13466739654541
    6. '	i' → logprob: -10.38466739654541
    7. ' ' → logprob: -10.63466739654541
    8. ' ' → logprob: -11.38466739654541
    9. '(lower' → logprob: -12.13466739654541
    10. '  ' → logprob: -12.50966739654541

Token 187: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.05180955305695534
    2. 'lower' → logprob: -4.176809787750244
    3. ' to' → logprob: -4.301809787750244
    4. ' lower' → logprob: -4.676809787750244
    5. 'à' → logprob: -5.301809787750244
    6. ' ' → logprob: -6.051809787750244
    7. ')' → logprob: -6.676809787750244
    8. '   ' → logprob: -6.676809787750244
    9. ',' → logprob: -7.426809787750244
    10. '_lower' → logprob: -7.676809787750244

Token 188: ' la' (ID: 557)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.3132711946964264
    2. ' lower' → logprob: -1.313271164894104
    3. ' la' → logprob: -12.563271522521973
    4. ' ' → logprob: -13.063271522521973
    5. ' ' → logprob: -14.063271522521973
    6. '(lower' → logprob: -14.188271522521973
    7. 'la' → logprob: -14.313271522521973
    8. '.lower' → logprob: -15.063271522521973
    9. 'upper' → logprob: -15.188271522521973
    10. '_lower' → logprob: -15.313271522521973

Token 189: ' liste' (ID: 31719)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.012511883862316608
    2. ' lower' → logprob: -4.387511730194092
    3. 'low' → logprob: -14.26251220703125
    4. 'upper' → logprob: -14.51251220703125
    5. '   ' → logprob: -14.76251220703125
    6. '_lower' → logprob: -16.01251220703125
    7. ' ' → logprob: -16.13751220703125
    8. '(lower' → logprob: -16.51251220703125
    9. '.lower' → logprob: -16.63751220703125
    10. 'list' → logprob: -16.76251220703125

Token 190: ' des' (ID: 731)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.1760895699262619
    2. '(lower' → logprob: -2.3010895252227783
    3. ' lower' → logprob: -2.8010895252227783
    4. '(' → logprob: -7.551089763641357
    5. ' (' → logprob: -11.1760892868042
    6. '.lower' → logprob: -11.6760892868042
    7. '_lower' → logprob: -11.9260892868042
    8. '   ' → logprob: -12.1760892868042
    9. ' ' → logprob: -14.1760892868042
    10. '(
' → logprob: -14.4260892868042

Token 191: ' petits' (ID: 38141)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.2519325911998749
    2. ' lower' → logprob: -1.5019326210021973
    3. '_lower' → logprob: -13.876932144165039
    4. ' ' → logprob: -14.376932144165039
    5. 'upper' → logprob: -14.626932144165039
    6. ' ' → logprob: -14.751932144165039
    7. '.lower' → logprob: -15.001932144165039
    8. '(lower' → logprob: -15.126932144165039
    9. 'low' → logprob: -15.626932144165039
    10. 'Lower' → logprob: -16.50193214416504

Token 192: ' div' (ID: 4223)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.07918201386928558
    2. 'lower' → logprob: -3.2041819095611572
    3. '_lower' → logprob: -3.7041819095611572
    4. 'div' → logprob: -4.704182147979736
    5. ' lower' → logprob: -6.829182147979736
    6. '_' → logprob: -7.454182147979736
    7. ' _' → logprob: -8.829181671142578
    8. '   ' → logprob: -11.829181671142578
    9. ' divis' → logprob: -12.079181671142578
    10. '(lower' → logprob: -12.079181671142578

Token 193: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.0778731033205986
    2. 'is' → logprob: -3.9528729915618896
    3. 'lower' → logprob: -3.9528729915618896
    4. '_lower' → logprob: -4.327873229980469
    5. ' lower' → logprob: -5.077873229980469
    6. 'iseur' → logprob: -5.452873229980469
    7. ' _' → logprob: -5.577873229980469
    8. '_' → logprob: -6.202873229980469
    9. 'isseurs' → logprob: -6.827873229980469
    10. '   ' → logprob: -6.827873229980469

Token 194: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.00046022076276130974
    2. 'rs' → logprob: -8.125460624694824
    3. 's' → logprob: -9.375460624694824
    4. 'teurs' → logprob: -11.375460624694824
    5. 'urse' → logprob: -11.750460624694824
    6. 'se' → logprob: -11.750460624694824
    7. 'reurs' → logprob: -11.875460624694824
    8. '   ' → logprob: -11.875460624694824
    9. 'eurs' → logprob: -12.125460624694824
    10. 'urses' → logprob: -12.250460624694824

Token 195: '
' (ID: 198)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.5002458691596985
    2. ' lower' → logprob: -1.5002458095550537
    3. '.append' → logprob: -2.2502458095550537
    4. '.lower' → logprob: -2.8752458095550537
    5. '           ' → logprob: -5.375246047973633
    6. '.' → logprob: -6.250246047973633
    7. '   ' → logprob: -7.000246047973633
    8. ' .' → logprob: -7.500246047973633
    9. '               ' → logprob: -8.500246047973633
    10. 'append' → logprob: -8.875246047973633

Token 196: '           ' (ID: 352)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.48741692304611206
    2. ' lower' → logprob: -1.1124169826507568
    3. '.append' → logprob: -3.487416982650757
    4. '.lower' → logprob: -3.737416982650757
    5. '           ' → logprob: -6.487416744232178
    6. '   ' → logprob: -7.487416744232178
    7. 'append' → logprob: -8.237417221069336
    8. '.' → logprob: -9.362417221069336
    9. ' .' → logprob: -9.737417221069336
    10. '               ' → logprob: -10.237417221069336

Token 197: ' lower' (ID: 6931)
  Prédit: ' lower'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.12774960696697235
    2. 'lower' (adapté à ' lower') → logprob: -2.1277496814727783
    3. '           ' → logprob: -7.127749443054199
    4. '   ' → logprob: -11.8777494430542
    5. '               ' → logprob: -12.1277494430542
    6. '            ' → logprob: -12.3777494430542
    7. '    ' → logprob: -14.2527494430542
    8. ' ' → logprob: -14.3777494430542
    9. '(lower' → logprob: -15.3777494430542
    10. '.lower' → logprob: -15.8777494430542

Token 198: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -3.292907877039397e-06
    2. 'div' → logprob: -12.75000286102295
    3. '_' → logprob: -16.500003814697266
    4. ' _' → logprob: -17.125003814697266
    5. '_des' → logprob: -17.250003814697266
    6. ' див' → logprob: -17.750003814697266
    7. '<div' → logprob: -18.000003814697266
    8. '_d' → logprob: -18.375003814697266
    9. '_DIV' → logprob: -18.500003814697266
    10. '_dis' → logprob: -18.500003814697266

Token 199: 'is' (ID: 276)
  Prédit: 'ors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.4000399708747864
    2. 'is' → logprob: -1.7750399112701416
    3. 's' → logprob: -1.9000399112701416
    4. 'ers' → logprob: -5.775040149688721
    5. '_' → logprob: -6.275040149688721
    6. 'iors' → logprob: -7.150040149688721
    7. 'eurs' → logprob: -7.275040149688721
    8. 'rs' → logprob: -7.525040149688721
    9. '_s' → logprob: -7.775040149688721
    10. '   ' → logprob: -7.900040149688721

Token 200: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.05213889107108116
    2. 's' → logprob: -3.0521388053894043
    3. '   ' → logprob: -7.052138805389404
    4. '[' → logprob: -7.177138805389404
    5. '_' → logprob: -8.552139282226562
    6. '```' → logprob: -8.802139282226562
    7. '_s' → logprob: -8.802139282226562
    8. 'ers' → logprob: -8.927139282226562
    9. '       ' → logprob: -9.302139282226562
    10. 'se' → logprob: -9.552139282226562

Token 201: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.176947600673884e-05
    2. '.' → logprob: -10.750021934509277
    3. ' .' → logprob: -15.375021934509277
    4. '.app' → logprob: -19.62502098083496
    5. 'append' → logprob: -19.75002098083496
    6. '.ap' → logprob: -21.37502098083496
    7. '.add' → logprob: -22.00002098083496
    8. '.Append' → logprob: -22.12502098083496
    9. '.push' → logprob: -22.25002098083496
    10. '.extend' → logprob: -23.50002098083496

Token 202: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.000001907348633
    3. ' (' → logprob: -18.000001907348633
    4. '(
' → logprob: -20.250001907348633
    5. 'i' → logprob: -21.500001907348633
    6. '(n' → logprob: -22.375001907348633
    7. ' i' → logprob: -22.625001907348633
    8. '(ii' → logprob: -22.875001907348633
    9. '(I' → logprob: -23.625001907348633
    10. '(int' → logprob: -24.000001907348633

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005239326041191816
    2. ')
' → logprob: -5.255239486694336
    3. ' )' → logprob: -13.505239486694336
    4. '           ' → logprob: -13.630239486694336
    5. ')
' → logprob: -13.630239486694336
    6. '       ' → logprob: -13.880239486694336
    7. ')

' → logprob: -14.880239486694336
    8. '   ' → logprob: -15.505239486694336
    9. ' )
' → logprob: -16.630239486694336
    10. '               ' → logprob: -17.380239486694336

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04084688425064087
    2. '            
' → logprob: -3.290846824645996
    3. ' 
' → logprob: -6.290846824645996
    4. '       ' → logprob: -8.290846824645996
    5. '           
' → logprob: -9.165846824645996
    6. '            ' → logprob: -9.415846824645996
    7. '             
' → logprob: -9.415846824645996
    8. '        
' → logprob: -9.665846824645996
    9. '    
' → logprob: -10.040846824645996
    10. '  
' → logprob: -10.165846824645996

Token 205: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022072387859225273
    2. ' if' → logprob: -4.5220723152160645
    3. 'if' → logprob: -4.5220723152160645
    4. '            
' → logprob: -10.272072792053223
    5. '
' → logprob: -10.397072792053223
    6. '          ' → logprob: -11.397072792053223
    7. '#' (adapté à ' #') → logprob: -12.647072792053223
    8. '            ' → logprob: -12.647072792053223
    9. ' ' → logprob: -12.897072792053223
    10. ',' → logprob: -13.147072792053223

Token 206: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43068617582321167
    2. 'if' → logprob: -1.0556862354278564
    3. 'upper' → logprob: -6.930685997009277
    4. ' upper' → logprob: -7.805685997009277
    5. '           ' → logprob: -8.555685997009277
    6. '   ' → logprob: -8.680685997009277
    7. '            
' → logprob: -10.055685997009277
    8. 'div' → logprob: -10.180685997009277
    9. '#' → logprob: -10.180685997009277
    10. '       ' → logprob: -10.555685997009277

Token 207: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.012645607814192772
    2. 'i' → logprob: -4.387645721435547
    3. ' n' → logprob: -9.512645721435547
    4. ' (' → logprob: -10.637645721435547
    5. '(i' → logprob: -11.262645721435547
    6. ' ' → logprob: -11.387645721435547
    7. 'n' → logprob: -12.137645721435547
    8. '   ' → logprob: -12.762645721435547
    9. '	i' → logprob: -13.637645721435547
    10. ' ' → logprob: -13.762645721435547

Token 208: ' n' (ID: 297)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.0792747512459755
    2. ' !=' → logprob: -2.8292746543884277
    3. '*i' → logprob: -4.454274654388428
    4. '*' → logprob: -5.204274654388428
    5. ' *' → logprob: -10.579275131225586
    6. 'i' → logprob: -12.454275131225586
    7. ')!=' → logprob: -13.704275131225586
    8. '()!=' → logprob: -13.829275131225586
    9. '!==' → logprob: -14.079275131225586
    10. '!=(' → logprob: -14.079275131225586

Token 209: ''est' (ID: 6616)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4528483748435974
    2. ' !=' → logprob: -1.0778484344482422
    3. '*' → logprob: -4.077848434448242
    4. '*i' → logprob: -5.077848434448242
    5. ' *' → logprob: -8.452848434448242
    6. '!==' → logprob: -8.702848434448242
    7. ' i' → logprob: -9.077848434448242
    8. ' ' → logprob: -9.952848434448242
    9. '()!=' → logprob: -10.952848434448242
    10. 'o' → logprob: -11.077848434448242

Token 210: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.07933872938156128
    2. ' pas' → logprob: -2.579338788986206
    3. '_pas' → logprob: -7.829338550567627
    4. 'Pas' → logprob: -11.454339027404785
    5. '1' → logprob: -12.204339027404785
    6. ' ' → logprob: -12.329339027404785
    7. '=' → logprob: -12.579339027404785
    8. 'not' → logprob: -12.704339027404785
    9. 'PAS' → logprob: -12.954339027404785
    10. 'égal' → logprob: -13.079339027404785

Token 211: ' égal' (ID: 15059)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7706058621406555
    2. 'i' → logprob: -1.5206058025360107
    3. ' i' → logprob: -2.0206058025360107
    4. ' égal' → logprob: -2.8956058025360107
    5. ' n' → logprob: -3.1456058025360107
    6. ' equal' → logprob: -3.3956058025360107
    7. '1' → logprob: -4.02060604095459
    8. 'equal' → logprob: -4.77060604095459
    9. ' ' → logprob: -4.89560604095459
    10. 'égal' → logprob: -5.27060604095459

Token 212: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.037065085023641586
    2. ' ' → logprob: -4.662065029144287
    3. 'à' → logprob: -4.787065029144287
    4. ' i' → logprob: -4.787065029144287
    5. 'i' → logprob: -5.162065029144287
    6. '   ' → logprob: -6.287065029144287
    7. ' a' → logprob: -7.037065029144287
    8. '(i' → logprob: -7.162065029144287
    9. ' to' → logprob: -8.037065505981445
    10. '           ' → logprob: -8.787065505981445

Token 213: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.47436830401420593
    2. 'n' → logprob: -0.9743683338165283
    3. '1' → logprob: -8.59936809539795
    4. ' ' → logprob: -9.47436809539795
    5. '	n' → logprob: -11.59936809539795
    6. ' (' → logprob: -12.09936809539795
    7. '(n' → logprob: -12.34936809539795
    8. ' i' → logprob: -12.47436809539795
    9. 'i' → logprob: -12.97436809539795
    10. ' ' → logprob: -13.47436809539795

Token 214: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.25373372435569763
    2. '//' → logprob: -1.50373375415802
    3. ' ' → logprob: -6.8787336349487305
    4. ' /' → logprob: -7.8787336349487305
    5. ' ' → logprob: -8.87873363494873
    6. '/i' → logprob: -9.25373363494873
    7. '/' → logprob: -9.62873363494873
    8. ' #' → logprob: -10.50373363494873
    9. 'div' → logprob: -11.00373363494873
    10. '#' → logprob: -11.12873363494873

Token 215: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001170460251159966
    2. ' i' → logprob: -6.751170635223389
    3. ' ' → logprob: -15.75117015838623
    4. '   ' → logprob: -16.626171112060547
    5. '	i' → logprob: -16.876171112060547
    6. '(i' → logprob: -17.501171112060547
    7. '```' → logprob: -18.501171112060547
    8. ' ' → logprob: -18.876171112060547
    9. '_i' → logprob: -19.001171112060547
    10. '  ' → logprob: -19.501171112060547

Token 216: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.026615159586071968
    2. ':' → logprob: -3.7766151428222656
    3. 'and' → logprob: -6.651615142822266
    4. ',' → logprob: -6.776615142822266
    5. '           ' → logprob: -7.151615142822266
    6. ':
' → logprob: -9.526615142822266
    7. '   ' → logprob: -10.776615142822266
    8. '               ' → logprob: -10.901615142822266
    9. ' ' → logprob: -11.776615142822266
    10. ' et' → logprob: -11.901615142822266

Token 217: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7217305898666382
    2. '):' → logprob: -1.7217305898666382
    3. '),' → logprob: -1.8467305898666382
    4. ' and' → logprob: -1.9717305898666382
    5. '):
' → logprob: -3.7217307090759277
    6. ' ),' → logprob: -5.596730709075928
    7. 'and' → logprob: -5.721730709075928
    8. ' )' → logprob: -5.846730709075928
    9. ' ):' → logprob: -6.096730709075928
    10. ' ):
' → logprob: -7.346730709075928

Token 218: ' ne' (ID: 453)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.36940205097198486
    2. 'i' → logprob: -1.3694020509719849
    3. ' éviter' → logprob: -2.9944019317626953
    4. 'év' → logprob: -6.869401931762695
    5. 'n' → logprob: -7.369401931762695
    6. ')' → logprob: -7.369401931762695
    7. '   ' → logprob: -7.619401931762695
    8. ' n' → logprob: -7.744401931762695
    9. ' ' → logprob: -7.994401931762695
    10. ' )' → logprob: -8.994401931762695

Token 219: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.22545364499092102
    2. ' pas' → logprob: -1.6004536151885986
    3. '_pas' → logprob: -10.35045337677002
    4. 'aj' → logprob: -13.60045337677002
    5. ' ajouter' → logprob: -13.97545337677002
    6. '           ' → logprob: -14.22545337677002
    7. 'pass' → logprob: -14.35045337677002
    8. ' #' → logprob: -14.35045337677002
    9. ' add' → logprob: -14.35045337677002
    10. '   ' → logprob: -14.47545337677002

Token 220: ' ajouter' (ID: 78457)
  Prédit: ' ajouter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -0.5822253823280334
    2. 'aj' → logprob: -1.5822253227233887
    3. 'i' → logprob: -2.8322253227233887
    4. '           ' → logprob: -3.7072253227233887
    5. '   ' → logprob: -3.7072253227233887
    6. '#' → logprob: -4.082225322723389
    7. 'double' → logprob: -4.332225322723389
    8. ' double' → logprob: -4.832225322723389
    9. ' créer' → logprob: -4.832225322723389
    10. ' oublier' → logprob: -4.957225322723389

Token 221: ' deux' (ID: 10301)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03879769891500473
    2. 'i' → logprob: -3.288797616958618
    3. '   ' → logprob: -7.788797855377197
    4. '    ' → logprob: -9.163797378540039
    5. ' ' → logprob: -9.288797378540039
    6. '	i' → logprob: -10.538797378540039
    7. ' )' → logprob: -10.663797378540039
    8. '  ' → logprob: -10.913797378540039
    9. ' ' → logprob: -10.913797378540039
    10. '(i' → logprob: -10.913797378540039

Token 222: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.01556443516165018
    2. 'fois' → logprob: -4.890564441680908
    3. 'i' → logprob: -6.015564441680908
    4. ' i' → logprob: -6.140564441680908
    5. ' ' → logprob: -6.640564441680908
    6. '*i' → logprob: -7.140564441680908
    7. ' *' → logprob: -8.39056396484375
    8. '   ' → logprob: -8.51556396484375
    9. '*' → logprob: -8.89056396484375
    10. '#' → logprob: -9.14056396484375

Token 223: ' la' (ID: 557)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.08159589767456055
    2. 'i' → logprob: -2.5815958976745605
    3. '   ' → logprob: -6.3315958976745605
    4. ' le' → logprob: -8.206596374511719
    5. '(i' → logprob: -8.456596374511719
    6. ' ' → logprob: -8.831596374511719
    7. ' la' → logprob: -9.456596374511719
    8. '    ' → logprob: -9.956596374511719
    9. '	i' → logprob: -9.956596374511719
    10. '  ' → logprob: -10.456596374511719

Token 224: ' rac' (ID: 12334)
  Prédit: ' rac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rac' → logprob: -0.4413926899433136
    2. 'rac' → logprob: -1.0663926601409912
    3. 'i' → logprob: -4.56639289855957
    4. 'div' → logprob: -6.81639289855957
    5. ' ' → logprob: -7.81639289855957
    6. ' i' → logprob: -8.69139289855957
    7. 'val' → logprob: -9.06639289855957
    8. 'sqrt' → logprob: -9.06639289855957
    9. ' même' → logprob: -9.06639289855957
    10. '   ' → logprob: -9.19139289855957

Token 225: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.0015337858349084854
    2. 'i' → logprob: -6.8765339851379395
    3. '```' → logprob: -9.001533508300781
    4. '   ' → logprob: -9.376533508300781
    5. 'e' → logprob: -10.001533508300781
    6. '

' → logprob: -10.126533508300781
    7. '
' → logprob: -10.376533508300781
    8. '``' → logprob: -11.251533508300781
    9. 'ïne' → logprob: -11.376533508300781
    10. 'c' → logprob: -11.626533508300781

Token 226: ' carr' (ID: 18321)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.5995720028877258
    2. ' carr' → logprob: -0.8495720028877258
    3. 'c' → logprob: -4.09957218170166
    4. '   ' → logprob: -5.47457218170166
    5. ' carré' → logprob: -6.84957218170166
    6. 'de' → logprob: -8.34957218170166
    7. '       ' → logprob: -8.34957218170166
    8. '_c' → logprob: -8.34957218170166
    9. ' carre' → logprob: -8.97457218170166
    10. 'int' → logprob: -9.09957218170166

Token 227: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.05087755620479584
    2. 'é' → logprob: -3.175877571105957
    3. 't' → logprob: -5.675877571105957
    4. 'i' → logprob: -6.675877571105957
    5. 'ot' → logprob: -6.800877571105957
    6. 'ière' → logprob: -7.300877571105957
    7. 'e' → logprob: -7.925877571105957
    8. 'ee' → logprob: -8.925877571105957
    9. '2' → logprob: -9.175877571105957
    10. 'otte' → logprob: -9.550877571105957

Token 228: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5047268867492676
    2. '   ' → logprob: -2.0047268867492676
    3. ' de' → logprob: -2.3797268867492676
    4. '),' → logprob: -2.7547268867492676
    5. '(n' → logprob: -3.7547268867492676
    6. 'if' → logprob: -4.254726886749268
    7. '(i' → logprob: -4.379726886749268
    8. ' if' → logprob: -4.629726886749268
    9. ',' → logprob: -4.629726886749268
    10. 'n' → logprob: -5.379726886749268

Token 229: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22900697588920593
    2. 'i' → logprob: -1.6040070056915283
    3. '   ' → logprob: -5.854006767272949
    4. ' ' → logprob: -8.60400676727295
    5. '  ' → logprob: -8.72900676727295
    6. 'n' → logprob: -9.22900676727295
    7. ' n' → logprob: -9.60400676727295
    8. '(i' → logprob: -9.85400676727295
    9. '	i' → logprob: -9.97900676727295
    10. '    ' → logprob: -10.10400676727295

Token 230: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6577156186103821
    2. '==' → logprob: -0.7827156186103821
    3. '   ' → logprob: -4.532715797424316
    4. '**' → logprob: -5.032715797424316
    5. ' ' → logprob: -5.782715797424316
    6. '%' → logprob: -6.782715797424316
    7. '%i' → logprob: -7.157715797424316
    8. '#' → logprob: -7.532715797424316
    9. 'is' → logprob: -7.657715797424316
    10. '  ' → logprob: -8.532715797424316

Token 231: ' un' (ID: 537)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7451663613319397
    2. 'par' → logprob: -1.745166301727295
    3. 'un' → logprob: -2.245166301727295
    4. ' un' → logprob: -2.245166301727295
    5. 'i' → logprob: -2.495166301727295
    6. 'int' → logprob: -4.120166301727295
    7. '       ' → logprob: -4.370166301727295
    8. ' parfait' → logprob: -5.120166301727295
    9. '           ' → logprob: -5.245166301727295
    10. ' ' → logprob: -5.495166301727295

Token 232: ' carré' (ID: 191546)
  Prédit: 'perfect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'perfect' → logprob: -0.5024735331535339
    2. ' parfait' → logprob: -1.6274735927581787
    3. ' perfect' → logprob: -1.8774735927581787
    4. 'par' → logprob: -4.1274733543396
    5. ' carré' → logprob: -4.1274733543396
    6. '   ' → logprob: -5.3774733543396
    7. 'int' → logprob: -5.7524733543396
    8. ' ' → logprob: -6.8774733543396
    9. ' square' → logprob: -7.2524733543396
    10. 'square' → logprob: -7.3774733543396

Token 233: ' parfait' (ID: 39268)
  Prédit: ' parfait'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parfait' → logprob: -0.11420872062444687
    2. '   ' → logprob: -2.739208698272705
    3. 'perfect' → logprob: -3.239208698272705
    4. 'par' → logprob: -5.989208698272705
    5. '       ' → logprob: -7.989208698272705
    6. '_par' → logprob: -8.239209175109863
    7. 'exact' → logprob: -8.614209175109863
    8. ' perfect' → logprob: -8.614209175109863
    9. '```' → logprob: -8.864209175109863
    10. '    ' → logprob: -9.364209175109863

Token 234: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06986217945814133
    2. '):' → logprob: -3.194862127304077
    3. ')' → logprob: -4.194862365722656
    4. '           ' → logprob: -4.694862365722656
    5. '),' → logprob: -6.819862365722656
    6. '       ' → logprob: -7.569862365722656
    7. ':' → logprob: -8.694862365722656
    8. '   ' → logprob: -8.819862365722656
    9. ':
' → logprob: -9.319862365722656
    10. '               ' → logprob: -9.569862365722656

Token 235: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12893366813659668
    2. ' and' → logprob: -2.2539336681365967
    3. ' if' → logprob: -4.628933906555176
    4. '       ' → logprob: -6.003933906555176
    5. '               ' → logprob: -6.628933906555176
    6. ',' → logprob: -7.003933906555176
    7. 'if' → logprob: -8.128933906555176
    8. '   ' → logprob: -8.253933906555176
    9. 'and' → logprob: -8.628933906555176
    10. ':' → logprob: -8.878933906555176

Token 236: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3560006618499756
    2. '           ' → logprob: -1.4810006618499756
    3. 'if' (adapté à ' if') → logprob: -3.1060006618499756
    4. ' and' → logprob: -3.8560006618499756
    5. '       ' → logprob: -5.231000900268555
    6. 'and' → logprob: -7.856000900268555
    7. '   ' → logprob: -8.606000900268555
    8. '               ' → logprob: -9.856000900268555
    9. '            ' → logprob: -9.856000900268555
    10. ' ' → logprob: -9.981000900268555

Token 237: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.016099711880087852
    2. 'i' → logprob: -4.14109992980957
    3. '   ' → logprob: -10.14109992980957
    4. '    ' → logprob: -11.51609992980957
    5. ' ' → logprob: -12.26609992980957
    6. '(i' → logprob: -12.76609992980957
    7. ' n' → logprob: -12.76609992980957
    8. '	i' → logprob: -13.14109992980957
    9. 'n' → logprob: -13.39109992980957
    10. '  ' → logprob: -13.76609992980957

Token 238: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3878052532672882
    2. ' !=' → logprob: -1.1378052234649658
    3. '*i' → logprob: -7.512805461883545
    4. '*' → logprob: -8.012804985046387
    5. ' *' → logprob: -11.262804985046387
    6. '!=(' → logprob: -11.512804985046387
    7. '!==' → logprob: -11.762804985046387
    8. ' ' → logprob: -12.012804985046387
    9. ')!=' → logprob: -12.137804985046387
    10. ']!=' → logprob: -12.262804985046387

Token 239: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.06197742745280266
    2. 'n' → logprob: -2.8119773864746094
    3. '   ' → logprob: -12.81197738647461
    4. ' ' → logprob: -12.81197738647461
    5. '	n' → logprob: -13.18697738647461
    6. '(n' → logprob: -13.93697738647461
    7. '    ' → logprob: -14.06197738647461
    8. '  ' → logprob: -14.81197738647461
    9. ' (' → logprob: -15.06197738647461
    10. ' ' → logprob: -15.93697738647461

Token 240: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.06197250634431839
    2. ' //' → logprob: -2.8119726181030273
    3. ' ' → logprob: -13.186972618103027
    4. ' ' → logprob: -14.061972618103027
    5. '/i' → logprob: -14.186972618103027
    6. '   ' → logprob: -14.561972618103027
    7. '/' → logprob: -15.186972618103027
    8. '#' → logprob: -15.561972618103027
    9. '//=' → logprob: -15.561972618103027
    10. '	' → logprob: -15.936972618103027

Token 241: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0005555360112339258
    2. ' i' → logprob: -7.500555515289307
    3. '   ' → logprob: -13.125555992126465
    4. ' ' → logprob: -15.125555992126465
    5. '	i' → logprob: -15.750555992126465
    6. '  ' → logprob: -16.25055503845215
    7. '    ' → logprob: -19.50055503845215
    8. '```' → logprob: -19.87555503845215
    9. '_i' → logprob: -20.00055503845215
    10. '       ' → logprob: -20.00055503845215

Token 242: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5765723586082458
    2. ':
' → logprob: -0.8265723586082458
    3. '):
' → logprob: -8.20157241821289
    4. '           ' → logprob: -8.57657241821289
    5. ' :
' → logprob: -9.57657241821289
    6. ':
' → logprob: -10.07657241821289
    7. '       ' → logprob: -10.70157241821289
    8. ' :' → logprob: -11.20157241821289
    9. '   ' → logprob: -11.70157241821289
    10. '):' → logprob: -11.82657241821289

Token 243: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004396095173433423
    2. '           ' → logprob: -8.000439643859863
    3. ' upper' → logprob: -9.500439643859863
    4. ':' → logprob: -11.500439643859863
    5. 'upper' → logprob: -11.750439643859863
    6. ':
' → logprob: -12.375439643859863
    7. ',' → logprob: -13.375439643859863
    8. '              ' → logprob: -13.750439643859863
    9. '                
' → logprob: -14.000439643859863
    10. '	           ' → logprob: -14.500439643859863

Token 244: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08194566518068314
    2. ' upper' → logprob: -2.5819456577301025
    3. 'upper' → logprob: -5.831945896148682
    4. '           ' → logprob: -10.081945419311523
    5. ' ' → logprob: -10.706945419311523
    6. '   ' → logprob: -11.331945419311523
    7. '                   ' → logprob: -11.706945419311523
    8. '              ' → logprob: -11.831945419311523
    9. '                ' → logprob: -11.831945419311523
    10. ' ' → logprob: -12.331945419311523

Token 245: ' On' (ID: 2160)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.10025466978549957
    2. ' upper' → logprob: -2.350254774093628
    3. '           ' → logprob: -10.600255012512207
    4. '               ' → logprob: -10.850255012512207
    5. '   ' → logprob: -13.350255012512207
    6. '#' → logprob: -13.850255012512207
    7. 'Upper' → logprob: -15.225255012512207
    8. '.upper' → logprob: -15.475255012512207
    9. '       ' → logprob: -15.600255012512207
    10. ' ' → logprob: -16.22525405883789

Token 246: ' ajoute' (ID: 91611)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.004351198207587004
    2. ' upper' → logprob: -5.5043511390686035
    3. '           ' → logprob: -9.004351615905762
    4. '               ' → logprob: -10.004351615905762
    5. 'append' → logprob: -10.129351615905762
    6. '.append' → logprob: -10.504351615905762
    7. '.upper' → logprob: -10.879351615905762
    8. '_upper' → logprob: -12.129351615905762
    9. '   ' → logprob: -12.254351615905762
    10. '.' → logprob: -12.629351615905762

Token 247: ' n' (ID: 297)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.12695036828517914
    2. ' upper' → logprob: -2.126950263977051
    3. 'n' → logprob: -11.25195026397705
    4. ' n' → logprob: -12.37695026397705
    5. '   ' → logprob: -13.00195026397705
    6. '(' → logprob: -13.00195026397705
    7. '(n' → logprob: -15.00195026397705
    8. ' ' → logprob: -16.126951217651367
    9. '.upper' → logprob: -16.501951217651367
    10. '    ' → logprob: -17.501951217651367

Token 248: '//' (ID: 393)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3132990896701813
    2. '//' → logprob: -1.3132990598678589
    3. ' ' → logprob: -11.313299179077148
    4. ' ' → logprob: -11.438299179077148
    5. '   ' → logprob: -11.813299179077148
    6. '#' → logprob: -12.938299179077148
    7. '	' → logprob: -13.313299179077148
    8. ' #' → logprob: -14.438299179077148
    9. '  ' → logprob: -14.813299179077148
    10. '/n' → logprob: -14.813299179077148

Token 249: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.02986699901521206
    2. ' i' → logprob: -3.529866933822632
    3. 'n' → logprob: -9.654867172241211
    4. ' ' → logprob: -11.154867172241211
    5. '(i' → logprob: -11.279867172241211
    6. '   ' → logprob: -11.779867172241211
    7. ' n' → logprob: -12.279867172241211
    8. '_i' → logprob: -12.279867172241211
    9. '	i' → logprob: -12.529867172241211
    10. '(n' → logprob: -13.404867172241211

Token 250: ' à' (ID: 1221)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -1.1867138147354126
    2. ' to' → logprob: -1.3117138147354126
    3. '               ' → logprob: -1.6867138147354126
    4. ' upper' → logprob: -2.811713695526123
    5. ')' → logprob: -2.936713695526123
    6. '           ' → logprob: -3.311713695526123
    7. 'to' → logprob: -3.436713695526123
    8. ',' → logprob: -4.561713695526123
    9. ' à' → logprob: -4.561713695526123
    10. '.append' → logprob: -4.936713695526123

Token 251: ' la' (ID: 557)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.04858759790658951
    2. ' upper' → logprob: -3.0485875606536865
    3. '   ' → logprob: -16.798587799072266
    4. ' ' → logprob: -17.048587799072266
    5. '.upper' → logprob: -17.548587799072266
    6. 'uppercase' → logprob: -17.673587799072266
    7. 'lower' → logprob: -18.048587799072266
    8. '_upper' → logprob: -18.298587799072266
    9. '  ' → logprob: -18.423587799072266
    10. 'the' → logprob: -18.673587799072266

Token 252: ' liste' (ID: 31719)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0002036595979006961
    2. ' upper' → logprob: -8.500204086303711
    3. 'lower' → logprob: -16.12520408630371
    4. '.upper' → logprob: -19.75020408630371
    5. '   ' → logprob: -20.00020408630371
    6. ' ' → logprob: -20.00020408630371
    7. 'uppercase' → logprob: -20.37520408630371
    8. '[' → logprob: -20.50020408630371
    9. 'top' → logprob: -20.75020408630371
    10. 'Upper' → logprob: -21.12520408630371

Token 253: ' des' (ID: 731)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03540368005633354
    2. 'upper' → logprob: -3.4104037284851074
    3. ' upper' → logprob: -6.410403728485107
    4. '               ' → logprob: -9.91040325164795
    5. '   ' → logprob: -10.91040325164795
    6. '           ' → logprob: -11.16040325164795
    7. '.upper' → logprob: -11.28540325164795
    8. ' (' → logprob: -11.41040325164795
    9. ' ' → logprob: -13.53540325164795
    10. '(
' → logprob: -13.66040325164795

Token 254: ' grands' (ID: 43085)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0011705794604495168
    2. ' upper' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.75117015838623
    4. ' ' → logprob: -16.751171112060547
    5. '       ' → logprob: -17.001171112060547
    6. '.upper' → logprob: -17.501171112060547
    7. '_upper' → logprob: -17.751171112060547
    8. 'uppercase' → logprob: -17.751171112060547
    9. '-upper' → logprob: -18.501171112060547
    10. '  ' → logprob: -18.501171112060547

Token 255: ' div' (ID: 4223)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0015835431404411793
    2. 'div' → logprob: -6.501583576202393
    3. 'upper' → logprob: -10.001583099365234
    4. '_upper' → logprob: -10.376583099365234
    5. '_' → logprob: -12.376583099365234
    6. ' upper' → logprob: -15.626583099365234
    7. ' _' → logprob: -17.001583099365234
    8. '   ' → logprob: -17.126583099365234
    9. '_DIV' → logprob: -17.626583099365234
    10. '\' → logprob: -18.001583099365234

Token 256: 'ise' (ID: 1096)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.14519083499908447
    2. 'ise' → logprob: -2.020190715789795
    3. 'isers' → logprob: -6.145190715789795
    4. '   ' → logprob: -9.520191192626953
    5. 'isateurs' → logprob: -10.145191192626953
    6. 'isi' → logprob: -10.395191192626953
    7. '```' → logprob: -10.645191192626953
    8. 'isseurs' → logprob: -10.895191192626953
    9. 'iseur' → logprob: -11.020191192626953
    10. 's' → logprob: -11.145191192626953

Token 257: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.01092920545488596
    2. 's' → logprob: -5.260929107666016
    3. 'rs' → logprob: -5.635929107666016
    4. 'ors' → logprob: -6.260929107666016
    5. 'rors' → logprob: -10.260929107666016
    6. 'eurs' → logprob: -10.260929107666016
    7. 'sers' → logprob: -10.635929107666016
    8. 'urses' → logprob: -10.885929107666016
    9. '_' → logprob: -11.510929107666016
    10. 'ur' → logprob: -11.635929107666016

Token 258: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07109479606151581
    2. '           ' → logprob: -3.3210947513580322
    3. ' upper' → logprob: -3.8210947513580322
    4. 'upper' → logprob: -4.571094989776611
    5. '.upper' → logprob: -9.196094512939453
    6. '   ' → logprob: -9.446094512939453
    7. '       ' → logprob: -10.446094512939453
    8. '              ' → logprob: -11.696094512939453
    9. '.' → logprob: -11.696094512939453
    10. ',' → logprob: -11.696094512939453

Token 259: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3418901562690735
    2. '           ' → logprob: -1.9668900966644287
    3. ' upper' → logprob: -2.2168900966644287
    4. 'upper' → logprob: -3.2168900966644287
    5. '   ' → logprob: -7.716890335083008
    6. '       ' → logprob: -9.466890335083008
    7. '.upper' → logprob: -10.091890335083008
    8. ' ' → logprob: -10.716890335083008
    9. '              ' → logprob: -11.466890335083008
    10. '.' → logprob: -11.716890335083008

Token 260: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' (adapté à ' upper') → logprob: -0.12693503499031067
    2. ' upper' → logprob: -2.1269350051879883
    3. '               ' → logprob: -12.001935005187988
    4. '   ' → logprob: -14.626935005187988
    5. '           ' → logprob: -15.251935005187988
    6. '.upper' → logprob: -16.626935958862305
    7. '_upper' → logprob: -17.251935958862305
    8. '                   ' → logprob: -17.751935958862305
    9. '       ' → logprob: -18.501935958862305
    10. 'Upper' → logprob: -18.751935958862305

Token 261: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -1.0445127372804563e-05
    2. 'div' → logprob: -12.37501049041748
    3. '_des' → logprob: -13.12501049041748
    4. 's' → logprob: -13.12501049041748
    5. ' _' → logprob: -13.87501049041748
    6. '_def' → logprob: -14.75001049041748
    7. '_' → logprob: -15.87501049041748
    8. '\' → logprob: -16.125009536743164
    9. '_dec' → logprob: -16.375009536743164
    10. '_dis' → logprob: -16.375009536743164

Token 262: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.004356298595666885
    2. 's' → logprob: -5.754356384277344
    3. 'ors' → logprob: -6.879356384277344
    4. 'div' → logprob: -9.879356384277344
    5. '_div' → logprob: -10.629356384277344
    6. 'itors' → logprob: -10.754356384277344
    7. 'iors' → logprob: -12.254356384277344
    8. 'ers' → logprob: -12.379356384277344
    9. 'ectors' → logprob: -12.504356384277344
    10. 'tors' → logprob: -12.629356384277344

Token 263: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.2035578489303589
    2. 's' → logprob: -1.7035578489303589
    3. 'rs' → logprob: -7.078557968139648
    4. '_s' → logprob: -8.078557968139648
    5. 'tors' → logprob: -8.203557968139648
    6. 'div' → logprob: -9.078557968139648
    7. '_' → logprob: -9.203557968139648
    8. 'vers' → logprob: -9.328557968139648
    9. 'rors' → logprob: -9.953557968139648
    10. '_div' → logprob: -10.078557968139648

Token 264: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012356207298580557
    2. '.' → logprob: -9.000123977661133
    3. '.insert' → logprob: -17.000123977661133
    4. ' .' → logprob: -17.750123977661133
    5. 'append' → logprob: -19.000123977661133
    6. '.ap' → logprob: -21.000123977661133
    7. '.app' → logprob: -21.375123977661133
    8. '​.' → logprob: -23.125123977661133
    9. '.Append' → logprob: -23.375123977661133
    10. '\.' → logprob: -23.625123977661133

Token 265: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -4.5491004129871726e-05
    2. '(' → logprob: -10.000045776367188
    3. ' (' → logprob: -17.750045776367188
    4. '((' → logprob: -18.250045776367188
    5. 'n' → logprob: -18.375045776367188
    6. '(
' → logprob: -19.875045776367188
    7. ' n' → logprob: -21.500045776367188
    8. '	n' → logprob: -22.125045776367188
    9. '(N' → logprob: -23.375045776367188
    10. '(int' → logprob: -23.750045776367188

Token 266: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.3868729770183563
    2. ' //' → logprob: -1.1368730068206787
    3. '/i' → logprob: -14.261873245239258
    4. ' ' → logprob: -14.761873245239258
    5. ' ' → logprob: -15.136873245239258
    6. '/' → logprob: -15.886873245239258
    7. ' /' → logprob: -16.011873245239258
    8. '//=' → logprob: -16.011873245239258
    9. ')' → logprob: -16.886873245239258
    10. '   ' → logprob: -16.886873245239258

Token 267: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00010914575977949426
    2. ' i' → logprob: -9.12510871887207
    3. '   ' → logprob: -16.00010871887207
    4. ' ' → logprob: -17.50010871887207
    5. '	i' → logprob: -17.87510871887207
    6. '  ' → logprob: -19.75010871887207
    7. ')' → logprob: -20.37510871887207
    8. '    ' → logprob: -20.50010871887207
    9. '       ' → logprob: -20.50010871887207
    10. '(i' → logprob: -21.00010871887207

Token 268: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03005615994334221
    2. ')' → logprob: -3.5300562381744385
    3. '       ' → logprob: -8.15505599975586
    4. ')
' → logprob: -11.15505599975586
    5. ' )
' → logprob: -13.15505599975586
    6. '   ' → logprob: -14.03005599975586
    7. ')

' → logprob: -14.28005599975586
    8. '           ' → logprob: -15.40505599975586
    9. ')i' → logprob: -15.40505599975586
    10. ')`
' → logprob: -16.03005599975586

Token 269: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011412883177399635
    2. '
' → logprob: -6.87614107131958
    3. '   ' → logprob: -9.501141548156738
    4. ' i' → logprob: -11.376141548156738
    5. 'i' → logprob: -11.626141548156738
    6. '        
' → logprob: -11.751141548156738
    7. '	i' → logprob: -13.251141548156738
    8. '	' → logprob: -14.126141548156738
    9. '
' → logprob: -14.376141548156738
    10. '    
' → logprob: -14.751141548156738

Token 270: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013097634073346853
    2. '   ' → logprob: -7.126309871673584
    3. ' i' → logprob: -7.876309871673584
    4. '        
' → logprob: -9.751309394836426
    5. '
' → logprob: -10.626309394836426
    6. ' 
' → logprob: -11.376309394836426
    7. 'i' → logprob: -11.376309394836426
    8. '	i' → logprob: -11.876309394836426
    9. '	' → logprob: -12.876309394836426
    10. ' ' → logprob: -12.876309394836426

Token 271: ' In' (ID: 730)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3147144615650177
    2. ' i' → logprob: -1.3147144317626953
    3. '   ' → logprob: -6.564714431762695
    4. '       ' → logprob: -10.439714431762695
    5. '    ' → logprob: -11.689714431762695
    6. '	i' → logprob: -12.939714431762695
    7. ' ' → logprob: -13.439714431762695
    8. '  ' → logprob: -14.314714431762695
    9. '     ' → logprob: -15.689714431762695
    10. ' 
' → logprob: -16.814714431762695

Token 272: 'cr' (ID: 798)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.7691925168037415
    2. 'i' → logprob: -0.8941925168037415
    3. 'cre' → logprob: -2.2691924571990967
    4. 'cr' → logprob: -4.144192695617676
    5. ' i' → logprob: -5.769192695617676
    6. '   ' → logprob: -5.894192695617676
    7. 'c' → logprob: -7.144192695617676
    8. '       ' → logprob: -7.394192695617676
    9. 't' → logprob: -7.519192695617676
    10. ' cre' → logprob: -9.144192695617676

Token 273: 'ément' (ID: 17645)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.059690527617931366
    2. '   ' → logprob: -2.934690475463867
    3. ' i' → logprob: -6.809690475463867
    4. 'crement' → logprob: -7.059690475463867
    5. '    ' → logprob: -7.309690475463867
    6. '     ' → logprob: -7.809690475463867
    7. '      ' → logprob: -7.934690475463867
    8. '  ' → logprob: -8.059690475463867
    9. 'i' → logprob: -8.434690475463867
    10. '        ' → logprob: -8.684690475463867

Token 274: 'ation' (ID: 387)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.4966905415058136
    2. '   ' → logprob: -0.9966905117034912
    3. 'er' → logprob: -4.49669075012207
    4. 'i' → logprob: -5.49669075012207
    5. '       ' → logprob: -5.62169075012207
    6. 'ation' → logprob: -6.99669075012207
    7. '    ' → logprob: -7.24669075012207
    8. '	i' → logprob: -7.49669075012207
    9. ' ' → logprob: -7.74669075012207
    10. '    
' → logprob: -8.37169075012207

Token 275: ' de' (ID: 334)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.03535040467977524
    2. 'i' → logprob: -3.4103503227233887
    3. '   ' → logprob: -6.535350322723389
    4. '	i' → logprob: -8.535350799560547
    5. '(i' → logprob: -10.535350799560547
    6. '    ' → logprob: -11.285350799560547
    7. ' 
' → logprob: -12.535350799560547
    8. '=i' → logprob: -12.660350799560547
    9. '       ' → logprob: -12.910350799560547
    10. ' ' → logprob: -13.035350799560547

Token 276: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6931495070457458
    2. ' i' → logprob: -0.6931495070457458
    3. '	i' → logprob: -14.19314956665039
    4. ' ' → logprob: -14.19314956665039
    5. '   ' → logprob: -14.56814956665039
    6. '1' → logprob: -16.06814956665039
    7. '    ' → logprob: -16.19314956665039
    8. ' ' → logprob: -16.56814956665039
    9. '(i' → logprob: -17.31814956665039
    10. '_i' → logprob: -18.19314956665039

Token 277: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8954920768737793
    2. 'i' → logprob: -1.5204920768737793
    3. '       ' → logprob: -1.5204920768737793
    4. ' i' → logprob: -2.1454920768737793
    5. '=i' → logprob: -3.8954920768737793
    6. '=' → logprob: -5.145492076873779
    7. '
' → logprob: -5.520492076873779
    8. ' +=' → logprob: -6.645492076873779
    9. '	i' → logprob: -6.645492076873779
    10. ' =' → logprob: -6.770492076873779

Token 278: ' tester' (ID: 51819)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.043080151081085205
    2. 'i' → logprob: -3.1680800914764404
    3. ' ' → logprob: -10.54308032989502
    4. '1' → logprob: -10.91808032989502
    5. '   ' → logprob: -11.04308032989502
    6. 'increment' → logprob: -12.16808032989502
    7. ' continuer' → logprob: -12.16808032989502
    8. '    ' → logprob: -12.91808032989502
    9. '  ' → logprob: -13.41808032989502
    10. '	i' → logprob: -13.91808032989502

Token 279: ' le' (ID: 505)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.3873880207538605
    2. 'i' → logprob: -1.137387990951538
    3. '   ' → logprob: -7.887388229370117
    4. ' ' → logprob: -9.887388229370117
    5. '1' → logprob: -10.137388229370117
    6. '    ' → logprob: -10.387388229370117
    7. '(i' → logprob: -11.262388229370117
    8. '	i' → logprob: -13.012388229370117
    9. ' (' → logprob: -14.012388229370117
    10. '  ' → logprob: -14.012388229370117

Token 280: ' nombre' (ID: 9733)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10347672551870346
    2. 'su' → logprob: -2.8534767627716064
    3. ' suivant' → logprob: -4.103476524353027
    4. 'pro' → logprob: -4.478476524353027
    5. ' i' → logprob: -5.103476524353027
    6. ' prochain' → logprob: -6.103476524353027
    7. 'next' → logprob: -7.103476524353027
    8. 'succ' → logprob: -7.228476524353027
    9. '```' → logprob: -7.353476524353027
    10. '1' → logprob: -7.603476524353027

Token 281: ' suivant' (ID: 68705)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.9214863777160645
    2. '+=' → logprob: -1.5464863777160645
    3. '   ' → logprob: -1.7964863777160645
    4. 'i' → logprob: -1.9214863777160645
    5. ' i' → logprob: -2.9214863777160645
    6. '=' → logprob: -4.1714863777160645
    7. '=i' → logprob: -5.7964863777160645
    8. ' =' → logprob: -5.7964863777160645
    9. '    ' → logprob: -7.2964863777160645
    10. '+' → logprob: -8.421485900878906

Token 282: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47330427169799805
    2. '   ' → logprob: -1.223304271697998
    3. 'i' → logprob: -2.973304271697998
    4. ' i' → logprob: -3.473304271697998
    5. '	i' → logprob: -8.473304748535156
    6. '
' → logprob: -8.973304748535156
    7. '  ' → logprob: -9.973304748535156
    8. '    
' → logprob: -10.098304748535156
    9. '    ' → logprob: -10.098304748535156
    10. ' 
' → logprob: -10.348304748535156

Token 283: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5083416700363159
    2. '       ' → logprob: -1.258341670036316
    3. 'i' → logprob: -2.8833417892456055
    4. ' i' → logprob: -2.8833417892456055
    5. ' 
' → logprob: -6.8833417892456055
    6. '    
' → logprob: -7.5083417892456055
    7. '
' → logprob: -7.7583417892456055
    8. '        
' → logprob: -8.758341789245605
    9. '\n' → logprob: -9.008341789245605
    10. '	i' → logprob: -9.633341789245605

Token 284: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.20177008211612701
    2. ' i' → logprob: -1.7017700672149658
    3. '   ' → logprob: -8.076769828796387
    4. '       ' → logprob: -10.076769828796387
    5. '	i' → logprob: -13.076769828796387
    6. '    ' → logprob: -13.826769828796387
    7. ' 
' → logprob: -14.701769828796387
    8. ' ' → logprob: -15.326769828796387
    9. ' ' → logprob: -16.201770782470703
    10. '  ' → logprob: -16.201770782470703

Token 285: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0486363060772419
    2. ' +=' → logprob: -3.0486361980438232
    3. '=' → logprob: -10.173636436462402
    4. '+' → logprob: -11.548636436462402
    5. ']+=' → logprob: -14.798636436462402
    6. '+="' → logprob: -15.298636436462402
    7. '+='' → logprob: -15.548636436462402
    8. '   ' → logprob: -15.798636436462402
    9. '    ' → logprob: -17.048635482788086
    10. '+=(' → logprob: -17.173635482788086

Token 286: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '```' → logprob: -18.625179290771484
    4. '   ' → logprob: -19.000179290771484
    5. '１' → logprob: -21.625179290771484
    6. '  ' → logprob: -22.562679290771484
    7. '2' → logprob: -22.625179290771484
    8. '۱' → logprob: -22.687679290771484
    9. '    ' → logprob: -22.750179290771484
    10. ' ' → logprob: -22.875179290771484

Token 287: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. '   ' → logprob: -19.75
    4. '```' → logprob: -19.875
    5. '１' → logprob: -21.375
    6. '  ' → logprob: -22.25
    7. '۱' → logprob: -23.375
    8. '
' → logprob: -23.8125
    9. '2' → logprob: -23.9375
    10. '१' → logprob: -24.125

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006451270077377558
    2. 'return' → logprob: -5.25645112991333
    3. '    
' → logprob: -7.63145112991333
    4. '
' → logprob: -7.63145112991333
    5. ' return' → logprob: -8.506451606750488
    6. '  
' → logprob: -10.506451606750488
    7. '	return' → logprob: -11.881451606750488
    8. ' 
' → logprob: -12.756451606750488
    9. '   
' → logprob: -12.756451606750488
    10. ':return' → logprob: -14.006451606750488

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005425016395747662
    2. 'return' → logprob: -5.255424976348877
    3. ' return' → logprob: -9.505425453186035
    4. '    
' → logprob: -9.630425453186035
    5. '
' → logprob: -10.005425453186035
    6. '	return' → logprob: -12.880425453186035
    7. '  
' → logprob: -13.755425453186035
    8. '   
' → logprob: -15.130425453186035
    9. '    ' → logprob: -15.255425453186035
    10. ' ' → logprob: -15.255425453186035

Token 290: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.503661036491394
    2. ' return' → logprob: -1.503661036491394
    3. 'return' → logprob: -1.753661036491394
    4. 'lower' → logprob: -9.878661155700684
    5. ' lower' → logprob: -9.878661155700684
    6. '
' → logprob: -10.128661155700684
    7. '    
' → logprob: -10.253661155700684
    8. ' ' → logprob: -10.753661155700684
    9. '  ' → logprob: -11.628661155700684
    10. '    ' → logprob: -11.628661155700684

Token 291: ' Retour' (ID: 146830)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008973329328000546
    2. ' return' → logprob: -5.008973121643066
    3. '   ' → logprob: -6.133973121643066
    4. '#' → logprob: -9.758973121643066
    5. 'lower' → logprob: -10.633973121643066
    6. 'ret' → logprob: -13.633973121643066
    7. 'Return' → logprob: -14.383973121643066
    8. '  ' → logprob: -14.633973121643066
    9. ' ' → logprob: -14.758973121643066
    10. ' lower' → logprob: -14.883973121643066

Token 292: 'ne' (ID: 611)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.09213261306285858
    2. 'lower' → logprob: -2.467132568359375
    3. ' sorted' → logprob: -6.467132568359375
    4. '   ' → logprob: -7.092132568359375
    5. ' ' → logprob: -7.717132568359375
    6. 'sorted' → logprob: -8.842132568359375
    7. ' return' → logprob: -9.592132568359375
    8. ' upper' → logprob: -10.467132568359375
    9. '  ' → logprob: -10.717132568359375
    10. 'n' → logprob: -10.967132568359375

Token 293: ' la' (ID: 557)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.6328753232955933
    2. ' lower' → logprob: -0.7578753232955933
    3. ' ' → logprob: -9.132875442504883
    4. ' sorted' → logprob: -9.632875442504883
    5. 'sorted' → logprob: -9.757875442504883
    6. '   ' → logprob: -10.507875442504883
    7. ' ' → logprob: -12.257875442504883
    8. '(lower' → logprob: -12.507875442504883
    9. '.lower' → logprob: -13.507875442504883
    10. 'upper' → logprob: -13.632875442504883

Token 294: ' liste' (ID: 31719)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.01815474033355713
    2. ' lower' → logprob: -4.018154621124268
    3. 'sorted' → logprob: -12.893155097961426
    4. '(lower' → logprob: -14.518155097961426
    5. '   ' → logprob: -14.643155097961426
    6. ' ' → logprob: -14.643155097961426
    7. 'upper' → logprob: -15.268155097961426
    8. 'liste' → logprob: -15.643155097961426
    9. '.lower' → logprob: -16.14315414428711
    10. '#' → logprob: -16.26815414428711

Token 295: ' complète' (ID: 75660)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.313620001077652
    2. ' lower' → logprob: -1.3136199712753296
    3. '   ' → logprob: -8.563619613647461
    4. '(lower' → logprob: -8.813619613647461
    5. '.lower' → logprob: -12.188619613647461
    6. ' return' → logprob: -12.813619613647461
    7. '_lower' → logprob: -12.938619613647461
    8. 'return' → logprob: -12.938619613647461
    9. ' ' → logprob: -13.563619613647461
    10. 'Lower' → logprob: -13.688619613647461

Token 296: ' des' (ID: 731)
  Prédit: ' lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lower' → logprob: -0.3519344627857208
    2. 'lower' → logprob: -1.6019344329833984
    3. ' return' → logprob: -2.4769344329833984
    4. 'return' → logprob: -4.601934432983398
    5. '   ' → logprob: -6.976934432983398
    6. '(lower' → logprob: -8.976934432983398
    7. ' ' → logprob: -10.851934432983398
    8. '.lower' → logprob: -11.476934432983398
    9. ' ' → logprob: -11.476934432983398
    10. '```' → logprob: -11.601934432983398

Token 297: ' div' (ID: 4223)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.004137291572988033
    2. ' lower' → logprob: -5.5041375160217285
    3. 'div' → logprob: -9.75413703918457
    4. '(lower' → logprob: -15.12913703918457
    5. ' div' → logprob: -16.00413703918457
    6. '_lower' → logprob: -16.37913703918457
    7. '.lower' → logprob: -16.62913703918457
    8. 'upper' → logprob: -16.75413703918457
    9. ' ' → logprob: -17.25413703918457
    10. '```' → logprob: -17.50413703918457

Token 298: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.008848914876580238
    2. ' lower' → logprob: -5.633849143981934
    3. 'lower' → logprob: -6.133849143981934
    4. '   ' → logprob: -6.883849143981934
    5. 'is' → logprob: -7.758849143981934
    6. 'iseur' → logprob: -7.758849143981934
    7. 'isateurs' → logprob: -8.008849143981934
    8. 'isers' → logprob: -8.758849143981934
    9. '_' → logprob: -8.883849143981934
    10. '_lower' → logprob: -9.008849143981934

Token 299: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -1.2948405128554441e-05
    2. 'eurs' → logprob: -12.62501335144043
    3. 'urse' → logprob: -12.75001335144043
    4. 'rs' → logprob: -13.12501335144043
    5. 's' → logprob: -13.37501335144043
    6. ' urs' → logprob: -14.12501335144043
    7. '   ' → logprob: -15.12501335144043
    8. 'urses' → logprob: -15.37501335144043
    9. '```' → logprob: -15.37501335144043
    10. 'URS' → logprob: -15.50001335144043

Token 300: ' en' (ID: 469)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.16974832117557526
    2. ' lower' → logprob: -2.669748306274414
    3. 'return' → logprob: -2.919748306274414
    4. 'lower' → logprob: -3.669748306274414
    5. '   ' → logprob: -4.919748306274414
    6. '(lower' → logprob: -10.169748306274414
    7. ' ' → logprob: -10.544748306274414
    8. '```' → logprob: -10.794748306274414
    9. '.lower' → logprob: -11.544748306274414
    10. '    
' → logprob: -11.919748306274414

Token 301: ' prati' (ID: 67544)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.08049880713224411
    2. ' lower' → logprob: -2.580498695373535
    3. 'return' → logprob: -6.580498695373535
    4. ' return' → logprob: -8.705498695373535
    5. 'reverse' → logprob: -11.080498695373535
    6. ' ' → logprob: -11.830498695373535
    7. '   ' → logprob: -11.955498695373535
    8. '```' → logprob: -12.205498695373535
    9. '(lower' → logprob: -12.455498695373535
    10. 'upper' → logprob: -12.455498695373535

Token 302: 'quant' (ID: 39719)
  Prédit: 'quant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quant' → logprob: -0.12794241309165955
    2. 'que' → logprob: -2.2529423236846924
    3. 'quement' → logprob: -4.7529425621032715
    4. 'nt' → logprob: -6.2529425621032715
    5. 'q' → logprob: -6.5029425621032715
    6. '#' → logprob: -7.3779425621032715
    7. 'quent' → logprob: -7.5029425621032715
    8. 'çant' → logprob: -8.002942085266113
    9. 'cant' → logprob: -8.377942085266113
    10. 's' → logprob: -8.627942085266113

Token 303: ' une' (ID: 2463)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.008229087106883526
    2. ' lower' → logprob: -4.8832292556762695
    3. 'upper' → logprob: -8.63322925567627
    4. 'reverse' → logprob: -9.00822925567627
    5. '   ' → logprob: -9.13322925567627
    6. 'sorted' → logprob: -10.25822925567627
    7. '(lower' → logprob: -10.38322925567627
    8. ' ' → logprob: -10.63322925567627
    9. 'la' → logprob: -10.75822925567627
    10. 'return' → logprob: -10.88322925567627

Token 304: ' concat' (ID: 73950)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.05803025886416435
    2. 'conc' → logprob: -3.933030366897583
    3. 'concat' → logprob: -4.308030128479004
    4. 'reverse' → logprob: -4.433030128479004
    5. '[::-' → logprob: -5.933030128479004
    6. 'sorted' → logprob: -6.058030128479004
    7. ' lower' → logprob: -6.308030128479004
    8. 'plus' → logprob: -6.433030128479004
    9. ' concaten' → logprob: -7.308030128479004
    10. '+' → logprob: -7.308030128479004

Token 305: 'én' (ID: 3289)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.7652625441551208
    2. 'én' → logprob: -0.8902625441551208
    3. 'lower' → logprob: -2.6402626037597656
    4. 'entation' → logprob: -3.1402626037597656
    5. ' lower' → logprob: -5.390262603759766
    6. 'ation' → logprob: -6.765262603759766
    7. '(lower' → logprob: -6.890262603759766
    8. 'upper' → logprob: -7.015262603759766
    9. 'enação' → logprob: -8.140262603759766
    10. 'é' → logprob: -8.640262603759766

Token 306: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.019159240648150444
    2. 'lower' → logprob: -4.019159317016602
    3. 'aison' → logprob: -7.144159317016602
    4. ' lower' → logprob: -9.144159317016602
    5. '(lower' → logprob: -9.394159317016602
    6. 'a' → logprob: -11.394159317016602
    7. 'ais' → logprob: -12.519159317016602
    8. 'upper' → logprob: -12.519159317016602
    9. 'nation' → logprob: -12.894159317016602
    10. 'ate' → logprob: -13.644159317016602

Token 307: ' de' (ID: 334)
  Prédit: '(lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lower' → logprob: -0.6690544486045837
    2. 'lower' → logprob: -1.1690545082092285
    3. ' lower' → logprob: -2.0440545082092285
    4. 'return' → logprob: -3.7940545082092285
    5. ' return' → logprob: -4.4190545082092285
    6. '(' → logprob: -4.5440545082092285
    7. '   ' → logprob: -6.5440545082092285
    8. ' (' → logprob: -8.04405403137207
    9. '(
' → logprob: -8.29405403137207
    10. '.lower' → logprob: -9.54405403137207

Token 308: ' la' (ID: 557)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.004640999715775251
    2. ' lower' → logprob: -5.379641056060791
    3. '(lower' → logprob: -11.129640579223633
    4. 'la' → logprob: -13.379640579223633
    5. '```' → logprob: -13.629640579223633
    6. 'upper' → logprob: -13.754640579223633
    7. 'reverse' → logprob: -14.004640579223633
    8. ' ' → logprob: -14.629640579223633
    9. '   ' → logprob: -15.754640579223633
    10. '`' → logprob: -15.754640579223633

Token 309: ' première' (ID: 23423)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.002806656062602997
    2. ' lower' → logprob: -5.877806663513184
    3. '(lower' → logprob: -14.502806663513184
    4. 'upper' → logprob: -15.002806663513184
    5. 'reverse' → logprob: -15.502806663513184
    6. ' ' → logprob: -15.627806663513184
    7. '.lower' → logprob: -15.752806663513184
    8. 'liste' → logprob: -16.002805709838867
    9. '```' → logprob: -16.377805709838867
    10. 'list' → logprob: -16.502805709838867

Token 310: ' avec' (ID: 3937)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.027445713058114052
    2. ' lower' → logprob: -4.0274457931518555
    3. ' +' → logprob: -5.2774457931518555
    4. '+' → logprob: -6.2774457931518555
    5. 'liste' → logprob: -7.1524457931518555
    6. '.lower' → logprob: -7.6524457931518555
    7. '(lower' → logprob: -8.152445793151855
    8. '_lower' → logprob: -8.402445793151855
    9. ' ' → logprob: -9.152445793151855
    10. ' plus' → logprob: -9.402445793151855

Token 311: ' la' (ID: 557)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.004097396973520517
    2. ' upper' → logprob: -5.5040974617004395
    3. 're' → logprob: -11.629096984863281
    4. 'list' → logprob: -11.629096984863281
    5. ' list' → logprob: -15.379096984863281
    6. 'lower' → logprob: -15.379096984863281
    7. '   ' → logprob: -15.629096984863281
    8. 'uppercase' → logprob: -15.879096984863281
    9. ' ' → logprob: -16.37909698486328
    10. 'reverse' → logprob: -16.50409698486328

Token 312: ' seconde' (ID: 66204)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.0036581491585820913
    2. ' upper' → logprob: -5.628658294677734
    3. 're' → logprob: -10.253658294677734
    4. 'list' → logprob: -11.003658294677734
    5. 'sorted' → logprob: -13.003658294677734
    6. ' list' → logprob: -13.878658294677734
    7. '   ' → logprob: -14.128658294677734
    8. 'lower' → logprob: -14.378658294677734
    9. ' ' → logprob: -14.753658294677734
    10. '[::-' → logprob: -15.253658294677734

Token 313: ' invers' (ID: 38721)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.43143773078918457
    2. 'return' → logprob: -1.6814377307891846
    3. ' lower' → logprob: -2.5564377307891846
    4. ' return' → logprob: -2.8064377307891846
    5. '(lower' → logprob: -3.6814377307891846
    6. ' +' → logprob: -7.6814374923706055
    7. '   ' → logprob: -8.306437492370605
    8. '+' → logprob: -9.056437492370605
    9. '(' → logprob: -9.181437492370605
    10. '(return' → logprob: -9.681437492370605

Token 314: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.06896600127220154
    2. 'e' → logprob: -3.1939659118652344
    3. 's' → logprob: -4.568965911865234
    4. 'ee' → logprob: -5.068965911865234
    5. 'se' → logprob: -5.443965911865234
    6. 'see' → logprob: -7.443965911865234
    7. 'sed' → logprob: -7.693965911865234
    8. 'es' → logprob: -7.693965911865234
    9. 'ed' → logprob: -7.818965911865234
    10. 'é' → logprob: -7.943965911865234

Token 315: '
' (ID: 198)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14629386365413666
    2. '   ' → logprob: -2.396293878555298
    3. ' return' → logprob: -3.271293878555298
    4. 'lower' → logprob: -5.146293640136719
    5. ' +' → logprob: -7.771293640136719
    6. '+' → logprob: -8.021293640136719
    7. ' lower' → logprob: -8.271293640136719
    8. '(lower' → logprob: -9.271293640136719
    9. '
' → logprob: -10.021293640136719
    10. '+
' → logprob: -10.521293640136719

Token 316: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.16054855287075043
    2. '   ' → logprob: -2.160548448562622
    3. ' return' → logprob: -3.410548448562622
    4. 'lower' → logprob: -10.410548210144043
    5. ' lower' → logprob: -12.535548210144043
    6. '  ' → logprob: -13.410548210144043
    7. '	return' → logprob: -14.035548210144043
    8. ' ' → logprob: -14.160548210144043
    9. '    ' → logprob: -14.285548210144043
    10. '
' → logprob: -14.410548210144043

Token 317: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13261324167251587
    2. ' return' → logprob: -2.132613182067871
    3. 'lower' → logprob: -5.507613182067871
    4. ' lower' → logprob: -6.632613182067871
    5. '   ' → logprob: -8.132613182067871
    6. '(lower' → logprob: -13.757613182067871
    7. '```' → logprob: -15.132613182067871
    8. '    ' → logprob: -15.257613182067871
    9. '.lower' → logprob: -15.632613182067871
    10. '    
' → logprob: -15.757613182067871

Token 318: ' lower' (ID: 6931)
  Prédit: 'lower'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lower' → logprob: -0.023247340694069862
    2. ' lower' → logprob: -3.773247241973877
    3. '(lower' → logprob: -13.273247718811035
    4. '   ' → logprob: -16.77324676513672
    5. ' ' → logprob: -16.89824676513672
    6. '.lower' → logprob: -17.77324676513672
    7. 'Lower' → logprob: -17.89824676513672
    8. 'sorted' → logprob: -18.27324676513672
    9. ' ' → logprob: -19.02324676513672
    10. 'low' → logprob: -19.27324676513672

Token 319: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -2.2200749754119897e-06
    2. 'div' → logprob: -13.125001907348633
    3. '_' → logprob: -15.625001907348633
    4. '_des' → logprob: -17.500001907348633
    5. '_de' → logprob: -18.375001907348633
    6. '_dist' → logprob: -18.625001907348633
    7. 's' → logprob: -18.625001907348633
    8. '_del' → logprob: -18.875001907348633
    9. '_def' → logprob: -18.875001907348633
    10. '_DIV' → logprob: -19.125001907348633

Token 320: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.0009308716980740428
    2. 's' → logprob: -7.0009307861328125
    3. 'ors' → logprob: -11.875930786132812
    4. 'div' → logprob: -12.375930786132812
    5. 'itors' → logprob: -13.250930786132812
    6. 'ectors' → logprob: -13.750930786132812
    7. '_div' → logprob: -14.000930786132812
    8. 'ers' → logprob: -14.750930786132812
    9. 'tors' → logprob: -14.750930786132812
    10. 'istors' → logprob: -15.000930786132812

Token 321: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.10889483988285065
    2. 's' → logprob: -2.4838948249816895
    3. 'tors' → logprob: -4.2338948249816895
    4. 'ators' → logprob: -5.7338948249816895
    5. 'rors' → logprob: -7.2338948249816895
    6. 'vors' → logprob: -8.108895301818848
    7. 'urs' → logprob: -8.608895301818848
    8. 'rs' → logprob: -9.108895301818848
    9. '[' → logprob: -9.108895301818848
    10. 'eurs' → logprob: -9.733895301818848

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.693165123462677
    2. ' +' → logprob: -0.693165123462677
    3. '[::-' → logprob: -10.943164825439453
    4. '+[' → logprob: -16.693164825439453
    5. ' plus' → logprob: -17.068164825439453
    6. '   ' → logprob: -17.818164825439453
    7. '＋' → logprob: -17.818164825439453
    8. '[' → logprob: -18.068164825439453
    9. ' ' → logprob: -18.443164825439453
    10. ' ' → logprob: -18.818164825439453

Token 323: ' upper' (ID: 13057)
  Prédit: 'upper'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'upper' → logprob: -0.002475777640938759
    2. ' upper' → logprob: -6.002475738525391
    3. 'list' → logprob: -16.25247573852539
    4. 're' → logprob: -18.50247573852539
    5. ' list' → logprob: -18.87747573852539
    6. ' ' → logprob: -19.87747573852539
    7. 'sorted' → logprob: -20.00247573852539
    8. '   ' → logprob: -20.62747573852539
    9. 'uppercase' → logprob: -20.62747573852539
    10. '.upper' → logprob: -20.75247573852539

Token 324: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.0009021693258546293
    2. 'div' → logprob: -7.87590217590332
    3. 'er' → logprob: -8.12590217590332
    4. 'r' → logprob: -9.25090217590332
    5. '_upper' → logprob: -9.87590217590332
    6. 'upper' → logprob: -10.37590217590332
    7. 'u' → logprob: -10.87590217590332
    8. 's' → logprob: -11.62590217590332
    9. '_' → logprob: -12.37590217590332
    10. 'is' → logprob: -13.00090217590332

Token 325: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.00035262384335510433
    2. 'ors' → logprob: -8.12535285949707
    3. 'ers' → logprob: -10.87535285949707
    4. 's' → logprob: -10.87535285949707
    5. '_' → logprob: -12.25035285949707
    6. 'itors' → logprob: -12.62535285949707
    7. '_upper' → logprob: -13.50035285949707
    8. '_is' → logprob: -13.75035285949707
    9. '[' → logprob: -13.87535285949707
    10. 'iors' → logprob: -14.00035285949707

Token 326: 'ors' (ID: 914)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.35374587774276733
    2. 'ors' → logprob: -1.228745937347412
    3. 'tors' → logprob: -5.603745937347412
    4. 'rs' → logprob: -6.978745937347412
    5. '_' → logprob: -8.478745460510254
    6. 'rors' → logprob: -9.478745460510254
    7. '_s' → logprob: -9.728745460510254
    8. 'sort' → logprob: -9.728745460510254
    9. 'sers' → logprob: -10.103745460510254
    10. '_upper' → logprob: -10.478745460510254

Token 327: '[::-' (ID: 159890)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010306637705070898
    2. '-' → logprob: -9.250102996826172
    3. 's' → logprob: -12.875102996826172
    4. 'se' → logprob: -13.375102996826172
    5. 'ed' → logprob: -14.875102996826172
    6. ')' → logprob: -15.000102996826172
    7. '```' → logprob: -15.625102996826172
    8. '])' → logprob: -15.750102996826172
    9. 're' → logprob: -16.125102996826172
    10. '!' → logprob: -16.250102996826172

Token 329: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018169023096561432
    2. ']' → logprob: -4.018168926239014
    3. '])' → logprob: -11.143169403076172
    4. ')]' → logprob: -13.268169403076172
    5. '）' → logprob: -13.268169403076172
    6. '}' → logprob: -14.768169403076172
    7. ' )' → logprob: -15.143169403076172
    8. '[' → logprob: -16.393169403076172
    9. '   ' → logprob: -16.768169403076172
    10. '']' → logprob: -16.893169403076172

Token 330: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: ' Lecture' (ID: 106534)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4844042658805847
    2. '#' → logprob: -1.7344043254852295
    3. 'def' → logprob: -2.4844043254852295
    4. 'for' → logprob: -2.8594043254852295
    5. ' #' → logprob: -3.3594043254852295
    6. ' ' → logprob: -5.10940408706665
    7. 'n' → logprob: -5.35940408706665
    8. 'result' → logprob: -5.35940408706665
    9. ' print' → logprob: -6.23440408706665
    10. ' for' → logprob: -6.23440408706665

Token 332: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03526594117283821
    2. '(' → logprob: -3.9102659225463867
    3. 'n' → logprob: -5.160265922546387
    4. '(n' → logprob: -6.035265922546387
    5. ' =' → logprob: -6.160265922546387
    6. 'de' → logprob: -6.785265922546387
    7. 's' → logprob: -7.285265922546387
    8. 'input' → logprob: -8.285265922546387
    9. '=' → logprob: -8.410265922546387
    10. ' de' → logprob: -8.410265922546387

Token 333: ' deux' (ID: 10301)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04921478405594826
    2. ' n' → logprob: -3.0492148399353027
    3. 'nombre' → logprob: -9.174214363098145
    4. '()' → logprob: -9.424214363098145
    5. 'num' → logprob: -9.549214363098145
    6. 'int' → logprob: -9.799214363098145
    7. '(n' → logprob: -10.049214363098145
    8. ' ' → logprob: -10.174214363098145
    9. 'number' → logprob: -10.549214363098145
    10. 'l' → logprob: -10.549214363098145

Token 334: ' ent' (ID: 1121)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.05996200442314148
    2. ' ent' → logprob: -3.434962034225464
    3. ' nombre' → logprob: -4.809961795806885
    4. ' integers' → logprob: -4.934961795806885
    5. ' numbers' → logprob: -5.309961795806885
    6. 'nombre' → logprob: -6.434961795806885
    7. 'n' → logprob: -7.309961795806885
    8. ' n' → logprob: -7.309961795806885
    9. 'ent' → logprob: -7.434961795806885
    10. ' ' → logprob: -7.434961795806885

Token 335: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.00021760274830739945
    2. 'ières' → logprob: -9.00021743774414
    3. 'r' → logprob: -9.75021743774414
    4. 'ier' → logprob: -11.87521743774414
    5. 'ers' → logprob: -12.00021743774414
    6. '#' → logprob: -12.25021743774414
    7. 'i' → logprob: -12.37521743774414
    8. 'riers' → logprob: -12.37521743774414
    9. 'rés' → logprob: -12.87521743774414
    10. 'rees' → logprob: -12.87521743774414

Token 336: ' N' (ID: 478)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47606781125068665
    2. ' a' → logprob: -1.7260677814483643
    3. 'n' → logprob: -1.9760677814483643
    4. ' n' → logprob: -2.8510677814483643
    5. 'x' → logprob: -6.226068019866943
    6. ' x' → logprob: -6.851068019866943
    7. '()' → logprob: -7.726068019866943
    8. '(n' → logprob: -8.726067543029785
    9. 'm' → logprob: -9.351067543029785
    10. ' m' → logprob: -9.476067543029785

Token 337: ' et' (ID: 859)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013377503491938114
    2. ',N' → logprob: -4.513377666473389
    3. ' =' → logprob: -6.388377666473389
    4. 'N' → logprob: -8.26337718963623
    5. ' ,' → logprob: -8.38837718963623
    6. '=' → logprob: -9.26337718963623
    7. ',n' → logprob: -11.01337718963623
    8. '1' → logprob: -11.26337718963623
    9. 'n' → logprob: -12.01337718963623
    10. 'import' → logprob: -12.13837718963623

Token 338: ' K' (ID: 658)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05039127543568611
    2. ' M' → logprob: -3.17539119720459
    3. 'K' → logprob: -5.05039119720459
    4. ' K' → logprob: -7.55039119720459
    5. 'n' → logprob: -9.05039119720459
    6. 'Q' → logprob: -9.30039119720459
    7. ' ' → logprob: -9.80039119720459
    8. 'k' → logprob: -10.05039119720459
    9. 'T' → logprob: -10.30039119720459
    10. 'X' → logprob: -10.92539119720459

Token 339: ' à' (ID: 1221)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.42866361141204834
    2. 'n' → logprob: -1.3036636114120483
    3. '
' → logprob: -3.053663730621338
    4. '\n' → logprob: -4.553663730621338
    5. ' N' → logprob: -4.803663730621338
    6. 'input' → logprob: -5.428663730621338
    7. ' =' → logprob: -6.928663730621338
    8. ',' → logprob: -7.178663730621338
    9. '```' → logprob: -7.178663730621338
    10. '(N' → logprob: -7.553663730621338

Token 340: ' partir' (ID: 12100)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.19344164431095123
    2. 'l' → logprob: -2.44344162940979
    3. ' partir' → logprob: -2.81844162940979
    4. 'input' → logprob: -3.69344162940979
    5. 'la' → logprob: -5.818441867828369
    6. ' l' → logprob: -8.568441390991211
    7. 'int' → logprob: -8.693441390991211
    8. '=' → logprob: -8.943441390991211
    9. 'Part' → logprob: -9.443441390991211
    10. '#' → logprob: -9.568441390991211

Token 341: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5017386674880981
    2. 'de' → logprob: -1.0017386674880981
    3. 'd' → logprob: -4.626738548278809
    4. ' d' → logprob: -4.626738548278809
    5. 'input' → logprob: -5.501738548278809
    6. ' input' → logprob: -6.001738548278809
    7. '=input' → logprob: -7.126738548278809
    8. '#' → logprob: -9.126738548278809
    9. 'du' → logprob: -9.751738548278809
    10. 'del' → logprob: -10.251738548278809

Token 342: ' l' (ID: 305)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.004083624575287104
    2. 'la' → logprob: -6.379083633422852
    3. 'l' → logprob: -6.629083633422852
    4. ' input' → logprob: -6.879083633422852
    5. '=input' → logprob: -10.754083633422852
    6. 'une' → logprob: -13.004083633422852
    7. ' la' → logprob: -13.254083633422852
    8. 'entrée' → logprob: -14.129083633422852
    9. '```' → logprob: -14.754083633422852
    10. '(input' → logprob: -15.004083633422852

Token 343: ''entrée' (ID: 115820)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18601907789707184
    2. ''entrée' → logprob: -1.9360190629959106
    3. 'a' → logprob: -4.436018943786621
    4. 'entrée' → logprob: -4.686018943786621
    5. '=input' → logprob: -6.186018943786621
    6. 'e' → logprob: -6.561018943786621
    7. ' input' → logprob: -8.186018943786621
    8. 'es' → logprob: -9.436018943786621
    9. 'import' → logprob: -9.436018943786621
    10. '’entrée' → logprob: -9.561018943786621

Token 344: ' standard' (ID: 7024)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.010389487259089947
    2. 'n' → logprob: -5.63538932800293
    3. '
' → logprob: -5.76038932800293
    4. ' N' → logprob: -5.88538932800293
    5. ' 
' → logprob: -7.76038932800293
    6. '\n' → logprob: -8.38538932800293
    7. '(N' → logprob: -10.01038932800293
    8. '  
' → logprob: -10.63538932800293
    9. ',' → logprob: -10.88538932800293
    10. 'input' → logprob: -11.01038932800293

Token 345: ',' (ID: 11)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011647645384073257
    2. '
' → logprob: -4.886647701263428
    3. 'n' → logprob: -6.011647701263428
    4. ' N' → logprob: -7.136647701263428
    5. '\n' → logprob: -7.511647701263428
    6. '  
' → logprob: -9.13664722442627
    7. ' 
' → logprob: -9.38664722442627
    8. ',' → logprob: -11.51164722442627
    9. '(N' → logprob: -11.63664722442627
    10. '

' → logprob: -11.76164722442627

Token 346: ' sépar' (ID: 97160)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.10121415555477142
    2. ' N' → logprob: -2.3512141704559326
    3. 'n' → logprob: -6.9762139320373535
    4. ' n' → logprob: -9.601214408874512
    5. 'input' → logprob: -12.726214408874512
    6. ' input' → logprob: -13.351214408874512
    7. 'x' → logprob: -15.226214408874512
    8. 'a' → logprob: -15.851214408874512
    9. 's' → logprob: -15.976214408874512
    10. 'import' → logprob: -16.601213455200195

Token 347: 'és' (ID: 1756)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.32524654269218445
    2. 'e' → logprob: -1.9502465724945068
    3. 'er' → logprob: -3.200246572494507
    4. 'ée' → logprob: -3.200246572494507
    5. 'és' → logprob: -3.450246572494507
    6. 'ateur' → logprob: -5.075246334075928
    7. 'es' → logprob: -5.700246334075928
    8. ',' → logprob: -5.825246334075928
    9. 'ated' → logprob: -6.325246334075928
    10. 'eur' → logprob: -6.700246334075928

Token 348: ' par' (ID: 686)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.8710172176361084
    2. ' par' → logprob: -1.2460172176361084
    3. '=' → logprob: -1.8710172176361084
    4. '()' → logprob: -1.9960172176361084
    5. '_par' → logprob: -6.8710174560546875
    6. 'by' → logprob: -6.8710174560546875
    7. ' =' → logprob: -7.7460174560546875
    8. '=input' → logprob: -8.121017456054688
    9. ',' → logprob: -8.621017456054688
    10. '('' → logprob: -8.996017456054688

Token 349: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.0320483446121216
    2. 'l' → logprob: -1.2820483446121216
    3. 'une' → logprob: -1.6570483446121216
    4. 'input' → logprob: -2.657048225402832
    5. 'space' → logprob: -3.282048225402832
    6. 'la' → logprob: -4.032048225402832
    7. ' une' → logprob: -4.407048225402832
    8. ''' → logprob: -4.657048225402832
    9. '"' → logprob: -4.657048225402832
    10. ' ' → logprob: -5.782048225402832

Token 350: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.8159403800964355
    2. ' espace' → logprob: -1.0659403800964355
    3. ''espace' → logprob: -1.6909403800964355
    4. 'esp' → logprob: -4.1909403800964355
    5. 'space' → logprob: -5.0659403800964355
    6. '’espace' → logprob: -5.9409403800964355
    7. ''esp' → logprob: -6.3159403800964355
    8. ''' → logprob: -6.9409403800964355
    9. 'e' → logprob: -7.5659403800964355
    10. 'input' → logprob: -8.065940856933594

Token 351: '
' (ID: 198)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.0126840758603066e-05
    2. ' N' → logprob: -10.500040054321289
    3. 'n' → logprob: -11.375040054321289
    4. '
' → logprob: -14.500040054321289
    5. 'input' → logprob: -14.500040054321289
    6. '

' → logprob: -16.37504005432129
    7. '  
' → logprob: -17.37504005432129
    8. 'line' → logprob: -17.50004005432129
    9. '\n' → logprob: -17.87504005432129
    10. 'x' → logprob: -18.12504005432129

Token 352: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.1008713702030946e-06
    2. ' N' → logprob: -13.250001907348633
    3. 'n' → logprob: -15.250001907348633
    4. 'input' → logprob: -17.250001907348633
    5. 'x' → logprob: -19.375001907348633
    6. 'import' → logprob: -19.875001907348633
    7. 'line' → logprob: -19.875001907348633
    8. 'ligne' → logprob: -20.750001907348633
    9. '#' → logprob: -20.875001907348633
    10. 'a' → logprob: -21.125001907348633

Token 353: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001953133614733815
    2. ',K' → logprob: -6.251953125
    3. ' ,' → logprob: -10.626953125
    4. ',k' → logprob: -15.751953125
    5. 'K' → logprob: -15.876953125
    6. ',
' → logprob: -17.626953125
    7. ',input' → logprob: -19.001953125
    8. ',N' → logprob: -19.001953125
    9. ',\
' → logprob: -19.626953125
    10. ',

' → logprob: -19.876953125

Token 354: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931936740875244
    2. ' =' → logprob: -0.6931936740875244
    3. '=input' → logprob: -10.193193435668945
    4. '=int' → logprob: -11.943193435668945
    5. ' ' → logprob: -13.568193435668945
    6. ',' → logprob: -14.693193435668945
    7. '=list' → logprob: -14.943193435668945
    8. ' ' → logprob: -15.193193435668945
    9. '＝' → logprob: -15.943193435668945
    10. ')' → logprob: -17.693193435668945

Token 355: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019295861711725593
    2. ' map' → logprob: -6.251929759979248
    3. 'input' → logprob: -14.00192928314209
    4. 'list' → logprob: -16.626930236816406
    5. '	map' → logprob: -17.001930236816406
    6. '(map' → logprob: -17.376930236816406
    7. '[' → logprob: -19.001930236816406
    8. ' ' → logprob: -20.126930236816406
    9. 'm' → logprob: -20.751930236816406
    10. '.map' → logprob: -20.751930236816406

Token 356: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003588224353734404
    2. '(' → logprob: -8.000358581542969
    3. 'int' → logprob: -11.000358581542969
    4. '(input' → logprob: -12.000358581542969
    5. '<int' → logprob: -15.625358581542969
    6. '[int' → logprob: -16.62535858154297
    7. ' int' → logprob: -16.75035858154297
    8. '(str' → logprob: -16.75035858154297
    9. '=int' → logprob: -16.75035858154297
    10. '(
' → logprob: -16.87535858154297

Token 357: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.13235637545585632
    2. 'input' → logprob: -2.1323564052581787
    3. '(input' → logprob: -5.6323561668396
    4. ',' → logprob: -6.3823561668396
    5. ' input' → logprob: -9.257356643676758
    6. '=input' → logprob: -10.257356643676758
    7. ')' → logprob: -11.757356643676758
    8. '[input' → logprob: -13.132356643676758
    9. '	input' → logprob: -14.632356643676758
    10. '<input' → logprob: -14.757356643676758

Token 358: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.759734732331708e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -14.125017166137695
    4. '(' → logprob: -16.875017166137695
    5. '())' → logprob: -17.750017166137695
    6. ')' → logprob: -18.625017166137695
    7. '()
' → logprob: -19.750017166137695
    8. '("").' → logprob: -19.875017166137695
    9. ' ()' → logprob: -20.125017166137695
    10. '.split' → logprob: -20.250017166137695

Token 359: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00015908108616713434
    2. 'strip' → logprob: -8.75015926361084
    3. 'rstrip' → logprob: -15.12515926361084
    4. '(split' → logprob: -15.37515926361084
    5. ' split' → logprob: -16.000158309936523
    6. '().' → logprob: -17.625158309936523
    7. 'spl' → logprob: -17.875158309936523
    8. '.split' → logprob: -18.000158309936523
    9. '_split' → logprob: -19.250158309936523
    10. 'read' → logprob: -19.625158309936523

Token 360: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0030362976249307394
    2. '()' → logprob: -6.2530364990234375
    3. ')' → logprob: -6.8780364990234375
    4. '()))' → logprob: -10.003036499023438
    5. '(' → logprob: -11.003036499023438
    6. '('' → logprob: -12.003036499023438
    7. ' ())' → logprob: -12.503036499023438
    8. '))' → logprob: -13.378036499023438
    9. '().' → logprob: -14.003036499023438
    10. '())
' → logprob: -14.378036499023438

Token 361: '#' (ID: 2)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.005612930748611689
    2. 'yak' → logprob: -5.630612850189209
    3. 'd' → logprob: -7.005612850189209
    4. 'for' → logprob: -7.380612850189209
    5. '#' → logprob: -8.755613327026367
    6. 'print' → logprob: -9.505613327026367
    7. 'result' → logprob: -9.755613327026367
    8. 'ans' → logprob: -10.130613327026367
    9. 'all' → logprob: -10.630613327026367
    10. 'answer' → logprob: -10.755613327026367

Token 362: ' Lecture' (ID: 106534)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.02360869199037552
    2. 'yak' → logprob: -4.523608684539795
    3. 'd' → logprob: -4.898608684539795
    4. 'for' → logprob: -6.398608684539795
    5. 'result' → logprob: -7.148608684539795
    6. 'ans' → logprob: -7.398608684539795
    7. '#' → logprob: -7.523608684539795
    8. 'res' → logprob: -8.648609161376953
    9. 'a' → logprob: -8.773609161376953
    10. 'k' → logprob: -9.398609161376953

Token 363: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.044971343129873276
    2. 'a' → logprob: -4.419971466064453
    3. 'd' → logprob: -4.544971466064453
    4. 'div' → logprob: -5.169971466064453
    5. '(n' → logprob: -5.419971466064453
    6. '()
' → logprob: -6.044971466064453
    7. 'des' → logprob: -6.419971466064453
    8. '(A' → logprob: -6.919971466064453
    9. 'A' → logprob: -7.169971466064453
    10. 's' → logprob: -7.419971466064453

Token 364: ''une' (ID: 13337)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -1.1077089309692383
    2. 'a' → logprob: -1.2327089309692383
    3. 'la' → logprob: -1.7327089309692383
    4. 'les' → logprob: -2.9827089309692383
    5. 'e' → logprob: -3.8577089309692383
    6. 'n' → logprob: -3.8577089309692383
    7. '#' → logprob: -3.9827089309692383
    8. 'N' → logprob: -4.357708930969238
    9. '()' → logprob: -4.357708930969238
    10. 'un' → logprob: -4.857708930969238

Token 365: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.007787731476128101
    2. ' liste' → logprob: -5.382787704467773
    3. 'ligne' → logprob: -7.257787704467773
    4. 'list' → logprob: -7.382787704467773
    5. 'chaine' → logprob: -7.632787704467773
    6. '#' → logprob: -8.007787704467773
    7. 'val' → logprob: -8.382787704467773
    8. 'sequence' → logprob: -9.132787704467773
    9. 'sé' → logprob: -9.507787704467773
    10. 'variable' → logprob: -9.507787704467773

Token 366: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.1024741381406784
    2. 'a' → logprob: -2.6024742126464844
    3. 'lst' → logprob: -5.102474212646484
    4. 'L' → logprob: -5.477474212646484
    5. ' A' → logprob: -5.977474212646484
    6. ',A' → logprob: -6.352474212646484
    7. 'arr' → logprob: -6.727474212646484
    8. 'numbers' → logprob: -6.852474212646484
    9. ' =' → logprob: -6.977474212646484
    10. '(A' → logprob: -7.102474212646484

Token 367: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4725307822227478
    2. 'K' → logprob: -1.3475308418273926
    3. 'ints' → logprob: -3.2225308418273926
    4. 'int' → logprob: -3.4725308418273926
    5. 'inte' → logprob: -3.8475308418273926
    6. 'val' → logprob: -4.972530841827393
    7. 'ent' → logprob: -5.472530841827393
    8. 'div' → logprob: -5.472530841827393
    9. 'a' → logprob: -6.347530841827393
    10. 'n' → logprob: -6.472530841827393

Token 368: ' ent' (ID: 1121)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.006351773627102375
    2. ' ent' → logprob: -5.256351947784424
    3. 'inte' → logprob: -7.256351947784424
    4. 'val' → logprob: -9.131351470947266
    5. 'ints' → logprob: -9.381351470947266
    6. 'int' → logprob: -9.631351470947266
    7. 'enti' → logprob: -10.256351470947266
    8. ' nombres' → logprob: -10.506351470947266
    9. '_ent' → logprob: -10.506351470947266
    10. ' integers' → logprob: -11.756351470947266

Token 369: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.02576672099530697
    2. 't' → logprob: -3.775766611099243
    3. 'ints' → logprob: -7.775766849517822
    4. 'ités' → logprob: -7.775766849517822
    5. 'ières' → logprob: -7.900766849517822
    6. 'ents' → logprob: -8.275766372680664
    7. 'ires' → logprob: -8.650766372680664
    8. 'ti' → logprob: -8.775766372680664
    9. 'eurs' → logprob: -9.025766372680664
    10. 'i' → logprob: -9.400766372680664

Token 370: ' sépar' (ID: 97160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.17953485250473022
    2. 'a' → logprob: -1.929534912109375
    3. ',A' → logprob: -4.429534912109375
    4. ' A' → logprob: -5.554534912109375
    5. 'lst' → logprob: -7.054534912109375
    6. ',' → logprob: -7.179534912109375
    7. ',a' → logprob: -7.304534912109375
    8. ' a' → logprob: -7.429534912109375
    9. 'L' → logprob: -8.804534912109375
    10. 'numbers' → logprob: -9.179534912109375

Token 371: 'és' (ID: 1756)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.067106693983078
    2. 'é' → logprob: -3.1921067237854004
    3. 'és' → logprob: -4.4421067237854
    4. 'ée' → logprob: -6.0671067237854
    5. ' par' → logprob: -6.1921067237854
    6. 'space' → logprob: -6.5671067237854
    7. 'es' → logprob: -6.8171067237854
    8. 'er' → logprob: -7.0671067237854
    9. 'par' → logprob: -7.4421067237854
    10. ''e' → logprob: -7.9421067237854

Token 372: ' par' (ID: 686)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7245595455169678
    2. 'par' → logprob: -0.8495595455169678
    3. 'es' → logprob: -4.349559783935547
    4. ' par' → logprob: -4.349559783935547
    5. 'input' → logprob: -4.599559783935547
    6. '```' → logprob: -4.599559783935547
    7. 'int' → logprob: -4.974559783935547
    8. 'by' → logprob: -4.974559783935547
    9. 'space' → logprob: -5.599559783935547
    10. 'e' → logprob: -5.724559783935547

Token 373: ' un' (ID: 537)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.5726746320724487
    2. 'esp' → logprob: -1.1976746320724487
    3. 'space' → logprob: -3.6976747512817383
    4. ' espaces' → logprob: -3.8226747512817383
    5. 'input' → logprob: -4.072674751281738
    6. ' espace' → logprob: -4.072674751281738
    7. 'l' → logprob: -4.072674751281738
    8. 'un' → logprob: -4.572674751281738
    9. ''espace' → logprob: -4.822674751281738
    10. 'spaces' → logprob: -4.822674751281738

Token 374: ' espace' (ID: 66004)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.07464917004108429
    2. ' espace' → logprob: -3.5746490955352783
    3. 'esp' → logprob: -3.9496490955352783
    4. 'space' → logprob: -4.324649333953857
    5. ''espace' → logprob: -4.574649333953857
    6. '’espace' → logprob: -7.949649333953857
    7. ' espaces' → logprob: -8.1996488571167
    8. 'spaces' → logprob: -8.6996488571167
    9. ''esp' → logprob: -9.1996488571167
    10. 'input' → logprob: -9.6996488571167

Token 375: ' et' (ID: 859)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20630832016468048
    2. 'a' → logprob: -1.706308364868164
    3. ',A' → logprob: -6.456308364868164
    4. ' A' → logprob: -6.581308364868164
    5. 'lst' → logprob: -7.456308364868164
    6. ',a' → logprob: -8.331308364868164
    7. 'arr' → logprob: -8.331308364868164
    8. 'l' → logprob: -8.456308364868164
    9. ' a' → logprob: -8.581308364868164
    10. ',' → logprob: -8.956308364868164

Token 376: ' création' (ID: 46081)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.16284114122390747
    2. 'list' → logprob: -2.6628410816192627
    3. 'sorted' → logprob: -3.1628410816192627
    4. ' map' → logprob: -3.7878410816192627
    5. ' sorted' → logprob: -5.412841320037842
    6. 'split' → logprob: -5.537841320037842
    7. 'input' → logprob: -5.662841320037842
    8. 's' → logprob: -7.412841320037842
    9. 'sort' → logprob: -7.412841320037842
    10. ' list' → logprob: -7.412841320037842

Token 377: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3466758131980896
    2. ' d' → logprob: -1.5966758728027344
    3. 'a' → logprob: -2.8466758728027344
    4. 's' → logprob: -4.596675872802734
    5. 'A' → logprob: -5.096675872802734
    6. 'lst' → logprob: -5.596675872802734
    7. 'de' → logprob: -5.721675872802734
    8. 'b' → logprob: -6.346675872802734
    9. 'arr' → logprob: -6.346675872802734
    10. ' de' → logprob: -7.221675872802734

Token 378: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.155572772026062
    2. 'a' → logprob: -1.280572772026062
    3. 'lst' → logprob: -1.280572772026062
    4. 'arr' → logprob: -2.6555728912353516
    5. 'l' → logprob: -3.6555728912353516
    6. 'la' → logprob: -4.030572891235352
    7. 'L' → logprob: -5.030572891235352
    8. 'liste' → logprob: -5.155572891235352
    9. ' A' → logprob: -7.530572891235352
    10. 'une' → logprob: -7.530572891235352

Token 379: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.37984544038772583
    2. 'lst' → logprob: -1.379845380783081
    3. 'list' → logprob: -2.879845380783081
    4. 'a' → logprob: -6.00484561920166
    5. 'arr' → logprob: -6.12984561920166
    6. 'A' → logprob: -6.12984561920166
    7. 'lista' → logprob: -8.00484561920166
    8. 'l' → logprob: -8.25484561920166
    9. 'data' → logprob: -8.50484561920166
    10. 'lis' → logprob: -8.50484561920166

Token 380: ' L' (ID: 451)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.18344175815582275
    2. 'a' → logprob: -1.8084417581558228
    3. 'lst' → logprob: -6.683441638946533
    4. ' A' → logprob: -6.933441638946533
    5. 'arr' → logprob: -7.183441638946533
    6. 'L' → logprob: -8.683442115783691
    7. 'numbers' → logprob: -9.433442115783691
    8. ' a' → logprob: -9.683442115783691
    9. 'l' → logprob: -9.808442115783691
    10. '```' → logprob: -10.058442115783691

Token 381: '
' (ID: 198)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0002585978072602302
    2. '=' → logprob: -9.375258445739746
    3. '
' → logprob: -9.500258445739746
    4. ' =' → logprob: -9.500258445739746
    5. '=L' → logprob: -10.875258445739746
    6. ' L' → logprob: -12.250258445739746
    7. '=
' → logprob: -16.000259399414062
    8. '(L' → logprob: -17.375259399414062
    9. '[L' → logprob: -17.375259399414062
    10. '[' → logprob: -17.500259399414062

Token 382: 'L' (ID: 43)
  Prédit: 'L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.9361264946837764e-07
    2. ' L' → logprob: -16.125
    3. 'list' → logprob: -22.125
    4. 'l' → logprob: -22.625
    5. 'lst' → logprob: -23.25
    6. '```' → logprob: -24.375
    7. 'Ls' → logprob: -24.625
    8. '	L' → logprob: -24.875
    9. 'LS' → logprob: -25.25
    10. '`' → logprob: -25.375

Token 383: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0038898612838238478
    2. '=list' → logprob: -5.753890037536621
    3. ' =' → logprob: -7.253890037536621
    4. '=input' → logprob: -13.128890037536621
    5. '=[]' → logprob: -13.753890037536621
    6. '=int' → logprob: -13.878890037536621
    7. '=[' → logprob: -15.128890037536621
    8. '＝' → logprob: -16.878889083862305
    9. '=l' → logprob: -17.378889083862305
    10. '=array' → logprob: -18.128889083862305

Token 384: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00042745075188577175
    2. '(' → logprob: -7.87542724609375
    3. '(int' → logprob: -10.25042724609375
    4. 'map' → logprob: -12.12542724609375
    5. '(input' → logprob: -12.25042724609375
    6. '(
' → logprob: -14.87542724609375
    7. '_map' → logprob: -15.37542724609375
    8. ' (' → logprob: -15.50042724609375
    9. ',map' → logprob: -15.62542724609375
    10. '(

' → logprob: -15.75042724609375

Token 385: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0003229494614060968
    2. 'int' → logprob: -8.125323295593262
    3. '=int' → logprob: -11.500323295593262
    4. ' int' → logprob: -11.875323295593262
    5. '[int' → logprob: -13.000323295593262
    6. ' (' → logprob: -13.125323295593262
    7. '(' → logprob: -13.250323295593262
    8. '<int' → logprob: -13.250323295593262
    9. ',int' → logprob: -13.500323295593262
    10. '	int' → logprob: -15.375323295593262

Token 386: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.000600572966504842
    2. ',int' → logprob: -8.125600814819336
    3. ',' → logprob: -8.625600814819336
    4. '(input' → logprob: -9.250600814819336
    5. 'input' → logprob: -10.875600814819336
    6. ' ,' → logprob: -11.625600814819336
    7. '<input' → logprob: -15.000600814819336
    8. '=input' → logprob: -15.125600814819336
    9. '(' → logprob: -15.875600814819336
    10. '(int' → logprob: -16.125600814819336

Token 387: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.896309739408025e-07
    2. '()' → logprob: -14.625000953674316
    3. ' ().' → logprob: -15.500000953674316
    4. '.' → logprob: -18.25
    5. ' .' → logprob: -18.875
    6. '(' → logprob: -19.375
    7. '(.' → logprob: -21.375
    8. '   ' → logprob: -21.75
    9. '.split' → logprob: -21.875
    10. '()
' → logprob: -22.125

Token 388: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -15.625
    3. ' split' → logprob: -16.875
    4. '(split' → logprob: -17.625
    5. 'spl' → logprob: -18.25
    6. '.split' → logprob: -19.125
    7. 'rstrip' → logprob: -21.0
    8. '```' → logprob: -22.125
    9. ')' → logprob: -22.25
    10. 'plit' → logprob: -22.25

Token 389: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.01310764066874981
    2. '())' → logprob: -4.763107776641846
    3. '()' → logprob: -5.638107776641846
    4. '))' → logprob: -7.263107776641846
    5. '(' → logprob: -8.638107299804688
    6. '()));' → logprob: -10.638107299804688
    7. ')' → logprob: -11.763107299804688
    8. '()))
' → logprob: -11.888107299804688
    9. '())))' → logprob: -13.263107299804688
    10. '());' → logprob: -13.388107299804688

Token 390: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8269585967063904
    2. 'L' → logprob: -1.7019586563110352
    3. 'div' → logprob: -2.076958656311035
    4. 'ans' → logprob: -2.576958656311035
    5. 'd' → logprob: -3.576958656311035
    6. 'count' → logprob: -4.201958656311035
    7. 'total' → logprob: -4.201958656311035
    8. 'result' → logprob: -4.326958656311035
    9. 'answer' → logprob: -4.326958656311035
    10. 'import' → logprob: -4.451958656311035

Token 391: ' Cal' (ID: 4453)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.8646253943443298
    2. 'count' → logprob: -1.3646254539489746
    3. 'div' → logprob: -2.4896254539489746
    4. '#' → logprob: -2.8646254539489746
    5. 'ans' → logprob: -3.3646254539489746
    6. 'result' → logprob: -3.4896254539489746
    7. 'for' → logprob: -4.364625453948975
    8. 'yak' → logprob: -4.489625453948975
    9. 'from' → logprob: -4.614625453948975
    10. 's' → logprob: -4.864625453948975

Token 392: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.06367335468530655
    2. 'c' → logprob: -2.813673257827759
    3. 'cule' → logprob: -6.563673496246338
    4. 'culate' → logprob: -8.93867301940918
    5. 'cules' → logprob: -10.06367301940918
    6. 'culator' → logprob: -10.68867301940918
    7. ' cul' → logprob: -10.93867301940918
    8. '#' → logprob: -11.06367301940918
    9. 'l' → logprob: -11.81367301940918
    10. 's' → logprob: -11.93867301940918

Token 393: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -1.102264404296875
    2. 's' → logprob: -1.477264404296875
    3. 'div' → logprob: -2.102264404296875
    4. 'total' → logprob: -2.602264404296875
    5. 'd' → logprob: -2.852264404296875
    6. 'r' → logprob: -3.352264404296875
    7. '#' → logprob: -3.727264404296875
    8. 'max' → logprob: -3.852264404296875
    9. 'result' → logprob: -4.352264404296875
    10. 'ateurs' → logprob: -4.352264404296875

Token 394: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5549854040145874
    2. 'g' → logprob: -2.679985523223877
    3. 'sum' → logprob: -2.679985523223877
    4. 'max' → logprob: -3.179985523223877
    5. 'from' → logprob: -3.304985523223877
    6. 'count' → logprob: -3.554985523223877
    7. 'result' → logprob: -3.554985523223877
    8. 'som' → logprob: -3.679985523223877
    9. 'div' → logprob: -4.054985523223877
    10. 'diff' → logprob: -4.304985523223877

Token 395: ' totale' (ID: 52898)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0130929946899414
    2. 'total' → logprob: -1.1380929946899414
    3. 'sum' → logprob: -1.5130929946899414
    4. '_sum' → logprob: -3.8880929946899414
    5. 'result' → logprob: -4.138092994689941
    6. '_s' → logprob: -4.513092994689941
    7. '_' → logprob: -4.763092994689941
    8. '=' → logprob: -4.888092994689941
    9. '_total' → logprob: -5.013092994689941
    10. ' =' → logprob: -5.138092994689941

Token 396: ' de' (ID: 334)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08523210883140564
    2. 's' → logprob: -2.8352320194244385
    3. '=' → logprob: -4.835232257843018
    4. 'sum' → logprob: -5.460232257843018
    5. '_total' → logprob: -5.585232257843018
    6. ' =' → logprob: -5.960232257843018
    7. 'S' → logprob: -6.835232257843018
    8. 'L' → logprob: -6.835232257843018
    9. 'tot' → logprob: -6.960232257843018
    10. '_sum' → logprob: -8.21023178100586

Token 397: ' tous' (ID: 10688)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0004907185211777687
    2. ' L' → logprob: -7.625490665435791
    3. '(L' → logprob: -13.25049114227295
    4. 'sum' → logprob: -14.50049114227295
    5. ' ' → logprob: -16.125490188598633
    6. 'l' → logprob: -16.250490188598633
    7. '	L' → logprob: -16.875490188598633
    8. 'all' → logprob: -17.000490188598633
    9. '   ' → logprob: -17.625490188598633
    10. '_L' → logprob: -18.375490188598633

Token 398: ' les' (ID: 1341)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.4302854835987091
    2. 'L' → logprob: -1.0552854537963867
    3. ' L' → logprob: -6.555285453796387
    4. '(' → logprob: -8.930285453796387
    5. '	L' → logprob: -12.180285453796387
    6. 's' → logprob: -12.555285453796387
    7. 'l' → logprob: -12.930285453796387
    8. 'a' → logprob: -12.930285453796387
    9. 'elements' → logprob: -12.930285453796387
    10. ' (' → logprob: -13.430285453796387

Token 399: ' ent' (ID: 1121)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.026943614706397057
    2. 'L' → logprob: -3.6519436836242676
    3. ' éléments' → logprob: -7.526943683624268
    4. 'div' → logprob: -10.02694320678711
    5. 'elements' → logprob: -10.77694320678711
    6. 'é' → logprob: -11.15194320678711
    7. 'él' → logprob: -11.77694320678711
    8. ' L' → logprob: -11.77694320678711
    9. 'elem' → logprob: -13.02694320678711
    10. 'element' → logprob: -13.40194320678711

Token 400: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -2.927930654550437e-05
    2. 'ier' → logprob: -10.875029563903809
    3. 'ers' → logprob: -12.375029563903809
    4. 'i' → logprob: -13.125029563903809
    5. 'er' → logprob: -13.625029563903809
    6. 'ières' → logprob: -14.750029563903809
    7. '```' → logprob: -14.875029563903809
    8. 'tiers' → logprob: -15.000029563903809
    9. 'ents' → logprob: -15.250029563903809
    10. 'e' → logprob: -15.375029563903809

Token 401: ' dans' (ID: 2671)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.20673109591007233
    2. 'L' → logprob: -2.581731081008911
    3. 's' → logprob: -2.706731081008911
    4. '=' → logprob: -3.581731081008911
    5. ' =' → logprob: -4.95673131942749
    6. 'sum' → logprob: -5.20673131942749
    7. '_total' → logprob: -6.20673131942749
    8. 'tot' → logprob: -7.58173131942749
    9. '=sum' → logprob: -7.83173131942749
    10. '_sum' → logprob: -8.456730842590332

Token 402: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.0007154120248742402
    2. ' L' → logprob: -7.250715255737305
    3. '(L' → logprob: -12.125715255737305
    4. 'l' → logprob: -17.875715255737305
    5. 'the' → logprob: -18.375715255737305
    6. '_L' → logprob: -18.625715255737305
    7. '```' → logprob: -18.625715255737305
    8. ' ' → logprob: -18.875715255737305
    9. '	L' → logprob: -19.000715255737305
    10. '[L' → logprob: -19.000715255737305

Token 403: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -8.97155623533763e-05
    2. ' L' → logprob: -10.500089645385742
    3. 'liste' → logprob: -10.750089645385742
    4. 'list' → logprob: -10.875089645385742
    5. 'code' → logprob: -12.125089645385742
    6. 'range' → logprob: -12.625089645385742
    7. 'input' → logprob: -13.250089645385742
    8. '```' → logprob: -13.375089645385742
    9. 'lst' → logprob: -13.500089645385742
    10. 'div' → logprob: -14.000089645385742

Token 404: ' L' (ID: 451)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.019742866978049278
    2. 's' → logprob: -4.269742965698242
    3. 'S' → logprob: -5.894742965698242
    4. 'sum' → logprob: -6.019742965698242
    5. '_total' → logprob: -8.769742965698242
    6. ' total' → logprob: -8.894742965698242
    7. 'tot' → logprob: -10.144742965698242
    8. '_sum' → logprob: -10.894742965698242
    9. '_s' → logprob: -11.894742965698242
    10. 'L' → logprob: -12.394742965698242

Token 405: '
' (ID: 198)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.004646334331482649
    2. 'sum' → logprob: -6.129646301269531
    3. 'S' → logprob: -6.504646301269531
    4. 's' → logprob: -7.004646301269531
    5. ' total' → logprob: -10.379646301269531
    6. 'tot' → logprob: -11.254646301269531
    7. '
' → logprob: -12.129646301269531
    8. '_total' → logprob: -13.504646301269531
    9. 'Total' → logprob: -14.504646301269531
    10. 'TOTAL' → logprob: -15.004646301269531

Token 406: 'a' (ID: 64)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.01347313355654478
    2. 's' → logprob: -5.013473033905029
    3. 'sum' → logprob: -5.638473033905029
    4. 'S' → logprob: -5.763473033905029
    5. 'tot' → logprob: -10.763473510742188
    6. ' total' → logprob: -11.513473510742188
    7. 'som' → logprob: -13.263473510742188
    8. 'Total' → logprob: -14.388473510742188
    9. 'sm' → logprob: -14.513473510742188
    10. 'summ' → logprob: -14.763473510742188

Token 407: '=sum' (ID: 174693)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31109419465065
    2. '=' → logprob: -1.6860941648483276
    3. '=sum' → logprob: -2.936094284057617
    4. '_total' → logprob: -4.311094284057617
    5. '_sum' → logprob: -4.936094284057617
    6. 'total' → logprob: -5.686094284057617
    7. 'sum' → logprob: -6.186094284057617
    8. 'a' → logprob: -7.436094284057617
    9. '=a' → logprob: -7.561094284057617
    10. 's' → logprob: -7.811094284057617

Token 408: '(L' (ID: 11075)
  Prédit: '(L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.0067204674705863
    2. '(' → logprob: -5.006720542907715
    3. '(
' → logprob: -13.256720542907715
    4. '(a' → logprob: -13.756720542907715
    5. '((' → logprob: -14.506720542907715
    6. '(

' → logprob: -14.506720542907715
    7. '(l' → logprob: -14.756720542907715
    8. ' (' → logprob: -15.131720542907715
    9. 'L' → logprob: -16.1317195892334
    10. '(s' → logprob: -16.7567195892334

Token 409: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00401346106082201
    2. '())' → logprob: -5.879013538360596
    3. '()' → logprob: -7.129013538360596
    4. ')
' → logprob: -8.004013061523438
    5. ' )' → logprob: -10.004013061523438
    6. '()
' → logprob: -12.004013061523438
    7. '))' → logprob: -12.504013061523438
    8. '[' → logprob: -12.629013061523438
    9. '[])' → logprob: -13.129013061523438
    10. ')

' → logprob: -13.379013061523438

Token 410: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3976240158081055
    2. 'for' → logprob: -1.6476240158081055
    3. '#' → logprob: -1.7726240158081055
    4. 'div' → logprob: -2.2726240158081055
    5. 'ans' → logprob: -2.7726240158081055
    6. 'd' → logprob: -3.2726240158081055
    7. 'diff' → logprob: -3.3976240158081055
    8. 'result' → logprob: -4.1476240158081055
    9. 'count' → logprob: -4.2726240158081055
    10. 'max' → logprob: -4.2726240158081055

Token 411: ' Obt' (ID: 98208)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5165380835533142
    2. 'for' → logprob: -2.266538143157959
    3. 'b' → logprob: -2.766538143157959
    4. '#' → logprob: -3.016538143157959
    5. 'div' → logprob: -3.266538143157959
    6. 'count' → logprob: -3.891538143157959
    7. 'm' → logprob: -4.016538143157959
    8. 'result' → logprob: -4.141538143157959
    9. 'd' → logprob: -4.516538143157959
    10. 'ans' → logprob: -4.516538143157959

Token 412: 'ient' (ID: 773)
  Prédit: 'enir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enir' → logprob: -0.039316121488809586
    2. 'ient' → logprob: -3.539316177368164
    3. 'en' → logprob: -5.914316177368164
    4. 'ention' → logprob: -6.789316177368164
    5. 'enez' → logprob: -6.914316177368164
    6. 'e' → logprob: -6.914316177368164
    7. 'ien' → logprob: -7.039316177368164
    8. 'iens' → logprob: -7.289316177368164
    9. 'ent' → logprob: -7.539316177368164
    10. 'enant' → logprob: -7.664316177368164

Token 413: ' tous' (ID: 10688)
  Prédit: 'yak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yak' → logprob: -0.7812453508377075
    2. 'les' → logprob: -1.9062453508377075
    3. ' les' → logprob: -2.156245231628418
    4. 'la' → logprob: -2.656245231628418
    5. ' la' → logprob: -3.031245231628418
    6. 'all' → logprob: -3.281245231628418
    7. ' yak' → logprob: -3.406245231628418
    8. 'a' → logprob: -3.406245231628418
    9. 't' → logprob: -3.781245231628418
    10. 'div' → logprob: -4.781245231628418

Token 414: ' les' (ID: 1341)
  Prédit: 'yak'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'yak' → logprob: -0.0149428965523839
    2. 'div' → logprob: -4.8899431228637695
    3. 'les' → logprob: -5.0149431228637695
    4. ' yak' → logprob: -8.26494312286377
    5. 'y' → logprob: -9.01494312286377
    6. 'le' → logprob: -9.38994312286377
    7. 'a' → logprob: -9.76494312286377
    8. 'd' → logprob: -10.63994312286377
    9. 'ya' → logprob: -10.88994312286377
    10. 'k' → logprob: -11.13994312286377

Token 415: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.10763902962207794
    2. 'yak' → logprob: -2.3576390743255615
    3. 'd' → logprob: -4.982638835906982
    4. 'y' → logprob: -9.10763931274414
    5. ' yak' → logprob: -9.85763931274414
    6. 'k' → logprob: -9.85763931274414
    7. 'def' → logprob: -10.10763931274414
    8. 'Yak' → logprob: -10.23263931274414
    9. 'x' → logprob: -10.35763931274414
    10. 'poss' → logprob: -10.48263931274414

Token 416: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.03064107894897461
    2. 'is' → logprob: -4.030641078948975
    3. 'iseur' → logprob: -5.530641078948975
    4. 'isateurs' → logprob: -5.655641078948975
    5. 'div' → logprob: -6.405641078948975
    6. 'i' → logprob: -6.905641078948975
    7. 'isu' → logprob: -8.030641555786133
    8. 'isseurs' → logprob: -8.280641555786133
    9. 's' → logprob: -8.280641555786133
    10. '```' → logprob: -8.905641555786133

Token 417: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.013638006523251534
    2. 'se' → logprob: -5.388638019561768
    3. 's' → logprob: -5.638638019561768
    4. 'rs' → logprob: -6.138638019561768
    5. 'eurs' → logprob: -6.388638019561768
    6. 'reurs' → logprob: -7.263638019561768
    7. 'teurs' → logprob: -8.51363754272461
    8. 'urse' → logprob: -8.63863754272461
    9. 'leurs' → logprob: -8.76363754272461
    10. 'sers' → logprob: -9.38863754272461

Token 418: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.8914861083030701
    2. ' =' → logprob: -1.8914861679077148
    3. '=' → logprob: -2.516486167907715
    4. 'a' → logprob: -2.516486167907715
    5. 's' → logprob: -2.516486167907715
    6. 'div' → logprob: -2.641486167907715
    7. 'de' → logprob: -3.016486167907715
    8. 'of' → logprob: -3.141486167907715
    9. 'yak' → logprob: -4.391486167907715
    10. ' of' → logprob: -5.766486167907715

Token 419: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.833878508885391e-05
    2. ' a' → logprob: -10.250038146972656
    3. 'K' → logprob: -12.750038146972656
    4. ' K' → logprob: -17.625038146972656
    5. 'N' → logprob: -18.125038146972656
    6. '(a' → logprob: -19.125038146972656
    7. ' ' → logprob: -19.500038146972656
    8. 'abs' → logprob: -19.750038146972656
    9. ' ' → logprob: -22.500038146972656
    10. '	a' → logprob: -22.625038146972656

Token 420: ' somme' (ID: 64484)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.36574100604048e-06
    2. ' a' → logprob: -12.750004768371582
    3. 'K' → logprob: -13.500004768371582
    4. 'N' → logprob: -19.375003814697266
    5. ' K' → logprob: -19.375003814697266
    6. ' ' → logprob: -20.500003814697266
    7. '	a' → logprob: -20.500003814697266
    8. '```' → logprob: -21.000003814697266
    9. 'k' → logprob: -21.625003814697266
    10. 'abs' → logprob: -21.750003814697266

Token 421: ' a' (ID: 261)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.45520204305648804
    2. 'div' → logprob: -1.4552021026611328
    3. 'a' → logprob: -2.580202102661133
    4. 's' → logprob: -4.080202102661133
    5. ' =' → logprob: -4.205202102661133
    6. 'b' → logprob: -4.830202102661133
    7. '=' → logprob: -4.830202102661133
    8. 'de' → logprob: -5.330202102661133
    9. 'all' → logprob: -6.705202102661133
    10. '_div' → logprob: -7.455202102661133

Token 422: ',' (ID: 11)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5297353863716125
    2. 'div' → logprob: -0.9047353863716125
    3. 'b' → logprob: -5.904735565185547
    4. 'yak' → logprob: -6.279735565185547
    5. ' =' → logprob: -7.154735565185547
    6. '=' → logprob: -8.029735565185547
    7. 'y' → logprob: -9.279735565185547
    8. 'D' → logprob: -9.404735565185547
    9. 'de' → logprob: -9.779735565185547
    10. 's' → logprob: -9.779735565185547

Token 423: ' puis' (ID: 18766)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6676862239837646
    2. 'd' → logprob: -0.7926862239837646
    3. 'yak' → logprob: -3.7926862239837646
    4. 'b' → logprob: -5.292686462402344
    5. 'D' → logprob: -5.667686462402344
    6. 'y' → logprob: -6.417686462402344
    7. 'Y' → logprob: -8.917686462402344
    8. 'x' → logprob: -9.167686462402344
    9. 'ds' → logprob: -9.167686462402344
    10. 'c' → logprob: -9.167686462402344

Token 424: ' inverse' (ID: 53743)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.3390633463859558
    2. '#' → logprob: -2.3390634059906006
    3. 'd' → logprob: -2.4640634059906006
    4. 'for' → logprob: -2.9640634059906006
    5. 'les' → logprob: -4.0890631675720215
    6. 'sorted' → logprob: -4.9640631675720215
    7. '.sort' → logprob: -5.5890631675720215
    8. 'res' → logprob: -5.7140631675720215
    9. 'yak' → logprob: -5.9640631675720215
    10. 'tr' → logprob: -6.0890631675720215

Token 425: ' cette' (ID: 7696)
  Prédit: '()['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()[' → logprob: -0.3573344945907593
    2. '()' → logprob: -1.8573344945907593
    3. 's' → logprob: -2.857334613800049
    4. 'a' → logprob: -3.732334613800049
    5. 'd' → logprob: -3.982334613800049
    6. '[::-' → logprob: -4.482334613800049
    7. '(a' → logprob: -5.107334613800049
    8. '(' → logprob: -5.482334613800049
    9. '().' → logprob: -5.732334613800049
    10. '()
' → logprob: -6.607334613800049

Token 426: ' liste' (ID: 31719)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10729449987411499
    2. '[::-' → logprob: -2.4822945594787598
    3. '()[' → logprob: -4.98229455947876
    4. 'liste' → logprob: -5.35729455947876
    5. '[:]' → logprob: -6.60729455947876
    6. 'list' → logprob: -6.60729455947876
    7. '[]' → logprob: -7.23229455947876
    8. '[' → logprob: -7.23229455947876
    9. 's' → logprob: -7.23229455947876
    10. '#' → logprob: -7.85729455947876

Token 427: ' pour' (ID: 1930)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3997485339641571
    2. 'div' → logprob: -1.1497485637664795
    3. 'rev' → logprob: -5.0247483253479
    4. '=' → logprob: -6.5247483253479
    5. 's' → logprob: -6.8997483253479
    6. 'yak' → logprob: -6.8997483253479
    7. 'r' → logprob: -7.5247483253479
    8. ' =' → logprob: -8.149748802185059
    9. 'all' → logprob: -8.149748802185059
    10. 'reverse' → logprob: -8.524748802185059

Token 428: ' traiter' (ID: 105852)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1489654779434204
    2. ' parcour' → logprob: -1.5239654779434204
    3. 'tr' → logprob: -1.8989654779434204
    4. '_' → logprob: -2.023965358734131
    5. 'a' → logprob: -3.023965358734131
    6. ' obtenir' → logprob: -3.398965358734131
    7. '#' → logprob: -4.148965358734131
    8. 'reverse' → logprob: -4.398965358734131
    9. ' a' → logprob: -4.648965358734131
    10. ' for' → logprob: -4.648965358734131

Token 429: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6002753376960754
    2. 'la' → logprob: -1.9752752780914307
    3. ' les' → logprob: -2.6002752780914307
    4. ' la' → logprob: -2.7252752780914307
    5. ' yak' → logprob: -3.2252752780914307
    6. '[::-' → logprob: -3.8502752780914307
    7. 'yak' → logprob: -3.8502752780914307
    8. 'les' → logprob: -4.47527551651001
    9. ' a' → logprob: -4.60027551651001
    10. '(reverse' → logprob: -4.72527551651001

Token 430: ' grands' (ID: 43085)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.024214759469032288
    2. ' div' → logprob: -4.649214744567871
    3. 'for' → logprob: -5.399214744567871
    4. '[::-' → logprob: -5.524214744567871
    5. '#' → logprob: -6.274214744567871
    6. 'd' → logprob: -6.774214744567871
    7. ' for' → logprob: -7.399214744567871
    8. ' divis' → logprob: -7.399214744567871
    9. 's' → logprob: -8.274214744567871
    10. 'a' → logprob: -8.399214744567871

Token 431: ' div' (ID: 4223)
  Prédit: '_div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_div' → logprob: -0.6023844480514526
    2. 'div' → logprob: -0.8523844480514526
    3. 'yak' → logprob: -4.227384567260742
    4. '_' → logprob: -5.977384567260742
    5. '[::-' → logprob: -6.102384567260742
    6. 's' → logprob: -6.352384567260742
    7. 'a' → logprob: -6.852384567260742
    8. '_d' → logprob: -7.602384567260742
    9. ' divis' → logprob: -7.852384567260742
    10. 'for' → logprob: -7.977384567260742

Token 432: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.023371612653136253
    2. 'is' → logprob: -4.023371696472168
    3. 'isateurs' → logprob: -6.398371696472168
    4. '```' → logprob: -7.148371696472168
    5. 'isers' → logprob: -7.398371696472168
    6. 'isseurs' → logprob: -7.523371696472168
    7. 'eurs' → logprob: -8.648371696472168
    8. 's' → logprob: -8.773371696472168
    9. 'iseur' → logprob: -8.898371696472168
    10. 'ers' → logprob: -9.273371696472168

Token 433: 'urs' (ID: 1628)
  Prédit: 'urs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urs' → logprob: -0.07035474479198456
    2. 's' → logprob: -3.320354700088501
    3. 'rs' → logprob: -4.07035493850708
    4. 'se' → logprob: -4.44535493850708
    5. 'reurs' → logprob: -7.07035493850708
    6. 'teurs' → logprob: -7.19535493850708
    7. 'eurs' → logprob: -8.070354461669922
    8. 'urses' → logprob: -8.570354461669922
    9. 'div' → logprob: -8.945354461669922
    10. 'urse' → logprob: -9.445354461669922

Token 434: ' en' (ID: 469)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.1942743957042694
    2. 'd' → logprob: -2.194274425506592
    3. 'for' → logprob: -2.819274425506592
    4. 'yak' → logprob: -5.694274425506592
    5. ' for' → logprob: -6.944274425506592
    6. ' divis' → logprob: -8.569273948669434
    7. 'rev' → logprob: -8.694273948669434
    8. 's' → logprob: -8.944273948669434
    9. ' div' → logprob: -9.194273948669434
    10. 'D' → logprob: -9.444273948669434

Token 435: ' premier' (ID: 15506)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.03216773644089699
    2. ' ordre' → logprob: -4.157167911529541
    3. 'order' → logprob: -4.657167911529541
    4. 'L' → logprob: -6.282167911529541
    5. ' order' → logprob: -7.032167911529541
    6. 'descending' → logprob: -7.157167911529541
    7. ''ordre' → logprob: -7.157167911529541
    8. 'a' → logprob: -7.532167911529541
    9. ' L' → logprob: -8.157167434692383
    10. 'ord' → logprob: -8.657167434692383

Token 436: '
' (ID: 198)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.69305419921875
    2. 'div' → logprob: -0.94305419921875
    3. 'for' → logprob: -2.31805419921875
    4. 'D' → logprob: -4.81805419921875
    5. 'x' → logprob: -6.81805419921875
    6. ' for' → logprob: -7.44305419921875
    7. 'yak' → logprob: -7.94305419921875
    8. 'b' → logprob: -8.19305419921875
    9. 'all' → logprob: -8.56805419921875
    10. 'r' → logprob: -8.69305419921875

Token 437: 'R' (ID: 49)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4837665557861328
    2. 'div' → logprob: -1.4837665557861328
    3. 'd' → logprob: -1.8587665557861328
    4. 'D' → logprob: -7.733766555786133
    5. ' for' → logprob: -8.983766555786133
    6. 'r' → logprob: -9.983766555786133
    7. 'ds' → logprob: -10.108766555786133
    8. 'x' → logprob: -10.108766555786133
    9. 'yak' → logprob: -10.358766555786133
    10. 'all' → logprob: -10.483766555786133

Token 438: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22578762471675873
    2. ' =' → logprob: -1.60078763961792
    3. '=y' → logprob: -8.725787162780762
    4. '=list' → logprob: -9.600787162780762
    5. '=r' → logprob: -10.475787162780762
    6. '=[]' → logprob: -10.725787162780762
    7. '=get' → logprob: -11.225787162780762
    8. 's' → logprob: -11.475787162780762
    9. '=_' → logprob: -11.475787162780762
    10. '=re' → logprob: -11.475787162780762

Token 439: 'yak' (ID: 68720)
  Prédit: 'yak'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yak' → logprob: -6.153795766294934e-06
    2. ' yak' → logprob: -12.750005722045898
    3. 'sorted' → logprob: -13.500005722045898
    4. 'y' → logprob: -14.125005722045898
    5. 'yat' → logprob: -14.875005722045898
    6. 'yam' → logprob: -15.250005722045898
    7. 'list' → logprob: -15.375005722045898
    8. 'yk' → logprob: -16.7500057220459
    9. 'yac' → logprob: -16.7500057220459
    10. 'yar' → logprob: -17.7500057220459

Token 440: 'usu' (ID: 21118)
  Prédit: 'usu'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'usu' → logprob: -0.00019543453527148813
    2. 'す' → logprob: -9.500195503234863
    3. 'su' → logprob: -10.125195503234863
    4. 'asu' → logprob: -10.625195503234863
    5. 'osu' → logprob: -10.750195503234863
    6. 's' → logprob: -11.375195503234863
    7. 'us' → logprob: -12.750195503234863
    8. 'усу' → logprob: -13.000195503234863
    9. 'су' → logprob: -13.375195503234863
    10. 'sus' → logprob: -13.750195503234863

Token 441: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.5690089639974758e-05
    2. ' (' → logprob: -11.750015258789062
    3. '(' → logprob: -12.125015258789062
    4. '((' → logprob: -13.250015258789062
    5. ')(' → logprob: -15.875015258789062
    6. '(s' → logprob: -16.250015258789062
    7. '(reverse' → logprob: -16.750015258789062
    8. '[::-' → logprob: -16.750015258789062
    9. 'a' → logprob: -17.125015258789062
    10. '(A' → logprob: -17.375015258789062

Token 442: ')[' (ID: 13637)
  Prédit: ')['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')[' → logprob: -5.2166411478538066e-05
    2. ')' → logprob: -10.125052452087402
    3. '[::-' → logprob: -11.375052452087402
    4. ')
' → logprob: -15.000052452087402
    5. '))[' → logprob: -16.000051498413086
    6. '   ' → logprob: -17.375051498413086
    7. ' )[' → logprob: -17.375051498413086
    8. ')][' → logprob: -17.375051498413086
    9. ' )' → logprob: -18.250051498413086
    10. ')
' → logprob: -18.375051498413086

Token 443: '::-' (ID: 96612)
  Prédit: '::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '::-' → logprob: -0.0015427150065079331
    2. ':' → logprob: -6.751542568206787
    3. '[::-' → logprob: -8.376543045043945
    4. '::' → logprob: -9.376543045043945
    5. '-' → logprob: -10.251543045043945
    6. ' :' → logprob: -11.501543045043945
    7. ':]' → logprob: -12.126543045043945
    8. ':
' → logprob: -13.251543045043945
    9. ' ::' → logprob: -13.876543045043945
    10. '][' → logprob: -14.001543045043945

Token 444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '::-' → logprob: -11.875011444091797
    3. '-' → logprob: -12.375011444091797
    4. '```' → logprob: -17.000011444091797
    5. ' ' → logprob: -17.375011444091797
    6. ':-' → logprob: -19.000011444091797
    7. '１' → logprob: -19.125011444091797
    8. ']' → logprob: -19.625011444091797
    9. '[::-' → logprob: -19.625011444091797
    10. ':' → logprob: -20.000011444091797

Token 445: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.404745439183898e-05
    2. ']' → logprob: -10.62503433227539
    3. '])' → logprob: -12.12503433227539
    4. ' )' → logprob: -13.00003433227539
    5. '）' → logprob: -13.75003433227539
    6. ')
' → logprob: -14.75003433227539
    7. ')]' → logprob: -15.37503433227539
    8. '))' → logprob: -15.75003433227539
    9. '()' → logprob: -17.12503433227539
    10. ')`' → logprob: -17.37503433227539

Token 446: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002625278721097857
    2. ' for' → logprob: -8.250262260437012
    3. 'i' → logprob: -14.750262260437012
    4. '#' → logprob: -15.125262260437012
    5. ':' → logprob: -15.250262260437012
    6. 'import' → logprob: -17.250263214111328
    7. 'M' → logprob: -17.375263214111328
    8. 'if' → logprob: -17.375263214111328
    9. 'd' → logprob: -17.500263214111328
    10. 'm' → logprob: -17.750263214111328

Token 447: ' Bou' (ID: 33816)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.35837464465294e-05
    2. 'answer' → logprob: -11.500043869018555
    3. 'found' → logprob: -11.500043869018555
    4. 'result' → logprob: -11.625043869018555
    5. 'ans' → logprob: -11.875043869018555
    6. 'res' → logprob: -12.000043869018555
    7. 'i' → logprob: -14.000043869018555
    8. ' for' → logprob: -16.500043869018555
    9. 'possible' → logprob: -17.250043869018555
    10. 'def' → logprob: -17.250043869018555

Token 448: 'cle' (ID: 3170)
  Prédit: 'cle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.0022902563214302063
    2. 'c' → logprob: -6.12729024887085
    3. '#' → logprob: -10.377290725708008
    4. 'for' → logprob: -10.752290725708008
    5. 'cl' → logprob: -10.877290725708008
    6. 'r' → logprob: -11.252290725708008
    7. 'clé' → logprob: -11.877290725708008
    8. 'e' → logprob: -12.002290725708008
    9. 'le' → logprob: -13.252290725708008
    10. 'cles' → logprob: -14.252290725708008

Token 449: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11296222358942032
    2. ' for' → logprob: -2.237962245941162
    3. ':' → logprob: -9.112961769104004
    4. '
' → logprob: -10.987961769104004
    5. ':
' → logprob: -11.987961769104004
    6. '_for' → logprob: -12.987961769104004
    7. 'pour' → logprob: -13.612961769104004
    8. '```' → logprob: -14.237961769104004
    9. ' pour' → logprob: -14.487961769104004
    10. ' :' → logprob: -15.112961769104004

Token 450: ' traiter' (ID: 105852)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7394620776176453
    2. 'd' → logprob: -1.36446213722229
    3. 'x' → logprob: -1.36446213722229
    4. 'div' → logprob: -4.739461898803711
    5. 'i' → logprob: -7.239461898803711
    6. ' r' → logprob: -7.489461898803711
    7. ' d' → logprob: -7.864461898803711
    8. ' x' → logprob: -8.114461898803711
    9. 'v' → logprob: -8.239461898803711
    10. 'D' → logprob: -8.864461898803711

Token 451: ' chaque' (ID: 21194)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.18720348179340363
    2. ' d' → logprob: -2.1872034072875977
    3. 'r' → logprob: -3.6872034072875977
    4. 'x' → logprob: -3.8122034072875977
    5. 'div' → logprob: -5.312203407287598
    6. ' x' → logprob: -6.062203407287598
    7. ' r' → logprob: -6.187203407287598
    8. ' div' → logprob: -6.562203407287598
    9. ' divisor' → logprob: -7.937203407287598
    10. 'i' → logprob: -9.687203407287598

Token 452: ' div' (ID: 4223)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.15033955872058868
    2. 'd' → logprob: -2.6503396034240723
    3. 'x' → logprob: -2.7753396034240723
    4. ' r' → logprob: -5.400339603424072
    5. ' d' → logprob: -7.900339603424072
    6. 'k' → logprob: -8.025339126586914
    7. 'div' → logprob: -8.025339126586914
    8. 'v' → logprob: -8.400339126586914
    9. 'i' → logprob: -8.525339126586914
    10. ' x' → logprob: -8.525339126586914

Token 453: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.45915424823760986
    2. 'isor' → logprob: -2.0841541290283203
    3. 'is' → logprob: -2.3341541290283203
    4. 'R' → logprob: -2.4591541290283203
    5. 'for' → logprob: -3.7091541290283203
    6. 'ise' → logprob: -4.20915412902832
    7. ' R' → logprob: -5.08415412902832
    8. 'div' → logprob: -5.58415412902832
    9. 'r' → logprob: -5.58415412902832
    10. 'i' → logprob: -5.70915412902832

Token 454: ' potentiel' (ID: 113761)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25651004910469055
    2. ' for' → logprob: -2.256510019302368
    3. 'd' → logprob: -3.131510019302368
    4. ':' → logprob: -3.506510019302368
    5. ' in' → logprob: -3.631510019302368
    6. 'in' → logprob: -4.131510257720947
    7. ' d' → logprob: -6.131510257720947
    8. 'r' → logprob: -6.381510257720947
    9. 'div' → logprob: -8.631509780883789
    10. 'i' → logprob: -8.631509780883789

Token 455: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0015460490249097347
    2. ' for' → logprob: -6.6265459060668945
    3. ':' → logprob: -8.501545906066895
    4. ':
' → logprob: -11.751545906066895
    5. 'R' → logprob: -12.376545906066895
    6. '	for' → logprob: -14.001545906066895
    7. '   ' → logprob: -14.126545906066895
    8. 'd' → logprob: -14.751545906066895
    9. 'in' → logprob: -14.751545906066895
    10. ':R' → logprob: -14.751545906066895

Token 456: 'cha' (ID: 3836)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.7228773236274719
    2. 'd' → logprob: -0.8478773236274719
    3. 'x' → logprob: -2.597877264022827
    4. 'D' → logprob: -5.847877502441406
    5. 'R' → logprob: -5.847877502441406
    6. 'v' → logprob: -6.347877502441406
    7. ' r' → logprob: -6.472877502441406
    8. ' d' → logprob: -6.722877502441406
    9. 'p' → logprob: -7.722877502441406
    10. ' x' → logprob: -8.347877502441406

Token 457: 'que' (ID: 1126)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5871945023536682
    2. 'for' → logprob: -1.8371944427490234
    3. 'que' → logprob: -1.9621944427490234
    4. ' for' → logprob: -2.0871944427490234
    5. ' r' → logprob: -4.212194442749023
    6. '   ' → logprob: -5.962194442749023
    7. 'q' → logprob: -7.712194442749023
    8. 's' → logprob: -7.837194442749023
    9. 'ques' → logprob: -7.837194442749023
    10. 'c' → logprob: -8.212194442749023

Token 458: ' valeur' (ID: 41664)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.4284711182117462
    2. 'd' → logprob: -1.3034710884094238
    3. ' r' → logprob: -3.178471088409424
    4. ' d' → logprob: -3.928471088409424
    5. 'x' → logprob: -4.553471088409424
    6. 'D' → logprob: -6.428471088409424
    7. 'R' → logprob: -6.928471088409424
    8. 'p' → logprob: -7.303471088409424
    9. ' x' → logprob: -7.553471088409424
    10. 'k' → logprob: -7.553471088409424

Token 459: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.15549950301647186
    2. ' in' → logprob: -2.6554994583129883
    3. 'd' → logprob: -3.0304994583129883
    4. ' de' → logprob: -4.530499458312988
    5. ' r' → logprob: -5.280499458312988
    6. 'in' → logprob: -5.780499458312988
    7. 'r' → logprob: -5.905499458312988
    8. ' dans' → logprob: -6.530499458312988
    9. ' ' → logprob: -7.280499458312988
    10. ' D' → logprob: -8.030499458312988

Token 460: ' s' (ID: 265)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.040446262806653976
    2. 'd' → logprob: -3.4154462814331055
    3. 'x' → logprob: -5.7904462814331055
    4. 'r' → logprob: -6.1654462814331055
    5. ' R' → logprob: -7.1654462814331055
    6. 'D' → logprob: -7.6654462814331055
    7. 'v' → logprob: -9.290446281433105
    8. 'div' → logprob: -9.415446281433105
    9. 'm' → logprob: -10.165446281433105
    10. 'p' → logprob: -10.290446281433105

Token 461: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8654420375823975
    2. 'in' → logprob: -1.1154420375823975
    3. ')' → logprob: -1.4904420375823975
    4. ' )' → logprob: -4.365442276000977
    5. 's' → logprob: -5.615442276000977
    6. ' en' → logprob: -5.740442276000977
    7. 'dans' → logprob: -6.490442276000977
    8. ' dans' → logprob: -6.740442276000977
    9. '):' → logprob: -7.115442276000977
    10. ' ' → logprob: -7.240442276000977

Token 462: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0002036595979006961
    2. ' R' → logprob: -8.500204086303711
    3. ')' → logprob: -16.62520408630371
    4. ' range' → logprob: -18.25020408630371
    5. '   ' → logprob: -18.25020408630371
    6. 'range' → logprob: -18.37520408630371
    7. '
' → logprob: -19.62520408630371
    8. ' ' → logprob: -20.25020408630371
    9. 'Range' → logprob: -20.37520408630371
    10. '`' → logprob: -20.37520408630371

Token 463: ')
' (ID: 446)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15710149705410004
    2. '):' → logprob: -2.1571013927459717
    3. '):
' → logprob: -4.282101631164551
    4. ':
' → logprob: -4.407101631164551
    5. ')' → logprob: -6.032101631164551
    6. 'for' → logprob: -7.032101631164551
    7. 'in' → logprob: -8.65710163116455
    8. '   ' → logprob: -9.65710163116455
    9. ' :' → logprob: -9.65710163116455
    10. ' for' → logprob: -9.78210163116455

Token 464: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033558503491804004
    2. ' for' → logprob: -8.000335693359375
    3. ':' → logprob: -16.000335693359375
    4. '	for' → logprob: -18.625335693359375
    5. '
' → logprob: -18.875335693359375
    6. '```' → logprob: -19.250335693359375
    7. '_for' → logprob: -19.250335693359375
    8. '   ' → logprob: -19.500335693359375
    9. 's' → logprob: -19.750335693359375
    10. ':
' → logprob: -20.000335693359375

Token 465: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141352713108063
    2. ' s' → logprob: -1.7014135122299194
    3. '_s' → logprob: -15.95141315460205
    4. ' ' → logprob: -16.076414108276367
    5. '	s' → logprob: -16.826414108276367
    6. '   ' → logprob: -18.076414108276367
    7. 'S' → logprob: -18.201414108276367
    8. ' ' → logprob: -18.201414108276367
    9. '`s' → logprob: -19.576414108276367
    10. '```' → logprob: -19.951414108276367

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2519983947277069
    2. 'in' → logprob: -1.5019984245300293
    3. ' ' → logprob: -10.376997947692871
    4. 's' → logprob: -10.876997947692871
    5. ',' → logprob: -12.251997947692871
    6. '	in' → logprob: -12.251997947692871
    7. ',in' → logprob: -12.501997947692871
    8. 'In' → logprob: -13.876997947692871
    9. '   ' → logprob: -14.126997947692871
    10. 'n' → logprob: -14.251997947692871

Token 467: ' range' (ID: 3352)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.3160303235054016
    2. 'range' → logprob: -1.3160302639007568
    3. ' range' → logprob: -5.941030502319336
    4. ' R' → logprob: -8.941030502319336
    5. 'Range' → logprob: -12.816030502319336
    6. 'r' → logprob: -14.941030502319336
    7. 'rang' → logprob: -15.066030502319336
    8. '   ' → logprob: -15.316030502319336
    9. '(range' → logprob: -15.441030502319336
    10. '	range' → logprob: -15.816030502319336

Token 468: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -5.080963092041202e-06
    2. 'len' → logprob: -12.250004768371582
    3. '(N' → logprob: -16.2500057220459
    4. '(K' → logprob: -16.7500057220459
    5. ' len' → logprob: -17.0000057220459
    6. '(' → logprob: -17.0000057220459
    7. ' (' → logprob: -18.6250057220459
    8. ',len' → logprob: -18.8750057220459
    9. '=len' → logprob: -19.3750057220459
    10. '[len' → logprob: -19.6250057220459

Token 469: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -5.5577775128767826e-06
    2. 'R' → logprob: -12.500005722045898
    3. '(' → logprob: -13.500005722045898
    4. ' (' → logprob: -15.000005722045898
    5. '(
' → logprob: -17.0000057220459
    6. '(L' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.3750057220459
    8. ')' → logprob: -19.1250057220459
    9. ' R' → logprob: -19.7500057220459
    10. '	R' → logprob: -19.7500057220459

Token 470: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06082036718726158
    2. ')):' → logprob: -3.0608203411102295
    3. '):
' → logprob: -4.560820579528809
    4. ')):
' → logprob: -6.560820579528809
    5. ')' → logprob: -9.185820579528809
    6. '))' → logprob: -9.560820579528809
    7. ' ):' → logprob: -9.935820579528809
    8. '):
' → logprob: -9.935820579528809
    9. ')):
' → logprob: -11.310820579528809
    10. ' ' → logprob: -12.810820579528809

Token 471: '   ' (ID: 271)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.23597879707813263
    2. '   ' → logprob: -1.7359788417816162
    3. 's' → logprob: -3.485978841781616
    4. ' if' → logprob: -6.110978603363037
    5. ' ' → logprob: -8.235979080200195
    6. ':' → logprob: -8.610979080200195
    7. '    
' → logprob: -9.235979080200195
    8. ',' → logprob: -9.235979080200195
    9. '	s' → logprob: -9.485979080200195
    10. 'if' → logprob: -9.735979080200195

Token 472: ' #' (ID: 1069)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.007430327124893665
    2. ' s' → logprob: -5.507430553436279
    3. 'd' → logprob: -6.257430553436279
    4. 'if' → logprob: -7.382430553436279
    5. '   ' → logprob: -7.882430553436279
    6. 'x' → logprob: -9.132430076599121
    7. 'r' → logprob: -9.132430076599121
    8. 'k' → logprob: -10.007430076599121
    9. 'm' → logprob: -10.757430076599121
    10. ' d' → logprob: -10.757430076599121

Token 473: ' Initial' (ID: 9209)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2409069687128067
    2. 'if' → logprob: -1.6159069538116455
    3. 'd' → logprob: -4.740907192230225
    4. 'r' → logprob: -6.115907192230225
    5. 'x' → logprob: -6.615907192230225
    6. 'v' → logprob: -7.865907192230225
    7. 'c' → logprob: -8.115906715393066
    8. 'm' → logprob: -8.615906715393066
    9. 'cnt' → logprob: -8.615906715393066
    10. 'for' → logprob: -8.740906715393066

Token 474: 'isation' (ID: 6993)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.2192230224609375
    2. 's' → logprob: -3.2192230224609375
    3. 'ize' → logprob: -3.5942230224609375
    4. 'er' → logprob: -3.7192230224609375
    5. '=' → logprob: -4.0942230224609375
    6. '   ' → logprob: -4.2192230224609375
    7. 'ity' → logprob: -4.7192230224609375
    8. 'iser' → logprob: -4.7192230224609375
    9. '#' → logprob: -4.8442230224609375
    10. 'ization' → logprob: -5.0942230224609375

Token 475: ' des' (ID: 731)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.47739505767822266
    2. 'x' → logprob: -2.7273950576782227
    3. 'total' → logprob: -2.8523950576782227
    4. 'j' → logprob: -3.1023950576782227
    5. '   ' → logprob: -3.8523950576782227
    6. 'sum' → logprob: -3.8523950576782227
    7. 'mod' → logprob: -3.9773950576782227
    8. 'sm' → logprob: -4.227395057678223
    9. 'tmp' → logprob: -4.352395057678223
    10. 'c' → logprob: -4.477395057678223

Token 476: ' variables' (ID: 13955)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6609368324279785
    2. 'ok' → logprob: -1.6609368324279785
    3. 'j' → logprob: -2.7859368324279785
    4. 'count' → logprob: -2.9109368324279785
    5. 'flag' → logprob: -3.0359368324279785
    6. 'valid' → logprob: -3.0359368324279785
    7. 'found' → logprob: -4.0359368324279785
    8. 'cnt' → logprob: -4.1609368324279785
    9. 'mod' → logprob: -5.4109368324279785
    10. 'left' → logprob: -5.4109368324279785

Token 477: ' pour' (ID: 1930)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.477505624294281
    2. ' s' → logprob: -2.477505683898926
    3. 'sum' → logprob: -2.477505683898926
    4. 'x' → logprob: -2.977505683898926
    5. 'total' → logprob: -4.102505683898926
    6. 'j' → logprob: -4.227505683898926
    7. '   ' → logprob: -4.352505683898926
    8. 't' → logprob: -4.727505683898926
    9. 'sm' → logprob: -4.852505683898926
    10. 'tmp' → logprob: -4.852505683898926

Token 478: ' compter' (ID: 81694)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.7818489670753479
    2. 's' → logprob: -1.9068489074707031
    3. 'possible' → logprob: -2.531848907470703
    4. 'flag' → logprob: -2.906848907470703
    5. 'True' → logprob: -2.906848907470703
    6. 'ok' → logprob: -3.031848907470703
    7. 'val' → logprob: -3.406848907470703
    8. 'res' → logprob: -4.156848907470703
    9. 'found' → logprob: -4.156848907470703
    10. 'False' → logprob: -4.531848907470703

Token 479: ' le' (ID: 505)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.303683876991272
    2. 'cnt' → logprob: -1.553683876991272
    3. ' cnt' → logprob: -2.6786837577819824
    4. 'j' → logprob: -2.6786837577819824
    5. 'c' → logprob: -3.0536837577819824
    6. '   ' → logprob: -3.1786837577819824
    7. ' count' → logprob: -3.1786837577819824
    8. ' ok' → logprob: -3.3036837577819824
    9. ' j' → logprob: -3.3036837577819824
    10. 'sum' → logprob: -3.6786837577819824

Token 480: ' nombre' (ID: 9733)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2898911237716675
    2. 'cnt' → logprob: -1.6648911237716675
    3. 'mod' → logprob: -1.9148911237716675
    4. 'ok' → logprob: -2.414891242980957
    5. 'c' → logprob: -2.789891242980957
    6. 's' → logprob: -3.164891242980957
    7. 'acc' → logprob: -4.039891242980957
    8. 'rest' → logprob: -4.039891242980957
    9. 'left' → logprob: -4.164891242980957
    10. 'total' → logprob: -4.664891242980957

Token 481: ' total' (ID: 3609)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6701633334159851
    2. ' de' → logprob: -0.9201633334159851
    3. '=' → logprob: -3.17016339302063
    4. ' =' → logprob: -4.045163154602051
    5. 's' → logprob: -5.670163154602051
    6. 'd' → logprob: -5.920163154602051
    7. 'div' → logprob: -6.045163154602051
    8. '   ' → logprob: -6.045163154602051
    9. '_' → logprob: -6.170163154602051
    10. 'des' → logprob: -6.170163154602051

Token 482: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5446172952651978
    2. ' de' → logprob: -2.294617176055908
    3. '   ' → logprob: -2.294617176055908
    4. 'cnt' → logprob: -3.169617176055908
    5. 'total' → logprob: -3.419617176055908
    6. 'd' → logprob: -3.794617176055908
    7. 'count' → logprob: -4.169617176055908
    8. 's' → logprob: -4.419617176055908
    9. 'c' → logprob: -4.669617176055908
    10. 'val' → logprob: -4.794617176055908

Token 483: ' modifications' (ID: 38756)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.28964635729789734
    2. 'group' → logprob: -2.4146463871002197
    3. 's' → logprob: -3.5396463871002197
    4. 'parts' → logprob: -3.7896463871002197
    5. 'segment' → logprob: -3.7896463871002197
    6. 'groups' → logprob: -4.039646148681641
    7. 'cuts' → logprob: -4.414646148681641
    8. '0' → logprob: -4.789646148681641
    9. 'pieces' → logprob: -5.164646148681641
    10. 'cnt' → logprob: -5.289646148681641

Token 484: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8750954866409302
    2. 'cnt' → logprob: -2.1250953674316406
    3. 's' → logprob: -2.8750953674316406
    4. 'count' → logprob: -3.0000953674316406
    5. 'mod' → logprob: -3.2500953674316406
    6. 'm' → logprob: -3.3750953674316406
    7. 'x' → logprob: -3.5000953674316406
    8. ' s' → logprob: -3.7500953674316406
    9. ',' → logprob: -3.7500953674316406
    10. ' cnt' → logprob: -3.8750953674316406

Token 485: ' "' (ID: 392)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05542920157313347
    2. 's' → logprob: -3.805429220199585
    3. 'R' → logprob: -4.555428981781006
    4. 'i' → logprob: -5.555428981781006
    5. 'K' → logprob: -6.055428981781006
    6. 'div' → logprob: -6.055428981781006
    7. ' ' → logprob: -6.180428981781006
    8. 'True' → logprob: -6.680428981781006
    9. '1' → logprob: -6.930428981781006
    10. 'each' → logprob: -7.055428981781006

Token 486: 'aj' (ID: 1255)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5516493320465088
    2. '0' → logprob: -1.9266493320465088
    3. 'L' → logprob: -2.551649332046509
    4. 'j' → logprob: -2.676649332046509
    5. 'K' → logprob: -3.051649332046509
    6. 'R' → logprob: -3.801649332046509
    7. 'segments' → logprob: -4.55164909362793
    8. 'i' → logprob: -4.80164909362793
    9. 'diff' → logprob: -5.55164909362793
    10. 'val' → logprob: -5.80164909362793

Token 487: 'outer' (ID: 5838)
  Prédit: 'uster'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uster' → logprob: -0.492362916469574
    2. 'outer' → logprob: -1.2423629760742188
    3. 'ust' → logprob: -2.3673629760742188
    4. 'out' → logprob: -5.992362976074219
    5. 'uste' → logprob: -6.492362976074219
    6. ']' → logprob: -7.742362976074219
    7. 'd' → logprob: -8.367362976074219
    8. 'usted' → logprob: -8.617362976074219
    9. '>' → logprob: -8.742362976074219
    10. '`' → logprob: -8.867362976074219

Token 488: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.38532891869544983
    2. ' K' → logprob: -2.510329008102417
    3. ' "' → logprob: -3.010329008102417
    4. 'R' → logprob: -3.260329008102417
    5. 'K' → logprob: -3.260329008102417
    6. 's' → logprob: -3.385329008102417
    7. ' s' → logprob: -4.135328769683838
    8. ' ' → logprob: -4.135328769683838
    9. ' R' → logprob: -4.260328769683838
    10. '1' → logprob: -5.010328769683838

Token 489: ' ou' (ID: 2031)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' K' → logprob: -1.3647528886795044
    2. 'K' → logprob: -1.6147528886795044
    3. ' et' → logprob: -1.9897528886795044
    4. ' and' → logprob: -2.614752769470215
    5. ' s' → logprob: -2.614752769470215
    6. 's' → logprob: -3.114752769470215
    7. 'L' → logprob: -3.239752769470215
    8. '   ' → logprob: -3.239752769470215
    9. ' L' → logprob: -3.364752769470215
    10. 'et' → logprob: -3.614752769470215

Token 490: ' "' (ID: 392)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.734784722328186
    2. 'sup' → logprob: -1.984784722328186
    3. 'ret' → logprob: -2.1097846031188965
    4. ' enlever' → logprob: -2.6097846031188965
    5. 'sou' → logprob: -2.7347846031188965
    6. ' retirer' → logprob: -3.1097846031188965
    7. 'en' → logprob: -3.4847846031188965
    8. '   ' → logprob: -3.6097846031188965
    9. '"' → logprob: -5.2347846031188965
    10. ' supprimer' → logprob: -5.7347846031188965

Token 491: 'ret' (ID: 3431)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sou' → logprob: -0.5358080863952637
    2. ' enlever' → logprob: -2.2858080863952637
    3. 'ret' → logprob: -2.4108080863952637
    4. ' retirer' → logprob: -2.4108080863952637
    5. 'sup' → logprob: -2.9108080863952637
    6. 'en' → logprob: -3.6608080863952637
    7. 'sub' → logprob: -4.285808086395264
    8. '   ' → logprob: -4.410808086395264
    9. 'subtract' → logprob: -4.535808086395264
    10. ' sou' → logprob: -5.535808086395264

Token 492: 'irer' (ID: 85189)
  Prédit: 'irer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irer' → logprob: -0.1459650993347168
    2. 'ra' → logprob: -2.395965099334717
    3. 'r' → logprob: -3.520965099334717
    4. 'rait' → logprob: -4.645965099334717
    5. '```' → logprob: -6.520965099334717
    6. 'tir' → logprob: -7.020965099334717
    7. '#' → logprob: -7.395965099334717
    8. ']' → logprob: -8.520965576171875
    9. ' retirer' → logprob: -8.520965576171875
    10. '
' → logprob: -8.770965576171875

Token 493: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11844579875469208
    2. '1' → logprob: -3.993445873260498
    3. 's' → logprob: -3.993445873260498
    4. ' L' → logprob: -4.118445873260498
    5. ' "' → logprob: -4.368445873260498
    6. ' ' → logprob: -4.868445873260498
    7. 'L' → logprob: -5.368445873260498
    8. ' de' → logprob: -5.368445873260498
    9. 'de' → logprob: -5.368445873260498
    10. ' des' → logprob: -5.743445873260498

Token 494: ' des' (ID: 731)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.4756120443344116
    2. '   ' → logprob: -1.9756120443344116
    3. 's' → logprob: -2.350612163543701
    4. ' L' → logprob: -2.475612163543701
    5. ' s' → logprob: -2.600612163543701
    6. 'total' → logprob: -2.600612163543701
    7. 'diff' → logprob: -2.725612163543701
    8. 'm' → logprob: -3.600612163543701
    9. ' total' → logprob: -3.850612163543701
    10. 'd' → logprob: -4.100612163543701

Token 495: ' éléments' (ID: 57375)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.45879149436950684
    2. 's' → logprob: -2.333791494369507
    3. 'coins' → logprob: -3.083791494369507
    4. ' L' → logprob: -3.333791494369507
    5. 'elements' → logprob: -3.333791494369507
    6. 'points' → logprob: -3.583791494369507
    7. 'R' → logprob: -3.958791494369507
    8. 'diff' → logprob: -4.208791732788086
    9. 'dif' → logprob: -4.458791732788086
    10. 'val' → logprob: -4.958791732788086

Token 496: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.915280282497406
    2. 's' → logprob: -2.165280342102051
    3. 'x' → logprob: -2.415280342102051
    4. 'cnt' → logprob: -2.915280342102051
    5. ',' → logprob: -3.165280342102051
    6. 'mod' → logprob: -3.415280342102051
    7. 'total' → logprob: -3.540280342102051
    8. 'count' → logprob: -3.790280342102051
    9. 'm' → logprob: -3.790280342102051
    10. '=' → logprob: -3.915280342102051

Token 497: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29245394468307495
    2. 'add' → logprob: -2.2924540042877197
    3. 'plus' → logprob: -4.167453765869141
    4. ' add' → logprob: -4.292453765869141
    5. 'total' → logprob: -4.542453765869141
    6. ' ' → logprob: -4.792453765869141
    7. 'mod' → logprob: -4.792453765869141
    8. 's' → logprob: -4.917453765869141
    9. 'needed' → logprob: -4.917453765869141
    10. ' plus' → logprob: -5.417453765869141

Token 498: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -1.3430681228637695
    2. 'count' → logprob: -1.9680681228637695
    3. 'cnt' → logprob: -2.2180681228637695
    4. 'x' → logprob: -2.3430681228637695
    5. 'ok' → logprob: -3.0930681228637695
    6. 's' → logprob: -3.2180681228637695
    7. 'plus' → logprob: -3.4680681228637695
    8. 'total' → logprob: -3.4680681228637695
    9. 'left' → logprob: -3.7180681228637695
    10. 'c' → logprob: -3.9680681228637695

Token 499: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10378420352935791
    2. ',' → logprob: -2.4787840843200684
    3. ' =' → logprob: -4.478784084320068
    4. ',total' → logprob: -7.353784084320068
    5. ',count' → logprob: -7.478784084320068
    6. 'ed' → logprob: -7.478784084320068
    7. '=sum' → logprob: -7.853784084320068
    8. 's' → logprob: -8.353784561157227
    9. ' ,' → logprob: -8.603784561157227
    10. '=count' → logprob: -8.603784561157227

Token 500: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020115631923545152
    2. 'remove' → logprob: -9.000201225280762
    3. 'rem' → logprob: -10.250201225280762
    4. 'sub' → logprob: -11.375201225280762
    5. ' ' → logprob: -11.625201225280762
    6. '[' → logprob: -12.375201225280762
    7. 'ret' → logprob: -12.750201225280762
    8. '[]' → logprob: -13.000201225280762
    9. 'subtract' → logprob: -13.000201225280762
    10. 'sum' → logprob: -13.125201225280762

Token 501: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012724130414426327
    2. '	remove' → logprob: -6.137723922729492
    3. 'remove' → logprob: -6.387723922729492
    4. '	sub' → logprob: -6.762723922729492
    5. ' remove' → logprob: -6.762723922729492
    6. ',' → logprob: -6.887723922729492
    7. '	diff' → logprob: -6.887723922729492
    8. 'rem' → logprob: -7.262723922729492
    9. 'subtract' → logprob: -7.387723922729492
    10. ' for' → logprob: -7.887723922729492

Token 502: ' #' (ID: 1069)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.7633987069129944
    2. 'remove' → logprob: -1.6383986473083496
    3. '
' → logprob: -2.0133986473083496
    4. 'rem' → logprob: -2.5133986473083496
    5. 'diff' → logprob: -3.3883986473083496
    6. ' remove' → logprob: -3.8883986473083496
    7. ' sub' → logprob: -4.51339864730835
    8. '   ' → logprob: -4.63839864730835
    9. 'subtract' → logprob: -4.88839864730835
    10. '	sub' → logprob: -5.13839864730835

Token 503: ' Comp' (ID: 5211)
  Prédit: ' remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remove' → logprob: -0.5839139819145203
    2. 'remove' → logprob: -1.583914041519165
    3. ' sub' → logprob: -2.583914041519165
    4. 'sub' → logprob: -3.208914041519165
    5. 'rem' → logprob: -3.458914041519165
    6. ' rem' → logprob: -4.208913803100586
    7. 'diff' → logprob: -4.958913803100586
    8. ' mod' → logprob: -5.208913803100586
    9. 'mod' → logprob: -5.583913803100586
    10. ' diff' → logprob: -5.583913803100586

Token 504: 'te' (ID: 411)
  Prédit: 'teur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'teur' → logprob: -0.6231276988983154
    2. 'te' → logprob: -1.6231276988983154
    3. 'let' → logprob: -1.8731276988983154
    4. 't' → logprob: -2.8731276988983154
    5. 'lete' → logprob: -4.1231279373168945
    6. 'sum' → logprob: -4.8731279373168945
    7. 'le' → logprob: -4.8731279373168945
    8. 'for' → logprob: -4.9981279373168945
    9. '=' → logprob: -6.2481279373168945
    10. 'ter' → logprob: -6.3731279373168945

Token 505: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2997920513153076
    2. ')' → logprob: -2.0497920513153076
    3. 'for' → logprob: -2.5497920513153076
    4. '<|end|>' → logprob: -2.6747920513153076
    5. ' des' → logprob: -2.7997920513153076
    6. 'remove' → logprob: -2.9247920513153076
    7. 'total' → logprob: -2.9247920513153076
    8. ' for' → logprob: -3.1747920513153076
    9. 'le' → logprob: -3.9247920513153076
    10. '=' → logprob: -3.9247920513153076

Token 506: ' nombre' (ID: 9733)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32958224415779114
    2. ' K' → logprob: -2.4545822143554688
    3. 'sum' → logprob: -2.8295822143554688
    4. 'K' → logprob: -3.0795822143554688
    5. ' ' → logprob: -3.5795822143554688
    6. '1' → logprob: -3.9545822143554688
    7. 'abs' → logprob: -5.204582214355469
    8. 's' → logprob: -5.204582214355469
    9. '"' → logprob: -5.454582214355469
    10. 'total' → logprob: -5.704582214355469

Token 507: ' total' (ID: 3609)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -1.0849123001098633
    2. ' de' → logprob: -1.3349123001098633
    3. 'des' → logprob: -2.5849123001098633
    4. ' des' → logprob: -2.8349123001098633
    5. '<|end|>' → logprob: -2.9599123001098633
    6. 'd' → logprob: -3.3349123001098633
    7. '   ' → logprob: -3.4599123001098633
    8. '=' → logprob: -3.8349123001098633
    9. 'total' → logprob: -3.8349123001098633
    10. ' =' → logprob: -4.084912300109863

Token 508: ' à' (ID: 1221)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.9053136110305786
    2. 'remove' → logprob: -2.155313491821289
    3. ' de' → logprob: -2.280313491821289
    4. '<|end|>' → logprob: -2.280313491821289
    5. 'des' → logprob: -2.905313491821289
    6. 'd' → logprob: -3.530313491821289
    7. 'mod' → logprob: -3.530313491821289
    8. '   ' → logprob: -3.655313491821289
    9. ' d' → logprob: -3.905313491821289
    10. ' des' → logprob: -4.155313491821289

Token 509: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.6187575459480286
    2. '0' → logprob: -1.2437574863433838
    3. '+' → logprob: -2.368757486343384
    4. '+=' → logprob: -3.618757486343384
    5. ' ' → logprob: -4.243757724761963
    6. ' +=' → logprob: -4.868757724761963
    7. 'add' → logprob: -4.993757724761963
    8. ' ajouter' → logprob: -5.243757724761963
    9. 'plus' → logprob: -5.743757724761963
    10. ''aj' → logprob: -5.993757724761963

Token 510: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5082460641860962
    2. 'remove' → logprob: -1.3832460641860962
    3. 'subtract' → logprob: -3.2582459449768066
    4. 'sub' → logprob: -3.3832459449768066
    5. ' remove' → logprob: -3.5082459449768066
    6. '<|end|>' → logprob: -3.6332459449768066
    7. ')' → logprob: -5.633245944976807
    8. '	remove' → logprob: -5.633245944976807
    9. ',' → logprob: -6.633245944976807
    10. ' subtract' → logprob: -6.758245944976807

Token 511: ' que' (ID: 661)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16131438314914703
    2. ')' → logprob: -2.7863144874572754
    3. ' ' → logprob: -4.411314487457275
    4. 'L' → logprob: -4.786314487457275
    5. 'aj' → logprob: -4.786314487457275
    6. '=' → logprob: -5.036314487457275
    7. ' L' → logprob: -5.036314487457275
    8. 's' → logprob: -5.286314487457275
    9. 'range' → logprob: -5.536314487457275
    10. 'diff' → logprob: -5.661314487457275

Token 512: ' les' (ID: 1341)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5294854044914246
    2. ' L' → logprob: -1.9044854640960693
    3. 'i' → logprob: -2.6544854640960693
    4. 'add' → logprob: -3.2794854640960693
    5. 'R' → logprob: -3.5294854640960693
    6. ' i' → logprob: -3.6544854640960693
    7. ' add' → logprob: -3.7794854640960693
    8. 'aj' → logprob: -4.40448522567749
    9. ' R' → logprob: -4.77948522567749
    10. '0' → logprob: -4.77948522567749

Token 513: ' éléments' (ID: 57375)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.7592045664787292
    2. 'i' → logprob: -2.009204626083374
    3. 'élé' → logprob: -2.009204626083374
    4. 'mod' → logprob: -2.384204626083374
    5. 'aj' → logprob: -3.009204626083374
    6. 'diff' → logprob: -4.134204387664795
    7. 'K' → logprob: -4.259204387664795
    8. 's' → logprob: -4.259204387664795
    9. 'elements' → logprob: -4.509204387664795
    10. 'div' → logprob: -4.509204387664795

Token 514: ' deviennent' (ID: 165279)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5181424021720886
    2. ' %' → logprob: -1.3931424617767334
    3. ' soient' → logprob: -2.7681424617767334
    4. ' mod' → logprob: -4.143142223358154
    5. '[i' → logprob: -4.268142223358154
    6. ' de' → logprob: -4.518142223358154
    7. ' puissent' → logprob: -5.143142223358154
    8. ' s' → logprob: -5.268142223358154
    9. '   ' → logprob: -5.768142223358154
    10. 's' → logprob: -5.893142223358154

Token 515: ' multiples' (ID: 70720)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.12658774852752686
    2. 'multip' → logprob: -2.2515878677368164
    3. ' multiples' → logprob: -4.876587867736816
    4. 'K' → logprob: -6.626587867736816
    5. ' divisible' → logprob: -6.626587867736816
    6. ' divis' → logprob: -7.126587867736816
    7. '0' → logprob: -7.376587867736816
    8. 'multiple' → logprob: -7.751587867736816
    9. ' K' → logprob: -8.376587867736816
    10. 'exact' → logprob: -8.626587867736816

Token 516: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.3259354531764984
    2. ' de' → logprob: -1.8259354829788208
    3. ' of' → logprob: -3.4509353637695312
    4. '   ' → logprob: -3.5759353637695312
    5. 'of' → logprob: -4.700935363769531
    6. ' =' → logprob: -4.700935363769531
    7. '=' → logprob: -5.075935363769531
    8. 'des' → logprob: -5.200935363769531
    9. '<|end|>' → logprob: -5.200935363769531
    10. 's' → logprob: -5.950935363769531

Token 517: ' s' (ID: 265)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0030435470398515463
    2. ' R' → logprob: -6.0030436515808105
    3. 's' → logprob: -8.128043174743652
    4. 'K' → logprob: -8.253043174743652
    5. '   ' → logprob: -12.253043174743652
    6. 'i' → logprob: -12.878043174743652
    7. ' ' → logprob: -13.378043174743652
    8. ' s' → logprob: -14.003043174743652
    9. ' K' → logprob: -14.378043174743652
    10. '       ' → logprob: -15.253043174743652

Token 518: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08723457902669907
    2. 'sub' → logprob: -3.2122344970703125
    3. 'remove' → logprob: -3.7122344970703125
    4. 'rem' → logprob: -4.4622344970703125
    5. '	sub' → logprob: -6.0872344970703125
    6. '	remove' → logprob: -6.0872344970703125
    7. 'subtract' → logprob: -7.2122344970703125
    8. ' remove' → logprob: -7.7122344970703125
    9. 'mod' → logprob: -8.462234497070312
    10. 'diff' → logprob: -8.712234497070312

Token 519: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07988575100898743
    2. 'remove' → logprob: -3.704885721206665
    3. 'sub' → logprob: -4.329885959625244
    4. 'subtract' → logprob: -4.329885959625244
    5. ' remove' → logprob: -4.954885959625244
    6. ' ' → logprob: -5.079885959625244
    7. ' sub' → logprob: -5.954885959625244
    8. '	sub' → logprob: -5.954885959625244
    9. '	remove' → logprob: -6.204885959625244
    10. '  ' → logprob: -6.454885959625244

Token 520: ' minus' (ID: 40335)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.8308142423629761
    2. 'rem' → logprob: -1.080814242362976
    3. 'sub' → logprob: -1.580814242362976
    4. 'diff' → logprob: -5.330814361572266
    5. 'mod' → logprob: -5.580814361572266
    6. 'subtract' → logprob: -5.955814361572266
    7. 'for' → logprob: -6.455814361572266
    8. '   ' → logprob: -6.705814361572266
    9. 'rm' → logprob: -6.830814361572266
    10. 'minus' (adapté à ' minus') → logprob: -7.830814361572266

Token 521: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.0126840758603066e-05
    2. ' =' → logprob: -10.125040054321289
    3. '0' → logprob: -18.62504005432129
    4. '＝' → logprob: -18.75004005432129
    5. '=int' → logprob: -18.87504005432129
    6. '=-' → logprob: -19.12504005432129
    7. ',' → logprob: -19.37504005432129
    8. '=s' → logprob: -20.37504005432129
    9. '=

' → logprob: -20.50004005432129
    10. ' ' → logprob: -20.50004005432129

Token 522: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.750003814697266
    3. 'a' → logprob: -14.875003814697266
    4. 'K' → logprob: -15.875003814697266
    5. 's' → logprob: -17.125003814697266
    6. '1' → logprob: -17.375003814697266
    7. '[' → logprob: -17.375003814697266
    8. 'N' → logprob: -17.937503814697266
    9. '۰' → logprob: -18.000003814697266
    10. 'add' → logprob: -18.187503814697266

Token 523: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08041433244943619
    2. '   ' → logprob: -2.955414295196533
    3. '  ' → logprob: -3.955414295196533
    4. ' #' → logprob: -5.830414295196533
    5. '#' → logprob: -6.955414295196533
    6. '  
' → logprob: -7.330414295196533
    7. '
' → logprob: -7.580414295196533
    8. '<|end|>' → logprob: -8.080414772033691
    9. ' ' → logprob: -8.705414772033691
    10. '    ' → logprob: -9.080414772033691

Token 524: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6661839485168457
    2. ' #' → logprob: -1.0411839485168457
    3. '#' → logprob: -2.1661839485168457
    4. '   ' → logprob: -4.541183948516846
    5. '  ' → logprob: -5.166183948516846
    6. ' for' → logprob: -6.916183948516846
    7. 'for' → logprob: -7.791183948516846
    8. '<|end|>' → logprob: -7.916183948516846
    9. ' =' → logprob: -9.166183471679688
    10. '
' → logprob: -9.166183471679688

Token 525: ' Comp' (ID: 5211)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7831162810325623
    2. ' ' → logprob: -0.7831162810325623
    3. ' Comp' → logprob: -3.158116340637207
    4. '#' → logprob: -4.158116340637207
    5. 'Comp' → logprob: -4.283116340637207
    6. 'Compte' → logprob: -5.033116340637207
    7. '1' → logprob: -6.033116340637207
    8. ' #' → logprob: -6.158116340637207
    9. ' ' → logprob: -6.658116340637207
    10. '  ' → logprob: -7.158116340637207

Token 526: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.003224890911951661
    2. 't' → logprob: -6.503224849700928
    3. 'e' → logprob: -7.128224849700928
    4. 'ute' → logprob: -7.378224849700928
    5. '=' → logprob: -8.503225326538086
    6. 'teur' → logprob: -11.003225326538086
    7. 'ote' → logprob: -11.503225326538086
    8. 'ete' → logprob: -11.628225326538086
    9. '+=' → logprob: -11.753225326538086
    10. '#' → logprob: -11.878225326538086

Token 527: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.001186299603432417
    2. 'le' → logprob: -6.876186370849609
    3. '(' → logprob: -9.00118637084961
    4. '(le' → logprob: -11.75118637084961
    5. ' la' → logprob: -12.37618637084961
    6. ' ' → logprob: -12.50118637084961
    7. '_le' → logprob: -12.62618637084961
    8. ' ' → logprob: -12.87618637084961
    9. '(len' → logprob: -13.25118637084961
    10. '=' → logprob: -13.62618637084961

Token 528: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.25701242685317993
    2. 'nombre' → logprob: -1.5070123672485352
    3. ' number' → logprob: -5.882012367248535
    4. 'number' → logprob: -6.132012367248535
    5. ' ' → logprob: -10.132012367248535
    6. 'plus' → logprob: -10.507012367248535
    7. ' nombres' → logprob: -11.882012367248535
    8. ' ' → logprob: -12.257012367248535
    9. ' plus' → logprob: -12.507012367248535
    10. '+' → logprob: -12.632012367248535

Token 529: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.43226006627082825
    2. ' total' → logprob: -1.0572600364685059
    3. ' de' → logprob: -6.307260036468506
    4. '_total' → logprob: -7.432260036468506
    5. 'de' → logprob: -7.932260036468506
    6. ' à' → logprob: -8.307260513305664
    7. '	total' → logprob: -8.682260513305664
    8. '(total' → logprob: -9.682260513305664
    9. 'à' → logprob: -9.807260513305664
    10. '   ' → logprob: -10.057260513305664

Token 530: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.012748487293720245
    2. 'à' → logprob: -5.137748718261719
    3. ' ' → logprob: -5.387748718261719
    4. ' ' → logprob: -6.887748718261719
    5. ' to' → logprob: -8.387748718261719
    6. '   ' → logprob: -8.512748718261719
    7. 'd' → logprob: -9.012748718261719
    8. ' de' → logprob: -9.262748718261719
    9. 'a' → logprob: -9.387748718261719
    10. ' d' → logprob: -9.387748718261719

Token 531: ' enlever' (ID: 196982)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.06384995579719543
    2. 'add' → logprob: -4.188849925994873
    3. 's' → logprob: -4.938849925994873
    4. '1' → logprob: -4.938849925994873
    5. 'min' → logprob: -5.438849925994873
    6. 'L' → logprob: -5.563849925994873
    7. '(abs' → logprob: -5.688849925994873
    8. 'plus' → logprob: -5.813849925994873
    9. ' abs' → logprob: -6.063849925994873
    10. 'R' → logprob: -6.313849925994873

Token 532: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009807324968278408
    2. ' for' → logprob: -5.134807109832764
    3. '<|end|>' → logprob: -6.509807109832764
    4. 'for' → logprob: -6.884807109832764
    5. ' ' → logprob: -7.259807109832764
    6. '  ' → logprob: -7.759807109832764
    7. '<|end|>' → logprob: -9.634807586669922
    8. '    ' → logprob: -10.259807586669922
    9. '	for' → logprob: -10.509807586669922
    10. ',' → logprob: -10.884807586669922

Token 533: ' arriver' (ID: 78302)
  Prédit: ' rendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rendre' → logprob: -0.8248037099838257
    2. ' s' → logprob: -1.5748037099838257
    3. ' que' → logprob: -1.6998037099838257
    4. 's' → logprob: -2.9498038291931152
    5. 'que' → logprob: -3.3248038291931152
    6. '0' → logprob: -4.074803829193115
    7. ' L' → logprob: -4.199803829193115
    8. 'faire' → logprob: -4.574803829193115
    9. ' faire' → logprob: -4.949803829193115
    10. ' ' → logprob: -5.199803829193115

Token 534: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.04270613566040993
    2. 'à' → logprob: -3.667706251144409
    3. ' au' → logprob: -4.79270601272583
    4. 'au' → logprob: -5.91770601272583
    5. 's' → logprob: -6.16770601272583
    6. ' ' → logprob: -7.04270601272583
    7. ' aux' → logprob: -7.04270601272583
    8. ' a' → logprob: -7.66770601272583
    9. ' s' → logprob: -7.66770601272583
    10. 'a' → logprob: -8.417706489562988

Token 535: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003724303562194109
    2. 's' → logprob: -6.128724098205566
    3. 'un' → logprob: -7.878724098205566
    4. ' ' → logprob: -8.128724098205566
    5. 'div' → logprob: -8.128724098205566
    6. 'mult' → logprob: -9.253724098205566
    7. 'multiple' → logprob: -9.253724098205566
    8. 'multip' → logprob: -9.378724098205566
    9. ' un' → logprob: -9.753724098205566
    10. ' s' → logprob: -10.378724098205566

Token 536: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.021624507382512093
    2. ' multiple' → logprob: -3.8966245651245117
    3. 'multip' → logprob: -7.271624565124512
    4. 'mult' → logprob: -9.021624565124512
    5. 'élé' → logprob: -9.146624565124512
    6. 'm' → logprob: -10.021624565124512
    7. 'nombre' → logprob: -10.646624565124512
    8. 's' → logprob: -10.896624565124512
    9. '#' → logprob: -11.271624565124512
    10. '```' → logprob: -11.771624565124512

Token 537: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.49711158871650696
    2. ' de' → logprob: -1.3721115589141846
    3. '   ' → logprob: -2.8721115589141846
    4. 's' → logprob: -3.2471115589141846
    5. 'of' → logprob: -3.8721115589141846
    6. '(s' → logprob: -4.247111797332764
    7. '=' → logprob: -5.872111797332764
    8. ' of' → logprob: -5.997111797332764
    9. ' ' → logprob: -7.872111797332764
    10. ' =' → logprob: -7.872111797332764

Token 538: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0004306692280806601
    2. ' s' → logprob: -7.750430583953857
    3. 'R' → logprob: -18.250431060791016
    4. 'K' → logprob: -19.625431060791016
    5. '`s' → logprob: -19.625431060791016
    6. 'a' → logprob: -19.750431060791016
    7. ' ' → logprob: -20.000431060791016
    8. '```' → logprob: -20.375431060791016
    9. ' ' → logprob: -20.500431060791016
    10. 'S' → logprob: -21.000431060791016

Token 539: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.29593855142593384
    2. '<|end|>' → logprob: -1.420938491821289
    3. '
' → logprob: -5.170938491821289
    4. '<|end|>' → logprob: -6.170938491821289
    5. ')' → logprob: -6.795938491821289
    6. ':' → logprob: -6.920938491821289
    7. ' for' → logprob: -6.920938491821289
    8. ' ' → logprob: -7.045938491821289
    9. '  ' → logprob: -7.170938491821289
    10. 'for' → logprob: -7.170938491821289

Token 540: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005707867676392198
    2. '<|end|>' → logprob: -7.875570774078369
    3. ' for' → logprob: -9.250571250915527
    4. ',' → logprob: -10.750571250915527
    5. ')' → logprob: -11.375571250915527
    6. '  ' → logprob: -11.500571250915527
    7. '    
' → logprob: -11.750571250915527
    8. 'for' → logprob: -11.750571250915527
    9. ' s' → logprob: -12.000571250915527
    10. 's' → logprob: -12.125571250915527

Token 541: ' s' (ID: 265)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1056356132030487
    2. 's' (adapté à ' s') → logprob: -2.355635643005371
    3. '   ' → logprob: -6.105635643005371
    4. ' for' → logprob: -6.480635643005371
    5. 'j' → logprob: -6.605635643005371
    6. 'mod' → logprob: -9.480635643005371
    7. 'valid' → logprob: -9.730635643005371
    8. '#' → logprob: -9.855635643005371
    9. ' s' → logprob: -11.105635643005371
    10. '	for' → logprob: -11.230635643005371

Token 542: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519342601299286
    2. ' =' → logprob: -1.501934289932251
    3. '=s' → logprob: -12.501934051513672
    4. '=S' → logprob: -14.251934051513672
    5. '=

' → logprob: -15.501934051513672
    6. '＝' → logprob: -15.751934051513672
    7. '=int' → logprob: -16.001934051513672
    8. ' ' → logprob: -16.126934051513672
    9. '=D' → logprob: -16.501934051513672
    10. '   ' → logprob: -16.626934051513672

Token 543: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0004306692280806601
    2. ' R' → logprob: -7.750430583953857
    3. '	R' → logprob: -19.375431060791016
    4. '   ' → logprob: -20.625431060791016
    5. '(R' → logprob: -21.875431060791016
    6. 'Ｒ' → logprob: -22.500431060791016
    7. '[R' → logprob: -23.125431060791016
    8. ' ' → logprob: -23.500431060791016
    9. '<R' → logprob: -23.750431060791016
    10. '_R' → logprob: -23.750431060791016

Token 544: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. 'i' → logprob: -16.5
    4. ' [' → logprob: -17.125
    5. '[I' → logprob: -17.125
    6. '```' → logprob: -19.0
    7. '\[' → logprob: -19.125
    8. '   ' → logprob: -19.375
    9. '[
' → logprob: -19.625
    10. '][' → logprob: -19.625

Token 545: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002527745207771659
    2. ')' → logprob: -6.377527713775635
    3. '])' → logprob: -7.377527713775635
    4. ')]' → logprob: -9.127528190612793
    5. ']
' → logprob: -9.502528190612793
    6. ' ]' → logprob: -11.502528190612793
    7. '   ' → logprob: -12.502528190612793
    8. ' )' → logprob: -14.877528190612793
    9. ']

' → logprob: -14.877528190612793
    10. '])]' → logprob: -14.877528190612793

Token 546: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0008376232581213117
    2. '
' → logprob: -7.625837802886963
    3. '    
' → logprob: -8.750837326049805
    4. 'mod' → logprob: -9.125837326049805
    5. '#' → logprob: -10.875837326049805
    6. 'm' → logprob: -11.500837326049805
    7. '```' → logprob: -11.500837326049805
    8. 'total' → logprob: -12.000837326049805
    9. '  
' → logprob: -12.375837326049805
    10. '  ' → logprob: -12.375837326049805

Token 547: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9710621237754822
    2. 'for' → logprob: -1.346062183380127
    3. 'mod' → logprob: -1.971062183380127
    4. '
' → logprob: -2.846062183380127
    5. 'ok' → logprob: -3.596062183380127
    6. 'flag' → logprob: -3.596062183380127
    7. '#' → logprob: -3.971062183380127
    8. 'temp' → logprob: -4.346062183380127
    9. 'cnt' → logprob: -4.346062183380127
    10. 'm' → logprob: -4.471062183380127

Token 548: ' Le' (ID: 2018)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.10376378148794174
    2. 'for' → logprob: -2.3537638187408447
    3. '#' → logprob: -6.103763580322266
    4. ' for' → logprob: -7.603763580322266
    5. '0' → logprob: -8.228763580322266
    6. ' s' → logprob: -8.603763580322266
    7. 'True' → logprob: -8.978763580322266
    8. 'S' → logprob: -9.853763580322266
    9. 'pass' → logprob: -10.228763580322266
    10. 'div' → logprob: -10.478763580322266

Token 549: ' div' (ID: 4223)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6969809532165527
    2. ' s' → logprob: -0.6969809532165527
    3. 'div' → logprob: -5.696980953216553
    4. ' div' → logprob: -7.821980953216553
    5. ' divisor' → logprob: -10.446981430053711
    6. '_s' → logprob: -12.071981430053711
    7. 'd' → logprob: -12.446981430053711
    8. ' multiple' → logprob: -12.696981430053711
    9. ' divisible' → logprob: -12.946981430053711
    10. 'mod' → logprob: -13.196981430053711

Token 550: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0007441143970936537
    2. 'isor' → logprob: -7.875744342803955
    3. 'ise' → logprob: -9.000743865966797
    4. 's' → logprob: -9.375743865966797
    5. 'iser' → logprob: -10.250743865966797
    6. 'vise' → logprob: -10.375743865966797
    7. 'isateur' → logprob: -10.500743865966797
    8. 'isseur' → logprob: -10.750743865966797
    9. 'is' → logprob: -11.625743865966797
    10. '=' → logprob: -11.875743865966797

Token 551: ' courant' (ID: 74694)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49018964171409607
    2. 'for' → logprob: -2.365189552307129
    3. '=' → logprob: -2.490189552307129
    4. 'ok' → logprob: -3.615189552307129
    5. '<|end|>' → logprob: -3.740189552307129
    6. '   ' → logprob: -3.865189552307129
    7. 'div' → logprob: -3.990189552307129
    8. ' =' → logprob: -4.240189552307129
    9. 's' → logprob: -4.490189552307129
    10. ' is' → logprob: -4.740189552307129

Token 552: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01393712405115366
    2. '
' → logprob: -4.638936996459961
    3. '    
' → logprob: -6.263936996459961
    4. 'total' → logprob: -7.513936996459961
    5. ',' → logprob: -7.888936996459961
    6. '#' → logprob: -8.513936996459961
    7. 'mod' → logprob: -8.638936996459961
    8. 'sum' → logprob: -8.888936996459961
    9. 'm' → logprob: -9.013936996459961
    10. 'a' → logprob: -9.513936996459961

Token 553: ' traiter' (ID: 105852)
  Prédit: 'tester'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tester' → logprob: -0.02070946805179119
    2. 'v' → logprob: -4.52070951461792
    3. 'test' → logprob: -5.89570951461792
    4. ' tester' → logprob: -6.27070951461792
    5. 'trait' → logprob: -6.39570951461792
    6. 'div' → logprob: -7.52070951461792
    7. 'R' → logprob: -7.89570951461792
    8. 'exam' → logprob: -7.89570951461792
    9. 's' → logprob: -8.145709037780762
    10. 'tr' → logprob: -8.145709037780762

Token 554: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005572011577896774
    2. 'for' → logprob: -9.125556945800781
    3. '    
' → logprob: -9.250556945800781
    4. '```' → logprob: -9.625556945800781
    5. '
' → logprob: -9.750556945800781
    6. '<|end|>' → logprob: -9.875556945800781
    7. 'total' → logprob: -10.125556945800781
    8. 'mod' → logprob: -10.250556945800781
    9. ' for' → logprob: -10.750556945800781
    10. ',' → logprob: -11.375556945800781

Token 555: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015102163888514042
    2. 'for' → logprob: -7.001510143280029
    3. 'mod' → logprob: -8.126510620117188
    4. ' for' → logprob: -8.626510620117188
    5. '```' → logprob: -11.001510620117188
    6. '    
' → logprob: -11.251510620117188
    7. 'sum' → logprob: -11.376510620117188
    8. 'j' → logprob: -11.751510620117188
    9. 'count' → logprob: -11.751510620117188
    10. 'm' → logprob: -11.876510620117188

Token 556: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5189165472984314
    2. 'ok' → logprob: -1.5189166069030762
    3. 'mod' → logprob: -2.518916606903076
    4. 'flag' → logprob: -3.268916606903076
    5. 'tmp' → logprob: -4.393916606903076
    6. 'temp' → logprob: -4.643916606903076
    7. 'valid' → logprob: -4.893916606903076
    8. 'cnt' → logprob: -4.893916606903076
    9. 'diff' → logprob: -5.768916606903076
    10. 'rem' → logprob: -5.893916606903076

Token 557: ' Cré' (ID: 109203)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0751660093665123
    2. 'mod' → logprob: -3.0751659870147705
    3. 'flag' → logprob: -4.57516622543335
    4. 'ok' → logprob: -5.07516622543335
    5. 'if' → logprob: -6.07516622543335
    6. 'm' → logprob: -6.70016622543335
    7. 'tmp' → logprob: -6.95016622543335
    8. 'r' → logprob: -7.20016622543335
    9. 'res' → logprob: -7.57516622543335
    10. 'temp' → logprob: -7.70016622543335

Token 558: 'ation' (ID: 387)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6683028340339661
    2. 'ation' → logprob: -1.0433027744293213
    3. 'er' → logprob: -2.4183027744293213
    4. 'tion' → logprob: -4.1683030128479
    5. '#' → logprob: -4.5433030128479
    6. 'ption' → logprob: -4.7933030128479
    7. 'vation' → logprob: -6.4183030128479
    8. 'mentation' → logprob: -6.5433030128479
    9. '```' → logprob: -6.6683030128479
    10. 'd' → logprob: -6.7933030128479

Token 559: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5918341875076294
    2. ' d' → logprob: -1.8418341875076294
    3. 'of' → logprob: -2.59183406829834
    4. ' of' → logprob: -2.96683406829834
    5. 'diff' → logprob: -3.46683406829834
    6. 'de' → logprob: -3.71683406829834
    7. '   ' → logprob: -3.71683406829834
    8. 'mod' → logprob: -4.21683406829834
    9. 'for' → logprob: -4.71683406829834
    10. 'dp' → logprob: -4.96683406829834

Token 560: ' deux' (ID: 10301)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -1.7633002996444702
    2. 'ok' → logprob: -1.8883002996444702
    3. 'mod' → logprob: -2.1383004188537598
    4. 'tmp' → logprob: -2.1383004188537598
    5. '0' → logprob: -2.2633004188537598
    6. 'True' → logprob: -2.7633004188537598
    7. 'temp' → logprob: -3.0133004188537598
    8. 'count' → logprob: -3.6383004188537598
    9. 'flag' → logprob: -3.7633004188537598
    10. 'diff' → logprob: -3.7633004188537598

Token 561: ' listes' (ID: 179198)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.09998881071805954
    2. 'c' → logprob: -2.5999886989593506
    3. 'variables' → logprob: -5.34998893737793
    4. 'lists' → logprob: -5.72498893737793
    5. 'acc' → logprob: -6.22498893737793
    6. 'sum' → logprob: -6.22498893737793
    7. 'list' → logprob: -7.09998893737793
    8. 's' → logprob: -7.09998893737793
    9. 'j' → logprob: -7.22498893737793
    10. 'cum' → logprob: -7.47498893737793

Token 562: ' v' (ID: 323)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.49541160464286804
    2. 'add' → logprob: -1.1204116344451904
    3. ',' → logprob: -4.120411396026611
    4. 'mod' → logprob: -4.495411396026611
    5. ' mod' → logprob: -5.495411396026611
    6. ' pour' → logprob: -5.620411396026611
    7. 'diff' → logprob: -6.245411396026611
    8. 'a' → logprob: -6.370411396026611
    9. 'up' → logprob: -6.620411396026611
    10. ' for' → logprob: -6.620411396026611

Token 563: 'ides' (ID: 4105)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39326080679893494
    2. '=' → logprob: -2.3932607173919678
    3. '_add' → logprob: -2.5182607173919678
    4. 'add' → logprob: -3.1432607173919678
    5. ',' → logprob: -3.8932607173919678
    6. 'for' → logprob: -4.143260955810547
    7. '1' → logprob: -4.143260955810547
    8. '=[]' → logprob: -4.768260955810547
    9. 'al' → logprob: -4.893260955810547
    10. ',v' → logprob: -5.018260955810547

Token 564: ' pour' (ID: 1930)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5841149091720581
    2. ',' → logprob: -1.084114909172058
    3. ' add' → logprob: -3.3341150283813477
    4. ' pour' → logprob: -3.7091150283813477
    5. '   ' → logprob: -3.8341150283813477
    6. ' ,' → logprob: -5.334115028381348
    7. 'for' → logprob: -5.834115028381348
    8. '[' → logprob: -5.959115028381348
    9. ' for' → logprob: -6.209115028381348
    10. 'pour' → logprob: -6.334115028381348

Token 565: ' stock' (ID: 6546)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3677409291267395
    2. 'aj' → logprob: -2.1177408695220947
    3. 'v' → logprob: -2.6177408695220947
    4. 'stock' → logprob: -2.6177408695220947
    5. 'plus' → logprob: -4.492741107940674
    6. 'collect' → logprob: -4.867741107940674
    7. 'les' → logprob: -4.867741107940674
    8. 'store' → logprob: -5.992741107940674
    9. ' stock' → logprob: -6.367741107940674
    10. '[]' → logprob: -6.617741107940674

Token 566: 'er' (ID: 259)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.9165726900100708
    2. 'er' → logprob: -1.0415726900100708
    3. '(' → logprob: -2.1665725708007812
    4. '([],' → logprob: -3.0415725708007812
    5. '(),' → logprob: -3.2915725708007812
    6. '=' → logprob: -5.041572570800781
    7. 'e' → logprob: -5.416572570800781
    8. '([' → logprob: -5.416572570800781
    9. 'des' → logprob: -5.666572570800781
    10. '[]' → logprob: -5.791572570800781

Token 567: ' les' (ID: 1341)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.29471853375434875
    2. 'les' → logprob: -2.1697185039520264
    3. 'plus' → logprob: -3.1697185039520264
    4. 'aj' → logprob: -3.7947185039520264
    5. '[]' → logprob: -3.9197185039520264
    6. ' les' → logprob: -4.7947187423706055
    7. ' add' → logprob: -4.7947187423706055
    8. 'diff' → logprob: -5.0447187423706055
    9. 'v' → logprob: -5.1697187423706055
    10. 'dif' → logprob: -5.9197187423706055

Token 568: ' opérations' (ID: 102793)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.1476068496704102
    2. 'add' → logprob: -1.7726068496704102
    3. 'plus' → logprob: -1.8976068496704102
    4. 'aj' → logprob: -2.27260684967041
    5. 'mod' → logprob: -2.64760684967041
    6. 'dif' → logprob: -2.77260684967041
    7. 'adds' → logprob: -3.02260684967041
    8. 'increments' → logprob: -4.39760684967041
    9. 'rest' → logprob: -4.39760684967041
    10. 'reste' → logprob: -5.14760684967041

Token 569: ' élément' (ID: 99627)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5448052883148193
    2. ' add' → logprob: -1.1698052883148193
    3. 'plus' → logprob: -3.0448052883148193
    4. 'aj' → logprob: -3.9198052883148193
    5. 'to' → logprob: -4.669805526733398
    6. ' plus' → logprob: -4.794805526733398
    7. '_add' → logprob: -5.544805526733398
    8. '   ' → logprob: -5.669805526733398
    9. ' to' → logprob: -6.294805526733398
    10. 'd' → logprob: -6.544805526733398

Token 570: 'aires' (ID: 8507)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.806610643863678
    2. 'aires' → logprob: -0.806610643863678
    3. 'ary' → logprob: -2.431610584259033
    4. 'ar' → logprob: -5.681610584259033
    5. 'aire' → logprob: -5.681610584259033
    6. '[' → logprob: -5.806610584259033
    7. '=[]' → logprob: -6.306610584259033
    8. 'ares' → logprob: -6.431610584259033
    9. 's' → logprob: -6.681610584259033
    10. 'a' → logprob: -7.056610584259033

Token 571: ' (' (ID: 350)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.30909597873687744
    2. ' add' → logprob: -1.5590959787368774
    3. 'plus' → logprob: -3.684095859527588
    4. 'up' → logprob: -4.934095859527588
    5. ' plus' → logprob: -5.059095859527588
    6. ',' → logprob: -5.059095859527588
    7. '   ' → logprob: -5.809095859527588
    8. 'aj' → logprob: -6.434095859527588
    9. ' up' → logprob: -6.934095859527588
    10. '_add' → logprob: -7.309095859527588

Token 572: 'd' (ID: 67)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.7319955825805664
    2. 'aj' → logprob: -1.3569955825805664
    3. ' add' → logprob: -2.8569955825805664
    4. ')' → logprob: -3.1069955825805664
    5. '[])' → logprob: -3.2319955825805664
    6. '+)' → logprob: -3.4819955825805664
    7. 'plus' → logprob: -3.8569955825805664
    8. '[]' → logprob: -4.106995582580566
    9. ')add' → logprob: -4.856995582580566
    10. '+' → logprob: -5.231995582580566

Token 573: 'étails' (ID: 179246)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5863432884216309
    2. '=[]' → logprob: -1.7113432884216309
    3. '=' → logprob: -2.586343288421631
    4. 'éc' → logprob: -3.586343288421631
    5. 'es' → logprob: -3.836343288421631
    6. ')' → logprob: -4.086343288421631
    7. ' =' → logprob: -4.211343288421631
    8. ''aj' → logprob: -4.711343288421631
    9. ' e' → logprob: -4.836343288421631
    10. 'é' → logprob: -4.961343288421631

Token 574: ' des' (ID: 731)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0315097570419312
    2. ',' → logprob: -1.5315097570419312
    3. '=' → logprob: -2.5315098762512207
    4. 'des' → logprob: -2.5315098762512207
    5. 'add' → logprob: -3.2815098762512207
    6. ' =' → logprob: -3.5315098762512207
    7. '=[]' → logprob: -3.7815098762512207
    8. ' des' → logprob: -3.7815098762512207
    9. ' ,' → logprob: -3.9065098762512207
    10. 'de' → logprob: -4.031509876251221

Token 575: ' modifications' (ID: 38756)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.27516865730285645
    2. 'mod' → logprob: -1.6501686573028564
    3. 'add' → logprob: -4.150168418884277
    4. ' modifications' → logprob: -5.025168418884277
    5. 'plus' → logprob: -5.150168418884277
    6. ' aj' → logprob: -5.525168418884277
    7. 'increments' → logprob: -6.025168418884277
    8. 'diff' → logprob: -6.150168418884277
    9. ' mod' → logprob: -6.650168418884277
    10. ' add' → logprob: -6.775168418884277

Token 576: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016240105032920837
    2. '):' → logprob: -5.391240119934082
    3. '   ' → logprob: -5.766240119934082
    4. ' )' → logprob: -6.391240119934082
    5. 'add' → logprob: -6.516240119934082
    6. ' à' → logprob: -7.016240119934082
    7. 'pour' → logprob: -7.141240119934082
    8. ' pour' → logprob: -7.516240119934082
    9. ')add' → logprob: -7.641240119934082
    10. ',' → logprob: -8.016240119934082

Token 577: ' chaque' (ID: 21194)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.0803569033741951
    2. 'each' → logprob: -3.3303568363189697
    3. 'plus' → logprob: -4.205357074737549
    4. ' chaque' → logprob: -4.705357074737549
    5. 'L' → logprob: -4.830357074737549
    6. 'l' → logprob: -5.955357074737549
    7. 'les' → logprob: -6.705357074737549
    8. '+' → logprob: -7.205357074737549
    9. 'add' → logprob: -7.455357074737549
    10. ' each' → logprob: -7.830357074737549

Token 578: ' élément' (ID: 99627)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.963775098323822
    2. 'element' → logprob: -1.4637751579284668
    3. 'élé' → logprob: -1.7137751579284668
    4. ' L' → logprob: -2.463775157928467
    5. 'x' → logprob: -3.213775157928467
    6. ')' → logprob: -3.713775157928467
    7. 'val' → logprob: -4.213775157928467
    8. ' element' → logprob: -4.213775157928467
    9. ' élément' → logprob: -5.213775157928467
    10. 'elem' → logprob: -5.338775157928467

Token 579: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012699524872004986
    2. '   ' → logprob: -5.512699604034424
    3. 'add' → logprob: -5.887699604034424
    4. '):' → logprob: -6.512699604034424
    5. ')add' → logprob: -6.637699604034424
    6. ',' → logprob: -6.887699604034424
    7. ')
' → logprob: -7.012699604034424
    8. 'de' → logprob: -9.012699127197266
    9. ')
' → logprob: -9.262699127197266
    10. 'aj' → logprob: -9.262699127197266

Token 580: '   ' (ID: 271)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.29398849606513977
    2. '   ' → logprob: -1.5439884662628174
    3. ',' → logprob: -4.2939887046813965
    4. ' add' → logprob: -4.4189887046813965
    5. 'plus' → logprob: -5.1689887046813965
    6. 'v' → logprob: -5.2939887046813965
    7. 'up' → logprob: -6.9189887046813965
    8. 'aj' → logprob: -7.5439887046813965
    9. '	add' → logprob: -7.5439887046813965
    10. 'adds' → logprob: -7.5439887046813965

Token 581: ' A' (ID: 355)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.43171456456184387
    2. 'plus' → logprob: -1.5567145347595215
    3. 'v' → logprob: -2.1817145347595215
    4. 'adds' → logprob: -4.8067145347595215
    5. 'up' → logprob: -5.6817145347595215
    6. 'to' → logprob: -5.9317145347595215
    7. 'aj' → logprob: -6.6817145347595215
    8. 'mod' → logprob: -6.8067145347595215
    9. ' add' → logprob: -6.9317145347595215
    10. ' plus' → logprob: -7.4317145347595215

Token 582: '=list' (ID: 93413)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1598384380340576
    2. '_add' → logprob: -1.2848384380340576
    3. ' =' → logprob: -2.0348384380340576
    4. '=' → logprob: -2.0348384380340576
    5. '=[]' → logprob: -2.9098384380340576
    6. 'add' → logprob: -3.0348384380340576
    7. ' ,' → logprob: -4.534838676452637
    8. 'A' → logprob: -4.909838676452637
    9. '_plus' → logprob: -5.284838676452637
    10. 'Add' → logprob: -5.409838676452637

Token 583: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001963605172932148
    2. '()
' → logprob: -6.8769636154174805
    3. '(L' → logprob: -8.12696361541748
    4. '(map' → logprob: -8.25196361541748
    5. '[]' → logprob: -9.00196361541748
    6. '(' → logprob: -9.37696361541748
    7. '(range' → logprob: -10.00196361541748
    8. '([]' → logprob: -10.50196361541748
    9. '=[]' → logprob: -10.75196361541748
    10. 'L' → logprob: -11.25196361541748

Token 584: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46770501136779785
    2. 'B' → logprob: -1.3427050113677979
    3. ',' → logprob: -2.842705011367798
    4. 'M' → logprob: -3.842705011367798
    5. ',B' → logprob: -4.092704772949219
    6. ',M' → logprob: -5.217704772949219
    7. ' ' → logprob: -5.967704772949219
    8. 'and' → logprob: -6.342704772949219
    9. '<|end|>' → logprob: -6.467704772949219
    10. '  ' → logprob: -6.967704772949219

Token 585: ' #' (ID: 1069)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.48437586426734924
    2. 'B' → logprob: -1.3593758344650269
    3. 'for' → logprob: -2.2343759536743164
    4. '   ' → logprob: -4.359375953674316
    5. 'V' → logprob: -6.359375953674316
    6. ',' → logprob: -7.109375953674316
    7. 'v' → logprob: -7.109375953674316
    8. 'P' → logprob: -7.484375953674316
    9. '
' → logprob: -7.859375953674316
    10. 'C' → logprob: -7.859375953674316

Token 586: ' Stock' (ID: 16382)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.5281696915626526
    2. 'M' → logprob: -1.9031696319580078
    3. 'for' → logprob: -2.278169631958008
    4. '[]' → logprob: -3.028169631958008
    5. '[]
' → logprob: -3.778169631958008
    6. 'A' → logprob: -4.153169631958008
    7. 'L' → logprob: -4.528169631958008
    8. 'v' → logprob: -5.028169631958008
    9. 'V' → logprob: -5.153169631958008
    10. 'a' → logprob: -5.278169631958008

Token 587: 'e' (ID: 68)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0018421327695250511
    2. 'er' → logprob: -6.751842021942139
    3. '[]' → logprob: -8.126842498779297
    4. 'A' → logprob: -9.751842498779297
    5. '()
' → logprob: -9.876842498779297
    6. '   ' → logprob: -10.251842498779297
    7. '([]' → logprob: -10.501842498779297
    8. '=[]' → logprob: -10.501842498779297
    9. 'é' → logprob: -10.626842498779297
    10. 'a' → logprob: -10.751842498779297

Token 588: ' les' (ID: 1341)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0037564942613244057
    2. '(' → logprob: -7.253756523132324
    3. '[]' → logprob: -7.253756523132324
    4. '[int' → logprob: -7.628756523132324
    5. '(i' → logprob: -8.128756523132324
    6. 'the' → logprob: -8.503756523132324
    7. '(int' → logprob: -8.628756523132324
    8. 's' → logprob: -8.878756523132324
    9. 'diff' → logprob: -9.003756523132324
    10. '(range' → logprob: -9.128756523132324

Token 589: ' valeurs' (ID: 73668)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.42350924015045166
    2. 'add' → logprob: -1.4235092401504517
    3. 'mod' → logprob: -4.173509120941162
    4. 'val' → logprob: -4.173509120941162
    5. 'diff' → logprob: -4.173509120941162
    6. 'plus' → logprob: -4.423509120941162
    7. 'increments' → logprob: -4.423509120941162
    8. 'a' → logprob: -4.548509120941162
    9. 'adds' → logprob: -5.798509120941162
    10. '(' → logprob: -5.923509120941162

Token 590: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4977310597896576
    2. 'des' → logprob: -2.3727309703826904
    3. 'de' → logprob: -2.7477309703826904
    4. '(' → logprob: -3.1227309703826904
    5. 'diff' → logprob: -3.1227309703826904
    6. '.append' → logprob: -3.9977309703826904
    7. '[' → logprob: -4.1227312088012695
    8. 'to' → logprob: -4.3727312088012695
    9. 'mod' → logprob: -4.4977312088012695
    10. '()' → logprob: -4.9977312088012695

Token 591: ' retirer' (ID: 136490)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.01567780412733555
    2. 'add' → logprob: -5.1406779289245605
    3. ' ajouter' → logprob: -5.3906779289245605
    4. 'Ajouter' → logprob: -6.3906779289245605
    5. '+' → logprob: -7.3906779289245605
    6. 'augment' → logprob: -7.7656779289245605
    7. 'append' → logprob: -7.7656779289245605
    8. '   ' → logprob: -8.140677452087402
    9. '-aj' → logprob: -8.140677452087402
    10. ''aj' → logprob: -8.265677452087402

Token 592: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002613825025036931
    2. ',' → logprob: -6.3776140213012695
    3. '<|end|>' → logprob: -7.6276140213012695
    4. 'B' → logprob: -8.75261402130127
    5. '  ' → logprob: -9.37761402130127
    6. ' ' → logprob: -10.00261402130127
    7. 'and' → logprob: -10.25261402130127
    8. ')' → logprob: -10.87761402130127
    9. ' B' → logprob: -11.00261402130127
    10. ' and' → logprob: -11.00261402130127

Token 593: 'minus' (ID: 80991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011050296947360039
    2. ' )' → logprob: -5.261050224304199
    3. ')
' → logprob: -6.636050224304199
    4. 'from' → logprob: -7.011050224304199
    5. ' pour' → logprob: -7.261050224304199
    6. 'pour' → logprob: -7.261050224304199
    7. 'for' → logprob: -7.636050224304199
    8. ' for' → logprob: -8.2610502243042
    9. 'et' → logprob: -9.0110502243042
    10. 'ou' → logprob: -9.0110502243042

Token 594: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000462366413557902
    2. ' )' → logprob: -8.375462532043457
    3. ')
' → logprob: -9.375462532043457
    4. 'for' → logprob: -9.750462532043457
    5. 'es' → logprob: -10.875462532043457
    6. '[' → logprob: -11.625462532043457
    7. '[])' → logprob: -11.875462532043457
    8. '   ' → logprob: -12.125462532043457
    9. 's' → logprob: -12.250462532043457
    10. ' ' → logprob: -12.375462532043457

Token 595: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009894086048007011
    2. 'B' → logprob: -4.759893894195557
    3. 'M' → logprob: -7.884893894195557
    4. ',' → logprob: -8.259894371032715
    5. ' B' → logprob: -8.509894371032715
    6. ' ' → logprob: -8.634894371032715
    7. 'and' → logprob: -9.134894371032715
    8. ' and' → logprob: -10.384894371032715
    9. '  ' → logprob: -10.634894371032715
    10. '<|end|>' → logprob: -10.634894371032715

Token 596: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.00840488076210022
    2. 'M' → logprob: -5.008404731750488
    3. ' B' → logprob: -6.633404731750488
    4. 'D' → logprob: -8.633404731750488
    5. 'V' → logprob: -9.758404731750488
    6. '   ' → logprob: -10.258404731750488
    7. 'C' → logprob: -10.633404731750488
    8. 'R' → logprob: -10.883404731750488
    9. 'S' → logprob: -10.883404731750488
    10. 'A' → logprob: -11.758404731750488

Token 597: '=list' (ID: 93413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1270138919353485
    2. '=list' → logprob: -2.127013921737671
    3. ' =' → logprob: -9.75201416015625
    4. '=[]' → logprob: -10.62701416015625
    5. '=int' → logprob: -13.75201416015625
    6. '.append' → logprob: -14.37701416015625
    7. '=set' → logprob: -15.00201416015625
    8. '=array' → logprob: -15.87701416015625
    9. '=line' → logprob: -16.00201416015625
    10. '=[]
' → logprob: -16.00201416015625

Token 598: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.250000953674316
    3. ' ()' → logprob: -16.375
    4. '()
' → logprob: -16.75
    5. '()

' → logprob: -17.375
    6. '(),' → logprob: -19.375
    7. '())' → logprob: -19.375
    8. '#' → logprob: -19.5
    9. '()]' → logprob: -19.625
    10. '()=>' → logprob: -19.625

Token 599: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2697226107120514
    2. '()' → logprob: -1.769722580909729
    3. ' =' → logprob: -3.7697227001190186
    4. ' for' → logprob: -4.5197224617004395
    5. '=' → logprob: -4.6447224617004395
    6. ' ' → logprob: -4.7697224617004395
    7. ',' → logprob: -5.5197224617004395
    8. '(' → logprob: -5.7697224617004395
    9. '  ' → logprob: -6.2697224617004395
    10. 'for' → logprob: -6.3947224617004395

Token 600: ' #' (ID: 1069)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7610872983932495
    2. '()' → logprob: -1.0110872983932495
    3. '#' → logprob: -2.011087417602539
    4. ' ' → logprob: -4.011087417602539
    5. '   ' → logprob: -5.261087417602539
    6. ' =' → logprob: -5.386087417602539
    7. ' #' → logprob: -5.636087417602539
    8. 'for' → logprob: -6.386087417602539
    9. '  ' → logprob: -6.761087417602539
    10. ' ()' → logprob: -7.761087417602539

Token 601: ' Stock' (ID: 16382)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05725244805216789
    2. '()' → logprob: -3.5572524070739746
    3. ' ' → logprob: -4.057252407073975
    4. ' []' → logprob: -5.307252407073975
    5. '  ' → logprob: -6.432252407073975
    6. 'append' → logprob: -6.682252407073975
    7. 'Stock' → logprob: -7.682252407073975
    8. '   ' → logprob: -7.932252407073975
    9. 'store' → logprob: -8.182252883911133
    10. '=[]' → logprob: -8.182252883911133

Token 602: 'e' (ID: 68)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3362314999103546
    2. 'e' → logprob: -1.8362314701080322
    3. '=' → logprob: -2.5862314701080322
    4. 'es' → logprob: -3.8362314701080322
    5. 'er' → logprob: -4.336231708526611
    6. '=[]' → logprob: -4.836231708526611
    7. '[]' → logprob: -5.461231708526611
    8. '.append' → logprob: -6.711231708526611
    9. '=list' → logprob: -7.211231708526611
    10. 'for' → logprob: -7.836231708526611

Token 603: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.31511375308036804
    2. '(' → logprob: -1.6901137828826904
    3. '()' → logprob: -2.9401137828826904
    4. 's' → logprob: -4.815113544464111
    5. '(abs' → logprob: -4.940113544464111
    6. 'the' → logprob: -5.190113544464111
    7. ' les' → logprob: -5.315113544464111
    8. '(i' → logprob: -7.065113544464111
    9. '(s' → logprob: -7.190113544464111
    10. 'es' → logprob: -7.315113544464111

Token 604: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00043579499470070004
    2. 'values' → logprob: -8.375435829162598
    3. ' valeurs' → logprob: -9.125435829162598
    4. 'vals' → logprob: -10.000435829162598
    5. 'mont' → logprob: -10.875435829162598
    6. 'aj' → logprob: -11.250435829162598
    7. ' val' → logprob: -11.500435829162598
    8. '   ' → logprob: -12.750435829162598
    9. 'valu' → logprob: -13.875435829162598
    10. '#' → logprob: -14.500435829162598

Token 605: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.09823638945817947
    2. ' à' → logprob: -2.473236322402954
    3. 'to' → logprob: -5.348236560821533
    4. 'a' → logprob: -6.223236560821533
    5. '=' → logprob: -7.098236560821533
    6. ''à' → logprob: -7.348236560821533
    7. ' to' → logprob: -7.848236560821533
    8. '   ' → logprob: -8.473236083984375
    9. ' ' → logprob: -9.223236083984375
    10. '’à' → logprob: -9.473236083984375

Token 606: ' ajouter' (ID: 78457)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.16796563565731049
    2. 'add' → logprob: -1.9179656505584717
    3. 'aj' → logprob: -5.917965412139893
    4. 'plus' → logprob: -6.292965412139893
    5. ' append' → logprob: -6.667965412139893
    6. ' ajouter' → logprob: -7.167965412139893
    7. ' add' → logprob: -8.16796588897705
    8. 'remove' → logprob: -8.29296588897705
    9. 'Ajouter' → logprob: -8.79296588897705
    10. 'put' → logprob: -9.04296588897705

Token 607: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025305950548499823
    2. '<|end|>' → logprob: -6.877530574798584
    3. ' for' → logprob: -7.252530574798584
    4. ',' → logprob: -8.002531051635742
    5. 'for' → logprob: -9.127531051635742
    6. '  ' → logprob: -9.502531051635742
    7. ')' → logprob: -9.877531051635742
    8. '    
' → logprob: -10.252531051635742
    9. '	for' → logprob: -10.502531051635742
    10. '<|end|>' → logprob: -10.752531051635742

Token 608: 'add' (ID: 964)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.26508527994155884
    2. ')' → logprob: -1.640085220336914
    3. 'add' → logprob: -4.765085220336914
    4. 'minus' → logprob: -4.890085220336914
    5. 's' → logprob: -5.265085220336914
    6. '+)' → logprob: -5.890085220336914
    7. ' plus' → logprob: -6.015085220336914
    8. ')
' → logprob: -6.390085220336914
    9. '[])' → logprob: -6.390085220336914
    10. '[]' → logprob: -6.515085220336914

Token 609: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.570319702499546e-05
    2. ' )' → logprob: -11.625025749206543
    3. '())' → logprob: -12.625025749206543
    4. ')
' → logprob: -12.625025749206543
    5. '()' → logprob: -12.750025749206543
    6. '   ' → logprob: -12.875025749206543
    7. '=' → logprob: -13.750025749206543
    8. ')

' → logprob: -14.750025749206543
    9. '[])' → logprob: -14.750025749206543
    10. 's' → logprob: -14.875025749206543

Token 610: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10835296660661697
    2. ' for' → logprob: -2.6083528995513916
    3. 'for' → logprob: -3.6083528995513916
    4. '<|end|>' → logprob: -6.483353137969971
    5. '	for' → logprob: -8.733352661132812
    6. '```' → logprob: -9.608352661132812
    7. '    
' → logprob: -9.858352661132812
    8. ':' → logprob: -10.733352661132812
    9. '<|end|>' → logprob: -10.858352661132812
    10. ',' → logprob: -11.108352661132812

Token 611: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19689254462718964
    2. ' for' → logprob: -2.196892499923706
    3. '   ' → logprob: -2.696892499923706
    4. '	for' → logprob: -9.071892738342285
    5. '    
' → logprob: -10.946892738342285
    6. '
' → logprob: -12.196892738342285
    7. '<|end|>' → logprob: -12.446892738342285
    8. '#' (adapté à ' #') → logprob: -12.821892738342285
    9. '```' → logprob: -12.821892738342285
    10. ',' → logprob: -13.071892738342285

Token 612: ' Parc' (ID: 68618)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002497767563909292
    2. '   ' → logprob: -8.500249862670898
    3. ' for' → logprob: -10.250249862670898
    4. 'j' → logprob: -12.250249862670898
    5. '#' → logprob: -12.500249862670898
    6. 'ok' → logprob: -14.750249862670898
    7. '	for' → logprob: -14.875249862670898
    8. '
' → logprob: -14.875249862670898
    9. 'mod' → logprob: -15.000249862670898
    10. 'flag' → logprob: -15.125249862670898

Token 613: 'ourt' (ID: 38600)
  Prédit: 'our'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.20035959780216217
    2. 'for' → logprob: -1.825359582901001
    3. 'ourt' → logprob: -4.20035982131958
    4. 'ours' → logprob: -5.32535982131958
    5. 'or' → logprob: -8.450359344482422
    6. ' for' → logprob: -8.950359344482422
    7. 'orr' → logprob: -9.825359344482422
    8. 'ou' → logprob: -9.825359344482422
    9. 'cour' → logprob: -11.075359344482422
    10. 't' → logprob: -11.325359344482422

Token 614: ' chaque' (ID: 21194)
  Prédit: '(L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(L' → logprob: -0.2911882698535919
    2. 'range' → logprob: -1.9161882400512695
    3. 'L' → logprob: -3.0411882400512695
    4. ' range' → logprob: -3.1661882400512695
    5. '(range' → logprob: -4.6661882400512695
    6. ' L' → logprob: -5.7911882400512695
    7. '(' → logprob: -5.9161882400512695
    8. 'for' → logprob: -9.54118824005127
    9. 'in' → logprob: -10.29118824005127
    10. '(len' → logprob: -10.66618824005127

Token 615: ' élément' (ID: 99627)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.41430434584617615
    2. ' x' → logprob: -1.6643043756484985
    3. 'L' → logprob: -2.289304256439209
    4. ' L' → logprob: -3.914304256439209
    5. 'v' → logprob: -5.039304256439209
    6. ' v' → logprob: -5.539304256439209
    7. 'a' → logprob: -5.664304256439209
    8. 'e' → logprob: -6.414304256439209
    9. 'value' → logprob: -6.414304256439209
    10. 'j' → logprob: -6.539304256439209

Token 616: ' dans' (ID: 2671)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.8805806636810303
    2. '(L' → logprob: -1.2555806636810303
    3. 'L' → logprob: -2.0055806636810303
    4. 'in' → logprob: -2.1305806636810303
    5. ' L' → logprob: -4.005580902099609
    6. '   ' → logprob: -4.755580902099609
    7. ' of' → logprob: -5.630580902099609
    8. ' de' → logprob: -5.880580902099609
    9. 'range' → logprob: -5.880580902099609
    10. 'for' → logprob: -6.005580902099609

Token 617: ' la' (ID: 557)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.002839230000972748
    2. ' L' → logprob: -5.877839088439941
    3. 'range' → logprob: -10.877839088439941
    4. ' range' → logprob: -11.127839088439941
    5. '(L' → logprob: -15.752839088439941
    6. '[L' → logprob: -15.877839088439941
    7. 'l' → logprob: -16.252840042114258
    8. ' ' → logprob: -16.502840042114258
    9. '	L' → logprob: -16.502840042114258
    10. '   ' → logprob: -16.877840042114258

Token 618: ' liste' (ID: 31719)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -1.4259644558478612e-05
    2. ' L' → logprob: -11.250014305114746
    3. 'range' → logprob: -14.250014305114746
    4. ' range' → logprob: -14.625014305114746
    5. '   ' → logprob: -17.00001335144043
    6. 'for' → logprob: -17.50001335144043
    7. '
' → logprob: -17.87501335144043
    8. '(L' → logprob: -18.00001335144043
    9. '	L' → logprob: -19.00001335144043
    10. '```' → logprob: -19.00001335144043

Token 619: ' L' (ID: 451)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.004124588333070278
    2. ' L' → logprob: -5.504124641418457
    3. 'for' → logprob: -11.379124641418457
    4. ' for' → logprob: -11.504124641418457
    5. ' range' → logprob: -11.629124641418457
    6. '(L' → logprob: -11.754124641418457
    7. 'range' → logprob: -12.004124641418457
    8. '(range' → logprob: -14.629124641418457
    9. '   ' → logprob: -15.254124641418457
    10. ' (' → logprob: -15.754124641418457

Token 620: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7805516123771667
    2. ':
' → logprob: -0.7805516123771667
    3. 'for' → logprob: -2.7805516719818115
    4. ' for' → logprob: -4.405551433563232
    5. '   ' → logprob: -4.780551433563232
    6. ' :
' → logprob: -7.655551433563232
    7. ',' → logprob: -8.65555191040039
    8. '
' → logprob: -9.78055191040039
    9. '```' → logprob: -9.78055191040039
    10. ' :' → logprob: -9.90555191040039

Token 621: 'pour' (ID: 52723)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.5126934051513672
    2. 'range' → logprob: -1.5126934051513672
    3. ' range' → logprob: -2.262693405151367
    4. 'for' → logprob: -2.887693405151367
    5. ' L' → logprob: -4.387693405151367
    6. ' for' → logprob: -5.637693405151367
    7. '   ' → logprob: -5.887693405151367
    8. ')' → logprob: -7.012693405151367
    9. '):
' → logprob: -7.387693405151367
    10. ':' → logprob: -8.887693405151367

Token 622: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.8663924336433411
    2. 'x' → logprob: -0.9913924336433411
    3. 'v' → logprob: -2.9913923740386963
    4. 'L' → logprob: -3.3663923740386963
    5. 'l' → logprob: -3.4913923740386963
    6. ' j' → logprob: -3.4913923740386963
    7. 'a' → logprob: -4.241392612457275
    8. ' x' → logprob: -4.366392612457275
    9. 'i' → logprob: -5.241392612457275
    10. 'val' → logprob: -5.366392612457275

Token 623: ' participant' (ID: 34893)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5898041129112244
    2. 'j' → logprob: -1.2148041725158691
    3. 'a' → logprob: -3.214804172515869
    4. ' x' → logprob: -3.214804172515869
    5. ' j' → logprob: -3.339804172515869
    6. 'v' → logprob: -4.089804172515869
    7. 'l' → logprob: -5.839804172515869
    8. ' v' → logprob: -6.214804172515869
    9. ' a' → logprob: -6.214804172515869
    10. 'num' → logprob: -6.464804172515869

Token 624: '/' (ID: 14)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3083275258541107
    2. '):' → logprob: -2.1833274364471436
    3. '):
' → logprob: -2.3083274364471436
    4. ':
' → logprob: -3.0583274364471436
    5. '   ' → logprob: -6.058327674865723
    6. ')' → logprob: -6.558327674865723
    7. ' :' → logprob: -7.183327674865723
    8. ',' → logprob: -7.933327674865723
    9. '[i' → logprob: -8.308327674865723
    10. ' :
' → logprob: -8.808327674865723

Token 625: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1379528045654297
    2. 'x' → logprob: -1.6379528045654297
    3. ' a' → logprob: -2.2629528045654297
    4. ' x' → logprob: -2.2629528045654297
    5. ' j' → logprob: -3.0129528045654297
    6. 'j' → logprob: -3.2629528045654297
    7. 'value' → logprob: -3.3879528045654297
    8. 'i' → logprob: -3.8879528045654297
    9. 'v' → logprob: -4.26295280456543
    10. ' i' → logprob: -4.38795280456543

Token 626: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.00014215784904081374
    2. 'ments' → logprob: -10.250142097473145
    3. 'me' → logprob: -10.500142097473145
    4. 'ement' → logprob: -10.625142097473145
    5. 'ément' → logprob: -11.125142097473145
    6. 'ent' → logprob: -11.625142097473145
    7. 'mente' → logprob: -12.000142097473145
    8. 'mé' → logprob: -12.000142097473145
    9. '#' → logprob: -12.875142097473145
    10. 've' → logprob: -13.000142097473145

Token 627: ')
' (ID: 446)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04777887463569641
    2. '):' → logprob: -3.422778844833374
    3. ':' → logprob: -5.172779083251953
    4. ':
' → logprob: -5.547779083251953
    5. ')' → logprob: -6.047779083251953
    6. '   ' → logprob: -7.047779083251953
    7. 'L' → logprob: -7.922779083251953
    8. ' ):
' → logprob: -7.922779083251953
    9. 'in' → logprob: -9.422779083251953
    10. '):
' → logprob: -9.672779083251953

Token 628: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6708017587661743
    2. ' for' → logprob: -1.2958017587661743
    3. '   ' → logprob: -1.5458017587661743
    4. ':' → logprob: -7.045801639556885
    5. ':
' → logprob: -7.545801639556885
    6. '```' → logprob: -9.045802116394043
    7. ',' → logprob: -10.045802116394043
    8. 'in' → logprob: -10.295802116394043
    9. ' L' → logprob: -10.545802116394043
    10. ' in' → logprob: -10.670802116394043

Token 629: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3521764576435089
    2. 'for' (adapté à ' for') → logprob: -1.2271764278411865
    3. '   ' → logprob: -5.602176666259766
    4. ' L' → logprob: -11.477176666259766
    5. '```' → logprob: -11.977176666259766
    6. '	for' → logprob: -12.227176666259766
    7. ' range' → logprob: -12.477176666259766
    8. 'L' → logprob: -12.602176666259766
    9. 'range' → logprob: -13.352176666259766
    10. '       ' → logprob: -13.852176666259766

Token 630: ' j' (ID: 441)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.21147461235523224
    2. 'j' → logprob: -2.461474657058716
    3. ' x' → logprob: -2.836474657058716
    4. ' j' → logprob: -4.211474418640137
    5. 'l' → logprob: -4.711474418640137
    6. 'v' → logprob: -4.836474418640137
    7. 'a' → logprob: -5.586474418640137
    8. 'e' → logprob: -5.711474418640137
    9. ' v' → logprob: -6.586474418640137
    10. ' l' → logprob: -6.711474418640137

Token 631: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07891799509525299
    2. 'in' → logprob: -2.578917980194092
    3. ',' → logprob: -11.70391845703125
    4. ' ' → logprob: -11.70391845703125
    5. '  ' → logprob: -12.45391845703125
    6. '   ' → logprob: -12.82891845703125
    7. ')' → logprob: -13.32891845703125
    8. ' ,' → logprob: -14.07891845703125
    9. '	in' → logprob: -14.32891845703125
    10. '    ' → logprob: -14.82891845703125

Token 632: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06210583075881004
    2. ' range' → logprob: -2.937105894088745
    3. 'L' → logprob: -4.937105655670166
    4. ' L' → logprob: -10.937106132507324
    5. '(range' → logprob: -13.062106132507324
    6. 'Range' → logprob: -14.187106132507324
    7. '	range' → logprob: -14.687106132507324
    8. '   ' → logprob: -15.312106132507324
    9. '  ' → logprob: -15.812106132507324
    10. ' ' → logprob: -15.937106132507324

Token 633: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.12729543447494507
    2. '(len' → logprob: -2.12729549407959
    3. 'len' → logprob: -8.50229549407959
    4. '(' → logprob: -9.12729549407959
    5. '(n' → logprob: -10.50229549407959
    6. 'N' → logprob: -10.62729549407959
    7. '(
' → logprob: -13.12729549407959
    8. ' (' → logprob: -14.25229549407959
    9. '   ' → logprob: -14.62729549407959
    10. ' len' → logprob: -14.75229549407959

Token 634: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.313614159822464
    2. '):
' → logprob: -1.3136141300201416
    3. '):
' → logprob: -8.563613891601562
    4. ':' → logprob: -9.313613891601562
    5. '   ' → logprob: -10.063613891601562
    6. ')' → logprob: -10.813613891601562
    7. '):

' → logprob: -12.813613891601562
    8. ' ):' → logprob: -13.188613891601562
    9. ':
' → logprob: -13.313613891601562
    10. ' ):
' → logprob: -14.563613891601562

Token 635: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009467111667618155
    2. ',' → logprob: -8.375946998596191
    3. ':' → logprob: -8.375946998596191
    4. '<|end|>' → logprob: -9.125946998596191
    5. '```' → logprob: -9.500946998596191
    6. '):
' → logprob: -9.625946998596191
    7. '        
' → logprob: -9.875946998596191
    8. ':
' → logprob: -9.875946998596191
    9. ' if' → logprob: -10.750946998596191
    10. '   ' → logprob: -11.125946998596191

Token 636: ' k' (ID: 372)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.5688740611076355
    2. '   ' → logprob: -1.6938741207122803
    3. 'x' → logprob: -2.3188741207122803
    4. 'm' → logprob: -3.0688741207122803
    5. '       ' → logprob: -3.3188741207122803
    6. 'mod' → logprob: -3.3188741207122803
    7. ' r' → logprob: -4.568873882293701
    8. 'tmp' → logprob: -5.318873882293701
    9. ' x' → logprob: -5.943873882293701
    10. 'b' → logprob: -6.068873882293701

Token 637: '=L' (ID: 170129)
  Prédit: '=L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=L' → logprob: -0.3348406255245209
    2. '=' → logprob: -1.8348406553268433
    3. ' =' → logprob: -2.0848405361175537
    4. '=(' → logprob: -8.209840774536133
    5. '=k' → logprob: -8.459840774536133
    6. 'mod' → logprob: -10.834840774536133
    7. '=j' → logprob: -11.834840774536133
    8. ' L' → logprob: -11.959840774536133
    9. '   ' → logprob: -12.209840774536133
    10. '=int' → logprob: -12.209840774536133

Token 638: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.5577775128767826e-06
    2. 'j' → logprob: -13.000005722045898
    3. '[' → logprob: -13.250005722045898
    4. ' [' → logprob: -15.000005722045898
    5. '[k' → logprob: -15.125005722045898
    6. '[i' → logprob: -15.250005722045898
    7. '```' → logprob: -15.375005722045898
    8. ')' → logprob: -16.7500057220459
    9. '[J' → logprob: -16.7500057220459
    10. '\[' → logprob: -16.8750057220459

Token 639: ']' (ID: 60)
  Prédit: '%s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%s' → logprob: -0.17253340780735016
    2. '%' → logprob: -2.0475335121154785
    3. ' %' → logprob: -3.6725335121154785
    4. ')' → logprob: -5.7975335121154785
    5. ')%' → logprob: -7.2975335121154785
    6. ')s' → logprob: -9.79753303527832
    7. ']%' → logprob: -9.79753303527832
    8. '%i' → logprob: -10.17253303527832
    9. 's' → logprob: -10.29753303527832
    10. ' s' → logprob: -10.42253303527832

Token 640: '   ' (ID: 271)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.7223791480064392
    2. '%s' → logprob: -0.8473791480064392
    3. ' %' → logprob: -2.472379207611084
    4. '%n' → logprob: -7.472379207611084
    5. '       ' → logprob: -7.972379207611084
    6. '%i' → logprob: -8.847378730773926
    7. '   ' → logprob: -8.972378730773926
    8. '%=' → logprob: -9.722378730773926
    9. '
' → logprob: -9.972378730773926
    10. '=s' → logprob: -10.097378730773926

Token 641: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.15312519669532776
    2. '%=' → logprob: -2.403125286102295
    3. ' %' → logprob: -3.778125286102295
    4. '_mod' → logprob: -5.028125286102295
    5. '%n' → logprob: -5.403125286102295
    6. '=' → logprob: -5.903125286102295
    7. '       ' → logprob: -6.028125286102295
    8. 'mod' → logprob: -6.278125286102295
    9. '
' → logprob: -6.403125286102295
    10. ' %=' → logprob: -6.528125286102295

Token 642: ' Pr' (ID: 2284)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.19548839330673218
    2. 'x' → logprob: -2.945488452911377
    3. 'm' → logprob: -2.945488452911377
    4. 'mod' → logprob: -3.320488452911377
    5. 'k' → logprob: -4.570488452911377
    6. 'if' → logprob: -4.820488452911377
    7. ' r' → logprob: -5.070488452911377
    8. 'rem' → logprob: -6.195488452911377
    9. 'd' → logprob: -6.320488452911377
    10. '
' → logprob: -6.695488452911377

Token 643: 'end' (ID: 419)
  Prédit: 'és'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -1.7183269262313843
    2. '#' → logprob: -1.8433269262313843
    3. 'e' → logprob: -1.8433269262313843
    4. 'es' → logprob: -2.218327045440674
    5. 'é' → logprob: -2.343327045440674
    6. 'ec' → logprob: -2.718327045440674
    7. 'end' → logprob: -2.968327045440674
    8. 'em' → logprob: -3.093327045440674
    9. 'ef' → logprob: -3.093327045440674
    10. 'ed' → logprob: -3.718327045440674

Token 644: ' la' (ID: 557)
  Prédit: ' L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' L' → logprob: -0.7576290965080261
    2. 'L' → logprob: -1.382629156112671
    3. ' k' → logprob: -2.132629156112671
    4. 'k' → logprob: -2.382629156112671
    5. '(L' → logprob: -3.257629156112671
    6. ' s' → logprob: -4.632628917694092
    7. 's' → logprob: -4.882628917694092
    8. '(k' → logprob: -5.382628917694092
    9. '   ' → logprob: -6.132628917694092
    10. ' (' → logprob: -6.382628917694092

Token 645: ' valeur' (ID: 41664)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.5870354771614075
    2. 'L' → logprob: -0.8370354771614075
    3. ' L' → logprob: -4.962035655975342
    4. 's' → logprob: -5.837035655975342
    5. 'mod' → logprob: -7.462035655975342
    6. ' k' → logprob: -8.462035179138184
    7. 'j' → logprob: -8.462035179138184
    8. 'val' → logprob: -10.837035179138184
    9. '%' → logprob: -10.962035179138184
    10. 'R' → logprob: -11.212035179138184

Token 646: ' de' (ID: 334)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.8175661563873291
    2. '%' → logprob: -1.442566156387329
    3. '_mod' → logprob: -2.192566156387329
    4. '=' → logprob: -2.567566156387329
    5. '%=' → logprob: -2.942566156387329
    6. 'k' → logprob: -3.942566156387329
    7. '=L' → logprob: -4.06756591796875
    8. '=k' → logprob: -4.81756591796875
    9. ' =' → logprob: -5.19256591796875
    10. 's' → logprob: -5.69256591796875

Token 647: ' l' (ID: 305)
  Prédit: 'L'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'L' → logprob: -0.20779044926166534
    2. 'k' → logprob: -1.707790493965149
    3. ' L' → logprob: -5.332790374755859
    4. 'j' → logprob: -6.707790374755859
    5. ' k' → logprob: -8.45779037475586
    6. '(L' → logprob: -9.83279037475586
    7. '(k' → logprob: -11.58279037475586
    8. 'l' → logprob: -11.70779037475586
    9. ' j' → logprob: -12.33279037475586
    10. '```' → logprob: -12.58279037475586

Token 648: ''' (ID: 6)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6977011561393738
    2. 'j' → logprob: -1.1977012157440186
    3. 'élé' → logprob: -2.5727012157440186
    4. 'element' → logprob: -3.0727012157440186
    5. ' élément' → logprob: -4.3227009773254395
    6. 'mod' → logprob: -4.3227009773254395
    7. '```' → logprob: -4.4477009773254395
    8. '#' → logprob: -5.0727009773254395
    9. 'k' → logprob: -5.1977009773254395
    10. 'L' → logprob: -5.3227009773254395

Token 649: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.0008703675703145564
    2. 'element' → logprob: -7.875870227813721
    3. 'él' → logprob: -8.750870704650879
    4. ' élément' → logprob: -9.500870704650879
    5. '```' → logprob: -9.875870704650879
    6. ''' → logprob: -10.125870704650879
    7. '`' → logprob: -10.500870704650879
    8. 'lement' → logprob: -10.625870704650879
    9. 'é' → logprob: -11.000870704650879
    10. 'elem' → logprob: -11.000870704650879

Token 650: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -1.0921942703134846e-05
    2. '#' → logprob: -13.62501049041748
    3. '­ment' → logprob: -13.62501049041748
    4. 'ément' → logprob: -13.75001049041748
    5. 'ement' → logprob: -13.87501049041748
    6. ' ment' → logprob: -14.00001049041748
    7. 'm' → logprob: -14.00001049041748
    8. 'me' → logprob: -14.00001049041748
    9. '`' → logprob: -14.12501049041748
    10. 'ments' → logprob: -14.25001049041748

Token 651: ' courant' (ID: 74694)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.16780085861682892
    2. ' %' → logprob: -2.1678009033203125
    3. '       ' → logprob: -3.4178009033203125
    4. '
' → logprob: -5.7928009033203125
    5. '%n' → logprob: -6.0428009033203125
    6. '   ' → logprob: -8.042800903320312
    7. '%A' → logprob: -8.292800903320312
    8. '%s' → logprob: -8.292800903320312
    9. '%b' → logprob: -8.667800903320312
    10. '%B' → logprob: -8.917800903320312

Token 652: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047826141119003296
    2. '%' → logprob: -3.297826051712036
    3. '
' → logprob: -6.172826290130615
    4. ' if' → logprob: -6.172826290130615
    5. ' %' → logprob: -6.422826290130615
    6. ' mod' → logprob: -7.297826290130615
    7. 'mod' → logprob: -7.547826290130615
    8. ',' → logprob: -7.672826290130615
    9. 'if' → logprob: -8.047825813293457
    10. '#' → logprob: -8.672825813293457

Token 653: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.96257483959198
    2. '
' → logprob: -1.46257483959198
    3. '       ' → logprob: -1.58757483959198
    4. '<|end|>' → logprob: -2.2125749588012695
    5. '        
' → logprob: -3.7125749588012695
    6. ' %' → logprob: -3.8375749588012695
    7. '```' → logprob: -5.0875749588012695
    8. ' if' → logprob: -5.5875749588012695
    9. ' 
' → logprob: -6.2125749588012695
    10. '#' → logprob: -6.8375749588012695

Token 654: ' a' (ID: 261)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.2059442549943924
    2. 'm' → logprob: -3.330944299697876
    3. 'x' → logprob: -3.455944299697876
    4. 'if' → logprob: -3.455944299697876
    5. ' r' → logprob: -3.705944299697876
    6. 'mod' → logprob: -4.080944061279297
    7. 'rem' → logprob: -4.080944061279297
    8. 'd' → logprob: -5.455944061279297
    9. ' if' → logprob: -6.080944061279297
    10. 'a' (adapté à ' a') → logprob: -6.080944061279297

Token 655: '=k' (ID: 105633)
  Prédit: 'dd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dd' → logprob: -0.12489451467990875
    2. '=k' → logprob: -2.874894618988037
    3. 'mod' → logprob: -4.374894618988037
    4. '_mod' → logprob: -4.374894618988037
    5. 'dj' → logprob: -4.874894618988037
    6. 'k' → logprob: -5.374894618988037
    7. '%=' → logprob: -5.374894618988037
    8. '=' → logprob: -5.749894618988037
    9. 'j' → logprob: -5.749894618988037
    10. 'd' → logprob: -6.124894618988037

Token 656: '%s' (ID: 27860)
  Prédit: '%s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%s' → logprob: -0.09579067677259445
    2. '%' → logprob: -2.9707906246185303
    3. ' %' → logprob: -3.2207906246185303
    4. 's' → logprob: -9.97079086303711
    5. '%=' → logprob: -10.59579086303711
    6. '%d' → logprob: -10.59579086303711
    7. '%n' → logprob: -10.72079086303711
    8. '%i' → logprob: -11.34579086303711
    9. '%b' → logprob: -11.59579086303711
    10. '
' → logprob: -12.34579086303711

Token 657: '    ' (ID: 257)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.825397789478302
    2. '<|end|>' → logprob: -0.825397789478302
    3. ' if' → logprob: -2.8253977298736572
    4. 'if' → logprob: -3.4503977298736572
    5. '   ' → logprob: -4.700397968292236
    6. '
' → logprob: -5.325397968292236
    7. '<|end|>' → logprob: -5.950397968292236
    8. '	if' → logprob: -5.950397968292236
    9. '#' → logprob: -6.200397968292236
    10. ';if' → logprob: -6.825397968292236

Token 658: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3085384666919708
    2. ' if' → logprob: -2.4335384368896484
    3. '<|end|>' → logprob: -2.5585384368896484
    4. '       ' → logprob: -2.6835384368896484
    5. '#' (adapté à ' #') → logprob: -4.433538436889648
    6. '<|end|>' → logprob: -5.433538436889648
    7. '
' → logprob: -5.558538436889648
    8. ')' → logprob: -5.808538436889648
    9. ';if' → logprob: -6.558538436889648
    10. '           ' → logprob: -6.683538436889648

Token 659: ' Cal' (ID: 4453)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.36020031571388245
    2. ' add' → logprob: -2.7352004051208496
    3. ' if' → logprob: -2.7352004051208496
    4. 'if' → logprob: -2.8602004051208496
    5. ' a' → logprob: -2.9852004051208496
    6. 'add' → logprob: -3.2352004051208496
    7. 'b' → logprob: -4.61020040512085
    8. 'A' → logprob: -6.11020040512085
    9. 'k' → logprob: -6.48520040512085
    10. ' sub' → logprob: -6.61020040512085

Token 660: 'cule' (ID: 45017)
  Prédit: 'cul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.4606016278266907
    2. 'cule' → logprob: -1.460601568222046
    3. 'c' → logprob: -2.710601568222046
    4. 'culate' → logprob: -4.210601806640625
    5. 'l' → logprob: -4.335601806640625
    6. 'a' → logprob: -4.335601806640625
    7. 'cula' → logprob: -5.585601806640625
    8. 'culated' → logprob: -5.710601806640625
    9. '       ' → logprob: -5.835601806640625
    10. 'ule' → logprob: -5.835601806640625

Token 661: ' le' (ID: 505)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.7159134745597839
    2. 'a' → logprob: -1.4659135341644287
    3. ' k' → logprob: -1.7159135341644287
    4. ' a' → logprob: -3.0909135341644287
    5. '(k' → logprob: -3.7159135341644287
    6. ' s' → logprob: -3.9659135341644287
    7. 's' → logprob: -4.71591329574585
    8. ' (' → logprob: -6.21591329574585
    9. '(a' → logprob: -8.465913772583008
    10. '(s' → logprob: -8.715913772583008

Token 662: ' reste' (ID: 26769)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.247589573264122
    2. 'k' → logprob: -1.9975895881652832
    3. ' k' → logprob: -3.872589588165283
    4. 'mod' → logprob: -3.997589588165283
    5. 'reste' → logprob: -3.997589588165283
    6. ' a' → logprob: -4.497589588165283
    7. 'r' → logprob: -4.747589588165283
    8. 're' → logprob: -6.247589588165283
    9. 'rest' → logprob: -6.372589588165283
    10. ' mod' → logprob: -7.122589588165283

Token 663: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6988654732704163
    2. '<|end|>' → logprob: -0.6988654732704163
    3. '<|end|>' → logprob: -5.8238654136657715
    4. ' if' → logprob: -7.3238654136657715
    5. ')' → logprob: -7.6988654136657715
    6. ',' → logprob: -8.44886589050293
    7. '	' → logprob: -8.44886589050293
    8. '
' → logprob: -8.69886589050293
    9. '=' → logprob: -8.82386589050293
    10. '#' → logprob: -8.94886589050293

Token 664: 'mod' (ID: 4847)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4386642575263977
    2. ')' → logprob: -2.063664197921753
    3. ' a' → logprob: -2.313664197921753
    4. 'k' → logprob: -2.938664197921753
    5. ' k' → logprob: -2.938664197921753
    6. ' )' → logprob: -4.438664436340332
    7. ' s' → logprob: -5.313664436340332
    8. 's' → logprob: -6.813664436340332
    9. '=k' → logprob: -6.813664436340332
    10. '(k' → logprob: -7.313664436340332

Token 665: 'ulo' (ID: 5953)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.3615809679031372
    2. ')' → logprob: -1.9865809679031372
    3. ' )' → logprob: -3.2365808486938477
    4. 'ulo' → logprob: -3.6115808486938477
    5. 'e' → logprob: -3.8615808486938477
    6. '       ' → logprob: -4.111580848693848
    7. 'k' → logprob: -4.361580848693848
    8. '=k' → logprob: -4.611580848693848
    9. ' =' → logprob: -4.736580848693848
    10. '   ' → logprob: -5.111580848693848

Token 666: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07294190675020218
    2. ' )' → logprob: -3.572942018508911
    3. '=k' → logprob: -3.697942018508911
    4. 'k' → logprob: -4.697941780090332
    5. '=' → logprob: -6.197941780090332
    6. ' k' → logprob: -6.822941780090332
    7. '=s' → logprob: -6.947941780090332
    8. ' =' → logprob: -6.947941780090332
    9. '(k' → logprob: -6.947941780090332
    10. 's' → logprob: -7.072941780090332

Token 667: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04029376804828644
    2. '
' → logprob: -3.5402936935424805
    3. '<|end|>' → logprob: -4.9152936935424805
    4. ' if' → logprob: -6.4152936935424805
    5. '        
' → logprob: -7.9152936935424805
    6. 'if' → logprob: -8.04029369354248
    7. ',' → logprob: -8.41529369354248
    8. ')' → logprob: -9.16529369354248
    9. '	' → logprob: -9.54029369354248
    10. ' 
' → logprob: -9.79029369354248

Token 668: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.07007469981908798
    2. ' k' → logprob: -2.6950747966766357
    3. ' s' → logprob: -9.695075035095215
    4. 's' → logprob: -9.695075035095215
    5. 'a' → logprob: -12.195075035095215
    6. ' a' → logprob: -12.445075035095215
    7. ' ' → logprob: -13.445075035095215
    8. ' ' → logprob: -13.445075035095215
    9. '(k' → logprob: -13.820075035095215
    10. '	k' → logprob: -14.070075035095215

Token 669: ' par' (ID: 686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 670: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31326213479042053
    2. ' s' → logprob: -1.3132621049880981
    3. ' ' → logprob: -15.313261985778809
    4. ' ' → logprob: -16.688262939453125
    5. '	s' → logprob: -16.813262939453125
    6. '   ' → logprob: -18.313262939453125
    7. '`s' → logprob: -18.938262939453125
    8. '  ' → logprob: -19.188262939453125
    9. '```' → logprob: -19.438262939453125
    10. '       ' → logprob: -20.563262939453125

Token 671: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01778755895793438
    2. '
' → logprob: -4.142787456512451
    3. '<|end|>' → logprob: -6.892787456512451
    4. ' if' → logprob: -7.767787456512451
    5. ',' → logprob: -8.89278793334961
    6. '        
' → logprob: -9.89278793334961
    7. 'if' → logprob: -10.51778793334961
    8. '	' → logprob: -10.64278793334961
    9. '
' → logprob: -10.89278793334961
    10. '<|end|>' → logprob: -11.64278793334961

Token 672: ' savoir' (ID: 22835)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.8835651278495789
    2. 'k' → logprob: -1.2585651874542236
    3. 'a' → logprob: -2.3835651874542236
    4. ')' → logprob: -3.2585651874542236
    5. ' s' → logprob: -3.3835651874542236
    6. 's' → logprob: -3.3835651874542236
    7. '       ' → logprob: -4.5085649490356445
    8. 'l' → logprob: -4.6335649490356445
    9. 'j' → logprob: -4.7585649490356445
    10. ' a' → logprob: -5.1335649490356445

Token 673: ' combien' (ID: 106648)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3310097455978394
    2. '       ' → logprob: -1.4560097455978394
    3. ' combien' → logprob: -1.7060097455978394
    4. 'le' → logprob: -2.456009864807129
    5. ' le' → logprob: -2.956009864807129
    6. 'la' → logprob: -3.206009864807129
    7. ' quelle' → logprob: -3.956009864807129
    8. 'quelle' → logprob: -4.206009864807129
    9. 'l' → logprob: -4.206009864807129
    10. '        
' → logprob: -4.206009864807129

Token 674: ' il' (ID: 1793)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7128894329071045
    2. '   ' → logprob: -1.2128894329071045
    3. ' de' → logprob: -2.8378894329071045
    4. ' à' → logprob: -2.8378894329071045
    5. ' d' → logprob: -3.7128894329071045
    6. 'd' → logprob: -4.462889671325684
    7. ' il' → logprob: -4.712889671325684
    8. 'de' → logprob: -4.712889671325684
    9. 'à' → logprob: -4.962889671325684
    10. 'il' → logprob: -5.337889671325684

Token 675: ' faut' (ID: 17821)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2355546951293945
    2. '       ' → logprob: -1.3605546951293945
    3. ' vaut' → logprob: -1.3605546951293945
    4. ' faut' → logprob: -2.8605546951293945
    5. ' doit' → logprob: -3.7355546951293945
    6. ' ' → logprob: -4.3605546951293945
    7. ' n' → logprob: -4.3605546951293945
    8. ' est' → logprob: -4.8605546951293945
    9. ' reste' → logprob: -4.8605546951293945
    10. 'reste' → logprob: -5.3605546951293945

Token 676: ' retirer' (ID: 136490)
  Prédit: ' retirer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retirer' → logprob: -0.7072694301605225
    2. ' enlever' → logprob: -1.5822694301605225
    3. 'aj' → logprob: -1.7072694301605225
    4. ' ajouter' → logprob: -2.9572694301605225
    5. 'ret' → logprob: -3.3322694301605225
    6. ' retr' → logprob: -4.832269668579102
    7. ' ret' → logprob: -5.207269668579102
    8. 'en' → logprob: -5.957269668579102
    9. ' add' → logprob: -6.332269668579102
    10. ' ajust' → logprob: -6.457269668579102

Token 677: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0655316710472107
    2. '<|end|>' → logprob: -2.8155317306518555
    3. ',' → logprob: -6.5655317306518555
    4. ')' → logprob: -6.6905317306518555
    5. '
' → logprob: -8.315531730651855
    6. '<|end|>' → logprob: -8.690531730651855
    7. '	' → logprob: -9.190531730651855
    8. '        
' → logprob: -9.315531730651855
    9. ' if' → logprob: -9.815531730651855
    10. '.' → logprob: -10.690531730651855

Token 678: ' arriver' (ID: 78302)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aj' → logprob: -1.4459278583526611
    2. 'min' → logprob: -1.5709278583526611
    3. ' rendre' → logprob: -2.320927858352661
    4. 'k' → logprob: -2.445927858352661
    5. ' obtenir' → logprob: -3.570927858352661
    6. 'a' → logprob: -3.570927858352661
    7. ' réduire' → logprob: -3.570927858352661
    8. ' atteindre' → logprob: -3.570927858352661
    9. 'r' → logprob: -3.695927858352661
    10. ' ajust' → logprob: -3.695927858352661

Token 679: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13085098564624786
    2. '<|end|>' → logprob: -3.0058510303497314
    3. ' to' → logprob: -3.6308510303497314
    4. ' ' → logprob: -4.380850791931152
    5. 'à' → logprob: -4.755850791931152
    6. 'to' → logprob: -4.880850791931152
    7. 'a' → logprob: -4.880850791931152
    8. ' a' → logprob: -5.630850791931152
    9. '   ' → logprob: -6.880850791931152
    10. 'au' → logprob: -7.005850791931152

Token 680: ' un' (ID: 537)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03452041745185852
    2. 'k' → logprob: -3.534520387649536
    3. ' ' → logprob: -6.159520626068115
    4. ' k' → logprob: -6.159520626068115
    5. 's' → logprob: -8.159520149230957
    6. 'a' → logprob: -9.284520149230957
    7. ' s' → logprob: -9.909520149230957
    8. '(k' → logprob: -10.534520149230957
    9. 'zero' → logprob: -11.284520149230957
    10. 'le' → logprob: -11.534520149230957

Token 681: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.0005738823674619198
    2. 'multip' → logprob: -8.000574111938477
    3. ' multiple' → logprob: -9.375574111938477
    4. 'mult' → logprob: -9.500574111938477
    5. '```' → logprob: -10.375574111938477
    6. 'mod' → logprob: -10.750574111938477
    7. 'div' → logprob: -11.750574111938477
    8. 'k' → logprob: -12.500574111938477
    9. 's' → logprob: -13.250574111938477
    10. 'minimum' → logprob: -13.500574111938477

Token 682: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007329032756388187
    2. '<|end|>' → logprob: -5.632328987121582
    3. '   ' → logprob: -6.757328987121582
    4. '(k' → logprob: -7.257328987121582
    5. ' if' → logprob: -8.382328987121582
    6. ' (' → logprob: -8.632328987121582
    7. 'r' → logprob: -8.882328987121582
    8. 't' → logprob: -9.007328987121582
    9. 'rest' → logprob: -9.007328987121582
    10. 'b' → logprob: -9.507328987121582

Token 683: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016697037499397993
    2. ' if' → logprob: -6.876669883728027
    3. '<|end|>' → logprob: -8.251669883728027
    4. 'if' → logprob: -8.376669883728027
    5. 'b' → logprob: -9.251669883728027
    6. 'c' → logprob: -11.751669883728027
    7. ' b' → logprob: -12.001669883728027
    8. '   ' → logprob: -12.001669883728027
    9. ',' → logprob: -12.251669883728027
    10. '        
' → logprob: -12.501669883728027

Token 684: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.25573059916496277
    2. 'if' → logprob: -1.6307306289672852
    3. '   ' → logprob: -4.880730628967285
    4. 'add' → logprob: -4.880730628967285
    5. ' if' → logprob: -5.380730628967285
    6. '       ' → logprob: -5.630730628967285
    7. 'rem' → logprob: -6.005730628967285
    8. ' b' → logprob: -6.630730628967285
    9. 'r' → logprob: -7.505730628967285
    10. 'diff' → logprob: -7.755730628967285

Token 685: '=s' (ID: 32455)
  Prédit: '=s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=s' → logprob: -0.027698976919054985
    2. '=' → logprob: -3.7776989936828613
    3. '=k' → logprob: -5.902698993682861
    4. ' =' → logprob: -6.402698993682861
    5. 's' → logprob: -10.402698516845703
    6. '=(' → logprob: -11.027698516845703
    7. '=b' → logprob: -13.652698516845703
    8. '=
' → logprob: -13.652698516845703
    9. ' s' → logprob: -13.902698516845703
    10. '=a' → logprob: -14.152698516845703

Token 686: '-a' (ID: 8575)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05680317431688309
    2. '-a' → logprob: -2.9318032264709473
    3. '-' → logprob: -6.306803226470947
    4. ' a' → logprob: -10.056802749633789
    5. '-k' → logprob: -10.306802749633789
    6. 'a' → logprob: -11.056802749633789
    7. '-p' → logprob: -14.181802749633789
    8. '-а' → logprob: -14.806802749633789
    9. '-t' → logprob: -14.931802749633789
    10. '-A' → logprob: -15.056802749633789

Token 687: '    ' (ID: 257)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 688: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 689: ' Cal' (ID: 4453)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.6554685235023499
    2. '       ' → logprob: -1.030468463897705
    3. '#' → logprob: -2.905468463897705
    4. ' B' → logprob: -3.155468463897705
    5. 'b' → logprob: -4.530468463897705
    6. '   ' → logprob: -5.155468463897705
    7. ' #' → logprob: -6.030468463897705
    8. 'add' → logprob: -6.530468463897705
    9. ' add' → logprob: -6.655468463897705
    10. '    ' → logprob: -6.780468463897705

Token 690: 'cule' (ID: 45017)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.4532010555267334
    2. '       ' → logprob: -1.8282010555267334
    3. ' b' → logprob: -2.3282010555267334
    4. '#' → logprob: -2.3282010555267334
    5. ' l' → logprob: -2.4532010555267334
    6. '      ' → logprob: -3.0782010555267334
    7. '  ' → logprob: -3.2032010555267334
    8. '   ' → logprob: -3.3282010555267334
    9. ' #' → logprob: -3.5782010555267334
    10. 'b' → logprob: -3.5782010555267334

Token 691: ' combien' (ID: 106648)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ' il' (ID: 1793)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 693: ' faudrait' (ID: 128958)
  Prédit: ' faut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' faut' → logprob: -0.016835276037454605
    2. 'f' → logprob: -4.2668352127075195
    3. ' faudra' → logprob: -6.8918352127075195
    4. ' f' → logprob: -7.5168352127075195
    5. ' doit' → logprob: -8.14183521270752
    6. ' faudrait' → logprob: -8.39183521270752
    7. '	f' → logprob: -8.64183521270752
    8. ' F' → logprob: -8.89183521270752
    9. ' vaut' → logprob: -9.01683521270752
    10. ' ' → logprob: -10.76683521270752

Token 694: ' ajouter' (ID: 78457)
  Prédit: ' ajouter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -0.15963755548000336
    2. 'aj' → logprob: -2.159637451171875
    3. ' add' → logprob: -3.784637451171875
    4. ''aj' → logprob: -5.909637451171875
    5. 'add' → logprob: -6.159637451171875
    6. ' raj' → logprob: -6.534637451171875
    7. ' ' → logprob: -7.534637451171875
    8. '    ' → logprob: -7.909637451171875
    9. '#' → logprob: -8.159637451171875
    10. ' #' → logprob: -8.159637451171875

Token 695: ' à' (ID: 1221)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06327406316995621
    2. '<|end|>' → logprob: -2.8132741451263428
    3. ')' → logprob: -7.688273906707764
    4. ',' → logprob: -8.063274383544922
    5. '<|end|>' → logprob: -8.313274383544922
    6. '   ' → logprob: -9.188274383544922
    7. '        
' → logprob: -10.188274383544922
    8. ' to' → logprob: -11.313274383544922
    9. '	' → logprob: -11.438274383544922
    10. ' ' → logprob: -11.563274383544922

Token 696: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0016342396847903728
    2. ' k' → logprob: -6.501634120941162
    3. 'b' → logprob: -9.87663459777832
    4. 'L' → logprob: -9.87663459777832
    5. 'a' → logprob: -11.12663459777832
    6. ' L' → logprob: -12.00163459777832
    7. 's' → logprob: -12.12663459777832
    8. ' b' → logprob: -13.25163459777832
    9. ' a' → logprob: -14.87663459777832
    10. ' s' → logprob: -15.25163459777832

Token 697: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00727815693244338
    2. '<|end|>' → logprob: -5.007277965545654
    3. ',' → logprob: -8.382278442382812
    4. '   ' → logprob: -9.007278442382812
    5. '<|end|>' → logprob: -10.382278442382812
    6. ')' → logprob: -10.382278442382812
    7. ' if' → logprob: -10.507278442382812
    8. '        
' → logprob: -11.007278442382812
    9. ' ' → logprob: -11.257278442382812
    10. ' to' → logprob: -11.382278442382812

Token 698: ' arriver' (ID: 78302)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.8724040389060974
    2. ' atteindre' → logprob: -1.4974040985107422
    3. ' devenir' → logprob: -2.372404098510742
    4. 'que' → logprob: -2.622404098510742
    5. 'ce' → logprob: -3.122404098510742
    6. ' arriver' → logprob: -3.622404098510742
    7. ' ce' → logprob: -3.872404098510742
    8. 'arr' → logprob: -3.997404098510742
    9. ' que' → logprob: -4.497404098510742
    10. 'faire' → logprob: -4.872404098510742

Token 699: ' au' (ID: 2791)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00849921628832817
    2. 'à' → logprob: -5.1334991455078125
    3. ' a' → logprob: -6.2584991455078125
    4. 'a' → logprob: -8.258499145507812
    5. ' ' → logprob: -8.383499145507812
    6. '<|end|>' → logprob: -9.508499145507812
    7. ' to' → logprob: -10.383499145507812
    8. ' au' → logprob: -10.633499145507812
    9. 'au' → logprob: -11.383499145507812
    10. ' ' → logprob: -11.633499145507812

Token 700: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.2767721712589264
    2. 'pro' → logprob: -1.901772141456604
    3. 's' → logprob: -2.4017722606658936
    4. ' multiple' → logprob: -7.2767720222473145
    5. 'multip' → logprob: -7.6517720222473145
    6. 'su' → logprob: -8.026772499084473
    7. 'plus' → logprob: -8.651772499084473
    8. 'next' → logprob: -9.026772499084473
    9. '```' → logprob: -10.401772499084473
    10. ' prochain' → logprob: -10.651772499084473

Token 701: ' supérieur' (ID: 98491)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031182723119854927
    2. '   ' → logprob: -3.7811827659606934
    3. '<|end|>' → logprob: -5.156182765960693
    4. '           ' → logprob: -7.531182765960693
    5. ')' → logprob: -8.031182289123535
    6. '     ' → logprob: -8.656182289123535
    7. ',' → logprob: -8.656182289123535
    8. '    ' → logprob: -8.906182289123535
    9. '        
' → logprob: -8.906182289123535
    10. ' if' → logprob: -9.156182289123535

Token 702: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23109310865402222
    2. '<|end|>' → logprob: -1.606093168258667
    3. ',' → logprob: -6.481092929840088
    4. '   ' → logprob: -6.606092929840088
    5. '<|end|>' → logprob: -7.231092929840088
    6. ')' → logprob: -7.606092929840088
    7. '        
' → logprob: -7.606092929840088
    8. '
' → logprob: -8.356093406677246
    9. '           ' → logprob: -8.981093406677246
    10. '```' → logprob: -9.481093406677246

Token 703: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018151935189962387
    2. ' s' → logprob: -4.018151760101318
    3. 'k' → logprob: -13.393152236938477
    4. ' k' → logprob: -15.393152236938477
    5. ' ' → logprob: -15.893152236938477
    6. ' ' → logprob: -16.518152236938477
    7. '```' → logprob: -16.768152236938477
    8. '	s' → logprob: -17.768152236938477
    9. '`s' → logprob: -17.893152236938477
    10. 'l' → logprob: -18.143152236938477

Token 704: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020564312115311623
    2. '<|end|>' → logprob: -4.020564079284668
    3. '
' → logprob: -6.770564079284668
    4. ',' → logprob: -7.145564079284668
    5. '        
' → logprob: -8.270564079284668
    6. '   ' → logprob: -10.145564079284668
    7. '<|end|>' → logprob: -10.270564079284668
    8. ')' → logprob: -10.770564079284668
    9. '#' → logprob: -10.770564079284668
    10. '       
' → logprob: -11.520564079284668

Token 705: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002698831958696246
    2. '<|end|>' → logprob: -6.50269889831543
    3. '        
' → logprob: -7.62769889831543
    4. '
' → logprob: -8.75269889831543
    5. '   ' → logprob: -8.87769889831543
    6. '```' → logprob: -9.25269889831543
    7. '           ' → logprob: -10.00269889831543
    8. 'A' → logprob: -10.00269889831543
    9. 'a' → logprob: -10.12769889831543
    10. ',' → logprob: -10.25269889831543

Token 706: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.02266201749444008
    2. 'if' → logprob: -3.8976619243621826
    3. 'B' → logprob: -6.397662162780762
    4. '   ' → logprob: -8.147662162780762
    5. '       ' → logprob: -8.897662162780762
    6. ' if' → logprob: -11.272662162780762
    7. ' A' → logprob: -12.272662162780762
    8. 'a' → logprob: -12.772662162780762
    9. '```' → logprob: -13.772662162780762
    10. '           ' → logprob: -13.897662162780762

Token 707: ' Si' (ID: 7832)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.20509329438209534
    2. 'if' → logprob: -1.705093264579773
    3. 'B' → logprob: -6.5800933837890625
    4. '   ' → logprob: -7.3300933837890625
    5. '       ' → logprob: -7.4550933837890625
    6. ' if' → logprob: -7.5800933837890625
    7. ' A' → logprob: -8.205093383789062
    8. 'minus' → logprob: -8.955093383789062
    9. 'a' → logprob: -10.205093383789062
    10. '#' → logprob: -10.455093383789062

Token 708: ' retirer' (ID: 136490)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.07216740399599075
    2. 'a' → logprob: -2.69716739654541
    3. ' b' → logprob: -6.32216739654541
    4. 'b' → logprob: -7.82216739654541
    5. ' ' → logprob: -11.57216739654541
    6. '(a' → logprob: -11.82216739654541
    7. ' k' → logprob: -12.19716739654541
    8. ' ' → logprob: -12.82216739654541
    9. ' s' → logprob: -13.32216739654541
    10. '	a' → logprob: -13.94716739654541

Token 709: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.20145641267299652
    2. 'a' → logprob: -1.7014564275741577
    3. ' <=' → logprob: -11.201456069946289
    4. ' ' → logprob: -12.201456069946289
    5. ' b' → logprob: -12.326456069946289
    6. '(a' → logprob: -12.451456069946289
    7. '<=' → logprob: -12.701456069946289
    8. 'b' → logprob: -12.826456069946289
    9. ' k' → logprob: -13.201456069946289
    10. ' ' → logprob: -13.576456069946289

Token 710: ' coû' (ID: 66085)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.040686313062906265
    2. '<=' → logprob: -3.2906863689422607
    3. ' >' → logprob: -6.790686130523682
    4. ' <' → logprob: -7.165686130523682
    5. ' >=' → logprob: -7.790686130523682
    6. '>' → logprob: -9.54068660736084
    7. 'a' → logprob: -9.66568660736084
    8. ' ' → logprob: -9.79068660736084
    9. ' ==' → logprob: -10.16568660736084
    10. ' a' → logprob: -10.16568660736084

Token 711: 'ter' (ID: 399)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.22099465131759644
    2. 'ute' → logprob: -2.845994710922241
    3. 'u' → logprob: -3.345994710922241
    4. 'ût' → logprob: -3.595994710922241
    5. 'û' → logprob: -3.720994710922241
    6. 'a' → logprob: -4.095994472503662
    7. 't' → logprob: -4.220994472503662
    8. 'up' → logprob: -5.595994472503662
    9. 'tte' → logprob: -5.595994472503662
    10. 'te' → logprob: -6.095994472503662

Token 712: 'ait' (ID: 1271)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.32182827591896057
    2. '<=' → logprob: -2.4468283653259277
    3. ' <' → logprob: -2.5718283653259277
    4. ' >' → logprob: -2.6968283653259277
    5. '>' → logprob: -3.6968283653259277
    6. ' a' → logprob: -5.196828365325928
    7. 'a' → logprob: -5.196828365325928
    8. '<' → logprob: -5.696828365325928
    9. ' plus' → logprob: -6.946828365325928
    10. ' >=' → logprob: -7.071828365325928

Token 713: ' plus' (ID: 2932)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.20515477657318115
    2. '<=' → logprob: -1.9551547765731812
    3. ' <' → logprob: -4.080154895782471
    4. ' a' → logprob: -4.330154895782471
    5. ' moins' → logprob: -5.455154895782471
    6. 'a' → logprob: -6.080154895782471
    7. '<' → logprob: -6.455154895782471
    8. ' plus' → logprob: -6.705154895782471
    9. ' >' → logprob: -6.955154895782471
    10. ' k' → logprob: -7.080154895782471

Token 714: ' qu' (ID: 474)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4392854571342468
    2. ' >' → logprob: -2.1892855167388916
    3. ' de' → logprob: -3.1892855167388916
    4. 'plus' → logprob: -3.8142855167388916
    5. '<=' → logprob: -3.9392855167388916
    6. 'b' → logprob: -4.0642852783203125
    7. 'au' → logprob: -4.1892852783203125
    8. 'a' → logprob: -4.1892852783203125
    9. 'add' → logprob: -4.3142852783203125
    10. 'de' → logprob: -4.3142852783203125

Token 715: ''aj' (ID: 116735)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.6068460941314697
    2. ' a' → logprob: -1.6068460941314697
    3. ' b' → logprob: -1.9818460941314697
    4. '>' → logprob: -2.1068460941314697
    5. '=' → logprob: -2.2318460941314697
    6. 'b' → logprob: -2.6068460941314697
    7. ' >' → logprob: -3.1068460941314697
    8. ' add' → logprob: -3.7318460941314697
    9. ' ' → logprob: -3.9818460941314697
    10. 'u' → logprob: -4.106845855712891

Token 716: 'outer' (ID: 5838)
  Prédit: 'outer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'outer' → logprob: -0.0006583464564755559
    2. 'out' → logprob: -7.5006585121154785
    3. 'oute' → logprob: -10.25065803527832
    4. 'd' → logprob: -10.75065803527832
    5. 'outez' → logprob: -11.62565803527832
    6. '>' → logprob: -11.75065803527832
    7. '#' → logprob: -12.00065803527832
    8. 'ouer' → logprob: -12.50065803527832
    9. '```' → logprob: -12.50065803527832
    10. 'o' → logprob: -12.62565803527832

Token 717: ' b' (ID: 287)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05375591292977333
    2. '>' → logprob: -3.55375599861145
    3. ' <=' → logprob: -4.428755760192871
    4. ' <' → logprob: -5.678755760192871
    5. ' >=' → logprob: -6.053755760192871
    6. 'b' → logprob: -6.178755760192871
    7. ' b' → logprob: -6.428755760192871
    8. '>b' → logprob: -6.928755760192871
    9. '<=' → logprob: -7.803755760192871
    10. ' k' → logprob: -8.553755760192871

Token 718: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4839971959590912
    2. ' >' → logprob: -2.358997106552124
    3. ',' → logprob: -2.733997106552124
    4. '       ' → logprob: -2.858997106552124
    5. ' or' → logprob: -2.983997106552124
    6. '>' → logprob: -2.983997106552124
    7. ' and' → logprob: -3.233997106552124
    8. ' :' → logprob: -4.733997344970703
    9. ' <=' → logprob: -5.483997344970703
    10. '   ' → logprob: -5.483997344970703

Token 719: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16852782666683197
    2. ' continue' → logprob: -2.418527841567993
    3. ' if' → logprob: -3.168527841567993
    4. '           ' → logprob: -4.668527603149414
    5. '   ' → logprob: -5.293527603149414
    6. 'if' → logprob: -5.543527603149414
    7. 'continue' → logprob: -5.668527603149414
    8. ' add' → logprob: -7.543527603149414
    9. '    ' → logprob: -7.918527603149414
    10. '        ' → logprob: -8.418527603149414

Token 720: ' préfère' (ID: 141784)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.1877925992012024
    2. 'continue' → logprob: -2.5627925395965576
    3. '       ' → logprob: -3.1877925395965576
    4. '           ' → logprob: -3.5627925395965576
    5. ' add' → logprob: -5.312792778015137
    6. 'else' → logprob: -5.687792778015137
    7. ' else' → logprob: -5.812792778015137
    8. '#' → logprob: -6.062792778015137
    9. ' ajoute' → logprob: -6.062792778015137
    10. ' préfère' → logprob: -7.312792778015137

Token 721: ' ajouter' (ID: 78457)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.14660246670246124
    2. 'add' → logprob: -2.6466023921966553
    3. ' ajouter' → logprob: -3.5216023921966553
    4. '       ' → logprob: -4.021602630615234
    5. ' B' → logprob: -5.646602630615234
    6. 'B' → logprob: -5.771602630615234
    7. '   ' → logprob: -5.896602630615234
    8. 'aj' → logprob: -6.146602630615234
    9. 'b' → logprob: -6.271602630615234
    10. ' b' → logprob: -6.646602630615234

Token 722: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3078056573867798
    2. ' b' → logprob: -1.9328056573867798
    3. 'b' → logprob: -3.0578055381774902
    4. ' if' → logprob: -3.5578055381774902
    5. '           ' → logprob: -4.55780553817749
    6. '   ' → logprob: -4.80780553817749
    7. ' (' → logprob: -5.05780553817749
    8. '        ' → logprob: -5.43280553817749
    9. 'if' → logprob: -5.68280553817749
    10. ',' → logprob: -5.93280553817749

Token 723: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04553483799099922
    2. ' if' → logprob: -3.29553484916687
    3. 'if' → logprob: -5.295534610748291
    4. '```' → logprob: -6.920534610748291
    5. '        
' → logprob: -8.42053508758545
    6. ',' → logprob: -8.67053508758545
    7. '<|end|>' → logprob: -8.79553508758545
    8. ' and' → logprob: -8.79553508758545
    9. '           ' → logprob: -8.92053508758545
    10. '   ' → logprob: -9.17053508758545

Token 724: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7023698687553406
    2. ' if' → logprob: -0.8273698687553406
    3. 'if' (adapté à ' if') → logprob: -2.7023699283599854
    4. '   ' → logprob: -8.327369689941406
    5. '```' → logprob: -10.077369689941406
    6. '           ' → logprob: -10.827369689941406
    7. '	if' → logprob: -11.452369689941406
    8. '        ' → logprob: -11.827369689941406
    9. ' ' → logprob: -12.327369689941406
    10. ' ' → logprob: -12.452369689941406

Token 725: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.21634823083877563
    2. ' a' → logprob: -1.7163481712341309
    3. 'b' → logprob: -4.466348171234131
    4. ' b' → logprob: -5.716348171234131
    5. ' add' → logprob: -11.216348648071289
    6. ' ' → logprob: -11.591348648071289
    7. '   ' → logprob: -12.341348648071289
    8. '(a' → logprob: -12.341348648071289
    9. '	a' → logprob: -12.966348648071289
    10. 'add' → logprob: -12.966348648071289

Token 726: '>b' (ID: 150455)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3873749077320099
    2. '>' → logprob: -1.1373748779296875
    3. ' <=' → logprob: -8.887374877929688
    4. ' <' → logprob: -9.137374877929688
    5. '<' → logprob: -9.512374877929688
    6. '>b' → logprob: -9.637374877929688
    7. '<=' → logprob: -9.762374877929688
    8. ' >=' → logprob: -10.512374877929688
    9. '>=' → logprob: -10.887374877929688
    10. ' ' → logprob: -12.137374877929688

Token 727: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017376589821651578
    2. ':
' → logprob: -6.751737594604492
    3. ' :' → logprob: -7.626737594604492
    4. '       ' → logprob: -10.376737594604492
    5. '   ' → logprob: -10.876737594604492
    6. ',' → logprob: -12.126737594604492
    7. '):' → logprob: -12.751737594604492
    8. '<|end|>' → logprob: -12.751737594604492
    9. ' :
' → logprob: -12.751737594604492
    10. '=' → logprob: -13.001737594604492

Token 728: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029507463797926903
    2. '       ' → logprob: -4.404507637023926
    3. ' add' → logprob: -4.904507637023926
    4. ':' → logprob: -5.529507637023926
    5. ':
' → logprob: -7.029507637023926
    6. 'add' → logprob: -7.529507637023926
    7. '.add' → logprob: -7.654507637023926
    8. '               ' → logprob: -7.779507637023926
    9. '	       ' → logprob: -7.779507637023926
    10. '            
' → logprob: -8.279507637023926

Token 729: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.12992393970489502
    2. '           ' → logprob: -2.3799238204956055
    3. ' add' → logprob: -4.0049238204956055
    4. 'B' → logprob: -4.6299238204956055
    5. '   ' → logprob: -7.7549238204956055
    6. '       ' → logprob: -7.8799238204956055
    7. 'b' → logprob: -8.254923820495605
    8. ' B' → logprob: -9.254923820495605
    9. 'minus' → logprob: -10.379923820495605
    10. '```' → logprob: -11.129923820495605

Token 730: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.062126997858285904
    2. ' +=' → logprob: -2.812127113342285
    3. '   ' → logprob: -9.062127113342285
    4. ']+=' → logprob: -10.562127113342285
    5. '+=(' → logprob: -11.437127113342285
    6. '	' → logprob: -12.937127113342285
    7. '    ' → logprob: -14.062127113342285
    8. '  ' → logprob: -14.187127113342285
    9. '       ' → logprob: -14.312127113342285
    10. 'B' → logprob: -14.687127113342285

Token 731: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5094070477061905e-05
    2. ' b' → logprob: -11.125015258789062
    3. '1' → logprob: -15.625015258789062
    4. '   ' → logprob: -16.125015258789062
    5. 'a' → logprob: -16.875015258789062
    6. '0' → logprob: -17.000015258789062
    7. 'B' → logprob: -17.125015258789062
    8. '	b' → logprob: -17.625015258789062
    9. 'k' → logprob: -18.750015258789062
    10. ' ' → logprob: -19.125015258789062

Token 732: '      ' (ID: 1699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002715873415581882
    2. '
' → logprob: -8.375271797180176
    3. 'B' → logprob: -11.125271797180176
    4. '       ' → logprob: -11.375271797180176
    5. ',' → logprob: -12.625271797180176
    6. 'b' → logprob: -13.000271797180176
    7. '          ' → logprob: -13.375271797180176
    8. ' B' → logprob: -13.375271797180176
    9. '               ' → logprob: -13.375271797180176
    10. '   ' → logprob: -13.625271797180176

Token 733: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0034778357949107885
    2. 'B' → logprob: -6.253478050231934
    3. '
' → logprob: -6.628478050231934
    4. 'b' → logprob: -10.003478050231934
    5. '       ' → logprob: -10.253478050231934
    6. ' B' → logprob: -10.503478050231934
    7. '		' → logprob: -10.628478050231934
    8. '               ' → logprob: -10.878478050231934
    9. '	       ' → logprob: -11.128478050231934
    10. ',' → logprob: -11.378478050231934

Token 734: ' On' (ID: 2160)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0027931109070777893
    2. '           ' → logprob: -6.002793312072754
    3. ' B' → logprob: -8.877793312072754
    4. '       ' → logprob: -9.002793312072754
    5. '   ' → logprob: -10.877793312072754
    6. 'A' → logprob: -11.252793312072754
    7. 'add' → logprob: -11.377793312072754
    8. 'b' → logprob: -12.627793312072754
    9. '#' → logprob: -13.252793312072754
    10. '               ' → logprob: -13.627793312072754

Token 735: ' incr' (ID: 52395)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05578688904643059
    2. ' B' → logprob: -3.9307868480682373
    3. '       ' → logprob: -3.9307868480682373
    4. 'append' → logprob: -5.555787086486816
    5. 'continue' → logprob: -6.055787086486816
    6. '           ' → logprob: -6.180787086486816
    7. '   ' → logprob: -6.430787086486816
    8. 'A' → logprob: -6.555787086486816
    9. ' continue' → logprob: -6.930787086486816
    10. 'add' → logprob: -7.555787086486816

Token 736: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5066171288490295
    2. 'crement' → logprob: -2.7566170692443848
    3. 'uste' → logprob: -3.1316170692443848
    4. 't' → logprob: -3.5066170692443848
    5. 'rement' → logprob: -3.6316170692443848
    6. 'ément' → logprob: -3.7566170692443848
    7. 'mente' → logprob: -4.131617069244385
    8. 'ite' → logprob: -4.506617069244385
    9. 'ète' → logprob: -4.506617069244385
    10. 'té' → logprob: -4.881617069244385

Token 737: 'mente' (ID: 4186)
  Prédit: 'mente'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mente' → logprob: -0.012661506421864033
    2. 'ment' → logprob: -4.387661457061768
    3. 'm' → logprob: -10.137661933898926
    4. 'mental' → logprob: -10.512661933898926
    5. 'nte' → logprob: -10.637661933898926
    6. 'mé' → logprob: -10.887661933898926
    7. 'mented' → logprob: -11.637661933898926
    8. 'mentation' → logprob: -11.887661933898926
    9. 'мент' → logprob: -12.512661933898926
    10. 'mentar' → logprob: -12.637661933898926

Token 738: ' le' (ID: 505)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.36250177025794983
    2. 'add' → logprob: -1.8625017404556274
    3. 'b' → logprob: -2.362501859664917
    4. ' add' → logprob: -3.112501859664917
    5. ' B' → logprob: -5.112501621246338
    6. '           ' → logprob: -5.987501621246338
    7. ' b' → logprob: -6.487501621246338
    8. ')' → logprob: -11.487502098083496
    9. '       ' → logprob: -11.612502098083496
    10. '            ' → logprob: -11.862502098083496

Token 739: ' coût' (ID: 73109)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.00374533305875957
    2. ' add' → logprob: -5.6287455558776855
    3. 'B' → logprob: -8.878745079040527
    4. ' B' → logprob: -12.878745079040527
    5. 'b' → logprob: -13.378745079040527
    6. '   ' → logprob: -15.003745079040527
    7. ' ' → logprob: -15.003745079040527
    8. 'A' → logprob: -15.253745079040527
    9. '  ' → logprob: -15.378745079040527
    10. 'a' → logprob: -15.753745079040527

Token 740: ' total' (ID: 3609)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23094068467617035
    2. '<|end|>' → logprob: -2.480940580368042
    3. ' +=' → logprob: -3.355940580368042
    4. '+=' → logprob: -3.480940580368042
    5. '       ' → logprob: -4.230940818786621
    6. 'add' → logprob: -4.980940818786621
    7. 'b' → logprob: -5.230940818786621
    8. '
' → logprob: -5.355940818786621
    9. ')' → logprob: -5.480940818786621
    10. '          ' → logprob: -5.730940818786621

Token 741: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 742: ' ajouter' (ID: 78457)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0049642897211015224
    2. 'aj' → logprob: -5.379964351654053
    3. ' add' → logprob: -8.629963874816895
    4. 'b' → logprob: -10.129963874816895
    5. 'addition' → logprob: -10.129963874816895
    6. ' ajouter' → logprob: -10.379963874816895
    7. 'plus' → logprob: -11.379963874816895
    8. '+' → logprob: -11.504963874816895
    9. '	add' → logprob: -11.754963874816895
    10. ' ' → logprob: -12.129963874816895

Token 743: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020593391731381416
    2. '       ' → logprob: -4.645593166351318
    3. '<|end|>' → logprob: -4.645593166351318
    4. ')' → logprob: -8.145593643188477
    5. '               ' → logprob: -8.895593643188477
    6. '
' → logprob: -8.895593643188477
    7. ',' → logprob: -9.145593643188477
    8. 'b' → logprob: -9.395593643188477
    9. 'B' → logprob: -9.520593643188477
    10. '            
' → logprob: -10.020593643188477

Token 744: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32614755630493164
    2. '       ' → logprob: -1.3261475563049316
    3. 'B' → logprob: -5.076147556304932
    4. ' B' → logprob: -6.326147556304932
    5. '   ' → logprob: -6.451147556304932
    6. '
' → logprob: -6.576147556304932
    7. 'else' → logprob: -7.701147556304932
    8. '<|end|>' → logprob: -7.701147556304932
    9. '```' → logprob: -8.701147079467773
    10. 'b' → logprob: -9.076147079467773

Token 745: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.002160018077120185
    2. '           ' → logprob: -6.37716007232666
    3. '       ' → logprob: -8.37716007232666
    4. 'A' → logprob: -8.50216007232666
    5. '   ' → logprob: -10.87716007232666
    6. ' B' → logprob: -12.75216007232666
    7. 'b' → logprob: -13.12716007232666
    8. '               ' → logprob: -15.00216007232666
    9. ',' → logprob: -16.377159118652344
    10. '	B' → logprob: -16.377159118652344

Token 746: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.004094904754310846
    2. '.' → logprob: -5.504095077514648
    3. ' .' → logprob: -11.254095077514648
    4. '.app' → logprob: -13.254095077514648
    5. '.ap' → logprob: -13.879095077514648
    6. 'append' → logprob: -14.379095077514648
    7. '.add' → logprob: -17.50409507751465
    8. ').' → logprob: -17.75409507751465
    9. '.Append' → logprob: -17.75409507751465
    10. '.extend' → logprob: -17.87909507751465

Token 747: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -2.3795937522663735e-05
    2. '((' → logprob: -10.75002384185791
    3. '(' → logprob: -13.87502384185791
    4. '(k' → logprob: -14.25002384185791
    5. 'b' → logprob: -14.37502384185791
    6. ' (' → logprob: -17.000022888183594
    7. '(j' → logprob: -18.375022888183594
    8. '(a' → logprob: -18.500022888183594
    9. '(B' → logprob: -18.500022888183594
    10. '	b' → logprob: -19.500022888183594

Token 748: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003190193965565413
    2. ')
' → logprob: -8.375319480895996
    3. ' )' → logprob: -9.375319480895996
    4. '       ' → logprob: -12.875319480895996
    5. ')
' → logprob: -14.875319480895996
    6. '   ' → logprob: -15.375319480895996
    7. ' )
' → logprob: -16.00031852722168
    8. ')#' → logprob: -16.50031852722168
    9. ')`' → logprob: -16.62531852722168
    10. '           ' → logprob: -16.62531852722168

Token 749: ' ' (ID: 220)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3700481057167053
    2. '
' → logprob: -1.2450480461120605
    3. '<|end|>' → logprob: -4.2450480461120605
    4. ' 
' → logprob: -6.1200480461120605
    5. 'else' → logprob: -6.2450480461120605
    6. '  
' → logprob: -6.3700480461120605
    7. ' else' → logprob: -8.245048522949219
    8. '    
' → logprob: -8.870048522949219
    9. '
' → logprob: -8.870048522949219
    10. ')' → logprob: -9.120048522949219

Token 750: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03434706851840019
    2. '
' → logprob: -3.5343470573425293
    3. 'else' → logprob: -6.034347057342529
    4. '<|end|>' → logprob: -6.784347057342529
    5. '  
' → logprob: -8.034347534179688
    6. ' 
' → logprob: -8.534347534179688
    7. '   ' → logprob: -8.659347534179688
    8. ' else' → logprob: -8.784347534179688
    9. '    
' → logprob: -10.034347534179688
    10. ')' → logprob: -10.409347534179688

Token 751: ' On' (ID: 2160)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2857135832309723
    2. ' b' → logprob: -2.4107136726379395
    3. 'B' → logprob: -2.6607136726379395
    4. 'else' → logprob: -3.6607136726379395
    5. '       ' → logprob: -3.6607136726379395
    6. ' continue' → logprob: -4.4107136726379395
    7. ' else' → logprob: -4.5357136726379395
    8. 'continue' → logprob: -5.5357136726379395
    9. ' B' → logprob: -5.7857136726379395
    10. '   ' → logprob: -6.0357136726379395

Token 752: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.007401464972645044
    2. 'continue' → logprob: -5.507401466369629
    3. '.append' → logprob: -6.007401466369629
    4. ' append' → logprob: -7.382401466369629
    5. 'remove' → logprob: -9.632401466369629
    6. 'else' → logprob: -9.632401466369629
    7. ' continue' → logprob: -10.132401466369629
    8. 'sort' → logprob: -10.757401466369629
    9. '       ' → logprob: -11.507401466369629
    10. '   ' → logprob: -11.632401466369629

Token 753: ' la' (ID: 557)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0007231564959511161
    2. 'b' → logprob: -7.250723361968994
    3. '(' → logprob: -11.375722885131836
    4. ' (' → logprob: -14.000722885131836
    5. '((' → logprob: -15.125722885131836
    6. '(B' → logprob: -15.375722885131836
    7. '(k' → logprob: -15.625722885131836
    8. '	b' → logprob: -17.125722885131836
    9. '(a' → logprob: -17.500722885131836
    10. '(
' → logprob: -17.750722885131836

Token 754: ' quantité' (ID: 89219)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04325540363788605
    2. ' b' → logprob: -3.16825532913208
    3. 'B' → logprob: -9.168255805969238
    4. ' ' → logprob: -10.668255805969238
    5. '```' → logprob: -10.668255805969238
    6. ')' → logprob: -11.043255805969238
    7. '   ' → logprob: -11.293255805969238
    8. ' B' → logprob: -11.543255805969238
    9. ' valeur' → logprob: -12.168255805969238
    10. 'tab' → logprob: -12.293255805969238

Token 755: ' ajout' (ID: 64605)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4029584527015686
    2. '<|end|>' → logprob: -2.152958393096924
    3. ' to' → logprob: -2.902958393096924
    4. '           ' → logprob: -3.027958393096924
    5. 'à' → logprob: -3.652958393096924
    6. '   ' → logprob: -3.777958393096924
    7. '       ' → logprob: -3.902958393096924
    8. ')' → logprob: -4.027958393096924
    9. 'to' → logprob: -4.527958393096924
    10. ' ' → logprob: -5.527958393096924

Token 756: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.024202769622206688
    2. 'e' → logprob: -4.024202823638916
    3. 'é' → logprob: -5.649202823638916
    4. 'ee' → logprob: -6.649202823638916
    5. 'er' → logprob: -7.649202823638916
    6. 'b' → logprob: -8.274202346801758
    7. '   ' → logprob: -8.774202346801758
    8. ')' → logprob: -9.149202346801758
    9. 'ed' → logprob: -9.649202346801758
    10. 'ue' → logprob: -10.024202346801758

Token 757: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 758: ' la' (ID: 557)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.383526149671525e-05
    2. ' B' → logprob: -10.125053405761719
    3. 'A' → logprob: -11.250053405761719
    4. 'la' → logprob: -14.500053405761719
    5. ' la' → logprob: -16.62505340576172
    6. 'l' → logprob: -16.75005340576172
    7. ' ' → logprob: -17.25005340576172
    8. '	B' → logprob: -17.25005340576172
    9. 'list' → logprob: -17.37505340576172
    10. 'the' → logprob: -17.62505340576172

Token 759: ' liste' (ID: 31719)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0057151163928210735
    2. 'liste' → logprob: -5.3807148933410645
    3. 'list' → logprob: -6.8807148933410645
    4. ' liste' → logprob: -9.880715370178223
    5. ' B' → logprob: -11.880715370178223
    6. 'b' → logprob: -13.255715370178223
    7. 'A' → logprob: -13.255715370178223
    8. 'lista' → logprob: -13.630715370178223
    9. '```' → logprob: -13.755715370178223
    10. ' list' → logprob: -13.880715370178223

Token 760: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.11702939122915268
    2. 'A' → logprob: -2.4920294284820557
    3. '   ' → logprob: -4.867029190063477
    4. 'else' → logprob: -5.242029190063477
    5. '(B' → logprob: -5.617029190063477
    6. '       ' → logprob: -5.742029190063477
    7. '(A' → logprob: -6.242029190063477
    8. ')' → logprob: -6.867029190063477
    9. '()' → logprob: -7.242029190063477
    10. ' B' → logprob: -7.242029190063477

Token 761: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06533124297857285
    2. '<|end|>' → logprob: -2.940331220626831
    3. 'else' → logprob: -5.06533145904541
    4. ' else' → logprob: -5.69033145904541
    5. '   ' → logprob: -8.31533145904541
    6. '<|end|>' → logprob: -9.31533145904541
    7. '           ' → logprob: -9.44033145904541
    8. 'continue' → logprob: -10.44033145904541
    9. '```' → logprob: -10.44033145904541
    10. '        ' → logprob: -10.69033145904541

Token 762: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018234115093946457
    2. 'else' → logprob: -4.1432342529296875
    3. ' else' → logprob: -6.5182342529296875
    4. ' 
' → logprob: -8.768234252929688
    5. '
' → logprob: -9.018234252929688
    6. '           ' → logprob: -9.143234252929688
    7. '    
' → logprob: -9.643234252929688
    8. '<|end|>' → logprob: -9.643234252929688
    9. '  
' → logprob: -9.893234252929688
    10. '        
' → logprob: -10.143234252929688

Token 763: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2596109211444855
    2. 'else' → logprob: -1.509610891342163
    3. ' else' → logprob: -4.884611129760742
    4. '   ' → logprob: -9.759611129760742
    5. '```' → logprob: -10.884611129760742
    6. 'elif' → logprob: -13.009611129760742
    7. '           ' → logprob: -13.134611129760742
    8. ' ' → logprob: -13.259611129760742
    9. '	else' → logprob: -13.259611129760742
    10. '\
' → logprob: -14.009611129760742

Token 764: ' Sinon' (ID: 154924)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.008688205853104591
    2. ' else' → logprob: -4.758687973022461
    3. 'elif' → logprob: -9.633687973022461
    4. '   ' → logprob: -12.508687973022461
    5. '       ' → logprob: -13.133687973022461
    6. '```' → logprob: -13.883687973022461
    7. 'if' → logprob: -14.383687973022461
    8. ' elif' → logprob: -14.508687973022461
    9. '	else' → logprob: -15.008687973022461
    10. ' ' → logprob: -16.13368797302246

Token 765: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5240535736083984
    2. ':' → logprob: -1.6490535736083984
    3. 'else' → logprob: -1.8990535736083984
    4. '       ' → logprob: -2.7740535736083984
    5. '   ' → logprob: -5.774053573608398
    6. ' else' → logprob: -8.149053573608398
    7. '           ' → logprob: -10.524053573608398
    8. '```' → logprob: -10.524053573608398
    9. '):
' → logprob: -10.774053573608398
    10. ':

' → logprob: -11.149053573608398

Token 766: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7537322640419006
    2. 'else' → logprob: -0.8787322640419006
    3. ' else' → logprob: -3.003732204437256
    4. 'minus' → logprob: -3.628732204437256
    5. '           ' → logprob: -4.003732204437256
    6. '   ' → logprob: -4.628732204437256
    7. ' minus' → logprob: -4.753732204437256
    8. 'add' → logprob: -7.628732204437256
    9. ':' → logprob: -8.253732681274414
    10. ' add' → logprob: -8.753732681274414

Token 767: ' retirer' (ID: 136490)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5334773659706116
    2. 'a' → logprob: -0.9084773659706116
    3. ' not' → logprob: -4.908477306365967
    4. 'not' → logprob: -6.283477306365967
    5. 'else' → logprob: -7.033477306365967
    6. ' else' → logprob: -9.908477783203125
    7. '	a' → logprob: -10.408477783203125
    8. '#' → logprob: -10.658477783203125
    9. '#a' → logprob: -11.783477783203125
    10. ' ' → logprob: -11.783477783203125

Token 768: ' est' (ID: 893)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.829304039478302
    2. ' a' → logprob: -1.2043039798736572
    3. '<=' → logprob: -1.8293039798736572
    4. ' <=' → logprob: -2.4543039798736572
    5. ' not' → logprob: -4.204304218292236
    6. 'else' → logprob: -6.954304218292236
    7. 'not' → logprob: -7.454304218292236
    8. ' else' → logprob: -7.954304218292236
    9. '   ' → logprob: -9.079303741455078
    10. ':' → logprob: -9.704303741455078

Token 769: ' moins' (ID: 15924)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16095061600208282
    2. ' a' → logprob: -2.2859506607055664
    3. '<=' → logprob: -3.5359506607055664
    4. ' not' → logprob: -4.535950660705566
    5. 'not' → logprob: -5.410950660705566
    6. 'else' → logprob: -7.035950660705566
    7. ' <=' → logprob: -7.160950660705566
    8. ':' → logprob: -8.535950660705566
    9. '...' → logprob: -8.785950660705566
    10. ' True' → logprob: -9.410950660705566

Token 770: ' coûte' (ID: 118994)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.07135501503944397
    2. 'ou' → logprob: -3.321355104446411
    3. '=' → logprob: -4.071354866027832
    4. '<' → logprob: -5.571354866027832
    5. 'or' → logprob: -5.696354866027832
    6. 'a' → logprob: -5.821354866027832
    7. ' <=' → logprob: -6.821354866027832
    8. '==' → logprob: -6.946354866027832
    9. ' ou' → logprob: -7.321354866027832
    10. '>=' → logprob: -7.321354866027832

Token 771: 'ux' (ID: 1778)
  Prédit: 'ux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ux' → logprob: -0.019396023824810982
    2. 'eux' → logprob: -5.01939582824707
    3. 'ieux' → logprob: -5.14439582824707
    4. 'ur' → logprob: -5.39439582824707
    5. 'ueux' → logprob: -7.14439582824707
    6. 'u' → logprob: -7.76939582824707
    7. 'e' → logprob: -8.64439582824707
    8. '   ' → logprob: -9.26939582824707
    9. 'er' → logprob: -9.51939582824707
    10. 'ut' → logprob: -9.64439582824707

Token 772: ' que' (ID: 661)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5647976994514465
    2. ':
' → logprob: -0.9397976994514465
    3. '       ' → logprob: -3.5647976398468018
    4. ' or' → logprob: -4.564797878265381
    5. 'or' → logprob: -6.564797878265381
    6. 'else' → logprob: -8.439797401428223
    7. '           ' → logprob: -8.689797401428223
    8. '   ' → logprob: -8.814797401428223
    9. ':

' → logprob: -10.439797401428223
    10. '```' → logprob: -10.564797401428223

Token 773: ' d' (ID: 272)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.15084101259708405
    2. ' a' → logprob: -2.025840997695923
    3. 'else' → logprob: -5.650841236114502
    4. 'ou' → logprob: -6.400841236114502
    5. '<=' → logprob: -6.525841236114502
    6. ' ou' → logprob: -8.025840759277344
    7. '=a' → logprob: -8.525840759277344
    8. ' else' → logprob: -9.025840759277344
    9. '=' → logprob: -9.025840759277344
    10. '#a' → logprob: -9.400840759277344

Token 774: ''aj' (ID: 116735)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004253031220287085
    2. 'aj' → logprob: -6.254252910614014
    3. 'add' → logprob: -6.879252910614014
    4. ' a' → logprob: -8.004253387451172
    5. '=' → logprob: -8.504253387451172
    6. ''aj' → logprob: -8.754253387451172
    7. ' ajouter' → logprob: -9.129253387451172
    8. 'ou' → logprob: -9.379253387451172
    9. 'à' → logprob: -10.129253387451172
    10. 'e' → logprob: -10.254253387451172

Token 775: 'outer' (ID: 5838)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5739181637763977
    2. 'outer' → logprob: -1.573918104171753
    3. 'oter' → logprob: -2.198918104171753
    4. 'e' → logprob: -3.448918104171753
    5. 'eg' → logprob: -4.323918342590332
    6. 'aj' → logprob: -4.448918342590332
    7. 'er' → logprob: -4.448918342590332
    8. 'o' → logprob: -5.198918342590332
    9. 'out' → logprob: -5.198918342590332
    10. 'add' → logprob: -5.198918342590332

Token 776: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5978607535362244
    2. ':' → logprob: -1.0978608131408691
    3. '       ' → logprob: -2.847860813140869
    4. 'else' → logprob: -3.347860813140869
    5. 'if' → logprob: -4.347860813140869
    6. '   ' → logprob: -4.972860813140869
    7. '           ' → logprob: -7.472860813140869
    8. ' else' → logprob: -7.472860813140869
    9. 'minus' → logprob: -7.597860813140869
    10. '```' → logprob: -7.722860813140869

Token 777: ' on' (ID: 402)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3706028461456299
    2. '       ' → logprob: -1.3706028461456299
    3. 'minus' → logprob: -3.49560284614563
    4. '           ' → logprob: -4.745602607727051
    5. ' else' → logprob: -4.870602607727051
    6. 'elif' → logprob: -5.620602607727051
    7. ' minus' → logprob: -6.120602607727051
    8. '   ' → logprob: -6.370602607727051
    9. 'if' → logprob: -7.120602607727051
    10. 'add' → logprob: -8.24560260772705

Token 778: ' retire' (ID: 48410)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.09906472265720367
    2. '       ' → logprob: -2.849064826965332
    3. '           ' → logprob: -3.974064826965332
    4. ' else' → logprob: -5.099064826965332
    5. 'minus' → logprob: -5.224064826965332
    6. 'elif' → logprob: -6.099064826965332
    7. 'add' → logprob: -6.474064826965332
    8. '   ' → logprob: -7.349064826965332
    9. ' minus' → logprob: -7.599064826965332
    10. 'continue' → logprob: -8.474064826965332

Token 779: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3946174085140228
    2. 'else' → logprob: -1.6446174383163452
    3. ':' → logprob: -2.6446173191070557
    4. ':
' → logprob: -3.2696173191070557
    5. '           ' → logprob: -4.519617557525635
    6. 'a' → logprob: -5.019617557525635
    7. ' else' → logprob: -5.394617557525635
    8. '   ' → logprob: -7.269617557525635
    9. 'if' → logprob: -7.644617557525635
    10. 'elif' → logprob: -8.769617080688477

Token 780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8433760404586792
    2. ':' → logprob: -1.0933760404586792
    3. 'else' → logprob: -2.2183761596679688
    4. '```' → logprob: -2.7183761596679688
    5. ':
' → logprob: -3.2183761596679688
    6. '           ' → logprob: -5.218376159667969
    7. 'if' → logprob: -5.718376159667969
    8. '   ' → logprob: -5.843376159667969
    9. 'elif' → logprob: -6.218376159667969
    10. 'a' → logprob: -6.343376159667969

Token 781: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.02642175182700157
    2. ' else' → logprob: -4.026421546936035
    3. '       ' → logprob: -5.026421546936035
    4. ':' → logprob: -6.776421546936035
    5. ':
' → logprob: -8.276421546936035
    6. '   ' → logprob: -9.151421546936035
    7. 'elif' (adapté à ' elif') → logprob: -9.401421546936035
    8. '```' → logprob: -10.151421546936035
    9. 'if' → logprob: -10.901421546936035
    10. 'a' → logprob: -11.401421546936035

Token 782: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6326795816421509
    2. 'a' → logprob: -0.7576795816421509
    3. '	a' → logprob: -10.13267993927002
    4. ' ' → logprob: -10.75767993927002
    5. '   ' → logprob: -11.50767993927002
    6. ' True' → logprob: -13.38267993927002
    7. 'else' → logprob: -13.75767993927002
    8. '    ' → logprob: -14.00767993927002
    9. 'True' → logprob: -14.13267993927002
    10. ' ' → logprob: -14.25767993927002

Token 783: '<b' (ID: 81814)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.15413495898246765
    2. '>' → logprob: -2.40413498878479
    3. ' <' → logprob: -3.15413498878479
    4. '<=' → logprob: -5.404134750366211
    5. ' >' → logprob: -6.029134750366211
    6. '<a' → logprob: -6.779134750366211
    7. '<b' → logprob: -7.154134750366211
    8. '>b' → logprob: -8.654134750366211
    9. ' <=' → logprob: -8.904134750366211
    10. '<th' → logprob: -9.029134750366211

Token 784: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16043950617313385
    2. ':' → logprob: -1.9104394912719727
    3. '       ' → logprob: -8.660439491271973
    4. '   ' → logprob: -11.160439491271973
    5. ':
' → logprob: -11.285439491271973
    6. '           ' → logprob: -11.910439491271973
    7. ':

' → logprob: -12.535439491271973
    8. ' :
' → logprob: -13.160439491271973
    9. '):
' → logprob: -14.035439491271973
    10. ',' → logprob: -14.660439491271973

Token 785: '           ' (ID: 352)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.18107415735721588
    2. '           ' → logprob: -2.1810741424560547
    3. '       ' → logprob: -3.1810741424560547
    4. '   ' → logprob: -4.681074142456055
    5. ' minus' → logprob: -6.806074142456055
    6. '```' → logprob: -7.806074142456055
    7. 'min' → logprob: -8.556074142456055
    8. 'add' → logprob: -10.431074142456055
    9. '-minus' → logprob: -10.431074142456055
    10. '               ' → logprob: -10.681074142456055

Token 786: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' (adapté à ' minus') → logprob: -1.759734732331708e-05
    2. '           ' → logprob: -11.750017166137695
    3. '   ' → logprob: -11.875017166137695
    4. ' minus' → logprob: -13.000017166137695
    5. '       ' → logprob: -15.000017166137695
    6. '```' → logprob: -16.750017166137695
    7. 'add' → logprob: -17.250017166137695
    8. '     ' → logprob: -17.500017166137695
    9. '               ' → logprob: -17.625017166137695
    10. 'plus' → logprob: -18.000017166137695

Token 787: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -5.908022285439074e-05
    2. ' +=' → logprob: -9.750059127807617
    3. ']+=' → logprob: -15.125059127807617
    4. '   ' → logprob: -15.250059127807617
    5. '-=' → logprob: -16.000059127807617
    6. '+=(' → logprob: -16.625059127807617
    7. '=' → logprob: -18.750059127807617
    8. '+' → logprob: -19.000059127807617
    9. '+='' → logprob: -20.125059127807617
    10. '	' → logprob: -20.250059127807617

Token 788: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0280383548888494e-06
    2. ' a' → logprob: -13.875000953674316
    3. '   ' → logprob: -19.750001907348633
    4. '           ' → logprob: -21.250001907348633
    5. '	a' → logprob: -21.625001907348633
    6. '       ' → logprob: -22.625001907348633
    7. ' ' → logprob: -24.125001907348633
    8. '  ' → logprob: -24.500001907348633
    9. '
' → logprob: -24.750001907348633
    10. '    ' → logprob: -24.875001907348633

Token 789: '     ' (ID: 530)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00027718624914996326
    2. '          ' → logprob: -9.250277519226074
    3. '       ' → logprob: -9.500277519226074
    4. '   ' → logprob: -9.625277519226074
    5. '	       ' → logprob: -11.875277519226074
    6. ',' → logprob: -12.000277519226074
    7. '         ' → logprob: -12.000277519226074
    8. '    	   ' → logprob: -12.375277519226074
    9. '	   ' → logprob: -12.625277519226074
    10. '        ' → logprob: -13.250277519226074

Token 790: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00019483851792756468
    2. 'minus' → logprob: -9.625194549560547
    3. '          ' → logprob: -10.000194549560547
    4. '   ' → logprob: -10.250194549560547
    5. '       ' → logprob: -10.750194549560547
    6. ' minus' → logprob: -11.375194549560547
    7. '
' → logprob: -12.625194549560547
    8. '#' (adapté à ' #') → logprob: -12.875194549560547
    9. '         ' → logprob: -13.250194549560547
    10. '```' → logprob: -13.375194549560547

Token 791: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00034476007567718625
    2. 'minus' → logprob: -8.125345230102539
    3. '   ' → logprob: -10.375345230102539
    4. ' A' → logprob: -11.750345230102539
    5. '           ' → logprob: -12.250345230102539
    6. '       ' → logprob: -12.500345230102539
    7. 'a' → logprob: -15.500345230102539
    8. '    ' → logprob: -15.875345230102539
    9. ' minus' → logprob: -15.875345230102539
    10. '         ' → logprob: -16.37534523010254

Token 792: ' incr' (ID: 52395)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.6607615351676941
    2. 'minus' → logprob: -1.0357615947723389
    3. 'add' → logprob: -3.160761594772339
    4. '           ' → logprob: -3.785761594772339
    5. '   ' → logprob: -4.16076135635376
    6. '  ' → logprob: -4.66076135635376
    7. ' minus' → logprob: -5.03576135635376
    8. ' append' → logprob: -5.03576135635376
    9. '       ' → logprob: -5.16076135635376
    10. '          ' → logprob: -5.53576135635376

Token 793: 'é' (ID: 377)
  Prédit: 'crement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crement' → logprob: -0.22942595183849335
    2. 'minus' → logprob: -1.8544259071350098
    3. 'é' → logprob: -3.8544259071350098
    4. 'c' → logprob: -4.22942590713501
    5. 'rement' → logprob: -5.35442590713501
    6. 'increment' → logprob: -6.60442590713501
    7. 'cre' → logprob: -6.97942590713501
    8. 'ement' → logprob: -7.10442590713501
    9. 'inc' → logprob: -7.72942590713501
    10. 'cr' → logprob: -7.85442590713501

Token 794: 'mente' (ID: 4186)
  Prédit: 'ment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.42910659313201904
    2. 'mente' → logprob: -1.054106593132019
    3. 'mentar' → logprob: -8.679106712341309
    4. 'm' → logprob: -9.304106712341309
    5. 'min' → logprob: -10.429106712341309
    6. ' mente' → logprob: -11.304106712341309
    7. 'ments' → logprob: -11.304106712341309
    8. 'ément' → logprob: -11.304106712341309
    9. 'мент' → logprob: -11.429106712341309
    10. 'mé' → logprob: -11.429106712341309

Token 795: ' le' (ID: 505)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.4849443838757e-06
    2. ' a' → logprob: -12.500004768371582
    3. '       ' → logprob: -15.625004768371582
    4. '	a' → logprob: -15.750004768371582
    5. '           ' → logprob: -15.875004768371582
    6. '   ' → logprob: -16.000003814697266
    7. 'A' → logprob: -16.375003814697266
    8. 'minus' → logprob: -17.250003814697266
    9. '     ' → logprob: -17.625003814697266
    10. '    ' → logprob: -17.875003814697266

Token 796: ' coût' (ID: 73109)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.0004832233826164156
    2. 'a' → logprob: -8.000483512878418
    3. ' minus' → logprob: -9.125483512878418
    4. 'A' → logprob: -10.875483512878418
    5. 'plus' → logprob: -11.875483512878418
    6. '   ' → logprob: -12.375483512878418
    7. 'min' → logprob: -13.250483512878418
    8. 'add' → logprob: -13.375483512878418
    9. '  ' → logprob: -14.125483512878418
    10. 'moins' → logprob: -14.250483512878418

Token 797: ' total' (ID: 3609)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.492179811000824
    2. 'total' → logprob: -0.992179811000824
    3. ' total' → logprob: -5.367179870605469
    4. '     ' → logprob: -5.742179870605469
    5. 'tot' → logprob: -6.117179870605469
    6. '-=' → logprob: -6.367179870605469
    7. ' +=' → logprob: -6.742179870605469
    8. '    ' → logprob: -7.117179870605469
    9. '       ' → logprob: -7.242179870605469
    10. '   ' → logprob: -7.867179870605469

Token 798: ' à' (ID: 1221)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 799: ' retirer' (ID: 136490)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.004154141526669264
    2. 'plus' → logprob: -5.504154205322266
    3. 'add' → logprob: -10.504154205322266
    4. ' minus' → logprob: -10.504154205322266
    5. 'remove' → logprob: -11.504154205322266
    6. 'min' → logprob: -13.129154205322266
    7. '   ' → logprob: -13.254154205322266
    8. 'moins' → logprob: -13.379154205322266
    9. 'append' → logprob: -13.504154205322266
    10. 'a' → logprob: -13.629154205322266

Token 800: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.7729658540920354e-05
    2. '       ' → logprob: -11.500027656555176
    3. '<|end|>' → logprob: -12.125027656555176
    4. '   ' → logprob: -12.250027656555176
    5. 'minus' → logprob: -13.750027656555176
    6. ',' → logprob: -13.750027656555176
    7. '          ' → logprob: -14.000027656555176
    8. '               ' → logprob: -14.000027656555176
    9. ' minus' → logprob: -14.250027656555176
    10. 'A' → logprob: -14.250027656555176

Token 801: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023691373644396663
    2. '       ' → logprob: -8.375236511230469
    3. '   ' → logprob: -13.375236511230469
    4. 'else' → logprob: -13.375236511230469
    5. 'A' → logprob: -13.500236511230469
    6. '	       ' → logprob: -14.750236511230469
    7. '               ' → logprob: -15.125236511230469
    8. 'elif' → logprob: -15.125236511230469
    9. '          ' → logprob: -15.500236511230469
    10. '	   ' → logprob: -15.875236511230469

Token 802: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -4.723352049040841e-06
    2. '   ' → logprob: -12.750004768371582
    3. ' A' → logprob: -13.875004768371582
    4. '       ' → logprob: -14.375004768371582
    5. '           ' → logprob: -15.375004768371582
    6. 'a' → logprob: -20.375003814697266
    7. '	A' → logprob: -20.375003814697266
    8. '               ' → logprob: -21.125003814697266
    9. '  ' → logprob: -21.250003814697266
    10. '    ' → logprob: -21.500003814697266

Token 803: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001589618914294988
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -15.50015926361084
    4. '.app' → logprob: -16.125158309936523
    5. 'append' → logprob: -16.250158309936523
    6. '.ap' → logprob: -17.500158309936523
    7. '.extend' → logprob: -17.625158309936523
    8. '​.' → logprob: -18.625158309936523
    9. '+.' → logprob: -20.250158309936523
    10. '```' → logprob: -20.375158309936523

Token 804: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -1.1472419600977446e-06
    2. 'a' → logprob: -13.750000953674316
    3. '(' → logprob: -17.875001907348633
    4. '(A' → logprob: -18.250001907348633
    5. ' (' → logprob: -19.125001907348633
    6. '(k' → logprob: -20.625001907348633
    7. '(-' → logprob: -21.375001907348633
    8. '(
' → logprob: -21.375001907348633
    9. '((' → logprob: -21.625001907348633
    10. '(i' → logprob: -21.875001907348633

Token 805: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00030614540446549654
    2. ')
' → logprob: -8.250306129455566
    3. '       ' → logprob: -11.125306129455566
    4. ')#' → logprob: -11.625306129455566
    5. ' )' → logprob: -11.625306129455566
    6. '           ' → logprob: -12.250306129455566
    7. '())' → logprob: -13.000306129455566
    8. '   ' → logprob: -13.125306129455566
    9. '#' → logprob: -13.625306129455566
    10. ')`' → logprob: -14.750306129455566

Token 806: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13245683908462524
    2. '<|end|>' → logprob: -2.2574567794799805
    3. 'else' → logprob: -4.1324567794799805
    4. ' else' → logprob: -5.8824567794799805
    5. 'elif' → logprob: -9.13245677947998
    6. ')' → logprob: -9.13245677947998
    7. '<|end|>' → logprob: -9.25745677947998
    8. '```' → logprob: -9.50745677947998
    9. '[]' → logprob: -10.38245677947998
    10. 'continue' → logprob: -10.50745677947998

Token 807: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.55199134349823
    2. '<|end|>' → logprob: -1.05199134349823
    3. 'else' → logprob: -2.6769914627075195
    4. ' else' → logprob: -5.6769914627075195
    5. ')' → logprob: -6.1769914627075195
    6. 'elif' → logprob: -8.92699146270752
    7. '<|end|>' → logprob: -8.92699146270752
    8. '#' (adapté à ' #') → logprob: -9.05199146270752
    9. 'continue' → logprob: -9.67699146270752
    10. '```' → logprob: -9.80199146270752

Token 808: ' On' (ID: 2160)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0003398726985324174
    2. ' A' → logprob: -8.00033950805664
    3. '   ' → logprob: -13.25033950805664
    4. '       ' → logprob: -13.62533950805664
    5. 'a' → logprob: -14.62533950805664
    6. 'minus' → logprob: -15.00033950805664
    7. '           ' → logprob: -15.37533950805664
    8. '        ' → logprob: -16.50033950805664
    9. 'append' → logprob: -16.62533950805664
    10. '	A' → logprob: -16.75033950805664

Token 809: ' ajoute' (ID: 91611)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.822646693966817e-06
    2. '.append' → logprob: -12.250007629394531
    3. ' append' → logprob: -12.750007629394531
    4. '	append' → logprob: -17.25000762939453
    5. 'continue' → logprob: -17.75000762939453
    6. 'extend' → logprob: -17.75000762939453
    7. 'appen' → logprob: -18.25000762939453
    8. 'insert' → logprob: -18.50000762939453
    9. '   ' → logprob: -20.62500762939453
    10. 'app' → logprob: -20.87500762939453

Token 810: ' cette' (ID: 7696)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0009171743295155466
    2. 'a' → logprob: -7.000916957855225
    3. '(' → logprob: -12.250917434692383
    4. '(-' → logprob: -15.125917434692383
    5. ' (' → logprob: -16.125917434692383
    6. '   ' → logprob: -16.375917434692383
    7. '(k' → logprob: -16.500917434692383
    8. ' a' → logprob: -16.625917434692383
    9. '(
' → logprob: -16.750917434692383
    10. '       ' → logprob: -16.875917434692383

Token 811: ' quantité' (ID: 89219)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.7666019797325134
    2. ' valeur' → logprob: -1.0166020393371582
    3. 'a' → logprob: -2.391602039337158
    4. ' val' → logprob: -3.891602039337158
    5. ' quantité' → logprob: -3.891602039337158
    6. ' a' → logprob: -4.016602039337158
    7. '_' → logprob: -5.891602039337158
    8. '_val' → logprob: -6.141602039337158
    9. ')' → logprob: -6.391602039337158
    10. ' ' → logprob: -6.766602039337158

Token 812: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6028680801391602
    2. '<|end|>' → logprob: -1.3528680801391602
    3. 'à' → logprob: -2.47786808013916
    4. '.append' → logprob: -2.97786808013916
    5. ' à' → logprob: -4.10286808013916
    6. 'to' → logprob: -5.22786808013916
    7. '+=' → logprob: -5.35286808013916
    8. ').' → logprob: -5.47786808013916
    9. '(' → logprob: -5.60286808013916
    10. '```' → logprob: -5.60286808013916

Token 813: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00018530222587287426
    2. 'la' → logprob: -8.625185012817383
    3. 'l' → logprob: -12.750185012817383
    4. ' A' → logprob: -13.000185012817383
    5. 'the' → logprob: -15.875185012817383
    6. ' la' → logprob: -16.000185012817383
    7. 'a' → logprob: -16.375185012817383
    8. '```' → logprob: -16.500185012817383
    9. 'list' → logprob: -17.500185012817383
    10. '   ' → logprob: -17.750185012817383

Token 814: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.7386841773986816
    2. 'list' → logprob: -0.7386841773986816
    3. 'liste' → logprob: -3.1136841773986816
    4. 'lista' → logprob: -10.613683700561523
    5. '```' → logprob: -10.738683700561523
    6. ' A' → logprob: -11.613683700561523
    7. ' liste' → logprob: -11.863683700561523
    8. '#' → logprob: -12.613683700561523
    9. 'minus' → logprob: -12.863683700561523
    10. ' list' → logprob: -13.113683700561523

Token 815: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.0921942703134846e-05
    2. 'a' → logprob: -12.37501049041748
    3. ' A' → logprob: -13.00001049041748
    4. 'plus' → logprob: -13.50001049041748
    5. '   ' → logprob: -13.87501049041748
    6. 'minus' → logprob: -13.87501049041748
    7. '(A' → logprob: -15.00001049041748
    8. '	A' → logprob: -15.25001049041748
    9. '```' → logprob: -15.87501049041748
    10. '+' → logprob: -16.375011444091797

Token 816: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0062994156032800674
    2. '<|end|>' → logprob: -5.1312994956970215
    3. 'else' → logprob: -8.881299018859863
    4. '   ' → logprob: -9.631299018859863
    5. ')' → logprob: -9.631299018859863
    6. 'continue' → logprob: -10.881299018859863
    7. ' else' → logprob: -11.006299018859863
    8. '```' → logprob: -11.256299018859863
    9. '<|end|>' → logprob: -11.256299018859863
    10. 'elif' → logprob: -12.006299018859863

Token 817: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013259568950161338
    2. '   ' → logprob: -7.376326084136963
    3. '<|end|>' → logprob: -7.376326084136963
    4. 'else' → logprob: -10.251325607299805
    5. '           ' → logprob: -12.001325607299805
    6. ')' → logprob: -12.126325607299805
    7. '        ' → logprob: -12.376325607299805
    8. ' else' → logprob: -12.501325607299805
    9. '      ' → logprob: -12.876325607299805
    10. '<|end|>' → logprob: -13.001325607299805

Token 818: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6939961910247803
    2. 'else' (adapté à ' else') → logprob: -0.6939961910247803
    3. ' else' → logprob: -7.193996429443359
    4. 'elif' → logprob: -9.44399642944336
    5. '	else' → logprob: -11.81899642944336
    6. '<|end|>' → logprob: -12.31899642944336
    7. '```' → logprob: -12.44399642944336
    8. ' elif' → logprob: -15.06899642944336
    9. '...' → logprob: -15.31899642944336
    10. '_else' → logprob: -15.31899642944336

Token 819: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08909039944410324
    2. ':
' → logprob: -2.464090347290039
    3. '       ' → logprob: -9.339090347290039
    4. '{' → logprob: -10.589090347290039
    5. ':
' → logprob: -11.714090347290039
    6. '           ' → logprob: -12.214090347290039
    7. ' :' → logprob: -12.464090347290039
    8. '   ' → logprob: -12.589090347290039
    9. ':

' → logprob: -12.839090347290039
    10. ':return' → logprob: -13.089090347290039

Token 820: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006360539235174656
    2. '           ' → logprob: -5.2563605308532715
    3. '   ' → logprob: -7.8813605308532715
    4. '```' → logprob: -7.8813605308532715
    5. 'add' → logprob: -8.63136100769043
    6. ' add' → logprob: -9.50636100769043
    7. 'continue' → logprob: -9.75636100769043
    8. ' continue' → logprob: -10.13136100769043
    9. 'A' → logprob: -12.38136100769043
    10. 'if' → logprob: -13.13136100769043

Token 821: ' #' (ID: 1069)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.019436245784163475
    2. 'pass' → logprob: -4.394436359405518
    3. 'continue' → logprob: -5.769436359405518
    4. ' add' → logprob: -6.144436359405518
    5. '   ' → logprob: -7.269436359405518
    6. 'A' → logprob: -7.769436359405518
    7. '#' (adapté à ' #') → logprob: -8.14443588256836
    8. ' pass' → logprob: -9.14443588256836
    9. 'minus' → logprob: -10.14443588256836
    10. ' continue' → logprob: -10.64443588256836

Token 822: ' Si' (ID: 7832)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0388093963265419
    2. 'pass' → logprob: -4.538809299468994
    3. 'continue' → logprob: -4.788809299468994
    4. '   ' → logprob: -5.288809299468994
    5. 'minus' → logprob: -5.288809299468994
    6. 'A' → logprob: -5.663809299468994
    7. ' add' → logprob: -5.788809299468994
    8. '#' → logprob: -6.788809299468994
    9. '           ' → logprob: -7.788809299468994
    10. 'plus' → logprob: -8.163809776306152

Token 823: ' les' (ID: 1341)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14275090396404266
    2. ' a' → logprob: -2.0177509784698486
    3. ' add' → logprob: -10.51775074005127
    4. '#' → logprob: -11.26775074005127
    5. '   ' → logprob: -12.01775074005127
    6. 'add' → logprob: -12.01775074005127
    7. '	a' → logprob: -12.51775074005127
    8. 'b' → logprob: -12.64275074005127
    9. '#a' → logprob: -12.76775074005127
    10. ' b' → logprob: -12.89275074005127

Token 824: ' coûts' (ID: 116912)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03876812011003494
    2. ' a' → logprob: -3.2887680530548096
    3. 'A' → logprob: -7.913768291473389
    4. 'k' → logprob: -9.78876781463623
    5. ' add' → logprob: -9.78876781463623
    6. 'b' → logprob: -9.91376781463623
    7. 'add' → logprob: -10.16376781463623
    8. ' A' → logprob: -10.41376781463623
    9. 'aj' → logprob: -10.66376781463623
    10. ' b' → logprob: -10.91376781463623

Token 825: ' d' (ID: 272)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1017705425620079
    2. ' ==' → logprob: -2.7267706394195557
    3. 'a' → logprob: -4.226770401000977
    4. ' a' → logprob: -4.726770401000977
    5. '=' → logprob: -5.976770401000977
    6. 'à' → logprob: -6.351770401000977
    7. ' à' → logprob: -7.101770401000977
    8. '   ' → logprob: -7.976770401000977
    9. '!=' → logprob: -7.976770401000977
    10. '           ' → logprob: -8.601770401000977

Token 826: ''aj' (ID: 116735)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5413787364959717
    2. 'aj' → logprob: -0.9163787364959717
    3. ''aj' → logprob: -4.291378974914551
    4. 'add' → logprob: -6.541378974914551
    5. ' a' → logprob: -6.791378974914551
    6. ' ajouter' → logprob: -7.791378974914551
    7. 'addition' → logprob: -8.16637897491455
    8. '```' → logprob: -8.16637897491455
    9. 'à' → logprob: -9.16637897491455
    10. ' ajout' → logprob: -9.16637897491455

Token 827: 'outer' (ID: 5838)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.005150265991687775
    2. 'ust' → logprob: -5.755150318145752
    3. 'outer' → logprob: -6.380150318145752
    4. 'oute' → logprob: -8.255149841308594
    5. 'uster' → logprob: -11.880149841308594
    6. 'ou' → logprob: -12.880149841308594
    7. 'outez' → logprob: -12.880149841308594
    8. 'outs' → logprob: -13.755149841308594
    9. 'oust' → logprob: -14.755149841308594
    10. 'aj' → logprob: -14.880149841308594

Token 828: ' et' (ID: 859)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0344204418361187
    2. ' ==' → logprob: -3.4094204902648926
    3. 'et' → logprob: -7.909420490264893
    4. ' et' → logprob: -9.034420013427734
    5. 'a' → logprob: -9.409420013427734
    6. '=' → logprob: -9.909420013427734
    7. 'ou' → logprob: -10.534420013427734
    8. ' ou' → logprob: -10.909420013427734
    9. ' and' → logprob: -11.159420013427734
    10. 'b' → logprob: -11.284420013427734

Token 829: ' de' (ID: 334)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.02502860128879547
    2. ' retirer' → logprob: -4.025028705596924
    3. 'de' → logprob: -5.150028705596924
    4. ' de' → logprob: -8.275028228759766
    5. 'retr' → logprob: -8.275028228759766
    6. ' enlever' → logprob: -9.025028228759766
    7. 'reten' → logprob: -9.150028228759766
    8. '(ret' → logprob: -10.025028228759766
    9. 'remove' → logprob: -10.275028228759766
    10. 'b' → logprob: -10.275028228759766

Token 830: ' retirer' (ID: 136490)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.00036084887688048184
    2. ' retirer' → logprob: -8.500360488891602
    3. 'retr' → logprob: -9.000360488891602
    4. 'reten' → logprob: -10.750360488891602
    5. '```' → logprob: -12.375360488891602
    6. 'b' → logprob: -13.625360488891602
    7. 'remove' → logprob: -13.875360488891602
    8. '(ret' → logprob: -13.875360488891602
    9. 'en' → logprob: -14.750360488891602
    10. '    
' → logprob: -14.875360488891602

Token 831: ' sont' (ID: 5242)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05628901347517967
    2. ' ==' → logprob: -2.931288957595825
    3. ' sont' → logprob: -7.181289196014404
    4. '=' → logprob: -8.431288719177246
    5. '```' → logprob: -9.306288719177246
    6. '===' → logprob: -9.931288719177246
    7. ' are' → logprob: -9.931288719177246
    8. ')==' → logprob: -10.556288719177246
    9. '!=' → logprob: -10.931288719177246
    10. '           ' → logprob: -10.931288719177246

Token 832: ' ég' (ID: 33150)
  Prédit: 'ég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ég' → logprob: -0.16322903335094452
    2. ' ég' → logprob: -1.913228988647461
    3. 'égal' → logprob: -6.163228988647461
    4. 'eg' → logprob: -7.788228988647461
    5. 'exact' → logprob: -8.913228988647461
    6. ' eg' → logprob: -9.413228988647461
    7. 'équ' → logprob: -9.413228988647461
    8. 'égalité' → logprob: -9.788228988647461
    9. 'Ég' → logprob: -10.288228988647461
    10. '   ' → logprob: -10.538228988647461

Token 833: 'aux' (ID: 5454)
  Prédit: 'aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aux' → logprob: -3.9292415749514475e-05
    2. 'al' → logprob: -10.250039100646973
    3. 'als' → logprob: -13.500039100646973
    4. 'ale' → logprob: -13.750039100646973
    5. 'Aux' → logprob: -14.625039100646973
    6. '```' → logprob: -14.875039100646973
    7. '
' → logprob: -15.000039100646973
    8. 'a' → logprob: -16.37504005432129
    9. 'ales' → logprob: -16.87504005432129
    10. '``' → logprob: -17.00004005432129

Token 834: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1325129121541977
    2. '       ' → logprob: -2.5075128078460693
    3. 'continue' → logprob: -4.132513046264648
    4. ':' → logprob: -4.632513046264648
    5. ':
' → logprob: -5.507513046264648
    6. ' continue' → logprob: -5.507513046264648
    7. 'pass' → logprob: -5.757513046264648
    8. ',' → logprob: -6.132513046264648
    9. '   ' → logprob: -6.382513046264648
    10. '```' → logprob: -8.007513046264648

Token 835: ' on' (ID: 402)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.2885431051254272
    2. '           ' → logprob: -1.4135431051254272
    3. 'continue' → logprob: -2.038543224334717
    4. 'pass' → logprob: -2.163543224334717
    5. ' add' → logprob: -2.538543224334717
    6. '       ' → logprob: -2.913543224334717
    7. ' continue' → logprob: -3.038543224334717
    8. ' pass' → logprob: -3.288543224334717
    9. '   ' → logprob: -4.788543224334717
    10. 'A' → logprob: -5.163543224334717

Token 836: ' les' (ID: 1341)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.885540246963501
    2. 'continue' → logprob: -0.885540246963501
    3. '           ' → logprob: -1.885540246963501
    4. '       ' → logprob: -5.385540008544922
    5. 'append' → logprob: -5.885540008544922
    6. '```' → logprob: -5.885540008544922
    7. '   ' → logprob: -6.135540008544922
    8. 'pass' → logprob: -6.135540008544922
    9. '.append' → logprob: -6.135540008544922
    10. '#' → logprob: -6.635540008544922

Token 837: ' compte' (ID: 19657)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2726938724517822
    2. 'aj' → logprob: -2.5226938724517822
    3. 'append' → logprob: -2.7726938724517822
    4. 'pass' → logprob: -3.0226938724517822
    5. ' continue' → logprob: -3.8976938724517822
    6. 'ignore' → logprob: -4.397693634033203
    7. '       ' → logprob: -6.147693634033203
    8. ' append' → logprob: -6.272693634033203
    9. '```' → logprob: -6.272693634033203
    10. '.append' → logprob: -6.397693634033203

Token 838: ' comme' (ID: 7971)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13957346975803375
    2. '+=' → logprob: -2.139573574066162
    3. 'add' → logprob: -5.639573574066162
    4. 'both' → logprob: -5.889573574066162
    5. '       ' → logprob: -6.639573574066162
    6. '```' → logprob: -6.764573574066162
    7. '=' → logprob: -7.139573574066162
    8. '.add' → logprob: -7.264573574066162
    9. ' +=' → logprob: -7.264573574066162
    10. '+' → logprob: -8.264573097229004

Token 839: ' des' (ID: 731)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.07162602990865707
    2. 'A' → logprob: -3.4466259479522705
    3. 'minus' → logprob: -3.6966259479522705
    4. 'plus' → logprob: -5.57162618637085
    5. '0' → logprob: -5.82162618637085
    6. 'both' → logprob: -6.07162618637085
    7. 'a' → logprob: -6.69662618637085
    8. ' add' → logprob: -7.07162618637085
    9. 'B' → logprob: -7.57162618637085
    10. 'aj' → logprob: -9.196625709533691

Token 840: ' additions' (ID: 62858)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.20414549112319946
    2. 'add' → logprob: -2.3291454315185547
    3. 'aj' → logprob: -2.9541454315185547
    4. 'A' → logprob: -4.329145431518555
    5. '0' → logprob: -4.579145431518555
    6. 'both' → logprob: -5.579145431518555
    7. ' deux' → logprob: -6.704145431518555
    8. ' add' → logprob: -7.079145431518555
    9. 'minus' → logprob: -7.454145431518555
    10. ' ' → logprob: -7.704145431518555

Token 841: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011216049082577229
    2. '       ' → logprob: -4.886216163635254
    3. ' and' → logprob: -6.386216163635254
    4. ',' → logprob: -7.636216163635254
    5. ':' → logprob: -7.636216163635254
    6. '.add' → logprob: -8.636216163635254
    7. 'and' → logprob: -9.011216163635254
    8. '=' → logprob: -9.261216163635254
    9. '+=' → logprob: -9.261216163635254
    10. ' +=' → logprob: -9.386216163635254

Token 842: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006022418383508921
    2. '       ' → logprob: -7.5006022453308105
    3. 'add' → logprob: -10.000601768493652
    4. '```' → logprob: -13.625601768493652
    5. '   ' → logprob: -13.875601768493652
    6. '
' → logprob: -14.750601768493652
    7. ' add' → logprob: -15.000601768493652
    8. '               ' → logprob: -15.125601768493652
    9. '		' → logprob: -15.375601768493652
    10. '          ' → logprob: -16.62560272216797

Token 843: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.03807580843567848
    2. ' add' → logprob: -3.2880759239196777
    3. '           ' → logprob: -11.28807544708252
    4. '       ' → logprob: -11.41307544708252
    5. '   ' → logprob: -11.53807544708252
    6. '```' → logprob: -14.78807544708252
    7. '	add' → logprob: -15.28807544708252
    8. '    ' → logprob: -16.288076400756836
    9. ' ' → logprob: -16.663076400756836
    10. 'b' → logprob: -16.788076400756836

Token 844: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -3.273621405242011e-05
    2. ' +=' → logprob: -10.375032424926758
    3. ']+=' → logprob: -14.125032424926758
    4. '+=(' → logprob: -14.500032424926758
    5. '+='' → logprob: -16.625032424926758
    6. '+' → logprob: -16.750032424926758
    7. '+="' → logprob: -17.500032424926758
    8. '   ' → logprob: -18.000032424926758
    9. '=' → logprob: -21.000032424926758
    10. '	' → logprob: -21.250032424926758

Token 845: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.941850526549388e-06
    2. 'a' → logprob: -12.125007629394531
    3. ' b' → logprob: -12.875007629394531
    4. '	b' → logprob: -19.87500762939453
    5. '0' → logprob: -20.00000762939453
    6. ' ' → logprob: -21.00000762939453
    7. '1' → logprob: -22.37500762939453
    8. '
' → logprob: -22.75000762939453
    9. ' a' → logprob: -22.87500762939453
    10. '_b' → logprob: -22.87500762939453

Token 846: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03032541088759899
    2. '<|end|>' → logprob: -3.905325412750244
    3. '   ' → logprob: -5.155325412750244
    4. '       ' → logprob: -6.030325412750244
    5. '	       ' → logprob: -7.780325412750244
    6. '		' → logprob: -8.530324935913086
    7. '<|end|>' → logprob: -8.530324935913086
    8. '
' → logprob: -8.530324935913086
    9. '	   ' → logprob: -8.655324935913086
    10. '          ' → logprob: -9.905324935913086

Token 847: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003115095605608076
    2. '<|end|>' → logprob: -8.500311851501465
    3. '```' → logprob: -10.250311851501465
    4. '       ' → logprob: -10.250311851501465
    5. '          ' → logprob: -11.375311851501465
    6. '	       ' → logprob: -11.750311851501465
    7. '   ' → logprob: -12.125311851501465
    8. '		' → logprob: -12.500311851501465
    9. '               ' → logprob: -13.875311851501465
    10. '         ' → logprob: -14.125311851501465

Token 848: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -0.004099654499441385
    2. 'A' → logprob: -5.5040998458862305
    3. '           ' → logprob: -10.87909984588623
    4. ' B' → logprob: -13.00409984588623
    5. '       ' → logprob: -16.504098892211914
    6. '   ' → logprob: -16.629098892211914
    7. ' A' → logprob: -18.754098892211914
    8. '```' → logprob: -19.629098892211914
    9. '	B' → logprob: -20.004098892211914
    10. 'add' → logprob: -20.629098892211914

Token 849: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011743901995941997
    2. '.' → logprob: -6.751174449920654
    3. ' .' → logprob: -12.876173973083496
    4. '.app' → logprob: -13.751173973083496
    5. '.ap' → logprob: -15.626173973083496
    6. 'append' → logprob: -15.751173973083496
    7. '​.' → logprob: -16.751174926757812
    8. '	append' → logprob: -17.876174926757812
    9. '>.' → logprob: -18.001174926757812
    10. '<|end|>' → logprob: -18.126174926757812

Token 850: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07898838073015213
    2. '(a' → logprob: -2.5789883136749268
    3. 'b' → logprob: -9.328988075256348
    4. ' a' → logprob: -12.453988075256348
    5. '(b' → logprob: -12.578988075256348
    6. '(' → logprob: -13.703988075256348
    7. '	a' → logprob: -13.828988075256348
    8. '   ' → logprob: -16.203989028930664
    9. '_a' → logprob: -16.453989028930664
    10. '#a' → logprob: -16.828989028930664

Token 851: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.309382373117842e-05
    2. ')
' → logprob: -10.750033378601074
    3. ' )' → logprob: -11.625033378601074
    4. '   ' → logprob: -13.625033378601074
    5. '       ' → logprob: -14.000033378601074
    6. '           ' → logprob: -16.250032424926758
    7. ')**' → logprob: -16.500032424926758
    8. ')}' → logprob: -16.625032424926758
    9. ')#' → logprob: -16.625032424926758
    10. '))' → logprob: -16.750032424926758

Token 852: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 853: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0035451860167086124
    2. '```' → logprob: -6.87854528427124
    3. '    
' → logprob: -7.25354528427124
    4. ' if' → logprob: -7.37854528427124
    5. 'if' → logprob: -7.50354528427124
    6. '
' → logprob: -8.253544807434082
    7. '<|end|>' → logprob: -8.628544807434082
    8. '#' (adapté à ' #') → logprob: -9.253544807434082
    9. 'continue' → logprob: -11.253544807434082
    10. '  
' → logprob: -11.628544807434082

Token 854: ' Trie' (ID: 131955)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010813174769282341
    2. '   ' → logprob: -4.760813236236572
    3. 'A' → logprob: -6.385813236236572
    4. '#' → logprob: -7.885813236236572
    5. ' if' → logprob: -9.385812759399414
    6. '```' → logprob: -10.510812759399414
    7. '
' → logprob: -12.135812759399414
    8. 'diff' → logprob: -12.510812759399414
    9. 'B' → logprob: -12.635812759399414
    10. 'add' → logprob: -12.885812759399414

Token 855: ' la' (ID: 557)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.049120932817459106
    2. ' A' → logprob: -3.2991209030151367
    3. '   ' → logprob: -4.674120903015137
    4. '(A' → logprob: -6.424120903015137
    5. 'B' → logprob: -10.674120903015137
    6. '	A' → logprob: -11.424120903015137
    7. '(' → logprob: -11.549120903015137
    8. ' ' → logprob: -12.674120903015137
    9. '_A' → logprob: -12.924120903015137
    10. '  ' → logprob: -12.924120903015137

Token 856: ' liste' (ID: 31719)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0011117587564513087
    2. 'B' → logprob: -7.12611198425293
    3. ' A' → logprob: -8.12611198425293
    4. 'sorted' → logprob: -12.50111198425293
    5. 'add' → logprob: -13.37611198425293
    6. '   ' → logprob: -13.50111198425293
    7. ' ' → logprob: -13.87611198425293
    8. 'sort' → logprob: -14.25111198425293
    9. ' B' → logprob: -14.25111198425293
    10. 'minus' → logprob: -14.37611198425293

Token 857: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0001234428636962548
    2. '   ' → logprob: -9.500123023986816
    3. 'B' → logprob: -10.500123023986816
    4. ' A' → logprob: -11.000123023986816
    5. '(A' → logprob: -12.500123023986816
    6. '	A' → logprob: -15.375123023986816
    7. '_A' → logprob: -16.750123977661133
    8. '(' → logprob: -17.125123977661133
    9. 'sort' → logprob: -17.500123977661133
    10. 'Ａ' → logprob: -17.500123977661133

Token 858: ' (' (ID: 350)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0021893989760428667
    2. '   ' → logprob: -6.377189636230469
    3. 'A' → logprob: -7.752189636230469
    4. '.' → logprob: -11.502189636230469
    5. ',A' → logprob: -11.502189636230469
    6. '().' → logprob: -11.752189636230469
    7. '=A' → logprob: -12.127189636230469
    8. '(A' → logprob: -12.252189636230469
    9. '=' → logprob: -12.752189636230469
    10. '.A' → logprob: -12.877189636230469

Token 859: 'val' (ID: 1105)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.23396985232830048
    2. 'A' → logprob: -1.983969807624817
    3. '   ' → logprob: -2.7339699268341064
    4. 'reverse' → logprob: -5.733969688415527
    5. '()' → logprob: -6.733969688415527
    6. ')
' → logprob: -7.108969688415527
    7. 'sorted' → logprob: -8.358969688415527
    8. 'sort' → logprob: -8.983969688415527
    9. '.sort' → logprob: -9.358969688415527
    10. ' A' → logprob: -9.608969688415527

Token 860: 'eurs' (ID: 17634)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.5059697031974792
    2. 'A' → logprob: -1.130969762802124
    3. 'sort' → logprob: -3.130969762802124
    4. '   ' → logprob: -4.005969524383545
    5. '=' → logprob: -5.505969524383545
    6. '.append' → logprob: -6.380969524383545
    7. '=A' → logprob: -6.505969524383545
    8. '       ' → logprob: -6.880969524383545
    9. 'sorted' → logprob: -6.880969524383545
    10. ')' → logprob: -7.380969524383545

Token 861: ' à' (ID: 1221)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.0012335648061707616
    2. ')' → logprob: -7.3762335777282715
    3. 'A' → logprob: -8.751233100891113
    4. 'sort' → logprob: -9.126233100891113
    5. '   ' → logprob: -9.376233100891113
    6. '().' → logprob: -9.376233100891113
    7. '.reverse' → logprob: -9.751233100891113
    8. '()' → logprob: -10.251233100891113
    9. '.append' → logprob: -10.751233100891113
    10. '=' → logprob: -11.251233100891113

Token 862: ' retirer' (ID: 136490)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.5709407925605774
    2. 'tr' → logprob: -1.0709407329559326
    3. 'remove' → logprob: -2.8209407329559326
    4. 'sort' → logprob: -3.5709407329559326
    5. 'sup' → logprob: -6.195940971374512
    6. ' retirer' → logprob: -6.820940971374512
    7. 'minus' → logprob: -7.695940971374512
    8. 'pop' → logprob: -8.445940971374512
    9. ' tr' → logprob: -8.820940971374512
    10. 'aj' → logprob: -8.945940971374512

Token 863: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5218053460121155
    2. ')
' → logprob: -1.3968052864074707
    3. '   ' → logprob: -1.8968052864074707
    4. 'A' → logprob: -5.396805286407471
    5. '.sort' → logprob: -5.896805286407471
    6. ');' → logprob: -7.021805286407471
    7. '()
' → logprob: -7.896805286407471
    8. '()' → logprob: -8.396805763244629
    9. '  ' → logprob: -10.271805763244629
    10. ',A' → logprob: -10.521805763244629

Token 864: ' par' (ID: 686)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.46486663818359375
    2. '   ' → logprob: -1.4648666381835938
    3. 'A' → logprob: -1.9648666381835938
    4. ',A' → logprob: -8.839866638183594
    5. '```' → logprob: -9.339866638183594
    6. 'sort' → logprob: -9.589866638183594
    7. '.' → logprob: -10.214866638183594
    8. 'sorted' → logprob: -10.339866638183594
    9. ' A' → logprob: -10.589866638183594
    10. '=A' → logprob: -10.714866638183594

Token 865: ' ordre' (ID: 103061)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.17447346448898315
    2. 'A' → logprob: -1.924473524093628
    3. ' reverse' → logprob: -5.174473285675049
    4. 'sorted' → logprob: -6.424473285675049
    5. 'sort' → logprob: -6.799473285675049
    6. ' A' → logprob: -6.799473285675049
    7. '.reverse' → logprob: -6.799473285675049
    8. 'asc' → logprob: -7.049473285675049
    9. 'ascending' → logprob: -7.424473285675049
    10. '   ' → logprob: -7.549473285675049

Token 866: ' cro' (ID: 11270)
  Prédit: 'sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sort' → logprob: -0.5934770107269287
    2. 'cro' → logprob: -1.4684770107269287
    3. 'A' → logprob: -1.9684770107269287
    4. '.sort' → logprob: -2.9684770107269287
    5. 'asc' → logprob: -4.468477249145508
    6. 'sorted' → logprob: -4.718477249145508
    7. 'reverse' → logprob: -5.968477249145508
    8. ' A' → logprob: -7.468477249145508
    9. '   ' → logprob: -7.843477249145508
    10. 'ascending' → logprob: -7.843477249145508

Token 867: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.40702515840530396
    2. 'issante' → logprob: -1.2820250988006592
    3. 'issance' → logprob: -3.782025098800659
    4. 'issent' → logprob: -4.282025337219238
    5. 's' → logprob: -4.782025337219238
    6. 'issement' → logprob: -5.657025337219238
    7. 'sc' → logprob: -5.657025337219238
    8. 'ss' → logprob: -6.157025337219238
    9. 'sent' → logprob: -7.407025337219238
    10. 'isse' → logprob: -7.532025337219238

Token 868: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038093242794275284
    2. 'A' → logprob: -3.288093328475952
    3. '.sort' → logprob: -11.413093566894531
    4. ' A' → logprob: -11.538093566894531
    5. '    
' → logprob: -11.913093566894531
    6. '```' → logprob: -11.913093566894531
    7. ',A' → logprob: -12.288093566894531
    8. '	A' → logprob: -13.038093566894531
    9. '
' → logprob: -13.288093566894531
    10. '.' → logprob: -13.413093566894531

Token 869: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06199715659022331
    2. 'A' → logprob: -2.811997175216675
    3. '```' → logprob: -10.811997413635254
    4. ' A' → logprob: -11.811997413635254
    5. '    
' → logprob: -14.936997413635254
    6. '`' → logprob: -15.311997413635254
    7. ',A' → logprob: -15.311997413635254
    8. '
' → logprob: -15.311997413635254
    9. '``' → logprob: -15.686997413635254
    10. ',' → logprob: -15.686997413635254

Token 870: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.02977687679231167
    2. '   ' → logprob: -3.5297768115997314
    3. ' A' → logprob: -10.779776573181152
    4. '```' → logprob: -12.654776573181152
    5. '  ' → logprob: -14.654776573181152
    6. '.sort' → logprob: -15.154776573181152
    7. ' ' → logprob: -15.154776573181152
    8. '	A' → logprob: -15.154776573181152
    9. 'sorted' → logprob: -15.154776573181152
    10. '`' → logprob: -15.154776573181152

Token 871: '=' (ID: 28)
  Prédit: '.sort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -4.251091377227567e-05
    2. '.' → logprob: -10.125042915344238
    3. '=' → logprob: -13.500042915344238
    4. ' .' → logprob: -14.250042915344238
    5. 'sort' → logprob: -15.250042915344238
    6. ').' → logprob: -17.625041961669922
    7. '=A' → logprob: -17.625041961669922
    8. '   ' → logprob: -19.125041961669922
    9. '	sort' → logprob: -19.500041961669922
    10. '.reverse' → logprob: -19.750041961669922

Token 872: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -1.9361264946837764e-07
    2. ' sorted' → logprob: -16.625
    3. 'sort' → logprob: -16.875
    4. '(sorted' → logprob: -18.875
    5. 'A' → logprob: -19.75
    6. '.sorted' → logprob: -21.125
    7. 's' → logprob: -21.5
    8. 'Sorted' → logprob: -22.0
    9. 'sum' → logprob: -23.125
    10. '[' → logprob: -23.375

Token 873: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -3.650518920039758e-06
    2. '()' → logprob: -13.250003814697266
    3. 'A' → logprob: -13.500003814697266
    4. '(' → logprob: -14.750003814697266
    5. '(a' → logprob: -17.625003814697266
    6. '(
' → logprob: -18.500003814697266
    7. '(B' → logprob: -19.125003814697266
    8. '((' → logprob: -19.250003814697266
    9. '```' → logprob: -19.250003814697266
    10. '([' → logprob: -19.625003814697266

Token 874: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10470546782016754
    2. '())' → logprob: -2.479705572128296
    3. ')
' → logprob: -4.604705333709717
    4. '())
' → logprob: -5.729705333709717
    5. '()' → logprob: -6.229705333709717
    6. '(reverse' → logprob: -8.229705810546875
    7. ')#' → logprob: -10.104705810546875
    8. '()
' → logprob: -10.729705810546875
    9. '(),' → logprob: -10.979705810546875
    10. ')

' → logprob: -11.104705810546875

Token 875: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11390186101198196
    2. 'B' → logprob: -2.2389018535614014
    3. '#' → logprob: -7.2389020919799805
    4. ' B' → logprob: -8.48890209197998
    5. '```' → logprob: -10.11390209197998
    6. 'if' → logprob: -10.61390209197998
    7. ',' → logprob: -10.73890209197998
    8. '<|end|>' → logprob: -11.11390209197998
    9. '  ' → logprob: -11.48890209197998
    10. '	B' → logprob: -12.11390209197998

Token 876: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04626886546611786
    2. 'B' → logprob: -3.171268939971924
    3. '```' → logprob: -6.171268939971924
    4. 'if' → logprob: -7.921268939971924
    5. ' B' → logprob: -8.296268463134766
    6. 'A' → logprob: -8.421268463134766
    7. ' if' → logprob: -8.671268463134766
    8. '#' (adapté à ' #') → logprob: -9.046268463134766
    9. 'minus' → logprob: -11.921268463134766
    10. '``' → logprob: -12.046268463134766

Token 877: ' Trie' (ID: 131955)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0005306334351189435
    2. 'if' → logprob: -8.250530242919922
    3. 'A' → logprob: -9.500530242919922
    4. '   ' → logprob: -9.625530242919922
    5. '#' → logprob: -9.875530242919922
    6. ' B' → logprob: -10.250530242919922
    7. 'minus' → logprob: -10.750530242919922
    8. '```' → logprob: -11.375530242919922
    9. 'for' → logprob: -12.750530242919922
    10. 'while' → logprob: -13.625530242919922

Token 878: ' la' (ID: 557)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.056506358087062836
    2. 'B' → logprob: -2.931506395339966
    3. 'A' → logprob: -6.806506156921387
    4. '(A' → logprob: -8.056506156921387
    5. ' B' → logprob: -9.306506156921387
    6. '   ' → logprob: -9.806506156921387
    7. '(' → logprob: -11.056506156921387
    8. '```' → logprob: -11.806506156921387
    9. 'a' → logprob: -11.931506156921387
    10. '	B' → logprob: -12.431506156921387

Token 879: ' liste' (ID: 31719)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0019354235846549273
    2. ' B' → logprob: -6.2519354820251465
    3. '(B' → logprob: -12.126935005187988
    4. 'A' → logprob: -13.751935005187988
    5. 'list' → logprob: -15.251935005187988
    6. '	B' → logprob: -17.876935958862305
    7. '(' → logprob: -17.876935958862305
    8. ' ' → logprob: -18.001935958862305
    9. '   ' → logprob: -18.126935958862305
    10. '>B' → logprob: -18.251935958862305

Token 880: ' B' (ID: 418)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.008617527782917023
    2. 'B' → logprob: -4.758617401123047
    3. '(A' → logprob: -14.008617401123047
    4. '(' → logprob: -14.008617401123047
    5. 'A' → logprob: -14.508617401123047
    6. ' B' → logprob: -14.633617401123047
    7. '   ' → logprob: -15.383617401123047
    8. '	B' → logprob: -16.258617401123047
    9. 'def' → logprob: -16.508617401123047
    10. '=B' → logprob: -17.383617401123047

Token 881: ' (' (ID: 350)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007169266697019339
    2. '=B' → logprob: -5.257169246673584
    3. '(B' → logprob: -7.007169246673584
    4. 'B' → logprob: -7.007169246673584
    5. 'sorted' → logprob: -9.757169723510742
    6. '()' → logprob: -10.382169723510742
    7. '(sorted' → logprob: -10.757169723510742
    8. '(' → logprob: -12.882169723510742
    9. ' =' → logprob: -13.132169723510742
    10. '   ' → logprob: -13.382169723510742

Token 882: 'val' (ID: 1105)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00040004486800171435
    2. 'sorted' → logprob: -7.875400066375732
    3. ' B' → logprob: -11.250399589538574
    4. ')' → logprob: -12.625399589538574
    5. 'A' → logprob: -14.000399589538574
    6. '(B' → logprob: -14.000399589538574
    7. '(sorted' → logprob: -14.750399589538574
    8. '   ' → logprob: -14.875399589538574
    9. '```' → logprob: -15.000399589538574
    10. '[B' → logprob: -15.375399589538574

Token 883: 'eurs' (ID: 17634)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.40395623445510864
    2. 'B' → logprob: -1.2789561748504639
    3. '(B' → logprob: -3.278956174850464
    4. 'ue' → logprob: -4.778956413269043
    5. '(sorted' → logprob: -5.778956413269043
    6. 'orted' → logprob: -6.903956413269043
    7. 'e' → logprob: -6.903956413269043
    8. 'es' → logprob: -7.778956413269043
    9. 'or' → logprob: -8.153956413269043
    10. 'ored' → logprob: -8.278956413269043

Token 884: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -2.093505099765025e-05
    2. 'sorted' → logprob: -11.500020980834961
    3. ')' → logprob: -12.250020980834961
    4. '(sorted' → logprob: -13.625020980834961
    5. ')=' → logprob: -13.875020980834961
    6. '=B' → logprob: -14.000020980834961
    7. '```' → logprob: -14.125020980834961
    8. '(' → logprob: -14.375020980834961
    9. ' =' → logprob: -14.500020980834961
    10. '=[]' → logprob: -15.375020980834961

Token 885: ' ajouter' (ID: 78457)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -2.7252845029579476e-05
    2. 'sort' → logprob: -11.125027656555176
    3. ' sorted' → logprob: -12.625027656555176
    4. '(sorted' → logprob: -13.125027656555176
    5. 'append' → logprob: -13.500027656555176
    6. 'orted' → logprob: -13.875027656555176
    7. 'sortable' → logprob: -13.875027656555176
    8. 'aj' → logprob: -14.375027656555176
    9. 'trim' → logprob: -15.000027656555176
    10. 'add' → logprob: -15.000027656555176

Token 886: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006066851783543825
    2. ')
' → logprob: -6.256066799163818
    3. '   ' → logprob: -6.756066799163818
    4. ')=' → logprob: -6.881066799163818
    5. '(B' → logprob: -7.006066799163818
    6. 'B' → logprob: -7.631066799163818
    7. '=B' → logprob: -8.381067276000977
    8. ',' → logprob: -8.756067276000977
    9. ',B' → logprob: -9.506067276000977
    10. '=' → logprob: -9.756067276000977

Token 887: ' par' (ID: 686)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.27099974633893e-05
    2. '=B' → logprob: -11.875012397766113
    3. '   ' → logprob: -13.375012397766113
    4. '=A' → logprob: -13.625012397766113
    5. 'sorted' → logprob: -13.750012397766113
    6. 'B' → logprob: -14.125012397766113
    7. ' =' → logprob: -14.875012397766113
    8. '(B' → logprob: -16.12501335144043
    9. 'A' → logprob: -16.50001335144043
    10. '.sort' → logprob: -16.62501335144043

Token 888: ' ordre' (ID: 103061)
  Prédit: 'sorted'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -0.2093396931886673
    2. 'ordre' → logprob: -1.7093397378921509
    3. 'order' → logprob: -4.959339618682861
    4. 'ord' → logprob: -8.45934009552002
    5. 'l' → logprob: -8.58434009552002
    6. 'ordered' → logprob: -8.95934009552002
    7. 'reverse' → logprob: -9.45934009552002
    8. ' ordre' → logprob: -9.95934009552002
    9. 'cro' → logprob: -9.95934009552002
    10. 'ordine' → logprob: -10.33434009552002

Token 889: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cro' → logprob: -3.47626737493556e-05
    2. 'asc' → logprob: -11.12503433227539
    3. 'sorted' → logprob: -11.62503433227539
    4. 'c' → logprob: -11.87503433227539
    5. 'reverse' → logprob: -13.87503433227539
    6. 'desc' → logprob: -13.87503433227539
    7. '```' → logprob: -14.50003433227539
    8. 'descending' → logprob: -14.62503433227539
    9. 'B' → logprob: -15.37503433227539
    10. 'dec' → logprob: -15.62503433227539

Token 890: 'issant' (ID: 31359)
  Prédit: 'issante'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issante' → logprob: -0.2595495879650116
    2. 'issant' → logprob: -1.509549617767334
    3. 'issance' → logprob: -5.009549617767334
    4. 'is' → logprob: -8.009549140930176
    5. 'iss' → logprob: -8.384549140930176
    6. 'issants' → logprob: -8.634549140930176
    7. 'ss' → logprob: -9.259549140930176
    8. 'issent' → logprob: -10.634549140930176
    9. 'issan' → logprob: -10.759549140930176
    10. 't' → logprob: -11.759549140930176

Token 891: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.38842201232910156
    2. '   ' → logprob: -1.1384220123291016
    3. 'A' → logprob: -6.513422012329102
    4. ' B' → logprob: -10.638422012329102
    5. '```' → logprob: -11.388422012329102
    6. ',' → logprob: -12.138422012329102
    7. '    
' → logprob: -12.263422012329102
    8. '	B' → logprob: -12.388422012329102
    9. '>B' → logprob: -12.638422012329102
    10. ')' → logprob: -13.013422012329102

Token 892: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23583556711673737
    2. 'A' → logprob: -1.6108355522155762
    3. '```' → logprob: -4.735835552215576
    4. 'B' → logprob: -6.485835552215576
    5. '#' → logprob: -10.360836029052734
    6. '``' → logprob: -11.610836029052734
    7. ' A' → logprob: -11.735836029052734
    8. 'if' → logprob: -12.485836029052734
    9. ',' → logprob: -12.610836029052734
    10. '    
' → logprob: -12.860836029052734

Token 893: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' (adapté à ' B') → logprob: -7.584239938296378e-06
    2. 'A' → logprob: -12.000007629394531
    3. ' B' → logprob: -13.875007629394531
    4. '   ' → logprob: -14.875007629394531
    5. '	B' → logprob: -18.37500762939453
    6. '```' → logprob: -19.87500762939453
    7. 'Ｂ' → logprob: -21.12500762939453
    8. 'sorted' → logprob: -21.62500762939453
    9. '  ' → logprob: -22.37500762939453
    10. '=B' → logprob: -22.37500762939453

Token 894: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -6.0629870858974755e-05
    2. '=B' → logprob: -10.00006103515625
    3. 'sorted' → logprob: -11.25006103515625
    4. 'B' → logprob: -13.75006103515625
    5. '=A' → logprob: -14.75006103515625
    6. '.sort' → logprob: -15.00006103515625
    7. '(sorted' → logprob: -16.00006103515625
    8. 'sort' → logprob: -16.12506103515625
    9. '_sorted' → logprob: -17.75006103515625
    10. '=b' → logprob: -17.87506103515625

Token 895: 'sorted' (ID: 64288)
  Prédit: 'sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sorted' → logprob: -4.320199877838604e-07
    2. ' sorted' → logprob: -15.375
    3. '(sorted' → logprob: -16.625
    4. 'B' → logprob: -18.0
    5. '   ' → logprob: -18.25
    6. 'sort' → logprob: -18.625
    7. '.sorted' → logprob: -19.125
    8. 'filtered' → logprob: -19.125
    9. 'Sorted' → logprob: -19.5
    10. 'A' → logprob: -19.5

Token 896: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.00023166877508629113
    2. '(A' → logprob: -8.375231742858887
    3. '(add' → logprob: -14.125231742858887
    4. '(' → logprob: -15.625231742858887
    5. 'B' → logprob: -16.00023078918457
    6. '(b' → logprob: -17.25023078918457
    7. 'A' → logprob: -17.37523078918457
    8. '(Add' → logprob: -17.62523078918457
    9. '[B' → logprob: -18.50023078918457
    10. '()' → logprob: -18.50023078918457

Token 897: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007271994836628437
    2. '())' → logprob: -5.007271766662598
    3. '()' → logprob: -8.132271766662598
    4. ')
' → logprob: -8.882271766662598
    5. '(reverse' → logprob: -10.007271766662598
    6. ',' → logprob: -10.507271766662598
    7. '(),' → logprob: -11.507271766662598
    8. '   ' → logprob: -11.632271766662598
    9. ' )' → logprob: -11.757271766662598
    10. ')

' → logprob: -11.757271766662598

Token 898: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00802192185074091
    2. 'if' → logprob: -5.258021831512451
    3. ' if' → logprob: -6.383021831512451
    4. '```' → logprob: -7.008021831512451
    5. '<|end|>' → logprob: -9.75802230834961
    6. ',' → logprob: -10.63302230834961
    7. '+' → logprob: -11.00802230834961
    8. '  ' → logprob: -11.38302230834961
    9. 'for' → logprob: -11.50802230834961
    10. 'sum' → logprob: -11.63302230834961

Token 899: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32147324085235596
    2. 'if' → logprob: -1.321473240852356
    3. '```' → logprob: -5.446473121643066
    4. 'while' → logprob: -6.321473121643066
    5. ' if' → logprob: -6.696473121643066
    6. 'sum' → logprob: -8.821473121643066
    7. 'for' → logprob: -8.946473121643066
    8. 'm' → logprob: -9.071473121643066
    9. 'diff' → logprob: -9.196473121643066
    10. 'total' → logprob: -9.321473121643066

Token 900: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0002285694790771231
    2. '#' → logprob: -9.125228881835938
    3. '   ' → logprob: -9.625228881835938
    4. 'while' → logprob: -11.125228881835938
    5. 'import' → logprob: -11.625228881835938
    6. 'diff' → logprob: -12.000228881835938
    7. 'total' → logprob: -12.375228881835938
    8. ' if' → logprob: -12.500228881835938
    9. 'm' → logprob: -12.500228881835938
    10. 'from' → logprob: -12.750228881835938

Token 901: ' le' (ID: 505)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.46565911173820496
    2. ' add' → logprob: -1.2156591415405273
    3. 'minus' → logprob: -2.9656591415405273
    4. ' minus' → logprob: -3.9656591415405273
    5. 'min' → logprob: -5.840659141540527
    6. '(add' → logprob: -7.840659141540527
    7. ' min' → logprob: -8.090659141540527
    8. '(min' → logprob: -8.215659141540527
    9. 'plus' → logprob: -8.215659141540527
    10. 'A' → logprob: -8.465659141540527

Token 902: ' total' (ID: 3609)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.2470034509897232
    2. 'minus' → logprob: -1.622003436088562
    3. ' add' → logprob: -5.122003555297852
    4. 'len' → logprob: -5.372003555297852
    5. 'plus' → logprob: -5.747003555297852
    6. 'a' → logprob: -5.872003555297852
    7. ' minus' → logprob: -6.747003555297852
    8. 'min' → logprob: -6.872003555297852
    9. 'abs' → logprob: -7.247003555297852
    10. 'A' → logprob: -7.497003555297852

Token 903: ' à' (ID: 1221)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.571965754032135
    2. 'minus' → logprob: -1.6969656944274902
    3. ' minus' → logprob: -2.3219656944274902
    4. ' add' → logprob: -2.8219656944274902
    5. '   ' → logprob: -3.9469656944274902
    6. '>' → logprob: -4.32196569442749
    7. '-' → logprob: -4.57196569442749
    8. ' -' → logprob: -4.82196569442749
    9. 'A' → logprob: -5.44696569442749
    10. ' des' → logprob: -5.57196569442749

Token 904: ' retirer' (ID: 136490)
  Prédit: 'ret'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ret' → logprob: -0.9641404151916504
    2. 'remove' → logprob: -1.2141404151916504
    3. 'add' → logprob: -1.4641404151916504
    4. 'minus' → logprob: -3.0891404151916504
    5. 'aj' → logprob: -3.4641404151916504
    6. 'plus' → logprob: -4.46414041519165
    7. 'moins' → logprob: -7.71414041519165
    8. ' retirer' → logprob: -7.83914041519165
    9. 'min' → logprob: -8.339139938354492
    10. 'subtract' → logprob: -8.714139938354492

Token 905: ' est' (ID: 893)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2648405134677887
    2. ' >' → logprob: -1.8898404836654663
    3. '<=' → logprob: -2.764840602874756
    4. ' <=' → logprob: -4.639840602874756
    5. '==' → logprob: -5.139840602874756
    6. '>=' → logprob: -6.889840602874756
    7. ' ==' → logprob: -7.514840602874756
    8. '   ' → logprob: -7.639840602874756
    9. '>A' → logprob: -8.264840126037598
    10. '!=' → logprob: -8.514840126037598

Token 906: ' égal' (ID: 15059)
  Prédit: 'equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'equal' → logprob: -0.7166313529014587
    2. 'add' → logprob: -2.0916314125061035
    3. '==' → logprob: -2.4666314125061035
    4. 'exact' → logprob: -2.7166314125061035
    5. 'not' → logprob: -2.8416314125061035
    6. 'minus' → logprob: -2.9666314125061035
    7. 'plus' → logprob: -3.7166314125061035
    8. '>' → logprob: -4.0916314125061035
    9. 'égal' → logprob: -4.2166314125061035
    10. 'min' → logprob: -4.3416314125061035

Token 907: ' au' (ID: 2791)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.9621003866195679
    2. '   ' → logprob: -1.3371003866195679
    3. ' à' → logprob: -1.7121003866195679
    4. 'minus' → logprob: -2.7121005058288574
    5. ' au' → logprob: -3.5871005058288574
    6. 'au' → logprob: -3.5871005058288574
    7. 'add' → logprob: -3.9621005058288574
    8. ' minus' → logprob: -4.462100505828857
    9. 'a' → logprob: -4.962100505828857
    10. '=' → logprob: -6.087100505828857

Token 908: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00810350850224495
    2. 'add' → logprob: -5.383103370666504
    3. ' total' → logprob: -5.758103370666504
    4. 'aj' → logprob: -9.258103370666504
    5. '   ' → logprob: -9.383103370666504
    6. 'to' → logprob: -10.508103370666504
    7. '  ' → logprob: -10.883103370666504
    8. ' ' → logprob: -11.133103370666504
    9. 'à' → logprob: -11.508103370666504
    10. ' add' → logprob: -11.633103370666504

Token 909: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.8572748899459839
    2. ' à' → logprob: -1.1072748899459839
    3. '   ' → logprob: -1.8572748899459839
    4. 'minus' → logprob: -3.7322750091552734
    5. 'to' → logprob: -4.232275009155273
    6. ' to' → logprob: -4.607275009155273
    7. 'moins' → logprob: -4.982275009155273
    8. '```' → logprob: -5.607275009155273
    9. '       ' → logprob: -5.732275009155273
    10. '==' → logprob: -5.732275009155273

Token 910: ' ajouter' (ID: 78457)
  Prédit: 'aj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aj' → logprob: -0.005882337223738432
    2. 'ret' → logprob: -5.880882263183594
    3. 'add' → logprob: -6.505882263183594
    4. 'total' → logprob: -7.255882263183594
    5. ' ajouter' → logprob: -7.630882263183594
    6. '   ' → logprob: -9.380882263183594
    7. 'plus' → logprob: -9.380882263183594
    8. 'Ajouter' → logprob: -10.255882263183594
    9. 'sup' → logprob: -10.755882263183594
    10. '+' → logprob: -11.005882263183594

Token 911: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1702698916196823
    2. 'and' → logprob: -2.0452699661254883
    3. '   ' → logprob: -3.7952699661254883
    4. ':' → logprob: -5.420269966125488
    5. ' et' → logprob: -9.545269966125488
    6. ',' → logprob: -10.045269966125488
    7. '==' → logprob: -10.170269966125488
    8. '```' → logprob: -10.295269966125488
    9. 'et' → logprob: -10.545269966125488
    10. ' or' → logprob: -10.795269966125488

Token 912: '   ' (ID: 271)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.25593793392181396
    2. 'and' → logprob: -1.755937933921814
    3. '   ' → logprob: -3.0059380531311035
    4. '==' → logprob: -6.2559380531311035
    5. ':' → logprob: -6.6309380531311035
    6. ' ==' → logprob: -8.255937576293945
    7. '       ' → logprob: -10.755937576293945
    8. ':
' → logprob: -11.005937576293945
    9. 'if' → logprob: -11.755937576293945
    10. '  ' → logprob: -12.130937576293945

Token 913: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09560120850801468
    2. 'and' → logprob: -2.7206013202667236
    3. 'if' (adapté à ' if') → logprob: -3.8456013202667236
    4. ' and' → logprob: -5.5956010818481445
    5. ':' → logprob: -8.720601081848145
    6. ' if' → logprob: -9.595601081848145
    7. 'et' → logprob: -12.095601081848145
    8. '       ' → logprob: -12.470601081848145
    9. '  ' → logprob: -12.595601081848145
    10. '==' → logprob: -13.220601081848145

Token 914: ' minus' (ID: 40335)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.15974068641662598
    2. 'minus' → logprob: -2.409740686416626
    3. ' add' → logprob: -2.909740686416626
    4. ' minus' → logprob: -5.784740447998047
    5. '   ' → logprob: -9.034740447998047
    6. 'plus' → logprob: -9.534740447998047
    7. 'min' → logprob: -11.034740447998047
    8. ' ' → logprob: -12.159740447998047
    9. ' plus' → logprob: -12.284740447998047
    10. '  ' → logprob: -12.284740447998047

Token 915: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12695226073265076
    2. ' ==' → logprob: -2.1269521713256836
    3. '=' → logprob: -11.501952171325684
    4. '   ' → logprob: -12.876952171325684
    5. '!=' → logprob: -12.876952171325684
    6. '==
' → logprob: -12.876952171325684
    7. '()==' → logprob: -13.626952171325684
    8. '>=' → logprob: -13.751952171325684
    9. ')==' → logprob: -14.251952171325684
    10. '===' → logprob: -14.376952171325684

Token 916: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -9.014684110297821e-06
    2. ' add' → logprob: -11.625008583068848
    3. '   ' → logprob: -17.000009536743164
    4. '0' → logprob: -18.125009536743164
    5. ' ' → logprob: -18.750009536743164
    6. '	add' → logprob: -19.375009536743164
    7. '  ' → logprob: -20.000009536743164
    8. '=' → logprob: -21.000009536743164
    9. '    ' → logprob: -21.125009536743164
    10. '(add' → logprob: -21.125009536743164

Token 917: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026444854214787483
    2. ':
' → logprob: -3.901444911956787
    3. ' and' → logprob: -5.276444911956787
    4. '==' → logprob: -8.026444435119629
    5. 'and' → logprob: -8.151444435119629
    6. '   ' → logprob: -9.651444435119629
    7. ':return' → logprob: -10.401444435119629
    8. ' ==' → logprob: -10.901444435119629
    9. '       ' → logprob: -10.901444435119629
    10. ':
' → logprob: -11.401444435119629

Token 918: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1490858793258667
    2. 'print' → logprob: -2.0240859985351562
    3. '   ' → logprob: -5.149085998535156
    4. 'if' → logprob: -8.149085998535156
    5. ' print' → logprob: -8.774085998535156
    6. 'break' → logprob: -9.399085998535156
    7. '#' → logprob: -11.024085998535156
    8. '#print' → logprob: -11.274085998535156
    9. 'for' → logprob: -11.649085998535156
    10. '	print' → logprob: -11.774085998535156

Token 919: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006345203728415072
    2. '   ' → logprob: -7.625634670257568
    3. 'if' → logprob: -9.25063419342041
    4. 'break' → logprob: -10.50063419342041
    5. ' print' → logprob: -11.25063419342041
    6. '       ' → logprob: -13.00063419342041
    7. '#print' → logprob: -13.00063419342041
    8. 'for' → logprob: -13.37563419342041
    9. 'pass' → logprob: -13.75063419342041
    10. '	print' → logprob: -14.37563419342041

Token 920: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34742581844329834
    2. ' =' → logprob: -1.4724258184432983
    3. 'iv' → logprob: -3.972425937652588
    4. 'p' → logprob: -4.722425937652588
    5. 'print' → logprob: -4.972425937652588
    6. '=len' → logprob: -4.972425937652588
    7. 'ef' → logprob: -5.722425937652588
    8. 'el' → logprob: -5.847425937652588
    9. '   ' → logprob: -5.847425937652588
    10. ' ' → logprob: -6.347425937652588

Token 921: 'minus' (ID: 80991)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5532132387161255
    2. 'minus' → logprob: -1.9282132387161255
    3. 'A' → logprob: -2.053213119506836
    4. 'min' → logprob: -2.553213119506836
    5. 'len' → logprob: -3.803213119506836
    6. 's' → logprob: -4.178213119506836
    7. 'max' → logprob: -4.428213119506836
    8. '0' → logprob: -4.803213119506836
    9. 'sum' → logprob: -5.303213119506836
    10. 'a' → logprob: -5.553213119506836

Token 922: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7934326529502869
    2. '       ' → logprob: -1.0434327125549316
    3. '<|end|>' → logprob: -2.0434327125549316
    4. '
' → logprob: -3.0434327125549316
    5. '<|end|>' → logprob: -5.918432712554932
    6. '+' → logprob: -6.168432712554932
    7. ' and' → logprob: -6.168432712554932
    8. '#' → logprob: -6.418432712554932
    9. '           ' → logprob: -6.793432712554932
    10. ':' → logprob: -6.918432712554932

Token 923: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055956996977329254
    2. '<|end|>' → logprob: -3.055957078933716
    3. '+' → logprob: -6.305956840515137
    4. '
' → logprob: -6.555956840515137
    5. '#' (adapté à ' #') → logprob: -6.805956840515137
    6. '   ' → logprob: -6.930956840515137
    7. '<|end|>' → logprob: -8.180956840515137
    8. ')' → logprob: -8.180956840515137
    9. '        
' → logprob: -8.305956840515137
    10. '           ' → logprob: -8.680956840515137

Token 924: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07005080580711365
    2. 'd' → logprob: -3.8200507164001465
    3. '       ' → logprob: -4.4450507164001465
    4. 'if' → logprob: -4.4450507164001465
    5. 'continue' → logprob: -4.8200507164001465
    6. 'for' → logprob: -5.1950507164001465
    7. '   ' → logprob: -5.9450507164001465
    8. 'break' → logprob: -6.1950507164001465
    9. 'm' → logprob: -7.3200507164001465
    10. 'A' → logprob: -7.5700507164001465

Token 925: ' peut' (ID: 9216)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.19480186700820923
    2. 'print' → logprob: -2.0698018074035645
    3. 'continue' → logprob: -3.9448018074035645
    4. '       ' → logprob: -3.9448018074035645
    5. '   ' → logprob: -5.4448018074035645
    6. ' break' → logprob: -5.8198018074035645
    7. '           ' → logprob: -6.1948018074035645
    8. '=' → logprob: -6.3198018074035645
    9. ' continue' → logprob: -8.319802284240723
    10. 'd' → logprob: -8.569802284240723

Token 926: ' les' (ID: 1341)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.42673906683921814
    2. '       ' → logprob: -1.8017390966415405
    3. 'continue' → logprob: -2.051738977432251
    4. 'contin' → logprob: -3.301738977432251
    5. '           ' → logprob: -4.80173921585083
    6. 'break' → logprob: -5.92673921585083
    7. 'd' → logprob: -6.42673921585083
    8. '   ' → logprob: -6.55173921585083
    9. ' print' → logprob: -6.80173921585083
    10. ' continuer' → logprob: -7.05173921585083

Token 927: ' appeler' (ID: 172747)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -0.40779438614845276
    2. 'prendre' → logprob: -1.6577943563461304
    3. 'cons' → logprob: -3.40779447555542
    4. 'print' → logprob: -3.90779447555542
    5. 'contin' → logprob: -4.03279447555542
    6. 'repr' → logprob: -4.28279447555542
    7. 'aff' → logprob: -4.40779447555542
    8. 'part' → logprob: -4.65779447555542
    9. 'assign' → logprob: -5.65779447555542
    10. 'div' → logprob: -5.65779447555542

Token 928: ' "' (ID: 392)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5040494203567505
    2. '       ' → logprob: -1.0040494203567505
    3. 'continue' → logprob: -4.254049301147461
    4. '           ' → logprob: -4.879049301147461
    5. '#' → logprob: -5.379049301147461
    6. '=' → logprob: -6.879049301147461
    7. '.' → logprob: -7.879049301147461
    8. ' d' → logprob: -8.004049301147461
    9. 'print' → logprob: -8.254049301147461
    10. ' continue' → logprob: -8.629049301147461

Token 929: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4481860399246216
    2. 'print' → logprob: -1.1981860399246216
    3. 'continue' → logprob: -3.073185920715332
    4. 's' → logprob: -5.698185920715332
    5. 'break' → logprob: -6.198185920715332
    6. 'min' → logprob: -6.198185920715332
    7. 'add' → logprob: -6.823185920715332
    8. '       ' → logprob: -7.073185920715332
    9. '   ' → logprob: -7.698185920715332
    10. '#' → logprob: -7.823185920715332

Token 930: '",' (ID: 672)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1389799118041992
    2. ' =' → logprob: -1.1389799118041992
    3. '<|end|>' → logprob: -1.3889799118041992
    4. 'iv' → logprob: -4.013979911804199
    5. '```' → logprob: -4.263979911804199
    6. ')' → logprob: -4.263979911804199
    7. '   ' → logprob: -4.888979911804199
    8. 'if' → logprob: -5.388979911804199
    9. '#' → logprob: -5.513979911804199
    10. '"' → logprob: -5.513979911804199

Token 931: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6608104109764099
    2. 'print' → logprob: -0.7858104109764099
    3. '           ' → logprob: -4.785810470581055
    4. 'd' → logprob: -4.910810470581055
    5. ' print' → logprob: -5.660810470581055
    6. 'break' → logprob: -5.660810470581055
    7. 'continue' → logprob: -5.785810470581055
    8. ' continue' → logprob: -7.785810470581055
    9. '#' → logprob: -7.785810470581055
    10. ' break' → logprob: -8.035810470581055

Token 932: ' coût' (ID: 73109)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1955803632736206
    2. 'break' → logprob: -2.44558048248291
    3. 'div' → logprob: -3.69558048248291
    4. 'co' → logprob: -3.82058048248291
    5. 'minimum' → logprob: -4.57058048248291
    6. 'diff' → logprob: -5.19558048248291
    7. 'max' → logprob: -5.19558048248291
    8. 'min' → logprob: -5.44558048248291
    9. 'dern' → logprob: -5.57058048248291
    10. 'nombre' → logprob: -5.69558048248291

Token 933: ' total' (ID: 3609)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6743245124816895
    2. '=' → logprob: -1.4243245124816895
    3. 'total' → logprob: -1.7993245124816895
    4. ' total' → logprob: -2.9243245124816895
    5. '_total' → logprob: -4.9243245124816895
    6. 'final' → logprob: -5.5493245124816895
    7. '   ' → logprob: -5.5493245124816895
    8. '=min' → logprob: -6.2993245124816895
    9. 'max' → logprob: -6.5493245124816895
    10. '       ' → logprob: -6.5493245124816895

Token 934: ' nécessaire' (ID: 43098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050912462174892426
    2. '<|end|>' → logprob: -3.050912380218506
    3. '   ' → logprob: -7.175912380218506
    4. '<|end|>' → logprob: -7.550912380218506
    5. ')' → logprob: -8.550912857055664
    6. ',' → logprob: -8.550912857055664
    7. '.' → logprob: -8.675912857055664
    8. '
' → logprob: -8.925912857055664
    9. '#' → logprob: -9.800912857055664
    10. ';' → logprob: -10.050912857055664

Token 935: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013034529983997345
    2. '<|end|>' → logprob: -7.501303672790527
    3. '   ' → logprob: -7.876303672790527
    4. ',' → logprob: -9.001303672790527
    5. ')' → logprob: -10.126303672790527
    6. '
' → logprob: -10.501303672790527
    7. '           ' → logprob: -10.501303672790527
    8. '.' → logprob: -10.626303672790527
    9. ' if' → logprob: -10.626303672790527
    10. '        
' → logprob: -10.751303672790527

Token 936: ' l' (ID: 305)
  Prédit: 'ré'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ré' → logprob: -1.168199896812439
    2. 'd' → logprob: -1.543199896812439
    3. 'faire' → logprob: -1.668199896812439
    4. 'print' → logprob: -2.9182000160217285
    5. 's' → logprob: -3.0432000160217285
    6. '   ' → logprob: -3.1682000160217285
    7. 'break' → logprob: -3.1682000160217285
    8. 'modifier' → logprob: -3.4182000160217285
    9. 'aj' → logprob: -4.6682000160217285
    10. 'r' → logprob: -5.2932000160217285

Token 937: ''équ' (ID: 170507)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7626528739929199
    2. 'a' → logprob: -1.63765287399292
    3. 'es' → logprob: -2.63765287399292
    4. 'i' → logprob: -2.88765287399292
    5. ''op' → logprob: -3.13765287399292
    6. 'break' → logprob: -3.63765287399292
    7. '#' → logprob: -3.76265287399292
    8. 'if' → logprob: -4.01265287399292
    9. ''équ' → logprob: -4.13765287399292
    10. 'div' → logprob: -4.51265287399292

Token 938: 'ilibr' (ID: 43344)
  Prédit: 'ilibre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilibre' → logprob: -0.006245276425033808
    2. 'ilibr' → logprob: -5.881245136260986
    3. 'ilib' → logprob: -6.506245136260986
    4. 'ivalent' → logprob: -7.256245136260986
    5. 'il' → logprob: -8.131245613098145
    6. 'ibre' → logprob: -8.256245613098145
    7. 'ilibrium' → logprob: -8.631245613098145
    8. 'e' → logprob: -9.506245613098145
    9. 'a' → logprob: -9.631245613098145
    10. 'égal' → logprob: -9.631245613098145

Token 939: 'age' (ID: 477)
  Prédit: 'ilibre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ilibre' → logprob: -0.49878567457199097
    2. 'ibre' → logprob: -1.3737857341766357
    3. 'ibr' → logprob: -2.6237857341766357
    4. 'ilibr' → logprob: -3.1237857341766357
    5. 'i' → logprob: -4.623785495758057
    6. 'e' → logprob: -4.998785495758057
    7. 'ible' → logprob: -6.373785495758057
    8. 'al' → logprob: -6.998785495758057
    9. 'iable' → logprob: -7.123785495758057
    10. 'a' → logprob: -7.623785495758057

Token 940: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004370186477899551
    2. '<|end|>' → logprob: -5.754370212554932
    3. '   ' → logprob: -7.629370212554932
    4. ',' → logprob: -9.004369735717773
    5. '.' → logprob: -9.129369735717773
    6. ')' → logprob: -9.754369735717773
    7. '
' → logprob: -9.754369735717773
    8. ' if' → logprob: -9.879369735717773
    9. '#' → logprob: -10.004369735717773
    10. '        
' → logprob: -10.004369735717773

Token 941: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003917157184332609
    2. ' and' → logprob: -6.378917217254639
    3. '<|end|>' → logprob: -6.878917217254639
    4. '   ' → logprob: -8.25391674041748
    5. ' if' → logprob: -8.87891674041748
    6. 'if' → logprob: -9.12891674041748
    7. 'and' → logprob: -9.12891674041748
    8. ',' → logprob: -9.12891674041748
    9. '	' → logprob: -9.75391674041748
    10. '+' → logprob: -10.00391674041748

Token 942: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6437502503395081
    2. 'print' → logprob: -1.2687501907348633
    3. '       ' → logprob: -1.8937501907348633
    4. '   ' → logprob: -3.6437501907348633
    5. 'for' → logprob: -5.393750190734863
    6. 'd' → logprob: -5.643750190734863
    7. 'm' → logprob: -6.518750190734863
    8. 'break' → logprob: -6.518750190734863
    9. ' if' → logprob: -7.143750190734863
    10. 'count' → logprob: -7.143750190734863

Token 943: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.00020711649267468601
    2. ' d' → logprob: -8.62520694732666
    3. 'i' → logprob: -10.87520694732666
    4. 's' → logprob: -13.25020694732666
    5. 'add' → logprob: -13.50020694732666
    6. 'K' → logprob: -14.00020694732666
    7. '(d' → logprob: -14.12520694732666
    8. 'len' → logprob: -14.12520694732666
    9. 'N' → logprob: -14.25020694732666
    10. '   ' → logprob: -14.25020694732666

Token 944: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5935586094856262
    2. ' <=' → logprob: -1.2185585498809814
    3. '==' → logprob: -2.2185585498809814
    4. ' ==' → logprob: -3.3435585498809814
    5. '>=' → logprob: -5.5935587882995605
    6. ' <' → logprob: -6.5935587882995605
    7. ' >=' → logprob: -6.7185587882995605
    8. '<len' → logprob: -7.8435587882995605
    9. '[' → logprob: -8.468558311462402
    10. '<' → logprob: -8.843558311462402

Token 945: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.6240566083070007e-06
    2. ' K' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.375001907348633
    4. 'k' → logprob: -18.250001907348633
    5. '	K' → logprob: -19.000001907348633
    6. ' ' → logprob: -19.625001907348633
    7. '  ' → logprob: -19.875001907348633
    8. '       ' → logprob: -20.750001907348633
    9. '    ' → logprob: -20.875001907348633
    10. 'N' → logprob: -21.125001907348633

Token 946: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12737078964710236
    2. ':
' → logprob: -2.127370834350586
    3. ':return' → logprob: -8.377370834350586
    4. ' and' → logprob: -9.252370834350586
    5. '   ' → logprob: -9.877370834350586
    6. '       ' → logprob: -10.127370834350586
    7. ':
' → logprob: -12.002370834350586
    8. ':

' → logprob: -12.252370834350586
    9. ' :' → logprob: -12.377370834350586
    10. ' :
' → logprob: -12.627370834350586

Token 947: '    ' (ID: 257)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48088669776916504
    2. '       ' → logprob: -1.730886697769165
    3. 'print' → logprob: -1.730886697769165
    4. ' print' → logprob: -3.605886697769165
    5. 'break' → logprob: -8.730886459350586
    6. '   ' → logprob: -9.730886459350586
    7. ' break' → logprob: -10.105886459350586
    8. '               ' → logprob: -10.980886459350586
    9. '        ' → logprob: -11.355886459350586
    10. '	print' → logprob: -11.605886459350586

Token 948: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10281870514154434
    2. '       ' → logprob: -2.602818727493286
    3. '           ' → logprob: -3.852818727493286
    4. ' print' → logprob: -6.102818489074707
    5. 'break' → logprob: -8.852818489074707
    6. '	print' → logprob: -10.977818489074707
    7. '   ' → logprob: -11.727818489074707
    8. '#print' → logprob: -11.852818489074707
    9. '#' (adapté à ' #') → logprob: -12.727818489074707
    10. '	       ' → logprob: -13.352818489074707

Token 949: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.621240496635437
    2. ' print' → logprob: -0.871240496635437
    3. '           ' → logprob: -3.2462406158447266
    4. '       ' → logprob: -5.496240615844727
    5. ' break' → logprob: -7.121240615844727
    6. 'break' → logprob: -7.746240615844727
    7. '   ' → logprob: -11.996240615844727
    8. '```' → logprob: -12.246240615844727
    9. '	print' → logprob: -12.371240615844727
    10. '#' → logprob: -12.371240615844727

Token 950: ' ce' (ID: 2357)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.19099080562591553
    2. ' d' → logprob: -1.8159908056259155
    3. 'True' → logprob: -4.815990924835205
    4. ' True' → logprob: -5.815990924835205
    5. 's' → logprob: -10.190990447998047
    6. 'K' → logprob: -10.565990447998047
    7. ' s' → logprob: -11.190990447998047
    8. ' add' → logprob: -11.815990447998047
    9. 'add' → logprob: -12.190990447998047
    10. ' K' → logprob: -12.565990447998047

Token 951: ' coût' (ID: 73109)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6338009238243103
    2. ' d' → logprob: -0.7588009238243103
    3. ' ' → logprob: -8.508800506591797
    4. ' <=' → logprob: -8.883800506591797
    5. '       ' → logprob: -9.133800506591797
    6. 'n' → logprob: -9.133800506591797
    7. '<=' → logprob: -9.258800506591797
    8. '   ' → logprob: -9.258800506591797
    9. 's' → logprob: -9.633800506591797
    10. ' True' → logprob: -10.008800506591797

Token 952: ' total' (ID: 3609)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6326854825019836
    2. ' <=' → logprob: -0.7576854825019836
    3. 'd' → logprob: -10.882685661315918
    4. 's' → logprob: -11.257685661315918
    5. '>=' → logprob: -11.382685661315918
    6. '+' → logprob: -11.632685661315918
    7. '   ' → logprob: -11.882685661315918
    8. ' >=' → logprob: -12.507685661315918
    9. '```' → logprob: -12.757685661315918
    10. '==' → logprob: -13.007685661315918

Token 953: ' ne' (ID: 453)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5309242606163025
    2. ' <=' → logprob: -0.9059242606163025
    3. 'est' → logprob: -5.530924320220947
    4. '```' → logprob: -7.405924320220947
    5. '>=' → logprob: -7.405924320220947
    6. 'd' → logprob: -7.530924320220947
    7. ' est' → logprob: -7.530924320220947
    8. '==' → logprob: -8.155923843383789
    9. ' >=' → logprob: -8.655923843383789
    10. '>' → logprob: -8.655923843383789

Token 954: ' dépasse' (ID: 165701)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.20071595907211304
    2. ' dépasse' → logprob: -2.575716018676758
    3. 'pas' → logprob: -3.575716018676758
    4. ' <=' → logprob: -3.825716018676758
    5. '>' → logprob: -4.200716018676758
    6. 'd' → logprob: -4.700716018676758
    7. '```' → logprob: -4.825716018676758
    8. ' dépass' → logprob: -5.075716018676758
    9. 'est' → logprob: -5.200716018676758
    10. 's' → logprob: -5.450716018676758

Token 955: ' pas' (ID: 2173)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.002476604888215661
    2. ' K' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.002476692199707
    4. '	K' → logprob: -15.502476692199707
    5. '       ' → logprob: -15.627476692199707
    6. 'k' → logprob: -15.627476692199707
    7. ' ' → logprob: -17.00247573852539
    8. 'd' → logprob: -17.12747573852539
    9. '>K' → logprob: -17.62747573852539
    10. '<K' → logprob: -17.62747573852539

Token 956: ' la' (ID: 557)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.547789674485102e-05
    2. ' K' → logprob: -10.250035285949707
    3. '   ' → logprob: -17.375036239624023
    4. '	K' → logprob: -17.750036239624023
    5. ' ' → logprob: -18.375036239624023
    6. ' ' → logprob: -19.125036239624023
    7. '       ' → logprob: -19.125036239624023
    8. '```' → logprob: -20.250036239624023
    9. '<K' → logprob: -20.500036239624023
    10. '>K' → logprob: -20.875036239624023

Token 957: ' limite' (ID: 48939)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.190178904333152e-05
    2. 'd' → logprob: -10.625031471252441
    3. ' K' → logprob: -12.125031471252441
    4. 'k' → logprob: -13.625031471252441
    5. 's' → logprob: -15.375031471252441
    6. 'budget' → logprob: -15.375031471252441
    7. '```' → logprob: -15.875031471252441
    8. 'b' → logprob: -16.125032424926758
    9. 'limit' → logprob: -17.125032424926758
    10. '   ' → logprob: -17.250032424926758

Token 958: ' perm' (ID: 5961)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.07449604570865631
    2. '       ' → logprob: -2.824496030807495
    3. '           ' → logprob: -4.949496269226074
    4. 'd' → logprob: -5.949496269226074
    5. ' K' → logprob: -6.074496269226074
    6. '(K' → logprob: -8.949496269226074
    7. ':' → logprob: -9.449496269226074
    8. '   ' → logprob: -9.699496269226074
    9. ',' → logprob: -10.324496269226074
    10. '               ' → logprob: -10.574496269226074

Token 959: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.2561067044734955
    2. 'et' → logprob: -1.5061067342758179
    3. 'is' → logprob: -5.506106853485107
    4. 'it' → logprob: -9.38110637664795
    5. 'ett' → logprob: -12.25610637664795
    6. 'ut' → logprob: -12.75610637664795
    7. 'i' → logprob: -13.00610637664795
    8. 'e' → logprob: -13.13110637664795
    9. 'itted' → logprob: -13.38110637664795
    10. 'K' → logprob: -13.50610637664795

Token 960: ' K' (ID: 658)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6776110529899597
    2. '       ' → logprob: -0.9276110529899597
    3. ':
' → logprob: -2.4276111125946045
    4. '           ' → logprob: -4.927610874176025
    5. ',' → logprob: -8.177611351013184
    6. ' and' → logprob: -8.802611351013184
    7. '):
' → logprob: -9.052611351013184
    8. ':return' → logprob: -9.427611351013184
    9. '):' → logprob: -9.552611351013184
    10. '   ' → logprob: -9.552611351013184

Token 961: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5115394592285156
    2. ':
' → logprob: -1.3865394592285156
    3. '       ' → logprob: -2.0115394592285156
    4. '           ' → logprob: -4.136539459228516
    5. ':return' → logprob: -8.636539459228516
    6. ',' → logprob: -9.136539459228516
    7. ' and' → logprob: -9.261539459228516
    8. '):
' → logprob: -9.511539459228516
    9. '():
' → logprob: -9.761539459228516
    10. '   ' → logprob: -10.261539459228516

Token 962: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09951537102460861
    2. 'print' → logprob: -2.599515438079834
    3. '           ' → logprob: -3.974515438079834
    4. ' print' → logprob: -6.474515438079834
    5. 'break' → logprob: -10.099514961242676
    6. '   ' → logprob: -10.474514961242676
    7. '	print' → logprob: -12.099514961242676
    8. ' break' → logprob: -12.849514961242676
    9. '```' → logprob: -13.724514961242676
    10. '#' → logprob: -13.974514961242676

Token 963: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.008129963040119e-06
    2. 'break' → logprob: -12.500003814697266
    3. ' print' → logprob: -15.875003814697266
    4. '           ' → logprob: -17.250003814697266
    5. 'return' → logprob: -17.500003814697266
    6. '       ' → logprob: -17.625003814697266
    7. '```' → logprob: -19.000003814697266
    8. '   ' → logprob: -19.250003814697266
    9. 'result' → logprob: -21.125003814697266
    10. '	print' → logprob: -21.875003814697266

Token 964: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00014203863975126296
    2. 's' → logprob: -8.875142097473145
    3. '(R' → logprob: -13.250142097473145
    4. '(d' → logprob: -15.250142097473145
    5. '(S' → logprob: -16.875141143798828
    6. '(' → logprob: -17.250141143798828
    7. 'd' → logprob: -17.750141143798828
    8. '{s' → logprob: -18.125141143798828
    9. '(r' → logprob: -18.250141143798828
    10. 'R' → logprob: -18.625141143798828

Token 965: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.007094577420502901
    2. ')' → logprob: -5.007094383239746
    3. ')
' → logprob: -7.882094383239746
    4. ' )
' → logprob: -13.382094383239746
    5. ')

' → logprob: -16.507095336914062
    6. ')`
' → logprob: -16.632095336914062
    7. ')return' → logprob: -16.882095336914062
    8. '   ' → logprob: -17.507095336914062
    9. ' )' → logprob: -17.757095336914062
    10. '),' → logprob: -18.757095336914062

Token 966: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 967: ' Aff' (ID: 13741)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -1.843177233240567e-05
    2. 'exit' → logprob: -11.500018119812012
    3. ' break' → logprob: -11.750018119812012
    4. '           ' → logprob: -15.625018119812012
    5. '	break' → logprob: -16.500019073486328
    6. '   ' → logprob: -16.750019073486328
    7. '       ' → logprob: -17.875019073486328
    8. '_break' → logprob: -18.250019073486328
    9. '```' → logprob: -19.125019073486328
    10. 'breaking' → logprob: -19.125019073486328

Token 968: 'iche' (ID: 7509)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.005586856510490179
    2. 'ixer' → logprob: -6.380586624145508
    3. 'ix' → logprob: -6.880586624145508
    4. 'ich' → logprob: -7.255586624145508
    5. 'ichage' → logprob: -7.255586624145508
    6. 'iche' → logprob: -8.380586624145508
    7. 'ort' → logprob: -8.880586624145508
    8. 'ic' → logprob: -8.880586624145508
    9. '   ' → logprob: -9.005586624145508
    10. '#' → logprob: -9.005586624145508

Token 969: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029750484973192215
    2. '(s' → logprob: -3.5297505855560303
    3. ' s' → logprob: -17.27975082397461
    4. '(' → logprob: -17.65475082397461
    5. '{s' → logprob: -19.40475082397461
    6. '```' → logprob: -19.65475082397461
    7. '`s' → logprob: -20.27975082397461
    8. 'd' → logprob: -20.52975082397461
    9. ' (' → logprob: -21.40475082397461
    10. 'S' → logprob: -21.65475082397461

Token 970: ' div' (ID: 4223)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -3.128163257315464e-07
    2. ' s' → logprob: -15.25
    3. 'break' → logprob: -17.875
    4. '0' → logprob: -19.0
    5. '```' → logprob: -19.0
    6. '   ' → logprob: -19.125
    7. '(s' → logprob: -20.125
    8. 'd' → logprob: -21.0
    9. 'exit' → logprob: -21.75
    10. 'print' → logprob: -21.75

Token 971: 'iseur' (ID: 108637)
  Prédit: 'iseur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iseur' → logprob: -0.0009309909655712545
    2. 'ise' → logprob: -7.1259307861328125
    3. 'ieur' → logprob: -10.125930786132812
    4. 'isseur' → logprob: -10.750930786132812
    5. 'vise' → logprob: -11.000930786132812
    6. 's' → logprob: -11.375930786132812
    7. '```' → logprob: -11.500930786132812
    8. 'i' → logprob: -12.875930786132812
    9. '#' → logprob: -13.125930786132812
    10. 'ixe' → logprob: -13.250930786132812

Token 972: ' actuel' (ID: 113646)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 973: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 974: 'la' (ID: 1675)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007171043660491705
    2. 'break' → logprob: -5.257171154022217
    3. ')
' → logprob: -6.757171154022217
    4. ' )' → logprob: -7.882171154022217
    5. ')return' → logprob: -8.382170677185059
    6. ' break' → logprob: -10.257170677185059
    7. 'return' → logprob: -10.382170677185059
    8. 'exit' → logprob: -10.382170677185059
    9. '   ' → logprob: -11.507170677185059
    10. '
' → logprob: -11.632170677185059

Token 975: ' réponse' (ID: 50332)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.021029707044363022
    2. ')' → logprob: -3.8960297107696533
    3. ')
' → logprob: -8.396029472351074
    4. 'break' → logprob: -9.396029472351074
    5. ' s' → logprob: -9.646029472351074
    6. ')s' → logprob: -10.646029472351074
    7. '
' → logprob: -10.771029472351074
    8. 'd' → logprob: -11.021029472351074
    9. '```' → logprob: -11.646029472351074
    10. 'div' → logprob: -11.896029472351074

Token 976: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6955471038818359
    2. ')
' → logprob: -0.6955471038818359
    3. '           ' → logprob: -6.320547103881836
    4. ')
' → logprob: -7.695547103881836
    5. ' )
' → logprob: -9.820547103881836
    6. '   ' → logprob: -10.195547103881836
    7. ' )' → logprob: -10.570547103881836
    8. '       ' → logprob: -11.945547103881836
    9. '               ' → logprob: -12.070547103881836
    10. ')

' → logprob: -12.320547103881836

Token 977: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 978: ' exit' (ID: 10654)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -3.5954712075181305e-05
    2. ' break' → logprob: -10.250036239624023
    3. '	break' → logprob: -15.375036239624023
    4. '           ' → logprob: -15.625036239624023
    5. 'exit' (adapté à ' exit') → logprob: -16.500036239624023
    6. '   ' → logprob: -17.125036239624023
    7. '_break' → logprob: -17.875036239624023
    8. '```' → logprob: -18.500036239624023
    9. 'Break' → logprob: -18.625036239624023
    10. '       ' → logprob: -18.875036239624023

Token 979: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 980: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 981: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 982: ' Arr' (ID: 16880)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -3.8219583075260743e-05
    2. ' break' → logprob: -10.750038146972656
    3. 'quit' → logprob: -11.250038146972656
    4. 'exit' → logprob: -12.875038146972656
    5. '```' → logprob: -14.125038146972656
    6. '0' → logprob: -15.375038146972656
    7. '	break' → logprob: -16.250038146972656
    8. '#' → logprob: -16.875038146972656
    9. 'Break' → logprob: -17.125038146972656
    10. 'BREAK' → logprob: -17.250038146972656

Token 983: 'ête' (ID: 16808)
  Prédit: 'êt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êt' → logprob: -0.43906447291374207
    2. 'êter' → logprob: -1.6890645027160645
    3. 'ête' → logprob: -2.4390645027160645
    4. 'et' → logprob: -3.6890645027160645
    5. 'ot' → logprob: -4.4390645027160645
    6. 'er' → logprob: -4.6890645027160645
    7. 'o' → logprob: -4.8140645027160645
    8. 'oy' → logprob: -5.1890645027160645
    9. 'ive' → logprob: -5.5640645027160645
    10. 'op' → logprob: -5.9390645027160645

Token 984: ' immédiatement' (ID: 100743)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -11.75001049041748
    3. '()
' → logprob: -13.50001049041748
    4. '0' → logprob: -14.50001049041748
    5. '()

' → logprob: -16.625009536743164
    6. '()%' → logprob: -17.000009536743164
    7. '()?>' → logprob: -17.125009536743164
    8. '()>' → logprob: -17.125009536743164
    9. '()<' → logprob: -17.375009536743164
    10. '()</' → logprob: -17.500009536743164

Token 985: ' l' (ID: 305)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3765897750854492
    2. '0' → logprob: -1.3765897750854492
    3. '(' → logprob: -3.001589775085449
    4. 'print' → logprob: -4.876589775085449
    5. '())' → logprob: -6.376589775085449
    6. ')' → logprob: -7.251589775085449
    7. '()
' → logprob: -7.501589775085449
    8. '#' → logprob: -8.25158977508545
    9. '1' → logprob: -8.62658977508545
    10. '();' → logprob: -9.50158977508545

Token 986: ''ex' (ID: 23472)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.051131077110767365
    2. 'program' → logprob: -3.051131010055542
    3. ' programme' → logprob: -6.051131248474121
    4. 'programma' → logprob: -9.801131248474121
    5. 'prog' → logprob: -10.551131248474121
    6. 'programm' → logprob: -10.801131248474121
    7. 'process' → logprob: -10.801131248474121
    8. 'Programme' → logprob: -11.051131248474121
    9. '_program' → logprob: -11.176131248474121
    10. 'script' → logprob: -11.926131248474121

Token 987: 'écution' (ID: 122423)
  Prédit: 'ecution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ecution' → logprob: -0.10675348341464996
    2. 'écution' → logprob: -2.6067535877227783
    3. 'ec' → logprob: -3.6067535877227783
    4. 'it' → logprob: -8.6067533493042
    5. 'ecute' → logprob: -9.7317533493042
    6. 'c' → logprob: -10.2317533493042
    7. 'éc' → logprob: -10.7317533493042
    8. 'p' → logprob: -11.3567533493042
    9. 'ception' → logprob: -11.8567533493042
    10. 'cec' → logprob: -12.7317533493042

Token 988: ' du' (ID: 1462)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 989: ' programme' (ID: 18190)
  Prédit: 'programme'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'programme' → logprob: -0.0034977926407009363
    2. 'program' → logprob: -5.75349760055542
    3. 'script' → logprob: -8.503498077392578
    4. ' programme' → logprob: -9.753498077392578
    5. 'code' → logprob: -9.753498077392578
    6. 'programma' → logprob: -14.753498077392578
    7. 'programm' → logprob: -15.003498077392578
    8. 'Programme' → logprob: -15.128498077392578
    9. 'prog' → logprob: -15.628498077392578
    10. 'pro' → logprob: -18.628498077392578

Token 990: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 991: 'p' (ID: 79)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. '<|end|>' → logprob: -11.250048637390137
    3. '())' → logprob: -11.375048637390137
    4. ' )' → logprob: -12.375048637390137
    5. ')
' → logprob: -12.375048637390137
    6. '")' → logprob: -12.750048637390137
    7. '```' → logprob: -12.875048637390137
    8. '()' → logprob: -12.875048637390137
    9. ')#' → logprob: -13.250048637390137
    10. '')' → logprob: -13.500048637390137

Token 992: 'uis' (ID: 4560)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.8910996317863464
    2. 'ython' → logprob: -1.0160996913909912
    3. 'rogram' → logprob: -1.6410996913909912
    4. 'er' → logprob: -3.766099691390991
    5. 'rocess' → logprob: -5.891099452972412
    6. ')' → logprob: -6.141099452972412
    7. '#' → logprob: -6.391099452972412
    8. 'rompt' → logprob: -7.766099452972412
    9. 'yth' → logprob: -8.26609992980957
    10. 'ro' → logprob: -8.26609992980957

Token 993: 'qu' (ID: 351)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.373668372631073
    2. 'r' → logprob: -1.7486684322357178
    3. ')' → logprob: -3.3736684322357178
    4. '```' → logprob: -3.9986684322357178
    5. 's' → logprob: -4.623668193817139
    6. 'o' → logprob: -4.623668193817139
    7. 'u' → logprob: -4.748668193817139
    8. 'x' → logprob: -5.123668193817139
    9. 'ython' → logprob: -5.373668193817139
    10. 'n' → logprob: -5.623668193817139

Token 994: ''une' (ID: 13337)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.066811203956604
    2. 'on' → logprob: -1.316811203956604
    3. 'la' → logprob: -1.941811203956604
    4. ' la' → logprob: -1.941811203956604
    5. 'le' → logprob: -3.4418110847473145
    6. '#' → logprob: -3.9418110847473145
    7. ' c' → logprob: -4.0668110847473145
    8. 'c' → logprob: -4.3168110847473145
    9. ' le' → logprob: -4.4418110847473145
    10. 's' → logprob: -6.6918110847473145

Token 995: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.10683919489383698
    2. 'ré' → logprob: -3.106839179992676
    3. ' solution' → logprob: -3.731839179992676
    4. '#' → logprob: -3.856839179992676
    5. ')' → logprob: -4.981839179992676
    6. 'bonne' → logprob: -6.356839179992676
    7. 'val' → logprob: -7.606839179992676
    8. 's' → logprob: -7.731839179992676
    9. 'me' → logprob: -8.106839179992676
    10. ' réponse' → logprob: -8.356839179992676

Token 996: ' a' (ID: 261)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.35164451599121094
    2. '#' → logprob: -2.101644515991211
    3. 'possible' → logprob: -2.351644515991211
    4. 'tr' → logprob: -3.476644515991211
    5. '```' → logprob: -5.101644515991211
    6. 'successful' → logprob: -5.226644515991211
    7. ' est' → logprob: -5.351644515991211
    8. 'ex' → logprob: -5.351644515991211
    9. 'found' → logprob: -5.351644515991211
    10. 'exist' → logprob: -5.601644515991211

Token 997: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.01618627831339836
    2. ' été' → logprob: -4.141186237335205
    3. '#' → logprob: -10.016186714172363
    4. 'ét' → logprob: -10.141186714172363
    5. 'êt' → logprob: -10.766186714172363
    6. 'étés' → logprob: -12.016186714172363
    7. 'é' → logprob: -12.016186714172363
    8. 'être' → logprob: -12.016186714172363
    9. 'éta' → logprob: -12.391186714172363
    10. '```' → logprob: -12.516186714172363

Token 998: ' trouv' (ID: 40254)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.01974099688231945
    2. 'found' → logprob: -4.019741058349609
    3. ' trouv' → logprob: -6.519741058349609
    4. ' trouvé' → logprob: -10.14474105834961
    5. '```' → logprob: -10.51974105834961
    6. ' found' → logprob: -11.14474105834961
    7. 'Trou' → logprob: -11.89474105834961
    8. 'find' → logprob: -12.14474105834961
    9. 'import' → logprob: -12.14474105834961
    10. '   ' → logprob: -12.64474105834961

Token 999: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20823098719120026
    2. 'é' → logprob: -2.333230972290039
    3. 'ée' → logprob: -2.708230972290039
    4. 'e' → logprob: -3.833230972290039
    5. 'ie' → logprob: -7.083230972290039
    6. 'ue' → logprob: -7.583230972290039
    7. '}' → logprob: -7.708230972290039
    8. '#' → logprob: -8.958230972290039
    9. 'u' → logprob: -9.208230972290039
    10. 'ee' → logprob: -9.208230972290039

Token 1000: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007513784803450108
    2. '())' → logprob: -7.250751495361328
    3. '()' → logprob: -10.875751495361328
    4. ' )' → logprob: -11.250751495361328
    5. ')
' → logprob: -13.250751495361328
    6. '))' → logprob: -13.500751495361328
    7. '")' → logprob: -14.000751495361328
    8. '<|end|>' → logprob: -14.000751495361328
    9. '```' → logprob: -14.125751495361328
    10. ')return' → logprob: -14.250751495361328

Token 1001: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1002: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1003: ' Si' (ID: 7832)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.025840140879154205
    2. 'pass' → logprob: -4.0258402824401855
    3. 'print' → logprob: -5.4008402824401855
    4. '```' → logprob: -6.5258402824401855
    5. '#' → logprob: -7.2758402824401855
    6. 'else' → logprob: -7.4008402824401855
    7. ' continue' → logprob: -9.275839805603027
    8. '   ' → logprob: -9.650839805603027
    9. '	continue' → logprob: -10.025839805603027
    10. 'Continue' → logprob: -10.275839805603027

Token 1004: ' le' (ID: 505)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.3175725042819977
    2. 'add' → logprob: -1.3175724744796753
    3. ' minus' → logprob: -6.942572593688965
    4. ' add' → logprob: -6.942572593688965
    5. 'min' → logprob: -7.192572593688965
    6. 's' → logprob: -7.317572593688965
    7. 'plus' → logprob: -7.942572593688965
    8. 'd' → logprob: -8.192572593688965
    9. 'K' → logprob: -9.067572593688965
    10. 'not' → logprob: -10.192572593688965

Token 1005: ' total' (ID: 3609)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.2587431073188782
    2. 'add' → logprob: -1.5087430477142334
    3. 's' → logprob: -6.2587432861328125
    4. 'd' → logprob: -6.3837432861328125
    5. 'K' → logprob: -6.7587432861328125
    6. 'min' → logprob: -6.8837432861328125
    7. 'plus' → logprob: -7.7587432861328125
    8. 'a' → logprob: -9.383743286132812
    9. 'abs' → logprob: -9.383743286132812
    10. 'i' → logprob: -9.633743286132812

Token 1006: ' à' (ID: 1221)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.319026917219162
    2. '>' → logprob: -1.5690269470214844
    3. '==' → logprob: -3.9440269470214844
    4. '+' → logprob: -4.444026947021484
    5. '<=' → logprob: -4.444026947021484
    6. '   ' → logprob: -4.819026947021484
    7. 'add' → logprob: -5.569026947021484
    8. ' <' → logprob: -6.069026947021484
    9. 'minus' → logprob: -6.569026947021484
    10. '>=' → logprob: -6.694026947021484

Token 1007: ' retirer' (ID: 136490)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.5265946388244629
    2. 'ret' → logprob: -1.401594638824463
    3. 'aj' → logprob: -2.276594638824463
    4. 'minus' → logprob: -3.276594638824463
    5. 'remove' → logprob: -4.151594638824463
    6. 'plus' → logprob: -5.401594638824463
    7. 'moins' → logprob: -7.526594638824463
    8. 'min' → logprob: -7.901594638824463
    9. ' retirer' → logprob: -7.901594638824463
    10. '>' → logprob: -8.776594161987305

Token 1008: ' dépasse' (ID: 165701)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0052954270504415035
    2. '<' → logprob: -5.380295276641846
    3. ' >' → logprob: -7.755295276641846
    4. '>=' → logprob: -9.630295753479004
    5. '!=' → logprob: -9.630295753479004
    6. '==' → logprob: -10.130295753479004
    7. '<=' → logprob: -10.380295753479004
    8. '+' → logprob: -11.255295753479004
    9. '>#' → logprob: -11.755295753479004
    10. ' <' → logprob: -12.255295753479004

Token 1009: ' le' (ID: 505)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.022691501304507256
    2. 'l' → logprob: -4.39769172668457
    3. ' add' → logprob: -4.77269172668457
    4. 'le' → logprob: -6.77269172668457
    5. '   ' → logprob: -8.52269172668457
    6. ' l' → logprob: -9.52269172668457
    7. ' le' → logprob: -9.89769172668457
    8. ' ' → logprob: -9.89769172668457
    9. '=' → logprob: -10.64769172668457
    10. '	add' → logprob: -10.64769172668457

Token 1010: ' total' (ID: 3609)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.003301650984212756
    2. 'K' → logprob: -5.753301620483398
    3. 'total' → logprob: -9.253301620483398
    4. ' add' → logprob: -10.753301620483398
    5. 'aj' → logprob: -13.378301620483398
    6. ' K' → logprob: -13.628301620483398
    7. 'k' → logprob: -14.253301620483398
    8. 'd' → logprob: -14.378301620483398
    9. '   ' → logprob: -14.628301620483398
    10. '#' → logprob: -15.253301620483398

Token 1011: ' à' (ID: 1221)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.007384424563497305
    2. ':' → logprob: -5.632384300231934
    3. ' >' → logprob: -6.507384300231934
    4. '<' → logprob: -7.382384300231934
    5. '>:' → logprob: -7.882384300231934
    6. 'add' → logprob: -8.132384300231934
    7. 'and' → logprob: -8.382384300231934
    8. '   ' → logprob: -8.882384300231934
    9. '==' → logprob: -9.007384300231934
    10. '+' → logprob: -9.632384300231934

Token 1012: ' ajouter' (ID: 78457)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3869079351425171
    2. 'aj' → logprob: -1.136907935142517
    3. ' ajouter' → logprob: -10.761907577514648
    4. 'Ajouter' → logprob: -12.511907577514648
    5. '```' → logprob: -12.886907577514648
    6. 'adde' → logprob: -13.386907577514648
    7. '   ' → logprob: -13.511907577514648
    8. ' ' → logprob: -13.636907577514648
    9. 'remove' → logprob: -14.011907577514648
    10. ' add' → logprob: -14.136907577514648

Token 1013: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.6979392766952515
    2. '>' → logprob: -1.0729392766952515
    3. 'and' → logprob: -2.072939395904541
    4. '   ' → logprob: -3.697939395904541
    5. ' and' → logprob: -5.197939395904541
    6. 'if' → logprob: -6.072939395904541
    7. 'else' → logprob: -7.447939395904541
    8. '       ' → logprob: -8.322938919067383
    9. '>=' → logprob: -8.572938919067383
    10. '<' → logprob: -9.072938919067383

Token 1014: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1693018674850464
    2. '   ' → logprob: -2.919301986694336
    3. 'and' → logprob: -2.919301986694336
    4. ':' → logprob: -3.669301986694336
    5. 'else' → logprob: -4.044301986694336
    6. ' and' → logprob: -5.669301986694336
    7. 'if' → logprob: -6.794301986694336
    8. '>' → logprob: -9.669301986694336
    9. ':
' → logprob: -9.919301986694336
    10. ' elif' → logprob: -10.169301986694336

Token 1015: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.0016005600336939096
    2. 'if' → logprob: -7.251600742340088
    3. 'else' → logprob: -7.501600742340088
    4. '   ' → logprob: -8.00160026550293
    5. ' elif' → logprob: -12.75160026550293
    6. 'elseif' → logprob: -16.87660026550293
    7. 'elsif' → logprob: -18.37660026550293
    8. '#' → logprob: -18.75160026550293
    9. 'el' → logprob: -18.87660026550293
    10. '	elif' → logprob: -19.00160026550293

Token 1016: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.08953988552093506
    2. ' minus' → logprob: -2.4645400047302246
    3. 'add' → logprob: -7.839540004730225
    4. ' add' → logprob: -8.714539527893066
    5. '   ' → logprob: -10.964539527893066
    6. 'min' → logprob: -11.714539527893066
    7. ' ' → logprob: -11.964539527893066
    8. 'plus' → logprob: -12.089539527893066
    9. ' plus' → logprob: -13.464539527893066
    10. '  ' → logprob: -14.089539527893066

Token 1017: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.023252815008163452
    2. ' >' → logprob: -3.7732527256011963
    3. '<' → logprob: -12.398252487182617
    4. '   ' → logprob: -14.023252487182617
    5. ' ' → logprob: -14.773252487182617
    6. '>d' → logprob: -14.773252487182617
    7. '>b' → logprob: -15.148252487182617
    8. ' ' → logprob: -15.523252487182617
    9. '">' → logprob: -15.648252487182617
    10. '>
' → logprob: -15.773252487182617

Token 1018: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.0008051026379689574
    2. ' add' → logprob: -7.125804901123047
    3. ' ' → logprob: -15.375804901123047
    4. '=' → logprob: -15.625804901123047
    5. '	add' → logprob: -16.500804901123047
    6. '   ' → logprob: -16.625804901123047
    7. '  ' → logprob: -17.125804901123047
    8. '0' → logprob: -17.500804901123047
    9. '(add' → logprob: -17.625804901123047
    10. '>' → logprob: -18.875804901123047

Token 1019: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5775704383850098
    2. ':
' → logprob: -0.8275704383850098
    3. ' and' → logprob: -6.57757043838501
    4. 'and' → logprob: -9.077569961547852
    5. '   ' → logprob: -9.577569961547852
    6. '       ' → logprob: -10.577569961547852
    7. ':

' → logprob: -12.077569961547852
    8. '==' → logprob: -12.077569961547852
    9. ':
' → logprob: -12.327569961547852
    10. ',' → logprob: -12.702569961547852

Token 1020: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10008544474840164
    2. '   ' → logprob: -2.850085496902466
    3. 'A' → logprob: -4.475085258483887
    4. '```' → logprob: -4.725085258483887
    5. ':
' → logprob: -5.725085258483887
    6. '#' → logprob: -5.725085258483887
    7. 'diff' → logprob: -6.475085258483887
    8. 'if' → logprob: -6.475085258483887
    9. ':' → logprob: -6.600085258483887
    10. '``' → logprob: -7.350085258483887

Token 1021: ' #' (ID: 1069)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.33482638001441956
    2. '   ' → logprob: -2.0848264694213867
    3. 'continue' → logprob: -2.7098264694213867
    4. 'for' → logprob: -3.3348264694213867
    5. 'if' → logprob: -4.084826469421387
    6. 'minus' → logprob: -4.709826469421387
    7. '#' (adapté à ' #') → logprob: -4.959826469421387
    8. 'while' → logprob: -5.334826469421387
    9. '       ' → logprob: -5.584826469421387
    10. 'diff' → logprob: -6.084826469421387

Token 1022: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9918148517608643
    2. 'continue' → logprob: -1.6168148517608643
    3. 'A' → logprob: -2.3668148517608643
    4. 'diff' → logprob: -2.3668148517608643
    5. '#' → logprob: -2.9918148517608643
    6. 'for' → logprob: -3.2418148517608643
    7. 'd' → logprob: -3.7418148517608643
    8. 'x' → logprob: -4.241814613342285
    9. 'c' → logprob: -4.491814613342285
    10. 'C' → logprob: -4.866814613342285

Token 1023: ' dé' (ID: 2393)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21954885125160217
    2. 'for' → logprob: -2.7195489406585693
    3. 'import' → logprob: -3.2195489406585693
    4. '#' → logprob: -3.3445489406585693
    5. 'continue' → logprob: -3.5945489406585693
    6. '           ' → logprob: -5.09454870223999
    7. '   ' → logprob: -5.34454870223999
    8. 'diff' → logprob: -6.21954870223999
    9. 'len' → logprob: -6.59454870223999
    10. 'i' → logprob: -6.71954870223999

Token 1024: 'term' (ID: 8044)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5593421459197998
    2. 'c' → logprob: -2.4343421459198
    3. 'cre' → logprob: -2.5593421459198
    4. 'crement' → logprob: -2.8093421459198
    5. 'crease' → logprob: -2.9343421459198
    6. 'cal' → logprob: -3.3093421459198
    7. 'continue' → logprob: -3.3093421459198
    8. 'comp' → logprob: -4.184342384338379
    9. 'cr' → logprob: -4.934342384338379
    10. 'clare' → logprob: -5.184342384338379

Token 1025: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00025919382460415363
    2. 'mine' → logprob: -8.750259399414062
    3. '```' → logprob: -10.500259399414062
    4. 'rine' → logprob: -10.625259399414062
    5. 'ines' → logprob: -11.125259399414062
    6. 're' → logprob: -11.250259399414062
    7. 'ure' → logprob: -12.625259399414062
    8. '#' → logprob: -12.750259399414062
    9. '``' → logprob: -13.250259399414062
    10. 'line' → logprob: -13.250259399414062

Token 1026: ' combien' (ID: 106648)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.4034066200256348
    2. 'diff' → logprob: -1.7784066200256348
    3. 'if' → logprob: -1.9034066200256348
    4. 'len' → logprob: -2.7784066200256348
    5. 'l' → logprob: -3.0284066200256348
    6. 'm' → logprob: -3.1534066200256348
    7. 'need' → logprob: -3.2784066200256348
    8. 'c' → logprob: -3.5284066200256348
    9. 'x' → logprob: -3.9034066200256348
    10. 'sum' → logprob: -4.278406620025635

Token 1027: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5062835812568665
    2. 'd' → logprob: -2.1312835216522217
    3. 'diff' → logprob: -2.2562835216522217
    4. 'x' → logprob: -3.2562835216522217
    5. 'rest' → logprob: -3.6312835216522217
    6. 't' → logprob: -4.756283760070801
    7. 'to' → logprob: -4.756283760070801
    8. 'r' → logprob: -4.881283760070801
    9. 'need' → logprob: -5.131283760070801
    10. 'c' → logprob: -5.131283760070801

Token 1028: ''' (ID: 6)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.6597073078155518
    2. 'extra' → logprob: -3.0347073078155518
    3. 'i' → logprob: -3.1597073078155518
    4. 'minus' → logprob: -3.1597073078155518
    5. 'sup' → logprob: -3.2847073078155518
    6. 'A' → logprob: -3.6597073078155518
    7. 'ret' → logprob: -3.7847073078155518
    8. 'a' → logprob: -3.9097073078155518
    9. 'ex' → logprob: -4.034707069396973
    10. 'ec' → logprob: -4.284707069396973

Token 1029: 'élé' (ID: 15228)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -1.4632720947265625
    2. 'x' → logprob: -1.7132720947265625
    3. 'm' → logprob: -2.5882720947265625
    4. 'A' → logprob: -2.7132720947265625
    5. 'need' → logprob: -2.7132720947265625
    6. 'val' → logprob: -3.0882720947265625
    7. 'i' → logprob: -3.3382720947265625
    8. 'remove' → logprob: -3.7132720947265625
    9. 'c' → logprob: -3.8382720947265625
    10. 'a' → logprob: -3.8382720947265625

Token 1030: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.7484890222549438
    2. 'ents' → logprob: -0.8734890222549438
    3. 'elements' → logprob: -4.123488903045654
    4. 'ots' → logprob: -4.248488903045654
    5. 'ements' → logprob: -4.373488903045654
    6. 't' → logprob: -5.123488903045654
    7. '#' → logprob: -5.248488903045654
    8. 'rem' → logprob: -5.248488903045654
    9. 'nts' → logprob: -5.248488903045654
    10. 'éments' → logprob: -5.248488903045654

Token 1031: ' parmi' (ID: 51713)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.153114914894104
    2. '   ' → logprob: -1.653114914894104
    3. 'à' → logprob: -2.0281147956848145
    4. 'd' → logprob: -2.6531147956848145
    5. 'de' → logprob: -2.7781147956848145
    6. ' à' → logprob: -2.9031147956848145
    7. 'il' → logprob: -3.6531147956848145
    8. ' de' → logprob: -3.7781147956848145
    9. ' il' → logprob: -4.0281147956848145
    10. 's' → logprob: -4.1531147956848145

Token 1032: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.0017347980756312609
    2. 'B' → logprob: -7.126734733581543
    3. ' A' → logprob: -7.126734733581543
    4. 'la' → logprob: -10.126734733581543
    5. 'l' → logprob: -10.501734733581543
    6. 'len' → logprob: -10.751734733581543
    7. '#' → logprob: -11.876734733581543
    8. 'les' → logprob: -12.251734733581543
    9. 'minus' → logprob: -12.501734733581543
    10. '   ' → logprob: -12.626734733581543

Token 1033: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04302019998431206
    2. 'B' → logprob: -3.168020248413086
    3. ' A' → logprob: -11.168020248413086
    4. 'add' → logprob: -13.168020248413086
    5. 'minus' → logprob: -13.293020248413086
    6. ' B' → logprob: -13.918020248413086
    7. 'a' → logprob: -15.168020248413086
    8. '(A' → logprob: -15.605520248413086
    9. 'plus' → logprob: -15.980520248413086
    10. 'len' → logprob: -16.105520248413086

Token 1034: ' grands' (ID: 43085)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.26226967573165894
    2. 'pet' → logprob: -1.5122697353363037
    3. 'import' → logprob: -5.012269496917725
    4. 'grand' → logprob: -5.762269496917725
    5. 'g' → logprob: -8.387269973754883
    6. '#' → logprob: -10.137269973754883
    7. ' petits' → logprob: -10.512269973754883
    8. 'élé' → logprob: -10.637269973754883
    9. 'larg' → logprob: -10.637269973754883
    10. 'gross' → logprob: -10.637269973754883

Token 1035: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.09122137725353241
    2. ' A' → logprob: -3.341221332550049
    3. ' de' → logprob: -4.216221332550049
    4. 'de' → logprob: -4.591221332550049
    5. '(A' → logprob: -4.841221332550049
    6. ' à' → logprob: -5.841221332550049
    7. '#' → logprob: -5.966221332550049
    8. 'd' → logprob: -6.091221332550049
    9. 'to' → logprob: -6.716221332550049
    10. '   ' → logprob: -6.841221332550049

Token 1036: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.06221393123269081
    2. 'B' → logprob: -2.812213897705078
    3. ' A' → logprob: -8.437213897705078
    4. ' B' → logprob: -10.812213897705078
    5. '(A' → logprob: -13.687213897705078
    6. 'a' → logprob: -13.874713897705078
    7. 'l' → logprob: -14.062213897705078
    8. '   ' → logprob: -14.249713897705078
    9. '```' → logprob: -14.312213897705078
    10. '(B' → logprob: -14.437213897705078

Token 1037: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9987573027610779
    2. '   ' → logprob: -1.9987573623657227
    3. ' =' → logprob: -2.1237573623657227
    4. ' >' → logprob: -2.1237573623657227
    5. '>' → logprob: -2.2487573623657227
    6. '>=' → logprob: -3.4987573623657227
    7. '       ' → logprob: -4.248757362365723
    8. ':' → logprob: -4.248757362365723
    9. '=len' → logprob: -4.373757362365723
    10. '-=' → logprob: -4.623757362365723

Token 1038: ' peut' (ID: 9216)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1399664580821991
    2. ' for' → logprob: -3.1399664878845215
    3. '#' → logprob: -4.3899664878845215
    4. 'moins' → logprob: -5.1399664878845215
    5. ' can' → logprob: -5.2649664878845215
    6. '=' → logprob: -5.2649664878845215
    7. ' must' → logprob: -5.2649664878845215
    8. '   ' → logprob: -5.2649664878845215
    9. 'can' → logprob: -5.6399664878845215
    10. 'len' → logprob: -5.7649664878845215

Token 1039: ' ign' (ID: 8769)
  Prédit: ' retirer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retirer' → logprob: -0.6928735971450806
    2. 'remove' → logprob: -1.5678735971450806
    3. 'min' → logprob: -2.817873477935791
    4. 'sum' → logprob: -3.317873477935791
    5. 'ret' → logprob: -3.442873477935791
    6. 'minus' → logprob: -3.692873477935791
    7. 'sup' → logprob: -3.817873477935791
    8. ' enlever' → logprob: -3.942873477935791
    9. 'len' → logprob: -4.567873477935791
    10. 'A' → logprob: -4.692873477935791

Token 1040: 'orer' (ID: 13634)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.10315399616956711
    2. 'iter' → logprob: -3.228153944015503
    3. 'orer' → logprob: -3.478153944015503
    4. 'iner' → logprob: -3.978153944015503
    5. 'érer' → logprob: -5.978154182434082
    6. 'ex' → logprob: -6.228154182434082
    7. 'ter' → logprob: -7.478154182434082
    8. 'ire' → logprob: -7.853154182434082
    9. 'rer' → logprob: -7.853154182434082
    10. 'ignore' → logprob: -8.103154182434082

Token 1041: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34774431586265564
    2. ' =' → logprob: -1.722744345664978
    3. '       ' → logprob: -2.3477442264556885
    4. '=A' → logprob: -4.722744464874268
    5. '=len' → logprob: -5.722744464874268
    6. ':' → logprob: -6.347744464874268
    7. '   ' → logprob: -7.097744464874268
    8. ':
' → logprob: -7.472744464874268
    9. ',' → logprob: -7.722744464874268
    10. ' for' → logprob: -7.972744464874268

Token 1042: ' "' (ID: 392)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.24573887884616852
    2. ' minus' → logprob: -2.495738983154297
    3. 'abs' → logprob: -2.870738983154297
    4. 'min' → logprob: -3.245738983154297
    5. 'd' → logprob: -4.620738983154297
    6. 'diff' → logprob: -4.745738983154297
    7. 'remove' → logprob: -5.620738983154297
    8. '(min' → logprob: -5.870738983154297
    9. ' abs' → logprob: -6.745738983154297
    10. 'for' → logprob: -6.870738983154297

Token 1043: 'équ' (ID: 99214)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.06346024572849274
    2. ' minus' → logprob: -3.688460350036621
    3. 'moins' → logprob: -4.938460350036621
    4. 'a' → logprob: -4.938460350036621
    5. 'min' → logprob: -5.313460350036621
    6. 'sum' → logprob: -5.438460350036621
    7. 'remove' → logprob: -5.688460350036621
    8. 'd' → logprob: -6.438460350036621
    9. 'i' → logprob: -6.688460350036621
    10. 'A' → logprob: -6.688460350036621

Token 1044: 'ilibr' (ID: 43344)
  Prédit: 'ilibr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ilibr' → logprob: -0.05206364393234253
    2. 'l' → logprob: -3.3020637035369873
    3. '```' → logprob: -5.927063465118408
    4. 'arr' → logprob: -6.177063465118408
    5. 'a' → logprob: -7.177063465118408
    6. 'v' → logprob: -7.427063465118408
    7. 'orer' → logprob: -7.427063465118408
    8. 'lim' → logprob: -7.427063465118408
    9. 'ival' → logprob: -7.427063465118408
    10. 'i' → logprob: -7.427063465118408

Token 1045: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -3.953082341467962e-05
    2. 'iser' → logprob: -10.750039100646973
    3. 'e' → logprob: -12.250039100646973
    4. 'ner' → logprob: -12.625039100646973
    5. 'ier' → logprob: -12.750039100646973
    6. 'rer' → logprob: -13.250039100646973
    7. '       ' → logprob: -13.625039100646973
    8. '   ' → logprob: -13.625039100646973
    9. 'iner' → logprob: -14.125039100646973
    10. '#' → logprob: -14.875039100646973

Token 1046: ' les' (ID: 1341)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.21501624584198
    2. '   ' → logprob: -1.46501624584198
    3. 'le' → logprob: -2.3400163650512695
    4. '-' → logprob: -2.3400163650512695
    5. 'A' → logprob: -2.5900163650512695
    6. 'range' → logprob: -3.4650163650512695
    7. ' -' → logprob: -3.9650163650512695
    8. '-les' → logprob: -4.0900163650512695
    9. ' le' → logprob: -4.2150163650512695
    10. '#' → logprob: -4.5900163650512695

Token 1047: ' deux' (ID: 10301)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.1458905935287476
    2. 'minus' → logprob: -1.1458905935287476
    3. 'moins' → logprob: -2.645890712738037
    4. 'val' → logprob: -2.895890712738037
    5. 'diff' → logprob: -3.270890712738037
    6. 'aj' → logprob: -3.645890712738037
    7. 'add' → logprob: -3.895890712738037
    8. 'plus' → logprob: -3.895890712738037
    9. 'élé' → logprob: -4.395890712738037
    10. 'remove' → logprob: -4.395890712738037

Token 1048: ' côtés' (ID: 103239)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.9327154755592346
    2. '=' → logprob: -1.0577154159545898
    3. '   ' → logprob: -2.80771541595459
    4. '+=' → logprob: -3.05771541595459
    5. '):
' → logprob: -3.68271541595459
    6. '=A' → logprob: -3.93271541595459
    7. ' A' → logprob: -4.18271541595459
    8. ' =' → logprob: -4.30771541595459
    9. ' +=' → logprob: -4.68271541595459
    10. ':' → logprob: -4.80771541595459

Token 1049: '"
' (ID: 1092)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.36339572072029114
    2. '       ' → logprob: -2.6133956909179688
    3. '":' → logprob: -2.9883956909179688
    4. '   ' → logprob: -3.1133956909179688
    5. '[::-' → logprob: -3.2383956909179688
    6. ':
' → logprob: -3.7383956909179688
    7. ',' → logprob: -4.613395690917969
    8. '[:' → logprob: -4.613395690917969
    9. '[' → logprob: -4.738395690917969
    10. '"' → logprob: -4.988395690917969

Token 1050: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15747064352035522
    2. '   ' → logprob: -2.532470703125
    3. ':
' → logprob: -3.657470703125
    4. '=' → logprob: -3.782470703125
    5. '       ' → logprob: -5.907470703125
    6. ' =' → logprob: -5.907470703125
    7. ' :' → logprob: -6.532470703125
    8. 'A' → logprob: -6.657470703125
    9. ',' → logprob: -6.782470703125
    10. '[:' → logprob: -6.782470703125

Token 1051: ' q' (ID: 2335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1472272872924805
    2. 'for' → logprob: -2.0222272872924805
    3. 'cnt' → logprob: -2.3972272872924805
    4. 'c' → logprob: -2.6472272872924805
    5. 'x' → logprob: -2.6472272872924805
    6. 'diff' → logprob: -3.0222272872924805
    7. 'count' → logprob: -3.1472272872924805
    8. '       ' → logprob: -3.3972272872924805
    9. 'idx' → logprob: -3.7722272872924805
    10. 'r' → logprob: -4.0222272872924805

Token 1052: '=(' (ID: 9893)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7033389806747437
    2. '=len' → logprob: -0.7033389806747437
    3. ' =' → logprob: -5.203339099884033
    4. '=A' → logprob: -6.078339099884033
    5. '=min' → logprob: -7.078339099884033
    6. '=q' → logprob: -7.453339099884033
    7. '=sum' → logprob: -7.453339099884033
    8. '=(' → logprob: -8.328338623046875
    9. '=max' → logprob: -9.953338623046875
    10. '=a' → logprob: -11.578338623046875

Token 1053: 'minus' (ID: 80991)
  Prédit: 'minus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.0025974188465625048
    2. ' minus' → logprob: -6.127597332000732
    3. 'len' → logprob: -8.75259780883789
    4. 'min' → logprob: -9.37759780883789
    5. 'abs' → logprob: -10.00259780883789
    6. 'sum' → logprob: -10.25259780883789
    7. 'plus' → logprob: -11.25259780883789
    8. 'add' → logprob: -11.37759780883789
    9. '   ' → logprob: -11.50259780883789
    10. '-minus' → logprob: -11.87759780883789

Token 1054: '-add' (ID: 40367)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6386153101921082
    2. '-add' → logprob: -1.138615369796753
    3. '-' → logprob: -1.888615369796753
    4. '-remove' → logprob: -8.888615608215332
    5. '-ex' → logprob: -9.388615608215332
    6. '-b' → logprob: -10.013615608215332
    7. '-minus' → logprob: -10.888615608215332
    8. '-q' → logprob: -10.888615608215332
    9. '-B' → logprob: -11.013615608215332
    10. '-min' → logprob: -11.638615608215332

Token 1055: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.008023456670343876
    2. '+' → logprob: -5.008023262023926
    3. ')' → logprob: -6.883023262023926
    4. ')+' → logprob: -9.258023262023926
    5. ')>>' → logprob: -9.508023262023926
    6. ')#' → logprob: -10.383023262023926
    7. ' )' → logprob: -10.633023262023926
    8. ')/' → logprob: -11.258023262023926
    9. '+(' → logprob: -11.383023262023926
    10. ' +' → logprob: -11.508023262023926

Token 1056: 's' (ID: 82)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.05523519590497017
    2. 's' → logprob: -2.9302351474761963
    3. 'len' → logprob: -8.430234909057617
    4. 'min' → logprob: -9.680234909057617
    5. ' ' → logprob: -11.180234909057617
    6. '1' → logprob: -11.555234909057617
    7. 'A' → logprob: -11.930234909057617
    8. ' s' → logprob: -11.930234909057617
    9. 'q' → logprob: -12.180234909057617
    10. '   ' → logprob: -12.555234909057617

Token 1057: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018446890637278557
    2. 'for' → logprob: -4.393446922302246
    3. '   ' → logprob: -6.268446922302246
    4. ' for' → logprob: -6.393446922302246
    5. 'while' → logprob: -7.143446922302246
    6. '
' → logprob: -7.518446922302246
    7. 'A' → logprob: -8.143446922302246
    8. '+' → logprob: -8.768446922302246
    9. ',' → logprob: -9.018446922302246
    10. '#' → logprob: -9.018446922302246

Token 1058: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11372441798448563
    2. '+' → logprob: -2.73872447013855
    3. 'for' → logprob: -4.113724231719971
    4. '
' → logprob: -4.363724231719971
    5. 'if' → logprob: -5.238724231719971
    6. '#' (adapté à ' #') → logprob: -5.863724231719971
    7. '   ' → logprob: -6.863724231719971
    8. '*' → logprob: -7.238724231719971
    9. 'while' → logprob: -7.238724231719971
    10. 'idx' → logprob: -7.363724231719971

Token 1059: ' La' (ID: 3038)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027559367939829826
    2. 'q' → logprob: -4.777559280395508
    3. 'while' → logprob: -5.277559280395508
    4. 'A' → logprob: -5.402559280395508
    5. '   ' → logprob: -6.152559280395508
    6. ' for' → logprob: -6.277559280395508
    7. 'continue' → logprob: -6.902559280395508
    8. 'i' → logprob: -6.902559280395508
    9. 'cnt' → logprob: -7.402559280395508
    10. 'len' → logprob: -7.902559280395508

Token 1060: ' différence' (ID: 79196)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.06774222105741501
    2. 'len' → logprob: -2.817742109298706
    3. ' q' → logprob: -5.942742347717285
    4. 'min' → logprob: -6.692742347717285
    5. 'max' → logprob: -7.442742347717285
    6. '(len' → logprob: -7.692742347717285
    7. '(q' → logprob: -8.317742347717285
    8. ' len' → logprob: -8.817742347717285
    9. '#' → logprob: -9.317742347717285
    10. ' (' → logprob: -9.567742347717285

Token 1061: ' divis' (ID: 37826)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1062: 'ée' (ID: 2894)
  Prédit: 'isé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isé' → logprob: -0.4383966326713562
    2. 's' → logprob: -2.438396692276001
    3. 'ise' → logprob: -2.938396692276001
    4. 'ée' → logprob: -3.063396692276001
    5. 'isée' → logprob: -3.563396692276001
    6. 'é' → logprob: -3.688396692276001
    7. 'q' → logprob: -4.188396453857422
    8. 'e' → logprob: -4.188396453857422
    9. '(q' → logprob: -4.438396453857422
    10. '((' → logprob: -4.438396453857422

Token 1063: ' par' (ID: 686)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.406808853149414
    2. '+' → logprob: -1.656808853149414
    3. ')' → logprob: -1.781808853149414
    4. 's' → logprob: -3.031808853149414
    5. '<|end|>' → logprob: -3.031808853149414
    6. '(q' → logprob: -3.156808853149414
    7. '   ' → logprob: -3.156808853149414
    8. '=' → logprob: -3.406808853149414
    9. ' by' → logprob: -3.531808853149414
    10. ',' → logprob: -3.781808853149414

Token 1064: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.157039049663581e-05
    2. ' s' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.000051498413086
    4. '1' → logprob: -18.375051498413086
    5. ' ' → logprob: -18.750051498413086
    6. '  ' → logprob: -19.125051498413086
    7. '2' → logprob: -20.125051498413086
    8. '
' → logprob: -20.625051498413086
    9. '	s' → logprob: -21.250051498413086
    10. '(s' → logprob: -21.500051498413086

Token 1065: ' donne' (ID: 30004)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009532637195661664
    2. '   ' → logprob: -7.500953197479248
    3. ' for' → logprob: -8.625953674316406
    4. 'for' → logprob: -8.625953674316406
    5. '
' → logprob: -11.875953674316406
    6. '#' → logprob: -12.000953674316406
    7. 'while' → logprob: -12.125953674316406
    8. '+' → logprob: -12.375953674316406
    9. ',' → logprob: -12.375953674316406
    10. '<|end|>' → logprob: -13.125953674316406

Token 1066: ' combien' (ID: 106648)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.2968781888484955
    2. '(q' → logprob: -1.5468782186508179
    3. '(len' → logprob: -3.5468780994415283
    4. ' (' → logprob: -4.671878337860107
    5. 'len' → logprob: -5.796878337860107
    6. ' q' → logprob: -6.046878337860107
    7. '((' → logprob: -8.54687786102295
    8. ' len' → logprob: -8.92187786102295
    9. '(' → logprob: -10.54687786102295
    10. ' ' → logprob: -12.29687786102295

Token 1067: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.003359079360962
    2. 'de' → logprob: -1.128359079360962
    3. '(len' → logprob: -2.128359079360962
    4. '(q' → logprob: -2.753359079360962
    5. 'd' → logprob: -3.128359079360962
    6. ' d' → logprob: -3.503359079360962
    7. '   ' → logprob: -4.128358840942383
    8. 'len' → logprob: -4.503358840942383
    9. '(d' → logprob: -5.503358840942383
    10. '=len' → logprob: -6.003358840942383

Token 1068: ''' (ID: 6)
  Prédit: ' elements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' elements' → logprob: -1.6125508546829224
    2. ' éléments' → logprob: -1.6125508546829224
    3. 'q' → logprob: -1.8625508546829224
    4. ' q' → logprob: -1.9875508546829224
    5. 'elements' → logprob: -2.487550735473633
    6. 'A' → logprob: -2.862550735473633
    7. 'élé' → logprob: -2.987550735473633
    8. ' s' → logprob: -3.737550735473633
    9. ' A' → logprob: -3.737550735473633
    10. 's' → logprob: -3.737550735473633

Token 1069: 'élé' (ID: 15228)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2622402906417847
    2. 's' → logprob: -1.2622402906417847
    3. 'q' → logprob: -1.6372402906417847
    4. ' s' → logprob: -2.512240409851074
    5. ' A' → logprob: -3.387240409851074
    6. ' elements' → logprob: -3.512240409851074
    7. ' q' → logprob: -3.762240409851074
    8. 'a' → logprob: -3.762240409851074
    9. 'elements' → logprob: -4.137240409851074
    10. '(A' → logprob: -4.887240409851074

Token 1070: 'ments' (ID: 1626)
  Prédit: 'ments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ments' → logprob: -0.006338268518447876
    2. 'ents' → logprob: -5.256338119506836
    3. 'nts' → logprob: -7.881338119506836
    4. 'm' → logprob: -8.006338119506836
    5. 'éments' → logprob: -9.381338119506836
    6. 'ment' → logprob: -9.506338119506836
    7. 'ts' → logprob: -9.756338119506836
    8. 'ements' → logprob: -10.006338119506836
    9. '(' → logprob: -10.256338119506836
    10. 's' → logprob: -10.506338119506836

Token 1071: ' on' (ID: 402)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2690128684043884
    2. '_to' → logprob: -1.7690129280090332
    3. ' =' → logprob: -4.394012928009033
    4. 'to' → logprob: -4.769012928009033
    5. '=A' → logprob: -4.894012928009033
    6. '+=' → logprob: -5.019012928009033
    7. '=len' → logprob: -5.144012928009033
    8. '_needed' → logprob: -5.269012928009033
    9. 'A' → logprob: -6.019012928009033
    10. '=max' → logprob: -6.019012928009033

Token 1072: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06052117049694061
    2. '=len' → logprob: -3.935521125793457
    3. '+=' → logprob: -4.935521125793457
    4. ' =' → logprob: -5.060521125793457
    5. ' peux' → logprob: -5.310521125793457
    6. ' peut' → logprob: -6.185521125793457
    7. ' can' → logprob: -6.810521125793457
    8. '#' → logprob: -6.935521125793457
    9. ' devra' → logprob: -7.060521125793457
    10. 's' → logprob: -7.060521125793457

Token 1073: ' ign' (ID: 8769)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5489436388015747
    2. 'len' → logprob: -1.6739436388015747
    3. 'remove' → logprob: -2.423943519592285
    4. 'ignore' → logprob: -2.798943519592285
    5. '(len' → logprob: -3.173943519592285
    6. 'pop' → logprob: -4.173943519592285
    7. 'discard' → logprob: -4.798943519592285
    8. '(q' → logprob: -5.423943519592285
    9. '((' → logprob: -6.548943519592285
    10. 'A' → logprob: -6.923943519592285

Token 1074: 'orer' (ID: 13634)
  Prédit: 'orer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orer' → logprob: -0.0007488752016797662
    2. 'ore' → logprob: -7.250749111175537
    3. 'or' → logprob: -11.000748634338379
    4. 'n' → logprob: -11.375748634338379
    5. 'érer' → logprob: -12.375748634338379
    6. 'orrer' → logprob: -13.125748634338379
    7. 'q' → logprob: -14.375748634338379
    8. 'orner' → logprob: -14.500748634338379
    9. 'oncer' → logprob: -14.625748634338379
    10. 'ignore' → logprob: -14.750748634338379

Token 1075: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010228188708424568
    2. 'A' → logprob: -5.635228157043457
    3. '
' → logprob: -5.760228157043457
    4. ' for' → logprob: -7.385228157043457
    5. '<|end|>' → logprob: -7.510228157043457
    6. '    
' → logprob: -7.635228157043457
    7. 'for' → logprob: -7.635228157043457
    8. '#' → logprob: -8.385228157043457
    9. 'while' → logprob: -9.135228157043457
    10. ')' → logprob: -9.260228157043457

Token 1076: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004551884718239307
    2. 'for' → logprob: -5.879551887512207
    3. 'A' → logprob: -6.504551887512207
    4. ' for' → logprob: -8.879551887512207
    5. '```' → logprob: -10.254551887512207
    6. '       ' → logprob: -10.629551887512207
    7. ',A' → logprob: -11.504551887512207
    8. '<|end|>' → logprob: -12.129551887512207
    9. '	for' → logprob: -12.254551887512207
    10. 'i' → logprob: -12.379551887512207

Token 1077: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6218482255935669
    2. 'A' → logprob: -0.8718482255935669
    3. 'if' → logprob: -3.7468481063842773
    4. '   ' → logprob: -3.9968481063842773
    5. ' for' → logprob: -6.246848106384277
    6. '#' (adapté à ' #') → logprob: -7.996848106384277
    7. 'while' → logprob: -8.246848106384277
    8. '```' → logprob: -9.121848106384277
    9. ' if' → logprob: -9.746848106384277
    10. '       ' → logprob: -9.871848106384277

Token 1078: ' On' (ID: 2160)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19849351048469543
    2. 'A' → logprob: -2.198493480682373
    3. 'for' → logprob: -2.823493480682373
    4. 'sum' → logprob: -5.198493480682373
    5. 'minus' → logprob: -6.448493480682373
    6. '   ' → logprob: -7.323493480682373
    7. 'd' → logprob: -7.698493480682373
    8. 'del' → logprob: -8.198493957519531
    9. 'while' → logprob: -8.323493957519531
    10. 'continue' → logprob: -8.823493957519531

Token 1079: ' somme' (ID: 64484)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12188731133937836
    2. 'if' → logprob: -2.62188720703125
    3. 'del' → logprob: -3.62188720703125
    4. 'q' → logprob: -5.24688720703125
    5. 'A' → logprob: -5.49688720703125
    6. 'sum' → logprob: -5.62188720703125
    7. 'minus' → logprob: -7.12188720703125
    8. 'remove' → logprob: -7.87188720703125
    9. '   ' → logprob: -8.24688720703125
    10. 'while' → logprob: -8.49688720703125

Token 1080: ' les' (ID: 1341)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6314932703971863
    2. '=sum' → logprob: -0.8814932703971863
    3. ' sum' → logprob: -3.381493330001831
    4. '(sum' → logprob: -4.881493091583252
    5. '=' → logprob: -5.256493091583252
    6. 'A' → logprob: -5.381493091583252
    7. ' =' → logprob: -7.631493091583252
    8. '   ' → logprob: -7.631493091583252
    9. '+=' → logprob: -7.756493091583252
    10. ',sum' → logprob: -8.38149356842041

Token 1081: ' plus' (ID: 2932)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -9.150362166110426e-05
    2. 'sorted' → logprob: -10.125091552734375
    3. ' A' → logprob: -10.625091552734375
    4. 'sum' → logprob: -11.250091552734375
    5. 'q' → logprob: -11.500091552734375
    6. 'a' → logprob: -14.000091552734375
    7. '[A' → logprob: -14.375091552734375
    8. '[' → logprob: -14.375091552734375
    9. '(sorted' → logprob: -14.375091552734375
    10. '-s' → logprob: -15.125091552734375

Token 1082: ' petits' (ID: 38141)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.6601676940917969
    2. 'q' → logprob: -0.7851676940917969
    3. 'grand' → logprob: -4.160167694091797
    4. 'pet' → logprob: -5.785167694091797
    5. ' grandes' → logprob: -6.035167694091797
    6. ' grands' → logprob: -6.785167694091797
    7. 'large' → logprob: -6.910167694091797
    8. 'A' → logprob: -7.035167694091797
    9. 'g' → logprob: -7.410167694091797
    10. 'import' → logprob: -7.535167694091797

Token 1083: ' éléments' (ID: 57375)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.11951103061437607
    2. 'A' → logprob: -2.369511127471924
    3. ' q' → logprob: -4.494511127471924
    4. '(q' → logprob: -5.494511127471924
    5. ' A' → logprob: -5.869511127471924
    6. '[q' → logprob: -7.494511127471924
    7. 'elements' → logprob: -9.244510650634766
    8. '(A' → logprob: -9.244510650634766
    9. 'de' → logprob: -9.619510650634766
    10. ' elements' → logprob: -10.369510650634766

Token 1084: ' de' (ID: 334)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3385273814201355
    2. '=A' → logprob: -1.7135274410247803
    3. '=' → logprob: -2.3385274410247803
    4. '(A' → logprob: -5.588527202606201
    5. 'of' → logprob: -6.088527202606201
    6. ' =' → logprob: -6.463527202606201
    7. 'in' → logprob: -7.463527202606201
    8. 'for' → logprob: -7.713527202606201
    9. '=B' → logprob: -7.963527202606201
    10. 'B' → logprob: -8.08852767944336

Token 1085: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -2.045823566731997e-05
    2. ' A' → logprob: -10.875020027160645
    3. 'B' → logprob: -13.500020027160645
    4. ' ' → logprob: -17.62502098083496
    5. '   ' → logprob: -18.62502098083496
    6. '	A' → logprob: -19.12502098083496
    7. '(A' → logprob: -19.37502098083496
    8. 'a' → logprob: -19.50002098083496
    9. '  ' → logprob: -20.12502098083496
    10. '[A' → logprob: -20.37502098083496

Token 1086: ' (' (ID: 350)
  Prédit: '=sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sum' → logprob: -0.29018399119377136
    2. '=' → logprob: -1.5401840209960938
    3. 'sum' → logprob: -3.7901840209960938
    4. ' =' → logprob: -4.415184020996094
    5. '[:' → logprob: -7.165184020996094
    6. 'd' → logprob: -7.915184020996094
    7. ',sum' → logprob: -8.040184020996094
    8. ' sum' → logprob: -8.290184020996094
    9. '+=' → logprob: -8.790184020996094
    10. '(sum' → logprob: -8.915184020996094

Token 1087: 'en' (ID: 262)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.00471611088141799
    2. ' sum' → logprob: -5.504715919494629
    3. '=sum' → logprob: -8.129715919494629
    4. 'q' → logprob: -8.379715919494629
    5. '(sum' → logprob: -10.504715919494629
    6. '
' → logprob: -10.504715919494629
    7. 'A' → logprob: -10.754715919494629
    8. '   ' → logprob: -11.129715919494629
    9. ')' → logprob: -11.504715919494629
    10. '       ' → logprob: -13.004715919494629

Token 1088: ' ignorant' (ID: 89043)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5141740441322327
    2. 'A' → logprob: -1.139173984527588
    3. 'q' → logprob: -2.764173984527588
    4. 'sum' → logprob: -4.514173984527588
    5. 's' → logprob: -5.889173984527588
    6. ' range' → logprob: -6.764173984527588
    7. '[q' → logprob: -7.014173984527588
    8. '[:' → logprob: -8.139174461364746
    9. 'acc' → logprob: -8.389174461364746
    10. ')' → logprob: -8.389174461364746

Token 1089: ' les' (ID: 1341)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.6151547431945801
    2. 'q' → logprob: -0.8651547431945801
    3. ' q' → logprob: -3.86515474319458
    4. ' A' → logprob: -4.24015474319458
    5. '[q' → logprob: -5.86515474319458
    6. '(q' → logprob: -8.865154266357422
    7. '[:' → logprob: -10.240154266357422
    8. ')' → logprob: -11.365154266357422
    9. '   ' → logprob: -11.615154266357422
    10. '[:-' → logprob: -11.865154266357422

Token 1090: ' plus' (ID: 2932)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.17537696659564972
    2. 'A' → logprob: -1.9253770112991333
    3. ' q' → logprob: -4.675376892089844
    4. ' A' → logprob: -5.925376892089844
    5. '[q' → logprob: -6.425376892089844
    6. '[:' → logprob: -7.550376892089844
    7. ':q' → logprob: -8.425376892089844
    8. 'range' → logprob: -8.550376892089844
    9. 's' → logprob: -9.050376892089844
    10. '
' → logprob: -9.675376892089844

Token 1091: ' grands' (ID: 43085)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.43630850315093994
    2. 'gr' → logprob: -1.06130850315094
    3. 'l' → logprob: -6.18630838394165
    4. 'grand' → logprob: -6.81130838394165
    5. 'g' → logprob: -6.93630838394165
    6. ' grands' → logprob: -7.18630838394165
    7. '[q' → logprob: -7.56130838394165
    8. 'larg' → logprob: -7.68630838394165
    9. 'large' → logprob: -7.81130838394165
    10. '(q' → logprob: -8.186308860778809

Token 1092: ' pour' (ID: 1930)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.4890478551387787
    2. ',q' → logprob: -2.1140477657318115
    3. ',' → logprob: -2.3640477657318115
    4. ')' → logprob: -2.6140477657318115
    5. '[q' → logprob: -2.9890477657318115
    6. '[:-' → logprob: -4.364048004150391
    7. '(q' → logprob: -4.489048004150391
    8. 'A' → logprob: -4.989048004150391
    9. ' ,' → logprob: -5.364048004150391
    10. 'q' → logprob: -5.739048004150391

Token 1093: ' équilibr' (ID: 163890)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.03379611298441887
    2. ' q' → logprob: -3.4087960720062256
    3. 'len' → logprob: -9.533796310424805
    4. '(q' → logprob: -10.658796310424805
    5. ' len' → logprob: -10.908796310424805
    6. ':q' → logprob: -12.033796310424805
    7. '	q' → logprob: -12.283796310424805
    8. '...' → logprob: -12.283796310424805
    9. '[q' → logprob: -12.408796310424805
    10. ')' → logprob: -12.908796310424805

Token 1094: 'age' (ID: 477)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.30549928545951843
    2. 'ant' → logprob: -1.5554993152618408
    3. 'q' → logprob: -3.805499315261841
    4. 'A' → logprob: -3.805499315261841
    5. 'ation' → logprob: -7.180499076843262
    6. 'sum' → logprob: -7.305499076843262
    7. 'a' → logprob: -7.305499076843262
    8. 'ent' → logprob: -7.680499076843262
    9. 'ais' → logprob: -7.680499076843262
    10. 'és' → logprob: -7.680499076843262

Token 1095: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2263866662979126
    2. '[:' → logprob: -1.2263866662979126
    3. '=sum' → logprob: -1.7263866662979126
    4. '=' → logprob: -2.351386547088623
    5. 'sum' → logprob: -3.226386547088623
    6. ')' → logprob: -4.101386547088623
    7. '(sum' → logprob: -4.226386547088623
    8. '[:-' → logprob: -4.351386547088623
    9. ' =' → logprob: -4.476386547088623
    10. '[q' → logprob: -4.976386547088623

Token 1096: '       ' (ID: 309)
  Prédit: '=sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sum' → logprob: -0.07049539685249329
    2. 'sum' → logprob: -2.820495367050171
    3. '=' → logprob: -5.19549560546875
    4. '+=' → logprob: -6.57049560546875
    5. ' =' → logprob: -7.82049560546875
    6. ' sum' → logprob: -8.32049560546875
    7. ',sum' → logprob: -8.32049560546875
    8. '(sum' → logprob: -8.57049560546875
    9. '   ' → logprob: -8.69549560546875
    10. ' +=' → logprob: -9.32049560546875

Token 1097: ' d' (ID: 272)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.7831223607063293
    2. 'd' (adapté à ' d') → logprob: -0.9081223607063293
    3. 'if' → logprob: -2.5331223011016846
    4. ' if' → logprob: -3.5331223011016846
    5. ' d' → logprob: -4.283122539520264
    6. ' sum' → logprob: -4.658122539520264
    7. '=sum' → logprob: -6.408122539520264
    8. '       ' → logprob: -6.658122539520264
    9. 'total' → logprob: -7.283122539520264
    10. '   ' → logprob: -7.658122539520264

Token 1098: '=sum' (ID: 174693)
  Prédit: '=sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sum' → logprob: -0.002212942810729146
    2. '=' → logprob: -6.502213001251221
    3. ' =' → logprob: -7.252213001251221
    4. '=min' → logprob: -14.627212524414062
    5. '=A' → logprob: -15.252212524414062
    6. '+=' → logprob: -15.627212524414062
    7. '=(' → logprob: -15.877212524414062
    8. '=s' → logprob: -16.002212524414062
    9. '=
' → logprob: -16.002212524414062
    10. '=\' → logprob: -16.377212524414062

Token 1099: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00014942926645744592
    2. 'A' → logprob: -8.875149726867676
    3. '(' → logprob: -12.250149726867676
    4. '(
' → logprob: -13.000149726867676
    5. '(sorted' → logprob: -13.250149726867676
    6. ' A' → logprob: -16.00014877319336
    7. ' (' → logprob: -16.12514877319336
    8. 'q' → logprob: -16.12514877319336
    9. '=A' → logprob: -16.12514877319336
    10. '[A' → logprob: -16.62514877319336

Token 1100: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.6932761073112488
    2. '[:-' → logprob: -0.6932761073112488
    3. '[q' → logprob: -9.068276405334473
    4. '[' → logprob: -11.818276405334473
    5. '[-' → logprob: -12.693276405334473
    6. '[len' → logprob: -13.818276405334473
    7. ':q' → logprob: -14.068276405334473
    8. ')' → logprob: -14.568276405334473
    9. ' [:' → logprob: -15.193276405334473
    10. 'q' → logprob: -16.068275451660156

Token 1101: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0016737529076635838
    2. '(len' → logprob: -7.126673698425293
    3. 'q' → logprob: -7.751673698425293
    4. '-(' → logprob: -8.376673698425293
    5. ' len' → logprob: -8.751673698425293
    6. '-q' → logprob: -10.501673698425293
    7. '-' → logprob: -11.626673698425293
    8. '   ' → logprob: -12.626673698425293
    9. ' ' → logprob: -12.751673698425293
    10. ',len' → logprob: -13.376673698425293

Token 1102: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.00020616286201402545
    2. 'A' → logprob: -8.500205993652344
    3. '(B' → logprob: -13.125205993652344
    4. '(' → logprob: -15.625205993652344
    5. '[A' → logprob: -16.125205993652344
    6. '(L' → logprob: -16.875205993652344
    7. '(a' → logprob: -16.875205993652344
    8. '_A' → logprob: -17.125205993652344
    9. '(
' → logprob: -17.250205993652344
    10. '(D' → logprob: -17.375205993652344

Token 1103: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.12695813179016113
    2. '(A' → logprob: -2.876958131790161
    3. 'A' → logprob: -3.001958131790161
    4. ')' → logprob: -4.501957893371582
    5. ' ' → logprob: -7.501957893371582
    6. '   ' → logprob: -7.501957893371582
    7. '-A' → logprob: -8.626957893371582
    8. ' A' → logprob: -9.001957893371582
    9. ']-' → logprob: -9.001957893371582
    10. ' )' → logprob: -9.251957893371582

Token 1104: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.5577775128767826e-06
    2. ' q' → logprob: -12.125005722045898
    3. 'int' → logprob: -17.5000057220459
    4. '(q' → logprob: -18.3750057220459
    5. '   ' → logprob: -18.7500057220459
    6. '       ' → logprob: -18.7500057220459
    7. '           ' → logprob: -19.3750057220459
    8. '
' → logprob: -19.7500057220459
    9. '	q' → logprob: -20.2500057220459
    10. '$q' → logprob: -20.3750057220459

Token 1105: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0021559724118560553
    2. ' ])' → logprob: -6.877155780792236
    3. '])-' → logprob: -7.002155780792236
    4. '])+' → logprob: -8.627156257629395
    5. '])
' → logprob: -10.877156257629395
    6. '])*' → logprob: -12.877156257629395
    7. ']' → logprob: -13.502156257629395
    8. ')])' → logprob: -13.502156257629395
    9. ']))' → logprob: -13.627156257629395
    10. ' ' → logprob: -13.627156257629395

Token 1106: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44491592049598694
    2. ')' → logprob: -1.5699158906936646
    3. '<|end|>' → logprob: -2.069916009902954
    4. '+' → logprob: -3.944916009902954
    5. '#' → logprob: -7.194915771484375
    6. ')+' → logprob: -7.194915771484375
    7. '       ' → logprob: -7.319915771484375
    8. ' if' → logprob: -7.319915771484375
    9. '<|end|>' → logprob: -7.569915771484375
    10. 'if' → logprob: -7.694915771484375

Token 1107: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1140696108341217
    2. '   ' → logprob: -2.489069700241089
    3. 'if' (adapté à ' if') → logprob: -4.36406946182251
    4. '<|end|>' → logprob: -4.86406946182251
    5. ' if' → logprob: -6.61406946182251
    6. '	' → logprob: -6.98906946182251
    7. ')' → logprob: -7.11406946182251
    8. '	if' → logprob: -7.36406946182251
    9. '<|end|>' → logprob: -9.239069938659668
    10. '           ' → logprob: -9.239069938659668

Token 1108: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.007608040235936642
    2. ' d' → logprob: -4.882607936859131
    3. '   ' → logprob: -13.632608413696289
    4. ' ' → logprob: -15.507608413696289
    5. '	d' → logprob: -15.632608413696289
    6. '       ' → logprob: -16.00760841369629
    7. '  ' → logprob: -16.38260841369629
    8. '(d' → logprob: -17.00760841369629
    9. '           ' → logprob: -17.50760841369629
    10. '    ' → logprob: -17.75760841369629

Token 1109: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2262885719537735
    2. '=' → logprob: -1.6012885570526123
    3. ' <=' → logprob: -7.351288795471191
    4. '==' → logprob: -9.351288795471191
    5. '<K' → logprob: -9.976288795471191
    6. 'K' → logprob: -10.101288795471191
    7. '>K' → logprob: -11.226288795471191
    8. ' K' → logprob: -11.351288795471191
    9. ' =' → logprob: -11.601288795471191
    10. '+' → logprob: -12.351288795471191

Token 1110: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -5.796184723294573e-06
    2. ' K' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.0000057220459
    4. '
' → logprob: -17.0000057220459
    5. '       ' → logprob: -17.1250057220459
    6. '	K' → logprob: -17.8750057220459
    7. '           ' → logprob: -18.8750057220459
    8. '  ' → logprob: -19.2500057220459
    9. ' ' → logprob: -19.6250057220459
    10. '```' → logprob: -19.8750057220459

Token 1111: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0181913822889328
    2. ':
' → logprob: -4.018191337585449
    3. '       ' → logprob: -10.51819133758545
    4. '):' → logprob: -12.51819133758545
    5. '           ' → logprob: -12.76819133758545
    6. '   ' → logprob: -13.51819133758545
    7. ':

' → logprob: -13.64319133758545
    8. '):
' → logprob: -13.64319133758545
    9. ':
' → logprob: -13.76819133758545
    10. ' and' → logprob: -14.39319133758545

Token 1112: '    ' (ID: 257)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014578181318938732
    2. 'print' → logprob: -4.264578342437744
    3. ' print' → logprob: -8.264577865600586
    4. '       ' → logprob: -8.764577865600586
    5. '   ' → logprob: -15.139577865600586
    6. '          ' → logprob: -15.139577865600586
    7. '```' → logprob: -15.889577865600586
    8. '         ' → logprob: -16.139577865600586
    9. '               ' → logprob: -16.264577865600586
    10. '        ' → logprob: -17.014577865600586

Token 1113: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16601568460464478
    2. 'print' → logprob: -1.916015625
    3. '       ' → logprob: -5.166015625
    4. ' print' → logprob: -9.666015625
    5. '   ' → logprob: -13.541015625
    6. '          ' → logprob: -13.791015625
    7. '         ' → logprob: -14.166015625
    8. '               ' → logprob: -14.791015625
    9. '        ' → logprob: -15.166015625
    10. '```' → logprob: -15.166015625

Token 1114: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03828924149274826
    2. '           ' → logprob: -3.2882893085479736
    3. '       ' → logprob: -8.413289070129395
    4. ' print' → logprob: -10.663289070129395
    5. '   ' → logprob: -13.538289070129395
    6. '```' → logprob: -14.788289070129395
    7. '               ' → logprob: -15.038289070129395
    8. '          ' → logprob: -15.538289070129395
    9. '         ' → logprob: -15.538289070129395
    10. '        ' → logprob: -17.03829002380371

Token 1115: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.029750604182481766
    2. ' d' → logprob: -3.5297505855560303
    3. '   ' → logprob: -16.65475082397461
    4. '	d' → logprob: -17.02975082397461
    5. '       ' → logprob: -17.52975082397461
    6. 'True' → logprob: -18.15475082397461
    7. 'q' → logprob: -18.15475082397461
    8. '           ' → logprob: -18.40475082397461
    9. '#' → logprob: -18.52975082397461
    10. 'len' → logprob: -18.65475082397461

Token 1116: ' coût' (ID: 73109)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0022078317124396563
    2. ' d' → logprob: -6.1272077560424805
    3. 'cout' → logprob: -12.62720775604248
    4. 'co' → logprob: -12.75220775604248
    5. 'cost' → logprob: -12.87720775604248
    6. ' ' → logprob: -13.25220775604248
    7. 'q' → logprob: -13.37720775604248
    8. '   ' → logprob: -13.50220775604248
    9. '#' → logprob: -14.00220775604248
    10. ' coût' → logprob: -14.00220775604248

Token 1117: ' ne' (ID: 453)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014545407146215439
    2. ' total' → logprob: -4.264545440673828
    3. 'd' → logprob: -8.014545440673828
    4. 'tot' → logprob: -10.639545440673828
    5. ' d' → logprob: -11.514545440673828
    6. '(total' → logprob: -11.514545440673828
    7. '_total' → logprob: -13.389545440673828
    8. '       ' → logprob: -13.639545440673828
    9. '   ' → logprob: -13.639545440673828
    10. '           ' → logprob: -14.139545440673828

Token 1118: ' dépasse' (ID: 165701)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.9026268124580383
    2. 'pas' → logprob: -1.1526267528533936
    3. 'd' → logprob: -2.4026267528533936
    4. 'print' → logprob: -3.2776267528533936
    5. 'respect' → logprob: -3.2776267528533936
    6. 's' → logprob: -3.4026267528533936
    7. 'continue' → logprob: -4.152626991271973
    8. 'n' → logprob: -4.402626991271973
    9. 'est' → logprob: -4.652626991271973
    10. '```' → logprob: -5.277626991271973

Token 1119: ' pas' (ID: 2173)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0014238066505640745
    2. ' K' → logprob: -7.1264238357543945
    3. 'la' → logprob: -8.126423835754395
    4. 'pas' → logprob: -8.626423835754395
    5. '   ' → logprob: -9.751423835754395
    6. 'le' → logprob: -10.501423835754395
    7. '       ' → logprob: -11.001423835754395
    8. ' la' → logprob: -12.001423835754395
    9. 'l' → logprob: -12.001423835754395
    10. '  ' → logprob: -12.126423835754395

Token 1120: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.0004469964769668877
    2. '       ' → logprob: -8.375447273254395
    3. ' K' → logprob: -9.375447273254395
    4. '           ' → logprob: -9.625447273254395
    5. '   ' → logprob: -10.125447273254395
    6. 'd' → logprob: -11.625447273254395
    7. 'la' → logprob: -12.000447273254395
    8. 'le' → logprob: -12.250447273254395
    9. '               ' → logprob: -13.500447273254395
    10. '          ' → logprob: -14.000447273254395

Token 1121: ',' (ID: 11)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7209500670433044
    2. ':' → logprob: -1.0959501266479492
    3. '       ' → logprob: -1.8459501266479492
    4. '           ' → logprob: -3.845950126647949
    5. '   ' → logprob: -9.59595012664795
    6. '):
' → logprob: -10.09595012664795
    7. ' and' → logprob: -10.22095012664795
    8. '```' → logprob: -11.22095012664795
    9. ' :
' → logprob: -11.34595012664795
    10. '               ' → logprob: -11.34595012664795

Token 1122: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10334011167287827
    2. 'print' → logprob: -2.3533401489257812
    3. '       ' → logprob: -6.353340148925781
    4. ' print' → logprob: -6.603340148925781
    5. '   ' → logprob: -11.353340148925781
    6. '          ' → logprob: -11.728340148925781
    7. '               ' → logprob: -12.228340148925781
    8. '         ' → logprob: -12.853340148925781
    9. '```' → logprob: -13.228340148925781
    10. '        ' → logprob: -13.978340148925781

Token 1123: ''est' (ID: 6616)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -0.23509818315505981
    2. '           ' → logprob: -1.985098123550415
    3. '       ' → logprob: -3.110098123550415
    4. 'print' → logprob: -4.110098361968994
    5. '          ' → logprob: -5.610098361968994
    6. '         ' → logprob: -5.985098361968994
    7. 'continue' → logprob: -6.235098361968994
    8. '   ' → logprob: -7.235098361968994
    9. '      ' → logprob: -7.360098361968994
    10. '        ' → logprob: -7.610098361968994

Token 1124: ' valide' (ID: 137323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10518933087587357
    2. 'v' → logprob: -3.730189323425293
    3. 'possible' → logprob: -3.855189323425293
    4. 'print' → logprob: -4.230189323425293
    5. 'True' → logprob: -4.480189323425293
    6. '       ' → logprob: -4.480189323425293
    7. 'la' → logprob: -4.980189323425293
    8. 'une' → logprob: -6.730189323425293
    9. '```' → logprob: -6.730189323425293
    10. 'correct' → logprob: -6.855189323425293

Token 1125: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7014288306236267
    2. ':' → logprob: -1.3264288902282715
    3. ':
' → logprob: -1.8264288902282715
    4. '           ' → logprob: -2.5764288902282715
    5. '```' → logprob: -7.2014288902282715
    6. '   ' → logprob: -8.201428413391113
    7. '<|end|>' → logprob: -8.326428413391113
    8. ' and' → logprob: -9.451428413391113
    9. '):
' → logprob: -9.826428413391113
    10. ' :
' → logprob: -10.201428413391113

Token 1126: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04952944442629814
    2. '       ' → logprob: -3.049529552459717
    3. 'print' → logprob: -7.049529552459717
    4. '```' → logprob: -10.299529075622559
    5. '   ' → logprob: -11.299529075622559
    6. ' print' → logprob: -11.799529075622559
    7. '               ' → logprob: -11.924529075622559
    8. ':' → logprob: -12.674529075622559
    9. '	       ' → logprob: -12.799529075622559
    10. '          ' → logprob: -13.424529075622559

Token 1127: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005628037615679204
    2. '           ' → logprob: -7.50056266784668
    3. ' print' → logprob: -11.75056266784668
    4. '       ' → logprob: -13.62556266784668
    5. '```' → logprob: -14.25056266784668
    6. '   ' → logprob: -17.00056266784668
    7. '	print' → logprob: -18.75056266784668
    8. '               ' → logprob: -19.12556266784668
    9. '``' → logprob: -19.25056266784668
    10. '          ' → logprob: -19.37556266784668

Token 1128: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.2664456789934775e-06
    2. 's' → logprob: -13.625000953674316
    3. '(' → logprob: -19.750001907348633
    4. '(
' → logprob: -20.125001907348633
    5. '(S' → logprob: -21.125001907348633
    6. ' (' → logprob: -21.625001907348633
    7. '```' → logprob: -22.750001907348633
    8. '((' → logprob: -23.750001907348633
    9. '   ' → logprob: -24.000001907348633
    10. '(i' → logprob: -24.125001907348633

Token 1129: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16032394766807556
    2. ')' → logprob: -1.910323977470398
    3. '           ' → logprob: -9.910324096679688
    4. ')
' → logprob: -9.910324096679688
    5. ')`
' → logprob: -15.035324096679688
    6. ' )
' → logprob: -15.785324096679688
    7. ')return' → logprob: -17.410324096679688
    8. ' )' → logprob: -17.410324096679688
    9. ')

' → logprob: -17.410324096679688
    10. '       ' → logprob: -17.660324096679688

Token 1130: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -9.13388703338569e-06
    2. 'exit' → logprob: -12.125009536743164
    3. '   ' → logprob: -13.500009536743164
    4. '       ' → logprob: -13.750009536743164
    5. '               ' → logprob: -14.125009536743164
    6. '		' → logprob: -15.375009536743164
    7. '```' → logprob: -16.375009536743164
    8. '          ' → logprob: -16.500009536743164
    9. '	       ' → logprob: -17.000009536743164
    10. ' exit' → logprob: -17.250009536743164

Token 1131: ' Aff' (ID: 13741)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.06197552755475044
    2. ' exit' → logprob: -2.8119754791259766
    3. 'break' → logprob: -12.436975479125977
    4. ' break' → logprob: -13.186975479125977
    5. '(exit' → logprob: -13.561975479125977
    6. '           ' → logprob: -14.561975479125977
    7. 'return' → logprob: -15.436975479125977
    8. '.exit' → logprob: -17.186975479125977
    9. '	exit' → logprob: -17.311975479125977
    10. ' return' → logprob: -17.686975479125977

Token 1132: 'iche' (ID: 7509)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07409509271383286
    2. 'il' → logprob: -4.074095249176025
    3. 'ile' → logprob: -4.324095249176025
    4. 'ili' → logprob: -5.199095249176025
    5. 'l' → logprob: -5.449095249176025
    6. 'i' → logprob: -5.824095249176025
    7. 'lu' → logprob: -6.199095249176025
    8. 'ilate' → logprob: -6.199095249176025
    9. 'exit' → logprob: -6.574095249176025
    10. 'ilia' → logprob: -6.824095249176025

Token 1133: ' la' (ID: 557)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -9.014684110297821e-06
    2. 's' → logprob: -11.625008583068848
    3. '(' → logprob: -17.750009536743164
    4. '(
' → logprob: -20.250009536743164
    5. '```' → logprob: -21.000009536743164
    6. '(i' → logprob: -21.500009536743164
    7. ' (' → logprob: -21.875009536743164
    8. '   ' → logprob: -22.250009536743164
    9. 'a' → logprob: -22.500009536743164
    10. '(S' → logprob: -22.875009536743164

Token 1134: ' valeur' (ID: 41664)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -2.816093228830141e-06
    2. 'div' → logprob: -12.87500286102295
    3. '(s' → logprob: -16.250001907348633
    4. ' s' → logprob: -16.500001907348633
    5. 'd' → logprob: -18.375001907348633
    6. 'return' → logprob: -19.125001907348633
    7. 'break' → logprob: -19.250001907348633
    8. '```' → logprob: -19.375001907348633
    9. 'exit' → logprob: -19.375001907348633
    10. 'answer' → logprob: -21.375001907348633

Token 1135: ' de' (ID: 334)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00031401283922605217
    2. '()' → logprob: -8.875313758850098
    3. '(' → logprob: -9.000313758850098
    4. '   ' → logprob: -11.375313758850098
    5. '(i' → logprob: -11.375313758850098
    6. '```' → logprob: -11.375313758850098
    7. 's' → logprob: -11.750313758850098
    8. ')' → logprob: -12.500313758850098
    9. '           ' → logprob: -13.625313758850098
    10. '(
' → logprob: -14.250313758850098

Token 1136: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0325924449716695e-05
    2. ' s' → logprob: -11.50001049041748
    3. '(s' → logprob: -15.87501049041748
    4. '	s' → logprob: -21.375009536743164
    5. '_s' → logprob: -21.500009536743164
    6. 'S' → logprob: -21.625009536743164
    7. '```' → logprob: -21.625009536743164
    8. 'div' → logprob: -22.125009536743164
    9. 'R' → logprob: -22.125009536743164
    10. '`s' → logprob: -22.625009536743164

Token 1137: ' reten' (ID: 91978)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.723352049040841e-06
    2. 'exit' → logprob: -13.000004768371582
    3. '		' → logprob: -13.625004768371582
    4. '               ' → logprob: -15.250004768371582
    5. '```' → logprob: -15.500004768371582
    6. '<|end|>' → logprob: -15.500004768371582
    7. '(exit' → logprob: -16.125003814697266
    8. '            
' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.625003814697266
    10. '	       ' → logprob: -16.625003814697266

Token 1138: 'ue' (ID: 466)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.46849164366722107
    2. 'ue' → logprob: -1.0934916734695435
    3. 'enue' → logprob: -3.343491554260254
    4. 'nie' → logprob: -6.468491554260254
    5. 'u' → logprob: -7.593491554260254
    6. 'nu' → logprob: -7.843491554260254
    7. 'nte' → logprob: -7.843491554260254
    8. 'née' → logprob: -8.093491554260254
    9. '
' → logprob: -8.843491554260254
    10. 'ni' → logprob: -9.718491554260254

Token 1139: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.613945101387799e-05
    2. '		' → logprob: -9.625085830688477
    3. '<|end|>' → logprob: -12.250085830688477
    4. '```' → logprob: -12.625085830688477
    5. 'exit' → logprob: -12.750085830688477
    6. '\n' → logprob: -13.375085830688477
    7. '	       ' → logprob: -13.375085830688477
    8. '               ' → logprob: -13.750085830688477
    9. '            
' → logprob: -13.875085830688477
    10. '       ' → logprob: -14.750085830688477

Token 1140: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.2617008400848135e-05
    2. 'exit' → logprob: -10.625032424926758
    3. '		' → logprob: -12.625032424926758
    4. '	       ' → logprob: -13.000032424926758
    5. '       ' → logprob: -14.000032424926758
    6. '   ' → logprob: -14.375032424926758
    7. '	   ' → logprob: -14.625032424926758
    8. '               ' → logprob: -15.000032424926758
    9. '	exit' → logprob: -15.625032424926758
    10. '		   ' → logprob: -15.875032424926758

Token 1141: ' exit' (ID: 10654)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5759541392326355
    2. 'exit' (adapté à ' exit') → logprob: -0.8259541392326355
    3. ' exit' → logprob: -11.82595443725586
    4. 'break' → logprob: -12.82595443725586
    5. '   ' → logprob: -13.57595443725586
    6. '       ' → logprob: -13.95095443725586
    7. '```' → logprob: -13.95095443725586
    8. '	exit' → logprob: -14.45095443725586
    9. '               ' → logprob: -14.70095443725586
    10. '(exit' → logprob: -15.45095443725586

Token 1142: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00047833603457547724
    2. '()
' → logprob: -8.125478744506836
    3. '())' → logprob: -9.250478744506836
    4. '()\' → logprob: -10.250478744506836
    5. '<|end|>' → logprob: -11.375478744506836
    6. '()>' → logprob: -11.500478744506836
    7. ')' → logprob: -12.375478744506836
    8. '()]' → logprob: -12.375478744506836
    9. '()<' → logprob: -12.500478744506836
    10. '#' → logprob: -12.875478744506836

Token 1143: '  ' (ID: 256)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.25841689109802246
    2. '<|end|>' → logprob: -1.6334168910980225
    3. 'print' → logprob: -3.6334168910980225
    4. '```' → logprob: -5.258417129516602
    5. ')' → logprob: -8.758417129516602
    6. '...' → logprob: -9.258417129516602
    7. 'elif' → logprob: -9.383417129516602
    8. 'else' → logprob: -9.508417129516602
    9. '#print' → logprob: -9.508417129516602
    10. 'continue' → logprob: -9.508417129516602

Token 1144: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1145: ' Fin' (ID: 7772)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.12578663229942322
    2. 'pass' → logprob: -2.875786542892456
    3. 'continue' → logprob: -3.500786542892456
    4. 'break' → logprob: -3.625786542892456
    5. 'print' → logprob: -6.000786781311035
    6. '```' → logprob: -6.250786781311035
    7. '       ' → logprob: -8.500786781311035
    8. '   ' → logprob: -9.375786781311035
    9. ' pass' → logprob: -9.500786781311035
    10. 'quit' → logprob: -9.750786781311035

Token 1146: ' immédi' (ID: 69896)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5232210755348206
    2. '<|end|>' → logprob: -1.0232210159301758
    3. ')' → logprob: -4.023221015930176
    4. '()
' → logprob: -5.023221015930176
    5. '#' → logprob: -5.148221015930176
    6. 'print' → logprob: -5.273221015930176
    7. '```' → logprob: -5.398221015930176
    8. '<|end|>' → logprob: -6.023221015930176
    9. '())' → logprob: -6.398221015930176
    10. '   ' → logprob: -7.148221015930176

Token 1147: 'ate' (ID: 379)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -7.40998875699006e-05
    2. '()
' → logprob: -10.25007438659668
    3. '())' → logprob: -11.25007438659668
    4. '(' → logprob: -11.87507438659668
    5. 'ation' → logprob: -12.12507438659668
    6. ')' → logprob: -12.62507438659668
    7. 'ction' → logprob: -12.87507438659668
    8. 'ition' → logprob: -13.75007438659668
    9. 'ution' → logprob: -13.87507438659668
    10. '()`' → logprob: -14.12507438659668

Token 1148: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1149: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.012771319597959518
    2. '#' → logprob: -5.012771129608154
    3. '<|end|>' → logprob: -5.512771129608154
    4. '```' → logprob: -6.387771129608154
    5. ' print' → logprob: -9.387771606445312
    6. '#print' → logprob: -9.512771606445312
    7. 'continue' → logprob: -9.637771606445312
    8. '   ' → logprob: -10.387771606445312
    9. ')' → logprob: -10.387771606445312
    10. 'else' → logprob: -12.262771606445312

Token 1150: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6876999735832214
    2. '   ' → logprob: -0.9376999735832214
    3. 'print' → logprob: -2.687700033187866
    4. '#' → logprob: -3.312700033187866
    5. 'elif' → logprob: -6.812699794769287
    6. '```' → logprob: -9.062700271606445
    7. ' else' → logprob: -10.187700271606445
    8. '       ' → logprob: -11.437700271606445
    9. '#print' → logprob: -11.812700271606445
    10. '#else' → logprob: -12.562700271606445

Token 1151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22564998269081116
    2. ':
' → logprob: -1.6006499528884888
    3. '   ' → logprob: -8.7256498336792
    4. '       ' → logprob: -10.3506498336792
    5. '#' → logprob: -11.1006498336792
    6. ':

' → logprob: -12.2256498336792
    7. ':#' → logprob: -12.2256498336792
    8. ':
' → logprob: -12.3506498336792
    9. '```' → logprob: -12.7256498336792
    10. ' :
' → logprob: -12.9756498336792

Token 1152: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46842777729034424
    2. '       ' → logprob: -1.3434277772903442
    3. '   ' → logprob: -3.0934276580810547
    4. 'q' → logprob: -3.0934276580810547
    5. 'add' → logprob: -3.8434276580810547
    6. '```' → logprob: -7.718427658081055
    7. ' q' → logprob: -8.843427658081055
    8. 'else' → logprob: -8.968427658081055
    9. '           ' → logprob: -9.968427658081055
    10. ' #' → logprob: -10.468427658081055

Token 1153: ' #' (ID: 1069)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.003061610972508788
    2. '#' (adapté à ' #') → logprob: -6.003061771392822
    3. '       ' → logprob: -7.503061771392822
    4. '   ' → logprob: -10.753061294555664
    5. ' q' → logprob: -12.253061294555664
    6. '           ' → logprob: -13.003061294555664
    7. '```' → logprob: -13.003061294555664
    8. '	q' → logprob: -13.378061294555664
    9. 'p' → logprob: -13.753061294555664
    10. '
' → logprob: -14.003061294555664

Token 1154: ' Même' (ID: 89628)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.0009459959110245109
    2. '#' → logprob: -7.625946044921875
    3. '       ' → logprob: -7.750946044921875
    4. '   ' → logprob: -11.000946044921875
    5. ' q' → logprob: -12.000946044921875
    6. 'p' → logprob: -12.875946044921875
    7. '           ' → logprob: -13.500946044921875
    8. '```' → logprob: -15.125946044921875
    9. '	q' → logprob: -15.125946044921875
    10. 'r' → logprob: -17.000946044921875

Token 1155: ' logique' (ID: 115350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03527813404798508
    2. 'q' → logprob: -4.1602783203125
    3. 'd' → logprob: -4.9102783203125
    4. '#' → logprob: -5.2852783203125
    5. ':
' → logprob: -5.7852783203125
    6. 'add' → logprob: -6.2852783203125
    7. '   ' → logprob: -7.5352783203125
    8. ':q' → logprob: -8.1602783203125
    9. ':#' → logprob: -8.9102783203125
    10. 'if' → logprob: -9.1602783203125

Token 1156: ' que' (ID: 661)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.125645250082016
    2. 'q' → logprob: -3.125645160675049
    3. ':' → logprob: -3.375645160675049
    4. ':
' → logprob: -3.750645160675049
    5. '   ' → logprob: -5.250645160675049
    6. '```' → logprob: -5.625645160675049
    7. '#' → logprob: -5.875645160675049
    8. '           ' → logprob: -6.000645160675049
    9. 'if' → logprob: -6.625645160675049
    10. '     ' → logprob: -8.250645637512207

Token 1157: ' ci' (ID: 7405)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.9325163960456848
    2. '   ' → logprob: -1.05751633644104
    3. 'minus' → logprob: -2.05751633644104
    4. ' add' → logprob: -2.68251633644104
    5. '       ' → logprob: -3.68251633644104
    6. ' minus' → logprob: -4.682516574859619
    7. '     ' → logprob: -5.307516574859619
    8. '#' → logprob: -5.432516574859619
    9. 'q' → logprob: -5.432516574859619
    10. ' q' → logprob: -5.682516574859619

Token 1158: '-dessus' (ID: 74812)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'minus' → logprob: -0.8593315482139587
    2. '       ' → logprob: -1.2343316078186035
    3. '   ' → logprob: -1.4843316078186035
    4. 'plus' → logprob: -3.6093316078186035
    5. 'n' → logprob: -4.8593316078186035
    6. 'elif' → logprob: -5.1093316078186035
    7. '#' → logprob: -5.8593316078186035
    8. '           ' → logprob: -5.9843316078186035
    9. ' minus' → logprob: -6.1093316078186035
    10. 'moins' → logprob: -6.4843316078186035

Token 1159: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22003896534442902
    2. 'q' → logprob: -1.7200390100479126
    3. '```' → logprob: -4.720038890838623
    4. ' q' → logprob: -5.095038890838623
    5. '   ' → logprob: -6.345038890838623
    6. '           ' → logprob: -6.845038890838623
    7. '``' → logprob: -8.345039367675781
    8. '#' → logprob: -9.095039367675781
    9. '	q' → logprob: -10.095039367675781
    10. ':' → logprob: -10.220039367675781

Token 1160: ' mais' (ID: 2899)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.014268582686781883
    2. '       ' → logprob: -4.389268398284912
    3. ' q' → logprob: -6.514268398284912
    4. '#' → logprob: -8.76426887512207
    5. '   ' → logprob: -9.51426887512207
    6. '	q' → logprob: -10.38926887512207
    7. '```' → logprob: -11.76426887512207
    8. '           ' → logprob: -12.76426887512207
    9. 'p' → logprob: -13.63926887512207
    10. '
' → logprob: -14.01426887512207

Token 1161: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5542714595794678
    2. 'q' → logprob: -1.4292714595794678
    3. ' q' → logprob: -2.6792714595794678
    4. '#' → logprob: -2.6792714595794678
    5. '   ' → logprob: -3.4292714595794678
    6. '```' → logprob: -4.804271697998047
    7. '           ' → logprob: -5.554271697998047
    8. '
' → logprob: -6.429271697998047
    9. '     ' → logprob: -7.054271697998047
    10. ' #' → logprob: -7.804271697998047

Token 1162: ' s' (ID: 265)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.1330643594264984
    2. '#' → logprob: -2.8830642700195312
    3. '       ' → logprob: -3.3830642700195312
    4. ' q' → logprob: -3.8830642700195312
    5. '(q' → logprob: -5.133064270019531
    6. 's' → logprob: -6.633064270019531
    7. '```' → logprob: -7.008064270019531
    8. '   ' → logprob: -7.383064270019531
    9. ' #' → logprob: -7.508064270019531
    10. '           ' → logprob: -7.758064270019531

Token 1163: ''inté' (ID: 187934)
  Prédit: 'ont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ont' → logprob: -1.0091558694839478
    2. ''agit' → logprob: -1.2591558694839478
    3. '#' → logprob: -2.384155750274658
    4. ''oc' → logprob: -3.884155750274658
    5. 'on' → logprob: -4.009155750274658
    6. '   ' → logprob: -4.134155750274658
    7. 'alue' → logprob: -4.134155750274658
    8. '       ' → logprob: -4.384155750274658
    9. 'ou' → logprob: -4.509155750274658
    10. 'ait' → logprob: -4.509155750274658

Token 1164: 'resse' (ID: 15994)
  Prédit: 'resse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'resse' → logprob: -0.04637777432799339
    2. 'ère' → logprob: -3.171377658843994
    3. 'rite' → logprob: -6.921377658843994
    4. 'rès' → logprob: -7.171377658843994
    5. 're' → logprob: -7.671377658843994
    6. 'ite' → logprob: -8.421378135681152
    7. '#' → logprob: -8.671378135681152
    8. 'e' → logprob: -8.796378135681152
    9. 'esse' → logprob: -9.296378135681152
    10. 'r' → logprob: -9.546378135681152

Token 1165: ' maintenant' (ID: 35735)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.35458502173423767
    2. 'aux' → logprob: -1.97958505153656
    3. ' à' → logprob: -2.4795849323272705
    4. ' au' → logprob: -3.4795849323272705
    5. 'au' → logprob: -3.8545849323272705
    6. 'à' → logprob: -4.10458517074585
    7. '       ' → logprob: -5.47958517074585
    8. '   ' → logprob: -5.72958517074585
    9. '(aux' → logprob: -8.729584693908691
    10. '#' → logprob: -8.854584693908691

Token 1166: ' aux' (ID: 5850)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5394963026046753
    2. ' aux' → logprob: -2.289496421813965
    3. ' à' → logprob: -2.539496421813965
    4. 'à' → logprob: -2.914496421813965
    5. '   ' → logprob: -3.289496421813965
    6. 'aux' → logprob: -3.289496421813965
    7. '#' → logprob: -3.289496421813965
    8. 'au' → logprob: -3.539496421813965
    9. '(q' → logprob: -4.039496421813965
    10. ' au' → logprob: -4.664496421813965

Token 1167: ' aj' (ID: 7261)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004490292631089687
    2. 'len' → logprob: -6.254490375518799
    3. 'add' → logprob: -7.004490375518799
    4. '#' → logprob: -7.629490375518799
    5. 'q' → logprob: -8.50448989868164
    6. 'sum' → logprob: -8.75448989868164
    7. 'length' → logprob: -8.75448989868164
    8. 'largest' → logprob: -8.87948989868164
    9. ' B' → logprob: -9.00448989868164
    10. 'small' → logprob: -9.12948989868164

Token 1168: 'outs' (ID: 16513)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.2405930459499359
    2. 'outs' → logprob: -1.7405930757522583
    3. 'outes' → logprob: -3.6155929565429688
    4. 'outer' → logprob: -4.740592956542969
    5. 'oute' → logprob: -6.740592956542969
    6. 'outez' → logprob: -6.865592956542969
    7. 'ust' → logprob: -7.865592956542969
    8. 'OUT' → logprob: -9.615592956542969
    9. 'ustes' → logprob: -10.865592956542969
    10. ']' → logprob: -11.240592956542969

Token 1169: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01704682968556881
    2. 'q' → logprob: -4.892046928405762
    3. '(q' → logprob: -5.267046928405762
    4. '```' → logprob: -7.142046928405762
    5. ' q' → logprob: -7.267046928405762
    6. '#' → logprob: -7.392046928405762
    7. '   ' → logprob: -7.517046928405762
    8. '=q' → logprob: -7.892046928405762
    9. ':' → logprob: -8.142046928405762
    10. '=' → logprob: -8.392046928405762

Token 1170: 'B' (ID: 33)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.02422686479985714
    2. '       ' → logprob: -4.024226665496826
    3. ' q' → logprob: -6.274226665496826
    4. 'B' → logprob: -6.399226665496826
    5. '           ' → logprob: -7.149226665496826
    6. '#' → logprob: -7.399226665496826
    7. '   ' → logprob: -8.274227142333984
    8. ')' → logprob: -8.524227142333984
    9. 'else' → logprob: -8.899227142333984
    10. 'elif' → logprob: -9.149227142333984

Token 1171: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.35526424646377563
    2. ')' → logprob: -1.8552641868591309
    3. '):' → logprob: -2.730264186859131
    4. ')
' → logprob: -3.355264186859131
    5. '       ' → logprob: -4.230264186859131
    6. '=' → logprob: -4.480264186859131
    7. '   ' → logprob: -5.355264186859131
    8. '#' → logprob: -6.105264186859131
    9. 'q' → logprob: -6.355264186859131
    10. ':' → logprob: -6.855264186859131

Token 1172: ' car' (ID: 1669)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.5784745812416077
    2. '       ' → logprob: -0.8284745812416077
    3. ' q' → logprob: -6.578474521636963
    4. '   ' → logprob: -7.953474521636963
    5. '           ' → logprob: -8.453474998474121
    6. '#' → logprob: -8.578474998474121
    7. '```' → logprob: -8.953474998474121
    8. '	q' → logprob: -9.703474998474121
    9. '(q' → logprob: -10.328474998474121
    10. '=q' → logprob: -10.453474998474121

Token 1173: ' add' (ID: 1147)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.48865801095962524
    2. ' q' → logprob: -1.6136579513549805
    3. 'minus' → logprob: -2.1136579513549805
    4. ' minus' → logprob: -3.7386579513549805
    5. 'add' → logprob: -4.3636579513549805
    6. ' add' → logprob: -4.4886579513549805
    7. '   ' → logprob: -5.1136579513549805
    8. '#' → logprob: -5.6136579513549805
    9. 'len' → logprob: -6.4886579513549805
    10. 'plus' → logprob: -6.9886579513549805

Token 1174: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0007373234839178622
    2. ' >' → logprob: -7.375737190246582
    3. '<' → logprob: -9.500737190246582
    4. '>=' → logprob: -11.375737190246582
    5. '   ' → logprob: -12.125737190246582
    6. '>b' → logprob: -12.750737190246582
    7. '>s' → logprob: -13.000737190246582
    8. '=' → logprob: -13.000737190246582
    9. '>end' → logprob: -13.250737190246582
    10. '<=' → logprob: -13.375737190246582

Token 1175: ' minus' (ID: 40335)
  Prédit: 'minus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minus' → logprob: -2.629921436891891e-05
    2. ' minus' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.50002670288086
    4. 'min' → logprob: -14.75002670288086
    5. 'add' → logprob: -16.50002670288086
    6. 'plus' → logprob: -16.75002670288086
    7. ' ' → logprob: -17.25002670288086
    8. '```' → logprob: -17.62502670288086
    9. 'minor' → logprob: -18.00002670288086
    10. 'remove' → logprob: -18.00002670288086

Token 1176: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004744023026432842
    2. 'q' → logprob: -8.125473976135254
    3. '#' → logprob: -9.500473976135254
    4. '```' → logprob: -9.500473976135254
    5. '   ' → logprob: -11.750473976135254
    6. '
' → logprob: -11.750473976135254
    7. ' q' → logprob: -12.625473976135254
    8. '``' → logprob: -13.000473976135254
    9. '           ' → logprob: -13.375473976135254
    10. ',' → logprob: -14.125473976135254

Token 1177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1259756237268448
    2. 'q' → logprob: -2.2509756088256836
    3. '```' → logprob: -4.375975608825684
    4. '   ' → logprob: -9.000975608825684
    5. '#' → logprob: -9.250975608825684
    6. '           ' → logprob: -9.500975608825684
    7. '``' → logprob: -9.750975608825684
    8. '	q' → logprob: -9.875975608825684
    9. ' q' → logprob: -10.875975608825684
    10. '     ' → logprob: -11.125975608825684

Token 1178: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: -1.5928495486150496e-05
    2. 'p' → logprob: -11.625016212463379
    3. '       ' → logprob: -12.125016212463379
    4. '
' → logprob: -14.625016212463379
    5. '   ' → logprob: -14.750016212463379
    6. '           ' → logprob: -15.125016212463379
    7. ' q' → logprob: -15.250016212463379
    8. 'r' → logprob: -17.000015258789062
    9. '	q' → logprob: -17.000015258789062
    10. '               ' → logprob: -17.125015258789062

Token 1179: '=(' (ID: 9893)
  Prédit: '=('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=(' → logprob: -0.00043460296001285315
    2. '=' → logprob: -7.750434398651123
    3. ' =' → logprob: -12.750434875488281
    4. '=((' → logprob: -14.375434875488281
    5. '=int' → logprob: -15.250434875488281
    6. '=len' → logprob: -16.12543487548828
    7. '=max' → logprob: -17.25043487548828
    8. ' =(' → logprob: -17.75043487548828
    9. '=b' → logprob: -18.37543487548828
    10. '=[' → logprob: -18.62543487548828

Token 1180: 'add' (ID: 964)
  Prédit: '(add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.10021152347326279
    2. 'add' → logprob: -2.3502116203308105
    3. ' add' → logprob: -12.600211143493652
    4. ' (' → logprob: -14.225211143493652
    5. '   ' → logprob: -15.350211143493652
    6. ')add' → logprob: -15.350211143493652
    7. '(' → logprob: -15.975211143493652
    8. '	add' → logprob: -16.85021209716797
    9. '_add' → logprob: -17.47521209716797
    10. ':add' → logprob: -17.60021209716797

Token 1181: '-minus' (ID: 180136)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06600752472877502
    2. '-minus' → logprob: -3.066007614135742
    3. ' -' → logprob: -4.316007614135742
    4. '-add' → logprob: -5.816007614135742
    5. '-B' → logprob: -7.941007614135742
    6. '-min' → logprob: -8.691007614135742
    7. '-b' → logprob: -8.691007614135742
    8. '-
' → logprob: -9.816007614135742
    9. 'minus' → logprob: -10.066007614135742
    10. '-remove' → logprob: -10.941007614135742

Token 1182: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -7.3458322731312364e-06
    2. ')' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.750007629394531
    4. ')#' → logprob: -14.750007629394531
    5. '//' → logprob: -14.875007629394531
    6. ')>>' → logprob: -17.75000762939453
    7. ')s' → logprob: -19.37500762939453
    8. ')
' → logprob: -19.50000762939453
    9. ')\' → logprob: -20.50000762939453
    10. '}//' → logprob: -20.87500762939453

Token 1183: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. ' s' → logprob: -17.5
    3. '   ' → logprob: -20.625
    4. '	s' → logprob: -23.375
    5. '```' → logprob: -24.25
    6. '`s' → logprob: -24.375
    7. '  ' → logprob: -24.75
    8. '       ' → logprob: -24.75
    9. '<|end|>' → logprob: -24.75
    10. '           ' → logprob: -25.625

Token 1184: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008976469398476183
    2. '#' → logprob: -7.8758978843688965
    3. '   ' → logprob: -8.500897407531738
    4. '
' → logprob: -8.875897407531738
    5. 'd' → logprob: -9.375897407531738
    6. 'b' → logprob: -10.250897407531738
    7. 'B' → logprob: -10.250897407531738
    8. '        
' → logprob: -12.125897407531738
    9. '           ' → logprob: -12.375897407531738
    10. '```' → logprob: -13.125897407531738

Token 1185: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2224428504705429
    2. '       ' → logprob: -1.722442865371704
    3. 'B' → logprob: -4.347442626953125
    4. 'sum' → logprob: -5.472442626953125
    5. 'd' → logprob: -5.972442626953125
    6. '
' → logprob: -7.472442626953125
    7. 'b' → logprob: -8.347442626953125
    8. '   ' → logprob: -8.472442626953125
    9. ' #' → logprob: -9.972442626953125
    10. 'q' → logprob: -10.972442626953125

Token 1186: ' Nombre' (ID: 70208)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.009509448893368244
    2. 'q' → logprob: -4.759509563446045
    3. '#' → logprob: -7.759509563446045
    4. 'sum' → logprob: -8.759509086608887
    5. 'r' → logprob: -8.884509086608887
    6. '       ' → logprob: -9.259509086608887
    7. 'p' → logprob: -10.134509086608887
    8. '
' → logprob: -10.759509086608887
    9. '   ' → logprob: -12.509509086608887
    10. '           ' → logprob: -13.509509086608887

Token 1187: ' d' (ID: 272)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3458837866783142
    2. '=(' → logprob: -1.595883846282959
    3. '=sum' → logprob: -2.720883846282959
    4. '=B' → logprob: -4.470883846282959
    5. '=len' → logprob: -4.595883846282959
    6. '(B' → logprob: -6.470883846282959
    7. ' =' → logprob: -8.0958833694458
    8. 'sum' → logprob: -9.0958833694458
    9. '=int' → logprob: -9.0958833694458
    10. 'B' → logprob: -10.0958833694458

Token 1188: ''' (ID: 6)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6194091439247131
    2. 'q' → logprob: -1.4944090843200684
    3. 'elements' → logprob: -1.8694090843200684
    4. 'B' → logprob: -2.9944090843200684
    5. ' éléments' → logprob: -4.869409084320068
    6. 'elem' → logprob: -5.244409084320068
    7. 'b' → logprob: -5.619409084320068
    8. ' elements' → logprob: -6.244409084320068
    9. 'tokens' → logprob: -6.369409084320068
    10. ')' → logprob: -6.494409084320068

Token 1189: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.00013893934374209493
    2. 'elements' → logprob: -9.125139236450195
    3. ' éléments' → logprob: -11.000139236450195
    4. 'él' → logprob: -12.000139236450195
    5. '#' → logprob: -13.250139236450195
    6. 'é' → logprob: -13.375139236450195
    7. 'el' → logprob: -13.625139236450195
    8. 'elem' → logprob: -14.000139236450195
    9. 'q' → logprob: -14.250139236450195
    10. 'B' → logprob: -15.375139236450195

Token 1190: 'ments' (ID: 1626)
  Prédit: 'lé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lé' → logprob: -0.4773828387260437
    2. 'lements' → logprob: -0.9773828387260437
    3. 'ments' → logprob: -6.227382659912109
    4. 'élé' → logprob: -7.477382659912109
    5. 'l' → logprob: -7.977382659912109
    6. 'lems' → logprob: -8.47738265991211
    7. 'lem' → logprob: -9.35238265991211
    8. 'lés' → logprob: -10.22738265991211
    9. 'elements' → logprob: -10.60238265991211
    10. 'éments' → logprob: -10.60238265991211

Token 1191: ' à' (ID: 1221)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25963807106018066
    2. '=(' → logprob: -1.8846380710601807
    3. '=len' → logprob: -3.1346380710601807
    4. '#' → logprob: -4.009637832641602
    5. '=B' → logprob: -5.009637832641602
    6. '=sum' → logprob: -5.384637832641602
    7. ' =' → logprob: -6.634637832641602
    8. '=#' → logprob: -7.634637832641602
    9. '=q' → logprob: -8.009637832641602
    10. '       ' → logprob: -8.009637832641602

Token 1192: ' ign' (ID: 8769)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.33768177032470703
    2. 'q' → logprob: -1.462681770324707
    3. 'len' → logprob: -3.462681770324707
    4. '(len' → logprob: -4.712681770324707
    5. '(q' → logprob: -5.212681770324707
    6. 'pop' → logprob: -5.962681770324707
    7. '(ignore' → logprob: -5.962681770324707
    8. 'remove' → logprob: -6.462681770324707
    9. ' ignore' → logprob: -7.087681770324707
    10. 'sum' → logprob: -7.587681770324707

Token 1193: 'orer' (ID: 13634)
  Prédit: 'ignore'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ignore' → logprob: -0.4805058240890503
    2. 'iger' → logprob: -1.9805058240890503
    3. 'orer' → logprob: -3.35550594329834
    4. 'gnore' → logprob: -3.35550594329834
    5. 'p' → logprob: -3.85550594329834
    6. 'g' → logprob: -4.23050594329834
    7. 'oter' → logprob: -4.60550594329834
    8. 'ter' → logprob: -4.73050594329834
    9. 'oger' → logprob: -4.73050594329834
    10. 'uire' → logprob: -4.98050594329834

Token 1194: ' du' (ID: 1462)
  Prédit: '=B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=B' → logprob: -0.7717959880828857
    2. '       ' → logprob: -1.5217959880828857
    3. 'B' → logprob: -2.1467959880828857
    4. '=' → logprob: -2.2717959880828857
    5. '#' → logprob: -3.1467959880828857
    6. '=sum' → logprob: -3.7717959880828857
    7. '
' → logprob: -4.146796226501465
    8. ' =' → logprob: -5.396796226501465
    9. '   ' → logprob: -6.271796226501465
    10. '=len' → logprob: -6.521796226501465

Token 1195: ' haut' (ID: 28223)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.033901557326316833
    2. 'len' → logprob: -3.4089014530181885
    3. ' B' → logprob: -8.65890121459961
    4. '(len' → logprob: -9.78390121459961
    5. ' len' → logprob: -10.90890121459961
    6. '[len' → logprob: -12.40890121459961
    7. '(B' → logprob: -12.90890121459961
    8. 'sorted' → logprob: -15.78390121459961
    9. '(' → logprob: -16.03390121459961
    10. '```' → logprob: -16.40890121459961

Token 1196: ' de' (ID: 334)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.094781517982483
    2. '(B' → logprob: -1.094781517982483
    3. 'B' → logprob: -1.594781517982483
    4. '=B' → logprob: -2.4697813987731934
    5. ' =' → logprob: -3.9697813987731934
    6. '       ' → logprob: -4.219781398773193
    7. '
' → logprob: -5.469781398773193
    8. '   ' → logprob: -5.969781398773193
    9. '#' → logprob: -7.094781398773193
    10. '=(' → logprob: -7.969781398773193

Token 1197: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -5.796184723294573e-06
    2. ' B' → logprob: -12.125005722045898
    3. 'A' → logprob: -15.125005722045898
    4. '	B' → logprob: -18.7500057220459
    5. '(B' → logprob: -19.1250057220459
    6. 'Ｂ' → logprob: -20.5000057220459
    7. ' ' → logprob: -21.1250057220459
    8. '   ' → logprob: -21.2500057220459
    9. '  ' → logprob: -22.0000057220459
    10. '[B' → logprob: -22.1250057220459

Token 1198: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2363571971654892
    2. '#' → logprob: -1.9863572120666504
    3. 'B' → logprob: -2.7363572120666504
    4. '   ' → logprob: -5.48635721206665
    5. '
' → logprob: -5.98635721206665
    6. ' B' → logprob: -6.98635721206665
    7. 'b' → logprob: -8.361356735229492
    8. '```' → logprob: -8.861356735229492
    9. '        
' → logprob: -9.611356735229492
    10. 'sum' → logprob: -9.611356735229492

Token 1199: ' équilibr' (ID: 163890)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.062204744666814804
    2. '(q' → logprob: -3.3122048377990723
    3. 'len' → logprob: -4.687204837799072
    4. 'sum' → logprob: -5.187204837799072
    5. '(len' → logprob: -5.312204837799072
    6. ' (' → logprob: -6.562204837799072
    7. ' q' → logprob: -6.687204837799072
    8. '(' → logprob: -7.562204837799072
    9. '(sum' → logprob: -7.812204837799072
    10. '(B' → logprob: -8.187204360961914

Token 1200: 'er' (ID: 259)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.7121731638908386
    2. '(B' → logprob: -0.9621731638908386
    3. 'er' → logprob: -2.7121732234954834
    4. '()' → logprob: -3.5871732234954834
    5. 'len' → logprob: -4.462172985076904
    6. ' B' → logprob: -4.962172985076904
    7. '=B' → logprob: -5.587172985076904
    8. '-B' → logprob: -6.212172985076904
    9. '   ' → logprob: -6.587172985076904
    10. '(len' → logprob: -6.712172985076904

Token 1201: '
' (ID: 198)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.037366125732660294
    2. '#' → logprob: -3.6623661518096924
    3. 'sum' → logprob: -5.162365913391113
    4. '       ' → logprob: -5.912365913391113
    5. 'q' → logprob: -6.537365913391113
    6. ' B' → logprob: -8.162365913391113
    7. '```' → logprob: -8.412365913391113
    8. '   ' → logprob: -9.037365913391113
    9. '
' → logprob: -9.287365913391113
    10. 'b' → logprob: -9.287365913391113

Token 1202: '       ' (ID: 309)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0012595182051882148
    2. '       ' → logprob: -7.1262593269348145
    3. 'sum' → logprob: -8.001259803771973
    4. '```' → logprob: -9.251259803771973
    5. '``' → logprob: -11.626259803771973
    6. '   ' → logprob: -12.001259803771973
    7. 's' → logprob: -13.001259803771973
    8. ' d' → logprob: -13.251259803771973
    9. '
' → logprob: -14.001259803771973
    10. '           ' → logprob: -14.251259803771973

Token 1203: ' #' (ID: 1069)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.9623810658231378e-05
    2. '       ' → logprob: -10.875020027160645
    3. ' d' → logprob: -14.875020027160645
    4. '```' → logprob: -15.625020027160645
    5. '   ' → logprob: -17.000019073486328
    6. '	d' → logprob: -17.500019073486328
    7. '``' → logprob: -17.875019073486328
    8. 'e' → logprob: -18.500019073486328
    9. 'c' → logprob: -19.000019073486328
    10. '
' → logprob: -19.250019073486328

Token 1204: ' On' (ID: 2160)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.2524021157296374e-05
    2. '       ' → logprob: -9.875052452087402
    3. '   ' → logprob: -14.375052452087402
    4. ' d' → logprob: -15.000052452087402
    5. '```' → logprob: -16.50005340576172
    6. 'e' → logprob: -17.00005340576172
    7. '	d' → logprob: -17.37505340576172
    8. 'c' → logprob: -17.37505340576172
    9. '           ' → logprob: -17.50005340576172
    10. '
' → logprob: -18.50005340576172

Token 1205: ' somme' (ID: 64484)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0160506758838892
    2. 'sum' → logprob: -4.141050815582275
    3. ' d' → logprob: -11.891050338745117
    4. '=sum' → logprob: -12.891050338745117
    5. '
' → logprob: -13.391050338745117
    6. 'summ' → logprob: -13.516050338745117
    7. ' sum' → logprob: -13.766050338745117
    8. 's' → logprob: -14.141050338745117
    9. 'c' → logprob: -14.391050338745117
    10. '   ' → logprob: -14.891050338745117

Token 1206: ' les' (ID: 1341)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.6383265852928162
    2. 'B' → logprob: -1.138326644897461
    3. '(B' → logprob: -1.888326644897461
    4. '(sum' → logprob: -9.513326644897461
    5. ' sum' → logprob: -10.513326644897461
    6. ' B' → logprob: -10.513326644897461
    7. '=sum' → logprob: -11.513326644897461
    8. 'b' → logprob: -13.388326644897461
    9. '=B' → logprob: -13.888326644897461
    10. 'A' → logprob: -14.263326644897461

Token 1207: ' plus' (ID: 2932)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.00025764419115148485
    2. '(B' → logprob: -8.50025749206543
    3. ' B' → logprob: -10.62525749206543
    4. 'min' → logprob: -11.12525749206543
    5. 'small' → logprob: -12.25025749206543
    6. 'sorted' → logprob: -12.37525749206543
    7. 'sm' → logprob: -12.37525749206543
    8. 'sum' → logprob: -13.50025749206543
    9. '
' → logprob: -16.25025749206543
    10. '[B' → logprob: -16.25025749206543

Token 1208: ' petits' (ID: 38141)
  Prédit: 'small'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'small' → logprob: -0.004201394040137529
    2. 'B' → logprob: -5.504201412200928
    3. '小' → logprob: -9.12920093536377
    4. ' B' → logprob: -12.75420093536377
    5. '(B' → logprob: -13.25420093536377
    6. 'pet' → logprob: -13.25420093536377
    7. 'sm' → logprob: -13.37920093536377
    8. '_small' → logprob: -13.50420093536377
    9. ' petits' → logprob: -13.50420093536377
    10. ' small' → logprob: -13.62920093536377

Token 1209: ' éléments' (ID: 57375)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0009114635176956654
    2. 'B' → logprob: -7.000911235809326
    3. '(' → logprob: -17.750911712646484
    4. 'elements' → logprob: -18.125911712646484
    5. ' B' → logprob: -18.500911712646484
    6. '```' → logprob: -19.000911712646484
    7. '(A' → logprob: -19.875911712646484
    8. '	B' → logprob: -20.000911712646484
    9. '(
' → logprob: -20.125911712646484
    10. 'b' → logprob: -20.750911712646484

Token 1210: ' de' (ID: 334)
  Prédit: '(B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(B' → logprob: -0.0008844300173223019
    2. 'B' → logprob: -7.250884532928467
    3. 'of' → logprob: -9.625884056091309
    4. '=B' → logprob: -9.875884056091309
    5. '=' → logprob: -10.125884056091309
    6. '```' → logprob: -11.750884056091309
    7. ' of' → logprob: -13.875884056091309
    8. 'sum' → logprob: -14.000884056091309
    9. '[B' → logprob: -14.250884056091309
    10. '	B' → logprob: -14.500884056091309

Token 1211: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.004078401252627373
    2. ' B' → logprob: -5.504078388214111
    3. '(B' → logprob: -17.254077911376953
    4. 'b' → logprob: -19.254077911376953
    5. 'A' → logprob: -19.254077911376953
    6. '=B' → logprob: -19.379077911376953
    7. '	B' → logprob: -19.629077911376953
    8. '[B' → logprob: -19.879077911376953
    9. 'add' → logprob: -20.254077911376953
    10. '>B' → logprob: -20.504077911376953

Token 1212: '
' (ID: 198)
  Prédit: '=sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sum' → logprob: -0.0063554467633366585
    2. 'd' → logprob: -5.256355285644531
    3. ' =' → logprob: -7.131355285644531
    4. '       ' → logprob: -8.631355285644531
    5. '=' → logprob: -9.506355285644531
    6. 'sum' → logprob: -10.131355285644531
    7. '=d' → logprob: -11.256355285644531
    8. '(sum' → logprob: -12.131355285644531
    9. '        ' → logprob: -13.006355285644531
    10. '   ' → logprob: -13.506355285644531

Token 1213: '       ' (ID: 309)
  Prédit: '=sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=sum' → logprob: -0.24576161801815033
    2. '=' → logprob: -1.7457616329193115
    3. '=B' → logprob: -3.2457616329193115
    4. 'sum' → logprob: -5.620761394500732
    5. 'B' → logprob: -7.620761394500732
    6. ' =' → logprob: -8.49576187133789
    7. '(sum' → logprob: -9.74576187133789
    8. '(B' → logprob: -9.99576187133789
    9. ',sum' → logprob: -12.12076187133789
    10. ' sum' → logprob: -12.49576187133789

Token 1214: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.011230665259063244
    2. 'sum' → logprob: -4.51123046875
    3. '       ' → logprob: -8.63623046875
    4. ' d' → logprob: -12.76123046875
    5. ' sum' → logprob: -14.26123046875
    6. '   ' → logprob: -14.38623046875
    7. '=sum' → logprob: -14.76123046875
    8. '        ' → logprob: -15.26123046875
    9. '           ' → logprob: -15.38623046875
    10. '```' → logprob: -16.26123046875

Token 1215: '=sum' (ID: 174693)
  Prédit: '=sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=sum' → logprob: -3.8889261304575484e-06
    2. 'sum' → logprob: -12.500003814697266
    3. '=' → logprob: -16.000003814697266
    4. ' =' → logprob: -18.125003814697266
    5. '=s' → logprob: -19.375003814697266
    6. '=int' → logprob: -20.625003814697266
    7. '+=' → logprob: -20.750003814697266
    8. '=d' → logprob: -21.375003814697266
    9. '=sys' → logprob: -21.500003814697266
    10. '=
' → logprob: -21.625003814697266

Token 1216: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.961759259458631e-06
    2. 'B' → logprob: -12.250004768371582
    3. '(' → logprob: -16.6250057220459
    4. '[B' → logprob: -18.5000057220459
    5. 'd' → logprob: -19.2500057220459
    6. '(A' → logprob: -20.7500057220459
    7. ' B' → logprob: -21.2500057220459
    8. '	B' → logprob: -21.5000057220459
    9. '(b' → logprob: -21.6250057220459
    10. ' (' → logprob: -21.6250057220459

Token 1217: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.0009132515988312662
    2. '[:-' → logprob: -7.000913143157959
    3. '[len' → logprob: -13.375913619995117
    4. '[' → logprob: -16.000913619995117
    5. ' [:' → logprob: -16.750913619995117
    6. '[:]' → logprob: -16.875913619995117
    7. ':' → logprob: -18.375913619995117
    8. '[-' → logprob: -18.500913619995117
    9. '
' → logprob: -19.250913619995117
    10. '[B' → logprob: -20.000913619995117

Token 1218: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.2664456789934775e-06
    2. '(len' → logprob: -14.000000953674316
    3. ' len' → logprob: -15.000000953674316
    4. '[len' → logprob: -21.000001907348633
    5. ',len' → logprob: -22.000001907348633
    6. '   ' → logprob: -22.125001907348633
    7. '	len' → logprob: -22.250001907348633
    8. 'max' → logprob: -23.625001907348633
    9. '=len' → logprob: -24.000001907348633
    10. '.len' → logprob: -24.625001907348633

Token 1219: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.620622712536715e-05
    2. 'B' → logprob: -10.000045776367188
    3. '(' → logprob: -14.250045776367188
    4. '(A' → logprob: -16.250045776367188
    5. ' (' → logprob: -16.625045776367188
    6. '[B' → logprob: -17.750045776367188
    7. '```' → logprob: -18.375045776367188
    8. '(Q' → logprob: -18.750045776367188
    9. ')' → logprob: -19.000045776367188
    10. '(
' → logprob: -19.625045776367188

Token 1220: ')-' (ID: 14080)
  Prédit: ')-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')-' → logprob: -0.22630636394023895
    2. '-q' → logprob: -1.7263063192367554
    3. ']-' → logprob: -4.976306438446045
    4. '(B' → logprob: -5.226306438446045
    5. '()-' → logprob: -5.476306438446045
    6. '(q' → logprob: -6.101306438446045
    7. ')' → logprob: -6.226306438446045
    8. '-' → logprob: -6.476306438446045
    9. ' -' → logprob: -7.101306438446045
    10. '   ' → logprob: -8.351305961608887

Token 1221: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: 0.0
    2. ' q' → logprob: -17.125
    3. '(q' → logprob: -21.625
    4. '	q' → logprob: -21.75
    5. '```' → logprob: -22.25
    6. '   ' → logprob: -22.375
    7. 'B' → logprob: -22.875
    8. '
' → logprob: -23.375
    9. '_q' → logprob: -23.75
    10. '(' → logprob: -24.0

Token 1222: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.6949261426925659
    2. '])
' → logprob: -0.6949261426925659
    3. ')
' → logprob: -6.8199262619018555
    4. ')' → logprob: -7.3199262619018555
    5. '])
' → logprob: -10.819926261901855
    6. ')])' → logprob: -14.194926261901855
    7. '])

' → logprob: -14.319926261901855
    8. ' ])
' → logprob: -14.569926261901855
    9. ')
' → logprob: -14.819926261901855
    10. ' ])' → logprob: -15.069926261901855

Token 1223: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.037940613925457
    2. ' if' → logprob: -3.912940502166748
    3. '       ' → logprob: -4.287940502166748
    4. '   ' → logprob: -6.162940502166748
    5. '```' → logprob: -6.662940502166748
    6. '           ' → logprob: -10.162940979003906
    7. '``' → logprob: -10.662940979003906
    8. '<|end|>' → logprob: -10.787940979003906
    9. 'If' → logprob: -10.912940979003906
    10. '	if' → logprob: -11.412940979003906

Token 1224: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.1928003813372925e-05
    2. '       ' → logprob: -10.000051498413086
    3. ' if' → logprob: -12.000051498413086
    4. '```' → logprob: -15.375051498413086
    5. '   ' → logprob: -17.375051498413086
    6. '	if' → logprob: -18.375051498413086
    7. 'If' → logprob: -19.000051498413086
    8. '           ' → logprob: -19.250051498413086
    9. '``' → logprob: -19.875051498413086
    10. ';if' → logprob: -21.250051498413086

Token 1225: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0031777136027812958
    2. ' d' → logprob: -5.753177642822266
    3. '(d' → logprob: -19.753177642822266
    4. '   ' → logprob: -20.628177642822266
    5. '```' → logprob: -21.003177642822266
    6. '	d' → logprob: -21.128177642822266
    7. ' ' → logprob: -21.628177642822266
    8. ' ' → logprob: -21.628177642822266
    9. 'K' → logprob: -22.003177642822266
    10. '  ' → logprob: -22.378177642822266

Token 1226: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.00020377879263833165
    2. ' <=' → logprob: -8.500204086303711
    3. ')<=' → logprob: -15.125204086303711
    4. ']<=' → logprob: -16.75020408630371
    5. 'd' → logprob: -18.37520408630371
    6. '≤' → logprob: -18.87520408630371
    7. '```' → logprob: -19.12520408630371
    8. '   ' → logprob: -21.25020408630371
    9. '==' → logprob: -22.37520408630371
    10. '>=' → logprob: -22.50020408630371

Token 1227: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -3.128163257315464e-07
    2. ' K' → logprob: -15.375
    3. '	K' → logprob: -21.875
    4. '   ' → logprob: -22.25
    5. 'Ｋ' → logprob: -23.125
    6. '
' → logprob: -23.375
    7. '>K' → logprob: -24.5
    8. '<K' → logprob: -24.625
    9. '       ' → logprob: -24.625
    10. ' ' → logprob: -24.875

Token 1228: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036087436601519585
    2. ':
' → logprob: -5.628608703613281
    3. '   ' → logprob: -13.003608703613281
    4. '           ' → logprob: -13.128608703613281
    5. ' :' → logprob: -13.628608703613281
    6. '       ' → logprob: -13.753608703613281
    7. '):' → logprob: -14.628608703613281
    8. '==' → logprob: -15.128608703613281
    9. 'print' → logprob: -15.253608703613281
    10. '():' → logprob: -15.503608703613281

Token 1229: '          ' (ID: 3550)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3531949520111084
    2. 'print' → logprob: -1.9781949520111084
    3. '       ' → logprob: -2.4781949520111084
    4. ' print' → logprob: -2.6031949520111084
    5. '   ' → logprob: -7.1031951904296875
    6. '```' → logprob: -8.228195190429688
    7. '          ' → logprob: -9.478195190429688
    8. '         ' → logprob: -10.853195190429688
    9. '        ' → logprob: -10.853195190429688
    10. '               ' → logprob: -10.978195190429688

Token 1230: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.21584361791610718
    2. '           ' → logprob: -1.965843677520752
    3. ' print' → logprob: -2.965843677520752
    4. '       ' → logprob: -6.215843677520752
    5. '```' → logprob: -8.215843200683594
    6. '   ' → logprob: -8.340843200683594
    7. '
' → logprob: -10.215843200683594
    8. '          ' → logprob: -11.465843200683594
    9. ' ' → logprob: -12.215843200683594
    10. '``' → logprob: -12.465843200683594

Token 1231: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03422335907816887
    2. ' print' → logprob: -3.7842233180999756
    3. '           ' → logprob: -4.534223556518555
    4. '       ' → logprob: -9.034223556518555
    5. '   ' → logprob: -9.784223556518555
    6. ' ' → logprob: -13.284223556518555
    7. '          ' → logprob: -13.409223556518555
    8. '```' → logprob: -13.909223556518555
    9. '         ' → logprob: -14.159223556518555
    10. '    ' → logprob: -14.659223556518555

Token 1232: ' le' (ID: 505)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015024791937321424
    2. ' d' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.626502990722656
    4. '(d' → logprob: -17.876502990722656
    5. '       ' → logprob: -18.501502990722656
    6. 'K' → logprob: -18.501502990722656
    7. 'print' → logprob: -18.626502990722656
    8. '	d' → logprob: -18.751502990722656
    9. '           ' → logprob: -19.001502990722656
    10. ' ' → logprob: -19.251502990722656

Token 1233: ' coût' (ID: 73109)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.46767938137054443
    2. 'cost' → logprob: -1.5926793813705444
    3. 'co' → logprob: -1.9676793813705444
    4. 'cout' → logprob: -3.967679500579834
    5. 'c' → logprob: -4.842679500579834
    6. ' d' → logprob: -6.842679500579834
    7. 'print' → logprob: -7.092679500579834
    8. ' coût' → logprob: -7.217679500579834
    9. ' cost' → logprob: -7.842679500579834
    10. ' ' → logprob: -8.342679023742676

Token 1234: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008275661617517471
    2. '           ' → logprob: -5.383275508880615
    3. ':
' → logprob: -5.633275508880615
    4. 'print' → logprob: -10.758275985717773
    5. ' :' → logprob: -11.008275985717773
    6. '   ' → logprob: -11.383275985717773
    7. '       ' → logprob: -12.133275985717773
    8. '==' → logprob: -12.258275985717773
    9. '          ' → logprob: -12.383275985717773
    10. '<=' → logprob: -13.383275985717773

Token 1235: ' dépasse' (ID: 165701)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5792006850242615
    2. '<=' → logprob: -0.9542006850242615
    3. ' <=' → logprob: -3.8292007446289062
    4. ' print' → logprob: -3.9542007446289062
    5. '   ' → logprob: -4.954200744628906
    6. '           ' → logprob: -6.329200744628906
    7. 'd' → logprob: -6.454200744628906
    8. 'le' → logprob: -7.579200744628906
    9. '       ' → logprob: -7.704200744628906
    10. 's' → logprob: -7.704200744628906

Token 1236: ' pas' (ID: 2173)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.08549556136131287
    2. 'pas' → logprob: -3.0854954719543457
    3. 'not' → logprob: -3.5854954719543457
    4. '           ' → logprob: -5.335495471954346
    5. '          ' → logprob: -6.210495471954346
    6. '       ' → logprob: -7.835495471954346
    7. ' pas' → logprob: -7.960495471954346
    8. ' K' → logprob: -8.210495948791504
    9. '         ' → logprob: -8.710495948791504
    10. ' not' → logprob: -8.835495948791504

Token 1237: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -4.263011578586884e-05
    2. '           ' → logprob: -10.875042915344238
    3. ' K' → logprob: -11.250042915344238
    4. '       ' → logprob: -12.000042915344238
    5. '   ' → logprob: -12.375042915344238
    6. '          ' → logprob: -16.000041961669922
    7. '               ' → logprob: -16.625041961669922
    8. '         ' → logprob: -17.125041961669922
    9. '  ' → logprob: -17.500041961669922
    10. ' ' → logprob: -17.875041961669922

Token 1238: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26458218693733215
    2. ':
' → logprob: -1.8895821571350098
    3. ':' → logprob: -2.5145821571350098
    4. '       ' → logprob: -8.139582633972168
    5. '          ' → logprob: -9.889582633972168
    6. '               ' → logprob: -10.139582633972168
    7. '```' → logprob: -11.014582633972168
    8. '):
' → logprob: -11.389582633972168
    9. 'print' → logprob: -11.639582633972168
    10. '   ' → logprob: -12.264582633972168

Token 1239: ' c' (ID: 274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.8219583075260743e-05
    2. 'print' → logprob: -10.250038146972656
    3. '   ' → logprob: -13.875038146972656
    4. '       ' → logprob: -14.125038146972656
    5. '          ' → logprob: -14.250038146972656
    6. '               ' → logprob: -15.000038146972656
    7. '         ' → logprob: -16.250038146972656
    8. ' print' → logprob: -16.500038146972656
    9. ' ' → logprob: -18.250038146972656
    10. '		' → logprob: -18.625038146972656

Token 1240: ''est' (ID: 6616)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016956351697444916
    2. 'print' → logprob: -5.266956329345703
    3. ':
' → logprob: -5.641956329345703
    4. '       ' → logprob: -5.891956329345703
    5. '          ' → logprob: -6.141956329345703
    6. ':' → logprob: -6.266956329345703
    7. ' print' → logprob: -7.266956329345703
    8. '         ' → logprob: -8.266956329345703
    9. '        ' → logprob: -9.391956329345703
    10. '   ' → logprob: -9.766956329345703

Token 1241: ' valable' (ID: 198296)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.5815654993057251
    2. 'valid' → logprob: -0.8315654993057251
    3. ' valide' → logprob: -6.2065653800964355
    4. 'print' → logprob: -6.3315653800964355
    5. '           ' → logprob: -6.4565653800964355
    6. '       ' → logprob: -9.331565856933594
    7. ' valid' → logprob: -9.706565856933594
    8. 'possible' → logprob: -10.331565856933594
    9. '   ' → logprob: -10.956565856933594
    10. '```' → logprob: -11.456565856933594

Token 1242: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.170270353322849e-05
    2. 'print' → logprob: -9.875061988830566
    3. '       ' → logprob: -12.125061988830566
    4. '               ' → logprob: -13.125061988830566
    5. '          ' → logprob: -13.500061988830566
    6. '         ' → logprob: -14.625061988830566
    7. '   ' → logprob: -15.125061988830566
    8. '```' → logprob: -15.250061988830566
    9. ' print' → logprob: -16.50006103515625
    10. '		' → logprob: -16.50006103515625

Token 1243: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015824666479602456
    2. 'print' → logprob: -8.875158309936523
    3. '       ' → logprob: -11.000158309936523
    4. '   ' → logprob: -14.375158309936523
    5. '```' → logprob: -14.875158309936523
    6. '               ' → logprob: -15.250158309936523
    7. '          ' → logprob: -15.375158309936523
    8. '         ' → logprob: -16.000158309936523
    9. '	       ' → logprob: -16.625158309936523
    10. '		' → logprob: -16.750158309936523

Token 1244: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.2664456789934775e-06
    2. '           ' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.000000953674316
    4. '       ' → logprob: -17.750001907348633
    5. '   ' → logprob: -21.750001907348633
    6. '	print' → logprob: -22.750001907348633
    7. '```' → logprob: -22.875001907348633
    8. '.print' → logprob: -24.125001907348633
    9. '          ' → logprob: -25.375001907348633
    10. '               ' → logprob: -25.750001907348633

Token 1245: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -1.676292231422849e-05
    2. 's' → logprob: -11.000017166137695
    3. '(' → logprob: -20.625017166137695
    4. ' (' → logprob: -21.750017166137695
    5. '(
' → logprob: -22.125017166137695
    6. 'print' → logprob: -22.250017166137695
    7. 'a' → logprob: -22.500017166137695
    8. '```' → logprob: -23.750017166137695
    9. '(i' → logprob: -24.500017166137695
    10. '   ' → logprob: -24.625017166137695

Token 1246: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741173982620239
    2. ')' → logprob: -0.9741173982620239
    3. ')
' → logprob: -10.724117279052734
    4. '           ' → logprob: -11.474117279052734
    5. '   ' → logprob: -11.974117279052734
    6. '()' → logprob: -14.349117279052734
    7. '       ' → logprob: -14.849117279052734
    8. ')`
' → logprob: -16.099117279052734
    9. '),' → logprob: -16.349117279052734
    10. ' )' → logprob: -16.349117279052734

Token 1247: '      ' (ID: 1699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000730185944121331
    2. 'exit' → logprob: -7.250730037689209
    3. '(exit' → logprob: -12.000730514526367
    4. ' exit' → logprob: -12.250730514526367
    5. '   ' → logprob: -12.250730514526367
    6. '       ' → logprob: -13.750730514526367
    7. '          ' → logprob: -14.125730514526367
    8. '.exit' → logprob: -14.125730514526367
    9. '	exit' → logprob: -14.250730514526367
    10. '
' → logprob: -14.750730514526367

Token 1248: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.029773633927106857
    2. 'exit' → logprob: -3.529773712158203
    3. '   ' → logprob: -11.529773712158203
    4. ' exit' → logprob: -11.779773712158203
    5. '       ' → logprob: -12.904773712158203
    6. '(exit' → logprob: -13.904773712158203
    7. '          ' → logprob: -14.529773712158203
    8. '	exit' → logprob: -14.654773712158203
    9. '               ' → logprob: -14.654773712158203
    10. '.exit' → logprob: -15.029773712158203

Token 1249: ' On' (ID: 2160)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.0019317318219691515
    2. '           ' → logprob: -6.251931667327881
    3. ' exit' → logprob: -13.251932144165039
    4. '   ' → logprob: -14.126932144165039
    5. '       ' → logprob: -14.876932144165039
    6. '	exit' → logprob: -15.626932144165039
    7. '.exit' → logprob: -17.62693214416504
    8. '(exit' → logprob: -18.00193214416504
    9. '          ' → logprob: -18.50193214416504
    10. '_exit' → logprob: -18.62693214416504

Token 1250: ' affiche' (ID: 127479)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exit' → logprob: -0.47495079040527344
    2. '           ' → logprob: -0.9749507904052734
    3. ' exit' → logprob: -7.724950790405273
    4. '.exit' → logprob: -8.224950790405273
    5. '   ' → logprob: -9.474950790405273
    6. '	exit' → logprob: -10.224950790405273
    7. '(exit' → logprob: -10.599950790405273
    8. '       ' → logprob: -11.224950790405273
    9. '               ' → logprob: -12.599950790405273
    10. '
' → logprob: -12.849950790405273

Token 1251: ' s' (ID: 265)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.001170225441455841
    2. 's' → logprob: -6.7511701583862305
    3. '```' → logprob: -18.501171112060547
    4. '   ' → logprob: -18.876171112060547
    5. ' (' → logprob: -19.126171112060547
    6. '(' → logprob: -19.501171112060547
    7. '       ' → logprob: -20.251171112060547
    8. 'd' → logprob: -20.501171112060547
    9. '(i' → logprob: -20.751171112060547
    10. '           ' → logprob: -21.126171112060547

Token 1252: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.128163257315464e-07
    2. 'exit' → logprob: -16.375
    3. '               ' → logprob: -16.875
    4. '   ' → logprob: -17.0
    5. '       ' → logprob: -17.125
    6. '	       ' → logprob: -17.75
    7. '          ' → logprob: -18.375
    8. '```' → logprob: -18.375
    9. '		' → logprob: -18.5
    10. '	   ' → logprob: -20.25

Token 1253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.895480277715251e-06
    2. 'exit' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.250008583068848
    4. '       ' → logprob: -15.125008583068848
    5. '               ' → logprob: -17.375009536743164
    6. '	       ' → logprob: -17.500009536743164
    7. '		' → logprob: -18.125009536743164
    8. '          ' → logprob: -18.625009536743164
    9. '```' → logprob: -18.750009536743164
    10. '	   ' → logprob: -19.000009536743164

Token 1254: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.0002624086628202349
    2. '           ' → logprob: -8.250262260437012
    3. ' exit' → logprob: -14.000262260437012
    4. '   ' → logprob: -15.625262260437012
    5. '       ' → logprob: -16.000263214111328
    6. '	exit' → logprob: -17.625263214111328
    7. '.exit' → logprob: -18.750263214111328
    8. '_exit' → logprob: -19.625263214111328
    9. '(exit' → logprob: -20.125263214111328
    10. '               ' → logprob: -20.125263214111328

Token 1255: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.4121114822482923e-06
    2. '()
' → logprob: -13.250003814697266
    3. '()>' → logprob: -15.000003814697266
    4. '(' → logprob: -15.250003814697266
    5. '()\' → logprob: -15.375003814697266
    6. '()]' → logprob: -15.625003814697266
    7. '()`' → logprob: -15.625003814697266
    8. '()

' → logprob: -16.750003814697266
    9. '()<' → logprob: -16.875003814697266
    10. '()">' → logprob: -16.875003814697266

Token 1256: '        ' (ID: 269)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00035846480750478804
    2. '#' → logprob: -8.875358581542969
    3. '0' → logprob: -8.875358581542969
    4. '<|end|>' → logprob: -10.250358581542969
    5. '```' → logprob: -10.375358581542969
    6. '#print' → logprob: -11.750358581542969
    7. ' print' → logprob: -12.750358581542969
    8. '``' → logprob: -15.125358581542969
    9. 'pass' → logprob: -15.625358581542969
    10. '-print' → logprob: -15.750358581542969

Token 1257: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31144392490386963
    2. '<|end|>' → logprob: -1.6864439249038696
    3. '#' (adapté à ' #') → logprob: -2.81144380569458
    4. ')' → logprob: -4.31144380569458
    5. '```' → logprob: -4.93644380569458
    6. '#print' → logprob: -7.68644380569458
    7. '
' → logprob: -8.186444282531738
    8. '0' → logprob: -8.311444282531738
    9. '()' → logprob: -8.436444282531738
    10. ' print' → logprob: -9.186444282531738

Token 1258: ' Fin' (ID: 7772)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.7400705218315125
    2. '#' → logprob: -1.2400705814361572
    3. 'print' → logprob: -1.4900705814361572
    4. 'continue' → logprob: -5.365070343017578
    5. 'exit' → logprob: -6.615070343017578
    6. '```' → logprob: -6.990070343017578
    7. 'None' → logprob: -7.615070343017578
    8. 'break' → logprob: -8.240070343017578
    9. '0' → logprob: -8.615070343017578
    10. ' pass' → logprob: -9.115070343017578

Token 1259: ' immédi' (ID: 69896)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -2.534558552724775e-05
    2. '(' → logprob: -11.125025749206543
    3. '()
' → logprob: -12.125025749206543
    4. '())' → logprob: -13.125025749206543
    5. '0' → logprob: -14.250025749206543
    6. '()>' → logprob: -14.875025749206543
    7. '()<' → logprob: -15.625025749206543
    8. '()`' → logprob: -15.625025749206543
    9. 'program' → logprob: -15.625025749206543
    10. '()\' → logprob: -15.625025749206543

Token 1260: 'ate' (ID: 379)
  Prédit: 'tion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tion' → logprob: -0.024086296558380127
    2. 'ation' → logprob: -4.6490864753723145
    3. 'nt' → logprob: -5.6490864753723145
    4. 'ction' → logprob: -5.7740864753723145
    5. 'ion' → logprob: -6.5240864753723145
    6. 'on' → logprob: -6.5240864753723145
    7. 'nte' → logprob: -7.2740864753723145
    8. 'te' → logprob: -7.2740864753723145
    9. 'ution' → logprob: -7.6490864753723145
    10. 't' → logprob: -7.6490864753723145

Token 1261: ' du' (ID: 1462)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.319370302458992e-06
    2. '```' → logprob: -13.000005722045898
    3. ' print' → logprob: -13.500005722045898
    4. '#' → logprob: -13.875005722045898
    5. '#print' → logprob: -14.875005722045898
    6. 'pass' → logprob: -16.0000057220459
    7. 'continue' → logprob: -17.0000057220459
    8. '-print' → logprob: -17.5000057220459
    9. '<|end|>' → logprob: -18.2500057220459
    10. ')' → logprob: -18.3750057220459

Token 1262: ' programme' (ID: 18190)
  Prédit: 'program'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'program' → logprob: -0.08511222898960114
    2. 'code' → logprob: -3.0851123332977295
    3. 'programme' → logprob: -3.3351123332977295
    4. 'script' → logprob: -8.585112571716309
    5. ' programme' → logprob: -10.460112571716309
    6. 'prog' → logprob: -11.335112571716309
    7. ' program' → logprob: -11.460112571716309
    8. 'print' → logprob: -11.585112571716309
    9. 'programma' → logprob: -13.085112571716309
    10. 'programm' → logprob: -13.210112571716309


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1260
Tokens correctement prédits (1ère position, stricte): 299
Tokens correctement prédits (1ère position, avec adaptation): 324
Tokens correctement prédits (top 10): 686
Précision stricte (1ère position): 23.73%
Précision adaptée (1ère position): 25.71%
Précision (top 10): 54.44%
================================================================================
