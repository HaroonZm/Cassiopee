================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:19:36
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
dic = {}

def rec(d, pre, acc):
    if d == 1:
        if 1 <= pre <= 8:
            return [acc + c for c in map(str, [pre - 1, pre, pre + 1])]
        elif pre == 9:
            return [acc + c for c in ["8", "9"]]
        else:
            return [acc + c for c in ["0", "1"]]
    ans = []
    for x in range(max(0, pre - 1), min(pre + 2, 10)):
        ans += rec(d - 1, x, acc + str(x))
    return ans

K = int(input())
ls = [1, 2, 3, 4, 5, 6, 7, 8, 9]
d = 2
while len(ls) < K:
    for i in range(1, 10):
        ls += rec(d - 1, i, str(i))
    d += 1
print(ls[K - 1])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'dic' (ID: 62630)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' {}

' (ID: 21724)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2842823565006256
    2. '.' → logprob: -1.4092823266983032
    3. 'd' → logprob: -6.159282207489014
    4. '[d' → logprob: -8.034282684326172
    5. '['' → logprob: -8.909282684326172
    6. 'a' → logprob: -8.909282684326172
    7. '.[' → logprob: -9.034282684326172
    8. '.d' → logprob: -10.409282684326172
    9. '.setdefault' → logprob: -10.409282684326172
    10. '```' → logprob: -10.534282684326172

Token 4: ' rec' (ID: 1369)
  Prédit: ' add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.31072714924812317
    2. ' my' → logprob: -2.435727119445801
    3. ' space' → logprob: -2.560727119445801
    4. ' ' → logprob: -3.435727119445801
    5. ' set' → logprob: -3.935727119445801
    6. ' update' → logprob: -4.560727119445801
    7. ' a' → logprob: -4.560727119445801
    8. ' insert' → logprob: -5.560727119445801
    9. ' get' → logprob: -5.935727119445801
    10. ' function' → logprob: -6.060727119445801

Token 5: '(d' (ID: 2572)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8342777490615845
    2. 'ursive' → logprob: -1.2092777490615845
    3. 'urs' → logprob: -2.709277629852295
    4. 't' → logprob: -2.834277629852295
    5. '(dic' → logprob: -3.584277629852295
    6. 'ursion' → logprob: -3.709277629852295
    7. 'ur' → logprob: -3.834277629852295
    8. '_dic' → logprob: -4.084277629852295
    9. 'd' → logprob: -4.709277629852295
    10. 'dic' → logprob: -5.084277629852295

Token 6: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23235362768173218
    2. 'ic' → logprob: -2.107353687286377
    3. ',' → logprob: -2.732353687286377
    4. 'i' → logprob: -4.607353687286377
    5. ')' → logprob: -5.107353687286377
    6. 'ict' → logprob: -6.857353687286377
    7. 'ictionary' → logprob: -6.982353687286377
    8. 'e' → logprob: -7.482353687286377
    9. ':' → logprob: -7.482353687286377
    10. '[' → logprob: -7.857353687286377

Token 7: ' pre' (ID: 876)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7335599064826965
    2. ' key' → logprob: -0.8585599064826965
    3. ' keys' → logprob: -2.7335598468780518
    4. 'key' → logprob: -4.733560085296631
    5. ' d' → logprob: -5.108560085296631
    6. 'k' → logprob: -5.233560085296631
    7. ' ' → logprob: -5.983560085296631
    8. ' l' → logprob: -6.108560085296631
    9. 'keys' → logprob: -6.483560085296631
    10. ' n' → logprob: -7.108560085296631

Token 8: ',' (ID: 11)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.21985815465450287
    2. 'fix' → logprob: -1.969858169555664
    3. 'd' → logprob: -3.719858169555664
    4. 'x' → logprob: -4.844858169555664
    5. ':' → logprob: -4.969858169555664
    6. '):' → logprob: -5.219858169555664
    7. '_key' → logprob: -5.969858169555664
    8. 's' → logprob: -6.094858169555664
    9. '_fix' → logprob: -6.469858169555664
    10. 'v' → logprob: -6.469858169555664

Token 9: ' acc' (ID: 1259)
  Prédit: ' v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' v' → logprob: -1.429574728012085
    2. ' val' → logprob: -1.429574728012085
    3. ' k' → logprob: -1.929574728012085
    4. ' key' → logprob: -2.429574728012085
    5. ' ' → logprob: -3.304574728012085
    6. ' lst' → logprob: -3.554574728012085
    7. ' l' → logprob: -3.679574728012085
    8. ' n' → logprob: -3.679574728012085
    9. 'v' → logprob: -3.804574728012085
    10. ' dic' → logprob: -4.054574966430664

Token 10: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02560742199420929
    2. ')' → logprob: -4.025607585906982
    3. ',' → logprob: -5.900607585906982
    4. ':' → logprob: -6.025607585906982
    5. ' ):' → logprob: -7.275607585906982
    6. 's' → logprob: -7.400607585906982
    7. '.):' → logprob: -8.150607109069824
    8. '.' → logprob: -8.400607109069824
    9. ':)' → logprob: -9.525607109069824
    10. ''):' → logprob: -9.775607109069824

Token 11: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20751285552978516
    2. ' ' → logprob: -2.332512855529785
    3. ' :' → logprob: -3.207512855529785
    4. '   ' → logprob: -3.957512855529785
    5. '):' → logprob: -4.207512855529785
    6. ')' → logprob: -5.082512855529785
    7. '[' → logprob: -6.082512855529785
    8. ' ):' → logprob: -6.582512855529785
    9. '  ' → logprob: -7.082512855529785
    10. '.' → logprob: -7.082512855529785

Token 12: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1790491342544556
    2. '   ' → logprob: -1.6790491342544556
    3. ':' → logprob: -2.054049015045166
    4. ' if' → logprob: -2.304049015045166
    5. ' for' → logprob: -2.804049015045166
    6. '[' → logprob: -2.929049015045166
    7. 'if' (adapté à ' if') → logprob: -3.179049015045166
    8. ''' → logprob: -3.679049015045166
    9. ' :' → logprob: -3.804049015045166
    10. 'for' → logprob: -4.179049015045166

Token 13: ' d' (ID: 272)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.027536630630493164
    2. ' isinstance' → logprob: -3.902536630630493
    3. 'not' → logprob: -5.902536392211914
    4. ' len' → logprob: -6.652536392211914
    5. ' d' → logprob: -7.027536392211914
    6. ' ' → logprob: -7.027536392211914
    7. ' pre' → logprob: -7.152536392211914
    8. ' type' → logprob: -8.652536392211914
    9. 'len' → logprob: -9.402536392211914
    10. 'pre' → logprob: -10.277536392211914

Token 14: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3509363532066345
    2. '==' → logprob: -2.1009364128112793
    3. '.get' → logprob: -2.6009364128112793
    4. ' ==' → logprob: -3.2259364128112793
    5. '.keys' → logprob: -3.6009364128112793
    6. '):' → logprob: -4.350936412811279
    7. '.setdefault' → logprob: -5.225936412811279
    8. '.' → logprob: -5.350936412811279
    9. '<|end|>' → logprob: -6.475936412811279
    10. ')' → logprob: -6.600936412811279

Token 15: ' ' (ID: 220)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00466923788189888
    2. ' {}' → logprob: -5.379669189453125
    3. 'None' → logprob: -10.254669189453125
    4. ' None' → logprob: -12.129669189453125
    5. '={}' → logprob: -13.254669189453125
    6. '{' → logprob: -13.379669189453125
    7. ' ' → logprob: -14.254669189453125
    8. '[]' → logprob: -14.254669189453125
    9. '():' → logprob: -14.504669189453125
    10. 'True' → logprob: -14.504669189453125

Token 16: '1' (ID: 16)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -1.1160349458805285e-05
    2. 'None' → logprob: -12.250011444091797
    3. '{' → logprob: -13.250011444091797
    4. '():' → logprob: -13.625011444091797
    5. '{}\' → logprob: -14.250011444091797
    6. '[]' → logprob: -14.625011444091797
    7. '0' → logprob: -14.750011444091797
    8. ' {}' → logprob: -15.250011444091797
    9. '{}.' → logprob: -15.250011444091797
    10. 'False' → logprob: -15.500011444091797

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029334835708141327
    2. ' :' → logprob: -6.002933502197266
    3. '==' → logprob: -9.127933502197266
    4. '[' → logprob: -9.377933502197266
    5. ':return' → logprob: -9.627933502197266
    6. ' ==' → logprob: -9.752933502197266
    7. ' and' → logprob: -10.252933502197266
    8. '.' → logprob: -10.377933502197266
    9. ' or' → logprob: -10.877933502197266
    10. '():' → logprob: -11.377933502197266

Token 18: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8335100412368774
    2. '       ' → logprob: -1.5835100412368774
    3. '    ' → logprob: -2.083509922027588
    4. ' :' → logprob: -2.583509922027588
    5. ' ' → logprob: -3.083509922027588
    6. '   ' → logprob: -4.083509922027588
    7. ' None' → logprob: -4.083509922027588
    8. '[' → logprob: -4.333509922027588
    9. '0' → logprob: -4.708509922027588
    10. '(' → logprob: -4.958509922027588

Token 19: ' if' (ID: 538)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3616327941417694
    2. '       ' → logprob: -1.8616328239440918
    3. 'return' → logprob: -2.111632823944092
    4. ' acc' → logprob: -4.236632823944092
    5. '   ' → logprob: -4.986632823944092
    6. 'acc' → logprob: -6.236632823944092
    7. '    ' → logprob: -6.986632823944092
    8. ' ' → logprob: -7.736632823944092
    9. '
' → logprob: -7.861632823944092
    10. '        ' → logprob: -8.486632347106934

Token 20: ' ' (ID: 220)
  Prédit: ' pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.09750533849000931
    2. 'pre' → logprob: -3.2225053310394287
    3. ' acc' → logprob: -3.5975053310394287
    4. ' not' → logprob: -4.222505569458008
    5. ' ' → logprob: -5.597505569458008
    6. ' isinstance' → logprob: -5.722505569458008
    7. 'acc' → logprob: -7.097505569458008
    8. ' None' → logprob: -7.597505569458008
    9. ' d' → logprob: -7.847505569458008
    10. '(pre' → logprob: -8.097505569458008

Token 21: '1' (ID: 16)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.08139602839946747
    2. ' pre' → logprob: -3.0813961029052734
    3. 'acc' → logprob: -4.081396102905273
    4. 'not' → logprob: -5.456396102905273
    5. ' acc' → logprob: -5.956396102905273
    6. ' not' → logprob: -6.206396102905273
    7. 'len' → logprob: -6.206396102905273
    8. 'type' → logprob: -6.956396102905273
    9. 'd' → logprob: -7.331396102905273
    10. 'dic' → logprob: -7.831396102905273

Token 22: ' <=' (ID: 5017)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11634062230587006
    2. ' not' → logprob: -2.6163406372070312
    3. 'in' → logprob: -4.616340637207031
    4. 'not' → logprob: -4.866340637207031
    5. '[' → logprob: -4.991340637207031
    6. ':' → logprob: -5.241340637207031
    7. ' ' → logprob: -5.991340637207031
    8. '==' → logprob: -6.491340637207031
    9. ')' → logprob: -6.991340637207031
    10. ']' → logprob: -8.116340637207031

Token 23: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.537612795829773
    2. 'pre' → logprob: -1.037612795829773
    3. ' acc' → logprob: -3.2876129150390625
    4. 'acc' → logprob: -4.0376129150390625
    5. ' ' → logprob: -6.7876129150390625
    6. ' d' → logprob: -6.7876129150390625
    7. 'ac' → logprob: -7.0376129150390625
    8. ' len' → logprob: -7.2876129150390625
    9. 'd' → logprob: -7.4126129150390625
    10. 'len' → logprob: -7.5376129150390625

Token 24: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.1720470190048218
    2. ' and' → logprob: -1.4220470190048218
    3. '<=' → logprob: -1.4220470190048218
    4. ':' → logprob: -1.7970470190048218
    5. '+' → logprob: -4.047047138214111
    6. 'and' → logprob: -4.797047138214111
    7. ' <' → logprob: -5.672047138214111
    8. '<|end|>' → logprob: -5.797047138214111
    9. '[' → logprob: -6.547047138214111
    10. '<' → logprob: -6.672047138214111

Token 25: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.7087298631668091
    2. '10' → logprob: -1.958729863166809
    3. '3' → logprob: -2.7087297439575195
    4. '1' → logprob: -2.9587297439575195
    5. '5' → logprob: -3.2087297439575195
    6. '100' → logprob: -3.3337297439575195
    7. '2' → logprob: -3.7087297439575195
    8. 'acc' → logprob: -3.7087297439575195
    9. '6' → logprob: -3.8337297439575195
    10. ' ' → logprob: -3.9587297439575195

Token 26: '8' (ID: 23)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.4230225682258606
    2. '10' → logprob: -2.298022508621216
    3. '3' → logprob: -3.048022508621216
    4. '5' → logprob: -3.423022508621216
    5. '6' → logprob: -3.548022508621216
    6. '100' → logprob: -3.548022508621216
    7. 'acc' → logprob: -3.798022508621216
    8. '4' → logprob: -4.423022747039795
    9. '2' → logprob: -4.673022747039795
    10. '1' → logprob: -5.048022747039795

Token 27: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12046798318624496
    2. ' and' → logprob: -2.2454679012298584
    3. ':
' → logprob: -5.1204681396484375
    4. 'and' → logprob: -6.9954681396484375
    5. ' :' → logprob: -7.9954681396484375
    6. '   ' → logprob: -9.370468139648438
    7. ':return' → logprob: -9.620468139648438
    8. ' or' → logprob: -9.870468139648438
    9. '       ' → logprob: -9.870468139648438
    10. ' ' → logprob: -10.620468139648438

Token 28: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5643984079360962
    2. '       ' → logprob: -0.9393984079360962
    3. ' acc' → logprob: -3.8143982887268066
    4. ' return' → logprob: -4.564398288726807
    5. 'return' → logprob: -5.564398288726807
    6. 'acc' → logprob: -6.439398288726807
    7. ':' → logprob: -7.189398288726807
    8. '   ' → logprob: -8.189398765563965
    9. ' and' → logprob: -8.689398765563965
    10. ':return' → logprob: -8.939398765563965

Token 29: ' return' (ID: 622)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.3516460955142975
    2. 'acc' → logprob: -2.1016461849212646
    3. ' return' → logprob: -2.4766461849212646
    4. 'return' (adapté à ' return') → logprob: -2.9766461849212646
    5. ' dic' → logprob: -4.7266459465026855
    6. '       ' → logprob: -4.9766459465026855
    7. '           ' → logprob: -5.1016459465026855
    8. 'd' → logprob: -5.2266459465026855
    9. 'dic' → logprob: -5.2266459465026855
    10. '               ' → logprob: -6.4766459465026855

Token 30: ' [' (ID: 723)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2212483882904053
    2. ' pre' → logprob: -1.5962483882904053
    3. ' acc' → logprob: -1.8462483882904053
    4. ' True' → logprob: -2.2212483882904053
    5. '1' → logprob: -2.9712483882904053
    6. 'True' → logprob: -3.3462483882904053
    7. ' None' → logprob: -3.4712483882904053
    8. 'acc' → logprob: -3.8462483882904053
    9. 'pre' → logprob: -3.9712483882904053
    10. 'None' → logprob: -4.471248626708984

Token 31: 'acc' (ID: 3717)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.2774544656276703
    2. '[' → logprob: -1.7774544954299927
    3. 'acc' → logprob: -3.902454376220703
    4. '(pre' → logprob: -3.902454376220703
    5. '{' → logprob: -4.652454376220703
    6. '(' → logprob: -5.152454376220703
    7. '1' → logprob: -5.527454376220703
    8. ' pre' → logprob: -5.902454376220703
    9. '[]' → logprob: -6.402454376220703
    10. 'str' → logprob: -6.777454376220703

Token 32: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29279422760009766
    2. '+' → logprob: -1.7927942276000977
    3. ']
' → logprob: -2.6677942276000977
    4. ' +' → logprob: -4.292794227600098
    5. ',' → logprob: -6.042794227600098
    6. '+[' → logprob: -7.417794227600098
    7. ']

' → logprob: -8.042794227600098
    8. '*' → logprob: -8.667794227600098
    9. '+]' → logprob: -8.667794227600098
    10. ']
' → logprob: -8.792794227600098

Token 33: ' c' (ID: 274)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9618410468101501
    2. 'str' → logprob: -1.461841106414795
    3. 'pre' → logprob: -1.836841106414795
    4. '1' → logprob: -2.961841106414795
    5. '"' → logprob: -3.461841106414795
    6. 'chr' → logprob: -3.461841106414795
    7. ''' → logprob: -3.711841106414795
    8. ' str' → logprob: -4.211841106414795
    9. '[str' → logprob: -4.461841106414795
    10. ' pre' → logprob: -4.586841106414795

Token 34: ' for' (ID: 395)
  Prédit: 'hr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hr' → logprob: -0.9526880979537964
    2. ']' → logprob: -1.3276880979537964
    3. 'har' → logprob: -1.8276880979537964
    4. 'h' → logprob: -1.8276880979537964
    5. '[' → logprob: -5.327688217163086
    6. '(chr' → logprob: -5.702688217163086
    7. 'hart' → logprob: -6.202688217163086
    8. 'chr' → logprob: -6.327688217163086
    9. '(str' → logprob: -6.702688217163086
    10. '1' → logprob: -6.827688217163086

Token 35: ' c' (ID: 274)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1026898622512817
    2. ''' → logprob: -1.1026898622512817
    3. ' range' → logprob: -2.102689743041992
    4. 'range' → logprob: -2.227689743041992
    5. '['' → logprob: -4.227689743041992
    6. 'str' → logprob: -4.227689743041992
    7. ' '' → logprob: -4.352689743041992
    8. ' "' → logprob: -4.352689743041992
    9. ' str' → logprob: -4.477689743041992
    10. '["' → logprob: -4.602689743041992

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001049242913722992
    2. 'in' → logprob: -7.876049041748047
    3. 'har' → logprob: -8.626049041748047
    4. '  ' → logprob: -9.251049041748047
    5. ' ' → logprob: -9.376049041748047
    6. 's' → logprob: -10.001049041748047
    7. 'range' → logprob: -10.126049041748047
    8. 'on' → logprob: -10.251049041748047
    9. 'h' → logprob: -10.376049041748047
    10. '   ' → logprob: -10.501049041748047

Token 37: ' map' (ID: 4014)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4003684520721436
    2. ' '' → logprob: -1.4003684520721436
    3. '"' → logprob: -1.6503684520721436
    4. ' "' → logprob: -1.7753684520721436
    5. ' range' → logprob: -2.6503684520721436
    6. ' dic' → logprob: -3.9003684520721436
    7. ' ['' → logprob: -4.275368690490723
    8. ' ["' → logprob: -4.900368690490723
    9. ' str' → logprob: -5.275368690490723
    10. '['' → logprob: -5.275368690490723

Token 38: '(str' (ID: 7946)
  Prédit: '(str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.5770266056060791
    2. '(chr' → logprob: -0.8270266056060791
    3. '(' → logprob: -7.4520263671875
    4. 'chr' → logprob: -8.0770263671875
    5. '(ord' → logprob: -8.9520263671875
    6. 'str' → logprob: -9.9520263671875
    7. ' str' → logprob: -11.9520263671875
    8. '_chr' → logprob: -12.9520263671875
    9. ' chr' → logprob: -13.2020263671875
    10. '(hex' → logprob: -13.8270263671875

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0774649977684021
    2. '(range' → logprob: -2.702465057373047
    3. ',d' → logprob: -6.202465057373047
    4. 'range' → logprob: -6.452465057373047
    5. ',list' → logprob: -6.452465057373047
    6. ',[' → logprob: -7.202465057373047
    7. ',(' → logprob: -7.327465057373047
    8. ' ,' → logprob: -8.077465057373047
    9. ',r' → logprob: -8.827465057373047
    10. ' range' → logprob: -9.452465057373047

Token 40: ' [' (ID: 723)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2546456456184387
    2. 'range' → logprob: -1.504645586013794
    3. '[' → logprob: -7.629645824432373
    4. ' dic' → logprob: -7.629645824432373
    5. ' list' → logprob: -7.754645824432373
    6. 'list' → logprob: -8.254645347595215
    7. ' ' → logprob: -8.254645347595215
    8. '(range' → logprob: -8.379645347595215
    9. ' [' → logprob: -8.754645347595215
    10. 'dic' → logprob: -8.754645347595215

Token 41: 'pre' (ID: 2235)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7550870776176453
    2. 'pre' → logprob: -1.13008713722229
    3. ' pre' → logprob: -2.25508713722229
    4. ' ' → logprob: -4.380086898803711
    5. '2' → logprob: -4.630086898803711
    6. '0' → logprob: -4.630086898803711
    7. '9' → logprob: -4.630086898803711
    8. 'd' → logprob: -4.880086898803711
    9. '   ' → logprob: -5.130086898803711
    10. '3' → logprob: -5.255086898803711

Token 42: ' -' (ID: 533)
  Prédit: '])]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.6266102194786072
    2. '])' → logprob: -1.751610279083252
    3. ' -' → logprob: -2.626610279083252
    4. '-' → logprob: -2.751610279083252
    5. ',' → logprob: -2.876610279083252
    6. '+' → logprob: -3.126610279083252
    7. ' +' → logprob: -3.626610279083252
    8. ' ])' → logprob: -4.626610279083252
    9. '*' → logprob: -5.126610279083252
    10. '])]
' → logprob: -5.876610279083252

Token 43: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16758987307548523
    2. ' ' → logprob: -1.9175899028778076
    3. '2' → logprob: -5.5425896644592285
    4. '3' → logprob: -6.5425896644592285
    5. '4' → logprob: -7.4175896644592285
    6. '7' → logprob: -7.7925896644592285
    7. '5' → logprob: -8.167590141296387
    8. '8' → logprob: -8.167590141296387
    9. '9' → logprob: -8.542590141296387
    10. '6' → logprob: -9.167590141296387

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010872723534703255
    2. ' ' → logprob: -5.010872840881348
    3. '2' → logprob: -6.260872840881348
    4. '3' → logprob: -6.385872840881348
    5. '4' → logprob: -8.135872840881348
    6. '5' → logprob: -10.010872840881348
    7. '7' → logprob: -10.135872840881348
    8. '-' → logprob: -10.260872840881348
    9. '9' → logprob: -10.385872840881348
    10. '8' → logprob: -10.635872840881348

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004144761245697737
    2. ' ,' → logprob: -5.629144668579102
    3. '+' → logprob: -8.754144668579102
    4. '])]' → logprob: -9.254144668579102
    5. '])' → logprob: -10.004144668579102
    6. ')])' → logprob: -10.254144668579102
    7. ')' → logprob: -10.254144668579102
    8. ' +' → logprob: -10.254144668579102
    9. ',
' → logprob: -10.754144668579102
    10. ')]' → logprob: -10.879144668579102

Token 46: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.1623668670654297
    2. 'pre' → logprob: -1.9123668670654297
    3. ' ' → logprob: -6.53736686706543
    4. '0' → logprob: -8.91236686706543
    5. '9' → logprob: -8.91236686706543
    6. '  ' → logprob: -9.28736686706543
    7. '8' → logprob: -9.41236686706543
    8. '7' → logprob: -10.03736686706543
    9. '1' → logprob: -10.41236686706543
    10. '(pre' → logprob: -10.66236686706543

Token 47: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13192804157733917
    2. '+' → logprob: -2.881927967071533
    3. ' ,' → logprob: -3.006927967071533
    4. ' +' → logprob: -4.256927967071533
    5. '])' → logprob: -6.756927967071533
    6. '])]' → logprob: -7.131927967071533
    7. ')])' → logprob: -7.381927967071533
    8. ' ' → logprob: -8.381928443908691
    9. ')]' → logprob: -8.631928443908691
    10. '-' → logprob: -8.631928443908691

Token 48: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.1806127279996872
    2. ' pre' → logprob: -1.8056126832962036
    3. '(pre' → logprob: -7.555612564086914
    4. ' ' → logprob: -9.430612564086914
    5. '1' → logprob: -9.680612564086914
    6. '+' → logprob: -10.055612564086914
    7. ' ' → logprob: -10.680612564086914
    8. '	pre' → logprob: -10.743112564086914
    9. ' and' → logprob: -10.805612564086914
    10. ',' → logprob: -11.743112564086914

Token 49: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5257943868637085
    2. '+' → logprob: -0.9007943868637085
    3. ',' → logprob: -6.150794506072998
    4. ' ,' → logprob: -9.02579402923584
    5. '1' → logprob: -9.27579402923584
    6. '])' → logprob: -9.27579402923584
    7. ' ' → logprob: -9.27579402923584
    8. '   ' → logprob: -10.52579402923584
    9. '2' → logprob: -11.27579402923584
    10. ' -' → logprob: -11.27579402923584

Token 50: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0341964066028595
    2. ' ' → logprob: -3.409196376800537
    3. '0' → logprob: -7.534196376800537
    4. '  ' → logprob: -12.471696853637695
    5. '   ' → logprob: -12.971696853637695
    6. '2' → logprob: -13.534196853637695
    7. '+' → logprob: -13.596696853637695
    8. '-' → logprob: -13.784196853637695
    9. ' ' → logprob: -14.159196853637695
    10. '```' → logprob: -14.346696853637695

Token 51: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018944834591820836
    2. ' ' → logprob: -6.751894474029541
    3. '0' → logprob: -7.251894474029541
    4. '])' → logprob: -13.0643949508667
    5. '   ' → logprob: -13.1268949508667
    6. '  ' → logprob: -13.5643949508667
    7. '2' → logprob: -13.6268949508667
    8. '-' → logprob: -13.8768949508667
    9. ']' → logprob: -13.8768949508667
    10. '```' → logprob: -14.0018949508667

Token 52: '])]
' (ID: 187535)
  Prédit: '])]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])]' → logprob: -0.24843654036521912
    2. '])]
' → logprob: -1.6234365701675415
    3. '])' → logprob: -3.873436450958252
    4. ')])' → logprob: -7.248436450958252
    5. ' ])' → logprob: -7.998436450958252
    6. ']))' → logprob: -8.49843692779541
    7. '       ' → logprob: -8.62343692779541
    8. '           ' → logprob: -8.62343692779541
    9. ']' → logprob: -9.24843692779541
    10. '])
' → logprob: -9.74843692779541

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4678941071033478
    2. ']' → logprob: -1.0928940773010254
    3. '   ' → logprob: -3.4678940773010254
    4. ')' → logprob: -5.967894077301025
    5. '<|end|>' → logprob: -6.842894077301025
    6. '
' → logprob: -7.342894077301025
    7. '	' → logprob: -7.467894077301025
    8. ']
' → logprob: -8.092894554138184
    9. 'else' → logprob: -8.217894554138184
    10. '[' → logprob: -8.342894554138184

Token 54: ' elif' (ID: 9497)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5260160565376282
    2. '   ' → logprob: -1.0260159969329834
    3. '
' → logprob: -4.2760162353515625
    4. ')' → logprob: -5.2760162353515625
    5. ' ' → logprob: -5.2760162353515625
    6. '<|end|>' → logprob: -5.4010162353515625
    7. '\n' → logprob: -5.5260162353515625
    8. '       ' → logprob: -5.9010162353515625
    9. ' ]' → logprob: -6.0260162353515625
    10. 'return' → logprob: -6.0260162353515625

Token 55: ' pre' (ID: 876)
  Prédit: ' pre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pre' → logprob: -0.003320545656606555
    2. 'pre' → logprob: -5.753320693969727
    3. ' ' → logprob: -9.628320693969727
    4. '1' → logprob: -10.128320693969727
    5. '(pre' → logprob: -11.128320693969727
    6. '0' → logprob: -12.503320693969727
    7. ' not' → logprob: -12.878320693969727
    8. ' ' → logprob: -13.003320693969727
    9. '	pre' → logprob: -13.253320693969727
    10. '7' → logprob: -13.253320693969727

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.058225855231285095
    2. '==' → logprob: -3.1832258701324463
    3. ' <' → logprob: -4.308225631713867
    4. ' <=' → logprob: -6.808225631713867
    5. ' >' → logprob: -8.183225631713867
    6. '<' → logprob: -9.058225631713867
    7. ' ' → logprob: -9.308225631713867
    8. '<=' → logprob: -10.808225631713867
    9. '>' → logprob: -12.183225631713867
    10. ' >=' → logprob: -12.308225631713867

Token 57: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09777314960956573
    2. ' ' → logprob: -2.8477730751037598
    3. '9' → logprob: -3.3477730751037598
    4. '   ' → logprob: -12.722773551940918
    5. '1' → logprob: -13.347773551940918
    6. '10' → logprob: -13.722773551940918
    7. '09' → logprob: -13.722773551940918
    8. '  ' → logprob: -14.160273551940918
    9. '    ' → logprob: -15.722773551940918
    10. '```' → logprob: -16.4102725982666

Token 58: '9' (ID: 24)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09450473636388779
    2. '9' → logprob: -2.7195048332214355
    3. ' ' → logprob: -3.7195048332214355
    4. '1' → logprob: -11.657004356384277
    5. '   ' → logprob: -12.907004356384277
    6. '10' → logprob: -12.969504356384277
    7. '09' → logprob: -13.344504356384277
    8. '  ' → logprob: -13.407004356384277
    9. '{' → logprob: -14.844504356384277
    10. '>' → logprob: -14.907004356384277

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1604546308517456
    2. ':
' → logprob: -1.9104546308517456
    3. ':return' → logprob: -8.785454750061035
    4. ':
' → logprob: -9.785454750061035
    5. ':

' → logprob: -11.535454750061035
    6. '       ' → logprob: -12.410454750061035
    7. ' :' → logprob: -13.160454750061035
    8. ' :
' → logprob: -14.035454750061035
    9. '           ' → logprob: -14.160454750061035
    10. ' and' → logprob: -14.285454750061035

Token 60: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6287745833396912
    2. 'return' → logprob: -1.253774642944336
    3. '           ' → logprob: -1.753774642944336
    4. '       ' → logprob: -5.128774642944336
    5. '   ' → logprob: -6.878774642944336
    6. '               ' → logprob: -7.628774642944336
    7. ':return' → logprob: -8.628774642944336
    8. '0' → logprob: -9.503774642944336
    9. '          ' → logprob: -9.503774642944336
    10. '	return' → logprob: -9.503774642944336

Token 61: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.42910993099212646
    2. ' return' → logprob: -1.0541099309921265
    3. '           ' → logprob: -8.304109573364258
    4. '       ' → logprob: -9.679109573364258
    5. '   ' → logprob: -9.929109573364258
    6. ' ' → logprob: -10.679109573364258
    7. '               ' → logprob: -11.429109573364258
    8. '	return' → logprob: -12.304109573364258
    9. ':return' → logprob: -12.554109573364258
    10. '  ' → logprob: -13.679109573364258

Token 62: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06080421432852745
    2. ' [' → logprob: -2.9358041286468506
    3. '[]' → logprob: -5.81080436706543
    4. 'acc' → logprob: -6.18580436706543
    5. ' []' → logprob: -7.93580436706543
    6. ' ' → logprob: -8.56080436706543
    7. ' acc' → logprob: -8.81080436706543
    8. '['' → logprob: -10.56080436706543
    9. '  ' → logprob: -10.81080436706543
    10. '(acc' → logprob: -10.81080436706543

Token 63: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.012780503369867802
    2. ' acc' → logprob: -4.387780666351318
    3. '(acc' → logprob: -8.63778018951416
    4. '   ' → logprob: -10.76278018951416
    5. 'ac' → logprob: -10.88778018951416
    6. ''acc' → logprob: -11.26278018951416
    7. ' ' → logprob: -11.38778018951416
    8. '	acc' → logprob: -12.26278018951416
    9. '  ' → logprob: -12.70028018951416
    10. '
' → logprob: -13.13778018951416

Token 64: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4287639856338501
    2. '+' → logprob: -1.05376398563385
    3. '+c' → logprob: -10.428764343261719
    4. '+'' → logprob: -11.428764343261719
    5. ' ' → logprob: -11.678764343261719
    6. '+"' → logprob: -11.803764343261719
    7. ']' → logprob: -13.803764343261719
    8. ' +'' → logprob: -13.803764343261719
    9. '0' → logprob: -14.303764343261719
    10. ')' → logprob: -14.491264343261719

Token 65: ' c' (ID: 274)
  Prédit: ' str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' str' → logprob: -0.8795979619026184
    2. 'str' → logprob: -1.5045979022979736
    3. ''' → logprob: -1.8795979022979736
    4. ' '' → logprob: -2.2545979022979736
    5. ' c' → logprob: -3.1295979022979736
    6. '"' → logprob: -3.6295979022979736
    7. ' "' → logprob: -4.129598140716553
    8. 'c' → logprob: -4.254598140716553
    9. ' ' → logprob: -6.254598140716553
    10. ''s' → logprob: -6.879598140716553

Token 66: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2824627161026001
    2. 'for' → logprob: -1.4074627161026
    3. ''' → logprob: -7.7824625968933105
    4. ' ' → logprob: -8.157463073730469
    5. ' '' → logprob: -8.782463073730469
    6. ' +' → logprob: -9.157463073730469
    7. '('' → logprob: -9.407463073730469
    8. '+' → logprob: -9.657463073730469
    9. 'str' → logprob: -10.032463073730469
    10. '"' → logprob: -10.032463073730469

Token 67: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3879454433917999
    2. ' c' → logprob: -1.1379454135894775
    3. 'str' → logprob: -7.387945652008057
    4. ' in' → logprob: -8.512945175170898
    5. ' str' → logprob: -9.512945175170898
    6. 's' → logprob: -9.762945175170898
    7. 'in' → logprob: -10.012945175170898
    8. 'map' → logprob: -10.262945175170898
    9. ' map' → logprob: -11.512945175170898
    10. ' ' → logprob: -11.762945175170898

Token 68: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02327343262732029
    2. 'in' → logprob: -3.773273468017578
    3. ' ' → logprob: -11.273273468017578
    4. 'c' → logprob: -11.773273468017578
    5. '  ' → logprob: -12.898273468017578
    6. 'import' → logprob: -13.148273468017578
    7. 's' → logprob: -13.523273468017578
    8. 'n' → logprob: -15.648273468017578
    9. ',' → logprob: -15.898273468017578
    10. '   ' → logprob: -16.023273468017578

Token 69: ' ["' (ID: 9129)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7351325154304504
    2. 'map' → logprob: -0.8601325154304504
    3. '"' → logprob: -3.3601324558258057
    4. '['' → logprob: -3.9851324558258057
    5. '["' → logprob: -4.485132694244385
    6. ''' → logprob: -4.610132694244385
    7. 'str' → logprob: -4.985132694244385
    8. ' ['' → logprob: -4.985132694244385
    9. ' "' → logprob: -5.860132694244385
    10. ' ["' → logprob: -6.110132694244385

Token 70: '8' (ID: 23)
  Prédit: '89'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '89' → logprob: -0.4390023946762085
    2. '8' → logprob: -1.0640023946762085
    3. '88' → logprob: -5.564002513885498
    4. '78' → logprob: -6.189002513885498
    5. '08' → logprob: -6.439002513885498
    6. '98' → logprob: -6.689002513885498
    7. '9' → logprob: -7.814002513885498
    8. '18' → logprob: -7.814002513885498
    9. ' ' → logprob: -8.18900203704834
    10. '87' → logprob: -8.81400203704834

Token 71: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.5565791726112366
    2. '","' → logprob: -1.0565791130065918
    3. '9' → logprob: -2.556579113006592
    4. '"' → logprob: -7.181579113006592
    5. '8' → logprob: -7.556579113006592
    6. ' ",' → logprob: -9.68157958984375
    7. '89' → logprob: -9.80657958984375
    8. ' ","' → logprob: -10.18157958984375
    9. '7' → logprob: -10.30657958984375
    10. '"]' → logprob: -10.55657958984375

Token 72: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.20478950440883636
    2. ' "' → logprob: -2.079789400100708
    3. '9' → logprob: -3.204789400100708
    4. ' ' → logprob: -3.954789400100708
    5. '   ' → logprob: -8.954789161682129
    6. ''' → logprob: -9.642289161682129
    7. '
' → logprob: -10.017289161682129
    8. ' 
' → logprob: -10.767289161682129
    9. '  ' → logprob: -10.954789161682129
    10. '  
' → logprob: -11.329789161682129

Token 73: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.00011534435179783031
    2. '89' → logprob: -10.625115394592285
    3. '99' → logprob: -10.625115394592285
    4. ' ' → logprob: -10.750115394592285
    5. '90' → logprob: -11.000115394592285
    6. '",' → logprob: -11.500115394592285
    7. '8' → logprob: -12.000115394592285
    8. '91' → logprob: -12.875115394592285
    9. '"' → logprob: -12.937615394592285
    10. '","' → logprob: -14.187615394592285

Token 74: '"]' (ID: 2601)
  Prédit: '"]]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]]' → logprob: -0.033241502940654755
    2. '",' → logprob: -3.9082415103912354
    3. '"]' → logprob: -4.658241271972656
    4. '9' → logprob: -6.033241271972656
    5. '0' → logprob: -7.658241271972656
    6. '"' → logprob: -9.658241271972656
    7. ' "' → logprob: -10.158241271972656
    8. '","' → logprob: -10.408241271972656
    9. '1' → logprob: -10.783241271972656
    10. ']]' → logprob: -11.408241271972656

Token 75: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007890639826655388
    2. ' ]' → logprob: -5.382890701293945
    3. '       ' → logprob: -6.757890701293945
    4. '           ' → logprob: -7.632890701293945
    5. ')]' → logprob: -7.882890701293945
    6. '"]' → logprob: -8.132890701293945
    7. '   ' → logprob: -8.132890701293945
    8. ',' → logprob: -8.632890701293945
    9. ']
' → logprob: -8.757890701293945
    10. ']}' → logprob: -9.632890701293945

Token 76: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23661983013153076
    2. '       ' → logprob: -1.7366198301315308
    3. ']' → logprob: -4.98661994934082
    4. ' else' → logprob: -5.36161994934082
    5. '\n' → logprob: -5.48661994934082
    6. 'else' → logprob: -5.73661994934082
    7. 'return' → logprob: -5.98661994934082
    8. '<|end|>' → logprob: -6.11161994934082
    9. '	' → logprob: -6.48661994934082
    10. ' ' → logprob: -6.48661994934082

Token 77: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4092686176300049
    2. ' else' → logprob: -1.5342686176300049
    3. 'else' (adapté à ' else') → logprob: -2.284268617630005
    4. '       ' → logprob: -5.034268379211426
    5. 'elif' → logprob: -5.409268379211426
    6. ']' → logprob: -5.909268379211426
    7. ' elif' → logprob: -6.534268379211426
    8. 'return' → logprob: -6.909268379211426
    9. '	else' → logprob: -7.409268379211426
    10. ')' → logprob: -7.784268379211426

Token 78: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007449852768331766
    2. ':
' → logprob: -5.132449626922607
    3. ' :' → logprob: -7.007449626922607
    4. ':return' → logprob: -7.632449626922607
    5. ' :
' → logprob: -10.507450103759766
    6. '   ' → logprob: -10.507450103759766
    7. ' return' → logprob: -11.257450103759766
    8. 'return' → logprob: -11.382450103759766
    9. '[' → logprob: -11.507450103759766
    10. ' ' → logprob: -12.132450103759766

Token 79: '           ' (ID: 352)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.28175246715545654
    2. 'return' → logprob: -1.7817524671554565
    3. ' []' → logprob: -3.656752586364746
    4. '[]' → logprob: -3.906752586364746
    5. '       ' → logprob: -4.281752586364746
    6. '[' → logprob: -5.656752586364746
    7. '           ' → logprob: -5.656752586364746
    8. '   ' → logprob: -5.781752586364746
    9. ' None' → logprob: -6.531752586364746
    10. 'None' → logprob: -7.156752586364746

Token 80: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0853053405880928
    2. ' return' → logprob: -2.5853054523468018
    3. '[]' → logprob: -5.585305213928223
    4. 'raise' → logprob: -6.460305213928223
    5. 'pass' → logprob: -8.085305213928223
    6. '[' → logprob: -8.460305213928223
    7. ' []' → logprob: -9.210305213928223
    8. ' pass' → logprob: -9.335305213928223
    9. '   ' → logprob: -9.585305213928223
    10. ' raise' → logprob: -9.835305213928223

Token 81: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.08787532895803452
    2. 'None' → logprob: -3.2128753662109375
    3. ' []' → logprob: -3.3378753662109375
    4. ' None' → logprob: -4.9628753662109375
    5. '[]
' → logprob: -7.4628753662109375
    6. '[' → logprob: -7.8378753662109375
    7. ' ' → logprob: -9.337875366210938
    8. '[]}' → logprob: -9.962875366210938
    9. ' []
' → logprob: -10.087875366210938
    10. '[]

' → logprob: -10.087875366210938

Token 82: 'acc' (ID: 3717)
  Prédit: 'acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.00867071095854044
    2. '[]' → logprob: -5.508670806884766
    3. ' acc' → logprob: -6.133670806884766
    4. '[' → logprob: -6.383670806884766
    5. ']' → logprob: -7.883670806884766
    6. '(acc' → logprob: -8.758670806884766
    7. ' [' → logprob: -10.008670806884766
    8. ' []' → logprob: -10.008670806884766
    9. ''acc' → logprob: -10.883670806884766
    10. 'ac' → logprob: -11.008670806884766

Token 83: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04223576560616493
    2. ']' → logprob: -3.792235851287842
    3. '+' → logprob: -4.042235851287842
    4. ' ]' → logprob: -7.417235851287842
    5. ']+' → logprob: -8.542235374450684
    6. '+c' → logprob: -8.917235374450684
    7. '[' → logprob: -9.792235374450684
    8. '+"]' → logprob: -10.292235374450684
    9. '+]' → logprob: -10.417235374450684
    10. '<|end|>' → logprob: -10.417235374450684

Token 84: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6692761778831482
    2. '"' → logprob: -1.294276237487793
    3. 'c' → logprob: -1.794276237487793
    4. ' "' → logprob: -4.169276237487793
    5. 'str' → logprob: -4.294276237487793
    6. ' str' → logprob: -4.419276237487793
    7. ''' → logprob: -5.669276237487793
    8. ']' → logprob: -7.294276237487793
    9. '""' → logprob: -7.294276237487793
    10. ' '' → logprob: -7.794276237487793

Token 85: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.08308945596218109
    2. 'for' → logprob: -2.5830893516540527
    3. ']' → logprob: -6.208089351654053
    4. ' +' → logprob: -6.958089351654053
    5. '+' → logprob: -7.958089351654053
    6. ' ' → logprob: -8.083089828491211
    7. '[' → logprob: -8.708089828491211
    8. ')' → logprob: -8.708089828491211
    9. '<|end|>' → logprob: -9.708089828491211
    10. ' ]' → logprob: -10.333089828491211

Token 86: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.02334354631602764
    2. 'c' → logprob: -3.773343563079834
    3. ' ' → logprob: -10.773343086242676
    4. '"' → logprob: -11.523343086242676
    5. 'map' → logprob: -12.273343086242676
    6. '_' → logprob: -12.273343086242676
    7. 'str' → logprob: -12.398343086242676
    8. 'range' → logprob: -12.398343086242676
    9. '["' → logprob: -12.648343086242676
    10. 's' → logprob: -12.648343086242676

Token 87: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02326679229736328
    2. 'in' → logprob: -3.7732667922973633
    3. ' ' → logprob: -10.898266792297363
    4. 'c' → logprob: -13.523266792297363
    5. '  ' → logprob: -13.773266792297363
    6. ' ' → logprob: -16.898265838623047
    7. '	in' → logprob: -17.148265838623047
    8. 'for' → logprob: -17.148265838623047
    9. '   ' → logprob: -17.273265838623047
    10. '<|end|>' → logprob: -17.273265838623047

Token 88: ' ["' (ID: 9129)
  Prédit: '["'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '["' → logprob: -0.5606642961502075
    2. ' ["' → logprob: -1.3106642961502075
    3. ' map' → logprob: -2.685664176940918
    4. 'map' → logprob: -2.935664176940918
    5. '[' → logprob: -4.060664176940918
    6. ' [' → logprob: -5.310664176940918
    7. '"' → logprob: -5.310664176940918
    8. 'range' → logprob: -5.685664176940918
    9. ' range' → logprob: -6.185664176940918
    10. '['' → logprob: -6.810664176940918

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.27495595812797546
    2. '01' → logprob: -1.8999559879302979
    3. '09' → logprob: -3.149955987930298
    4. '1' → logprob: -3.899955987930298
    5. '10' → logprob: -4.649955749511719
    6. '9' → logprob: -4.774955749511719
    7. '07' → logprob: -6.399955749511719
    8. '08' → logprob: -6.399955749511719
    9. '89' → logprob: -6.524955749511719
    10. '7' → logprob: -7.149955749511719

Token 90: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.13542397320270538
    2. '"]]' → logprob: -2.5104238986968994
    3. '9' → logprob: -3.6354238986968994
    4. ' ",' → logprob: -4.7604241371154785
    5. '","' → logprob: -5.6354241371154785
    6. '1' → logprob: -6.1354241371154785
    7. '"]' → logprob: -6.5104241371154785
    8. '"' → logprob: -6.7604241371154785
    9. '8' → logprob: -7.1354241371154785
    10. '0' → logprob: -8.13542366027832

Token 91: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.20906679332256317
    2. '"' → logprob: -1.7090667486190796
    3. '1' → logprob: -5.209066867828369
    4. ' ' → logprob: -6.709066867828369
    5. 'str' → logprob: -7.709066867828369
    6. ' str' → logprob: -8.209066390991211
    7. '9' → logprob: -9.584066390991211
    8. '0' → logprob: -10.584066390991211
    9. ''' → logprob: -10.709066390991211
    10. ' '' → logprob: -10.834066390991211

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03936127945780754
    2. '9' → logprob: -4.164361476898193
    3. ' ' → logprob: -4.414361476898193
    4. '0' → logprob: -4.664361476898193
    5. '"' → logprob: -6.914361476898193
    6. ' "' → logprob: -8.664361000061035
    7. '8' → logprob: -9.164361000061035
    8. '7' → logprob: -9.789361000061035
    9. '"]' → logprob: -9.914361000061035
    10. '2' → logprob: -10.289361000061035

Token 93: '"]' (ID: 2601)
  Prédit: '"]]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"]]' → logprob: -0.016554269939661026
    2. '"]' → logprob: -4.891554355621338
    3. '",' → logprob: -5.266554355621338
    4. '0' → logprob: -6.141554355621338
    5. '2' → logprob: -7.391554355621338
    6. '1' → logprob: -7.391554355621338
    7. ' "' → logprob: -9.14155387878418
    8. '9' → logprob: -9.26655387878418
    9. '"' → logprob: -10.51655387878418
    10. '7' → logprob: -10.64155387878418

Token 94: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.26237952709198
    2. ')]' → logprob: -1.51237952709198
    3. '])' → logprob: -4.7623796463012695
    4. ')' → logprob: -6.5123796463012695
    5. ')])' → logprob: -9.01237964630127
    6. '`]' → logprob: -9.76237964630127
    7. ']
' → logprob: -10.01237964630127
    8. '])]' → logprob: -10.13737964630127
    9. '"]' → logprob: -10.26237964630127
    10. '   ' → logprob: -10.51237964630127

Token 95: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6823108196258545
    2. '\n' → logprob: -1.5573108196258545
    3. '   ' → logprob: -2.4323108196258545
    4. ' ' → logprob: -2.8073108196258545
    5. ' 
' → logprob: -3.4323108196258545
    6. '    
' → logprob: -3.6823108196258545
    7. ')' → logprob: -4.057311058044434
    8. '\' → logprob: -4.182311058044434
    9. 'd' → logprob: -5.182311058044434
    10. 'n' → logprob: -5.307311058044434

Token 96: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5619031190872192
    2. '   ' → logprob: -1.3119031190872192
    3. '    
' → logprob: -3.5619029998779297
    4. ' 
' → logprob: -3.5619029998779297
    5. '\n' → logprob: -4.06190299987793
    6. '
' → logprob: -4.18690299987793
    7. ')' → logprob: -4.43690299987793
    8. ' else' → logprob: -4.81190299987793
    9. '   
' → logprob: -4.93690299987793
    10. '  
' → logprob: -4.93690299987793

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09030821919441223
    2. '=' → logprob: -2.46530818939209
    3. ' ' → logprob: -6.96530818939209
    4. '.' → logprob: -8.71530818939209
    5. ',' → logprob: -9.84030818939209
    6. ' =
' → logprob: -9.96530818939209
    7. '  ' → logprob: -10.59030818939209
    8. ' +=' → logprob: -10.59030818939209
    9. '=[]' → logprob: -10.84030818939209
    10. ')' → logprob: -11.21530818939209

Token 98: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.019690854474902153
    2. '[]
' → logprob: -4.519690990447998
    3. ' []' → logprob: -4.769690990447998
    4. ' []
' → logprob: -9.26969051361084
    5. '[]

' → logprob: -11.51969051361084
    6. ' ' → logprob: -11.64469051361084
    7. '[' → logprob: -11.76969051361084
    8. '   ' → logprob: -14.14469051361084
    9. '[]>' → logprob: -14.76969051361084
    10. 'rec' → logprob: -15.39469051361084

Token 99: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4076225459575653
    2. ' for' → logprob: -1.5326225757598877
    3. '   ' → logprob: -3.1576225757598877
    4. '	for' → logprob: -3.5326225757598877
    5. 'for' → logprob: -4.157622337341309
    6. '    ' → logprob: -5.157622337341309
    7. ' 
' → logprob: -5.282622337341309
    8. '[' → logprob: -5.657622337341309
    9. '<|end|>' → logprob: -5.907622337341309
    10. '    
' → logprob: -6.032622337341309

Token 100: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.17981891334056854
    2. ' for' → logprob: -1.804818868637085
    3. ' ' → logprob: -10.054819107055664
    4. '   ' → logprob: -11.179819107055664
    5. '	for' → logprob: -11.679819107055664
    6. 'f' → logprob: -13.179819107055664
    7. '  ' → logprob: -13.679819107055664
    8. '    ' → logprob: -13.929819107055664
    9. 'if' → logprob: -14.179819107055664
    10. '[' → logprob: -14.679819107055664

Token 101: ' x' (ID: 1215)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3527491092681885
    2. ' i' → logprob: -1.7277491092681885
    3. 'x' → logprob: -3.3527491092681885
    4. 'k' → logprob: -3.9777491092681885
    5. 'n' → logprob: -4.102748870849609
    6. 'c' → logprob: -4.852748870849609
    7. ' x' → logprob: -5.102748870849609
    8. 'p' → logprob: -5.227748870849609
    9. ' nxt' → logprob: -5.602748870849609
    10. ' c' → logprob: -5.727748870849609

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009899867698550224
    2. 'in' → logprob: -4.634900093078613
    3. 'range' → logprob: -9.509900093078613
    4. ' ' → logprob: -9.884900093078613
    5. ',' → logprob: -11.634900093078613
    6. ' i' → logprob: -13.259900093078613
    7. '1' → logprob: -13.884900093078613
    8. '  ' → logprob: -14.009900093078613
    9. '0' → logprob: -14.009900093078613
    10. ' range' → logprob: -14.134900093078613

Token 103: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07284261286258698
    2. 'range' → logprob: -2.822842597961426
    3. '[' → logprob: -5.697842597961426
    4. ' [' → logprob: -6.322842597961426
    5. ' dic' → logprob: -6.572842597961426
    6. '[d' → logprob: -7.197842597961426
    7. ' rec' → logprob: -7.697842597961426
    8. '[-' → logprob: -7.697842597961426
    9. ' d' → logprob: -8.072842597961426
    10. '(range' → logprob: -8.322842597961426

Token 104: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6350325345993042
    2. '(pre' → logprob: -1.0100325345993042
    3. '(max' → logprob: -2.2600326538085938
    4. '(-' → logprob: -6.760032653808594
    5. '((' → logprob: -8.885032653808594
    6. '(min' → logprob: -9.885032653808594
    7. '(pr' → logprob: -10.260032653808594
    8. '10' → logprob: -10.260032653808594
    9. '(len' → logprob: -10.635032653808594
    10. 'pre' → logprob: -11.010032653808594

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789230540394783
    2. '(pre' → logprob: -2.578922986984253
    3. '(pr' → logprob: -10.953923225402832
    4. '(-' → logprob: -12.078923225402832
    5. '((' → logprob: -12.328923225402832
    6. '(
' → logprob: -12.828923225402832
    7. '(p' → logprob: -14.578923225402832
    8. ' (' → logprob: -14.703923225402832
    9. '(pro' → logprob: -15.703923225402832
    10. '(pred' → logprob: -15.703923225402832

Token 106: '0' (ID: 15)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43618008494377136
    2. '0' → logprob: -1.5611801147460938
    3. '(pre' → logprob: -2.0611801147460938
    4. 'pre' → logprob: -4.436180114746094
    5. '1' → logprob: -6.436180114746094
    6. ' pre' → logprob: -6.561180114746094
    7. ' ' → logprob: -6.686180114746094
    8. '(-' → logprob: -9.936180114746094
    9. ' (' → logprob: -10.311180114746094
    10. '   ' → logprob: -10.811180114746094

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006943239714019
    2. '(pre' → logprob: -7.375694274902344
    3. ' ,' → logprob: -10.125694274902344
    4. 'pre' → logprob: -11.125694274902344
    5. '(' → logprob: -11.750694274902344
    6. ' ' → logprob: -12.875694274902344
    7. ' pre' → logprob: -14.000694274902344
    8. '   ' → logprob: -14.625694274902344
    9. '	pre' → logprob: -14.750694274902344
    10. ',
' → logprob: -15.125694274902344

Token 108: ' pre' (ID: 876)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pre' → logprob: -0.01607026532292366
    2. ' pre' → logprob: -4.141070365905762
    3. '(pre' → logprob: -11.516070365905762
    4. ' ' → logprob: -11.891070365905762
    5. '   ' → logprob: -11.891070365905762
    6. '	pre' → logprob: -12.141070365905762
    7. '  ' → logprob: -12.266070365905762
    8. 'prem' → logprob: -14.891070365905762
    9. '1' → logprob: -15.016070365905762
    10. 'pread' → logprob: -15.891070365905762

Token 109: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20176179707050323
    2. '-' → logprob: -1.7017618417739868
    3. ' ' → logprob: -8.076762199401855
    4. '   ' → logprob: -11.201762199401855
    5. ')' → logprob: -11.826762199401855
    6. '  ' → logprob: -12.451762199401855
    7. '	' → logprob: -12.576762199401855
    8. ' ' → logprob: -12.701762199401855
    9. '1' → logprob: -13.076762199401855
    10. '),' → logprob: -13.201762199401855

Token 110: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004675761330872774
    2. ' ' → logprob: -5.37967586517334
    3. '2' → logprob: -10.25467586517334
    4. '   ' → logprob: -11.50467586517334
    5. ')' → logprob: -12.62967586517334
    6. '
' → logprob: -12.94217586517334
    7. '  ' → logprob: -13.12967586517334
    8. '3' → logprob: -14.00467586517334
    9. '     ' → logprob: -15.94217586517334
    10. '	' → logprob: -16.004674911499023

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003831252979580313
    2. ' ' → logprob: -8.125383377075195
    3. '2' → logprob: -9.500383377075195
    4. '3' → logprob: -12.250383377075195
    5. '   ' → logprob: -13.437883377075195
    6. '9' → logprob: -13.687883377075195
    7. ')' → logprob: -13.875383377075195
    8. '4' → logprob: -14.250383377075195
    9. '  ' → logprob: -14.312883377075195
    10. '
' → logprob: -14.687883377075195

Token 112: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6369102597236633
    2. ',' → logprob: -0.8869102597236633
    3. ' -' → logprob: -3.1369102001190186
    4. ' ),' → logprob: -4.636910438537598
    5. ' ,' → logprob: -5.636910438537598
    6. '-' → logprob: -6.261910438537598
    7. ' ' → logprob: -8.136910438537598
    8. '   ' → logprob: -9.386910438537598
    9. ')' → logprob: -10.011910438537598
    10. '  ' → logprob: -10.511910438537598

Token 113: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09832563996315002
    2. ' min' → logprob: -2.723325729370117
    3. 'pre' → logprob: -3.598325729370117
    4. ' pre' → logprob: -7.473325729370117
    5. '  ' → logprob: -11.098325729370117
    6. '   ' → logprob: -11.473325729370117
    7. ' ' → logprob: -12.223325729370117
    8. '9' → logprob: -12.473325729370117
    9. '(min' → logprob: -12.598325729370117
    10. '    ' → logprob: -12.723325729370117

Token 114: '(pre' (ID: 48018)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.15310683415737e-05
    2. ' (' → logprob: -11.375021934509277
    3. '9' → logprob: -12.125021934509277
    4. '10' → logprob: -13.500021934509277
    5. '(
' → logprob: -13.875021934509277
    6. ')' → logprob: -14.375021934509277
    7. '((' → logprob: -14.500021934509277
    8. '(pre' → logprob: -15.000021934509277
    9. ' ' → logprob: -15.500021934509277
    10. ',' → logprob: -15.875021934509277

Token 115: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25370052456855774
    2. '+' → logprob: -1.5037004947662354
    3. '9' → logprob: -6.6287007331848145
    4. ' ' → logprob: -8.378700256347656
    5. '10' → logprob: -9.503700256347656
    6. '2' → logprob: -10.128700256347656
    7. ',' → logprob: -10.503700256347656
    8. '1' → logprob: -10.878700256347656
    9. '8' → logprob: -11.753700256347656
    10. 's' → logprob: -11.878700256347656

Token 116: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.011774998158216476
    2. ' ' → logprob: -4.511775016784668
    3. '3' → logprob: -7.511775016784668
    4. '1' → logprob: -9.386775016784668
    5. ')' → logprob: -10.386775016784668
    6. '
' → logprob: -11.324275016784668
    7. ',' → logprob: -11.449275016784668
    8. '  ' → logprob: -12.136775016784668
    9. '```' → logprob: -12.199275016784668
    10. '

' → logprob: -12.324275016784668

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005587508203461766
    2. '1' → logprob: -8.000558853149414
    3. ' ' → logprob: -9.125558853149414
    4. '3' → logprob: -9.813058853149414
    5. '
' → logprob: -11.063058853149414
    6. '```' → logprob: -11.688058853149414
    7. '   ' → logprob: -11.750558853149414
    8. '

' → logprob: -12.375558853149414
    9. '  ' → logprob: -12.938058853149414
    10. '``' → logprob: -13.125558853149414

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004530876874923706
    2. ' ,' → logprob: -5.504530906677246
    3. '),' → logprob: -8.629530906677246
    4. ')' → logprob: -8.879530906677246
    5. '+' → logprob: -10.504530906677246
    6. ' +' → logprob: -11.004530906677246
    7. '))' → logprob: -11.129530906677246
    8. '1' → logprob: -11.504530906677246
    9. ' ' → logprob: -11.504530906677246
    10. '):' → logprob: -11.754530906677246

Token 119: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.026975762099027634
    2. ' ' → logprob: -3.6519758701324463
    3. '   ' → logprob: -8.151975631713867
    4. '9' → logprob: -8.776975631713867
    5. ')' → logprob: -9.526975631713867
    6. 'd' → logprob: -10.839475631713867
    7. '11' → logprob: -10.839475631713867
    8. 'dic' → logprob: -10.839475631713867
    9. 'len' → logprob: -10.901975631713867
    10. '  ' → logprob: -11.651975631713867

Token 120: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004080315411556512
    2. ' ' → logprob: -8.125408172607422
    3. '11' → logprob: -10.375408172607422
    4. '9' → logprob: -10.375408172607422
    5. '   ' → logprob: -11.125408172607422
    6. 'len' → logprob: -11.625408172607422
    7. 'dic' → logprob: -12.062908172607422
    8. 'd' → logprob: -12.250408172607422
    9. 'dict' → logprob: -13.375408172607422
    10. ')' → logprob: -13.687908172607422

Token 121: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.22329148650169373
    2. '):' → logprob: -1.9732915163040161
    3. ')):
' → logprob: -3.4732913970947266
    4. ')' → logprob: -3.7232913970947266
    5. '))' → logprob: -5.473291397094727
    6. '):
' → logprob: -6.848291397094727
    7. ' ):' → logprob: -8.098291397094727
    8. ' ))' → logprob: -9.098291397094727
    9. ')):
' → logprob: -9.098291397094727
    10. ' ' → logprob: -9.848291397094727

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003160968190059066
    2. '<|end|>' → logprob: -6.0031609535217285
    3. '        
' → logprob: -8.128161430358887
    4. '[' → logprob: -9.253161430358887
    5. '<|end|>' → logprob: -9.378161430358887
    6. '	' → logprob: -9.878161430358887
    7. '[]' → logprob: -10.878161430358887
    8. '
' → logprob: -11.003161430358887
    9. ',' → logprob: -11.003161430358887
    10. '   ' → logprob: -11.253161430358887

Token 123: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.14525867998600006
    2. ' ans' → logprob: -2.270258665084839
    3. '       ' → logprob: -3.520258665084839
    4. '   ' → logprob: -7.145258903503418
    5. 'for' → logprob: -7.520258903503418
    6. ' for' → logprob: -8.020258903503418
    7. 'if' → logprob: -8.145258903503418
    8. '           ' → logprob: -9.145258903503418
    9. '	ans' → logprob: -9.395258903503418
    10. ' if' → logprob: -9.645258903503418

Token 124: ' +=' (ID: 2757)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.19043055176734924
    2. '.extend' → logprob: -2.0654306411743164
    3. '.' → logprob: -3.1904306411743164
    4. ' .' → logprob: -5.440430641174316
    5. ' +=' → logprob: -6.815430641174316
    6. ' .=' → logprob: -11.565430641174316
    7. '.app' → logprob: -11.815430641174316
    8. '.push' → logprob: -12.065430641174316
    9. ' =' → logprob: -12.565430641174316
    10. '+=' → logprob: -12.815430641174316

Token 125: ' rec' (ID: 1369)
  Prédit: ' rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rec' → logprob: -0.2811886966228485
    2. 'rec' → logprob: -1.406188726425171
    3. '[' → logprob: -11.15618896484375
    4. '(rec' → logprob: -11.40618896484375
    5. ' ' → logprob: -12.65618896484375
    6. '	rec' → logprob: -13.15618896484375
    7. '   ' → logprob: -13.90618896484375
    8. 're' → logprob: -14.28118896484375
    9. '
' → logprob: -14.34368896484375
    10. ' [' → logprob: -14.53118896484375

Token 126: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00012487331696320325
    2. '(' → logprob: -9.00012493133545
    3. '(
' → logprob: -13.62512493133545
    4. '(dic' → logprob: -15.37512493133545
    5. ' (' → logprob: -18.375123977661133
    6. '(dict' → logprob: -18.750123977661133
    7. 'd' → logprob: -19.250123977661133
    8. '(x' → logprob: -19.750123977661133
    9. '```' → logprob: -19.875123977661133
    10. '(D' → logprob: -20.250123977661133

Token 127: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10025077313184738
    2. ' -' → logprob: -2.350250720977783
    3. ',' → logprob: -10.225251197814941
    4. ' ' → logprob: -13.225251197814941
    5. '  ' → logprob: -13.225251197814941
    6. '   ' → logprob: -13.975251197814941
    7. ' ,' → logprob: -14.100251197814941
    8. '(d' → logprob: -14.850251197814941
    9. ' -,' → logprob: -14.975251197814941
    10. ',d' → logprob: -15.100251197814941

Token 128: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.347765181795694e-05
    2. ' ' → logprob: -9.875053405761719
    3. '   ' → logprob: -13.375053405761719
    4. '```' → logprob: -16.12505340576172
    5. '<|end|>' → logprob: -16.37505340576172
    6. '
' → logprob: -17.12505340576172
    7. '  ' → logprob: -17.25005340576172
    8. '       ' → logprob: -17.37505340576172
    9. ',' → logprob: -17.62505340576172
    10. '    ' → logprob: -17.75005340576172

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -16.1250057220459
    4. '```' → logprob: -16.3750057220459
    5. 'def' → logprob: -17.2500057220459
    6. '<|end|>' → logprob: -17.5000057220459
    7. '
' → logprob: -17.7500057220459
    8. ')' → logprob: -17.7500057220459
    9. '2' → logprob: -17.8750057220459
    10. 'x' → logprob: -18.5000057220459

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013330980436876416
    2. ',x' → logprob: -7.001333236694336
    3. ' ,' → logprob: -8.126333236694336
    4. '(x' → logprob: -9.126333236694336
    5. 'x' → logprob: -11.376333236694336
    6. ' x' → logprob: -13.251333236694336
    7. '(' → logprob: -13.626333236694336
    8. ',
' → logprob: -14.001333236694336
    9. ',d' → logprob: -14.251333236694336
    10. ')' → logprob: -14.751333236694336

Token 131: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.014164566993713379
    2. ' x' → logprob: -4.264164447784424
    3. '	x' → logprob: -15.139164924621582
    4. '(x' → logprob: -15.264164924621582
    5. ')x' → logprob: -15.389164924621582
    6. '<|end|>' → logprob: -16.264163970947266
    7. ' ' → logprob: -16.389163970947266
    8. ')' → logprob: -16.889163970947266
    9. '   ' → logprob: -17.514163970947266
    10. '[x' → logprob: -18.264163970947266

Token 132: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001170460251159966
    2. ' ,' → logprob: -6.751170635223389
    3. 'acc' → logprob: -15.87617015838623
    4. ',
' → logprob: -16.126171112060547
    5. ' ' → logprob: -16.751171112060547
    6. '   ' → logprob: -17.626171112060547
    7. '(acc' → logprob: -17.626171112060547
    8. '`,' → logprob: -18.376171112060547
    9. '',' → logprob: -18.501171112060547
    10. '  ' → logprob: -18.501171112060547

Token 133: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.4742268919944763
    2. 'acc' → logprob: -0.9742268919944763
    3. '(acc' → logprob: -9.474226951599121
    4. ''acc' → logprob: -10.724226951599121
    5. '   ' → logprob: -11.349226951599121
    6. ' ' → logprob: -11.349226951599121
    7. '	acc' → logprob: -11.349226951599121
    8. '    ' → logprob: -11.849226951599121
    9. ''' → logprob: -13.224226951599121
    10. ' accu' → logprob: -13.349226951599121

Token 134: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47623053193092346
    2. '+' → logprob: -0.9762305021286011
    3. '+c' → logprob: -6.226230621337891
    4. ')' → logprob: -8.72623062133789
    5. '+x' → logprob: -12.97623062133789
    6. '+)' → logprob: -12.97623062133789
    7. ' )' → logprob: -13.10123062133789
    8. ' ' → logprob: -13.35123062133789
    9. '+C' → logprob: -13.97623062133789
    10. ' +
' → logprob: -14.97623062133789

Token 135: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.006715967319905758
    2. ' str' → logprob: -5.006715774536133
    3. '(str' → logprob: -15.131715774536133
    4. ' ' → logprob: -15.506715774536133
    5. '	str' → logprob: -16.756715774536133
    6. 'x' → logprob: -17.381715774536133
    7. 'c' → logprob: -17.631715774536133
    8. '[str' → logprob: -18.006715774536133
    9. '=str' → logprob: -18.256715774536133
    10. '  ' → logprob: -18.381715774536133

Token 136: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.005333959124982357
    2. '(pre' → logprob: -5.25533390045166
    3. 'x' → logprob: -9.88033390045166
    4. '(' → logprob: -10.50533390045166
    5. 'pre' → logprob: -10.88033390045166
    6. ' x' → logprob: -13.63033390045166
    7. '(p' → logprob: -15.50533390045166
    8. '(prev' → logprob: -15.63033390045166
    9. ')x' → logprob: -16.130334854125977
    10. ')' → logprob: -16.255334854125977

Token 137: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006481022574007511
    2. ')' → logprob: -7.375648021697998
    3. ')))' → logprob: -11.250648498535156
    4. '))
' → logprob: -12.000648498535156
    5. ' ))' → logprob: -13.375648498535156
    6. '),' → logprob: -15.750648498535156
    7. '   ' → logprob: -16.125648498535156
    8. ''))' → logprob: -16.125648498535156
    9. '()))' → logprob: -16.125648498535156
    10. '"))' → logprob: -16.250648498535156

Token 138: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11079883575439453
    2. 'return' → logprob: -2.4857988357543945
    3. ' return' → logprob: -3.8607988357543945
    4. '
' → logprob: -8.110798835754395
    5. '    
' → logprob: -8.610798835754395
    6. ' ' → logprob: -10.985798835754395
    7. ':return' → logprob: -10.985798835754395
    8. ')' → logprob: -11.360798835754395
    9. '```' → logprob: -11.860798835754395
    10. '   
' → logprob: -11.860798835754395

Token 139: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1305852085351944
    2. ' return' → logprob: -2.630585193634033
    3. '   ' → logprob: -3.005585193634033
    4. ' ' → logprob: -7.505585193634033
    5. '
' → logprob: -8.630585670471191
    6. ':return' → logprob: -10.255585670471191
    7. '	return' → logprob: -10.630585670471191
    8. ')' → logprob: -10.880585670471191
    9. '    
' → logprob: -10.880585670471191
    10. '  ' → logprob: -11.380585670471191

Token 140: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.011048170737922192
    2. ' ans' → logprob: -4.511048316955566
    3. '(ans' → logprob: -15.011048316955566
    4. '	ans' → logprob: -18.76104736328125
    5. 'answer' → logprob: -21.38604736328125
    6. '[' → logprob: -21.51104736328125
    7. '_ans' → logprob: -21.63604736328125
    8. 'Ans' → logprob: -21.76104736328125
    9. ' ' → logprob: -22.63604736328125
    10. ' ' → logprob: -22.76104736328125

Token 141: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 142: 'K' (ID: 42)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4213069975376129
    2. 'def' → logprob: -1.7963069677352905
    3. '#' → logprob: -2.92130708694458
    4. 'for' → logprob: -3.42130708694458
    5. 'result' → logprob: -3.67130708694458
    6. '[' → logprob: -4.04630708694458
    7. 'dic' → logprob: -4.29630708694458
    8. 'd' → logprob: -5.29630708694458
    9. 'rec' → logprob: -5.42130708694458
    10. '.' → logprob: -5.92130708694458

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08977767080068588
    2. '=' → logprob: -2.464777708053589
    3. 'ey' → logprob: -8.589777946472168
    4. ',' → logprob: -9.089777946472168
    5. '_' → logprob: -9.464777946472168
    6. '.' → logprob: -9.589777946472168
    7. '=[]' → logprob: -9.589777946472168
    8. 'w' → logprob: -10.089777946472168
    9. '[' → logprob: -10.339777946472168
    10. ' ' → logprob: -10.714777946472168

Token 144: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6104778051376343
    2. '10' → logprob: -1.7354778051376343
    3. '3' → logprob: -2.110477924346924
    4. '5' → logprob: -2.360477924346924
    5. '9' → logprob: -4.235477924346924
    6. ' ' → logprob: -4.610477924346924
    7. '1' → logprob: -4.735477924346924
    8. '4' → logprob: -4.860477924346924
    9. '0' → logprob: -5.110477924346924
    10. '2' → logprob: -5.235477924346924

Token 145: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012043577618896961
    2. '(' → logprob: -5.137043476104736
    3. '()' → logprob: -5.512043476104736
    4. 'input' → logprob: -6.762043476104736
    5. '('' → logprob: -7.137043476104736
    6. '("' → logprob: -9.512043952941895
    7. ' input' → logprob: -11.262043952941895
    8. '("")' → logprob: -11.887043952941895
    9. ' ' → logprob: -12.637043952941895
    10. '=input' → logprob: -13.387043952941895

Token 146: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10049379616975784
    2. '()' → logprob: -2.350493907928467
    3. '(' → logprob: -8.600493431091309
    4. ')' → logprob: -10.225493431091309
    5. '().' → logprob: -11.350493431091309
    6. '();)' → logprob: -11.725493431091309
    7. '());' → logprob: -11.975493431091309
    8. '()`' → logprob: -12.100493431091309
    9. '()
' → logprob: -12.225493431091309
    10. '()))' → logprob: -12.350493431091309

Token 147: 'ls' (ID: 3973)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6054372787475586
    2. 'result' → logprob: -1.7304372787475586
    3. 'ans' → logprob: -1.9804372787475586
    4. 'if' → logprob: -2.9804372787475586
    5. 'results' → logprob: -3.4804372787475586
    6. 'for' → logprob: -3.4804372787475586
    7. 'arr' → logprob: -4.730437278747559
    8. 'print' → logprob: -5.605437278747559
    9. 'answers' → logprob: -5.730437278747559
    10. 'answer' → logprob: -5.980437278747559

Token 148: ' =' (ID: 314)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.008416466414928436
    2. '=' → logprob: -5.883416652679443
    3. ' =' → logprob: -5.883416652679443
    4. 'ts' → logprob: -6.133416652679443
    5. 'ist' → logprob: -7.508416652679443
    6. 'it' → logprob: -10.133416175842285
    7. 'st' → logprob: -10.883416175842285
    8. '_' → logprob: -12.008416175842285
    9. 'its' → logprob: -12.008416175842285
    10. 'ists' → logprob: -12.633416175842285

Token 149: ' [' (ID: 723)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.5220780968666077
    2. ' rec' → logprob: -1.022078037261963
    3. '[]' → logprob: -3.272078037261963
    4. ' []' → logprob: -5.272078037261963
    5. '[' → logprob: -6.022078037261963
    6. '["' → logprob: -7.897078037261963
    7. '['' → logprob: -8.397078514099121
    8. 'list' → logprob: -8.522078514099121
    9. ' [' → logprob: -8.772078514099121
    10. 'sorted' → logprob: -9.272078514099121

Token 150: '1' (ID: 16)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5597238540649414
    2. 'str' → logprob: -2.0597238540649414
    3. 'input' → logprob: -2.5597238540649414
    4. '0' → logprob: -3.3097238540649414
    5. ']' → logprob: -3.4347238540649414
    6. '*' → logprob: -3.5597238540649414
    7. 'i' → logprob: -3.8097238540649414
    8. 'x' → logprob: -3.8097238540649414
    9. 'list' → logprob: -4.059723854064941
    10. 'rec' → logprob: -4.434723854064941

Token 151: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07736901193857193
    2. ',' → logprob: -2.702368974685669
    3. '0' → logprob: -5.952369213104248
    4. ' ]' → logprob: -7.202369213104248
    5. ' +' → logprob: -7.327369213104248
    6. ']+' → logprob: -7.452369213104248
    7. '9' → logprob: -7.577369213104248
    8. '()]' → logprob: -7.952369213104248
    9. '2' → logprob: -8.20236873626709
    10. '+' → logprob: -8.45236873626709

Token 152: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03382561728358269
    2. ' ' → logprob: -4.158825397491455
    3. '9' → logprob: -4.533825397491455
    4. '3' → logprob: -5.908825397491455
    5. '0' → logprob: -6.158825397491455
    6. '8' → logprob: -7.658825397491455
    7. '1' → logprob: -7.658825397491455
    8. '10' → logprob: -7.658825397491455
    9. '4' → logprob: -7.908825397491455
    10. '5' → logprob: -9.033825874328613

Token 153: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3042175769805908
    2. '9' → logprob: -1.5542175769805908
    3. '3' → logprob: -3.679217576980591
    4. '0' → logprob: -4.679217338562012
    5. '8' → logprob: -5.429217338562012
    6. '4' → logprob: -5.429217338562012
    7. '10' → logprob: -5.804217338562012
    8. '1' → logprob: -6.304217338562012
    9. '5' → logprob: -6.554217338562012
    10. '7' → logprob: -8.429217338562012

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08269541710615158
    2. '3' → logprob: -2.582695484161377
    3. ']' → logprob: -6.207695484161377
    4. ' ,' → logprob: -6.832695484161377
    5. '...' → logprob: -7.957695484161377
    6. ',...' → logprob: -9.207695007324219
    7. '0' → logprob: -9.582695007324219
    8. ' ' → logprob: -9.707695007324219
    9. '9' → logprob: -9.832695007324219
    10. '...]' → logprob: -10.957695007324219

Token 155: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03824826702475548
    2. ' ' → logprob: -3.288248300552368
    3. '9' → logprob: -9.038248062133789
    4. '4' → logprob: -9.788248062133789
    5. '...' → logprob: -11.413248062133789
    6. '5' → logprob: -11.788248062133789
    7. ']' → logprob: -12.413248062133789
    8. '10' → logprob: -13.163248062133789
    9. '
' → logprob: -13.663248062133789
    10. '0' → logprob: -13.913248062133789

Token 156: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0013389317318797112
    2. ' ' → logprob: -7.501338958740234
    3. '4' → logprob: -8.001338958740234
    4. '9' → logprob: -8.126338958740234
    5. '5' → logprob: -9.751338958740234
    6. '10' → logprob: -10.751338958740234
    7. ']' → logprob: -10.876338958740234
    8. '...' → logprob: -11.251338958740234
    9. '0' → logprob: -11.501338958740234
    10. '6' → logprob: -12.126338958740234

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007328679319471121
    2. ']' → logprob: -5.132328510284424
    3. ' ,' → logprob: -6.882328510284424
    4. '4' → logprob: -8.007328987121582
    5. ' ]' → logprob: -11.632328987121582
    6. '...' → logprob: -11.757328987121582
    7. ',
' → logprob: -12.132328987121582
    8. '3' → logprob: -12.632328987121582
    9. ',...' → logprob: -12.632328987121582
    10. '...]' → logprob: -12.757328987121582

Token 158: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.08900021016597748
    2. ' ' → logprob: -2.4640002250671387
    3. '9' → logprob: -10.96399974822998
    4. '7' → logprob: -11.71399974822998
    5. ']' → logprob: -11.71399974822998
    6. '5' → logprob: -11.83899974822998
    7. '...' → logprob: -12.21399974822998
    8. '<|end|>' → logprob: -12.33899974822998
    9. ',' → logprob: -13.08899974822998
    10. '  ' → logprob: -13.21399974822998

Token 159: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.02061651274561882
    2. ' ' → logprob: -3.8956165313720703
    3. '5' → logprob: -10.14561653137207
    4. '9' → logprob: -11.39561653137207
    5. ',' → logprob: -11.77061653137207
    6. ']' → logprob: -11.89561653137207
    7. '7' → logprob: -13.39561653137207
    8. '...' → logprob: -13.52061653137207
    9. ')' → logprob: -13.95811653137207
    10. '6' → logprob: -14.02061653137207

Token 160: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006897979183122516
    2. '5' → logprob: -7.87568998336792
    3. ' ,' → logprob: -8.125689506530762
    4. ']' → logprob: -11.625689506530762
    5. ' ' → logprob: -13.250689506530762
    6. ',
' → logprob: -13.250689506530762
    7. ')' → logprob: -14.125689506530762
    8. ')]' → logprob: -15.875689506530762
    9. '...' → logprob: -16.250690460205078
    10. '3' → logprob: -16.750690460205078

Token 161: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.12693282961845398
    2. ' ' → logprob: -2.1269328594207764
    3. '6' → logprob: -12.501933097839355
    4. ',' → logprob: -14.876933097839355
    5. '7' → logprob: -15.251933097839355
    6. '<|end|>' → logprob: -16.00193214416504
    7. ' ' → logprob: -16.25193214416504
    8. ' ,' → logprob: -16.87693214416504
    9. '```' → logprob: -17.25193214416504
    10. '4' → logprob: -17.31443214416504

Token 162: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0036266776733100414
    2. ' ' → logprob: -5.628626823425293
    3. '6' → logprob: -10.753626823425293
    4. ',' → logprob: -13.003626823425293
    5. '7' → logprob: -13.503626823425293
    6. '```' → logprob: -15.503626823425293
    7. '9' → logprob: -15.566126823425293
    8. ')' → logprob: -15.691126823425293
    9. '...' → logprob: -15.941126823425293
    10. '4' → logprob: -15.941126823425293

Token 163: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013536323967855424
    2. ']' → logprob: -9.50013542175293
    3. '6' → logprob: -10.50013542175293
    4. ' ,' → logprob: -10.50013542175293
    5. '5' → logprob: -13.12513542175293
    6. ')' → logprob: -13.75013542175293
    7. ',
' → logprob: -14.00013542175293
    8. '<|end|>' → logprob: -14.87513542175293
    9. '...' → logprob: -15.12513542175293
    10. ' ' → logprob: -15.25013542175293

Token 164: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.1797846555709839
    2. ' ' → logprob: -1.8047846555709839
    3. ',' → logprob: -10.679784774780273
    4. '7' → logprob: -11.304784774780273
    5. ' ,' → logprob: -13.554784774780273
    6. '5' → logprob: -13.992284774780273
    7. ' ' → logprob: -14.242284774780273
    8. ''' → logprob: -15.179784774780273
    9. '...' → logprob: -15.617284774780273
    10. ']' → logprob: -15.992284774780273

Token 165: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.006720229052007198
    2. ' ' → logprob: -5.006720066070557
    3. '5' → logprob: -13.381720542907715
    4. '7' → logprob: -13.819220542907715
    5. ',' → logprob: -14.756720542907715
    6. '678' → logprob: -15.006720542907715
    7. '  ' → logprob: -15.819220542907715
    8. '...' → logprob: -15.944220542907715
    9. ']' → logprob: -16.2567195892334
    10. '[' → logprob: -16.3192195892334

Token 166: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002212942810729146
    2. '7' → logprob: -6.252213001251221
    3. ' ,' → logprob: -8.252212524414062
    4. ']' → logprob: -10.877212524414062
    5. ',
' → logprob: -13.002212524414062
    6. ' ' → logprob: -14.377212524414062
    7. '789' → logprob: -14.377212524414062
    8. '<|end|>' → logprob: -15.002212524414062
    9. ' ]' → logprob: -15.752212524414062
    10. ')' → logprob: -15.752212524414062

Token 167: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.04859180003404617
    2. ' ' → logprob: -3.0485918521881104
    3. ',' → logprob: -13.048591613769531
    4. '  ' → logprob: -14.611091613769531
    5. '8' → logprob: -15.111091613769531
    6. ' ,' → logprob: -15.361091613769531
    7. ' ' → logprob: -15.423591613769531
    8. '```' → logprob: -15.423591613769531
    9. ']' → logprob: -15.673591613769531
    10. ''' → logprob: -16.36109161376953

Token 168: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0007107630372047424
    2. ' ' → logprob: -7.250710964202881
    3. '8' → logprob: -16.25071144104004
    4. ',' → logprob: -16.25071144104004
    5. '  ' → logprob: -16.43821144104004
    6. '6' → logprob: -16.43821144104004
    7. '789' → logprob: -16.50071144104004
    8. ''' → logprob: -16.93821144104004
    9. '[' → logprob: -17.12571144104004
    10. '9' → logprob: -17.50071144104004

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007388730882667005
    2. ' ,' → logprob: -7.500739097595215
    3. '7' → logprob: -8.625739097595215
    4. '8' → logprob: -12.500739097595215
    5. ',
' → logprob: -13.625739097595215
    6. ']' → logprob: -14.750739097595215
    7. '<|end|>' → logprob: -15.000739097595215
    8. ' ' → logprob: -15.125739097595215
    9. '789' → logprob: -15.875739097595215
    10. ')' → logprob: -16.6257381439209

Token 170: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.6970162391662598
    2. ' ' → logprob: -0.6970162391662598
    3. '7' → logprob: -5.57201623916626
    4. ',' → logprob: -9.947015762329102
    5. ' ,' → logprob: -12.322015762329102
    6. '  ' → logprob: -13.759515762329102
    7. ''' → logprob: -14.072015762329102
    8. ' ' → logprob: -14.322015762329102
    9. '9' → logprob: -14.759515762329102
    10. '```' → logprob: -15.134515762329102

Token 171: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0038902189116925
    2. ' ' → logprob: -6.128890037536621
    3. '7' → logprob: -6.378890037536621
    4. ',' → logprob: -13.128890037536621
    5. '9' → logprob: -13.378890037536621
    6. '89' → logprob: -13.628890037536621
    7. '  ' → logprob: -14.878890037536621
    8. ''' → logprob: -15.316390037536621
    9. '789' → logprob: -15.941390037536621
    10. '10' → logprob: -16.503890991210938

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005066845333203673
    2. ' ,' → logprob: -8.000506401062012
    3. '7' → logprob: -9.375506401062012
    4. '9' → logprob: -9.500506401062012
    5. ']' → logprob: -12.125506401062012
    6. ')' → logprob: -12.375506401062012
    7. ',
' → logprob: -14.625506401062012
    8. ' ' → logprob: -14.750506401062012
    9. '<|end|>' → logprob: -15.375506401062012
    10. '0' → logprob: -15.500506401062012

Token 173: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.11282751709222794
    2. ' ' → logprob: -2.2378275394439697
    3. '7' → logprob: -13.23782730102539
    4. ',' → logprob: -13.61282730102539
    5. '10' → logprob: -14.55032730102539
    6. '0' → logprob: -14.73782730102539
    7. ' ' → logprob: -15.48782730102539
    8. ' ,' → logprob: -15.92532730102539
    9. ']' → logprob: -16.11282730102539
    10. '8' → logprob: -16.17532730102539

Token 174: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.023252815008163452
    2. ' ' → logprob: -3.7732527256011963
    3. '7' → logprob: -12.898252487182617
    4. ',' → logprob: -13.023252487182617
    5. '0' → logprob: -14.148252487182617
    6. '[' → logprob: -14.710752487182617
    7. '8' → logprob: -15.023252487182617
    8. '10' → logprob: -15.648252487182617
    9. ' ,' → logprob: -16.023252487182617
    10. '1' → logprob: -16.460752487182617

Token 175: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.17160502076148987
    2. ')]' → logprob: -2.546605110168457
    3. ',' → logprob: -2.796605110168457
    4. ')' → logprob: -4.046605110168457
    5. ' ]' → logprob: -8.171605110168457
    6. '])' → logprob: -8.796605110168457
    7. '<|end|>' → logprob: -8.796605110168457
    8. '`]' → logprob: -9.671605110168457
    9. '])]' → logprob: -10.421605110168457
    10. ',
' → logprob: -10.546605110168457

Token 176: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14097031950950623
    2. 'res' → logprob: -2.890970230102539
    3. 'ans' → logprob: -2.890970230102539
    4. 'if' → logprob: -4.640970230102539
    5. 'result' → logprob: -5.015970230102539
    6. 'results' → logprob: -6.140970230102539
    7. 'all' → logprob: -7.640970230102539
    8. 'out' → logprob: -8.265970230102539
    9. 'arr' → logprob: -8.265970230102539
    10. 'r' → logprob: -8.765970230102539

Token 177: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.021315302699804306
    2. '=' → logprob: -4.021315097808838
    3. 'ef' → logprob: -6.146315097808838
    4. ' ' → logprob: -7.271315097808838
    5. ',' → logprob: -8.896315574645996
    6. 'ic' → logprob: -9.396315574645996
    7. '  ' → logprob: -10.771315574645996
    8. 'f' → logprob: -11.146315574645996
    9. 'ist' → logprob: -11.646315574645996
    10. '=int' → logprob: -11.771315574645996

Token 178: ' ' (ID: 220)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004965239204466343
    2. ' K' → logprob: -5.879965305328369
    3. '2' → logprob: -7.004965305328369
    4. '1' → logprob: -7.504965305328369
    5. '3' → logprob: -8.754964828491211
    6. 'len' → logprob: -8.754964828491211
    7. '9' → logprob: -9.379964828491211
    8. 'int' → logprob: -9.879964828491211
    9. '6' → logprob: -9.879964828491211
    10. '10' → logprob: -10.129964828491211

Token 179: '2' (ID: 17)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.007488430477678776
    2. 'len' → logprob: -6.007488250732422
    3. '1' → logprob: -6.257488250732422
    4. '2' → logprob: -7.007488250732422
    5. 'int' → logprob: -8.007488250732422
    6. '3' → logprob: -8.132488250732422
    7. '9' → logprob: -8.132488250732422
    8. '4' → logprob: -8.257488250732422
    9. '10' → logprob: -8.257488250732422
    10. '6' → logprob: -8.257488250732422

Token 180: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05786927789449692
    2. '<|end|>' → logprob: -4.3078694343566895
    3. 'if' → logprob: -4.5578694343566895
    4. 'result' → logprob: -4.8078694343566895
    5. '
' → logprob: -4.8078694343566895
    6. 'results' → logprob: -5.0578694343566895
    7. ' for' → logprob: -5.9328694343566895
    8. 'res' → logprob: -6.0578694343566895
    9. 'tokens' → logprob: -7.3078694343566895
    10. '[' → logprob: -7.3078694343566895

Token 181: 'while' (ID: 7032)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08699649572372437
    2. 'res' → logprob: -3.461996555328369
    3. 'while' → logprob: -3.586996555328369
    4. 'results' → logprob: -4.961996555328369
    5. 'result' → logprob: -5.086996555328369
    6. 'if' → logprob: -5.711996555328369
    7. 'ans' → logprob: -5.836996555328369
    8. '[' → logprob: -6.336996555328369
    9. 'output' → logprob: -7.711996555328369
    10. 'out' → logprob: -8.086996078491211

Token 182: ' len' (ID: 4631)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.28251028060913086
    2. ' d' → logprob: -1.4075102806091309
    3. 'K' → logprob: -7.157510280609131
    4. 'True' → logprob: -8.782510757446289
    5. ' K' → logprob: -8.907510757446289
    6. ' True' → logprob: -9.157510757446289
    7. 'len' → logprob: -9.782510757446289
    8. '(d' → logprob: -9.782510757446289
    9. ' len' → logprob: -10.282510757446289
    10. ' ' → logprob: -11.657510757446289

Token 183: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.03581321984529495
    2. '(' → logprob: -3.410813331604004
    3. '(dic' → logprob: -7.035813331604004
    4. '(d' → logprob: -7.160813331604004
    5. '(s' → logprob: -8.410813331604004
    6. '(lst' → logprob: -9.660813331604004
    7. ' (' → logprob: -9.785813331604004
    8. 'ls' → logprob: -9.910813331604004
    9. '(str' → logprob: -10.410813331604004
    10. '(
' → logprob: -11.410813331604004

Token 184: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37488141655921936
    2. '<' → logprob: -1.874881386756897
    3. ' <' → logprob: -1.874881386756897
    4. ' )' → logprob: -5.874881267547607
    5. ')<' → logprob: -6.624881267547607
    6. '[' → logprob: -7.374881267547607
    7. '<len' → logprob: -7.749881267547607
    8. ' ' → logprob: -9.124881744384766
    9. ' <=' → logprob: -9.249881744384766
    10. '()<' → logprob: -9.499881744384766

Token 185: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18043549358844757
    2. '<' → logprob: -1.8054355382919312
    3. ' <=' → logprob: -8.305435180664062
    4. '[' → logprob: -8.430435180664062
    5. ' *' → logprob: -9.805435180664062
    6. '<len' → logprob: -10.180435180664062
    7. '<K' → logprob: -10.305435180664062
    8. '<=' → logprob: -10.680435180664062
    9. '*' → logprob: -11.430435180664062
    10. '<size' → logprob: -11.555435180664062

Token 186: ' K' (ID: 658)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.03020409494638443
    2. ' K' → logprob: -3.5302040576934814
    3. '10' → logprob: -8.405203819274902
    4. ' ' → logprob: -8.905203819274902
    5. '9' → logprob: -10.530203819274902
    6. '100' → logprob: -10.655203819274902
    7. '(' → logprob: -11.530203819274902
    8. '2' → logprob: -11.530203819274902
    9. '1' → logprob: -12.405203819274902
    10. 'int' → logprob: -13.155203819274902

Token 187: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002552242483943701
    2. ':
' → logprob: -6.002552032470703
    3. ' :' → logprob: -9.752552032470703
    4. ' and' → logprob: -11.502552032470703
    5. ' or' → logprob: -12.752552032470703
    6. 'and' → logprob: -13.127552032470703
    7. ':d' → logprob: -13.627552032470703
    8. ' :
' → logprob: -14.252552032470703
    9. 'd' → logprob: -14.752552032470703
    10. '*' → logprob: -15.752552032470703

Token 188: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.028253186494112015
    2. '   ' → logprob: -3.6532530784606934
    3. ' d' → logprob: -6.653253078460693
    4. 'ls' → logprob: -8.278253555297852
    5. '```' → logprob: -9.153253555297852
    6. 'new' → logprob: -9.653253555297852
    7. '	d' → logprob: -9.903253555297852
    8. 'temp' → logprob: -10.528253555297852
    9. 'lst' → logprob: -11.153253555297852
    10. ' new' → logprob: -11.153253555297852

Token 189: ' for' (ID: 395)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.034732747822999954
    2. 'new' → logprob: -4.659732818603516
    3. 'ls' → logprob: -4.909732818603516
    4. ' d' → logprob: -5.034732818603516
    5. 'temp' → logprob: -5.659732818603516
    6. 'tmp' → logprob: -5.659732818603516
    7. '   ' → logprob: -6.909732818603516
    8. ' new' → logprob: -6.909732818603516
    9. ' ls' → logprob: -8.159732818603516
    10. 'ans' → logprob: -8.284732818603516

Token 190: ' i' (ID: 575)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.46549761295318604
    2. 'i' → logprob: -1.590497612953186
    3. ' x' → logprob: -2.7154974937438965
    4. ' i' → logprob: -3.0904974937438965
    5. 'pre' → logprob: -3.7154974937438965
    6. ' pre' → logprob: -3.8404974937438965
    7. 'num' → logprob: -6.3404974937438965
    8. 'l' → logprob: -6.8404974937438965
    9. 'n' → logprob: -6.8404974937438965
    10. '_' → logprob: -7.0904974937438965

Token 191: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3140900731086731
    2. 'in' → logprob: -1.3140900135040283
    3. ' ' → logprob: -7.439090251922607
    4. ',' → logprob: -9.56408977508545
    5. 'ls' → logprob: -9.93908977508545
    6. ' ls' → logprob: -9.93908977508545
    7. 'range' → logprob: -10.06408977508545
    8. ' range' → logprob: -12.18908977508545
    9. '  ' → logprob: -12.56408977508545
    10. 's' → logprob: -12.68908977508545

Token 192: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.017762737348675728
    2. 'ls' → logprob: -4.392762660980225
    3. ' range' → logprob: -5.267762660980225
    4. ' ls' → logprob: -10.267763137817383
    5. 'list' → logprob: -10.517763137817383
    6. '[' → logprob: -11.392763137817383
    7. 're' → logprob: -12.892763137817383
    8. '(range' → logprob: -13.642763137817383
    9. ' ' → logprob: -14.017763137817383
    10. '(' → logprob: -14.142763137817383

Token 193: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2270369529724121
    2. '(len' → logprob: -2.227036952972412
    3. '(d' → logprob: -2.352036952972412
    4. 'd' → logprob: -11.10203742980957
    5. '(n' → logprob: -11.22703742980957
    6. ' (' → logprob: -11.47703742980957
    7. '1' → logprob: -11.85203742980957
    8. '(l' → logprob: -11.97703742980957
    9. '(-' → logprob: -11.97703742980957
    10. 'len' → logprob: -12.10203742980957

Token 194: '1' (ID: 16)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.13220442831516266
    2. '1' → logprob: -2.382204532623291
    3. '9' → logprob: -3.632204532623291
    4. '10' → logprob: -6.132204532623291
    5. 'd' → logprob: -6.257204532623291
    6. '(len' → logprob: -7.382204532623291
    7. ' len' → logprob: -9.382204055786133
    8. '0' → logprob: -9.507204055786133
    9. '(' → logprob: -9.632204055786133
    10. '8' → logprob: -10.007204055786133

Token 195: ',' (ID: 11)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2562425136566162
    2. ',' → logprob: -1.5062425136566162
    3. ',d' → logprob: -6.006242752075195
    4. 'd' → logprob: -6.881242752075195
    5. ' ,' → logprob: -8.131242752075195
    6. ' d' → logprob: -8.381242752075195
    7. ' ' → logprob: -8.631242752075195
    8. '1' → logprob: -10.131242752075195
    9. '   ' → logprob: -11.256242752075195
    10. '9' → logprob: -11.381242752075195

Token 196: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.6895233531831764e-05
    2. ' ' → logprob: -10.62502670288086
    3. 'd' → logprob: -13.25002670288086
    4. '0' → logprob: -15.37502670288086
    5. 'len' → logprob: -15.62502670288086
    6. '9' → logprob: -16.00002670288086
    7. '=' → logprob: -17.00002670288086
    8. ')' → logprob: -17.25002670288086
    9. '```' → logprob: -17.87502670288086
    10. '>' → logprob: -18.06252670288086

Token 197: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -5.676981345459353e-06
    2. 'd' → logprob: -12.500005722045898
    3. '9' → logprob: -13.750005722045898
    4. '0' → logprob: -14.750005722045898
    5. 'len' → logprob: -15.250005722045898
    6. ' ' → logprob: -16.1250057220459
    7. '=' → logprob: -16.3750057220459
    8. '11' → logprob: -17.5000057220459
    9. '```' → logprob: -18.6250057220459
    10. '1' → logprob: -19.0000057220459

Token 198: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18007004261016846
    2. '):
' → logprob: -1.8050700426101685
    3. ' ):' → logprob: -8.680069923400879
    4. '+' → logprob: -9.430069923400879
    5. ':' → logprob: -10.805069923400879
    6. ' ):
' → logprob: -10.930069923400879
    7. '):
' → logprob: -11.055069923400879
    8. ')' → logprob: -11.430069923400879
    9. '   ' → logprob: -12.555069923400879
    10. '}:' → logprob: -13.305069923400879

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013656583614647388
    2. '<|end|>' → logprob: -5.0136566162109375
    3. '   ' → logprob: -6.2636566162109375
    4. '[' → logprob: -6.8886566162109375
    5. '[]' → logprob: -7.5136566162109375
    6. '        
' → logprob: -7.5136566162109375
    7. ' ' → logprob: -7.5136566162109375
    8. ',' → logprob: -8.388656616210938
    9. ' if' → logprob: -8.513656616210938
    10. '    
' → logprob: -8.638656616210938

Token 200: ' ls' (ID: 41498)
  Prédit: 'ls'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ls' (adapté à ' ls') → logprob: -0.8033002018928528
    2. ' new' → logprob: -1.303300142288208
    3. 'new' → logprob: -1.928300142288208
    4. ' ls' → logprob: -2.803300142288208
    5. 'tmp' → logprob: -3.803300142288208
    6. 'temp' → logprob: -4.303300380706787
    7. '   ' → logprob: -4.428300380706787
    8. 'if' → logprob: -5.053300380706787
    9. ' if' → logprob: -5.678300380706787
    10. ' tmp' → logprob: -5.928300380706787

Token 201: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08876560628414154
    2. '+=' → logprob: -2.5887656211853027
    3. '.extend' → logprob: -5.088765621185303
    4. ' =' → logprob: -6.088765621185303
    5. '=' → logprob: -6.588765621185303
    6. '+' → logprob: -11.588765144348145
    7. ' +' → logprob: -12.963765144348145
    8. '.' → logprob: -13.838765144348145
    9. 'extend' → logprob: -13.838765144348145
    10. ' ' → logprob: -14.338765144348145

Token 202: ' rec' (ID: 1369)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.16031043231487274
    2. ' rec' → logprob: -1.9103103876113892
    3. '[' → logprob: -9.785310745239258
    4. '(rec' → logprob: -10.660310745239258
    5. ' [' → logprob: -12.535310745239258
    6. 're' → logprob: -14.160310745239258
    7. ' ' → logprob: -14.160310745239258
    8. '	rec' → logprob: -15.160310745239258
    9. 'list' → logprob: -15.285310745239258
    10. '["' → logprob: -15.535310745239258

Token 203: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.00038586699520237744
    2. '(' → logprob: -7.875385761260986
    3. 'd' → logprob: -12.375386238098145
    4. '(
' → logprob: -13.875386238098145
    5. '(i' → logprob: -15.625386238098145
    6. '```' → logprob: -16.000385284423828
    7. ')d' → logprob: -17.250385284423828
    8. '(D' → logprob: -17.375385284423828
    9. '(depth' → logprob: -17.500385284423828
    10. ' (' → logprob: -17.750385284423828

Token 204: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007465950679033995
    2. ',i' → logprob: -5.132465839385986
    3. '(i' → logprob: -7.007465839385986
    4. ' ,' → logprob: -7.382465839385986
    5. '(' → logprob: -12.382466316223145
    6. ' i' → logprob: -13.882466316223145
    7. '[i' → logprob: -13.882466316223145
    8. '   ' → logprob: -14.132466316223145
    9. ')' → logprob: -14.507466316223145
    10. 'i' → logprob: -14.632466316223145

Token 205: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006122402846813202
    2. ',' → logprob: -7.625612258911133
    3. 'i' → logprob: -9.875612258911133
    4. ' ' → logprob: -10.500612258911133
    5. ',i' → logprob: -10.500612258911133
    6. '2' → logprob: -11.500612258911133
    7. ' i' → logprob: -12.500612258911133
    8. ' ,' → logprob: -13.500612258911133
    9. '```' → logprob: -14.500612258911133
    10. '(i' → logprob: -14.625612258911133

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004682073777075857
    2. 'i' → logprob: -7.7504682540893555
    3. ',' → logprob: -10.875468254089355
    4. '2' → logprob: -12.000468254089355
    5. ' ' → logprob: -12.125468254089355
    6. ',i' → logprob: -13.000468254089355
    7. ' i' → logprob: -13.000468254089355
    8. '[i' → logprob: -14.000468254089355
    9. '(i' → logprob: -14.625468254089355
    10. '   ' → logprob: -14.750468254089355

Token 207: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003393967868760228
    2. ' ,' → logprob: -6.00339412689209
    3. ',i' → logprob: -7.00339412689209
    4. 'i' → logprob: -12.75339412689209
    5. ' i' → logprob: -12.87839412689209
    6. '(i' → logprob: -13.00339412689209
    7. ',
' → logprob: -14.62839412689209
    8. '   ' → logprob: -14.75339412689209
    9. '[i' → logprob: -15.87839412689209
    10. '(),' → logprob: -16.128393173217773

Token 208: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3132685720920563
    2. ' i' → logprob: -1.3132685422897339
    3. ' ' → logprob: -12.813268661499023
    4. '   ' → logprob: -13.438268661499023
    5. '	i' → logprob: -14.313268661499023
    6. ')i' → logprob: -14.438268661499023
    7. '(i' → logprob: -15.438268661499023
    8. '    ' → logprob: -15.563268661499023
    9. '$i' → logprob: -15.813268661499023
    10. '*i' → logprob: -15.938268661499023

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004823007620871067
    2. ' ,' → logprob: -5.629823207855225
    3. ' -' → logprob: -7.504823207855225
    4. '-' → logprob: -8.379822731018066
    5. ',i' → logprob: -8.629822731018066
    6. ',str' → logprob: -8.754822731018066
    7. ',"' → logprob: -10.129822731018066
    8. 'str' → logprob: -10.504822731018066
    9. 'i' → logprob: -10.504822731018066
    10. ' ,""' → logprob: -13.254822731018066

Token 210: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.0017066054278984666
    2. ' str' → logprob: -6.376706600189209
    3. '	str' → logprob: -13.751707077026367
    4. '""' → logprob: -13.876707077026367
    5. ' ' → logprob: -14.251707077026367
    6. '(str' → logprob: -14.501707077026367
    7. '[str' → logprob: -15.001707077026367
    8. '"' → logprob: -15.501707077026367
    9. '=str' → logprob: -15.501707077026367
    10. '  ' → logprob: -16.001707077026367

Token 211: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -12.750003814697266
    3. 'i' → logprob: -14.750003814697266
    4. ')i' → logprob: -18.250003814697266
    5. ')' → logprob: -18.750003814697266
    6. '[i' → logprob: -19.000003814697266
    7. '	i' → logprob: -19.125003814697266
    8. ' (' → logprob: -19.125003814697266
    9. '(s' → logprob: -19.875003814697266
    10. '(
' → logprob: -19.875003814697266

Token 212: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.002379569225013256
    2. ')' → logprob: -6.502379417419434
    3. '))
' → logprob: -7.127379417419434
    4. ')))' → logprob: -9.627379417419434
    5. ' ))' → logprob: -12.127379417419434
    6. '))
' → logprob: -14.377379417419434
    7. '))

' → logprob: -14.502379417419434
    8. '       ' → logprob: -15.252379417419434
    9. ')
' → logprob: -15.377379417419434
    10. '   ' → logprob: -15.502379417419434

Token 213: '   ' (ID: 271)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4499480426311493
    2. '
' → logprob: -1.0749480724334717
    3. '   ' → logprob: -5.574947834014893
    4. ' 
' → logprob: -5.699947834014893
    5. '    
' → logprob: -5.949947834014893
    6. '\' → logprob: -6.199947834014893
    7. ' d' → logprob: -6.199947834014893
    8. ')
' → logprob: -6.324947834014893
    9. '\n' → logprob: -7.074947834014893
    10. '  
' → logprob: -7.199947834014893

Token 214: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.029789602383971214
    2. ' d' → logprob: -3.529789686203003
    3. '   ' → logprob: -10.404789924621582
    4. ' 
' → logprob: -12.404789924621582
    5. '	d' → logprob: -13.154789924621582
    6. '
' → logprob: -13.279789924621582
    7. '```' → logprob: -15.279789924621582
    8. ' ' → logprob: -15.779789924621582
    9. ',d' → logprob: -16.029788970947266
    10. '    
' → logprob: -16.279788970947266

Token 215: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0006172468420118093
    2. ' +=' → logprob: -7.500617027282715
    3. '=' → logprob: -10.250617027282715
    4. '+' → logprob: -10.500617027282715
    5. ']+=' → logprob: -14.500617027282715
    6. '+='' → logprob: -14.750617027282715
    7. '+="' → logprob: -15.125617027282715
    8. '++' → logprob: -16.50061798095703
    9. '+=(' → logprob: -17.00061798095703
    10. ')' → logprob: -17.87561798095703

Token 216: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -19.250003814697266
    4. '```' → logprob: -19.250003814697266
    5. '１' → logprob: -19.625003814697266
    6. '+' → logprob: -20.000003814697266
    7. '۱' → logprob: -20.250003814697266
    8. '  ' → logprob: -20.937503814697266
    9. '१' → logprob: -21.250003814697266
    10. '১' → logprob: -21.312503814697266

Token 217: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.812501907348633
    4. '１' → logprob: -18.312501907348633
    5. '   ' → logprob: -18.812501907348633
    6. '+' → logprob: -19.000001907348633
    7. '۱' → logprob: -19.000001907348633
    8. '2' → logprob: -19.437501907348633
    9. '१' → logprob: -19.562501907348633
    10. '﻿' → logprob: -19.687501907348633

Token 218: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8678401708602905
    2. '<|end|>' → logprob: -1.1178401708602905
    3. 'ls' → logprob: -1.4928401708602905
    4. 'if' → logprob: -4.74284029006958
    5. '[' → logprob: -5.49284029006958
    6. ' ls' → logprob: -5.74284029006958
    7. '
' → logprob: -6.11784029006958
    8. '(ls' → logprob: -6.49284029006958
    9. '_ls' → logprob: -6.49284029006958
    10. ')' → logprob: -6.86784029006958

Token 219: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31103211641311646
    2. 'ls' → logprob: -1.5610320568084717
    3. '[' → logprob: -3.8110320568084717
    4. '<|end|>' → logprob: -4.561032295227051
    5. 'if' → logprob: -4.811032295227051
    6. '.' → logprob: -6.061032295227051
    7. 'for' → logprob: -6.061032295227051
    8. '#' → logprob: -6.436032295227051
    9. 'lst' → logprob: -6.936032295227051
    10. '[:]' → logprob: -6.936032295227051

Token 220: '(ls' (ID: 128476)
  Prédit: '(ls'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ls' → logprob: -0.030815331265330315
    2. '(min' → logprob: -3.905815362930298
    3. '(sorted' → logprob: -4.655815124511719
    4. '(*' → logprob: -7.780815124511719
    5. '(' → logprob: -8.405815124511719
    6. 'ls' → logprob: -10.530815124511719
    7. '(len' → logprob: -11.905815124511719
    8. '('' → logprob: -12.030815124511719
    9. '([' → logprob: -12.405815124511719
    10. 'min' → logprob: -12.405815124511719

Token 221: '[K' (ID: 137571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0018155979923903942
    2. '[' → logprob: -6.3768157958984375
    3. '[K' → logprob: -10.376815795898438
    4. '[-' → logprob: -10.501815795898438
    5. '])' → logprob: -11.376815795898438
    6. '))' → logprob: -11.501815795898438
    7. '[:' → logprob: -11.501815795898438
    8. '[len' → logprob: -12.001815795898438
    9. ')`' → logprob: -12.126815795898438
    10. '[])' → logprob: -12.876815795898438

Token 222: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0009747094009071589
    2. '])' → logprob: -7.375974655151367
    3. ' -' → logprob: -8.000974655151367
    4. ']' → logprob: -11.625974655151367
    5. '−' → logprob: -13.250974655151367
    6. '1' → logprob: -14.125974655151367
    7. ']-' → logprob: -14.750974655151367
    8. '–' → logprob: -15.875974655151367
    9. ')' → logprob: -16.000974655151367
    10. '[' → logprob: -16.000974655151367

Token 223: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.875000953674316
    3. '])' → logprob: -14.875000953674316
    4. ')' → logprob: -18.375001907348633
    5. ']' → logprob: -18.500001907348633
    6. '0' → logprob: -19.000001907348633
    7. '```' → logprob: -20.125001907348633
    8. '2' → logprob: -20.250001907348633
    9. '۱' → logprob: -20.375001907348633
    10. '１' → logprob: -20.687501907348633

Token 224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. ']' → logprob: -16.875
    4. '])' → logprob: -17.875
    5. ')' → logprob: -18.125
    6. '0' → logprob: -18.625
    7. '2' → logprob: -18.875
    8. '```' → logprob: -19.1875
    9. '１' → logprob: -19.4375
    10. '۱' → logprob: -19.4375

Token 225: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.500000953674316
    3. ')`' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.625
    5. '})' → logprob: -17.875
    6. ')}' → logprob: -17.875
    7. ')
' → logprob: -18.0
    8. '])' → logprob: -18.125
    9. '`)' → logprob: -19.25
    10. ')]' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 223
Tokens correctement prédits (1ère position, stricte): 88
Tokens correctement prédits (1ère position, avec adaptation): 95
Tokens correctement prédits (top 10): 191
Précision stricte (1ère position): 39.46%
Précision adaptée (1ère position): 42.60%
Précision (top 10): 85.65%
================================================================================
