================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:12:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
r = int(input())
if r < 1200:
    print("ABC")
elif r < 2800:
    print("ARC")
else:
    print("AGC")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'r' (ID: 81)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003573919821064919
    2. '(r' → logprob: -8.375357627868652
    3. 'r' → logprob: -10.125357627868652
    4. '('' → logprob: -10.375357627868652
    5. '()' → logprob: -11.250357627868652
    6. '```' → logprob: -11.875357627868652
    7. '("("' → logprob: -11.875357627868652
    8. ''' → logprob: -12.000357627868652
    9. ')' → logprob: -12.000357627868652
    10. '(input' → logprob: -12.500357627868652

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.083615243434906
    2. ')' → logprob: -2.583615303039551
    3. '()' → logprob: -6.208615303039551
    4. '(
' → logprob: -7.458615303039551
    5. ''' → logprob: -7.958615303039551
    6. '```' → logprob: -8.33361530303955
    7. '('' → logprob: -8.70861530303955
    8. '())' → logprob: -8.83361530303955
    9. '")' → logprob: -8.95861530303955
    10. '`' → logprob: -8.95861530303955

Token 5: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6223700046539307
    2. 'if' → logprob: -2.2473700046539307
    3. '*' → logprob: -2.3723700046539307
    4. 's' → logprob: -2.8723700046539307
    5. 'i' → logprob: -3.1223700046539307
    6. '\n' → logprob: -3.1223700046539307
    7. ''' → logprob: -3.3723700046539307
    8. '%' → logprob: -3.9973700046539307
    9. '#' → logprob: -4.622369766235352
    10. '`' → logprob: -4.747369766235352

Token 6: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1145716980099678
    2. ' ' → logprob: -2.2395718097686768
    3. 'r' → logprob: -6.364571571350098
    4. ' ' → logprob: -11.239571571350098
    5. '  ' → logprob: -12.489571571350098
    6. '_r' → logprob: -13.364571571350098
    7. ' р' → logprob: -13.364571571350098
    8. ' not' → logprob: -13.489571571350098
    9. ' (' → logprob: -13.614571571350098
    10. ' "' → logprob: -15.052071571350098

Token 7: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.07025573402643204
    2. ' ' → logprob: -3.695255756378174
    3. ' >=' → logprob: -4.070255756378174
    4. '>' → logprob: -4.445255756378174
    5. ' <' → logprob: -4.695255756378174
    6. ' ==' → logprob: -5.820255756378174
    7. ' <=' → logprob: -7.195255756378174
    8. '  ' → logprob: -8.070255279541016
    9. '<' → logprob: -8.445255279541016
    10. ')' → logprob: -8.570255279541016

Token 8: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06101261079311371
    2. '10' → logprob: -3.6860125064849854
    3. '100' → logprob: -4.8110127449035645
    4. '=' → logprob: -4.9360127449035645
    5. '0' → logprob: -5.1860127449035645
    6. '20' → logprob: -5.1860127449035645
    7. '5' → logprob: -6.1860127449035645
    8. '50' → logprob: -6.5610127449035645
    9. '1' → logprob: -7.0610127449035645
    10. '30' → logprob: -7.8110127449035645

Token 9: '120' (ID: 6106)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.642236590385437
    2. ' ' → logprob: -1.392236590385437
    3. '0' → logprob: -2.6422367095947266
    4. '5' → logprob: -3.1422367095947266
    5. '100' → logprob: -3.1422367095947266
    6. '50' → logprob: -4.142236709594727
    7. '18' → logprob: -4.267236709594727
    8. '20' → logprob: -4.267236709594727
    9. '1' → logprob: -5.017236709594727
    10. '3' → logprob: -5.642236709594727

Token 10: '0' (ID: 15)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.676981345459353e-06
    2. ':
' → logprob: -13.375005722045898
    3. ':**' → logprob: -13.625005722045898
    4. '>:' → logprob: -14.375005722045898
    5. '':' → logprob: -14.500005722045898
    6. '>' → logprob: -14.500005722045898
    7. ' :' → logprob: -14.625005722045898
    8. '):' → logprob: -15.375005722045898
    9. '0' → logprob: -15.500005722045898
    10. ',' → logprob: -16.6250057220459

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.8232690460281447e-05
    2. ':
' → logprob: -10.000048637390137
    3. '):' → logprob: -13.875048637390137
    4. '':' → logprob: -14.250048637390137
    5. ':**' → logprob: -14.875048637390137
    6. ' :' → logprob: -15.000048637390137
    7. '>:' → logprob: -15.250048637390137
    8. '>' → logprob: -16.37504768371582
    9. ':\' → logprob: -16.75004768371582
    10. '':'' → logprob: -16.75004768371582

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018635177984833717
    2. 'print' → logprob: -4.643635272979736
    3. ' print' → logprob: -5.143635272979736
    4. '\n' → logprob: -6.768635272979736
    5. ':' → logprob: -7.018635272979736
    6. '    ' → logprob: -8.268634796142578
    7. '\' → logprob: -8.768634796142578
    8. '	print' → logprob: -9.143634796142578
    9. ' ' → logprob: -9.518634796142578
    10. ''\' → logprob: -9.518634796142578

Token 13: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.2261705994606018
    2. ' print' → logprob: -1.601170539855957
    3. '   ' → logprob: -7.226170539855957
    4. ' ' → logprob: -11.101170539855957
    5. '    ' → logprob: -11.851170539855957
    6. 'r' → logprob: -13.226170539855957
    7. '  ' → logprob: -13.476170539855957
    8. 'pr' → logprob: -14.101170539855957
    9. '	print' → logprob: -14.226170539855957
    10. '```' → logprob: -14.538670539855957

Token 14: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.2674960494041443
    2. '(' → logprob: -1.517496109008789
    3. '('' → logprob: -4.392496109008789
    4. '("("' → logprob: -5.892496109008789
    5. '("")' → logprob: -8.642496109008789
    6. '("(' → logprob: -9.767496109008789
    7. '()' → logprob: -10.642496109008789
    8. '("""' → logprob: -11.642496109008789
    9. '(":' → logprob: -11.767496109008789
    10. '"' → logprob: -12.267496109008789

Token 15: 'ABC' (ID: 44197)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.1894938945770264
    2. 'ABC' → logprob: -1.1894938945770264
    3. 'New' → logprob: -1.9394938945770264
    4. 'Brown' → logprob: -3.0644938945770264
    5. 'Bron' → logprob: -3.9394938945770264
    6. ''' → logprob: -4.0644941329956055
    7. '   ' → logprob: -4.3144941329956055
    8. ' Amateur' → logprob: -4.4394941329956055
    9. ' newbie' → logprob: -4.5644941329956055
    10. 'brown' → logprob: -4.8144941329956055

Token 16: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.2246291337069124e-05
    2. ')' → logprob: -11.000021934509277
    3. '")
' → logprob: -12.875021934509277
    4. ')")' → logprob: -13.625021934509277
    5. '\")' → logprob: -14.750021934509277
    6. '")
' → logprob: -15.000021934509277
    7. '"' → logprob: -15.250021934509277
    8. '")

' → logprob: -15.625021934509277
    9. '”)' → logprob: -15.750021934509277
    10. '!")' → logprob: -16.000022888183594

Token 17: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.09026617556810379
    2. 'else' → logprob: -2.465266227722168
    3. ' elif' → logprob: -7.715266227722168
    4. ' else' → logprob: -7.715266227722168
    5. '```' → logprob: -8.090266227722168
    6. '<|end|>' → logprob: -10.090266227722168
    7. '\n' → logprob: -10.340266227722168
    8. 'el' → logprob: -11.090266227722168
    9. '
' → logprob: -11.840266227722168
    10. '#elif' → logprob: -12.215266227722168

Token 18: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.008246467448771
    2. ' ' → logprob: -4.883246421813965
    3. 'r' → logprob: -7.383246421813965
    4. ' ' → logprob: -11.133246421813965
    5. ' (' → logprob: -13.508246421813965
    6. '(r' → logprob: -13.883246421813965
    7. '  ' → logprob: -14.508246421813965
    8. '    ' → logprob: -15.383246421813965
    9. '0' → logprob: -15.633246421813965
    10. 's' → logprob: -16.00824737548828

Token 19: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.0069856722839176655
    2. ' >=' → logprob: -5.756985664367676
    3. ' <=' → logprob: -6.006985664367676
    4. '<' → logprob: -6.756985664367676
    5. ' ' → logprob: -8.756985664367676
    6. ' >' → logprob: -12.631985664367676
    7. ' ==' → logprob: -13.006985664367676
    8. '>=' → logprob: -13.006985664367676
    9. '<=' → logprob: -13.131985664367676
    10. '[' → logprob: -13.131985664367676

Token 20: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1355762779712677
    2. '200' → logprob: -2.8855762481689453
    3. '180' → logprob: -3.5105762481689453
    4. '160' → logprob: -4.135576248168945
    5. '140' → logprob: -5.260576248168945
    6. '170' → logprob: -5.510576248168945
    7. '```' → logprob: -5.510576248168945
    8. '150' → logprob: -5.885576248168945
    9. '280' → logprob: -5.885576248168945
    10. '

' → logprob: -6.635576248168945

Token 21: '280' (ID: 17713)
  Prédit: '280'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '280' → logprob: -0.3370794653892517
    2. '140' → logprob: -1.7120795249938965
    3. '180' → logprob: -3.2120795249938965
    4. '220' → logprob: -4.3370795249938965
    5. ' ' → logprob: -4.7120795249938965
    6. '170' → logprob: -4.8370795249938965
    7. '200' → logprob: -4.9620795249938965
    8. '```' → logprob: -5.0870795249938965
    9. '210' → logprob: -5.4620795249938965
    10. '190' → logprob: -5.4620795249938965

Token 22: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.849109119386412e-06
    2. '400' → logprob: -12.625009536743164
    3. '00' → logprob: -12.750009536743164
    4. '   ' → logprob: -13.875009536743164
    5. '000' → logprob: -14.625009536743164
    6. '4' → logprob: -14.750009536743164
    7. '       ' → logprob: -15.125009536743164
    8. '```' → logprob: -15.250009536743164
    9. ' ' → logprob: -15.500009536743164
    10. '1' → logprob: -15.937509536743164

Token 23: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.2855416066013277e-05
    2. ':
' → logprob: -11.125032424926758
    3. '):' → logprob: -11.250032424926758
    4. ' :' → logprob: -13.250032424926758
    5. '>:' → logprob: -13.500032424926758
    6. '+:' → logprob: -14.125032424926758
    7. ':**' → logprob: -14.625032424926758
    8. '   ' → logprob: -16.250032424926758
    9. '':' → logprob: -16.250032424926758
    10. ':return' → logprob: -16.250032424926758

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002113381866365671
    2. '       ' → logprob: -6.752113342285156
    3. '"' → logprob: -7.627113342285156
    4. '    ' → logprob: -8.377113342285156
    5. 'print' → logprob: -9.377113342285156
    6. ' print' → logprob: -9.877113342285156
    7. ''' → logprob: -10.377113342285156
    8. ' ' → logprob: -11.252113342285156
    9. '```' → logprob: -11.252113342285156
    10. '`' → logprob: -11.377113342285156

Token 25: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.11030400544404984
    2. '   ' → logprob: -2.360304117202759
    3. ' print' → logprob: -4.61030387878418
    4. ' ' → logprob: -9.98530387878418
    5. '       ' → logprob: -11.48530387878418
    6. '    ' → logprob: -11.61030387878418
    7. '	print' → logprob: -11.73530387878418
    8. '  ' → logprob: -11.73530387878418
    9. '"' → logprob: -11.98530387878418
    10. '```' → logprob: -12.11030387878418

Token 26: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.03374263271689415
    2. '(' → logprob: -3.533742666244507
    3. '("("' → logprob: -5.533742427825928
    4. '("(' → logprob: -10.658742904663086
    5. '("")' → logprob: -12.658742904663086
    6. '('' → logprob: -12.783742904663086
    7. '(""' → logprob: -13.408742904663086
    8. '("""' → logprob: -14.033742904663086
    9. '("\"' → logprob: -14.533742904663086
    10. '()' → logprob: -15.908742904663086

Token 27: 'ARC' (ID: 64758)
  Prédit: 'ARC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ARC' → logprob: -0.31500551104545593
    2. '"' → logprob: -1.3150055408477783
    3. ' ARC' → logprob: -6.815005302429199
    4. '")' → logprob: -8.9400053024292
    5. '""' → logprob: -8.9400053024292
    6. '">' → logprob: -9.8150053024292
    7. '"W' → logprob: -9.8150053024292
    8. '"B' → logprob: -10.0650053024292
    9. ')' → logprob: -10.5650053024292
    10. '"\' → logprob: -10.6900053024292

Token 28: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003201358253136277
    2. '")
' → logprob: -5.753201484680176
    3. ')' → logprob: -11.503201484680176
    4. '")
' → logprob: -12.253201484680176
    5. '")

' → logprob: -13.128201484680176
    6. '"' → logprob: -13.378201484680176
    7. '```' → logprob: -14.253201484680176
    8. '"):' → logprob: -14.378201484680176
    9. '   ' → logprob: -14.503201484680176
    10. ')")' → logprob: -14.753201484680176

Token 29: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0006133131100796163
    2. ' else' → logprob: -7.750613212585449
    3. 'elif' → logprob: -8.62561321258545
    4. '_else' → logprob: -13.25061321258545
    5. '```' → logprob: -14.25061321258545
    6. '	else' → logprob: -15.00061321258545
    7. 'elser' → logprob: -16.000614166259766
    8. '#else' → logprob: -16.375614166259766
    9. '<|end|>' → logprob: -16.875614166259766
    10. 'elses' → logprob: -16.875614166259766

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -6.034592388459714e-06
    2. ':
' → logprob: -12.375005722045898
    3. ' :' → logprob: -13.500005722045898
    4. '   ' → logprob: -15.750005722045898
    5. '):' → logprob: -16.6250057220459
    6. ':**' → logprob: -17.2500057220459
    7. '():' → logprob: -17.3750057220459
    8. ':return' → logprob: -17.6250057220459
    9. ':
' → logprob: -17.7500057220459
    10. '：' → logprob: -18.0000057220459

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0003884894831571728
    2. 'print' → logprob: -8.125388145446777
    3. ' print' → logprob: -9.875388145446777
    4. '```' → logprob: -10.750388145446777
    5. '"' → logprob: -11.750388145446777
    6. '    ' → logprob: -12.625388145446777
    7. '       ' → logprob: -12.875388145446777
    8. ' ' → logprob: -13.875388145446777
    9. '``' → logprob: -13.875388145446777
    10. '  ' → logprob: -14.250388145446777

Token 32: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.005304315593093634
    2. ' print' → logprob: -5.630304336547852
    3. '   ' → logprob: -6.380304336547852
    4. '	print' → logprob: -12.255304336547852
    5. ' ' → logprob: -13.630304336547852
    6. '    ' → logprob: -14.380304336547852
    7. '```' → logprob: -14.630304336547852
    8. '       ' → logprob: -14.755304336547852
    9. '  ' → logprob: -14.880304336547852
    10. '.print' → logprob: -16.25530433654785

Token 33: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.059141453355550766
    2. '(' → logprob: -3.0591413974761963
    3. '("("' → logprob: -4.559141635894775
    4. '("")' → logprob: -11.684141159057617
    5. '("(' → logprob: -12.059141159057617
    6. '('' → logprob: -12.184141159057617
    7. '("="' → logprob: -13.434141159057617
    8. '()' → logprob: -13.434141159057617
    9. '(""' → logprob: -13.559141159057617
    10. '(">' → logprob: -13.559141159057617

Token 34: 'AG' (ID: 2971)
  Prédit: 'AG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AG' → logprob: -0.39504778385162354
    2. '"' → logprob: -1.1450477838516235
    3. '")' → logprob: -6.395047664642334
    4. '"""' → logprob: -6.395047664642334
    5. '   ' → logprob: -6.770047664642334
    6. 'ABC' → logprob: -7.145047664642334
    7. '""' → logprob: -7.145047664642334
    8. ')' → logprob: -8.270048141479492
    9. ''' → logprob: -8.270048141479492
    10. ' AG' → logprob: -8.520048141479492

Token 35: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -1.306760805164231e-05
    2. '"C' → logprob: -12.50001335144043
    3. 'Ｃ' → logprob: -12.75001335144043
    4. 'CO' → logprob: -13.25001335144043
    5. ' C' → logprob: -13.75001335144043
    6. '")' → logprob: -13.87501335144043
    7. 'I' → logprob: -14.50001335144043
    8. 'CODE' → logprob: -14.75001335144043
    9. '   ' → logprob: -14.87501335144043
    10. '```' → logprob: -14.87501335144043

Token 36: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00010366239439463243
    2. ')' → logprob: -9.250103950500488
    3. ')")' → logprob: -12.625103950500488
    4. '")
' → logprob: -12.750103950500488
    5. '"' → logprob: -13.750103950500488
    6. '```' → logprob: -15.875103950500488
    7. '')' → logprob: -17.625102996826172
    8. '()' → logprob: -17.875102996826172
    9. '")
' → logprob: -18.000102996826172
    10. '}")' → logprob: -18.125102996826172


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 34
Tokens correctement prédits (1ère position, stricte): 19
Tokens correctement prédits (1ère position, avec adaptation): 22
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 55.88%
Précision adaptée (1ère position): 64.71%
Précision (top 10): 94.12%
================================================================================
