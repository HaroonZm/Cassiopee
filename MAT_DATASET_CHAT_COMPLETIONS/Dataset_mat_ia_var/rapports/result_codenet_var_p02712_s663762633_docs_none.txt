================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
ans = 0
for i in range(1, N+1):
    if i % 3 == 0:
        continue
    if i % 5 == 0:
        continue
    ans += i
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001940040965564549
    2. '```' → logprob: -9.50019359588623
    3. '(N' → logprob: -10.50019359588623
    4. '`' → logprob: -10.87519359588623
    5. '(
' → logprob: -11.00019359588623
    6. ')' → logprob: -11.62519359588623
    7. '("("' → logprob: -11.62519359588623
    8. ''' → logprob: -11.62519359588623
    9. '()' → logprob: -11.75019359588623
    10. '('' → logprob: -12.25019359588623

Token 4: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6509628295898438
    2. '(' → logprob: -0.7759628295898438
    3. '()' → logprob: -4.650962829589844
    4. '())' → logprob: -4.900962829589844
    5. '(
' → logprob: -8.525962829589844
    6. '>' → logprob: -8.775962829589844
    7. '```' → logprob: -8.900962829589844
    8. '`)' → logprob: -9.150962829589844
    9. '>)' → logprob: -9.275962829589844
    10. '('' → logprob: -9.775962829589844

Token 5: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5970698595046997
    2. 'if' → logprob: -1.7220698595046997
    3. 'a' → logprob: -2.09706974029541
    4. 's' → logprob: -2.34706974029541
    5. ')' → logprob: -2.97206974029541
    6. ''' → logprob: -3.22206974029541
    7. 'i' → logprob: -3.34706974029541
    8. '*' → logprob: -3.47206974029541
    9. '#' → logprob: -3.47206974029541
    10. '`' → logprob: -3.59706974029541

Token 6: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.781265914440155
    2. '=' → logprob: -1.0312659740447998
    3. ' +=' → logprob: -2.2812659740448
    4. '[' → logprob: -3.4062659740448
    5. '+=' → logprob: -3.6562659740448
    6. '+' → logprob: -3.9062659740448
    7. ' ' → logprob: -6.281265735626221
    8. '_' → logprob: -6.531265735626221
    9. '[:]' → logprob: -9.031266212463379
    10. 's' → logprob: -9.156266212463379

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.14373649656772614
    2. '"' → logprob: -3.1437366008758545
    3. ' ' → logprob: -3.3937366008758545
    4. ''' → logprob: -3.5187366008758545
    5. 'N' → logprob: -4.518736362457275
    6. ' N' → logprob: -4.768736362457275
    7. '1' → logprob: -5.893736362457275
    8. ' '' → logprob: -7.018736362457275
    9. ' "' → logprob: -7.393736362457275
    10. 'sum' → logprob: -7.393736362457275

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02082342654466629
    2. 'N' → logprob: -4.3958234786987305
    3. '"' → logprob: -6.2708234786987305
    4. 'max' → logprob: -6.6458234786987305
    5. '1' → logprob: -6.7708234786987305
    6. 'float' → logprob: -6.8958234786987305
    7. 'sum' → logprob: -6.8958234786987305
    8. ''' → logprob: -7.1458234786987305
    9. 'input' → logprob: -8.52082347869873
    10. 'int' → logprob: -8.89582347869873

Token 9: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00070230319397524
    2. '
' → logprob: -7.625702381134033
    3. ' for' → logprob: -9.125701904296875
    4. '\n' → logprob: -9.750701904296875
    5. '```' → logprob: -11.000701904296875
    6. '' → logprob: -11.625701904296875
    7. '\' → logprob: -12.000701904296875
    8. ' 
' → logprob: -12.125701904296875
    9. '`' → logprob: -13.375701904296875
    10. 'i' → logprob: -13.625701904296875

Token 10: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007014761795289814
    2. ' for' → logprob: -7.375701427459717
    3. '
' → logprob: -10.250701904296875
    4. '```' → logprob: -10.375701904296875
    5. '\n' → logprob: -12.500701904296875
    6. '``' → logprob: -14.000701904296875
    7. 'f' → logprob: -14.250701904296875
    8. '' → logprob: -14.625701904296875
    9. ' 
' → logprob: -14.625701904296875
    10. '`' → logprob: -14.750701904296875

Token 11: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058990318328142166
    2. ' i' → logprob: -2.933990240097046
    3. '  ' → logprob: -5.558990478515625
    4. 'i' → logprob: -9.558990478515625
    5. ' N' → logprob: -9.558990478515625
    6. '_' → logprob: -9.808990478515625
    7. ' _' → logprob: -10.683990478515625
    8. ' n' → logprob: -12.558990478515625
    9. ' ' → logprob: -12.683990478515625
    10. ' range' → logprob: -12.933990478515625

Token 12: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3211871087551117
    2. 'in' → logprob: -1.321187138557434
    3. ' ' → logprob: -5.0711870193481445
    4. 'n' → logprob: -7.5711870193481445
    5. '  ' → logprob: -8.446187019348145
    6. 'range' → logprob: -8.696187019348145
    7. ')' → logprob: -8.821187019348145
    8. '_' → logprob: -9.321187019348145
    9. '```' → logprob: -9.321187019348145
    10. ' n' → logprob: -9.696187019348145

Token 13: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004202813375741243
    2. 'range' → logprob: -5.504202842712402
    3. ' ' → logprob: -9.004202842712402
    4. '	range' → logprob: -14.629202842712402
    5. '(range' → logprob: -15.129202842712402
    6. ')' → logprob: -15.254202842712402
    7. '  ' → logprob: -16.254201889038086
    8. '```' → logprob: -16.379201889038086
    9. ' xrange' → logprob: -16.754201889038086
    10. ' ' → logprob: -16.879201889038086

Token 14: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03815452381968498
    2. '(N' → logprob: -3.2881546020507812
    3. '(n' → logprob: -10.038154602050781
    4. ' (' → logprob: -10.413154602050781
    5. '(i' → logprob: -11.038154602050781
    6. '(len' → logprob: -11.288154602050781
    7. '(
' → logprob: -12.413154602050781
    8. '(range' → logprob: -12.788154602050781
    9. '(

' → logprob: -13.788154602050781
    10. '((' → logprob: -14.288154602050781

Token 15: '1' (ID: 16)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.4755340814590454
    2. '1' → logprob: -0.9755340814590454
    3. ' N' → logprob: -6.975533962249756
    4. ' ' → logprob: -8.225534439086914
    5. '0' → logprob: -9.100534439086914
    6. '2' → logprob: -9.225534439086914
    7. ')' → logprob: -10.600534439086914
    8. '(' → logprob: -12.725534439086914
    9. '10' → logprob: -12.975534439086914
    10. '3' → logprob: -13.225534439086914

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03528066724538803
    2. ' ,' → logprob: -3.785280704498291
    3. '(' → logprob: -4.785280704498291
    4. '(N' → logprob: -6.160280704498291
    5. ')' → logprob: -7.285280704498291
    6. ',N' → logprob: -8.285280227661133
    7. ' (' → logprob: -8.785280227661133
    8. ' N' → logprob: -8.910280227661133
    9. ' ' → logprob: -9.035280227661133
    10. ' )' → logprob: -9.410280227661133

Token 17: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.02324605919420719
    2. ' N' → logprob: -3.7732460498809814
    3. ')' → logprob: -14.773245811462402
    4. ' ' → logprob: -15.773245811462402
    5. 'n' → logprob: -16.64824676513672
    6. '10' → logprob: -18.39824676513672
    7. ',' → logprob: -19.14824676513672
    8. '	N' → logprob: -19.14824676513672
    9. '(N' → logprob: -19.14824676513672
    10. '​' → logprob: -19.27324676513672

Token 18: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07889155298471451
    2. ' +' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.45389175415039
    4. ')' → logprob: -15.45389175415039
    5. '```' → logprob: -15.82889175415039
    6. ')+' → logprob: -16.07889175415039
    7. '+,' → logprob: -16.07889175415039
    8. '+)' → logprob: -16.45389175415039
    9. '):' → logprob: -16.70389175415039
    10. ' plus' → logprob: -16.70389175415039

Token 19: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000433291686931625
    2. ' ' → logprob: -7.750433444976807
    3. '2' → logprob: -12.875432968139648
    4. ')' → logprob: -16.37543296813965
    5. '```' → logprob: -16.87543296813965
    6. '(' → logprob: -18.50043296813965
    7. 'i' → logprob: -19.00043296813965
    8. '+' → logprob: -19.00043296813965
    9. '):' → logprob: -19.37543296813965
    10. '  ' → logprob: -19.37543296813965

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2895037531852722
    2. ':' → logprob: -1.664503812789917
    3. ')' → logprob: -2.789503812789917
    4. ':)' → logprob: -7.539503574371338
    5. ':**' → logprob: -10.039504051208496
    6. '):
' → logprob: -10.914504051208496
    7. ' ):' → logprob: -11.664504051208496
    8. '**' → logprob: -12.664504051208496
    9. ':
' → logprob: -12.789504051208496
    10. '```' → logprob: -13.039504051208496

Token 21: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2832842767238617
    2. '   ' → logprob: -1.533284306526184
    3. ' 
' → logprob: -4.1582841873168945
    4. '    ' → logprob: -5.2832841873168945
    5. '    
' → logprob: -5.2832841873168945
    6. '  ' → logprob: -6.7832841873168945
    7. '```' → logprob: -7.1582841873168945
    8. '<|end|>' → logprob: -7.1582841873168945
    9. '     
' → logprob: -7.7832841873168945
    10. ' i' → logprob: -8.033284187316895

Token 22: ' if' (ID: 538)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.8291837573051453
    2. 'ans' → logprob: -1.07918381690979
    3. '   ' → logprob: -1.70418381690979
    4. ' ' → logprob: -4.454183578491211
    5. ' i' → logprob: -4.829183578491211
    6. ' if' → logprob: -5.204183578491211
    7. '    ' → logprob: -5.454183578491211
    8. 'if' (adapté à ' if') → logprob: -5.829183578491211
    9. 'range' → logprob: -5.954183578491211
    10. 'i' → logprob: -6.829183578491211

Token 23: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05875103920698166
    2. 'i' → logprob: -3.183751106262207
    3. ' N' → logprob: -4.558751106262207
    4. ' ' → logprob: -5.558751106262207
    5. 'N' → logprob: -7.058751106262207
    6. '(' → logprob: -9.308751106262207
    7. ' (' → logprob: -9.433751106262207
    8. '(i' → logprob: -9.433751106262207
    9. ' ' → logprob: -9.433751106262207
    10. '  ' → logprob: -10.808751106262207

Token 24: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.20164605975151062
    2. '%' → logprob: -1.701646089553833
    3. ' ' → logprob: -8.451645851135254
    4. ' ' → logprob: -12.701645851135254
    5. ' ==' → logprob: -13.076645851135254
    6. '<|end|>' → logprob: -13.201645851135254
    7. ')' → logprob: -13.826645851135254
    8. ' <=' → logprob: -13.826645851135254
    9. '%i' → logprob: -13.951645851135254
    10. 'space' → logprob: -13.951645851135254

Token 25: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.6849513053894043
    2. ' ' → logprob: -0.9349513053894043
    3. '2' → logprob: -2.3099513053894043
    4. '5' → logprob: -6.559951305389404
    5. '7' → logprob: -7.059951305389404
    6. '10' → logprob: -7.184951305389404
    7. '6' → logprob: -7.684951305389404
    8. '4' → logprob: -8.184951782226562
    9. '1' → logprob: -9.059951782226562
    10. '100' → logprob: -10.434951782226562

Token 26: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02209721878170967
    2. '2' → logprob: -4.022097110748291
    3. '10' → logprob: -5.772097110748291
    4. '5' → logprob: -7.772097110748291
    5. '7' → logprob: -8.89709758758545
    6. '6' → logprob: -9.64709758758545
    7. '9' → logprob: -9.77209758758545
    8. '4' → logprob: -9.89709758758545
    9. '15' → logprob: -10.27209758758545
    10. ' ' → logprob: -11.52209758758545

Token 27: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.35639673471450806
    2. ' ==' → logprob: -1.2313966751098633
    3. '==' → logprob: -5.606396675109863
    4. '!=' → logprob: -5.856396675109863
    5. ' ' → logprob: -6.606396675109863
    6. '=' → logprob: -11.981396675109863
    7. ' =' → logprob: -11.981396675109863
    8. ' ' → logprob: -12.106396675109863
    9. ')' → logprob: -12.731396675109863
    10. ' and' → logprob: -12.856396675109863

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931476593017578
    2. ' ' → logprob: -0.6931476593017578
    3. '3' → logprob: -15.443147659301758
    4. '  ' → logprob: -16.193147659301758
    5. '1' → logprob: -16.443147659301758
    6. '=' → logprob: -16.693147659301758
    7. '2' → logprob: -17.068147659301758
    8. '```' → logprob: -17.443147659301758
    9. ' ' → logprob: -17.693147659301758
    10. '<|end|>' → logprob: -18.255647659301758

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004624629858881235
    2. ' ' → logprob: -5.379624843597412
    3. '3' → logprob: -12.379624366760254
    4. '1' → logprob: -15.754624366760254
    5. '2' → logprob: -16.87962532043457
    6. '=' → logprob: -17.62962532043457
    7. '```' → logprob: -17.62962532043457
    8. '०' → logprob: -18.25462532043457
    9. '  ' → logprob: -18.31712532043457
    10. '6' → logprob: -18.37962532043457

Token 30: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.3883875012397766
    2. ':' → logprob: -1.1383874416351318
    3. 'or' → logprob: -6.638387680053711
    4. ' and' → logprob: -9.388387680053711
    5. ' :' → logprob: -10.138387680053711
    6. ' ' → logprob: -10.763387680053711
    7. '    ' → logprob: -11.263387680053711
    8. '   ' → logprob: -11.513387680053711
    9. '	or' → logprob: -11.763387680053711
    10. 'and' → logprob: -11.888387680053711

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47200074791908264
    2. '   ' → logprob: -1.4720007181167603
    3. ' ' → logprob: -2.59700083732605
    4. '    ' → logprob: -3.34700083732605
    5. ' or' → logprob: -3.59700083732605
    6. '<|end|>' → logprob: -5.847000598907471
    7. '     ' → logprob: -6.347000598907471
    8. '  ' → logprob: -6.472000598907471
    9. '      ' → logprob: -7.597000598907471
    10. ' continue' → logprob: -7.597000598907471

Token 32: ' continue' (ID: 4901)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0649265050888062
    2. ' ans' → logprob: -1.4399265050888062
    3. 'continue' (adapté à ' continue') → logprob: -1.8149265050888062
    4. '   ' → logprob: -1.9399265050888062
    5. ' continue' → logprob: -2.4399266242980957
    6. '       ' → logprob: -3.9399266242980957
    7. '```' → logprob: -6.314926624298096
    8. ' ' → logprob: -7.064926624298096
    9. '           ' → logprob: -7.564926624298096
    10. '    ' → logprob: -7.564926624298096

Token 33: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035808272659778595
    2. '    
' → logprob: -3.5358083248138428
    3. '   
' → logprob: -6.285808086395264
    4. '    ' → logprob: -7.035808086395264
    5. ' 
' → logprob: -7.160808086395264
    6. '  ' → logprob: -7.285808086395264
    7. '  
' → logprob: -7.285808086395264
    8. '```' → logprob: -8.035808563232422
    9. '     
' → logprob: -8.660808563232422
    10. ' ' → logprob: -9.160808563232422

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1210927739739418
    2. 'ans' → logprob: -2.8710927963256836
    3. '    
' → logprob: -3.7460927963256836
    4. '<|end|>' → logprob: -3.7460927963256836
    5. ' 
' → logprob: -6.246092796325684
    6. ' ans' → logprob: -6.496092796325684
    7. '  
' → logprob: -6.496092796325684
    8. '  ' → logprob: -6.871092796325684
    9. '   
' → logprob: -6.996092796325684
    10. '```' → logprob: -7.246092796325684

Token 35: ' if' (ID: 538)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.09357230365276337
    2. '   ' → logprob: -2.5935723781585693
    3. '<|end|>' → logprob: -5.21857213973999
    4. ' ans' → logprob: -5.46857213973999
    5. '+' → logprob: -5.96857213973999
    6. '	ans' → logprob: -7.46857213973999
    7. '    
' → logprob: -7.71857213973999
    8. ' ' → logprob: -7.84357213973999
    9. '```' → logprob: -8.218572616577148
    10. '  ' → logprob: -8.468572616577148

Token 36: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0015158153837546706
    2. 'i' → logprob: -6.501515865325928
    3. ' ' → logprob: -12.62651538848877
    4. '   ' → logprob: -12.62651538848877
    5. '    ' → logprob: -13.00151538848877
    6. '  ' → logprob: -13.50151538848877
    7. ' ans' → logprob: -14.25151538848877
    8. '	i' → logprob: -14.62651538848877
    9. ' N' → logprob: -15.25151538848877
    10. ' (' → logprob: -15.37651538848877

Token 37: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.030058125033974648
    2. '%' → logprob: -3.5300581455230713
    3. ' ' → logprob: -8.405057907104492
    4. '**' → logprob: -9.905057907104492
    5. ' **' → logprob: -11.405057907104492
    6. '<|end|>' → logprob: -11.530057907104492
    7. ' ' → logprob: -12.905057907104492
    8. '2' → logprob: -13.405057907104492
    9. '  ' → logprob: -13.780057907104492
    10. ' ==' → logprob: -14.030057907104492

Token 38: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.01608528196811676
    2. ' ' → logprob: -4.141085147857666
    3. '7' → logprob: -11.016085624694824
    4. '   ' → logprob: -11.141085624694824
    5. '2' → logprob: -11.891085624694824
    6. '  ' → logprob: -12.266085624694824
    7. '59' → logprob: -13.141085624694824
    8. '    ' → logprob: -13.266085624694824
    9. '55' → logprob: -14.641085624694824
    10. '_' → logprob: -14.641085624694824

Token 39: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -7.941850526549388e-06
    2. '7' → logprob: -12.750007629394531
    3. ' ' → logprob: -12.875007629394531
    4. '   ' → logprob: -13.500007629394531
    5. '2' → logprob: -15.000007629394531
    6. '10' → logprob: -15.500007629394531
    7. '  ' → logprob: -16.37500762939453
    8. '15' → logprob: -16.87500762939453
    9. '59' → logprob: -17.12500762939453
    10. '4' → logprob: -17.37500762939453

Token 40: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4054544270038605
    2. ' !=' → logprob: -1.405454397201538
    3. '==' → logprob: -2.530454397201538
    4. '!=' → logprob: -4.780454635620117
    5. ' ' → logprob: -10.905454635620117
    6. '=' → logprob: -11.405454635620117
    7. '```' → logprob: -11.655454635620117
    8. ' ' → logprob: -11.905454635620117
    9. '   ' → logprob: -13.280454635620117
    10. ' =' → logprob: -13.905454635620117

Token 41: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006721536163240671
    2. ' ' → logprob: -5.006721496582031
    3. '```' → logprob: -12.506721496582031
    4. '==' → logprob: -14.631721496582031
    5. '2' → logprob: -14.631721496582031
    6. '=' → logprob: -15.131721496582031
    7. '   ' → logprob: -15.444221496582031
    8. '1' → logprob: -15.756721496582031
    9. '3' → logprob: -15.819221496582031
    10. '  ' → logprob: -16.06922149658203

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001126026691053994
    2. ' ' → logprob: -9.125112533569336
    3. '```' → logprob: -13.750112533569336
    4. '   ' → logprob: -14.000112533569336
    5. '3' → logprob: -15.000112533569336
    6. '  ' → logprob: -15.500112533569336
    7. '1' → logprob: -15.875112533569336
    8. '00' → logprob: -16.187612533569336
    9. '=' → logprob: -16.250112533569336
    10. '۰' → logprob: -16.312612533569336

Token 43: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018089372897520661
    2. '       ' → logprob: -6.376809120178223
    3. ':
' → logprob: -9.626809120178223
    4. '=' → logprob: -11.126809120178223
    5. '):' → logprob: -11.376809120178223
    6. '   ' → logprob: -12.626809120178223
    7. '<|end|>' → logprob: -12.751809120178223
    8. ' :' → logprob: -13.126809120178223
    9. '==' → logprob: -14.126809120178223
    10. ':**' → logprob: -14.126809120178223

Token 44: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10379994660615921
    2. ' ans' → logprob: -2.478800058364868
    3. '```' → logprob: -4.853799819946289
    4. 'ans' → logprob: -5.478799819946289
    5. '   ' → logprob: -7.103799819946289
    6. ' continue' → logprob: -7.853799819946289
    7. '	ans' → logprob: -8.103799819946289
    8. ' ' → logprob: -8.228799819946289
    9. '    ' → logprob: -8.228799819946289
    10. '(ans' → logprob: -8.978799819946289

Token 45: ' continue' (ID: 4901)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.13431397080421448
    2. '   ' → logprob: -2.6343140602111816
    3. ' ans' → logprob: -3.1343140602111816
    4. 'continue' (adapté à ' continue') → logprob: -5.009314060211182
    5. '       ' → logprob: -6.009314060211182
    6. ' continue' → logprob: -7.634314060211182
    7. '	ans' → logprob: -8.384313583374023
    8. '  ' → logprob: -9.134313583374023
    9. '```' → logprob: -9.134313583374023
    10. '           ' → logprob: -9.134313583374023

Token 46: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011967366561293602
    2. '<|end|>' → logprob: -5.511967182159424
    3. '+' → logprob: -5.761967182159424
    4. '    
' → logprob: -6.011967182159424
    5. 'ans' → logprob: -7.511967182159424
    6. ' 
' → logprob: -8.386967658996582
    7. '  ' → logprob: -8.386967658996582
    8. '       ' → logprob: -8.511967658996582
    9. '    ' → logprob: -8.511967658996582
    10. ' ans' → logprob: -8.761967658996582

Token 47: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0175539068877697
    2. '+' → logprob: -5.017553806304932
    3. 'ans' → logprob: -5.017553806304932
    4. '    
' → logprob: -6.517553806304932
    5. '```' → logprob: -7.017553806304932
    6. '       ' → logprob: -7.767553806304932
    7. ' ans' → logprob: -7.767553806304932
    8. '    ' → logprob: -8.39255428314209
    9. '<|end|>' → logprob: -8.51755428314209
    10. '  ' → logprob: -9.39255428314209

Token 48: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.11705335974693298
    2. '   ' → logprob: -2.242053270339966
    3. ' ans' → logprob: -5.867053508758545
    4. '```' → logprob: -7.367053508758545
    5. '    
' → logprob: -8.117053031921387
    6. '+' → logprob: -8.992053031921387
    7. '	ans' → logprob: -8.992053031921387
    8. '  ' → logprob: -9.992053031921387
    9. '(ans' → logprob: -10.117053031921387
    10. '   
' → logprob: -10.992053031921387

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.051666807383298874
    2. '+=' → logprob: -3.051666736602783
    3. '+' → logprob: -5.801666736602783
    4. ' ' → logprob: -11.926667213439941
    5. ' +' → logprob: -11.926667213439941
    6. '+='' → logprob: -12.051667213439941
    7. '<|end|>' → logprob: -12.176667213439941
    8. ']+=' → logprob: -12.176667213439941
    9. '=' → logprob: -12.301667213439941
    10. ' =' → logprob: -12.676667213439941

Token 50: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001502598519437015
    2. ' i' → logprob: -6.501502513885498
    3. '1' → logprob: -15.251502990722656
    4. '   ' → logprob: -17.501502990722656
    5. '	i' → logprob: -19.126502990722656
    6. ' ' → logprob: -19.501502990722656
    7. '```' → logprob: -20.751502990722656
    8. '    ' → logprob: -22.001502990722656
    9. '_i' → logprob: -22.001502990722656
    10. '{i' → logprob: -22.126502990722656

Token 51: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00278681144118309
    2. '
' → logprob: -6.877786636352539
    3. '<|end|>' → logprob: -7.127786636352539
    4. '\n' → logprob: -7.627786636352539
    5. ' print' → logprob: -8.252786636352539
    6. '#' → logprob: -9.377786636352539
    7. '\' → logprob: -10.502786636352539
    8. '```' → logprob: -10.752786636352539
    9. ')' → logprob: -11.377786636352539
    10. '#print' → logprob: -11.502786636352539

Token 52: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00030614540446549654
    2. '#' → logprob: -9.500306129455566
    3. ' print' → logprob: -10.000306129455566
    4. '\n' → logprob: -10.125306129455566
    5. ')' → logprob: -10.250306129455566
    6. '<|end|>' → logprob: -10.250306129455566
    7. '
' → logprob: -10.625306129455566
    8. '```' → logprob: -11.000306129455566
    9. '#print' → logprob: -11.375306129455566
    10. 'p' → logprob: -12.125306129455566

Token 53: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014985528541728854
    2. '(ans' → logprob: -7.376498699188232
    3. '('' → logprob: -7.751498699188232
    4. '("("' → logprob: -7.751498699188232
    5. '(f' → logprob: -12.001498222351074
    6. '(
' → logprob: -13.751498222351074
    7. '()' → logprob: -13.876498222351074
    8. '((' → logprob: -14.251498222351074
    9. ' (' → logprob: -14.501498222351074
    10. '("(' → logprob: -14.751498222351074

Token 54: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. '))' → logprob: -15.125000953674316
    3. ' )' → logprob: -15.875000953674316
    4. '')' → logprob: -17.0
    5. ')`' → logprob: -17.0
    6. '`)' → logprob: -17.125
    7. ')
' → logprob: -18.0
    8. '）' → logprob: -18.625
    9. '")' → logprob: -19.125
    10. ')))' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 52
Tokens correctement prédits (1ère position, stricte): 25
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 45
Précision stricte (1ère position): 48.08%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 86.54%
================================================================================
