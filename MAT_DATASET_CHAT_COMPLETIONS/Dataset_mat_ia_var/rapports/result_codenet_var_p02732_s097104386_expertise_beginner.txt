================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:21:04
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())
A = list(map(int, input().split()))
count = [0] * (N + 1)
for a in A:
    count[a] = count[a] + 1

combination = 0
for i in range(N + 1):
    if count[i] != 0:
        combination = combination + (count[i] * (count[i] - 1)) // 2

for a in A:
    x = combination - (count[a] - 1)
    print(x)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011975488450843841
    2. '```' → logprob: -10.250120162963867
    3. '`' → logprob: -10.625120162963867
    4. '(N' → logprob: -11.125120162963867
    5. '(
' → logprob: -11.375120162963867
    6. '('' → logprob: -11.750120162963867
    7. ''' → logprob: -11.875120162963867
    8. '("("' → logprob: -12.125120162963867
    9. '(input' → logprob: -12.875120162963867
    10. ' (' → logprob: -13.125120162963867

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11959892511367798
    2. ')' → logprob: -2.244598865509033
    3. '()' → logprob: -5.244598865509033
    4. '())' → logprob: -7.244598865509033
    5. '(
' → logprob: -8.494599342346191
    6. '```' → logprob: -9.119599342346191
    7. '("("' → logprob: -9.869599342346191
    8. '(

' → logprob: -9.994599342346191
    9. '('' → logprob: -9.994599342346191
    10. '")' → logprob: -10.244599342346191

Token 5: 'A' (ID: 32)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.477544367313385
    2. 'if' → logprob: -2.3525443077087402
    3. 's' → logprob: -2.7275443077087402
    4. 'a' → logprob: -2.8525443077087402
    5. 'x' → logprob: -3.7275443077087402
    6. 'i' → logprob: -3.7275443077087402
    7. 'f' → logprob: -4.10254430770874
    8. ' ' → logprob: -4.35254430770874
    9. '[' → logprob: -4.47754430770874
    10. ' for' → logprob: -4.85254430770874

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009175319573841989
    2. '\[' → logprob: -8.250917434692383
    3. '[]' → logprob: -8.375917434692383
    4. '[A' → logprob: -9.250917434692383
    5. '[:]' → logprob: -9.250917434692383
    6. '[i' → logprob: -9.625917434692383
    7. '.' → logprob: -9.875917434692383
    8. '[a' → logprob: -10.750917434692383
    9. '[...]' → logprob: -11.250917434692383
    10. '=' → logprob: -11.375917434692383

Token 7: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.36803779006004333
    2. 'list' → logprob: -1.7430378198623657
    3. ' []' → logprob: -2.993037700653076
    4. ' [' → logprob: -3.368037700653076
    5. '[]' → logprob: -3.368037700653076
    6. '[' → logprob: -4.868037700653076
    7. '[int' → logprob: -5.493037700653076
    8. '[input' → logprob: -6.743037700653076
    9. '[list' → logprob: -7.618037700653076
    10. 'input' → logprob: -8.868038177490234

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004571934696286917
    2. '[' → logprob: -6.004571914672852
    3. '(range' → logprob: -7.129571914672852
    4. '```' → logprob: -7.129571914672852
    5. '[(' → logprob: -8.754571914672852
    6. ')' → logprob: -9.379571914672852
    7. ' (' → logprob: -9.504571914672852
    8. '(
' → logprob: -10.379571914672852
    9. '[int' → logprob: -10.629571914672852
    10. '(

' → logprob: -10.629571914672852

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.1542651355266571
    2. '(' → logprob: -2.1542651653289795
    3. '(str' → logprob: -3.9042651653289795
    4. '(input' → logprob: -5.1542649269104
    5. '(lambda' → logprob: -8.154265403747559
    6. '<int' → logprob: -9.029265403747559
    7. '(
' → logprob: -9.029265403747559
    8. 'int' → logprob: -9.154265403747559
    9. '(list' → logprob: -9.529265403747559
    10. '```' → logprob: -9.654265403747559

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014928450807929039
    2. '(' → logprob: -4.514928340911865
    3. ',input' → logprob: -5.764928340911865
    4. '))' → logprob: -8.639928817749023
    5. 'input' → logprob: -9.014928817749023
    6. ',' → logprob: -9.389928817749023
    7. '=input' → logprob: -9.639928817749023
    8. '<|end|>' → logprob: -9.639928817749023
    9. ')' → logprob: -10.514928817749023
    10. '(eval' → logprob: -10.639928817749023

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10052820295095444
    2. ' input' → logprob: -2.3505282402038574
    3. '(input' → logprob: -8.1005277633667
    4. ',input' → logprob: -11.2255277633667
    5. ')' → logprob: -12.9755277633667
    6. '=input' → logprob: -13.8505277633667
    7. ' ' → logprob: -14.9755277633667
    8. '	input' → logprob: -15.2255277633667
    9. '```' → logprob: -15.2255277633667
    10. '<input' → logprob: -15.3505277633667

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2954091727733612
    2. '()' → logprob: -1.6704092025756836
    3. '())' → logprob: -3.0454092025756836
    4. '().' → logprob: -4.545409202575684
    5. '(' → logprob: -5.295409202575684
    6. '()));' → logprob: -6.045409202575684
    7. '))' → logprob: -7.545409202575684
    8. '())))' → logprob: -8.170409202575684
    9. '()>' → logprob: -8.295409202575684
    10. ')' → logprob: -8.545409202575684

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004909569397568703
    2. 'strip' → logprob: -7.750491142272949
    3. 'rstrip' → logprob: -9.75049114227295
    4. ' split' → logprob: -13.75049114227295
    5. '(split' → logprob: -14.75049114227295
    6. 'spl' → logprob: -15.12549114227295
    7. ')' → logprob: -15.62549114227295
    8. 's' → logprob: -16.125490188598633
    9. 'sp' → logprob: -16.875490188598633
    10. 'replace' → logprob: -17.750490188598633

Token 14: '()))
' (ID: 24521)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.20257237553596497
    2. '()))' → logprob: -2.2025723457336426
    3. ')' → logprob: -2.7025723457336426
    4. '())' → logprob: -5.452572345733643
    5. '()' → logprob: -7.202572345733643
    6. '(' → logprob: -7.452572345733643
    7. ')))' → logprob: -9.4525728225708
    8. ''))' → logprob: -9.4525728225708
    9. '(','' → logprob: -11.8275728225708
    10. '('' → logprob: -12.0775728225708

Token 15: 'count' (ID: 5420)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8448784947395325
    2. 's' → logprob: -1.4698784351348877
    3. 'count' → logprob: -3.2198784351348877
    4. 'sum' → logprob: -3.2198784351348877
    5. 'max' → logprob: -3.3448784351348877
    6. 'for' → logprob: -3.5948784351348877
    7. 'dp' → logprob: -3.5948784351348877
    8. 'a' → logprob: -3.8448784351348877
    9. 'result' → logprob: -3.8448784351348877
    10. 'd' → logprob: -3.9698784351348877

Token 16: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06149160489439964
    2. '_' → logprob: -3.3114914894104004
    3. '[' → logprob: -3.9364914894104004
    4. 's' → logprob: -5.8114914894104
    5. '[(' → logprob: -8.311491966247559
    6. '('' → logprob: -9.686491966247559
    7. '```' → logprob: -10.311491966247559
    8. '\[' → logprob: -10.436491966247559
    9. '['' → logprob: -10.811491966247559
    10. '()' → logprob: -10.811491966247559

Token 17: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13435304164886475
    2. '{}' → logprob: -2.6343531608581543
    3. ' ' → logprob: -3.1343531608581543
    4. '{' → logprob: -5.009353160858154
    5. ' {}' → logprob: -6.134353160858154
    6. '(' → logprob: -6.634353160858154
    7. ' {' → logprob: -9.009352684020996
    8. '({' → logprob: -9.634352684020996
    9. '[' → logprob: -10.259352684020996
    10. '  ' → logprob: -11.884352684020996

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.125005722045898
    3. '(' → logprob: -16.1250057220459
    4. ']' → logprob: -16.5000057220459
    5. ')' → logprob: -16.7500057220459
    6. '   ' → logprob: -17.3750057220459
    7. '  ' → logprob: -19.7500057220459
    8. '()' → logprob: -20.1250057220459
    9. '۰' → logprob: -21.0000057220459
    10. '()]' → logprob: -21.0000057220459

Token 19: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003602094016969204
    2. ' ]' → logprob: -6.503602027893066
    3. ']*' → logprob: -6.753602027893066
    4. ' for' → logprob: -7.503602027893066
    5. ',' → logprob: -8.503602027893066
    6. ']*(' → logprob: -9.128602027893066
    7. ')]' → logprob: -11.003602027893066
    8. 'for' → logprob: -11.003602027893066
    9. ')' → logprob: -11.128602027893066
    10. '])' → logprob: -11.628602027893066

Token 20: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.009682786650955677
    2. ' *' → logprob: -5.134682655334473
    3. '*(' → logprob: -5.634682655334473
    4. ',' → logprob: -10.009682655334473
    5. '+' → logprob: -10.259682655334473
    6. '*[' → logprob: -11.009682655334473
    7. ' for' → logprob: -11.259682655334473
    8. '*N' → logprob: -11.384682655334473
    9. ' ' → logprob: -11.384682655334473
    10. ')' → logprob: -11.509682655334473

Token 21: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11207977682352066
    2. '100' → logprob: -2.9870798587799072
    3. '(N' → logprob: -3.6120798587799072
    4. '(max' → logprob: -3.8620798587799072
    5. ' (' → logprob: -5.737079620361328
    6. '101' → logprob: -6.112079620361328
    7. ' ' → logprob: -7.112079620361328
    8. '10' → logprob: -8.362079620361328
    9. '(n' → logprob: -8.362079620361328
    10. '11' → logprob: -8.487079620361328

Token 22: 'N' (ID: 45)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -1.013455867767334
    2. 'max' → logprob: -1.263455867767334
    3. '(' → logprob: -2.138455867767334
    4. '(max' → logprob: -2.138455867767334
    5. '10' → logprob: -2.763455867767334
    6. 'N' → logprob: -3.513455867767334
    7. '101' → logprob: -4.013455867767334
    8. '(N' → logprob: -5.638455867767334
    9. '11' → logprob: -6.388455867767334
    10. '200' → logprob: -7.263455867767334

Token 23: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28587856888771057
    2. ')' → logprob: -1.4108785390853882
    3. ' +' → logprob: -5.660878658294678
    4. ' )' → logprob: -7.035878658294678
    5. '*' → logprob: -8.78587818145752
    6. '))' → logprob: -8.91087818145752
    7. '+)' → logprob: -10.28587818145752
    8. '```' → logprob: -11.28587818145752
    9. '**' → logprob: -13.03587818145752
    10. '`)' → logprob: -13.03587818145752

Token 24: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010297815315425396
    2. '2' → logprob: -5.010297775268555
    3. ' ' → logprob: -5.635297775268555
    4. '10' → logprob: -12.510297775268555
    5. '5' → logprob: -14.010297775268555
    6. '3' → logprob: -14.635297775268555
    7. '7' → logprob: -14.760297775268555
    8. '  ' → logprob: -15.010297775268555
    9. '100' → logprob: -16.135297775268555
    10. '6' → logprob: -16.760297775268555

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.114600834436715e-05
    2. '2' → logprob: -9.375091552734375
    3. ' ' → logprob: -12.125091552734375
    4. '10' → logprob: -14.500091552734375
    5. '１' → logprob: -16.125091552734375
    6. '5' → logprob: -16.375091552734375
    7. '```' → logprob: -17.437591552734375
    8. '  ' → logprob: -17.875091552734375
    9. '7' → logprob: -17.937591552734375
    10. '11' → logprob: -18.125091552734375

Token 26: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. ']' → logprob: -13.500004768371582
    3. ' )' → logprob: -13.875004768371582
    4. ')
' → logprob: -14.500004768371582
    5. '))' → logprob: -14.625004768371582
    6. '```' → logprob: -14.875004768371582
    7. '`)' → logprob: -15.375004768371582
    8. '[' → logprob: -15.500004768371582
    9. '])' → logprob: -15.750004768371582
    10. ')`' → logprob: -15.750004768371582

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0014061863766983151
    2. ' for' → logprob: -6.626406192779541
    3. '
' → logprob: -9.876405715942383
    4. '\n' → logprob: -11.251405715942383
    5. '```' → logprob: -11.626405715942383
    6. '' → logprob: -12.626405715942383
    7. '
' → logprob: -13.001405715942383
    8. ' 
' → logprob: -15.001405715942383
    9. '`' → logprob: -15.251405715942383
    10. '``' → logprob: -15.501405715942383

Token 28: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.16304098069667816
    2. ' a' → logprob: -2.16304087638855
    3. 'i' → logprob: -4.288041114807129
    4. 'a' → logprob: -4.538041114807129
    5. ' x' → logprob: -5.038041114807129
    6. ' num' → logprob: -5.788041114807129
    7. ' ' → logprob: -7.538041114807129
    8. 'x' → logprob: -7.913041114807129
    9. 'A' → logprob: -8.788041114807129
    10. ' v' → logprob: -9.413041114807129

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021745590493083
    2. 'in' → logprob: -3.8967456817626953
    3. ' ' → logprob: -6.771745681762695
    4. ' i' → logprob: -10.896745681762695
    5. 'n' → logprob: -11.646745681762695
    6. 'i' → logprob: -12.021745681762695
    7. '  ' → logprob: -12.146745681762695
    8. 'a' → logprob: -12.146745681762695
    9. '_' → logprob: -13.396745681762695
    10. 's' → logprob: -13.521745681762695

Token 30: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00861456897109747
    2. ' A' → logprob: -4.758614540100098
    3. 'a' → logprob: -17.383615493774414
    4. ' ' → logprob: -18.133615493774414
    5. 'Ａ' → logprob: -19.133615493774414
    6. '	A' → logprob: -19.258615493774414
    7. '_A' → logprob: -19.508615493774414
    8. '>A' → logprob: -19.758615493774414
    9. '(A' → logprob: -20.008615493774414
    10. '`' → logprob: -20.008615493774414

Token 31: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025037277373485267
    2. ':
' → logprob: -8.625250816345215
    3. ' :' → logprob: -10.250250816345215
    4. '):' → logprob: -10.625250816345215
    5. '[' → logprob: -12.875250816345215
    6. ':**' → logprob: -12.875250816345215
    7. '```' → logprob: -13.375250816345215
    8. '   ' → logprob: -14.125250816345215
    9. ']:' → logprob: -14.250250816345215
    10. '():' → logprob: -14.750250816345215

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9227335453033447
    2. ' count' → logprob: -1.5477335453033447
    3. ' ' → logprob: -1.6727335453033447
    4. ' 
' → logprob: -1.9227335453033447
    5. 'count' → logprob: -3.4227335453033447
    6. '```' → logprob: -4.672733306884766
    7. '[count' → logprob: -5.672733306884766
    8. '    
' → logprob: -5.672733306884766
    9. '	count' → logprob: -6.547733306884766
    10. ' ```' → logprob: -7.172733306884766

Token 33: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.28441154956817627
    2. ' count' → logprob: -1.4094115495681763
    3. '   ' → logprob: -5.909411430358887
    4. ' if' → logprob: -8.534411430358887
    5. '```' → logprob: -9.034411430358887
    6. ' ' → logprob: -9.659411430358887
    7. 'if' → logprob: -10.034411430358887
    8. '    ' → logprob: -10.284411430358887
    9. ' ```' → logprob: -10.909411430358887
    10. '	count' → logprob: -11.409411430358887

Token 34: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.22062665224075317
    2. '[' → logprob: -1.7206265926361084
    3. '[count' → logprob: -3.9706265926361084
    4. '[c' → logprob: -9.845626831054688
    5. '```' → logprob: -10.095626831054688
    6. '[A' → logprob: -10.345626831054688
    7. ' [' → logprob: -11.845626831054688
    8. '\[' → logprob: -11.970626831054688
    9. 'a' → logprob: -12.220626831054688
    10. '[data' → logprob: -12.970626831054688

Token 35: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025622190441936255
    2. ']+=' → logprob: -6.377562046051025
    3. ')' → logprob: -7.752562046051025
    4. ' ]' → logprob: -7.877562046051025
    5. ')]' → logprob: -10.752562522888184
    6. '+=' → logprob: -11.627562522888184
    7. '+]' → logprob: -11.877562522888184
    8. '+' → logprob: -12.752562522888184
    9. ' +=' → logprob: -13.252562522888184
    10. '   ' → logprob: -13.252562522888184

Token 36: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0805031955242157
    2. ' +=' → logprob: -2.580503225326538
    3. '+' → logprob: -6.580502986907959
    4. ']+=' → logprob: -9.205503463745117
    5. '```' → logprob: -9.830503463745117
    6. '++' → logprob: -10.455503463745117
    7. '=' → logprob: -10.955503463745117
    8. '[' → logprob: -11.455503463745117
    9. '+='' → logprob: -12.705503463745117
    10. '<|end|>' → logprob: -13.205503463745117

Token 37: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1718408614397049
    2. '1' → logprob: -1.9218409061431885
    3. ' count' → logprob: -5.421840667724609
    4. '+' → logprob: -5.546840667724609
    5. '0' → logprob: -6.296840667724609
    6. ' ' → logprob: -6.796840667724609
    7. '(count' → logprob: -9.04684066772461
    8. '<count' → logprob: -10.17184066772461
    9. '[count' → logprob: -11.29684066772461
    10. ' +' → logprob: -11.54684066772461

Token 38: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.001677079708315432
    2. 'a' → logprob: -6.5016770362854
    3. '```' → logprob: -9.376677513122559
    4. '[' → logprob: -9.626677513122559
    5. '[count' → logprob: -12.376677513122559
    6. '`' → logprob: -12.501677513122559
    7. '1' → logprob: -12.501677513122559
    8. ' a' → logprob: -12.876677513122559
    9. ' ' → logprob: -13.126677513122559
    10. 'count' → logprob: -13.626677513122559

Token 39: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.020819690078496933
    2. ']+' → logprob: -3.895819664001465
    3. '+' → logprob: -8.520819664001465
    4. ' ]' → logprob: -10.145819664001465
    5. '']' → logprob: -11.020819664001465
    6. '1' → logprob: -11.645819664001465
    7. ']+=' → logprob: -12.645819664001465
    8. '```' → logprob: -13.020819664001465
    9. '+]' → logprob: -13.520819664001465
    10. '`]' → logprob: -13.645819664001465

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023360315710306168
    2. ' +' → logprob: -3.773360252380371
    3. ' ' → logprob: -9.398360252380371
    4. '0' → logprob: -11.648360252380371
    5. '1' → logprob: -11.898360252380371
    6. '<|end|>' → logprob: -12.773360252380371
    7. ' plus' → logprob: -12.898360252380371
    8. '```' → logprob: -13.148360252380371
    9. '[' → logprob: -13.523360252380371
    10. '+a' → logprob: -13.523360252380371

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.37523078918457
    3. '<|end|>' → logprob: -19.87523078918457
    4. '   ' → logprob: -20.00023078918457
    5. '１' → logprob: -20.75023078918457
    6. '+' → logprob: -20.87523078918457
    7. '```' → logprob: -20.87523078918457
    8. '  ' → logprob: -21.12523078918457
    9. '0' → logprob: -21.62523078918457
    10. '۱' → logprob: -21.62523078918457

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '<|end|>' → logprob: -17.5
    4. '```' → logprob: -20.75
    5. '۱' → logprob: -21.625
    6. '１' → logprob: -21.625
    7. '१' → logprob: -22.125
    8. '১' → logprob: -22.625
    9. '   ' → logprob: -23.125
    10. '<|end|>' → logprob: -23.25

Token 43: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5629069209098816
    2. '\n' → logprob: -1.5629069805145264
    3. 'for' → logprob: -2.3129069805145264
    4. ' 
' → logprob: -3.0629069805145264
    5. ' ' → logprob: -3.8129069805145264
    6. '\' → logprob: -4.187906742095947
    7. '```' → logprob: -4.437906742095947
    8. '<|end|>' → logprob: -5.187906742095947
    9. '  
' → logprob: -5.687906742095947
    10. '[' → logprob: -6.062906742095947

Token 44: 'comb' (ID: 43606)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15386833250522614
    2. 'i' → logprob: -2.6538684368133545
    3. 'max' → logprob: -3.7788684368133545
    4. '\n' → logprob: -4.028868198394775
    5. '
' → logprob: -4.278868198394775
    6. 'f' → logprob: -6.028868198394775
    7. 'n' → logprob: -6.153868198394775
    8. '0' → logprob: -6.653868198394775
    9. '\' → logprob: -6.778868198394775
    10. '```' → logprob: -6.903868198394775

Token 45: 'ination' (ID: 3273)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1953657865524292
    2. 'ination' → logprob: -1.3203657865524292
    3. '(' → logprob: -1.4453657865524292
    4. 'inations' → logprob: -2.8203659057617188
    5. '()' → logprob: -3.5703659057617188
    6. '_' → logprob: -4.070365905761719
    7. 'ined' → logprob: -4.570365905761719
    8. 'in' → logprob: -4.570365905761719
    9. 'ine' → logprob: -4.695365905761719
    10. '_count' → logprob: -4.945365905761719

Token 46: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43032363057136536
    2. '_' → logprob: -1.680323600769043
    3. '(' → logprob: -1.930323600769043
    4. '[' → logprob: -4.305323600769043
    5. '_s' → logprob: -5.805323600769043
    6. '```' → logprob: -7.680323600769043
    7. '_count' → logprob: -8.430323600769043
    8. '_counts' → logprob: -9.055323600769043
    9. '(s' → logprob: -9.180323600769043
    10. '(_)' → logprob: -9.305323600769043

Token 47: ' ' (ID: 220)
  Prédit: '[count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[count' → logprob: -0.4040173888206482
    2. '[' → logprob: -1.279017448425293
    3. ' [' → logprob: -3.654017448425293
    4. '0' → logprob: -4.154017448425293
    5. '[len' → logprob: -4.779017448425293
    6. '[N' → logprob: -6.779017448425293
    7. ' ' → logprob: -7.529017448425293
    8. 'count' → logprob: -7.654017448425293
    9. '[max' → logprob: -7.779017448425293
    10. '1' → logprob: -8.029017448425293

Token 48: '0' (ID: 15)
  Prédit: '[count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[count' → logprob: -0.2312074899673462
    2. '[' → logprob: -2.2312073707580566
    3. '[N' → logprob: -3.1062073707580566
    4. '[len' → logprob: -3.4812073707580566
    5. '0' → logprob: -4.356207370758057
    6. '1' → logprob: -5.731207370758057
    7. 'count' → logprob: -6.481207370758057
    8. '[n' → logprob: -6.731207370758057
    9. '[]' → logprob: -6.856207370758057
    10. '[int' → logprob: -6.981207370758057

Token 49: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09175866842269897
    2. '
' → logprob: -2.4667587280273438
    3. '\n' → logprob: -6.466758728027344
    4. ' for' → logprob: -6.841758728027344
    5. '<|end|>' → logprob: -9.091758728027344
    6. '\' → logprob: -10.341758728027344
    7. '```' → logprob: -11.341758728027344
    8. '' → logprob: -11.966758728027344
    9. '

' → logprob: -11.966758728027344
    10. ' 
' → logprob: -12.216758728027344

Token 50: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.2961512513575144e-05
    2. '```' → logprob: -10.875022888183594
    3. 'i' → logprob: -13.125022888183594
    4. ' for' → logprob: -13.875022888183594
    5. '
' → logprob: -15.000022888183594
    6. '``' → logprob: -15.875022888183594
    7. '0' → logprob: -16.375022888183594
    8. 'n' → logprob: -16.750022888183594
    9. '`' → logprob: -16.875022888183594
    10. 'count' → logprob: -16.875022888183594

Token 51: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.014044566079974174
    2. 'i' → logprob: -4.514044761657715
    3. ' a' → logprob: -6.764044761657715
    4. ' count' → logprob: -7.014044761657715
    5. ' c' → logprob: -7.889044761657715
    6. ' ' → logprob: -8.639044761657715
    7. ' _' → logprob: -9.139044761657715
    8. 'a' → logprob: -9.264044761657715
    9. 'count' → logprob: -10.014044761657715
    10. '_' → logprob: -10.639044761657715

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.025800181552767754
    2. ' ' → logprob: -4.0258002281188965
    3. 'in' → logprob: -4.9008002281188965
    4. '  ' → logprob: -9.525799751281738
    5. '<|end|>' → logprob: -9.775799751281738
    6. ',' → logprob: -11.775799751281738
    7. 'range' → logprob: -11.900799751281738
    8. '	in' → logprob: -12.150799751281738
    9. ' ' → logprob: -12.400799751281738
    10. 's' → logprob: -12.650799751281738

Token 53: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002128968248143792
    2. ' range' → logprob: -6.502129077911377
    3. 'count' → logprob: -7.377129077911377
    4. '(range' → logprob: -14.752128601074219
    5. ' count' → logprob: -15.877128601074219
    6. ')' → logprob: -16.00212860107422
    7. '	range' → logprob: -16.00212860107422
    8. '```' → logprob: -16.87712860107422
    9. '   ' → logprob: -17.00212860107422
    10. ' ' → logprob: -17.62712860107422

Token 54: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001728252973407507
    2. '(N' → logprob: -6.376728057861328
    3. '(len' → logprob: -10.876728057861328
    4. '(count' → logprob: -13.126728057861328
    5. '(
' → logprob: -13.251728057861328
    6. ' (' → logprob: -13.376728057861328
    7. '(n' → logprob: -13.751728057861328
    8. '1' → logprob: -15.001728057861328
    9. '((' → logprob: -15.376728057861328
    10. '(

' → logprob: -16.751728057861328

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7334657907485962
    2. '):' → logprob: -0.8584657907485962
    3. ' +' → logprob: -2.4834656715393066
    4. '):
' → logprob: -4.608465671539307
    5. ' ):' → logprob: -6.233465671539307
    6. '-' → logprob: -8.608466148376465
    7. ')' → logprob: -8.983466148376465
    8. '1' → logprob: -9.358466148376465
    9. ' -' → logprob: -9.483466148376465
    10. ' ' → logprob: -10.108466148376465

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005538671393878758
    2. ' ' → logprob: -7.500554084777832
    3. '2' → logprob: -14.875554084777832
    4. '   ' → logprob: -15.125554084777832
    5. '```' → logprob: -16.375553131103516
    6. ')' → logprob: -16.500553131103516
    7. '  ' → logprob: -17.750553131103516
    8. '１' → logprob: -18.250553131103516
    9. '
' → logprob: -18.563053131103516
    10. '`' → logprob: -18.750553131103516

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001097417771234177
    2. ' ' → logprob: -9.125109672546387
    3. '2' → logprob: -15.125109672546387
    4. '```' → logprob: -15.812609672546387
    5. '１' → logprob: -16.437610626220703
    6. '   ' → logprob: -17.000110626220703
    7. ')' → logprob: -17.000110626220703
    8. '۱' → logprob: -17.375110626220703
    9. '१' → logprob: -17.500110626220703
    10. '
' → logprob: -17.875110626220703

Token 58: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004427270498126745
    2. ')' → logprob: -5.879427433013916
    3. ':' → logprob: -6.504427433013916
    4. '):
' → logprob: -9.129426956176758
    5. ' ):' → logprob: -11.754426956176758
    6. ':)' → logprob: -12.379426956176758
    7. ']:' → logprob: -14.004426956176758
    8. '   ' → logprob: -14.879426956176758
    9. '```' → logprob: -15.004426956176758
    10. ',' → logprob: -15.254426956176758

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032786023803055286
    2. ' if' → logprob: -6.378278732299805
    3. ' ' → logprob: -7.503278732299805
    4. '```' → logprob: -7.628278732299805
    5. '<|end|>' → logprob: -8.503278732299805
    6. '    
' → logprob: -9.503278732299805
    7. 'if' → logprob: -9.503278732299805
    8. '    ' → logprob: -9.628278732299805
    9. '  ' → logprob: -10.003278732299805
    10. ' 
' → logprob: -10.878278732299805

Token 60: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4815393090248108
    2. '   ' → logprob: -1.106539249420166
    3. ' ' → logprob: -3.481539249420166
    4. 'if' (adapté à ' if') → logprob: -4.731539249420166
    5. ' count' → logprob: -5.606539249420166
    6. ' i' → logprob: -6.606539249420166
    7. 'count' → logprob: -6.606539249420166
    8. '    ' → logprob: -6.606539249420166
    9. ' 
' → logprob: -7.106539249420166
    10. '```' → logprob: -7.231539249420166

Token 61: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.061972059309482574
    2. 'count' → logprob: -2.811972141265869
    3. '	count' → logprob: -13.186971664428711
    4. ' counts' → logprob: -14.186971664428711
    5. '(count' → logprob: -14.561971664428711
    6. ' ' → logprob: -14.936971664428711
    7. '   ' → logprob: -15.061971664428711
    8. '<count' → logprob: -15.311971664428711
    9. '[count' → logprob: -15.686971664428711
    10. ' i' → logprob: -16.43697166442871

Token 62: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -12.125009536743164
    3. '```' → logprob: -13.500009536743164
    4. ' [' → logprob: -13.750009536743164
    5. 'i' → logprob: -14.500009536743164
    6. '[a' → logprob: -14.875009536743164
    7. '[
' → logprob: -16.000009536743164
    8. '>' → logprob: -16.125009536743164
    9. '[I' → logprob: -16.625009536743164
    10. '   ' → logprob: -16.625009536743164

Token 63: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7032816410064697
    2. ' >' → logprob: -0.7032816410064697
    3. ' >=' → logprob: -4.828281402587891
    4. '>=' → logprob: -6.328281402587891
    5. ')' → logprob: -8.57828140258789
    6. ' ' → logprob: -9.95328140258789
    7. ')>' → logprob: -11.07828140258789
    8. '">' → logprob: -11.57828140258789
    9. ' ' → logprob: -11.70328140258789
    10. '<|end|>' → logprob: -11.95328140258789

Token 64: ' !=' (ID: 1666)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.32212236523628235
    2. ' >' → logprob: -1.57212233543396
    3. '>=' → logprob: -2.94712233543396
    4. ' >=' → logprob: -4.197122573852539
    5. ' ' → logprob: -9.322122573852539
    6. '==' → logprob: -10.072122573852539
    7. ' ' → logprob: -10.822122573852539
    8. '<' → logprob: -11.197122573852539
    9. '">' → logprob: -11.197122573852539
    10. '&gt' → logprob: -11.322122573852539

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7025139331817627
    2. ' ' → logprob: -1.3275139331817627
    3. '1' → logprob: -1.9525139331817627
    4. '2' → logprob: -2.3275139331817627
    5. '```' → logprob: -11.265013694763184
    6. '  ' → logprob: -11.702513694763184
    7. '3' → logprob: -11.890013694763184
    8. '   ' → logprob: -12.515013694763184
    9. '    ' → logprob: -12.577513694763184
    10. '<|end|>' → logprob: -12.640013694763184

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8708868622779846
    2. '1' → logprob: -1.2458868026733398
    3. '2' → logprob: -1.2458868026733398
    4. ' ' → logprob: -5.12088680267334
    5. '```' → logprob: -10.80838680267334
    6. 'i' → logprob: -11.43338680267334
    7. '   ' → logprob: -11.80838680267334
    8. ')' → logprob: -12.18338680267334
    9. 'count' → logprob: -12.30838680267334
    10. '    ' → logprob: -12.55838680267334

Token 67: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010342398309148848
    2. ':
' → logprob: -9.625102996826172
    3. ' and' → logprob: -11.000102996826172
    4. '):' → logprob: -12.000102996826172
    5. '       ' → logprob: -12.375102996826172
    6. ' :' → logprob: -12.500102996826172
    7. '   ' → logprob: -12.500102996826172
    8. 'and' → logprob: -14.000102996826172
    9. ',' → logprob: -14.375102996826172
    10. ')' → logprob: -15.500102996826172

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006813881453126669
    2. ':' → logprob: -5.506814002990723
    3. '   ' → logprob: -6.256814002990723
    4. '    ' → logprob: -8.256814002990723
    5. ',' → logprob: -8.631814002990723
    6. '      ' → logprob: -9.506814002990723
    7. '     ' → logprob: -9.506814002990723
    8. '        
' → logprob: -10.006814002990723
    9. '```' → logprob: -10.256814002990723
    10. ' ' → logprob: -10.381814002990723

Token 69: ' combination' (ID: 14083)
  Prédit: ' combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.2391873449087143
    2. 'comb' → logprob: -1.7391873598098755
    3. '           ' → logprob: -3.864187240600586
    4. '       ' → logprob: -4.614187240600586
    5. '   ' → logprob: -5.614187240600586
    6. ' for' → logprob: -7.614187240600586
    7. '```' → logprob: -7.739187240600586
    8. '    ' → logprob: -7.864187240600586
    9. 'count' → logprob: -8.739187240600586
    10. '        ' → logprob: -8.864187240600586

Token 70: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.00601411797106266
    2. '+=' → logprob: -5.131014347076416
    3. '+' → logprob: -9.881013870239258
    4. ' =' → logprob: -11.631013870239258
    5. '```' → logprob: -11.881013870239258
    6. ' ' → logprob: -12.381013870239258
    7. ']+=' → logprob: -12.756013870239258
    8. ' +' → logprob: -13.131013870239258
    9. '=' → logprob: -13.631013870239258
    10. '[' → logprob: -13.631013870239258

Token 71: ' combination' (ID: 14083)
  Prédit: ' combination'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' combination' → logprob: -0.11331215500831604
    2. 'comb' → logprob: -2.238312244415283
    3. 'count' → logprob: -8.613311767578125
    4. ' count' → logprob: -9.363311767578125
    5. '   ' → logprob: -10.113311767578125
    6. ' comb' → logprob: -10.363311767578125
    7. ' max' → logprob: -10.863311767578125
    8. 'max' → logprob: -10.988311767578125
    9. ' ' → logprob: -11.363311767578125
    10. '+' → logprob: -11.363311767578125

Token 72: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2811698019504547
    2. ' +' → logprob: -1.4061697721481323
    3. '<|end|>' → logprob: -12.031169891357422
    4. ' ' → logprob: -12.406169891357422
    5. ' +=' → logprob: -12.531169891357422
    6. '+=' → logprob: -13.406169891357422
    7. '+i' → logprob: -14.031169891357422
    8. '＋' → logprob: -14.656169891357422
    9. '+
' → logprob: -14.906169891357422
    10. ' +
' → logprob: -14.906169891357422

Token 73: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03214118629693985
    2. ' count' → logprob: -3.5321412086486816
    3. '(count' → logprob: -6.282141208648682
    4. '1' → logprob: -7.907141208648682
    5. ' (' → logprob: -9.782140731811523
    6. '   ' → logprob: -10.157140731811523
    7. '(' → logprob: -10.907140731811523
    8. '(i' → logprob: -11.407140731811523
    9. ' ' → logprob: -12.032140731811523
    10. 'i' → logprob: -13.032140731811523

Token 74: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.009997362270951271
    2. ' count' → logprob: -4.634997367858887
    3. '(count' → logprob: -9.009997367858887
    4. '   ' → logprob: -9.634997367858887
    5. '1' → logprob: -10.509997367858887
    6. ' ' → logprob: -12.009997367858887
    7. 'comb' → logprob: -12.009997367858887
    8. '(' → logprob: -13.009997367858887
    9. '	count' → logprob: -13.259997367858887
    10. ' (' → logprob: -13.384997367858887

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -16.0
    3. 'i' → logprob: -16.125
    4. '[a' → logprob: -17.0
    5. '```' → logprob: -18.375
    6. ' [' → logprob: -18.5
    7. '[
' → logprob: -19.5
    8. ')' → logprob: -19.625
    9. '   ' → logprob: -19.625
    10. ' ' → logprob: -19.75

Token 76: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.10209554433822632
    2. ' ' → logprob: -3.852095603942871
    3. ')' → logprob: -3.977095603942871
    4. '*' → logprob: -3.977095603942871
    5. '[i' → logprob: -4.477095603942871
    6. '[' → logprob: -4.727095603942871
    7. '*(' → logprob: -4.852095603942871
    8. ')*(' → logprob: -5.352095603942871
    9. ' choose' → logprob: -6.602095603942871
    10. ' -' → logprob: -6.852095603942871

Token 77: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5864977836608887
    2. '*' → logprob: -0.8364977836608887
    3. '*(' → logprob: -5.086497783660889
    4. ' ' → logprob: -6.086497783660889
    5. ')' → logprob: -6.461497783660889
    6. ')*(' → logprob: -8.211498260498047
    7. ' choose' → logprob: -9.586498260498047
    8. ' )' → logprob: -10.336498260498047
    9. ')*' → logprob: -10.961498260498047
    10. '   ' → logprob: -11.086498260498047

Token 78: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.3145620822906494
    2. ' (' → logprob: -1.3145620822906494
    3. 'count' → logprob: -7.56456184387207
    4. '(' → logprob: -8.43956184387207
    5. '(c' → logprob: -8.81456184387207
    6. ' count' → logprob: -9.43956184387207
    7. '(i' → logprob: -9.81456184387207
    8. '(com' → logprob: -9.93956184387207
    9. '((' → logprob: -10.18956184387207
    10. '(cnt' → logprob: -10.31456184387207

Token 79: 'count' (ID: 5420)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.03906325250864029
    2. 'count' → logprob: -3.2890632152557373
    3. ' (' → logprob: -7.539063453674316
    4. ' count' → logprob: -7.914063453674316
    5. '[count' → logprob: -10.289063453674316
    6. '(' → logprob: -10.539063453674316
    7. '   ' → logprob: -10.789063453674316
    8. '<count' → logprob: -11.414063453674316
    9. '(c' → logprob: -11.789063453674316
    10. '$count' → logprob: -12.664063453674316

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.246537173457909e-06
    2. '[' → logprob: -12.875003814697266
    3. 'i' → logprob: -14.125003814697266
    4. '[a' → logprob: -15.500003814697266
    5. '{i' → logprob: -16.125003814697266
    6. '[
' → logprob: -16.250003814697266
    7. '```' → logprob: -16.250003814697266
    8. ')' → logprob: -16.375003814697266
    9. '[I' → logprob: -16.375003814697266
    10. ')i' → logprob: -16.625003814697266

Token 81: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38485196232795715
    2. ' -' → logprob: -1.2598519325256348
    3. ']' → logprob: -3.7598519325256348
    4. ')' → logprob: -5.134851932525635
    5. ']-' → logprob: -5.884851932525635
    6. ' ' → logprob: -6.634851932525635
    7. '[i' → logprob: -7.259851932525635
    8. '   ' → logprob: -7.634851932525635
    9. ')-' → logprob: -7.759851932525635
    10. '[' → logprob: -8.134852409362793

Token 82: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.252023309469223
    2. ' -' → logprob: -1.5020233392715454
    3. ' ' → logprob: -9.752023696899414
    4. ')' → logprob: -10.502023696899414
    5. '1' → logprob: -12.877023696899414
    6. '   ' → logprob: -13.252023696899414
    7. '<|end|>' → logprob: -13.627023696899414
    8. '  ' → logprob: -13.877023696899414
    9. ' )' → logprob: -14.377023696899414
    10. '```' → logprob: -14.627023696899414

Token 83: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026314347982406616
    2. ' ' → logprob: -3.6513142585754395
    3. '   ' → logprob: -12.151314735412598
    4. ')' → logprob: -12.401314735412598
    5. '```' → logprob: -13.026314735412598
    6. '<|end|>' → logprob: -13.651314735412598
    7. ' )' → logprob: -14.651314735412598
    8. '    ' → logprob: -15.651314735412598
    9. ' ' → logprob: -16.15131378173828
    10. '  ' → logprob: -16.33881378173828

Token 84: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018494461255613714
    2. ' ' → logprob: -8.625185012817383
    3. ')' → logprob: -13.125185012817383
    4. '<|end|>' → logprob: -13.625185012817383
    5. '
' → logprob: -14.500185012817383
    6. '```' → logprob: -14.625185012817383
    7. '   ' → logprob: -14.875185012817383
    8. '2' → logprob: -15.125185012817383
    9. '  ' → logprob: -15.625185012817383
    10. '１' → logprob: -17.250185012817383

Token 85: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03733821585774422
    2. ')//' → logprob: -3.9123382568359375
    3. ' )' → logprob: -4.2873382568359375
    4. ' //' → logprob: -6.1623382568359375
    5. '//' → logprob: -7.1623382568359375
    6. '   ' → logprob: -11.162338256835938
    7. '))' → logprob: -12.037338256835938
    8. ' ' → logprob: -12.037338256835938
    9. '  ' → logprob: -14.537338256835938
    10. '       ' → logprob: -14.537338256835938

Token 86: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.6328420639038086
    2. ' //' → logprob: -0.7578420639038086
    3. ' ' → logprob: -9.007842063903809
    4. ')' → logprob: -10.632842063903809
    5. ')//' → logprob: -10.632842063903809
    6. '   ' → logprob: -11.257842063903809
    7. '
' → logprob: -11.507842063903809
    8. '```' → logprob: -11.632842063903809
    9. '#' → logprob: -11.757842063903809
    10. '0' → logprob: -11.882842063903809

Token 87: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.625009536743164
    3. '<|end|>' → logprob: -16.625009536743164
    4. '1' → logprob: -17.125009536743164
    5. '```' → logprob: -17.375009536743164
    6. '
' → logprob: -17.375009536743164
    7. '۲' → logprob: -18.500009536743164
    8. ' 
' → logprob: -19.125009536743164
    9. '２' → logprob: -19.875009536743164
    10. '   ' → logprob: -20.125009536743164

Token 88: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.250000953674316
    3. '1' → logprob: -17.5
    4. '```' → logprob: -17.75
    5. '
' → logprob: -18.75
    6. '۲' → logprob: -19.375
    7. '<|end|>' → logprob: -19.5
    8. '２' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. '>' → logprob: -21.0

Token 89: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03123021498322487
    2. 'print' → logprob: -3.6562302112579346
    3. 'for' → logprob: -5.531230449676514
    4. '\n' → logprob: -8.031229972839355
    5. '
' → logprob: -8.656229972839355
    6. ' 
' → logprob: -8.906229972839355
    7. '

' → logprob: -9.406229972839355
    8. '  
' → logprob: -9.531229972839355
    9. ' for' → logprob: -9.781229972839355
    10. '```' → logprob: -10.281229972839355

Token 90: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.431043803691864
    2. 'for' → logprob: -1.0560438632965088
    3. '
' → logprob: -6.18104362487793
    4. '```' → logprob: -8.93104362487793
    5. '\n' → logprob: -10.18104362487793
    6. ' for' → logprob: -10.43104362487793
    7. 'result' → logprob: -11.43104362487793
    8. '\' → logprob: -12.18104362487793
    9. 'total' → logprob: -12.30604362487793
    10. 'n' → logprob: -12.30604362487793

Token 91: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002706796396523714
    2. 'i' → logprob: -6.377707004547119
    3. ' _' → logprob: -7.502707004547119
    4. '_' → logprob: -8.377706527709961
    5. ' a' → logprob: -9.002706527709961
    6. ' ' → logprob: -9.377706527709961
    7. 'a' → logprob: -12.002706527709961
    8. ' ' → logprob: -13.127706527709961
    9. ' A' → logprob: -13.752706527709961
    10. ' j' → logprob: -13.877706527709961

Token 92: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11408492922782898
    2. 'in' → logprob: -2.2390849590301514
    3. ' ' → logprob: -6.989084720611572
    4. 's' → logprob: -8.36408519744873
    5. '<|end|>' → logprob: -9.61408519744873
    6. '  ' → logprob: -11.11408519744873
    7. 'A' → logprob: -11.61408519744873
    8. ' A' → logprob: -12.11408519744873
    9. '	in' → logprob: -13.23908519744873
    10. '_in' → logprob: -13.36408519744873

Token 93: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.759734732331708e-05
    2. ' A' → logprob: -11.000017166137695
    3. 'range' → logprob: -14.000017166137695
    4. ' range' → logprob: -17.875017166137695
    5. '	A' → logprob: -18.125017166137695
    6. 'a' → logprob: -19.125017166137695
    7. '>A' → logprob: -19.125017166137695
    8. '_A' → logprob: -19.500017166137695
    9. '```' → logprob: -19.625017166137695
    10. '[A' → logprob: -19.750017166137695

Token 94: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0087516784551553e-05
    2. ' :' → logprob: -12.12501049041748
    3. ':
' → logprob: -12.75001049041748
    4. ':**' → logprob: -14.37501049041748
    5. '<|end|>' → logprob: -15.12501049041748
    6. ',' → logprob: -15.62501049041748
    7. '>:' → logprob: -16.250009536743164
    8. '>' → logprob: -16.500009536743164
    9. ':

' → logprob: -16.500009536743164
    10. '):' → logprob: -16.625009536743164

Token 95: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003966912627220154
    2. '<|end|>' → logprob: -5.628966808319092
    3. '    
' → logprob: -8.87896728515625
    4. '
' → logprob: -9.62896728515625
    5. '<|end|>' → logprob: -9.75396728515625
    6. '  ' → logprob: -10.62896728515625
    7. ' ' → logprob: -10.87896728515625
    8. '```' → logprob: -11.12896728515625
    9. ' if' → logprob: -11.62896728515625
    10. '       ' → logprob: -11.75396728515625

Token 96: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8123451471328735
    2. 'print' → logprob: -1.1873451471328735
    3. 'if' → logprob: -2.062345027923584
    4. 'temp' → logprob: -3.187345027923584
    5. ' if' → logprob: -3.312345027923584
    6. ' print' → logprob: -4.562345027923584
    7. 'total' → logprob: -4.812345027923584
    8. 'result' → logprob: -5.437345027923584
    9. 'comb' → logprob: -5.437345027923584
    10. 'original' → logprob: -5.562345027923584

Token 97: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028278810903429985
    2. '=' → logprob: -3.6532788276672363
    3. '_' → logprob: -6.653278827667236
    4. '_count' → logprob: -8.403278350830078
    5. 'count' → logprob: -9.153278350830078
    6. '=count' → logprob: -9.403278350830078
    7. 'print' → logprob: -9.653278350830078
    8. '_i' → logprob: -10.278278350830078
    9. 'u' → logprob: -10.653278350830078
    10. ' ' → logprob: -10.903278350830078

Token 98: ' combination' (ID: 14083)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.953108012676239
    2. 'comb' → logprob: -0.953108012676239
    3. ' combination' → logprob: -1.7031080722808838
    4. ' count' → logprob: -3.078108072280884
    5. ' ' → logprob: -7.578107833862305
    6. '   ' → logprob: -9.828107833862305
    7. '  ' → logprob: -9.828107833862305
    8. 'combo' → logprob: -10.328107833862305
    9. '(count' → logprob: -10.453107833862305
    10. '    ' → logprob: -11.453107833862305

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5765085220336914
    2. ' -' → logprob: -0.8265085220336914
    3. '-
' → logprob: -8.826508522033691
    4. 'if' → logprob: -8.951508522033691
    5. ' -
' → logprob: -9.201508522033691
    6. 'print' → logprob: -9.326508522033691
    7. '
' → logprob: -10.951508522033691
    8. '   ' → logprob: -11.076508522033691
    9. ' ' → logprob: -11.076508522033691
    10. '    ' → logprob: -11.326508522033691

Token 100: ' (' (ID: 350)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.1776198297739029
    2. ' (' → logprob: -1.9276198148727417
    3. '((' → logprob: -4.427619934082031
    4. 'count' → logprob: -5.552619934082031
    5. ' ((' → logprob: -7.427619934082031
    6. '   ' → logprob: -8.177619934082031
    7. ' count' → logprob: -8.677619934082031
    8. ' ' → logprob: -9.052619934082031
    9. '(max' → logprob: -9.177619934082031
    10. '(' → logprob: -10.177619934082031

Token 101: 'count' (ID: 5420)
  Prédit: 'count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.06416383385658264
    2. '(count' → logprob: -2.81416392326355
    3. ' count' → logprob: -6.439163684844971
    4. ' (' → logprob: -7.939163684844971
    5. '   ' → logprob: -9.064164161682129
    6. '1' → logprob: -10.439164161682129
    7. ' ' → logprob: -10.814164161682129
    8. '((' → logprob: -10.939164161682129
    9. '[count' → logprob: -11.314164161682129
    10. '  ' → logprob: -12.064164161682129

Token 102: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.984787902794778e-05
    2. 'a' → logprob: -9.250100135803223
    3. '[' → logprob: -12.875100135803223
    4. '   ' → logprob: -15.000100135803223
    5. '[
' → logprob: -15.000100135803223
    6. ' ' → logprob: -16.000099182128906
    7. ')a' → logprob: -16.625099182128906
    8. '(a' → logprob: -17.000099182128906
    9. ')' → logprob: -17.125099182128906
    10. '	a' → logprob: -17.250099182128906

Token 103: ']' (ID: 60)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.34991997480392456
    2. ']' → logprob: -1.3499200344085693
    3. 'a' → logprob: -3.3499200344085693
    4. '-' → logprob: -8.349920272827148
    5. '   ' → logprob: -8.474920272827148
    6. '1' → logprob: -9.099920272827148
    7. ' ' → logprob: -9.724920272827148
    8. ' ]' → logprob: -9.849920272827148
    9. '[' → logprob: -9.849920272827148
    10. ']-' → logprob: -10.224920272827148

Token 104: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8243658542633057
    2. ' -' → logprob: -0.8243658542633057
    3. '*' → logprob: -3.1993658542633057
    4. ' ' → logprob: -3.5743658542633057
    5. ' *' → logprob: -3.8243658542633057
    6. '[a' → logprob: -3.8243658542633057
    7. ')' → logprob: -5.699365615844727
    8. 'a' → logprob: -6.074365615844727
    9. '[' → logprob: -6.074365615844727
    10. '   ' → logprob: -7.699365615844727

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007112398743629456
    2. ' ' → logprob: -7.250711441040039
    3. '   ' → logprob: -14.875711441040039
    4. '  ' → logprob: -15.250711441040039
    5. '<|end|>' → logprob: -15.750711441040039
    6. '2' → logprob: -16.25071144104004
    7. ')' → logprob: -16.50071144104004
    8. '[' → logprob: -16.62571144104004
    9. '```' → logprob: -17.37571144104004
    10. '
' → logprob: -17.50071144104004

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.12501335144043
    4. '```' → logprob: -18.25001335144043
    5. '2' → logprob: -18.37501335144043
    6. '  ' → logprob: -18.75001335144043
    7. '１' → logprob: -18.87501335144043
    8. '۱' → logprob: -19.00001335144043
    9. ')' → logprob: -19.12501335144043
    10. '0' → logprob: -19.68751335144043

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010417917743325233
    2. ' )' → logprob: -5.135417938232422
    3. '   ' → logprob: -5.760417938232422
    4. ')
' → logprob: -7.260417938232422
    5. ' ' → logprob: -8.635417938232422
    6. ')*' → logprob: -8.635417938232422
    7. ')//' → logprob: -9.510417938232422
    8. '    ' → logprob: -10.135417938232422
    9. '  ' → logprob: -10.760417938232422
    10. ' )
' → logprob: -10.885417938232422

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002871993638109416
    2. 'print' → logprob: -8.375287055969238
    3. ' print' → logprob: -10.125287055969238
    4. '<|end|>' → logprob: -12.250287055969238
    5. '
' → logprob: -12.500287055969238
    6. '	print' → logprob: -13.125287055969238
    7. ')' → logprob: -13.375287055969238
    8. '    
' → logprob: -13.375287055969238
    9. ',' → logprob: -13.875287055969238
    10. '```' → logprob: -14.000287055969238

Token 109: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.25209569931030273
    2. '   ' → logprob: -1.5020956993103027
    3. ' print' → logprob: -8.752096176147461
    4. '	print' → logprob: -12.377096176147461
    5. ' ' → logprob: -13.252096176147461
    6. '```' → logprob: -14.002096176147461
    7. '
' → logprob: -14.252096176147461
    8. '  ' → logprob: -15.127096176147461
    9. '\' → logprob: -16.12709617614746
    10. '       ' → logprob: -16.25209617614746

Token 110: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0034385151229798794
    2. 'x' → logprob: -5.878438472747803
    3. '(' → logprob: -7.378438472747803
    4. ' x' → logprob: -11.878438949584961
    5. '()' → logprob: -14.503438949584961
    6. ' (' → logprob: -14.628438949584961
    7. '(f' → logprob: -14.753438949584961
    8. '(a' → logprob: -15.628438949584961
    9. '(int' → logprob: -16.25343894958496
    10. 'f' → logprob: -16.50343894958496

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -14.750001907348633
    4. '))' → logprob: -15.500001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.125001907348633
    7. ')")' → logprob: -17.625001907348633
    8. ')a' → logprob: -18.250001907348633
    9. '）' → logprob: -18.250001907348633
    10. ')**' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 41
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 94
Précision stricte (1ère position): 37.61%
Précision adaptée (1ère position): 39.45%
Précision (top 10): 86.24%
================================================================================
