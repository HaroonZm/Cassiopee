================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

# Raccourcis pour la lecture de l'entrée pour plus d'efficacité
read = sys.stdin.buffer.read
readline = sys.stdin.buffer.readline
readlines = sys.stdin.buffer.readlines

# Lecture de n (nombre de sommets) et m (nombre d'arêtes)
n, m = map(int, readline().split())

# Lecture des u, v, s successifs (les arêtes et la "somme" imposée entre deux sommets)
uvs = list(map(int, read().split()))

# Construction de la liste d'adjacence sous forme de dictionnaire pour chaque sommet,
# où links[u][v] = s  <=> l'arête (u, v) doit vérifier nums[u] + nums[v] = s
links = [dict() for _ in range(n+1)]
it = iter(uvs)
for u, v, s in zip(it, it, it):
    links[u][v] = s
    links[v][u] = s  # Graphe non orienté

def dfs(root, init):
    """
    Effectue un parcours DFS pour essayer d'attribuer des valeurs nums[x] aux nœuds,
    telles que pour chaque arête (u, v, s), nums[u] + nums[v] == s.
    
    Si un conflit est trouvé dans un cycle pair, le système n'a pas de solution (print(0) et exit).
    Pour un cycle impair, tente de résoudre et réessayez avec une nouvelle racine. 
    
    Args:
        root (int): Le sommet d'où partir la DFS.
        init (int): La valeur à assigner à nums[root].
            
    Returns:
        tuple: 
            - (True, nums, depth, 0, 0) si le DFS s'est bien passé;
            - (False, nums, depth, start, val) si une aberration rattrapable dans un cycle impair a été trouvée,
              on retourne la racine du cycle et la valeur imposée.
    """
    nums = [0] * (n+1)      # nums[i] = valeur assignée au sommet i
    depth = [-1] * (n+1)    # depth[i] = profondeur du sommet i dans l'arbre DFS
    parent = [-1] * (n+1)   # parent[i] = parent de i dans l'arbre DFS

    nums[root] = init
    depth[root] = 0
    stack = [root]          # Utilisation d'une pile pour le DFS

    while stack:
        next_stack = []
        while stack:
            i = stack.pop()
            for j, s_ij in links[i].items():
                if j == parent[i]:
                    continue  # Ne pas revenir vers le parent immédiat
                # Déduire nums[j] via l'équation : nums[i] + nums[j] = s_ij
                num_j = s_ij - nums[i]
                if depth[j] != -1:
                    # Détecte un cycle
                    # Deux façons possibles d'arriver à j, il faut que nums[j] soit consistant
                    if nums[j] != num_j:
                        # Conflit détecté, déterminons le type de cycle
                        loop_len = depth[j] + depth[i] + 1
                        if loop_len % 2 == 0:
                            # Cycle pair : pas de solution possible
                            print(0)
                            exit()
                        else:
                            # Cycle impair : essayons d'ajuster la solution
                            num_j_sum = nums[j] + num_j
                            if num_j_sum % 2 == 1:
                                # Impossible d'obtenir une solution entière
                                print(0)
                                exit()
                            return (False, nums, depth, j, num_j_sum // 2)
                elif depth[j] == -1:
                    # Première visite de ce sommet
                    depth[j] = depth[i] + 1
                    nums[j] = num_j
                    parent[j] = i
                    next_stack.append(j)
        stack = next_stack[:]

    # Fin du DFS sans conflits
    return (True, nums, depth, 0, 0)

# Premier passage DFS depuis le sommet 1 avec valeur initiale 0
flag, nums, depth, root, init = dfs(1, 0)

if flag == False:
    # Un cycle impair a été détecté, on réessaye avec la contrainte imposée
    flag2, nums, depth, root, init = dfs(root, init)
    if flag2 == False:
        # Encore bloqué ! (cycle impair multiple incompatible)
        print(0)
    else:
        # Vérification que toutes les valeurs sont positives
        if min(nums[1:]) < 1:
            print(0)
        else:
            print(1)
    exit()

# Séparation des sommets selon la parité de leur profondeur
even = []
odd = []
for i in range(1, n+1):
    if depth[i] % 2 == 0:
        even.append(nums[i])
    else:
        odd.append(nums[i])

# Calcul du minimum sur chaque groupe (paire/impair)
min0 = min(even)
min1 = min(odd)

# Cherche le nombre de solutions entières positives possibles (voir énoncé de la tâche)
# Pour chaque valeur t dans [1, min0] possible sur nums[paire] = t, il existe une correspondance sur nums[impair] = t'
ans = 1 + (min0 - 1) + (min1 - 1)
print(max(0, ans))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0347585454583168
    2. '\n' → logprob: -4.034758567810059
    3. 'import' → logprob: -4.909758567810059
    4. '<|end|>' → logprob: -5.284758567810059
    5. '\' → logprob: -7.159758567810059
    6. '<|end|>' → logprob: -7.534758567810059
    7. 'newline' → logprob: -7.909758567810059
    8. ',' → logprob: -8.159758567810059
    9. '[' → logprob: -8.284758567810059
    10. '' → logprob: -8.284758567810059

Token 4: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2402934730052948
    2. ' This' → logprob: -2.865293502807617
    3. ' The' → logprob: -3.740293502807617
    4. ' argparse' → logprob: -3.990293502807617
    5. ' is' → logprob: -4.615293502807617
    6. 'def' → logprob: -4.615293502807617
    7. ' argv' → logprob: -4.865293502807617
    8. ' def' → logprob: -4.990293502807617
    9. 'argv' → logprob: -4.990293502807617
    10. 'This' → logprob: -4.990293502807617

Token 5: 'acc' (ID: 3717)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.008879744447767735
    2. 'a' → logprob: -4.883879661560059
    3. 'u' → logprob: -7.633879661560059
    4. 'un' → logprob: -8.258879661560059
    5. 'ead' → logprob: -9.133879661560059
    6. 'o' → logprob: -9.133879661560059
    7. '#' → logprob: -9.258879661560059
    8. '```' → logprob: -10.258879661560059
    9. 'ea' → logprob: -10.383879661560059
    10. '=' → logprob: -11.008879661560059

Token 6: 'our' (ID: 401)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0141866207122803
    2. 'our' → logprob: -1.2641866207122803
    3. 'u' → logprob: -1.6391866207122803
    4. 'h' → logprob: -3.1391866207122803
    5. 'ourse' → logprob: -4.014186859130859
    6. 'e' → logprob: -4.014186859130859
    7. 'omp' → logprob: -4.639186859130859
    8. 'om' → logprob: -4.764186859130859
    9. 'a' → logprob: -4.889186859130859
    10. 'i' → logprob: -5.389186859130859

Token 7: 'cis' (ID: 40890)
  Prédit: 'ci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ci' → logprob: -0.6991450190544128
    2. 'i' → logprob: -1.3241450786590576
    3. 'é' → logprob: -1.9491450786590576
    4. 'ei' → logprob: -4.0741448402404785
    5. '#' → logprob: -4.4491448402404785
    6. '?' → logprob: -4.6991448402404785
    7. 'er' → logprob: -5.1991448402404785
    8. 'e' → logprob: -5.1991448402404785
    9. 'eci' → logprob: -5.4491448402404785
    10. 'cis' → logprob: -5.4491448402404785

Token 8: ' pour' (ID: 1930)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15305441617965698
    2. '.' → logprob: -2.5280544757843018
    3. '_' → logprob: -3.6530544757843018
    4. ':' → logprob: -4.528054237365723
    5. ' =' → logprob: -4.653054237365723
    6. '#' → logprob: -4.778054237365723
    7. '[' → logprob: -6.028054237365723
    8. 'import' → logprob: -6.778054237365723
    9. ' ' → logprob: -7.028054237365723
    10. 's' → logprob: -7.903054237365723

Token 9: ' la' (ID: 557)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.0083354711532593
    2. ' sys' → logprob: -1.1333354711532593
    3. 'import' → logprob: -2.258335590362549
    4. 'les' → logprob: -2.633335590362549
    5. 'l' → logprob: -3.133335590362549
    6. ' l' → logprob: -3.758335590362549
    7. ' les' → logprob: -3.758335590362549
    8. 'os' → logprob: -4.633335590362549
    9. 'i' → logprob: -4.758335590362549
    10. 'la' → logprob: -5.133335590362549

Token 10: ' lecture' (ID: 31993)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4688813090324402
    2. 'lecture' → logprob: -2.093881368637085
    3. 'sys' → logprob: -2.343881368637085
    4. 'console' → logprob: -3.093881368637085
    5. 'ligne' → logprob: -3.843881368637085
    6. 'gestion' → logprob: -3.968881368637085
    7. 's' → logprob: -4.343881130218506
    8. 'commande' → logprob: -4.843881130218506
    9. 'bibli' → logprob: -5.218881130218506
    10. 'f' → logprob: -5.593881130218506

Token 11: ' de' (ID: 334)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05870315060019493
    2. ' ' → logprob: -3.1837031841278076
    3. 'f' → logprob: -5.0587029457092285
    4. 's' → logprob: -6.1837029457092285
    5. 'de' → logprob: -6.4337029457092285
    6. ',' → logprob: -7.5587029457092285
    7. '_f' → logprob: -7.5587029457092285
    8. ' de' → logprob: -7.6837029457092285
    9. 'import' → logprob: -7.6837029457092285
    10. 'from' → logprob: -7.8087029457092285

Token 12: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.1580097675323486
    2. ' sys' → logprob: -1.2830097675323486
    3. ' l' → logprob: -2.0330097675323486
    4. 'sys' → logprob: -2.7830097675323486
    5. 'f' → logprob: -3.0330097675323486
    6. ' la' → logprob: -3.4080097675323486
    7. ' input' → logprob: -3.6580097675323486
    8. 'input' → logprob: -3.9080097675323486
    9. ' fichiers' → logprob: -4.0330095291137695
    10. 'stdin' → logprob: -4.0330095291137695

Token 13: ''entrée' (ID: 115820)
  Prédit: ''entrée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -0.9180139899253845
    2. 'entrée' → logprob: -1.0430140495300293
    3. 'a' → logprob: -2.2930140495300293
    4. 'e' → logprob: -3.0430140495300293
    5. 'i' → logprob: -3.1680140495300293
    6. 'input' → logprob: -3.4180140495300293
    7. 'é' → logprob: -5.043014049530029
    8. 'u' → logprob: -5.543014049530029
    9. ''' → logprob: -5.918014049530029
    10. '’entrée' → logprob: -6.543014049530029

Token 14: ' pour' (ID: 1930)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.051016900688409805
    2. 'input' → logprob: -3.5510168075561523
    3. 'i' → logprob: -5.301016807556152
    4. '=' → logprob: -6.051016807556152
    5. 's' → logprob: -6.176016807556152
    6. ',' → logprob: -6.301016807556152
    7. ' ' → logprob: -6.426016807556152
    8. 'import' → logprob: -6.426016807556152
    9. 'e' → logprob: -6.801016807556152
    10. ':' → logprob: -7.176016807556152

Token 15: ' plus' (ID: 2932)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sys' → logprob: -1.4649970531463623
    2. 'l' → logprob: -1.7149970531463623
    3. 'i' → logprob: -2.0899970531463623
    4. ' line' → logprob: -2.3399970531463623
    5. 'sys' → logprob: -2.5899970531463623
    6. ' i' → logprob: -2.9649970531463623
    7. ' input' → logprob: -3.4649970531463623
    8. ' l' → logprob: -3.4649970531463623
    9. 'line' → logprob: -3.5899970531463623
    10. 'input' → logprob: -3.7149970531463623

Token 16: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7748156785964966
    2. 'de' → logprob: -1.2748156785964966
    3. 'rap' → logprob: -3.024815559387207
    4. 'vite' → logprob: -3.024815559387207
    5. ' rapide' → logprob: -3.024815559387207
    6. 'ieurs' → logprob: -3.774815559387207
    7. 'v' → logprob: -3.899815559387207
    8. 'rapid' → logprob: -4.024815559387207
    9. 'd' → logprob: -4.524815559387207
    10. ' rapides' → logprob: -5.149815559387207

Token 17: ''eff' (ID: 75751)
  Prédit: ''eff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''eff' → logprob: -0.7781491279602051
    2. 'eff' → logprob: -1.528149127960205
    3. 'é' → logprob: -1.778149127960205
    4. 'e' → logprob: -2.778149127960205
    5. 'ef' → logprob: -4.028149127960205
    6. ' efficacité' → logprob: -4.278149127960205
    7. '’efficacité' → logprob: -4.403149127960205
    8. 'u' → logprob: -4.403149127960205
    9. 'éc' → logprob: -5.028149127960205
    10. ''' → logprob: -5.903149127960205

Token 18: 'icacité' (ID: 131048)
  Prédit: 'icacité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icacité' → logprob: -0.48676782846450806
    2. 'ic' → logprob: -1.6117677688598633
    3. 'i' → logprob: -1.9867677688598633
    4. 'a' → logprob: -3.8617677688598633
    5. 'ica' → logprob: -4.736767768859863
    6. 'acité' → logprob: -5.486767768859863
    7. '```' → logprob: -6.111767768859863
    8. 'ı' → logprob: -6.486767768859863
    9. 'c' → logprob: -6.611767768859863
    10. 'î' → logprob: -6.736767768859863

Token 19: '
' (ID: 198)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4331163465976715
    2. 'import' → logprob: -2.0581164360046387
    3. '_' → logprob: -2.1831164360046387
    4. 'i' → logprob: -3.0581164360046387
    5. 'def' → logprob: -3.9331164360046387
    6. 'in' → logprob: -4.433116436004639
    7. 'stdin' → logprob: -4.433116436004639
    8. 'from' → logprob: -5.558116436004639
    9. '```' → logprob: -5.808116436004639
    10. '_input' → logprob: -6.058116436004639

Token 20: 'read' (ID: 1293)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05854756757616997
    2. 'i' → logprob: -3.1835474967956543
    3. 'import' → logprob: -5.308547496795654
    4. '```' → logprob: -5.433547496795654
    5. 'in' → logprob: -6.058547496795654
    6. 'stdin' → logprob: -6.433547496795654
    7. '_' → logprob: -7.433547496795654
    8. 'I' → logprob: -7.683547496795654
    9. '`' → logprob: -8.058547973632812
    10. 'inp' → logprob: -8.183547973632812

Token 21: ' =' (ID: 314)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.03520321846008301
    2. '_line' → logprob: -3.535203218460083
    3. ' =' → logprob: -6.160202980041504
    4. '_input' → logprob: -6.660202980041504
    5. '=' → logprob: -7.285202980041504
    6. 'ln' → logprob: -7.660202980041504
    7. '_' → logprob: -8.410202980041504
    8. 'input' → logprob: -8.535202980041504
    9. 'l' → logprob: -8.910202980041504
    10. 'ine' → logprob: -9.410202980041504

Token 22: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16112230718135834
    2. 'sys' → logprob: -1.9111223220825195
    3. 'input' → logprob: -7.7861223220825195
    4. ' input' → logprob: -8.16112232208252
    5. ' lambda' → logprob: -9.53612232208252
    6. 'lambda' → logprob: -9.66112232208252
    7. '=sys' → logprob: -10.53612232208252
    8. '	sys' → logprob: -11.03612232208252
    9. '(sys' → logprob: -11.53612232208252
    10. ' ' → logprob: -12.03612232208252

Token 23: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.006986026652157307
    2. '.' → logprob: -5.006986141204834
    3. '.stdout' → logprob: -8.631985664367676
    4. '.argv' → logprob: -9.756985664367676
    5. '.readline' → logprob: -11.381985664367676
    6. '.std' → logprob: -11.506985664367676
    7. '.read' → logprob: -12.131985664367676
    8. ' .' → logprob: -12.131985664367676
    9. '.stderr' → logprob: -14.381985664367676
    10. '.st' → logprob: -14.506985664367676

Token 24: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.20178987085819244
    2. '.read' → logprob: -1.7017898559570312
    3. '.' → logprob: -7.951789855957031
    4. '.readlines' → logprob: -11.201789855957031
    5. 'read' → logprob: -11.826789855957031
    6. '.buffer' → logprob: -12.826789855957031
    7. '.Read' → logprob: -14.701789855957031
    8. ' .' → logprob: -15.951789855957031
    9. '.re' → logprob: -16.57678985595703
    10. '.write' → logprob: -16.70178985595703

Token 25: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3133898675441742
    2. '.read' → logprob: -1.3133898973464966
    3. 'read' → logprob: -9.438389778137207
    4. '.' → logprob: -10.063389778137207
    5. '.readlines' → logprob: -13.063389778137207
    6. '_read' → logprob: -13.063389778137207
    7. '```' → logprob: -14.563389778137207
    8. '.re' → logprob: -15.188389778137207
    9. ' readline' → logprob: -15.188389778137207
    10. '.raw' → logprob: -15.563389778137207

Token 26: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.39014095067977905
    2. '(' → logprob: -1.1401410102844238
    3. '(
' → logprob: -6.390141010284424
    4. '()
' → logprob: -7.390141010284424
    5. '().' → logprob: -8.265140533447266
    6. ')' → logprob: -8.640140533447266
    7. '(

' → logprob: -9.140140533447266
    8. 'line' → logprob: -9.390140533447266
    9. '
' → logprob: -9.390140533447266
    10. '()

' → logprob: -9.515140533447266

Token 27: 'read' (ID: 1293)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.384611040353775
    2. '(' → logprob: -1.2596110105514526
    3. '_' → logprob: -4.134611129760742
    4. '\n' → logprob: -5.384611129760742
    5. '(
' → logprob: -5.384611129760742
    6. '\' → logprob: -5.759611129760742
    7. '
' → logprob: -6.384611129760742
    8. '(

' → logprob: -7.134611129760742
    9. '()
' → logprob: -7.259611129760742
    10. '()

' → logprob: -7.384611129760742

Token 28: 'line' (ID: 1137)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006837798748165369
    2. '(' → logprob: -5.006837844848633
    3. '()
' → logprob: -9.881837844848633
    4. ' ()' → logprob: -11.006837844848633
    5. '(
' → logprob: -11.381837844848633
    6. '().' → logprob: -11.506837844848633
    7. ')' → logprob: -11.631837844848633
    8. '()

' → logprob: -11.881837844848633
    9. '()]' → logprob: -12.881837844848633
    10. '()\' → logprob: -13.131837844848633

Token 29: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05159763619303703
    2. ' =' → logprob: -3.3015975952148438
    3. '()' → logprob: -4.426597595214844
    4. ')' → logprob: -6.926597595214844
    5. '(' → logprob: -8.301597595214844
    6. '.readline' → logprob: -9.801597595214844
    7. ',' → logprob: -10.176597595214844
    8. ' ' → logprob: -10.426597595214844
    9. 'read' → logprob: -10.426597595214844
    10. '=sys' → logprob: -11.426597595214844

Token 30: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.008619893342256546
    2. ' sys' → logprob: -4.758619785308838
    3. '=sys' → logprob: -12.508620262145996
    4. '(sys' → logprob: -14.008620262145996
    5. '	sys' → logprob: -14.133620262145996
    6. '_sys' → logprob: -16.88361930847168
    7. '.sys' → logprob: -17.25861930847168
    8. '/sys' → logprob: -17.25861930847168
    9. 's' → logprob: -17.38361930847168
    10. 'b' → logprob: -18.13361930847168

Token 31: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0005196703714318573
    2. '.stdout' → logprob: -8.250519752502441
    3. 'stdin' → logprob: -9.000519752502441
    4. '.readline' → logprob: -9.250519752502441
    5. '.' → logprob: -10.250519752502441
    6. '.stderr' → logprob: -13.625519752502441
    7. '.buffer' → logprob: -13.875519752502441
    8. '.std' → logprob: -14.500519752502441
    9. ' .' → logprob: -15.500519752502441
    10. '(stdin' → logprob: -15.875519752502441

Token 32: '.buffer' (ID: 48964)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.048983022570610046
    2. '.buffer' → logprob: -3.298983097076416
    3. '.' → logprob: -4.548983097076416
    4. 'buffer' → logprob: -8.548982620239258
    5. '.read' → logprob: -10.298982620239258
    6. '<|end|>' → logprob: -10.298982620239258
    7. ' .' → logprob: -10.923982620239258
    8. '.readlines' → logprob: -11.923982620239258
    9. '_buffer' → logprob: -12.548982620239258
    10. ' buffer' → logprob: -12.673982620239258

Token 33: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.036012984812259674
    2. 'read' → logprob: -4.036013126373291
    3. ' readline' → logprob: -4.036013126373291
    4. 'getline' → logprob: -11.036012649536133
    5. 'line' → logprob: -11.036012649536133
    6. '1' → logprob: -13.411012649536133
    7. '_read' → logprob: -13.786012649536133
    8. '```' → logprob: -14.661012649536133
    9. 'readonly' → logprob: -15.286012649536133
    10. ' ' → logprob: -15.536012649536133

Token 34: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08001946657896042
    2. 'def' → logprob: -3.205019474029541
    3. '\n' → logprob: -4.205019474029541
    4. '

' → logprob: -5.080019474029541
    5. '#' → logprob: -5.330019474029541
    6. '<|end|>' → logprob: -6.330019474029541
    7. '\' → logprob: -6.455019474029541
    8. '=' → logprob: -6.830019474029541
    9. 'n' → logprob: -7.705019474029541
    10. '' → logprob: -7.705019474029541

Token 35: 'read' (ID: 1293)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.787022054195404
    2. 'def' → logprob: -0.787022054195404
    3. '#' → logprob: -3.162022113800049
    4. '\n' → logprob: -3.787022113800049
    5. '

' → logprob: -5.037022113800049
    6. 'import' → logprob: -5.912022113800049
    7. 'data' → logprob: -6.037022113800049
    8. '\' → logprob: -6.162022113800049
    9. '' → logprob: -6.287022113800049
    10. 'print' → logprob: -6.662022113800049

Token 36: 'lines' (ID: 10105)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1442064642906189
    2. '(' → logprob: -2.0192065238952637
    3. '().' → logprob: -7.144206523895264
    4. ' ()' → logprob: -8.519206047058105
    5. '(
' → logprob: -8.894206047058105
    6. '()[' → logprob: -9.644206047058105
    7. '()
' → logprob: -9.644206047058105
    8. '.' → logprob: -9.644206047058105
    9. '[' → logprob: -10.269206047058105
    10. ' (' → logprob: -10.644206047058105

Token 37: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3872554898262024
    2. ' =' → logprob: -1.1372554302215576
    3. ' ' → logprob: -8.262255668640137
    4. ')' → logprob: -10.387255668640137
    5. '<|end|>' → logprob: -10.387255668640137
    6. 'read' → logprob: -11.387255668640137
    7. ' =
' → logprob: -11.512255668640137
    8. ',' → logprob: -11.762255668640137
    9. '#' → logprob: -12.262255668640137
    10. 'import' → logprob: -12.637255668640137

Token 38: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.16023601591587067
    2. 'sys' → logprob: -1.9102360010147095
    3. '=sys' → logprob: -12.535236358642578
    4. '(sys' → logprob: -12.785236358642578
    5. 's' → logprob: -12.910236358642578
    6. '	sys' → logprob: -13.535236358642578
    7. 'read' → logprob: -14.535236358642578
    8. '/sys' → logprob: -15.035236358642578
    9. '.sys' → logprob: -15.410236358642578
    10. '_sys' → logprob: -16.035236358642578

Token 39: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.007715109270066023
    2. '.' → logprob: -5.007715225219727
    3. '.stdout' → logprob: -7.257715225219727
    4. 'stdin' → logprob: -8.757715225219727
    5. '.readline' → logprob: -10.382715225219727
    6. ' .' → logprob: -10.507715225219727
    7. '.readlines' → logprob: -10.632715225219727
    8. '.stderr' → logprob: -11.382715225219727
    9. '.std' → logprob: -11.507715225219727
    10. 'lines' → logprob: -11.757715225219727

Token 40: '.buffer' (ID: 48964)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6817999482154846
    2. '.buffer' → logprob: -0.8067999482154846
    3. '.readline' → logprob: -3.18179988861084
    4. '.readlines' → logprob: -6.30679988861084
    5. 'buffer' → logprob: -6.43179988861084
    6. ' .' → logprob: -6.80679988861084
    7. '<|end|>' → logprob: -8.05679988861084
    8. '.Buffer' → logprob: -8.43179988861084
    9. '.write' → logprob: -8.80679988861084
    10. '.stdin' → logprob: -8.93179988861084

Token 41: '.readlines' (ID: 92237)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.0020096488296985626
    2. '.readlines' → logprob: -6.252009868621826
    3. '.readline' → logprob: -9.627009391784668
    4. '.read' → logprob: -11.252009391784668
    5. '_read' → logprob: -14.127009391784668
    6. ' readline' → logprob: -14.252009391784668
    7. 'lines' → logprob: -14.877009391784668
    8. 're' → logprob: -15.752009391784668
    9. ' read' → logprob: -16.002010345458984
    10. 'reads' → logprob: -16.877010345458984

Token 42: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5068252682685852
    2. '
' → logprob: -1.5068252086639404
    3. '#' → logprob: -2.1318252086639404
    4. 'import' → logprob: -4.1318254470825195
    5. '\n' → logprob: -4.3818254470825195
    6. 'newline' → logprob: -5.1318254470825195
    7. '```' → logprob: -5.5068254470825195
    8. '

' → logprob: -5.6318254470825195
    9. '' → logprob: -6.0068254470825195
    10. '<|end|>' → logprob: -6.2568254470825195

Token 43: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.33485981822013855
    2. '
' → logprob: -1.834859848022461
    3. '#' → logprob: -2.334859848022461
    4. 'import' → logprob: -4.959859848022461
    5. '```' → logprob: -4.959859848022461
    6. '\n' → logprob: -5.084859848022461
    7. '\' → logprob: -6.209859848022461
    8. '

' → logprob: -6.334859848022461
    9. 'class' → logprob: -6.709859848022461
    10. 'input' → logprob: -8.209859848022461

Token 44: ' Lecture' (ID: 106534)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7120323181152344
    2. 'def' → logprob: -0.7120323181152344
    3. '#' → logprob: -4.837032318115234
    4. 'input' → logprob: -5.712032318115234
    5. ' data' → logprob: -5.837032318115234
    6. 'class' → logprob: -6.712032318115234
    7. 'import' → logprob: -7.087032318115234
    8. 'n' → logprob: -7.212032318115234
    9. ' def' → logprob: -7.587032318115234
    10. '```' → logprob: -8.212032318115234

Token 45: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.43872830271720886
    2. ' =' → logprob: -1.8137283325195312
    3. '=' → logprob: -1.9387283325195312
    4. '(' → logprob: -3.4387283325195312
    5. '_' → logprob: -4.563728332519531
    6. 'data' → logprob: -6.438728332519531
    7. 's' → logprob: -6.938728332519531
    8. '_input' → logprob: -7.688728332519531
    9. 'input' → logprob: -7.813728332519531
    10. ')' → logprob: -8.563728332519531

Token 46: ' n' (ID: 297)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002255410421639681
    2. '(' → logprob: -6.752255439758301
    3. ' ()' → logprob: -8.3772554397583
    4. '_' → logprob: -9.0022554397583
    5. ' la' → logprob: -9.1272554397583
    6. 'l' → logprob: -9.2522554397583
    7. 'la' → logprob: -9.6272554397583
    8. ' ' → logprob: -9.8772554397583
    9. 'le' → logprob: -10.2522554397583
    10. '()
' → logprob: -10.2522554397583

Token 47: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08242189139127731
    2. '=' → logprob: -2.8324217796325684
    3. '()' → logprob: -5.207421779632568
    4. ' ' → logprob: -5.332421779632568
    5. '_' → logprob: -5.957421779632568
    6. 'um' → logprob: -5.957421779632568
    7. 'umber' → logprob: -6.207421779632568
    8. '=int' → logprob: -7.207421779632568
    9. 'u' → logprob: -7.582421779632568
    10. '(' → logprob: -7.957421779632568

Token 48: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04414317011833191
    2. ' )' → logprob: -3.7941431999206543
    3. '()' → logprob: -4.169143199920654
    4. ' la' → logprob: -6.669143199920654
    5. '(' → logprob: -6.919143199920654
    6. '())' → logprob: -7.419143199920654
    7. ' ' → logprob: -7.794143199920654
    8. ' =' → logprob: -8.294142723083496
    9. 'un' → logprob: -8.419142723083496
    10. 'n' → logprob: -8.419142723083496

Token 49: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6064499020576477
    2. ' =' → logprob: -1.356449842453003
    3. '=' → logprob: -1.981449842453003
    4. ' )' → logprob: -3.481449842453003
    5. '_de' → logprob: -4.856450080871582
    6. ' de' → logprob: -4.856450080871582
    7. 'de' → logprob: -5.606450080871582
    8. '=int' → logprob: -6.106450080871582
    9. '_' → logprob: -6.356450080871582
    10. 'des' → logprob: -6.856450080871582

Token 50: ' somm' (ID: 44830)
  Prédit: ' test'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' test' → logprob: -1.5053216218948364
    2. 'l' → logprob: -1.8803216218948364
    3. 'élé' → logprob: -2.005321502685547
    4. 'ent' → logprob: -3.005321502685547
    5. ' ' → logprob: -3.255321502685547
    6. ')' → logprob: -3.255321502685547
    7. 'cases' → logprob: -3.255321502685547
    8. ' lignes' → logprob: -3.255321502685547
    9. ' ent' → logprob: -3.755321502685547
    10. ' tests' → logprob: -3.880321502685547

Token 51: 'ets' (ID: 1719)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.3873429596424103
    2. 'ets' → logprob: -1.137342929840088
    3. 'et' → logprob: -8.262343406677246
    4. 'etes' → logprob: -8.762343406677246
    5. 'ès' → logprob: -11.137343406677246
    6. 'ètes' → logprob: -11.137343406677246
    7. 'ites' → logprob: -11.762343406677246
    8. '#' → logprob: -12.387343406677246
    9. ')' → logprob: -13.012343406677246
    10. 'ettes' → logprob: -13.262343406677246

Token 52: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004781357478350401
    2. ' )' → logprob: -5.504781246185303
    3. ',' → logprob: -8.254781723022461
    4. ' =' → logprob: -8.879781723022461
    5. '=' → logprob: -9.504781723022461
    6. 's' → logprob: -9.879781723022461
    7. '()' → logprob: -10.004781723022461
    8. '(' → logprob: -10.379781723022461
    9. 'n' → logprob: -10.379781723022461
    10. '#' → logprob: -11.254781723022461

Token 53: ' et' (ID: 859)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11392813920974731
    2. '()' → logprob: -2.8639280796051025
    3. ' =' → logprob: -3.7389280796051025
    4. '(n' → logprob: -4.488928318023682
    5. '=' → logprob: -4.613928318023682
    6. '(' → logprob: -5.863928318023682
    7. '_n' → logprob: -7.113928318023682
    8. '=n' → logprob: -7.613928318023682
    9. '```' → logprob: -7.988928318023682
    10. ')' → logprob: -8.863927841186523

Token 54: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5859324336051941
    2. 'm' → logprob: -0.8359324336051941
    3. ' k' → logprob: -5.46093225479126
    4. 'k' → logprob: -5.71093225479126
    5. ' ' → logprob: -6.33593225479126
    6. 'q' → logprob: -9.085932731628418
    7. ' q' → logprob: -9.335932731628418
    8. ' =' → logprob: -9.835932731628418
    9. ' edges' → logprob: -9.835932731628418
    10. '=' → logprob: -10.335932731628418

Token 55: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004709580447524786
    2. '=' → logprob: -5.879709720611572
    3. ' ' → logprob: -6.629709720611572
    4. ',' → logprob: -8.754709243774414
    5. '<|end|>' → logprob: -8.754709243774414
    6. ' ,' → logprob: -9.879709243774414
    7. '  ' → logprob: -10.129709243774414
    8. '(' → logprob: -10.629709243774414
    9. 'n' → logprob: -10.754709243774414
    10. 'read' → logprob: -11.004709243774414

Token 56: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7628778219223022
    2. 'l' → logprob: -1.7628778219223022
    3. ' )' → logprob: -1.7628778219223022
    4. ' edges' → logprob: -1.7628778219223022
    5. 'edges' → logprob: -2.137877941131592
    6. ' ' → logprob: -3.012877941131592
    7. ' l' → logprob: -3.262877941131592
    8. ' ar' → logprob: -3.762877941131592
    9. 'ar' → logprob: -4.012877941131592
    10. 'd' → logprob: -4.387877941131592

Token 57: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.21993334591388702
    2. 'de' → logprob: -1.8449333906173706
    3. ' d' → logprob: -3.469933271408081
    4. 'd' → logprob: -5.21993350982666
    5. ' (' → logprob: -6.59493350982666
    6. '_de' → logprob: -7.59493350982666
    7. ' des' → logprob: -8.71993350982666
    8. ' =' → logprob: -8.96993350982666
    9. '(de' → logprob: -9.09493350982666
    10. 'des' → logprob: -9.21993350982666

Token 58: ''ar' (ID: 54307)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.5810231566429138
    2. '_ar' → logprob: -1.8310232162475586
    3. '_are' → logprob: -2.8310232162475586
    4. ' ' → logprob: -2.9560232162475586
    5. ' ar' → logprob: -3.0810232162475586
    6. '_edges' → logprob: -3.8310232162475586
    7. 'are' → logprob: -3.8310232162475586
    8. ''ar' → logprob: -4.081023216247559
    9. 'd' → logprob: -4.581023216247559
    10. ')' → logprob: -5.081023216247559

Token 59: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.009300066158175468
    2. 'ê' → logprob: -6.009300231933594
    3. 'êts' → logprob: -6.759300231933594
    4. '�' → logprob: -6.884300231933594
    5. 'cs' → logprob: -7.009300231933594
    6. 'etes' → logprob: -7.384300231933594
    7. '^' → logprob: -7.509300231933594
    8. 'c' → logprob: -8.259300231933594
    9. '&' → logprob: -8.259300231933594
    10. '\xc8' → logprob: -8.509300231933594

Token 60: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0408439077436924
    2. '(' → logprob: -4.040843963623047
    3. ',' → logprob: -4.415843963623047
    4. ' )' → logprob: -5.165843963623047
    5. ' =' → logprob: -6.040843963623047
    6. '()' → logprob: -6.915843963623047
    7. '=' → logprob: -8.165843963623047
    8. '(
' → logprob: -8.665843963623047
    9. ' (' → logprob: -8.790843963623047
    10. '),' → logprob: -9.165843963623047

Token 61: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0037773859221488237
    2. ' n' → logprob: -6.003777503967285
    3. '(n' → logprob: -7.378777503967285
    4. 'data' → logprob: -8.503777503967285
    5. '\n' → logprob: -8.753777503967285
    6. '(' → logprob: -9.003777503967285
    7. '```' → logprob: -10.003777503967285
    8. '
' → logprob: -10.253777503967285
    9. ' (' → logprob: -11.003777503967285
    10. ' =' → logprob: -11.378777503967285

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.040457421680912e-05
    2. ' ,' → logprob: -10.000070571899414
    3. ',m' → logprob: -10.750070571899414
    4. ',b' → logprob: -14.250070571899414
    5. '=' → logprob: -14.375070571899414
    6. ',n' → logprob: -14.500070571899414
    7. ',s' → logprob: -15.500070571899414
    8. ',,' → logprob: -15.625070571899414
    9. ' =' → logprob: -16.125070571899414
    10. ',e' → logprob: -16.375070571899414

Token 63: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.6110401749610901
    2. ' ' → logprob: -0.9860401749610901
    3. 'm' → logprob: -2.4860401153564453
    4. '<|end|>' → logprob: -7.611040115356445
    5. ' =' → logprob: -8.736040115356445
    6. '  ' → logprob: -9.611040115356445
    7. '=' → logprob: -9.736040115356445
    8. ' ‌' → logprob: -10.736040115356445
    9. 'space' → logprob: -10.986040115356445
    10. 's' → logprob: -11.111040115356445

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020600277930498123
    2. '=' → logprob: -3.8956003189086914
    3. ',' → logprob: -9.770600318908691
    4. ' ,' → logprob: -14.645600318908691
    5. ' ' → logprob: -15.145600318908691
    6. ')' → logprob: -15.395600318908691
    7. ' =
' → logprob: -16.145599365234375
    8. ' ' → logprob: -16.270599365234375
    9. '=int' → logprob: -17.020599365234375
    10. ' =)' → logprob: -17.145599365234375

Token 65: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.015521595254540443
    2. ' read' → logprob: -4.26552152633667
    3. ' ' → logprob: -7.26552152633667
    4. 'map' → logprob: -8.140522003173828
    5. ' list' → logprob: -8.765522003173828
    6. ' readline' → logprob: -9.265522003173828
    7. ' [' → logprob: -9.890522003173828
    8. 'read' → logprob: -10.640522003173828
    9. ' ' → logprob: -11.765522003173828
    10. '	map' → logprob: -12.140522003173828

Token 66: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15001949667930603
    2. '(int' → logprob: -2.025019407272339
    3. '(lambda' → logprob: -5.025019645690918
    4. '(str' → logprob: -7.650019645690918
    5. '(read' → logprob: -9.150019645690918
    6. '(list' → logprob: -10.150019645690918
    7. '(
' → logprob: -10.775019645690918
    8. '<|end|>' → logprob: -11.025019645690918
    9. '()' → logprob: -11.275019645690918
    10. '(eval' → logprob: -11.650019645690918

Token 67: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.03536203131079674
    2. '(' → logprob: -3.7853620052337646
    3. ')' → logprob: -4.535362243652344
    4. 'read' → logprob: -7.785362243652344
    5. '(sys' → logprob: -8.035362243652344
    6. ',' → logprob: -8.410362243652344
    7. '()' → logprob: -8.785362243652344
    8. '.readline' → logprob: -9.410362243652344
    9. ' readline' → logprob: -10.285362243652344
    10. '(
' → logprob: -10.785362243652344

Token 68: ' readline' (ID: 179561)
  Prédit: ' readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' readline' → logprob: -0.006281889975070953
    2. 'read' → logprob: -5.131281852722168
    3. '.readline' → logprob: -8.381281852722168
    4. ' read' → logprob: -9.131281852722168
    5. '(read' → logprob: -11.381281852722168
    6. ')' → logprob: -12.881281852722168
    7. ' )' → logprob: -14.631281852722168
    8. '	read' → logprob: -15.006281852722168
    9. '.read' → logprob: -15.131281852722168
    10. ' ' → logprob: -16.131282806396484

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01140076294541359
    2. '())' → logprob: -4.7614006996154785
    3. '()' → logprob: -5.8864006996154785
    4. ')' → logprob: -13.261401176452637
    5. '()
' → logprob: -13.636401176452637
    6. '()[' → logprob: -14.761401176452637
    7. '(' → logprob: -14.886401176452637
    8. ' ())' → logprob: -15.136401176452637
    9. '();)' → logprob: -15.761401176452637
    10. ' ()' → logprob: -15.886401176452637

Token 70: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.6500582695007324
    2. 'split' → logprob: -1.1500582695007324
    3. 'rstrip' → logprob: -2.4000582695007324
    4. 'decode' → logprob: -2.6500582695007324
    5. ')' → logprob: -13.15005874633789
    6. '```' → logprob: -13.77505874633789
    7. ' strip' → logprob: -13.90005874633789
    8. 'read' → logprob: -14.52505874633789
    9. '(split' → logprob: -15.02505874633789
    10. ' split' → logprob: -15.15005874633789

Token 71: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.17244884371757507
    2. ')' → logprob: -1.9224488735198975
    3. '()' → logprob: -4.422448635101318
    4. '))' → logprob: -9.797449111938477
    5. '()))' → logprob: -10.422449111938477
    6. '(' → logprob: -10.422449111938477
    7. '())
' → logprob: -10.797449111938477
    8. ' ())' → logprob: -13.547449111938477
    9. '(),' → logprob: -13.797449111938477
    10. '()[' → logprob: -13.922449111938477

Token 72: '#' (ID: 2)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5443087220191956
    2. '#' → logprob: -1.9193086624145508
    3. 'edges' → logprob: -2.169308662414551
    4. '
' → logprob: -2.544308662414551
    5. '\n' → logprob: -3.169308662414551
    6. 'g' → logprob: -4.669308662414551
    7. 'n' → logprob: -5.169308662414551
    8. 'for' → logprob: -5.669308662414551
    9. '```' → logprob: -6.169308662414551
    10. 'd' → logprob: -6.169308662414551

Token 73: ' Lecture' (ID: 106534)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.063509464263916
    2. 'graph' → logprob: -1.063509464263916
    3. 'edges' → logprob: -2.063509464263916
    4. 'data' → logprob: -2.938509464263916
    5. ' edges' → logprob: -3.563509464263916
    6. 'vertices' → logprob: -4.188509464263916
    7. 'python' → logprob: -4.188509464263916
    8. 'adj' → logprob: -4.313509464263916
    9. 'from' → logprob: -4.438509464263916
    10. 'def' → logprob: -4.688509464263916

Token 74: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32669106125831604
    2. ' des' → logprob: -1.7016910314559937
    3. 'des' → logprob: -2.701691150665283
    4. '(' → logprob: -3.826691150665283
    5. ' de' → logprob: -5.701691150665283
    6. 'de' → logprob: -7.076691150665283
    7. '(n' → logprob: -7.576691150665283
    8. ')' → logprob: -7.701691150665283
    9. '#' → logprob: -7.951691150665283
    10. ' of' → logprob: -8.201690673828125

Token 75: ' u' (ID: 337)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.6953805685043335
    2. ' ar' → logprob: -0.8203805685043335
    3. ' données' → logprob: -4.570380687713623
    4. 'are' → logprob: -4.695380687713623
    5. ' edges' → logprob: -4.695380687713623
    6. 'edges' → logprob: -5.445380687713623
    7. ' m' → logprob: -5.445380687713623
    8. 'm' → logprob: -5.445380687713623
    9. ' coordonnées' → logprob: -5.695380687713623
    10. 'aré' → logprob: -6.320380687713623

Token 76: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6531959176063538
    2. ',' → logprob: -0.7781959176063538
    3. ' ,' → logprob: -4.028195858001709
    4. ' ' → logprob: -6.403195858001709
    5. ',s' → logprob: -8.403196334838867
    6. ' s' → logprob: -8.403196334838867
    7. 'es' → logprob: -9.153196334838867
    8. '  ' → logprob: -9.528196334838867
    9. 'sers' → logprob: -10.028196334838867
    10. '<|end|>' → logprob: -10.278196334838867

Token 77: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.22554658353328705
    2. ' v' → logprob: -1.6005465984344482
    3. ',v' → logprob: -9.225546836853027
    4. ' ' → logprob: -11.225546836853027
    5. '<|end|>' → logprob: -12.100546836853027
    6. '	v' → logprob: -12.725546836853027
    7. ',' → logprob: -12.975546836853027
    8. 's' → logprob: -13.225546836853027
    9. 'vj' → logprob: -13.475546836853027
    10. '  ' → logprob: -13.475546836853027

Token 78: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12286846339702606
    2. 's' → logprob: -2.747868537902832
    3. ' =' → logprob: -3.122868537902832
    4. ' ,' → logprob: -6.372868537902832
    5. ')' → logprob: -6.747868537902832
    6. '=' → logprob: -6.872868537902832
    7. 'for' → logprob: -7.997868537902832
    8. ' ' → logprob: -7.997868537902832
    9. '_pairs' → logprob: -7.997868537902832
    10. '<|end|>' → logprob: -7.997868537902832

Token 79: ' s' (ID: 265)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0759799480438232
    2. ' et' → logprob: -1.4509799480438232
    3. ' and' → logprob: -1.9509799480438232
    4. ' w' → logprob: -2.5759799480438232
    5. 'et' → logprob: -3.4509799480438232
    6. ',' → logprob: -4.075980186462402
    7. 'p' → logprob: -4.075980186462402
    8. ' p' → logprob: -4.200980186462402
    9. 's' → logprob: -4.325980186462402
    10. 'u' → logprob: -4.325980186462402

Token 80: ' success' (ID: 3505)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14129051566123962
    2. 's' → logprob: -2.2662904262542725
    3. '=' → logprob: -4.391290664672852
    4. 'for' → logprob: -5.641290664672852
    5. '_lines' → logprob: -5.641290664672852
    6. ',' → logprob: -6.516290664672852
    7. ')' → logprob: -6.516290664672852
    8. '[]' → logprob: -6.516290664672852
    9. '=[]' → logprob: -7.266290664672852
    10. '_list' → logprob: -7.516290664672852

Token 81: 'ifs' (ID: 14119)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7015056610107422
    2. 'ès' → logprob: -1.3265056610107422
    3. 'ess' → logprob: -2.201505661010742
    4. 'ves' → logprob: -3.201505661010742
    5. 'è' → logprob: -4.701505661010742
    6. 'ifs' → logprob: -4.826505661010742
    7. '=' → logprob: -4.826505661010742
    8. 'esses' → logprob: -5.201505661010742
    9. '`' → logprob: -5.326505661010742
    10. 'ivement' → logprob: -5.326505661010742

Token 82: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0127872228622437
    2. '()' → logprob: -1.5127872228622437
    3. ' =' → logprob: -2.012787342071533
    4. '(' → logprob: -2.387787342071533
    5. '=' → logprob: -2.512787342071533
    6. 's' → logprob: -2.637787342071533
    7. ')' → logprob: -4.762787342071533
    8. '[]' → logprob: -5.262787342071533
    9. ' for' → logprob: -5.262787342071533
    10. '[' → logprob: -5.887787342071533

Token 83: 'les' (ID: 1032)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009120999835431576
    2. ' )' → logprob: -5.759120941162109
    3. 'for' → logprob: -6.009120941162109
    4. '()' → logprob: -6.884120941162109
    5. ' for' → logprob: -7.384120941162109
    6. '(' → logprob: -8.25912094116211
    7. 's' → logprob: -8.25912094116211
    8. '):' → logprob: -9.00912094116211
    9. ')
' → logprob: -9.13412094116211
    10. 'range' → logprob: -9.25912094116211

Token 84: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -1.130316972732544
    2. 's' → logprob: -2.255316972732544
    3. ')' → logprob: -2.505316972732544
    4. ' somm' → logprob: -2.505316972732544
    5. ' ar' → logprob: -2.880316972732544
    6. ' )' → logprob: -2.880316972732544
    7. ' ' → logprob: -3.505316972732544
    8. ' trip' → logprob: -4.005316734313965
    9. 'are' → logprob: -4.130316734313965
    10. ' ' → logprob: -4.130316734313965

Token 85: 'êtes' (ID: 23720)
  Prédit: 'êtes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.027919497340917587
    2. 'ê' → logprob: -4.527919292449951
    3. 'êt' → logprob: -4.777919292449951
    4. 'êts' → logprob: -5.652919292449951
    5. 'ête' → logprob: -6.277919292449951
    6. 'ètes' → logprob: -7.277919292449951
    7. 'êtres' → logprob: -8.02791976928711
    8. 'ç' → logprob: -8.27791976928711
    9. '�' → logprob: -8.27791976928711
    10. 'ês' → logprob: -8.77791976928711

Token 86: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013057519681751728
    2. ' )' → logprob: -4.763057708740234
    3. ',' → logprob: -5.638057708740234
    4. 's' → logprob: -8.638057708740234
    5. '):' → logprob: -8.763057708740234
    6. ' for' → logprob: -8.888057708740234
    7. 'for' → logprob: -9.013057708740234
    8. ' pour' → logprob: -10.388057708740234
    9. ' ,' → logprob: -10.388057708740234
    10. ')
' → logprob: -10.638057708740234

Token 87: ' la' (ID: 557)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -1.1455755233764648
    2. 'leur' → logprob: -1.5205755233764648
    3. 'leurs' → logprob: -2.270575523376465
    4. 's' → logprob: -2.270575523376465
    5. ' leur' → logprob: -2.395575523376465
    6. ' les' → logprob: -3.020575523376465
    7. ' le' → logprob: -3.395575523376465
    8. 'les' → logprob: -3.645575523376465
    9. 'le' → logprob: -4.145575523376465
    10. ' l' → logprob: -4.645575523376465

Token 88: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.28830233216285706
    2. ' poids' → logprob: -2.913302421569824
    3. 'u' → logprob: -3.413302421569824
    4. 'i' → logprob: -3.538302421569824
    5. 'po' → logprob: -3.663302421569824
    6. 'capac' → logprob: -4.663302421569824
    7. ' s' → logprob: -4.913302421569824
    8. 'ur' → logprob: -5.288302421569824
    9. 'sens' → logprob: -5.350802421569824
    10. 't' → logprob: -5.413302421569824

Token 89: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1147226095199585
    2. 'po' → logprob: -1.7397226095199585
    3. 'capac' → logprob: -1.7397226095199585
    4. 'sens' → logprob: -1.8647226095199585
    5. 'weights' → logprob: -3.614722728729248
    6. 'val' → logprob: -3.864722728729248
    7. 'cap' → logprob: -4.739722728729248
    8. 't' → logprob: -4.864722728729248
    9. ')' → logprob: -5.052222728729248
    10. 'c' → logprob: -5.052222728729248

Token 90: 'omme' (ID: 30420)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7482317686080933
    2. ')' → logprob: -2.123231887817383
    3. 'omme' → logprob: -2.248231887817383
    4. 'ens' → logprob: -2.998231887817383
    5. 'tat' → logprob: -3.248231887817383
    6. '")' → logprob: -3.998231887817383
    7. 'sens' → logprob: -3.998231887817383
    8. 'omm' → logprob: -4.123231887817383
    9. 'ource' → logprob: -4.373231887817383
    10. '```' → logprob: -4.560731887817383

Token 91: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.5822063684463501
    2. ' des' → logprob: -1.45720636844635
    3. '"' → logprob: -2.7072062492370605
    4. 'de' → logprob: -3.4572062492370605
    5. ' de' → logprob: -3.7072062492370605
    6. ' ")' → logprob: -3.7072062492370605
    7. ' "' → logprob: -4.5822062492370605
    8. 'des' → logprob: -4.5822062492370605
    9. 's' → logprob: -4.5822062492370605
    10. ')' → logprob: -4.8322062492370605

Token 92: ' impos' (ID: 12130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05022668093442917
    2. ' )' → logprob: -3.4252266883850098
    3. ' des' → logprob: -4.80022668838501
    4. 's' → logprob: -6.05022668838501
    5. ' de' → logprob: -6.05022668838501
    6. 'de' → logprob: -6.80022668838501
    7. 'des' → logprob: -6.80022668838501
    8. ' of' → logprob: -8.050226211547852
    9. ',' → logprob: -8.050226211547852
    10. '())' → logprob: -9.550226211547852

Token 93: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.011610052548348904
    2. 'ées' → logprob: -4.76161003112793
    3. 'ant' → logprob: -7.01161003112793
    4. 'ee' → logprob: -7.26161003112793
    5. 'é' → logprob: -7.51161003112793
    6. 'és' → logprob: -8.76161003112793
    7. '#' → logprob: -8.88661003112793
    8. 'ent' → logprob: -9.63661003112793
    9. ')' → logprob: -9.88661003112793
    10. 'e' → logprob: -10.13661003112793

Token 94: ' entre' (ID: 3853)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031905474606901407
    2. ' )' → logprob: -6.503190517425537
    3. 'des' → logprob: -7.878190517425537
    4. ' des' → logprob: -8.128190994262695
    5. ' de' → logprob: -8.253190994262695
    6. 'de' → logprob: -8.378190994262695
    7. 's' → logprob: -8.753190994262695
    8. 'sur' → logprob: -9.878190994262695
    9. ' sur' → logprob: -10.003190994262695
    10. ',' → logprob: -10.003190994262695

Token 95: ' deux' (ID: 10301)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0397556871175766
    2. 'eux' → logprob: -4.414755821228027
    3. ' eux' → logprob: -4.539755821228027
    4. 'u' → logprob: -5.039755821228027
    5. 'les' → logprob: -5.789755821228027
    6. ' )' → logprob: -5.914755821228027
    7. ' u' → logprob: -6.539755821228027
    8. 's' → logprob: -7.539755821228027
    9. ' leurs' → logprob: -7.789755821228027
    10. 'ux' → logprob: -8.164755821228027

Token 96: ' somm' (ID: 44830)
  Prédit: ' somm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.5599210858345032
    2. 's' → logprob: -1.5599210262298584
    3. ')' → logprob: -2.4349210262298584
    4. ' vertices' → logprob: -3.8099210262298584
    5. 'n' → logprob: -3.9349210262298584
    6. ' nodes' → logprob: -4.0599212646484375
    7. '<|end|>' → logprob: -4.1849212646484375
    8. 'vertices' → logprob: -4.4349212646484375
    9. 'nodes' → logprob: -4.4349212646484375
    10. ' )' → logprob: -4.5599212646484375

Token 97: 'ets' (ID: 1719)
  Prédit: 'ets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ets' → logprob: -0.04498422145843506
    2. 'es' → logprob: -3.2949843406677246
    3. ')' → logprob: -5.544984340667725
    4. 'et' → logprob: -6.044984340667725
    5. 'êts' → logprob: -9.294983863830566
    6. 'ètres' → logprob: -9.419983863830566
    7. 'ents' → logprob: -9.794983863830566
    8. 'ètes' → logprob: -9.919983863830566
    9. 'és' → logprob: -10.169983863830566
    10. 'e' → logprob: -10.294983863830566

Token 98: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003199730417691171
    2. '()' → logprob: -8.750320434570312
    3. '(' → logprob: -9.500320434570312
    4. ' )' → logprob: -10.500320434570312
    5. ')
' → logprob: -10.875320434570312
    6. ',' → logprob: -11.000320434570312
    7. '())' → logprob: -12.125320434570312
    8. '')' → logprob: -12.500320434570312
    9. 's' → logprob: -12.500320434570312
    10. '[' → logprob: -13.500320434570312

Token 99: 'uv' (ID: 6992)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30924859642982483
    2. 'for' → logprob: -1.4342485666275024
    3. '\n' → logprob: -4.309248447418213
    4. 's' → logprob: -4.934248447418213
    5. ' for' → logprob: -5.559248447418213
    6. 'n' → logprob: -7.059248447418213
    7. '<|end|>' → logprob: -7.184248447418213
    8. '
' → logprob: -7.934248447418213
    9. '' → logprob: -8.684248924255371
    10. '<|end|>' → logprob: -9.309248924255371

Token 100: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1257769763469696
    2. ' =' → logprob: -3.000777006149292
    3. '=' → logprob: -3.375777006149292
    4. ',' → logprob: -3.500777006149292
    5. '_' → logprob: -5.875776767730713
    6. 'v' → logprob: -7.750776767730713
    7. ')' → logprob: -7.875776767730713
    8. '_s' → logprob: -8.625777244567871
    9. '_,' → logprob: -9.625777244567871
    10. '  ' → logprob: -10.750777244567871

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15344612300395966
    2. '=' → logprob: -2.1534461975097656
    3. 's' → logprob: -3.6534461975097656
    4. ' s' → logprob: -9.028446197509766
    5. '_' → logprob: -10.403446197509766
    6. ' ' → logprob: -10.528446197509766
    7. '[]' → logprob: -10.903446197509766
    8. '=[]' → logprob: -10.903446197509766
    9. ')' → logprob: -11.403446197509766
    10. ',' → logprob: -11.653446197509766

Token 102: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10338449478149414
    2. '[]' → logprob: -2.978384494781494
    3. 'read' → logprob: -3.978384494781494
    4. '[list' → logprob: -4.353384494781494
    5. ' [' → logprob: -4.728384494781494
    6. '[int' → logprob: -5.853384494781494
    7. 'list' → logprob: -6.103384494781494
    8. ' []' → logprob: -7.728384494781494
    9. '[s' → logprob: -9.103384017944336
    10. '[line' → logprob: -9.103384017944336

Token 103: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.048572838306427
    2. '(read' → logprob: -3.1735727787017822
    3. '(map' → logprob: -5.423573017120361
    4. '(sys' → logprob: -7.173573017120361
    5. '(range' → logprob: -9.048572540283203
    6. '(int' → logprob: -9.298572540283203
    7. '(
' → logprob: -9.673572540283203
    8. '()' → logprob: -11.048572540283203
    9. '(eval' → logprob: -11.798572540283203
    10. '(data' → logprob: -12.048572540283203

Token 104: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0069123911671340466
    2. '(' → logprob: -5.0069122314453125
    3. '(lambda' → logprob: -9.881912231445312
    4. ')' → logprob: -10.131912231445312
    5. ',int' → logprob: -10.256912231445312
    6. '<int' → logprob: -11.006912231445312
    7. '(
' → logprob: -11.006912231445312
    8. 'int' → logprob: -11.006912231445312
    9. ']int' → logprob: -12.131912231445312
    10. ')(' → logprob: -12.256912231445312

Token 105: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.005171378143131733
    2. '(' → logprob: -6.130171298980713
    3. ',' → logprob: -6.380171298980713
    4. 'read' → logprob: -6.880171298980713
    5. ')' → logprob: -8.505171775817871
    6. '(
' → logprob: -11.505171775817871
    7. '))' → logprob: -11.755171775817871
    8. '(),' → logprob: -12.005171775817871
    9. '(sys' → logprob: -12.130171775817871
    10. '),' → logprob: -12.255171775817871

Token 106: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.07002702355384827
    2. ' read' → logprob: -2.6950271129608154
    3. ' readline' → logprob: -10.070027351379395
    4. '	read' → logprob: -11.070027351379395
    5. '(read' → logprob: -11.445027351379395
    6. ' ' → logprob: -11.695027351379395
    7. 're' → logprob: -13.320027351379395
    8. '
' → logprob: -13.320027351379395
    9. ')' → logprob: -13.570027351379395
    10. '```' → logprob: -13.695027351379395

Token 107: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.06556863337755203
    2. '()))' → logprob: -3.190568685531616
    3. '()' → logprob: -3.815568685531616
    4. '())' → logprob: -8.565568923950195
    5. '))' → logprob: -10.690568923950195
    6. '(' → logprob: -10.690568923950195
    7. '()))
' → logprob: -11.440568923950195
    8. '()));' → logprob: -11.565568923950195
    9. 's' → logprob: -11.815568923950195
    10. '()
' → logprob: -11.940568923950195

Token 108: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2471589798224159e-05
    2. 'decode' → logprob: -11.625012397766113
    3. 'strip' → logprob: -12.750012397766113
    4. 'spl' → logprob: -15.250012397766113
    5. ' split' → logprob: -15.750012397766113
    6. 'rstrip' → logprob: -15.875012397766113
    7. ')' → logprob: -16.00001335144043
    8. '(split' → logprob: -16.87501335144043
    9. '```' → logprob: -18.50001335144043
    10. '()' → logprob: -18.50001335144043

Token 109: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.696999728679657
    2. '()))' → logprob: -0.696999728679657
    3. '()' → logprob: -5.696999549865723
    4. '())' → logprob: -8.446999549865723
    5. '(' → logprob: -8.821999549865723
    6. ')' → logprob: -9.571999549865723
    7. '()))
' → logprob: -10.321999549865723
    8. '()));' → logprob: -11.821999549865723
    9. ' ))' → logprob: -12.446999549865723
    10. '(),' → logprob: -12.696999549865723

Token 110: '#' (ID: 2)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: ' Construction' (ID: 31452)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.08056919276714325
    2. 'u' → logprob: -3.455569267272949
    3. 'i' → logprob: -4.205569267272949
    4. 'd' → logprob: -4.455569267272949
    5. 'from' → logprob: -5.955569267272949
    6. 'f' → logprob: -6.330569267272949
    7. 's' → logprob: -6.330569267272949
    8. 'edges' → logprob: -6.330569267272949
    9. 'graph' → logprob: -6.455569267272949
    10. ' #' → logprob: -6.455569267272949

Token 112: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -1.0319918394088745
    2. 'd' → logprob: -1.4069918394088745
    3. ')' → logprob: -2.781991958618164
    4. 'graph' → logprob: -2.781991958618164
    5. ' des' → logprob: -3.156991958618164
    6. '_graph' → logprob: -3.281991958618164
    7. '<|end|>' → logprob: -3.281991958618164
    8. ' of' → logprob: -3.531991958618164
    9. ' de' → logprob: -3.781991958618164
    10. '_' → logprob: -4.406991958618164

Token 113: ' la' (ID: 557)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.1585359126329422
    2. 'edges' → logprob: -3.658535957336426
    3. 'graph' → logprob: -4.033535957336426
    4. 'a' → logprob: -4.408535957336426
    5. ' adjacency' → logprob: -4.408535957336426
    6. ' edges' → logprob: -4.533535957336426
    7. '[' → logprob: -5.033535957336426
    8. ' l' → logprob: -5.158535957336426
    9. ' la' → logprob: -5.158535957336426
    10. 'adj' → logprob: -5.158535957336426

Token 114: ' liste' (ID: 31719)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.026060374453663826
    2. ' graph' → logprob: -4.776060581207275
    3. 'adj' → logprob: -4.901060581207275
    4. 'gr' → logprob: -5.526060581207275
    5. 'liste' → logprob: -6.651060581207275
    6. 'from' → logprob: -6.776060581207275
    7. ' adjacency' → logprob: -7.526060581207275
    8. 'g' → logprob: -7.526060581207275
    9. '[]' → logprob: -7.901060581207275
    10. 'import' → logprob: -7.901060581207275

Token 115: ' d' (ID: 272)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.742083728313446
    2. '_' → logprob: -1.3670837879180908
    3. 'adj' → logprob: -2.867083787918091
    4. ' d' → logprob: -2.867083787918091
    5. '_adj' → logprob: -3.242083787918091
    6. 'd' → logprob: -3.617083787918091
    7. 's' → logprob: -3.617083787918091
    8. ' adjacency' → logprob: -4.242083549499512
    9. '_graph' → logprob: -4.617083549499512
    10. '[]' → logprob: -4.742083549499512

Token 116: ''ad' (ID: 36162)
  Prédit: ''ad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ad' → logprob: -0.07567022740840912
    2. 'adj' → logprob: -2.7006702423095703
    3. '’ad' → logprob: -6.20067024230957
    4. ''ar' → logprob: -6.32567024230957
    5. ' adjacency' → logprob: -7.57567024230957
    6. '_ad' → logprob: -7.82567024230957
    7. '_adj' → logprob: -8.20067024230957
    8. ''' → logprob: -8.20067024230957
    9. '```' → logprob: -9.82567024230957
    10. ''inc' → logprob: -9.95067024230957

Token 117: 'jac' (ID: 77250)
  Prédit: 'jac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'jac' → logprob: -0.474843293428421
    2. 'j' → logprob: -0.9748432636260986
    3. 'ja' → logprob: -7.349843502044678
    4. 'jec' → logprob: -10.22484302520752
    5. 'Jac' → logprob: -10.84984302520752
    6. '[j' → logprob: -10.97484302520752
    7. 'J' → logprob: -12.09984302520752
    8. 'jc' → logprob: -12.22484302520752
    9. 'd' → logprob: -12.47484302520752
    10. 'js' → logprob: -12.72484302520752

Token 118: 'ence' (ID: 1082)
  Prédit: 'ac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ac' → logprob: -0.22814799845218658
    2. 'acency' → logprob: -1.6031479835510254
    3. '#' → logprob: -6.853147983551025
    4. '```' → logprob: -7.478147983551025
    5. 'ence' → logprob: -8.353148460388184
    6. 'c' → logprob: -9.228148460388184
    7. 'acent' → logprob: -9.603148460388184
    8. 'ences' → logprob: -9.603148460388184
    9. 'acité' → logprob: -9.728148460388184
    10. 'escence' → logprob: -9.978148460388184

Token 119: ' sous' (ID: 14487)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.47992104291915894
    2. 'graph' → logprob: -2.2299211025238037
    3. ' adj' → logprob: -2.3549211025238037
    4. ' adjacency' → logprob: -2.7299211025238037
    5. ' graph' → logprob: -3.3549211025238037
    6. '[' → logprob: -3.9799211025238037
    7. ' =' → logprob: -4.104920864105225
    8. ',' → logprob: -4.479920864105225
    9. '_adj' → logprob: -4.479920864105225
    10. '=' → logprob: -5.604920864105225

Token 120: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.3307361304759979
    2. 'forme' → logprob: -1.5807361602783203
    3. 'form' → logprob: -2.9557361602783203
    4. ' form' → logprob: -4.20573616027832
    5. ' formes' → logprob: -6.33073616027832
    6. 'format' → logprob: -6.58073616027832
    7. 'dict' → logprob: -6.70573616027832
    8. ' la' → logprob: -6.83073616027832
    9. 'formes' → logprob: -6.83073616027832
    10. ' defaultdict' → logprob: -8.45573616027832

Token 121: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.2235117256641388
    2. ' d' → logprob: -2.5985116958618164
    3. '[]' → logprob: -2.9735116958618164
    4. 'de' → logprob: -3.5985116958618164
    5. 'dict' → logprob: -3.8485116958618164
    6. ' de' → logprob: -4.223511695861816
    7. 's' → logprob: -6.223511695861816
    8. '=' → logprob: -6.348511695861816
    9. '{' → logprob: -6.598511695861816
    10. ' of' → logprob: -6.723511695861816

Token 122: ' diction' (ID: 155259)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.6693308353424072
    2. 'dict' → logprob: -1.0443308353424072
    3. 'default' → logprob: -2.0443308353424072
    4. 'list' → logprob: -6.419330596923828
    5. 'liste' → logprob: -6.419330596923828
    6. 'collections' → logprob: -6.669330596923828
    7. 'graph' → logprob: -7.669330596923828
    8. '{}' → logprob: -7.794330596923828
    9. '{' → logprob: -8.044330596923828
    10. '```' → logprob: -8.169330596923828

Token 123: 'naire' (ID: 30464)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6755138039588928
    2. 'aire' → logprob: -0.8005138039588928
    3. 'ary' → logprob: -3.800513744354248
    4. 'naire' → logprob: -4.675513744354248
    5. '{}' → logprob: -5.050513744354248
    6. 'a' → logprob: -6.300513744354248
    7. 'air' → logprob: -7.175513744354248
    8. '{
' → logprob: -7.925513744354248
    9. 'taire' → logprob: -8.300514221191406
    10. 'ar' → logprob: -8.425514221191406

Token 124: ' pour' (ID: 1930)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.30174651741981506
    2. 'adj' → logprob: -2.1767466068267822
    3. ',' → logprob: -2.4267466068267822
    4. 'g' → logprob: -4.176746368408203
    5. ' graph' → logprob: -5.051746368408203
    6. ':' → logprob: -5.176746368408203
    7. 'G' → logprob: -5.301746368408203
    8. 'edges' → logprob: -5.426746368408203
    9. ' =' → logprob: -5.676746368408203
    10. 'd' → logprob: -5.926746368408203

Token 125: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.8450201749801636
    2. ' stock' → logprob: -1.5950201749801636
    3. ' les' → logprob: -2.595020294189453
    4. 'stock' → logprob: -3.345020294189453
    5. ' représ' → logprob: -3.470020294189453
    6. 'default' → logprob: -3.595020294189453
    7. 'les' → logprob: -3.845020294189453
    8. 'collections' → logprob: -3.970020294189453
    9. 'une' → logprob: -4.095020294189453
    10. 'repr' → logprob: -4.220020294189453

Token 126: ' sommet' (ID: 130502)
  Prédit: ' sommet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sommet' → logprob: -0.036652836948633194
    2. 'som' → logprob: -4.1616530418396
    3. 's' → logprob: -4.5366530418396
    4. 'graph' → logprob: -6.2866530418396
    5. ' som' → logprob: -6.5366530418396
    6. 'n' → logprob: -6.9116530418396
    7. 'vertex' → logprob: -6.9116530418396
    8. ' somm' → logprob: -7.1616530418396
    9. 'v' → logprob: -7.4116530418396
    10. 'summ' → logprob: -7.7866530418396

Token 127: ',
' (ID: 412)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5709729194641113
    2. 'graph' → logprob: -1.4459729194641113
    3. ',' → logprob: -2.4459729194641113
    4. ' adjacency' → logprob: -3.0709729194641113
    5. ' adj' → logprob: -4.070972919464111
    6. ' graph' → logprob: -4.320972919464111
    7. ':' → logprob: -4.570972919464111
    8. ')' → logprob: -4.945972919464111
    9. '_adj' → logprob: -5.820972919464111
    10. '.' → logprob: -6.070972919464111

Token 128: '#' (ID: 2)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.4153735041618347
    2. 'default' → logprob: -1.5403735637664795
    3. 'neighbors' → logprob: -3.0403735637664795
    4. 'edges' → logprob: -4.0403733253479
    5. 'graph' → logprob: -4.0403733253479
    6. ' adjacency' → logprob: -4.2903733253479
    7. '{' → logprob: -4.9153733253479
    8. 'from' → logprob: -5.4153733253479
    9. '{}' → logprob: -5.4153733253479
    10. '#' → logprob: -5.7903733253479

Token 129: ' où' (ID: 15113)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7662451267242432
    2. '#' → logprob: -1.3912451267242432
    3. 'edges' → logprob: -2.266245126724243
    4. 'neighbors' → logprob: -2.391245126724243
    5. 'graph' → logprob: -3.266245126724243
    6. 'dist' → logprob: -4.016244888305664
    7. ' edges' → logprob: -4.766244888305664
    8. ' voisins' → logprob: -5.266244888305664
    9. ' adjacency' → logprob: -5.391244888305664
    10. ' neighbors' → logprob: -5.891244888305664

Token 130: ' links' (ID: 9362)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.9639683961868286
    2. 'clé' → logprob: -1.4639683961868286
    3. ' chaque' → logprob: -2.088968276977539
    4. 'keys' → logprob: -2.463968276977539
    5. 'key' → logprob: -3.463968276977539
    6. ' clé' → logprob: -3.588968276977539
    7. ' keys' → logprob: -3.713968276977539
    8. ' les' → logprob: -3.838968276977539
    9. ' clés' → logprob: -3.838968276977539
    10. 'la' → logprob: -4.463968276977539

Token 131: '[u' (ID: 48750)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.414538860321045
    2. ' =' → logprob: -1.664538860321045
    3. 's' → logprob: -1.789538860321045
    4. '=' → logprob: -2.039538860321045
    5. '[' → logprob: -2.289538860321045
    6. ' est' → logprob: -3.164538860321045
    7. '[u' → logprob: -3.539538860321045
    8. '<|end|>' → logprob: -3.789538860321045
    9. '.setdefault' → logprob: -4.164538860321045
    10. ')' → logprob: -4.414538860321045

Token 132: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.2762428822461516e-05
    2. ']=' → logprob: -10.375052452087402
    3. '][' → logprob: -11.875052452087402
    4. '],' → logprob: -12.250052452087402
    5. ']={' → logprob: -12.750052452087402
    6. ' ]' → logprob: -13.625052452087402
    7. ']:' → logprob: -13.750052452087402
    8. '].' → logprob: -13.875052452087402
    9. '])' → logprob: -14.000052452087402
    10. 's' → logprob: -14.750052452087402

Token 133: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0023522183764725924
    2. ']' → logprob: -6.127352237701416
    3. '(v' → logprob: -9.127351760864258
    4. ']=' → logprob: -11.127351760864258
    5. '][' → logprob: -11.252351760864258
    6. '[v' → logprob: -11.377351760864258
    7. ' v' → logprob: -11.502351760864258
    8. 'u' → logprob: -12.752351760864258
    9. '](' → logprob: -14.252351760864258
    10. 's' → logprob: -14.627351760864258

Token 134: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000619388825725764
    2. ']=' → logprob: -7.500619411468506
    3. ' ]' → logprob: -10.500618934631348
    4. '].' → logprob: -11.125618934631348
    5. '][' → logprob: -11.625618934631348
    6. '],' → logprob: -12.875618934631348
    7. 's' → logprob: -13.250618934631348
    8. '[' → logprob: -13.500618934631348
    9. '][]' → logprob: -13.750618934631348
    10. ']=(' → logprob: -13.750618934631348

Token 135: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06765053421258926
    2. ']' → logprob: -3.192650556564331
    3. ']=' → logprob: -4.442650318145752
    4. ' =' → logprob: -4.817650318145752
    5. '[' → logprob: -5.692650318145752
    6. '=[]' → logprob: -8.06765079498291
    7. '=[' → logprob: -8.81765079498291
    8. '.setdefault' → logprob: -8.81765079498291
    9. '<|end|>' → logprob: -9.31765079498291
    10. '[u' → logprob: -9.81765079498291

Token 136: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.019717736169695854
    2. '(s' → logprob: -4.394717693328857
    3. 'uv' → logprob: -6.269717693328857
    4. 'None' → logprob: -6.644717693328857
    5. ' s' → logprob: -6.769717693328857
    6. '(' → logprob: -7.519717693328857
    7. ' (' → logprob: -8.019718170166016
    8. '(None' → logprob: -8.019718170166016
    9. 'value' → logprob: -8.644718170166016
    10. '-' → logprob: -8.644718170166016

Token 137: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.39157503843307495
    2. '=' → logprob: -1.2665750980377197
    3. ',' → logprob: -3.3915750980377197
    4. '
' → logprob: -6.766574859619141
    5. ')' → logprob: -7.016574859619141
    6. ',
' → logprob: -7.016574859619141
    7. ' =
' → logprob: -7.141574859619141
    8. ' ' → logprob: -7.141574859619141
    9. 'links' → logprob: -7.641574859619141
    10. ']' → logprob: -7.766574859619141

Token 138: ' <' (ID: 464)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18345071375370026
    2. ' =' → logprob: -2.308450698852539
    3. '}' → logprob: -3.308450698852539
    4. ',' → logprob: -3.558450698852539
    5. 'for' → logprob: -7.183450698852539
    6. '={}' → logprob: -7.433450698852539
    7. ',
' → logprob: -7.683450698852539
    8. ')' → logprob: -7.683450698852539
    9. '   ' → logprob: -8.933450698852539
    10. ' }' → logprob: -9.058450698852539

Token 139: '=>' (ID: 4715)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.2273900806903839
    2. '>' → logprob: -2.7273900508880615
    3. ']' → logprob: -2.7273900508880615
    4. ')' → logprob: -3.9773900508880615
    5. '
' → logprob: -4.602390289306641
    6. '=' → logprob: -4.852390289306641
    7. ',' → logprob: -5.352390289306641
    8. 'import' → logprob: -5.477390289306641
    9. '```' → logprob: -5.977390289306641
    10. '.' → logprob: -6.102390289306641

Token 140: ' l' (ID: 305)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.6789509057998657
    2. ' links' → logprob: -1.6789509057998657
    3. ' u' → logprob: -3.303950786590576
    4. ' on' → logprob: -3.303950786590576
    5. 'les' → logprob: -3.428950786590576
    6. ' il' → logprob: -3.553950786590576
    7. 'u' → logprob: -3.553950786590576
    8. 'l' → logprob: -3.803950786590576
    9. 'la' → logprob: -4.428950786590576
    10. ' la' → logprob: -4.553950786590576

Token 141: ''ar' (ID: 54307)
  Prédit: 'inks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inks' → logprob: -0.09764233231544495
    2. 'es' → logprob: -3.722642421722412
    3. 'a' → logprob: -3.972642421722412
    4. 'iens' → logprob: -4.472642421722412
    5. 'ink' → logprob: -4.597642421722412
    6. 'ien' → logprob: -4.847642421722412
    7. ''' → logprob: -5.472642421722412
    8. 'i' → logprob: -5.597642421722412
    9. '```' → logprob: -5.722642421722412
    10. 'e' → logprob: -5.972642421722412

Token 142: 'ête' (ID: 16808)
  Prédit: 'êtes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'êtes' → logprob: -0.3512706756591797
    2. 'ête' → logprob: -1.8512706756591797
    3. 'inks' → logprob: -3.3512706756591797
    4. 'ète' → logprob: -3.8512706756591797
    5. 'etes' → logprob: -4.60127067565918
    6. 'tes' → logprob: -4.97627067565918
    7. 'edges' → logprob: -5.22627067565918
    8. 'iste' → logprob: -5.22627067565918
    9. 'e' → logprob: -5.35127067565918
    10. 'ete' → logprob: -5.60127067565918

Token 143: ' (' (ID: 350)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.74606853723526
    2. ' entre' → logprob: -1.2460684776306152
    3. 'u' → logprob: -2.4960684776306152
    4. 'between' → logprob: -3.7460684776306152
    5. ' u' → logprob: -3.8710684776306152
    6. ' existe' → logprob: -4.121068477630615
    7. '[u' → logprob: -4.121068477630615
    8. '<|end|>' → logprob: -4.621068477630615
    9. '(u' → logprob: -4.746068477630615
    10. ' exists' → logprob: -4.871068477630615

Token 144: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.0023455615155398846
    2. ' u' → logprob: -6.127345561981201
    3. ')' → logprob: -9.127345085144043
    4. '(u' → logprob: -10.502345085144043
    5. '[u' → logprob: -11.502345085144043
    6. ''u' → logprob: -12.002345085144043
    7. ',u' → logprob: -13.002345085144043
    8. ' (' → logprob: -13.377345085144043
    9. ',' → logprob: -13.877345085144043
    10. '	u' → logprob: -14.627345085144043

Token 145: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03452145308256149
    2. ',v' → logprob: -3.9095213413238525
    3. ' ,' → logprob: -4.909521579742432
    4. ',u' → logprob: -5.534521579742432
    5. ')' → logprob: -6.534521579742432
    6. ',n' → logprob: -8.784521102905273
    7. '[' → logprob: -8.909521102905273
    8. '][' → logprob: -9.284521102905273
    9. ',)' → logprob: -9.659521102905273
    10. ',l' → logprob: -9.784521102905273

Token 146: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005931289400905371
    2. ' v' → logprob: -5.130931377410889
    3. ',v' → logprob: -13.88093090057373
    4. '
' → logprob: -14.13093090057373
    5. '	v' → logprob: -15.13093090057373
    6. ' ' → logprob: -15.50593090057373
    7. ')v' → logprob: -15.63093090057373
    8. ',' → logprob: -16.255931854248047
    9. ')' → logprob: -16.505931854248047
    10. ' ' → logprob: -17.130931854248047

Token 147: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003461905289441347
    2. ',' → logprob: -9.125346183776855
    3. ' )' → logprob: -9.250346183776855
    4. '#' → logprob: -10.625346183776855
    5. ')
' → logprob: -10.625346183776855
    6. ')#' → logprob: -10.625346183776855
    7. ').' → logprob: -11.250346183776855
    8. ',)' → logprob: -11.875346183776855
    9. '),' → logprob: -12.000346183776855
    10. '')' → logprob: -12.000346183776855

Token 148: ' doit' (ID: 21822)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016049502417445183
    2. ' =' → logprob: -4.516049385070801
    3. ')' → logprob: -6.641049385070801
    4. '={' → logprob: -7.141049385070801
    5. '.setdefault' → logprob: -7.516049385070801
    6. '={}' → logprob: -7.891049385070801
    7. '}' → logprob: -8.1410493850708
    8. '[u' → logprob: -8.5160493850708
    9. ']' → logprob: -8.6410493850708
    10. '[' → logprob: -8.7660493850708

Token 149: ' vérifier' (ID: 93671)
  Prédit: 'avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'avoir' → logprob: -0.6608213186264038
    2. 'ex' → logprob: -1.0358213186264038
    3. 'être' → logprob: -3.5358214378356934
    4. 's' → logprob: -3.5358214378356934
    5. ' avoir' → logprob: -4.160821437835693
    6. 'exist' → logprob: -4.660821437835693
    7. ' être' → logprob: -5.410821437835693
    8. ' ex' → logprob: -5.535821437835693
    9. '=' → logprob: -5.660821437835693
    10. ' respecter' → logprob: -5.785821437835693

Token 150: ' nums' (ID: 18117)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.6978437900543213
    2. '"' → logprob: -2.3228437900543213
    3. ''' → logprob: -2.3228437900543213
    4. ' links' → logprob: -2.6978437900543213
    5. 'links' → logprob: -2.9478437900543213
    6. ' =' → logprob: -2.9478437900543213
    7. 'l' → logprob: -3.1978437900543213
    8. ' l' → logprob: -3.3228437900543213
    9. ' ' → logprob: -3.3228437900543213
    10. ' que' → logprob: -3.4478437900543213

Token 151: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.268085777759552
    2. '[v' → logprob: -1.7680857181549072
    3. '[' → logprob: -2.8930857181549072
    4. 's' → logprob: -5.518085956573486
    5. 'v' → logprob: -7.018085956573486
    6. '_' → logprob: -7.518085956573486
    7. '=' → logprob: -7.643085956573486
    8. '```' → logprob: -7.768085956573486
    9. 'u' → logprob: -7.893085956573486
    10. '+' → logprob: -8.518085479736328

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7984071969985962
    2. '][' → logprob: -0.7984071969985962
    3. '[v' → logprob: -2.7984070777893066
    4. '[u' → logprob: -3.6734070777893066
    5. ']+' → logprob: -5.923407077789307
    6. ']==' → logprob: -6.048407077789307
    7. '[' → logprob: -6.173407077789307
    8. '])' → logprob: -6.548407077789307
    9. '],' → logprob: -6.673407077789307
    10. ',' → logprob: -7.048407077789307

Token 153: ' +' (ID: 659)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6284309029579163
    2. '[v' → logprob: -2.1284308433532715
    3. '+' → logprob: -2.5034308433532715
    4. '=' → logprob: -2.6284308433532715
    5. ',' → logprob: -2.8784308433532715
    6. '[u' → logprob: -3.0034308433532715
    7. '<|end|>' → logprob: -3.6284308433532715
    8. '-' → logprob: -4.5034308433532715
    9. 's' → logprob: -5.1284308433532715
    10. '>=' → logprob: -5.1284308433532715

Token 154: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.16471731662750244
    2. ' nums' → logprob: -1.9147173166275024
    3. 's' → logprob: -5.789717197418213
    4. ' s' → logprob: -6.789717197418213
    5. ' ' → logprob: -8.914717674255371
    6. '=' → logprob: -9.414717674255371
    7. '(nums' → logprob: -11.164717674255371
    8. 'num' → logprob: -11.289717674255371
    9. ' =' → logprob: -11.664717674255371
    10. '  ' → logprob: -11.914717674255371

Token 155: '[v' (ID: 36561)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.5094772577285767
    2. '[v' → logprob: -1.0094772577285767
    3. '[' → logprob: -3.509477138519287
    4. '=' → logprob: -5.759477138519287
    5. '[]' → logprob: -8.134477615356445
    6. 'v' → logprob: -8.259477615356445
    7. '+' → logprob: -8.259477615356445
    8. ' =' → logprob: -8.884477615356445
    9. '==' → logprob: -9.509477615356445
    10. ')' → logprob: -9.634477615356445

Token 156: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5697528123855591
    2. ' ==' → logprob: -1.319752812385559
    3. ']' → logprob: -2.3197526931762695
    4. ')' → logprob: -3.1947526931762695
    5. '=' → logprob: -4.4447526931762695
    6. ']==' → logprob: -4.5697526931762695
    7. ')==' → logprob: -6.8197526931762695
    8. ' =' → logprob: -6.8197526931762695
    9. '>=' → logprob: -7.0697526931762695
    10. '<=' → logprob: -7.1947526931762695

Token 157: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3185930550098419
    2. ' =' → logprob: -1.8185930252075195
    3. '[' → logprob: -3.1935930252075195
    4. ')' → logprob: -3.5685930252075195
    5. '<|end|>' → logprob: -4.4435930252075195
    6. ',' → logprob: -4.5685930252075195
    7. ']' → logprob: -5.0685930252075195
    8. ' ' → logprob: -5.1935930252075195
    9. '[u' → logprob: -6.5685930252075195
    10. '}' → logprob: -7.4435930252075195

Token 158: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47408369183540344
    2. 's' → logprob: -0.974083662033081
    3. ' ' → logprob: -12.22408390045166
    4. ' ' → logprob: -13.34908390045166
    5. '	s' → logprob: -16.849082946777344
    6. ''s' → logprob: -17.349082946777344
    7. '<|end|>' → logprob: -18.036582946777344
    8. ' ' → logprob: -18.224082946777344
    9. '```' → logprob: -18.411582946777344
    10. '​' → logprob: -18.536582946777344

Token 159: '
' (ID: 198)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.7005340456962585
    2. '
' → logprob: -0.8255340456962585
    3. ' links' → logprob: -3.8255341053009033
    4. ',' → logprob: -3.9505341053009033
    5. '.links' → logprob: -4.950533866882324
    6. ',
' → logprob: -5.325533866882324
    7. '_links' → logprob: -6.075533866882324
    8. '\n' → logprob: -6.200533866882324
    9. '' → logprob: -6.575533866882324
    10. ':' → logprob: -7.450533866882324

Token 160: 'links' (ID: 26581)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05269206315279007
    2. 'links' → logprob: -3.052692174911499
    3. ' links' → logprob: -6.80269193649292
    4. '\n' → logprob: -6.92769193649292
    5. '_links' → logprob: -8.052692413330078
    6. '
' → logprob: -8.302692413330078
    7. ',
' → logprob: -8.802692413330078
    8. ')
' → logprob: -8.802692413330078
    9. '

' → logprob: -8.802692413330078
    10. ',' → logprob: -8.927692413330078

Token 161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326878070831299
    2. '=' → logprob: -0.7576878070831299
    3. '={}' → logprob: -10.00768756866455
    4. '[' → logprob: -11.50768756866455
    5. 's' → logprob: -11.63268756866455
    6. ' ' → logprob: -12.13268756866455
    7. ' ={' → logprob: -12.25768756866455
    8. ',' → logprob: -13.25768756866455
    9. '={' → logprob: -13.25768756866455
    10. ')' → logprob: -13.38268756866455

Token 162: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.40487194061279297
    2. '{}' → logprob: -1.154871940612793
    3. ' [{}' → logprob: -4.654871940612793
    4. '{' → logprob: -4.904871940612793
    5. '[{' → logprob: -7.404871940612793
    6. ' {}' → logprob: -9.029871940612793
    7. ' [' → logprob: -9.279871940612793
    8. 'default' → logprob: -9.404871940612793
    9. ' {' → logprob: -12.654871940612793
    10. 'dict' → logprob: -13.279871940612793

Token 163: 'dict' (ID: 20993)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.00020425561524461955
    2. 'dict' → logprob: -8.500204086303711
    3. 'default' → logprob: -15.250204086303711
    4. '{' → logprob: -15.250204086303711
    5. '{})' → logprob: -15.875204086303711
    6. ' {}' → logprob: -17.00020408630371
    7. '{}
' → logprob: -17.75020408630371
    8. '{},' → logprob: -18.37520408630371
    9. ' dict' → logprob: -19.12520408630371
    10. '{}

' → logprob: -19.12520408630371

Token 164: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003382038848940283
    2. '()]' → logprob: -8.000338554382324
    3. '()
' → logprob: -13.250338554382324
    4. '(),' → logprob: -14.875338554382324
    5. ']()' → logprob: -15.250338554382324
    6. '()=>' → logprob: -16.750337600708008
    7. '()\' → logprob: -16.750337600708008
    8. ' ()' → logprob: -17.000337600708008
    9. '();' → logprob: -17.125337600708008
    10. '(' → logprob: -17.250337600708008

Token 165: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1635674685239792
    2. 'for' → logprob: -1.9135674238204956
    3. '()' → logprob: -5.913567543029785
    4. ')' → logprob: -7.413567543029785
    5. '	for' → logprob: -11.288567543029785
    6. ' ' → logprob: -11.413567543029785
    7. ']' → logprob: -12.163567543029785
    8. '   ' → logprob: -13.413567543029785
    9. '(n' → logprob: -14.913567543029785
    10. 'n' → logprob: -15.038567543029785

Token 166: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26483413577079773
    2. 'range' → logprob: -1.6398341655731201
    3. ' range' → logprob: -3.26483416557312
    4. '(range' → logprob: -8.3898344039917
    5. 'in' → logprob: -9.6398344039917
    6. ' _' → logprob: -9.6398344039917
    7. '_range' → logprob: -9.7648344039917
    8. ' in' → logprob: -11.1398344039917
    9. '(' → logprob: -11.6398344039917
    10. '	range' → logprob: -13.3898344039917

Token 167: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00021855637896806002
    2. ' range' → logprob: -8.500218391418457
    3. 'in' → logprob: -11.125218391418457
    4. '(range' → logprob: -15.125218391418457
    5. ' in' → logprob: -16.125219345092773
    6. 'n' → logprob: -17.750219345092773
    7. 'rang' → logprob: -18.875219345092773
    8. 'ran' → logprob: -19.250219345092773
    9. '	range' → logprob: -19.500219345092773
    10. '_' → logprob: -19.750219345092773

Token 168: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -17.375036239624023
    4. 'rang' → logprob: -19.250036239624023
    5. '	range' → logprob: -20.000036239624023
    6. 'r' → logprob: -21.250036239624023
    7. 'ran' → logprob: -21.250036239624023
    8. 'ra' → logprob: -22.250036239624023
    9. '_' → logprob: -22.875036239624023
    10. 'n' → logprob: -23.000036239624023

Token 169: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.226628895296017e-06
    2. '(' → logprob: -12.000007629394531
    3. 'n' → logprob: -14.125007629394531
    4. ' (' → logprob: -15.625007629394531
    5. ' n' → logprob: -17.75000762939453
    6. ')n' → logprob: -17.75000762939453
    7. '(
' → logprob: -18.75000762939453
    8. '(m' → logprob: -19.62500762939453
    9. '((' → logprob: -19.75000762939453
    10. ')' → logprob: -20.37500762939453

Token 170: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.082895273109898e-05
    2. ')' → logprob: -10.625030517578125
    3. ']' → logprob: -12.500030517578125
    4. ')]
' → logprob: -13.500030517578125
    5. ' )' → logprob: -15.000030517578125
    6. ')],' → logprob: -15.375030517578125
    7. ')])' → logprob: -16.000030517578125
    8. ')}' → logprob: -16.375030517578125
    9. '))' → logprob: -16.375030517578125
    10. '+' → logprob: -16.500030517578125

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.759734732331708e-05
    2. ' ' → logprob: -11.375017166137695
    3. 'n' → logprob: -12.250017166137695
    4. ')' → logprob: -14.125017166137695
    5. '2' → logprob: -15.500017166137695
    6. ')]' → logprob: -15.875017166137695
    7. '])' → logprob: -16.875017166137695
    8. ' n' → logprob: -17.125017166137695
    9. '(' → logprob: -17.375017166137695
    10. 'i' → logprob: -17.625017166137695

Token 172: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0009882692247629166
    2. ')' → logprob: -7.000988483428955
    3. ']' → logprob: -9.500988006591797
    4. '])' → logprob: -13.875988006591797
    5. ')])' → logprob: -14.875988006591797
    6. '])]' → logprob: -15.125988006591797
    7. ')],' → logprob: -15.750988006591797
    8. '))' → logprob: -16.375988006591797
    9. ' )' → logprob: -16.375988006591797
    10. ')}' → logprob: -16.625988006591797

Token 173: 'it' (ID: 278)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.018252842128276825
    2. ' for' → logprob: -4.268252849578857
    3. 'i' → logprob: -6.268252849578857
    4. '<|end|>' → logprob: -6.268252849578857
    5. '
' → logprob: -8.8932523727417
    6. '\n' → logprob: -10.6432523727417
    7. ')' → logprob: -10.7682523727417
    8. '	for' → logprob: -10.8932523727417
    9. '<|end|>' → logprob: -10.8932523727417
    10. 'n' → logprob: -11.6432523727417

Token 174: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1434280425310135
    2. ' =' → logprob: -2.018428087234497
    3. 'er' → logprob: -7.268427848815918
    4. 's' → logprob: -11.018427848815918
    5. 'or' → logprob: -11.268427848815918
    6. '_' → logprob: -11.643427848815918
    7. '_=' → logprob: -12.393427848815918
    8. 'for' → logprob: -13.018427848815918
    9. '_idx' → logprob: -13.393427848815918
    10. '=_' → logprob: -13.893427848815918

Token 175: ' iter' (ID: 10621)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001707540825009346
    2. 'iter' → logprob: -6.501707553863525
    3. ' iter' → logprob: -9.001707077026367
    4. ' ' → logprob: -9.501707077026367
    5. '(iter' → logprob: -12.001707077026367
    6. '   ' → logprob: -14.751707077026367
    7. '(' → logprob: -15.126707077026367
    8. '2' → logprob: -16.376707077026367
    9. '1' → logprob: -16.751707077026367
    10. 'range' → logprob: -16.876707077026367

Token 176: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.088346359931165e-07
    2. '(u' → logprob: -14.625000953674316
    3. '((' → logprob: -15.500000953674316
    4. 'uv' → logprob: -16.875
    5. ' (' → logprob: -17.5
    6. '_uv' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. 'uvwxyz' → logprob: -18.5
    9. '([' → logprob: -18.5
    10. '(
' → logprob: -19.0

Token 177: 'uv' (ID: 6992)
  Prédit: 'uv'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uv' → logprob: -4.191489642835222e-05
    2. ' uv' → logprob: -10.875041961669922
    3. '(' → logprob: -11.625041961669922
    4. ' u' → logprob: -12.375041961669922
    5. '_uv' → logprob: -12.625041961669922
    6. ')' → logprob: -12.875041961669922
    7. 'uvw' → logprob: -13.000041961669922
    8. 'u' → logprob: -14.750041961669922
    9. '```' → logprob: -15.375041961669922
    10. ' ' → logprob: -15.750041961669922

Token 178: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -7.896309739408025e-07
    2. 'sv' → logprob: -14.500000953674316
    3. ')s' → logprob: -16.625
    4. ' s' → logprob: -16.625
    5. 'vs' → logprob: -17.25
    6. '(s' → logprob: -17.625
    7. ')' → logprob: -17.875
    8. 'с' → logprob: -18.0
    9. 'us' → logprob: -18.375
    10. '```' → logprob: -18.625

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.438573680294212e-06
    2. ' )' → logprob: -12.875005722045898
    3. ')
' → logprob: -13.250005722045898
    4. '())' → logprob: -14.500005722045898
    5. '))' → logprob: -15.250005722045898
    6. '()' → logprob: -16.7500057220459
    7. '),' → logprob: -17.2500057220459
    8. ',)' → logprob: -17.2500057220459
    9. ',' → logprob: -17.3750057220459
    10. ')}' → logprob: -17.3750057220459

Token 180: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00927478726953268
    2. 'u' → logprob: -5.634274959564209
    3. '(' → logprob: -6.384274959564209
    4. ' for' → logprob: -6.384274959564209
    5. ')' → logprob: -7.134274959564209
    6. '
' → logprob: -8.25927448272705
    7. '(
' → logprob: -8.38427448272705
    8. '(u' → logprob: -8.50927448272705
    9. 'while' → logprob: -8.50927448272705
    10. '<|end|>' → logprob: -9.25927448272705

Token 181: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.006829394493252039
    2. ' u' → logprob: -5.381829261779785
    3. '_u' → logprob: -6.256829261779785
    4. '(u' → logprob: -8.631829261779785
    5. '_' → logprob: -9.506829261779785
    6. ' _' → logprob: -11.381829261779785
    7. '   ' → logprob: -12.256829261779785
    8. '	u' → logprob: -12.256829261779785
    9. '
' → logprob: -12.881829261779785
    10. ' (' → logprob: -13.006829261779785

Token 182: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017179005080834031
    2. ',v' → logprob: -6.376718044281006
    3. ' ,' → logprob: -11.251717567443848
    4. ' in' → logprob: -13.376717567443848
    5. ',u' → logprob: -14.626717567443848
    6. 'v' → logprob: -15.751717567443848
    7. ',n' → logprob: -15.751717567443848
    8. ',_' → logprob: -16.001718521118164
    9. 'in' → logprob: -16.126718521118164
    10. ',in' → logprob: -16.251718521118164

Token 183: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0019286326132714748
    2. ' v' → logprob: -6.251928806304932
    3. ',v' → logprob: -17.626928329467773
    4. ' ' → logprob: -18.376928329467773
    5. '	v' → logprob: -18.626928329467773
    6. '
' → logprob: -19.001928329467773
    7. ',' → logprob: -19.501928329467773
    8. '(v' → logprob: -19.626928329467773
    9. 's' → logprob: -20.126928329467773
    10. '```' → logprob: -20.876928329467773

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2007883671903983e-05
    2. ' ,' → logprob: -11.375021934509277
    3. ',v' → logprob: -11.875021934509277
    4. ' in' → logprob: -13.375021934509277
    5. ',u' → logprob: -14.375021934509277
    6. ',
' → logprob: -14.625021934509277
    7. 'in' → logprob: -14.875021934509277
    8. ',s' → logprob: -15.750021934509277
    9. ',in' → logprob: -16.500022888183594
    10. ',_' → logprob: -16.500022888183594

Token 185: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889540493488312
    2. ' s' → logprob: -2.578895330429077
    3. 'w' → logprob: -12.953895568847656
    4. ' ' → logprob: -13.203895568847656
    5. '_s' → logprob: -14.453895568847656
    6. 't' → logprob: -14.828895568847656
    7. ' w' → logprob: -15.703895568847656
    8. '  ' → logprob: -16.328895568847656
    9. ' t' → logprob: -16.453895568847656
    10. '<|end|>' → logprob: -16.578895568847656

Token 186: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3869096040725708
    2. ' in' → logprob: -1.1369096040725708
    3. ',' → logprob: -10.636909484863281
    4. ' ' → logprob: -12.386909484863281
    5. 's' → logprob: -13.261909484863281
    6. 'n' → logprob: -13.511909484863281
    7. 'u' → logprob: -13.761909484863281
    8. '	in' → logprob: -13.886909484863281
    9. '  ' → logprob: -14.261909484863281
    10. 'i' → logprob: -14.386909484863281

Token 187: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.16044823825359344
    2. 'zip' → logprob: -1.9104481935501099
    3. '(zip' → logprob: -8.41044807434082
    4. 'it' → logprob: -13.78544807434082
    5. 'iter' → logprob: -16.16044807434082
    6. '.zip' → logprob: -16.66044807434082
    7. 'iz' → logprob: -16.66044807434082
    8. 'tuple' → logprob: -16.91044807434082
    9. ' ' → logprob: -17.03544807434082
    10. ' itertools' → logprob: -17.91044807434082

Token 188: '(it' (ID: 29445)
  Prédit: '(it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(it' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.375
    3. 'it' → logprob: -15.625
    4. '(iter' → logprob: -18.625
    5. '	it' → logprob: -20.0
    6. ' (' → logprob: -20.75
    7. '(It' → logprob: -21.125
    8. ' it' → logprob: -21.375
    9. '(i' → logprob: -21.625
    10. '(
' → logprob: -21.625

Token 189: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007731434423476458
    2. ',it' → logprob: -5.0077314376831055
    3. ' ,' → logprob: -7.7577314376831055
    4. '(it' → logprob: -8.007731437683105
    5. ',u' → logprob: -8.382731437683105
    6. ',)' → logprob: -11.382731437683105
    7. '(),' → logprob: -11.757731437683105
    8. '(' → logprob: -12.882731437683105
    9. 'it' → logprob: -13.882731437683105
    10. ')' → logprob: -14.132731437683105

Token 190: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.020591171458363533
    2. ' it' → logprob: -3.8955912590026855
    3. ' ' → logprob: -10.520590782165527
    4. '   ' → logprob: -12.145590782165527
    5. '  ' → logprob: -12.395590782165527
    6. '	it' → logprob: -12.645590782165527
    7. '    ' → logprob: -13.145590782165527
    8. '(it' → logprob: -13.395590782165527
    9. ')' → logprob: -13.520590782165527
    10. 'v' → logprob: -14.020590782165527

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.572941179503687e-05
    2. ' ,' → logprob: -11.000045776367188
    3. ')' → logprob: -11.375045776367188
    4. ',)' → logprob: -11.625045776367188
    5. ',
' → logprob: -12.250045776367188
    6. ',it' → logprob: -13.500045776367188
    7. '):' → logprob: -14.125045776367188
    8. ',u' → logprob: -15.000045776367188
    9. '),' → logprob: -15.250045776367188
    10. ',v' → logprob: -15.500045776367188

Token 192: ' it' (ID: 480)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -2.15310683415737e-05
    2. ' it' → logprob: -10.750021934509277
    3. '	it' → logprob: -18.75002098083496
    4. 'It' → logprob: -19.62502098083496
    5. '(it' → logprob: -19.75002098083496
    6. '[it' → logprob: -21.00002098083496
    7. ' ' → logprob: -21.25002098083496
    8. '_it' → logprob: -21.25002098083496
    9. '  ' → logprob: -21.87502098083496
    10. 'itt' → logprob: -22.00002098083496

Token 193: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00016074994346126914
    2. '):
' → logprob: -9.000161170959473
    3. ')' → logprob: -10.750161170959473
    4. ':' → logprob: -11.250161170959473
    5. ' ):' → logprob: -13.125161170959473
    6. '():' → logprob: -15.250161170959473
    7. '):
' → logprob: -15.375161170959473
    8. ',' → logprob: -15.500161170959473
    9. '}:' → logprob: -16.375160217285156
    10. ']:' → logprob: -16.750160217285156

Token 194: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009985134238377213
    2. ' links' → logprob: -7.250998497009277
    3. '   ' → logprob: -9.250998497009277
    4. '    
' → logprob: -9.375998497009277
    5. '
' → logprob: -10.375998497009277
    6. 'links' → logprob: -10.750998497009277
    7. '       ' → logprob: -11.000998497009277
    8. '    ' → logprob: -11.750998497009277
    9. '```' → logprob: -12.125998497009277
    10. '.links' → logprob: -12.250998497009277

Token 195: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' (adapté à ' links') → logprob: -0.006843837909400463
    2. '   ' → logprob: -5.6318440437316895
    3. ' links' → logprob: -5.7568440437316895
    4. 'if' → logprob: -10.756843566894531
    5. '.links' → logprob: -11.256843566894531
    6. '
' → logprob: -12.006843566894531
    7. '-links' → logprob: -12.131843566894531
    8. ' ' → logprob: -12.131843566894531
    9. '_links' → logprob: -12.381843566894531
    10. '```' → logprob: -13.069343566894531

Token 196: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.5
    3. '[user' → logprob: -18.125
    4. '[s' → logprob: -18.75
    5. ' [' → logprob: -18.875
    6. '[int' → logprob: -19.625
    7. 'u' → logprob: -19.625
    8. ')[' → logprob: -20.0
    9. '[v' → logprob: -20.0
    10. '```' → logprob: -20.75

Token 197: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006764543941244483
    2. ']' → logprob: -7.87567663192749
    3. '[v' → logprob: -8.250676155090332
    4. '[u' → logprob: -10.875676155090332
    5. ' ][' → logprob: -11.375676155090332
    6. '[' → logprob: -13.125676155090332
    7. '].' → logprob: -13.375676155090332
    8. ')[' → logprob: -15.625676155090332
    9. ']][' → logprob: -15.875676155090332
    10. '   ' → logprob: -15.875676155090332

Token 198: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -5.512236498361744e-07
    2. ' v' → logprob: -14.625000953674316
    3. ')v' → logprob: -18.75
    4. '	v' → logprob: -20.125
    5. '[v' → logprob: -22.125
    6. ']' → logprob: -22.375
    7. 'vj' → logprob: -22.875
    8. '*v' → logprob: -23.0
    9. ')' → logprob: -23.0
    10. '.v' → logprob: -23.125

Token 199: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010080387583002448
    2. ' ]' → logprob: -7.251008033752441
    3. ']=' → logprob: -8.126008033752441
    4. '=' → logprob: -13.501008033752441
    5. 's' → logprob: -15.376008033752441
    6. ')' → logprob: -15.376008033752441
    7. ' =' → logprob: -16.501008987426758
    8. ']

' → logprob: -16.501008987426758
    9. ']
' → logprob: -16.751008987426758
    10. ' ' → logprob: -16.876008987426758

Token 200: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014312595129013
    2. ' =' → logprob: -1.7014312744140625
    3. '=s' → logprob: -11.076431274414062
    4. 's' → logprob: -14.076431274414062
    5. '[' → logprob: -15.201431274414062
    6. ' ' → logprob: -15.451431274414062
    7. '.' → logprob: -15.576431274414062
    8. ']' → logprob: -15.701431274414062
    9. ',' → logprob: -15.951431274414062
    10. ')' → logprob: -16.076431274414062

Token 201: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00861456897109747
    2. ' s' → logprob: -4.758614540100098
    3. ' ' → logprob: -18.758615493774414
    4. '	s' → logprob: -19.258615493774414
    5. '   ' → logprob: -19.758615493774414
    6. ' ' → logprob: -19.883615493774414
    7. '(s' → logprob: -20.383615493774414
    8. '`s' → logprob: -21.133615493774414
    9. '_s' → logprob: -21.383615493774414
    10. '  ' → logprob: -21.633615493774414

Token 202: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002158146962756291
    2. '<|end|>' → logprob: -8.625215530395508
    3. ',' → logprob: -11.000215530395508
    4. ' and' → logprob: -12.875215530395508
    5. '
' → logprob: -13.125215530395508
    6. ' links' → logprob: -13.500215530395508
    7. '   ' → logprob: -13.500215530395508
    8. '  ' → logprob: -13.500215530395508
    9. '.' → logprob: -13.750215530395508
    10. ')' → logprob: -13.750215530395508

Token 203: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00027063372544944286
    2. '<|end|>' → logprob: -8.37527084350586
    3. '  ' → logprob: -11.75027084350586
    4. ' ' → logprob: -11.87527084350586
    5. '```' → logprob: -12.37527084350586
    6. ',' → logprob: -12.37527084350586
    7. '[' → logprob: -13.25027084350586
    8. '<|end|>' → logprob: -13.50027084350586
    9. '   ' → logprob: -13.62527084350586
    10. '#' → logprob: -13.62527084350586

Token 204: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' (adapté à ' links') → logprob: -0.0049314312636852264
    2. ' links' → logprob: -5.379931449890137
    3. '   ' → logprob: -8.129931449890137
    4. '.links' → logprob: -11.754931449890137
    5. '-links' → logprob: -13.254931449890137
    6. 'inks' → logprob: -13.504931449890137
    7. '_links' → logprob: -13.879931449890137
    8. 'li' → logprob: -14.379931449890137
    9. 'link' → logprob: -14.379931449890137
    10. 'l' → logprob: -14.504931449890137

Token 205: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.538490950129926e-05
    2. '[u' → logprob: -10.000055313110352
    3. '[' → logprob: -12.000055313110352
    4. 'v' → logprob: -12.750055313110352
    5. ' [' → logprob: -15.375055313110352
    6. '][' → logprob: -15.875055313110352
    7. ')[' → logprob: -16.62505531311035
    8. '
' → logprob: -17.00005531311035
    9. '}[' → logprob: -17.00005531311035
    10. '[val' → logprob: -17.12505531311035

Token 206: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001130690099671483
    2. '[u' → logprob: -6.8761305809021
    3. ']' → logprob: -9.376131057739258
    4. ' ][' → logprob: -11.501131057739258
    5. '[' → logprob: -13.001131057739258
    6. '[v' → logprob: -15.251131057739258
    7. 'u' → logprob: -16.001131057739258
    8. '"][' → logprob: -16.376131057739258
    9. '}[' → logprob: -16.376131057739258
    10. ']][' → logprob: -16.751131057739258

Token 207: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.666993507067673e-05
    2. '[u' → logprob: -10.250036239624023
    3. ' u' → logprob: -13.625036239624023
    4. '][' → logprob: -16.625036239624023
    5. '	u' → logprob: -17.125036239624023
    6. 's' → logprob: -17.125036239624023
    7. '   ' → logprob: -17.625036239624023
    8. ']' → logprob: -18.375036239624023
    9. '
' → logprob: -18.750036239624023
    10. ' ' → logprob: -18.875036239624023

Token 208: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053567178547382355
    2. ']=' → logprob: -5.505356788635254
    3. ' ]' → logprob: -7.130356788635254
    4. '=' → logprob: -7.755356788635254
    5. ' =' → logprob: -10.380356788635254
    6. '[' → logprob: -11.755356788635254
    7. '[s' → logprob: -12.505356788635254
    8. '][' → logprob: -12.630356788635254
    9. ')' → logprob: -13.755356788635254
    10. ' ' → logprob: -14.505356788635254

Token 209: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008615399710834026
    2. ' =' → logprob: -4.758615493774414
    3. ']' → logprob: -15.258615493774414
    4. '[' → logprob: -15.383615493774414
    5. ']=' → logprob: -15.758615493774414
    6. '=s' → logprob: -16.633615493774414
    7. ')' → logprob: -16.758615493774414
    8. '=
' → logprob: -17.383615493774414
    9. ' ' → logprob: -17.633615493774414
    10. '＝' → logprob: -18.008615493774414

Token 210: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07888989895582199
    2. ' s' → logprob: -2.578889846801758
    3. '   ' → logprob: -17.203889846801758
    4. ' ' → logprob: -17.203889846801758
    5. '	s' → logprob: -17.703889846801758
    6. '(s' → logprob: -18.453889846801758
    7. '_s' → logprob: -18.703889846801758
    8. '{s' → logprob: -18.828889846801758
    9. ' ' → logprob: -19.078889846801758
    10. '`s' → logprob: -19.203889846801758

Token 211: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6335569620132446
    2. '<|end|>' → logprob: -1.3835569620132446
    3. 'nums' → logprob: -2.133556842803955
    4. '#' → logprob: -3.383556842803955
    5. ')' → logprob: -3.383556842803955
    6. '\n' → logprob: -4.008556842803955
    7. 'n' → logprob: -5.883556842803955
    8. '

' → logprob: -6.133556842803955
    9. 'num' → logprob: -6.383556842803955
    10. ',' → logprob: -6.508556842803955

Token 212: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14715535938739777
    2. 'nums' → logprob: -3.147155284881592
    3. '<|end|>' → logprob: -3.522155284881592
    4. '#' → logprob: -3.772155284881592
    5. '

' → logprob: -4.022155284881592
    6. ')' → logprob: -5.022155284881592
    7. ',
' → logprob: -6.147155284881592
    8. 'visited' → logprob: -6.147155284881592
    9. 'n' → logprob: -6.272155284881592
    10. '
    
' → logprob: -6.397155284881592

Token 213: ' Grap' (ID: 129442)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 214: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.10084983706474304
    2. 'h' → logprob: -2.3508498668670654
    3. 'heme' → logprob: -8.600850105285645
    4. 'heur' → logprob: -9.600850105285645
    5. 'phe' → logprob: -9.725850105285645
    6. 'aphe' → logprob: -9.975850105285645
    7. 'hi' → logprob: -10.225850105285645
    8. 'hé' → logprob: -10.475850105285645
    9. 'ph' → logprob: -10.600850105285645
    10. '#' → logprob: -10.600850105285645

Token 215: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.6590114235877991
    2. 'und' → logprob: -1.2840113639831543
    3. 'non' → logprob: -1.6590113639831543
    4. ' und' → logprob: -4.784011363983154
    5. '   ' → logprob: -6.159011363983154
    6. '#' → logprob: -6.659011363983154
    7. '<|end|>' → logprob: -6.909011363983154
    8. ' ' → logprob: -7.909011363983154
    9. '_non' → logprob: -7.909011363983154
    10. 'n' → logprob: -8.034011840820312

Token 216: ' orient' (ID: 13198)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.2023790180683136
    2. 'orient' → logprob: -1.7023789882659912
    3. ' orient' → logprob: -7.57737922668457
    4. ' dirig' → logprob: -8.82737922668457
    5. 'orien' → logprob: -8.95237922668457
    6. 'dir' → logprob: -9.45237922668457
    7. ' oriented' → logprob: -9.70237922668457
    8. 'direct' → logprob: -11.57737922668457
    9. ' or' → logprob: -11.95237922668457
    10. ' directed' → logprob: -12.07737922668457

Token 217: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.0002705145161598921
    2. 'ed' → logprob: -8.50027084350586
    3. 'e' → logprob: -9.75027084350586
    4. 'ée' → logprob: -12.37527084350586
    5. 'éd' → logprob: -13.50027084350586
    6. 'è' → logprob: -14.62527084350586
    7. 'er' → logprob: -15.00027084350586
    8. 'É' → logprob: -15.12527084350586
    9. '```' → logprob: -15.12527084350586
    10. '#' → logprob: -15.12527084350586

Token 218: '

' (ID: 279)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.036680757999420166
    2. '#' → logprob: -3.9116806983947754
    3. 'num' → logprob: -5.536680698394775
    4. ')' → logprob: -5.661680698394775
    5. '
' → logprob: -5.786680698394775
    6. '<|end|>' → logprob: -6.536680698394775
    7. '\n' → logprob: -6.786680698394775
    8. '  
' → logprob: -7.411680698394775
    9. '    
' → logprob: -8.161681175231934
    10. ' nums' → logprob: -8.286681175231934

Token 219: 'def' (ID: 1314)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.031814444810152054
    2. '#' → logprob: -3.7818143367767334
    3. '
' → logprob: -5.6568145751953125
    4. 'num' → logprob: -6.5318145751953125
    5. 'visited' → logprob: -6.5318145751953125
    6. '

' → logprob: -7.0318145751953125
    7. 'from' → logprob: -8.406814575195312
    8. 'numbers' → logprob: -8.531814575195312
    9. 'import' → logprob: -9.281814575195312
    10. 'assigned' → logprob: -9.406814575195312

Token 220: ' dfs' (ID: 51252)
  Prédit: ' dfs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.06254555284976959
    2. ' solve' → logprob: -3.3125455379486084
    3. ' bfs' → logprob: -4.6875457763671875
    4. ' assign' → logprob: -4.9375457763671875
    5. ' main' → logprob: -6.5625457763671875
    6. 'dfs' → logprob: -7.1875457763671875
    7. 'solve' → logprob: -7.3125457763671875
    8. ' nums' → logprob: -7.3125457763671875
    9. ' check' → logprob: -7.4375457763671875
    10. ' ' → logprob: -7.5625457763671875

Token 221: '(root' (ID: 17410)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5021058917045593
    2. '(node' → logprob: -1.002105951309204
    3. '(' → logprob: -3.627105951309204
    4. '(v' → logprob: -8.002105712890625
    5. '(s' → logprob: -8.627105712890625
    6. '(start' → logprob: -9.127105712890625
    7. '(x' → logprob: -9.627105712890625
    8. '(i' → logprob: -9.627105712890625
    9. '(n' → logprob: -9.877105712890625
    10. '(vertex' → logprob: -9.877105712890625

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.946405094116926e-05
    2. ',u' → logprob: -9.875079154968262
    3. ',node' → logprob: -11.125079154968262
    4. ' ,' → logprob: -11.625079154968262
    5. '(root' → logprob: -13.875079154968262
    6. '(u' → logprob: -13.875079154968262
    7. 'u' → logprob: -14.250079154968262
    8. '):' → logprob: -14.500079154968262
    9. '(node' → logprob: -15.125079154968262
    10. ',n' → logprob: -15.250079154968262

Token 223: ' init' (ID: 6327)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5863845348358154
    2. 'visited' → logprob: -1.0863845348358154
    3. 'stack' → logprob: -3.7113845348358154
    4. ' visited' → logprob: -4.0863847732543945
    5. 'vals' → logprob: -4.3363847732543945
    6. 'parent' → logprob: -4.5863847732543945
    7. 'values' → logprob: -4.8363847732543945
    8. ' stack' → logprob: -4.9613847732543945
    9. ' nums' → logprob: -5.0863847732543945
    10. 'color' → logprob: -5.8363847732543945

Token 224: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5302269458770752
    2. '_value' → logprob: -1.4052269458770752
    3. '_val' → logprob: -2.905226945877075
    4. '):
' → logprob: -3.155226945877075
    5. ',' → logprob: -3.280226945877075
    6. 'value' → logprob: -4.655226707458496
    7. '_num' → logprob: -5.155226707458496
    8. '_nums' → logprob: -5.155226707458496
    9. '=' → logprob: -6.155226707458496
    10. ')' → logprob: -6.405226707458496

Token 225: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7225494980812073
    2. ' stack' → logprob: -0.9725494980812073
    3. ' nums' → logprob: -2.7225494384765625
    4. 'nums' → logprob: -2.8475494384765625
    5. 'stack' → logprob: -4.7225494384765625
    6. '	stack' → logprob: -6.8475494384765625
    7. '    
' → logprob: -7.2225494384765625
    8. '
' → logprob: -7.9725494384765625
    9. '```' → logprob: -8.472549438476562
    10. 'num' → logprob: -8.472549438476562

Token 226: ' """
' (ID: 7037)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.37961962819099426
    2. ' stack' → logprob: -1.3796195983886719
    3. 'nums' → logprob: -2.879619598388672
    4. '   ' → logprob: -5.129619598388672
    5. 'visited' → logprob: -7.129619598388672
    6. ' nums' → logprob: -7.379619598388672
    7. ' visited' → logprob: -8.129619598388672
    8. '	stack' → logprob: -8.879619598388672
    9. '    
' → logprob: -9.754619598388672
    10. 'num' → logprob: -10.254619598388672

Token 227: '   ' (ID: 271)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.04646119102835655
    2. 'stack' → logprob: -3.1714611053466797
    3. '   ' → logprob: -6.79646110534668
    4. ' if' → logprob: -6.92146110534668
    5. ' #' → logprob: -8.54646110534668
    6. ' visited' → logprob: -8.67146110534668
    7. ' for' → logprob: -9.42146110534668
    8. ' indentation' → logprob: -9.67146110534668
    9. 'indent' → logprob: -9.67146110534668
    10. 'visited' → logprob: -9.92146110534668

Token 228: ' Effect' (ID: 22448)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.2985440194606781
    2. 'stack' → logprob: -1.6735440492630005
    3. 'nums' → logprob: -3.298543930053711
    4. '   ' → logprob: -3.798543930053711
    5. ' visited' → logprob: -5.798543930053711
    6. 'visited' → logprob: -5.798543930053711
    7. ' nums' → logprob: -6.423543930053711
    8. 'num' → logprob: -7.673543930053711
    9. '    
' → logprob: -7.673543930053711
    10. '	stack' → logprob: -8.548543930053711

Token 229: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.03160345181822777
    2. 'uer' → logprob: -3.5316033363342285
    3. 'u' → logprob: -6.6566033363342285
    4. 'uez' → logprob: -8.531603813171387
    5. 'ué' → logprob: -8.656603813171387
    6. '   ' → logprob: -9.031603813171387
    7. 'ure' → logprob: -10.781603813171387
    8. 'uée' → logprob: -11.156603813171387
    9. 'ivement' → logprob: -11.656603813171387
    10. '#' → logprob: -11.906603813171387

Token 230: ' un' (ID: 537)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.505369246006012
    2. 'stack' → logprob: -2.130369186401367
    3. ' root' → logprob: -2.380369186401367
    4. 'root' → logprob: -2.755369186401367
    5. 'dfs' → logprob: -3.130369186401367
    6. 'nums' → logprob: -3.880369186401367
    7. ' dfs' → logprob: -4.005369186401367
    8. '   ' → logprob: -4.880369186401367
    9. ' nums' → logprob: -5.255369186401367
    10. 'def' → logprob: -6.380369186401367

Token 231: ' parcours' (ID: 62625)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.6229144334793091
    2. 'dfs' → logprob: -1.122914433479309
    3. ' DFS' → logprob: -3.4979143142700195
    4. ' traversal' → logprob: -3.8729143142700195
    5. ' depth' → logprob: -4.3729143142700195
    6. '   ' → logprob: -4.4979143142700195
    7. ' exploration' → logprob: -4.8729143142700195
    8. 'DFS' → logprob: -4.9979143142700195
    9. ' parcours' → logprob: -5.2479143142700195
    10. 'depth' → logprob: -5.2479143142700195

Token 232: ' DFS' (ID: 115767)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.33492669463157654
    2. 'prof' → logprob: -1.459926724433899
    3. ' prof' → logprob: -4.084926605224609
    4. '   ' → logprob: -4.459926605224609
    5. 'depth' → logprob: -4.834926605224609
    6. ' en' → logprob: -5.584926605224609
    7. ' profondeur' → logprob: -5.584926605224609
    8. ' depth' → logprob: -5.959926605224609
    9. 'dfs' → logprob: -6.334926605224609
    10. '(pro' → logprob: -6.834926605224609

Token 233: ' pour' (ID: 1930)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.18867537379264832
    2. '   ' → logprob: -2.4386754035949707
    3. ',' → logprob: -3.1886754035949707
    4. '(u' → logprob: -4.063675403594971
    5. '(node' → logprob: -4.313675403594971
    6. '(' → logprob: -5.188675403594971
    7. ' (' → logprob: -6.063675403594971
    8. '
' → logprob: -6.563675403594971
    9. 'root' → logprob: -7.813675403594971
    10. '(stack' → logprob: -7.938675403594971

Token 234: ' essayer' (ID: 92713)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' u' → logprob: -1.7082476615905762
    2. ' assign' → logprob: -1.7082476615905762
    3. 'assign' → logprob: -2.083247661590576
    4. ' root' → logprob: -2.583247661590576
    5. 'prop' → logprob: -3.083247661590576
    6. 'u' → logprob: -3.208247661590576
    7. ' v' → logprob: -3.208247661590576
    8. '   ' → logprob: -3.583247661590576
    9. ' k' → logprob: -3.708247661590576
    10. ' prop' → logprob: -3.708247661590576

Token 235: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7680493593215942
    2. ' d' → logprob: -1.3930493593215942
    3. '   ' → logprob: -1.6430493593215942
    4. 'de' → logprob: -3.0180492401123047
    5. 'd' → logprob: -3.7680492401123047
    6. '    ' → logprob: -4.393049240112305
    7. ':' → logprob: -5.018049240112305
    8. '  ' → logprob: -6.893049240112305
    9. ' ' → logprob: -7.268049240112305
    10. 'def' → logprob: -7.643049240112305

Token 236: ''at' (ID: 85437)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.911686897277832
    2. ''at' → logprob: -1.536686897277832
    3. 'attrib' → logprob: -1.911686897277832
    4. ''ass' → logprob: -2.411686897277832
    5. 'aff' → logprob: -3.036686897277832
    6. ''aff' → logprob: -3.036686897277832
    7. ''' → logprob: -4.536686897277832
    8. 'at' → logprob: -4.786686897277832
    9. 'ass' → logprob: -5.411686897277832
    10. ' affect' → logprob: -6.161686897277832

Token 237: 'trib' (ID: 1420)
  Prédit: 'trib'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trib' → logprob: -0.01638377271592617
    2. 'tr' → logprob: -4.891383647918701
    3. 'tester' → logprob: -5.266383647918701
    4. 'te' → logprob: -6.141383647918701
    5. 't' → logprob: -7.891383647918701
    6. 'tribut' → logprob: -8.26638412475586
    7. 'tribution' → logprob: -8.76638412475586
    8. 'tri' → logprob: -9.26638412475586
    9. '
' → logprob: -9.51638412475586
    10. 'tributor' → logprob: -9.76638412475586

Token 238: 'uer' (ID: 4615)
  Prédit: 'uer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uer' → logprob: -4.596781946020201e-05
    2. 'u' → logprob: -10.500045776367188
    3. '   ' → logprob: -11.750045776367188
    4. 'er' → logprob: -12.625045776367188
    5. '       ' → logprob: -13.875045776367188
    6. '```' → logprob: -14.000045776367188
    7. ' u' → logprob: -14.500045776367188
    8. '[' → logprob: -14.500045776367188
    9. 'user' → logprob: -14.750045776367188
    10. '...' → logprob: -14.750045776367188

Token 239: ' des' (ID: 731)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.17072443664073944
    2. 'values' → logprob: -3.170724391937256
    3. 'val' → logprob: -3.670724391937256
    4. 'des' → logprob: -3.670724391937256
    5. ' nums' → logprob: -4.045724391937256
    6. ' des' → logprob: -4.420724391937256
    7. ' values' → logprob: -4.795724391937256
    8. 'num' → logprob: -4.920724391937256
    9. 'vals' → logprob: -5.045724391937256
    10. ' valeurs' → logprob: -5.920724391937256

Token 240: ' valeurs' (ID: 73668)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06286890059709549
    2. 'nums' → logprob: -3.68786883354187
    3. 'values' → logprob: -4.062869071960449
    4. ' valeurs' → logprob: -4.187869071960449
    5. 'num' → logprob: -6.437869071960449
    6. 'vals' → logprob: -7.187869071960449
    7. '[val' → logprob: -8.31286907196045
    8. ' val' → logprob: -8.56286907196045
    9. 'valu' → logprob: -9.18786907196045
    10. '[' → logprob: -9.18786907196045

Token 241: ' nums' (ID: 18117)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.10784945636987686
    2. '   ' → logprob: -2.982849359512329
    3. 'aux' → logprob: -4.107849597930908
    4. '(root' → logprob: -4.607849597930908
    5. ' (' → logprob: -5.607849597930908
    6. '(' → logprob: -5.607849597930908
    7. ' à' → logprob: -5.857849597930908
    8. ' ' → logprob: -5.857849597930908
    9. ')' → logprob: -6.232849597930908
    10. '(nums' → logprob: -6.357849597930908

Token 242: '[x' (ID: 17295)
  Prédit: ' aux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.1093892902135849
    2. 'aux' → logprob: -3.359389305114746
    3. '   ' → logprob: -3.859389305114746
    4. ')' → logprob: -4.484389305114746
    5. '[root' → logprob: -4.609389305114746
    6. ' ' → logprob: -4.984389305114746
    7. '=' → logprob: -5.734389305114746
    8. '[]' → logprob: -5.734389305114746
    9. ' =' → logprob: -5.984389305114746
    10. 'def' → logprob: -6.484389305114746

Token 243: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0049156504683196545
    2. ' ]' → logprob: -6.379915714263916
    3. '[x' → logprob: -6.504915714263916
    4. '   ' → logprob: -8.129915237426758
    5. ')' → logprob: -8.254915237426758
    6. ' aux' → logprob: -8.379915237426758
    7. 'aux' → logprob: -8.629915237426758
    8. '])' → logprob: -9.379915237426758
    9. '```' → logprob: -9.379915237426758
    10. '[u' → logprob: -9.629915237426758

Token 244: ' aux' (ID: 5850)
  Prédit: ' aux'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' aux' → logprob: -0.04875824972987175
    2. ' à' → logprob: -3.7987582683563232
    3. '   ' → logprob: -4.798758029937744
    4. ' ' → logprob: -5.298758029937744
    5. ')' → logprob: -5.423758029937744
    6. 'aux' → logprob: -5.798758029937744
    7. ',' → logprob: -5.923758029937744
    8. '```' → logprob: -8.548758506774902
    9. '[x' → logprob: -8.673758506774902
    10. '
' → logprob: -8.798758506774902

Token 245: ' n' (ID: 297)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.6678770780563354
    2. 's' → logprob: -0.9178770780563354
    3. 'no' → logprob: -3.417877197265625
    4. 'som' → logprob: -3.667877197265625
    5. 'vertices' → logprob: -4.417877197265625
    6. 'n' → logprob: -5.292877197265625
    7. ' somm' → logprob: -5.542877197265625
    8. ')' → logprob: -6.167877197265625
    9. ' noe' → logprob: -6.542877197265625
    10. '```' → logprob: -6.792877197265625

Token 246: 'œ' (ID: 15335)
  Prédit: ' somm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somm' → logprob: -0.7250514626502991
    2. 'odes' → logprob: -1.2250514030456543
    3. 'ombres' → logprob: -2.8500514030456543
    4. 's' → logprob: -3.1000514030456543
    5. '   ' → logprob: -3.3500514030456543
    6. ')' → logprob: -3.6000514030456543
    7. 'œ' → logprob: -5.100051403045654
    8. ']' → logprob: -5.225051403045654
    9. ' x' → logprob: -5.350051403045654
    10. 'x' → logprob: -5.350051403045654

Token 247: 'uds' (ID: 44387)
  Prédit: 'uds'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uds' → logprob: -0.030912769958376884
    2. 'œ' → logprob: -4.15591287612915
    3. 'ud' → logprob: -4.78091287612915
    4. '\xc2' → logprob: -6.53091287612915
    5. 'ds' → logprob: -6.65591287612915
    6. '```' → logprob: -7.15591287612915
    7. '   ' → logprob: -8.280912399291992
    8. '\' → logprob: -8.405912399291992
    9. 'x' → logprob: -8.530912399291992
    10. 's' → logprob: -8.530912399291992

Token 248: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1852162778377533
    2. ' en' → logprob: -2.560216188430786
    3. ',' → logprob: -3.060216188430786
    4. ' afin' → logprob: -4.435216426849365
    5. ' aux' → logprob: -5.060216426849365
    6. ' du' → logprob: -5.435216426849365
    7. ' pour' → logprob: -5.935216426849365
    8. '.' → logprob: -5.935216426849365
    9. ' telles' → logprob: -6.060216426849365
    10. ' tels' → logprob: -6.435216426849365

Token 249: '   ' (ID: 271)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.3341595232486725
    2. '   ' → logprob: -1.83415949344635
    3. 'en' → logprob: -2.9591596126556396
    4. ' avec' → logprob: -4.4591593742370605
    5. ' tokens' → logprob: -4.8341593742370605
    6. ' afin' → logprob: -5.0841593742370605
    7. ',' → logprob: -5.2091593742370605
    8. 'visited' → logprob: -5.2091593742370605
    9. ' u' → logprob: -5.3341593742370605
    10. 'tokens' → logprob: -5.4591593742370605

Token 250: ' telles' (ID: 83154)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.035385612398386
    2. 'en' → logprob: -3.7853856086730957
    3. '#' → logprob: -5.285385608673096
    4. ' en' → logprob: -6.285385608673096
    5. 'nums' → logprob: -6.910385608673096
    6. 'avec' → logprob: -7.285385608673096
    7. 'tout' → logprob: -7.410385608673096
    8. 'visited' → logprob: -7.535385608673096
    9. '    ' → logprob: -8.160386085510254
    10. '       ' → logprob: -8.535386085510254

Token 251: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.01509438082575798
    2. ' que' → logprob: -4.26509428024292
    3. 'qu' → logprob: -7.64009428024292
    4. '#' → logprob: -8.140094757080078
    5. '   ' → logprob: -9.765094757080078
    6. 'that' → logprob: -11.015094757080078
    7. 'une' → logprob: -11.140094757080078
    8. ' qu' → logprob: -12.140094757080078
    9. 'la' → logprob: -12.140094757080078
    10. 'con' → logprob: -12.140094757080078

Token 252: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.434205561876297
    2. 'nums' → logprob: -1.1842055320739746
    3. '#' → logprob: -4.684205532073975
    4. 'les' → logprob: -5.184205532073975
    5. ' nums' → logprob: -5.184205532073975
    6. 'la' → logprob: -5.684205532073975
    7. 'l' → logprob: -5.934205532073975
    8. ' les' → logprob: -5.934205532073975
    9. 'for' → logprob: -6.309205532073975
    10. 'le' → logprob: -6.559205532073975

Token 253: ' chaque' (ID: 21194)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -1.4823346138000488
    2. ' chaque' → logprob: -1.7323346138000488
    3. 't' → logprob: -1.8573346138000488
    4. 'x' → logprob: -1.8573346138000488
    5. 'cha' → logprob: -2.107334613800049
    6. 'le' → logprob: -3.357334613800049
    7. 'u' → logprob: -3.357334613800049
    8. ' tout' → logprob: -3.982334613800049
    9. 'ch' → logprob: -4.732334613800049
    10. 'all' → logprob: -4.732334613800049

Token 254: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.1289743334054947
    2. ' ar' → logprob: -2.753974437713623
    3. 'are' → logprob: -3.878974437713623
    4. ' are' → logprob: -4.003974437713623
    5. ' sommet' → logprob: -5.878974437713623
    6. 'arc' → logprob: -6.503974437713623
    7. '
' → logprob: -6.878974437713623
    8. '#' → logprob: -6.878974437713623
    9. 'aré' → logprob: -6.878974437713623
    10. 'edge' → logprob: -7.003974437713623

Token 255: 'ête' (ID: 16808)
  Prédit: 'œ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'œ' → logprob: -0.2504335343837738
    2. 'ud' → logprob: -1.6254335641860962
    3. 'e' → logprob: -4.500433444976807
    4. '#' → logprob: -5.250433444976807
    5. 'd' → logprob: -6.500433444976807
    6. 'et' → logprob: -6.625433444976807
    7. '
' → logprob: -7.250433444976807
    8. '\xc2' → logprob: -7.375433444976807
    9. 'être' → logprob: -7.500433444976807
    10. 'êt' → logprob: -7.625433444976807

Token 256: ' (' (ID: 350)
  Prédit: '(u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.08146866410970688
    2. ' (' → logprob: -2.8314685821533203
    3. '(x' → logprob: -4.20646858215332
    4. ',' → logprob: -6.08146858215332
    5. '   ' → logprob: -6.70646858215332
    6. '(' → logprob: -7.95646858215332
    7. '[u' → logprob: -10.08146858215332
    8. 'u' → logprob: -10.20646858215332
    9. ' entre' → logprob: -10.20646858215332
    10. 'x' → logprob: -10.20646858215332

Token 257: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.7906468510627747
    2. 'x' → logprob: -0.7906468510627747
    3. ',' → logprob: -3.04064679145813
    4. '(u' → logprob: -4.415647029876709
    5. ' u' → logprob: -4.665647029876709
    6. '   ' → logprob: -5.040647029876709
    7. 'root' → logprob: -5.540647029876709
    8. ' x' → logprob: -5.665647029876709
    9. ')' → logprob: -6.165647029876709
    10. '(x' → logprob: -6.290647029876709

Token 258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028991398867219687
    2. ',v' → logprob: -5.877899169921875
    3. ',x' → logprob: -10.502899169921875
    4. ' ,' → logprob: -10.627899169921875
    5. ',
' → logprob: -11.502899169921875
    6. '),' → logprob: -11.502899169921875
    7. ',u' → logprob: -11.502899169921875
    8. ')' → logprob: -13.127899169921875
    9. ',val' → logprob: -13.377899169921875
    10. 'v' → logprob: -14.002899169921875

Token 259: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.07009360194206238
    2. ' v' → logprob: -2.6950936317443848
    3. ',' → logprob: -9.195093154907227
    4. ',v' → logprob: -10.820093154907227
    5. 'x' → logprob: -10.945093154907227
    6. '   ' → logprob: -11.820093154907227
    7. ' ' → logprob: -12.820093154907227
    8. ')' → logprob: -13.445093154907227
    9. ' x' → logprob: -13.820093154907227
    10. 'u' → logprob: -13.945093154907227

Token 260: ',' (ID: 11)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.022742891684174538
    2. ',' → logprob: -4.272742748260498
    3. ')' → logprob: -5.147742748260498
    4. '):' → logprob: -7.147742748260498
    5. ',),' → logprob: -7.647742748260498
    6. '):
' → logprob: -7.772742748260498
    7. ',)' → logprob: -7.897742748260498
    8. '   ' → logprob: -7.897742748260498
    9. '),
' → logprob: -9.147743225097656
    10. '):

' → logprob: -9.647743225097656

Token 261: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.405357301235199
    2. ' s' → logprob: -1.1553573608398438
    3. ')' → logprob: -4.405357360839844
    4. '   ' → logprob: -6.155357360839844
    5. 'val' → logprob: -6.780357360839844
    6. 'nums' → logprob: -7.530357360839844
    7. '),' → logprob: -7.780357360839844
    8. ' val' → logprob: -8.280357360839844
    9. '):
' → logprob: -8.280357360839844
    10. ',' → logprob: -8.780357360839844

Token 262: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6637577414512634
    2. ')' → logprob: -1.0387578010559082
    3. '):
' → logprob: -2.538757801055908
    4. '):' → logprob: -3.038757801055908
    5. ',' → logprob: -6.288757801055908
    6. ' ),' → logprob: -7.413757801055908
    7. ' )' → logprob: -7.663757801055908
    8. '):

' → logprob: -7.788757801055908
    9. ')
' → logprob: -8.03875732421875
    10. '),
' → logprob: -8.78875732421875

Token 263: ' nums' (ID: 18117)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10050156712532043
    2. 'nums' → logprob: -2.475501537322998
    3. '       ' → logprob: -5.600501537322998
    4. ' nums' → logprob: -5.725501537322998
    5. '#' → logprob: -6.225501537322998
    6. ' on' → logprob: -7.475501537322998
    7. ' les' → logprob: -7.600501537322998
    8. 'les' → logprob: -8.600502014160156
    9. ' la' → logprob: -8.850502014160156
    10. '    ' → logprob: -9.350502014160156

Token 264: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.15171387791633606
    2. '[v' → logprob: -2.2767138481140137
    3. '[root' → logprob: -3.5267138481140137
    4. ' =' → logprob: -5.151713848114014
    5. '[x' → logprob: -7.026713848114014
    6. '[' → logprob: -7.651713848114014
    7. '=' → logprob: -7.776713848114014
    8. '+' → logprob: -8.401714324951172
    9. '[val' → logprob: -8.651714324951172
    10. '   ' → logprob: -8.901714324951172

Token 265: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8137511014938354
    2. ']' → logprob: -1.1887511014938354
    3. '[u' → logprob: -1.4387511014938354
    4. '[v' → logprob: -5.188751220703125
    5. ']+' → logprob: -5.938751220703125
    6. ')+' → logprob: -6.438751220703125
    7. '[' → logprob: -6.688751220703125
    8. '])' → logprob: -6.813751220703125
    9. '][' → logprob: -7.688751220703125
    10. '),' → logprob: -7.813751220703125

Token 266: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7464608550071716
    2. ')' → logprob: -1.4964609146118164
    3. '[u' → logprob: -1.7464609146118164
    4. ' +' → logprob: -2.3714609146118164
    5. ']' → logprob: -4.621460914611816
    6. '=' → logprob: -4.996460914611816
    7. ')+' → logprob: -5.121460914611816
    8. '[' → logprob: -5.496460914611816
    9. '[v' → logprob: -6.621460914611816
    10. ']+' → logprob: -6.871460914611816

Token 267: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0495617613196373
    2. ' nums' → logprob: -3.0495617389678955
    3. 'num' → logprob: -7.174561977386475
    4. '   ' → logprob: -10.299561500549316
    5. '(nums' → logprob: -10.424561500549316
    6. 'numbers' → logprob: -10.549561500549316
    7. '=' → logprob: -10.924561500549316
    8. '[' → logprob: -11.424561500549316
    9. ')' → logprob: -11.862061500549316
    10. 's' → logprob: -11.924561500549316

Token 268: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0006196272443048656
    2. '[' → logprob: -8.500619888305664
    3. '[u' → logprob: -8.500619888305664
    4. 'v' → logprob: -9.000619888305664
    5. '```' → logprob: -10.625619888305664
    6. '
' → logprob: -10.750619888305664
    7. '   ' → logprob: -11.625619888305664
    8. ']' → logprob: -12.125619888305664
    9. '[root' → logprob: -12.375619888305664
    10. ')' → logprob: -12.625619888305664

Token 269: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.43780285120010376
    2. ')' → logprob: -1.062802791595459
    3. '=' → logprob: -5.687802791595459
    4. ' =' → logprob: -6.437802791595459
    5. ' ==' → logprob: -6.562802791595459
    6. '==' → logprob: -7.187802791595459
    7. ']==' → logprob: -7.187802791595459
    8. '   ' → logprob: -7.687802791595459
    9. ']=' → logprob: -8.812803268432617
    10. '）' → logprob: -9.062803268432617

Token 270: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5752322673797607
    2. '=' → logprob: -1.3252322673797607
    3. ' ==' → logprob: -1.8252322673797607
    4. '==' → logprob: -4.57523250579834
    5. '   ' → logprob: -8.95023250579834
    6. ')' → logprob: -10.20023250579834
    7. ' ' → logprob: -11.45023250579834
    8. '    ' → logprob: -12.07523250579834
    9. '```' → logprob: -12.45023250579834
    10. ')==' → logprob: -12.95023250579834

Token 271: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012530135922133923
    2. ' s' → logprob: -4.387530326843262
    3. '   ' → logprob: -11.012530326843262
    4. ' ' → logprob: -13.387530326843262
    5. ' ' → logprob: -14.012530326843262
    6. '
' → logprob: -14.262530326843262
    7. '  ' → logprob: -15.512530326843262
    8. '    ' → logprob: -15.512530326843262
    9. '	s' → logprob: -16.012529373168945
    10. '```' → logprob: -16.137529373168945

Token 272: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026299485936760902
    2. '.' → logprob: -3.901299476623535
    3. ',' → logprob: -6.401299476623535
    4. '
' → logprob: -6.526299476623535
    5. ':' → logprob: -7.401299476623535
    6. ')' → logprob: -7.526299476623535
    7. '):' → logprob: -8.276299476623535
    8. '\n' → logprob: -8.276299476623535
    9. '.
' → logprob: -8.651299476623535
    10. '):
' → logprob: -8.651299476623535

Token 273: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025924232322722673
    2. '"""' → logprob: -6.00259256362915
    3. ' """' → logprob: -10.002592086791992
    4. '"""
' → logprob: -10.502592086791992
    5. 'def' → logprob: -11.377592086791992
    6. ')' → logprob: -11.627592086791992
    7. '    ' → logprob: -12.002592086791992
    8. '```' → logprob: -12.502592086791992
    9. ' """
' → logprob: -12.752592086791992
    10. '       ' → logprob: -13.127592086791992

Token 274: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016592320753261447
    2. ' global' → logprob: -7.251659393310547
    3. '"""
' → logprob: -8.126659393310547
    4. 'global' → logprob: -8.126659393310547
    5. '"""' → logprob: -8.626659393310547
    6. '    ' → logprob: -10.001659393310547
    7. 'nums' → logprob: -10.626659393310547
    8. '
' → logprob: -11.126659393310547
    9. ' """
' → logprob: -11.376659393310547
    10. '   ' → logprob: -11.751659393310547

Token 275: ' Si' (ID: 7832)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.11603984981775284
    2. 'stack' → logprob: -2.616039752960205
    3. '   ' → logprob: -3.741039752960205
    4. 'visited' → logprob: -4.741039752960205
    5. 'global' → logprob: -6.491039752960205
    6. 'values' → logprob: -7.616039752960205
    7. 'vals' → logprob: -7.741039752960205
    8. 'seen' → logprob: -7.741039752960205
    9. 'assigned' → logprob: -8.741040229797363
    10. ' stack' → logprob: -8.866040229797363

Token 276: ' un' (ID: 537)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.8761717677116394
    2. ' root' → logprob: -1.3761718273162842
    3. 'init' → logprob: -2.126171827316284
    4. 'nums' → logprob: -2.376171827316284
    5. ' init' → logprob: -3.251171827316284
    6. ' not' → logprob: -3.751171827316284
    7. ' nums' → logprob: -3.876171827316284
    8. 'dfs' → logprob: -4.751171588897705
    9. 'not' → logprob: -5.376171588897705
    10. '   ' → logprob: -5.626171588897705

Token 277: ' conflit' (ID: 144504)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.7976459264755249
    2. ' conflit' → logprob: -1.797645926475525
    3. 'e' → logprob: -2.0476460456848145
    4. ' conflict' → logprob: -4.0476460456848145
    5. 'node' → logprob: -4.1726460456848145
    6. ' node' → logprob: -4.2976460456848145
    7. 'é' → logprob: -4.4226460456848145
    8. 's' → logprob: -4.4226460456848145
    9. 'contr' → logprob: -4.4226460456848145
    10. ' noe' → logprob: -4.5476460456848145

Token 278: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.6736407279968262
    2. 'est' → logprob: -0.7986407279968262
    3. ' is' → logprob: -3.923640727996826
    4. ' surv' → logprob: -5.548640727996826
    5. ' se' → logprob: -5.673640727996826
    6. 'se' → logprob: -5.798640727996826
    7. 'sur' → logprob: -6.423640727996826
    8. 'detect' → logprob: -6.423640727996826
    9. ' ' → logprob: -7.048640727996826
    10. ' détect' → logprob: -7.173640727996826

Token 279: ' trouvé' (ID: 60081)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.87908935546875
    2. 'detect' → logprob: -1.00408935546875
    3. 'dé' → logprob: -2.00408935546875
    4. ' détect' → logprob: -2.62908935546875
    5. 'd' → logprob: -4.87908935546875
    6. ' detected' → logprob: -6.75408935546875
    7. 'found' → logprob: -7.37908935546875
    8. 'None' → logprob: -7.75408935546875
    9. '_detect' → logprob: -8.12908935546875
    10. ' trouvé' → logprob: -8.50408935546875

Token 280: ' dans' (ID: 2671)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005033917725086212
    2. ':' → logprob: -5.38003396987915
    3. '   ' → logprob: -8.755033493041992
    4. ' ,' → logprob: -8.880033493041992
    5. ' :' → logprob: -11.005033493041992
    6. '.' → logprob: -11.380033493041992
    7. 'def' → logprob: -11.505033493041992
    8. ' lors' → logprob: -11.755033493041992
    9. ',
' → logprob: -12.005033493041992
    10. '  ' → logprob: -12.005033493041992

Token 281: ' un' (ID: 537)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.4983102083206177
    2. 'dfs' → logprob: -1.4983102083206177
    3. 'les' → logprob: -1.6233102083206177
    4. 'la' → logprob: -1.9983102083206177
    5. 'nums' → logprob: -2.248310089111328
    6. 'l' → logprob: -2.873310089111328
    7. 'root' → logprob: -3.748310089111328
    8. ' la' → logprob: -5.248310089111328
    9. 'len' → logprob: -5.873310089111328
    10. 'None' → logprob: -5.998310089111328

Token 282: ' cycle' (ID: 15839)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.858450710773468
    2. 'assign' → logprob: -2.3584506511688232
    3. 'es' → logprob: -2.6084506511688232
    4. 'ar' → logprob: -2.7334506511688232
    5. 'ensemble' → logprob: -3.3584506511688232
    6. 'é' → logprob: -3.7334506511688232
    7. 'at' → logprob: -3.7334506511688232
    8. 'com' → logprob: -3.7334506511688232
    9. 'assignment' → logprob: -4.358450889587402
    10. 'n' → logprob: -4.483450889587402

Token 283: ' pair' (ID: 10610)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024943258613348007
    2. ':' → logprob: -7.3774943351745605
    3. '   ' → logprob: -7.7524943351745605
    4. 'def' → logprob: -8.252493858337402
    5. '#' → logprob: -8.377493858337402
    6. '.' → logprob: -8.502493858337402
    7. ' ,' → logprob: -8.877493858337402
    8. ',
' → logprob: -9.002493858337402
    9. 'de' → logprob: -10.127493858337402
    10. 'ou' → logprob: -10.377493858337402

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09627389907836914
    2. 'length' → logprob: -3.346273899078369
    3. '-length' → logprob: -3.471273899078369
    4. ' ,' → logprob: -5.846273899078369
    5. ' ou' → logprob: -6.096273899078369
    6. 'e' → logprob: -6.096273899078369
    7. 'len' → logprob: -6.221273899078369
    8. 'aire' → logprob: -6.221273899078369
    9. '(e' → logprob: -6.471273899078369
    10. '   ' → logprob: -6.596273899078369

Token 285: ' le' (ID: 505)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6999958753585815
    2. ' return' → logprob: -0.9499958753585815
    3. 'return' → logprob: -2.324995994567871
    4. '       ' → logprob: -4.199995994567871
    5. '    ' → logprob: -6.324995994567871
    6. '	return' → logprob: -7.199995994567871
    7. '#' → logprob: -7.824995994567871
    8. '    
' → logprob: -8.574995994567871
    9. '   ' → logprob: -8.699995994567871
    10. ' ' → logprob: -9.449995994567871

Token 286: ' système' (ID: 30034)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3861490786075592
    2. 'def' → logprob: -2.1361491680145264
    3. ' return' → logprob: -3.1361491680145264
    4. ' code' → logprob: -3.2611491680145264
    5. 'fonction' → logprob: -3.8861491680145264
    6. 'code' → logprob: -4.261148929595947
    7. 'dfs' → logprob: -4.386148929595947
    8. '   ' → logprob: -4.761148929595947
    9. 'r' → logprob: -4.886148929595947
    10. '#' → logprob: -4.886148929595947

Token 287: ' n' (ID: 297)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -1.0256197452545166
    2. '   ' → logprob: -1.1506197452545166
    3. ' is' → logprob: -2.0256197452545166
    4. ' n' → logprob: -2.6506197452545166
    5. 'est' → logprob: -3.2756197452545166
    6. ' ren' → logprob: -3.7756197452545166
    7. ' return' → logprob: -4.7756195068359375
    8. 'd' → logprob: -5.0256195068359375
    9. 'is' → logprob: -5.2756195068359375
    10. 'n' → logprob: -5.2756195068359375

Token 288: ''a' (ID: 10443)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.1622340977191925
    2. ''est' → logprob: -1.9122340679168701
    3. 'e' → logprob: -7.537234306335449
    4. ''' → logprob: -8.03723430633545
    5. '’est' → logprob: -8.28723430633545
    6. '   ' → logprob: -8.41223430633545
    7. '#' → logprob: -8.66223430633545
    8. 'n' → logprob: -9.28723430633545
    9. '
' → logprob: -9.91223430633545
    10. '''' → logprob: -10.28723430633545

Token 289: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.2929029166698456
    2. ''est' → logprob: -1.917902946472168
    3. 'est' → logprob: -2.542902946472168
    4. 'a' → logprob: -4.667902946472168
    5. 'o' → logprob: -4.667902946472168
    6. '
' → logprob: -6.167902946472168
    7. ' pas' → logprob: -6.417902946472168
    8. '

' → logprob: -6.417902946472168
    9. ''' → logprob: -6.917902946472168
    10. ''a' → logprob: -7.042902946472168

Token 290: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.5309080481529236
    2. 'solution' → logprob: -1.7809081077575684
    3. ' de' → logprob: -2.2809081077575684
    4. 'pas' → logprob: -2.4059081077575684
    5. ' solution' → logprob: -3.5309081077575684
    6. 'solutions' → logprob: -5.030908107757568
    7. '_solution' → logprob: -5.155908107757568
    8. ' pas' → logprob: -6.155908107757568
    9. 'auc' → logprob: -6.905908107757568
    10. 'sol' → logprob: -7.405908107757568

Token 291: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.18111702799797058
    2. ' solution' → logprob: -1.806117057800293
    3. 'solutions' → logprob: -6.806117057800293
    4. ' solutions' → logprob: -9.431117057800293
    5. 's' → logprob: -9.431117057800293
    6. '_solution' → logprob: -9.931117057800293
    7. 'sens' → logprob: -10.556117057800293
    8. 'sol' → logprob: -11.931117057800293
    9. ' solução' → logprob: -12.556117057800293
    10. '(solution' → logprob: -12.806117057800293

Token 292: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1030636802315712
    2. '.' → logprob: -2.9780635833740234
    3. ',' → logprob: -3.3530635833740234
    4. ':' → logprob: -5.853063583374023
    5. ' return' → logprob: -6.103063583374023
    6. '       ' → logprob: -6.478063583374023
    7. 'return' → logprob: -6.853063583374023
    8. '.
' → logprob: -7.103063583374023
    9. '
' → logprob: -7.228063583374023
    10. 'def' → logprob: -7.603063583374023

Token 293: 'print' (ID: 1598)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6620087027549744
    2. 'return' → logprob: -1.2870087623596191
    3. '   ' → logprob: -2.037008762359619
    4. ')' → logprob: -3.787008762359619
    5. ')
' → logprob: -4.787008762359619
    6. '"""
' → logprob: -5.287008762359619
    7. '       ' → logprob: -5.412008762359619
    8. '    ' → logprob: -6.037008762359619
    9. ' returns' → logprob: -6.037008762359619
    10. '```' → logprob: -6.037008762359619

Token 294: '(' (ID: 7)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.13644655048847198
    2. '(' → logprob: -3.011446475982666
    3. '(-' → logprob: -3.136446475982666
    4. '('' → logprob: -4.136446475982666
    5. '"' → logprob: -4.636446475982666
    6. '-' → logprob: -5.761446475982666
    7. '("-' → logprob: -6.761446475982666
    8. ')' → logprob: -7.011446475982666
    9. '(False' → logprob: -7.761446475982666
    10. ',' → logprob: -7.886446475982666

Token 295: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4820822775363922
    2. '"' → logprob: -1.2320822477340698
    3. '"No' → logprob: -2.7320823669433594
    4. '"-' → logprob: -4.357082366943359
    5. '-N' → logprob: -5.607082366943359
    6. ''' → logprob: -6.607082366943359
    7. '-No' → logprob: -6.607082366943359
    8. '-W' → logprob: -7.107082366943359
    9. '-n' → logprob: -7.357082366943359
    10. '0' → logprob: -7.607082366943359

Token 296: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004377786535769701
    2. ')
' → logprob: -5.504377841949463
    3. '   ' → logprob: -9.754377365112305
    4. ' )' → logprob: -9.754377365112305
    5. ',' → logprob: -10.129377365112305
    6. '))' → logprob: -11.004377365112305
    7. 'def' → logprob: -11.004377365112305
    8. ';' → logprob: -11.129377365112305
    9. ')
' → logprob: -11.254377365112305
    10. ')\' → logprob: -11.504377365112305

Token 297: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24828290939331055
    2. '   ' → logprob: -1.9982829093933105
    3. ')
' → logprob: -2.4982829093933105
    4. ',' → logprob: -7.1232829093933105
    5. 'def' → logprob: -7.6232829093933105
    6. ')
' → logprob: -8.123283386230469
    7. '
' → logprob: -9.248283386230469
    8. ').' → logprob: -9.373283386230469
    9. '):' → logprob: -10.248283386230469
    10. ';' → logprob: -10.373283386230469

Token 298: ' exit' (ID: 10654)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7522768974304199
    2. 'exit' → logprob: -1.00227689743042
    3. ' exit' → logprob: -2.50227689743042
    4. ' return' → logprob: -2.75227689743042
    5. 'sys' → logprob: -4.37727689743042
    6. ' sys' → logprob: -6.25227689743042
    7. 'import' → logprob: -6.62727689743042
    8. '   ' → logprob: -9.252277374267578
    9. 'quit' → logprob: -10.252277374267578
    10. '	exit' → logprob: -11.127277374267578

Token 299: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14057070016860962
    2. ')
' → logprob: -2.265570640563965
    3. '()' → logprob: -3.890570640563965
    4. '())' → logprob: -5.515570640563965
    5. '())
' → logprob: -6.265570640563965
    6. '()
' → logprob: -7.890570640563965
    7. ')
' → logprob: -8.640570640563965
    8. '(' → logprob: -9.015570640563965
    9. '   ' → logprob: -9.640570640563965
    10. ').' → logprob: -9.890570640563965

Token 300: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019856137223541737
    2. ')' → logprob: -6.626985549926758
    3. 'def' → logprob: -8.251985549926758
    4. '    ' → logprob: -9.001985549926758
    5. '    
' → logprob: -9.376985549926758
    6. '"""' → logprob: -10.251985549926758
    7. '       ' → logprob: -10.376985549926758
    8. '
' → logprob: -10.751985549926758
    9. 'nums' → logprob: -11.001985549926758
    10. ')
' → logprob: -11.751985549926758

Token 301: ' Pour' (ID: 13931)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019217364490032196
    2. '    
' → logprob: -4.519217491149902
    3. '"""
' → logprob: -6.269217491149902
    4. '"""' → logprob: -6.644217491149902
    5. 'def' → logprob: -6.769217491149902
    6. ')' → logprob: -6.769217491149902
    7. '    ' → logprob: -7.144217491149902
    8. '
' → logprob: -8.019217491149902
    9. 'nums' → logprob: -8.519217491149902
    10. ')
' → logprob: -8.644217491149902

Token 302: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.8327802419662476
    2. 'les' → logprob: -1.0827802419662476
    3. ' un' → logprob: -2.707780361175537
    4. 'une' → logprob: -3.582780361175537
    5. 'l' → logprob: -3.707780361175537
    6. ' les' → logprob: -3.707780361175537
    7. 'cycle' → logprob: -3.707780361175537
    8. 'cha' → logprob: -4.457780361175537
    9. 'le' → logprob: -4.707780361175537
    10. ' cycle' → logprob: -4.832780361175537

Token 303: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.25334468483924866
    2. ' cycle' → logprob: -1.5033446550369263
    3. 'cycl' → logprob: -8.128344535827637
    4. '_cycle' → logprob: -8.128344535827637
    5. '
' → logprob: -8.378344535827637
    6. 'c' → logprob: -8.628344535827637
    7. '#' → logprob: -9.878344535827637
    8. 'con' → logprob: -10.065844535827637
    9. 'elif' → logprob: -10.878344535827637
    10. '

' → logprob: -10.940844535827637

Token 304: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.1773802638053894
    2. 'im' → logprob: -2.927380323410034
    3. 'odd' → logprob: -3.052380323410034
    4. ' impair' → logprob: -3.052380323410034
    5. ' imp' → logprob: -4.927380084991455
    6. 'pair' → logprob: -5.427380084991455
    7. '   ' → logprob: -7.802380084991455
    8. ' pair' → logprob: -7.927380084991455
    9. '_imp' → logprob: -8.052380561828613
    10. ' odd' → logprob: -8.052380561828613

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000872274860739708
    2. ' ,' → logprob: -7.3758721351623535
    3. 'cycle' → logprob: -9.875872611999512
    4. ' cycle' → logprob: -10.125872611999512
    5. 'e' → logprob: -10.375872611999512
    6. '),' → logprob: -10.750872611999512
    7. ')' → logprob: -10.875872611999512
    8. '_cycle' → logprob: -11.500872611999512
    9. '   ' → logprob: -11.625872611999512
    10. ':' → logprob: -11.625872611999512

Token 306: ' tente' (ID: 75234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2470518350601196
    2. ' on' → logprob: -1.4970518350601196
    3. ' return' → logprob: -2.12205171585083
    4. ' print' → logprob: -2.24705171585083
    5. ' le' → logprob: -2.74705171585083
    6. ' la' → logprob: -3.24705171585083
    7. 'le' → logprob: -3.24705171585083
    8. ' il' → logprob: -3.62205171585083
    9. ' l' → logprob: -4.37205171585083
    10. 'print' → logprob: -4.37205171585083

Token 307: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.44017845392227173
    2. 'd' → logprob: -1.815178394317627
    3. ' de' → logprob: -1.815178394317627
    4. 'de' → logprob: -3.940178394317627
    5. 'e' → logprob: -5.190178394317627
    6. 'r' → logprob: -6.190178394317627
    7. '   ' → logprob: -6.315178394317627
    8. 'ra' → logprob: -8.190178871154785
    9. '  ' → logprob: -8.815178871154785
    10. '    ' → logprob: -8.940178871154785

Token 308: ' résoudre' (ID: 134006)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -1.0320199728012085
    2. ' résoudre' → logprob: -1.2820199728012085
    3. 'aff' → logprob: -2.407020092010498
    4. ' assign' → logprob: -3.157020092010498
    5. ' ajust' → logprob: -3.157020092010498
    6. 'prop' → logprob: -4.157020092010498
    7. ' continuer' → logprob: -4.157020092010498
    8. 'r' → logprob: -4.532020092010498
    9. 'return' → logprob: -4.532020092010498
    10. ' trouver' → logprob: -4.657020092010498

Token 309: ' et' (ID: 859)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3274471759796143
    2. 'le' → logprob: -2.3274471759796143
    3. ' de' → logprob: -2.4524471759796143
    4. ' le' → logprob: -2.8274471759796143
    5. 'la' → logprob: -2.8274471759796143
    6. ' un' → logprob: -2.9524471759796143
    7. ' l' → logprob: -2.9524471759796143
    8. 'de' → logprob: -3.3274471759796143
    9. ' une' → logprob: -3.3274471759796143
    10. ' d' → logprob: -3.4524471759796143

Token 310: ' ré' (ID: 3146)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0187491178512573
    2. 'return' → logprob: -1.8937491178512573
    3. ' assign' → logprob: -2.018749237060547
    4. 'aff' → logprob: -2.518749237060547
    5. 'assign' → logprob: -2.643749237060547
    6. ' retourner' → logprob: -3.143749237060547
    7. ' compléter' → logprob: -4.018749237060547
    8. ' ajust' → logprob: -4.018749237060547
    9. ' fixer' → logprob: -4.143749237060547
    10. '   ' → logprob: -4.268749237060547

Token 311: 'essay' (ID: 128013)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.9067810773849487
    2. 's' → logprob: -1.4067810773849487
    3. 'turn' → logprob: -2.5317811965942383
    4. 'solve' → logprob: -3.5317811965942383
    5. 'c' → logprob: -3.9067811965942383
    6. 'solver' → logprob: -4.031781196594238
    7. 'ess' → logprob: -4.031781196594238
    8. 'aj' → logprob: -4.031781196594238
    9. 'é' → logprob: -4.281781196594238
    10. 'sol' → logprob: -4.406781196594238

Token 312: 'ez' (ID: 8659)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.47533977031707764
    2. 'ter' → logprob: -1.3503397703170776
    3. '   ' → logprob: -3.600339889526367
    4. 'te' → logprob: -4.350339889526367
    5. 've' → logprob: -4.600339889526367
    6. 'enter' → logprob: -4.600339889526367
    7. 'uter' → logprob: -4.850339889526367
    8. 'e' → logprob: -4.850339889526367
    9. 'iter' → logprob: -5.350339889526367
    10. 'orer' → logprob: -5.600339889526367

Token 313: ' avec' (ID: 3937)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3852245807647705
    2. ':' → logprob: -1.8852245807647705
    3. '   ' → logprob: -3.0102245807647705
    4. ' la' → logprob: -3.7602245807647705
    5. ',' → logprob: -4.385224342346191
    6. 'def' → logprob: -4.635224342346191
    7. ' le' → logprob: -4.760224342346191
    8. ' :' → logprob: -4.885224342346191
    9. ' ' → logprob: -5.135224342346191
    10. ' dfs' → logprob: -5.135224342346191

Token 314: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8636176586151123
    2. 'root' → logprob: -1.8636176586151123
    3. 'init' → logprob: -1.9886176586151123
    4. 'dfs' → logprob: -2.1136176586151123
    5. '-' → logprob: -2.3636176586151123
    6. 'l' → logprob: -2.9886176586151123
    7. 'print' → logprob: -3.2386176586151123
    8. 'un' → logprob: -3.6136176586151123
    9. 'une' → logprob: -3.8636176586151123
    10. 'abs' → logprob: -3.8636176586151123

Token 315: ' nouvelle' (ID: 24562)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.003718376159668
    2. 'diff' → logprob: -1.628718376159668
    3. 'different' → logprob: -1.878718376159668
    4. 'aut' → logprob: -2.503718376159668
    5. ' autre' → logprob: -2.753718376159668
    6. 'nou' → logprob: -3.753718376159668
    7. 'dfs' → logprob: -3.878718376159668
    8. 'def' → logprob: -4.503718376159668
    9. 'value' → logprob: -5.128718376159668
    10. 'new' → logprob: -5.378718376159668

Token 316: ' rac' (ID: 12334)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0913809984922409
    2. ' valeur' → logprob: -2.716381072998047
    3. ' hypoth' → logprob: -5.466381072998047
    4. ' val' → logprob: -5.591381072998047
    5. 'assign' → logprob: -5.716381072998047
    6. ' tentative' → logprob: -6.341381072998047
    7. '   ' → logprob: -7.091381072998047
    8. '```' → logprob: -7.341381072998047
    9. 'version' → logprob: -7.591381072998047
    10. 'hyp' → logprob: -7.591381072998047

Token 317: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.05853429436683655
    2. 'e' → logprob: -3.5585343837738037
    3. 'he' → logprob: -4.933534145355225
    4. 'o' → logprob: -6.496034145355225
    5. 'or' → logprob: -6.621034145355225
    6. 'orne' → logprob: -6.621034145355225
    7. '**' → logprob: -7.183534145355225
    8. '#' → logprob: -7.371034145355225
    9. '   ' → logprob: -7.433534145355225
    10. '"' → logprob: -7.558534145355225

Token 318: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2976504862308502
    2. '):' → logprob: -2.5476505756378174
    3. ')' → logprob: -2.7976505756378174
    4. ':' → logprob: -3.0476505756378174
    5. '
' → logprob: -3.6726505756378174
    6. ',' → logprob: -4.172650337219238
    7. '):
' → logprob: -4.297650337219238
    8. '.' → logprob: -5.297650337219238
    9. 'def' → logprob: -6.047650337219238
    10. ':
' → logprob: -6.922650337219238

Token 319: ' 
    
' (ID: 76267)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026921328157186508
    2. ')' → logprob: -4.901921272277832
    3. 'def' → logprob: -5.151921272277832
    4. '
' → logprob: -5.401921272277832
    5. '    
' → logprob: -6.026921272277832
    6. '):' → logprob: -6.401921272277832
    7. ':' → logprob: -6.651921272277832
    8. ')
' → logprob: -7.026921272277832
    9. '):
' → logprob: -7.276921272277832
    10. '  
' → logprob: -8.651921272277832

Token 320: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027147699147462845
    2. ')' → logprob: -4.0271477699279785
    3. '"""' → logprob: -5.7771477699279785
    4. '    ' → logprob: -6.4021477699279785
    5. ' """' → logprob: -6.5271477699279785
    6. '    
' → logprob: -7.1521477699279785
    7. ' """
' → logprob: -7.7771477699279785
    8. ' )' → logprob: -7.7771477699279785
    9. '"""
' → logprob: -8.02714729309082
    10. ')
' → logprob: -8.15214729309082

Token 321: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12554167211055756
    2. '"""
' → logprob: -2.3755416870117188
    3. '"""' → logprob: -4.250541687011719
    4. ' """
' → logprob: -6.000541687011719
    5. '    
' → logprob: -6.250541687011719
    6. ')' → logprob: -6.750541687011719
    7. 'def' → logprob: -7.250541687011719
    8. '    ' → logprob: -7.375541687011719
    9. ' """' → logprob: -7.750541687011719
    10. ')
' → logprob: -7.750541687011719

Token 322: ':
' (ID: 734)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4436032772064209
    2. '=' → logprob: -1.193603277206421
    3. ':' → logprob: -3.068603277206421
    4. '):' → logprob: -5.693603515625
    5. ')' → logprob: -6.193603515625
    6. '   ' → logprob: -6.693603515625
    7. '<|end|>' → logprob: -7.443603515625
    8. '[' → logprob: -7.693603515625
    9. '=None' → logprob: -8.693603515625
    10. '(' → logprob: -8.943603515625

Token 323: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0860722064971924
    2. ' self' → logprob: -1.2110722064971924
    3. 'self' → logprob: -1.3360722064971924
    4. ' root' → logprob: -2.8360722064971924
    5. '       ' → logprob: -3.5860722064971924
    6. 'root' → logprob: -4.336071968078613
    7. '    ' → logprob: -6.336071968078613
    8. '	self' → logprob: -9.211071968078613
    9. ' node' → logprob: -9.336071968078613
    10. ' ' → logprob: -9.711071968078613

Token 324: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' (adapté à ' root') → logprob: -0.007406196556985378
    2. 'self' → logprob: -5.882406234741211
    3. ' root' → logprob: -6.507406234741211
    4. 'nums' → logprob: -6.757406234741211
    5. 'init' → logprob: -7.632406234741211
    6. 'start' → logprob: -7.632406234741211
    7. '   ' → logprob: -7.632406234741211
    8. 'node' → logprob: -9.257406234741211
    9. 'num' → logprob: -10.007406234741211
    10. 'value' → logprob: -10.382406234741211

Token 325: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. '):' → logprob: -10.750033378601074
    3. ' ,' → logprob: -12.125033378601074
    4. ':' → logprob: -13.375033378601074
    5. ',int' → logprob: -13.375033378601074
    6. ',
' → logprob: -14.000033378601074
    7. '   ' → logprob: -14.125033378601074
    8. '=' → logprob: -14.625033378601074
    9. ')' → logprob: -15.125033378601074
    10. '=None' → logprob: -15.375033378601074

Token 326: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.013968157581984997
    2. '):' → logprob: -5.388967990875244
    3. ')' → logprob: -5.513967990875244
    4. '):
' → logprob: -6.263967990875244
    5. ',' → logprob: -6.513967990875244
    6. '),' → logprob: -7.263967990875244
    7. '   ' → logprob: -7.513967990875244
    8. ',int' → logprob: -8.138968467712402
    9. ' int' → logprob: -9.138968467712402
    10. ':int' → logprob: -9.763968467712402

Token 327: '):' (ID: 3127)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.47626737493556e-05
    2. '):' → logprob: -10.75003433227539
    3. ' ,' → logprob: -11.75003433227539
    4. ',
' → logprob: -13.00003433227539
    5. ')' → logprob: -13.37503433227539
    6. '   ' → logprob: -14.37503433227539
    7. ',int' → logprob: -14.37503433227539
    8. '‌,' → logprob: -16.37503433227539
    9. '):
' → logprob: -16.50003433227539
    10. ' ):' → logprob: -17.12503433227539

Token 328: ' Le' (ID: 2018)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4887605607509613
    2. 'int' → logprob: -0.9887605905532837
    3. '   ' → logprob: -4.988760471343994
    4. ' starting' → logprob: -6.613760471343994
    5. ' root' → logprob: -7.238760471343994
    6. ' le' → logprob: -7.488760471343994
    7. 'Le' → logprob: -7.613760471343994
    8. 'root' → logprob: -7.613760471343994
    9. ' initial' → logprob: -7.988760471343994
    10. 'L' → logprob: -8.113760948181152

Token 329: ' sommet' (ID: 130502)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.4449271857738495
    2. ' sommet' → logprob: -1.3199272155761719
    3. 'point' → logprob: -3.694927215576172
    4. ' point' → logprob: -4.319927215576172
    5. 'node' → logprob: -4.694927215576172
    6. 'n' → logprob: -4.819927215576172
    7. ' node' → logprob: -5.069927215576172
    8. 'no' → logprob: -5.194927215576172
    9. 'start' → logprob: -5.444927215576172
    10. ' som' → logprob: -5.444927215576172

Token 330: ' d' (ID: 272)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043844521045684814
    2. ')' → logprob: -3.91884446144104
    3. '   ' → logprob: -5.043844699859619
    4. ' à' → logprob: -5.293844699859619
    5. ' ,' → logprob: -6.043844699859619
    6. '):' → logprob: -6.293844699859619
    7. ' de' → logprob: -6.293844699859619
    8. ',
' → logprob: -6.543844699859619
    9. '),' → logprob: -6.918844699859619
    10. 'from' → logprob: -7.543844699859619

Token 331: ''où' (ID: 186468)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15073437988758087
    2. ''' → logprob: -3.2757344245910645
    3. ' )' → logprob: -4.0257344245910645
    4. '   ' → logprob: -4.4007344245910645
    5. '):' → logprob: -4.4007344245910645
    6. ''un' → logprob: -4.6507344245910645
    7. 'e' → logprob: -4.7757344245910645
    8. ',' → logprob: -4.9007344245910645
    9. ' '' → logprob: -5.2757344245910645
    10. ''une' → logprob: -5.4007344245910645

Token 332: ' partir' (ID: 12100)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0885130167007446
    2. '   ' → logprob: -1.3385130167007446
    3. ' le' → logprob: -1.9635130167007446
    4. ' la' → logprob: -2.713512897491455
    5. ' dfs' → logprob: -3.338512897491455
    6. ' commencer' → logprob: -3.338512897491455
    7. ' dém' → logprob: -3.713512897491455
    8. 'dfs' → logprob: -3.713512897491455
    9. ' )' → logprob: -4.088512897491455
    10. ' départ' → logprob: -4.463512897491455

Token 333: ' la' (ID: 557)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10994201898574829
    2. '):' → logprob: -2.6099419593811035
    3. ' )' → logprob: -4.6099419593811035
    4. '   ' → logprob: -4.7349419593811035
    5. ',' → logprob: -5.1099419593811035
    6. '):
' → logprob: -5.7349419593811035
    7. ' ):' → logprob: -6.2349419593811035
    8. '),' → logprob: -8.609942436218262
    9. ')
' → logprob: -9.359942436218262
    10. ' ):
' → logprob: -9.484942436218262

Token 334: ' DFS' (ID: 115767)
  Prédit: ' DFS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' DFS' → logprob: -0.6853195428848267
    2. ' dfs' → logprob: -1.0603195428848267
    3. ' ' → logprob: -2.560319423675537
    4. 'dfs' → logprob: -2.935319423675537
    5. '   ' → logprob: -4.935319423675537
    6. 'DFS' → logprob: -5.935319423675537
    7. ' traversal' → logprob: -6.435319423675537
    8. ' exploration' → logprob: -6.810319423675537
    9. '_' → logprob: -6.935319423675537
    10. ' def' → logprob: -7.060319423675537

Token 335: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5194135904312134
    2. '):' → logprob: -1.5194135904312134
    3. ',' → logprob: -2.519413471221924
    4. ')' → logprob: -2.519413471221924
    5. '):
' → logprob: -3.769413471221924
    6. ',
' → logprob: -7.269413471221924
    7. '       ' → logprob: -7.769413471221924
    8. '):
' → logprob: -8.519413948059082
    9. ')
' → logprob: -8.644413948059082
    10. ' ):' → logprob: -9.269413948059082

Token 336: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.281424880027771
    2. ')' → logprob: -1.531424880027771
    3. '       ' → logprob: -4.6564249992370605
    4. '"""' → logprob: -4.6564249992370605
    5. ')
' → logprob: -6.1564249992370605
    6. ',' → logprob: -7.0314249992370605
    7. '"""
' → logprob: -7.1564249992370605
    8. ' ' → logprob: -7.2814249992370605
    9. ' )' → logprob: -7.4064249992370605
    10. '
' → logprob: -7.4064249992370605

Token 337: ' init' (ID: 6327)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.13739503920078278
    2. 'init' (adapté à ' init') → logprob: -3.262395143508911
    3. '   ' → logprob: -3.762395143508911
    4. 'num' → logprob: -4.137394905090332
    5. 'vals' → logprob: -4.137394905090332
    6. 'values' → logprob: -4.887394905090332
    7. 'visited' → logprob: -5.512394905090332
    8. ' nums' → logprob: -5.637394905090332
    9. 'val' → logprob: -5.762394905090332
    10. 'initial' → logprob: -6.012394905090332

Token 338: ' (' (ID: 350)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03459986671805382
    2. ':' → logprob: -3.659599781036377
    3. ',' → logprob: -5.159599781036377
    4. '):
' → logprob: -7.034599781036377
    5. ' ):' → logprob: -7.284599781036377
    6. '=' → logprob: -8.159600257873535
    7. ')' → logprob: -8.409600257873535
    8. '_value' → logprob: -8.659600257873535
    9. '   ' → logprob: -9.534600257873535
    10. '):
' → logprob: -10.284600257873535

Token 339: 'int' (ID: 491)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4626384377479553
    2. 'int' → logprob: -1.3376383781433105
    3. '):' → logprob: -2.3376383781433105
    4. '):
' → logprob: -5.5876383781433105
    5. '[int' → logprob: -6.3376383781433105
    6. ',' → logprob: -6.5876383781433105
    7. '0' → logprob: -6.7126383781433105
    8. '   ' → logprob: -7.3376383781433105
    9. ':int' → logprob: -7.7126383781433105
    10. ' )' → logprob: -8.087638854980469

Token 340: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07887039333581924
    2. '):
' → logprob: -3.5788702964782715
    3. ',' → logprob: -3.8288702964782715
    4. ')' → logprob: -4.2038702964782715
    5. ' ):' → logprob: -4.9538702964782715
    6. '=' → logprob: -5.7038702964782715
    7. '):
' → logprob: -8.07887077331543
    8. '   ' → logprob: -8.70387077331543
    9. ' )' → logprob: -9.20387077331543
    10. ' =' → logprob: -9.82887077331543

Token 341: ' La' (ID: 3038)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.15764211118221283
    2. 'nums' → logprob: -2.407642126083374
    3. ' init' → logprob: -3.907642126083374
    4. 'int' → logprob: -4.532641887664795
    5. ' nums' → logprob: -5.157641887664795
    6. 'root' → logprob: -5.282641887664795
    7. '   ' → logprob: -5.282641887664795
    8. '0' → logprob: -6.782641887664795
    9. 'initial' → logprob: -7.157641887664795
    10. 'The' → logprob: -7.470141887664795

Token 342: ' valeur' (ID: 41664)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.4650038480758667
    2. ')' → logprob: -1.9650038480758667
    3. 'value' → logprob: -2.2150039672851562
    4. '+' → logprob: -2.5900039672851562
    5. ' initial' → logprob: -2.5900039672851562
    6. 'val' → logprob: -3.0900039672851562
    7. 'initial' → logprob: -3.0900039672851562
    8. 'root' → logprob: -3.3400039672851562
    9. ' value' → logprob: -3.3400039672851562
    10. 'current' → logprob: -3.5900039672851562

Token 343: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3636747896671295
    2. ' )' → logprob: -1.6136747598648071
    3. ' des' → logprob: -3.4886748790740967
    4. ' de' → logprob: -3.9886748790740967
    5. '   ' → logprob: -4.238674640655518
    6. ' à' → logprob: -4.738674640655518
    7. '=' → logprob: -5.238674640655518
    8. ' ' → logprob: -5.363674640655518
    9. ' nums' → logprob: -5.488674640655518
    10. 'nums' → logprob: -5.613674640655518

Token 344: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.17028476297855377
    2. ' assign' → logprob: -2.5452847480773926
    3. ' attrib' → logprob: -3.4202847480773926
    4. 'attrib' → logprob: -3.6702847480773926
    5. ' donner' → logprob: -5.045284748077393
    6. 'aff' → logprob: -5.170284748077393
    7. '   ' → logprob: -6.295284748077393
    8. ' affect' → logprob: -6.420284748077393
    9. 'don' → logprob: -6.545284748077393
    10. ' ' → logprob: -7.295284748077393

Token 345: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.08504544198513031
    2. 'é' → logprob: -3.835045337677002
    3. '   ' → logprob: -3.960045337677002
    4. ' ' → logprob: -4.085045337677002
    5. 'e' → logprob: -4.835045337677002
    6. ')' → logprob: -4.835045337677002
    7. 'u' → logprob: -5.960045337677002
    8. '=' → logprob: -6.710045337677002
    9. ' ' → logprob: -6.710045337677002
    10. 'uer' → logprob: -7.210045337677002

Token 346: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10899501293897629
    2. ' )' → logprob: -2.858994960784912
    3. ' à' → logprob: -3.983994960784912
    4. '   ' → logprob: -4.233994960784912
    5. '=' → logprob: -5.733994960784912
    6. ' ' → logprob: -5.983994960784912
    7. ',' → logprob: -6.608994960784912
    8. ' aux' → logprob: -7.108994960784912
    9. ' nums' → logprob: -7.358994960784912
    10. ' =' → logprob: -7.358994960784912

Token 347: ' nums' (ID: 18117)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.43344995379447937
    2. ' root' → logprob: -1.4334499835968018
    3. 'nums' → logprob: -2.4334499835968018
    4. ' nums' → logprob: -3.6834499835968018
    5. '[root' → logprob: -8.308449745178223
    6. ' ' → logprob: -10.558449745178223
    7. 'num' → logprob: -10.683449745178223
    8. '	root' → logprob: -11.433449745178223
    9. '(root' → logprob: -11.808449745178223
    10. 'numbers' → logprob: -11.808449745178223

Token 348: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.0058312686160206795
    2. ')' → logprob: -5.630831241607666
    3. '[' → logprob: -6.630831241607666
    4. '[u' → logprob: -7.505831241607666
    5. 'root' → logprob: -9.005831718444824
    6. '   ' → logprob: -9.130831718444824
    7. ' [' → logprob: -9.880831718444824
    8. ')[' → logprob: -11.380831718444824
    9. '_[' → logprob: -12.005831718444824
    10. ' )' → logprob: -12.005831718444824

Token 349: '].
' (ID: 49887)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00694672204554081
    2. '+' → logprob: -6.256946563720703
    3. ')
' → logprob: -6.631946563720703
    4. ' )' → logprob: -6.756946563720703
    5. '):' → logprob: -7.381946563720703
    6. ' +' → logprob: -7.506946563720703
    7. '[u' → logprob: -7.881946563720703
    8. '):
' → logprob: -8.006946563720703
    9. '   ' → logprob: -8.381946563720703
    10. ']' → logprob: -9.631946563720703

Token 350: '            
' (ID: 7048)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5366604924201965
    2. '   ' → logprob: -0.9116604924201965
    3. '):' → logprob: -4.661660671234131
    4. '"""' → logprob: -7.036660671234131
    5. ')
' → logprob: -7.161660671234131
    6. ' )' → logprob: -7.536660671234131
    7. '
' → logprob: -7.536660671234131
    8. '):
' → logprob: -7.536660671234131
    9. '```' → logprob: -8.911660194396973
    10. 'def' → logprob: -9.036660194396973

Token 351: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39870497584342957
    2. ')' → logprob: -1.148705005645752
    3. '"""' → logprob: -5.523705005645752
    4. '):' → logprob: -5.648705005645752
    5. ')
' → logprob: -6.398705005645752
    6. ' )' → logprob: -7.648705005645752
    7. '):
' → logprob: -7.773705005645752
    8. '
' → logprob: -8.398704528808594
    9. '    
' → logprob: -8.398704528808594
    10. '    ' → logprob: -8.648704528808594

Token 352: ' Returns' (ID: 9609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3511698246002197
    2. 'nums' → logprob: -1.4761698246002197
    3. 'global' → logprob: -3.6011698246002197
    4. ')' → logprob: -3.8511698246002197
    5. ')
' → logprob: -5.476169586181641
    6. '"""
' → logprob: -5.726169586181641
    7. 'num' → logprob: -5.976169586181641
    8. '"""' → logprob: -5.976169586181641
    9. '):' → logprob: -6.976169586181641
    10. '    
' → logprob: -7.226169586181641

Token 353: ':
' (ID: 734)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.08375349640846252
    2. ' None' → logprob: -3.0837535858154297
    3. ' False' → logprob: -4.20875358581543
    4. ' ' → logprob: -5.08375358581543
    5. 'True' → logprob: -5.20875358581543
    6. ':' → logprob: -5.58375358581543
    7. ' (' → logprob: -6.45875358581543
    8. ' :' → logprob: -7.33375358581543
    9. '   ' → logprob: -7.70875358581543
    10. ' bool' → logprob: -8.08375358581543

Token 354: '       ' (ID: 309)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.9362205266952515
    2. ' True' → logprob: -1.1862205266952515
    3. '   ' → logprob: -1.3112205266952515
    4. 'None' → logprob: -4.561220645904541
    5. 'False' → logprob: -4.686220645904541
    6. ' None' → logprob: -5.186220645904541
    7. '(True' → logprob: -6.311220645904541
    8. ' False' → logprob: -6.436220645904541
    9. 'nums' → logprob: -6.936220645904541
    10. 'bool' → logprob: -7.311220645904541

Token 355: ' tuple' (ID: 31311)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.008213357999920845
    2. 'dict' → logprob: -6.383213520050049
    3. 'tuple' (adapté à ' tuple') → logprob: -6.383213520050049
    4. 'True' → logprob: -6.633213520050049
    5. ' bool' → logprob: -6.758213520050049
    6. 'int' → logprob: -7.258213520050049
    7. 'None' → logprob: -7.258213520050049
    8. '(bool' → logprob: -7.633213520050049
    9. '   ' → logprob: -8.75821304321289
    10. 'list' → logprob: -9.00821304321289

Token 356: ':' (ID: 25)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.1786796599626541
    2. '(int' → logprob: -2.3036797046661377
    3. '(' → logprob: -3.3036797046661377
    4. ' (' → logprob: -4.678679466247559
    5. '(
' → logprob: -5.303679466247559
    6. '(list' → logprob: -5.803679466247559
    7. ':' → logprob: -5.928679466247559
    8. '[int' → logprob: -6.053679466247559
    9. '[' → logprob: -6.303679466247559
    10. '([' → logprob: -7.678679466247559

Token 357: ' 
' (ID: 793)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.23761214315891266
    2. ' (' → logprob: -1.6126121282577515
    3. '(dict' → logprob: -5.737612247467041
    4. '(int' → logprob: -6.237612247467041
    5. '   ' → logprob: -6.362612247467041
    6. '(None' → logprob: -6.487612247467041
    7. '(True' → logprob: -6.737612247467041
    8. '(False' → logprob: -7.487612247467041
    9. 'bool' → logprob: -7.862612247467041
    10. '(' → logprob: -8.237611770629883

Token 358: '           ' (ID: 352)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.10577429831027985
    2. ' (' → logprob: -2.980774402618408
    3. '   ' → logprob: -3.605774402618408
    4. '(int' → logprob: -4.605774402618408
    5. '(nums' → logprob: -5.480774402618408
    6. '(list' → logprob: -5.980774402618408
    7. 'bool' → logprob: -6.355774402618408
    8. '(None' → logprob: -7.355774402618408
    9. '(List' → logprob: -7.855774402618408
    10. '(' → logprob: -7.980774402618408

Token 359: ' -' (ID: 533)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.18336735665798187
    2. 'bool' → logprob: -2.0583672523498535
    3. '(dict' → logprob: -3.8083672523498535
    4. 'dict' → logprob: -5.0583672523498535
    5. ' (' → logprob: -6.1833672523498535
    6. '(True' → logprob: -6.3083672523498535
    7. '(nums' → logprob: -6.4333672523498535
    8. '(False' → logprob: -7.5583672523498535
    9. '(d' → logprob: -7.5583672523498535
    10. '   ' → logprob: -7.5583672523498535

Token 360: ' (' (ID: 350)
  Prédit: '(bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bool' → logprob: -0.6443267464637756
    2. 'bool' → logprob: -0.8943267464637756
    3. 'dict' → logprob: -3.394326686859131
    4. '(dict' → logprob: -3.894326686859131
    5. ' bool' → logprob: -6.019326686859131
    6. ' (' → logprob: -6.269326686859131
    7. '(int' → logprob: -6.519326686859131
    8. 'list' → logprob: -7.144326686859131
    9. '(True' → logprob: -7.144326686859131
    10. '(
' → logprob: -7.269326686859131

Token 361: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.7308878898620605
    2. 'False' → logprob: -1.3558878898620605
    3. 'bool' → logprob: -1.8558878898620605
    4. 'dict' → logprob: -2.4808878898620605
    5. 'nums' → logprob: -4.1058878898620605
    6. 'list' → logprob: -7.1058878898620605
    7. '{' → logprob: -7.3558878898620605
    8. 'None' → logprob: -7.6058878898620605
    9. ' True' → logprob: -7.9808878898620605
    10. '[' → logprob: -8.105888366699219

Token 362: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.08944896562025e-05
    2. ')' → logprob: -10.625081062316895
    3. ',)' → logprob: -10.625081062316895
    4. ',
' → logprob: -11.125081062316895
    5. ' ,' → logprob: -11.500081062316895
    6. '<|end|>' → logprob: -12.875081062316895
    7. '),' → logprob: -13.375081062316895
    8. ',),' → logprob: -14.250081062316895
    9. '   ' → logprob: -14.500081062316895
    10. '‌,' → logprob: -14.875081062316895

Token 363: ' nums' (ID: 18117)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.9438036680221558
    2. 'nums' → logprob: -1.4438036680221558
    3. ' False' → logprob: -1.8188036680221558
    4. 'None' → logprob: -2.6938037872314453
    5. ' nums' → logprob: -2.6938037872314453
    6. ' None' → logprob: -3.5688037872314453
    7. 'dict' → logprob: -4.693803787231445
    8. ')' → logprob: -4.818803787231445
    9. 'True' → logprob: -4.943803787231445
    10. ' True' → logprob: -5.318803787231445

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6364850401878357
    2. ')' → logprob: -0.7614850401878357
    3. ',)' → logprob: -6.0114850997924805
    4. '   ' → logprob: -7.3864850997924805
    5. ',
' → logprob: -8.88648509979248
    6. '[root' → logprob: -9.26148509979248
    7. '[u' → logprob: -9.76148509979248
    8. ' )' → logprob: -10.01148509979248
    9. 's' → logprob: -10.01148509979248
    10. 'if' → logprob: -10.38648509979248

Token 365: ' depth' (ID: 13636)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.0780415534973145
    2. 'None' → logprob: -1.4530415534973145
    3. ' None' → logprob: -3.2030415534973145
    4. 'links' → logprob: -3.2030415534973145
    5. ' False' → logprob: -3.3280415534973145
    6. ')' → logprob: -3.3280415534973145
    7. 'edges' → logprob: -4.2030415534973145
    8. 'val' → logprob: -4.3280415534973145
    9. 'visited' → logprob: -4.4530415534973145
    10. 'True' → logprob: -4.8280415534973145

Token 366: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001368807745166123
    2. ',' → logprob: -6.751368999481201
    3. 's' → logprob: -9.251368522644043
    4. ' )' → logprob: -10.376368522644043
    5. '),' → logprob: -11.126368522644043
    6. '   ' → logprob: -11.251368522644043
    7. '[' → logprob: -11.626368522644043
    8. ',)' → logprob: -11.876368522644043
    9. '_)' → logprob: -12.251368522644043
    10. '):' → logprob: -12.626368522644043

Token 367: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.5769630670547485
    2. 'None' → logprob: -1.5769630670547485
    3. ' None' → logprob: -3.201962947845459
    4. ' False' → logprob: -3.514462947845459
    5. 'True' → logprob: -3.951962947845459
    6. ')' → logprob: -4.201962947845459
    7. 'val' → logprob: -4.201962947845459
    8. 'x' → logprob: -4.264462947845459
    9. 'links' → logprob: -4.326962947845459
    10. 'par' → logprob: -4.389462947845459

Token 368: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -2.0453243255615234
    2. 'links' → logprob: -2.0453243255615234
    3. 'par' → logprob: -2.5453243255615234
    4. 'False' → logprob: -2.9203243255615234
    5. 'parent' → logprob: -3.2953243255615234
    6. 'val' → logprob: -3.2953243255615234
    7. 'root' → logprob: -3.6703243255615234
    8. 'edges' → logprob: -3.6703243255615234
    9. 'coeff' → logprob: -3.6703243255615234
    10. 'adj' → logprob: -3.7953243255615234

Token 369: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006459566066041589
    2. ',' → logprob: -7.500646114349365
    3. ' )' → logprob: -10.000645637512207
    4. ',)' → logprob: -10.750645637512207
    5. ')
' → logprob: -11.625645637512207
    6. '   ' → logprob: -12.125645637512207
    7. '),' → logprob: -13.000645637512207
    8. ')`' → logprob: -13.750645637512207
    9. '):' → logprob: -13.875645637512207
    10. ')

' → logprob: -13.875645637512207

Token 370: ' ' (ID: 220)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.3694515228271484
    2. 'False' → logprob: -1.4944515228271484
    3. ')' → logprob: -1.6194515228271484
    4. ' None' → logprob: -1.7444515228271484
    5. ' False' → logprob: -2.6194515228271484
    6. '0' → logprob: -3.1194515228271484
    7. ' )' → logprob: -5.494451522827148
    8. 'True' → logprob: -5.619451522827148
    9. ' True' → logprob: -5.744451522827148
    10. ' ' → logprob: -5.994451522827148

Token 371: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.6125722527503967
    2. '0' → logprob: -1.362572193145752
    3. 'False' → logprob: -1.987572193145752
    4. '[])' → logprob: -4.112572193145752
    5. '{})' → logprob: -4.487572193145752
    6. ')' → logprob: -4.987572193145752
    7. 'True' → logprob: -5.487572193145752
    8. ' None' → logprob: -5.612572193145752
    9. '[]' → logprob: -5.737572193145752
    10. 'links' → logprob: -5.862572193145752

Token 372: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011903452686965466
    2. ',' → logprob: -6.876190185546875
    3. ' )' → logprob: -9.501190185546875
    4. ')
' → logprob: -10.501190185546875
    5. ',)' → logprob: -10.751190185546875
    6. '   ' → logprob: -11.251190185546875
    7. ',
' → logprob: -12.251190185546875
    8. '),' → logprob: -12.376190185546875
    9. ')`' → logprob: -13.626190185546875
    10. '[' → logprob: -13.626190185546875

Token 373: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.148050457239151
    2. ',' → logprob: -2.148050546646118
    3. '<|end|>' → logprob: -4.648050308227539
    4. '   ' → logprob: -5.523050308227539
    5. ',
' → logprob: -5.523050308227539
    6. '
' → logprob: -7.648050308227539
    7. '(' → logprob: -7.898050308227539
    8. ' ' → logprob: -8.023050308227539
    9. ' )' → logprob: -8.023050308227539
    10. '[' → logprob: -8.023050308227539

Token 374: ' le' (ID: 505)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.0733964443206787
    2. 'dfs' → logprob: -1.4483964443206787
    3. ' True' → logprob: -1.5733964443206787
    4. ' la' → logprob: -2.8233964443206787
    5. 'True' → logprob: -2.8233964443206787
    6. ' not' → logprob: -3.8233964443206787
    7. 'not' → logprob: -5.323396682739258
    8. ')' → logprob: -5.323396682739258
    9. ' le' → logprob: -5.448396682739258
    10. ' successful' → logprob: -5.448396682739258

Token 375: ' DFS' (ID: 115767)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -1.7252929210662842
    2. 'dfs' → logprob: -1.8502929210662842
    3. ' next' → logprob: -2.225292921066284
    4. ' root' → logprob: -2.350292921066284
    5. ' DFS' → logprob: -2.475292921066284
    6. ' code' → logprob: -2.850292921066284
    7. ' passage' → logprob: -2.850292921066284
    8. ' graph' → logprob: -3.225292921066284
    9. '    ' → logprob: -3.475292921066284
    10. 'root' → logprob: -3.725292921066284

Token 376: ' s' (ID: 265)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31075605750083923
    2. ' )' → logprob: -2.185755968093872
    3. ' ' → logprob: -3.060755968093872
    4. ' réuss' → logprob: -3.810755968093872
    5. ' successful' → logprob: -3.935755968093872
    6. ',' → logprob: -4.435756206512451
    7. 's' → logprob: -4.685756206512451
    8. ' ,' → logprob: -5.435756206512451
    9. ' successfully' → logprob: -5.560756206512451
    10. ' a' → logprob: -5.685756206512451

Token 377: ''est' (ID: 6616)
  Prédit: 'uc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uc' → logprob: -0.5238067507743835
    2. 'uccess' → logprob: -1.8988068103790283
    3. 'ucceed' → logprob: -2.0238068103790283
    4. 'ucceeded' → logprob: -2.2738068103790283
    5. 'ucc' → logprob: -5.023806571960449
    6. 'u' → logprob: -5.398806571960449
    7. ')' → logprob: -6.148806571960449
    8. 'atisf' → logprob: -6.273806571960449
    9. 'UCCESS' → logprob: -6.273806571960449
    10. 'uit' → logprob: -6.773806571960449

Token 378: ' bien' (ID: 5340)
  Prédit: 'bien'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bien' → logprob: -0.6221482753753662
    2. ' bien' → logprob: -1.2471482753753662
    3. 'termin' → logprob: -2.622148275375366
    4. ')' → logprob: -3.247148275375366
    5. 'ache' → logprob: -4.122148513793945
    6. ' ache' → logprob: -4.747148513793945
    7. ' effectué' → logprob: -5.122148513793945
    8. ' terminé' → logprob: -5.122148513793945
    9. ' dérou' → logprob: -5.497148513793945
    10. ' )' → logprob: -5.997148513793945

Token 379: ' passé' (ID: 40520)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7102107405662537
    2. ' terminé' → logprob: -1.9602108001708984
    3. ' )' → logprob: -2.2102108001708984
    4. ' effectué' → logprob: -2.5852108001708984
    5. ' dérou' → logprob: -2.7102108001708984
    6. 'termin' → logprob: -4.210210800170898
    7. ' bien' → logprob: -4.460210800170898
    8. ' réussi' → logprob: -4.460210800170898
    9. 'arr' → logprob: -4.585210800170898
    10. ',' → logprob: -4.835210800170898

Token 380: ';
' (ID: 307)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.805107057094574
    2. ')' → logprob: -0.930107057094574
    3. ',
' → logprob: -1.9301071166992188
    4. '<|end|>' → logprob: -5.055107116699219
    5. '   ' → logprob: -5.805107116699219
    6. '),' → logprob: -6.680107116699219
    7. '           ' → logprob: -7.430107116699219
    8. ')
' → logprob: -7.680107116699219
    9. '
' → logprob: -8.305107116699219
    10. ' ,' → logprob: -8.680107116699219

Token 381: '           ' (ID: 352)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7799580693244934
    2. '   ' → logprob: -1.5299580097198486
    3. '           ' → logprob: -1.5299580097198486
    4. ',' → logprob: -4.029958248138428
    5. 'False' → logprob: -4.279958248138428
    6. ' ' → logprob: -4.529958248138428
    7. '    ' → logprob: -4.529958248138428
    8. ' False' → logprob: -4.779958248138428
    9. '            ' → logprob: -5.154958248138428
    10. '<|end|>' → logprob: -5.154958248138428

Token 382: ' -' (ID: 533)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06412301957607269
    2. 'False' → logprob: -3.6891229152679443
    3. 'True' → logprob: -4.439123153686523
    4. '   ' → logprob: -5.064123153686523
    5. ' True' → logprob: -5.314123153686523
    6. '(True' → logprob: -5.689123153686523
    7. '(' → logprob: -5.939123153686523
    8. ' False' → logprob: -6.064123153686523
    9. ' (' → logprob: -6.314123153686523
    10. '       ' → logprob: -6.439123153686523

Token 383: ' (' (ID: 350)
  Prédit: '(False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(False' → logprob: -0.19717387855052948
    2. 'False' → logprob: -2.072173833847046
    3. ' (' → logprob: -3.822173833847046
    4. '(True' → logprob: -4.072174072265625
    5. ' False' → logprob: -4.322174072265625
    6. 'True' → logprob: -7.572174072265625
    7. '           ' → logprob: -8.822174072265625
    8. ' True' → logprob: -9.322174072265625
    9. '   ' → logprob: -10.447174072265625
    10. ' ' → logprob: -11.447174072265625

Token 384: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0007326744962483644
    2. 'True' → logprob: -7.250732898712158
    3. ' False' → logprob: -10.875732421875
    4. '(False' → logprob: -13.125732421875
    5. 'None' → logprob: -14.500732421875
    6. ')' → logprob: -15.000732421875
    7. 'Fal' → logprob: -15.375732421875
    8. '0' → logprob: -15.625732421875
    9. '   ' → logprob: -15.625732421875
    10. 'F' → logprob: -16.125732421875

Token 385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006476254784502089
    2. ',)' → logprob: -8.00064754486084
    3. ')' → logprob: -8.62564754486084
    4. ',
' → logprob: -9.75064754486084
    5. ' ,' → logprob: -10.62564754486084
    6. ',),' → logprob: -12.12564754486084
    7. ',:)' → logprob: -12.25064754486084
    8. '<|end|>' → logprob: -12.37564754486084
    9. '   ' → logprob: -12.62564754486084
    10. ',None' → logprob: -12.75064754486084

Token 386: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.17333683371543884
    2. ' nums' → logprob: -2.0483367443084717
    3. 'None' → logprob: -3.9233367443084717
    4. ' None' → logprob: -5.173336982727051
    5. ')' → logprob: -5.923336982727051
    6. '[]' → logprob: -8.04833698272705
    7. '0' → logprob: -8.17333698272705
    8. '[])' → logprob: -8.17333698272705
    9. '[],' → logprob: -8.29833698272705
    10. '{}' → logprob: -9.17333698272705

Token 387: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008296119049191475
    2. ')' → logprob: -4.883296012878418
    3. ',)' → logprob: -7.633296012878418
    4. '[' → logprob: -8.883296012878418
    5. ',
' → logprob: -10.883296012878418
    6. ' ,' → logprob: -11.758296012878418
    7. '   ' → logprob: -12.133296012878418
    8. 's' → logprob: -12.508296012878418
    9. '<|end|>' → logprob: -12.758296012878418
    10. '[user' → logprob: -13.008296012878418

Token 388: ' depth' (ID: 13636)
  Prédit: ' depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' depth' → logprob: -0.4294423758983612
    2. 'depth' → logprob: -1.0544424057006836
    3. '0' → logprob: -8.304442405700684
    4. ',' → logprob: -8.679442405700684
    5. ')' → logprob: -9.179442405700684
    6. ' None' → logprob: -9.929442405700684
    7. ' depths' → logprob: -10.304442405700684
    8. 'None' → logprob: -10.554442405700684
    9. '(depth' → logprob: -10.679442405700684
    10. ' ' → logprob: -10.929442405700684

Token 389: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.32523515378125e-05
    2. ')' → logprob: -10.500062942504883
    3. '[' → logprob: -11.125062942504883
    4. ',
' → logprob: -11.500062942504883
    5. ' ,' → logprob: -12.250062942504883
    6. ',)' → logprob: -13.000062942504883
    7. '   ' → logprob: -14.875062942504883
    8. 's' → logprob: -14.875062942504883
    9. '0' → logprob: -15.000062942504883
    10. '<|end|>' → logprob: -15.375062942504883

Token 390: ' start' (ID: 1604)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5515750646591187
    2. '0' → logprob: -1.9265750646591187
    3. 'a' → logprob: -2.676575183868408
    4. 'None' → logprob: -2.801575183868408
    5. 'c' → logprob: -3.176575183868408
    6. 'ans' → logprob: -3.426575183868408
    7. 'val' → logprob: -3.551575183868408
    8. '1' → logprob: -3.551575183868408
    9. 'l' → logprob: -3.676575183868408
    10. 's' → logprob: -3.801575183868408

Token 391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10959699749946594
    2. ')' → logprob: -3.3595969676971436
    3. '_' → logprob: -3.8595969676971436
    4. '_,' → logprob: -4.109597206115723
    5. ',_' → logprob: -4.859597206115723
    6. '_cycle' → logprob: -5.609597206115723
    7. ')_' → logprob: -5.734597206115723
    8. '_point' → logprob: -5.859597206115723
    9. '_vertex' → logprob: -5.984597206115723
    10. '_)' → logprob: -6.234597206115723

Token 392: ' val' (ID: 1459)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.5682865381240845
    2. '0' → logprob: -2.443286418914795
    3. 'root' → logprob: -2.818286418914795
    4. '1' → logprob: -3.318286418914795
    5. ')' → logprob: -3.318286418914795
    6. 'u' → logprob: -3.443286418914795
    7. 'val' → logprob: -3.943286418914795
    8. 'value' → logprob: -3.943286418914795
    9. 's' → logprob: -4.068286418914795
    10. 'start' → logprob: -4.443286418914795

Token 393: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037032817490398884
    2. ' )' → logprob: -6.6287031173706055
    3. 'e' → logprob: -7.0037031173706055
    4. '_)' → logprob: -7.6287031173706055
    5. ',' → logprob: -8.628703117370605
    6. '=' → logprob: -9.128703117370605
    7. '[' → logprob: -9.128703117370605
    8. ')
' → logprob: -9.253703117370605
    9. '_' → logprob: -9.378703117370605
    10. '))' → logprob: -9.628703117370605

Token 394: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5962176322937012
    2. '):' → logprob: -1.2212176322937012
    3. ':' → logprob: -1.9712176322937012
    4. '   ' → logprob: -4.846217632293701
    5. '):
' → logprob: -6.096217632293701
    6. ',' → logprob: -6.096217632293701
    7. '[' → logprob: -7.596217632293701
    8. ':
' → logprob: -7.971217632293701
    9. '_' → logprob: -8.47121810913086
    10. '
' → logprob: -8.59621810913086

Token 395: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.9822785258293152
    2. 'False' → logprob: -1.73227858543396
    3. ' False' → logprob: -1.73227858543396
    4. ' le' → logprob: -3.35727858543396
    5. ' dfs' → logprob: -3.35727858543396
    6. 'dfs' → logprob: -3.60727858543396
    7. ' not' → logprob: -3.85727858543396
    8. ' la' → logprob: -3.98227858543396
    9. ' une' → logprob: -4.107278347015381
    10. 'not' → logprob: -4.107278347015381

Token 396: ' aberr' (ID: 140530)
  Prédit: ' conflict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' conflict' → logprob: -0.7435680627822876
    2. 'con' → logprob: -1.2435680627822876
    3. 'conf' → logprob: -2.118567943572998
    4. ' conflit' → logprob: -2.368567943572998
    5. '_con' → logprob: -4.868567943572998
    6. ')' → logprob: -5.993567943572998
    7. ' conflicto' → logprob: -6.243567943572998
    8. ' ' → logprob: -6.368567943572998
    9. '_conf' → logprob: -6.618567943572998
    10. 'contr' → logprob: -6.993567943572998

Token 397: 'ation' (ID: 387)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.2406251430511475
    2. 'ant' → logprob: -1.6156251430511475
    3. 'u' → logprob: -2.3656251430511475
    4. 'a' → logprob: -2.3656251430511475
    5. 'ation' → logprob: -2.3656251430511475
    6. 'rance' → logprob: -3.1156251430511475
    7. 'reur' → logprob: -3.6156251430511475
    8. 'ru' → logprob: -3.7406251430511475
    9. ')' → logprob: -3.8656251430511475
    10. 'e' → logprob: -3.9906251430511475

Token 398: ' r' (ID: 428)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11034328490495682
    2. ' a' → logprob: -3.6103432178497314
    3. ' est' → logprob: -4.1103434562683105
    4. ',' → logprob: -4.2353434562683105
    5. '_' → logprob: -4.3603434562683105
    6. ' s' → logprob: -4.4853434562683105
    7. ' )' → logprob: -4.4853434562683105
    8. ' is' → logprob: -5.8603434562683105
    9. ' ' → logprob: -5.9853434562683105
    10. 's' → logprob: -7.3603434562683105

Token 399: 'attr' (ID: 6035)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5630167722702026
    2. 'e' → logprob: -1.5630167722702026
    3. ')' → logprob: -2.188016891479492
    4. 'a' → logprob: -3.438016891479492
    5. 'eturn' → logprob: -4.438016891479492
    6. 'é' → logprob: -4.563016891479492
    7. 'és' → logprob: -4.813016891479492
    8. '=' → logprob: -5.313016891479492
    9. '_' → logprob: -5.813016891479492
    10. 'aise' → logprob: -5.938016891479492

Token 400: 'ap' (ID: 403)
  Prédit: 'ap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.21152952313423157
    2. 'op' → logprob: -1.8365294933319092
    3. 'ivée' → logprob: -4.086529731750488
    4. 'ov' → logprob: -5.711529731750488
    5. 'apé' → logprob: -5.711529731750488
    6. 'app' → logprob: -6.211529731750488
    7. '   ' → logprob: -7.086529731750488
    8. 'o' → logprob: -7.586529731750488
    9. 'ouv' → logprob: -7.961529731750488
    10. 'ape' → logprob: -8.086529731750488

Token 401: 'able' (ID: 562)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.010791710577905178
    2. 'e' → logprob: -5.635791778564453
    3. 'é' → logprob: -6.135791778564453
    4. 'ee' → logprob: -6.135791778564453
    5. 'ap' → logprob: -6.760791778564453
    6. 'ape' → logprob: -8.385791778564453
    7. 't' → logprob: -9.010791778564453
    8. 'er' → logprob: -9.260791778564453
    9. 'rée' → logprob: -9.510791778564453
    10. 'ait' → logprob: -9.510791778564453

Token 402: ' dans' (ID: 2671)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007048065308481455
    2. '_' → logprob: -8.000704765319824
    3. ' )' → logprob: -8.875704765319824
    4. ',' → logprob: -9.500704765319824
    5. '_)' → logprob: -10.250704765319824
    6. ' a' → logprob: -10.625704765319824
    7. ' est' → logprob: -10.750704765319824
    8. 'a' → logprob: -11.000704765319824
    9. ')_' → logprob: -11.750704765319824
    10. ' ' → logprob: -12.000704765319824

Token 403: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6904552578926086
    2. 'le' → logprob: -2.065455198287964
    3. 'un' → logprob: -2.440455198287964
    4. ' la' → logprob: -2.690455198287964
    5. 'la' → logprob: -2.940455198287964
    6. 'une' → logprob: -3.440455198287964
    7. 'l' → logprob: -3.690455198287964
    8. ' le' → logprob: -3.690455198287964
    9. 'dfs' → logprob: -3.690455198287964
    10. ' une' → logprob: -4.440455436706543

Token 404: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.19637753069400787
    2. ' cycle' → logprob: -1.9463775157928467
    3. ')' → logprob: -3.6963775157928467
    4. 'c' → logprob: -5.571377754211426
    5. 'dfs' → logprob: -6.321377754211426
    6. 'graph' → logprob: -6.571377754211426
    7. 'cycl' → logprob: -7.821377754211426
    8. ' DFS' → logprob: -7.821377754211426
    9. ' graph' → logprob: -7.946377754211426
    10. ' ' → logprob: -7.946377754211426

Token 405: ' impair' (ID: 64113)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1591029167175293
    2. 'imp' → logprob: -1.1591029167175293
    3. '_imp' → logprob: -1.5341029167175293
    4. '_' → logprob: -2.6591029167175293
    5. 'im' → logprob: -3.0341029167175293
    6. 'odd' → logprob: -4.284102916717529
    7. '_im' → logprob: -4.909102916717529
    8. ' impair' → logprob: -5.034102916717529
    9. ',' → logprob: -6.284102916717529
    10. '),' → logprob: -7.159102916717529

Token 406: ' a' (ID: 261)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.036660999059677124
    2. ')' → logprob: -3.78666090965271
    3. '):
' → logprob: -4.536661148071289
    4. ':' → logprob: -6.161661148071289
    5. '   ' → logprob: -8.661661148071289
    6. ',' → logprob: -8.786661148071289
    7. 'def' → logprob: -9.911661148071289
    8. '):
' → logprob: -10.911661148071289
    9. ' ):' → logprob: -11.036661148071289
    10. ')
' → logprob: -11.161661148071289

Token 407: ' été' (ID: 9799)
  Prédit: 'été'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'été' → logprob: -0.2415955364704132
    2. ' été' → logprob: -1.7415955066680908
    3. 'produ' → logprob: -4.86659574508667
    4. 'v' → logprob: -5.36659574508667
    5. 'prés' → logprob: -5.36659574508667
    6. ' produit' → logprob: -5.49159574508667
    7. ' détect' → logprob: -5.86659574508667
    8. ')' → logprob: -6.24159574508667
    9. 'detect' → logprob: -6.36659574508667
    10. ' trouvé' → logprob: -6.61659574508667

Token 408: ' trouv' (ID: 40254)
  Prédit: 'detect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'detect' → logprob: -0.5497918128967285
    2. ' détect' → logprob: -1.9247918128967285
    3. 'ren' → logprob: -2.0497918128967285
    4. 'det' → logprob: -3.0497918128967285
    5. 'dé' → logprob: -3.0497918128967285
    6. 'tr' → logprob: -3.9247918128967285
    7. ' rencontré' → logprob: -4.4247918128967285
    8. ')' → logprob: -5.4247918128967285
    9. ' rencontr' → logprob: -5.7997918128967285
    10. 'd' → logprob: -5.7997918128967285

Token 409: 'ée' (ID: 2894)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04817234352231026
    2. 'é' → logprob: -3.5481722354888916
    3. 'ée' → logprob: -4.798172473907471
    4. ',' → logprob: -5.173172473907471
    5. 'e' → logprob: -5.923172473907471
    6. '")' → logprob: -7.673172473907471
    7. '),' → logprob: -7.798172473907471
    8. ')
' → logprob: -8.048171997070312
    9. '')' → logprob: -9.298171997070312
    10. '_' → logprob: -9.673171997070312

Token 410: ',
' (ID: 412)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7786712646484375
    2. ':' → logprob: -1.0286712646484375
    3. '   ' → logprob: -2.6536712646484375
    4. '):
' → logprob: -2.7786712646484375
    5. ')' → logprob: -3.5286712646484375
    6. ':
' → logprob: -4.1536712646484375
    7. ',' → logprob: -6.2786712646484375
    8. 'def' → logprob: -6.4036712646484375
    9. '
' → logprob: -6.7786712646484375
    10. ',
' → logprob: -8.903671264648438

Token 411: '             ' (ID: 1698)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07403863966464996
    2. '   ' → logprob: -2.8240387439727783
    3. ',' → logprob: -5.199038505554199
    4. ' )' → logprob: -5.824038505554199
    5. '    ' → logprob: -6.574038505554199
    6. '):' → logprob: -6.949038505554199
    7. '       ' → logprob: -8.1990385055542
    8. ')
' → logprob: -8.6990385055542
    9. '           ' → logprob: -8.6990385055542
    10. ' ,' → logprob: -9.4490385055542

Token 412: ' on' (ID: 402)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1267053782939911
    2. 'False' → logprob: -3.0017054080963135
    3. ' False' → logprob: -4.001705169677734
    4. ' )' → logprob: -4.251705169677734
    5. ' True' → logprob: -4.376705169677734
    6. 'True' → logprob: -4.626705169677734
    7. '0' → logprob: -5.501705169677734
    8. '   ' → logprob: -6.126705169677734
    9. '    ' → logprob: -6.251705169677734
    10. ',' → logprob: -6.626705169677734

Token 413: ' retourne' (ID: 178818)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4846738278865814
    2. ' return' → logprob: -2.1096737384796143
    3. 'return' → logprob: -3.1096737384796143
    4. ' continue' → logprob: -3.3596737384796143
    5. ' )' → logprob: -3.4846737384796143
    6. ',' → logprob: -3.7346737384796143
    7. 'continue' → logprob: -3.8596737384796143
    8. 's' → logprob: -4.359673976898193
    9. ' s' → logprob: -4.609673976898193
    10. ' retourne' → logprob: -4.734673976898193

Token 414: ' la' (ID: 557)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.22782103717327118
    2. '(False' → logprob: -2.352821111679077
    3. ' False' → logprob: -2.977821111679077
    4. '(' → logprob: -4.602820873260498
    5. 'True' → logprob: -4.602820873260498
    6. '(True' → logprob: -4.727820873260498
    7. 'root' → logprob: -4.852820873260498
    8. '(root' → logprob: -4.977820873260498
    9. ' (' → logprob: -5.227820873260498
    10. 'nums' → logprob: -6.227820873260498

Token 415: ' rac' (ID: 12334)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.424817442893982
    2. 'False' → logprob: -1.924817442893982
    3. 'dfs' → logprob: -1.924817442893982
    4. ' False' → logprob: -2.0498175621032715
    5. ' tuple' → logprob: -3.0498175621032715
    6. ' dfs' → logprob: -3.1748175621032715
    7. 'val' → logprob: -3.4248175621032715
    8. ' (' → logprob: -4.0498175621032715
    9. 'nums' → logprob: -4.1748175621032715
    10. ' val' → logprob: -4.2998175621032715

Token 416: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.00047487911069765687
    2. '   ' → logprob: -9.12547492980957
    3. 'e' → logprob: -9.62547492980957
    4. ')' → logprob: -9.62547492980957
    5. '```' → logprob: -10.25047492980957
    6. '
' → logprob: -11.25047492980957
    7. '`' → logprob: -11.37547492980957
    8. 'c' → logprob: -11.50047492980957
    9. 'i' → logprob: -11.50047492980957
    10. '>' → logprob: -11.62547492980957

Token 417: ' du' (ID: 1462)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1807418018579483
    2. ',' → logprob: -1.805741786956787
    3. ')
' → logprob: -7.805741786956787
    4. ',)' → logprob: -8.805742263793945
    5. '),' → logprob: -9.055742263793945
    6. ',
' → logprob: -9.305742263793945
    7. ' )' → logprob: -10.305742263793945
    8. '_,' → logprob: -11.055742263793945
    9. '}' → logprob: -11.180742263793945
    10. ')
' → logprob: -11.180742263793945

Token 418: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.5254337787628174
    2. ' cycle' → logprob: -0.9004337787628174
    3. 'c' → logprob: -6.900433540344238
    4. 'dfs' → logprob: -7.150433540344238
    5. '_cycle' → logprob: -9.150433540344238
    6. ' DFS' → logprob: -9.400433540344238
    7. 'con' → logprob: -10.275433540344238
    8. ' dfs' → logprob: -10.400433540344238
    9. 'DFS' → logprob: -10.525433540344238
    10. 'cycl' → logprob: -10.525433540344238

Token 419: ' et' (ID: 859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47739237546920776
    2. ',' → logprob: -0.9773923754692078
    3. '),' → logprob: -6.852392196655273
    4. ',)' → logprob: -7.852392196655273
    5. ').' → logprob: -8.352392196655273
    6. ',
' → logprob: -8.352392196655273
    7. '):' → logprob: -8.477392196655273
    8. ' ,' → logprob: -8.602392196655273
    9. '.' → logprob: -8.602392196655273
    10. ')
' → logprob: -8.977392196655273

Token 420: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.4102747142314911
    2. ' la' → logprob: -1.2852747440338135
    3. 'l' → logprob: -3.7852747440338135
    4. 'le' → logprob: -4.035274505615234
    5. ' l' → logprob: -4.535274505615234
    6. 'val' → logprob: -5.285274505615234
    7. ' sa' → logprob: -7.160274505615234
    8. '#' → logprob: -7.410274505615234
    9. 'the' → logprob: -7.535274505615234
    10. ' le' → logprob: -7.910274505615234

Token 421: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.0029456093907356262
    2. ' valeur' → logprob: -6.502945423126221
    3. ' val' → logprob: -7.502945423126221
    4. 'value' → logprob: -8.002945899963379
    5. 'diff' → logprob: -8.877945899963379
    6. 's' → logprob: -9.627945899963379
    7. 'v' → logprob: -10.377945899963379
    8. 'contr' → logprob: -10.627945899963379
    9. 'solution' → logprob: -10.752945899963379
    10. 'variable' → logprob: -10.877945899963379

Token 422: ' impos' (ID: 12130)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7133122086524963
    2. ')' → logprob: -1.3383121490478516
    3. ',' → logprob: -2.3383121490478516
    4. '   ' → logprob: -2.4633121490478516
    5. '
' → logprob: -3.4633121490478516
    6. '):
' → logprob: -3.9633121490478516
    7. ':' → logprob: -4.838312149047852
    8. 'def' → logprob: -6.463312149047852
    9. ',
' → logprob: -6.588312149047852
    10. ')
' → logprob: -7.213312149047852

Token 423: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0009773134952411056
    2. 'é' → logprob: -7.000977516174316
    3. 'ee' → logprob: -10.500977516174316
    4. 'e' → logprob: -11.750977516174316
    5. '   ' → logprob: -12.125977516174316
    6. 'rée' → logprob: -12.500977516174316
    7. '#' → logprob: -12.625977516174316
    8. 'ante' → logprob: -12.625977516174316
    9. 'ées' → logprob: -13.500977516174316
    10. 'éd' → logprob: -13.625977516174316

Token 424: '.
' (ID: 558)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.13082024455070496
    2. ')' → logprob: -2.6308202743530273
    3. ',' → logprob: -3.8808202743530273
    4. '):
' → logprob: -4.630820274353027
    5. '
' → logprob: -4.755820274353027
    6. ':' → logprob: -5.130820274353027
    7. '   ' → logprob: -5.380820274353027
    8. 'def' → logprob: -8.255820274353027
    9. ',
' → logprob: -8.380820274353027
    10. ')
' → logprob: -9.880820274353027

Token 425: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5136499404907227
    2. '):' → logprob: -1.5136499404907227
    3. '   ' → logprob: -1.7636499404907227
    4. '):
' → logprob: -5.763649940490723
    5. ',' → logprob: -6.013649940490723
    6. '
' → logprob: -6.388649940490723
    7. ')
' → logprob: -6.888649940490723
    8. 'def' → logprob: -7.388649940490723
    9. '```' → logprob: -8.138649940490723
    10. ':' → logprob: -8.263649940490723

Token 426: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17585763335227966
    2. ')' → logprob: -1.925857663154602
    3. '):' → logprob: -4.5508575439453125
    4. '"""' → logprob: -6.3008575439453125
    5. '
' → logprob: -6.9258575439453125
    6. '):
' → logprob: -7.5508575439453125
    7. ':' → logprob: -7.6758575439453125
    8. ' )' → logprob: -8.675857543945312
    9. '    
' → logprob: -8.800857543945312
    10. ' ' → logprob: -9.175857543945312

Token 427: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013913080329075456
    2. 'def' → logprob: -7.876391410827637
    3. '	n' → logprob: -7.876391410827637
    4. '	num' → logprob: -8.376391410827637
    5. 'nums' → logprob: -9.251391410827637
    6. '	def' → logprob: -9.751391410827637
    7. ' nums' → logprob: -9.876391410827637
    8. '	t' → logprob: -10.251391410827637
    9. '	global' → logprob: -10.626391410827637
    10. '   ' → logprob: -11.001391410827637

Token 428: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' (adapté à ' nums') → logprob: -0.4222203195095062
    2. 'stack' → logprob: -1.2972203493118286
    3. '   ' → logprob: -3.297220230102539
    4. 'visited' → logprob: -4.172220230102539
    5. 'global' → logprob: -4.297220230102539
    6. 'from' → logprob: -5.797220230102539
    7. ' stack' → logprob: -7.297220230102539
    8. 'num' → logprob: -8.047220230102539
    9. 'import' → logprob: -8.172220230102539
    10. 'seen' → logprob: -8.922220230102539

Token 429: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06258273124694824
    2. '=' → logprob: -2.8125827312469482
    3. '[root' → logprob: -7.687582969665527
    4. ',' → logprob: -9.312582969665527
    5. '=[' → logprob: -10.187582969665527
    6. '   ' → logprob: -10.812582969665527
    7. '=root' → logprob: -13.062582969665527
    8. ' ' → logprob: -13.437582969665527
    9. ' =[' → logprob: -13.687582969665527
    10. '    ' → logprob: -13.937582969665527

Token 430: ' [' (ID: 723)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.4244301915168762
    2. '{' → logprob: -1.1744301319122314
    3. '[' → logprob: -4.2994303703308105
    4. '[n' → logprob: -4.4244303703308105
    5. '{}' → logprob: -5.1744303703308105
    6. '{-' → logprob: -5.4244303703308105
    7. 'dict' → logprob: -7.1744303703308105
    8. '{}
' → logprob: -9.299429893493652
    9. '[int' → logprob: -10.299429893493652
    10. ' [-' → logprob: -10.299429893493652

Token 431: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.011320486664772034
    2. '0' → logprob: -5.1363205909729
    3. '-' → logprob: -5.2613205909729
    4. 'False' → logprob: -9.761320114135742
    5. ' None' → logprob: -10.011320114135742
    6. 'float' → logprob: -10.386320114135742
    7. '[' → logprob: -12.011320114135742
    8. '10' → logprob: -12.261320114135742
    9. '
' → logprob: -12.261320114135742
    10. '100' → logprob: -12.636320114135742

Token 432: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.023786693811416626
    2. ']*(' → logprob: -3.773786783218384
    3. ']*' → logprob: -8.523786544799805
    4. ' for' → logprob: -8.773786544799805
    5. 'for' → logprob: -9.023786544799805
    6. ']+' → logprob: -9.898786544799805
    7. ' ]' → logprob: -11.398786544799805
    8. '   ' → logprob: -12.648786544799805
    9. ',' → logprob: -14.273786544799805
    10. '(n' → logprob: -15.273786544799805

Token 433: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8839060664176941
    2. ' *' → logprob: -1.0089061260223389
    3. '
' → logprob: -2.383906126022339
    4. '<|end|>' → logprob: -3.383906126022339
    5. '*n' → logprob: -3.633906126022339
    6. '   ' → logprob: -4.25890588760376
    7. ' for' → logprob: -4.63390588760376
    8. ']' → logprob: -5.00890588760376
    9. '+' → logprob: -5.25890588760376
    10. ')' → logprob: -5.38390588760376

Token 434: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015478975547011942
    2. '(len' → logprob: -9.250154495239258
    3. ' (' → logprob: -9.875154495239258
    4. '(' → logprob: -12.125154495239258
    5. '((' → logprob: -14.750154495239258
    6. '(N' → logprob: -15.000154495239258
    7. '   ' → logprob: -15.000154495239258
    8. '(max' → logprob: -15.125154495239258
    9. '(root' → logprob: -16.125154495239258
    10. 'n' → logprob: -17.125154495239258

Token 435: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02328786998987198
    2. '(n' → logprob: -3.773287773132324
    3. ' n' → logprob: -10.398287773132324
    4. ' (' → logprob: -11.523287773132324
    5. 'len' → logprob: -14.023287773132324
    6. '(' → logprob: -14.523287773132324
    7. '   ' → logprob: -15.523287773132324
    8. '(len' → logprob: -16.14828872680664
    9. '[n' → logprob: -16.27328872680664
    10. '	n' → logprob: -16.27328872680664

Token 436: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.666993507067673e-05
    2. ' +' → logprob: -10.250036239624023
    3. '+
' → logprob: -13.625036239624023
    4. '+n' → logprob: -18.375036239624023
    5. '
' → logprob: -18.625036239624023
    6. '+)' → logprob: -18.875036239624023
    7. '+[' → logprob: -19.625036239624023
    8. ' +
' → logprob: -19.875036239624023
    9. '[' → logprob: -19.875036239624023
    10. '＋' → logprob: -20.125036239624023

Token 437: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.176947600673884e-05
    2. '2' → logprob: -11.625021934509277
    3. ' ' → logprob: -11.875021934509277
    4. '10' → logprob: -13.250021934509277
    5. '5' → logprob: -13.500021934509277
    6. '(' → logprob: -14.250021934509277
    7. '7' → logprob: -14.625021934509277
    8. '
' → logprob: -14.625021934509277
    9. '6' → logprob: -15.000021934509277
    10. '   ' → logprob: -15.375021934509277

Token 438: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47414660453796387
    2. ')
' → logprob: -0.9741466045379639
    3. ')
' → logprob: -10.474146842956543
    4. ' )
' → logprob: -10.599146842956543
    5. ' )' → logprob: -11.599146842956543
    6. ')

' → logprob: -12.724146842956543
    7. '
' → logprob: -12.974146842956543
    8. '   ' → logprob: -13.724146842956543
    9. ',' → logprob: -15.724146842956543
    10. '),' → logprob: -15.849146842956543

Token 439: '     ' (ID: 530)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08963250368833542
    2. 'nums' → logprob: -2.964632511138916
    3. '   ' → logprob: -4.214632511138916
    4. '<|end|>' → logprob: -4.589632511138916
    5. '    
' → logprob: -6.089632511138916
    6. '	
' → logprob: -6.214632511138916
    7. ' nums' → logprob: -6.839632511138916
    8. '
' → logprob: -7.464632511138916
    9. '	num' → logprob: -7.714632511138916
    10. 'num' → logprob: -7.964632511138916

Token 440: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20726318657398224
    2. 'nums' → logprob: -1.7072632312774658
    3. '<|end|>' → logprob: -6.207262992858887
    4. '
' → logprob: -6.957262992858887
    5. '   ' → logprob: -7.207262992858887
    6. ' nums' → logprob: -7.707262992858887
    7. ',' → logprob: -8.332262992858887
    8. '    
' → logprob: -8.332262992858887
    9. 'num' → logprob: -8.457262992858887
    10. ')' → logprob: -8.707262992858887

Token 441: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.00372728006914258
    2. 'visited' → logprob: -5.878727436065674
    3. 'stack' → logprob: -7.378727436065674
    4. ' nums' → logprob: -8.628726959228516
    5. 'num' → logprob: -10.753726959228516
    6. ' visited' → logprob: -11.253726959228516
    7. 'used' → logprob: -11.503726959228516
    8. 'depth' → logprob: -11.628726959228516
    9. 'numbers' → logprob: -11.628726959228516
    10. 'seen' → logprob: -11.753726959228516

Token 442: '[i' (ID: 1768)
  Prédit: '[root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[root' → logprob: -0.10597933083772659
    2. '<|end|>' → logprob: -3.1059794425964355
    3. ' =' → logprob: -3.7309794425964355
    4. '[' → logprob: -3.9809794425964355
    5. '[:]' → logprob: -5.3559794425964355
    6. 'nums' → logprob: -6.3559794425964355
    7. '<|end|>' → logprob: -6.6059794425964355
    8. '=' → logprob: -6.8559794425964355
    9. '   ' → logprob: -7.2309794425964355
    10. '
' → logprob: -7.7309794425964355

Token 443: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02767961658537388
    2. ']=' → logprob: -4.527679443359375
    3. '=' → logprob: -5.402679443359375
    4. ' ]' → logprob: -5.527679443359375
    5. '])' → logprob: -5.527679443359375
    6. ' =' → logprob: -6.527679443359375
    7. ')' → logprob: -6.777679443359375
    8. '[i' → logprob: -7.652679443359375
    9. '[' → logprob: -8.402679443359375
    10. 'nums' → logprob: -8.652679443359375

Token 444: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.349089115858078
    2. '=' → logprob: -1.2240891456604004
    3. '[' → logprob: -7.7240891456604
    4. ' ' → logprob: -9.974088668823242
    5. '<|end|>' → logprob: -10.224088668823242
    6. ',' → logprob: -10.474088668823242
    7. ']' → logprob: -11.224088668823242
    8. 'nums' → logprob: -11.349088668823242
    9. '[i' → logprob: -11.474088668823242
    10. ' =
' → logprob: -11.849088668823242

Token 445: ' valeur' (ID: 41664)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.1734188199043274
    2. 'init' → logprob: -2.0484187602996826
    3. '-' → logprob: -4.298418998718262
    4. 'nums' → logprob: -4.923418998718262
    5. '0' → logprob: -5.173418998718262
    6. ' None' → logprob: -5.923418998718262
    7. '   ' → logprob: -9.048418998718262
    8. ' -' → logprob: -9.048418998718262
    9. 'int' → logprob: -9.173418998718262
    10. ' init' → logprob: -9.548418998718262

Token 446: ' assign' (ID: 14975)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9793971180915833
    2. 'assign' → logprob: -1.1043970584869385
    3. '[i' → logprob: -2.3543970584869385
    4. ' assign' → logprob: -2.4793970584869385
    5. ' assigned' → logprob: -3.6043970584869385
    6. ' i' → logprob: -3.7293970584869385
    7. 'assigned' → logprob: -4.729397296905518
    8. ' à' → logprob: -4.979397296905518
    9. '  ' → logprob: -5.104397296905518
    10. ' ' → logprob: -5.229397296905518

Token 447: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.015059741213917732
    2. 'é' → logprob: -4.265059947967529
    3. '   ' → logprob: -7.390059947967529
    4. '=' → logprob: -8.765059471130371
    5. 'e' → logprob: -10.140059471130371
    6. '[' → logprob: -10.890059471130371
    7. 'er' → logprob: -11.140059471130371
    8. ' ' → logprob: -11.640059471130371
    9. ' =' → logprob: -12.015059471130371
    10. 'ee' → logprob: -12.140059471130371

Token 448: ' au' (ID: 2791)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 449: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0010603178525343537
    2. ' i' → logprob: -6.876060485839844
    3. 'som' → logprob: -11.001060485839844
    4. ' sommet' → logprob: -12.126060485839844
    5. 'node' → logprob: -12.876060485839844
    6. ')' → logprob: -14.626060485839844
    7. '   ' → logprob: -15.126060485839844
    8. '
' → logprob: -15.251060485839844
    9. 'no' → logprob: -15.251060485839844
    10. ' ' → logprob: -15.501060485839844

Token 450: ' i' (ID: 575)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029292626306414604
    2. 's' → logprob: -4.029292583465576
    3. '
' → logprob: -6.279292583465576
    4. '[' → logprob: -6.404292583465576
    5. '   ' → logprob: -6.404292583465576
    6. '[i' → logprob: -6.904292583465576
    7. '  
' → logprob: -7.654292583465576
    8. '    
' → logprob: -7.779292583465576
    9. '[:]' → logprob: -7.904292583465576
    10. ',' → logprob: -8.029293060302734

Token 451: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05583151802420616
    2. 'nums' → logprob: -3.3058314323425293
    3. '<|end|>' → logprob: -4.805831432342529
    4. '   ' → logprob: -5.555831432342529
    5. '    
' → logprob: -6.805831432342529
    6. '\n' → logprob: -7.305831432342529
    7. '
' → logprob: -7.555831432342529
    8. ' nums' → logprob: -7.930831432342529
    9. ',' → logprob: -8.055831909179688
    10. '[' → logprob: -8.305831909179688

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3324507772922516
    2. ' nums' → logprob: -2.0824508666992188
    3. 'nums' → logprob: -2.2074508666992188
    4. 'depth' → logprob: -4.457450866699219
    5. ' visited' → logprob: -5.082450866699219
    6. ' depth' → logprob: -5.082450866699219
    7. ' ' → logprob: -5.707450866699219
    8. 'dfs' → logprob: -5.832450866699219
    9. ' dfs' → logprob: -5.832450866699219
    10. 'visited' → logprob: -5.957450866699219

Token 453: ' depth' (ID: 13636)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1788150519132614
    2. 'visited' → logprob: -2.5538151264190674
    3. 'stack' → logprob: -2.9288151264190674
    4. 'depth' (adapté à ' depth') → logprob: -3.6788151264190674
    5. 'used' → logprob: -5.678814888000488
    6. 'seen' → logprob: -6.553814888000488
    7. 'vals' → logprob: -7.803814888000488
    8. 'vis' → logprob: -8.303814888000488
    9. 'assigned' → logprob: -8.678814888000488
    10. 'colors' → logprob: -8.928814888000488

Token 454: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31327101588249207
    2. ' =' → logprob: -1.3132710456848145
    3. '=[' → logprob: -13.063270568847656
    4. '[' → logprob: -13.438270568847656
    5. '=[]' → logprob: -13.563270568847656
    6. ')' → logprob: -13.813270568847656
    7. ',' → logprob: -14.063270568847656
    8. ' ' → logprob: -14.438270568847656
    9. ']' → logprob: -14.563270568847656
    10. '   ' → logprob: -14.688270568847656

Token 455: ' [-' (ID: 20191)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16152171790599823
    2. '[-' → logprob: -1.9115216732025146
    3. ' [' → logprob: -6.911521911621094
    4. '[n' → logprob: -8.786521911621094
    5. ' [-' → logprob: -8.911521911621094
    6. '   ' → logprob: -12.161521911621094
    7. '{' → logprob: -12.286521911621094
    8. '{}' → logprob: -14.036521911621094
    9. ' ' → logprob: -14.286521911621094
    10. '{-' → logprob: -15.161521911621094

Token 456: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '-' → logprob: -14.000001907348633
    3. '2' → logprob: -14.000001907348633
    4. ' ' → logprob: -15.375001907348633
    5. '(' → logprob: -16.750001907348633
    6. '
' → logprob: -17.437501907348633
    7. 'n' → logprob: -17.562501907348633
    8. ' -' → logprob: -17.562501907348633
    9. '11' → logprob: -18.000001907348633
    10. '   ' → logprob: -18.000001907348633

Token 457: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02233041077852249
    2. ')' → logprob: -4.522330284118652
    3. ' for' → logprob: -4.897330284118652
    4. ']*(' → logprob: -6.397330284118652
    5. 'for' → logprob: -7.522330284118652
    6. ',' → logprob: -7.647330284118652
    7. ' ]' → logprob: -8.022330284118652
    8. ' *' → logprob: -8.272330284118652
    9. ']*' → logprob: -9.022330284118652
    10. '<|end|>' → logprob: -9.147330284118652

Token 458: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.08147086203098297
    2. '*' → logprob: -2.8314709663391113
    3. '(n' → logprob: -4.831470966339111
    4. ' (' → logprob: -5.706470966339111
    5. '*(' → logprob: -5.706470966339111
    6. ' ' → logprob: -6.206470966339111
    7. ')' → logprob: -6.831470966339111
    8. '   ' → logprob: -7.706470966339111
    9. ' for' → logprob: -8.081470489501953
    10. ',' → logprob: -8.331470489501953

Token 459: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029816221445798874
    2. ' (' → logprob: -3.529816150665283
    3. 'n' → logprob: -10.279816627502441
    4. '   ' → logprob: -11.029816627502441
    5. '(' → logprob: -11.654816627502441
    6. '(len' → logprob: -12.654816627502441
    7. ' ' → logprob: -13.904816627502441
    8. '  ' → logprob: -14.154816627502441
    9. ' n' → logprob: -14.904816627502441
    10. '
' → logprob: -15.029816627502441

Token 460: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.34881794452667236
    2. '(n' → logprob: -1.2238179445266724
    3. ' (' → logprob: -8.098817825317383
    4. ' n' → logprob: -10.223817825317383
    5. '
' → logprob: -11.348817825317383
    6. '(' → logprob: -12.098817825317383
    7. 'len' → logprob: -12.723817825317383
    8. '   ' → logprob: -12.723817825317383
    9. '(len' → logprob: -13.223817825317383
    10. ',n' → logprob: -13.973817825317383

Token 461: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5094070477061905e-05
    2. ' +' → logprob: -11.375015258789062
    3. '+
' → logprob: -13.875015258789062
    4. '1' → logprob: -14.000015258789062
    5. '
' → logprob: -14.875015258789062
    6. '+n' → logprob: -14.875015258789062
    7. 'n' → logprob: -15.250015258789062
    8. ')' → logprob: -15.875015258789062
    9. ')+' → logprob: -16.000015258789062
    10. '[' → logprob: -16.250015258789062

Token 462: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.523948907968588e-05
    2. 'n' → logprob: -10.875035285949707
    3. '+' → logprob: -11.875035285949707
    4. ' ' → logprob: -12.875035285949707
    5. ')' → logprob: -13.250035285949707
    6. '```' → logprob: -13.625035285949707
    7. '(n' → logprob: -13.625035285949707
    8. '(' → logprob: -14.125035285949707
    9. '
' → logprob: -14.875035285949707
    10. '{' → logprob: -15.625035285949707

Token 463: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009910493157804012
    2. ')
' → logprob: -4.634910583496094
    3. '   ' → logprob: -8.884910583496094
    4. ' )' → logprob: -11.634910583496094
    5. ')
' → logprob: -12.134910583496094
    6. ' )
' → logprob: -14.634910583496094
    7. '
' → logprob: -14.759910583496094
    8. ')

' → logprob: -15.009910583496094
    9. ' ' → logprob: -15.634910583496094
    10. '```' → logprob: -16.009910583496094

Token 464: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1932767778635025
    2. '   ' → logprob: -1.8182767629623413
    3. '    
' → logprob: -4.568276882171631
    4. '	
' → logprob: -6.943276882171631
    5. 'depth' → logprob: -7.568276882171631
    6. '
' → logprob: -7.693276882171631
    7. '  
' → logprob: -8.318276405334473
    8. ' 
' → logprob: -8.443276405334473
    9. ' depth' → logprob: -9.193276405334473
    10. '  ' → logprob: -9.318276405334473

Token 465: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0006120019243098795
    2. '   ' → logprob: -8.375612258911133
    3. '
' → logprob: -8.625612258911133
    4. '    
' → logprob: -8.875612258911133
    5. 'depth' → logprob: -10.375612258911133
    6. '  
' → logprob: -11.250612258911133
    7. 'def' → logprob: -12.500612258911133
    8. ' 
' → logprob: -12.625612258911133
    9. '```' → logprob: -13.125612258911133
    10. '   
' → logprob: -13.750612258911133

Token 466: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.9886466860771179
    2. 'int' → logprob: -1.3636467456817627
    3. '[int' → logprob: -2.4886467456817627
    4. '-' → logprob: -2.8636467456817627
    5. '[-' → logprob: -3.2386467456817627
    6. 'n' → logprob: -3.4886467456817627
    7. '(-' → logprob: -3.7386467456817627
    8. 'Depth' → logprob: -3.8636467456817627
    9. '0' → logprob: -4.363646507263184
    10. '-depth' → logprob: -4.488646507263184

Token 467: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1295100301504135
    2. '[root' → logprob: -2.504509925842285
    3. '=' → logprob: -3.254509925842285
    4. '[u' → logprob: -8.004509925842285
    5. '=root' → logprob: -8.004509925842285
    6. '   ' → logprob: -8.754509925842285
    7. '=[' → logprob: -9.629509925842285
    8. '[:]' → logprob: -9.879509925842285
    9. ')' → logprob: -10.004509925842285
    10. '[' → logprob: -10.379509925842285

Token 468: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0020086953882128
    2. ')' → logprob: -6.62700891494751
    3. ']=' → logprob: -8.127008438110352
    4. '=' → logprob: -8.502008438110352
    5. ' ]' → logprob: -9.127008438110352
    6. '   ' → logprob: -10.127008438110352
    7. '[i' → logprob: -11.377008438110352
    8. ' =' → logprob: -11.502008438110352
    9. '])' → logprob: -12.377008438110352
    10. ')]' → logprob: -13.252008438110352

Token 469: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740826487541199
    2. '=' → logprob: -0.9740826487541199
    3. '=-' → logprob: -13.474082946777344
    4. ')' → logprob: -13.599082946777344
    5. '[' → logprob: -13.724082946777344
    6. ' ' → logprob: -14.599082946777344
    7. '   ' → logprob: -14.724082946777344
    8. ',' → logprob: -14.974082946777344
    9. ']' → logprob: -15.599082946777344
    10. ' =[' → logprob: -15.974082946777344

Token 470: ' profondeur' (ID: 128210)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.027984408661723137
    2. '0' → logprob: -3.777984380722046
    3. ' -' → logprob: -5.652984619140625
    4. 'depth' → logprob: -7.777984619140625
    5. ' ' → logprob: -7.902984619140625
    6. '-depth' → logprob: -9.027984619140625
    7. 'int' → logprob: -9.277984619140625
    8. ' depth' → logprob: -9.777984619140625
    9. '   ' → logprob: -10.777984619140625
    10. 'None' → logprob: -10.902984619140625

Token 471: ' du' (ID: 1462)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.5159767270088196
    2. '   ' → logprob: -1.1409766674041748
    3. '[u' → logprob: -3.765976667404175
    4. ' =' → logprob: -4.015976905822754
    5. '
' → logprob: -4.265976905822754
    6. ' i' → logprob: -5.015976905822754
    7. ' of' → logprob: -5.265976905822754
    8. '=' → logprob: -6.140976905822754
    9. ')' → logprob: -6.140976905822754
    10. ' ' → logprob: -7.015976905822754

Token 472: ' sommet' (ID: 130502)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.029901249334216118
    2. ' i' → logprob: -3.5299012660980225
    3. 'node' → logprob: -10.029901504516602
    4. ' node' → logprob: -10.529901504516602
    5. ' sommet' → logprob: -10.529901504516602
    6. 'som' → logprob: -11.779901504516602
    7. '[i' → logprob: -12.154901504516602
    8. ' ' → logprob: -12.279901504516602
    9. '
' → logprob: -12.279901504516602
    10. ')' → logprob: -12.404901504516602

Token 473: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.23903340101242065
    2. '[i' → logprob: -2.1140334606170654
    3. 'i' → logprob: -2.6140334606170654
    4. '   ' → logprob: -5.114033222198486
    5. ' in' → logprob: -5.114033222198486
    6. '
' → logprob: -5.239033222198486
    7. '(i' → logprob: -7.989033222198486
    8. ')' → logprob: -8.989033699035645
    9. ']' → logprob: -9.114033699035645
    10. '	i' → logprob: -9.364033699035645

Token 474: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09576326608657837
    2. '   ' → logprob: -2.4707632064819336
    3. ')' → logprob: -6.595763206481934
    4. '    
' → logprob: -6.595763206481934
    5. '
' → logprob: -7.095763206481934
    6. 'depth' → logprob: -7.345763206481934
    7. '<|end|>' → logprob: -7.595763206481934
    8. '  
' → logprob: -8.095763206481934
    9. 'num' → logprob: -8.845763206481934
    10. 'import' → logprob: -9.095763206481934

Token 475: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.49167776107788086
    2. 'l' → logprob: -1.7416777610778809
    3. 'le' → logprob: -1.7416777610778809
    4. ' la' → logprob: -3.741677761077881
    5. 'dfs' → logprob: -4.491677761077881
    6. 'DFS' → logprob: -6.866677761077881
    7. ' l' → logprob: -7.366677761077881
    8. ' le' → logprob: -7.491677761077881
    9. 'par' → logprob: -8.866678237915039
    10. '   ' → logprob: -9.241678237915039

Token 476: ''ar' (ID: 54307)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.6126687526702881
    2. ' DFS' → logprob: -1.487668752670288
    3. 'DFS' → logprob: -2.362668752670288
    4. 'par' → logprob: -2.987668752670288
    5. ' dfs' → logprob: -3.487668752670288
    6. ' grap' → logprob: -4.362668991088867
    7. ' parcours' → logprob: -4.362668991088867
    8. 'graph' → logprob: -4.737668991088867
    9. '[' → logprob: -5.487668991088867
    10. '   ' → logprob: -5.737668991088867

Token 477: 'bre' (ID: 9945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.701477587223053
    2. 'g' → logprob: -2.451477527618408
    3. '[' → logprob: -2.826477527618408
    4. 'depth' → logprob: -2.826477527618408
    5. 'gs' → logprob: -2.951477527618408
    6. 'bre' → logprob: -3.076477527618408
    7. 'e' → logprob: -3.076477527618408
    8. 'ch' → logprob: -3.826477527618408
    9. 'ea' → logprob: -3.826477527618408
    10. 'bo' → logprob: -4.326477527618408

Token 478: ' DFS' (ID: 115767)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0372551865875721
    2. '   ' → logprob: -3.41225528717041
    3. '
' → logprob: -6.78725528717041
    4. 'dfs' → logprob: -7.91225528717041
    5. '    
' → logprob: -8.03725528717041
    6. 'root' → logprob: -8.16225528717041
    7. 'def' → logprob: -8.41225528717041
    8. '\n' → logprob: -8.53725528717041
    9. '```' → logprob: -8.91225528717041
    10. ')
' → logprob: -8.91225528717041

Token 479: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08117644488811493
    2. '   ' → logprob: -2.581176519393921
    3. '    
' → logprob: -6.706176280975342
    4. '
' → logprob: -8.0811767578125
    5. ')' → logprob: -8.3311767578125
    6. 'root' → logprob: -8.8311767578125
    7. 'depth' → logprob: -9.5811767578125
    8. '  
' → logprob: -9.9561767578125
    9. '\n' → logprob: -10.0811767578125
    10. ')
' → logprob: -10.4561767578125

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12996841967105865
    2. 'stack' → logprob: -2.8799684047698975
    3. ' stack' → logprob: -3.1299684047698975
    4. 'depth' → logprob: -4.129968643188477
    5. 'nums' → logprob: -5.879968643188477
    6. ' depth' → logprob: -7.129968643188477
    7. '    
' → logprob: -7.379968643188477
    8. '	stack' → logprob: -8.004968643188477
    9. '```' → logprob: -8.379968643188477
    10. 'def' → logprob: -8.629968643188477

Token 481: ' parent' (ID: 5980)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.018037673085927963
    2. 'nums' → logprob: -4.143037796020508
    3. '   ' → logprob: -7.768037796020508
    4. 'parent' (adapté à ' parent') → logprob: -7.768037796020508
    5. 'depth' → logprob: -7.893037796020508
    6. 'visited' → logprob: -8.643037796020508
    7. 'stk' → logprob: -8.768037796020508
    8. 'from' → logprob: -9.143037796020508
    9. 'parents' → logprob: -9.643037796020508
    10. ' stack' → logprob: -10.018037796020508

Token 482: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021249949932098
    2. '=' → logprob: -2.350212574005127
    3. '[' → logprob: -12.975212097167969
    4. ')' → logprob: -13.725212097167969
    5. ' ' → logprob: -14.350212097167969
    6. '=[' → logprob: -14.725212097167969
    7. ']' → logprob: -14.725212097167969
    8. ',' → logprob: -15.475212097167969
    9. ' =[' → logprob: -15.600212097167969
    10. 's' → logprob: -16.10021209716797

Token 483: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.16264349222183228
    2. '[' → logprob: -1.9126434326171875
    3. ' [-' → logprob: -6.4126434326171875
    4. ' [' → logprob: -7.1626434326171875
    5. '   ' → logprob: -14.287643432617188
    6. ' ' → logprob: -15.412643432617188
    7. '[n' → logprob: -17.037643432617188
    8. '  ' → logprob: -18.787643432617188
    9. '[i' → logprob: -18.787643432617188
    10. '[root' → logprob: -19.162643432617188

Token 484: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.125
    3. ' ' → logprob: -16.125
    4. '2' → logprob: -17.5
    5. '-' → logprob: -17.875
    6. '   ' → logprob: -18.9375
    7. ' -' → logprob: -19.5
    8. '(-' → logprob: -19.75
    9. '１' → logprob: -20.0625
    10. '10' → logprob: -20.25

Token 485: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00012368128227535635
    2. ' ]' → logprob: -9.875123977661133
    3. ']*(' → logprob: -10.625123977661133
    4. ')' → logprob: -10.875123977661133
    5. ']*' → logprob: -11.500123977661133
    6. '*' → logprob: -11.875123977661133
    7. '[' → logprob: -13.000123977661133
    8. ' *' → logprob: -13.125123977661133
    9. '(' → logprob: -13.500123977661133
    10. 'for' → logprob: -13.875123977661133

Token 486: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.06278214603662491
    2. '*' → logprob: -2.812782049179077
    3. ']' → logprob: -8.062782287597656
    4. '*(' → logprob: -8.437782287597656
    5. ')' → logprob: -8.812782287597656
    6. '[' → logprob: -10.062782287597656
    7. ' ' → logprob: -10.937782287597656
    8. ' [' → logprob: -11.437782287597656
    9. '*[' → logprob: -11.562782287597656
    10. '[]' → logprob: -12.062782287597656

Token 487: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06200622022151947
    2. ' (' → logprob: -2.8120062351226807
    3. '(' → logprob: -10.187005996704102
    4. 'n' → logprob: -15.562005996704102
    5. '   ' → logprob: -15.937005996704102
    6. '(len' → logprob: -16.1870059967041
    7. '```' → logprob: -16.3120059967041
    8. '(N' → logprob: -16.5620059967041
    9. ' ' → logprob: -16.8120059967041
    10. '<|end|>' → logprob: -16.9370059967041

Token 488: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006097480072639883
    2. 'n' → logprob: -7.500609874725342
    3. ' (' → logprob: -9.875609397888184
    4. '(' → logprob: -13.250609397888184
    5. '
' → logprob: -13.875609397888184
    6. ')' → logprob: -14.625609397888184
    7. '   ' → logprob: -14.750609397888184
    8. '(len' → logprob: -15.000609397888184
    9. '((' → logprob: -15.500609397888184
    10. ',' → logprob: -15.500609397888184

Token 489: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.676981345459353e-06
    2. 'n' → logprob: -13.125005722045898
    3. ' +' → logprob: -13.500005722045898
    4. '(n' → logprob: -13.500005722045898
    5. '+n' → logprob: -14.750005722045898
    6. '+
' → logprob: -15.750005722045898
    7. ')+' → logprob: -15.875005722045898
    8. '[' → logprob: -16.7500057220459
    9. ')' → logprob: -17.0000057220459
    10. '(' → logprob: -17.1250057220459

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006572735728695989
    2. '(' → logprob: -8.125657081604004
    3. '(n' → logprob: -8.250657081604004
    4. 'n' → logprob: -9.375657081604004
    5. '+' → logprob: -11.875657081604004
    6. ' ' → logprob: -12.000657081604004
    7. '```' → logprob: -14.000657081604004
    8. '=' → logprob: -15.375657081604004
    9. ' n' → logprob: -15.375657081604004
    10. ' (' → logprob: -16.12565803527832

Token 491: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002518031978979707
    2. ')
' → logprob: -8.625251770019531
    3. '   ' → logprob: -9.875251770019531
    4. ' )' → logprob: -11.125251770019531
    5. ']' → logprob: -12.375251770019531
    6. ')]' → logprob: -14.125251770019531
    7. ')
' → logprob: -14.250251770019531
    8. ')

' → logprob: -15.875251770019531
    9. ')`' → logprob: -16.37525177001953
    10. ' ' → logprob: -16.50025177001953

Token 492: '  ' (ID: 256)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.26965615153312683
    2. '   ' → logprob: -2.144656181335449
    3. '    
' → logprob: -2.394656181335449
    4. ' 
' → logprob: -4.394656181335449
    5. '  
' → logprob: -6.019656181335449
    6. '	
' → logprob: -6.144656181335449
    7. '    ' → logprob: -6.144656181335449
    8. '   
' → logprob: -6.519656181335449
    9. '
' → logprob: -6.644656181335449
    10. 'def' → logprob: -6.644656181335449

Token 493: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008600270375609398
    2. '   ' → logprob: -6.008600234985352
    3. '    
' → logprob: -6.008600234985352
    4. '
' → logprob: -6.133600234985352
    5. 'def' → logprob: -7.883600234985352
    6. '   
' → logprob: -8.883600234985352
    7. ' 
' → logprob: -8.883600234985352
    8. '  
' → logprob: -8.883600234985352
    9. '

' → logprob: -9.008600234985352
    10. '```' → logprob: -9.383600234985352

Token 494: ' parent' (ID: 5980)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0663895457983017
    2. ' [' → logprob: -3.441389560699463
    3. '[-' → logprob: -3.441389560699463
    4. ' [-' → logprob: -8.941389083862305
    5. '[parent' → logprob: -10.941389083862305
    6. '   ' → logprob: -11.066389083862305
    7. '[]' → logprob: -11.566389083862305
    8. '0' → logprob: -12.316389083862305
    9. 'parent' → logprob: -13.066389083862305
    10. '[i' → logprob: -13.191389083862305

Token 495: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.057736627757549286
    2. '=' → logprob: -2.93273663520813
    3. '[i' → logprob: -6.057736396789551
    4. '[]' → logprob: -8.93273639678955
    5. ')' → logprob: -9.05773639678955
    6. '   ' → logprob: -9.30773639678955
    7. ']' → logprob: -9.68273639678955
    8. '[' → logprob: -10.80773639678955
    9. '[:]' → logprob: -10.80773639678955
    10. '=[' → logprob: -11.43273639678955

Token 496: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06553123146295547
    2. ')' → logprob: -2.8155312538146973
    3. '=' → logprob: -6.065531253814697
    4. ' =' → logprob: -7.690531253814697
    5. ']=' → logprob: -8.190530776977539
    6. '   ' → logprob: -9.065530776977539
    7. '[]' → logprob: -9.065530776977539
    8. '[' → logprob: -9.815530776977539
    9. ' ]' → logprob: -10.190530776977539
    10. '[i' → logprob: -10.190530776977539

Token 497: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12695005536079407
    2. '=' → logprob: -2.1269500255584717
    3. '=[' → logprob: -12.00195026397705
    4. '[' → logprob: -12.37695026397705
    5. ' =[' → logprob: -12.75195026397705
    6. '   ' → logprob: -13.00195026397705
    7. ' ' → logprob: -13.25195026397705
    8. ']' → logprob: -13.50195026397705
    9. ')' → logprob: -13.75195026397705
    10. '[i' → logprob: -14.00195026397705

Token 498: ' parent' (ID: 5980)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -9.841743303695694e-05
    2. ' -' → logprob: -9.25009822845459
    3. '-parent' → logprob: -13.37509822845459
    4. '[-' → logprob: -15.25009822845459
    5. '-i' → logprob: -16.250099182128906
    6. '-p' → logprob: -16.375099182128906
    7. '0' → logprob: -16.625099182128906
    8. ' ' → logprob: -16.875099182128906
    9. '
' → logprob: -17.625099182128906
    10. '[' → logprob: -17.625099182128906

Token 499: ' de' (ID: 334)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002369466470554471
    2. '[' → logprob: -7.627369403839111
    3. '<|end|>' → logprob: -7.627369403839111
    4. '   ' → logprob: -7.752369403839111
    5. ' of' → logprob: -8.37736988067627
    6. ')' → logprob: -8.62736988067627
    7. '<|end|>' → logprob: -9.25236988067627
    8. ' in' → logprob: -9.75236988067627
    9. '[]' → logprob: -9.87736988067627
    10. ' i' → logprob: -9.87736988067627

Token 500: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.008627933450043201
    2. ' i' → logprob: -4.758627891540527
    3. '[i' → logprob: -12.008627891540527
    4. ')' → logprob: -12.133627891540527
    5. '(i' → logprob: -14.258627891540527
    6. '[' → logprob: -14.758627891540527
    7. 'l' → logprob: -15.383627891540527
    8. ' ' → logprob: -15.883627891540527
    9. ' (' → logprob: -15.883627891540527
    10. ')i' → logprob: -15.883627891540527

Token 501: ' dans' (ID: 2671)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.097778081893921
    2. '[i' → logprob: -1.097778081893921
    3. '<|end|>' → logprob: -1.847778081893921
    4. '   ' → logprob: -3.347778081893921
    5. ' in' → logprob: -3.472778081893921
    6. ')' → logprob: -3.722778081893921
    7. ' ' → logprob: -4.0977783203125
    8. '<|end|>' → logprob: -4.2227783203125
    9. '[' → logprob: -4.3477783203125
    10. ']' → logprob: -5.3477783203125

Token 502: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9195816516876221
    2. ' la' → logprob: -1.419581651687622
    3. 'la' → logprob: -1.669581651687622
    4. 'dfs' → logprob: -2.169581651687622
    5. 'le' → logprob: -4.044581413269043
    6. ' l' → logprob: -4.169581413269043
    7. ' dfs' → logprob: -4.419581413269043
    8. 'DFS' → logprob: -5.419581413269043
    9. 'the' → logprob: -6.044581413269043
    10. ' DFS' → logprob: -6.419581413269043

Token 503: ''ar' (ID: 54307)
  Prédit: ' DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' DFS' → logprob: -0.7662063837051392
    2. ' dfs' → logprob: -1.6412063837051392
    3. 'dfs' → logprob: -1.6412063837051392
    4. 'DFS' → logprob: -2.0162062644958496
    5. '[' → logprob: -4.64120626449585
    6. 'l' → logprob: -6.76620626449585
    7. ')' → logprob: -7.01620626449585
    8. ' la' → logprob: -7.26620626449585
    9. '   ' → logprob: -7.64120626449585
    10. '[]' → logprob: -8.016206741333008

Token 504: 'bre' (ID: 9945)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.9178239703178406
    2. 'bre' → logprob: -1.0428240299224854
    3. '[' → logprob: -2.2928240299224854
    4. '[]' → logprob: -3.0428240299224854
    5. '[-' → logprob: -3.2928240299224854
    6. 'ree' → logprob: -4.792823791503906
    7. '[i' → logprob: -5.042823791503906
    8. 'f' → logprob: -5.292823791503906
    9. 'e' → logprob: -5.292823791503906
    10. 'ray' → logprob: -5.417823791503906

Token 505: ' DFS' (ID: 115767)
  Prédit: 'DFS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DFS' → logprob: -0.8992296457290649
    2. ' DFS' → logprob: -1.024229645729065
    3. 'dfs' → logprob: -1.649229645729065
    4. ' dfs' → logprob: -3.2742295265197754
    5. '   ' → logprob: -7.399229526519775
    6. '[' → logprob: -7.399229526519775
    7. ')' → logprob: -7.899229526519775
    8. 'depth' → logprob: -7.899229526519775
    9. '<|end|>' → logprob: -8.024230003356934
    10. 'd' → logprob: -8.274230003356934

Token 506: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.40456104278564453
    2. '   ' → logprob: -1.4045610427856445
    3. 'stack' → logprob: -3.0295610427856445
    4. ' stack' → logprob: -3.6545610427856445
    5. '    
' → logprob: -5.2795610427856445
    6. 'visited' → logprob: -5.9045610427856445
    7. '
' → logprob: -6.5295610427856445
    8. 'def' → logprob: -7.0295610427856445
    9. '```' → logprob: -7.4045610427856445
    10. '	stack' → logprob: -7.9045610427856445

Token 507: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14963465929031372
    2. ' stack' → logprob: -2.524634599685669
    3. 'stack' → logprob: -3.024634599685669
    4. '	stack' → logprob: -4.899634838104248
    5. 'def' → logprob: -6.274634838104248
    6. '```' → logprob: -7.774634838104248
    7. '
' → logprob: -8.89963436126709
    8. '    
' → logprob: -8.89963436126709
    9. ' def' → logprob: -9.27463436126709
    10. 'import' → logprob: -9.52463436126709

Token 508: ' nums' (ID: 18117)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.008167007938027382
    2. ' stack' → logprob: -4.883166790008545
    3. '   ' → logprob: -7.633166790008545
    4. 'def' → logprob: -10.133167266845703
    5. 'import' → logprob: -11.383167266845703
    6. 'from' → logprob: -11.508167266845703
    7. '	stack' → logprob: -11.883167266845703
    8. 'stk' → logprob: -13.133167266845703
    9. '_stack' → logprob: -13.383167266845703
    10. 'queue' → logprob: -13.633167266845703

Token 509: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -5.080963092041202e-06
    2. '[' → logprob: -12.750004768371582
    3. '[:]' → logprob: -13.875004768371582
    4. 'root' → logprob: -14.750004768371582
    5. ' =' → logprob: -15.375004768371582
    6. '[node' → logprob: -15.750004768371582
    7. '=root' → logprob: -16.0000057220459
    8. '(root' → logprob: -17.0000057220459
    9. '```' → logprob: -17.1250057220459
    10. '=' → logprob: -17.7500057220459

Token 510: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001517238444648683
    2. ' ]' → logprob: -7.251517295837402
    3. '=' → logprob: -7.876517295837402
    4. ']=' → logprob: -8.251517295837402
    5. ' =' → logprob: -9.376517295837402
    6. ')' → logprob: -9.501517295837402
    7. '])' → logprob: -13.001517295837402
    8. '[' → logprob: -13.001517295837402
    9. ',' → logprob: -14.376517295837402
    10. '[root' → logprob: -14.626517295837402

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. '=int' → logprob: -16.379077911376953
    4. ',' → logprob: -16.879077911376953
    5. '+=' → logprob: -17.254077911376953
    6. '.=' → logprob: -17.254077911376953
    7. '=

' → logprob: -17.254077911376953
    8. '=}' → logprob: -17.254077911376953
    9. '＝' → logprob: -19.004077911376953
    10. '=i' → logprob: -19.254077911376953

Token 512: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.611323624383658e-05
    2. ' init' → logprob: -10.000065803527832
    3. '0' → logprob: -11.375065803527832
    4. 'int' → logprob: -12.250065803527832
    5. '   ' → logprob: -13.500065803527832
    6. '(init' → logprob: -14.750065803527832
    7. '-' → logprob: -14.875065803527832
    8. '1' → logprob: -14.875065803527832
    9. ' ' → logprob: -15.750065803527832
    10. '	init' → logprob: -15.937565803527832

Token 513: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0004598631348926574
    2. '
' → logprob: -8.750459671020508
    3. '	
' → logprob: -9.250459671020508
    4. ' 
' → logprob: -10.000459671020508
    5. '    
' → logprob: -10.125459671020508
    6. '' → logprob: -10.250459671020508
    7. '  
' → logprob: -10.875459671020508
    8. 'depth' → logprob: -10.875459671020508
    9. '<|end|>' → logprob: -11.250459671020508
    10. '   ' → logprob: -11.250459671020508

Token 514: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03645561262965202
    2. 'depth' → logprob: -3.4114556312561035
    3. ' depth' → logprob: -5.9114556312561035
    4. '  ' → logprob: -10.911455154418945
    5. ' ' → logprob: -11.161455154418945
    6. '
' → logprob: -11.411455154418945
    7. ' depths' → logprob: -11.786455154418945
    8. 'def' → logprob: -11.911455154418945
    9. '    
' → logprob: -11.911455154418945
    10. '(depth' → logprob: -11.911455154418945

Token 515: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' (adapté à ' depth') → logprob: -0.005408065393567085
    2. 'stack' → logprob: -6.00540828704834
    3. '   ' → logprob: -6.25540828704834
    4. 'from' → logprob: -7.00540828704834
    5. 'import' → logprob: -9.75540828704834
    6. ' depth' → logprob: -10.38040828704834
    7. 'def' → logprob: -11.88040828704834
    8. '
' → logprob: -14.25540828704834
    9. 'deep' → logprob: -14.38040828704834
    10. '    
' → logprob: -15.00540828704834

Token 516: '[root' (ID: 185287)
  Prédit: '[root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[root' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.125
    3. 'root' → logprob: -18.875
    4. ' [' → logprob: -19.25
    5. '=root' → logprob: -19.625
    6. '(root' → logprob: -20.875
    7. '```' → logprob: -21.5
    8. '[node' → logprob: -22.25
    9. '[r' → logprob: -22.25
    10. ')[' → logprob: -22.375

Token 517: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00010473522706888616
    2. ']=' → logprob: -9.500104904174805
    3. '=' → logprob: -11.250104904174805
    4. ' ]' → logprob: -11.625104904174805
    5. ')' → logprob: -11.875104904174805
    6. ' =' → logprob: -13.875104904174805
    7. '[' → logprob: -17.375104904174805
    8. ']
' → logprob: -17.500104904174805
    9. ']+=' → logprob: -17.750104904174805
    10. '0' → logprob: -17.875104904174805

Token 518: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02324547804892063
    2. ' =' → logprob: -3.7732455730438232
    3. '0' → logprob: -17.898244857788086
    4. ',' → logprob: -17.898244857788086
    5. '.=' → logprob: -18.648244857788086
    6. ' ' → logprob: -19.023244857788086
    7. '＝' → logprob: -20.148244857788086
    8. '[' → logprob: -20.148244857788086
    9. '=int' → logprob: -20.273244857788086
    10. '=}' → logprob: -20.523244857788086

Token 519: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '1' → logprob: -18.125
    4. 'init' → logprob: -18.5
    5. '۰' → logprob: -19.875
    6. '000' → logprob: -20.875
    7. '00' → logprob: -21.125
    8. '=' → logprob: -21.5
    9. '2' → logprob: -22.1875
    10. '٠' → logprob: -22.25

Token 520: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. 'init' → logprob: -13.875000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '1' → logprob: -16.000001907348633
    5. '۰' → logprob: -18.500001907348633
    6. '=' → logprob: -18.875001907348633
    7. '2' → logprob: -19.562501907348633
    8. 'root' → logprob: -19.625001907348633
    9. 'initial' → logprob: -19.687501907348633
    10. 'd' → logprob: -19.875001907348633

Token 521: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5337157249450684
    2. '
' → logprob: -0.9087157249450684
    3. '	stack' → logprob: -5.283715724945068
    4. '<|end|>' → logprob: -6.158715724945068
    5. '    
' → logprob: -6.408715724945068
    6. ' stack' → logprob: -7.533715724945068
    7. 'stack' → logprob: -8.783716201782227
    8. '
' → logprob: -9.158716201782227
    9. '  
' → logprob: -9.408716201782227
    10. '	
' → logprob: -9.408716201782227

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4767571985721588
    2. 'stack' → logprob: -0.9767571687698364
    3. '	stack' → logprob: -6.601757049560547
    4. ' stack' → logprob: -6.726757049560547
    5. 'from' → logprob: -9.851757049560547
    6. '```' → logprob: -10.851757049560547
    7. 'pile' → logprob: -11.101757049560547
    8. '    
' → logprob: -11.476757049560547
    9. '_stack' → logprob: -11.476757049560547
    10. 'import' → logprob: -12.476757049560547

Token 523: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -1.2471589798224159e-05
    2. 'from' → logprob: -11.500012397766113
    3. ' stack' → logprob: -13.125012397766113
    4. 'pile' → logprob: -15.875012397766113
    5. '	stack' → logprob: -16.50001335144043
    6. '   ' → logprob: -17.12501335144043
    7. '```' → logprob: -17.25001335144043
    8. '_stack' → logprob: -17.62501335144043
    9. 'stk' → logprob: -17.75001335144043
    10. 'import' → logprob: -18.12501335144043

Token 524: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02983715571463108
    2. '=' → logprob: -3.529837131500244
    3. '.append' → logprob: -9.779837608337402
    4. '=[' → logprob: -10.654837608337402
    5. '=[]' → logprob: -12.154837608337402
    6. ' =[' → logprob: -14.529837608337402
    7. '[:]' → logprob: -15.529837608337402
    8. '[' → logprob: -16.279836654663086
    9. '=[]
' → logprob: -16.529836654663086
    10. '.' → logprob: -16.529836654663086

Token 525: ' [' (ID: 723)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.7491250875755213e-05
    2. ' [(' → logprob: -11.250027656555176
    3. '[root' → logprob: -11.250027656555176
    4. '[((' → logprob: -13.750027656555176
    5. '[' → logprob: -14.750027656555176
    6. '([(' → logprob: -18.25002670288086
    7. '[top' → logprob: -18.37502670288086
    8. '[node' → logprob: -18.62502670288086
    9. ' [' → logprob: -19.12502670288086
    10. '[start' → logprob: -19.12502670288086

Token 526: 'root' (ID: 5488)
  Prédit: '(root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -0.3869992792606354
    2. 'root' → logprob: -1.136999249458313
    3. '[root' → logprob: -9.136999130249023
    4. ' root' → logprob: -11.636999130249023
    5. ' (' → logprob: -11.886999130249023
    6. '/root' → logprob: -13.136999130249023
    7. '(' → logprob: -13.761999130249023
    8. '=root' → logprob: -14.386999130249023
    9. '((' → logprob: -15.261999130249023
    10. '	root' → logprob: -15.636999130249023

Token 527: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00014191943046171218
    2. ' ]' → logprob: -9.125142097473145
    3. ']
' → logprob: -10.375142097473145
    4. '   ' → logprob: -14.250142097473145
    5. ',' → logprob: -14.625142097473145
    6. ')' → logprob: -15.125142097473145
    7. ']
' → logprob: -15.500142097473145
    8. '])' → logprob: -15.750142097473145
    9. ')]' → logprob: -17.250141143798828
    10. ']

' → logprob: -17.875141143798828

Token 528: '         ' (ID: 983)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09410680830478668
    2. 'while' → logprob: -2.719106912612915
    3. ' while' → logprob: -4.344106674194336
    4. '   ' → logprob: -5.469106674194336
    5. '    
' → logprob: -5.844106674194336
    6. ' 
' → logprob: -6.969106674194336
    7. '```' → logprob: -7.594106674194336
    8. '	while' → logprob: -7.719106674194336
    9. ')' → logprob: -7.844106674194336
    10. '  
' → logprob: -8.219106674194336

Token 529: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010642479173839092
    2. 'while' → logprob: -7.626064300537109
    3. '
' → logprob: -8.25106430053711
    4. ' 
' → logprob: -9.12606430053711
    5. '    
' → logprob: -9.75106430053711
    6. '```' → logprob: -10.25106430053711
    7. '\n' → logprob: -10.87606430053711
    8. '  
' → logprob: -10.87606430053711
    9. '   ' → logprob: -11.00106430053711
    10. ' while' → logprob: -11.50106430053711

Token 530: ' Util' (ID: 13564)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.4340857267379761
    2. '(root' → logprob: -1.184085726737976
    3. ']' → logprob: -3.6840858459472656
    4. '(' → logprob: -4.934085845947266
    5. '[root' → logprob: -5.309085845947266
    6. '0' → logprob: -5.434085845947266
    7. '[]' → logprob: -6.184085845947266
    8. ' (' → logprob: -7.184085845947266
    9. '(u' → logprob: -7.559085845947266
    10. ')' → logprob: -7.559085845947266

Token 531: 'isation' (ID: 6993)
  Prédit: 'iser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iser' → logprob: -1.0570087432861328
    2. 'isateur' → logprob: -1.5570087432861328
    3. 'isation' → logprob: -1.6820087432861328
    4. 'isé' → logprob: -1.9320087432861328
    5. 'stack' → logprob: -2.932008743286133
    6. 's' → logprob: -3.557008743286133
    7. '_stack' → logprob: -4.682008743286133
    8. 'isée' → logprob: -5.182008743286133
    9. 'is' → logprob: -6.057008743286133
    10. 'isant' → logprob: -6.432008743286133

Token 532: ' d' (ID: 272)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8722622394561768
    2. ' stack' → logprob: -1.6222622394561768
    3. ' d' → logprob: -2.2472622394561768
    4. ' []' → logprob: -2.7472622394561768
    5. '[]' → logprob: -2.8722622394561768
    6. '[' → logprob: -2.9972622394561768
    7. ' of' → logprob: -3.4972622394561768
    8. ' [' → logprob: -3.9972622394561768
    9. '   ' → logprob: -4.122262001037598
    10. 'de' → logprob: -4.997262001037598

Token 533: ''une' (ID: 13337)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7092199325561523
    2. 'e' → logprob: -0.8342199325561523
    3. '[e' → logprob: -3.3342199325561523
    4. '[]' → logprob: -4.334219932556152
    5. 'ep' → logprob: -4.459219932556152
    6. '[root' → logprob: -5.959219932556152
    7. '[u' → logprob: -6.084219932556152
    8. ' [' → logprob: -6.584219932556152
    9. '[(' → logprob: -6.834219932556152
    10. 'eep' → logprob: -7.209219932556152

Token 534: ' pile' (ID: 39732)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.091489315032959
    2. 'list' → logprob: -1.216489315032959
    3. '[' → logprob: -1.841489315032959
    4. 'deque' → logprob: -2.091489315032959
    5. '[]' → logprob: -2.716489315032959
    6. ']' → logprob: -5.216489315032959
    7. '[:]' → logprob: -5.716489315032959
    8. '[(' → logprob: -5.841489315032959
    9. 'dfs' → logprob: -6.216489315032959
    10. ')' → logprob: -6.216489315032959

Token 535: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5342902541160583
    2. ']' → logprob: -2.159290313720703
    3. ',' → logprob: -2.409290313720703
    4. '<|end|>' → logprob: -2.784290313720703
    5. '
' → logprob: -3.284290313720703
    6. '[' → logprob: -4.034290313720703
    7. '[::-' → logprob: -4.034290313720703
    8. '[]' → logprob: -4.284290313720703
    9. '[:]' → logprob: -4.909290313720703
    10. '()' → logprob: -5.034290313720703

Token 536: ' le' (ID: 505)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.265216201543808
    2. ' dfs' → logprob: -1.7652162313461304
    3. '[]' → logprob: -4.26521635055542
    4. 'iter' → logprob: -4.51521635055542
    5. 'stack' → logprob: -4.76521635055542
    6. ' []' → logprob: -5.14021635055542
    7. '[' → logprob: -5.39021635055542
    8. ' la' → logprob: -5.51521635055542
    9. ' stack' → logprob: -6.64021635055542
    10. ' parcour' → logprob: -6.64021635055542

Token 537: ' DFS' (ID: 115767)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.5103161334991455
    2. 'DFS' → logprob: -1.6353161334991455
    3. ' DFS' → logprob: -1.7603161334991455
    4. ' dfs' → logprob: -3.6353161334991455
    5. 'depth' → logprob: -5.885315895080566
    6. 'par' → logprob: -6.510315895080566
    7. 'while' → logprob: -7.760315895080566
    8. ' depth' → logprob: -8.260315895080566
    9. ')' → logprob: -8.385315895080566
    10. ' parcours' → logprob: -8.510315895080566

Token 538: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1225452870130539
    2. 'while' → logprob: -2.2475452423095703
    3. ' while' → logprob: -4.99754524230957
    4. ')' → logprob: -7.37254524230957
    5. '   ' → logprob: -7.87254524230957
    6. '    
' → logprob: -7.99754524230957
    7. '
' → logprob: -7.99754524230957
    8. ',' → logprob: -8.37254524230957
    9. ',
' → logprob: -8.37254524230957
    10. '```' → logprob: -8.74754524230957

Token 539: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.14586783945560455
    2. ' while' → logprob: -2.2708678245544434
    3. ')' → logprob: -4.270867824554443
    4. '   ' → logprob: -4.270867824554443
    5. '	while' → logprob: -6.645867824554443
    6. '
' → logprob: -7.395867824554443
    7. '```' → logprob: -7.520867824554443
    8. 'idx' → logprob: -7.895867824554443
    9. '    
' → logprob: -8.395868301391602
    10. ',' → logprob: -8.645868301391602

Token 540: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.014516977593302727
    2. ' while' → logprob: -4.264516830444336
    3. '	while' → logprob: -8.389516830444336
    4. '   ' → logprob: -9.014516830444336
    5. 'While' → logprob: -13.514516830444336
    6. 'indent' → logprob: -13.889516830444336
    7. '```' → logprob: -14.014516830444336
    8. 'idx' → logprob: -15.014516830444336
    9. ')' → logprob: -15.639516830444336
    10. 'index' → logprob: -15.764516830444336

Token 541: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.0297784935683012
    2. ' stack' → logprob: -3.529778480529785
    3. 'len' → logprob: -10.529778480529785
    4. ' len' → logprob: -14.404778480529785
    5. '	stack' → logprob: -14.654778480529785
    6. '(stack' → logprob: -15.154778480529785
    7. ' ' → logprob: -17.4047794342041
    8. '   ' → logprob: -19.0297794342041
    9. 'Stack' → logprob: -19.2797794342041
    10. '
' → logprob: -19.4047794342041

Token 542: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007232828065752983
    2. '.pop' → logprob: -5.007232666015625
    3. '):' → logprob: -8.007232666015625
    4. ':
' → logprob: -9.257232666015625
    5. '[-' → logprob: -9.882232666015625
    6. 'pop' → logprob: -10.632232666015625
    7. '>:' → logprob: -12.007232666015625
    8. ']:' → logprob: -13.757232666015625
    9. '.:' → logprob: -13.882232666015625
    10. '.' → logprob: -14.007232666015625

Token 543: '       ' (ID: 309)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.09817047417163849
    2. 'node' → logprob: -2.973170518875122
    3. ' u' → logprob: -3.848170518875122
    4. ' node' → logprob: -4.223170280456543
    5. '   ' → logprob: -5.098170280456543
    6. 'v' → logprob: -8.598170280456543
    7. 'current' → logprob: -10.223170280456543
    8. 'x' → logprob: -10.598170280456543
    9. 'cur' → logprob: -11.348170280456543
    10. '	node' → logprob: -11.848170280456543

Token 544: ' next' (ID: 2613)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.02382080815732479
    2. 'node' → logprob: -4.523820877075195
    3. 'x' → logprob: -4.648820877075195
    4. 'cur' → logprob: -6.023820877075195
    5. 'v' → logprob: -7.898820877075195
    6. ' u' → logprob: -9.023820877075195
    7. 'curr' → logprob: -9.148820877075195
    8. 'current' → logprob: -9.523820877075195
    9. ' node' → logprob: -11.898820877075195
    10. '   ' → logprob: -12.023820877075195

Token 545: '_stack' (ID: 35650)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.3721484839916229
    2. '_' → logprob: -1.3721485137939453
    3. '=' → logprob: -3.4971485137939453
    4. 'node' → logprob: -3.7471485137939453
    5. '_=' → logprob: -6.622148513793945
    6. ' =' → logprob: -7.247148513793945
    7. '_vertex' → logprob: -7.247148513793945
    8. 'v' → logprob: -8.372148513793945
    9. 'Node' → logprob: -8.997148513793945
    10. 'n' → logprob: -10.247148513793945

Token 546: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47525450587272644
    2. ' =' → logprob: -0.9752545356750488
    3. '=[]' → logprob: -7.100254535675049
    4. '.pop' → logprob: -8.22525405883789
    5. '.append' → logprob: -9.72525405883789
    6. '=[]
' → logprob: -12.10025405883789
    7. '.' → logprob: -12.35025405883789
    8. '   ' → logprob: -12.85025405883789
    9. ' ' → logprob: -13.22525405883789
    10. '[-' → logprob: -13.35025405883789

Token 547: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.696889623621246e-06
    2. '[]
' → logprob: -13.12500286102295
    3. 'set' → logprob: -14.75000286102295
    4. ' []' → logprob: -16.375001907348633
    5. '[' → logprob: -16.750001907348633
    6. '[]}' → logprob: -17.000001907348633
    7. '[]

' → logprob: -17.375001907348633
    8. '[],' → logprob: -20.250001907348633
    9. '{}' → logprob: -20.375001907348633
    10. '[]>' → logprob: -20.500001907348633

Token 548: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057670123875141144
    2. ' for' → logprob: -3.1826701164245605
    3. 'for' → logprob: -4.3076701164245605
    4. '           ' → logprob: -7.9326701164245605
    5. '        
' → logprob: -8.182670593261719
    6. '	' → logprob: -9.182670593261719
    7. '        ' → logprob: -9.432670593261719
    8. ':' → logprob: -9.807670593261719
    9. ',' → logprob: -10.557670593261719
    10. '
' → logprob: -10.682670593261719

Token 549: ' while' (ID: 2049)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005177667480893433
    2. ' for' → logprob: -8.000517845153809
    3. 'u' → logprob: -8.875517845153809
    4. '       ' → logprob: -10.625517845153809
    5. 'node' → logprob: -11.375517845153809
    6. 'while' (adapté à ' while') → logprob: -12.625517845153809
    7. 'v' → logprob: -13.250517845153809
    8. '   ' → logprob: -14.375517845153809
    9. 'x' → logprob: -15.000517845153809
    10. ' u' → logprob: -15.125517845153809

Token 550: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.00023512568441219628
    2. ' stack' → logprob: -8.375235557556152
    3. 'len' → logprob: -12.375235557556152
    4. '(stack' → logprob: -15.875235557556152
    5. '	stack' → logprob: -16.125234603881836
    6. '   ' → logprob: -17.000234603881836
    7. 'not' → logprob: -17.375234603881836
    8. ' ' → logprob: -18.250234603881836
    9. 'next' → logprob: -18.250234603881836
    10. 'depth' → logprob: -19.625234603881836

Token 551: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.027260344475507736
    2. '.pop' → logprob: -3.9022603034973145
    3. ':
' → logprob: -5.0272603034973145
    4. 'pop' → logprob: -8.902260780334473
    5. '.append' → logprob: -13.777260780334473
    6. '_pop' → logprob: -14.902260780334473
    7. '   ' → logprob: -15.027260780334473
    8. 'Pop' → logprob: -15.402260780334473
    9. ' pop' → logprob: -15.777260780334473
    10. '):' → logprob: -15.777260780334473

Token 552: '           ' (ID: 352)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.23356936872005463
    2. 'node' → logprob: -2.483569383621216
    3. ' u' → logprob: -2.733569383621216
    4. ' node' → logprob: -2.983569383621216
    5. 'v' → logprob: -4.858569145202637
    6. 'x' → logprob: -7.858569145202637
    7. '           ' → logprob: -7.858569145202637
    8. ' v' → logprob: -7.983569145202637
    9. '   ' → logprob: -8.483569145202637
    10. '       ' → logprob: -9.358569145202637

Token 553: ' i' (ID: 575)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.036486994475126266
    2. 'node' → logprob: -3.411487102508545
    3. 'x' → logprob: -6.661487102508545
    4. 'cur' → logprob: -7.036487102508545
    5. 'v' → logprob: -7.786487102508545
    6. ' u' → logprob: -9.161486625671387
    7. 'curr' → logprob: -9.536486625671387
    8. 'current' → logprob: -10.286486625671387
    9. '   ' → logprob: -10.536486625671387
    10. ' node' → logprob: -11.161486625671387

Token 554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326621770858765
    2. '=' → logprob: -1.3132662773132324
    3. '   ' → logprob: -13.313265800476074
    4. '	' → logprob: -13.938265800476074
    5. ' ' → logprob: -14.563265800476074
    6. '    ' → logprob: -14.563265800476074
    7. ',' → logprob: -14.938265800476074
    8. '  ' → logprob: -16.31326675415039
    9. '=i' → logprob: -16.43826675415039
    10. '_' → logprob: -16.81326675415039

Token 555: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.06196858361363411
    2. ' stack' → logprob: -2.8119685649871826
    3. '	stack' → logprob: -14.186968803405762
    4. '(stack' → logprob: -16.186967849731445
    5. ' ' → logprob: -16.936967849731445
    6. '   ' → logprob: -17.061967849731445
    7. 'Stack' → logprob: -18.186967849731445
    8. '.stack' → logprob: -18.186967849731445
    9. '  ' → logprob: -18.936967849731445
    10. 'st' → logprob: -19.186967849731445

Token 556: '.pop' (ID: 15746)
  Prédit: '.pop'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pop' → logprob: -4.9186317482963204e-05
    2. '.' → logprob: -10.500049591064453
    3. 'pop' → logprob: -10.750049591064453
    4. '   ' → logprob: -16.500049591064453
    5. '[-' → logprob: -17.750049591064453
    6. ' .' → logprob: -18.250049591064453
    7. '	pop' → logprob: -19.000049591064453
    8. ' pop' → logprob: -19.375049591064453
    9. 'Pop' → logprob: -20.375049591064453
    10. '.p' → logprob: -20.500049591064453

Token 557: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0005906827282160521
    2. '()
' → logprob: -7.500590801239014
    3. '(' → logprob: -10.375590324401855
    4. ')' → logprob: -13.500590324401855
    5. ' ()' → logprob: -13.500590324401855
    6. '()\' → logprob: -13.625590324401855
    7. '();' → logprob: -13.750590324401855
    8. '()
' → logprob: -14.500590324401855
    9. '())' → logprob: -14.875590324401855
    10. '()

' → logprob: -15.000590324401855

Token 558: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3858437240123749
    2. '       ' → logprob: -1.6358437538146973
    3. ' for' → logprob: -2.3858437538146973
    4. 'for' → logprob: -4.010843753814697
    5. '   ' → logprob: -4.385843753814697
    6. '            
' → logprob: -7.010843753814697
    7. '        
' → logprob: -8.260843276977539
    8. '	for' → logprob: -8.510843276977539
    9. '```' → logprob: -8.510843276977539
    10. '               ' → logprob: -8.510843276977539

Token 559: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0008438145159743726
    2. ' for' → logprob: -7.1258440017700195
    3. '           ' → logprob: -10.87584400177002
    4. '   ' → logprob: -11.50084400177002
    5. 'if' → logprob: -12.50084400177002
    6. '	for' → logprob: -12.87584400177002
    7. '       ' → logprob: -13.62584400177002
    8. '            
' → logprob: -14.50084400177002
    9. '               ' → logprob: -14.75084400177002
    10. '
' → logprob: -14.87584400177002

Token 560: ' j' (ID: 441)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.6999290585517883
    2. 'j' → logprob: -0.8249290585517883
    3. 'w' → logprob: -3.3249289989471436
    4. 'u' → logprob: -4.824929237365723
    5. 'x' → logprob: -5.449929237365723
    6. ' v' → logprob: -5.449929237365723
    7. ' j' → logprob: -5.574929237365723
    8. 'k' → logprob: -6.199929237365723
    9. 'y' → logprob: -6.574929237365723
    10. 'nei' → logprob: -7.074929237365723

Token 561: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7102559804916382
    2. ' in' → logprob: -0.7102559804916382
    3. ',' → logprob: -4.085256099700928
    4. ' ,' → logprob: -10.46025562286377
    5. '   ' → logprob: -10.58525562286377
    6. ',in' → logprob: -10.58525562286377
    7. ',j' → logprob: -11.71025562286377
    8. '    ' → logprob: -11.83525562286377
    9. ')' → logprob: -11.83525562286377
    10. ' ' → logprob: -11.96025562286377

Token 562: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.24432328343391418
    2. 'val' → logprob: -1.6193232536315918
    3. 'v' → logprob: -5.244323253631592
    4. 'w' → logprob: -5.619323253631592
    5. 'dist' → logprob: -5.869323253631592
    6. 'value' → logprob: -6.619323253631592
    7. ' s' → logprob: -6.869323253631592
    8. 'sum' → logprob: -6.994323253631592
    9. 'd' → logprob: -7.244323253631592
    10. 'c' → logprob: -7.494323253631592

Token 563: '_' (ID: 62)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25198468565940857
    2. 'in' → logprob: -1.501984715461731
    3. 's' → logprob: -11.126984596252441
    4. ' ' → logprob: -11.376984596252441
    5. ',' → logprob: -11.876984596252441
    6. ')' → logprob: -12.126984596252441
    7. 'n' → logprob: -12.876984596252441
    8. '  ' → logprob: -13.501984596252441
    9. 'en' → logprob: -13.626984596252441
    10. 'to' → logprob: -13.751984596252441

Token 564: 'ij' (ID: 681)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11453789472579956
    2. 'in' → logprob: -2.2395379543304443
    3. 's' → logprob: -6.864537715911865
    4. 'n' → logprob: -8.114538192749023
    5. ' ' → logprob: -9.864538192749023
    6. 'value' → logprob: -10.114538192749023
    7. 'd' → logprob: -10.614538192749023
    8. 'v' → logprob: -10.739538192749023
    9. 'for' → logprob: -10.864538192749023
    10. 'import' → logprob: -11.364538192749023

Token 565: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3869401812553406
    2. 'in' → logprob: -1.1369402408599854
    3. ')' → logprob: -10.261940002441406
    4. 's' → logprob: -12.011940002441406
    5. ',' → logprob: -12.136940002441406
    6. '	in' → logprob: -12.136940002441406
    7. ' ' → logprob: -12.261940002441406
    8. '   ' → logprob: -13.261940002441406
    9. '  ' → logprob: -13.636940002441406
    10. ' )' → logprob: -13.761940002441406

Token 566: ' links' (ID: 9362)
  Prédit: 'links'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'links' → logprob: -0.00020425561524461955
    2. ' links' → logprob: -8.500204086303711
    3. '.links' → logprob: -14.500204086303711
    4. 'in' → logprob: -16.62520408630371
    5. 'lines' → logprob: -17.12520408630371
    6. '
' → logprob: -17.75020408630371
    7. '_links' → logprob: -18.12520408630371
    8. ' in' → logprob: -18.12520408630371
    9. 'link' → logprob: -18.25020408630371
    10. '-links' → logprob: -18.37520408630371

Token 567: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.935296834039036e-06
    2. '[j' → logprob: -13.50000286102295
    3. 'i' → logprob: -14.00000286102295
    4. '[' → logprob: -15.37500286102295
    5. ' [' → logprob: -16.125003814697266
    6. '[
' → logprob: -16.375003814697266
    7. '[I' → logprob: -16.500003814697266
    8. 's' → logprob: -17.625003814697266
    9. '=i' → logprob: -17.750003814697266
    10. '{i' → logprob: -17.875003814697266

Token 568: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03840440884232521
    2. '.items' → logprob: -3.4134044647216797
    3. ').' → logprob: -5.78840446472168
    4. '().' → logprob: -7.03840446472168
    5. '.' → logprob: -7.66340446472168
    6. '   ' → logprob: -9.41340446472168
    7. ' ].' → logprob: -9.78840446472168
    8. 'items' → logprob: -10.03840446472168
    9. '()].' → logprob: -10.53840446472168
    10. '.iteritems' → logprob: -10.53840446472168

Token 569: 'items' (ID: 6918)
  Prédit: 'items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -1.5094070477061905e-05
    2. '.items' → logprob: -11.125015258789062
    3. ' items' → logprob: -15.250015258789062
    4. '	items' → logprob: -18.250015258789062
    5. 'copy' → logprob: -19.375015258789062
    6. '```' → logprob: -19.500015258789062
    7. 'item' → logprob: -19.625015258789062
    8. 'values' → logprob: -19.625015258789062
    9. 'getitem' → logprob: -19.875015258789062
    10. '(items' → logprob: -19.875015258789062

Token 570: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.024010293185710907
    2. '():
' → logprob: -4.024010181427002
    3. '()' → logprob: -5.149010181427002
    4. '():
' → logprob: -10.77401065826416
    5. ':' → logprob: -11.64901065826416
    6. '(' → logprob: -12.27401065826416
    7. '():

' → logprob: -13.64901065826416
    8. '):' → logprob: -13.89901065826416
    9. '()):
' → logprob: -14.39901065826416
    10. '())' → logprob: -14.64901065826416

Token 571: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00043972869752906263
    2. ' if' → logprob: -8.625439643859863
    3. '                
' → logprob: -9.125439643859863
    4. '           ' → logprob: -9.375439643859863
    5. 'if' → logprob: -11.000439643859863
    6. '              ' → logprob: -11.500439643859863
    7. '```' → logprob: -11.750439643859863
    8. '                ' → logprob: -12.125439643859863
    9. '                   ' → logprob: -12.375439643859863
    10. '       ' → logprob: -12.625439643859863

Token 572: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.011143322102725506
    2. ' if' → logprob: -4.761143207550049
    3. '               ' → logprob: -6.011143207550049
    4. '                   ' → logprob: -9.636143684387207
    5. '```' → logprob: -12.136143684387207
    6. '           ' → logprob: -13.136143684387207
    7. '                ' → logprob: -14.261143684387207
    8. '   ' → logprob: -14.761143684387207
    9. '	if' → logprob: -15.386143684387207
    10. '                       ' → logprob: -15.886143684387207

Token 573: ' j' (ID: 441)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.001502717612311244
    2. ' depth' → logprob: -6.501502513885498
    3. 'nums' → logprob: -15.751502990722656
    4. '(depth' → logprob: -15.751502990722656
    5. '   ' → logprob: -16.001502990722656
    6. ' ' → logprob: -18.501502990722656
    7. '  ' → logprob: -19.126502990722656
    8. '_depth' → logprob: -19.376502990722656
    9. 'Depth' → logprob: -19.376502990722656
    10. 'd' → logprob: -19.501502990722656

Token 574: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.05033539608120918
    2. ' in' → logprob: -4.17533540725708
    3. ' ==' → logprob: -4.42533540725708
    4. '==' → logprob: -5.17533540725708
    5. ')' → logprob: -5.42533540725708
    6. 'not' → logprob: -5.42533540725708
    7. '==-' → logprob: -6.05033540725708
    8. ' ' → logprob: -6.67533540725708
    9. ' depth' → logprob: -7.55033540725708
    10. ' <' → logprob: -7.80033540725708

Token 575: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.002154307207092643
    2. 'root' → logprob: -6.877154350280762
    3. 'i' → logprob: -7.002154350280762
    4. '-' → logprob: -9.127154350280762
    5. ' parent' → logprob: -9.502154350280762
    6. '   ' → logprob: -12.127154350280762
    7. '0' → logprob: -12.127154350280762
    8. 'par' → logprob: -12.627154350280762
    9. '-parent' → logprob: -12.627154350280762
    10. 'paren' → logprob: -12.877154350280762

Token 576: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00021629150433000177
    2. '[j' → logprob: -8.625216484069824
    3. '[' → logprob: -10.750216484069824
    4. 'i' → logprob: -11.375216484069824
    5. '   ' → logprob: -14.375216484069824
    6. 'j' → logprob: -14.500216484069824
    7. ')' → logprob: -14.625216484069824
    8. ' i' → logprob: -15.250216484069824
    9. '(i' → logprob: -15.250216484069824
    10. ' [' → logprob: -15.250216484069824

Token 577: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8709279298782349
    2. '):
' → logprob: -1.6209279298782349
    3. ':' → logprob: -1.7459279298782349
    4. ':
' → logprob: -2.3709278106689453
    5. ' or' → logprob: -2.9959278106689453
    6. ')' → logprob: -3.1209278106689453
    7. '                   ' → logprob: -5.245927810668945
    8. '   ' → logprob: -5.245927810668945
    9. ' continue' → logprob: -5.745927810668945
    10. 'continue' → logprob: -6.120927810668945

Token 578: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.042874496430158615
    2. ' continue' → logprob: -4.167874336242676
    3. 'continue' → logprob: -4.417874336242676
    4. ':' → logprob: -4.542874336242676
    5. ':
' → logprob: -6.167874336242676
    6. '               ' → logprob: -6.667874336242676
    7. '                       ' → logprob: -8.667874336242676
    8. '	continue' → logprob: -9.542874336242676
    9. '           ' → logprob: -9.917874336242676
    10. '   ' → logprob: -9.917874336242676

Token 579: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.38690564036369324
    2. 'continue' (adapté à ' continue') → logprob: -1.1369056701660156
    3. '                   ' → logprob: -11.511905670166016
    4. '   ' → logprob: -11.636905670166016
    5. '	continue' → logprob: -11.636905670166016
    6. '               ' → logprob: -12.136905670166016
    7. '           ' → logprob: -14.261905670166016
    8. '       ' → logprob: -14.886905670166016
    9. 'continu' → logprob: -15.761905670166016
    10. '                       ' → logprob: -15.886905670166016

Token 580: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030618764460086823
    2. '
' → logprob: -4.030618667602539
    3. '                
' → logprob: -4.655618667602539
    4. '                ' → logprob: -7.155618667602539
    5. ' 
' → logprob: -7.530618667602539
    6. '  
' → logprob: -8.280618667602539
    7. '<|end|>' → logprob: -8.655618667602539
    8. '\n' → logprob: -8.780618667602539
    9. '                    
' → logprob: -8.780618667602539
    10. '
' → logprob: -9.155618667602539

Token 581: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014047559816390276
    2. '                
' → logprob: -6.876404762268066
    3. '
' → logprob: -8.626404762268066
    4. '              ' → logprob: -9.876404762268066
    5. '                ' → logprob: -10.626404762268066
    6. 'if' → logprob: -10.751404762268066
    7. '               
' → logprob: -11.001404762268066
    8. '                    
' → logprob: -11.501404762268066
    9. '           ' → logprob: -11.626404762268066
    10. '  
' → logprob: -12.126404762268066

Token 582: ' Ne' (ID: 4475)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21237219870090485
    2. 'if' → logprob: -2.087372303009033
    3. ' if' → logprob: -3.462372303009033
    4. 'continue' → logprob: -4.087372303009033
    5. ' continue' → logprob: -4.712372303009033
    6. '                   ' → logprob: -4.962372303009033
    7. '           ' → logprob: -7.462372303009033
    8. '#' → logprob: -7.587372303009033
    9. 'next' → logprob: -7.712372303009033
    10. ' next' → logprob: -8.337371826171875

Token 583: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.017350317910313606
    2. 'p' → logprob: -4.142350196838379
    3. 'trait' → logprob: -8.017350196838379
    4. ' pas' → logprob: -8.392350196838379
    5. 're' → logprob: -8.517350196838379
    6. 'tra' → logprob: -8.642350196838379
    7. 'continue' → logprob: -9.017350196838379
    8. 'pass' → logprob: -9.267350196838379
    9. 'fait' → logprob: -10.267350196838379
    10. 'cesse' → logprob: -10.642350196838379

Token 584: ' revenir' (ID: 88322)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 're' → logprob: -0.3509690761566162
    2. 'ret' → logprob: -2.100969076156616
    3. 'contin' → logprob: -2.600969076156616
    4. 'rem' → logprob: -3.725969076156616
    5. 'ré' → logprob: -4.100969314575195
    6. 'trait' → logprob: -4.100969314575195
    7. 'expl' → logprob: -4.350969314575195
    8. 'tr' → logprob: -4.725969314575195
    9. 'repr' → logprob: -5.350969314575195
    10. 'vis' → logprob: -5.725969314575195

Token 585: ' vers' (ID: 3640)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.01646246947348118
    2. ' en' → logprob: -4.266462326049805
    3. 'sur' → logprob: -6.766462326049805
    4. 'au' → logprob: -7.266462326049805
    5. 'à' → logprob: -7.891462326049805
    6. '   ' → logprob: -10.766462326049805
    7. ' sur' → logprob: -11.766462326049805
    8. ' à' → logprob: -12.016462326049805
    9. '	en' → logprob: -12.391462326049805
    10. ' ' → logprob: -12.391462326049805

Token 586: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.008837802335619926
    2. ' le' → logprob: -5.508837699890137
    3. 'parent' → logprob: -5.758837699890137
    4. 'la' → logprob: -7.383837699890137
    5. 'l' → logprob: -7.758837699890137
    6. 'i' → logprob: -8.258837699890137
    7. 'j' → logprob: -8.758837699890137
    8. ' ' → logprob: -9.883837699890137
    9. ' parent' → logprob: -10.133837699890137
    10. ' i' → logprob: -11.508837699890137

Token 587: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.0036282234359532595
    2. ' parent' → logprob: -5.878628253936768
    3. 'i' → logprob: -7.378628253936768
    4. 'j' → logprob: -9.25362777709961
    5. 'p' → logprob: -11.00362777709961
    6. 'pere' → logprob: -11.12862777709961
    7. 'par' → logprob: -11.12862777709961
    8. '   ' → logprob: -12.00362777709961
    9. ' ' → logprob: -12.12862777709961
    10. 'node' → logprob: -12.25362777709961

Token 588: ' immédi' (ID: 69896)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009639095515012741
    2. '                
' → logprob: -4.884639263153076
    3. '                ' → logprob: -7.759639263153076
    4. '
' → logprob: -7.759639263153076
    5. '              ' → logprob: -8.259638786315918
    6. '<|end|>' → logprob: -8.634638786315918
    7. ')' → logprob: -9.134638786315918
    8. '  
' → logprob: -9.134638786315918
    9. '               
' → logprob: -9.259638786315918
    10. ' 
' → logprob: -9.509638786315918

Token 589: 'at' (ID: 266)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.7289432287216187
    2. 'iat' → logprob: -0.8539432287216187
    3. 'é' → logprob: -3.228943347930908
    4. 'at' → logprob: -3.353943347930908
    5. 'ate' → logprob: -5.853943347930908
    6. 'édi' → logprob: -5.978943347930908
    7. 'édit' → logprob: -6.478943347930908
    8. 'di' → logprob: -6.728943347930908
    9. 'edent' → logprob: -7.103943347930908
    10. 'enant' → logprob: -7.228943347930908

Token 590: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0448058545589447
    2. '                
' → logprob: -3.6698057651519775
    3. '
' → logprob: -4.419806003570557
    4. '                ' → logprob: -7.169806003570557
    5. '<|end|>' → logprob: -7.294806003570557
    6. ' 
' → logprob: -7.419806003570557
    7. '  
' → logprob: -7.669806003570557
    8. '                    
' → logprob: -7.794806003570557
    9. '\n' → logprob: -7.919806003570557
    10. ')' → logprob: -7.919806003570557

Token 591: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0033622467890381813
    2. '                
' → logprob: -5.87836217880249
    3. ' if' → logprob: -8.628362655639648
    4. '```' → logprob: -9.378362655639648
    5. '                ' → logprob: -9.628362655639648
    6. '              ' → logprob: -10.253362655639648
    7. 'if' → logprob: -10.378362655639648
    8. '
' → logprob: -10.378362655639648
    9. ' 
' → logprob: -10.878362655639648
    10. '  
' → logprob: -10.878362655639648

Token 592: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.003987927455455065
    2. '               ' → logprob: -5.628987789154053
    3. ' if' → logprob: -7.878987789154053
    4. '                   ' → logprob: -12.753988265991211
    5. 'elif' → logprob: -13.253988265991211
    6. '                ' → logprob: -13.503988265991211
    7. '                
' → logprob: -14.378988265991211
    8. '```' → logprob: -14.503988265991211
    9. '#' (adapté à ' #') → logprob: -14.753988265991211
    10. '           ' → logprob: -14.753988265991211

Token 593: ' Dé' (ID: 27247)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008384577231481671
    2. '               ' → logprob: -7.375838279724121
    3. ' if' → logprob: -8.500838279724121
    4. 'elif' → logprob: -12.500838279724121
    5. 'If' → logprob: -13.250838279724121
    6. '                   ' → logprob: -14.000838279724121
    7. 'diff' → logprob: -14.875838279724121
    8. '                ' → logprob: -15.000838279724121
    9. '```' → logprob: -15.000838279724121
    10. 'depth' → logprob: -15.375838279724121

Token 594: 'du' (ID: 698)
  Prédit: 'tection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tection' → logprob: -0.9177588224411011
    2. 'fin' → logprob: -1.042758822441101
    3. 'tect' → logprob: -2.7927589416503906
    4. 'f' → logprob: -2.7927589416503906
    5. 'if' → logprob: -3.0427589416503906
    6. 'termin' → logprob: -3.7927589416503906
    7. 'du' → logprob: -4.042758941650391
    8. 'duction' → logprob: -4.542758941650391
    9. 'termination' → logprob: -5.167758941650391
    10. 'jà' → logprob: -5.167758941650391

Token 595: 'ire' (ID: 594)
  Prédit: 'uire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uire' → logprob: -0.6349125504493713
    2. 'ire' → logprob: -0.7599125504493713
    3. 'du' → logprob: -7.009912490844727
    4. 'u' → logprob: -7.634912490844727
    5. 're' → logprob: -8.884912490844727
    6. 'uis' → logprob: -9.134912490844727
    7. 'ure' → logprob: -9.384912490844727
    8. 'uction' → logprob: -9.509912490844727
    9. 'que' → logprob: -9.509912490844727
    10. 'ic' → logprob: -10.134912490844727

Token 596: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.3215087652206421
    2. ' nums' → logprob: -1.571508765220642
    3. ' if' → logprob: -3.3215088844299316
    4. 'if' → logprob: -4.321508884429932
    5. '               ' → logprob: -5.571508884429932
    6. 'num' → logprob: -5.571508884429932
    7. '                   ' → logprob: -5.571508884429932
    8. ' la' → logprob: -6.321508884429932
    9. ' the' → logprob: -7.196508884429932
    10. 'val' → logprob: -7.571508884429932

Token 597: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0024487809278070927
    2. 'j' → logprob: -6.627448558807373
    3. '_j' → logprob: -8.127449035644531
    4. '                   ' → logprob: -8.377449035644531
    5. '[' → logprob: -8.877449035644531
    6. ' =' → logprob: -9.002449035644531
    7. '               ' → logprob: -9.627449035644531
    8. ' [' → logprob: -10.002449035644531
    9. 'if' → logprob: -10.502449035644531
    10. '=' → logprob: -10.752449035644531

Token 598: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021514253690838814
    2. ']=' → logprob: -4.771514415740967
    3. '=' → logprob: -5.271514415740967
    4. ' =' → logprob: -5.396514415740967
    5. ' ]' → logprob: -6.271514415740967
    6. ')' → logprob: -7.146514415740967
    7. '])' → logprob: -9.021513938903809
    8. '],' → logprob: -9.271513938903809
    9. 'if' → logprob: -9.896513938903809
    10. '                   ' → logprob: -10.396513938903809

Token 599: ' via' (ID: 4493)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31510496139526367
    2. ' =' → logprob: -1.3151049613952637
    3. '               ' → logprob: -6.565104961395264
    4. '=num' → logprob: -9.690105438232422
    5. ':' → logprob: -9.940105438232422
    6. ',' → logprob: -10.065105438232422
    7. '                ' → logprob: -10.190105438232422
    8. '<|end|>' → logprob: -10.315105438232422
    9. '=None' → logprob: -10.565105438232422
    10. 'from' → logprob: -10.815105438232422

Token 600: ' l' (ID: 305)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.026597855612635612
    2. ' nums' → logprob: -4.15159797668457
    3. 's' → logprob: -4.90159797668457
    4. '2' → logprob: -7.02659797668457
    5. '(nums' → logprob: -7.40159797668457
    6. ' s' → logprob: -8.52659797668457
    7. 'the' → logprob: -8.52659797668457
    8. '   ' → logprob: -8.65159797668457
    9. 'num' → logprob: -9.15159797668457
    10. 'dfs' → logprob: -9.52659797668457

Token 601: ''équ' (ID: 170507)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.2868148386478424
    2. 'a' → logprob: -2.4118149280548096
    3. 'i' → logprob: -3.2868149280548096
    4. '[i' → logprob: -4.2868146896362305
    5. ''' → logprob: -4.9118146896362305
    6. '[' → logprob: -5.1618146896362305
    7. '=' → logprob: -5.1618146896362305
    8. 'l' → logprob: -5.2868146896362305
    9. 'inks' → logprob: -5.4118146896362305
    10. 'es' → logprob: -5.4118146896362305

Token 602: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.09948721528053284
    2. 'nums' → logprob: -2.4744873046875
    3. 'ations' → logprob: -5.4744873046875
    4. 'a' → logprob: -5.7244873046875
    5. 's' → logprob: -6.2244873046875
    6. '(nums' → logprob: -7.3494873046875
    7. ' nums' → logprob: -8.3494873046875
    8. 'atio' → logprob: -10.3494873046875
    9. '_nums' → logprob: -11.2244873046875
    10. 'num' → logprob: -11.3494873046875

Token 603: ' :' (ID: 712)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.5316230654716492
    2. ' =' → logprob: -2.156623125076294
    3. '               ' → logprob: -2.156623125076294
    4. '=' → logprob: -2.406623125076294
    5. ' nums' → logprob: -3.031623125076294
    6. '                   ' → logprob: -3.281623125076294
    7. '(nums' → logprob: -7.156622886657715
    8. ':' → logprob: -7.156622886657715
    9. '                ' → logprob: -7.281622886657715
    10. ',' → logprob: -7.906622886657715

Token 604: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.01135561428964138
    2. ' nums' → logprob: -4.636355400085449
    3. '                   ' → logprob: -7.261355400085449
    4. 's' → logprob: -7.761355400085449
    5. '               ' → logprob: -8.76135540008545
    6. '(nums' → logprob: -9.88635540008545
    7. 'num' → logprob: -10.13635540008545
    8. 'if' → logprob: -10.38635540008545
    9. '`' → logprob: -10.63635540008545
    10. '   ' → logprob: -10.76135540008545

Token 605: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04906748607754707
    2. '[i' → logprob: -3.299067497253418
    3. 'j' → logprob: -4.549067497253418
    4. 'i' → logprob: -8.299067497253418
    5. '[' → logprob: -9.674067497253418
    6. '_j' → logprob: -11.049067497253418
    7. '	j' → logprob: -12.049067497253418
    8. '=j' → logprob: -12.049067497253418
    9. ' [' → logprob: -12.361567497253418
    10. 'ij' → logprob: -12.486567497253418

Token 606: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014854694716632366
    2. '[j' → logprob: -4.764854907989502
    3. ']+' → logprob: -5.264854907989502
    4. '']' → logprob: -7.764854907989502
    5. '[i' → logprob: -8.014854431152344
    6. 'j' → logprob: -9.389854431152344
    7. '][' → logprob: -10.014854431152344
    8. '"]' → logprob: -10.139854431152344
    9. ']
' → logprob: -10.389854431152344
    10. ' ]' → logprob: -10.389854431152344

Token 607: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5938810110092163
    2. '=' → logprob: -1.5938810110092163
    3. '[j' → logprob: -2.593881130218506
    4. ' -' → logprob: -2.843881130218506
    5. '-j' → logprob: -2.843881130218506
    6. ']' → logprob: -4.343881130218506
    7. '+' → logprob: -4.468881130218506
    8. ' =' → logprob: -4.593881130218506
    9. ')' → logprob: -5.593881130218506
    10. 'j' → logprob: -6.093881130218506

Token 608: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0017149277264252305
    2. ' nums' → logprob: -6.376714706420898
    3. 'num' → logprob: -12.376714706420898
    4. '(nums' → logprob: -13.001714706420898
    5. 'j' → logprob: -13.626714706420898
    6. 's' → logprob: -13.876714706420898
    7. 'tokens' → logprob: -13.876714706420898
    8. '[j' → logprob: -14.626714706420898
    9. '=' → logprob: -15.001714706420898
    10. 'numbers' → logprob: -15.251714706420898

Token 609: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002441741817165166
    2. '[' → logprob: -8.375244140625
    3. 'j' → logprob: -11.500244140625
    4. '[i' → logprob: -13.250244140625
    5. ' [' → logprob: -14.000244140625
    6. '[
' → logprob: -15.250244140625
    7. '```' → logprob: -16.000244140625
    8. '[js' → logprob: -16.250244140625
    9. '(j' → logprob: -17.250244140625
    10. '	j' → logprob: -17.250244140625

Token 610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4279342293739319
    2. '=' → logprob: -1.677934169769287
    3. ' =' → logprob: -1.927934169769287
    4. '==' → logprob: -5.052934169769287
    5. ' ==' → logprob: -5.427934169769287
    6. ']=' → logprob: -5.552934169769287
    7. ']==' → logprob: -7.052934169769287
    8. ' ]' → logprob: -8.677934646606445
    9. '}' → logprob: -9.177934646606445
    10. ')' → logprob: -10.302934646606445

Token 611: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2257164865732193
    2. ' =' → logprob: -1.600716471672058
    3. '==' → logprob: -8.350716590881348
    4. ' ==' → logprob: -9.725716590881348
    5. ' ' → logprob: -12.850716590881348
    6. 's' → logprob: -13.225716590881348
    7. ')' → logprob: -14.475716590881348
    8. ',' → logprob: -14.850716590881348
    9. '=j' → logprob: -14.975716590881348
    10. '=s' → logprob: -15.225716590881348

Token 612: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.018151817843317986
    2. ' s' → logprob: -4.018151760101318
    3. ' ' → logprob: -14.268152236938477
    4. '(s' → logprob: -14.643152236938477
    5. '   ' → logprob: -15.018152236938477
    6. ''s' → logprob: -16.393152236938477
    7. '                   ' → logprob: -16.518152236938477
    8. '  ' → logprob: -16.643152236938477
    9. '    ' → logprob: -16.643152236938477
    10. '	s' → logprob: -16.768152236938477

Token 613: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5859563946723938
    2. '[j' → logprob: -0.8359563946723938
    3. '[' → logprob: -5.585956573486328
    4. '_[' → logprob: -5.960956573486328
    5. ' -' → logprob: -6.710956573486328
    6. '[i' → logprob: -7.210956573486328
    7. '_j' → logprob: -7.335956573486328
    8. '-' → logprob: -8.710956573486328
    9. 'j' → logprob: -8.835956573486328
    10. '   ' → logprob: -9.335956573486328

Token 614: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.00034964739461429417
    2. '_' → logprob: -8.750349998474121
    3. '[i' → logprob: -8.750349998474121
    4. ' ij' → logprob: -11.125349998474121
    5. 'i' → logprob: -11.750349998474121
    6. '_i' → logprob: -12.875349998474121
    7. '   ' → logprob: -13.625349998474121
    8. '[' → logprob: -13.750349998474121
    9. ' ' → logprob: -14.500349998474121
    10. '`' → logprob: -14.875349998474121

Token 615: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01675357110798359
    2. '                
' → logprob: -5.141753673553467
    3. '                   ' → logprob: -5.891753673553467
    4. 'nums' → logprob: -6.516753673553467
    5. '=' → logprob: -7.266753673553467
    6. ' nums' → logprob: -7.391753673553467
    7. '           ' → logprob: -7.391753673553467
    8. ')' → logprob: -7.391753673553467
    9. ' 
' → logprob: -7.391753673553467
    10. '
' → logprob: -7.766753673553467

Token 616: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005485610105097294
    2. '                
' → logprob: -5.880485534667969
    3. '                ' → logprob: -7.505485534667969
    4. ')' → logprob: -8.130485534667969
    5. '                   ' → logprob: -8.255485534667969
    6. ',' → logprob: -8.505485534667969
    7. 'nums' → logprob: -9.005485534667969
    8. ' ' → logprob: -9.130485534667969
    9. ' 
' → logprob: -9.255485534667969
    10. '=' → logprob: -9.255485534667969

Token 617: ' num' (ID: 2269)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.0031766409520059824
    2. ' nums' → logprob: -6.378176689147949
    3. '                   ' → logprob: -7.128176689147949
    4. '               ' → logprob: -7.753176689147949
    5. 'if' → logprob: -8.87817668914795
    6. '                       ' → logprob: -10.25317668914795
    7. '   ' → logprob: -11.00317668914795
    8. '           ' → logprob: -11.25317668914795
    9. 'num' (adapté à ' num') → logprob: -11.37817668914795
    10. ' if' → logprob: -12.25317668914795

Token 618: '_j' (ID: 12021)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.000963627069722861
    2. 'sj' → logprob: -7.2509636878967285
    3. 'j' → logprob: -9.12596321105957
    4. '[j' → logprob: -9.25096321105957
    5. '_j' → logprob: -11.12596321105957
    6. '[s' → logprob: -11.62596321105957
    7. ' s' → logprob: -12.25096321105957
    8. '   ' → logprob: -12.50096321105957
    9. 'js' → logprob: -12.62596321105957
    10. '       ' → logprob: -13.12596321105957

Token 619: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6367449760437012
    2. '=' → logprob: -1.0117449760437012
    3. 's' → logprob: -2.261744976043701
    4. '[j' → logprob: -5.886744976043701
    5. '[' → logprob: -9.26174545288086
    6. '[s' → logprob: -9.38674545288086
    7. '=j' → logprob: -9.63674545288086
    8. '   ' → logprob: -9.88674545288086
    9. '[i' → logprob: -10.51174545288086
    10. ' ' → logprob: -10.51174545288086

Token 620: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -6.337155355140567e-05
    2. ' s' → logprob: -10.000062942504883
    3. 'links' → logprob: -12.250062942504883
    4. '(s' → logprob: -12.500062942504883
    5. '   ' → logprob: -13.125062942504883
    6. '                   ' → logprob: -13.125062942504883
    7. '           ' → logprob: -13.250062942504883
    8. '               ' → logprob: -13.625062942504883
    9. '_s' → logprob: -15.000062942504883
    10. '`s' → logprob: -15.125062942504883

Token 621: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00044127836008556187
    2. 'ij' → logprob: -8.000441551208496
    3. '[i' → logprob: -9.875441551208496
    4. '[' → logprob: -10.375441551208496
    5. 's' → logprob: -11.875441551208496
    6. '[j' → logprob: -12.250441551208496
    7. '_i' → logprob: -12.750441551208496
    8. '-' → logprob: -13.625441551208496
    9. '_j' → logprob: -13.625441551208496
    10. 'j' → logprob: -13.750441551208496

Token 622: 'ij' (ID: 681)
  Prédit: 'ij'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ij' → logprob: -0.00014478032244369388
    2. 's' → logprob: -10.000144958496094
    3. 'i' → logprob: -10.125144958496094
    4. '[i' → logprob: -10.500144958496094
    5. '_' → logprob: -11.000144958496094
    6. 'j' → logprob: -13.125144958496094
    7. ' ij' → logprob: -13.125144958496094
    8. 'iji' → logprob: -14.000144958496094
    9. '   ' → logprob: -14.125144958496094
    10. '`' → logprob: -14.250144958496094

Token 623: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.016098538413643837
    2. '-' → logprob: -4.141098499298096
    3. ' ' → logprob: -9.766098976135254
    4. '   ' → logprob: -13.016098976135254
    5. '    ' → logprob: -13.641098976135254
    6. ' ' → logprob: -13.766098976135254
    7. ')' → logprob: -14.391098976135254
    8. '[' → logprob: -14.891098976135254
    9. '  ' → logprob: -14.891098976135254
    10. '     ' → logprob: -15.641098976135254

Token 624: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -2.5776860184123507e-06
    2. ' nums' → logprob: -13.12500286102295
    3. 'num' → logprob: -15.00000286102295
    4. '(nums' → logprob: -16.125001907348633
    5. 'Nums' → logprob: -18.375001907348633
    6. '_nums' → logprob: -18.875001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '[' → logprob: -21.250001907348633
    9. '0' → logprob: -21.750001907348633
    10. 'numbers' → logprob: -22.250001907348633

Token 625: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010962257510982454
    2. 'i' → logprob: -9.125109672546387
    3. '[j' → logprob: -15.000109672546387
    4. '[' → logprob: -15.250109672546387
    5. 's' → logprob: -16.75010871887207
    6. '[u' → logprob: -17.50010871887207
    7. '[
' → logprob: -17.75010871887207
    8. '(i' → logprob: -17.75010871887207
    9. ' i' → logprob: -18.12510871887207
    10. '[I' → logprob: -18.12510871887207

Token 626: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1812741607427597
    2. '               ' → logprob: -2.306274175643921
    3. '<|end|>' → logprob: -3.181274175643921
    4. '
' → logprob: -5.181273937225342
    5. '<|end|>' → logprob: -5.681273937225342
    6. ']' → logprob: -5.931273937225342
    7. '           ' → logprob: -6.181273937225342
    8. '                ' → logprob: -6.181273937225342
    9. '                   ' → logprob: -6.556273937225342
    10. ' 
' → logprob: -6.931273937225342

Token 627: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006635555997490883
    2. '                
' → logprob: -5.631635665893555
    3. '                ' → logprob: -6.631635665893555
    4. '<|end|>' → logprob: -7.881635665893555
    5. ' 
' → logprob: -8.381635665893555
    6. ' ' → logprob: -8.881635665893555
    7. '                               ' → logprob: -8.881635665893555
    8. ' if' → logprob: -9.006635665893555
    9. '                   ' → logprob: -9.131635665893555
    10. '              ' → logprob: -9.256635665893555

Token 628: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0006743087433278561
    2. ' if' → logprob: -8.0006742477417
    3. '               ' → logprob: -8.0006742477417
    4. '           ' → logprob: -13.2506742477417
    5. 'If' → logprob: -14.2506742477417
    6. '```' → logprob: -15.0006742477417
    7. '                ' → logprob: -15.3756742477417
    8. '                
' → logprob: -16.000675201416016
    9. '                   ' → logprob: -16.375675201416016
    10. '	if' → logprob: -16.375675201416016

Token 629: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.05636676028370857
    2. ' depth' → logprob: -2.9313666820526123
    3. 'nums' → logprob: -6.556366920471191
    4. ' nums' → logprob: -10.306366920471191
    5. 'num' → logprob: -11.431366920471191
    6. 'j' → logprob: -11.931366920471191
    7. '(depth' → logprob: -12.181366920471191
    8. ' ' → logprob: -13.431366920471191
    9. '   ' → logprob: -13.556366920471191
    10. 'not' → logprob: -14.556366920471191

Token 630: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.7432603272027336e-06
    2. ' [' → logprob: -14.250001907348633
    3. 'j' → logprob: -14.500001907348633
    4. '[' → logprob: -15.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. '[i' → logprob: -17.125001907348633
    7. '	j' → logprob: -18.000001907348633
    8. ')' → logprob: -18.000001907348633
    9. '[js' → logprob: -18.250001907348633
    10. '```' → logprob: -18.250001907348633

Token 631: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4463697671890259
    2. '==-' → logprob: -1.6963697671890259
    3. '==' → logprob: -1.8213697671890259
    4. ')' → logprob: -4.446369647979736
    5. '[' → logprob: -6.446369647979736
    6. '<' → logprob: -7.196369647979736
    7. ']==' → logprob: -8.321370124816895
    8. ' <' → logprob: -9.071370124816895
    9. ')==' → logprob: -9.196370124816895
    10. ']' → logprob: -9.321370124816895

Token 632: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.1318187713623047
    2. '==' → logprob: -1.3818187713623047
    3. '==-' → logprob: -1.3818187713623047
    4. '[' → logprob: -2.0068187713623047
    5. '[j' → logprob: -3.2568187713623047
    6. '[i' → logprob: -7.131818771362305
    7. ' ' → logprob: -8.131818771362305
    8. '=' → logprob: -8.506818771362305
    9. '<' → logprob: -9.006818771362305
    10. ']==' → logprob: -9.131818771362305

Token 633: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0206720617134124e-05
    2. ' -' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.375009536743164
    4. ' ' → logprob: -18.625009536743164
    5. '	' → logprob: -20.375009536743164
    6. '  ' → logprob: -21.625009536743164
    7. '−' → logprob: -22.125009536743164
    8. '    ' → logprob: -22.750009536743164
    9. '     ' → logprob: -23.250009536743164
    10. '‌' → logprob: -23.250009536743164

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.253090865968261e-06
    2. ' ' → logprob: -11.750009536743164
    3. '   ' → logprob: -14.625009536743164
    4. '                   ' → logprob: -15.375009536743164
    5. '```' → logprob: -15.500009536743164
    6. '2' → logprob: -16.125009536743164
    7. '           ' → logprob: -16.812509536743164
    8. '               ' → logprob: -16.937509536743164
    9. '                       ' → logprob: -17.125009536743164
    10. '       ' → logprob: -17.187509536743164

Token 635: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.19731833040714264
    2. ' and' → logprob: -1.8223183155059814
    3. ':
' → logprob: -4.3223185539245605
    4. 'and' → logprob: -5.8223185539245605
    5. '<|end|>' → logprob: -7.6973185539245605
    6. ' :' → logprob: -8.197318077087402
    7. ',' → logprob: -8.947318077087402
    8. '<|end|>' → logprob: -9.572318077087402
    9. '               ' → logprob: -9.697318077087402
    10. '           ' → logprob: -10.447318077087402

Token 636: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1927352100610733
    2. ':' → logprob: -2.567735195159912
    3. '               ' → logprob: -3.817735195159912
    4. '                    ' → logprob: -4.317735195159912
    5. '                           ' → logprob: -4.692735195159912
    6. '                       ' → logprob: -4.817735195159912
    7. '                               ' → logprob: -4.817735195159912
    8. '                ' → logprob: -4.817735195159912
    9. ' :' → logprob: -4.942735195159912
    10. ' if' → logprob: -5.442735195159912

Token 637: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11008832603693008
    2. 'diff' → logprob: -2.860088348388672
    3. '                   ' → logprob: -3.860088348388672
    4. ' if' → logprob: -4.235088348388672
    5. '                       ' → logprob: -5.360088348388672
    6. '#' (adapté à ' #') → logprob: -5.985088348388672
    7. 'd' → logprob: -6.860088348388672
    8. 'cycle' → logprob: -7.485088348388672
    9. 'val' → logprob: -7.485088348388672
    10. 'delta' → logprob: -7.610088348388672

Token 638: ' Dé' (ID: 27247)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00913151353597641
    2. ' if' → logprob: -5.00913143157959
    3. '                   ' → logprob: -6.50913143157959
    4. '#' → logprob: -7.63413143157959
    5. 'diff' → logprob: -8.38413143157959
    6. 'depth' → logprob: -9.75913143157959
    7. 'cycle' → logprob: -10.13413143157959
    8. '                       ' → logprob: -10.50913143157959
    9. 'd' → logprob: -11.00913143157959
    10. 'c' → logprob: -11.88413143157959

Token 639: 'tect' (ID: 8230)
  Prédit: 'tect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tect' → logprob: -0.004310718737542629
    2. 'tection' → logprob: -6.754310607910156
    3. 'te' → logprob: -7.254310607910156
    4. 't' → logprob: -7.254310607910156
    5. 'tected' → logprob: -7.629310607910156
    6. 'jà' → logprob: -8.004310607910156
    7. 'celer' → logprob: -8.504310607910156
    8. 'tec' → logprob: -9.004310607910156
    9. 'j' → logprob: -9.629310607910156
    10. 'termin' → logprob: -9.754310607910156

Token 640: 'e' (ID: 68)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.2365644872188568
    2. 'ion' → logprob: -2.4865643978118896
    3. 't' → logprob: -2.6115643978118896
    4. 'e' → logprob: -3.4865643978118896
    5. 'tion' → logprob: -4.236564636230469
    6. 'é' → logprob: -5.736564636230469
    7. 'if' → logprob: -7.111564636230469
    8. '               ' → logprob: -7.236564636230469
    9. 'ons' → logprob: -7.611564636230469
    10. '           ' → logprob: -7.611564636230469

Token 641: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.13736896216869354
    2. ' if' → logprob: -2.51236891746521
    3. ' une' → logprob: -3.88736891746521
    4. ' a' → logprob: -4.262369155883789
    5. 'if' → logprob: -4.887369155883789
    6. ' si' → logprob: -6.887369155883789
    7. 'ion' → logprob: -7.137369155883789
    8. 'a' → logprob: -7.262369155883789
    9. 's' → logprob: -7.637369155883789
    10. 'un' → logprob: -8.012369155883789

Token 642: ' cycle' (ID: 15839)
  Prédit: ' conflit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' conflit' → logprob: -0.4175308644771576
    2. 'con' → logprob: -1.16753089427948
    3. 'conf' → logprob: -4.2925310134887695
    4. ' conflict' → logprob: -4.9175310134887695
    5. 'cycle' → logprob: -6.1675310134887695
    6. ' cycle' → logprob: -6.1675310134887695
    7. 'possible' → logprob: -7.1675310134887695
    8. ' ' → logprob: -7.1675310134887695
    9. ' conflits' → logprob: -7.2925310134887695
    10. ' possible' → logprob: -7.4175310134887695

Token 643: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6699182391166687
    2. ' if' → logprob: -1.0449182987213135
    3. 'if' → logprob: -2.1699182987213135
    4. '                       ' → logprob: -4.169918060302734
    5. '               ' → logprob: -5.544918060302734
    6. ',' → logprob: -7.544918060302734
    7. '                    ' → logprob: -8.044918060302734
    8. '                    
' → logprob: -8.044918060302734
    9. ':' → logprob: -8.169918060302734
    10. '                           ' → logprob: -8.169918060302734

Token 644: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15770454704761505
    2. ' if' → logprob: -2.4077045917510986
    3. 'if' → logprob: -3.1577045917510986
    4. '               ' → logprob: -5.1577043533325195
    5. '                       ' → logprob: -5.2827043533325195
    6. ',' → logprob: -7.7827043533325195
    7. '                    
' → logprob: -8.03270435333252
    8. ' and' → logprob: -8.15770435333252
    9. '           ' → logprob: -8.40770435333252
    10. ':' → logprob: -8.40770435333252

Token 645: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10426275432109833
    2. 'diff' → logprob: -2.4792628288269043
    3. '                   ' → logprob: -4.729262828826904
    4. 'd' → logprob: -5.979262828826904
    5. '                       ' → logprob: -6.604262828826904
    6. ' if' → logprob: -7.229262828826904
    7. 'depth' → logprob: -7.854262828826904
    8. 'delta' → logprob: -8.104262351989746
    9. 'cycle' → logprob: -8.479262351989746
    10. 'dist' → logprob: -8.729262351989746

Token 646: ' Deux' (ID: 92086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17542950809001923
    2. 'diff' → logprob: -2.050429582595825
    3. 'd' → logprob: -4.925429344177246
    4. 'depth' → logprob: -5.800429344177246
    5. ' if' → logprob: -5.925429344177246
    6. 'dist' → logprob: -6.050429344177246
    7. 'cycle' → logprob: -6.050429344177246
    8. 'delta' → logprob: -6.175429344177246
    9. '                   ' → logprob: -6.300429344177246
    10. 'val' → logprob: -6.300429344177246

Token 647: ' façons' (ID: 165958)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7021164298057556
    2. ' if' → logprob: -1.5771164894104004
    3. ' cas' → logprob: -2.5771164894104004
    4. 'depth' → logprob: -2.9521164894104004
    5. 'cases' → logprob: -3.4521164894104004
    6. ' cases' → logprob: -4.0771164894104
    7. 'elif' → logprob: -4.3271164894104
    8. 'diff' → logprob: -4.3271164894104
    9. '               ' → logprob: -4.7021164894104
    10. 'poss' → logprob: -4.7021164894104

Token 648: ' possibles' (ID: 97753)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7798162698745728
    2. '                   ' → logprob: -1.0298162698745728
    3. '                       ' → logprob: -2.529816150665283
    4. 'if' → logprob: -3.029816150665283
    5. ' de' → logprob: -4.654816150665283
    6. 'de' → logprob: -4.654816150665283
    7. '                           ' → logprob: -5.279816150665283
    8. 'd' → logprob: -5.404816150665283
    9. '                    ' → logprob: -5.529816150665283
    10. ' if' → logprob: -5.904816150665283

Token 649: ' d' (ID: 272)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7400563359260559
    2. ':' → logprob: -1.1150562763214111
    3. 'if' → logprob: -2.615056276321411
    4. '                       ' → logprob: -2.740056276321411
    5. ' if' → logprob: -3.115056276321411
    6. '               ' → logprob: -5.86505651473999
    7. '                    ' → logprob: -6.24005651473999
    8. ' :' → logprob: -6.61505651473999
    9. ':
' → logprob: -6.74005651473999
    10. '                           ' → logprob: -7.49005651473999

Token 650: ''arr' (ID: 49695)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22533820569515228
    2. 'é' → logprob: -2.3503382205963135
    3. 'être' → logprob: -3.8503382205963135
    4. 'éc' → logprob: -3.9753382205963135
    5. 'etect' → logprob: -4.475337982177734
    6. 'errer' → logprob: -5.475337982177734
    7. 'avoir' → logprob: -5.475337982177734
    8. ''être' → logprob: -5.600337982177734
    9. 'eux' → logprob: -5.725337982177734
    10. 'év' → logprob: -5.850337982177734

Token 651: 'iver' (ID: 1788)
  Prédit: 'iver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iver' → logprob: -0.024679971858859062
    2. 'êter' → logprob: -4.649680137634277
    3. 'ivée' → logprob: -5.149680137634277
    4. 'ive' → logprob: -5.399680137634277
    5. '\' → logprob: -7.524680137634277
    6. 'iv' → logprob: -7.837180137634277
    7. '#' → logprob: -8.087180137634277
    8. 'ivé' → logprob: -8.649680137634277
    9. 'ver' → logprob: -8.712180137634277
    10. '
' → logprob: -8.837180137634277

Token 652: ' à' (ID: 1221)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -0.07214145362377167
    2. 'au' → logprob: -3.197141408920288
    3. ' à' → logprob: -4.572141647338867
    4. 'aux' → logprob: -5.447141647338867
    5. '                   ' → logprob: -5.572141647338867
    6. 'a' → logprob: -6.322141647338867
    7. '               ' → logprob: -6.447141647338867
    8. 'j' → logprob: -6.447141647338867
    9. 'ici' → logprob: -7.322141647338867
    10. 'jus' → logprob: -7.322141647338867

Token 653: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4394848048686981
    2. 'nums' → logprob: -1.3144848346710205
    3. 'num' → logprob: -3.8144848346710205
    4. 'conf' → logprob: -3.9394848346710205
    5. 'contr' → logprob: -3.9394848346710205
    6. 'un' → logprob: -4.439484596252441
    7. 'une' → logprob: -5.064484596252441
    8. 'con' → logprob: -6.439484596252441
    9. 'la' → logprob: -6.689484596252441
    10. 'val' → logprob: -6.939484596252441

Token 654: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3428118824958801
    2. ':' → logprob: -1.7178118228912354
    3. ':
' → logprob: -2.9678118228912354
    4. ',' → logprob: -4.3428120613098145
    5. '                    
' → logprob: -5.3428120613098145
    6. '                       ' → logprob: -5.5928120613098145
    7. '                           ' → logprob: -5.7178120613098145
    8. '                    ' → logprob: -5.8428120613098145
    9. ':

' → logprob: -6.4678120613098145
    10. '               ' → logprob: -6.4678120613098145

Token 655: ' il' (ID: 1793)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1094665452837944
    2. 'if' → logprob: -2.734466552734375
    3. ' if' → logprob: -3.484466552734375
    4. '                       ' → logprob: -5.359466552734375
    5. '                    ' → logprob: -6.859466552734375
    6. '                    
' → logprob: -7.484466552734375
    7. '```' → logprob: -8.109466552734375
    8. '               ' → logprob: -8.234466552734375
    9. '#' → logprob: -8.609466552734375
    10. '                               ' → logprob: -9.359466552734375

Token 656: ' faut' (ID: 17821)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.234588161110878
    2. ' faut' → logprob: -1.9845881462097168
    3. 'y' → logprob: -3.359588146209717
    4. 'fa' → logprob: -4.609588146209717
    5. 's' → logprob: -4.859588146209717
    6. ' y' → logprob: -5.484588146209717
    7. ' faudrait' → logprob: -5.734588146209717
    8. ' faudra' → logprob: -6.984588146209717
    9. 'a' → logprob: -7.109588146209717
    10. '                   ' → logprob: -7.234588146209717

Token 657: ' que' (ID: 661)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.20423062145709991
    2. 'if' → logprob: -3.079230546951294
    3. 'contin' → logprob: -3.704230546951294
    4. 'ver' → logprob: -3.829230546951294
    5. 'check' → logprob: -3.829230546951294
    6. ' vérifier' → logprob: -3.829230546951294
    7. 'assert' → logprob: -4.704230785369873
    8. '   ' → logprob: -4.829230785369873
    9. '#' → logprob: -5.204230785369873
    10. 'val' → logprob: -5.454230785369873

Token 658: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.875785231590271
    2. 'if' → logprob: -1.250785231590271
    3. 'num' → logprob: -1.375785231590271
    4. '(nums' → logprob: -4.1257853507995605
    5. '(num' → logprob: -4.7507853507995605
    6. '(' → logprob: -5.0007853507995605
    7. 'abs' → logprob: -5.6257853507995605
    8. ' nums' → logprob: -6.0007853507995605
    9. 'assert' → logprob: -6.6257853507995605
    10. ' if' → logprob: -7.0007853507995605

Token 659: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.002759345108643174
    2. '[i' → logprob: -6.2527594566345215
    3. 'j' → logprob: -7.1277594566345215
    4. '[' → logprob: -12.127758979797363
    5. '   ' → logprob: -12.127758979797363
    6. '
' → logprob: -12.877758979797363
    7. ' [' → logprob: -13.252758979797363
    8. 'i' → logprob: -13.252758979797363
    9. '```' → logprob: -13.252758979797363
    10. '[u' → logprob: -13.502758979797363

Token 660: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.35685110092163086
    2. '==' → logprob: -1.9818511009216309
    3. ' +' → logprob: -2.481851100921631
    4. '+' → logprob: -2.731851100921631
    5. ']' → logprob: -4.731851100921631
    6. ']==' → logprob: -5.481851100921631
    7. ' ]' → logprob: -8.481851577758789
    8. ' ' → logprob: -9.106851577758789
    9. '[' → logprob: -9.356851577758789
    10. ')' → logprob: -10.106851577758789

Token 661: ' soit' (ID: 17293)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8653407692909241
    2. '==' → logprob: -1.4903407096862793
    3. '+' → logprob: -1.6153407096862793
    4. ' +' → logprob: -1.8653407096862793
    5. ' ' → logprob: -10.865341186523438
    6. '```' → logprob: -10.865341186523438
    7. ')==' → logprob: -11.115341186523438
    8. ']==' → logprob: -11.115341186523438
    9. '[' → logprob: -11.365341186523438
    10. '=' → logprob: -11.615341186523438

Token 662: ' consist' (ID: 8897)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.01520521566271782
    2. 'exact' → logprob: -4.765205383300781
    3. 'égal' → logprob: -5.890205383300781
    4. '==' → logprob: -6.640205383300781
    5. 'equal' → logprob: -7.015205383300781
    6. ' num' → logprob: -7.765205383300781
    7. '=' → logprob: -7.765205383300781
    8. ' égal' → logprob: -8.140205383300781
    9. 'egal' → logprob: -9.265205383300781
    10. 'compatible' → logprob: -9.765205383300781

Token 663: 'ant' (ID: 493)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -0.0006115250871516764
    2. 'e' → logprob: -7.625611305236816
    3. 'ents' → logprob: -9.375611305236816
    4. 'ant' → logprob: -10.625611305236816
    5. 'en' → logprob: -12.250611305236816
    6. 'entes' → logprob: -13.625611305236816
    7. 'et' → logprob: -13.750611305236816
    8. 'ente' → logprob: -13.750611305236816
    9. 'end' → logprob: -14.125611305236816
    10. '#' → logprob: -14.125611305236816

Token 664: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0056085423566401005
    2. '               ' → logprob: -5.630608558654785
    3. '                    
' → logprob: -7.380608558654785
    4. ',' → logprob: -8.505608558654785
    5. ' and' → logprob: -8.505608558654785
    6. ':' → logprob: -8.880608558654785
    7. '                       ' → logprob: -8.880608558654785
    8. '                    ' → logprob: -9.005608558654785
    9. ':
' → logprob: -9.380608558654785
    10. ' with' → logprob: -9.630608558654785

Token 665: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.16424311697483063
    2. '               ' → logprob: -2.164243221282959
    3. ' and' → logprob: -4.664243221282959
    4. '                       ' → logprob: -4.914243221282959
    5. ':' → logprob: -5.664243221282959
    6. '                    ' → logprob: -5.789243221282959
    7. '                ' → logprob: -6.539243221282959
    8. '                               ' → logprob: -6.539243221282959
    9. 'and' → logprob: -6.789243221282959
    10. ',' → logprob: -6.914243221282959

Token 666: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018648279830813408
    2. '                   ' → logprob: -4.518648147583008
    3. ' if' → logprob: -4.893648147583008
    4. '                       ' → logprob: -9.893648147583008
    5. '```' → logprob: -11.393648147583008
    6. '               ' → logprob: -12.643648147583008
    7. '                           ' → logprob: -12.893648147583008
    8. '                    ' → logprob: -13.143648147583008
    9. '                    
' → logprob: -13.143648147583008
    10. '           ' → logprob: -14.268648147583008

Token 667: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.08155766874551773
    2. 'num' → logprob: -3.0815577507019043
    3. ' nums' → logprob: -3.4565577507019043
    4. ' num' → logprob: -7.206557750701904
    5. '(nums' → logprob: -9.456557273864746
    6. '   ' → logprob: -10.331557273864746
    7. 'abs' → logprob: -11.581557273864746
    8. '	num' → logprob: -12.081557273864746
    9. '(num' → logprob: -12.456557273864746
    10. '(' → logprob: -12.831557273864746

Token 668: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.106736039626412e-05
    2. '[i' → logprob: -11.125031471252441
    3. 'j' → logprob: -11.375031471252441
    4. '[' → logprob: -12.875031471252441
    5. ' [' → logprob: -14.000031471252441
    6. '][' → logprob: -15.000031471252441
    7. '   ' → logprob: -15.875031471252441
    8. ']' → logprob: -16.125030517578125
    9. '[
' → logprob: -16.375030517578125
    10. '	j' → logprob: -16.375030517578125

Token 669: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6447362303733826
    2. ' !=' → logprob: -0.7697362303733826
    3. '+' → logprob: -5.144736289978027
    4. ']!=' → logprob: -6.019736289978027
    5. ']' → logprob: -6.269736289978027
    6. ' +' → logprob: -7.269736289978027
    7. ')!=' → logprob: -7.519736289978027
    8. ')' → logprob: -8.019736289978027
    9. '==' → logprob: -9.269736289978027
    10. '[' → logprob: -9.644736289978027

Token 670: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.16026322543621063
    2. ' !=' → logprob: -1.910263180732727
    3. '==' → logprob: -10.910263061523438
    4. '+' → logprob: -11.660263061523438
    5. ')!=' → logprob: -12.410263061523438
    6. '()!=' → logprob: -12.785263061523438
    7. ']!=' → logprob: -13.035263061523438
    8. '!=(' → logprob: -14.035263061523438
    9. ' ==' → logprob: -14.285263061523438
    10. '!==' → logprob: -14.660263061523438

Token 671: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0008051026379689574
    2. ' num' → logprob: -7.125804901123047
    3. '(num' → logprob: -15.375804901123047
    4. '	num' → logprob: -15.625804901123047
    5. '   ' → logprob: -16.875804901123047
    6. 'nums' → logprob: -17.000804901123047
    7. '                   ' → logprob: -17.375804901123047
    8. ' ' → logprob: -17.375804901123047
    9. 'number' → logprob: -18.000804901123047
    10. 'n' → logprob: -18.000804901123047

Token 672: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: 0.0
    2. '_' → logprob: -18.625
    3. 'j' → logprob: -18.875
    4. '_i' → logprob: -19.25
    5. '[j' → logprob: -19.75
    6. '```' → logprob: -19.875
    7. '\' → logprob: -20.125
    8. '[' → logprob: -21.625
    9. '[_' → logprob: -21.875
    10. 's' → logprob: -22.5

Token 673: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002187972189858556
    2. ':
' → logprob: -6.502188205718994
    3. ' :' → logprob: -8.627187728881836
    4. '                       ' → logprob: -8.752187728881836
    5. ' or' → logprob: -9.002187728881836
    6. ' and' → logprob: -9.377187728881836
    7. '                           ' → logprob: -10.377187728881836
    8. '                   ' → logprob: -10.377187728881836
    9. ')' → logprob: -10.627187728881836
    10. '):' → logprob: -11.252187728881836

Token 674: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04982889071106911
    2. '                               ' → logprob: -3.9248290061950684
    3. '                           ' → logprob: -4.549829006195068
    4. '                   ' → logprob: -5.049829006195068
    5. '\n' → logprob: -5.674829006195068
    6. '```' → logprob: -6.549829006195068
    7. '                        
' → logprob: -6.674829006195068
    8. '                        ' → logprob: -6.924829006195068
    9. ':
' → logprob: -7.299829006195068
    10. '               ' → logprob: -7.549829006195068

Token 675: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5062052011489868
    2. '#' (adapté à ' #') → logprob: -1.8812052011489868
    3. 'diff' → logprob: -2.6312050819396973
    4. 'depth' → logprob: -3.2562050819396973
    5. 'd' → logprob: -3.5062050819396973
    6. '                       ' → logprob: -3.6312050819396973
    7. 'start' → logprob: -3.6312050819396973
    8. 'cycle' → logprob: -3.8812050819396973
    9. 'val' → logprob: -5.631205081939697
    10. 'dep' → logprob: -5.631205081939697

Token 676: ' Con' (ID: 1532)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6367931365966797
    2. 'diff' → logprob: -1.8867931365966797
    3. 'start' → logprob: -1.8867931365966797
    4. '#' → logprob: -2.5117931365966797
    5. 'cycle' → logprob: -3.3867931365966797
    6. 'depth' → logprob: -4.51179313659668
    7. 'val' → logprob: -4.63679313659668
    8. 'd' → logprob: -5.01179313659668
    9. 'return' → logprob: -5.26179313659668
    10. 'length' → logprob: -5.63679313659668

Token 677: 'fl' (ID: 1836)
  Prédit: 'fl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fl' → logprob: -0.22636263072490692
    2. 'f' → logprob: -1.6013625860214233
    3. 'fil' → logprob: -7.976362705230713
    4. 'trad' → logprob: -8.601362228393555
    5. 'lict' → logprob: -8.851362228393555
    6. 'FLICT' → logprob: -9.726362228393555
    7. '\xef\xac' → logprob: -9.851362228393555
    8. 'flt' → logprob: -10.476362228393555
    9. 'st' → logprob: -10.976362228393555
    10. 'fi' → logprob: -10.976362228393555

Token 678: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.10362289845943451
    2. 'ict' → logprob: -3.2286229133605957
    3. 'lict' → logprob: -3.4786229133605957
    4. 'lit' → logprob: -3.8536229133605957
    5. 'l' → logprob: -5.978622913360596
    6. 'i' → logprob: -7.228622913360596
    7. '```' → logprob: -7.353622913360596
    8. 'ic' → logprob: -7.728622913360596
    9. '#' → logprob: -8.228622436523438
    10. '
' → logprob: -8.353622436523438

Token 679: ' détect' (ID: 118715)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.5040085911750793
    2. '                       ' → logprob: -1.5040085315704346
    3. ':' → logprob: -2.5040085315704346
    4. ',' → logprob: -3.7540085315704346
    5. '                   ' → logprob: -4.754008769989014
    6. ' :' → logprob: -5.004008769989014
    7. '                        ' → logprob: -5.129008769989014
    8. ':
' → logprob: -5.129008769989014
    9. ')' → logprob: -5.254008769989014
    10. '                        
' → logprob: -5.254008769989014

Token 680: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.18628597259521484
    2. 'ré' → logprob: -2.811285972595215
    3. '}' → logprob: -4.061285972595215
    4. '=' → logprob: -4.186285972595215
    5. 'e' → logprob: -4.686285972595215
    6. 'er' → logprob: -4.936285972595215
    7. 'r' → logprob: -5.311285972595215
    8. ':' → logprob: -5.311285972595215
    9. ' =' → logprob: -5.311285972595215
    10. ')' → logprob: -5.311285972595215

Token 681: ',' (ID: 11)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.25848960876464844
    2. '                       ' → logprob: -2.1334896087646484
    3. ' if' → logprob: -3.3834896087646484
    4. '
' → logprob: -3.8834896087646484
    5. 'if' → logprob: -4.008489608764648
    6. ')' → logprob: -4.633489608764648
    7. ',' → logprob: -5.383489608764648
    8. ':' → logprob: -5.383489608764648
    9. '                            
' → logprob: -6.008489608764648
    10. '#' → logprob: -6.258489608764648

Token 682: ' détermin' (ID: 62185)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4568299651145935
    2. '#' → logprob: -2.7068300247192383
    3. ' if' → logprob: -2.9568300247192383
    4. 'diff' → logprob: -2.9568300247192383
    5. 'cycle' → logprob: -3.2068300247192383
    6. 'd' → logprob: -3.5818300247192383
    7. '                       ' → logprob: -3.7068300247192383
    8. 'depth' → logprob: -3.8318300247192383
    9. 'start' → logprob: -4.456830024719238
    10. 'dist' → logprob: -4.456830024719238

Token 683: 'ons' (ID: 1808)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.334590882062912
    2. 'e' → logprob: -1.8345909118652344
    3. 'er' → logprob: -2.0845909118652344
    4. 'ée' → logprob: -8.834590911865234
    5. 'ant' → logprob: -10.084590911865234
    6. 'ed' → logprob: -10.209590911865234
    7. 'ation' → logprob: -10.209590911865234
    8. 'ez' → logprob: -10.959590911865234
    9. '```' → logprob: -11.334590911865234
    10. 'ons' → logprob: -12.209590911865234

Token 684: ' le' (ID: 505)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.9423009157180786
    2. 'le' → logprob: -1.1923009157180786
    3. ' la' → logprob: -1.4423009157180786
    4. ' parity' → logprob: -4.067300796508789
    5. 'if' → logprob: -4.942300796508789
    6. ' le' → logprob: -4.942300796508789
    7. ' si' → logprob: -5.192300796508789
    8. 'par' → logprob: -5.442300796508789
    9. '   ' → logprob: -5.692300796508789
    10. ' if' → logprob: -5.692300796508789

Token 685: ' type' (ID: 1490)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.9174753427505493
    2. 'cycle' → logprob: -1.1674753427505493
    3. 'diff' → logprob: -2.1674752235412598
    4. 'if' → logprob: -2.7924752235412598
    5. 'par' → logprob: -3.6674752235412598
    6. 'depth' → logprob: -3.7924752235412598
    7. 'type' → logprob: -4.04247522354126
    8. 'd' → logprob: -4.16747522354126
    9. 'u' → logprob: -5.16747522354126
    10. 'length' → logprob: -5.66747522354126

Token 686: ' de' (ID: 334)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.6691385507583618
    2. 'if' → logprob: -1.2941385507583618
    3. ' de' → logprob: -2.4191384315490723
    4. ' if' → logprob: -2.7941384315490723
    5. '                           ' → logprob: -4.294138431549072
    6. ' du' → logprob: -4.544138431549072
    7. ':' → logprob: -5.169138431549072
    8. '                   ' → logprob: -5.419138431549072
    9. 'd' → logprob: -5.544138431549072
    10. 'de' → logprob: -5.669138431549072

Token 687: ' cycle' (ID: 15839)
  Prédit: 'cycle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cycle' → logprob: -0.004015002865344286
    2. 'con' → logprob: -5.75401496887207
    3. ' cycle' → logprob: -7.12901496887207
    4. 'c' → logprob: -11.75401496887207
    5. '```' → logprob: -11.75401496887207
    6. '_cycle' → logprob: -12.12901496887207
    7. 'cycl' → logprob: -12.12901496887207
    8. ' conflit' → logprob: -13.37901496887207
    9. '
' → logprob: -13.87901496887207
    10. 'contr' → logprob: -14.12901496887207

Token 688: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.12773364782333374
    2. 'if' → logprob: -3.3777337074279785
    3. ' if' → logprob: -3.6277337074279785
    4. '                           ' → logprob: -3.7527337074279785
    5. ')' → logprob: -4.3777337074279785
    6. '                               ' → logprob: -5.2527337074279785
    7. '```' → logprob: -5.5027337074279785
    8. '                        ' → logprob: -6.1277337074279785
    9. '                        
' → logprob: -6.1277337074279785
    10. '#' → logprob: -6.8777337074279785

Token 689: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.022437773644924164
    2. '                        
' → logprob: -4.897437572479248
    3. '                           ' → logprob: -5.397437572479248
    4. '```' → logprob: -5.397437572479248
    5. '                        ' → logprob: -6.272437572479248
    6. '\n' → logprob: -7.272437572479248
    7. ')' → logprob: -7.522437572479248
    8. '<|end|>' → logprob: -8.522438049316406
    9. '                               ' → logprob: -8.772438049316406
    10. '``' → logprob: -8.772438049316406

Token 690: ' loop' (ID: 11453)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1333131045103073
    2. 'cycle' → logprob: -3.0083131790161133
    3. 'diff' → logprob: -3.3833131790161133
    4. 'par' → logprob: -4.133313179016113
    5. 'd' → logprob: -4.883313179016113
    6. 'depth' → logprob: -5.508313179016113
    7. 'length' → logprob: -5.883313179016113
    8. 'len' → logprob: -6.008313179016113
    9. 'c' → logprob: -6.008313179016113
    10. 'dist' → logprob: -7.008313179016113

Token 691: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.4012839198112488
    2. '_length' → logprob: -1.6512839794158936
    3. '_start' → logprob: -2.2762839794158936
    4. '_size' → logprob: -3.9012839794158936
    5. '_depth' → logprob: -4.5262837409973145
    6. 'len' → logprob: -6.4012837409973145
    7. ' =' → logprob: -7.2762837409973145
    8. 'start' → logprob: -7.4012837409973145
    9. '_diff' → logprob: -8.151284217834473
    10. '_l' → logprob: -8.151284217834473

Token 692: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10026911646127701
    2. '=' → logprob: -2.350269079208374
    3. ' ' → logprob: -9.850269317626953
    4. '=len' → logprob: -13.725269317626953
    5. ' ' → logprob: -13.975269317626953
    6. ')' → logprob: -14.100269317626953
    7. 's' → logprob: -14.225269317626953
    8. 'th' → logprob: -14.350269317626953
    9. 'depth' → logprob: -14.475269317626953
    10. '=int' → logprob: -14.850269317626953

Token 693: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.011377190239727497
    2. '(depth' → logprob: -4.511377334594727
    3. 'abs' → logprob: -8.511377334594727
    4. ' depth' → logprob: -9.136377334594727
    5. '(abs' → logprob: -11.511377334594727
    6. '(' → logprob: -12.386377334594727
    7. '   ' → logprob: -13.261377334594727
    8. ' (' → logprob: -13.511377334594727
    9. ' ' → logprob: -14.011377334594727
    10. '(de' → logprob: -14.261377334594727

Token 694: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005259491503238678
    2. '[j' → logprob: -5.3802595138549805
    3. 'i' → logprob: -7.3802595138549805
    4. 'j' → logprob: -11.50525951385498
    5. ' [' → logprob: -14.00525951385498
    6. '```' → logprob: -14.00525951385498
    7. '[' → logprob: -14.38025951385498
    8. '	i' → logprob: -14.63025951385498
    9. '   ' → logprob: -14.63025951385498
    10. ' i' → logprob: -15.00525951385498

Token 695: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03377029672265053
    2. ']+' → logprob: -3.7837703227996826
    3. ']-' → logprob: -4.6587700843811035
    4. ' ]' → logprob: -8.033770561218262
    5. '<|end|>' → logprob: -8.533770561218262
    6. ' -' → logprob: -9.033770561218262
    7. ')' → logprob: -9.533770561218262
    8. '+' → logprob: -10.283770561218262
    9. '-' → logprob: -10.658770561218262
    10. '<|end|>' → logprob: -10.783770561218262

Token 696: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.8313010334968567
    2. '-' → logprob: -1.331300973892212
    3. ' -' → logprob: -1.456300973892212
    4. ' +' → logprob: -2.956300973892212
    5. '-i' → logprob: -4.956301212310791
    6. '+i' → logprob: -5.331301212310791
    7. ')' → logprob: -6.456301212310791
    8. '[i' → logprob: -8.581300735473633
    9. '+j' → logprob: -8.831300735473633
    10. '                           ' → logprob: -8.831300735473633

Token 697: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0017406281549483538
    2. '(depth' → logprob: -6.751740455627441
    3. ' depth' → logprob: -7.751740455627441
    4. '   ' → logprob: -10.126740455627441
    5. '1' → logprob: -10.376740455627441
    6. '(' → logprob: -10.751740455627441
    7. ' ' → logprob: -11.126740455627441
    8. '           ' → logprob: -11.626740455627441
    9. ' (' → logprob: -11.876740455627441
    10. '  ' → logprob: -12.626740455627441

Token 698: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.505351095460355e-05
    2. 'i' → logprob: -9.750075340270996
    3. '[j' → logprob: -11.875075340270996
    4. '[' → logprob: -12.625075340270996
    5. '                   ' → logprob: -13.375075340270996
    6. '```' → logprob: -13.625075340270996
    7. '   ' → logprob: -13.750075340270996
    8. ' [' → logprob: -14.625075340270996
    9. '           ' → logprob: -15.000075340270996
    10. ' i' → logprob: -15.500075340270996

Token 699: ']' (ID: 60)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2914787530899048
    2. '+' → logprob: -2.2914786338806152
    3. '-' → logprob: -2.4164786338806152
    4. ' +' → logprob: -2.7914786338806152
    5. ')' → logprob: -7.041478633880615
    6. ' ' → logprob: -9.666479110717773
    7. ']' → logprob: -10.166479110717773
    8. ')-' → logprob: -10.291479110717773
    9. '```' → logprob: -10.791479110717773
    10. ']-' → logprob: -11.291479110717773

Token 700: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7926031947135925
    2. ' +' → logprob: -1.0426032543182373
    3. ' -' → logprob: -1.9176032543182373
    4. '-' → logprob: -3.0426032543182373
    5. '
' → logprob: -10.042603492736816
    6. ' ' → logprob: -11.042603492736816
    7. '```' → logprob: -11.167603492736816
    8. '   ' → logprob: -11.542603492736816
    9. '<|end|>' → logprob: -11.917603492736816
    10. '+
' → logprob: -12.042603492736816

Token 701: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.436450636712834e-05
    2. '-' → logprob: -9.875094413757324
    3. ' ' → logprob: -10.750094413757324
    4. ' -' → logprob: -11.000094413757324
    5. '2' → logprob: -13.000094413757324
    6. '(-' → logprob: -14.375094413757324
    7. '
' → logprob: -14.500094413757324
    8. '   ' → logprob: -14.625094413757324
    9. '           ' → logprob: -15.250094413757324
    10. '(' → logprob: -16.375093460083008

Token 702: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014859484508633614
    2. '-' → logprob: -8.87514877319336
    3. ' -' → logprob: -12.37514877319336
    4. '2' → logprob: -13.25014877319336
    5. ' ' → logprob: -13.25014877319336
    6. '(-' → logprob: -14.62514877319336
    7. '
' → logprob: -15.75014877319336
    8. '   ' → logprob: -17.12514877319336
    9. '(' → logprob: -17.12514877319336
    10. '...' → logprob: -17.43764877319336

Token 703: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 704: '                       ' (ID: 968)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 705: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5307618379592896
    2. 'if' (adapté à ' if') → logprob: -1.1557618379592896
    3. '                           ' → logprob: -2.65576171875
    4. '                       ' → logprob: -4.53076171875
    5. ')' → logprob: -5.15576171875
    6. '                               ' → logprob: -6.03076171875
    7. '
' → logprob: -6.65576171875
    8. '%' → logprob: -7.15576171875
    9. '                            ' → logprob: -7.15576171875
    10. '           ' → logprob: -7.90576171875

Token 706: ' loop' (ID: 11453)
  Prédit: '(loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(loop' → logprob: -0.12003534287214279
    2. 'loop' → logprob: -2.370035409927368
    3. ' loop' → logprob: -3.995035409927368
    4. ' (' → logprob: -6.745035171508789
    5. '(' → logprob: -10.370035171508789
    6. '(depth' → logprob: -12.620035171508789
    7. '((' → logprob: -12.745035171508789
    8. '(stack' → logprob: -13.370035171508789
    9. '   ' → logprob: -13.745035171508789
    10. ' ' → logprob: -13.870035171508789

Token 707: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -1.4498052223643754e-05
    2. 'len' → logprob: -11.500014305114746
    3. '%' → logprob: -12.875014305114746
    4. '[_' → logprob: -14.500014305114746
    5. '[len' → logprob: -15.000014305114746
    6. '_LEN' → logprob: -15.250014305114746
    7. '_l' → logprob: -16.000015258789062
    8. '_' → logprob: -16.000015258789062
    9. '_le' → logprob: -16.125015258789062
    10. ' _' → logprob: -16.250015258789062

Token 708: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6931615471839905
    2. ' %' → logprob: -0.6931615471839905
    3. '%
' → logprob: -12.568161964416504
    4. ' %
' → logprob: -12.818161964416504
    5. ' ' → logprob: -13.068161964416504
    6. '==' → logprob: -13.193161964416504
    7. ' ==' → logprob: -13.818161964416504
    8. ')' → logprob: -14.193161964416504
    9. ' ' → logprob: -14.818161964416504
    10. '[' → logprob: -15.068161964416504

Token 709: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005557744298130274
    2. ' ' → logprob: -7.500555992126465
    3. '   ' → logprob: -14.000555992126465
    4. '  ' → logprob: -14.250555992126465
    5. '```' → logprob: -14.625555992126465
    6. '
' → logprob: -15.688055992126465
    7. '=' → logprob: -15.688055992126465
    8. '==' → logprob: -16.00055503845215
    9. '1' → logprob: -16.81305503845215
    10. '>' → logprob: -17.18805503845215

Token 710: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -20.0
    4. '```' → logprob: -20.25
    5. '２' → logprob: -20.75
    6. '۲' → logprob: -21.0
    7. '1' → logprob: -21.125
    8. '==' → logprob: -21.125
    9. '=' → logprob: -21.5
    10. '``' → logprob: -22.0

Token 711: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6330060362815857
    2. ' ==' → logprob: -0.7580060362815857
    3. ' !=' → logprob: -8.75800609588623
    4. '=' → logprob: -9.50800609588623
    5. ':' → logprob: -9.63300609588623
    6. '!=' → logprob: -9.63300609588623
    7. '0' → logprob: -11.00800609588623
    8. ')==' → logprob: -11.75800609588623
    9. ')' → logprob: -12.00800609588623
    10. '==
' → logprob: -12.25800609588623

Token 712: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02426001988351345
    2. '1' → logprob: -3.7742600440979004
    3. ' ' → logprob: -6.8992600440979
    4. '
' → logprob: -13.461759567260742
    5. '```' → logprob: -13.711759567260742
    6. '==' → logprob: -14.399259567260742
    7. '=' → logprob: -14.586759567260742
    8. '   ' → logprob: -15.461759567260742
    9. '==
' → logprob: -15.461759567260742
    10. '2' → logprob: -16.211759567260742

Token 713: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890135049819946
    2. '1' → logprob: -2.5789012908935547
    3. ' ' → logprob: -11.578901290893555
    4. '2' → logprob: -13.953901290893555
    5. '
' → logprob: -14.891401290893555
    6. '```' → logprob: -15.641401290893555
    7. '4' → logprob: -16.266401290893555
    8. '   ' → logprob: -16.266401290893555
    9. '=' → logprob: -16.328901290893555
    10. '5' → logprob: -16.641401290893555

Token 714: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0033028353936970234
    2. ':
' → logprob: -5.753303050994873
    3. '                           ' → logprob: -9.503302574157715
    4. ' :' → logprob: -11.003302574157715
    5. ')' → logprob: -11.503302574157715
    6. '):' → logprob: -11.878302574157715
    7. '                       ' → logprob: -12.378302574157715
    8. ':return' → logprob: -12.503302574157715
    9. ':

' → logprob: -12.878302574157715
    10. ' and' → logprob: -13.628302574157715

Token 715: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.04534563794732094
    2. '                       ' → logprob: -4.045345783233643
    3. '                               ' → logprob: -4.920345783233643
    4. ':' → logprob: -5.170345783233643
    5. ':
' → logprob: -5.545345783233643
    6. ')' → logprob: -5.670345783233643
    7. '
' → logprob: -6.045345783233643
    8. '                            ' → logprob: -7.045345783233643
    9. '                   ' → logprob: -7.795345783233643
    10. '):' → logprob: -8.170345306396484

Token 716: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007852102862671018
    2. '0' → logprob: -7.2507853507995605
    3. '```' → logprob: -10.125784873962402
    4. ' print' → logprob: -10.500784873962402
    5. '                   ' → logprob: -13.250784873962402
    6. '               ' → logprob: -13.375784873962402
    7. '
' → logprob: -13.625784873962402
    8. '                               ' → logprob: -14.250784873962402
    9. '           ' → logprob: -14.375784873962402
    10. '                           ' → logprob: -14.625784873962402

Token 717: ' Cycle' (ID: 65262)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0007107630372047424
    2. ' print' → logprob: -7.625710964202881
    3. 'return' → logprob: -9.125710487365723
    4. '```' → logprob: -10.000710487365723
    5. '                           ' → logprob: -10.250710487365723
    6. '                               ' → logprob: -11.375710487365723
    7. '                       ' → logprob: -11.625710487365723
    8. '``' → logprob: -13.000710487365723
    9. '                   ' → logprob: -13.250710487365723
    10. '               ' → logprob: -13.750710487365723

Token 718: ' pair' (ID: 10610)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.3708019256591797
    2. ' impossible' → logprob: -1.6208019256591797
    3. ' est' → logprob: -2.9958019256591797
    4. 'n' → logprob: -2.9958019256591797
    5. ' ==' → logprob: -3.3708019256591797
    6. '==' → logprob: -3.3708019256591797
    7. '=' → logprob: -3.3708019256591797
    8. '                           ' → logprob: -3.6208019256591797
    9. ' non' → logprob: -3.6208019256591797
    10. '
' → logprob: -3.7458019256591797

Token 719: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6772262454032898
    2. ':
' → logprob: -1.0522263050079346
    3. '                           ' → logprob: -2.0522263050079346
    4. '                               ' → logprob: -5.0522260665893555
    5. '                       ' → logprob: -6.0522260665893555
    6. ')' → logprob: -6.0522260665893555
    7. '
' → logprob: -7.5522260665893555
    8. '):' → logprob: -7.6772260665893555
    9. '):
' → logprob: -8.052226066589355
    10. ' :' → logprob: -8.427226066589355

Token 720: ' pas' (ID: 2173)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.034323692321777344
    2. ' print' → logprob: -3.4093236923217773
    3. '```' → logprob: -7.659323692321777
    4. '                           ' → logprob: -9.659323692321777
    5. '                               ' → logprob: -10.034323692321777
    6. '0' → logprob: -10.534323692321777
    7. '``' → logprob: -11.159323692321777
    8. 'return' → logprob: -11.159323692321777
    9. '
' → logprob: -11.659323692321777
    10. '   ' → logprob: -12.034323692321777

Token 721: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4313589036464691
    2. 'de' → logprob: -1.0563589334487915
    3. ' possible' → logprob: -6.806358814239502
    4. 'possible' → logprob: -6.931358814239502
    5. 'd' → logprob: -8.80635929107666
    6. 's' → logprob: -8.93135929107666
    7. '_de' → logprob: -8.93135929107666
    8. ' d' → logprob: -10.93135929107666
    9. ')' → logprob: -10.93135929107666
    10. ' ' → logprob: -11.05635929107666

Token 722: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.20878152549266815
    2. ' solution' → logprob: -1.9587814807891846
    3. 's' → logprob: -3.0837814807891846
    4. 'sol' → logprob: -7.458781719207764
    5. ' ' → logprob: -8.583781242370605
    6. '```' → logprob: -8.833781242370605
    7. 'solutions' → logprob: -9.083781242370605
    8. ' s' → logprob: -9.208781242370605
    9. ' ' → logprob: -9.333781242370605
    10. 'possible' → logprob: -10.333781242370605

Token 723: ' possible' (ID: 4149)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9282105565071106
    2. '
' → logprob: -0.9282105565071106
    3. '                           ' → logprob: -2.803210496902466
    4. ')
' → logprob: -3.053210496902466
    5. '\n' → logprob: -3.053210496902466
    6. 'print' → logprob: -4.053210735321045
    7. '                               ' → logprob: -4.803210735321045
    8. '                       ' → logprob: -5.303210735321045
    9. '
' → logprob: -6.303210735321045
    10. ',' → logprob: -6.303210735321045

Token 724: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16030068695545197
    2. '                           ' → logprob: -2.9103007316589355
    3. '\n' → logprob: -3.2853007316589355
    4. ')
' → logprob: -3.6603007316589355
    5. 'print' → logprob: -4.2853007316589355
    6. ')' → logprob: -5.6603007316589355
    7. '                       ' → logprob: -6.0353007316589355
    8. '                               ' → logprob: -6.0353007316589355
    9. ':
' → logprob: -6.5353007316589355
    10. '```' → logprob: -6.6603007316589355

Token 725: '                           ' (ID: 1686)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5304238796234131
    2. 'print' → logprob: -1.905423879623413
    3. '                           ' → logprob: -2.280423879623413
    4. '                               ' → logprob: -2.530423879623413
    5. '```' → logprob: -3.905423879623413
    6. '\n' → logprob: -4.530424118041992
    7. ')
' → logprob: -5.030424118041992
    8. ')' → logprob: -5.155424118041992
    9. '                       ' → logprob: -5.155424118041992
    10. ':
' → logprob: -5.280424118041992

Token 726: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.292907877039397e-06
    2. ' print' → logprob: -13.00000286102295
    3. '0' → logprob: -14.25000286102295
    4. '```' → logprob: -14.87500286102295
    5. '                           ' → logprob: -17.000003814697266
    6. '                   ' → logprob: -18.250003814697266
    7. '           ' → logprob: -18.500003814697266
    8. '               ' → logprob: -18.625003814697266
    9. '                               ' → logprob: -18.750003814697266
    10. '                       ' → logprob: -19.375003814697266

Token 727: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.173704271830502e-06
    2. '0' → logprob: -13.00000286102295
    3. ' (' → logprob: -14.62500286102295
    4. '(
' → logprob: -15.12500286102295
    5. '('' → logprob: -16.750003814697266
    6. '("' → logprob: -17.875003814697266
    7. '(

' → logprob: -18.125003814697266
    8. '()' → logprob: -18.875003814697266
    9. '((' → logprob: -19.625003814697266
    10. '```' → logprob: -19.875003814697266

Token 728: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.875
    3. ')' → logprob: -17.25
    4. ''' → logprob: -18.375
    5. '"' → logprob: -18.625
    6. '`' → logprob: -20.5
    7. '(' → logprob: -20.875
    8. '```' → logprob: -21.0
    9. '۰' → logprob: -22.625
    10. '
' → logprob: -22.75

Token 729: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6949475407600403
    2. ')
' → logprob: -0.6949475407600403
    3. ')
' → logprob: -6.819947719573975
    4. '                           ' → logprob: -8.194947242736816
    5. ')return' → logprob: -8.444947242736816
    6. ')`
' → logprob: -9.194947242736816
    7. ')\' → logprob: -10.194947242736816
    8. ');' → logprob: -10.694947242736816
    9. '                               ' → logprob: -11.694947242736816
    10. ')</' → logprob: -12.069947242736816

Token 730: '                           ' (ID: 1686)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' → logprob: -1.154191493988037
    2. 'return' → logprob: -1.404191493988037
    3. '                           ' → logprob: -1.404191493988037
    4. '\n' → logprob: -3.154191493988037
    5. '                               ' → logprob: -3.279191493988037
    6. '
' → logprob: -3.279191493988037
    7. '                                   ' → logprob: -4.029191493988037
    8. '\' → logprob: -4.154191493988037
    9. '```' → logprob: -4.154191493988037
    10. 'newline' → logprob: -4.654191493988037

Token 731: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.06923922896385193
    2. 'return' → logprob: -2.8192391395568848
    3. ' exit' → logprob: -5.319239139556885
    4. '                           ' → logprob: -6.819239139556885
    5. ' return' → logprob: -7.319239139556885
    6. 'sys' → logprob: -7.944239139556885
    7. '                               ' → logprob: -9.319239616394043
    8. '
' → logprob: -9.819239616394043
    9. '                                   ' → logprob: -10.819239616394043
    10. '	exit' → logprob: -10.819239616394043

Token 732: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34944939613342285
    2. '                       ' → logprob: -1.7244493961334229
    3. '()
' → logprob: -2.474449396133423
    4. ')' → logprob: -3.724449396133423
    5. ')
' → logprob: -5.974449157714844
    6. '                        
' → logprob: -6.224449157714844
    7. '
' → logprob: -6.349449157714844
    8. '())' → logprob: -7.349449157714844
    9. '                            
' → logprob: -7.974449157714844
    10. '()\' → logprob: -8.474449157714844

Token 733: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.05215529724955559
    2. 'else' → logprob: -3.9271552562713623
    3. ')' → logprob: -4.052155494689941
    4. '                        
' → logprob: -5.052155494689941
    5. ' else' → logprob: -5.927155494689941
    6. '
' → logprob: -6.427155494689941
    7. '                            
' → logprob: -7.427155494689941
    8. '                           ' → logprob: -7.677155494689941
    9. '                        ' → logprob: -8.177155494689941
    10. ')
' → logprob: -8.177155494689941

Token 734: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.163704514503479
    2. '                       ' → logprob: -1.913704514503479
    3. ' else' → logprob: -5.7887043952941895
    4. '                           ' → logprob: -8.413704872131348
    5. ')' → logprob: -9.288704872131348
    6. '                        
' → logprob: -10.538704872131348
    7. '                   ' → logprob: -11.038704872131348
    8. '                        ' → logprob: -11.038704872131348
    9. '	else' → logprob: -12.538704872131348
    10. '					' → logprob: -12.538704872131348

Token 735: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16536559164524078
    2. ':
' → logprob: -2.040365695953369
    3. '                           ' → logprob: -3.915365695953369
    4. ' :' → logprob: -6.540365695953369
    5. ' :
' → logprob: -7.915365695953369
    6. '                       ' → logprob: -8.165365219116211
    7. '                            ' → logprob: -9.040365219116211
    8. ',' → logprob: -10.040365219116211
    9. '                        ' → logprob: -10.040365219116211
    10. '                               ' → logprob: -10.540365219116211

Token 736: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0026327306404709816
    2. '                       ' → logprob: -6.1276326179504395
    3. '#' → logprob: -8.877633094787598
    4. '                   ' → logprob: -9.627633094787598
    5. ' #' → logprob: -9.627633094787598
    6. '                               ' → logprob: -9.627633094787598
    7. 'return' → logprob: -10.627633094787598
    8. ' return' → logprob: -10.752633094787598
    9. '                            ' → logprob: -11.002633094787598
    10. '           ' → logprob: -11.127633094787598

Token 737: ' #' (ID: 1069)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.31207314133644104
    2. 'return' → logprob: -1.4370731115341187
    3. '#' (adapté à ' #') → logprob: -4.187073230743408
    4. 'val' → logprob: -5.437073230743408
    5. 'parent' → logprob: -5.937073230743408
    6. 'depth' → logprob: -5.937073230743408
    7. 'loop' → logprob: -6.687073230743408
    8. '                               ' → logprob: -7.187073230743408
    9. '                           ' → logprob: -7.437073230743408
    10. ' return' → logprob: -8.06207275390625

Token 738: ' Cycle' (ID: 65262)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6828703880310059
    2. 'return' → logprob: -1.0578703880310059
    3. 'start' → logprob: -2.307870388031006
    4. 'val' → logprob: -3.682870388031006
    5. '                           ' → logprob: -4.682870388031006
    6. ' return' → logprob: -5.557870388031006
    7. ' #' → logprob: -5.682870388031006
    8. '                               ' → logprob: -6.307870388031006
    9. 'loop' → logprob: -6.807870388031006
    10. '                       ' → logprob: -7.182870388031006

Token 739: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.13013160228729248
    2. 'odd' → logprob: -2.755131721496582
    3. 'im' → logprob: -3.880131721496582
    4. '_imp' → logprob: -4.255131721496582
    5. '                           ' → logprob: -4.630131721496582
    6. '_im' → logprob: -5.130131721496582
    7. 'pair' → logprob: -7.130131721496582
    8. '#' → logprob: -7.255131721496582
    9. 'imb' → logprob: -7.505131721496582
    10. '               ' → logprob: -7.505131721496582

Token 740: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1814892292022705
    2. ' :' → logprob: -2.8064892292022705
    3. '                           ' → logprob: -2.9314892292022705
    4. ':
' → logprob: -3.0564892292022705
    5. ' :
' → logprob: -6.181488990783691
    6. ',' → logprob: -6.556488990783691
    7. ':

' → logprob: -8.431488990783691
    8. ' =' → logprob: -8.431488990783691
    9. '                               ' → logprob: -8.556488990783691
    10. '                       ' → logprob: -9.181488990783691

Token 741: ' essay' (ID: 9635)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.689543604850769
    2. 'return' → logprob: -0.814543604850769
    3. '#' → logprob: -3.5645437240600586
    4. 'val' → logprob: -4.314543724060059
    5. '                           ' → logprob: -6.189543724060059
    6. 'diff' → logprob: -6.314543724060059
    7. '                               ' → logprob: -6.439543724060059
    8. ' return' → logprob: -6.564543724060059
    9. 'depth' → logprob: -6.564543724060059
    10. 'loop' → logprob: -7.064543724060059

Token 742: 'ons' (ID: 1808)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.09755173325538635
    2. 'ons' → logprob: -2.5975518226623535
    3. 'ez' → logprob: -4.0975518226623535
    4. 'e' → logprob: -6.3475518226623535
    5. 'on' → logprob: -9.847551345825195
    6. '```' → logprob: -10.972551345825195
    7. 'es' → logprob: -11.722551345825195
    8. '   ' → logprob: -12.222551345825195
    9. 'r' → logprob: -12.347551345825195
    10. 'erez' → logprob: -12.722551345825195

Token 743: ' d' (ID: 272)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.9048196077346802
    2. '   ' → logprob: -1.1548196077346802
    3. '                           ' → logprob: -1.7798196077346802
    4. ' de' → logprob: -3.1548194885253906
    5. 'de' → logprob: -4.154819488525391
    6. '                             ' → logprob: -4.279819488525391
    7. '                              ' → logprob: -4.779819488525391
    8. '                            ' → logprob: -4.904819488525391
    9. '    ' → logprob: -5.154819488525391
    10. '  ' → logprob: -5.904819488525391

Token 744: ''aj' (ID: 116735)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4644888937473297
    2. 'aj' → logprob: -1.7144888639450073
    3. ''aj' → logprob: -2.214488983154297
    4. 'a' → logprob: -3.839488983154297
    5. 'er' → logprob: -4.839488983154297
    6. 'es' → logprob: -5.089488983154297
    7. 'continue' → logprob: -5.089488983154297
    8. ''ad' → logprob: -5.589488983154297
    9. ''' → logprob: -5.964488983154297
    10. 'contin' → logprob: -6.339488983154297

Token 745: 'uster' (ID: 7282)
  Prédit: 'uster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uster' → logprob: -0.09304270893335342
    2. 'ust' → logprob: -2.8430426120758057
    3. 'outer' → logprob: -3.5930426120758057
    4. 'uste' → logprob: -6.468042850494385
    5. 'our' → logprob: -8.218042373657227
    6. 'user' → logprob: -8.343042373657227
    7. 'uter' → logprob: -8.468042373657227
    8. 'out' → logprob: -9.718042373657227
    9. 'ouer' → logprob: -9.843042373657227
    10. 'ustr' → logprob: -10.093042373657227

Token 746: ' la' (ID: 557)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -1.0810966491699219
    2. 'val' → logprob: -1.7060966491699219
    3. 'depth' → logprob: -2.206096649169922
    4. 'root' → logprob: -2.331096649169922
    5. 'init' → logprob: -2.581096649169922
    6. 'vals' → logprob: -3.831096649169922
    7. '                               ' → logprob: -3.956096649169922
    8. 'start' → logprob: -3.956096649169922
    9. 'parent' → logprob: -4.081096649169922
    10. 'if' → logprob: -4.206096649169922

Token 747: ' solution' (ID: 7578)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.1509634107351303
    2. 'return' → logprob: -3.150963306427002
    3. 'diff' → logprob: -3.775963306427002
    4. 'nums' → logprob: -3.775963306427002
    5. 'offset' → logprob: -4.400963306427002
    6. 'root' → logprob: -4.525963306427002
    7. 'parent' → logprob: -4.775963306427002
    8. 'value' → logprob: -5.525963306427002
    9. 'init' → logprob: -6.150963306427002
    10. 'delta' → logprob: -6.150963306427002

Token 748: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0615641251206398
    2. ',' → logprob: -4.061563968658447
    3. '                               ' → logprob: -4.811563968658447
    4. '
' → logprob: -4.936563968658447
    5. ' return' → logprob: -5.436563968658447
    6. 'return' → logprob: -5.436563968658447
    7. '                            
' → logprob: -5.561563968658447
    8. '                            ' → logprob: -5.936563968658447
    9. ')' → logprob: -6.436563968658447
    10. '                       ' → logprob: -6.811563968658447

Token 749: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.060347236692905426
    2. '
' → logprob: -4.435347080230713
    3. ',' → logprob: -4.560347080230713
    4. ')' → logprob: -4.685347080230713
    5. '                               ' → logprob: -5.060347080230713
    6. '                            
' → logprob: -5.310347080230713
    7. '                            ' → logprob: -5.310347080230713
    8. '                       ' → logprob: -6.435347080230713
    9. '[' → logprob: -7.060347080230713
    10. '<|end|>' → logprob: -7.185347080230713

Token 750: ' num' (ID: 2269)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6293601393699646
    2. 'start' → logprob: -1.6293601989746094
    3. 'val' → logprob: -1.8793601989746094
    4. 'diff' → logprob: -3.3793601989746094
    5. 'offset' → logprob: -4.379360198974609
    6. 'x' → logprob: -4.754360198974609
    7. 'new' → logprob: -5.004360198974609
    8. 'd' → logprob: -5.004360198974609
    9. 'a' → logprob: -5.254360198974609
    10. 'depth' → logprob: -5.254360198974609

Token 751: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.27878689765930176
    2. 's' → logprob: -1.7787868976593018
    3. '_s' → logprob: -4.153786659240723
    4. '_fix' → logprob: -4.903786659240723
    5. '_val' → logprob: -5.278786659240723
    6. '_c' → logprob: -5.403786659240723
    7. 'diff' → logprob: -5.528786659240723
    8. '_diff' → logprob: -5.653786659240723
    9. '_i' → logprob: -5.653786659240723
    10. 'fix' → logprob: -5.778786659240723

Token 752: '_sum' (ID: 29859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1521615982055664
    2. ' =' → logprob: -2.1521615982055664
    3. '+=' → logprob: -5.152161598205566
    4. '-=' → logprob: -5.277161598205566
    5. ' -=' → logprob: -5.652161598205566
    6. '_diff' → logprob: -5.902161598205566
    7. ' +=' → logprob: -6.277161598205566
    8. '_new' → logprob: -6.652161598205566
    9. 'diff' → logprob: -6.902161598205566
    10. '-' → logprob: -7.527161598205566

Token 753: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34881672263145447
    2. '=' → logprob: -1.2238167524337769
    3. 's' → logprob: -8.473816871643066
    4. '+=' → logprob: -10.098816871643066
    5. ' +=' → logprob: -10.098816871643066
    6. ' ' → logprob: -10.973816871643066
    7. ',' → logprob: -11.098816871643066
    8. '=num' → logprob: -11.223816871643066
    9. '=(' → logprob: -11.973816871643066
    10. '=s' → logprob: -12.723816871643066

Token 754: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.018639616668224335
    2. '(nums' → logprob: -4.51863956451416
    3. 'num' → logprob: -5.76863956451416
    4. 's' → logprob: -6.14363956451416
    5. '(' → logprob: -7.39363956451416
    6. ' nums' → logprob: -7.51863956451416
    7. '(s' → logprob: -7.89363956451416
    8. '0' → logprob: -8.01863956451416
    9. '(num' → logprob: -8.76863956451416
    10. '   ' → logprob: -10.26863956451416

Token 755: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6394386887550354
    2. '[i' → logprob: -0.8894386887550354
    3. 'j' → logprob: -3.1394386291503906
    4. 'i' → logprob: -4.014438629150391
    5. '+' → logprob: -10.51443862915039
    6. '   ' → logprob: -11.01443862915039
    7. ' +' → logprob: -11.51443862915039
    8. '[' → logprob: -11.51443862915039
    9. '+j' → logprob: -11.51443862915039
    10. '[u' → logprob: -11.70193862915039

Token 756: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5254994034767151
    2. ' +' → logprob: -0.9004994034767151
    3. ' -' → logprob: -6.90049934387207
    4. ')' → logprob: -7.27549934387207
    5. '-' → logprob: -8.27549934387207
    6. '+
' → logprob: -9.27549934387207
    7. ',' → logprob: -9.52549934387207
    8. '
' → logprob: -9.65049934387207
    9. '+j' → logprob: -11.02549934387207
    10. ')+' → logprob: -11.15049934387207

Token 757: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5232075452804565
    2. '+' → logprob: -0.8982075452804565
    3. ' -' → logprob: -10.648207664489746
    4. '+
' → logprob: -11.273207664489746
    5. '<|end|>' → logprob: -11.523207664489746
    6. '-' → logprob: -11.898207664489746
    7. '+s' → logprob: -12.148207664489746
    8. '
' → logprob: -12.523207664489746
    9. ',' → logprob: -12.648207664489746
    10. ' +
' → logprob: -12.898207664489746

Token 758: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.2523740530014038
    2. 'nums' → logprob: -1.5023740530014038
    3. ' num' → logprob: -8.502373695373535
    4. ' nums' → logprob: -8.627373695373535
    5. '   ' → logprob: -11.252373695373535
    6. ' ' → logprob: -11.439873695373535
    7. '	num' → logprob: -11.877373695373535
    8. '(num' → logprob: -12.627373695373535
    9. 'nu' → logprob: -13.064873695373535
    10. 'numbers' → logprob: -13.189873695373535

Token 759: '_j' (ID: 12021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9598618149757385
    2. '_j' → logprob: -1.2098617553710938
    3. '_i' → logprob: -1.5848617553710938
    4. 'j' → logprob: -2.4598617553710938
    5. '[i' → logprob: -3.5848617553710938
    6. '[j' → logprob: -7.959861755371094
    7. ' i' → logprob: -9.084861755371094
    8. '_' → logprob: -10.459861755371094
    9. 's' → logprob: -11.397361755371094
    10. '```' → logprob: -11.522361755371094

Token 760: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 761: '                           ' (ID: 1686)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 762: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.4229865074157715
    2. '0' → logprob: -1.9229865074157715
    3. '                           ' → logprob: -2.2979865074157715
    4. ' if' → logprob: -2.2979865074157715
    5. '1' → logprob: -2.4229865074157715
    6. 'return' → logprob: -3.0479865074157715
    7. 'val' → logprob: -3.4229865074157715
    8. 'print' → logprob: -3.6729865074157715
    9. '-' → logprob: -3.9229865074157715
    10. '                               ' → logprob: -3.9229865074157715

Token 763: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.004462993238121271
    2. '(num' → logprob: -5.629463195800781
    3. 'nums' → logprob: -7.754463195800781
    4. ' num' → logprob: -8.629463195800781
    5. '0' → logprob: -8.754463195800781
    6. '2' → logprob: -10.504463195800781
    7. 'abs' → logprob: -10.754463195800781
    8. '(' → logprob: -10.879463195800781
    9. 'loop' → logprob: -12.129463195800781
    10. '1' → logprob: -12.629463195800781

Token 764: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.00044926130794920027
    2. '[j' → logprob: -7.750449180603027
    3. 'j' → logprob: -11.500449180603027
    4. 's' → logprob: -12.875449180603027
    5. '_' → logprob: -13.750449180603027
    6. '```' → logprob: -14.000449180603027
    7. '_i' → logprob: -14.125449180603027
    8. '[
' → logprob: -15.000449180603027
    9. '[i' → logprob: -15.187949180603027
    10. '	j' → logprob: -15.187949180603027

Token 765: '_sum' (ID: 29859)
  Prédit: '_j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.11838766187429428
    2. '_sum' → logprob: -3.1183876991271973
    3. '[j' → logprob: -3.3683876991271973
    4. '!=' → logprob: -4.368387699127197
    5. ' !=' → logprob: -4.993387699127197
    6. '==' → logprob: -5.243387699127197
    7. 'sum' → logprob: -6.493387699127197
    8. ' ==' → logprob: -6.993387699127197
    9. '_s' → logprob: -7.243387699127197
    10. '[' → logprob: -7.243387699127197

Token 766: ' %' (ID: 1851)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.252375990152359
    2. '!=' → logprob: -2.627376079559326
    3. ' ==' → logprob: -2.627376079559326
    4. '%' → logprob: -3.002376079559326
    5. ' !=' → logprob: -3.627376079559326
    6. ' %' → logprob: -6.252376079559326
    7. '   ' → logprob: -9.752375602722168
    8. '=' → logprob: -9.877375602722168
    9. '[' → logprob: -10.002375602722168
    10. '==
' → logprob: -10.377375602722168

Token 767: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003815756645053625
    2. ' ' → logprob: -7.8753814697265625
    3. '   ' → logprob: -14.250381469726562
    4. '```' → logprob: -15.000381469726562
    5. '1' → logprob: -15.625381469726562
    6. '
' → logprob: -16.125381469726562
    7. '  ' → logprob: -16.250381469726562
    8. '=' → logprob: -16.500381469726562
    9. '==' → logprob: -16.750381469726562
    10. '     ' → logprob: -17.437881469726562

Token 768: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '1' → logprob: -14.25000286102295
    4. '   ' → logprob: -17.750001907348633
    5. '```' → logprob: -17.875001907348633
    6. '=' → logprob: -18.250001907348633
    7. '
' → logprob: -18.375001907348633
    8. '3' → logprob: -18.687501907348633
    9. '0' → logprob: -18.937501907348633
    10. '==' → logprob: -19.312501907348633

Token 769: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3522394299507141
    2. '!=' → logprob: -1.2272393703460693
    3. '==' → logprob: -5.977239608764648
    4. ' ==' → logprob: -6.727239608764648
    5. ':' → logprob: -10.852239608764648
    6. '()!=' → logprob: -11.602239608764648
    7. ')!=' → logprob: -11.727239608764648
    8. '=' → logprob: -11.977239608764648
    9. '!==' → logprob: -12.977239608764648
    10. '```' → logprob: -13.477239608764648

Token 770: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.43420469760894775
    2. '0' → logprob: -1.0592046976089478
    3. '1' → logprob: -5.559204578399658
    4. ' ' → logprob: -6.434204578399658
    5. '==' → logprob: -11.434205055236816
    6. '!=' → logprob: -11.434205055236816
    7. '=' → logprob: -12.809205055236816
    8. '```' → logprob: -13.059205055236816
    9. ' !=' → logprob: -13.434205055236816
    10. '   ' → logprob: -13.809205055236816

Token 771: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11889711022377014
    2. '2' → logprob: -2.3688971996307373
    3. '1' → logprob: -3.9938971996307373
    4. ' ' → logprob: -9.493897438049316
    5. '!=' → logprob: -12.368897438049316
    6. '==' → logprob: -12.493897438049316
    7. '=' → logprob: -13.368897438049316
    8. '```' → logprob: -13.493897438049316
    9. ' !=' → logprob: -14.681397438049316
    10. '   ' → logprob: -15.118897438049316

Token 772: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018401099368929863
    2. ':
' → logprob: -6.501840114593506
    3. '                           ' → logprob: -8.376839637756348
    4. ' :' → logprob: -10.001839637756348
    5. '                               ' → logprob: -11.126839637756348
    6. '):' → logprob: -11.126839637756348
    7. ')' → logprob: -11.501839637756348
    8. ' and' → logprob: -12.251839637756348
    9. ':return' → logprob: -12.751839637756348
    10. '=' → logprob: -12.876839637756348

Token 773: '                               ' (ID: 2419)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.955740749835968
    2. '                               ' → logprob: -1.0807406902313232
    3. ':' → logprob: -2.3307406902313232
    4. ':
' → logprob: -2.8307406902313232
    5. ')' → logprob: -3.2057406902313232
    6. '\n' → logprob: -3.3307406902313232
    7. '                            ' → logprob: -4.830740928649902
    8. '):' → logprob: -5.080740928649902
    9. '                       ' → logprob: -5.080740928649902
    10. '):
' → logprob: -5.330740928649902

Token 774: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013347980566322803
    2. '                               ' → logprob: -5.26334810256958
    3. ' print' → logprob: -5.26334810256958
    4. '                                   ' → logprob: -6.63834810256958
    5. 'continue' → logprob: -7.38834810256958
    6. 'return' → logprob: -8.013347625732422
    7. '                           ' → logprob: -8.513347625732422
    8. '0' → logprob: -8.638347625732422
    9. '```' → logprob: -9.638347625732422
    10. '   ' → logprob: -10.138347625732422

Token 775: ' Impossible' (ID: 136939)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0018931758822873235
    2. ' print' → logprob: -6.501893043518066
    3. '0' → logprob: -9.376893043518066
    4. '                           ' → logprob: -9.751893043518066
    5. 'num' → logprob: -9.876893043518066
    6. 'p' → logprob: -10.251893043518066
    7. '                               ' → logprob: -10.251893043518066
    8. 'continue' → logprob: -10.626893043518066
    9. '1' → logprob: -10.876893043518066
    10. 'return' → logprob: -11.126893043518066

Token 776: ' d' (ID: 272)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6837637424468994
    2. '                               ' → logprob: -1.0587637424468994
    3. ')' → logprob: -2.8087637424468994
    4. '                                   ' → logprob: -4.18376350402832
    5. ')
' → logprob: -4.30876350402832
    6. '                                ' → logprob: -4.93376350402832
    7. '                       ' → logprob: -4.93376350402832
    8. '                            ' → logprob: -4.93376350402832
    9. 'print' → logprob: -5.05876350402832
    10. '\n' → logprob: -5.55876350402832

Token 777: ''obtenir' (ID: 191633)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8647522926330566
    2. 'im' → logprob: -1.6147522926330566
    3. 'print' → logprob: -1.6147522926330566
    4. ' print' → logprob: -2.9897522926330566
    5. 'é' → logprob: -3.6147522926330566
    6. 'continue' → logprob: -3.9897522926330566
    7. ' continue' → logprob: -3.9897522926330566
    8. ''aj' → logprob: -4.114752292633057
    9. ''im' → logprob: -4.239752292633057
    10. ' continuer' → logprob: -5.114752292633057

Token 778: ' une' (ID: 2463)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0800345316529274
    2. 'print' → logprob: -2.5800344944000244
    3. '```' → logprob: -8.205034255981445
    4. '                           ' → logprob: -8.455034255981445
    5. '1' → logprob: -8.580034255981445
    6. '                               ' → logprob: -9.080034255981445
    7. 'continue' → logprob: -9.330034255981445
    8. '
' → logprob: -10.455034255981445
    9. '                       ' → logprob: -10.455034255981445
    10. ' print' → logprob: -10.580034255981445

Token 779: ' solution' (ID: 7578)
  Prédit: 'solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solution' → logprob: -0.34970879554748535
    2. 'val' → logprob: -1.3497087955474854
    3. ' solution' → logprob: -4.099708557128906
    4. 's' → logprob: -5.224708557128906
    5. 'division' → logprob: -5.349708557128906
    6. 'cons' → logprob: -6.974708557128906
    7. 'sol' → logprob: -6.974708557128906
    8. 'contr' → logprob: -7.099708557128906
    9. 'dem' → logprob: -7.224708557128906
    10. '0' → logprob: -7.349708557128906

Token 780: ' entière' (ID: 61583)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7292050719261169
    2. '
' → logprob: -1.8542051315307617
    3. ')
' → logprob: -2.3542051315307617
    4. '                               ' → logprob: -2.4792051315307617
    5. '                           ' → logprob: -2.8542051315307617
    6. ')' → logprob: -3.6042051315307617
    7. ',
' → logprob: -3.8542051315307617
    8. '\' → logprob: -4.479205131530762
    9. ' 
' → logprob: -4.729205131530762
    10. '```' → logprob: -4.979205131530762

Token 781: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.372135043144226
    2. ':' → logprob: -1.622135043144226
    3. '\n' → logprob: -1.622135043144226
    4. '                               ' → logprob: -2.1221351623535156
    5. '                           ' → logprob: -2.4971351623535156
    6. ':
' → logprob: -2.7471351623535156
    7. ')
' → logprob: -3.6221351623535156
    8. '
' → logprob: -3.9971351623535156
    9. '                                   ' → logprob: -4.872135162353516
    10. '\' → logprob: -4.872135162353516

Token 782: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.5153422355651855
    2. ')' → logprob: -2.3903422355651855
    3. '                                   ' → logprob: -2.3903422355651855
    4. '                           ' → logprob: -2.5153422355651855
    5. ':' → logprob: -2.6403422355651855
    6. '\n' → logprob: -3.6403422355651855
    7. '):' → logprob: -4.8903422355651855
    8. '                                ' → logprob: -5.0153422355651855
    9. ':
' → logprob: -5.6403422355651855
    10. '                       ' → logprob: -5.7653422355651855

Token 783: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.306760805164231e-05
    2. ' print' → logprob: -11.62501335144043
    3. '                           ' → logprob: -12.87501335144043
    4. '                               ' → logprob: -14.25001335144043
    5. '0' → logprob: -14.62501335144043
    6. '```' → logprob: -15.25001335144043
    7. '                       ' → logprob: -16.62501335144043
    8. '``' → logprob: -16.87501335144043
    9. '                                   ' → logprob: -17.12501335144043
    10. '                   ' → logprob: -17.75001335144043

Token 784: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.8624639324116288e-06
    2. '0' → logprob: -13.625001907348633
    3. '(
' → logprob: -15.000001907348633
    4. ' (' → logprob: -15.375001907348633
    5. '(-' → logprob: -18.750001907348633
    6. '('' → logprob: -18.875001907348633
    7. '()' → logprob: -19.125001907348633
    8. '("' → logprob: -19.875001907348633
    9. '((' → logprob: -20.000001907348633
    10. '```' → logprob: -20.500001907348633

Token 785: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.375
    3. '(' → logprob: -16.875
    4. '"' → logprob: -17.5
    5. ''' → logprob: -18.0
    6. ')' → logprob: -19.125
    7. '   ' → logprob: -20.875
    8. '`' → logprob: -21.25
    9. '00' → logprob: -21.5
    10. '```' → logprob: -21.875

Token 786: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03009837120771408
    2. ')
' → logprob: -3.5300984382629395
    3. '                               ' → logprob: -8.530097961425781
    4. ')
' → logprob: -9.655097961425781
    5. ')return' → logprob: -10.405097961425781
    6. ' )' → logprob: -10.905097961425781
    7. ')\' → logprob: -11.280097961425781
    8. '                           ' → logprob: -12.030097961425781
    9. '<|end|>' → logprob: -12.280097961425781
    10. ' )
' → logprob: -12.780097961425781

Token 787: '                               ' (ID: 2419)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25102484226226807
    2. '                               ' → logprob: -2.2510247230529785
    3. '\n' → logprob: -2.7510247230529785
    4. '                           ' → logprob: -3.3760247230529785
    5. ')
' → logprob: -5.7510247230529785
    6. 'exit' → logprob: -6.1260247230529785
    7. '
' → logprob: -6.3760247230529785
    8. '<|end|>' → logprob: -6.3760247230529785
    9. '                                
' → logprob: -6.6260247230529785
    10. '\r' → logprob: -6.6260247230529785

Token 788: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.05160907283425331
    2. '                               ' → logprob: -3.1766090393066406
    3. ' exit' → logprob: -4.926609039306641
    4. 'return' → logprob: -8.42660903930664
    5. '(exit' → logprob: -8.42660903930664
    6. '	exit' → logprob: -8.55160903930664
    7. '                           ' → logprob: -9.05160903930664
    8. '<|end|>' → logprob: -9.30160903930664
    9. '.exit' → logprob: -9.42660903930664
    10. '                                   ' → logprob: -9.42660903930664

Token 789: '()
' (ID: 1234)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9610345959663391
    2. '                           ' → logprob: -1.0860345363616943
    3. '
' → logprob: -2.2110345363616943
    4. ')
' → logprob: -2.4610345363616943
    5. '\n' → logprob: -2.8360345363616943
    6. '                            
' → logprob: -4.836034774780273
    7. '                               ' → logprob: -5.211034774780273
    8. 'newline' → logprob: -5.586034774780273
    9. '                       ' → logprob: -6.336034774780273
    10. '                            ' → logprob: -6.586034774780273

Token 790: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.1004958525300026
    2. ')' → logprob: -3.6004958152770996
    3. '                               ' → logprob: -3.8504958152770996
    4. '                       ' → logprob: -4.3504958152771
    5. '                            ' → logprob: -4.3504958152771
    6. 'else' → logprob: -4.8504958152771
    7. '_' → logprob: -5.1004958152771
    8. '                        ' → logprob: -6.8504958152771
    9. ' else' → logprob: -7.1004958152771
    10. '                   ' → logprob: -7.3504958152771

Token 791: ' return' (ID: 622)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.09557000547647476
    2. 'return' (adapté à ' return') → logprob: -3.2205700874328613
    3. 'start' → logprob: -3.7205700874328613
    4. 'else' → logprob: -4.845570087432861
    5. 'val' → logprob: -5.220570087432861
    6. '                            
' → logprob: -6.095570087432861
    7. ' return' → logprob: -6.345570087432861
    8. 'num' → logprob: -6.345570087432861
    9. '                               ' → logprob: -6.720570087432861
    10. '
' → logprob: -6.970570087432861

Token 792: ' (' (ID: 350)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.005255218595266342
    2. '(False' → logprob: -5.255255222320557
    3. ' False' → logprob: -10.755254745483398
    4. 'True' → logprob: -16.7552547454834
    5. '(True' → logprob: -17.2552547454834
    6. '   ' → logprob: -18.1302547454834
    7. '(' → logprob: -19.0052547454834
    8. '=False' → logprob: -19.7552547454834
    9. '(F' → logprob: -19.8802547454834
    10. 'Fal' → logprob: -21.1302547454834

Token 793: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -7.896309739408025e-07
    2. ' False' → logprob: -14.375000953674316
    3. '(False' → logprob: -15.750000953674316
    4. 'True' → logprob: -18.25
    5. '   ' → logprob: -19.625
    6. 'Fal' → logprob: -21.125
    7. 'false' → logprob: -21.625
    8. 'None' → logprob: -21.875
    9. '0' → logprob: -22.0
    10. '=False' → logprob: -22.25

Token 794: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ' ,' → logprob: -11.250021934509277
    3. ',
' → logprob: -12.250021934509277
    4. '<|end|>' → logprob: -13.250021934509277
    5. ',j' → logprob: -14.375021934509277
    6. ',num' → logprob: -15.250021934509277
    7. ')' → logprob: -15.500021934509277
    8. ',n' → logprob: -15.750021934509277
    9. '‌,' → logprob: -15.875021934509277
    10. '),' → logprob: -16.25002098083496

Token 795: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.3868810832500458
    2. ' nums' → logprob: -1.1368811130523682
    3. '(nums' → logprob: -12.636880874633789
    4. ')' → logprob: -13.636880874633789
    5. 'num' → logprob: -13.761880874633789
    6. 'None' → logprob: -13.761880874633789
    7. ' None' → logprob: -14.011880874633789
    8. '_nums' → logprob: -14.386880874633789
    9. ' ' → logprob: -14.761880874633789
    10. '   ' → logprob: -14.886880874633789

Token 796: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020082220435142517
    2. ',j' → logprob: -7.002008438110352
    3. ')' → logprob: -8.127008438110352
    4. ',)' → logprob: -8.502008438110352
    5. ',i' → logprob: -8.627008438110352
    6. ' ,' → logprob: -8.752008438110352
    7. '[' → logprob: -9.627008438110352
    8. ',
' → logprob: -10.127008438110352
    9. '[j' → logprob: -10.252008438110352
    10. '<|end|>' → logprob: -10.502008438110352

Token 797: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.001502717612311244
    2. ' depth' → logprob: -6.501502513885498
    3. '   ' → logprob: -16.251502990722656
    4. '(depth' → logprob: -16.251502990722656
    5. ' ' → logprob: -16.751502990722656
    6. '    ' → logprob: -16.751502990722656
    7. 'length' → logprob: -17.501502990722656
    8. 'd' → logprob: -17.751502990722656
    9. 'distance' → logprob: -18.126502990722656
    10. '-depth' → logprob: -18.251502990722656

Token 798: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008118899422697723
    2. ',i' → logprob: -8.000811576843262
    3. ',j' → logprob: -8.000811576843262
    4. ' ,' → logprob: -9.375811576843262
    5. '           ' → logprob: -10.875811576843262
    6. 'j' → logprob: -11.625811576843262
    7. '[i' → logprob: -12.000811576843262
    8. '[j' → logprob: -12.125811576843262
    9. ')' → logprob: -12.375811576843262
    10. '[' → logprob: -12.875811576843262

Token 799: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.11530270427465439
    2. 'i' → logprob: -2.240302801132202
    3. ' j' → logprob: -6.115302562713623
    4. ' i' → logprob: -8.490303039550781
    5. '   ' → logprob: -9.865303039550781
    6. '    ' → logprob: -12.865303039550781
    7. 'u' → logprob: -13.365303039550781
    8. ')' → logprob: -13.990303039550781
    9. '```' → logprob: -13.990303039550781
    10. '	j' → logprob: -14.677803039550781

Token 800: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01196854654699564
    2. ')' → logprob: -4.636968612670898
    3. ',)' → logprob: -6.636968612670898
    4. '+' → logprob: -7.261968612670898
    5. ' ,' → logprob: -9.386968612670898
    6. ' +' → logprob: -10.386968612670898
    7. '<|end|>' → logprob: -11.011968612670898
    8. '),' → logprob: -11.511968612670898
    9. '-' → logprob: -11.761968612670898
    10. ',
' → logprob: -11.886968612670898

Token 801: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.001295596593990922
    2. '(num' → logprob: -6.876295566558838
    3. ' num' → logprob: -8.376296043395996
    4. 'nums' → logprob: -10.876296043395996
    5. ' (' → logprob: -12.126296043395996
    6. '   ' → logprob: -13.126296043395996
    7. '-num' → logprob: -13.626296043395996
    8. '(' → logprob: -13.751296043395996
    9. 'int' → logprob: -14.251296043395996
    10. '[num' → logprob: -14.376296043395996

Token 802: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -1.259079363080673e-05
    2. '_' → logprob: -11.750012397766113
    3. '_i' → logprob: -13.375012397766113
    4. 'j' → logprob: -13.750012397766113
    5. '_s' → logprob: -14.375012397766113
    6. '[j' → logprob: -14.750012397766113
    7. ')' → logprob: -15.250012397766113
    8. ' _' → logprob: -15.750012397766113
    9. '\' → logprob: -16.12501335144043
    10. '```' → logprob: -16.50001335144043

Token 803: '_sum' (ID: 29859)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013699393719434738
    2. '-' → logprob: -4.888699531555176
    3. '+' → logprob: -6.013699531555176
    4. ' )' → logprob: -6.638699531555176
    5. ' -' → logprob: -7.263699531555176
    6. '-j' → logprob: -7.513699531555176
    7. ')
' → logprob: -8.513699531555176
    8. '[j' → logprob: -9.013699531555176
    9. '))' → logprob: -9.263699531555176
    10. '_j' → logprob: -9.388699531555176

Token 804: ' //' (ID: 602)
  Prédit: '//'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.10094230622053146
    2. ' //' → logprob: -2.600942373275757
    3. ')' → logprob: -3.850942373275757
    4. '                           ' → logprob: -8.350942611694336
    5. ')//' → logprob: -8.350942611694336
    6. '   ' → logprob: -10.850942611694336
    7. '                               ' → logprob: -11.350942611694336
    8. ' )' → logprob: -11.850942611694336
    9. '>>' → logprob: -12.100942611694336
    10. ' ' → logprob: -12.225942611694336

Token 805: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -19.125003814697266
    4. '
' → logprob: -19.500003814697266
    5. '```' → logprob: -20.500003814697266
    6. '=' → logprob: -20.750003814697266
    7. '  ' → logprob: -21.250003814697266
    8. '۲' → logprob: -21.375003814697266
    9. '２' → logprob: -21.625003814697266
    10. '     ' → logprob: -21.875003814697266

Token 806: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -19.625001907348633
    4. '=' → logprob: -20.875001907348633
    5. '```' → logprob: -21.000001907348633
    6. '۲' → logprob: -21.250001907348633
    7. '２' → logprob: -21.625001907348633
    8. '-' → logprob: -21.750001907348633
    9. '  ' → logprob: -22.625001907348633
    10. '1' → logprob: -22.625001907348633

Token 807: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. ' )' → logprob: -11.875012397766113
    3. ')
' → logprob: -12.875012397766113
    4. '                           ' → logprob: -14.500012397766113
    5. '   ' → logprob: -14.750012397766113
    6. ')`' → logprob: -15.250012397766113
    7. '       ' → logprob: -15.375012397766113
    8. '),' → logprob: -15.500012397766113
    9. '))' → logprob: -15.625012397766113
    10. '           ' → logprob: -15.625012397766113

Token 808: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.604161262512207
    2. '                ' → logprob: -2.104161262512207
    3. ' )' → logprob: -2.854161262512207
    4. ' 
' → logprob: -3.229161262512207
    5. ' ' → logprob: -3.354161262512207
    6. ')' → logprob: -3.479161262512207
    7. '                               ' → logprob: -3.479161262512207
    8. '                           ' → logprob: -3.729161262512207
    9. '                
' → logprob: -4.229161262512207
    10. '                       ' → logprob: -4.479161262512207

Token 809: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13634026050567627
    2. 'else' → logprob: -2.8863401412963867
    3. ' else' → logprob: -3.3863401412963867
    4. '                   ' → logprob: -4.011340141296387
    5. '                       ' → logprob: -4.511340141296387
    6. '                ' → logprob: -5.136340141296387
    7. '           ' → logprob: -7.386340141296387
    8. '                           ' → logprob: -7.511340141296387
    9. '                               ' → logprob: -7.761340141296387
    10. '              ' → logprob: -7.886340141296387

Token 810: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.20856498181819916
    2. 'parent' → logprob: -2.3335649967193604
    3. 'nums' → logprob: -2.5835649967193604
    4. 'num' → logprob: -4.958564758300781
    5. ' depth' → logprob: -5.583564758300781
    6. 'j' → logprob: -5.833564758300781
    7. ' parent' → logprob: -8.083564758300781
    8. '   ' → logprob: -8.083564758300781
    9. 'True' → logprob: -8.708564758300781
    10. '           ' → logprob: -8.833564758300781

Token 811: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. 'j' → logprob: -14.750000953674316
    3. '                   ' → logprob: -16.375
    4. ' [' → logprob: -16.375
    5. '[' → logprob: -16.5
    6. '[i' → logprob: -16.75
    7. '               ' → logprob: -17.125
    8. '```' → logprob: -17.375
    9. '
' → logprob: -17.625
    10. '           ' → logprob: -18.25

Token 812: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7858331799507141
    2. ' ==' → logprob: -1.2858331203460693
    3. ']' → logprob: -2.4108331203460693
    4. '==' → logprob: -3.0358331203460693
    5. ')' → logprob: -3.5358331203460693
    6. ']==' → logprob: -3.6608331203460693
    7. '[' → logprob: -4.035833358764648
    8. '!=' → logprob: -4.160833358764648
    9. '==-' → logprob: -4.285833358764648
    10. '[j' → logprob: -5.160833358764648

Token 813: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9151772260665894
    2. ' ==' → logprob: -0.9151772260665894
    3. '==-' → logprob: -2.540177345275879
    4. ' !=' → logprob: -2.915177345275879
    5. '!=' → logprob: -2.915177345275879
    6. '=' → logprob: -5.290177345275879
    7. '!=-' → logprob: -5.290177345275879
    8. '[' → logprob: -6.915177345275879
    9. ')' → logprob: -7.915177345275879
    10. ' =' → logprob: -9.290177345275879

Token 814: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -6.988221684878226e-06
    2. ' -' → logprob: -11.875006675720215
    3. '   ' → logprob: -17.50000762939453
    4. '                   ' → logprob: -19.25000762939453
    5. ' ' → logprob: -19.50000762939453
    6. '  ' → logprob: -20.62500762939453
    7. '	' → logprob: -21.00000762939453
    8. '           ' → logprob: -21.12500762939453
    9. '               ' → logprob: -21.37500762939453
    10. '       ' → logprob: -22.87500762939453

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2233183042553719e-05
    2. ' ' → logprob: -12.250012397766113
    3. '2' → logprob: -12.500012397766113
    4. '                   ' → logprob: -13.625012397766113
    5. '               ' → logprob: -14.375012397766113
    6. '           ' → logprob: -15.000012397766113
    7. '   ' → logprob: -15.000012397766113
    8. '                       ' → logprob: -15.562512397766113
    9. '       ' → logprob: -15.937512397766113
    10. '                           ' → logprob: -16.125011444091797

Token 816: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2530934512615204
    2. ':' → logprob: -1.5030934810638428
    3. '                   ' → logprob: -7.378093242645264
    4. '):
' → logprob: -8.628093719482422
    5. ':
' → logprob: -9.503093719482422
    6. ' :
' → logprob: -9.628093719482422
    7. '                       ' → logprob: -9.628093719482422
    8. '               ' → logprob: -9.628093719482422
    9. ' and' → logprob: -10.628093719482422
    10. ' :' → logprob: -11.503093719482422

Token 817: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14231333136558533
    2. '               ' → logprob: -2.267313241958618
    3. ' parent' → logprob: -4.517313480377197
    4. ' depth' → logprob: -5.267313480377197
    5. 'parent' → logprob: -5.267313480377197
    6. 'depth' → logprob: -5.267313480377197
    7. '                       ' → logprob: -7.142313480377197
    8. 'num' → logprob: -7.642313480377197
    9. 'nums' → logprob: -7.767313480377197
    10. ' num' → logprob: -8.892313003540039

Token 818: ' #' (ID: 1069)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.551433265209198
    2. 'parent' → logprob: -1.5514333248138428
    3. 'depth' → logprob: -2.3014333248138428
    4. '                   ' → logprob: -2.4264333248138428
    5. '               ' → logprob: -5.051433086395264
    6. ' parent' → logprob: -5.176433086395264
    7. ' nums' → logprob: -5.426433086395264
    8. ' depth' → logprob: -5.801433086395264
    9. '   ' → logprob: -6.801433086395264
    10. '           ' → logprob: -6.926433086395264

Token 819: ' Première' (ID: 179764)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.38862931728363037
    2. 'parent' → logprob: -1.8886293172836304
    3. 'nums' → logprob: -2.26362943649292
    4. '                   ' → logprob: -3.38862943649292
    5. ' depth' → logprob: -3.88862943649292
    6. ' parent' → logprob: -5.51362943649292
    7. '                       ' → logprob: -6.13862943649292
    8. '               ' → logprob: -6.76362943649292
    9. ' nums' → logprob: -6.88862943649292
    10. '   ' → logprob: -6.88862943649292

Token 820: ' visite' (ID: 38597)
  Prédit: '_stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_stack' → logprob: -1.5042988061904907
    2. 'depth' → logprob: -1.8792988061904907
    3. '                   ' → logprob: -2.504298686981201
    4. 'visit' → logprob: -2.754298686981201
    5. 'stack' → logprob: -3.129298686981201
    6. '=' → logprob: -3.254298686981201
    7. '           ' → logprob: -3.254298686981201
    8. '               ' → logprob: -3.379298686981201
    9. ')' → logprob: -3.504298686981201
    10. 'time' → logprob: -3.754298686981201

Token 821: ' de' (ID: 334)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020196489989757538
    2. '                       ' → logprob: -4.020196437835693
    3. '                    
' → logprob: -7.645196437835693
    4. '                    ' → logprob: -8.020196914672852
    5. '               ' → logprob: -8.145196914672852
    6. ':
' → logprob: -8.520196914672852
    7. ',' → logprob: -8.895196914672852
    8. '           ' → logprob: -9.395196914672852
    9. '                        
' → logprob: -9.645196914672852
    10. 'nums' → logprob: -10.145196914672852

Token 822: ' ce' (ID: 2357)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0013622589176520705
    2. ' j' → logprob: -6.626362323760986
    3. '[j' → logprob: -10.751361846923828
    4. '   ' → logprob: -11.751361846923828
    5. '                   ' → logprob: -12.501361846923828
    6. '	j' → logprob: -14.251361846923828
    7. '```' → logprob: -15.001361846923828
    8. '       ' → logprob: -15.251361846923828
    9. '               ' → logprob: -15.376361846923828
    10. '1' → logprob: -15.376361846923828

Token 823: ' sommet' (ID: 130502)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08083465695381165
    2. ' j' → logprob: -2.5808346271514893
    3. ' node' → logprob: -7.455834865570068
    4. ' voisin' → logprob: -7.830834865570068
    5. ' sommet' → logprob: -8.70583438873291
    6. 'node' → logprob: -8.70583438873291
    7. '   ' → logprob: -8.83083438873291
    8. '	j' → logprob: -8.83083438873291
    9. 'neighbor' → logprob: -9.70583438873291
    10. ' neighbor' → logprob: -10.20583438873291

Token 824: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027131574228405952
    2. '                       ' → logprob: -4.2771315574646
    3. ',' → logprob: -5.7771315574646
    4. ':' → logprob: -6.0271315574646
    5. ':
' → logprob: -6.2771315574646
    6. '                    
' → logprob: -7.1521315574646
    7. '):
' → logprob: -7.2771315574646
    8. '               ' → logprob: -7.4021315574646
    9. 'depth' → logprob: -7.5271315574646
    10. ')' → logprob: -7.6521315574646

Token 825: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029657574370503426
    2. 'nums' → logprob: -4.779657363891602
    3. 'depth' → logprob: -5.029657363891602
    4. '               ' → logprob: -6.154657363891602
    5. '                    
' → logprob: -6.154657363891602
    6. 'parent' → logprob: -6.404657363891602
    7. '                       ' → logprob: -6.529657363891602
    8. '
' → logprob: -7.029657363891602
    9. ' depth' → logprob: -7.154657363891602
    10. ':
' → logprob: -7.279657363891602

Token 826: ' depth' (ID: 13636)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.1675250381231308
    2. 'parent' → logprob: -2.542525053024292
    3. 'depth' (adapté à ' depth') → logprob: -3.292525053024292
    4. '                   ' → logprob: -3.667525053024292
    5. ' nums' → logprob: -5.667524814605713
    6. '               ' → logprob: -6.042524814605713
    7. '           ' → logprob: -6.292524814605713
    8. '   ' → logprob: -6.542524814605713
    9. ' parent' → logprob: -6.917524814605713
    10. '                       ' → logprob: -7.042524814605713

Token 827: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.624555291840807e-05
    2. '                   ' → logprob: -10.000076293945312
    3. ' [' → logprob: -11.125076293945312
    4. '[' → logprob: -11.875076293945312
    5. '=j' → logprob: -13.625076293945312
    6. '   ' → logprob: -14.000076293945312
    7. 'j' → logprob: -14.125076293945312
    8. '                       ' → logprob: -14.250076293945312
    9. '][' → logprob: -14.375076293945312
    10. '=' → logprob: -14.500076293945312

Token 828: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00317391031421721
    2. '=' → logprob: -6.878173828125
    3. ' =' → logprob: -6.878173828125
    4. ')' → logprob: -7.503173828125
    5. ']=' → logprob: -8.003173828125
    6. '[j' → logprob: -9.378173828125
    7. ' ]' → logprob: -9.503173828125
    8. ']=-' → logprob: -11.003173828125
    9. '                   ' → logprob: -11.128173828125
    10. ']+=' → logprob: -11.878173828125

Token 829: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011047935113310814
    2. ' =' → logprob: -4.511047840118408
    3. '=j' → logprob: -16.63604736328125
    4. ',' → logprob: -18.01104736328125
    5. ')' → logprob: -18.26104736328125
    6. '=int' → logprob: -18.51104736328125
    7. '   ' → logprob: -19.01104736328125
    8. ')=' → logprob: -19.13604736328125
    9. '＝' → logprob: -19.13604736328125
    10. '.=' → logprob: -19.38604736328125

Token 830: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -1.9504606825648807e-05
    2. ' depth' → logprob: -10.875019073486328
    3. '   ' → logprob: -14.750019073486328
    4. '(depth' → logprob: -16.625019073486328
    5. '1' → logprob: -18.125019073486328
    6. 'd' → logprob: -20.125019073486328
    7. '.depth' → logprob: -20.375019073486328
    8. '_depth' → logprob: -21.000019073486328
    9. 'Depth' → logprob: -21.250019073486328
    10. ' ' → logprob: -21.375019073486328

Token 831: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.020600982010364532
    2. 'i' → logprob: -3.8956010341644287
    3. '[' → logprob: -10.270601272583008
    4. '[j' → logprob: -11.645601272583008
    5. ' i' → logprob: -12.270601272583008
    6. 'j' → logprob: -12.645601272583008
    7. '[
' → logprob: -13.145601272583008
    8. '	i' → logprob: -13.645601272583008
    9. '   ' → logprob: -13.645601272583008
    10. '`' → logprob: -14.270601272583008

Token 832: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.055014755576848984
    2. ' +' → logprob: -2.9300148487091064
    3. ')+' → logprob: -10.180014610290527
    4. '[' → logprob: -10.305014610290527
    5. ']+' → logprob: -10.680014610290527
    6. ' plus' → logprob: -11.055014610290527
    7. ')' → logprob: -11.930014610290527
    8. ']' → logprob: -12.930014610290527
    9. '   ' → logprob: -13.055014610290527
    10. '+j' → logprob: -13.180014610290527

Token 833: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141440629959106
    2. ' +' → logprob: -1.7014143466949463
    3. ' plus' → logprob: -14.451414108276367
    4. ' ' → logprob: -15.951414108276367
    5. '＋' → logprob: -16.201414108276367
    6. '   ' → logprob: -16.326414108276367
    7. '[' → logprob: -16.701414108276367
    8. '	' → logprob: -17.701414108276367
    9. 'plus' → logprob: -17.826414108276367
    10. '+j' → logprob: -17.826414108276367

Token 834: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. '   ' → logprob: -18.625
    4. '```' → logprob: -19.0
    5. '<|end|>' → logprob: -21.0
    6. '[' → logprob: -21.0
    7. '2' → logprob: -21.25
    8. '+' → logprob: -21.25
    9. '
' → logprob: -21.375
    10. '=' → logprob: -21.625

Token 835: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.375
    3. '   ' → logprob: -20.875
    4. '
' → logprob: -20.875
    5. '```' → logprob: -21.0
    6. '۱' → logprob: -22.5
    7. '１' → logprob: -23.125
    8. '' → logprob: -23.125
    9. '[' → logprob: -23.375
    10. '१' → logprob: -23.625

Token 836: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.01768028363585472
    2. 'nums' → logprob: -5.5176801681518555
    3. '               ' → logprob: -5.7676801681518555
    4. '                    
' → logprob: -6.0176801681518555
    5. '           ' → logprob: -6.1426801681518555
    6. '                    ' → logprob: -6.5176801681518555
    7. '<|end|>' → logprob: -6.7676801681518555
    8. '       ' → logprob: -7.2676801681518555
    9. ',' → logprob: -7.7676801681518555
    10. ' nums' → logprob: -7.8926801681518555

Token 837: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11062926054000854
    2. 'nums' → logprob: -2.6106293201446533
    3. ' nums' → logprob: -3.9856293201446533
    4. '                    ' → logprob: -5.110629081726074
    5. 'num' → logprob: -6.735629081726074
    6. '                    
' → logprob: -6.985629081726074
    7. '```' → logprob: -6.985629081726074
    8. '               ' → logprob: -7.110629081726074
    9. '                       ' → logprob: -7.360629081726074
    10. '           ' → logprob: -7.610629081726074

Token 838: ' nums' (ID: 18117)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.005018259398639202
    2. 'nums' (adapté à ' nums') → logprob: -5.38001823425293
    3. '                   ' → logprob: -8.25501823425293
    4. ' parent' → logprob: -9.25501823425293
    5. 'num' → logprob: -11.13001823425293
    6. '   ' → logprob: -11.63001823425293
    7. '	parent' → logprob: -11.88001823425293
    8. '                       ' → logprob: -12.13001823425293
    9. '               ' → logprob: -13.63001823425293
    10. 'parents' → logprob: -13.88001823425293

Token 839: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -10.875020027160645
    3. ' [' → logprob: -15.250020027160645
    4. 'j' → logprob: -15.375020027160645
    5. '=j' → logprob: -15.875020027160645
    6. '   ' → logprob: -16.250019073486328
    7. '=' → logprob: -16.250019073486328
    8. '[i' → logprob: -17.375019073486328
    9. '	j' → logprob: -17.625019073486328
    10. '[js' → logprob: -17.875019073486328

Token 840: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269410252571106
    2. '=' → logprob: -2.126940965652466
    3. ')' → logprob: -12.001940727233887
    4. ']' → logprob: -12.876940727233887
    5. ' ' → logprob: -13.876940727233887
    6. '[' → logprob: -14.251940727233887
    7. '	' → logprob: -14.751940727233887
    8. '    ' → logprob: -14.876940727233887
    9. ' +=' → logprob: -14.876940727233887
    10. ']=' → logprob: -15.126940727233887

Token 841: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.004078639671206474
    2. ' =' → logprob: -5.5040788650512695
    3. '.=' → logprob: -16.504077911376953
    4. '=num' → logprob: -16.629077911376953
    5. '=j' → logprob: -17.504077911376953
    6. '=s' → logprob: -18.379077911376953
    7. '+=' → logprob: -18.629077911376953
    8. ',' → logprob: -18.629077911376953
    9. '＝' → logprob: -18.629077911376953
    10. '=k' → logprob: -18.629077911376953

Token 842: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -5.5027299822540954e-05
    2. ' num' → logprob: -10.000055313110352
    3. 's' → logprob: -11.625055313110352
    4. '                   ' → logprob: -16.00005531311035
    5. '[num' → logprob: -16.12505531311035
    6. '(num' → logprob: -16.25005531311035
    7. '	num' → logprob: -16.50005531311035
    8. 'nums' → logprob: -16.50005531311035
    9. '   ' → logprob: -16.87505531311035
    10. '$num' → logprob: -17.37505531311035

Token 843: '_j' (ID: 12021)
  Prédit: '_j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_j' → logprob: -0.7924119830131531
    2. '_s' → logprob: -0.9174119830131531
    3. 's' → logprob: -3.292412042617798
    4. '[s' → logprob: -3.417412042617798
    5. '[i' → logprob: -3.542412042617798
    6. '_i' → logprob: -3.667412042617798
    7. '[u' → logprob: -4.667411804199219
    8. '[' → logprob: -5.042411804199219
    9. '[j' → logprob: -6.042411804199219
    10. '_u' → logprob: -7.042411804199219

Token 844: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003990896511822939
    2. 'parent' → logprob: -5.62899112701416
    3. '               ' → logprob: -9.12899112701416
    4. '           ' → logprob: -9.50399112701416
    5. '				' → logprob: -10.00399112701416
    6. '[parent' → logprob: -10.00399112701416
    7. ' parent' → logprob: -10.37899112701416
    8. ',' → logprob: -10.87899112701416
    9. ',parent' → logprob: -10.87899112701416
    10. '                       ' → logprob: -11.62899112701416

Token 845: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10064128041267395
    2. 'parent' → logprob: -2.3506412506103516
    3. ' parent' → logprob: -8.225641250610352
    4. '               ' → logprob: -9.725641250610352
    5. ',parent' → logprob: -10.725641250610352
    6. '           ' → logprob: -10.850641250610352
    7. '   ' → logprob: -11.100641250610352
    8. '                       ' → logprob: -11.225641250610352
    9. '[parent' → logprob: -11.225641250610352
    10. 'stack' → logprob: -12.350641250610352

Token 846: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.010206005536019802
    2. 'next' → logprob: -4.76020622253418
    3. 'stack' → logprob: -6.51020622253418
    4. '                   ' → logprob: -9.26020622253418
    5. ' parent' → logprob: -12.38520622253418
    6. '               ' → logprob: -13.63520622253418
    7. '           ' → logprob: -14.13520622253418
    8. '                       ' → logprob: -14.51020622253418
    9. ' next' → logprob: -16.01020622253418
    10. '   ' → logprob: -17.63520622253418

Token 847: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.023345056921243668
    2. '[i' → logprob: -3.7733449935913086
    3. 'j' → logprob: -9.648344993591309
    4. '[' → logprob: -10.398344993591309
    5. 'i' → logprob: -13.898344993591309
    6. '=j' → logprob: -14.148344993591309
    7. '[js' → logprob: -15.023344993591309
    8. ' [' → logprob: -15.148344993591309
    9. '=' → logprob: -15.273344993591309
    10. ' j' → logprob: -15.523344993591309

Token 848: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7011579275131226
    2. '=' → logprob: -0.9511579275131226
    3. ' =' → logprob: -2.826158046722412
    4. ']=' → logprob: -3.201158046722412
    5. '=i' → logprob: -4.201158046722412
    6. '[i' → logprob: -6.326158046722412
    7. '=j' → logprob: -7.826158046722412
    8. ')' → logprob: -7.951158046722412
    9. ')=' → logprob: -9.951157569885254
    10. '[j' → logprob: -10.201157569885254

Token 849: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03811929374933243
    2. ' =' → logprob: -3.288119316101074
    3. '=i' → logprob: -9.538119316101074
    4. '[i' → logprob: -12.663119316101074
    5. '=j' → logprob: -13.038119316101074
    6. '[' → logprob: -16.288118362426758
    7. '＝' → logprob: -16.288118362426758
    8. '.append' → logprob: -16.663118362426758
    9. '[j' → logprob: -16.788118362426758
    10. ']=' → logprob: -17.413118362426758

Token 850: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -2.1008713702030946e-06
    2. ' i' → logprob: -13.125001907348633
    3. '	i' → logprob: -18.625001907348633
    4. '   ' → logprob: -21.375001907348633
    5. '{i' → logprob: -21.875001907348633
    6. 'I' → logprob: -22.125001907348633
    7. '[i' → logprob: -22.875001907348633
    8. '$i' → logprob: -22.875001907348633
    9. ')i' → logprob: -23.500001907348633
    10. '*i' → logprob: -23.875001907348633

Token 851: '
' (ID: 198)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.01966584101319313
    2. '                   ' → logprob: -4.019665718078613
    3. ' next' → logprob: -6.644665718078613
    4. 'stack' → logprob: -8.644665718078613
    5. '               ' → logprob: -10.394665718078613
    6. '                       ' → logprob: -13.144665718078613
    7. '           ' → logprob: -13.269665718078613
    8. '[next' → logprob: -13.769665718078613
    9. '```' → logprob: -14.019665718078613
    10. '(next' → logprob: -15.019665718078613

Token 852: '                   ' (ID: 699)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.483007550239563
    2. '                   ' → logprob: -0.983007550239563
    3. ' next' → logprob: -5.108007431030273
    4. 'stack' → logprob: -6.358007431030273
    5. '               ' → logprob: -7.233007431030273
    6. '           ' → logprob: -8.733007431030273
    7. '                       ' → logprob: -9.358007431030273
    8. '```' → logprob: -9.608007431030273
    9. '   ' → logprob: -10.733007431030273
    10. '[next' → logprob: -11.233007431030273

Token 853: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.0016290020430460572
    2. ' next' → logprob: -6.501628875732422
    3. 'stack' → logprob: -9.126628875732422
    4. '                   ' → logprob: -11.001628875732422
    5. '               ' → logprob: -14.876628875732422
    6. ' stack' → logprob: -15.751628875732422
    7. '           ' → logprob: -15.751628875732422
    8. '[next' → logprob: -15.876628875732422
    9. '	next' → logprob: -16.001628875732422
    10. '   ' → logprob: -16.001628875732422

Token 854: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -2.47495681833243e-05
    2. 'stack' → logprob: -11.125024795532227
    3. '.append' → logprob: -13.125024795532227
    4. '```' → logprob: -13.500024795532227
    5. '_' → logprob: -13.875024795532227
    6. '_STACK' → logprob: -14.500024795532227
    7. 'Stack' → logprob: -14.750024795532227
    8. 's' → logprob: -14.750024795532227
    9. '               ' → logprob: -14.875024795532227
    10. '_queue' → logprob: -15.000024795532227

Token 855: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.856408536899835e-05
    2. '.' → logprob: -10.500028610229492
    3. 'append' → logprob: -14.000028610229492
    4. '.extend' → logprob: -16.875028610229492
    5. '.app' → logprob: -17.625028610229492
    6. ' .' → logprob: -17.625028610229492
    7. '.ap' → logprob: -17.875028610229492
    8. '.push' → logprob: -18.625028610229492
    9. '.Append' → logprob: -19.375028610229492
    10. 'Append' → logprob: -19.875028610229492

Token 856: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.00012356207298580557
    2. 'j' → logprob: -9.000123977661133
    3. '(' → logprob: -16.250123977661133
    4. '	j' → logprob: -18.500123977661133
    5. '$j' → logprob: -20.000123977661133
    6. ' j' → logprob: -20.125123977661133
    7. '[j' → logprob: -20.500123977661133
    8. ',j' → logprob: -20.875123977661133
    9. '(
' → logprob: -21.250123977661133
    10. '_j' → logprob: -21.625123977661133

Token 857: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002491807099431753
    2. ')
' → logprob: -8.625248908996582
    3. ' )' → logprob: -10.000248908996582
    4. '       ' → logprob: -11.000248908996582
    5. '               ' → logprob: -12.875248908996582
    6. '           ' → logprob: -13.750248908996582
    7. '```' → logprob: -14.375248908996582
    8. ')return' → logprob: -14.500248908996582
    9. '                   ' → logprob: -14.750248908996582
    10. '   ' → logprob: -15.000248908996582

Token 858: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037499635946005583
    2. '
' → logprob: -6.753749847412109
    3. 'stack' → logprob: -6.753749847412109
    4. '        
' → logprob: -7.753749847412109
    5. '   ' → logprob: -8.50374984741211
    6. ')' → logprob: -9.00374984741211
    7. ' stack' → logprob: -9.25374984741211
    8. '        ' → logprob: -9.25374984741211
    9. '    ' → logprob: -9.37874984741211
    10. '    
' → logprob: -9.50374984741211

Token 859: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0011253333650529385
    2. ' stack' → logprob: -7.001125335693359
    3. '       ' → logprob: -8.50112533569336
    4. '	stack' → logprob: -12.00112533569336
    5. '   ' → logprob: -13.00112533569336
    6. '.stack' → logprob: -14.25112533569336
    7. '(stack' → logprob: -14.75112533569336
    8. '_stack' → logprob: -15.12612533569336
    9. '        
' → logprob: -15.12612533569336
    10. 'Stack' → logprob: -15.25112533569336

Token 860: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -4.961759259458631e-06
    2. ' =' → logprob: -12.500004768371582
    3. '.extend' → logprob: -13.750004768371582
    4. '+=' → logprob: -16.2500057220459
    5. '.=' → logprob: -17.1250057220459
    6. '=}' → logprob: -20.3750057220459
    7. '=

' → logprob: -20.8750057220459
    8. '＝' → logprob: -21.3750057220459
    9. '=end' → logprob: -21.6250057220459
    10. '.append' → logprob: -21.7500057220459

Token 861: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -9.615255839889869e-05
    2. ' next' → logprob: -9.250096321105957
    3. '[next' → logprob: -18.00009536743164
    4. '(next' → logprob: -18.75009536743164
    5. '	next' → logprob: -20.87509536743164
    6. '   ' → logprob: -21.12509536743164
    7. '.next' → logprob: -22.87509536743164
    8. 'new' → logprob: -23.00009536743164
    9. 'Next' → logprob: -23.00009536743164
    10. ' ' → logprob: -23.12509536743164

Token 862: '_stack' (ID: 35650)
  Prédit: '_stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_stack' → logprob: -2.1008713702030946e-06
    2. 'stack' → logprob: -13.125001907348633
    3. 'Stack' → logprob: -18.875001907348633
    4. '_STACK' → logprob: -20.625001907348633
    5. '-stack' → logprob: -21.375001907348633
    6. ' stack' → logprob: -21.875001907348633
    7. '_' → logprob: -22.250001907348633
    8. '.stack' → logprob: -22.250001907348633
    9. 's' → logprob: -22.625001907348633
    10. '	stack' → logprob: -22.625001907348633

Token 863: '[:' (ID: 7808)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5710515379905701
    2. '<|end|>' → logprob: -1.0710515975952148
    3. 'return' → logprob: -2.446051597595215
    4. '
' → logprob: -6.446051597595215
    5. '	return' → logprob: -6.696051597595215
    6. '<|end|>' → logprob: -6.821051597595215
    7. ' return' → logprob: -6.946051597595215
    8. '    
' → logprob: -8.446051597595215
    9. '       ' → logprob: -9.196051597595215
    10. ':return' → logprob: -9.696051597595215

Token 864: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 865: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2014571875333786
    2. '   ' → logprob: -1.701457142829895
    3. ' return' → logprob: -10.451457023620605
    4. '	return' → logprob: -12.201457023620605
    5. 'True' → logprob: -12.451457023620605
    6. '```' → logprob: -12.701457023620605
    7. '(True' → logprob: -14.326457023620605
    8. '{return' → logprob: -14.326457023620605
    9. 'true' → logprob: -14.826457023620605
    10. '(return' → logprob: -15.326457023620605

Token 866: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.04930931702256203
    2. '   ' → logprob: -3.049309253692627
    3. ' return' → logprob: -7.299309253692627
    4. '
' → logprob: -10.674309730529785
    5. '    
' → logprob: -11.299309730529785
    6. '```' → logprob: -12.299309730529785
    7. '	return' → logprob: -12.424309730529785
    8. '(return' → logprob: -14.424309730529785
    9. ':return' → logprob: -15.174309730529785
    10. '{return' → logprob: -15.799309730529785

Token 867: ' Fin' (ID: 7772)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10022371262311935
    2. '   ' → logprob: -2.3502237796783447
    3. ' return' → logprob: -11.100223541259766
    4. '	return' → logprob: -14.100223541259766
    5. '    
' → logprob: -14.475223541259766
    6. '
' → logprob: -14.600223541259766
    7. '```' → logprob: -15.850223541259766
    8. '   ' → logprob: -17.100223541259766
    9. '#' → logprob: -17.725223541259766
    10. '       ' → logprob: -17.975223541259766

Token 868: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008747179061174393
    2. 'return' → logprob: -4.883747100830078
    3. ' return' → logprob: -6.883747100830078
    4. '
' → logprob: -10.133747100830078
    5. '    
' → logprob: -10.133747100830078
    6. '	return' → logprob: -11.133747100830078
    7. '  ' → logprob: -11.758747100830078
    8. '    ' → logprob: -11.758747100830078
    9. ' ' → logprob: -13.258747100830078
    10. ',' → logprob: -13.258747100830078

Token 869: ' DFS' (ID: 115767)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.009661642834544182
    2. 'def' → logprob: -4.759661674499512
    3. 'while' → logprob: -7.134661674499512
    4. ' dfs' → logprob: -9.259661674499512
    5. 'DFS' → logprob: -9.259661674499512
    6. 'par' → logprob: -10.759661674499512
    7. 'for' → logprob: -10.759661674499512
    8. 'df' → logprob: -12.009661674499512
    9. 'depth' → logprob: -13.259661674499512
    10. 'fonction' → logprob: -13.259661674499512

Token 870: ' sans' (ID: 9828)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1269380897283554
    2. 'return' → logprob: -2.1269381046295166
    3. ' return' → logprob: -11.626937866210938
    4. '	return' → logprob: -14.626937866210938
    5. '```' → logprob: -15.126937866210938
    6. '
' → logprob: -15.376937866210938
    7. '    
' → logprob: -16.751937866210938
    8. '       ' → logprob: -17.751937866210938
    9. '{return' → logprob: -18.251937866210938
    10. ':return' → logprob: -18.251937866210938

Token 871: ' conflits' (ID: 196422)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.09743817895650864
    2. 'pro' → logprob: -2.972438097000122
    3. 'conf' → logprob: -4.097438335418701
    4. 'return' → logprob: -4.472438335418701
    5. 'proble' → logprob: -5.097438335418701
    6. 'er' → logprob: -5.347438335418701
    7. 'contr' → logprob: -7.097438335418701
    8. 'ret' → logprob: -7.347438335418701
    9. 'incident' → logprob: -7.597438335418701
    10. ' conflit' → logprob: -8.222437858581543

Token 872: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.251091377227567e-05
    2. 'return' → logprob: -10.125042915344238
    3. ' return' → logprob: -13.375042915344238
    4. '    
' → logprob: -15.000042915344238
    5. '
' → logprob: -15.625042915344238
    6. '       ' → logprob: -15.750042915344238
    7. ',' → logprob: -16.375041961669922
    8. '   ' → logprob: -17.250041961669922
    9. '	return' → logprob: -17.375041961669922
    10. '```' → logprob: -17.500041961669922

Token 873: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005638765869662166
    2. 'return' → logprob: -7.500564098358154
    3. ' return' → logprob: -11.500563621520996
    4. '	return' → logprob: -14.500563621520996
    5. '```' → logprob: -15.500563621520996
    6. '       ' → logprob: -17.125564575195312
    7. ':return' → logprob: -17.875564575195312
    8. ')' → logprob: -18.125564575195312
    9. '   ' → logprob: -18.625564575195312
    10. '    ' → logprob: -18.875564575195312

Token 874: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00012487331696320325
    2. '   ' → logprob: -9.00012493133545
    3. ' return' → logprob: -13.50012493133545
    4. '	return' → logprob: -18.000123977661133
    5. '
' → logprob: -18.875123977661133
    6. '    
' → logprob: -21.875123977661133
    7. '```' → logprob: -22.125123977661133
    8. 'eturn' → logprob: -22.250123977661133
    9. '  ' → logprob: -23.000123977661133
    10. '{return' → logprob: -23.125123977661133

Token 875: ' (' (ID: 350)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.011065270751714706
    2. ' (' → logprob: -4.511065483093262
    3. 'True' → logprob: -11.886065483093262
    4. ' True' → logprob: -11.886065483093262
    5. '   ' → logprob: -13.386065483093262
    6. '(' → logprob: -13.886065483093262
    7. '(T' → logprob: -14.886065483093262
    8. '(true' → logprob: -14.886065483093262
    9. '(False' → logprob: -15.511065483093262
    10. ' ' → logprob: -16.261064529418945

Token 876: 'True' (ID: 4710)
  Prédit: 'True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.2664456789934775e-06
    2. ' True' → logprob: -14.000000953674316
    3. '(True' → logprob: -14.750000953674316
    4. '   ' → logprob: -18.750001907348633
    5. '
' → logprob: -20.375001907348633
    6. '=True' → logprob: -21.625001907348633
    7. 'Tr' → logprob: -21.625001907348633
    8. ')' → logprob: -22.875001907348633
    9. 'False' → logprob: -23.375001907348633
    10. 'true' → logprob: -23.500001907348633

Token 877: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001710014621494338
    2. ',)' → logprob: -9.250170707702637
    3. ')' → logprob: -9.750170707702637
    4. ' ,' → logprob: -11.375170707702637
    5. ',
' → logprob: -13.000170707702637
    6. '   ' → logprob: -13.875170707702637
    7. ',None' → logprob: -14.500170707702637
    8. ',:)' → logprob: -15.125170707702637
    9. ',,' → logprob: -15.375170707702637
    10. ',,,' → logprob: -15.625170707702637

Token 878: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.011047935113310814
    2. ' nums' → logprob: -4.511047840118408
    3. '(nums' → logprob: -16.38604736328125
    4. 'num' → logprob: -17.13604736328125
    5. '_nums' → logprob: -18.63604736328125
    6. 'Nums' → logprob: -19.01104736328125
    7. 'numbers' → logprob: -20.26104736328125
    8. ' ' → logprob: -20.76104736328125
    9. '   ' → logprob: -20.76104736328125
    10. 'numpy' → logprob: -21.76104736328125

Token 879: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -12.625011444091797
    3. ')' → logprob: -13.000011444091797
    4. '   ' → logprob: -13.375011444091797
    5. ',
' → logprob: -13.750011444091797
    6. ',,,' → logprob: -13.750011444091797
    7. ',)' → logprob: -14.000011444091797
    8. ',,' → logprob: -14.250011444091797
    9. ',None' → logprob: -15.375011444091797
    10. ',,,,' → logprob: -15.750011444091797

Token 880: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0002613358374219388
    2. ' depth' → logprob: -8.250261306762695
    3. '(depth' → logprob: -17.375261306762695
    4. '0' → logprob: -18.875261306762695
    5. '   ' → logprob: -19.750261306762695
    6. ' ' → logprob: -20.125261306762695
    7. ')' → logprob: -20.125261306762695
    8. 'None' → logprob: -20.625261306762695
    9. '
' → logprob: -21.125261306762695
    10. '-depth' → logprob: -21.500261306762695

Token 881: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.4391956685576588e-05
    2. ')' → logprob: -11.250024795532227
    3. ' ,' → logprob: -11.625024795532227
    4. '0' → logprob: -14.125024795532227
    5. '   ' → logprob: -14.250024795532227
    6. ',None' → logprob: -15.250024795532227
    7. ',
' → logprob: -15.875024795532227
    8. ',,,' → logprob: -16.125024795532227
    9. '[' → logprob: -16.250024795532227
    10. '(),' → logprob: -16.500024795532227

Token 882: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -14.375000953674316
    3. ')' → logprob: -19.5
    4. 'None' → logprob: -19.875
    5. '   ' → logprob: -20.75
    6. '000' → logprob: -22.5
    7. '00' → logprob: -22.75
    8. '۰' → logprob: -22.875
    9. ',' → logprob: -24.25
    10. '  ' → logprob: -24.5

Token 883: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.75
    3. ')' → logprob: -19.125
    4. 'None' → logprob: -20.625
    5. '   ' → logprob: -21.25
    6. '00' → logprob: -21.375
    7. '000' → logprob: -21.375
    8. '۰' → logprob: -21.75
    9. ',' → logprob: -22.75
    10. '  ' → logprob: -23.5

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ')' → logprob: -12.875004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. '   ' → logprob: -15.750004768371582
    5. ',
' → logprob: -16.1250057220459
    6. ',)' → logprob: -16.2500057220459
    7. '0' → logprob: -16.6250057220459
    8. ',None' → logprob: -17.0000057220459
    9. '<|end|>' → logprob: -17.3750057220459
    10. '```' → logprob: -18.3750057220459

Token 885: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.750001907348633
    4. ')' → logprob: -19.000001907348633
    5. 'None' → logprob: -20.500001907348633
    6. '  ' → logprob: -20.500001907348633
    7. '۰' → logprob: -20.500001907348633
    8. '    ' → logprob: -21.125001907348633
    9. '00' → logprob: -21.125001907348633
    10. '000' → logprob: -21.937501907348633

Token 886: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.45848218582978e-06
    2. ' ' → logprob: -13.00000286102295
    3. 'None' → logprob: -16.625001907348633
    4. ')' → logprob: -16.750001907348633
    5. '۰' → logprob: -17.875001907348633
    6. '   ' → logprob: -18.875001907348633
    7. '00' → logprob: -19.500001907348633
    8. 'True' → logprob: -20.562501907348633
    9. '  ' → logprob: -20.625001907348633
    10. 'False' → logprob: -20.687501907348633

Token 887: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -11.50001049041748
    3. ' )' → logprob: -14.87501049041748
    4. ')`' → logprob: -17.000011444091797
    5. ')return' → logprob: -17.375011444091797
    6. '   ' → logprob: -17.625011444091797
    7. ')

' → logprob: -17.875011444091797
    8. '）' → logprob: -18.125011444091797
    9. '),' → logprob: -18.500011444091797
    10. '))' → logprob: -18.500011444091797

Token 888: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9614983797073364
    2. 'result' → logprob: -1.8364983797073364
    3. 'res' → logprob: -2.336498260498047
    4. '#' → logprob: -2.711498260498047
    5. 'nums' → logprob: -2.836498260498047
    6. 'visited' → logprob: -2.961498260498047
    7. 'answer' → logprob: -3.086498260498047
    8. 'ans' → logprob: -3.336498260498047
    9. 'from' → logprob: -3.836498260498047
    10. 'final' → logprob: -4.461498260498047

Token 889: ' Premier' (ID: 27686)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.01179039478302
    2. 'res' → logprob: -1.38679039478302
    3. 'visited' → logprob: -2.6367902755737305
    4. 'nums' → logprob: -2.8867902755737305
    5. 'answer' → logprob: -3.1367902755737305
    6. '#' → logprob: -3.1367902755737305
    7. 'ans' → logprob: -3.1367902755737305
    8. 'def' → logprob: -4.1367902755737305
    9. 'solution' → logprob: -4.2617902755737305
    10. 'total' → logprob: -4.3867902755737305

Token 890: ' passage' (ID: 26368)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.36986133456230164
    2. '=' → logprob: -1.244861364364624
    3. '#' → logprob: -4.494861125946045
    4. '_=' → logprob: -5.494861125946045
    5. ' =' → logprob: -6.369861125946045
    6. 'token' → logprob: -6.994861125946045
    7. 'def' → logprob: -7.244861125946045
    8. '_token' → logprob: -7.369861125946045
    9. 's' → logprob: -8.619861602783203
    10. 'for' → logprob: -8.744861602783203

Token 891: ' DFS' (ID: 115767)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.119408369064331
    2. 'res' → logprob: -1.494408369064331
    3. 'ok' → logprob: -1.994408369064331
    4. 'valid' → logprob: -2.744408369064331
    5. 'success' → logprob: -2.869408369064331
    6. 'root' → logprob: -3.244408369064331
    7. 'found' → logprob: -3.369408369064331
    8. 'nums' → logprob: -3.369408369064331
    9. 'visited' → logprob: -3.744408369064331
    10. 'for' → logprob: -4.74440860748291

Token 892: ' depuis' (ID: 16277)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.947610080242157
    2. 'res' → logprob: -1.3226101398468018
    3. 'for' → logprob: -1.6976101398468018
    4. 'root' → logprob: -2.4476101398468018
    5. 'nums' → logprob: -3.9476101398468018
    6. 'success' → logprob: -4.197609901428223
    7. 'found' → logprob: -4.447609901428223
    8. 'ok' → logprob: -4.572609901428223
    9. 'valid' → logprob: -5.447609901428223
    10. 'visited' → logprob: -5.572609901428223

Token 893: ' le' (ID: 505)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.875005722045898
    3. 'root' → logprob: -13.250005722045898
    4. '0' → logprob: -15.125005722045898
    5. 'le' → logprob: -15.250005722045898
    6. '#' → logprob: -15.500005722045898
    7. 'a' → logprob: -15.875005722045898
    8. 'un' → logprob: -16.0000057220459
    9. 's' → logprob: -16.1250057220459
    10. 'l' → logprob: -16.1250057220459

Token 894: ' sommet' (ID: 130502)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02863982878625393
    2. '0' → logprob: -3.653639793395996
    3. 'prem' → logprob: -7.278639793395996
    4. 'root' → logprob: -7.653639793395996
    5. 'som' → logprob: -7.778639793395996
    6. 'plus' → logprob: -7.778639793395996
    7. '#' → logprob: -9.528639793395996
    8. 'min' → logprob: -10.278639793395996
    9. 'minimum' → logprob: -10.278639793395996
    10. 'dern' → logprob: -10.903639793395996

Token 895: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019452029839158058
    2. '=' → logprob: -4.019452095031738
    3. ' =' → logprob: -7.144452095031738
    4. '(' → logprob: -7.894452095031738
    5. 'for' → logprob: -9.269452095031738
    6. '0' → logprob: -10.394452095031738
    7. 'root' → logprob: -12.394452095031738
    8. 'range' → logprob: -13.269452095031738
    9. '
' → logprob: -13.769452095031738
    10. '#' → logprob: -13.769452095031738

Token 896: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. '0' → logprob: -12.875004768371582
    3. '(' → logprob: -14.125004768371582
    4. '=' → logprob: -14.250004768371582
    5. ' ' → logprob: -15.500004768371582
    6. '
' → logprob: -15.625004768371582
    7. ' =' → logprob: -15.750004768371582
    8. 'for' → logprob: -16.3750057220459
    9. 's' → logprob: -16.6250057220459
    10. '#' → logprob: -17.0000057220459

Token 897: ' avec' (ID: 3937)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8659330010414124
    2. 'res' → logprob: -1.2409329414367676
    3. 'valid' → logprob: -2.1159329414367676
    4. 'success' → logprob: -2.2409329414367676
    5. 'ok' → logprob: -3.2409329414367676
    6. 'found' → logprob: -4.365932941436768
    7. 'status' → logprob: -5.740932941436768
    8. 'root' → logprob: -5.865932941436768
    9. 'flag' → logprob: -6.865932941436768
    10. 'succ' → logprob: -7.115932941436768

Token 898: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002661039761733264
    2. 'init' → logprob: -9.375266075134277
    3. ' ' → logprob: -9.500266075134277
    4. '1' → logprob: -9.500266075134277
    5. 'nums' → logprob: -11.000266075134277
    6. 'initial' → logprob: -12.000266075134277
    7. '-' → logprob: -13.375266075134277
    8. '100' → logprob: -13.750266075134277
    9. '(' → logprob: -14.000266075134277
    10. '10' → logprob: -14.250266075134277

Token 899: ' initial' (ID: 4871)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006307095172815025
    2. '(' → logprob: -8.000630378723145
    3. '1' → logprob: -9.250630378723145
    4. '=' → logprob: -9.250630378723145
    5. ' ' → logprob: -9.500630378723145
    6. ' =' → logprob: -11.625630378723145
    7. 'initial' → logprob: -11.875630378723145
    8. 'init' → logprob: -12.375630378723145
    9. '100' → logprob: -13.750630378723145
    10. 'nums' → logprob: -13.875630378723145

Token 900: 'e' (ID: 68)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17121906578540802
    2. '1' → logprob: -1.9212191104888916
    3. ' =' → logprob: -5.0462188720703125
    4. 'nums' → logprob: -6.0462188720703125
    5. '(' → logprob: -6.9212188720703125
    6. '0' → logprob: -7.4212188720703125
    7. ' ' → logprob: -8.921218872070312
    8. '[' → logprob: -8.921218872070312
    9. '(nums' → logprob: -9.671218872070312
    10. ',' → logprob: -10.171218872070312

Token 901: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5186030268669128
    2. '1' → logprob: -1.0186030864715576
    3. '(' → logprob: -3.7686030864715576
    4. ' ' → logprob: -4.2686028480529785
    5. '=' → logprob: -5.6436028480529785
    6. ' =' → logprob: -6.6436028480529785
    7. ' (' → logprob: -7.6436028480529785
    8. '[' → logprob: -7.8936028480529785
    9. 'nums' → logprob: -8.518603324890137
    10. ',' → logprob: -8.768603324890137

Token 902: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011212585377506912
    2. '1' → logprob: -9.125112533569336
    3. ' ' → logprob: -13.625112533569336
    4. '(' → logprob: -14.875112533569336
    5. '2' → logprob: -14.875112533569336
    6. '=' → logprob: -15.375112533569336
    7. '
' → logprob: -15.500112533569336
    8. '```' → logprob: -15.750112533569336
    9. '100' → logprob: -15.875112533569336
    10. '10' → logprob: -16.250112533569336

Token 903: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9126272797584534
    2. 'result' → logprob: -1.2876272201538086
    3. 'ok' → logprob: -1.9126272201538086
    4. 'valid' → logprob: -2.1626272201538086
    5. 'success' → logprob: -3.1626272201538086
    6. 'status' → logprob: -5.162627220153809
    7. 'found' → logprob: -5.662627220153809
    8. 'ret' → logprob: -5.912627220153809
    9. 'dfs' → logprob: -6.662627220153809
    10. 'root' → logprob: -7.037627220153809

Token 904: 'flag' (ID: 17665)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9038006663322449
    2. 'result' → logprob: -1.0288007259368896
    3. 'ok' → logprob: -2.0288007259368896
    4. 'success' → logprob: -3.0288007259368896
    5. 'valid' → logprob: -3.1538007259368896
    6. 'found' → logprob: -4.5288004875183105
    7. 'dfs' → logprob: -6.7788004875183105
    8. 'status' → logprob: -7.2788004875183105
    9. 'root' → logprob: -7.5288004875183105
    10. 'ret' → logprob: -8.028800964355469

Token 905: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.029238441959023476
    2. '=' → logprob: -4.029238224029541
    3. ' =' → logprob: -4.529238224029541
    4. '=True' → logprob: -9.4042387008667
    5. '_' → logprob: -9.9042387008667
    6. '_,' → logprob: -10.0292387008667
    7. ' ,' → logprob: -11.1542387008667
    8. ')' → logprob: -11.4042387008667
    9. ',_' → logprob: -12.0292387008667
    10. 's' → logprob: -12.2792387008667

Token 906: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.003210865193977952
    2. ' nums' → logprob: -5.75321102142334
    3. 'num' → logprob: -11.50321102142334
    4. 'res' → logprob: -12.12821102142334
    5. 'numbers' → logprob: -12.25321102142334
    6. 'result' → logprob: -12.37821102142334
    7. '_nums' → logprob: -12.87821102142334
    8. 'ans' → logprob: -13.12821102142334
    9. 'n' → logprob: -14.50321102142334
    10. 'vals' → logprob: -14.62821102142334

Token 907: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.6457742175552994e-05
    2. '=' → logprob: -10.250056266784668
    3. ' ,' → logprob: -11.625056266784668
    4. '<|end|>' → logprob: -12.000056266784668
    5. '[' → logprob: -13.000056266784668
    6. ' =' → logprob: -13.375056266784668
    7. '‌,' → logprob: -15.250056266784668
    8. ',
' → logprob: -15.750056266784668
    9. '_,' → logprob: -15.875056266784668
    10. ',...' → logprob: -16.250057220458984

Token 908: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.00017982252757064998
    2. ' depth' → logprob: -8.6251802444458
    3. '(depth' → logprob: -15.8751802444458
    4. '_depth' → logprob: -16.750179290771484
    5. '-depth' → logprob: -18.000179290771484
    6. 'deep' → logprob: -18.125179290771484
    7. '
' → logprob: -18.250179290771484
    8. '.depth' → logprob: -18.250179290771484
    9. ' ' → logprob: -19.000179290771484
    10. 'Depth' → logprob: -19.500179290771484

Token 909: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0011320014018565416
    2. '=' → logprob: -6.876132011413574
    3. ' =' → logprob: -9.376132011413574
    4. ' ,' → logprob: -11.251132011413574
    5. '<|end|>' → logprob: -14.251132011413574
    6. '_,' → logprob: -15.251132011413574
    7. '[' → logprob: -16.126131057739258
    8. '‌,' → logprob: -16.876131057739258
    9. ',line' → logprob: -17.251131057739258
    10. ')' → logprob: -17.376131057739258

Token 910: ' root' (ID: 6577)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0003827676991932094
    2. '0' → logprob: -9.000382423400879
    3. 'cycle' → logprob: -9.000382423400879
    4. 'loop' → logprob: -10.125382423400879
    5. 'conf' → logprob: -10.250382423400879
    6. 'root' → logprob: -10.875382423400879
    7. 's' → logprob: -12.000382423400879
    8. 'node' → logprob: -12.000382423400879
    9. ' start' → logprob: -12.125382423400879
    10. 'st' → logprob: -12.375382423400879

Token 911: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.909333023941144e-05
    2. ' ,' → logprob: -10.375068664550781
    3. '=' → logprob: -10.500068664550781
    4. '_,' → logprob: -11.750068664550781
    5. ' =' → logprob: -14.250068664550781
    6. ',next' → logprob: -15.000068664550781
    7. ',s' → logprob: -15.375068664550781
    8. ',val' → logprob: -15.875068664550781
    9. ',start' → logprob: -16.00006866455078
    10. ',_' → logprob: -16.12506866455078

Token 912: ' init' (ID: 6327)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.00032759839086793363
    2. ' val' → logprob: -8.500328063964844
    3. 'value' → logprob: -9.625328063964844
    4. '_val' → logprob: -10.750328063964844
    5. '0' → logprob: -11.500328063964844
    6. 'root' → logprob: -12.250328063964844
    7. 'mid' → logprob: -12.250328063964844
    8. '_' → logprob: -13.250328063964844
    9. 's' → logprob: -13.250328063964844
    10. 'vall' → logprob: -13.250328063964844

Token 913: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889705896377563
    2. ' =' → logprob: -2.578896999359131
    3. ',' → logprob: -12.828897476196289
    4. ')' → logprob: -13.203897476196289
    5. ')=' → logprob: -13.703897476196289
    6. '_' → logprob: -14.203897476196289
    7. ' ' → logprob: -15.078897476196289
    8. '_=' → logprob: -15.078897476196289
    9. 's' → logprob: -16.82889747619629
    10. '=
' → logprob: -16.95389747619629

Token 914: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -7.5649528298527e-05
    2. ' dfs' → logprob: -9.500075340270996
    3. 'df' → logprob: -14.250075340270996
    4. '   ' → logprob: -16.125076293945312
    5. 'DFS' → logprob: -17.875076293945312
    6. '  ' → logprob: -19.750076293945312
    7. ' ' → logprob: -20.000076293945312
    8. 'ds' → logprob: -20.000076293945312
    9. 'dfa' → logprob: -20.250076293945312
    10. 'd' → logprob: -20.500076293945312

Token 915: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.339278580620885e-06
    2. '1' → logprob: -13.750001907348633
    3. ' (' → logprob: -14.125001907348633
    4. '(
' → logprob: -14.875001907348633
    5. '<|end|>' → logprob: -16.875001907348633
    6. '(root' → logprob: -18.125001907348633
    7. '()' → logprob: -18.750001907348633
    8. '((' → logprob: -18.750001907348633
    9. '```' → logprob: -18.875001907348633
    10. ')' → logprob: -19.750001907348633

Token 916: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.625000953674316
    3. ')' → logprob: -15.125000953674316
    4. '
' → logprob: -17.125
    5. '```' → logprob: -18.75
    6. '(' → logprob: -19.0
    7. ')
' → logprob: -19.125
    8. ',' → logprob: -19.125
    9. '   ' → logprob: -19.125
    10. '

' → logprob: -20.5

Token 917: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0087516784551553e-05
    2. ' ,' → logprob: -12.12501049041748
    3. '0' → logprob: -12.50001049041748
    4. ')' → logprob: -15.12501049041748
    5. ',
' → logprob: -15.12501049041748
    6. '1' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '```' → logprob: -16.500009536743164
    9. '，' → logprob: -17.750009536743164
    10. '`,' → logprob: -17.875009536743164

Token 918: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '   ' → logprob: -18.250019073486328
    4. '  ' → logprob: -19.750019073486328
    5. ')' → logprob: -19.875019073486328
    6. '۰' → logprob: -19.875019073486328
    7. '```' → logprob: -20.187519073486328
    8. '00' → logprob: -20.562519073486328
    9. '1' → logprob: -21.312519073486328
    10. '000' → logprob: -21.500019073486328

Token 919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -20.5
    4. ')' → logprob: -21.625
    5. '۰' → logprob: -22.875
    6. '   ' → logprob: -23.75
    7. '``' → logprob: -24.25
    8. '00' → logprob: -24.625
    9. '`' → logprob: -24.75
    10. '1' → logprob: -24.875

Token 920: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ')
' → logprob: -12.500005722045898
    3. ' )' → logprob: -13.250005722045898
    4. ')

' → logprob: -18.2500057220459
    5. ')#' → logprob: -18.3750057220459
    6. ')`' → logprob: -18.6250057220459
    7. '))' → logprob: -18.7500057220459
    8. ')
' → logprob: -18.8750057220459
    9. '),' → logprob: -19.3750057220459
    10. '   ' → logprob: -19.6250057220459

Token 921: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0006894402904435992
    2. 'while' → logprob: -8.000689506530762
    3. 'for' → logprob: -8.250689506530762
    4. '```' → logprob: -10.375689506530762
    5. ' if' → logprob: -10.625689506530762
    6. '#' → logprob: -10.875689506530762
    7. '
' → logprob: -11.250689506530762
    8. 'i' → logprob: -12.500689506530762
    9. ',' → logprob: -15.625689506530762
    10. 's' → logprob: -15.625689506530762

Token 922: ' flag' (ID: 9641)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.7160444259643555
    2. 'not' → logprob: -1.0910444259643555
    3. 'flag' → logprob: -1.9660444259643555
    4. ' flag' → logprob: -3.3410444259643555
    5. '(flag' → logprob: -11.091044425964355
    6. ' ' → logprob: -11.466044425964355
    7. ' ' → logprob: -12.091044425964355
    8. '   ' → logprob: -13.091044425964355
    9. '	flag' → logprob: -13.091044425964355
    10. '  ' → logprob: -13.466044425964355

Token 923: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001875671005109325
    2. '==' → logprob: -9.000187873840332
    3. ' :' → logprob: -10.125187873840332
    4. ' ==' → logprob: -10.750187873840332
    5. ':
' → logprob: -13.375187873840332
    6. '=' → logprob: -14.500187873840332
    7. ' is' → logprob: -16.125186920166016
    8. ':**' → logprob: -16.375186920166016
    9. '>' → logprob: -16.750186920166016
    10. '.' → logprob: -17.125186920166016

Token 924: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.022587081417441368
    2. 'False' → logprob: -4.522587299346924
    3. ' True' → logprob: -4.522587299346924
    4. '1' → logprob: -7.647587299346924
    5. '0' → logprob: -9.397586822509766
    6. ' False' → logprob: -10.147586822509766
    7. ' ' → logprob: -11.522586822509766
    8. '(True' → logprob: -13.522586822509766
    9. '=True' → logprob: -13.897586822509766
    10. 'Tr' → logprob: -16.647586822509766

Token 925: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015270020812749863
    2. ':
' → logprob: -6.501526832580566
    3. ' :' → logprob: -10.751526832580566
    4. ' and' → logprob: -14.001526832580566
    5. '   ' → logprob: -14.126526832580566
    6. '):' → logprob: -15.001526832580566
    7. ',' → logprob: -15.001526832580566
    8. ':
' → logprob: -15.376526832580566
    9. ' :
' → logprob: -15.626526832580566
    10. ':

' → logprob: -15.876526832580566

Token 926: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017212172970175743
    2. ':' → logprob: -5.517212390899658
    3. '       ' → logprob: -5.517212390899658
    4. ':
' → logprob: -5.892212390899658
    5. '    
' → logprob: -6.017212390899658
    6. '
' → logprob: -7.392212390899658
    7. ' #' → logprob: -7.767212390899658
    8. ',' → logprob: -7.767212390899658
    9. '```' → logprob: -8.0172119140625
    10. ')' → logprob: -8.2672119140625

Token 927: ' #' (ID: 1069)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.35428789258003235
    2. 'vals' → logprob: -2.85428786277771
    3. 'for' → logprob: -2.97928786277771
    4. '#' (adapté à ' #') → logprob: -2.97928786277771
    5. 'found' → logprob: -3.97928786277771
    6. 'nums' → logprob: -4.229288101196289
    7. 'values' → logprob: -4.354288101196289
    8. 'low' → logprob: -4.479288101196289
    9. 'val' → logprob: -4.604288101196289
    10. 'possible' → logprob: -4.604288101196289

Token 928: ' Un' (ID: 1367)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.007893478497862816
    2. 'new' → logprob: -5.7578935623168945
    3. '#' → logprob: -6.0078935623168945
    4. 'for' → logprob: -6.7578935623168945
    5. 'nums' → logprob: -8.382893562316895
    6. '   ' → logprob: -8.507893562316895
    7. 'res' → logprob: -8.882893562316895
    8. 'root' → logprob: -9.132893562316895
    9. 'found' → logprob: -9.257893562316895
    10. '_,' → logprob: -9.757893562316895

Token 929: ' cycle' (ID: 15839)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.508255124092102
    2. ' cycle' → logprob: -2.6332550048828125
    3. ' #' → logprob: -3.1332550048828125
    4. 'for' → logprob: -3.3832550048828125
    5. '   ' → logprob: -3.5082550048828125
    6. 'cycle' → logprob: -3.8832550048828125
    7. '
' → logprob: -4.0082550048828125
    8. 'root' → logprob: -4.0082550048828125
    9. ' for' → logprob: -4.1332550048828125
    10. 'stack' → logprob: -4.2582550048828125

Token 930: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.024536214768886566
    2. ' impair' → logprob: -3.7745361328125
    3. 'im' → logprob: -7.2745361328125
    4. '_imp' → logprob: -8.2745361328125
    5. ' imp' → logprob: -8.5245361328125
    6. 'odd' → logprob: -9.6495361328125
    7. ' impar' → logprob: -10.7745361328125
    8. 'imb' → logprob: -11.0245361328125
    9. '    
' → logprob: -12.1495361328125
    10. '
' → logprob: -12.2745361328125

Token 931: ' a' (ID: 261)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01430606096982956
    2. '   ' → logprob: -4.88930606842041
    3. ' :' → logprob: -6.01430606842041
    4. ':
' → logprob: -6.01430606842041
    5. ' =' → logprob: -7.13930606842041
    6. '=' → logprob: -9.01430606842041
    7. ' est' → logprob: -9.13930606842041
    8. '#' → logprob: -9.26430606842041
    9. ' is' → logprob: -9.51430606842041
    10. ' n' → logprob: -9.51430606842041

Token 932: ' été' (ID: 9799)
  Prédit: ' été'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' été' → logprob: -0.044504210352897644
    2. 'été' → logprob: -3.544504165649414
    3. ' fallu' → logprob: -5.044504165649414
    4. '#' → logprob: -6.169504165649414
    5. 'd' → logprob: -7.169504165649414
    6. 's' → logprob: -7.669504165649414
    7. 'vec' → logprob: -7.794504165649414
    8. 'ss' → logprob: -7.919504165649414
    9. 'ussi' → logprob: -8.044504165649414
    10. 'a' → logprob: -8.169504165649414

Token 933: ' détect' (ID: 118715)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9794811010360718
    2. 'dé' → logprob: -0.9794811010360718
    3. 'ren' → logprob: -2.3544812202453613
    4. 'detect' → logprob: -2.6044812202453613
    5. ' détect' → logprob: -3.1044812202453613
    6. 'tr' → logprob: -4.229481220245361
    7. 'det' → logprob: -4.354481220245361
    8. ' trouvé' → logprob: -6.104481220245361
    9. 'rep' → logprob: -6.229481220245361
    10. ' rencontré' → logprob: -6.854481220245361

Token 934: 'é' (ID: 377)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5126534104347229
    2. '   ' → logprob: -1.7626533508300781
    3. ':' → logprob: -2.012653350830078
    4. 'é' → logprob: -3.012653350830078
    5. ':
' → logprob: -4.637653350830078
    6. ';' → logprob: -4.762653350830078
    7. ',
' → logprob: -4.887653350830078
    8. 'u' → logprob: -5.512653350830078
    9. '=' → logprob: -6.012653350830078
    10. '#' → logprob: -6.012653350830078

Token 935: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10194506496191025
    2. ':' → logprob: -2.601945161819458
    3. ':
' → logprob: -3.851945161819458
    4. ',' → logprob: -7.601944923400879
    5. ' and' → logprob: -8.101944923400879
    6. '```' → logprob: -8.851944923400879
    7. '    
' → logprob: -8.851944923400879
    8. '
' → logprob: -9.101944923400879
    9. '       ' → logprob: -9.476944923400879
    10. '#' → logprob: -9.851944923400879

Token 936: ' on' (ID: 402)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.437679260969162
    2. 'flag' → logprob: -1.6876792907714844
    3. '   ' → logprob: -2.1876792907714844
    4. 'root' → logprob: -3.4376792907714844
    5. 'nums' → logprob: -4.687679290771484
    6. 'for' → logprob: -4.937679290771484
    7. 'init' → logprob: -5.937679290771484
    8. 'new' → logprob: -6.187679290771484
    9. ' #' → logprob: -7.437679290771484
    10. 'while' → logprob: -7.562679290771484

Token 937: ' ré' (ID: 3146)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4697248935699463
    2. 'flag' → logprob: -2.3447248935699463
    3. '=' → logprob: -2.7197248935699463
    4. '   ' → logprob: -2.8447248935699463
    5. 'for' → logprob: -3.7197248935699463
    6. ' =' → logprob: -3.9697248935699463
    7. ':' → logprob: -4.094724655151367
    8. 'try' → logprob: -4.094724655151367
    9. ' flag' → logprob: -4.469724655151367
    10. 'def' → logprob: -4.469724655151367

Token 938: 'ess' (ID: 436)
  Prédit: 'essa'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'essa' → logprob: -0.9464844465255737
    2. 'ess' → logprob: -1.0714844465255737
    3. 'essay' → logprob: -1.3214844465255737
    4. 'try' → logprob: -6.196484565734863
    5. 'es' → logprob: -8.446484565734863
    6. '   ' → logprob: -9.071484565734863
    7. 'esse' → logprob: -9.446484565734863
    8. 'é' → logprob: -10.446484565734863
    9. 'import' → logprob: -10.571484565734863
    10. 'exec' → logprob: -10.946484565734863

Token 939: 'aye' (ID: 13916)
  Prédit: 'aye'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aye' → logprob: -0.0010272121289744973
    2. 'a' → logprob: -7.3760271072387695
    3. 'aie' → logprob: -8.62602710723877
    4. 'ay' → logprob: -8.87602710723877
    5. 'aya' → logprob: -10.62602710723877
    6. 'eye' → logprob: -10.87602710723877
    7. 'ayer' → logprob: -11.00102710723877
    8. 'ayes' → logprob: -12.12602710723877
    9. 'uye' → logprob: -13.12602710723877
    10. 'ait' → logprob: -13.25102710723877

Token 940: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7995309233665466
    2. 'dfs' → logprob: -0.7995309233665466
    3. ':' → logprob: -3.1745309829711914
    4. 'with' → logprob: -4.049530982971191
    5. ' dfs' → logprob: -4.174530982971191
    6. 'from' → logprob: -4.924530982971191
    7. ' with' → logprob: -5.424530982971191
    8. '(' → logprob: -5.674530982971191
    9. '=' → logprob: -6.049530982971191
    10. ':
' → logprob: -6.174530982971191

Token 941: ' la' (ID: 557)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.21909508109092712
    2. 'init' → logprob: -1.7190951108932495
    3. 'dfs' → logprob: -4.719095230102539
    4. '1' → logprob: -5.469095230102539
    5. '(root' → logprob: -6.594095230102539
    6. '0' → logprob: -6.594095230102539
    7. '(init' → logprob: -7.094095230102539
    8. ' root' → logprob: -8.094095230102539
    9. ' init' → logprob: -9.219095230102539
    10. ' dfs' → logprob: -10.219095230102539

Token 942: ' contr' (ID: 6030)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.048858385533094406
    2. 'root' → logprob: -4.048858165740967
    3. ' dfs' → logprob: -4.298858165740967
    4. 'new' → logprob: -4.923858165740967
    5. 'flag' → logprob: -5.423858165740967
    6. 'nou' → logprob: -7.173858165740967
    7. 'val' → logprob: -7.298858165740967
    8. ' new' → logprob: -7.798858165740967
    9. ' root' → logprob: -8.173858642578125
    10. 'value' → logprob: -8.548858642578125

Token 943: 'ainte' (ID: 48434)
  Prédit: 'ainte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ainte' → logprob: -0.09008622169494629
    2. 'a' → logprob: -3.2150862216949463
    3. '#' → logprob: -3.4650862216949463
    4. '   ' → logprob: -6.090085983276367
    5. 'aint' → logprob: -6.215085983276367
    6. 'tra' → logprob: -6.465085983276367
    7. '```' → logprob: -6.465085983276367
    8. 'i' → logprob: -6.840085983276367
    9. 'ain' → logprob: -6.965085983276367
    10. '``' → logprob: -6.965085983276367

Token 944: ' impos' (ID: 12130)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.6581162214279175
    2. 'dfs' → logprob: -1.6581162214279175
    3. '   ' → logprob: -2.533116340637207
    4. '=' → logprob: -2.658116340637207
    5. 'd' → logprob: -3.158116340637207
    6. 'root' → logprob: -3.783116340637207
    7. ' nums' → logprob: -4.283116340637207
    8. ' =' → logprob: -4.408116340637207
    9. ' d' → logprob: -5.158116340637207
    10. ' dfs' → logprob: -5.283116340637207

Token 945: 'ée' (ID: 2894)
  Prédit: 'ite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.9973946809768677
    2. 'inte' → logprob: -0.9973946809768677
    3. 'im' → logprob: -1.9973946809768677
    4. 'e' → logprob: -2.872394561767578
    5. 'int' → logprob: -3.372394561767578
    6. 'te' → logprob: -4.497394561767578
    7. 'nte' → logprob: -4.747394561767578
    8. '#' → logprob: -5.247394561767578
    9. 'ée' → logprob: -6.622394561767578
    10. 'ainte' → logprob: -6.872394561767578

Token 946: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5392662286758423
    2. ':' → logprob: -1.1642662286758423
    3. 'dfs' → logprob: -3.5392661094665527
    4. '=' → logprob: -3.9142661094665527
    5. 'flag' → logprob: -4.164266109466553
    6. 'nums' → logprob: -4.539266109466553
    7. ' =' → logprob: -4.664266109466553
    8. ',' → logprob: -4.914266109466553
    9. ':
' → logprob: -5.539266109466553
    10. '.' → logprob: -6.289266109466553

Token 947: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17369170486927032
    2. ':' → logprob: -2.673691749572754
    3. 'flag' → logprob: -2.798691749572754
    4. 'nums' → logprob: -4.673691749572754
    5. ',' → logprob: -5.048691749572754
    6. 'dfs' → logprob: -5.298691749572754
    7. '=' → logprob: -6.173691749572754
    8. ' flag' → logprob: -6.548691749572754
    9. 'root' → logprob: -6.673691749572754
    10. ' =' → logprob: -7.173691749572754

Token 948: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' (adapté à ' flag') → logprob: -0.004650014918297529
    2. ' flag' → logprob: -5.504650115966797
    3. '   ' → logprob: -7.879650115966797
    4. 'new' → logprob: -9.379650115966797
    5. 'nums' → logprob: -10.254650115966797
    6. '_,' → logprob: -10.629650115966797
    7. ',' → logprob: -10.754650115966797
    8. 'root' → logprob: -12.504650115966797
    9. '
' → logprob: -12.754650115966797
    10. 'for' → logprob: -13.004650115966797

Token 949: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05545017868280411
    2. '=' → logprob: -2.930450201034546
    3. ' =' → logprob: -7.555449962615967
    4. ' ,' → logprob: -11.180450439453125
    5. '==' → logprob: -11.305450439453125
    6. '=True' → logprob: -11.430450439453125
    7. '2' → logprob: -14.180450439453125
    8. '_,' → logprob: -14.305450439453125
    9. '=False' → logprob: -14.305450439453125
    10. ',n' → logprob: -14.680450439453125

Token 950: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002269562566652894
    2. '=' → logprob: -6.252269744873047
    3. ' =' → logprob: -8.252269744873047
    4. ' ,' → logprob: -9.752269744873047
    5. ',num' → logprob: -11.877269744873047
    6. ',n' → logprob: -12.002269744873047
    7. ',d' → logprob: -14.377269744873047
    8. ',is' → logprob: -14.377269744873047
    9. ',j' → logprob: -14.627269744873047
    10. ',user' → logprob: -14.752269744873047

Token 951: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.026377171277999878
    2. ' nums' → logprob: -3.6513772010803223
    3. 'new' → logprob: -10.401376724243164
    4. 'num' → logprob: -11.276376724243164
    5. '(nums' → logprob: -11.401376724243164
    6. 'res' → logprob: -12.026376724243164
    7. 'n' → logprob: -12.276376724243164
    8. '_nums' → logprob: -12.651376724243164
    9. ' new' → logprob: -13.026376724243164
    10. ' ' → logprob: -13.901376724243164

Token 952: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.729906196298543e-06
    2. '=' → logprob: -12.000009536743164
    3. '2' → logprob: -13.000009536743164
    4. ' ,' → logprob: -14.625009536743164
    5. ' =' → logprob: -14.750009536743164
    6. ',n' → logprob: -17.250009536743164
    7. '_,' → logprob: -17.250009536743164
    8. ',num' → logprob: -17.250009536743164
    9. ',_' → logprob: -17.500009536743164
    10. ',next' → logprob: -17.750009536743164

Token 953: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0005533903022296727
    2. ' depth' → logprob: -7.500553607940674
    3. '_depth' → logprob: -16.250553131103516
    4. '(depth' → logprob: -16.250553131103516
    5. '_,' → logprob: -16.500553131103516
    6. ',' → logprob: -17.500553131103516
    7. 'de' → logprob: -18.125553131103516
    8. '   ' → logprob: -18.250553131103516
    9. 'd' → logprob: -18.375553131103516
    10. ' ' → logprob: -18.500553131103516

Token 954: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.349516361951828
    2. '=' → logprob: -1.2245163917541504
    3. ' =' → logprob: -6.84951639175415
    4. '   ' → logprob: -12.349515914916992
    5. ' ,' → logprob: -12.474515914916992
    6. '=root' → logprob: -13.849515914916992
    7. ' ' → logprob: -14.724515914916992
    8. '```' → logprob: -15.099515914916992
    9. ',d' → logprob: -15.599515914916992
    10. '[' → logprob: -15.849515914916992

Token 955: ' root' (ID: 6577)
  Prédit: 'root'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'root' → logprob: -0.0002619318547658622
    2. '0' → logprob: -9.125262260437012
    3. ' root' → logprob: -9.500262260437012
    4. '_,' → logprob: -9.625262260437012
    5. '_' → logprob: -12.750262260437012
    6. 'r' → logprob: -13.125262260437012
    7. '_root' → logprob: -13.375262260437012
    8. 'new' → logprob: -14.125262260437012
    9. 'start' → logprob: -14.250262260437012
    10. '   ' → logprob: -14.375262260437012

Token 956: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.696889623621246e-06
    2. '=' → logprob: -13.75000286102295
    3. ' ,' → logprob: -14.25000286102295
    4. ',
' → logprob: -15.62500286102295
    5. ',_' → logprob: -16.250001907348633
    6. ',user' → logprob: -16.625001907348633
    7. ',input' → logprob: -16.750001907348633
    8. ',next' → logprob: -16.875001907348633
    9. ',index' → logprob: -17.125001907348633
    10. ' =' → logprob: -17.250001907348633

Token 957: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0009138475870713592
    2. ' init' → logprob: -7.000913619995117
    3. '   ' → logprob: -14.500913619995117
    4. ' ' → logprob: -14.750913619995117
    5. 'int' → logprob: -15.125913619995117
    6. '  ' → logprob: -15.500913619995117
    7. '_init' → logprob: -15.750913619995117
    8. '	init' → logprob: -16.000913619995117
    9. '(init' → logprob: -16.125913619995117
    10. '    ' → logprob: -16.375913619995117

Token 958: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029750604182481766
    2. ' =' → logprob: -3.5297505855560303
    3. '＝' → logprob: -17.40475082397461
    4. '=d' → logprob: -17.77975082397461
    5. '=df' → logprob: -17.77975082397461
    6. '=}' → logprob: -18.15475082397461
    7. '   ' → logprob: -18.65475082397461
    8. ',' → logprob: -18.77975082397461
    9. '=f' → logprob: -18.90475082397461
    10. '=
' → logprob: -19.02975082397461

Token 959: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.002482553943991661
    2. ' dfs' → logprob: -6.0024824142456055
    3. '   ' → logprob: -12.752482414245605
    4. 'df' → logprob: -12.752482414245605
    5. 'fs' → logprob: -15.252482414245605
    6. '  ' → logprob: -15.252482414245605
    7. ' ' → logprob: -15.377482414245605
    8. 'd' → logprob: -16.252483367919922
    9. 'DFS' → logprob: -16.252483367919922
    10. 'ds' → logprob: -17.377483367919922

Token 960: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -4.060365608893335e-05
    2. 'root' → logprob: -10.250041007995605
    3. '(' → logprob: -12.250041007995605
    4. '[root' → logprob: -14.750041007995605
    5. ' root' → logprob: -17.50004005432129
    6. '(
' → logprob: -17.50004005432129
    7. '(ROOT' → logprob: -18.25004005432129
    8. '=root' → logprob: -18.75004005432129
    9. '((' → logprob: -18.75004005432129
    10. '1' → logprob: -18.75004005432129

Token 961: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00026503115077503026
    2. ' ,' → logprob: -8.250265121459961
    3. '   ' → logprob: -13.875265121459961
    4. ',
' → logprob: -14.250265121459961
    5. 'import' → logprob: -15.125265121459961
    6. ')' → logprob: -15.250265121459961
    7. '=' → logprob: -15.375265121459961
    8. 'init' → logprob: -15.625265121459961
    9. ',int' → logprob: -15.687765121459961
    10. '+' → logprob: -15.812765121459961

Token 962: ' init' (ID: 6327)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.1875571544806007e-05
    2. ' init' → logprob: -11.375011444091797
    3. 'int' → logprob: -15.000011444091797
    4. '(init' → logprob: -18.000011444091797
    5. '   ' → logprob: -19.000011444091797
    6. ' ' → logprob: -19.250011444091797
    7. '0' → logprob: -19.375011444091797
    8. '_init' → logprob: -19.625011444091797
    9. '	init' → logprob: -19.625011444091797
    10. ')init' → logprob: -20.000011444091797

Token 963: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003372502396814525
    2. ')
' → logprob: -8.000337600708008
    3. ')

' → logprob: -14.250337600708008
    4. '   ' → logprob: -14.625337600708008
    5. ')
' → logprob: -14.875337600708008
    6. ' )' → logprob: -15.625337600708008
    7. '))' → logprob: -16.000337600708008
    8. '),' → logprob: -18.250337600708008
    9. ')`' → logprob: -18.625337600708008
    10. ')#' → logprob: -18.750337600708008

Token 964: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31344348192214966
    2. 'else' → logprob: -1.6884434223175049
    3. '#' → logprob: -3.313443422317505
    4. '<|end|>' → logprob: -3.813443422317505
    5. ')' → logprob: -4.813443660736084
    6. ' if' → logprob: -5.313443660736084
    7. '   ' → logprob: -5.813443660736084
    8. '```' → logprob: -6.063443660736084
    9. 'print' → logprob: -6.313443660736084
    10. 'elif' → logprob: -6.688443660736084

Token 965: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0008891870966181159
    2. ' if' → logprob: -7.500889301300049
    3. '   ' → logprob: -9.12588882446289
    4. '#' → logprob: -9.50088882446289
    5. 'flag' → logprob: -9.75088882446289
    6. 'while' → logprob: -10.37588882446289
    7. 'else' → logprob: -10.50088882446289
    8. '
' → logprob: -12.00088882446289
    9. 'print' → logprob: -12.12588882446289
    10. '```' → logprob: -12.12588882446289

Token 966: ' flag' (ID: 9641)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6990374326705933
    2. 'flag' → logprob: -0.6990374326705933
    3. ' not' → logprob: -5.324037551879883
    4. ' flag' → logprob: -6.949037551879883
    5. '(flag' → logprob: -10.699037551879883
    6. '(not' → logprob: -12.074037551879883
    7. '   ' → logprob: -13.199037551879883
    8. '!' → logprob: -13.324037551879883
    9. 'Flag' → logprob: -13.699037551879883
    10. '	flag' → logprob: -13.824037551879883

Token 967: '2' (ID: 17)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.07042662799358368
    2. ' ==' → logprob: -2.9454267024993896
    3. '2' → logprob: -4.1954264640808105
    4. '   ' → logprob: -8.945426940917969
    5. ')==' → logprob: -9.570426940917969
    6. '[' → logprob: -9.945426940917969
    7. ':' → logprob: -10.570426940917969
    8. 'False' → logprob: -11.445426940917969
    9. '==
' → logprob: -11.445426940917969
    10. ']==' → logprob: -11.695426940917969

Token 968: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.06384368240833282
    2. ' ==' → logprob: -2.8138437271118164
    3. ':' → logprob: -6.313843727111816
    4. '==
' → logprob: -10.438843727111816
    5. ' is' → logprob: -11.063843727111816
    6. ' ' → logprob: -12.688843727111816
    7. '   ' → logprob: -13.063843727111816
    8. '!=' → logprob: -13.188843727111816
    9. ':
' → logprob: -13.188843727111816
    10. '=' → logprob: -13.438843727111816

Token 969: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.003992442507296801
    2. ' False' → logprob: -5.753992557525635
    3. 'True' → logprob: -7.128992557525635
    4. '0' → logprob: -11.878992080688477
    5. ' True' → logprob: -12.628992080688477
    6. ' ' → logprob: -13.878992080688477
    7. '   ' → logprob: -13.878992080688477
    8. '=False' → logprob: -15.128992080688477
    9. '(False' → logprob: -15.753992080688477
    10. '  ' → logprob: -16.128992080688477

Token 970: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1274106651544571
    2. ':
' → logprob: -2.127410650253296
    3. '   ' → logprob: -7.752410888671875
    4. ':
' → logprob: -11.502410888671875
    5. 'print' → logprob: -11.627410888671875
    6. '):
' → logprob: -11.877410888671875
    7. ' and' → logprob: -12.627410888671875
    8. ':

' → logprob: -12.752410888671875
    9. '       ' → logprob: -12.752410888671875
    10. '=' → logprob: -12.877410888671875

Token 971: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14582693576812744
    2. 'print' → logprob: -2.770826816558838
    3. '   ' → logprob: -3.270826816558838
    4. ':' → logprob: -4.395826816558838
    5. ':
' → logprob: -4.395826816558838
    6. '```' → logprob: -5.520826816558838
    7. '#' → logprob: -5.895826816558838
    8. ' print' → logprob: -6.895826816558838
    9. '<|end|>' → logprob: -7.145826816558838
    10. '.' → logprob: -7.770826816558838

Token 972: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002845529466867447
    2. ' print' → logprob: -6.002845764160156
    3. '   ' → logprob: -8.502845764160156
    4. '       ' → logprob: -9.377845764160156
    5. '0' → logprob: -10.252845764160156
    6. '```' → logprob: -10.252845764160156
    7. '                           ' → logprob: -12.877845764160156
    8. '``' → logprob: -13.252845764160156
    9. '           ' → logprob: -13.252845764160156
    10. '
' → logprob: -13.377845764160156

Token 973: ' Encore' (ID: 118329)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.1318875446449965e-05
    2. ' print' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.500041007995605
    4. '```' → logprob: -15.375041007995605
    5. '
' → logprob: -15.625041007995605
    6. 'flag' → logprob: -15.750041007995605
    7. '#' → logprob: -16.625041961669922
    8. 'pass' → logprob: -17.500041961669922
    9. '#print' → logprob: -17.750041961669922
    10. '0' → logprob: -17.750041961669922

Token 974: ' blo' (ID: 13098)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02769305929541588
    2. '0' → logprob: -3.902693033218384
    3. '```' → logprob: -5.277693271636963
    4. '   ' → logprob: -7.027693271636963
    5. '(' → logprob: -7.402693271636963
    6. '       ' → logprob: -8.527692794799805
    7. ' print' → logprob: -8.777692794799805
    8. '``' → logprob: -9.527692794799805
    9. '(print' → logprob: -11.027692794799805
    10. '           ' → logprob: -11.277692794799805

Token 975: 'qué' (ID: 23535)
  Prédit: 'qué'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qué' → logprob: -0.14680752158164978
    2. 'ck' → logprob: -2.5218074321746826
    3. 'q' → logprob: -3.6468074321746826
    4. 'c' → logprob: -4.521807670593262
    5. 'qu' → logprob: -4.771807670593262
    6. 'qués' → logprob: -5.896807670593262
    7. 'quer' → logprob: -6.021807670593262
    8. 'que' → logprob: -6.396807670593262
    9. 'quée' → logprob: -6.646807670593262
    10. 'quant' → logprob: -7.271807670593262

Token 976: ' !' (ID: 1073)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0664365217089653
    2. '       ' → logprob: -4.191436290740967
    3. '           ' → logprob: -4.316436290740967
    4. ':
' → logprob: -4.441436290740967
    5. '0' → logprob: -4.941436290740967
    6. ':' → logprob: -5.316436290740967
    7. ' print' → logprob: -5.441436290740967
    8. '   ' → logprob: -5.691436290740967
    9. '```' → logprob: -6.441436290740967
    10. '                           ' → logprob: -6.816436290740967

Token 977: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.017013192176818848
    2. '       ' → logprob: -4.517013072967529
    3. ' print' → logprob: -5.892013072967529
    4. '   ' → logprob: -5.892013072967529
    5. '           ' → logprob: -8.017013549804688
    6. '```' → logprob: -9.642013549804688
    7. '                           ' → logprob: -11.767013549804688
    8. '
' → logprob: -11.892013549804688
    9. '``' → logprob: -12.892013549804688
    10. '               ' → logprob: -12.892013549804688

Token 978: 'cycle' (ID: 24879)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00018041854491457343
    2. '0' → logprob: -9.7501802444458
    3. ' print' → logprob: -9.8751802444458
    4. '   ' → logprob: -10.5001802444458
    5. '       ' → logprob: -11.0001802444458
    6. '```' → logprob: -11.1251802444458
    7. '           ' → logprob: -12.0001802444458
    8. '``' → logprob: -13.5001802444458
    9. '                           ' → logprob: -13.6251802444458
    10. '
' → logprob: -13.7501802444458

Token 979: ' impair' (ID: 64113)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.8800108432769775
    2. 'pair' → logprob: -1.1300108432769775
    3. ' impair' → logprob: -2.1300108432769775
    4. 'imp' → logprob: -2.6300108432769775
    5. 'im' → logprob: -4.005010604858398
    6. ')' → logprob: -4.255010604858398
    7. 's' → logprob: -4.505010604858398
    8. ' imp' → logprob: -4.505010604858398
    9. 'odd' → logprob: -6.005010604858398
    10. ' impar' → logprob: -6.255010604858398

Token 980: ' multiple' (ID: 7598)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.945669949054718
    2. ')' → logprob: -1.0706698894500732
    3. ' non' → logprob: -2.8206698894500732
    4. '):
' → logprob: -2.9456698894500732
    5. ':' → logprob: -3.8206698894500732
    6. ' detected' → logprob: -3.8206698894500732
    7. ',' → logprob: -4.070670127868652
    8. ' et' → logprob: -4.070670127868652
    9. '   ' → logprob: -4.070670127868652
    10. ')
' → logprob: -5.070670127868652

Token 981: ' incompatible' (ID: 114977)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.006782504729926586
    2. ')' → logprob: -5.131782531738281
    3. ' )
' → logprob: -7.881782531738281
    4. ')
' → logprob: -8.006782531738281
    5. ' ou' → logprob: -10.381782531738281
    6. '):
' → logprob: -10.756782531738281
    7. '   ' → logprob: -11.131782531738281
    8. '                           ' → logprob: -11.381782531738281
    9. ',' → logprob: -11.506782531738281
    10. '           ' → logprob: -11.756782531738281

Token 982: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.019274426624178886
    2. ')' → logprob: -4.0192742347717285
    3. ' )
' → logprob: -7.3942742347717285
    4. ')
' → logprob: -8.144274711608887
    5. ' avec' → logprob: -9.144274711608887
    6. '   ' → logprob: -10.269274711608887
    7. ')

' → logprob: -11.769274711608887
    8. 's' → logprob: -11.769274711608887
    9. ',' → logprob: -11.894274711608887
    10. ' )' → logprob: -11.894274711608887

Token 983: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22128735482692719
    2. 'print' → logprob: -1.8462873697280884
    3. '   ' → logprob: -3.721287250518799
    4. '```' → logprob: -4.221287250518799
    5. ' print' → logprob: -6.971287250518799
    6. '``' → logprob: -7.471287250518799
    7. '           ' → logprob: -9.346287727355957
    8. '#' → logprob: -9.596287727355957
    9. 'raise' → logprob: -10.221287727355957
    10. ')' → logprob: -11.096287727355957

Token 984: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -15.0
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -18.5
    5. 'exit' → logprob: -18.625
    6. 'pr' → logprob: -18.625
    7. 'prin' → logprob: -18.875
    8. '0' → logprob: -20.125
    9. '
' → logprob: -20.5
    10. '	print' → logprob: -20.5

Token 985: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.1080467781284824e-05
    2. '0' → logprob: -10.125041007995605
    3. '```' → logprob: -14.625041007995605
    4. ' (' → logprob: -14.750041007995605
    5. '(
' → logprob: -16.125041961669922
    6. '(`' → logprob: -17.625041961669922
    7. '('' → logprob: -18.000041961669922
    8. '`' → logprob: -18.000041961669922
    9. '()' → logprob: -18.125041961669922
    10. '("""' → logprob: -19.250041961669922

Token 986: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.625000953674316
    3. ' ' → logprob: -16.125
    4. ')' → logprob: -18.875
    5. '```' → logprob: -19.0
    6. '`' → logprob: -19.125
    7. '"' → logprob: -19.5
    8. '   ' → logprob: -20.125
    9. '00' → logprob: -20.875
    10. ''' → logprob: -21.0

Token 987: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04870375618338585
    2. ')
' → logprob: -3.048703670501709
    3. ')
' → logprob: -9.673704147338867
    4. '       ' → logprob: -10.298704147338867
    5. ')return' → logprob: -11.173704147338867
    6. '   ' → logprob: -12.548704147338867
    7. ' )' → logprob: -14.048704147338867
    8. '<|end|>' → logprob: -15.048704147338867
    9. ')

' → logprob: -16.048704147338867
    10. ')`
' → logprob: -16.173704147338867

Token 988: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20882728695869446
    2. ')' → logprob: -2.708827257156372
    3. '<|end|>' → logprob: -2.958827257156372
    4. 'else' → logprob: -3.208827257156372
    5. '       ' → logprob: -3.708827257156372
    6. '
' → logprob: -6.708827495574951
    7. '```' → logprob: -7.083827495574951
    8. ' else' → logprob: -7.458827495574951
    9. '#' → logprob: -7.708827495574951
    10. ')
' → logprob: -7.833827495574951

Token 989: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0001725511101540178
    2. '   ' → logprob: -9.50017261505127
    3. ' else' → logprob: -9.62517261505127
    4. 'elif' → logprob: -10.62517261505127
    5. '```' → logprob: -12.25017261505127
    6. ')' → logprob: -14.12517261505127
    7. '<|end|>' → logprob: -14.87517261505127
    8. 'elser' → logprob: -15.50017261505127
    9. '#else' → logprob: -15.62517261505127
    10. '    
' → logprob: -15.62517261505127

Token 990: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011059965938329697
    2. ':
' → logprob: -4.511059761047363
    3. ':
' → logprob: -12.386059761047363
    4. ' :' → logprob: -12.511059761047363
    5. 'print' → logprob: -13.636059761047363
    6. ':

' → logprob: -13.761059761047363
    7. '   ' → logprob: -14.261059761047363
    8. ':#' → logprob: -14.511059761047363
    9. 'else' → logprob: -15.636059761047363
    10. ' :
' → logprob: -15.886059761047363

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23116417229175568
    2. '   ' → logprob: -1.6061642169952393
    3. 'print' → logprob: -5.48116397857666
    4. ' print' → logprob: -6.73116397857666
    5. '#' → logprob: -8.60616397857666
    6. '```' → logprob: -8.73116397857666
    7. ' for' → logprob: -12.10616397857666
    8. '           ' → logprob: -12.48116397857666
    9. '	print' → logprob: -12.73116397857666
    10. 'for' → logprob: -12.73116397857666

Token 992: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7577345967292786
    2. '#' (adapté à ' #') → logprob: -1.5077345371246338
    3. '   ' → logprob: -2.507734537124634
    4. 'nums' → logprob: -2.882734537124634
    5. 'import' → logprob: -3.257734537124634
    6. 'vals' → logprob: -3.507734537124634
    7. 's' → logprob: -4.132734775543213
    8. '       ' → logprob: -4.757734775543213
    9. 'from' → logprob: -4.757734775543213
    10. 'pass' → logprob: -5.007734775543213

Token 993: ' Vér' (ID: 159169)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5105977058410645
    2. 'vals' → logprob: -1.6355977058410645
    3. 'print' → logprob: -1.7605977058410645
    4. 'values' → logprob: -2.0105977058410645
    5. 'nums' → logprob: -3.1355977058410645
    6. 's' → logprob: -3.5105977058410645
    7. 'val' → logprob: -3.6355977058410645
    8. 'result' → logprob: -3.7605977058410645
    9. 'import' → logprob: -3.8855977058410645
    10. 'min' → logprob: -4.1355977058410645

Token 994: 'ification' (ID: 3166)
  Prédit: 'ify'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ify' → logprob: -0.9610830545425415
    2. 'ifie' → logprob: -1.3360830545425415
    3. 'ifier' → logprob: -1.8360830545425415
    4. 'if' → logprob: -2.086082935333252
    5. 'print' → logprob: -4.086082935333252
    6. 'ifiez' → logprob: -4.461082935333252
    7. '#' → logprob: -4.586082935333252
    8. '   ' → logprob: -4.711082935333252
    9. 'ification' → logprob: -4.836082935333252
    10. 'ifié' → logprob: -5.961082935333252

Token 995: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28971442580223083
    2. 'import' → logprob: -2.9147143363952637
    3. 'if' → logprob: -3.0397143363952637
    4. 'else' → logprob: -3.2897143363952637
    5. ':' → logprob: -3.5397143363952637
    6. 'nums' → logprob: -3.5397143363952637
    7. '#' → logprob: -3.7897143363952637
    8. '       ' → logprob: -4.414714336395264
    9. 'elif' → logprob: -5.164714336395264
    10. 'sum' → logprob: -5.414714336395264

Token 996: ' toutes' (ID: 17502)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6976970434188843
    2. 'flag' → logprob: -2.197697162628174
    3. 'max' → logprob: -2.447697162628174
    4. 'len' → logprob: -2.447697162628174
    5. 'sum' → logprob: -2.697697162628174
    6. 'depth' → logprob: -3.322697162628174
    7. 'min' → logprob: -3.572697162628174
    8. 'nums' → logprob: -3.697697162628174
    9. 'root' → logprob: -4.322697162628174
    10. ' all' → logprob: -4.572697162628174

Token 997: ' les' (ID: 1341)
  Prédit: '(nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.5851302146911621
    2. 'nums' → logprob: -1.835130214691162
    3. '(' → logprob: -1.960130214691162
    4. 'les' → logprob: -3.210130214691162
    5. 'nodes' → logprob: -3.335130214691162
    6. '(nodes' → logprob: -4.210130214691162
    7. ' les' → logprob: -4.585130214691162
    8. '()' → logprob: -5.210130214691162
    9. '(depth' → logprob: -5.210130214691162
    10. '(vals' → logprob: -5.710130214691162

Token 998: ' valeurs' (ID: 73668)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.08523572236299515
    2. 'nums' → logprob: -3.585235834121704
    3. 'nodes' → logprob: -4.085235595703125
    4. 'abs' → logprob: -4.585235595703125
    5. 'i' → logprob: -5.335235595703125
    6. 'num' → logprob: -5.710235595703125
    7. 'range' → logprob: -6.335235595703125
    8. 'val' → logprob: -6.335235595703125
    9. 'not' → logprob: -6.335235595703125
    10. 'visited' → logprob: -6.460235595703125

Token 999: ' sont' (ID: 5242)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5762971639633179
    2. '[i' → logprob: -1.8262971639633179
    3. 'nums' → logprob: -1.9512971639633179
    4. '=' → logprob: -1.9512971639633179
    5. 's' → logprob: -3.0762972831726074
    6. ' sont' → logprob: -3.0762972831726074
    7. '[]' → logprob: -3.3262972831726074
    8. '[' → logprob: -3.9512972831726074
    9. '   ' → logprob: -4.076297283172607
    10. '(nums' → logprob: -4.076297283172607

Token 1000: ' positives' (ID: 95584)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5693060755729675
    2. 'valid' → logprob: -2.3193061351776123
    3. 'consistent' → logprob: -2.5693061351776123
    4. 'co' → logprob: -3.0693061351776123
    5. '0' → logprob: -3.1943061351776123
    6. 'print' → logprob: -3.3193061351776123
    7. 'val' → logprob: -3.9443061351776123
    8. 'cons' → logprob: -4.444305896759033
    9. 'assign' → logprob: -4.444305896759033
    10. 'compatible' → logprob: -4.694305896759033

Token 1001: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7076719999313354
    2. 'and' → logprob: -1.5826719999313354
    3. '   ' → logprob: -1.8326719999313354
    4. ' and' → logprob: -2.707672119140625
    5. 'all' → logprob: -3.457672119140625
    6. 'for' → logprob: -3.957672119140625
    7. 'if' → logprob: -4.832672119140625
    8. '       ' → logprob: -5.332672119140625
    9. ':
' → logprob: -5.707672119140625
    10. ' all' → logprob: -6.582672119140625

Token 1002: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18233884871006012
    2. 'min' → logprob: -2.1823389530181885
    3. '       ' → logprob: -4.182338714599609
    4. 'if' → logprob: -4.682338714599609
    5. ':' → logprob: -5.057338714599609
    6. '```' → logprob: -5.057338714599609
    7. 'minimum' → logprob: -5.807338714599609
    8. 'max' → logprob: -5.807338714599609
    9. 'for' → logprob: -5.932338714599609
    10. 'nums' → logprob: -6.057338714599609

Token 1003: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.013885035179555416
    2. 'print' → logprob: -4.763885021209717
    3. 'min' → logprob: -5.638885021209717
    4. '   ' → logprob: -6.763885021209717
    5. ' if' → logprob: -9.263885498046875
    6. 'for' → logprob: -9.388885498046875
    7. 'minimum' → logprob: -9.388885498046875
    8. 'all' → logprob: -9.638885498046875
    9. 'valid' → logprob: -9.763885498046875
    10. '       ' → logprob: -9.888885498046875

Token 1004: ' min' (ID: 1349)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.029932375997304916
    2. 'min' → logprob: -3.5299322605133057
    3. ' all' → logprob: -8.779932022094727
    4. 'max' → logprob: -10.904932022094727
    5. ' min' → logprob: -12.029932022094727
    6. 'any' → logprob: -13.279932022094727
    7. '   ' → logprob: -13.529932022094727
    8. '(min' → logprob: -15.029932022094727
    9. 'not' → logprob: -16.029932022094727
    10. '(all' → logprob: -16.279932022094727

Token 1005: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -1.0280383548888494e-06
    2. 'nums' → logprob: -14.375000953674316
    3. '(' → logprob: -15.125000953674316
    4. '(num' → logprob: -16.250001907348633
    5. '(numbers' → logprob: -17.375001907348633
    6. ' (' → logprob: -18.125001907348633
    7. ' nums' → logprob: -18.625001907348633
    8. '(vals' → logprob: -19.250001907348633
    9. '(n' → logprob: -19.500001907348633
    10. '```' → logprob: -20.125001907348633

Token 1006: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07994209975004196
    2. '[' → logprob: -2.704941987991333
    3. ')>' → logprob: -4.704942226409912
    4. ')>=' → logprob: -8.079941749572754
    5. ')<' → logprob: -8.329941749572754
    6. ')<=' → logprob: -8.829941749572754
    7. '())' → logprob: -9.079941749572754
    8. ')==' → logprob: -10.454941749572754
    9. ' )' → logprob: -11.329941749572754
    10. '()' → logprob: -11.704941749572754

Token 1007: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1041145626222715e-05
    2. '
' → logprob: -12.125011444091797
    3. '])' → logprob: -12.500011444091797
    4. '```' → logprob: -14.625011444091797
    5. '   ' → logprob: -15.125011444091797
    6. ']' → logprob: -15.250011444091797
    7. ' ' → logprob: -15.500011444091797
    8. '[' → logprob: -15.875011444091797
    9. ':' → logprob: -15.875011444091797
    10. ')' → logprob: -16.375011444091797

Token 1008: ':' (ID: 25)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.7803744673728943
    2. ':' → logprob: -1.030374526977539
    3. ')' → logprob: -2.405374526977539
    4. '[' → logprob: -2.905374526977539
    5. '1' → logprob: -3.780374526977539
    6. ':)' → logprob: -4.155374526977539
    7. ')>' → logprob: -7.905374526977539
    8. '[])' → logprob: -8.155374526977539
    9. '>)' → logprob: -8.780374526977539
    10. ':]' → logprob: -9.280374526977539

Token 1009: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0270067285746336
    2. ')' → logprob: -3.6520066261291504
    3. '1' → logprob: -7.65200662612915
    4. '()' → logprob: -9.902007102966309
    5. ':' → logprob: -10.027007102966309
    6. ')>' → logprob: -10.402007102966309
    7. '
' → logprob: -10.527007102966309
    8. '))' → logprob: -11.277007102966309
    9. ' ])' → logprob: -11.277007102966309
    10. '())' → logprob: -11.652007102966309

Token 1010: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.37957802414894104
    2. '>=' → logprob: -1.2545779943466187
    3. ' >' → logprob: -4.254578113555908
    4. ' >=' → logprob: -4.629578113555908
    5. '<=' → logprob: -5.504578113555908
    6. '<' → logprob: -6.129578113555908
    7. ' <=' → logprob: -8.25457763671875
    8. ' <' → logprob: -8.87957763671875
    9. ' ' → logprob: -11.62957763671875
    10. '≥' → logprob: -11.75457763671875

Token 1011: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011067395098507404
    2. '1' → logprob: -4.5110673904418945
    3. '=' → logprob: -11.136067390441895
    4. ' ' → logprob: -12.761067390441895
    5. '```' → logprob: -14.386067390441895
    6. '   ' → logprob: -15.136067390441895
    7. '-' → logprob: -15.261067390441895
    8. '
' → logprob: -15.636067390441895
    9. '>' → logprob: -15.636067390441895
    10. ':' → logprob: -16.13606834411621

Token 1012: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132671117782593
    2. '1' → logprob: -1.3132671117782593
    3. ' ' → logprob: -13.06326675415039
    4. '=' → logprob: -13.81326675415039
    5. '-' → logprob: -14.43826675415039
    6. '```' → logprob: -14.56326675415039
    7. '
' → logprob: -14.93826675415039
    8. '2' → logprob: -15.31326675415039
    9. '>' → logprob: -16.06326675415039
    10. '   ' → logprob: -16.18826675415039

Token 1013: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08945191651582718
    2. ':
' → logprob: -2.464452028274536
    3. '   ' → logprob: -8.339451789855957
    4. '       ' → logprob: -9.089451789855957
    5. ' or' → logprob: -9.714451789855957
    6. ' :' → logprob: -10.589451789855957
    7. ' and' → logprob: -10.589451789855957
    8. '=' → logprob: -11.589451789855957
    9. ':
' → logprob: -11.839451789855957
    10. ' :
' → logprob: -11.964451789855957

Token 1014: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08106102794408798
    2. 'print' → logprob: -2.7060611248016357
    3. '           ' → logprob: -4.706060886383057
    4. ' print' → logprob: -6.831060886383057
    5. '   ' → logprob: -7.831060886383057
    6. 'n' → logprob: -8.581061363220215
    7. '```' → logprob: -9.581061363220215
    8. '        
' → logprob: -10.206061363220215
    9. 'nums' → logprob: -10.206061363220215
    10. 'for' → logprob: -10.206061363220215

Token 1015: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.016077890992164612
    2. 'nums' → logprob: -5.016077995300293
    3. 'init' → logprob: -5.141077995300293
    4. 'for' → logprob: -7.016077995300293
    5. '           ' → logprob: -7.016077995300293
    6. '   ' → logprob: -7.891077995300293
    7. '#' → logprob: -8.016077995300293
    8. '       ' → logprob: -8.141077995300293
    9. ' print' → logprob: -8.141077995300293
    10. 'flag' → logprob: -8.516077995300293

Token 1016: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04369482398033142
    2. '0' → logprob: -3.1686947345733643
    3. '(-' → logprob: -7.543694972991943
    4. '(min' → logprob: -9.793694496154785
    5. '(max' → logprob: -10.793694496154785
    6. '("' → logprob: -11.168694496154785
    7. ' (' → logprob: -11.293694496154785
    8. '((' → logprob: -11.418694496154785
    9. '(
' → logprob: -11.793694496154785
    10. '('' → logprob: -11.793694496154785

Token 1017: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013011827832087874
    2. '"' → logprob: -9.625129699707031
    3. '(' → logprob: -10.750129699707031
    4. '-' → logprob: -10.875129699707031
    5. ' ' → logprob: -11.875129699707031
    6. ''' → logprob: -12.125129699707031
    7. '1' → logprob: -12.375129699707031
    8. 'max' → logprob: -13.500129699707031
    9. ')' → logprob: -13.750129699707031
    10. '```' → logprob: -14.000129699707031

Token 1018: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11687731742858887
    2. ')' → logprob: -2.616877317428589
    3. ')
' → logprob: -4.116877555847168
    4. '   ' → logprob: -4.616877555847168
    5. '           ' → logprob: -5.116877555847168
    6. 'else' → logprob: -5.366877555847168
    7. ' else' → logprob: -8.366877555847168
    8. '
' → logprob: -9.991877555847168
    9. ')return' → logprob: -10.616877555847168
    10. '```' → logprob: -10.616877555847168

Token 1019: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5763552784919739
    2. 'else' → logprob: -0.8263552784919739
    3. 'elif' → logprob: -8.70135498046875
    4. ' else' → logprob: -9.20135498046875
    5. '   ' → logprob: -9.82635498046875
    6. '           ' → logprob: -10.07635498046875
    7. '
' → logprob: -10.95135498046875
    8. '```' → logprob: -11.07635498046875
    9. '#' → logprob: -12.45135498046875
    10. 'exit' → logprob: -12.57635498046875

Token 1020: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.18136367201805115
    2. '       ' → logprob: -1.8063637018203735
    3. '   ' → logprob: -6.806363582611084
    4. 'elif' → logprob: -7.931363582611084
    5. ' else' → logprob: -8.931364059448242
    6. '
' → logprob: -11.681364059448242
    7. '           ' → logprob: -11.806364059448242
    8. '	else' → logprob: -14.056364059448242
    9. 'exit' → logprob: -15.056364059448242
    10. 'for' → logprob: -15.056364059448242

Token 1021: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.48620468378067017
    2. ':
' → logprob: -1.2362046241760254
    3. '       ' → logprob: -2.6112046241760254
    4. 'print' → logprob: -4.236204624176025
    5. '           ' → logprob: -5.236204624176025
    6. '   ' → logprob: -7.111204624176025
    7. ' print' → logprob: -7.986204624176025
    8. ':

' → logprob: -10.361205101013184
    9. '```' → logprob: -10.361205101013184
    10. '):
' → logprob: -10.736205101013184

Token 1022: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02873806841671467
    2. '       ' → logprob: -3.653738021850586
    3. '   ' → logprob: -6.778738021850586
    4. '```' → logprob: -7.278738021850586
    5. ' print' → logprob: -7.528738021850586
    6. 'for' → logprob: -10.278738021850586
    7. '           ' → logprob: -10.653738021850586
    8. '#' → logprob: -12.278738021850586
    9. '	print' → logprob: -12.903738021850586
    10. '``' → logprob: -13.278738021850586

Token 1023: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005880602402612567
    2. 'for' → logprob: -7.6255879402160645
    3. ' print' → logprob: -10.250588417053223
    4. '   ' → logprob: -10.625588417053223
    5. 'nums' → logprob: -11.375588417053223
    6. '           ' → logprob: -12.250588417053223
    7. 'prin' → logprob: -12.250588417053223
    8. '       ' → logprob: -12.375588417053223
    9. 'result' → logprob: -12.875588417053223
    10. 's' → logprob: -12.875588417053223

Token 1024: '(' (ID: 7)
  Prédit: '(sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sum' → logprob: -0.2780778110027313
    2. '(max' → logprob: -1.7780778408050537
    3. '(min' → logprob: -3.6530778408050537
    4. '(' → logprob: -3.7780778408050537
    5. 'sum' → logprob: -4.278077602386475
    6. '("' → logprob: -5.403077602386475
    7. '('' → logprob: -5.903077602386475
    8. '(nums' → logprob: -6.028077602386475
    9. 'max' → logprob: -7.278077602386475
    10. 'nums' → logprob: -8.653078079223633

Token 1025: '1' (ID: 16)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.48889800906181335
    2. 'max' → logprob: -1.4888980388641357
    3. '"' → logprob: -2.6138980388641357
    4. '1' → logprob: -3.2388980388641357
    5. ''' → logprob: -4.113897800445557
    6. 'min' → logprob: -4.238897800445557
    7. 'nums' → logprob: -4.488897800445557
    8. 'len' → logprob: -5.863897800445557
    9. 'n' → logprob: -7.238897800445557
    10. ''n' → logprob: -7.363897800445557

Token 1026: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00033284336677752435
    2. ' )' → logprob: -8.375332832336426
    3. ')
' → logprob: -9.250332832336426
    4. '<|end|>' → logprob: -13.375332832336426
    5. '   ' → logprob: -14.125332832336426
    6. '())' → logprob: -14.750332832336426
    7. '))' → logprob: -14.875332832336426
    8. '+)' → logprob: -15.000332832336426
    9. ')#' → logprob: -15.000332832336426
    10. '+' → logprob: -15.125332832336426

Token 1027: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1028: ' exit' (ID: 10654)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0077851274982094765
    2. '<|end|>' → logprob: -5.132785320281982
    3. 'elif' → logprob: -6.382785320281982
    4. ' else' → logprob: -9.507784843444824
    5. '```' → logprob: -9.757784843444824
    6. ')' → logprob: -11.382784843444824
    7. '
' → logprob: -11.632784843444824
    8. '   ' → logprob: -12.882784843444824
    9. '#else' → logprob: -13.257784843444824
    10. '<|end|>' → logprob: -13.257784843444824

Token 1029: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.010590736754238605
    2. '()
' → logprob: -5.010590553283691
    3. '(' → logprob: -5.760590553283691
    4. '()

' → logprob: -7.635590553283691
    5. '()\' → logprob: -9.010590553283691
    6. '0' → logprob: -9.760590553283691
    7. '```' → logprob: -11.510590553283691
    8. '\' → logprob: -11.760590553283691
    9. '\n' → logprob: -11.885590553283691
    10. '())' → logprob: -11.885590553283691

Token 1030: '#' (ID: 2)
  Prédit: '#'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.873044490814209
    2. 'print' → logprob: -0.998044490814209
    3. 'else' → logprob: -2.248044490814209
    4. 'nums' → logprob: -3.373044490814209
    5. 'if' → logprob: -3.998044490814209
    6. 'visited' → logprob: -3.998044490814209
    7. 'for' → logprob: -4.123044490814209
    8. 'valid' → logprob: -5.998044490814209
    9. 'all' → logprob: -5.998044490814209
    10. 'min' → logprob: -6.248044490814209

Token 1031: ' Sé' (ID: 53058)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.419816255569458
    2. '#' → logprob: -1.544816255569458
    3. 'for' → logprob: -2.919816255569458
    4. 'visited' → logprob: -4.044816017150879
    5. 'min' → logprob: -4.169816017150879
    6. 'from' → logprob: -4.669816017150879
    7. 's' → logprob: -5.419816017150879
    8. 'pos' → logprob: -5.544816017150879
    9. 'vals' → logprob: -5.794816017150879
    10. 'positive' → logprob: -5.794816017150879

Token 1032: 'paration' (ID: 27466)
  Prédit: 'quence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.04361962527036667
    2. 'lection' → logprob: -4.543619632720947
    3. 'quent' → logprob: -4.793619632720947
    4. 'paration' → logprob: -5.418619632720947
    5. 'rie' → logprob: -5.418619632720947
    6. '#' → logprob: -5.793619632720947
    7. 'ction' → logprob: -6.168619632720947
    8. 'if' → logprob: -6.293619632720947
    9. '   ' → logprob: -6.918619632720947
    10. 'm' → logprob: -7.043619632720947

Token 1033: ' des' (ID: 731)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45587101578712463
    2. ' =' → logprob: -2.455871105194092
    3. '=[]' → logprob: -2.705871105194092
    4. '()' → logprob: -2.955871105194092
    5. '[]' → logprob: -3.455871105194092
    6. '#' → logprob: -4.205871105194092
    7. 'import' → logprob: -4.205871105194092
    8. 's' → logprob: -4.455871105194092
    9. '(' → logprob: -4.955871105194092
    10. 'for' → logprob: -4.955871105194092

Token 1034: ' somm' (ID: 44830)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.3516649901866913
    2. 'components' → logprob: -1.6016650199890137
    3. 'connected' → logprob: -3.2266650199890137
    4. 'conn' → logprob: -3.8516650199890137
    5. 'nums' → logprob: -4.726665019989014
    6. 's' → logprob: -5.351665019989014
    7. 'cc' → logprob: -5.976665019989014
    8. 'part' → logprob: -6.351665019989014
    9. '#' → logprob: -6.476665019989014
    10. 'num' → logprob: -6.601665019989014

Token 1035: 'ets' (ID: 1719)
  Prédit: 'ts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ts' → logprob: -0.114815853536129
    2. 't' → logprob: -2.2398159503936768
    3. 'ets' → logprob: -7.239815711975098
    4. 'tes' → logprob: -7.489815711975098
    5. 's' → logprob: -8.739815711975098
    6. 'es' → logprob: -9.364815711975098
    7. 'e' → logprob: -9.614815711975098
    8. 'et' → logprob: -9.864815711975098
    9. 'aux' → logprob: -10.114815711975098
    10. 'ats' → logprob: -10.989815711975098

Token 1036: ' selon' (ID: 27571)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.24833248555660248
    2. ' =' → logprob: -2.7483325004577637
    3. ',' → logprob: -3.4983325004577637
    4. 'par' → logprob: -3.4983325004577637
    5. 'pos' → logprob: -4.123332500457764
    6. 'by' → logprob: -4.373332500457764
    7. '[' → logprob: -4.498332500457764
    8. 'into' → logprob: -4.998332500457764
    9. '0' → logprob: -5.748332500457764
    10. 'val' → logprob: -5.748332500457764

Token 1037: ' la' (ID: 557)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.2487446516752243
    2. 'par' → logprob: -2.2487447261810303
    3. 'lambda' → logprob: -2.6237447261810303
    4. 'len' → logprob: -3.9987447261810303
    5. ' depth' → logprob: -4.498744487762451
    6. '(depth' → logprob: -5.498744487762451
    7. 'la' → logprob: -6.123744487762451
    8. '[' → logprob: -6.373744487762451
    9. ' parity' → logprob: -7.123744487762451
    10. ' lambda' → logprob: -7.373744487762451

Token 1038: ' par' (ID: 686)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.11827212572097778
    2. 'par' → logprob: -2.618272066116333
    3. '(depth' → logprob: -4.243272304534912
    4. 'color' → logprob: -4.493272304534912
    5. ' depth' → logprob: -6.118272304534912
    6. 'b' → logprob: -6.243272304534912
    7. '#' → logprob: -6.243272304534912
    8. 'len' → logprob: -6.743272304534912
    9. 'colors' → logprob: -6.743272304534912
    10. 'partition' → logprob: -7.618272304534912

Token 1039: 'ité' (ID: 3761)
  Prédit: 'ité'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ité' → logprob: -0.026533665135502815
    2. 'ity' → logprob: -4.526533603668213
    3. 'ite' → logprob: -4.526533603668213
    4. 'it' → logprob: -6.026533603668213
    5. 't' → logprob: -6.526533603668213
    6. 'ités' → logprob: -8.526534080505371
    7. '
' → logprob: -9.151534080505371
    8. '```' → logprob: -9.526534080505371
    9. 'ities' → logprob: -9.651534080505371
    10. 'té' → logprob: -10.026534080505371

Token 1040: ' de' (ID: 334)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.13139760494232178
    2. 'part' → logprob: -3.3813977241516113
    3. 'par' → logprob: -3.6313977241516113
    4. 'odd' → logprob: -4.131397724151611
    5. 'ev' → logprob: -4.131397724151611
    6. '_even' → logprob: -5.131397724151611
    7. '0' → logprob: -5.631397724151611
    8. 'e' → logprob: -6.131397724151611
    9. 'pari' → logprob: -6.256397724151611
    10. 'a' → logprob: -6.506397724151611

Token 1041: ' leur' (ID: 9853)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0024217949248850346
    2. '(depth' → logprob: -6.377421855926514
    3. 'la' → logprob: -7.627421855926514
    4. ' depth' → logprob: -8.627421379089355
    5. 'l' → logprob: -10.877421379089355
    6. 'their' → logprob: -12.377421379089355
    7. 'distance' → logprob: -12.502421379089355
    8. ' profondeur' → logprob: -12.502421379089355
    9. '#' → logprob: -12.752421379089355
    10. 'd' → logprob: -12.877421379089355

Token 1042: ' profondeur' (ID: 128210)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0004375830467324704
    2. ' depth' → logprob: -8.37543773651123
    3. 'pro' → logprob: -9.00043773651123
    4. ' profondeur' → logprob: -10.50043773651123
    5. 'prof' → logprob: -10.62543773651123
    6. 'distance' → logprob: -11.12543773651123
    7. '(depth' → logprob: -11.25043773651123
    8. 'level' → logprob: -14.12543773651123
    9. '```' → logprob: -14.12543773651123
    10. '#' → logprob: -14.37543773651123

Token 1043: '
' (ID: 198)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.35672736167907715
    2. 'odd' → logprob: -1.6067273616790771
    3. 'ev' → logprob: -2.856727361679077
    4. 'par' → logprob: -4.356727600097656
    5. 'part' → logprob: -4.731727600097656
    6. 'od' → logprob: -5.606727600097656
    7. 'set' → logprob: -5.981727600097656
    8. 'pos' → logprob: -6.481727600097656
    9. 'group' → logprob: -6.606727600097656
    10. 'pair' → logprob: -6.731727600097656

Token 1044: 'even' (ID: 28689)
  Prédit: 'even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.10954047739505768
    2. 'odd' → logprob: -3.1095404624938965
    3. 'ev' → logprob: -3.7345404624938965
    4. 'par' → logprob: -4.3595404624938965
    5. 'pair' → logprob: -4.7345404624938965
    6. 'part' → logprob: -5.1095404624938965
    7. 'pairs' → logprob: -5.8595404624938965
    8. 'pos' → logprob: -6.9845404624938965
    9. 'pari' → logprob: -7.1095404624938965
    10. 'left' → logprob: -7.2345404624938965

Token 1045: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1373896449804306
    2. '=' → logprob: -3.012389659881592
    3. '_nodes' → logprob: -3.012389659881592
    4. ',' → logprob: -4.137389659881592
    5. '_vertices' → logprob: -4.762389659881592
    6. '_s' → logprob: -6.262389659881592
    7. 's' → logprob: -6.887389659881592
    8. '=[]' → logprob: -7.512389659881592
    9. '=[]
' → logprob: -8.137389183044434
    10. '_' → logprob: -8.137389183044434

Token 1046: ' []
' (ID: 8911)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.433159202337265
    2. '[]' → logprob: -1.1831592321395874
    3. '[' → logprob: -4.058159351348877
    4. '[u' → logprob: -4.183159351348877
    5. '[]
' → logprob: -4.808159351348877
    6. '[x' → logprob: -6.308159351348877
    7. '[j' → logprob: -7.183159351348877
    8. '[s' → logprob: -7.933159351348877
    9. '[int' → logprob: -8.308158874511719
    10. '[e' → logprob: -8.308158874511719

Token 1047: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -2.939851037808694e-05
    2. 'for' → logprob: -10.500029563903809
    3. ' odd' → logprob: -13.500029563903809
    4. '[]' → logprob: -15.250029563903809
    5. 'une' → logprob: -17.250028610229492
    6. '[' → logprob: -17.500028610229492
    7. '[i' → logprob: -17.500028610229492
    8. 'od' → logprob: -18.000028610229492
    9. 'even' → logprob: -18.375028610229492
    10. '```' → logprob: -18.750028610229492

Token 1048: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012808511033654213
    2. ' =' → logprob: -4.512808322906494
    3. '=[]' → logprob: -6.387808322906494
    4. '[]' → logprob: -10.262808799743652
    5. '=[]
' → logprob: -10.387808799743652
    6. ',' → logprob: -12.137808799743652
    7. '[:]' → logprob: -13.387808799743652
    8. '=[' → logprob: -13.762808799743652
    9. '=[]
' → logprob: -14.512808799743652
    10. 'for' → logprob: -14.637808799743652

Token 1049: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.000206401280593127
    2. '[]
' → logprob: -8.500205993652344
    3. '[' → logprob: -13.375205993652344
    4. '[]}' → logprob: -14.375205993652344
    5. '[]

' → logprob: -15.125205993652344
    6. ' []' → logprob: -15.625205993652344
    7. '[])' → logprob: -16.375205993652344
    8. '[i' → logprob: -16.375205993652344
    9. '[int' → logprob: -16.625205993652344
    10. '[j' → logprob: -17.625205993652344

Token 1050: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.8624639324116288e-06
    2. ' for' → logprob: -13.625001907348633
    3. '```' → logprob: -14.750001907348633
    4. '[' → logprob: -16.250001907348633
    5. '   ' → logprob: -16.750001907348633
    6. '	for' → logprob: -17.125001907348633
    7. 'if' → logprob: -17.625001907348633
    8. 'even' → logprob: -17.750001907348633
    9. '[i' → logprob: -18.375001907348633
    10. '
' → logprob: -18.625001907348633

Token 1051: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00013679367839358747
    2. ' i' → logprob: -9.750136375427246
    3. 'u' → logprob: -10.000136375427246
    4. 'v' → logprob: -10.625136375427246
    5. 'idx' → logprob: -12.375136375427246
    6. 'node' → logprob: -12.875136375427246
    7. 'x' → logprob: -13.750136375427246
    8. 'index' → logprob: -15.000136375427246
    9. 'vertex' → logprob: -15.125136375427246
    10. 'k' → logprob: -16.625137329101562

Token 1052: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14270253479480743
    2. ' in' → logprob: -2.017702579498291
    3. ' ' → logprob: -11.642702102661133
    4. 'i' → logprob: -12.017702102661133
    5. '1' → logprob: -12.392702102661133
    6. '```' → logprob: -13.142702102661133
    7. '  ' → logprob: -13.392702102661133
    8. '_' → logprob: -14.017702102661133
    9. ' i' → logprob: -14.142702102661133
    10. ',' → logprob: -14.142702102661133

Token 1053: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.836499985889532e-05
    2. ' range' → logprob: -9.7500581741333
    3. '(range' → logprob: -18.125059127807617
    4. '	range' → logprob: -19.250059127807617
    5. '   ' → logprob: -19.375059127807617
    6. '```' → logprob: -19.500059127807617
    7. 'in' → logprob: -20.000059127807617
    8. '1' → logprob: -20.125059127807617
    9. ' ' → logprob: -20.500059127807617
    10. '  ' → logprob: -21.000059127807617

Token 1054: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38688820600509644
    2. '1' → logprob: -1.1368882656097412
    3. '(n' → logprob: -11.51188850402832
    4. 'n' → logprob: -12.01188850402832
    5. '2' → logprob: -14.13688850402832
    6. ' ' → logprob: -15.13688850402832
    7. ' (' → logprob: -17.63688850402832
    8. 'range' → logprob: -17.76188850402832
    9. '```' → logprob: -18.38688850402832
    10. 'in' → logprob: -18.51188850402832

Token 1055: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. 'n' → logprob: -12.250006675720215
    3. ' ' → logprob: -13.500006675720215
    4. '2' → logprob: -14.625006675720215
    5. '(' → logprob: -15.500006675720215
    6. '   ' → logprob: -17.37500762939453
    7. 'len' → logprob: -17.50000762939453
    8. '(n' → logprob: -17.75000762939453
    9. '
' → logprob: -18.00000762939453
    10. '```' → logprob: -18.25000762939453

Token 1056: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008135913871228695
    2. ',n' → logprob: -5.133135795593262
    3. '(' → logprob: -6.508135795593262
    4. ' ,' → logprob: -7.633135795593262
    5. '(n' → logprob: -9.008135795593262
    6. '1' → logprob: -9.508135795593262
    7. 'n' → logprob: -11.008135795593262
    8. 'in' → logprob: -11.508135795593262
    9. '   ' → logprob: -13.508135795593262
    10. ',len' → logprob: -13.508135795593262

Token 1057: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.6240566083070007e-06
    2. ' n' → logprob: -13.375001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '	n' → logprob: -20.125001907348633
    5. '(n' → logprob: -20.750001907348633
    6. '
' → logprob: -21.250001907348633
    7. 'len' → logprob: -21.375001907348633
    8. ' ' → logprob: -22.250001907348633
    9. '```' → logprob: -22.500001907348633
    10. '\n' → logprob: -22.625001907348633

Token 1058: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03579412400722504
    2. '(n' → logprob: -3.4107940196990967
    3. 'n' → logprob: -7.410794258117676
    4. '(' → logprob: -7.660794258117676
    5. ',' → logprob: -8.035794258117676
    6. ',n' → logprob: -8.285794258117676
    7. ' +' → logprob: -9.035794258117676
    8. '()+' → logprob: -9.285794258117676
    9. '+n' → logprob: -9.285794258117676
    10. '):
' → logprob: -9.535794258117676

Token 1059: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0001278534036828205
    2. '(n' → logprob: -9.375127792358398
    3. ' n' → logprob: -10.250127792358398
    4. '+' → logprob: -12.125127792358398
    5. '1' → logprob: -13.250127792358398
    6. '+n' → logprob: -15.500127792358398
    7. ' ' → logprob: -17.0001277923584
    8. '```' → logprob: -17.2501277923584
    9. '   ' → logprob: -17.5001277923584
    10. '2' → logprob: -18.0001277923584

Token 1060: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07336503267288208
    2. ':' → logprob: -3.5733649730682373
    3. '):' → logprob: -3.6983649730682373
    4. ':
' → logprob: -4.073365211486816
    5. '   ' → logprob: -7.198365211486816
    6. '():
' → logprob: -10.073365211486816
    7. ')' → logprob: -10.573365211486816
    8. '):
' → logprob: -10.698365211486816
    9. 'if' → logprob: -10.823365211486816
    10. ' if' → logprob: -11.573365211486816

Token 1061: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019492246210575104
    2. 'if' → logprob: -4.644492149353027
    3. ' if' → logprob: -4.894492149353027
    4. '```' → logprob: -6.144492149353027
    5. '   ' → logprob: -10.644492149353027
    6. '	if' → logprob: -11.269492149353027
    7. '``' → logprob: -11.894492149353027
    8. ':' → logprob: -13.144492149353027
    9. '
' → logprob: -13.144492149353027
    10. '    
' → logprob: -13.519492149353027

Token 1062: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.17590582370758057
    2. '   ' → logprob: -2.050905704498291
    3. ' if' → logprob: -3.425905704498291
    4. '
' → logprob: -9.17590618133545
    5. ' ' → logprob: -11.30090618133545
    6. 'even' → logprob: -11.55090618133545
    7. '```' → logprob: -11.67590618133545
    8. '    
' → logprob: -11.80090618133545
    9. '	if' → logprob: -12.17590618133545
    10. '   ' → logprob: -12.55090618133545

Token 1063: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.0024779161904007196
    2. ' depth' → logprob: -6.002478122711182
    3. '(depth' → logprob: -13.002477645874023
    4. '   ' → logprob: -18.877477645874023
    5. ' ' → logprob: -19.877477645874023
    6. '-depth' → logprob: -20.877477645874023
    7. 'even' → logprob: -21.127477645874023
    8. 'Depth' → logprob: -21.752477645874023
    9. '.depth' → logprob: -21.877477645874023
    10. '_depth' → logprob: -21.877477645874023

Token 1064: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '%' → logprob: -15.25
    3. 'i' → logprob: -15.75
    4. '(i' → logprob: -17.75
    5. '[' → logprob: -18.125
    6. '```' → logprob: -18.25
    7. '%i' → logprob: -18.25
    8. ')' → logprob: -18.625
    9. '
' → logprob: -19.125
    10. 'def' → logprob: -19.125

Token 1065: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5919427275657654
    2. '%' → logprob: -1.3419427871704102
    3. ']' → logprob: -2.09194278717041
    4. ')%' → logprob: -3.09194278717041
    5. '[i' → logprob: -4.59194278717041
    6. ']%' → logprob: -5.21694278717041
    7. ' %' → logprob: -7.46694278717041
    8. '[' → logprob: -8.46694278717041
    9. 'i' → logprob: -9.84194278717041
    10. ' )' → logprob: -9.96694278717041

Token 1066: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.0022033092100173235
    2. ' %' → logprob: -6.127203464508057
    3. '==' → logprob: -11.002202987670898
    4. '()%' → logprob: -14.752202987670898
    5. ')' → logprob: -15.002202987670898
    6. ')%' → logprob: -15.127202987670898
    7. '%
' → logprob: -15.377202987670898
    8. ' ==' → logprob: -15.752202987670898
    9. '0' → logprob: -16.7522029876709
    10. ' ' → logprob: -17.2522029876709

Token 1067: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003675133048091084
    2. ' ' → logprob: -8.000367164611816
    3. '==' → logprob: -10.625367164611816
    4. '```' → logprob: -12.250367164611816
    5. '=' → logprob: -13.250367164611816
    6. '   ' → logprob: -15.125367164611816
    7. '...' → logprob: -16.125368118286133
    8. ' ==' → logprob: -16.250368118286133
    9. '  ' → logprob: -16.625368118286133
    10. '[' → logprob: -16.625368118286133

Token 1068: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. '```' → logprob: -15.375007629394531
    4. '==' → logprob: -16.12500762939453
    5. '=' → logprob: -16.50000762939453
    6. '   ' → logprob: -16.75000762939453
    7. 'to' → logprob: -19.12500762939453
    8. '...' → logprob: -19.12500762939453
    9. '[' → logprob: -19.12500762939453
    10. '۲' → logprob: -19.25000762939453

Token 1069: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0010536498157307506
    2. ' ==' → logprob: -6.876053810119629
    3. '==
' → logprob: -11.126053810119629
    4. '=' → logprob: -12.751053810119629
    5. ')==' → logprob: -13.876053810119629
    6. '===' → logprob: -14.126053810119629
    7. ']==' → logprob: -14.376053810119629
    8. '()==' → logprob: -14.876053810119629
    9. '```' → logprob: -14.876053810119629
    10. '0' → logprob: -16.001052856445312

Token 1070: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01608598604798317
    2. '2' → logprob: -4.391086101531982
    3. ' ' → logprob: -5.641086101531982
    4. '==' → logprob: -11.391085624694824
    5. '=' → logprob: -12.266085624694824
    6. '1' → logprob: -12.641085624694824
    7. '```' → logprob: -13.516085624694824
    8. '   ' → logprob: -15.766085624694824
    9. ' ==' → logprob: -16.39108657836914
    10. '[' → logprob: -17.26608657836914

Token 1071: '0' (ID: 15)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.22741146385669708
    2. '0' → logprob: -1.6024115085601807
    3. ' ' → logprob: -6.227411270141602
    4. '1' → logprob: -11.602411270141602
    5. '==' → logprob: -11.602411270141602
    6. '```' → logprob: -13.102411270141602
    7. '   ' → logprob: -13.852411270141602
    8. '=' → logprob: -14.602411270141602
    9. ' ==' → logprob: -15.914911270141602
    10. '  ' → logprob: -16.5399112701416

Token 1072: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5286273956298828
    2. ':
' → logprob: -0.9036273956298828
    3. 'even' → logprob: -5.653627395629883
    4. '==' → logprob: -7.278627395629883
    5. '   ' → logprob: -7.653627395629883
    6. '):
' → logprob: -7.903627395629883
    7. ' even' → logprob: -8.153627395629883
    8. '):' → logprob: -9.653627395629883
    9. '=' → logprob: -10.653627395629883
    10. '       ' → logprob: -10.778627395629883

Token 1073: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06708361953496933
    2. 'even' → logprob: -3.1920835971832275
    3. '   ' → logprob: -4.442083835601807
    4. ' even' → logprob: -4.817083835601807
    5. ':' → logprob: -5.942083835601807
    6. ':
' → logprob: -7.067083835601807
    7. '_even' → logprob: -8.817083358764648
    8. 'e' → logprob: -9.442083358764648
    9. '):
' → logprob: -9.817083358764648
    10. 'odd' → logprob: -10.067083358764648

Token 1074: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' (adapté à ' even') → logprob: -1.3902033970225602e-05
    2. ' even' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.000014305114746
    4. 'odd' → logprob: -17.87501335144043
    5. '       ' → logprob: -19.25001335144043
    6. 'e' → logprob: -19.25001335144043
    7. '```' → logprob: -19.62501335144043
    8. '_even' → logprob: -19.62501335144043
    9. 'evenodd' → logprob: -20.00001335144043
    10. '
' → logprob: -20.25001335144043

Token 1075: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011054190807044506
    2. '.' → logprob: -4.511054039001465
    3. ' .' → logprob: -12.261054039001465
    4. '.ap' → logprob: -14.011054039001465
    5. '.add' → logprob: -15.386054039001465
    6. '.app' → logprob: -16.13605499267578
    7. '   ' → logprob: -16.13605499267578
    8. 'append' → logprob: -16.26105499267578
    9. '.e' → logprob: -16.26105499267578
    10. ').' → logprob: -16.38605499267578

Token 1076: '(nums' (ID: 40372)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.20315290987491608
    2. 'i' → logprob: -1.7031528949737549
    3. 'nums' → logprob: -6.828153133392334
    4. '(nums' → logprob: -7.453153133392334
    5. ' i' → logprob: -9.953152656555176
    6. '(' → logprob: -10.703152656555176
    7. '[i' → logprob: -13.703152656555176
    8. '   ' → logprob: -13.953152656555176
    9. '	i' → logprob: -14.203152656555176
    10. '0' → logprob: -14.828152656555176

Token 1077: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.339278580620885e-06
    2. '[' → logprob: -13.625001907348633
    3. '[u' → logprob: -14.500001907348633
    4. ' [' → logprob: -15.250001907348633
    5. ')' → logprob: -16.000001907348633
    6. ')[' → logprob: -16.375001907348633
    7. '[j' → logprob: -16.625001907348633
    8. '```' → logprob: -18.000001907348633
    9. '[I' → logprob: -18.375001907348633
    10. ' ' → logprob: -18.375001907348633

Token 1078: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.035634126514196396
    2. '])
' → logprob: -3.6606340408325195
    3. ')' → logprob: -5.0356340408325195
    4. '[i' → logprob: -6.2856340408325195
    5. ')
' → logprob: -7.7856340408325195
    6. ' ])' → logprob: -8.03563404083252
    7. ' )' → logprob: -10.03563404083252
    8. ' ])
' → logprob: -10.28563404083252
    9. '))' → logprob: -10.66063404083252
    10. ']' → logprob: -11.16063404083252

Token 1079: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.003834398463368416
    2. '   ' → logprob: -6.378834247589111
    3. 'odd' → logprob: -6.753834247589111
    4. ' else' → logprob: -7.003834247589111
    5. 'elif' → logprob: -10.12883472442627
    6. '	else' → logprob: -12.12883472442627
    7. '```' → logprob: -12.50383472442627
    8. ' odd' → logprob: -13.62883472442627
    9. 'for' → logprob: -13.87883472442627
    10. ' ' → logprob: -14.00383472442627

Token 1080: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005767496302723885
    2. ' else' → logprob: -5.255767345428467
    3. 'elif' → logprob: -7.880767345428467
    4. 'odd' → logprob: -8.880767822265625
    5. '   ' → logprob: -11.755767822265625
    6. ')' → logprob: -13.255767822265625
    7. ' odd' → logprob: -13.755767822265625
    8. '```' → logprob: -13.755767822265625
    9. ' elif' → logprob: -13.880767822265625
    10. ' ' → logprob: -14.255767822265625

Token 1081: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6365368962287903
    2. ':
' → logprob: -1.0115368366241455
    3. '       ' → logprob: -3.0115368366241455
    4. 'odd' → logprob: -3.1365368366241455
    5. '   ' → logprob: -5.011537075042725
    6. ' odd' → logprob: -5.136537075042725
    7. '.' → logprob: -6.761537075042725
    8. '.append' → logprob: -8.761536598205566
    9. '):
' → logprob: -9.261536598205566
    10. '=' → logprob: -9.386536598205566

Token 1082: '       ' (ID: 309)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -0.0006795499939471483
    2. ' odd' → logprob: -7.3756794929504395
    3. '   ' → logprob: -9.875679969787598
    4. 'even' → logprob: -14.000679969787598
    5. '       ' → logprob: -14.500679969787598
    6. ' ' → logprob: -16.37567901611328
    7. '  ' → logprob: -17.12567901611328
    8. '           ' → logprob: -17.25067901611328
    9. '```' → logprob: -17.37567901611328
    10. 'od' → logprob: -17.75067901611328

Token 1083: ' odd' (ID: 14210)
  Prédit: 'odd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' (adapté à ' odd') → logprob: -1.9504606825648807e-05
    2. ' odd' → logprob: -11.125019073486328
    3. 'even' → logprob: -12.375019073486328
    4. '   ' → logprob: -14.875019073486328
    5. '  ' → logprob: -18.000019073486328
    6. ' ' → logprob: -18.000019073486328
    7. 'od' → logprob: -18.500019073486328
    8. 'old' → logprob: -18.750019073486328
    9. 'ood' → logprob: -19.000019073486328
    10. '```' → logprob: -19.125019073486328

Token 1084: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.000555416801944375
    2. '.' → logprob: -7.500555515289307
    3. ' .' → logprob: -13.375555038452148
    4. '.add' → logprob: -14.750555038452148
    5. '.app' → logprob: -15.125555038452148
    6. '.ap' → logprob: -16.00055503845215
    7. 'append' → logprob: -16.37555503845215
    8. '   ' → logprob: -18.00055503845215
    9. '.extend' → logprob: -18.00055503845215
    10. ').' → logprob: -18.25055503845215

Token 1085: '(nums' (ID: 40372)
  Prédit: '(nums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nums' → logprob: -0.3133252263069153
    2. 'nums' → logprob: -1.3133251667022705
    3. ' nums' → logprob: -9.688324928283691
    4. '(' → logprob: -13.688324928283691
    5. ' (' → logprob: -16.188325881958008
    6. '0' → logprob: -16.938325881958008
    7. '(-' → logprob: -16.938325881958008
    8. 'Nums' → logprob: -17.313325881958008
    9. '(num' → logprob: -17.438325881958008
    10. 'num' → logprob: -17.563325881958008

Token 1086: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[j' → logprob: -16.25
    3. '(i' → logprob: -16.625
    4. 'i' → logprob: -17.25
    5. '[' → logprob: -17.5
    6. ')[' → logprob: -19.625
    7. '{i' → logprob: -19.75
    8. '[u' → logprob: -19.875
    9. '[I' → logprob: -19.875
    10. ' [' → logprob: -20.0

Token 1087: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00021474185632541776
    2. ')' → logprob: -8.750214576721191
    3. '[i' → logprob: -10.500214576721191
    4. ')])' → logprob: -11.125214576721191
    5. '])
' → logprob: -11.750214576721191
    6. '[' → logprob: -13.500214576721191
    7. ' ])' → logprob: -13.875214576721191
    8. ')]' → logprob: -13.875214576721191
    9. '])]' → logprob: -14.125214576721191
    10. '[]' → logprob: -15.125214576721191

Token 1088: '#' (ID: 2)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.7878003120422363
    2. 'vals' → logprob: -2.0378003120422363
    3. 'possible' → logprob: -2.2878003120422363
    4. 'c' → logprob: -2.6628003120422363
    5. 'import' → logprob: -2.6628003120422363
    6. 'if' → logprob: -2.9128003120422363
    7. 'values' → logprob: -2.9128003120422363
    8. 'val' → logprob: -3.0378003120422363
    9. 'x' → logprob: -3.6628003120422363
    10. 'S' → logprob: -3.7878003120422363

Token 1089: ' Calcul' (ID: 57243)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.8425155878067017
    2. 'all' → logprob: -1.9675155878067017
    3. 'low' → logprob: -1.9675155878067017
    4. 'import' → logprob: -2.217515468597412
    5. 'def' → logprob: -2.967515468597412
    6. 'vals' → logprob: -3.092515468597412
    7. 'diff' → logprob: -3.092515468597412
    8. '#' → logprob: -3.467515468597412
    9. 'lo' → logprob: -3.717515468597412
    10. 'even' → logprob: -3.842515468597412

Token 1090: ' du' (ID: 1462)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'diff' → logprob: -2.0150439739227295
    2. 'x' → logprob: -2.1400439739227295
    3. 'min' → logprob: -2.1400439739227295
    4. 'even' → logprob: -2.1400439739227295
    5. 'val' → logprob: -2.7650439739227295
    6. 'total' → logprob: -2.8900439739227295
    7. 'sum' → logprob: -3.5150439739227295
    8. 's' → logprob: -3.6400439739227295
    9. 'all' → logprob: -3.6400439739227295
    10. 'base' → logprob: -3.7650439739227295

Token 1091: ' minimum' (ID: 11085)
  Prédit: 'low'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'low' → logprob: -1.5629686117172241
    2. 'min' → logprob: -1.8129686117172241
    3. 'diff' → logprob: -2.4379687309265137
    4. 's' → logprob: -2.9379687309265137
    5. 'from' → logprob: -3.1879687309265137
    6. 'import' → logprob: -3.3129687309265137
    7. 'lo' → logprob: -3.4379687309265137
    8. 'inf' → logprob: -3.4379687309265137
    9. 'possible' → logprob: -3.4379687309265137
    10. 'm' → logprob: -3.6879687309265137

Token 1092: ' sur' (ID: 1512)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -1.0753010511398315
    2. 'val' → logprob: -1.7003010511398315
    3. 'min' → logprob: -2.325301170349121
    4. 'possible' → logprob: -2.325301170349121
    5. 'mn' → logprob: -3.325301170349121
    6. 'e' → logprob: -3.450301170349121
    7. 'ev' → logprob: -3.450301170349121
    8. 'm' → logprob: -3.825301170349121
    9. 'v' → logprob: -4.325301170349121
    10. 'emin' → logprob: -4.450301170349121

Token 1093: ' chaque' (ID: 21194)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.03237976133823395
    2. 'odd' → logprob: -4.657379627227783
    3. 'min' → logprob: -5.032379627227783
    4. '(e' → logprob: -5.282379627227783
    5. '(min' → logprob: -5.282379627227783
    6. 'all' → logprob: -6.282379627227783
    7. 'nums' → logprob: -6.782379627227783
    8. '(' → logprob: -7.032379627227783
    9. 'both' → logprob: -8.157380104064941
    10. 'e' → logprob: -8.282380104064941

Token 1094: ' groupe' (ID: 29494)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.060033977031707764
    2. 'nums' → logprob: -3.6850340366363525
    3. '(e' → logprob: -4.185033798217773
    4. 'min' → logprob: -4.810033798217773
    5. '(min' → logprob: -6.560033798217773
    6. '(nums' → logprob: -6.560033798217773
    7. 'odd' → logprob: -7.435033798217773
    8. 'range' → logprob: -7.560033798217773
    9. 'values' → logprob: -7.685033798217773
    10. 'e' → logprob: -7.935033798217773

Token 1095: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5196641683578491
    2. 'mini' → logprob: -2.3946642875671387
    3. 'emin' → logprob: -2.5196642875671387
    4. 'even' → logprob: -3.0196642875671387
    5. 'mine' → logprob: -3.0196642875671387
    6. 'mn' → logprob: -3.8946642875671387
    7. 'amin' → logprob: -3.8946642875671387
    8. 'me' → logprob: -4.019664287567139
    9. 'a' → logprob: -4.519664287567139
    10. 'm' → logprob: -4.769664287567139

Token 1096: 'pa' (ID: 3899)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09650804102420807
    2. 'even' → logprob: -3.471508026123047
    3. 'me' → logprob: -4.471508026123047
    4. 'mini' → logprob: -4.721508026123047
    5. 'emin' → logprob: -5.221508026123047
    6. 'm' → logprob: -5.346508026123047
    7. 'mine' → logprob: -5.471508026123047
    8. 'mn' → logprob: -5.596508026123047
    9. 'amin' → logprob: -5.721508026123047
    10. 'if' → logprob: -5.846508026123047

Token 1097: 'ire' (ID: 594)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11155541986227036
    2. 'rent' → logprob: -3.736555337905884
    3. 'rt' → logprob: -3.861555337905884
    4. 'ris' → logprob: -4.236555576324463
    5. 'ri' → logprob: -4.736555576324463
    6. 'rs' → logprob: -4.861555576324463
    7. 'min' → logprob: -5.361555576324463
    8. 'ys' → logprob: -5.486555576324463
    9. 'ir' → logprob: -5.486555576324463
    10. 'rés' → logprob: -6.486555576324463

Token 1098: '/' (ID: 14)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2919135093688965
    2. 'et' → logprob: -1.4169135093688965
    3. ',' → logprob: -1.9169135093688965
    4. 'even' → logprob: -2.2919135093688965
    5. 'e' → logprob: -2.5419135093688965
    6. ')
' → logprob: -3.2919135093688965
    7. 's' → logprob: -3.5419135093688965
    8. 'and' → logprob: -3.9169135093688965
    9. ' and' → logprob: -4.2919135093688965
    10. ' et' → logprob: -4.2919135093688965

Token 1099: 'imp' (ID: 9230)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.5232110023498535
    2. 'imp' → logprob: -0.8982110023498535
    3. ' imp' → logprob: -9.898210525512695
    4. 'imde' → logprob: -12.148210525512695
    5. 'imin' → logprob: -12.273210525512695
    6. 'min' → logprob: -12.523210525512695
    7. 'max' → logprob: -13.023210525512695
    8. 'Im' → logprob: -13.148210525512695
    9. '_imp' → logprob: -13.523210525512695
    10. 'une' → logprob: -13.648210525512695

Token 1100: 'air' (ID: 1517)
  Prédit: 'rité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rité' → logprob: -0.1503276526927948
    2. 'r' → logprob: -2.650327682495117
    3. 'rt' → logprob: -3.400327682495117
    4. 'ri' → logprob: -3.650327682495117
    5. 'ire' → logprob: -6.150327682495117
    6. 'ir' → logprob: -6.525327682495117
    7. 'reté' → logprob: -6.650327682495117
    8. 'rite' → logprob: -6.900327682495117
    9. 'rie' → logprob: -7.025327682495117
    10. 'rit' → logprob: -7.400327682495117

Token 1101: ')
' (ID: 446)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.1497879922389984
    2. 'min' → logprob: -2.8997879028320312
    3. '_even' → logprob: -3.8997879028320312
    4. ')
' → logprob: -4.149787902832031
    5. ')' → logprob: -4.774787902832031
    6. 'e' → logprob: -4.774787902832031
    7. 'm' → logprob: -5.274787902832031
    8. ',' → logprob: -5.399787902832031
    9. '=' → logprob: -5.649787902832031
    10. 'if' → logprob: -5.774787902832031

Token 1102: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.35946881771087646
    2. 'even' → logprob: -2.609468936920166
    3. 'me' → logprob: -2.859468936920166
    4. 'mine' → logprob: -2.984468936920166
    5. 'emin' → logprob: -3.359468936920166
    6. 'mini' → logprob: -3.484468936920166
    7. 'mn' → logprob: -4.359468936920166
    8. 'amin' → logprob: -4.484468936920166
    9. 'a' → logprob: -5.109468936920166
    10. 'mi' → logprob: -5.734468936920166

Token 1103: '0' (ID: 15)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.034193407744169235
    2. 'even' → logprob: -3.409193515777588
    3. '_e' → logprob: -8.40919303894043
    4. '_' → logprob: -9.40919303894043
    5. '_ev' → logprob: -9.53419303894043
    6. '_val' → logprob: -9.53419303894043
    7. 'e' → logprob: -10.28419303894043
    8. 'ev' → logprob: -10.28419303894043
    9. 'Even' → logprob: -12.03419303894043
    10. 'E' → logprob: -12.28419303894043

Token 1104: ' =' (ID: 314)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.01641813851892948
    2. '_val' → logprob: -4.891417980194092
    3. '_' → logprob: -5.141417980194092
    4. 'even' → logprob: -6.766417980194092
    5. '_e' → logprob: -6.891417980194092
    6. ' =' → logprob: -7.766417980194092
    7. 'e' → logprob: -9.14141845703125
    8. '=' → logprob: -9.89141845703125
    9. '_value' → logprob: -9.89141845703125
    10. '0' → logprob: -10.14141845703125

Token 1105: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007481599459424615
    2. ' min' → logprob: -7.250748157501221
    3. 'float' → logprob: -10.375748634338379
    4. '(min' → logprob: -12.250748634338379
    5. '0' → logprob: -13.875748634338379
    6. '1' → logprob: -15.125748634338379
    7. 'max' → logprob: -15.250748634338379
    8. 'None' → logprob: -16.250747680664062
    9. '	min' → logprob: -16.375747680664062
    10. '   ' → logprob: -16.625747680664062

Token 1106: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -5.3954463510308415e-05
    2. '(min' → logprob: -10.000054359436035
    3. '(' → logprob: -12.500054359436035
    4. 'even' → logprob: -13.125054359436035
    5. '([' → logprob: -13.750054359436035
    6. '((' → logprob: -14.250054359436035
    7. '(nums' → logprob: -15.000054359436035
    8. '(
' → logprob: -15.625054359436035
    9. ' (' → logprob: -15.875054359436035
    10. ' even' → logprob: -17.25005340576172

Token 1107: 'ven' (ID: 1066)
  Prédit: 'ven'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ven' → logprob: -0.48556944727897644
    2. '(e' → logprob: -0.9855694770812988
    3. 'even' → logprob: -4.485569477081299
    4. '(' → logprob: -9.61056900024414
    5. 've' → logprob: -10.73556900024414
    6. 'e' → logprob: -10.86056900024414
    7. 'v' → logprob: -11.11056900024414
    8. 'vens' → logprob: -11.48556900024414
    9. '(v' → logprob: -12.23556900024414
    10. 'iven' → logprob: -12.73556900024414

Token 1108: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.476980060338974
    2. ')
' → logprob: -0.9769800901412964
    3. ',' → logprob: -6.976980209350586
    4. 'if' → logprob: -7.226980209350586
    5. ',min' → logprob: -8.101980209350586
    6. ' if' → logprob: -8.351980209350586
    7. '+' → logprob: -8.601980209350586
    8. ')-' → logprob: -8.726980209350586
    9. ' +' → logprob: -8.976980209350586
    10. '(min' → logprob: -9.851980209350586

Token 1109: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0007266097818501294
    2. 'max' → logprob: -7.250726699829102
    3. 'm' → logprob: -12.750726699829102
    4. 'if' → logprob: -12.875726699829102
    5. 'import' → logprob: -13.125726699829102
    6. ' min' → logprob: -13.250726699829102
    7. '(min' → logprob: -14.125726699829102
    8. '_min' → logprob: -14.375726699829102
    9. '=min' → logprob: -14.375726699829102
    10. 'mini' → logprob: -14.500726699829102

Token 1110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.558399319241289e-05
    2. '=' → logprob: -11.750025749206543
    3. 'odd' → logprob: -12.250025749206543
    4. '0' → logprob: -12.500025749206543
    5. ' =' → logprob: -12.500025749206543
    6. 'min' → logprob: -13.500025749206543
    7. 'inf' → logprob: -14.500025749206543
    8. '```' → logprob: -14.875025749206543
    9. 'o' → logprob: -15.062525749206543
    10. '=min' → logprob: -15.187525749206543

Token 1111: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020796209573746
    2. ' =' → logprob: -2.350208044052124
    3. '=min' → logprob: -13.600208282470703
    4. ',' → logprob: -18.100208282470703
    5. '＝' → logprob: -18.225208282470703
    6. ' ' → logprob: -18.350208282470703
    7. '=int' → logprob: -18.850208282470703
    8. ')' → logprob: -18.975208282470703
    9. 'min' → logprob: -19.225208282470703
    10. '=
' → logprob: -19.225208282470703

Token 1112: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0024819616228342056
    2. ' min' → logprob: -6.002481937408447
    3. 'max' → logprob: -12.002482414245605
    4. '(min' → logprob: -15.877482414245605
    5. 'float' → logprob: -16.62748146057129
    6. '0' → logprob: -17.50248146057129
    7. '	min' → logprob: -18.37748146057129
    8. ' max' → logprob: -19.25248146057129
    9. ' ' → logprob: -19.62748146057129
    10. 'minimum' → logprob: -20.25248146057129

Token 1113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -9.674858301877975e-05
    2. 'odd' → logprob: -9.250096321105957
    3. '(min' → logprob: -14.625096321105957
    4. 'min' → logprob: -16.750097274780273
    5. ' odd' → logprob: -18.375097274780273
    6. '[' → logprob: -18.750097274780273
    7. '(ord' → logprob: -18.750097274780273
    8. '=' → logprob: -18.875097274780273
    9. '(
' → logprob: -19.250097274780273
    10. ' (' → logprob: -19.250097274780273

Token 1114: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -1.4259644558478612e-05
    2. '(' → logprob: -11.250014305114746
    3. ' odd' → logprob: -14.250014305114746
    4. 'od' → logprob: -14.500014305114746
    5. '[' → logprob: -17.37501335144043
    6. '   ' → logprob: -18.12501335144043
    7. ')' → logprob: -18.25001335144043
    8. 'ood' → logprob: -18.25001335144043
    9. 'old' → logprob: -19.87501335144043
    10. '
' → logprob: -20.37501335144043

Token 1115: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035894988104701042
    2. 'if' → logprob: -6.878589630126953
    3. ' if' → logprob: -7.003589630126953
    4. '<|end|>' → logprob: -7.503589630126953
    5. '+' → logprob: -7.753589630126953
    6. ' -' → logprob: -8.628589630126953
    7. ')
' → logprob: -8.753589630126953
    8. '-' → logprob: -8.878589630126953
    9. ' +' → logprob: -10.128589630126953
    10. ' )' → logprob: -10.628589630126953

Token 1116: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.6048051118850708
    2. 'offset' → logprob: -1.7298051118850708
    3. 'diff' → logprob: -1.9798051118850708
    4. 'delta' → logprob: -2.2298049926757812
    5. 'res' → logprob: -2.7298049926757812
    6. 'if' → logprob: -2.8548049926757812
    7. 'shift' → logprob: -2.8548049926757812
    8. 'answer' → logprob: -3.4798049926757812
    9. 'd' → logprob: -3.6048049926757812
    10. 'val' → logprob: -3.8548049926757812

Token 1117: ' Cher' (ID: 48756)
  Prédit: 'offset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'offset' → logprob: -1.353676199913025
    2. 'delta' → logprob: -1.603676199913025
    3. 'diff' → logprob: -1.853676199913025
    4. 'if' → logprob: -2.2286763191223145
    5. 'shift' → logprob: -2.3536763191223145
    6. 'ans' → logprob: -3.3536763191223145
    7. 'd' → logprob: -3.9786763191223145
    8. 'res' → logprob: -3.9786763191223145
    9. 'val' → logprob: -4.2286763191223145
    10. 'de' → logprob: -4.2286763191223145

Token 1118: 'che' (ID: 926)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.042605265974998474
    2. 'ck' → logprob: -3.91760516166687
    3. 'cher' → logprob: -4.292605400085449
    4. 'cker' → logprob: -5.667605400085449
    5. '#' → logprob: -6.667605400085449
    6. 'ch' → logprob: -6.667605400085449
    7. 'ker' → logprob: -7.042605400085449
    8. 'if' → logprob: -7.917605400085449
    9. 'k' → logprob: -8.54260540008545
    10. 'er' → logprob: -8.79260540008545

Token 1119: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8625931143760681
    2. ' min' → logprob: -1.487593173980713
    3. 'r' → logprob: -3.112593173980713
    4. ' la' → logprob: -3.362593173980713
    5. 'max' → logprob: -3.362593173980713
    6. '_min' → logprob: -3.487593173980713
    7. 'e' → logprob: -3.612593173980713
    8. 'x' → logprob: -4.237593173980713
    9. '_' → logprob: -4.237593173980713
    10. 'l' → logprob: -4.237593173980713

Token 1120: ' nombre' (ID: 9733)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0538417100906372
    2. 'x' → logprob: -1.4288417100906372
    3. 'delta' → logprob: -1.9288417100906372
    4. 'd' → logprob: -2.9288415908813477
    5. 'offset' → logprob: -3.0538415908813477
    6. 'min' → logprob: -3.1788415908813477
    7. 'diff' → logprob: -3.9288415908813477
    8. 'shift' → logprob: -4.303841590881348
    9. 'maximum' → logprob: -4.428841590881348
    10. 'k' → logprob: -4.428841590881348

Token 1121: ' de' (ID: 334)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.970958411693573
    2. 'de' → logprob: -1.3459584712982178
    3. 'max' → logprob: -1.8459584712982178
    4. 'possible' → logprob: -2.2209584712982178
    5. 'min' → logprob: -4.220958232879639
    6. 'total' → logprob: -4.470958232879639
    7. 'poss' → logprob: -4.470958232879639
    8. 'ans' → logprob: -4.595958232879639
    9. 'res' → logprob: -4.720958232879639
    10. 'of' → logprob: -5.470958232879639

Token 1122: ' solutions' (ID: 9368)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.30404046177864075
    2. 'x' → logprob: -1.5540404319763184
    3. 'poss' → logprob: -3.5540404319763184
    4. 'ent' → logprob: -5.054040431976318
    5. 'solutions' → logprob: -5.929040431976318
    6. '1' → logprob: -6.179040431976318
    7. 'k' → logprob: -6.179040431976318
    8. 'values' → logprob: -6.429040431976318
    9. 'd' → logprob: -6.679040431976318
    10. 'dé' → logprob: -7.179040431976318

Token 1123: ' ent' (ID: 1121)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.2253210544586182
    2. 'res' → logprob: -1.3503210544586182
    3. 'ans' → logprob: -1.6003210544586182
    4. 'count' → logprob: -1.8503210544586182
    5. 'answer' → logprob: -3.600321054458618
    6. 'cnt' → logprob: -4.725320816040039
    7. 'sol' → logprob: -4.850320816040039
    8. 'result' → logprob: -4.975320816040039
    9. 'possible' → logprob: -5.100320816040039
    10. 'max' → logprob: -5.350320816040039

Token 1124: 'ières' (ID: 44864)
  Prédit: 'ières'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ières' → logprob: -0.12868927419185638
    2. 'ière' → logprob: -3.0036892890930176
    3. 'ieres' → logprob: -3.3786892890930176
    4. 'iere' → logprob: -4.003689289093018
    5. 'ier' → logprob: -4.503689289093018
    6. 'iers' → logprob: -5.253689289093018
    7. 'i' → logprob: -6.128689289093018
    8. '```' → logprob: -9.37868881225586
    9. '1' → logprob: -10.50368881225586
    10. 't' → logprob: -10.62868881225586

Token 1125: ' positives' (ID: 95584)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.5019277334213257
    2. 'ans' → logprob: -1.5019277334213257
    3. 'if' → logprob: -1.8769277334213257
    4. 'count' → logprob: -2.0019278526306152
    5. 'possible' → logprob: -2.8769278526306152
    6. 'offset' → logprob: -3.5019278526306152
    7. 'answer' → logprob: -3.5019278526306152
    8. 'sol' → logprob: -3.5019278526306152
    9. 'solutions' → logprob: -3.6269278526306152
    10. 'diff' → logprob: -4.376927852630615

Token 1126: ' possibles' (ID: 97753)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.4515278339385986
    2. 'res' → logprob: -1.4515278339385986
    3. 'ans' → logprob: -1.4515278339385986
    4. 'count' → logprob: -1.9515278339385986
    5. 'answer' → logprob: -2.8265278339385986
    6. 'offset' → logprob: -3.7015278339385986
    7. 'result' → logprob: -3.7015278339385986
    8. 'cnt' → logprob: -4.7015275955200195
    9. 'possible' → logprob: -4.8265275955200195
    10. 'max' → logprob: -5.5765275955200195

Token 1127: ' (' (ID: 350)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0436617136001587
    2. 'res' → logprob: -1.5436617136001587
    3. 'ans' → logprob: -1.5436617136001587
    4. 'offset' → logprob: -2.668661594390869
    5. 'possible' → logprob: -3.168661594390869
    6. 'answer' → logprob: -3.543661594390869
    7. 'poss' → logprob: -4.168661594390869
    8. 'count' → logprob: -4.543661594390869
    9. 'shift' → logprob: -4.543661594390869
    10. '
' → logprob: -5.168661594390869

Token 1128: 'voir' (ID: 8991)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1665211915969849
    2. 'print' → logprob: -1.5415211915969849
    3. 'answer' → logprob: -2.1665210723876953
    4. 'res' → logprob: -2.2915210723876953
    5. 'max' → logprob: -2.5415210723876953
    6. 'count' → logprob: -3.2915210723876953
    7. 'import' → logprob: -3.6665210723876953
    8. 'lim' → logprob: -4.041521072387695
    9. 'result' → logprob: -4.166521072387695
    10. 'inf' → logprob: -4.291521072387695

Token 1129: ' é' (ID: 1212)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.16314589977264404
    2. 'min' → logprob: -2.4131460189819336
    3. '
' → logprob: -3.9131460189819336
    4. '"""
' → logprob: -4.163146018981934
    5. 'max' → logprob: -5.413146018981934
    6. 's' → logprob: -5.788146018981934
    7. 'abs' → logprob: -5.913146018981934
    8. '#
' → logprob: -6.038146018981934
    9. 'comment' → logprob: -6.413146018981934
    10. 'len' → logprob: -6.663146018981934

Token 1130: 'non' (ID: 11741)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.07479043304920197
    2. 'x' → logprob: -3.8247904777526855
    3. 'non' → logprob: -4.1997904777526855
    4. 'xp' → logprob: -4.5747904777526855
    5. '#' → logprob: -5.3247904777526855
    6. 'q' → logprob: -5.5747904777526855
    7. 'n' → logprob: -5.8247904777526855
    8. 'comment' → logprob: -6.1997904777526855
    9. 'qn' → logprob: -6.4497904777526855
    10. 'criture' → logprob: -6.4497904777526855

Token 1131: 'cé' (ID: 91488)
  Prédit: 'cé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cé' → logprob: -0.06584435701370239
    2. 'ce' → logprob: -3.6908442974090576
    3. 'c' → logprob: -4.065844535827637
    4. 'um' → logprob: -4.440844535827637
    5. 'cée' → logprob: -6.190844535827637
    6. 'g' → logprob: -6.315844535827637
    7. 't' → logprob: -6.440844535827637
    8. 'ces' → logprob: -6.690844535827637
    9. 'oncé' → logprob: -7.190844535827637
    10. 'ign' → logprob: -7.565844535827637

Token 1132: ' de' (ID: 334)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6425624489784241
    2. 'offset' → logprob: -2.2675623893737793
    3. 'possible' → logprob: -2.3925623893737793
    4. 'diff' → logprob: -2.5175623893737793
    5. 'max' → logprob: -3.2675623893737793
    6. '
' → logprob: -3.6425623893737793
    7. '=' → logprob: -3.6425623893737793
    8. '#' → logprob: -3.8925623893737793
    9. 'min' → logprob: -4.267562389373779
    10. 'for' → logprob: -5.017562389373779

Token 1133: ' la' (ID: 557)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.8342263102531433
    2. 'l' → logprob: -1.709226369857788
    3. 'la' → logprob: -1.709226369857788
    4. '#' → logprob: -2.209226369857788
    5. 'pro' → logprob: -2.709226369857788
    6. 'code' → logprob: -5.334226131439209
    7. 'problem' → logprob: -5.959226131439209
    8. 'proble' → logprob: -5.959226131439209
    9. 'len' → logprob: -6.084226131439209
    10. 'prob' → logprob: -6.584226131439209

Token 1134: ' tâche' (ID: 135461)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pro' → logprob: -1.04908287525177
    2. 'problem' → logprob: -1.42408287525177
    3. '#' → logprob: -1.54908287525177
    4. 'proble' → logprob: -1.67408287525177
    5. 'solution' → logprob: -6.1740827560424805
    6. 'prob' → logprob: -6.7990827560424805
    7. ' problème' → logprob: -7.0490827560424805
    8. 'programme' → logprob: -7.1740827560424805
    9. 'pb' → logprob: -7.5490827560424805
    10. 'code' → logprob: -7.5490827560424805

Token 1135: ')
' (ID: 446)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8974629640579224
    2. 'diff' → logprob: -1.7724629640579224
    3. 'possible' → logprob: -2.022462844848633
    4. 'offset' → logprob: -2.897462844848633
    5. 'min' → logprob: -2.897462844848633
    6. 'delta' → logprob: -3.397462844848633
    7. 'shift' → logprob: -3.522462844848633
    8. 'max' → logprob: -4.147462844848633
    9. 'poss' → logprob: -4.397462844848633
    10. 'ans' → logprob: -4.397462844848633

Token 1136: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7030524015426636
    2. 'ans' → logprob: -1.8280524015426636
    3. 'res' → logprob: -2.203052520751953
    4. 'count' → logprob: -2.953052520751953
    5. 'diff' → logprob: -3.578052520751953
    6. 'answer' → logprob: -3.953052520751953
    7. 'low' → logprob: -4.203052520751953
    8. 'possible' → logprob: -4.203052520751953
    9. 'poss' → logprob: -4.453052520751953
    10. 'lower' → logprob: -4.828052520751953

Token 1137: ' Pour' (ID: 13931)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.6691850423812866
    2. 'diff' → logprob: -1.7941850423812866
    3. 'res' → logprob: -1.9191850423812866
    4. 'if' → logprob: -2.169185161590576
    5. 'offset' → logprob: -3.044185161590576
    6. 'count' → logprob: -3.169185161590576
    7. 'low' → logprob: -3.294185161590576
    8. 'answer' → logprob: -3.544185161590576
    9. 'delta' → logprob: -3.544185161590576
    10. 'min' → logprob: -3.669185161590576

Token 1138: ' chaque' (ID: 21194)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.3356719017028809
    2. 'diff' → logprob: -1.5856719017028809
    3. 'i' → logprob: -2.710671901702881
    4. 'ans' → logprob: -3.085671901702881
    5. 'min' → logprob: -3.085671901702881
    6. 'k' → logprob: -3.210671901702881
    7. 's' → logprob: -3.460671901702881
    8. 'val' → logprob: -3.460671901702881
    9. '_x' → logprob: -3.960671901702881
    10. 'd' → logprob: -3.960671901702881

Token 1139: ' valeur' (ID: 41664)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.479840487241745
    2. 'val' → logprob: -2.4798405170440674
    3. 'i' → logprob: -2.6048405170440674
    4. 'delta' → logprob: -3.1048405170440674
    5. 'possible' → logprob: -3.1048405170440674
    6. 's' → logprob: -3.8548405170440674
    7. 'k' → logprob: -3.9798405170440674
    8. 'poss' → logprob: -4.354840278625488
    9. 'solution' → logprob: -4.479840278625488
    10. 't' → logprob: -4.604840278625488

Token 1140: ' t' (ID: 260)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.11382845789194107
    2. 't' → logprob: -3.738828420639038
    3. 'k' → logprob: -4.238828659057617
    4. 'possible' → logprob: -4.363828659057617
    5. 'd' → logprob: -4.488828659057617
    6. 'v' → logprob: -4.613828659057617
    7. 'val' → logprob: -4.738828659057617
    8. 's' → logprob: -5.613828659057617
    9. 'in' → logprob: -5.613828659057617
    10. '_x' → logprob: -5.863828659057617

Token 1141: ' dans' (ID: 2671)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.08203528821468353
    2. ' in' → logprob: -2.5820353031158447
    3. 'dans' → logprob: -6.332035064697266
    4. 'en' → logprob: -7.832035064697266
    5. ' dans' → logprob: -8.332035064697266
    6. 't' → logprob: -8.707035064697266
    7. '0' → logprob: -8.957035064697266
    8. 'from' → logprob: -9.707035064697266
    9. ',' → logprob: -9.832035064697266
    10. ' en' → logprob: -10.207035064697266

Token 1142: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.4418171455617994e-05
    2. ' range' → logprob: -10.375044822692871
    3. '(range' → logprob: -12.250044822692871
    4. 'min' → logprob: -12.250044822692871
    5. '
' → logprob: -13.125044822692871
    6. 'set' → logprob: -14.375044822692871
    7. '[min' → logprob: -15.250044822692871
    8. '	range' → logprob: -15.750044822692871
    9. '   ' → logprob: -15.875044822692871
    10. '0' → logprob: -16.125043869018555

Token 1143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6604069471359253
    2. 'max' → logprob: -1.2854069471359253
    3. '0' → logprob: -2.535407066345215
    4. 'min' → logprob: -2.660407066345215
    5. '-min' → logprob: -4.535407066345215
    6. '-max' → logprob: -4.535407066345215
    7. '(max' → logprob: -4.910407066345215
    8. '-(' → logprob: -4.910407066345215
    9. '(min' → logprob: -5.035407066345215
    10. '-' → logprob: -5.410407066345215

Token 1144: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07910843938589096
    2. 'min' → logprob: -3.829108476638794
    3. ',min' → logprob: -3.829108476638794
    4. '(min' → logprob: -4.454108238220215
    5. ',max' → logprob: -5.329108238220215
    6. ' ,' → logprob: -5.329108238220215
    7. 'max' → logprob: -5.954108238220215
    8. ' min' → logprob: -6.204108238220215
    9. ' -' → logprob: -6.954108238220215
    10. ':min' → logprob: -6.954108238220215

Token 1145: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0013503533555194736
    2. 'max' → logprob: -7.751350402832031
    3. '1' → logprob: -8.376350402832031
    4. ' min' → logprob: -8.501350402832031
    5. '(min' → logprob: -8.626350402832031
    6. '10' → logprob: -9.251350402832031
    7. '100' → logprob: -9.501350402832031
    8. '
' → logprob: -10.251350402832031
    9. '(' → logprob: -10.876350402832031
    10. 'n' → logprob: -11.001350402832031

Token 1146: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22737129032611847
    2. '(min' → logprob: -1.602371335029602
    3. '1' → logprob: -6.9773712158203125
    4. 'min' → logprob: -7.3523712158203125
    5. '(' → logprob: -8.102371215820312
    6. '([' → logprob: -10.852371215820312
    7. ' min' → logprob: -11.852371215820312
    8. '(max' → logprob: -12.102371215820312
    9. '((' → logprob: -12.102371215820312
    10. '(m' → logprob: -12.227371215820312

Token 1147: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.4946434497833252
    2. ',' → logprob: -1.6196434497833252
    3. '-' → logprob: -1.8696434497833252
    4. '(min' → logprob: -2.119643449783325
    5. '-min' → logprob: -2.494643449783325
    6. ' -' → logprob: -2.744643449783325
    7. ',min' → logprob: -2.869643449783325
    8. 'min' → logprob: -3.619643449783325
    9. ' +' → logprob: -3.744643449783325
    10. ']:' → logprob: -3.869643449783325

Token 1148: ' possible' (ID: 4149)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07357116788625717
    2. '+' → logprob: -3.07357120513916
    3. ',' → logprob: -5.07357120513916
    4. ':
' → logprob: -5.44857120513916
    5. 'range' → logprob: -5.69857120513916
    6. 'for' → logprob: -5.82357120513916
    7. '+:' → logprob: -6.07357120513916
    8. ' +' → logprob: -6.57357120513916
    9. '):' → logprob: -7.07357120513916
    10. '-' → logprob: -7.32357120513916

Token 1149: ' sur' (ID: 1512)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06930742412805557
    2. '+' → logprob: -3.444307327270508
    3. ':
' → logprob: -4.319307327270508
    4. ',' → logprob: -4.444307327270508
    5. 'for' → logprob: -5.444307327270508
    6. 'range' → logprob: -6.944307327270508
    7. '(' → logprob: -7.069307327270508
    8. '0' → logprob: -7.319307327270508
    9. '(range' → logprob: -7.569307327270508
    10. '+:' → logprob: -7.694307327270508

Token 1150: ' nums' (ID: 18117)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.031144820153713226
    2. 'even' → logprob: -4.906144618988037
    3. 'odd' → logprob: -5.031144618988037
    4. 'min' → logprob: -5.656144618988037
    5. ' range' → logprob: -5.781144618988037
    6. 't' → logprob: -6.031144618988037
    7. 'nums' → logprob: -6.281144618988037
    8. '(range' → logprob: -6.406144618988037
    9. 'la' → logprob: -7.406144618988037
    10. 'l' → logprob: -7.656144618988037

Token 1151: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.23748797178268433
    2. '[i' → logprob: -2.737488031387329
    3. '0' → logprob: -3.487488031387329
    4. 'even' → logprob: -4.23748779296875
    5. 'for' → logprob: -4.36248779296875
    6. '1' → logprob: -4.48748779296875
    7. '_even' → logprob: -4.48748779296875
    8. ' =' → logprob: -4.73748779296875
    9. 't' → logprob: -4.98748779296875
    10. '   ' → logprob: -5.11248779296875

Token 1152: 'pa' (ID: 3899)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.24591805040836334
    2. 'even' → logprob: -2.245918035507202
    3. '0' → logprob: -2.370918035507202
    4. 'odd' → logprob: -5.370918273925781
    5. ']' → logprob: -5.745918273925781
    6. 'range' → logprob: -5.745918273925781
    7. ':]' → logprob: -6.495918273925781
    8. '::' → logprob: -6.995918273925781
    9. '[' → logprob: -7.120918273925781
    10. ':' → logprob: -7.245918273925781

Token 1153: 'ire' (ID: 594)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.0682090520858765
    2. 'ir' → logprob: -1.0682090520858765
    3. 'ri' → logprob: -1.8182090520858765
    4. 'r' → logprob: -2.818209171295166
    5. 'ire' → logprob: -3.443209171295166
    6. '1' → logprob: -4.318209171295166
    7. 'rt' → logprob: -4.318209171295166
    8. 'even' → logprob: -5.068209171295166
    9. 'ys' → logprob: -5.943209171295166
    10. 'y' → logprob: -6.193209171295166

Token 1154: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11529983580112457
    2. ']+' → logprob: -2.490299940109253
    3. '],' → logprob: -5.115299701690674
    4. 'd' → logprob: -5.115299701690674
    5. '+' → logprob: -5.740299701690674
    6. '0' → logprob: -5.990299701690674
    7. '[' → logprob: -6.615299701690674
    8. '   ' → logprob: -6.615299701690674
    9. 's' → logprob: -7.240299701690674
    10. 'e' → logprob: -7.365299701690674

Token 1155: ' =' (ID: 314)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2431199699640274
    2. ':
' → logprob: -1.9931199550628662
    3. '+' → logprob: -3.368119955062866
    4. ',' → logprob: -3.868119955062866
    5. '-' → logprob: -4.868120193481445
    6. 'if' → logprob: -5.493120193481445
    7. 'for' → logprob: -5.868120193481445
    8. '0' → logprob: -5.993120193481445
    9. 'and' → logprob: -6.368120193481445
    10. 'range' → logprob: -6.993120193481445

Token 1156: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.0269410610198975
    2. 'range' → logprob: -1.4019410610198975
    3. 'nums' → logprob: -2.0269410610198975
    4. 'even' → logprob: -2.5269410610198975
    5. '0' → logprob: -3.2769410610198975
    6. 'min' → logprob: -3.5269410610198975
    7. '[' → logprob: -3.5269410610198975
    8. '[t' → logprob: -3.5269410610198975
    9. '[i' → logprob: -4.276941299438477
    10. ' range' → logprob: -5.026941299438477

Token 1157: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18885739147663116
    2. '+' → logprob: -2.438857316970825
    3. '-' → logprob: -3.563857316970825
    4. ',' → logprob: -3.688857316970825
    5. '+:' → logprob: -5.188857555389404
    6. 'for' → logprob: -5.438857555389404
    7. ':
' → logprob: -5.813857555389404
    8. 'range' → logprob: -5.938857555389404
    9. 'min' → logprob: -6.063857555389404
    10. ' -' → logprob: -6.188857555389404

Token 1158: ' il' (ID: 1793)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1959148645401
    2. 'res' → logprob: -1.9459148645401
    3. 'max' → logprob: -2.0709147453308105
    4. 'ans' → logprob: -2.0709147453308105
    5. 't' → logprob: -2.4459147453308105
    6. 'answer' → logprob: -3.4459147453308105
    7. 'cnt' → logprob: -3.4459147453308105
    8. 'min' → logprob: -3.5709147453308105
    9. 'possible' → logprob: -3.8209147453308105
    10. 'for' → logprob: -3.9459147453308105

Token 1159: ' existe' (ID: 19498)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.30556708574295044
    2. '#' → logprob: -2.8055670261383057
    3. 's' → logprob: -3.3055670261383057
    4. 'print' → logprob: -3.3055670261383057
    5. 'y' → logprob: -3.8055670261383057
    6. ' reste' → logprob: -4.055567264556885
    7. ' faut' → logprob: -4.430567264556885
    8. 'n' → logprob: -4.680567264556885
    9. ' y' → logprob: -4.805567264556885
    10. 'rest' → logprob: -4.930567264556885

Token 1160: ' une' (ID: 2463)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.029798392206430435
    2. ' min' → logprob: -3.9047985076904297
    3. '(min' → logprob: -5.27979850769043
    4. 'max' → logprob: -6.15479850769043
    5. 't' → logprob: -6.77979850769043
    6. '[min' → logprob: -7.90479850769043
    7. ' t' → logprob: -9.77979850769043
    8. ' ' → logprob: -10.15479850769043
    9. '(' → logprob: -10.15479850769043
    10. ' (' → logprob: -10.27979850769043

Token 1161: ' correspond' (ID: 11095)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.23676697909832
    2. '(min' → logprob: -2.361767053604126
    3. 'max' → logprob: -3.361767053604126
    4. 't' → logprob: -3.361767053604126
    5. 'print' → logprob: -4.611766815185547
    6. '[min' → logprob: -5.236766815185547
    7. '(max' → logprob: -5.486766815185547
    8. ' min' → logprob: -5.861766815185547
    9. 'solution' → logprob: -5.986766815185547
    10. '(' → logprob: -6.111766815185547

Token 1162: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.06980025768280029
    2. 'ing' → logprob: -3.44480037689209
    3. 'ence' → logprob: -4.19480037689209
    4. 'ant' → logprob: -4.56980037689209
    5. 't' → logprob: -5.56980037689209
    6. 'ent' → logprob: -6.19480037689209
    7. 'ante' → logprob: -6.31980037689209
    8. 's' → logprob: -6.31980037689209
    9. 'ding' → logprob: -9.44480037689209
    10. '
' → logprob: -9.56980037689209

Token 1163: ' sur' (ID: 1512)
  Prédit: 'entre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'entre' → logprob: -0.7058908343315125
    2. 'avec' → logprob: -2.3308908939361572
    3. '#' → logprob: -2.8308908939361572
    4. ' entre' → logprob: -2.8308908939361572
    5. 'with' → logprob: -2.8308908939361572
    6. 'between' → logprob: -2.8308908939361572
    7. 'sur' → logprob: -3.5808908939361572
    8. 't' → logprob: -3.5808908939361572
    9. 'exact' → logprob: -3.7058908939361572
    10. 'for' → logprob: -3.7058908939361572

Token 1164: ' nums' (ID: 18117)
  Prédit: 'nums'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nums' → logprob: -0.44037654995918274
    2. 'odd' → logprob: -1.3153765201568604
    3. 'min' → logprob: -3.3153765201568604
    4. 't' → logprob: -4.1903767585754395
    5. '[' → logprob: -4.5653767585754395
    6. 'l' → logprob: -5.3153767585754395
    7. 'range' → logprob: -5.5653767585754395
    8. 'les' → logprob: -6.0653767585754395
    9. '[min' → logprob: -6.0653767585754395
    10. 'len' → logprob: -6.3153767585754395

Token 1165: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005755288060754538
    2. 'imp' → logprob: -5.380755424499512
    3. 'im' → logprob: -8.380755424499512
    4. 'odd' → logprob: -8.630755424499512
    5. '[d' → logprob: -9.130755424499512
    6. 'pair' → logprob: -9.255755424499512
    7. 'd' → logprob: -10.380755424499512
    8. '[u' → logprob: -10.630755424499512
    9. '[p' → logprob: -10.630755424499512
    10. '_imp' → logprob: -10.630755424499512

Token 1166: 'imp' (ID: 9230)
  Prédit: 'imp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.1821630895137787
    2. 'im' → logprob: -1.807163119316101
    3. 'pa' → logprob: -6.557163238525391
    4. 'pair' → logprob: -8.68216323852539
    5. '
' → logprob: -9.30716323852539
    6. '_imp' → logprob: -9.55716323852539
    7. '```' → logprob: -9.68216323852539
    8. 'p' → logprob: -9.80716323852539
    9. '_im' → logprob: -10.18216323852539
    10. '1' → logprob: -10.18216323852539

Token 1167: 'air' (ID: 1517)
  Prédit: 'air'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'air' → logprob: -0.6417311429977417
    2. 'aire' → logprob: -0.8917311429977417
    3. 'airs' → logprob: -3.7667312622070312
    4. 'ar' → logprob: -4.266731262207031
    5. 'aires' → logprob: -4.266731262207031
    6. 'ari' → logprob: -6.141731262207031
    7. 'a' → logprob: -6.141731262207031
    8. 'are' → logprob: -6.141731262207031
    9. 'pair' → logprob: -6.266731262207031
    10. 'ai' → logprob: -7.516731262207031

Token 1168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01270329300314188
    2. ']+' → logprob: -5.3877034187316895
    3. 's' → logprob: -5.7627034187316895
    4. ']=' → logprob: -6.5127034187316895
    5. '])' → logprob: -7.1377034187316895
    6. 'e' → logprob: -7.5127034187316895
    7. ')' → logprob: -7.5127034187316895
    8. 'es' → logprob: -7.6377034187316895
    9. ']+=' → logprob: -8.887702941894531
    10. ']
' → logprob: -8.887702941894531

Token 1169: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1433214396238327
    2. ' =' → logprob: -2.7683215141296387
    3. '#' → logprob: -3.3933215141296387
    4. '=[' → logprob: -4.893321514129639
    5. '[' → logprob: -5.393321514129639
    6. 's' → logprob: -5.393321514129639
    7. '0' → logprob: -5.768321514129639
    8. 'for' → logprob: -5.893321514129639
    9. 't' → logprob: -6.268321514129639
    10. 'dans' → logprob: -6.643321514129639

Token 1170: ' t' (ID: 260)
  Prédit: '[min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[min' → logprob: -0.6269668936729431
    2. 'min' → logprob: -1.126966953277588
    3. 's' → logprob: -2.376966953277588
    4. '[s' → logprob: -3.876966953277588
    5. '[' → logprob: -5.251966953277588
    6. 't' → logprob: -5.626966953277588
    7. '{' → logprob: -5.751966953277588
    8. ' min' → logprob: -6.001966953277588
    9. '{s' → logprob: -6.251966953277588
    10. '(min' → logprob: -6.251966953277588

Token 1171: ''
' (ID: 2207)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7675884962081909
    2. ' -' → logprob: -1.017588496208191
    3. '<|end|>' → logprob: -3.2675886154174805
    4. ',' → logprob: -3.6425886154174805
    5. '+' → logprob: -3.6425886154174805
    6. '#' → logprob: -4.5175886154174805
    7. '-range' → logprob: -4.6425886154174805
    8. ' +' → logprob: -4.6425886154174805
    9. 's' → logprob: -4.7675886154174805
    10. 'min' → logprob: -5.0175886154174805

Token 1172: 'ans' (ID: 616)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.24912551045417786
    2. '+' → logprob: -2.4991254806518555
    3. '-' → logprob: -2.9991254806518555
    4. 'min' → logprob: -3.6241254806518555
    5. 't' → logprob: -3.8741254806518555
    6. ' =' → logprob: -5.2491254806518555
    7. '=' → logprob: -5.3741254806518555
    8. '+
' → logprob: -5.3741254806518555
    9. 'for' → logprob: -5.6241254806518555
    10. '#
' → logprob: -5.9991254806518555

Token 1173: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16099831461906433
    2. '=' → logprob: -1.9109983444213867
    3. '_' → logprob: -7.410998344421387
    4. 's' → logprob: -9.035998344421387
    5. ' ' → logprob: -11.035998344421387
    6. '_count' → logprob: -11.910998344421387
    7. ' +=' → logprob: -11.910998344421387
    8. '_space' → logprob: -12.160998344421387
    9. ' ' → logprob: -13.285998344421387
    10. '  ' → logprob: -13.285998344421387

Token 1174: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4691980481147766
    2. 'min' → logprob: -1.3441979885101318
    3. '0' → logprob: -2.219197988510132
    4. '(min' → logprob: -6.594198226928711
    5. '(max' → logprob: -6.594198226928711
    6. ' max' → logprob: -7.344198226928711
    7. ' min' → logprob: -7.719198226928711
    8. '(' → logprob: -7.719198226928711
    9. 'float' → logprob: -8.344198226928711
    10. ' ' → logprob: -8.469198226928711

Token 1175: '1' (ID: 16)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5661986470222473
    2. 'min' → logprob: -1.0661985874176025
    3. '0' → logprob: -2.5661985874176025
    4. '(min' → logprob: -5.441198825836182
    5. '(max' → logprob: -5.691198825836182
    6. 'print' → logprob: -6.691198825836182
    7. '(' → logprob: -7.066198825836182
    8. '1' → logprob: -7.316198825836182
    9. 'str' → logprob: -8.691198348999023
    10. '-' → logprob: -9.191198348999023

Token 1176: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.11063672602176666
    2. '
' → logprob: -2.7356367111206055
    3. '<|end|>' → logprob: -3.9856367111206055
    4. ' +' → logprob: -4.3606367111206055
    5. ' ' → logprob: -5.8606367111206055
    6. '+
' → logprob: -6.1106367111206055
    7. 'for' → logprob: -6.6106367111206055
    8. 'if' → logprob: -7.9856367111206055
    9. ' 
' → logprob: -8.360636711120605
    10. '#' → logprob: -8.610636711120605

Token 1177: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.03309689462184906
    2. 'max' → logprob: -3.5330967903137207
    3. '(min' → logprob: -5.783096790313721
    4. ' min' → logprob: -8.908097267150879
    5. '(max' → logprob: -9.283097267150879
    6. 'abs' → logprob: -11.783097267150879
    7. '(' → logprob: -11.908097267150879
    8. ' max' → logprob: -11.908097267150879
    9. '[min' → logprob: -12.658097267150879
    10. ' ' → logprob: -13.158097267150879

Token 1178: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.01339374203234911
    2. 'max' → logprob: -4.513393878936768
    3. '(min' → logprob: -6.388393878936768
    4. ' min' → logprob: -7.763393878936768
    5. 'abs' → logprob: -8.63839340209961
    6. '(max' → logprob: -10.63839340209961
    7. '[min' → logprob: -11.76339340209961
    8. '
' → logprob: -11.88839340209961
    9. ' max' → logprob: -12.13839340209961
    10. '(' → logprob: -13.01339340209961

Token 1179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31431183218955994
    2. '(min' → logprob: -1.8143118619918823
    3. '1' → logprob: -2.3143117427825928
    4. '(' → logprob: -5.064311981201172
    5. 'min' → logprob: -6.564311981201172
    6. ' min' → logprob: -9.814311981201172
    7. '([' → logprob: -10.689311981201172
    8. '(
' → logprob: -11.314311981201172
    9. '[min' → logprob: -11.439311981201172
    10. ' (' → logprob: -11.439311981201172

Token 1180: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5826725959777832
    2. ' -' → logprob: -0.8326725959777832
    3. '-min' → logprob: -5.082672595977783
    4. ' if' → logprob: -8.707672119140625
    5. 'min' → logprob: -9.707672119140625
    6. '+' → logprob: -9.832672119140625
    7. '
' → logprob: -9.957672119140625
    8. ' min' → logprob: -10.082672119140625
    9. ')' → logprob: -10.582672119140625
    10. 'if' → logprob: -10.957672119140625

Token 1181: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014048899174667895
    2. ' ' → logprob: -9.500140190124512
    3. 'min' → logprob: -9.750140190124512
    4. 'max' → logprob: -12.500140190124512
    5. ' min' → logprob: -13.875140190124512
    6. '-' → logprob: -14.375140190124512
    7. '(min' → logprob: -14.875140190124512
    8. '0' → logprob: -14.937640190124512
    9. '(' → logprob: -15.000140190124512
    10. '   ' → logprob: -15.250140190124512

Token 1182: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.412610233994201e-05
    2. 'min' → logprob: -10.250094413757324
    3. ' ' → logprob: -10.500094413757324
    4. 'max' → logprob: -10.500094413757324
    5. '0' → logprob: -13.875094413757324
    6. '-' → logprob: -14.375094413757324
    7. '(' → logprob: -14.500094413757324
    8. ' min' → logprob: -14.750094413757324
    9. ' max' → logprob: -14.875094413757324
    10. '(min' → logprob: -15.687594413757324

Token 1183: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4022458493709564
    2. '+' → logprob: -1.9022458791732788
    3. ' +' → logprob: -1.9022458791732788
    4. ' if' → logprob: -3.6522457599639893
    5. 'if' → logprob: -5.777245998382568
    6. '<|end|>' → logprob: -6.027245998382568
    7. ' -' → logprob: -7.527245998382568
    8. ' )' → logprob: -8.52724552154541
    9. ')+' → logprob: -8.90224552154541
    10. '#' → logprob: -9.27724552154541

Token 1184: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1653384119272232
    2. ' +' → logprob: -1.915338397026062
    3. 'if' → logprob: -5.915338516235352
    4. '<|end|>' → logprob: -6.790338516235352
    5. ' if' → logprob: -7.540338516235352
    6. 'print' → logprob: -7.790338516235352
    7. '
' → logprob: -9.040338516235352
    8. '#' → logprob: -9.415338516235352
    9. '+#' → logprob: -10.165338516235352
    10. '+
' → logprob: -10.790338516235352

Token 1185: ' (' (ID: 350)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12981630861759186
    2. '(min' → logprob: -2.1298162937164307
    3. ' min' → logprob: -6.62981653213501
    4. 'max' → logprob: -7.25481653213501
    5. '(' → logprob: -7.75481653213501
    6. ' (' → logprob: -8.379816055297852
    7. '(max' → logprob: -8.879816055297852
    8. '(m' → logprob: -10.629816055297852
    9. 'int' → logprob: -12.004816055297852
    10. '1' → logprob: -12.129816055297852

Token 1186: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004467269871383905
    2. ' min' → logprob: -6.004467487335205
    3. '(min' → logprob: -6.754467487335205
    4. 'max' → logprob: -7.129467487335205
    5. ' (' → logprob: -12.004467010498047
    6. '
' → logprob: -12.504467010498047
    7. '(' → logprob: -12.879467010498047
    8. ' max' → logprob: -13.129467010498047
    9. '(max' → logprob: -13.254467010498047
    10. '   ' → logprob: -13.504467010498047

Token 1187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '(min' → logprob: -12.000014305114746
    3. '0' → logprob: -13.125014305114746
    4. '
' → logprob: -13.250014305114746
    5. 'min' → logprob: -13.500014305114746
    6. ' ' → logprob: -13.750014305114746
    7. '(' → logprob: -14.375014305114746
    8. ')' → logprob: -15.875014305114746
    9. '=min' → logprob: -15.875014305114746
    10. ' -' → logprob: -16.25001335144043

Token 1188: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.745079517364502
    2. '-' → logprob: -0.870079517364502
    3. ')' → logprob: -2.245079517364502
    4. '<|end|>' → logprob: -7.995079517364502
    5. ' )' → logprob: -10.495079040527344
    6. '#' → logprob: -10.495079040527344
    7. ' ' → logprob: -10.870079040527344
    8. '+' → logprob: -11.245079040527344
    9. '//' → logprob: -12.245079040527344
    10. ' ' → logprob: -12.370079040527344

Token 1189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008664444088935852
    2. ' ' → logprob: -4.758664608001709
    3. '0' → logprob: -10.00866413116455
    4. '2' → logprob: -13.00866413116455
    5. ')' → logprob: -14.38366413116455
    6. '(' → logprob: -14.88366413116455
    7. '   ' → logprob: -14.88366413116455
    8. '
' → logprob: -15.19616413116455
    9. 'min' → logprob: -15.32116413116455
    10. '-' → logprob: -15.63366413116455

Token 1190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.85104202805087e-05
    2. ' ' → logprob: -9.625078201293945
    3. '0' → logprob: -11.375078201293945
    4. 'min' → logprob: -15.000078201293945
    5. '(' → logprob: -15.750078201293945
    6. ')' → logprob: -15.750078201293945
    7. '2' → logprob: -16.000078201293945
    8. ' min' → logprob: -16.625078201293945
    9. '
' → logprob: -16.750078201293945
    10. '```' → logprob: -17.250078201293945

Token 1191: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004544519819319248
    2. '+' → logprob: -5.629544734954834
    3. ' )' → logprob: -7.629544734954834
    4. ' +' → logprob: -8.129544258117676
    5. '#' → logprob: -10.379544258117676
    6. ')#' → logprob: -10.504544258117676
    7. '<|end|>' → logprob: -10.629544258117676
    8. '-' → logprob: -10.629544258117676
    9. ' -' → logprob: -10.879544258117676
    10. ' if' → logprob: -11.504544258117676

Token 1192: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1193: '(max' (ID: 17178)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -7.100059156073257e-05
    2. '(' → logprob: -9.625070571899414
    3. 'ans' → logprob: -12.875070571899414
    4. ' (' → logprob: -13.375070571899414
    5. '(max' → logprob: -15.625070571899414
    6. '((' → logprob: -15.875070571899414
    7. '(
' → logprob: -15.875070571899414
    8. '()' → logprob: -16.125070571899414
    9. '(int' → logprob: -16.375070571899414
    10. '(answer' → logprob: -16.750070571899414

Token 1194: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000553151941858232
    2. '(ans' → logprob: -7.500553131103516
    3. 'ans' → logprob: -16.875553131103516
    4. '(
' → logprob: -17.000553131103516
    5. ' (' → logprob: -17.125553131103516
    6. ')' → logprob: -18.875553131103516
    7. '((' → logprob: -19.000553131103516
    8. '0' → logprob: -20.000553131103516
    9. '(

' → logprob: -20.875553131103516
    10. '(-' → logprob: -21.125553131103516

Token 1195: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6225501894950867
    2. 'ans' → logprob: -0.9975501894950867
    3. '(ans' → logprob: -2.6225502490997314
    4. '(' → logprob: -3.9975502490997314
    5. '1' → logprob: -5.622550010681152
    6. ' ans' → logprob: -10.247550010681152
    7. '	ans' → logprob: -12.247550010681152
    8. ')' → logprob: -12.622550010681152
    9. '[' → logprob: -13.497550010681152
    10. '_ans' → logprob: -13.622550010681152

Token 1196: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ' ,' → logprob: -11.000042915344238
    3. ',
' → logprob: -11.250042915344238
    4. '1' → logprob: -12.000042915344238
    5. '))' → logprob: -12.500042915344238
    6. ')' → logprob: -13.250042915344238
    7. '(ans' → logprob: -14.000042915344238
    8. '0' → logprob: -14.750042915344238
    9. 'ans' → logprob: -15.250042915344238
    10. ' ans' → logprob: -16.375043869018555

Token 1197: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -7.684157026233152e-05
    2. ' ans' → logprob: -9.500077247619629
    3. '(ans' → logprob: -13.625077247619629
    4. '0' → logprob: -15.500077247619629
    5. '   ' → logprob: -15.625077247619629
    6. '1' → logprob: -15.625077247619629
    7. '	ans' → logprob: -15.750077247619629
    8. ' ' → logprob: -17.250076293945312
    9. '  ' → logprob: -17.250076293945312
    10. 'int' → logprob: -17.375076293945312

Token 1198: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02980569191277027
    2. '))' → logprob: -3.5298056602478027
    3. ' )' → logprob: -10.154806137084961
    4. ')))' → logprob: -11.529806137084961
    5. '+' → logprob: -12.779806137084961
    6. ')#' → logprob: -13.904806137084961
    7. ')
' → logprob: -14.529806137084961
    8. '})' → logprob: -14.654806137084961
    9. ')`' → logprob: -14.654806137084961
    10. ')}' → logprob: -15.154806137084961


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1196
Tokens correctement prédits (1ère position, stricte): 355
Tokens correctement prédits (1ère position, avec adaptation): 388
Tokens correctement prédits (top 10): 814
Précision stricte (1ère position): 29.68%
Précision adaptée (1ère position): 32.44%
Précision (top 10): 68.06%
================================================================================
