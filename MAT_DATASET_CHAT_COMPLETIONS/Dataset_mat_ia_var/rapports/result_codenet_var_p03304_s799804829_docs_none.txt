================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n, m, d = map(int, input().split())
if d == 0:
    p = n
else:
    p = n * 2 - d * 2
r = p / (n * n)
a = r * (m - 1)
print(round(a, 8))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' m' (ID: 284)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.45533257722854614
    2. ',' → logprob: -1.0803325176239014
    3. ' =' → logprob: -3.7053325176239014
    4. ')' → logprob: -7.4553327560424805
    5. ' ,' → logprob: -8.33033275604248
    6. ';' → logprob: -8.70533275604248
    7. '```' → logprob: -8.83033275604248
    8. '[' → logprob: -8.95533275604248
    9. ',
' → logprob: -9.20533275604248
    10. ' ' → logprob: -9.83033275604248

Token 4: ' d' (ID: 272)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4816083014011383
    2. '=' → logprob: -0.9816082715988159
    3. ',' → logprob: -4.9816083908081055
    4. ' ' → logprob: -8.481608390808105
    5. ')' → logprob: -8.731608390808105
    6. ';' → logprob: -8.856608390808105
    7. ' ,' → logprob: -9.981608390808105
    8. '.' → logprob: -10.856608390808105
    9. '_' → logprob: -11.856608390808105
    10. '  ' → logprob: -12.231608390808105

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0738074779510498
    2. ' =' → logprob: -2.69880747795105
    3. ',' → logprob: -5.573807716369629
    4. ')' → logprob: -11.073807716369629
    5. ' ' → logprob: -11.198807716369629
    6. ';' → logprob: -11.573807716369629
    7. '_' → logprob: -11.698807716369629
    8. '[' → logprob: -12.448807716369629
    9. '+' → logprob: -13.573807716369629
    10. ':' → logprob: -13.573807716369629

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.4019644856452942
    2. ' ' → logprob: -1.9019644260406494
    3. 'map' → logprob: -2.0269644260406494
    4. '0' → logprob: -4.0269646644592285
    5. 'input' → logprob: -4.1519646644592285
    6. ' input' → logprob: -4.1519646644592285
    7. ' list' → logprob: -8.27696418762207
    8. '1' → logprob: -8.90196418762207
    9. ' n' → logprob: -9.27696418762207
    10. 'list' → logprob: -9.90196418762207

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0060144755989313126
    2. '(lambda' → logprob: -5.631014347076416
    3. '```' → logprob: -7.131014347076416
    4. '(int' → logprob: -7.381014347076416
    5. '<|end|>' → logprob: -8.131014823913574
    6. '(str' → logprob: -9.006014823913574
    7. '(input' → logprob: -9.756014823913574
    8. ')' → logprob: -9.881014823913574
    9. '(user' → logprob: -10.256014823913574
    10. '(
' → logprob: -10.381014823913574

Token 8: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.18274126946926117
    2. '(' → logprob: -1.9327412843704224
    3. ')' → logprob: -3.932741165161133
    4. '(int' → logprob: -6.807741165161133
    5. '(str' → logprob: -7.057741165161133
    6. '(user' → logprob: -9.182741165161133
    7. 'input' → logprob: -9.307741165161133
    8. '```' → logprob: -9.307741165161133
    9. '(data' → logprob: -9.807741165161133
    10. '=input' → logprob: -10.557741165161133

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5761085152626038
    2. ' input' → logprob: -0.8261085152626038
    3. '(input' → logprob: -8.701108932495117
    4. ')' → logprob: -13.576108932495117
    5. ',input' → logprob: -14.201108932495117
    6. '=input' → logprob: -14.826108932495117
    7. '<input' → logprob: -15.576108932495117
    8. '```' → logprob: -16.576108932495117
    9. '[input' → logprob: -16.951108932495117
    10. ' )' → logprob: -17.076108932495117

Token 10: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5936318635940552
    2. '())' → logprob: -1.0936318635940552
    3. ')' → logprob: -2.9686317443847656
    4. '(' → logprob: -2.9686317443847656
    5. '().' → logprob: -5.843631744384766
    6. '());' → logprob: -6.968631744384766
    7. '(()' → logprob: -6.968631744384766
    8. '();)' → logprob: -7.218631744384766
    9. '(input' → logprob: -7.593631744384766
    10. '('' → logprob: -7.718631744384766

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001953371800482273
    2. 'strip' → logprob: -6.251953601837158
    3. 'rstrip' → logprob: -10.876953125
    4. ' split' → logprob: -13.001953125
    5. '(split' → logprob: -13.376953125
    6. ')' → logprob: -13.501953125
    7. 'spl' → logprob: -15.876953125
    8. 's' → logprob: -16.001953125
    9. 'read' → logprob: -16.126953125
    10. '```' → logprob: -16.251953125

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08967763185501099
    2. '())' → logprob: -2.589677572250366
    3. '))' → logprob: -4.714677810668945
    4. '()' → logprob: -6.839677810668945
    5. '()))' → logprob: -8.464677810668945
    6. '`)' → logprob: -8.839677810668945
    7. '(' → logprob: -8.839677810668945
    8. '('' → logprob: -10.339677810668945
    9. '```' → logprob: -10.589677810668945
    10. ')))' → logprob: -11.214677810668945

Token 13: 'if' (ID: 366)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3418754041194916
    2. 'if' → logprob: -2.2168753147125244
    3. 'for' → logprob: -2.7168753147125244
    4. 'x' → logprob: -3.7168753147125244
    5. 'max' → logprob: -4.4668755531311035
    6. 's' → logprob: -4.5918755531311035
    7. 'r' → logprob: -4.5918755531311035
    8. '\n' → logprob: -4.5918755531311035
    9. 't' → logprob: -5.0918755531311035
    10. 'result' → logprob: -5.0918755531311035

Token 14: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.22403284907341003
    2. ' ' → logprob: -2.2240328788757324
    3. ' d' → logprob: -2.5990328788757324
    4. 'n' → logprob: -4.224032878875732
    5. 'd' → logprob: -6.224032878875732
    6. ' m' → logprob: -6.849032878875732
    7. ' not' → logprob: -8.849032402038574
    8. ' (' → logprob: -8.974032402038574
    9. 'm' → logprob: -9.974032402038574
    10. ' ' → logprob: -9.974032402038574

Token 15: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3080498278141022
    2. ' ==' → logprob: -2.3080499172210693
    3. ' <' → logprob: -2.4330499172210693
    4. ' ' → logprob: -3.3080499172210693
    5. ' <=' → logprob: -3.8080499172210693
    6. ' >=' → logprob: -4.80804967880249
    7. '>' → logprob: -5.05804967880249
    8. '==' → logprob: -6.18304967880249
    9. '<' → logprob: -7.18304967880249
    10. ' !=' → logprob: -7.55804967880249

Token 16: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.22552382946014404
    2. ' ' → logprob: -1.600523829460144
    3. '1' → logprob: -9.225523948669434
    4. '=' → logprob: -11.975523948669434
    5. ''' → logprob: -13.850523948669434
    6. ' n' → logprob: -14.100523948669434
    7. ')' → logprob: -14.225523948669434
    8. 'n' → logprob: -14.475523948669434
    9. '>' → logprob: -14.475523948669434
    10. '">' → logprob: -14.975523948669434

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0028689466416835785
    2. ' ' → logprob: -5.877869129180908
    3. '1' → logprob: -9.87786865234375
    4. '=' → logprob: -12.00286865234375
    5. 'n' → logprob: -12.87786865234375
    6. ')' → logprob: -13.25286865234375
    7. '-' → logprob: -15.00286865234375
    8. '>' → logprob: -15.31536865234375
    9. ' n' → logprob: -15.56536865234375
    10. '  ' → logprob: -15.62786865234375

Token 18: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001652796781854704
    2. ' :' → logprob: -8.750164985656738
    3. ':
' → logprob: -12.375164985656738
    4. ':return' → logprob: -14.000164985656738
    5. ':**' → logprob: -15.000164985656738
    6. ',' → logprob: -15.125164985656738
    7. '):' → logprob: -15.250164985656738
    8. '>' → logprob: -16.000165939331055
    9. '>:' → logprob: -16.125165939331055
    10. '+:' → logprob: -16.375165939331055

Token 19: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7611499428749084
    2. 'print' → logprob: -1.2611498832702637
    3. '   ' → logprob: -1.8861498832702637
    4. '    ' → logprob: -3.0111498832702637
    5. ' ' → logprob: -3.6361498832702637
    6. '\n' → logprob: -4.761149883270264
    7. ',' → logprob: -5.636149883270264
    8. ':' → logprob: -6.011149883270264
    9. ' n' → logprob: -6.386149883270264
    10. '    
' → logprob: -7.011149883270264

Token 20: ' p' (ID: 275)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4557417631149292
    2. ' print' → logprob: -1.0807417631149292
    3. ' ' → logprob: -4.580741882324219
    4. ' n' → logprob: -4.955741882324219
    5. '    ' → logprob: -5.580741882324219
    6. '0' → logprob: -6.080741882324219
    7. 'n' → logprob: -6.455741882324219
    8. '   ' → logprob: -8.455741882324219
    9. ' \' → logprob: -8.580741882324219
    10. ''' → logprob: -8.705741882324219

Token 21: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -5.200166469876422e-06
    2. '_r' → logprob: -13.250004768371582
    3. 'print' → logprob: -13.500004768371582
    4. ' r' → logprob: -14.375004768371582
    5. 'rin' → logprob: -14.375004768371582
    6. '=r' → logprob: -15.875004768371582
    7. '=' → logprob: -15.875004768371582
    8. '   ' → logprob: -16.2500057220459
    9. '```' → logprob: -16.2500057220459
    10. 'riv' → logprob: -16.5000057220459

Token 22: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1653571128845215
    2. '0' → logprob: -1.2903571128845215
    3. '1' → logprob: -1.2903571128845215
    4. ' n' → logprob: -3.1653571128845215
    5. ' ' → logprob: -3.2903571128845215
    6. '[n' → logprob: -3.7903571128845215
    7. '[' → logprob: -4.1653571128845215
    8. ' [' → logprob: -4.9153571128845215
    9. ''' → logprob: -5.9153571128845215
    10. '"' → logprob: -5.9153571128845215

Token 23: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -1.522721767425537
    2. 'else' → logprob: -1.772721767425537
    3. '*' → logprob: -2.022721767425537
    4. '//' → logprob: -2.397721767425537
    5. '%' → logprob: -2.647721767425537
    6. ' //' → logprob: -2.897721767425537
    7. '+' → logprob: -3.022721767425537
    8. '#' → logprob: -3.272721767425537
    9. ' *' → logprob: -3.272721767425537
    10. ' /' → logprob: -3.522721767425537

Token 24: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.36916953325271606
    2. ' else' → logprob: -1.3691694736480713
    3. 'elif' → logprob: -3.3691694736480713
    4. '-' → logprob: -4.99416971206665
    5. ' elif' → logprob: -5.49416971206665
    6. '*' → logprob: -6.11916971206665
    7. '<|end|>' → logprob: -6.24416971206665
    8. '+' → logprob: -7.11916971206665
    9. '```' → logprob: -7.49416971206665
    10. '%' → logprob: -7.61916971206665

Token 25: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011908221058547497
    2. ' :' → logprob: -7.501190662384033
    3. '   ' → logprob: -7.751190662384033
    4. ' p' → logprob: -9.001191139221191
    5. ',' → logprob: -10.751191139221191
    6. ':
' → logprob: -10.751191139221191
    7. '    ' → logprob: -11.626191139221191
    8. 'p' → logprob: -12.626191139221191
    9. ' n' → logprob: -12.626191139221191
    10. ' ' → logprob: -12.876191139221191

Token 26: '   ' (ID: 271)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.9094077348709106
    2. ' ' → logprob: -1.4094077348709106
    3. '    ' → logprob: -1.4094077348709106
    4. ' n' → logprob: -2.784407615661621
    5. ' m' → logprob: -4.159407615661621
    6. '   ' → logprob: -4.659407615661621
    7. '1' → logprob: -5.159407615661621
    8. ' 
' → logprob: -6.034407615661621
    9. ' (' → logprob: -6.284407615661621
    10. ' ' → logprob: -6.534407615661621

Token 27: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.0153112411499023
    2. 'p' (adapté à ' p') → logprob: -1.6403112411499023
    3. '1' → logprob: -2.5153112411499023
    4. ' ' → logprob: -2.6403112411499023
    5. ' m' → logprob: -2.7653112411499023
    6. ' min' → logprob: -2.8903112411499023
    7. 'm' → logprob: -3.2653112411499023
    8. 'min' → logprob: -3.5153112411499023
    9. '0' → logprob: -3.7653112411499023
    10. ' n' → logprob: -3.8903112411499023

Token 28: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03013342060148716
    2. '=' → logprob: -3.5301334857940674
    3. ' +=' → logprob: -8.655133247375488
    4. ' ' → logprob: -10.155133247375488
    5. ' *=' → logprob: -10.280133247375488
    6. '   ' → logprob: -10.405133247375488
    7. ' -=' → logprob: -10.655133247375488
    8. ',' → logprob: -10.780133247375488
    9. '-' → logprob: -12.030133247375488
    10. '*' → logprob: -12.155133247375488

Token 29: ' n' (ID: 297)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -1.1550192832946777
    2. 'm' → logprob: -1.6550192832946777
    3. ' min' → logprob: -1.9050192832946777
    4. 'min' → logprob: -2.2800192832946777
    5. ' n' → logprob: -2.4050192832946777
    6. 'n' → logprob: -3.5300192832946777
    7. '1' → logprob: -3.6550192832946777
    8. ' ' → logprob: -3.6550192832946777
    9. ' (' → logprob: -3.7800192832946777
    10. '(n' → logprob: -4.655019283294678

Token 30: ' *' (ID: 425)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.197892665863037
    2. '*' → logprob: -1.322892665863037
    3. '+' → logprob: -1.697892665863037
    4. ' +' → logprob: -2.572892665863037
    5. ' *' → logprob: -2.572892665863037
    6. ' -' → logprob: -3.072892665863037
    7. ' if' → logprob: -4.447892665863037
    8. ' ' → logprob: -4.947892665863037
    9. '//' → logprob: -5.197892665863037
    10. ' //' → logprob: -5.322892665863037

Token 31: ' ' (ID: 220)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.6599246263504028
    2. '(m' → logprob: -0.9099246263504028
    3. 'd' → logprob: -4.034924507141113
    4. '(d' → logprob: -4.159924507141113
    5. '(' → logprob: -4.409924507141113
    6. ' m' → logprob: -5.034924507141113
    7. '2' → logprob: -5.159924507141113
    8. '(n' → logprob: -5.159924507141113
    9. ' (' → logprob: -5.159924507141113
    10. 'min' → logprob: -5.909924507141113

Token 32: '2' (ID: 17)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.675948977470398
    2. '(m' → logprob: -0.925948977470398
    3. '(n' → logprob: -3.3009490966796875
    4. 'd' → logprob: -4.4259490966796875
    5. '(' → logprob: -4.6759490966796875
    6. 'min' → logprob: -4.6759490966796875
    7. '(d' → logprob: -4.9259490966796875
    8. '2' → logprob: -4.9259490966796875
    9. 'pow' → logprob: -5.5509490966796875
    10. '((' → logprob: -5.8009490966796875

Token 33: ' -' (ID: 533)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 34: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.22536438703536987
    2. '1' → logprob: -1.7253644466400146
    3. 'm' → logprob: -4.4753642082214355
    4. ' d' → logprob: -4.9753642082214355
    5. '2' → logprob: -5.7253642082214355
    6. ' ' → logprob: -6.4753642082214355
    7. ' m' → logprob: -8.225364685058594
    8. '(d' → logprob: -9.475364685058594
    9. '(m' → logprob: -9.475364685058594
    10. '(' → logprob: -9.850364685058594

Token 35: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.026524724438786507
    2. ' ' → logprob: -3.651524782180786
    3. '2' → logprob: -8.776524543762207
    4. '-' → logprob: -10.526524543762207
    5. ' -' → logprob: -10.901524543762207
    6. '(' → logprob: -11.651524543762207
    7. 'm' → logprob: -11.901524543762207
    8. ' m' → logprob: -13.401524543762207
    9. ' (' → logprob: -13.401524543762207
    10. '<|end|>' → logprob: -14.026524543762207

Token 37: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024688749108463526
    2. ' ' → logprob: -6.252469062805176
    3. '-' → logprob: -7.877469062805176
    4. ' -' → logprob: -9.627469062805176
    5. '2' → logprob: -9.877469062805176
    6. '<|end|>' → logprob: -10.252469062805176
    7. 'm' → logprob: -12.877469062805176
    8. '+' → logprob: -13.252469062805176
    9. '<|end|>' → logprob: -13.252469062805176
    10. '(' → logprob: -14.627469062805176

Token 38: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 39: 'r' (ID: 81)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: ' =' (ID: 314)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4923771321773529
    2. 'e' → logprob: -1.3673771619796753
    3. ' ' → logprob: -2.7423770427703857
    4. '=' → logprob: -3.6173770427703857
    5. 'es' → logprob: -4.992377281188965
    6. '>' → logprob: -5.242377281188965
    7. 'eturn' → logprob: -5.367377281188965
    8. '/' → logprob: -5.492377281188965
    9. ' =' → logprob: -5.742377281188965
    10. 'a' → logprob: -5.867377281188965

Token 41: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5004922747612
    2. ' p' → logprob: -1.5004923343658447
    3. 'min' → logprob: -3.0004923343658447
    4. 'max' → logprob: -3.3754923343658447
    5. ' min' → logprob: -3.6254923343658447
    6. 'm' → logprob: -4.125492095947266
    7. ' max' → logprob: -4.125492095947266
    8. ' m' → logprob: -5.000492095947266
    9. 'n' → logprob: -5.125492095947266
    10. ' n' → logprob: -5.500492095947266

Token 42: ' /' (ID: 820)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.9869024753570557
    2. '%' → logprob: -1.2369024753570557
    3. ' %' → logprob: -2.2369024753570557
    4. '<|end|>' → logprob: -2.4869024753570557
    5. '//' → logprob: -2.9869024753570557
    6. ' ' → logprob: -3.6119024753570557
    7. ' /' → logprob: -3.7369024753570557
    8. ' if' → logprob: -4.611902236938477
    9. '+' → logprob: -4.736902236938477
    10. ')' → logprob: -5.111902236938477

Token 43: ' (' (ID: 350)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.36101454496383667
    2. '2' → logprob: -1.3610146045684814
    3. 'n' → logprob: -3.2360146045684814
    4. '(n' → logprob: -5.736014366149902
    5. '(m' → logprob: -6.111014366149902
    6. '(' → logprob: -7.486014366149902
    7. ' m' → logprob: -7.736014366149902
    8. ' ' → logprob: -8.361014366149902
    9. '3' → logprob: -8.361014366149902
    10. 'd' → logprob: -9.111014366149902

Token 44: 'n' (ID: 77)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.045339155942201614
    2. 'n' → logprob: -3.2953391075134277
    3. '2' → logprob: -5.545339107513428
    4. ' m' → logprob: -6.670339107513428
    5. '(m' → logprob: -7.420339107513428
    6. '(n' → logprob: -7.545339107513428
    7. '(' → logprob: -7.795339107513428
    8. 'd' → logprob: -8.920339584350586
    9. ' n' → logprob: -8.920339584350586
    10. 'p' → logprob: -9.045339584350586

Token 45: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08724343031644821
    2. '*' → logprob: -3.0872433185577393
    3. ' *' → logprob: -3.7122433185577393
    4. ' )' → logprob: -4.837243556976318
    5. '*m' → logprob: -5.712243556976318
    6. ' -' → logprob: -7.587243556976318
    7. ' +' → logprob: -7.712243556976318
    8. '-' → logprob: -7.962243556976318
    9. ' ' → logprob: -8.21224308013916
    10. '+' → logprob: -8.46224308013916

Token 46: ' n' (ID: 297)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0883805900812149
    2. '2' → logprob: -2.9633805751800537
    3. ' m' → logprob: -3.5883805751800537
    4. 'n' → logprob: -6.463380813598633
    5. ' ' → logprob: -6.463380813598633
    6. 'p' → logprob: -7.088380813598633
    7. '(' → logprob: -7.838380813598633
    8. ')' → logprob: -8.088380813598633
    9. 'd' → logprob: -9.213380813598633
    10. ' n' → logprob: -9.213380813598633

Token 47: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8921695047756657e-05
    2. ' )' → logprob: -11.125028610229492
    3. ')
' → logprob: -11.625028610229492
    4. '))' → logprob: -13.625028610229492
    5. '**' → logprob: -13.750028610229492
    6. '*' → logprob: -13.750028610229492
    7. ')**' → logprob: -15.125028610229492
    8. ')

' → logprob: -15.250028610229492
    9. ')
' → logprob: -15.500028610229492
    10. ')*' → logprob: -15.875028610229492

Token 48: 'a' (ID: 64)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08236117660999298
    2. '<|end|>' → logprob: -2.7073612213134766
    3. '\n' → logprob: -5.582361221313477
    4. ')' → logprob: -5.707361221313477
    5. '
' → logprob: -6.332361221313477
    6. ' print' → logprob: -6.957361221313477
    7. '%' → logprob: -7.332361221313477
    8. '#' → logprob: -7.707361221313477
    9. '*' → logprob: -8.332361221313477
    10. '\' → logprob: -8.457361221313477

Token 49: ' =' (ID: 314)
  Prédit: 'ns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ns' → logprob: -1.0115872621536255
    2. 'bs' → logprob: -1.1365872621536255
    3. 'r' → logprob: -2.636587142944336
    4. ' =' → logprob: -2.636587142944336
    5. '=' → logprob: -2.761587142944336
    6. 'vg' → logprob: -3.136587142944336
    7. 'verage' → logprob: -4.261587142944336
    8. 'm' → logprob: -4.386587142944336
    9. 'print' → logprob: -5.011587142944336
    10. 'b' → logprob: -5.261587142944336

Token 50: ' r' (ID: 428)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.244888186454773
    2. 'r' → logprob: -1.244888186454773
    3. '1' → logprob: -1.994888186454773
    4. 'int' → logprob: -2.7448883056640625
    5. 'min' → logprob: -3.1198883056640625
    6. ' p' → logprob: -3.3698883056640625
    7. 'd' → logprob: -3.3698883056640625
    8. 'm' → logprob: -3.7448883056640625
    9. 'n' → logprob: -3.8698883056640625
    10. 'max' → logprob: -4.2448883056640625

Token 51: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 52: ' (' (ID: 350)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.4785040616989136
    2. 'm' → logprob: -1.2285040616989136
    3. '100' → logprob: -3.853504180908203
    4. ' (' → logprob: -4.228504180908203
    5. ' ' → logprob: -4.228504180908203
    6. '(' → logprob: -4.603504180908203
    7. ' n' → logprob: -5.353504180908203
    8. '(m' → logprob: -5.478504180908203
    9. ' d' → logprob: -5.603504180908203
    10. 'd' → logprob: -5.728504180908203

Token 53: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.03382239118218422
    2. 'n' → logprob: -4.658822536468506
    3. ' m' → logprob: -4.658822536468506
    4. '100' → logprob: -5.783822536468506
    5. 'd' → logprob: -5.908822536468506
    6. '1' → logprob: -6.033822536468506
    7. 'p' → logprob: -6.158822536468506
    8. '2' → logprob: -6.533822536468506
    9. '(' → logprob: -7.533822536468506
    10. '(m' → logprob: -7.658822536468506

Token 54: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06904633343219757
    2. ' -' → logprob: -3.6940462589263916
    3. ' )' → logprob: -4.444046497344971
    4. '-' → logprob: -4.694046497344971
    5. ' +' → logprob: -5.069046497344971
    6. '**' → logprob: -5.694046497344971
    7. ' *' → logprob: -5.694046497344971
    8. '+' → logprob: -5.944046497344971
    9. ' /' → logprob: -6.194046497344971
    10. ' **' → logprob: -6.819046497344971

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2532808482646942
    2. ' ' → logprob: -1.5032808780670166
    3. ' d' → logprob: -7.2532806396484375
    4. 'd' → logprob: -7.8782806396484375
    5. '2' → logprob: -9.878280639648438
    6. ' n' → logprob: -9.878280639648438
    7. ')' → logprob: -10.003280639648438
    8. '0' → logprob: -10.628280639648438
    9. '<|end|>' → logprob: -11.378280639648438
    10. '-' → logprob: -11.503280639648438

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011361661599949002
    2. ' ' → logprob: -7.126136302947998
    3. 'd' → logprob: -8.37613582611084
    4. '2' → logprob: -10.12613582611084
    5. 'm' → logprob: -11.18863582611084
    6. 'n' → logprob: -11.43863582611084
    7. 'a' → logprob: -12.06363582611084
    8. 'r' → logprob: -12.18863582611084
    9. ' d' → logprob: -12.43863582611084
    10. 'p' → logprob: -12.62613582611084

Token 57: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009801658801734447
    2. ' )' → logprob: -5.134801864624023
    3. ' +' → logprob: -5.884801864624023
    4. '+' → logprob: -7.259801864624023
    5. '))' → logprob: -9.509801864624023
    6. ')
' → logprob: -9.509801864624023
    7. ' /' → logprob: -9.759801864624023
    8. '*' → logprob: -10.259801864624023
    9. ' *' → logprob: -11.009801864624023
    10. ' -' → logprob: -11.134801864624023

Token 58: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.18728889524936676
    2. '<|end|>' → logprob: -2.187288999557495
    3. '
' → logprob: -3.312288999557495
    4. '+' → logprob: -4.187288761138916
    5. '\n' → logprob: -6.312288761138916
    6. ' print' → logprob: -6.437288761138916
    7. ')' → logprob: -6.562288761138916
    8. '*' → logprob: -7.312288761138916
    9. '```' → logprob: -8.187289237976074
    10. '#' → logprob: -8.812289237976074

Token 59: '(round' (ID: 75171)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.10023945569992065
    2. '(' → logprob: -2.3502395153045654
    3. '(p' → logprob: -11.225239753723145
    4. '(round' → logprob: -11.600239753723145
    5. '(r' → logprob: -12.100239753723145
    6. '((' → logprob: -13.850239753723145
    7. '(int' → logprob: -14.225239753723145
    8. '('' → logprob: -14.475239753723145
    9. '()' → logprob: -14.475239753723145
    10. '(s' → logprob: -14.725239753723145

Token 60: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0003832445072475821
    2. '(' → logprob: -7.875383377075195
    3. ')' → logprob: -13.750383377075195
    4. '(s' → logprob: -14.500383377075195
    5. ' (' → logprob: -14.625383377075195
    6. '(p' → logprob: -14.750383377075195
    7. '(r' → logprob: -14.875383377075195
    8. '(n' → logprob: -15.500383377075195
    9. 'a' → logprob: -16.750383377075195
    10. '(abs' → logprob: -17.000383377075195

Token 61: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2014353722333908
    2. ')' → logprob: -1.7014353275299072
    3. ')))' → logprob: -11.826435089111328
    4. ',' → logprob: -12.076435089111328
    5. '),' → logprob: -12.326435089111328
    6. ' ))' → logprob: -12.951435089111328
    7. ' )' → logprob: -14.326435089111328
    8. '))
' → logprob: -15.201435089111328
    9. ' ' → logprob: -15.451435089111328
    10. '1' → logprob: -16.076435089111328

Token 62: ' ' (ID: 220)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.5738881826400757
    2. '2' → logprob: -1.1988881826400757
    3. '3' → logprob: -3.0738883018493652
    4. '7' → logprob: -3.5738883018493652
    5. '4' → logprob: -3.6988883018493652
    6. '5' → logprob: -4.323888301849365
    7. ' ' → logprob: -4.573888301849365
    8. '8' → logprob: -5.323888301849365
    9. '9' → logprob: -5.948888301849365
    10. '1' → logprob: -5.948888301849365

Token 63: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.22577032446861267
    2. '7' → logprob: -2.3507702350616455
    3. '2' → logprob: -2.8507702350616455
    4. '5' → logprob: -4.225770473480225
    5. '3' → logprob: -4.350770473480225
    6. '4' → logprob: -4.850770473480225
    7. '10' → logprob: -5.475770473480225
    8. '9' → logprob: -5.475770473480225
    9. '8' → logprob: -5.600770473480225
    10. '1' → logprob: -7.350770473480225

Token 64: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5759416818618774
    2. ')' → logprob: -0.8259416818618774
    3. ')))' → logprob: -13.950942039489746
    4. '))
' → logprob: -14.825942039489746
    5. '),' → logprob: -15.200942039489746
    6. ' )' → logprob: -15.575942039489746
    7. ')
' → logprob: -15.575942039489746
    8. ' ))' → logprob: -15.950942039489746
    9. ')}' → logprob: -17.45094108581543
    10. ')>' → logprob: -17.70094108581543


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 11
Tokens correctement prédits (1ère position, avec adaptation): 11
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 17.74%
Précision adaptée (1ère position): 17.74%
Précision (top 10): 75.81%
================================================================================
