================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:02:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Lit une séquence de nombres entiers, calcule la somme des valeurs absolues et ajuste la somme
    si le nombre de valeurs négatives est impair.

    Si le nombre de valeurs négatives est pair, la somme des valeurs absolues est affichée.
    Si ce nombre est impair, on soustrait deux fois la plus petite valeur absolue à la somme,
    ce qui correspond à retourner un nombre impair de signes négatifs pour minimiser la somme absolue.
    """
    # Lecture du nombre de valeurs à traiter
    n = int(input())
    # Lecture de la liste des entiers
    a = list(map(int, input().split()))

    # Comptage des nombres négatifs dans la liste
    cnt = sum(i < 0 for i in a)
    # Calcul de la somme des valeurs absolues des éléments
    ans = sum(abs(i) for i in a)
    if cnt % 2 == 0:
        # Si le nombre de négatifs est pair, aucune modification n'est nécessaire
        print(ans)
    else:
        # Si le nombre de négatifs est impair, on doit inverser le signe de l'élément de plus petite valeur absolue
        # pour obtenir un résultat optimal, donc on soustrait deux fois cette valeur minimale
        print(ans - 2 * min(abs(i) for i in a))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.24956119060516357
    2. '\n' → logprob: -2.624561309814453
    3. '   ' → logprob: -2.624561309814453
    4. '(' → logprob: -3.499561309814453
    5. ''' → logprob: -4.624561309814453
    6. '```' → logprob: -4.874561309814453
    7. '    
' → logprob: -5.124561309814453
    8. ':' → logprob: -5.374561309814453
    9. ' ' → logprob: -5.749561309814453
    10. '    ' → logprob: -5.874561309814453

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6297418475151062
    2. '   ' → logprob: -1.629741907119751
    3. 'pass' → logprob: -1.629741907119751
    4. 'return' → logprob: -3.254741907119751
    5. '    ' → logprob: -5.004741668701172
    6. '\' → logprob: -5.129741668701172
    7. ' pass' → logprob: -5.129741668701172
    8. '```' → logprob: -5.629741668701172
    9. 'a' → logprob: -6.129741668701172
    10. '\n' → logprob: -6.129741668701172

Token 5: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.1711468696594238
    2. 'This' → logprob: -1.9211468696594238
    3. 'Initialize' → logprob: -2.171146869659424
    4. '"""' → logprob: -2.171146869659424
    5. 'Initial' → logprob: -3.046146869659424
    6. 'Returns' → logprob: -3.046146869659424
    7. 'Doc' → logprob: -3.921146869659424
    8. 'Main' → logprob: -3.921146869659424
    9. 'Run' → logprob: -4.046146869659424
    10. 'Start' → logprob: -4.421146869659424

Token 6: ' Lit' (ID: 45595)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.3756645917892456
    2. 'This' → logprob: -2.125664710998535
    3. 'Initialize' → logprob: -2.125664710998535
    4. 'Run' → logprob: -2.250664710998535
    5. '"""' → logprob: -2.250664710998535
    6. 'Generate' → logprob: -3.250664710998535
    7. 'Initial' → logprob: -3.250664710998535
    8. 'Process' → logprob: -3.375664710998535
    9. 'Main' → logprob: -4.000664710998535
    10. 'Hello' → logprob: -4.250664710998535

Token 7: ' une' (ID: 2463)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.051627520471811295
    2. '   ' → logprob: -4.0516276359558105
    3. 'e' → logprob: -4.5516276359558105
    4. 'r' → logprob: -4.5516276359558105
    5. 'tle' → logprob: -5.6766276359558105
    6. 'ral' → logprob: -5.8016276359558105
    7. 'eral' → logprob: -6.9266276359558105
    8. '  ' → logprob: -7.5516276359558105
    9. 'rale' → logprob: -7.8016276359558105
    10. 'def' → logprob: -7.8016276359558105

Token 8: ' sé' (ID: 7462)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7868155837059021
    2. ' chaîne' → logprob: -0.9118155837059021
    3. 'chaine' → logprob: -3.036815643310547
    4. '   ' → logprob: -3.536815643310547
    5. ' chaine' → logprob: -3.536815643310547
    6. 'cha' → logprob: -4.661815643310547
    7. 'f' → logprob: -5.036815643310547
    8. 's' → logprob: -5.036815643310547
    9. ' string' → logprob: -5.911815643310547
    10. ' ligne' → logprob: -6.286815643310547

Token 9: 'quence' (ID: 6975)
  Prédit: 'quence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quence' → logprob: -0.0037107658572494984
    2. 'q' → logprob: -6.003710746765137
    3. 'ance' → logprob: -6.878710746765137
    4. 'rie' → logprob: -9.878710746765137
    5. 'qu' → logprob: -10.253710746765137
    6. 'quences' → logprob: -10.753710746765137
    7. 'que' → logprob: -11.253710746765137
    8. 'a' → logprob: -11.503710746765137
    9. 'QUENCE' → logprob: -11.753710746765137
    10. '-' → logprob: -11.753710746765137

Token 10: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1722032129764557
    2. ' ' → logprob: -2.422203302383423
    3. ' d' → logprob: -3.422203302383423
    4. 'de' → logprob: -4.797203063964844
    5. ' )' → logprob: -5.797203063964844
    6. '\' → logprob: -5.797203063964844
    7. ' ,' → logprob: -5.922203063964844
    8. '_' → logprob: -6.172203063964844
    9. 'n' → logprob: -6.297203063964844
    10. ',' → logprob: -6.797203063964844

Token 11: ' nombres' (ID: 76205)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.873344898223877
    2. ' caractères' → logprob: -1.748344898223877
    3. 'tokens' → logprob: -1.873344898223877
    4. ' tokens' → logprob: -2.748344898223877
    5. ' chaînes' → logprob: -3.623344898223877
    6. 'str' → logprob: -3.873344898223877
    7. 'texte' → logprob: -4.123344898223877
    8. 'chain' → logprob: -4.123344898223877
    9. 'text' → logprob: -4.498344898223877
    10. ' ' → logprob: -4.623344898223877

Token 12: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.481473833322525
    2. '   ' → logprob: -1.4814738035202026
    3. 's' → logprob: -2.981473922729492
    4. '\n' → logprob: -4.231473922729492
    5. ',' → logprob: -4.481473922729492
    6. 'n' → logprob: -4.606473922729492
    7. ' ' → logprob: -4.731473922729492
    8. '.' → logprob: -4.856473922729492
    9. ' ,' → logprob: -4.856473922729492
    10. '  ' → logprob: -5.356473922729492

Token 13: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.002512285253033042
    2. 'i' → logprob: -6.252512454986572
    3. '```' → logprob: -8.252511978149414
    4. 'ier' → logprob: -8.502511978149414
    5. '   ' → logprob: -9.502511978149414
    6. '       ' → logprob: -11.877511978149414
    7. '`' → logprob: -12.252511978149414
    8. '#' → logprob: -12.877511978149414
    9. 'ières' → logprob: -12.877511978149414
    10. '_i' → logprob: -12.877511978149414

Token 14: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27408838272094727
    2. ' ' → logprob: -2.0240883827209473
    3. '\n' → logprob: -3.6490883827209473
    4. ',' → logprob: -3.8990883827209473
    5. 's' → logprob: -3.8990883827209473
    6. ' et' → logprob: -5.399088382720947
    7. '
' → logprob: -5.399088382720947
    8. '.' → logprob: -5.399088382720947
    9. ' en' → logprob: -5.524088382720947
    10. '    ' → logprob: -5.524088382720947

Token 15: ' calc' (ID: 25691)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3405817449092865
    2. ' et' → logprob: -1.7155817747116089
    3. 'et' → logprob: -3.3405816555023193
    4. ' ' → logprob: -3.5905816555023193
    5. '    ' → logprob: -3.9655816555023193
    6. 's' → logprob: -5.465581893920898
    7. ' puis' → logprob: -5.465581893920898
    8. ' line' → logprob: -5.965581893920898
    9. ' ' → logprob: -6.715581893920898
    10. ',' → logprob: -6.715581893920898

Token 16: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.00014215784904081374
    2. 'ul' → logprob: -9.625142097473145
    3. '\' → logprob: -11.125142097473145
    4. 'u' → logprob: -11.125142097473145
    5. '```' → logprob: -11.125142097473145
    6. 'cule' → logprob: -11.375142097473145
    7. 'ulé' → logprob: -12.750142097473145
    8. '_' → logprob: -12.875142097473145
    9. 'uler' → logprob: -13.125142097473145
    10. '#' → logprob: -13.125142097473145

Token 17: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6239340305328369
    2. ' et' → logprob: -1.373934030532837
    3. 's' → logprob: -2.373934030532837
    4. '   ' → logprob: -3.748934030532837
    5. '```' → logprob: -3.873934030532837
    6. ' l' → logprob: -3.998934030532837
    7. '    ' → logprob: -4.123933792114258
    8. ' la' → logprob: -4.123933792114258
    9. 'e' → logprob: -5.748933792114258
    10. '  ' → logprob: -5.998933792114258

Token 18: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.36939767003059387
    2. ' moyenne' → logprob: -1.2443976402282715
    3. 's' → logprob: -5.3693976402282715
    4. ' fréquence' → logprob: -5.6193976402282715
    5. ' valeur' → logprob: -6.1193976402282715
    6. ' longueur' → logprob: -6.4943976402282715
    7. ' variance' → logprob: -6.6193976402282715
    8. ' ' → logprob: -6.9943976402282715
    9. ' som' → logprob: -7.1193976402282715
    10. ' distance' → logprob: -7.2443976402282715

Token 19: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01167214009910822
    2. '\' → logprob: -5.636672019958496
    3. ' ' → logprob: -5.761672019958496
    4. '    ' → logprob: -7.136672019958496
    5. ',' → logprob: -7.511672019958496
    6. '\n' → logprob: -7.511672019958496
    7. '    
' → logprob: -7.886672019958496
    8. ' des' → logprob: -8.011672019958496
    9. 'e' → logprob: -8.136672019958496
    10. '"' → logprob: -8.261672019958496

Token 20: ' valeurs' (ID: 73668)
  Prédit: ' nombres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombres' → logprob: -0.5977013111114502
    2. 'n' → logprob: -1.8477013111114502
    3. 'élé' → logprob: -1.9727013111114502
    4. ' ent' → logprob: -3.09770131111145
    5. 'ent' → logprob: -3.47270131111145
    6. ' ' → logprob: -4.597701072692871
    7. ' valeurs' → logprob: -4.722701072692871
    8. ' éléments' → logprob: -4.847701072692871
    9. '```' → logprob: -5.097701072692871
    10. 's' → logprob: -5.472701072692871

Token 21: ' absol' (ID: 7374)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12052250653505325
    2. ' ' → logprob: -2.6205224990844727
    3. ' et' → logprob: -4.995522499084473
    4. '    ' → logprob: -5.120522499084473
    5. ' des' → logprob: -5.245522499084473
    6. ',' → logprob: -5.495522499084473
    7. '\n' → logprob: -5.745522499084473
    8. '```' → logprob: -6.245522499084473
    9. 's' → logprob: -6.495522499084473
    10. 'es' → logprob: -6.620522499084473

Token 22: 'ues' (ID: 1406)
  Prédit: 'ol'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ol' → logprob: -0.635594367980957
    2. 'l' → logprob: -1.260594367980957
    3. 'ou' → logprob: -3.260594367980957
    4. '```' → logprob: -3.760594367980957
    5. 'outes' → logprob: -3.885594367980957
    6. 'ues' → logprob: -3.885594367980957
    7. 'utes' → logprob: -4.385594367980957
    8. '   ' → logprob: -4.635594367980957
    9. 'ules' → logprob: -4.885594367980957
    10. 's' → logprob: -5.260594367980957

Token 23: ' et' (ID: 859)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022230254486203194
    2. ' ' → logprob: -4.64723014831543
    3. ',' → logprob: -5.64723014831543
    4. ' et' → logprob: -6.39723014831543
    5. ' des' → logprob: -6.77223014831543
    6. 'e' → logprob: -7.02223014831543
    7. '    ' → logprob: -7.27223014831543
    8. '    
' → logprob: -7.52223014831543
    9. '       ' → logprob: -7.64723014831543
    10. 'de' → logprob: -8.02223014831543

Token 24: ' ajuste' (ID: 94049)
  Prédit: ' retourne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.3066153824329376
    2. '   ' → logprob: -2.0566153526306152
    3. ' return' → logprob: -3.1816153526306152
    4. ' ' → logprob: -4.056615352630615
    5. ' les' → logprob: -4.306615352630615
    6. '\n' → logprob: -4.306615352630615
    7. ' ren' → logprob: -4.556615352630615
    8. ' la' → logprob: -5.431615352630615
    9. ',' → logprob: -5.431615352630615
    10. '\' → logprob: -5.556615352630615

Token 25: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10448891669511795
    2. ' la' → logprob: -3.2294888496398926
    3. ' l' → logprob: -3.6044888496398926
    4. ' ' → logprob: -4.354488849639893
    5. '_' → logprob: -4.479488849639893
    6. ' le' → logprob: -5.479488849639893
    7. '   ' → logprob: -7.229488849639893
    8. ' les' → logprob: -7.354488849639893
    9. 'l' → logprob: -7.604488849639893
    10. 's' → logprob: -7.854488849639893

Token 26: ' somme' (ID: 64484)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6208803653717041
    2. ' valeur' → logprob: -0.8708803653717041
    3. ' ligne' → logprob: -4.870880126953125
    4. ' somme' → logprob: -5.245880126953125
    5. ' indentation' → logprob: -5.745880126953125
    6. ' taille' → logprob: -5.870880126953125
    7. ' hauteur' → logprob: -5.995880126953125
    8. ' longueur' → logprob: -5.995880126953125
    9. 'n' → logprob: -6.120880126953125
    10. '  ' → logprob: -6.245880126953125

Token 27: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.009692907333374
    2. '_' → logprob: -1.384692907333374
    3. '   ' → logprob: -1.509692907333374
    4. '    ' → logprob: -3.884692907333374
    5. '```' → logprob: -3.884692907333374
    6. 'e' → logprob: -4.259693145751953
    7. '.' → logprob: -4.384693145751953
    8. ',' → logprob: -4.384693145751953
    9. ' en' → logprob: -4.634693145751953
    10. ' de' → logprob: -4.634693145751953

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023546980693936348
    2. ' en' → logprob: -4.898547172546387
    3. ' ' → logprob: -5.023547172546387
    4. '.' → logprob: -6.148547172546387
    5. ',' → logprob: -6.398547172546387
    6. '    ' → logprob: -6.773547172546387
    7. ' de' → logprob: -7.023547172546387
    8. '```' → logprob: -7.148547172546387
    9. ' des' → logprob: -7.523547172546387
    10. 'en' → logprob: -8.023547172546387

Token 29: ' si' (ID: 1784)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.7049930691719055
    2. '   ' → logprob: -1.2049930095672607
    3. ' des' → logprob: -2.0799930095672607
    4. ' ' → logprob: -3.9549930095672607
    5. '.' → logprob: -4.20499324798584
    6. ' de' → logprob: -4.45499324798584
    7. ' selon' → logprob: -4.95499324798584
    8. ' du' → logprob: -5.20499324798584
    9. ',' → logprob: -5.32999324798584
    10. 'en' → logprob: -5.45499324798584

Token 30: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5957380533218384
    2. ' elle' → logprob: -2.470737934112549
    3. 'la' → logprob: -2.470737934112549
    4. 'une' → logprob: -2.720737934112549
    5. ' le' → logprob: -2.720737934112549
    6. 'le' → logprob: -3.845737934112549
    7. '   ' → logprob: -3.970737934112549
    8. ' une' → logprob: -4.095737934112549
    9. ' on' → logprob: -4.345737934112549
    10. ' l' → logprob: -4.345737934112549

Token 31: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.5152061581611633
    2. 'nombre' → logprob: -1.7652060985565186
    3. ' prochain' → logprob: -2.7652060985565186
    4. ' suivant' → logprob: -3.7652060985565186
    5. ' mot' → logprob: -3.8902060985565186
    6. ' code' → logprob: -4.140206336975098
    7. ' dernier' → logprob: -4.140206336975098
    8. ' ' → logprob: -4.265206336975098
    9. 'n' → logprob: -4.390206336975098
    10. ' caractère' → logprob: -4.765206336975098

Token 32: ' de' (ID: 334)
  Prédit: ' suivant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivant' → logprob: -0.048865653574466705
    2. 'su' → logprob: -4.423865795135498
    3. ' ' → logprob: -4.673865795135498
    4. 'd' → logprob: -5.173865795135498
    5. ' de' → logprob: -5.423865795135498
    6. ' est' → logprob: -5.673865795135498
    7. 's' → logprob: -6.048865795135498
    8. ' d' → logprob: -6.423865795135498
    9. ' précédent' → logprob: -6.423865795135498
    10. 'de' → logprob: -6.798865795135498

Token 33: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -1.3265984058380127
    2. 'élé' → logprob: -1.7015984058380127
    3. ' nombres' → logprob: -1.8265984058380127
    4. ' nég' → logprob: -2.5765984058380127
    5. 'n' → logprob: -3.0765984058380127
    6. 'val' → logprob: -3.0765984058380127
    7. ' ' → logprob: -3.2015984058380127
    8. ' éléments' → logprob: -3.7015984058380127
    9. 'l' → logprob: -4.201598167419434
    10. ' occurrences' → logprob: -4.576598167419434

Token 34: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.265192449092865
    2. ' absol' → logprob: -2.6401925086975098
    3. 'abs' → logprob: -2.7651925086975098
    4. 'neg' → logprob: -3.7651925086975098
    5. ' abs' → logprob: -4.26519250869751
    6. ' positives' → logprob: -4.39019250869751
    7. 'strict' → logprob: -4.76519250869751
    8. ' est' → logprob: -4.76519250869751
    9. ' strict' → logprob: -4.89019250869751
    10. ' ' → logprob: -5.26519250869751

Token 35: 'atives' (ID: 8015)
  Prédit: 'atives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -9.162282367469743e-05
    2. 'a' → logprob: -10.125091552734375
    3. 'es' → logprob: -11.125091552734375
    4. 'ales' → logprob: -11.750091552734375
    5. 'ative' → logprob: -11.875091552734375
    6. 'ives' → logprob: -12.125091552734375
    7. 'atifs' → logprob: -13.500091552734375
    8. 'atrices' → logprob: -13.500091552734375
    9. 'ves' → logprob: -13.625091552734375
    10. '```' → logprob: -13.625091552734375

Token 36: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3770468831062317
    2. ' dépasse' → logprob: -2.002046823501587
    3. 'est' → logprob: -2.127046823501587
    4. ' ' → logprob: -3.002046823501587
    5. 's' → logprob: -5.877047061920166
    6. 'd' → logprob: -6.502047061920166
    7. 'ex' → logprob: -6.627047061920166
    8. '>' → logprob: -6.752047061920166
    9. ' dépass' → logprob: -6.752047061920166
    10. 'dé' → logprob: -8.127046585083008

Token 37: ' impair' (ID: 64113)
  Prédit: ' supérieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.3965860903263092
    2. ' pair' → logprob: -1.2715860605239868
    3. 'pair' → logprob: -4.646585941314697
    4. 'sup' → logprob: -4.896585941314697
    5. ' strict' → logprob: -5.146585941314697
    6. ' ' → logprob: -5.521585941314697
    7. ' plus' → logprob: -5.646585941314697
    8. 'strict' → logprob: -5.646585941314697
    9. ' super' → logprob: -6.021585941314697
    10. ' impair' → logprob: -6.396585941314697

Token 38: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.055590011179447174
    2. '\n' → logprob: -3.6805899143218994
    3. '\' → logprob: -4.5555901527404785
    4. '
' → logprob: -5.0555901527404785
    5. '    
' → logprob: -5.4305901527404785
    6. '```' → logprob: -5.6805901527404785
    7. 'n' → logprob: -6.6805901527404785
    8. '    ' → logprob: -7.9305901527404785
    9. '  
' → logprob: -8.05558967590332
    10. '"' → logprob: -8.05558967590332

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005266599822789431
    2. '```' → logprob: -6.2552666664123535
    3. '"""' → logprob: -6.3802666664123535
    4. '"' → logprob: -8.005266189575195
    5. '    ' → logprob: -8.005266189575195
    6. '"""
' → logprob: -8.630266189575195
    7. ' ' → logprob: -8.755266189575195
    8. '
' → logprob: -9.255266189575195
    9. '    
' → logprob: -9.255266189575195
    10. 'n' → logprob: -9.380266189575195

Token 40: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06681782007217407
    2. '"""' → logprob: -3.6918177604675293
    3. '\n' → logprob: -4.066817760467529
    4. '```' → logprob: -4.441817760467529
    5. '"""
' → logprob: -5.566817760467529
    6. '\' → logprob: -6.316817760467529
    7. '    ' → logprob: -6.816817760467529
    8. '"' → logprob: -6.941817760467529
    9. '    
' → logprob: -7.316817760467529
    10. '
' → logprob: -7.691817760467529

Token 41: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7476776838302612
    2. ' le' → logprob: -0.8726776838302612
    3. 'le' → logprob: -3.747677803039551
    4. ' l' → logprob: -3.997677803039551
    5. ' ' → logprob: -4.122677803039551
    6. ' ' → logprob: -4.372677803039551
    7. 'la' → logprob: -4.997677803039551
    8. ' vous' → logprob: -5.122677803039551
    9. ' len' → logprob: -5.247677803039551
    10. ' une' → logprob: -6.122677803039551

Token 42: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.683315098285675
    2. 'nombre' → logprob: -1.0583150386810303
    3. 'n' → logprob: -2.4333150386810303
    4. ' n' → logprob: -4.308315277099609
    5. ' ' → logprob: -4.933315277099609
    6. ' nombres' → logprob: -5.058315277099609
    7. ' code' → logprob: -5.183315277099609
    8. 's' → logprob: -5.558315277099609
    9. '   ' → logprob: -5.933315277099609
    10. ' sequence' → logprob: -6.183315277099609

Token 43: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5914594531059265
    2. ' de' → logprob: -0.9664594531059265
    3. 'de' → logprob: -3.8414595127105713
    4. 'd' → logprob: -3.9664595127105713
    5. '_de' → logprob: -4.341459274291992
    6. '_' → logprob: -4.841459274291992
    7. '_d' → logprob: -5.841459274291992
    8. ' ' → logprob: -7.091459274291992
    9. '  ' → logprob: -8.341459274291992
    10. '_total' → logprob: -9.341459274291992

Token 44: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.19745080173015594
    2. 'val' → logprob: -1.9474507570266724
    3. 'n' → logprob: -4.572450637817383
    4. ' nég' → logprob: -4.822450637817383
    5. ' nombres' → logprob: -5.197450637817383
    6. ' ' → logprob: -5.322450637817383
    7. ' val' → logprob: -6.322450637817383
    8. 'values' → logprob: -6.947450637817383
    9. ' n' → logprob: -7.447450637817383
    10. ' values' → logprob: -7.447450637817383

Token 45: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.448331356048584
    2. 'neg' → logprob: -1.323331356048584
    3. 'n' → logprob: -2.948331356048584
    4. ' n' → logprob: -3.448331356048584
    5. ' negativas' → logprob: -5.948331356048584
    6. '<|end|>' → logprob: -6.073331356048584
    7. ' negatives' → logprob: -6.948331356048584
    8. ' ' → logprob: -7.323331356048584
    9. ' negative' → logprob: -7.448331356048584
    10. 'negative' → logprob: -7.448331356048584

Token 46: 'atives' (ID: 8015)
  Prédit: 'atives'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atives' → logprob: -0.06588263809680939
    2. 'ég' → logprob: -3.440882682800293
    3. 'atifs' → logprob: -5.190882682800293
    4. 'g' → logprob: -5.565882682800293
    5. 'at' → logprob: -5.565882682800293
    6. 'atif' → logprob: -5.690882682800293
    7. 'ative' → logprob: -6.065882682800293
    8. 'ér' → logprob: -6.315882682800293
    9. 'eg' → logprob: -6.440882682800293
    10. 'a' → logprob: -6.440882682800293

Token 47: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.03718603774905205
    2. 'est' → logprob: -3.9121861457824707
    3. ' ' → logprob: -4.787186145782471
    4. ' is' → logprob: -5.162186145782471
    5. 's' → logprob: -6.787186145782471
    6. '>' → logprob: -8.412185668945312
    7. 'es' → logprob: -9.162185668945312
    8. ' ' → logprob: -9.287185668945312
    9. ' dépasse' → logprob: -9.412185668945312
    10. ' s' → logprob: -9.537185668945312

Token 48: ' pair' (ID: 10610)
  Prédit: ' impair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.3010885417461395
    2. ' pair' → logprob: -1.426088571548462
    3. 'pair' → logprob: -4.301088333129883
    4. ' également' → logprob: -6.426088333129883
    5. 'imp' → logprob: -6.676088333129883
    6. ' aussi' → logprob: -7.301088333129883
    7. 'égal' → logprob: -7.426088333129883
    8. ' imp' → logprob: -7.801088333129883
    9. ' also' → logprob: -8.176088333129883
    10. ' paire' → logprob: -8.426088333129883

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021664367523044348
    2. ' ,' → logprob: -6.252166271209717
    3. '.' → logprob: -9.502166748046875
    4. '   ' → logprob: -9.752166748046875
    5. ',
' → logprob: -9.752166748046875
    6. ':' → logprob: -10.377166748046875
    7. '"""' → logprob: -13.002166748046875
    8. '```' → logprob: -13.252166748046875
    9. ' :' → logprob: -13.377166748046875
    10. '  ' → logprob: -13.502166748046875

Token 50: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10927227139472961
    2. ' la' → logprob: -3.2342722415924072
    3. ' on' → logprob: -3.8592722415924072
    4. '    ' → logprob: -4.234272480010986
    5. ' return' → logprob: -4.734272480010986
    6. ' ' → logprob: -5.609272480010986
    7. ' ' → logprob: -5.984272480010986
    8. ' le' → logprob: -5.984272480010986
    9. ' retourne' → logprob: -6.234272480010986
    10. 'la' → logprob: -6.359272480010986

Token 51: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.35244062542915344
    2. ' fonction' → logprob: -1.977440595626831
    3. 's' → logprob: -2.352440595626831
    4. 'fonction' → logprob: -3.227440595626831
    5. '   ' → logprob: -4.72744083404541
    6. ' function' → logprob: -4.97744083404541
    7. ' ' → logprob: -7.10244083404541
    8. ' s' → logprob: -7.22744083404541
    9. ' valeur' → logprob: -7.22744083404541
    10. ' return' → logprob: -7.35244083404541

Token 52: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.294881135225296
    2. ' est' → logprob: -1.5448811054229736
    3. ' ' → logprob: -3.9198811054229736
    4. ' retourne' → logprob: -5.794881343841553
    5. 'des' → logprob: -5.919881343841553
    6. ' de' → logprob: -6.419881343841553
    7. 'est' → logprob: -6.669881343841553
    8. ' return' → logprob: -6.669881343841553
    9. ' reste' → logprob: -6.794881343841553
    10. ' continue' → logprob: -6.919881343841553

Token 53: ' valeurs' (ID: 73668)
  Prédit: ' valeurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeurs' → logprob: -0.033619992434978485
    2. 'val' → logprob: -3.7836198806762695
    3. ' val' → logprob: -5.1586198806762695
    4. ' valeur' → logprob: -6.4086198806762695
    5. ' abs' → logprob: -6.9086198806762695
    6. ' values' → logprob: -7.6586198806762695
    7. ' vale' → logprob: -8.15861988067627
    8. ' nombres' → logprob: -8.40861988067627
    9. ' ' → logprob: -8.53361988067627
    10. ' absolute' → logprob: -9.03361988067627

Token 54: ' absol' (ID: 7374)
  Prédit: ' absol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absol' → logprob: -0.26969650387763977
    2. ' est' → logprob: -2.2696964740753174
    3. ' abs' → logprob: -3.2696964740753174
    4. ' des' → logprob: -3.8946964740753174
    5. ' ' → logprob: -4.0196967124938965
    6. ' ' → logprob: -4.3946967124938965
    7. 'abs' → logprob: -4.7696967124938965
    8. ' absolut' → logprob: -5.0196967124938965
    9. ' absolute' → logprob: -5.5196967124938965
    10. 'ab' → logprob: -5.6446967124938965

Token 55: 'ues' (ID: 1406)
  Prédit: 'ues'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ues' → logprob: -0.6926387548446655
    2. 'u' → logprob: -0.8176387548446655
    3. 'ol' → logprob: -3.192638874053955
    4. 'l' → logprob: -5.442638874053955
    5. 'utes' → logprob: -5.817638874053955
    6. '```' → logprob: -6.317638874053955
    7. '|' → logprob: -6.442638874053955
    8. '</' → logprob: -6.942638874053955
    9. 's' → logprob: -7.192638874053955
    10. 'outes' → logprob: -7.317638874053955

Token 56: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.040526293218135834
    2. ' ' → logprob: -3.9155263900756836
    3. ' reste' → logprob: -4.540526390075684
    4. ' des' → logprob: -5.415526390075684
    5. 'est' → logprob: -7.040526390075684
    6. ' continue' → logprob: -7.540526390075684
    7. ' sera' → logprob: -7.665526390075684
    8. ' rest' → logprob: -7.915526390075684
    9. ' a' → logprob: -8.290526390075684
    10. ' return' → logprob: -8.415526390075684

Token 57: ' affich' (ID: 90179)
  Prédit: ' ren'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ren' → logprob: -1.0025196075439453
    2. ' retourn' → logprob: -1.0025196075439453
    3. '   ' → logprob: -1.5025196075439453
    4. ' ' → logprob: -4.002519607543945
    5. 'ret' → logprob: -4.877519607543945
    6. 'ren' → logprob: -5.002519607543945
    7. ' return' → logprob: -6.252519607543945
    8. ' calcul' → logprob: -6.377519607543945
    9. ' conserv' → logprob: -7.002519607543945
    10. ' returned' → logprob: -7.002519607543945

Token 58: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.5759691596031189
    2. 'ée' → logprob: -0.8259691596031189
    3. 'e' → logprob: -11.825968742370605
    4. 'è' → logprob: -11.950968742370605
    5. 'ê' → logprob: -12.200968742370605
    6. 'æ' → logprob: -13.325968742370605
    7. 'ä' → logprob: -13.450968742370605
    8. '   ' → logprob: -13.825968742370605
    9. 'á' → logprob: -13.950968742370605
    10. '�' → logprob: -13.950968742370605

Token 59: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2902302145957947
    2. '.' → logprob: -1.9152302742004395
    3. '\n' → logprob: -3.2902302742004395
    4. '\' → logprob: -3.7902302742004395
    5. '```' → logprob: -4.5402302742004395
    6. '"""' → logprob: -4.9152302742004395
    7. '"""
' → logprob: -5.0402302742004395
    8. ':' → logprob: -5.1652302742004395
    9. ' ' → logprob: -5.9152302742004395
    10. ',' → logprob: -6.2902302742004395

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06511625647544861
    2. '"""' → logprob: -2.8151161670684814
    3. '"' → logprob: -6.8151164054870605
    4. ' """' → logprob: -7.1901164054870605
    5. '```' → logprob: -7.5651164054870605
    6. '"""
' → logprob: -8.565115928649902
    7. '""' → logprob: -9.065115928649902
    8. '    ' → logprob: -9.190115928649902
    9. '  ' → logprob: -9.190115928649902
    10. ')' → logprob: -9.940115928649902

Token 61: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008468479849398136
    2. '"""' → logprob: -5.1334686279296875
    3. '"' → logprob: -6.8834686279296875
    4. '```' → logprob: -7.8834686279296875
    5. '    ' → logprob: -8.258468627929688
    6. '\n' → logprob: -8.508468627929688
    7. '"""
' → logprob: -8.633468627929688
    8. '\' → logprob: -8.883468627929688
    9. '    
' → logprob: -9.258468627929688
    10. '  ' → logprob: -9.883468627929688

Token 62: ' ce' (ID: 2357)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.20889994502067566
    2. 'le' → logprob: -2.583899974822998
    3. ' ' → logprob: -2.833899974822998
    4. ' ' → logprob: -3.458899974822998
    5. 'l' → logprob: -4.458899974822998
    6. ' l' → logprob: -4.958899974822998
    7. '  ' → logprob: -6.583899974822998
    8. '_le' → logprob: -6.833899974822998
    9. '    ' → logprob: -7.583899974822998
    10. '   ' → logprob: -8.45889949798584

Token 63: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.05301579087972641
    2. 'nombre' → logprob: -3.55301570892334
    3. ' n' → logprob: -4.55301570892334
    4. 'n' → logprob: -4.92801570892334
    5. ' ' → logprob: -5.92801570892334
    6. ' ' → logprob: -7.05301570892334
    7. ' nombres' → logprob: -7.80301570892334
    8. 's' → logprob: -8.05301570892334
    9. '_nombre' → logprob: -8.30301570892334
    10. 'e' → logprob: -9.17801570892334

Token 64: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.05715765431523323
    2. ' de' → logprob: -3.1821577548980713
    3. 'est' → logprob: -4.557157516479492
    4. 'de' → logprob: -6.682157516479492
    5. ' ' → logprob: -6.932157516479492
    6. ' is' → logprob: -7.932157516479492
    7. '   ' → logprob: -8.432157516479492
    8. '  ' → logprob: -8.682157516479492
    9. 's' → logprob: -8.682157516479492
    10. 'd' → logprob: -9.182157516479492

Token 65: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.027244683355093002
    2. 'imp' → logprob: -3.6522445678710938
    3. 'im' → logprob: -7.652244567871094
    4. ' imp' → logprob: -7.777244567871094
    5. ' impar' → logprob: -11.277244567871094
    6. 'odd' → logprob: -12.402244567871094
    7. ' ' → logprob: -12.402244567871094
    8. 'pair' → logprob: -12.527244567871094
    9. '_imp' → logprob: -12.652244567871094
    10. '   ' → logprob: -12.652244567871094

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002562137378845364
    2. ' ,' → logprob: -8.375256538391113
    3. '   ' → logprob: -11.000256538391113
    4. '  ' → logprob: -13.000256538391113
    5. ' la' → logprob: -13.250256538391113
    6. ',
' → logprob: -13.875256538391113
    7. ' alors' → logprob: -14.125256538391113
    8. 'a' → logprob: -14.500256538391113
    9. ' ' → logprob: -14.500256538391113
    10. 's' → logprob: -15.500256538391113

Token 67: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.7523996829986572
    2. ' la' → logprob: -1.0023996829986572
    3. '   ' → logprob: -2.1273996829986572
    4. '    ' → logprob: -4.002399444580078
    5. ' l' → logprob: -5.127399444580078
    6. ' ' → logprob: -5.377399444580078
    7. ' le' → logprob: -5.377399444580078
    8. ' ' → logprob: -5.877399444580078
    9. 'on' → logprob: -6.377399444580078
    10. '  ' → logprob: -7.377399444580078

Token 68: ' sou' (ID: 4069)
  Prédit: ' sou'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sou' → logprob: -0.16902847588062286
    2. ' affiche' → logprob: -2.5440285205841064
    3. 'sou' → logprob: -3.2940285205841064
    4. 'aff' → logprob: -5.044028282165527
    5. ' retr' → logprob: -5.044028282165527
    6. ' ajuste' → logprob: -5.419028282165527
    7. ' retire' → logprob: -5.544028282165527
    8. '   ' → logprob: -5.669028282165527
    9. ' ' → logprob: -6.044028282165527
    10. ' enl' → logprob: -6.294028282165527

Token 69: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.021798547357320786
    2. 'st' → logprob: -4.521798610687256
    3. 'str' → logprob: -5.896798610687256
    4. 'stract' → logprob: -5.896798610687256
    5. 'straction' → logprob: -6.146798610687256
    6. 't' → logprob: -6.771798610687256
    7. '\' → logprob: -8.021798133850098
    8. '%' → logprob: -8.021798133850098
    9. 's' → logprob: -8.521798133850098
    10. 'ha' → logprob: -8.771798133850098

Token 70: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.029558153823018074
    2. 'ct' → logprob: -3.9045581817626953
    3. '   ' → logprob: -5.404558181762695
    4. 'i' → logprob: -6.904558181762695
    5. 'ie' → logprob: -7.529558181762695
    6. 'ît' → logprob: -7.779558181762695
    7. 'ict' → logprob: -7.904558181762695
    8. ' it' → logprob: -8.529558181762695
    9. ' ' → logprob: -8.654558181762695
    10. '	' → logprob: -8.904558181762695

Token 71: ' deux' (ID: 10301)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.5115010738372803
    2. ' ' → logprob: -1.1365010738372803
    3. ' au' → logprob: -3.5115010738372803
    4. ' le' → logprob: -4.386501312255859
    5. 'la' → logprob: -5.011501312255859
    6. '1' → logprob: -5.136501312255859
    7. 'le' → logprob: -5.886501312255859
    8. '2' → logprob: -5.886501312255859
    9. 'min' → logprob: -6.136501312255859
    10. '   ' → logprob: -6.136501312255859

Token 72: ' fois' (ID: 14697)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.28205201029777527
    2. ' ' → logprob: -1.6570520401000977
    3. '*' → logprob: -3.4070520401000977
    4. ' fois' → logprob: -3.9070520401000977
    5. 'fois' → logprob: -7.407052040100098
    6. ' ' → logprob: -7.907052040100098
    7. '   ' → logprob: -8.907052040100098
    8. '  ' → logprob: -8.907052040100098
    9. ' veces' → logprob: -9.907052040100098
    10. ' `' → logprob: -9.907052040100098

Token 73: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.21150268614292145
    2. ' l' → logprob: -2.71150279045105
    3. ' le' → logprob: -3.33650279045105
    4. ' ' → logprob: -3.33650279045105
    5. 'le' → logprob: -4.086502552032471
    6. ' the' → logprob: -4.586502552032471
    7. 'la' → logprob: -4.836502552032471
    8. ' ' → logprob: -4.961502552032471
    9. 'l' → logprob: -6.211502552032471
    10. ' minimum' → logprob: -6.336502552032471

Token 74: ' plus' (ID: 2932)
  Prédit: ' plus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plus' → logprob: -0.22331514954566956
    2. ' valeur' → logprob: -2.5983152389526367
    3. ' val' → logprob: -2.7233152389526367
    4. 'val' → logprob: -3.0983152389526367
    5. 'plus' → logprob: -4.723315238952637
    6. ' minimum' → logprob: -5.598315238952637
    7. ' moindre' → logprob: -7.348315238952637
    8. ' minimal' → logprob: -7.848315238952637
    9. ' cons' → logprob: -8.348315238952637
    10. ' smallest' → logprob: -8.473315238952637

Token 75: ' petite' (ID: 28119)
  Prédit: ' petite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' petite' → logprob: -0.355301171541214
    2. 'pet' → logprob: -1.4803011417388916
    3. ' grande' → logprob: -2.8553011417388916
    4. ' petit' → logprob: -4.605301380157471
    5. 'gr' → logprob: -7.230301380157471
    6. ' pet' → logprob: -7.355301380157471
    7. ' grand' → logprob: -7.855301380157471
    8. 'grand' → logprob: -7.855301380157471
    9. '```' → logprob: -7.855301380157471
    10. ' petites' → logprob: -7.980301380157471

Token 76: ' valeur' (ID: 41664)
  Prédit: ' valeur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' valeur' → logprob: -0.7348535656929016
    2. ' ' → logprob: -0.8598535656929016
    3. ' val' → logprob: -3.484853506088257
    4. ' abs' → logprob: -3.734853506088257
    5. '_' → logprob: -4.359853744506836
    6. '_val' → logprob: -4.359853744506836
    7. 'val' → logprob: -5.109853744506836
    8. '_abs' → logprob: -5.609853744506836
    9. ' _' → logprob: -5.734853744506836
    10. ' des' → logprob: -6.609853744506836

Token 77: ' absol' (ID: 7374)
  Prédit: ' absol'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' absol' → logprob: -0.2666846513748169
    2. 'ab' → logprob: -2.5166845321655273
    3. 'abs' → logprob: -3.0166845321655273
    4. ' abs' → logprob: -3.0166845321655273
    5. '_abs' → logprob: -3.7666845321655273
    6. ' absolute' → logprob: -4.516684532165527
    7. ' ' → logprob: -5.016684532165527
    8. ' nég' → logprob: -5.516684532165527
    9. '_ab' → logprob: -5.891684532165527
    10. ' absolut' → logprob: -6.141684532165527

Token 78: 'ue' (ID: 466)
  Prédit: 'ue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ue' → logprob: -0.12750689685344696
    2. 'u' → logprob: -2.127506971359253
    3. 'ute' → logprob: -9.002507209777832
    4. 'ol' → logprob: -9.627507209777832
    5. ' u' → logprob: -9.627507209777832
    6. 'e' → logprob: -10.002507209777832
    7. 'l' → logprob: -10.002507209777832
    8. ' ue' → logprob: -10.002507209777832
    9. 'ues' → logprob: -10.877507209777832
    10. '

' → logprob: -11.127507209777832

Token 79: ' à' (ID: 1221)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1297634392976761
    2. ' de' → logprob: -3.00476336479187
    3. ' des' → logprob: -3.87976336479187
    4. ' du' → logprob: -4.004763603210449
    5. ' ' → logprob: -4.754763603210449
    6. 'de' → logprob: -5.004763603210449
    7. '```' → logprob: -5.254763603210449
    8. 'def' → logprob: -6.379763603210449
    9. '    ' → logprob: -6.379763603210449
    10. ' à' → logprob: -6.754763603210449

Token 80: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.16354155540466309
    2. ' ' → logprob: -2.163541555404663
    3. 'la' → logprob: -3.663541555404663
    4. ' l' → logprob: -5.288541793823242
    5. ' ' → logprob: -6.288541793823242
    6. 'l' → logprob: -6.663541793823242
    7. ' the' → logprob: -7.288541793823242
    8. ' cette' → logprob: -7.913541793823242
    9. ' a' → logprob: -8.663541793823242
    10. '  ' → logprob: -8.913541793823242

Token 81: ' somme' (ID: 64484)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2644203007221222
    2. ' somme' → logprob: -1.5144202709197998
    3. ' ' → logprob: -5.389420509338379
    4. 'som' → logprob: -5.639420509338379
    5. ' som' → logprob: -6.014420509338379
    6. '   ' → logprob: -6.764420509338379
    7. 'sum' → logprob: -8.889420509338379
    8. ' somm' → logprob: -9.639420509338379
    9. '	s' → logprob: -9.764420509338379
    10. 'summ' → logprob: -9.889420509338379

Token 82: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35014623403549194
    2. '.' → logprob: -1.8501462936401367
    3. '    
' → logprob: -3.4751462936401367
    4. ',' → logprob: -3.8501462936401367
    5. '\n' → logprob: -3.8501462936401367
    6. '    ' → logprob: -4.100146293640137
    7. '"""
' → logprob: -4.475146293640137
    8. '\' → logprob: -4.725146293640137
    9. ' ' → logprob: -5.225146293640137
    10. ' 
' → logprob: -5.850146293640137

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08345174044370651
    2. ' et' → logprob: -4.333451747894287
    3. '.' → logprob: -4.583451747894287
    4. '    ' → logprob: -4.583451747894287
    5. ' afin' → logprob: -4.708451747894287
    6. 'et' → logprob: -5.708451747894287
    7. ' """
' → logprob: -5.833451747894287
    8. ' ' → logprob: -5.833451747894287
    9. ' 
' → logprob: -5.958451747894287
    10. 'e' → logprob: -6.083451747894287

Token 84: ' ce' (ID: 2357)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6408107876777649
    2. '.' → logprob: -1.7658107280731201
    3. ' ' → logprob: -2.14081072807312
    4. ' ' → logprob: -3.39081072807312
    5. ' """
' → logprob: -3.76581072807312
    6. '\n' → logprob: -4.015810966491699
    7. '\' → logprob: -4.015810966491699
    8. ' """' → logprob: -4.140810966491699
    9. ' afin' → logprob: -4.390810966491699
    10. '"""' → logprob: -4.515810966491699

Token 85: ' qui' (ID: 2780)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7261694073677063
    2. ' qui' → logprob: -0.7261694073677063
    3. ' 
' → logprob: -4.351169586181641
    4. 'qui' → logprob: -4.851169586181641
    5. ' ' → logprob: -6.226169586181641
    6. 'n' → logprob: -6.601169586181641
    7. '   ' → logprob: -6.726169586181641
    8. ''' → logprob: -6.976169586181641
    9. 'a' → logprob: -7.476169586181641
    10. '_' → logprob: -7.476169586181641

Token 86: ' correspond' (ID: 11095)
  Prédit: ' permet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permet' → logprob: -0.8895784616470337
    2. ' correspond' → logprob: -1.0145784616470337
    3. ' revient' → logprob: -1.6395784616470337
    4. ' garantit' → logprob: -4.889578342437744
    5. ' signifie' → logprob: -5.139578342437744
    6. ' rend' → logprob: -5.764578342437744
    7. ' donne' → logprob: -6.389578342437744
    8. ' ajuste' → logprob: -6.764578342437744
    9. ' équ' → logprob: -6.764578342437744
    10. ' corr' → logprob: -6.889578342437744

Token 87: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.010609022341668606
    2. ' au' → logprob: -5.510609149932861
    3. ' ' → logprob: -6.385609149932861
    4. ' to' → logprob: -6.385609149932861
    5. '  ' → logprob: -6.635609149932861
    6. ' a' → logprob: -6.760609149932861
    7. 'à' → logprob: -8.010608673095703
    8. '   ' → logprob: -8.510608673095703
    9. ''à' → logprob: -10.760608673095703
    10. '<|end|>' → logprob: -11.010608673095703

Token 88: ' retourner' (ID: 116656)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.196794867515564
    2. ' l' → logprob: -1.321794867515564
    3. ' une' → logprob: -2.8217949867248535
    4. ' un' → logprob: -2.8217949867248535
    5. ' changer' → logprob: -2.8217949867248535
    6. ' retourner' → logprob: -2.8217949867248535
    7. ' ' → logprob: -3.3217949867248535
    8. ' rendre' → logprob: -3.9467949867248535
    9. ' invers' → logprob: -4.1967949867248535
    10. ' enlever' → logprob: -4.1967949867248535

Token 89: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.036982256919145584
    2. ' la' → logprob: -3.786982297897339
    3. ' à' → logprob: -5.16198205947876
    4. ' au' → logprob: -5.66198205947876
    5. ' l' → logprob: -5.91198205947876
    6. ' le' → logprob: -7.53698205947876
    7. ' a' → logprob: -7.66198205947876
    8. '  ' → logprob: -8.911982536315918
    9. ' the' → logprob: -9.286982536315918
    10. ' un' → logprob: -9.661982536315918

Token 90: ' nombre' (ID: 9733)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.03560088202357292
    2. ' ' → logprob: -4.410600662231445
    3. ' e' → logprob: -4.535600662231445
    4. '-' → logprob: -5.035600662231445
    5. 'a' → logprob: -5.785600662231445
    6. ' a' → logprob: -7.535600662231445
    7. ' nombre' → logprob: -7.910600662231445
    8. '  ' → logprob: -8.410600662231445
    9. ' nég' → logprob: -8.660600662231445
    10. ' -' → logprob: -8.785600662231445

Token 91: ' impair' (ID: 64113)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.22553971409797668
    2. ' ' → logprob: -2.1005396842956543
    3. ' negatif' → logprob: -3.3505396842956543
    4. '-' → logprob: -4.225539684295654
    5. ' n' → logprob: -5.350539684295654
    6. '   ' → logprob: -5.350539684295654
    7. ' negative' → logprob: -5.475539684295654
    8. ' negativ' → logprob: -6.225539684295654
    9. ' negativo' → logprob: -6.350539684295654
    10. '  ' → logprob: -6.475539684295654

Token 92: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.45340603590011597
    2. '\' → logprob: -2.2034060955047607
    3. '\n' → logprob: -2.5784060955047607
    4. '"' → logprob: -3.4534060955047607
    5. ' ' → logprob: -3.7034060955047607
    6. 'n' → logprob: -4.078405857086182
    7. '.' → logprob: -4.078405857086182
    8. ')' → logprob: -4.078405857086182
    9. '"""
' → logprob: -4.078405857086182
    10. '"""' → logprob: -4.578405857086182

Token 93: ' signes' (ID: 133923)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.26641538739204407
    2. ' valeurs' → logprob: -1.8914153575897217
    3. ' nég' → logprob: -3.5164153575897217
    4. 'val' → logprob: -4.641415596008301
    5. 'élé' → logprob: -4.891415596008301
    6. 's' → logprob: -5.266415596008301
    7. ' val' → logprob: -5.391415596008301
    8. ' éléments' → logprob: -5.391415596008301
    9. '-' → logprob: -5.516415596008301
    10. ' nombres' → logprob: -5.641415596008301

Token 94: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.7529266476631165
    2. '-' → logprob: -1.1279265880584717
    3. 'n' → logprob: -2.6279265880584717
    4. 'neg' → logprob: -3.3779265880584717
    5. '.' → logprob: -4.252926826477051
    6. ' ' → logprob: -4.377926826477051
    7. 's' → logprob: -4.377926826477051
    8. ' n' → logprob: -4.877926826477051
    9. ' negatif' → logprob: -5.127926826477051
    10. '   ' → logprob: -5.252926826477051

Token 95: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.2971161901950836
    2. 'atif' → logprob: -2.172116279602051
    3. 'at' → logprob: -2.672116279602051
    4. 'a' → logprob: -3.047116279602051
    5. 'ati' → logprob: -4.422116279602051
    6. 'é' → logprob: -5.422116279602051
    7. 'aux' → logprob: -6.297116279602051
    8. '```' → logprob: -6.422116279602051
    9. 's' → logprob: -6.922116279602051
    10. 'ativ' → logprob: -7.547116279602051

Token 96: ' pour' (ID: 1930)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43382105231285095
    2. '\n' → logprob: -1.3088210821151733
    3. '\' → logprob: -3.683820962905884
    4. '"""' → logprob: -4.433821201324463
    5. '    
' → logprob: -4.558821201324463
    6. '
' → logprob: -4.558821201324463
    7. '"' → logprob: -5.058821201324463
    8. '  
' → logprob: -5.308821201324463
    9. '"""
' → logprob: -5.558821201324463
    10. 'n' → logprob: -6.308821201324463

Token 97: ' minim' (ID: 23874)
  Prédit: ' obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -1.0339616537094116
    2. ' minim' → logprob: -1.7839616537094116
    3. 'min' → logprob: -2.658961772918701
    4. ' que' → logprob: -2.908961772918701
    5. ' maxim' → logprob: -2.908961772918701
    6. ' rendre' → logprob: -3.033961772918701
    7. ' conserver' → logprob: -3.033961772918701
    8. ' maintenir' → logprob: -4.033961772918701
    9. '   ' → logprob: -4.158961772918701
    10. ' respecter' → logprob: -4.283961772918701

Token 98: 'iser' (ID: 7466)
  Prédit: 'ser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ser' → logprob: -0.015559975057840347
    2. 's' → logprob: -4.390560150146484
    3. 'se' → logprob: -6.390560150146484
    4. '```' → logprob: -8.265560150146484
    5. 'iser' → logprob: -8.765560150146484
    6. '   ' → logprob: -9.140560150146484
    7. ' ser' → logprob: -9.140560150146484
    8. '#' → logprob: -9.390560150146484
    9. 'ses' → logprob: -9.640560150146484
    10. ''s' → logprob: -10.265560150146484

Token 99: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11104518175125122
    2. ' l' → logprob: -2.3610451221466064
    3. ' le' → logprob: -5.6110453605651855
    4. ' ' → logprob: -5.6110453605651855
    5. 'l' → logprob: -6.2360453605651855
    6. 'la' → logprob: -7.4860453605651855
    7. 'le' → logprob: -7.8610453605651855
    8. '   ' → logprob: -8.611044883728027
    9. ' ' → logprob: -8.611044883728027
    10. ' the' → logprob: -9.736044883728027

Token 100: ' somme' (ID: 64484)
  Prédit: ' somme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' somme' → logprob: -0.07507632672786713
    2. ' ' → logprob: -2.8250763416290283
    3. 's' → logprob: -5.075076103210449
    4. ' valeur' → logprob: -6.450076103210449
    5. ' s' → logprob: -6.950076103210449
    6. ' sum' → logprob: -7.200076103210449
    7. '   ' → logprob: -7.700076103210449
    8. ' 
' → logprob: -7.825076103210449
    9. '  ' → logprob: -7.950076103210449
    10. ' som' → logprob: -7.950076103210449

Token 101: ' absol' (ID: 7374)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11290674656629562
    2. '.' → logprob: -3.3629066944122314
    3. '"""
' → logprob: -4.1129069328308105
    4. 'def' → logprob: -4.4879069328308105
    5. ' des' → logprob: -4.9879069328308105
    6. ',' → logprob: -4.9879069328308105
    7. '    
' → logprob: -5.2379069328308105
    8. '"""' → logprob: -5.6129069328308105
    9. '"""

' → logprob: -5.7379069328308105
    10. '\n' → logprob: -6.1129069328308105

Token 102: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5924161672592163
    2. 'l' → logprob: -1.4674161672592163
    3. 'ue' → logprob: -1.8424161672592163
    4. 'ol' → logprob: -3.342416286468506
    5. 'e' → logprob: -5.217416286468506
    6. 's' → logprob: -5.842416286468506
    7. 'ule' → logprob: -6.092416286468506
    8. 'ul' → logprob: -6.217416286468506
    9. 'ute' → logprob: -6.217416286468506
    10. 'le' → logprob: -6.592416286468506

Token 103: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07504525780677795
    2. '"""' → logprob: -3.700045347213745
    3. '.' → logprob: -4.200045108795166
    4. ',' → logprob: -4.825045108795166
    5. '"' → logprob: -4.825045108795166
    6. '\n' → logprob: -6.075045108795166
    7. '    
' → logprob: -6.075045108795166
    8. '"""
' → logprob: -6.325045108795166
    9. ')' → logprob: -6.575045108795166
    10. ' ' → logprob: -6.700045108795166

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060221653431653976
    2. '"""' → logprob: -2.9352216720581055
    3. '"' → logprob: -5.6852216720581055
    4. '"""
' → logprob: -6.6852216720581055
    5. ' """' → logprob: -8.810221672058105
    6. '```' → logprob: -8.935221672058105
    7. '    ' → logprob: -9.060221672058105
    8. '
' → logprob: -9.435221672058105
    9. ' """
' → logprob: -9.685221672058105
    10. '""' → logprob: -10.185221672058105

Token 105: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030480829998850822
    2. '"""' → logprob: -3.5304808616638184
    3. '"' → logprob: -7.780480861663818
    4. '"""
' (adapté à ' """
') → logprob: -9.15548038482666
    5. '""' → logprob: -9.90548038482666
    6. '    ' → logprob: -10.03048038482666
    7. '```' → logprob: -10.28048038482666
    8. '
' → logprob: -10.78048038482666
    9. ' """' → logprob: -11.03048038482666
    10. '    
' → logprob: -11.53048038482666

Token 106: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007229743059724569
    2. '    
' → logprob: -6.007229804992676
    3. '\' → logprob: -6.507229804992676
    4. '    ' → logprob: -6.757229804992676
    5. '\n' → logprob: -7.007229804992676
    6. 'n' → logprob: -7.757229804992676
    7. '
' → logprob: -8.507229804992676
    8. 'def' → logprob: -9.007229804992676
    9. ' ' → logprob: -9.507229804992676
    10. ' 
' → logprob: -9.632229804992676

Token 107: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3114461302757263
    2. 'n' → logprob: -1.436446189880371
    3. ' n' → logprob: -4.186446189880371
    4. '    ' → logprob: -5.561446189880371
    5. ' ' → logprob: -6.186446189880371
    6. '    
' → logprob: -6.436446189880371
    7. '\n' → logprob: -6.686446189880371
    8. '\' → logprob: -6.936446189880371
    9. ' 
' → logprob: -7.061446189880371
    10. 's' → logprob: -7.311446189880371

Token 108: ' Lecture' (ID: 106534)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5824185013771057
    2. ' n' → logprob: -1.707418441772461
    3. 'numbers' → logprob: -2.832418441772461
    4. 'values' → logprob: -3.082418441772461
    5. ' numbers' → logprob: -3.082418441772461
    6. '   ' → logprob: -3.332418441772461
    7. ' values' → logprob: -3.832418441772461
    8. 'sequence' → logprob: -4.332418441772461
    9. ' sequence' → logprob: -4.707418441772461
    10. 's' → logprob: -5.707418441772461

Token 109: ' du' (ID: 1462)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019565897062420845
    2. '    ' → logprob: -4.519566059112549
    3. 'n' → logprob: -5.519566059112549
    4. ' n' → logprob: -6.644566059112549
    5. '       ' → logprob: -7.019566059112549
    6. ' ' → logprob: -7.144566059112549
    7. '  ' → logprob: -8.01956558227539
    8. ' des' → logprob: -8.01956558227539
    9. '_' → logprob: -8.39456558227539
    10. 's' → logprob: -9.14456558227539

Token 110: ' nombre' (ID: 9733)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40559735894203186
    2. ' ' → logprob: -1.2805973291397095
    3. ' n' → logprob: -4.03059720993042
    4. ' nombres' → logprob: -4.28059720993042
    5. ' nombre' → logprob: -4.90559720993042
    6. 's' → logprob: -5.15559720993042
    7. 'nombre' → logprob: -5.15559720993042
    8. ' sequence' → logprob: -7.03059720993042
    9. '   ' → logprob: -7.28059720993042
    10. 'ent' → logprob: -7.53059720993042

Token 111: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2914981544017792
    2. '_' → logprob: -2.1664981842041016
    3. ' de' → logprob: -3.2914981842041016
    4. '    ' → logprob: -3.7914981842041016
    5. '   ' → logprob: -3.9164981842041016
    6. '  ' → logprob: -4.666498184204102
    7. ' d' → logprob: -4.666498184204102
    8. ' n' → logprob: -4.666498184204102
    9. ' des' → logprob: -4.791498184204102
    10. 'n' → logprob: -4.791498184204102

Token 112: ' valeurs' (ID: 73668)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8382500410079956
    2. 'val' → logprob: -0.9632500410079956
    3. 'élé' → logprob: -2.338250160217285
    4. ' n' → logprob: -3.838250160217285
    5. ' nombres' → logprob: -3.838250160217285
    6. ' valeurs' → logprob: -3.963250160217285
    7. 'ent' → logprob: -4.463250160217285
    8. ' ent' → logprob: -5.213250160217285
    9. ' éléments' → logprob: -5.463250160217285
    10. ' ' → logprob: -6.088250160217285

Token 113: ' à' (ID: 1221)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07711023837327957
    2. '   ' → logprob: -2.8271102905273438
    3. ' n' → logprob: -4.202110290527344
    4. '    ' → logprob: -10.577110290527344
    5. '	n' → logprob: -10.952110290527344
    6. '  ' → logprob: -11.577110290527344
    7. ' ' → logprob: -12.202110290527344
    8. '    
' → logprob: -13.202110290527344
    9. ' ' → logprob: -13.702110290527344
    10. 'nb' → logprob: -14.452110290527344

Token 114: ' traiter' (ID: 105852)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5611647963523865
    2. ' lire' → logprob: -1.1861648559570312
    3. ' traiter' → logprob: -2.1861648559570312
    4. 'trait' → logprob: -4.686164855957031
    5. ' saisir' → logprob: -7.436164855957031
    6. 'entr' → logprob: -7.936164855957031
    7. '   ' → logprob: -8.186164855957031
    8. ' l' → logprob: -8.186164855957031
    9. ' ' → logprob: -8.686164855957031
    10. 's' → logprob: -9.311164855957031

Token 115: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06226735934615135
    2. '   ' → logprob: -3.062267303466797
    3. ' n' → logprob: -4.312267303466797
    4. '	n' → logprob: -9.937267303466797
    5. ' 
' → logprob: -9.937267303466797
    6. '    
' → logprob: -10.062267303466797
    7. '\n' → logprob: -10.937267303466797
    8. '    ' → logprob: -11.562267303466797
    9. '
' → logprob: -12.812267303466797
    10. ' ' → logprob: -13.062267303466797

Token 116: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3067406713962555
    2. ' n' → logprob: -1.556740641593933
    3. '   ' → logprob: -2.9317407608032227
    4. '	n' → logprob: -11.181740760803223
    5. '    ' → logprob: -12.056740760803223
    6. '    
' → logprob: -12.556740760803223
    7. ' ' → logprob: -13.181740760803223
    8. ' 
' → logprob: -13.431740760803223
    9. 'nb' → logprob: -13.556740760803223
    10. '  ' → logprob: -13.681740760803223

Token 117: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.12941715121269226
    2. 'n' (adapté à ' n') → logprob: -2.1294171810150146
    3. '   ' → logprob: -6.0044169425964355
    4. 'nb' → logprob: -12.254417419433594
    5. ' nb' → logprob: -12.379417419433594
    6. ' ' → logprob: -12.629417419433594
    7. '	n' → logprob: -12.754417419433594
    8. '    
' → logprob: -14.129417419433594
    9. 'N' → logprob: -14.879417419433594
    10. 'num' → logprob: -15.129417419433594

Token 118: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018199341371655464
    2. '=' → logprob: -4.018199443817139
    3. ',' → logprob: -10.64319896697998
    4. '_' → logprob: -11.26819896697998
    5. '=int' → logprob: -12.39319896697998
    6. ' ' → logprob: -12.51819896697998
    7. ')' → logprob: -13.64319896697998
    8. ' =
' → logprob: -14.01819896697998
    9. 'space' → logprob: -14.26819896697998
    10. ' ' → logprob: -14.51819896697998

Token 119: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.004080062732100487
    2. 'int' → logprob: -5.504080295562744
    3. ' ' → logprob: -14.129079818725586
    4. '=int' → logprob: -15.004079818725586
    5. ' in' → logprob: -15.379079818725586
    6. ' len' → logprob: -15.629079818725586
    7. '	int' → logprob: -16.379079818725586
    8. '(int' → logprob: -17.504079818725586
    9. ' ' → logprob: -17.629079818725586
    10. '   ' → logprob: -17.879079818725586

Token 120: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.012578642927110195
    2. '(' → logprob: -4.38757848739624
    3. 'input' → logprob: -9.762578964233398
    4. ' (' → logprob: -12.137578964233398
    5. '(
' → logprob: -12.762578964233398
    6. ' input' → logprob: -13.512578964233398
    7. '=input' → logprob: -14.512578964233398
    8. '(raw' → logprob: -14.887578964233398
    9. '()' → logprob: -15.012578964233398
    10. ' ' → logprob: -15.387578964233398

Token 121: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.332891047000885
    2. '(' → logprob: -1.8328909873962402
    3. '())' → logprob: -2.4578909873962402
    4. '("("' → logprob: -4.08289098739624
    5. '('' → logprob: -4.33289098739624
    6. ')' → logprob: -5.58289098739624
    7. '("' → logprob: -6.20789098739624
    8. '("")' → logprob: -7.70789098739624
    9. '(""))' → logprob: -7.83289098739624
    10. '(
' → logprob: -8.707891464233398

Token 122: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02116452530026436
    2. '    
' → logprob: -4.521164417266846
    3. 's' → logprob: -4.896164417266846
    4. '
' → logprob: -7.396164417266846
    5. 'sum' → logprob: -8.021164894104004
    6. 'values' → logprob: -8.146164894104004
    7. 'val' → logprob: -8.271164894104004
    8. '```' → logprob: -8.396164894104004
    9. 'result' → logprob: -8.521164894104004
    10. '    ' → logprob: -9.146164894104004

Token 123: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1212708130478859
    2. 'values' → logprob: -2.9962708950042725
    3. '    
' → logprob: -3.7462708950042725
    4. 's' → logprob: -3.9962708950042725
    5. 'val' → logprob: -4.871270656585693
    6. ' values' → logprob: -5.996270656585693
    7. 'n' → logprob: -6.746270656585693
    8. ')' → logprob: -6.996270656585693
    9. 'data' → logprob: -6.996270656585693
    10. 'result' → logprob: -6.996270656585693

Token 124: ' Lecture' (ID: 106534)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.946042537689209
    2. ' values' → logprob: -1.446042537689209
    3. 'val' → logprob: -1.571042537689209
    4. ' valeurs' → logprob: -2.321042537689209
    5. 's' → logprob: -3.696042537689209
    6. ' val' → logprob: -4.321042537689209
    7. 'vals' → logprob: -4.446042537689209
    8. ' vals' → logprob: -5.446042537689209
    9. 'total' → logprob: -5.821042537689209
    10. ' total' → logprob: -6.196042537689209

Token 125: ' de' (ID: 334)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.5425010323524475
    2. '()' → logprob: -1.2925009727478027
    3. '   ' → logprob: -2.5425009727478027
    4. 'des' → logprob: -2.9175009727478027
    5. '(' → logprob: -5.417500972747803
    6. '    ' → logprob: -6.667500972747803
    7. '[]' → logprob: -7.042500972747803
    8. 's' → logprob: -7.167500972747803
    9. 'n' → logprob: -7.292500972747803
    10. '(n' → logprob: -7.417500972747803

Token 126: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.030111676082015038
    2. ' les' → logprob: -3.905111789703369
    3. ' ' → logprob: -5.530111789703369
    4. 'les' → logprob: -6.405111789703369
    5. 'la' → logprob: -6.905111789703369
    6. ' n' → logprob: -7.280111789703369
    7. ' l' → logprob: -7.405111789703369
    8. 's' → logprob: -8.030111312866211
    9. 'l' → logprob: -8.155111312866211
    10. 'n' → logprob: -8.280111312866211

Token 127: ' liste' (ID: 31719)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.41324082016944885
    2. 'liste' → logprob: -1.1632407903671265
    3. ' liste' → logprob: -4.163240909576416
    4. 'values' → logprob: -5.788240909576416
    5. ' valeurs' → logprob: -6.163240909576416
    6. 'list' → logprob: -6.288240909576416
    7. 's' → logprob: -6.913240909576416
    8. 'sé' → logprob: -7.288240909576416
    9. 'vals' → logprob: -7.663240909576416
    10. ' val' → logprob: -7.788240909576416

Token 128: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.004465131554752588
    2. 'des' → logprob: -6.379465103149414
    3. 's' → logprob: -7.629465103149414
    4. 'values' → logprob: -8.254465103149414
    5. ' values' → logprob: -8.254465103149414
    6. 'val' → logprob: -8.254465103149414
    7. ' ' → logprob: -8.379465103149414
    8. ' de' → logprob: -8.754465103149414
    9. '_values' → logprob: -8.754465103149414
    10. ' val' → logprob: -9.004465103149414

Token 129: ' ent' (ID: 1121)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.06751649081707001
    2. ' valeurs' → logprob: -2.817516565322876
    3. ' nombres' → logprob: -6.067516326904297
    4. ' val' → logprob: -6.442516326904297
    5. 'values' → logprob: -6.942516326904297
    6. 'n' → logprob: -7.817516326904297
    7. 'ent' → logprob: -9.442516326904297
    8. ' values' → logprob: -9.942516326904297
    9. 'vals' → logprob: -9.942516326904297
    10. 'nombre' → logprob: -10.067516326904297

Token 130: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.020943673327565193
    2. 'ières' → logprob: -3.8959436416625977
    3. 'ieres' → logprob: -8.895943641662598
    4. 'ités' → logprob: -9.520943641662598
    5. '   ' → logprob: -9.770943641662598
    6. 'ier' → logprob: -10.020943641662598
    7. 't' → logprob: -10.270943641662598
    8. 'i' → logprob: -10.895943641662598
    9. 'ers' → logprob: -11.520943641662598
    10. 'ires' → logprob: -11.770943641662598

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008272591046988964
    2. 'values' → logprob: -5.883272647857666
    3. 's' → logprob: -6.383272647857666
    4. 'n' → logprob: -7.258272647857666
    5. '    
' → logprob: -7.258272647857666
    6. '	values' → logprob: -7.508272647857666
    7. ' values' → logprob: -7.883272647857666
    8. 'val' → logprob: -8.008272171020508
    9. ' valeurs' → logprob: -8.258272171020508
    10. '    ' → logprob: -9.008272171020508

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05394342541694641
    2. 'values' → logprob: -3.928943395614624
    3. ' values' → logprob: -3.928943395614624
    4. ' valeurs' → logprob: -5.428943634033203
    5. 'val' → logprob: -5.553943634033203
    6. '	values' → logprob: -6.928943634033203
    7. ' val' → logprob: -7.303943634033203
    8. ' lst' → logprob: -7.678943634033203
    9. '    
' → logprob: -7.803943634033203
    10. 'n' → logprob: -8.053943634033203

Token 133: ' a' (ID: 261)
  Prédit: 'values'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'values' → logprob: -0.35083335638046265
    2. ' values' → logprob: -1.7258334159851074
    3. 'val' → logprob: -3.1008334159851074
    4. ' valeurs' → logprob: -3.1008334159851074
    5. 'vals' → logprob: -4.850833415985107
    6. 'numbers' → logprob: -4.975833415985107
    7. ' numbers' → logprob: -5.600833415985107
    8. 'lst' → logprob: -5.850833415985107
    9. 'nums' → logprob: -6.225833415985107
    10. ' val' → logprob: -6.475833415985107

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06287617981433868
    2. '=' → logprob: -2.8128762245178223
    3. 's' → logprob: -7.062876224517822
    4. '_' → logprob: -10.312875747680664
    5. '[]' → logprob: -12.312875747680664
    6. '[' → logprob: -12.562875747680664
    7. '[:]' → logprob: -12.812875747680664
    8. '=[]' → logprob: -13.062875747680664
    9. 'a' → logprob: -13.937875747680664
    10. ' =[' → logprob: -14.562875747680664

Token 135: ' list' (ID: 1562)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.071732759475708
    2. ' [' → logprob: -1.321732759475708
    3. '[list' → logprob: -1.321732759475708
    4. ' list' → logprob: -2.571732759475708
    5. 'list' → logprob: -3.071732759475708
    6. '[int' → logprob: -7.571732521057129
    7. '[input' → logprob: -7.821732521057129
    8. '[List' → logprob: -8.571732521057129
    9. '[n' → logprob: -8.696732521057129
    10. '[l' → logprob: -9.696732521057129

Token 136: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.17397041618824005
    2. '(' → logprob: -2.0489704608917236
    3. '(input' → logprob: -3.9239704608917236
    4. '(int' → logprob: -4.5489702224731445
    5. '()' → logprob: -8.548970222473145
    6. '(eval' → logprob: -8.923970222473145
    7. '(range' → logprob: -9.673970222473145
    8. '(
' → logprob: -11.048970222473145
    9. '(s' → logprob: -11.298970222473145
    10. 'map' → logprob: -11.673970222473145

Token 137: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005243360530585051
    2. '(' → logprob: -5.255243301391602
    3. '(
' → logprob: -12.380243301391602
    4. '(input' → logprob: -12.880243301391602
    5. 'int' → logprob: -13.630243301391602
    6. ' (' → logprob: -14.380243301391602
    7. '<int' → logprob: -15.130243301391602
    8. '=int' → logprob: -15.380243301391602
    9. ' int' → logprob: -16.0052433013916
    10. ')' → logprob: -16.3802433013916

Token 138: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.21261605620384216
    2. ',input' → logprob: -1.8376160860061646
    3. ',' → logprob: -3.587615966796875
    4. 'input' → logprob: -5.962615966796875
    5. ' (' → logprob: -7.087615966796875
    6. '(' → logprob: -7.337615966796875
    7. ' input' → logprob: -8.087615966796875
    8. ' ,' → logprob: -8.212615966796875
    9. '(
' → logprob: -11.587615966796875
    10. '   ' → logprob: -11.587615966796875

Token 139: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0619741789996624
    2. ' input' → logprob: -2.811974287033081
    3. '(input' → logprob: -13.18697452545166
    4. ' ' → logprob: -13.18697452545166
    5. ',input' → logprob: -13.93697452545166
    6. '   ' → logprob: -14.06197452545166
    7. '	input' → logprob: -14.43697452545166
    8. '=input' → logprob: -15.81197452545166
    9. '<input' → logprob: -16.186973571777344
    10. '  ' → logprob: -16.311973571777344

Token 140: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.6537622034084052e-05
    2. '()' → logprob: -10.62502670288086
    3. ')' → logprob: -14.50002670288086
    4. ' ().' → logprob: -14.62502670288086
    5. '()))' → logprob: -14.75002670288086
    6. '()
' → logprob: -14.87502670288086
    7. '(' → logprob: -16.12502670288086
    8. '())' → logprob: -16.25002670288086
    9. '))' → logprob: -16.62502670288086
    10. '()));' → logprob: -17.12502670288086

Token 141: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011715330183506012
    2. 'strip' → logprob: -6.751171588897705
    3. 'rstrip' → logprob: -13.751171112060547
    4. '(split' → logprob: -15.876171112060547
    5. ' split' → logprob: -16.251171112060547
    6. 'spl' → logprob: -18.001171112060547
    7. '.split' → logprob: -21.001171112060547
    8. ')' → logprob: -21.126171112060547
    9. 's' → logprob: -21.126171112060547
    10. '_split' → logprob: -21.751171112060547

Token 142: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2273641675710678
    2. '()' → logprob: -1.727364182472229
    3. '())' → logprob: -3.8523640632629395
    4. '))' → logprob: -6.2273640632629395
    5. '(' → logprob: -6.8523640632629395
    6. '())))' → logprob: -6.9773640632629395
    7. ')' → logprob: -7.9773640632629395
    8. ')))' → logprob: -9.977364540100098
    9. '()));' → logprob: -11.727364540100098
    10. '()))
' → logprob: -11.727364540100098

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01270117238163948
    2. '    
' → logprob: -4.637701034545898
    3. 's' → logprob: -6.762701034545898
    4. 'n' → logprob: -7.637701034545898
    5. '
' → logprob: -7.887701034545898
    6. 'neg' → logprob: -8.262701034545898
    7. 'sum' → logprob: -8.262701034545898
    8. '   
' → logprob: -9.012701034545898
    9. 'negative' → logprob: -9.387701034545898
    10. '  ' → logprob: -10.012701034545898

Token 144: ' #' (ID: 1069)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.0920214653015137
    2. 'neg' → logprob: -1.0920214653015137
    3. 'sum' → logprob: -2.0920214653015137
    4. 's' → logprob: -2.5920214653015137
    5. 'nb' → logprob: -2.7170214653015137
    6. 'negative' → logprob: -3.5920214653015137
    7. 'count' → logprob: -4.717021465301514
    8. 'total' → logprob: -4.967021465301514
    9. '#' (adapté à ' #') → logprob: -4.967021465301514
    10. 'som' → logprob: -5.217021465301514

Token 145: ' Compt' (ID: 165198)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.749547004699707
    2. 'abs' → logprob: -1.374547004699707
    3. 'nb' → logprob: -1.749547004699707
    4. 'negative' → logprob: -3.624547004699707
    5. 'sum' → logprob: -3.999547004699707
    6. 's' → logprob: -4.124547004699707
    7. '#' → logprob: -4.624547004699707
    8. 'count' → logprob: -4.874547004699707
    9. 'n' → logprob: -5.124547004699707
    10. 'total' → logprob: -5.374547004699707

Token 146: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.33911463618278503
    2. 'er' → logprob: -1.4641146659851074
    3. '   ' → logprob: -2.9641146659851074
    4. 'e' → logprob: -6.589114665985107
    5. 'eg' → logprob: -6.839114665985107
    6. 'eur' → logprob: -7.964114665985107
    7. 'ateur' → logprob: -8.08911418914795
    8. '    ' → logprob: -8.83911418914795
    9. 'tage' → logprob: -8.96411418914795
    10. ' =' → logprob: -9.08911418914795

Token 147: ' des' (ID: 731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.43350404500961304
    2. '_neg' → logprob: -1.5585041046142578
    3. '_des' → logprob: -2.683504104614258
    4. ' des' → logprob: -3.183504104614258
    5. 'des' → logprob: -4.308504104614258
    6. '_n' → logprob: -5.058504104614258
    7. ' ' → logprob: -5.683504104614258
    8. '_nb' → logprob: -6.433504104614258
    9. '_negative' → logprob: -6.433504104614258
    10. '   ' → logprob: -6.558504104614258

Token 148: ' nombres' (ID: 76205)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.3020208477973938
    2. 'val' → logprob: -1.552020788192749
    3. ' nég' → logprob: -3.927020788192749
    4. 'n' → logprob: -4.052021026611328
    5. ' valeurs' → logprob: -5.302021026611328
    6. ' val' → logprob: -6.552021026611328
    7. ' negatives' → logprob: -6.927021026611328
    8. ' neg' → logprob: -7.052021026611328
    9. 'abs' → logprob: -7.177021026611328
    10. 'negative' → logprob: -8.052021026611328

Token 149: ' nég' (ID: 55805)
  Prédit: '_neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.8101947903633118
    2. '_n' → logprob: -0.9351947903633118
    3. ' nég' → logprob: -2.310194730758667
    4. '_' → logprob: -3.435194730758667
    5. 'neg' → logprob: -3.810194730758667
    6. 'n' → logprob: -4.935194969177246
    7. '   ' → logprob: -7.435194969177246
    8. ' ' → logprob: -7.685194969177246
    9. '_negative' → logprob: -8.435194969177246
    10. ' n' → logprob: -8.935194969177246

Token 150: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.0011035411152988672
    2. 'atives' → logprob: -7.376103401184082
    3. '   ' → logprob: -8.501103401184082
    4. 'atif' → logprob: -9.001103401184082
    5. 'at' → logprob: -9.876103401184082
    6. 'eg' → logprob: -10.126103401184082
    7. 'ative' → logprob: -10.751103401184082
    8. 'ég' → logprob: -11.001103401184082
    9. 'ér' → logprob: -12.626103401184082
    10. 'ativement' → logprob: -12.626103401184082

Token 151: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5310555100440979
    2. 'neg' → logprob: -0.9060555100440979
    3. 'n' → logprob: -5.906055450439453
    4. ',' → logprob: -6.531055450439453
    5. 'negative' → logprob: -6.906055450439453
    6. '    
' → logprob: -7.281055450439453
    7. '_neg' → logprob: -7.656055450439453
    8. 'nb' → logprob: -7.781055450439453
    9. ' nég' → logprob: -7.906055450439453
    10. 'count' → logprob: -8.656055450439453

Token 152: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16126851737499237
    2. ' a' → logprob: -1.9112684726715088
    3. ' la' → logprob: -7.161268711090088
    4. ' ' → logprob: -8.91126823425293
    5. 'la' → logprob: -9.66126823425293
    6. '   ' → logprob: -10.16126823425293
    7. 'l' → logprob: -11.41126823425293
    8. ' le' → logprob: -12.66126823425293
    9. 'le' → logprob: -12.66126823425293
    10. ' the' → logprob: -13.41126823425293

Token 153: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004200086463242769
    2. ' a' → logprob: -5.879199981689453
    3. 'liste' → logprob: -7.004199981689453
    4. ' liste' → logprob: -8.754199981689453
    5. '   ' → logprob: -9.129199981689453
    6. 'val' → logprob: -9.379199981689453
    7. ' ' → logprob: -10.754199981689453
    8. 's' → logprob: -11.129199981689453
    9. 'list' → logprob: -11.254199981689453
    10. 'sequence' → logprob: -11.379199981689453

Token 154: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04564929008483887
    2. 'neg' → logprob: -3.170649290084839
    3. 'negative' → logprob: -7.045649528503418
    4. 'nb' → logprob: -7.545649528503418
    5. 'n' → logprob: -7.670649528503418
    6. 'count' → logprob: -7.920649528503418
    7. '    
' → logprob: -8.295649528503418
    8. 'cnt' → logprob: -10.545649528503418
    9. 'nbr' → logprob: -10.545649528503418
    10. ' nb' → logprob: -11.420649528503418

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015808288007974625
    2. 'neg' → logprob: -4.26580810546875
    3. '    
' → logprob: -8.01580810546875
    4. 'negative' → logprob: -8.14080810546875
    5. 'n' → logprob: -8.26580810546875
    6. 'nb' → logprob: -8.51580810546875
    7. 'count' → logprob: -8.76580810546875
    8. ' nb' → logprob: -9.26580810546875
    9. ' neg' → logprob: -9.64080810546875
    10. ' nég' → logprob: -9.89080810546875

Token 156: ' cnt' (ID: 27340)
  Prédit: 'neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neg' → logprob: -0.0683087632060051
    2. 'negative' → logprob: -3.5683088302612305
    3. 'count' → logprob: -4.4433088302612305
    4. '   ' → logprob: -4.6933088302612305
    5. 'nb' → logprob: -4.6933088302612305
    6. ' neg' → logprob: -5.3183088302612305
    7. ' nb' → logprob: -7.3183088302612305
    8. ' negative' → logprob: -7.4433088302612305
    9. 'n' → logprob: -7.8183088302612305
    10. 'cnt' (adapté à ' cnt') → logprob: -8.06830883026123

Token 157: ' =' (ID: 314)
  Prédit: '_neg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neg' → logprob: -0.05838553607463837
    2. '_' → logprob: -3.0583856105804443
    3. '_n' → logprob: -4.683385372161865
    4. '_negative' → logprob: -8.058385848999023
    5. 'neg' → logprob: -10.058385848999023
    6. '_-' → logprob: -10.308385848999023
    7. ' =' → logprob: -10.433385848999023
    8. '_ne' → logprob: -11.183385848999023
    9. 'n' → logprob: -11.308385848999023
    10. '_NEG' → logprob: -11.433385848999023

Token 158: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.5185615420341492
    2. '0' → logprob: -1.393561601638794
    3. ' ' → logprob: -2.393561601638794
    4. 'sum' → logprob: -2.768561601638794
    5. ' a' → logprob: -6.518561363220215
    6. 'a' → logprob: -7.393561363220215
    7. ' len' → logprob: -8.393561363220215
    8. 'len' → logprob: -10.518561363220215
    9. '   ' → logprob: -11.518561363220215
    10. ' ' → logprob: -12.268561363220215

Token 159: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12749777734279633
    2. '(x' → logprob: -2.127497673034668
    3. '([' → logprob: -9.002497673034668
    4. '(num' → logprob: -9.002497673034668
    5. '(val' → logprob: -9.377497673034668
    6. '(abs' → logprob: -9.502497673034668
    7. '(-' → logprob: -9.627497673034668
    8. '(i' → logprob: -10.627497673034668
    9. '(a' → logprob: -11.002497673034668
    10. '(v' → logprob: -11.127497673034668

Token 160: ' <' (ID: 464)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.5379279255867004
    2. '(' → logprob: -0.9129279255867004
    3. '(i' → logprob: -5.412928104400635
    4. 'x' → logprob: -5.912928104400635
    5. '<' → logprob: -6.037928104400635
    6. ' <' → logprob: -6.287928104400635
    7. '(a' → logprob: -7.162928104400635
    8. '(<' → logprob: -7.787928104400635
    9. '(val' → logprob: -7.787928104400635
    10. ' x' → logprob: -7.912928104400635

Token 161: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868926465511322
    2. ' ' → logprob: -1.1368926763534546
    3. 'a' → logprob: -11.136892318725586
    4. ' a' → logprob: -12.261892318725586
    5. 'x' → logprob: -13.886892318725586
    6. ' x' → logprob: -15.136892318725586
    7. '  ' → logprob: -15.324392318725586
    8. '   ' → logprob: -15.886892318725586
    9. ' ' → logprob: -16.074392318725586
    10. 'o' → logprob: -17.011892318725586

Token 162: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005470762262120843
    2. ' ' → logprob: -7.625546932220459
    3. 'a' → logprob: -9.750547409057617
    4. 'x' → logprob: -14.750547409057617
    5. ' a' → logprob: -15.250547409057617
    6. '   ' → logprob: -17.000547409057617
    7. '-' → logprob: -17.750547409057617
    8. '  ' → logprob: -17.750547409057617
    9. 'i' → logprob: -17.875547409057617
    10. '```' → logprob: -18.125547409057617

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.020793301984667778
    2. 'for' → logprob: -3.8957931995391846
    3. ' a' → logprob: -9.395792961120605
    4. '   ' → logprob: -9.520792961120605
    5. 'a' → logprob: -9.895792961120605
    6. ')' → logprob: -11.020792961120605
    7. ' ' → logprob: -11.145792961120605
    8. '    ' → logprob: -12.270792961120605
    9. '	for' → logprob: -12.770792961120605
    10. ' in' → logprob: -13.395792961120605

Token 164: ' i' (ID: 575)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.0890970528125763
    2. 'a' → logprob: -2.464097023010254
    3. ' ' → logprob: -9.339097023010254
    4. '	a' → logprob: -10.714097023010254
    5. ' i' → logprob: -10.714097023010254
    6. 'i' → logprob: -11.589097023010254
    7. '  ' → logprob: -11.964097023010254
    8. '   ' → logprob: -13.214097023010254
    9. ' ' → logprob: -13.339097023010254
    10. '_a' → logprob: -13.464097023010254

Token 165: ' in' (ID: 306)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3876293897628784
    2. 'a' → logprob: -1.1376293897628784
    3. ' in' → logprob: -7.262629508972168
    4. '	a' → logprob: -11.387629508972168
    5. '_a' → logprob: -11.512629508972168
    6. ')' → logprob: -12.012629508972168
    7. 'in' → logprob: -12.262629508972168
    8. ')a' → logprob: -12.262629508972168
    9. '<|end|>' → logprob: -12.637629508972168
    10. ',a' → logprob: -12.637629508972168

Token 166: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03805377334356308
    2. ' a' → logprob: -3.2880537509918213
    3. ' ' → logprob: -12.163053512573242
    4. '   ' → logprob: -13.288053512573242
    5. ')a' → logprob: -13.288053512573242
    6. '	a' → logprob: -13.663053512573242
    7. ')' → logprob: -13.913053512573242
    8. '  ' → logprob: -14.913053512573242
    9. '
' → logprob: -15.413053512573242
    10. '    ' → logprob: -15.538053512573242

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00021224225929472595
    2. ' )' → logprob: -9.000212669372559
    3. ')
' → logprob: -9.625212669372559
    4. '   ' → logprob: -10.750212669372559
    5. ')

' → logprob: -14.500212669372559
    6. '))' → logprob: -15.625212669372559
    7. ' ' → logprob: -16.000211715698242
    8. ')a' → logprob: -16.125211715698242
    9. ')
' → logprob: -16.250211715698242
    10. ' )
' → logprob: -16.625211715698242

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014625000767409801
    2. '    
' → logprob: -7.251462459564209
    3. 'sum' → logprob: -7.751462459564209
    4. 's' → logprob: -8.501462936401367
    5. 'abs' → logprob: -10.251462936401367
    6. '
' → logprob: -10.376462936401367
    7. 'total' → logprob: -11.001462936401367
    8. '<|end|>' → logprob: -11.626462936401367
    9. '    ' → logprob: -12.126462936401367
    10. '   
' → logprob: -12.376462936401367

Token 169: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07600536942481995
    2. 's' → logprob: -3.326005458831787
    3. 'abs' → logprob: -4.326005458831787
    4. 'sum' → logprob: -4.326005458831787
    5. 'total' → logprob: -5.451005458831787
    6. '    
' → logprob: -5.951005458831787
    7. '
' → logprob: -6.076005458831787
    8. 'som' → logprob: -7.076005458831787
    9. '#' (adapté à ' #') → logprob: -8.701004981994629
    10. 'val' → logprob: -9.326004981994629

Token 170: ' Calcul' (ID: 57243)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6388846039772034
    2. 's' → logprob: -1.2638845443725586
    3. 'total' → logprob: -2.0138845443725586
    4. 'sum' → logprob: -3.5138845443725586
    5. '   ' → logprob: -5.013884544372559
    6. ' total' → logprob: -5.513884544372559
    7. ' s' → logprob: -5.638884544372559
    8. 'val' → logprob: -6.263884544372559
    9. 'res' → logprob: -6.388884544372559
    10. ' abs' → logprob: -6.638884544372559

Token 171: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.1735504865646362
    2. 's' → logprob: -1.7985504865646362
    3. '   ' → logprob: -1.7985504865646362
    4. ' s' → logprob: -1.7985504865646362
    5. ' la' → logprob: -2.298550605773926
    6. ' sum' → logprob: -3.548550605773926
    7. ' total' → logprob: -3.923550605773926
    8. 'sum' → logprob: -4.298550605773926
    9. ' abs' → logprob: -4.923550605773926
    10. 'abs' → logprob: -5.423550605773926

Token 172: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4818618595600128
    2. ' sum' → logprob: -1.2318618297576904
    3. 'abs' → logprob: -2.8568618297576904
    4. ' la' → logprob: -4.1068620681762695
    5. ' abs' → logprob: -4.3568620681762695
    6. 'la' → logprob: -6.6068620681762695
    7. 's' → logprob: -7.2318620681762695
    8. '   ' → logprob: -7.6068620681762695
    9. ' s' → logprob: -8.35686206817627
    10. ' somme' → logprob: -8.35686206817627

Token 173: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4913800060749054
    2. 'abs' → logprob: -1.241379976272583
    3. 's' → logprob: -2.741379976272583
    4. 'total' → logprob: -3.491379976272583
    5. 'som' → logprob: -5.991380214691162
    6. ' sum' → logprob: -7.241380214691162
    7. ' total' → logprob: -8.491379737854004
    8. ' abs' → logprob: -8.491379737854004
    9. ' somme' → logprob: -8.741379737854004
    10. 'val' → logprob: -9.116379737854004

Token 174: ' des' (ID: 731)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -1.051942229270935
    2. '   ' → logprob: -1.426942229270935
    3. 'des' → logprob: -1.801942229270935
    4. ' des' → logprob: -2.5519423484802246
    5. '_abs' → logprob: -2.6769423484802246
    6. '(abs' → logprob: -3.6769423484802246
    7. ' absol' → logprob: -3.9269423484802246
    8. 'ab' → logprob: -4.426942348480225
    9. ' abs' → logprob: -4.801942348480225
    10. 'val' → logprob: -5.051942348480225

Token 175: ' valeurs' (ID: 73668)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.002111597452312708
    2. ' abs' → logprob: -6.377111434936523
    3. 'map' → logprob: -7.877111434936523
    4. '(abs' → logprob: -10.877111434936523
    5. 'val' → logprob: -11.752111434936523
    6. ' map' → logprob: -13.627111434936523
    7. 'a' → logprob: -14.502111434936523
    8. '   ' → logprob: -15.002111434936523
    9. 'absolute' → logprob: -15.127111434936523
    10. '_abs' → logprob: -15.127111434936523

Token 176: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.060990288853645325
    2. '(abs' → logprob: -3.935990333557129
    3. '_abs' → logprob: -4.185990333557129
    4. ' abs' → logprob: -4.435990333557129
    5. ' absol' → logprob: -5.060990333557129
    6. '   ' → logprob: -5.435990333557129
    7. 'ab' → logprob: -6.810990333557129
    8. '_' → logprob: -8.685990333557129
    9. '_ab' → logprob: -8.810990333557129
    10. ' ' → logprob: -8.935990333557129

Token 177: 'ues' (ID: 1406)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.022618314251303673
    2. '(' → logprob: -4.647618293762207
    3. '()' → logprob: -4.772618293762207
    4. 'ol' → logprob: -6.647618293762207
    5. '(abs' → logprob: -7.022618293762207
    6. '(i' → logprob: -7.272618293762207
    7. 'es' → logprob: -7.522618293762207
    8. 'a' → logprob: -8.147618293762207
    9. 'ules' → logprob: -8.897618293762207
    10. 'ues' → logprob: -9.147618293762207

Token 178: ' des' (ID: 731)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20097622275352478
    2. 's' → logprob: -2.0759761333465576
    3. 'sum' → logprob: -3.5759761333465576
    4. 'abs' → logprob: -4.325976371765137
    5. 'total' → logprob: -4.950976371765137
    6. ' s' → logprob: -5.325976371765137
    7. 'val' → logprob: -6.700976371765137
    8. '    
' → logprob: -7.700976371765137
    9. 'res' → logprob: -7.700976371765137
    10. 'result' → logprob: -8.200976371765137

Token 179: ' éléments' (ID: 57375)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07897152751684189
    2. ' a' → logprob: -2.5789716243743896
    3. 'i' → logprob: -9.828971862792969
    4. ' ' → logprob: -11.828971862792969
    5. ' i' → logprob: -11.953971862792969
    6. ' elements' → logprob: -12.328971862792969
    7. ' éléments' → logprob: -12.828971862792969
    8. 'val' → logprob: -13.203971862792969
    9. 'elements' → logprob: -13.828971862792969
    10. '   ' → logprob: -13.953971862792969

Token 180: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1326993703842163
    2. 's' → logprob: -3.007699489593506
    3. 'abs' → logprob: -3.257699489593506
    4. ' s' → logprob: -4.382699489593506
    5. 'sum' → logprob: -4.507699489593506
    6. ' abs' → logprob: -5.507699489593506
    7. 'val' → logprob: -5.507699489593506
    8. 'total' → logprob: -6.132699489593506
    9. ' total' → logprob: -7.382699489593506
    10. ' sum' → logprob: -7.757699489593506

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1874609738588333
    2. 's' → logprob: -1.937461018562317
    3. ' s' → logprob: -4.062460899353027
    4. 'sum' → logprob: -5.312460899353027
    5. 'total' → logprob: -5.937460899353027
    6. ' total' → logprob: -7.312460899353027
    7. 'abs' → logprob: -7.937460899353027
    8. ' sum' → logprob: -8.187460899353027
    9. 'result' → logprob: -8.187460899353027
    10. '    
' → logprob: -8.937460899353027

Token 182: ' ans' (ID: 3345)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.6244645714759827
    2. 's' → logprob: -1.124464511871338
    3. 'abs' → logprob: -2.624464511871338
    4. 'ans' (adapté à ' ans') → logprob: -3.749464511871338
    5. 'res' → logprob: -4.374464511871338
    6. 'sum' → logprob: -4.374464511871338
    7. '   ' → logprob: -4.874464511871338
    8. ' total' → logprob: -5.499464511871338
    9. ' s' → logprob: -6.124464511871338
    10. 'sm' → logprob: -6.374464511871338

Token 183: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. '_' → logprob: -15.600207328796387
    4. ' ' → logprob: -16.22520637512207
    5. ' +=' → logprob: -16.60020637512207
    6. ' ' → logprob: -16.72520637512207
    7. '=sum' → logprob: -17.85020637512207
    8. '	' → logprob: -18.10020637512207
    9. '=int' → logprob: -18.10020637512207
    10. '   ' → logprob: -18.10020637512207

Token 184: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.6932008862495422
    2. 'sum' → logprob: -0.6932008862495422
    3. '0' → logprob: -10.193201065063477
    4. '   ' → logprob: -11.568201065063477
    5. 'abs' → logprob: -12.693201065063477
    6. ' ' → logprob: -13.443201065063477
    7. ' abs' → logprob: -13.818201065063477
    8. '	sum' → logprob: -14.568201065063477
    9. '(sum' → logprob: -14.818201065063477
    10. '=sum' → logprob: -16.318201065063477

Token 185: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.0009320637909695506
    2. 'abs' → logprob: -7.000932216644287
    3. '(map' → logprob: -11.125931739807129
    4. '(' → logprob: -12.250931739807129
    5. ' abs' → logprob: -14.250931739807129
    6. ' (' → logprob: -15.625931739807129
    7. 'map' → logprob: -15.750931739807129
    8. '   ' → logprob: -17.250932693481445
    9. '(|' → logprob: -17.750932693481445
    10. '_abs' → logprob: -18.125932693481445

Token 186: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0944414958357811
    2. '(x' → logprob: -2.4694414138793945
    3. '(' → logprob: -6.2194414138793945
    4. 'x' → logprob: -6.5944414138793945
    5. '(a' → logprob: -6.5944414138793945
    6. 'i' → logprob: -7.7194414138793945
    7. 'a' → logprob: -8.219441413879395
    8. ')' → logprob: -10.844441413879395
    9. '(
' → logprob: -11.844441413879395
    10. '(e' → logprob: -12.594441413879395

Token 187: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003990896511822939
    2. '))' → logprob: -6.12899112701416
    3. 'a' → logprob: -7.37899112701416
    4. '(a' → logprob: -7.50399112701416
    5. '(i' → logprob: -7.87899112701416
    6. '(' → logprob: -8.75399112701416
    7. ' )' → logprob: -10.25399112701416
    8. ')a' → logprob: -10.87899112701416
    9. '   ' → logprob: -11.75399112701416
    10. 'i' → logprob: -11.87899112701416

Token 188: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004035418387502432
    2. ' for' → logprob: -6.004035472869873
    3. ' )' → logprob: -7.254035472869873
    4. 'for' → logprob: -8.504034996032715
    5. 'a' → logprob: -8.879034996032715
    6. '(a' → logprob: -9.004034996032715
    7. ' a' → logprob: -9.129034996032715
    8. '))' → logprob: -9.254034996032715
    9. '   ' → logprob: -9.629034996032715
    10. ')a' → logprob: -10.004034996032715

Token 189: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5759527087211609
    2. ' a' → logprob: -0.8259527087211609
    3. '	a' → logprob: -12.325952529907227
    4. ' ' → logprob: -12.700952529907227
    5. ')a' → logprob: -13.325952529907227
    6. '   ' → logprob: -13.950952529907227
    7. ')' → logprob: -14.075952529907227
    8. 'i' → logprob: -14.200952529907227
    9. '  ' → logprob: -14.325952529907227
    10. '#a' → logprob: -15.200952529907227

Token 190: ' in' (ID: 306)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5759748816490173
    2. 'a' → logprob: -0.8259748816490173
    3. ' ' → logprob: -11.450974464416504
    4. '   ' → logprob: -12.325974464416504
    5. '	a' → logprob: -12.450974464416504
    6. '  ' → logprob: -12.450974464416504
    7. ')' → logprob: -12.700974464416504
    8. ' in' → logprob: -12.950974464416504
    9. ')a' → logprob: -13.200974464416504
    10. '_a' → logprob: -13.450974464416504

Token 191: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03804975748062134
    2. ' a' → logprob: -3.2880496978759766
    3. '   ' → logprob: -12.788049697875977
    4. ' ' → logprob: -12.788049697875977
    5. '	a' → logprob: -13.913049697875977
    6. '  ' → logprob: -14.788049697875977
    7. ')a' → logprob: -14.788049697875977
    8. ')' → logprob: -15.038049697875977
    9. '
' → logprob: -15.975549697875977
    10. '    ' → logprob: -16.225549697875977

Token 192: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9743012671824545e-05
    2. ')
' → logprob: -11.500020027160645
    3. ' )' → logprob: -12.250020027160645
    4. '   ' → logprob: -12.375020027160645
    5. '))' → logprob: -14.500020027160645
    6. ')

' → logprob: -17.000019073486328
    7. ')`' → logprob: -17.375019073486328
    8. ')
' → logprob: -18.000019073486328
    9. ')**' → logprob: -18.000019073486328
    10. '),' → logprob: -18.125019073486328

Token 193: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049351535737514496
    2. '
' → logprob: -3.174351453781128
    3. '    
' → logprob: -5.424351692199707
    4. 'if' → logprob: -7.174351692199707
    5. ' if' → logprob: -7.299351692199707
    6. '<|end|>' → logprob: -9.049351692199707
    7. '\n' → logprob: -9.924351692199707
    8. '  
' → logprob: -10.174351692199707
    9. ' 
' → logprob: -10.299351692199707
    10. 'n' → logprob: -10.424351692199707

Token 194: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13440921902656555
    2. 'min' → logprob: -2.509409189224243
    3. 'if' (adapté à ' if') → logprob: -3.509409189224243
    4. ' if' → logprob: -5.009409427642822
    5. '
' → logprob: -6.009409427642822
    6. ' min' → logprob: -6.259409427642822
    7. '    
' → logprob: -6.509409427642822
    8. ' smallest' → logprob: -7.509409427642822
    9. 'abs' → logprob: -8.134408950805664
    10. 'small' → logprob: -8.634408950805664

Token 195: ' cnt' (ID: 27340)
  Prédit: ' cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cnt' → logprob: -0.020632632076740265
    2. 'cnt' → logprob: -3.895632743835449
    3. '   ' → logprob: -10.14563274383545
    4. '(cnt' → logprob: -10.39563274383545
    5. ' ' → logprob: -11.52063274383545
    6. '	cnt' → logprob: -11.77063274383545
    7. ' cn' → logprob: -13.64563274383545
    8. '[cnt' → logprob: -13.89563274383545
    9. '  ' → logprob: -14.52063274383545
    10. '    ' → logprob: -15.02063274383545

Token 196: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.1004754900932312
    2. '%' → logprob: -2.350475549697876
    3. ' ' → logprob: -8.350475311279297
    4. ' ' → logprob: -10.350475311279297
    5. '   ' → logprob: -15.850475311279297
    6. '  ' → logprob: -16.350475311279297
    7. ' %
' → logprob: -16.475475311279297
    8. '```' → logprob: -16.850475311279297
    9. ')' → logprob: -17.100475311279297
    10. '1' → logprob: -17.975475311279297

Token 197: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1426779329776764
    2. ' ' → logprob: -2.0176780223846436
    3. '   ' → logprob: -13.517678260803223
    4. '  ' → logprob: -14.142678260803223
    5. '```' → logprob: -15.767678260803223
    6. '    ' → logprob: -15.892678260803223
    7. '1' → logprob: -16.705177307128906
    8. ' ' → logprob: -16.830177307128906
    9. '
' → logprob: -17.080177307128906
    10. ')' → logprob: -17.142677307128906

Token 198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1756367712223437e-05
    2. ' ' → logprob: -11.375011444091797
    3. '   ' → logprob: -15.375011444091797
    4. '```' → logprob: -17.375011444091797
    5. '  ' → logprob: -17.625011444091797
    6. '
' → logprob: -18.750011444091797
    7. '    ' → logprob: -19.687511444091797
    8. '1' → logprob: -19.812511444091797
    9. '۲' → logprob: -20.187511444091797
    10. '-' → logprob: -20.250011444091797

Token 199: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4896262288093567
    2. ' ==' → logprob: -1.489626169204712
    3. '==' → logprob: -2.489626169204712
    4. '!=' → logprob: -2.864626169204712
    5. ':' → logprob: -3.864626169204712
    6. ' :' → logprob: -8.239625930786133
    7. '=' → logprob: -8.364625930786133
    8. '1' → logprob: -8.989625930786133
    9. ' ' → logprob: -9.239625930786133
    10. ' =' → logprob: -11.364625930786133

Token 200: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10322077572345734
    2. '0' → logprob: -2.6032207012176514
    3. ' ' → logprob: -3.7282207012176514
    4. '   ' → logprob: -14.35322093963623
    5. '```' → logprob: -14.47822093963623
    6. '  ' → logprob: -15.72822093963623
    7. ':' → logprob: -16.040719985961914
    8. '2' → logprob: -16.978219985961914
    9. '    ' → logprob: -17.103219985961914
    10. '==' → logprob: -17.165719985961914

Token 201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.25769293308258057
    2. '1' → logprob: -1.5076929330825806
    3. '2' → logprob: -5.507692813873291
    4. ' ' → logprob: -6.382692813873291
    5. '```' → logprob: -14.50769329071045
    6. '   ' → logprob: -14.63269329071045
    7. '3' → logprob: -16.757692337036133
    8. ':' → logprob: -16.757692337036133
    9. '  ' → logprob: -16.882692337036133
    10. '5' → logprob: -17.257692337036133

Token 202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003180563682690263
    2. ':
' → logprob: -5.753180503845215
    3. ' :' → logprob: -13.628180503845215
    4. '):' → logprob: -14.253180503845215
    5. '   ' → logprob: -14.378180503845215
    6. ':return' → logprob: -15.753180503845215
    7. ':
' → logprob: -16.37818145751953
    8. ' :
' → logprob: -16.75318145751953
    9. '):
' → logprob: -17.25318145751953
    10. '       ' → logprob: -17.62818145751953

Token 203: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013837302103638649
    2. '   ' → logprob: -4.7638373374938965
    3. 'print' → logprob: -5.3888373374938965
    4. ' print' → logprob: -7.3888373374938965
    5. '
' → logprob: -11.013836860656738
    6. '```' → logprob: -12.763836860656738
    7. '    
' → logprob: -13.513836860656738
    8. '	print' → logprob: -14.013836860656738
    9. '           ' → logprob: -14.388836860656738
    10. '        
' → logprob: -14.513836860656738

Token 204: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37956491112709045
    2. 'print' → logprob: -1.379564881324768
    3. ' print' → logprob: -2.7545650005340576
    4. '       ' → logprob: -7.7545647621154785
    5. '
' → logprob: -10.129565238952637
    6. '    ' → logprob: -10.754565238952637
    7. '    
' → logprob: -11.629565238952637
    8. '```' → logprob: -11.754565238952637
    9. '	print' → logprob: -11.879565238952637
    10. ' 
' → logprob: -15.004565238952637

Token 205: ' Si' (ID: 7832)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.30045539140701294
    2. 'print' → logprob: -1.5504553318023682
    3. '   ' → logprob: -3.050455331802368
    4. '    ' → logprob: -10.675455093383789
    5. '       ' → logprob: -12.800455093383789
    6. '	print' → logprob: -13.675455093383789
    7. '  ' → logprob: -13.800455093383789
    8. '```' → logprob: -14.425455093383789
    9. ' ' → logprob: -14.550455093383789
    10. ' prin' → logprob: -14.675455093383789

Token 206: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11222193390130997
    2. 'ans' → logprob: -3.6122219562530518
    3. ' cnt' → logprob: -3.6122219562530518
    4. '   ' → logprob: -4.237221717834473
    5. 'cnt' → logprob: -4.737221717834473
    6. ' n' → logprob: -4.862221717834473
    7. ' print' → logprob: -5.487221717834473
    8. ' ' → logprob: -5.612221717834473
    9. 'print' → logprob: -5.612221717834473
    10. '    ' → logprob: -5.737221717834473

Token 207: ' nombre' (ID: 9733)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.8904852271080017
    2. 'print' → logprob: -1.7654852867126465
    3. ' code' → logprob: -1.8904852867126465
    4. 'nombre' → logprob: -2.2654852867126465
    5. 'n' → logprob: -3.5154852867126465
    6. ' nombre' → logprob: -3.5154852867126465
    7. '   ' → logprob: -3.6404852867126465
    8. ' cnt' → logprob: -3.8904852867126465
    9. 'else' → logprob: -4.6404852867126465
    10. 'code' → logprob: -4.6404852867126465

Token 208: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.1598646491765976
    2. 'de' → logprob: -2.034864664077759
    3. 'd' → logprob: -5.15986442565918
    4. ' d' → logprob: -5.78486442565918
    5. ' des' → logprob: -5.90986442565918
    6. 'des' → logprob: -6.15986442565918
    7. '#' → logprob: -7.03486442565918
    8. ' est' → logprob: -7.28486442565918
    9. '_de' → logprob: -7.78486442565918
    10. '_' → logprob: -7.90986442565918

Token 209: ' nég' (ID: 55805)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.553941011428833
    2. 'n' → logprob: -0.928941011428833
    3. 'neg' → logprob: -4.553940773010254
    4. ' nég' → logprob: -4.678940773010254
    5. ' valeurs' → logprob: -4.678940773010254
    6. ' nombres' → logprob: -7.928940773010254
    7. 'values' → logprob: -8.553940773010254
    8. 'negative' → logprob: -8.803940773010254
    9. 'vals' → logprob: -9.178940773010254
    10. 'nombre' → logprob: -9.178940773010254

Token 210: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.01159296277910471
    2. 'ég' → logprob: -4.761592864990234
    3. 'atif' → logprob: -6.886592864990234
    4. 'at' → logprob: -7.386592864990234
    5. 's' → logprob: -7.761592864990234
    6. 'eg' → logprob: -8.386592864990234
    7. 'ombres' → logprob: -9.136592864990234
    8. 'atives' → logprob: -9.261592864990234
    9. '_' → logprob: -9.511592864990234
    10. 'it' → logprob: -10.511592864990234

Token 211: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.161003589630127
    2. '   ' → logprob: -1.286003589630127
    3. ' <=' → logprob: -1.536003589630127
    4. '==' → logprob: -2.786003589630127
    5. ' >=' → logprob: -2.911003589630127
    6. ' >' → logprob: -3.786003589630127
    7. '<=' → logprob: -4.411003589630127
    8. '>' → logprob: -4.536003589630127
    9. ':' → logprob: -4.786003589630127
    10. '>=' → logprob: -5.161003589630127

Token 212: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.04859759286046028
    2. ' pair' → logprob: -3.173597574234009
    3. 'even' → logprob: -5.423597812652588
    4. 'pairs' → logprob: -7.548597812652588
    5. ' even' → logprob: -7.923597812652588
    6. ' ' → logprob: -9.67359733581543
    7. ' pairs' → logprob: -10.04859733581543
    8. '   ' → logprob: -10.29859733581543
    9. ' paire' → logprob: -10.29859733581543
    10. '_pair' → logprob: -10.54859733581543

Token 213: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02336544170975685
    2. ':' → logprob: -4.023365497589111
    3. ':
' → logprob: -5.398365497589111
    4. '
' → logprob: -8.398365020751953
    5. 'print' → logprob: -8.523365020751953
    6. '   ' → logprob: -9.148365020751953
    7. ' print' → logprob: -9.648365020751953
    8. ',' → logprob: -10.398365020751953
    9. ':return' → logprob: -11.148365020751953
    10. '           ' → logprob: -11.648365020751953

Token 214: ' aucune' (ID: 51173)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6937358975410461
    2. '   ' → logprob: -1.1937358379364014
    3. 'print' → logprob: -1.6937358379364014
    4. '       ' → logprob: -4.3187360763549805
    5. '	print' → logprob: -10.44373607635498
    6. '    ' → logprob: -11.56873607635498
    7. ' ' → logprob: -12.31873607635498
    8. ' return' → logprob: -12.44373607635498
    9. '```' → logprob: -12.56873607635498
    10. '  ' → logprob: -13.31873607635498

Token 215: ' modification' (ID: 29847)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.39744850993156433
    2. 'action' → logprob: -2.1474485397338867
    3. ' modification' → logprob: -2.3974485397338867
    4. '   ' → logprob: -3.1474485397338867
    5. ' action' → logprob: -3.5224485397338867
    6. 'print' → logprob: -3.7724485397338867
    7. 'aj' → logprob: -4.272448539733887
    8. 'adjust' → logprob: -5.897448539733887
    9. ' adjustment' → logprob: -6.772448539733887
    10. ' ajust' → logprob: -6.897448539733887

Token 216: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4278525412082672
    2. ' nécessaire' → logprob: -2.0528526306152344
    3. ',' → logprob: -2.3028526306152344
    4. '
' → logprob: -3.4278526306152344
    5. '       ' → logprob: -4.177852630615234
    6. '<|end|>' → logprob: -4.302852630615234
    7. 'needed' → logprob: -4.677852630615234
    8. '    
' → logprob: -5.052852630615234
    9. ' à' → logprob: -5.177852630615234
    10. 'else' → logprob: -5.677852630615234

Token 217: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -1.1711927652359009
    2. 'n' → logprob: -1.4211927652359009
    3. ' n' → logprob: -1.7961927652359009
    4. '   ' → logprob: -1.7961927652359009
    5. 'est' → logprob: -2.9211926460266113
    6. ' est' → logprob: -4.046192646026611
    7. '       ' → logprob: -4.671192646026611
    8. '’est' → logprob: -4.921192646026611
    9. 'print' → logprob: -5.421192646026611
    10. 'cess' → logprob: -5.546192646026611

Token 218: ' nécessaire' (ID: 43098)
  Prédit: ' nécessaire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nécessaire' → logprob: -0.7711173892021179
    2. 'né' → logprob: -0.8961173892021179
    3. 'necess' → logprob: -3.6461174488067627
    4. 'faite' → logprob: -3.6461174488067627
    5. '   ' → logprob: -3.7711174488067627
    6. 'n' → logprob: -3.8961174488067627
    7. ' necess' → logprob: -4.271117210388184
    8. ' ' → logprob: -5.271117210388184
    9. 'à' → logprob: -5.646117210388184
    10. ' nécessaires' → logprob: -6.021117210388184

Token 219: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05665866658091545
    2. '   ' → logprob: -2.9316587448120117
    3. '
' → logprob: -6.931658744812012
    4. 'print' → logprob: -7.431658744812012
    5. ',' → logprob: -9.806658744812012
    6. ' print' → logprob: -9.931658744812012
    7. '    
' → logprob: -11.056658744812012
    8. 'else' → logprob: -11.056658744812012
    9. '        
' → logprob: -11.181658744812012
    10. 'return' → logprob: -11.181658744812012

Token 220: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002870801545213908
    2. 'print' → logprob: -8.500287055969238
    3. '   ' → logprob: -9.875287055969238
    4. ' print' → logprob: -10.500287055969238
    5. 'return' → logprob: -13.125287055969238
    6. ' return' → logprob: -13.625287055969238
    7. '           ' → logprob: -14.000287055969238
    8. '      ' → logprob: -16.125288009643555
    9. '```' → logprob: -16.500288009643555
    10. 'else' → logprob: -16.750288009643555

Token 221: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07102174311876297
    2. '   ' → logprob: -3.071021795272827
    3. ' print' → logprob: -3.821021795272827
    4. '       ' → logprob: -8.196022033691406
    5. '	print' → logprob: -13.696022033691406
    6. '```' → logprob: -14.321022033691406
    7. '  ' → logprob: -14.696022033691406
    8. '    ' → logprob: -14.696022033691406
    9. ' ' → logprob: -14.696022033691406
    10. '
' → logprob: -15.446022033691406

Token 222: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0005569627974182367
    2. '(' → logprob: -7.500556945800781
    3. ' (' → logprob: -13.375556945800781
    4. 'ans' → logprob: -13.625556945800781
    5. '(abs' → logprob: -14.375556945800781
    6. '(f' → logprob: -15.625556945800781
    7. '('' → logprob: -16.25055694580078
    8. '()' → logprob: -16.37555694580078
    9. '(
' → logprob: -17.00055694580078
    10. ' ans' → logprob: -17.25055694580078

Token 223: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1605187952518463
    2. ')
' → logprob: -1.910518765449524
    3. '   ' → logprob: -8.160518646240234
    4. ')
' → logprob: -12.035518646240234
    5. ' )' → logprob: -13.660518646240234
    6. ' )
' → logprob: -14.535518646240234
    7. '())
' → logprob: -15.535518646240234
    8. ')

' → logprob: -15.660518646240234
    9. ')`
' → logprob: -15.910518646240234
    10. '())' → logprob: -15.910518646240234

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20372435450553894
    2. 'else' → logprob: -1.7037243843078613
    3. ' else' → logprob: -6.078724384307861
    4. '	else' → logprob: -11.828723907470703
    5. '    
' → logprob: -12.078723907470703
    6. 'elif' → logprob: -12.953723907470703
    7. ')' → logprob: -14.703723907470703
    8. '_else' → logprob: -15.203723907470703
    9. '```' → logprob: -15.578723907470703
    10. '
' → logprob: -15.578723907470703

Token 225: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.00314171239733696
    2. ' else' → logprob: -5.8781418800354
    3. '   ' → logprob: -8.003141403198242
    4. '	else' → logprob: -14.128141403198242
    5. 'els' → logprob: -14.378141403198242
    6. 'e' → logprob: -15.503141403198242
    7. '_else' → logprob: -15.503141403198242
    8. 'elif' → logprob: -15.753141403198242
    9. 'elses' → logprob: -15.878141403198242
    10. 'el' → logprob: -15.878141403198242

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002815455198287964
    2. ':
' → logprob: -5.877815246582031
    3. '       ' → logprob: -12.252815246582031
    4. ' :' → logprob: -12.877815246582031
    5. '   ' → logprob: -12.877815246582031
    6. ':
' → logprob: -16.00281524658203
    7. ' :
' → logprob: -16.25281524658203
    8. ',' → logprob: -16.62781524658203
    9. '):' → logprob: -16.75281524658203
    10. ':

' → logprob: -16.75281524658203

Token 227: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056747306138277054
    2. '       ' → logprob: -3.5567471981048584
    3. 'print' → logprob: -4.3067474365234375
    4. ' print' → logprob: -4.4317474365234375
    5. 'min' → logprob: -7.1817474365234375
    6. ' min' → logprob: -8.806747436523438
    7. ' ans' → logprob: -8.931747436523438
    8. '    ' → logprob: -9.056747436523438
    9. 'ans' → logprob: -10.181747436523438
    10. ' smallest' → logprob: -10.931747436523438

Token 228: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6112262606620789
    2. 'min' → logprob: -1.8612263202667236
    3. ' print' → logprob: -2.2362263202667236
    4. '       ' → logprob: -2.3612263202667236
    5. 'ans' → logprob: -2.7362263202667236
    6. ' ans' → logprob: -3.9862263202667236
    7. '   ' → logprob: -4.7362260818481445
    8. ' min' → logprob: -5.4862260818481445
    9. 'mini' → logprob: -6.9862260818481445
    10. 'm' → logprob: -7.7362260818481445

Token 229: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0615054368972778
    2. 'min' → logprob: -1.4365054368972778
    3. ' print' → logprob: -1.4365054368972778
    4. '       ' → logprob: -2.6865053176879883
    5. ' min' → logprob: -3.3115053176879883
    6. '   ' → logprob: -3.5615053176879883
    7. ' smallest' → logprob: -4.686505317687988
    8. '#' → logprob: -4.936505317687988
    9. 'val' → logprob: -5.186505317687988
    10. 'ans' → logprob: -5.311505317687988

Token 230: ' le' (ID: 505)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.11623036861419678
    2. 'ans' → logprob: -2.8662304878234863
    3. ':' → logprob: -4.741230487823486
    4. '       ' → logprob: -4.866230487823486
    5. 'print' → logprob: -5.116230487823486
    6. '(ans' → logprob: -5.116230487823486
    7. '   ' → logprob: -5.241230487823486
    8. ' print' → logprob: -5.366230487823486
    9. ' ' → logprob: -6.116230487823486
    10. '           ' → logprob: -6.366230487823486

Token 231: ' nombre' (ID: 9733)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.22859777510166168
    2. 'plus' → logprob: -2.72859787940979
    3. 'min' → logprob: -3.10359787940979
    4. 'print' → logprob: -3.47859787940979
    5. ' ans' → logprob: -3.97859787940979
    6. 'abs' → logprob: -4.353597640991211
    7. '#' → logprob: -4.853597640991211
    8. ' plus' → logprob: -5.353597640991211
    9. 'val' → logprob: -5.978597640991211
    10. '   ' → logprob: -5.978597640991211

Token 232: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47931885719299316
    2. '   ' → logprob: -1.3543188571929932
    3. 'de' → logprob: -3.479318857192993
    4. '2' → logprob: -3.979318857192993
    5. ' des' → logprob: -4.604318618774414
    6. ' de' → logprob: -4.604318618774414
    7. 'des' → logprob: -4.729318618774414
    8. '           ' → logprob: -4.854318618774414
    9. 'abs' → logprob: -5.479318618774414
    10. '#' → logprob: -5.604318618774414

Token 233: ' nég' (ID: 55805)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.4525182247161865
    2. 'n' → logprob: -1.0775182247161865
    3. 'neg' → logprob: -4.577518463134766
    4. 'abs' → logprob: -4.702518463134766
    5. ' nég' → logprob: -5.827518463134766
    6. 'vals' → logprob: -7.577518463134766
    7. 'élé' → logprob: -8.702518463134766
    8. ' valeurs' → logprob: -8.702518463134766
    9. 'ab' → logprob: -9.952518463134766
    10. 'né' → logprob: -10.077518463134766

Token 234: 'atifs' (ID: 66205)
  Prédit: 'atifs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atifs' → logprob: -0.0695900022983551
    2. 'ég' → logprob: -2.8195900917053223
    3. 'eg' → logprob: -5.069590091705322
    4. 'atives' → logprob: -7.444590091705322
    5. '%' → logprob: -9.069589614868164
    6. '   ' → logprob: -9.194589614868164
    7. '{' → logprob: -9.694589614868164
    8. '_' → logprob: -9.694589614868164
    9. '##' → logprob: -10.569589614868164
    10. '#' → logprob: -10.569589614868164

Token 235: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3085121214389801
    2. 'est' → logprob: -1.6835120916366577
    3. ' is' → logprob: -2.5585122108459473
    4. 'is' → logprob: -7.183512210845947
    5. '==' → logprob: -8.058511734008789
    6. 's' → logprob: -8.433511734008789
    7. ' ==' → logprob: -8.808511734008789
    8. '   ' → logprob: -8.933511734008789
    9. 'n' → logprob: -9.058511734008789
    10. '>' → logprob: -9.433511734008789

Token 236: ' impair' (ID: 64113)
  Prédit: 'imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imp' → logprob: -0.5406255125999451
    2. 'im' → logprob: -0.9156255125999451
    3. ' impair' → logprob: -4.16562557220459
    4. 'pair' → logprob: -6.66562557220459
    5. '1' → logprob: -8.04062557220459
    6. 'odd' → logprob: -9.16562557220459
    7. ' imp' → logprob: -10.79062557220459
    8. '   ' → logprob: -10.79062557220459
    9. ' ' → logprob: -11.29062557220459
    10. ' impar' → logprob: -11.41562557220459

Token 237: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.028695788234472275
    2. ':
' → logprob: -4.403695583343506
    3. '       ' → logprob: -4.778695583343506
    4. ',' → logprob: -5.153695583343506
    5. '           ' → logprob: -6.403695583343506
    6. 'print' → logprob: -9.278696060180664
    7. '   ' → logprob: -9.778696060180664
    8. ' :' → logprob: -10.778696060180664
    9. ':

' → logprob: -11.653696060180664
    10. ',
' → logprob: -12.028696060180664

Token 238: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7818830013275146
    2. 'min' → logprob: -1.0318830013275146
    3. ' print' → logprob: -2.4068830013275146
    4. 'ans' → logprob: -3.5318830013275146
    5. '   ' → logprob: -3.7818830013275146
    6. '       ' → logprob: -4.906883239746094
    7. '#' → logprob: -5.031883239746094
    8. ' min' → logprob: -5.156883239746094
    9. 'val' → logprob: -5.281883239746094
    10. ' smallest' → logprob: -5.406883239746094

Token 239: ' doit' (ID: 21822)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24623830616474152
    2. ' print' → logprob: -2.1212382316589355
    3. '-' → logprob: -3.1212382316589355
    4. '       ' → logprob: -3.4962382316589355
    5. ' sou' → logprob: -5.3712382316589355
    6. ' imprime' → logprob: -5.3712382316589355
    7. 'sou' → logprob: -5.8712382316589355
    8. 'min' → logprob: -6.1212382316589355
    9. 'continue' → logprob: -6.8712382316589355
    10. ' ajuste' → logprob: -6.8712382316589355

Token 240: ' invers' (ID: 38721)
  Prédit: 'sou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sou' → logprob: -1.0633221864700317
    2. ' ajust' → logprob: -1.5633221864700317
    3. 'min' → logprob: -2.063322067260742
    4. ' sou' → logprob: -2.188322067260742
    5. 'print' → logprob: -2.438322067260742
    6. '       ' → logprob: -3.313322067260742
    7. 'subtract' → logprob: -3.938322067260742
    8. '   ' → logprob: -3.938322067260742
    9. 'adjust' → logprob: -4.438322067260742
    10. ' print' → logprob: -4.813322067260742

Token 241: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.00014013137842994183
    2. 'e' → logprob: -10.000140190124512
    3. 'ser' → logprob: -10.000140190124512
    4. 'ter' → logprob: -11.250140190124512
    5. 's' → logprob: -11.500140190124512
    6. 'tir' → logprob: -12.375140190124512
    7. 'es' → logprob: -12.500140190124512
    8. 'ert' → logprob: -12.750140190124512
    9. 'ir' → logprob: -13.125140190124512
    10. 'ier' → logprob: -13.375140190124512

Token 242: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.4037892520427704
    2. 'le' → logprob: -1.4037892818450928
    3. 'la' → logprob: -3.1537892818450928
    4. ' le' → logprob: -4.028789043426514
    5. 'l' → logprob: -4.903789043426514
    6. ')' → logprob: -5.528789043426514
    7. ' deux' → logprob: -5.778789043426514
    8. ' l' → logprob: -5.903789043426514
    9. ' the' → logprob: -6.153789043426514
    10. 'the' → logprob: -6.403789043426514

Token 243: ' signe' (ID: 87345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9814788103103638
    2. 'plus' → logprob: -1.2314788103103638
    3. ' signe' → logprob: -1.3564788103103638
    4. ' plus' → logprob: -3.106478691101074
    5. '+' → logprob: -4.231478691101074
    6. 'sign' → logprob: -4.356478691101074
    7. 'min' → logprob: -7.231478691101074
    8. 'sig' → logprob: -7.731478691101074
    9. 'moins' → logprob: -7.981478691101074
    10. '-' → logprob: -8.356478691101074

Token 244: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.0516635179519653
    2. ' du' → logprob: -1.0516635179519653
    3. ' d' → logprob: -1.6766635179519653
    4. '       ' → logprob: -3.051663398742676
    5. 'd' → logprob: -3.551663398742676
    6. '#' → logprob: -4.051663398742676
    7. 'de' → logprob: -4.926663398742676
    8. 'du' → logprob: -5.676663398742676
    9. ',' → logprob: -5.926663398742676
    10. '   ' → logprob: -6.801663398742676

Token 245: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.12604646384716034
    2. 'la' → logprob: -2.8760464191436768
    3. ' min' → logprob: -3.0010464191436768
    4. ' la' → logprob: -4.751046657562256
    5. '(min' → logprob: -6.376046657562256
    6. 'abs' → logprob: -7.126046657562256
    7. 'l' → logprob: -7.626046657562256
    8. ' ' → logprob: -8.501046180725098
    9. ' abs' → logprob: -9.126046180725098
    10. '1' → logprob: -9.376046180725098

Token 246: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.040616266429424286
    2. 'e' → logprob: -3.665616273880005
    3. 'plus' → logprob: -4.290616035461426
    4. ' plus' → logprob: -8.415616035461426
    5. ''' → logprob: -10.040616035461426
    6. 'la' → logprob: -10.165616035461426
    7. ''a' → logprob: -10.290616035461426
    8. 'ans' → logprob: -10.415616035461426
    9. 'abs' → logprob: -10.415616035461426
    10. ''une' → logprob: -10.790616035461426

Token 247: 'élé' (ID: 15228)
  Prédit: 'élé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.6614781022071838
    2. 'a' → logprob: -2.036478042602539
    3. 'plus' → logprob: -2.036478042602539
    4. 'abs' → logprob: -2.161478042602539
    5. 'min' → logprob: -2.661478042602539
    6. 'minimum' → logprob: -4.411478042602539
    7. 'val' → logprob: -4.661478042602539
    8. 'element' → logprob: -5.161478042602539
    9. ' plus' → logprob: -5.911478042602539
    10. 'elem' → logprob: -6.286478042602539

Token 248: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -1.3544423381972592e-05
    2. ' ment' → logprob: -12.37501335144043
    3. 'm' → logprob: -13.00001335144043
    4. 'ments' → logprob: -13.12501335144043
    5. 'men' → logprob: -13.50001335144043
    6. 'mente' → logprob: -14.37501335144043
    7. '-' → logprob: -14.75001335144043
    8. '#' → logprob: -14.87501335144043
    9. 'nt' → logprob: -15.00001335144043
    10. 'me' → logprob: -15.37501335144043

Token 249: ' de' (ID: 334)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.47513726353645325
    2. ' de' → logprob: -2.225137233734131
    3. '#' → logprob: -2.350137233734131
    4. ' ayant' → logprob: -3.100137233734131
    5. '   ' → logprob: -3.850137233734131
    6. ' minimal' → logprob: -3.975137233734131
    7. ' abs' → logprob: -4.225137233734131
    8. '       ' → logprob: -4.600137233734131
    9. 'minimum' → logprob: -4.600137233734131
    10. ' avec' → logprob: -4.725137233734131

Token 250: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.15725043416023254
    2. 'val' → logprob: -2.78225040435791
    3. 'a' → logprob: -3.03225040435791
    4. 'la' → logprob: -3.78225040435791
    5. ' plus' → logprob: -4.90725040435791
    6. '#' → logprob: -6.65725040435791
    7. 'abs' → logprob: -6.90725040435791
    8. 'min' → logprob: -7.03225040435791
    9. 'moins' → logprob: -7.78225040435791
    10. '   ' → logprob: -8.15725040435791

Token 251: ' petite' (ID: 28119)
  Prédit: 'pet'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pet' → logprob: -0.17064453661441803
    2. '   ' → logprob: -2.295644521713257
    3. 'abs' → logprob: -3.545644521713257
    4. 'val' → logprob: -4.295644760131836
    5. ' petite' → logprob: -5.170644760131836
    6. 'la' → logprob: -6.045644760131836
    7. '```' → logprob: -7.045644760131836
    8. '#' → logprob: -7.295644760131836
    9. '       ' → logprob: -7.545644760131836
    10. 'plus' → logprob: -7.795644760131836

Token 252: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6702730655670166
    2. ' valeur' → logprob: -1.4202730655670166
    3. 'val' → logprob: -1.6702730655670166
    4. ' abs' → logprob: -3.4202730655670166
    5. 'ab' → logprob: -4.0452728271484375
    6. '(abs' → logprob: -5.5452728271484375
    7. ' val' → logprob: -6.4202728271484375
    8. '<|end|>' → logprob: -7.5452728271484375
    9. ' ' → logprob: -7.6702728271484375
    10. 'value' → logprob: -7.9202728271484375

Token 253: ' absol' (ID: 7374)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.24176301062107086
    2. ' abs' → logprob: -1.9917629957199097
    3. 'ab' → logprob: -3.491763114929199
    4. '_abs' → logprob: -3.991763114929199
    5. ' absol' → logprob: -4.116763114929199
    6. ' absolute' → logprob: -5.241763114929199
    7. '   ' → logprob: -6.366763114929199
    8. 'absolute' → logprob: -6.491763114929199
    9. ' absoluto' → logprob: -6.616763114929199
    10. '(abs' → logprob: -7.241763114929199

Token 254: 'ue' (ID: 466)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5126557350158691
    2. 'ut' → logprob: -1.2626557350158691
    3. 'ute' → logprob: -2.512655735015869
    4. 'ue' → logprob: -4.012655735015869
    5. 'ur' → logprob: -5.512655735015869
    6. 'oute' → logprob: -5.637655735015869
    7. 'ol' → logprob: -6.012655735015869
    8. 'e' → logprob: -6.512655735015869
    9. '()' → logprob: -6.637655735015869
    10. 'utte' → logprob: -6.637655735015869

Token 255: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016603049589321017
    2. 'print' → logprob: -6.626660346984863
    3. ',' → logprob: -8.626660346984863
    4. '   ' → logprob: -10.251660346984863
    5. ' print' → logprob: -10.376660346984863
    6. '           ' → logprob: -10.626660346984863
    7. ')' → logprob: -11.501660346984863
    8. ':' → logprob: -11.751660346984863
    9. 'abs' → logprob: -11.751660346984863
    10. ' abs' → logprob: -12.626660346984863

Token 256: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006102150771766901
    2. 'print' → logprob: -5.131102085113525
    3. ' print' → logprob: -9.131102561950684
    4. ',' → logprob: -10.881102561950684
    5. '           ' → logprob: -11.131102561950684
    6. '   ' → logprob: -12.381102561950684
    7. '        
' → logprob: -12.381102561950684
    8. '	' → logprob: -12.506102561950684
    9. '        ' → logprob: -12.631102561950684
    10. '#' → logprob: -13.131102561950684

Token 257: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32368892431259155
    2. ' print' → logprob: -1.6986889839172363
    3. '       ' → logprob: -2.5736889839172363
    4. 'min' → logprob: -4.948688983917236
    5. 'ans' → logprob: -5.073688983917236
    6. ' ans' → logprob: -5.948688983917236
    7. ' min' → logprob: -6.823688983917236
    8. ' smallest' → logprob: -10.198688507080078
    9. 'val' → logprob: -10.323688507080078
    10. 'abs' → logprob: -10.323688507080078

Token 258: ' pour' (ID: 1930)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7738497853279114
    2. 'print' → logprob: -1.1488497257232666
    3. ' print' → logprob: -2.0238497257232666
    4. ' min' → logprob: -3.2738497257232666
    5. '       ' → logprob: -3.3988497257232666
    6. 'ans' → logprob: -5.148849964141846
    7. ' ans' → logprob: -5.523849964141846
    8. 'val' → logprob: -6.273849964141846
    9. 'abs' → logprob: -6.273849964141846
    10. 'm' → logprob: -6.773849964141846

Token 259: ' obtenir' (ID: 54423)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06961370259523392
    2. ' minim' → logprob: -2.9446136951446533
    3. '   ' → logprob: -5.194613933563232
    4. ' réduire' → logprob: -5.944613933563232
    5. '       ' → logprob: -6.319613933563232
    6. 'print' → logprob: -6.819613933563232
    7. ' min' → logprob: -6.944613933563232
    8. ' ajust' → logprob: -7.194613933563232
    9. ' minimize' → logprob: -7.944613933563232
    10. 'aj' → logprob: -8.069613456726074

Token 260: ' un' (ID: 537)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.3902887105941772
    2. ' deux' → logprob: -1.6402887105941772
    3. 'ans' → logprob: -2.390288829803467
    4. ' ' → logprob: -2.515288829803467
    5. '   ' → logprob: -2.765288829803467
    6. 'abs' → logprob: -2.890288829803467
    7. ' abs' → logprob: -3.015288829803467
    8. ' ans' → logprob: -3.140288829803467
    9. ' une' → logprob: -3.265288829803467
    10. '2' → logprob: -3.265288829803467

Token 261: ' résultat' (ID: 62556)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36597973108291626
    2. '2' → logprob: -1.9909796714782715
    3. ' ' → logprob: -3.2409796714782715
    4. '-' → logprob: -3.4909796714782715
    5. ')' → logprob: -3.8659796714782715
    6. '*' → logprob: -4.2409796714782715
    7. 'ans' → logprob: -4.3659796714782715
    8. ' ans' → logprob: -4.4909796714782715
    9. ' -' → logprob: -4.6159796714782715
    10. ' résultat' → logprob: -5.2409796714782715

Token 262: ' optimal' (ID: 24174)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.17685438692569733
    2. ' optimal' → logprob: -2.426854372024536
    3. ' minimum' → logprob: -4.176854610443115
    4. 'minimal' → logprob: -4.176854610443115
    5. 'optimal' → logprob: -4.426854610443115
    6. ' plus' → logprob: -5.426854610443115
    7. ' optim' → logprob: -5.426854610443115
    8. '   ' → logprob: -5.926854610443115
    9. ' final' → logprob: -5.926854610443115
    10. 'minimum' → logprob: -6.051854610443115

Token 263: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00016671013145241886
    2. 'print' → logprob: -9.000166893005371
    3. ',' → logprob: -10.625166893005371
    4. '           ' → logprob: -12.500166893005371
    5. ' print' → logprob: -12.625166893005371
    6. '   ' → logprob: -13.125166893005371
    7. '        
' → logprob: -13.500166893005371
    8. '	' → logprob: -13.750166893005371
    9. '        ' → logprob: -13.875166893005371
    10. '```' → logprob: -14.125166893005371

Token 264: ' donc' (ID: 14206)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19573856890201569
    2. 'print' → logprob: -1.8207385540008545
    3. ' print' → logprob: -4.195738792419434
    4. 'min' → logprob: -7.695738792419434
    5. '   ' → logprob: -9.820738792419434
    6. 'ans' → logprob: -10.070738792419434
    7. ' smallest' → logprob: -10.070738792419434
    8. ' min' → logprob: -10.195738792419434
    9. '        ' → logprob: -10.320738792419434
    10. ' ans' → logprob: -10.445738792419434

Token 265: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.24743711948394775
    2. ' print' → logprob: -1.7474371194839478
    3. '       ' → logprob: -3.122437000274658
    4. '   ' → logprob: -7.372437000274658
    5. ' ans' → logprob: -9.247437477111816
    6. 'ans' → logprob: -9.872437477111816
    7. '           ' → logprob: -9.997437477111816
    8. '        ' → logprob: -11.247437477111816
    9. ' ' → logprob: -11.497437477111816
    10. ':' → logprob: -11.622437477111816

Token 266: ' sou' (ID: 4069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016929637640714645
    2. '       ' → logprob: -5.016929626464844
    3. ' print' → logprob: -5.141929626464844
    4. '-' → logprob: -6.266929626464844
    5. '   ' → logprob: -6.391929626464844
    6. 'subtract' → logprob: -8.516929626464844
    7. '           ' → logprob: -9.516929626464844
    8. '=' → logprob: -9.516929626464844
    9. ' ' → logprob: -10.141929626464844
    10. 'continue' → logprob: -10.266929626464844

Token 267: 'stra' (ID: 14867)
  Prédit: 'stra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stra' → logprob: -0.43363016843795776
    2. 'stract' → logprob: -1.0586302280426025
    3. 'tra' → logprob: -6.058629989624023
    4. 'str' → logprob: -6.808629989624023
    5. 'straction' → logprob: -7.308629989624023
    6. 'tract' → logprob: -7.683629989624023
    7. '   ' → logprob: -9.183629989624023
    8. 'trait' → logprob: -9.808629989624023
    9. 'print' → logprob: -9.933629989624023
    10. '#' → logprob: -9.933629989624023

Token 268: 'it' (ID: 278)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14712706208229065
    2. 'it' → logprob: -2.647127151489258
    3. 't' → logprob: -3.272127151489258
    4. 'ct' → logprob: -4.897127151489258
    5. '2' → logprob: -5.522127151489258
    6. '-t' → logprob: -5.897127151489258
    7. 'ut' → logprob: -6.022127151489258
    8. '   ' → logprob: -6.022127151489258
    9. 'ite' → logprob: -6.147127151489258
    10. 'de' → logprob: -6.647127151489258

Token 269: ' deux' (ID: 10301)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.054974477738142014
    2. ' ' → logprob: -2.9299745559692383
    3. ' twice' → logprob: -10.429974555969238
    4. '   ' → logprob: -10.554974555969238
    5. ' deux' → logprob: -11.054974555969238
    6. ' two' → logprob: -11.679974555969238
    7. '(' → logprob: -12.429974555969238
    8. 'de' → logprob: -13.554974555969238
    9. '  ' → logprob: -13.679974555969238
    10. ' (' → logprob: -13.929974555969238

Token 270: ' fois' (ID: 14697)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1608186662197113
    2. ' *' → logprob: -1.9108186960220337
    3. ' fois' → logprob: -7.660818576812744
    4. '**' → logprob: -10.035819053649902
    5. ' times' → logprob: -10.160819053649902
    6. ' ' → logprob: -11.285819053649902
    7. 'fois' → logprob: -11.535819053649902
    8. 'times' → logprob: -12.035819053649902
    9. '*object' → logprob: -12.285819053649902
    10. ' razy' → logprob: -13.035819053649902

Token 271: ' cette' (ID: 7696)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.35334205627441406
    2. ' min' → logprob: -1.603342056274414
    3. ' abs' → logprob: -2.978342056274414
    4. 'abs' → logprob: -3.103342056274414
    5. ' la' → logprob: -7.603342056274414
    6. ' the' → logprob: -10.103342056274414
    7. '(min' → logprob: -10.228342056274414
    8. '   ' → logprob: -10.728342056274414
    9. 'la' → logprob: -10.978342056274414
    10. 'le' → logprob: -11.228342056274414

Token 272: ' valeur' (ID: 41664)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6656496524810791
    2. 'min' → logprob: -0.7906496524810791
    3. ' abs' → logprob: -3.790649652481079
    4. ' min' → logprob: -5.5406494140625
    5. 'val' → logprob: -5.9156494140625
    6. '(abs' → logprob: -6.1656494140625
    7. '(min' → logprob: -7.5406494140625
    8. 'minimum' → logprob: -8.6656494140625
    9. ' smallest' → logprob: -9.0406494140625
    10. 'plus' → logprob: -9.9156494140625

Token 273: ' minimale' (ID: 143217)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.70119309425354
    2. 'abs' → logprob: -0.82619309425354
    3. 'min' → logprob: -3.70119309425354
    4. '(abs' → logprob: -3.70119309425354
    5. '       ' → logprob: -4.826192855834961
    6. ' min' → logprob: -5.201192855834961
    7. '   ' → logprob: -6.076192855834961
    8. '(min' → logprob: -8.076192855834961
    9. '_abs' → logprob: -8.076192855834961
    10. ' minimale' → logprob: -9.701192855834961

Token 274: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11032813787460327
    2. 'abs' → logprob: -2.610328197479248
    3. ' abs' → logprob: -4.485328197479248
    4. '(abs' → logprob: -4.860328197479248
    5. '   ' → logprob: -4.985328197479248
    6. 'min' → logprob: -5.735328197479248
    7. '_abs' → logprob: -7.110328197479248
    8. '_min' → logprob: -8.61032772064209
    9. '(min' → logprob: -8.73532772064209
    10. 'print' → logprob: -9.23532772064209

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8590300139039755e-05
    2. 'print' → logprob: -11.375048637390137
    3. ',' → logprob: -11.625048637390137
    4. '   ' → logprob: -11.625048637390137
    5. '           ' → logprob: -11.750048637390137
    6. '        ' → logprob: -13.500048637390137
    7. '```' → logprob: -13.875048637390137
    8. '	' → logprob: -14.000048637390137
    9. '      ' → logprob: -14.125048637390137
    10. '-' → logprob: -14.375048637390137

Token 276: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.1724180430173874
    2. '       ' → logprob: -2.4224181175231934
    3. ' print' → logprob: -2.6724181175231934
    4. 'min' → logprob: -8.172417640686035
    5. 'ans' → logprob: -8.797417640686035
    6. ' ans' → logprob: -9.797417640686035
    7. '   ' → logprob: -10.172417640686035
    8. ' min' → logprob: -10.922417640686035
    9. 'abs' → logprob: -12.047417640686035
    10. '        ' → logprob: -12.797417640686035

Token 277: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -2.7252845029579476e-05
    2. '(' → logprob: -10.625027656555176
    3. ' (' → logprob: -13.500027656555176
    4. '(abs' → logprob: -14.000027656555176
    5. 'ans' → logprob: -14.500027656555176
    6. '(
' → logprob: -16.37502670288086
    7. '(answer' → logprob: -17.00002670288086
    8. '((' → logprob: -17.37502670288086
    9. '(an' → logprob: -17.87502670288086
    10. '(ord' → logprob: -17.87502670288086

Token 278: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804344683885574
    2. '-' → logprob: -3.28804349899292
    3. '   ' → logprob: -13.663043022155762
    4. ' ' → logprob: -14.788043022155762
    5. ')' → logprob: -15.413043022155762
    6. ' ' → logprob: -16.413043975830078
    7. ' -
' → logprob: -16.913043975830078
    8. '  ' → logprob: -17.163043975830078
    9. '    ' → logprob: -17.663043975830078
    10. '	' → logprob: -18.288043975830078

Token 279: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.020581362769007683
    2. ' ' → logprob: -3.8955812454223633
    3. '   ' → logprob: -10.270581245422363
    4. '  ' → logprob: -12.520581245422363
    5. '    ' → logprob: -14.770581245422363
    6. '```' → logprob: -16.02058219909668
    7. '       ' → logprob: -16.14558219909668
    8. 'min' → logprob: -16.20808219909668
    9. ' ' → logprob: -16.52058219909668
    10. '     ' → logprob: -16.77058219909668

Token 280: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.051066520740278e-05
    2. ' ' → logprob: -9.750060081481934
    3. '   ' → logprob: -13.250060081481934
    4. '  ' → logprob: -15.625060081481934
    5. 'min' → logprob: -17.00006103515625
    6. '(' → logprob: -17.37506103515625
    7. '    ' → logprob: -17.56256103515625
    8. '       ' → logprob: -17.56256103515625
    9. '```' → logprob: -17.62506103515625
    10. '           ' → logprob: -18.25006103515625

Token 281: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4740773141384125
    2. '*' → logprob: -0.9740773439407349
    3. ' ' → logprob: -16.099077224731445
    4. 'min' → logprob: -16.224077224731445
    5. ' ' → logprob: -16.599077224731445
    6. '**' → logprob: -16.974077224731445
    7. '*(' → logprob: -17.474077224731445
    8. '*object' → logprob: -17.474077224731445
    9. ' min' → logprob: -18.099077224731445
    10. ' *
' → logprob: -18.224077224731445

Token 282: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.00010151672904612496
    2. ' min' → logprob: -9.250101089477539
    3. '(min' → logprob: -12.250101089477539
    4. '[min' → logprob: -15.375101089477539
    5. '	min' → logprob: -15.875101089477539
    6. 'abs' → logprob: -16.25010108947754
    7. 'minimum' → logprob: -16.50010108947754
    8. 'max' → logprob: -17.50010108947754
    9. '   ' → logprob: -17.50010108947754
    10. ')' → logprob: -17.62510108947754

Token 283: '(abs' (ID: 71957)
  Prédit: '(abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -3.166338137816638e-05
    2. 'abs' → logprob: -10.500031471252441
    3. '(map' → logprob: -12.500031471252441
    4. '(' → logprob: -15.125031471252441
    5. '([' → logprob: -17.125032424926758
    6. ' abs' → logprob: -18.000032424926758
    7. '((' → logprob: -18.875032424926758
    8. '(ab' → logprob: -19.125032424926758
    9. 'map' → logprob: -19.500032424926758
    10. '.abs' → logprob: -19.750032424926758

Token 284: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0020799553021788597
    2. '(a' → logprob: -6.752079963684082
    3. '(abs' → logprob: -7.252079963684082
    4. '(' → logprob: -9.252079963684082
    5. 'a' → logprob: -9.877079963684082
    6. 'i' → logprob: -10.127079963684082
    7. 'abs' → logprob: -11.752079963684082
    8. ')' → logprob: -13.002079963684082
    9. '(
' → logprob: -13.502079963684082
    10. '(x' → logprob: -14.127079963684082

Token 285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2898581624031067
    2. '(i' → logprob: -1.789858102798462
    3. '(a' → logprob: -2.789858102798462
    4. 'a' → logprob: -3.789858102798462
    5. '(' → logprob: -8.289857864379883
    6. 'for' → logprob: -9.164857864379883
    7. 'i' → logprob: -9.164857864379883
    8. '))' → logprob: -9.914857864379883
    9. ')a' → logprob: -10.414857864379883
    10. '   ' → logprob: -11.039857864379883

Token 286: ' for' (ID: 395)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4116799533367157
    2. '(a' → logprob: -1.161679983139038
    3. ')' → logprob: -4.411679744720459
    4. ' a' → logprob: -5.286679744720459
    5. 'for' → logprob: -5.786679744720459
    6. '(i' → logprob: -5.911679744720459
    7. ' for' → logprob: -6.786679744720459
    8. ')a' → logprob: -8.911680221557617
    9. '   ' → logprob: -9.286680221557617
    10. '(' → logprob: -9.411680221557617

Token 287: ' i' (ID: 575)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043369777500629425
    2. ' a' → logprob: -3.168369770050049
    3. 'i' → logprob: -8.043370246887207
    4. ' i' → logprob: -10.293370246887207
    5. '   ' → logprob: -11.918370246887207
    6. ' ' → logprob: -12.668370246887207
    7. '  ' → logprob: -13.418370246887207
    8. '	a' → logprob: -13.668370246887207
    9. '    ' → logprob: -14.293370246887207
    10. ')' → logprob: -14.668370246887207

Token 288: ' in' (ID: 306)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25197985768318176
    2. ' a' → logprob: -1.5019798278808594
    3. ' ' → logprob: -11.25197982788086
    4. '   ' → logprob: -11.37697982788086
    5. '  ' → logprob: -11.62697982788086
    6. ' in' → logprob: -11.75197982788086
    7. '    ' → logprob: -13.00197982788086
    8. '	a' → logprob: -13.00197982788086
    9. '_a' → logprob: -13.87697982788086
    10. ')a' → logprob: -14.00197982788086

Token 289: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0076079354621469975
    2. ' a' → logprob: -4.882607936859131
    3. '   ' → logprob: -14.132607460021973
    4. ' ' → logprob: -15.007607460021973
    5. ')' → logprob: -15.632607460021973
    6. '	a' → logprob: -15.757607460021973
    7. ')a' → logprob: -15.757607460021973
    8. '  ' → logprob: -16.75760841369629
    9. '    ' → logprob: -17.00760841369629
    10. '_a' → logprob: -17.25760841369629

Token 290: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20146147906780243
    2. '))' → logprob: -1.7014614343643188
    3. ')))' → logprob: -10.826461791992188
    4. ')
' → logprob: -11.076461791992188
    5. '))
' → logprob: -11.951461791992188
    6. '   ' → logprob: -13.201461791992188
    7. ' )' → logprob: -13.326461791992188
    8. ')}' → logprob: -13.826461791992188
    9. ' ))' → logprob: -14.951461791992188
    10. '       ' → logprob: -15.201461791992188

Token 291: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07895577698945999
    2. '__' → logprob: -2.578955888748169
    3. ' ' → logprob: -10.07895565032959
    4. '_' → logprob: -10.95395565032959
    5. '_name' → logprob: -12.95395565032959
    6. ' _' → logprob: -13.95395565032959
    7. ' ' → logprob: -13.95395565032959
    8. '___' → logprob: -14.32895565032959
    9. ' ' → logprob: -14.32895565032959
    10. 'name' → logprob: -14.45395565032959

Token 293: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.03630790486931801
    2. ' ==' → logprob: -3.7863078117370605
    3. '==' → logprob: -4.4113078117370605
    4. ' __' → logprob: -7.5363078117370605
    5. 'name' → logprob: -8.911308288574219
    6. '=="' → logprob: -9.036308288574219
    7. '__.__' → logprob: -11.411308288574219
    8. '.__' → logprob: -11.536308288574219
    9. '=' → logprob: -11.661308288574219
    10. '=='' → logprob: -12.286308288574219

Token 294: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.013994814362377e-05
    2. '__.__' → logprob: -10.00005054473877
    3. '==' → logprob: -12.50005054473877
    4. '__.' → logprob: -14.87505054473877
    5. '=="' → logprob: -15.87505054473877
    6. '___' → logprob: -16.375049591064453
    7. '__('' → logprob: -16.500049591064453
    8. '__["' → logprob: -16.500049591064453
    9. '____' → logprob: -16.500049591064453
    10. '"' → logprob: -17.250049591064453

Token 295: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12313516438007355
    2. ' ==' → logprob: -2.2481350898742676
    3. '==' → logprob: -4.623135089874268
    4. '=="' → logprob: -7.873135089874268
    5. '=='' → logprob: -10.873135566711426
    6. '__.__' → logprob: -11.123135566711426
    7. '___' → logprob: -12.373135566711426
    8. '__.' → logprob: -12.998135566711426
    9. ' =="' → logprob: -12.998135566711426
    10. '_' → logprob: -12.998135566711426

Token 296: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.018336528912186623
    2. ''' → logprob: -4.018336296081543
    3. ' "__' → logprob: -8.643336296081543
    4. '__' → logprob: -11.768336296081543
    5. ' '__' → logprob: -13.018336296081543
    6. '"name' → logprob: -16.76833724975586
    7. '"user' → logprob: -17.26833724975586
    8. ' "' → logprob: -17.64333724975586
    9. '("__' → logprob: -17.76833724975586
    10. '"_' → logprob: -17.89333724975586

Token 297: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0001499060745118186
    2. '__' → logprob: -9.125149726867676
    3. 'name' → logprob: -10.250149726867676
    4. '"' → logprob: -12.500149726867676
    5. '_main' → logprob: -14.000149726867676
    6. ' main' → logprob: -14.500149726867676
    7. ''' → logprob: -16.250150680541992
    8. 'built' → logprob: -16.500150680541992
    9. '__":
' → logprob: -16.875150680541992
    10. 'ma' → logprob: -17.000150680541992

Token 298: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.12693849205970764
    2. '__' → logprob: -2.126938581466675
    3. '__':
' → logprob: -11.501938819885254
    4. '__["' → logprob: -16.251937866210938
    5. '_' → logprob: -16.626937866210938
    6. '"' → logprob: -17.251937866210938
    7. '__("' → logprob: -17.626937866210938
    8. '__:' → logprob: -18.501937866210938
    9. '__",' → logprob: -18.501937866210938
    10. '__.' → logprob: -18.876937866210938

Token 299: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.13070069253444672
    2. '   ' → logprob: -2.6307005882263184
    3. 'main' → logprob: -3.6307005882263184
    4. '	main' → logprob: -3.7557005882263184
    5. '_main' → logprob: -8.630701065063477
    6. '    
' → logprob: -8.630701065063477
    7. '<|end|>' → logprob: -9.630701065063477
    8. '(main' → logprob: -10.005701065063477
    9. '.mainloop' → logprob: -10.630701065063477
    10. ' ' → logprob: -10.755701065063477

Token 300: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00015860427811276168
    2. ' main' → logprob: -8.750158309936523
    3. '	main' → logprob: -16.625158309936523
    4. '   ' → logprob: -16.875158309936523
    5. '(main' → logprob: -20.500158309936523
    6. '.main' → logprob: -21.000158309936523
    7. 'ma' → logprob: -21.375158309936523
    8. 'm' → logprob: -21.500158309936523
    9. '_main' → logprob: -21.750158309936523
    10. 'mai' → logprob: -22.375158309936523

Token 301: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 299
Tokens correctement prédits (1ère position, stricte): 110
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 223
Précision stricte (1ère position): 36.79%
Précision adaptée (1ère position): 38.13%
Précision (top 10): 74.58%
================================================================================
