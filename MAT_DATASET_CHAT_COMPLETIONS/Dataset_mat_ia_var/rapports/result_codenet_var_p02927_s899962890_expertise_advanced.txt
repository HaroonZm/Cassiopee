================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:46:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from itertools import product

m, d = map(int, input().split())

ans = sum(
    1
    for n in range(10, d + 1)
    if (t := (n // 10) * (n % 10)) <= m and (n % 10) > 1 and (n // 10) > 1 and t != 0
)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' itertools' (ID: 103178)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' product' (ID: 1888)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.2794735431671143
    2. 'product' → logprob: -1.5294735431671143
    3. 'per' → logprob: -1.6544735431671143
    4. 'com' → logprob: -1.9044735431671143
    5. ' permutations' → logprob: -2.7794735431671143
    6. ' product' → logprob: -3.5294735431671143
    7. 'cycle' → logprob: -3.6544735431671143
    8. 'chain' → logprob: -4.654473304748535
    9. 'group' → logprob: -4.654473304748535
    10. ' cycle' → logprob: -4.904473304748535

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006248722202144563
    2. '\(' → logprob: -7.750624656677246
    3. '```' → logprob: -9.375624656677246
    4. '`' → logprob: -10.250624656677246
    5. '(
' → logprob: -10.875624656677246
    6. ' (' → logprob: -11.000624656677246
    7. '.' → logprob: -11.500624656677246
    8. '"' → logprob: -12.125624656677246
    9. ''' → logprob: -12.500624656677246
    10. '\' → logprob: -13.125624656677246

Token 5: 'm' (ID: 76)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005523175350390375
    2. '\(' → logprob: -8.0005521774292
    3. '(
' → logprob: -9.1255521774292
    4. '`' → logprob: -10.3755521774292
    5. '```' → logprob: -10.5005521774292
    6. '.' → logprob: -11.1255521774292
    7. 'a' → logprob: -12.0005521774292
    8. '\' → logprob: -13.2505521774292
    9. '(**' → logprob: -13.2505521774292
    10. 'for' → logprob: -13.3755521774292

Token 6: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005368698853999376
    2. '.' → logprob: -5.755368709564209
    3. ',' → logprob: -7.505368709564209
    4. '=' → logprob: -7.630368709564209
    5. ' =' → logprob: -8.38036823272705
    6. 'e' → logprob: -8.63036823272705
    7. 'atrix' → logprob: -8.75536823272705
    8. 'ap' → logprob: -9.13036823272705
    9. 'o' → logprob: -9.50536823272705
    10. 'i' → logprob: -9.75536823272705

Token 7: ' d' (ID: 272)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.1269451230764389
    2. 'n' → logprob: -2.1269450187683105
    3. ' ' → logprob: -11.376945495605469
    4. '=' → logprob: -13.876945495605469
    5. ' =' → logprob: -14.501945495605469
    6. 'space' → logprob: -14.501945495605469
    7. ' ' → logprob: -14.876945495605469
    8. '_' → logprob: -14.876945495605469
    9. '=n' → logprob: -14.876945495605469
    10. '  ' → logprob: -15.376945495605469

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08905190229415894
    2. '=' → logprob: -2.4640519618988037
    3. ',' → logprob: -9.464052200317383
    4. ' ' → logprob: -10.839052200317383
    5. ' ,' → logprob: -12.089052200317383
    6. ' =
' → logprob: -12.339052200317383
    7. '  ' → logprob: -12.714052200317383
    8. ')' → logprob: -14.589052200317383
    9. ' =
' → logprob: -14.964052200317383
    10. '=

' → logprob: -15.089052200317383

Token 9: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4529499113559723
    2. ' map' → logprob: -1.20294988155365
    3. 'map' → logprob: -3.0779500007629395
    4. '10' → logprob: -5.3279500007629395
    5. '1' → logprob: -5.8279500007629395
    6. '9' → logprob: -6.0779500007629395
    7. '5' → logprob: -6.9529500007629395
    8. '3' → logprob: -6.9529500007629395
    9. '2' → logprob: -7.2029500007629395
    10. '19' → logprob: -7.7029500007629395

Token 10: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.006895224563777447
    2. '(' → logprob: -5.256895065307617
    3. '(str' → logprob: -7.256895065307617
    4. '(lambda' → logprob: -7.506895065307617
    5. 'int' → logprob: -8.381895065307617
    6. '(input' → logprob: -9.256895065307617
    7. '[int' → logprob: -10.256895065307617
    8. '<int' → logprob: -11.256895065307617
    9. '=int' → logprob: -12.256895065307617
    10. 'str' → logprob: -12.381895065307617

Token 11: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.23721587657928467
    2. '(' → logprob: -2.487215995788574
    3. 'input' → logprob: -2.487215995788574
    4. ',' → logprob: -4.112215995788574
    5. ',input' → logprob: -4.237215995788574
    6. ')' → logprob: -4.987215995788574
    7. ' input' → logprob: -5.112215995788574
    8. '=input' → logprob: -7.737215995788574
    9. '```' → logprob: -8.362215995788574
    10. '(),' → logprob: -9.487215995788574

Token 12: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06197866424918175
    2. ' input' → logprob: -2.811978578567505
    3. ')' → logprob: -12.436978340148926
    4. '(input' → logprob: -12.561978340148926
    5. ',input' → logprob: -12.811978340148926
    6. '=input' → logprob: -14.436978340148926
    7. ' ' → logprob: -15.936978340148926
    8. '	input' → logprob: -16.311979293823242
    9. ' )' → logprob: -17.061979293823242
    10. '[input' → logprob: -18.061979293823242

Token 13: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5027133226394653
    2. '().' → logprob: -1.2527133226394653
    3. '()' → logprob: -2.252713203430176
    4. ')' → logprob: -5.752713203430176
    5. '());' → logprob: -7.752713203430176
    6. '(' → logprob: -9.002713203430176
    7. '()))' → logprob: -9.377713203430176
    8. '();)' → logprob: -9.627713203430176
    9. '('' → logprob: -9.877713203430176
    10. '(),' → logprob: -9.877713203430176

Token 14: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020711649267468601
    2. 'strip' → logprob: -8.50020694732666
    3. ' split' → logprob: -13.62520694732666
    4. '(split' → logprob: -13.75020694732666
    5. 'rstrip' → logprob: -13.75020694732666
    6. 'read' → logprob: -16.375207901000977
    7. 'spl' → logprob: -16.625207901000977
    8. ')' → logprob: -17.750207901000977
    9. '```' → logprob: -18.125207901000977
    10. '_split' → logprob: -19.750207901000977

Token 15: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012226713821291924
    2. '))' → logprob: -4.512226581573486
    3. '())' → logprob: -6.887226581573486
    4. '()' → logprob: -9.887227058410645
    5. '`)' → logprob: -10.012227058410645
    6. '(' → logprob: -10.887227058410645
    7. ')`' → logprob: -11.137227058410645
    8. ')))' → logprob: -12.012227058410645
    9. '),' → logprob: -12.262227058410645
    10. '')' → logprob: -12.387227058410645

Token 16: 'ans' (ID: 616)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008229202590882778
    2. 'n' → logprob: -5.7582292556762695
    3. 'count' → logprob: -6.2582292556762695
    4. ' for' → logprob: -7.1332292556762695
    5. 'result' → logprob: -7.8832292556762695
    6. 'range' → logprob: -8.00822925567627
    7. 'possible' → logprob: -8.25822925567627
    8. 'a' → logprob: -8.50822925567627
    9. 'max' → logprob: -8.50822925567627
    10. 'days' → logprob: -8.88322925567627

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48801982402801514
    2. ' =' → logprob: -0.9880198240280151
    3. '_' → logprob: -4.363019943237305
    4. ' +=' → logprob: -7.113019943237305
    5. '_=' → logprob: -9.363019943237305
    6. '+=' → logprob: -9.488019943237305
    7. ',' → logprob: -10.113019943237305
    8. ' ' → logprob: -10.113019943237305
    9. 'space' → logprob: -11.863019943237305
    10. '+' → logprob: -11.988019943237305

Token 18: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02326982282102108
    2. ' ' → logprob: -3.7732698917388916
    3. 'sum' → logprob: -11.148269653320312
    4. ' sum' → logprob: -12.023269653320312
    5. '1' → logprob: -13.023269653320312
    6. '[]' → logprob: -15.148269653320312
    7. '[' → logprob: -15.398269653320312
    8. '```' → logprob: -15.648269653320312
    9. '(' → logprob: -15.773269653320312
    10. ' ' → logprob: -16.023269653320312

Token 19: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08395816385746002
    2. '((' → logprob: -2.583958148956299
    3. '(product' → logprob: -5.583958148956299
    4. '(list' → logprob: -7.583958148956299
    5. '([' → logprob: -7.833958148956299
    6. '([(' → logprob: -9.333958625793457
    7. '(sum' → logprob: -9.833958625793457
    8. '(
' → logprob: -10.333958625793457
    9. '(i' → logprob: -10.458958625793457
    10. '(((' → logprob: -10.708958625793457

Token 20: '   ' (ID: 271)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08533073216676712
    2. '(' → logprob: -2.7103307247161865
    3. 'product' → logprob: -5.835330963134766
    4. '(i' → logprob: -5.960330963134766
    5. '[' → logprob: -6.085330963134766
    6. 'range' → logprob: -6.085330963134766
    7. 'i' → logprob: -6.960330963134766
    8. '   ' → logprob: -7.085330963134766
    9. 'd' → logprob: -7.835330963134766
    10. 'x' → logprob: -7.960330963134766

Token 21: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2761555314064026
    2. '(' → logprob: -2.026155471801758
    3. 'product' → logprob: -2.651155471801758
    4. '(i' → logprob: -4.526155471801758
    5. '(product' → logprob: -5.526155471801758
    6. 'i' → logprob: -5.651155471801758
    7. 'p' → logprob: -5.901155471801758
    8. '[' → logprob: -5.901155471801758
    9. 'range' → logprob: -6.026155471801758
    10. 'prod' → logprob: -6.276155471801758

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03188580647110939
    2. '(' → logprob: -3.781885862350464
    3. 'product' → logprob: -5.906885623931885
    4. '[' → logprob: -6.906885623931885
    5. '(i' → logprob: -6.906885623931885
    6. 'i' → logprob: -7.406885623931885
    7. '   ' → logprob: -7.906885623931885
    8. 'a' → logprob: -8.031886100769043
    9. 'x' → logprob: -8.156886100769043
    10. 'p' → logprob: -8.281886100769043

Token 23: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07014138996601105
    2. 'for' → logprob: -2.695141315460205
    3. ' ' → logprob: -8.570141792297363
    4. '
' → logprob: -12.570141792297363
    5. ' fo' → logprob: -12.820141792297363
    6. ' if' → logprob: -12.820141792297363
    7. ' f' → logprob: -13.070141792297363
    8. '```' → logprob: -13.945141792297363
    9. '  ' → logprob: -14.445141792297363
    10. '   ' → logprob: -14.695141792297363

Token 24: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.038070179522037506
    2. 'for' → logprob: -3.2880702018737793
    3. ' ' → logprob: -10.538069725036621
    4. ' if' → logprob: -13.913069725036621
    5. ' f' → logprob: -15.538069725036621
    6. ')' → logprob: -15.538069725036621
    7. ' fo' → logprob: -15.663069725036621
    8. '+' → logprob: -15.913069725036621
    9. '   ' → logprob: -16.038070678710938
    10. '	for' → logprob: -16.038070678710938

Token 25: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12694920599460602
    2. ' for' → logprob: -2.1269493103027344
    3. '   ' → logprob: -11.751949310302734
    4. '
' → logprob: -12.001949310302734
    5. ' ' → logprob: -12.626949310302734
    6. '    ' → logprob: -13.626949310302734
    7. 'if' → logprob: -13.876949310302734
    8. '	for' → logprob: -14.126949310302734
    9. '  ' → logprob: -15.126949310302734
    10. ' if' → logprob: -15.626949310302734

Token 26: ' n' (ID: 297)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7114351987838745
    2. 'x' → logprob: -1.8364351987838745
    3. 'y' → logprob: -2.711435317993164
    4. 'p' → logprob: -2.711435317993164
    5. 'm' → logprob: -3.211435317993164
    6. 'day' → logprob: -3.336435317993164
    7. ' day' → logprob: -3.461435317993164
    8. 'month' → logprob: -4.336435317993164
    9. 'i' → logprob: -4.711435317993164
    10. 'd' → logprob: -4.961435317993164

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0011024682316929102
    2. 'in' → logprob: -8.001102447509766
    3. 'range' → logprob: -8.001102447509766
    4. ',' → logprob: -8.751102447509766
    5. ' ' → logprob: -8.876102447509766
    6. '_' → logprob: -9.751102447509766
    7. ' range' → logprob: -11.251102447509766
    8. '  ' → logprob: -11.376102447509766
    9. '   ' → logprob: -11.626102447509766
    10. 's' → logprob: -11.876102447509766

Token 28: ' range' (ID: 3352)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.3271600902080536
    2. ' product' → logprob: -1.577160120010376
    3. 'range' → logprob: -3.202160120010376
    4. ' range' → logprob: -3.452160120010376
    5. '(product' → logprob: -10.327159881591797
    6. ' ' → logprob: -10.452159881591797
    7. '	product' → logprob: -11.452159881591797
    8. '   ' → logprob: -11.702159881591797
    9. 'map' → logprob: -12.327159881591797
    10. '.product' → logprob: -12.327159881591797

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00675551313906908
    2. '(m' → logprob: -5.006755352020264
    3. '1' → logprob: -11.506755828857422
    4. '(
' → logprob: -11.756755828857422
    5. '((' → logprob: -11.881755828857422
    6. '(d' → logprob: -12.506755828857422
    7. ' (' → logprob: -12.756755828857422
    8. ')' → logprob: -13.256755828857422
    9. '(l' → logprob: -13.381755828857422
    10. '(a' → logprob: -13.756755828857422

Token 30: '10' (ID: 702)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006405081134289503
    2. 'm' → logprob: -5.256404876708984
    3. '10' → logprob: -6.881404876708984
    4. '(' → logprob: -9.756404876708984
    5. '11' → logprob: -9.881404876708984
    6. ' ' → logprob: -11.631404876708984
    7. '4' → logprob: -11.881404876708984
    8. '(m' → logprob: -11.881404876708984
    9. '100' → logprob: -13.006404876708984
    10. '2' → logprob: -13.256404876708984

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20150543749332428
    2. '**' → logprob: -1.826505422592163
    3. '0' → logprob: -4.951505661010742
    4. ' ,' → logprob: -5.076505661010742
    5. ')' → logprob: -5.701505661010742
    6. '1' → logprob: -6.076505661010742
    7. ',m' → logprob: -6.451505661010742
    8. ' **' → logprob: -7.326505661010742
    9. '**,' → logprob: -9.701505661010742
    10. '2' → logprob: -10.201505661010742

Token 32: ' d' (ID: 272)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.011133776977658272
    2. ' m' → logprob: -5.511133670806885
    3. '100' → logprob: -6.386133670806885
    4. 'md' → logprob: -6.511133670806885
    5. 'min' → logprob: -6.761133670806885
    6. 'd' → logprob: -6.761133670806885
    7. '10' → logprob: -7.011133670806885
    8. ' ' → logprob: -8.886134147644043
    9. '1' → logprob: -9.261134147644043
    10. 'mm' → logprob: -9.386134147644043

Token 33: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16127552092075348
    2. ' +' → logprob: -1.9112755060195923
    3. ')' → logprob: -6.911275386810303
    4. '0' → logprob: -10.911275863647461
    5. '1' → logprob: -11.036275863647461
    6. '+)' → logprob: -12.161275863647461
    7. ' )' → logprob: -12.911275863647461
    8. ' ' → logprob: -13.036275863647461
    9. '+m' → logprob: -13.536275863647461
    10. '   ' → logprob: -13.911275863647461

Token 34: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008058178937062621
    2. ' ' → logprob: -7.125805854797363
    3. '+' → logprob: -14.375805854797363
    4. '   ' → logprob: -15.625805854797363
    5. '  ' → logprob: -15.750805854797363
    6. ' ' → logprob: -16.000804901123047
    7. ')' → logprob: -16.750804901123047
    8. '-' → logprob: -16.813304901123047
    9. '2' → logprob: -16.938304901123047
    10. '```' → logprob: -17.313304901123047

Token 35: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.553032628493384e-05
    2. ' ' → logprob: -9.500075340270996
    3. '2' → logprob: -16.500076293945312
    4. ')' → logprob: -16.750076293945312
    5. '01' → logprob: -16.750076293945312
    6. '   ' → logprob: -16.937576293945312
    7. '0' → logprob: -16.937576293945312
    8. '10' → logprob: -17.312576293945312
    9. '  ' → logprob: -17.562576293945312
    10. '```' → logprob: -17.562576293945312

Token 36: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024586116895079613
    2. ')
' → logprob: -3.7745862007141113
    3. ' )' → logprob: -7.399586200714111
    4. '):' → logprob: -8.399585723876953
    5. '   ' → logprob: -8.649585723876953
    6. ' )
' → logprob: -9.149585723876953
    7. ' ' → logprob: -9.774585723876953
    8. '):
' → logprob: -10.274585723876953
    9. '+' → logprob: -10.899585723876953
    10. ')

' → logprob: -10.899585723876953

Token 37: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1515541821718216
    2. '   ' → logprob: -2.9015541076660156
    3. ' for' → logprob: -3.4015541076660156
    4. 'for' → logprob: -3.6515541076660156
    5. ')
' → logprob: -4.401554107666016
    6. ':' → logprob: -5.026554107666016
    7. '
' → logprob: -6.151554107666016
    8. '    ' → logprob: -6.776554107666016
    9. ' if' → logprob: -7.276554107666016
    10. 'if' → logprob: -7.401554107666016

Token 38: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.87187659740448
    2. '   ' → logprob: -1.62187659740448
    3. ' for' → logprob: -1.62187659740448
    4. ')' → logprob: -1.74687659740448
    5. '    ' → logprob: -5.1218767166137695
    6. '       ' → logprob: -6.4968767166137695
    7. ':' → logprob: -6.9968767166137695
    8. '
' → logprob: -6.9968767166137695
    9. '  ' → logprob: -7.7468767166137695
    10. ')
' → logprob: -7.8718767166137695

Token 39: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5755746364593506
    2. 'str' → logprob: -2.2005746364593506
    3. '(n' → logprob: -2.4505746364593506
    4. '(str' → logprob: -2.7005746364593506
    5. ' n' → logprob: -2.9505746364593506
    6. ' all' → logprob: -3.5755746364593506
    7. ' str' → logprob: -3.5755746364593506
    8. 'all' → logprob: -3.8255746364593506
    9. ' (' → logprob: -4.32557487487793
    10. ' ' → logprob: -5.32557487487793

Token 40: 't' (ID: 83)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.4906446039676666
    2. '(n' → logprob: -0.9906445741653442
    3. 'str' → logprob: -5.490644454956055
    4. 'm' → logprob: -5.990644454956055
    5. 'int' → logprob: -5.990644454956055
    6. ' (' → logprob: -6.490644454956055
    7. '(m' → logprob: -6.615644454956055
    8. '(str' → logprob: -6.990644454956055
    9. '   ' → logprob: -7.115644454956055
    10. '(int' → logprob: -7.490644454956055

Token 41: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.8269070982933044
    2. ':=' → logprob: -1.3269071578979492
    3. 'uple' → logprob: -1.4519071578979492
    4. 'emp' → logprob: -4.201907157897949
    5. 'up' → logprob: -4.326907157897949
    6. 'mp' → logprob: -4.826907157897949
    7. 'r' → logprob: -5.201907157897949
    8. ':' → logprob: -6.201907157897949
    9. 'wo' → logprob: -6.326907157897949
    10. 'okens' → logprob: -6.576907157897949

Token 42: ' (' (ID: 350)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.7449759244918823
    2. 'n' → logprob: -0.8699759244918823
    3. '(n' → logprob: -3.744976043701172
    4. 'div' → logprob: -3.994976043701172
    5. '(str' → logprob: -4.119976043701172
    6. 'm' → logprob: -4.494976043701172
    7. 'f' → logprob: -4.869976043701172
    8. 'int' → logprob: -4.869976043701172
    9. ' n' → logprob: -5.119976043701172
    10. ' str' → logprob: -5.494976043701172

Token 43: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.17270635068416595
    2. 'str' → logprob: -1.9227063655853271
    3. '(n' → logprob: -5.797706127166748
    4. 'div' → logprob: -6.422706127166748
    5. ' n' → logprob: -6.547706127166748
    6. '(str' → logprob: -6.672706127166748
    7. '[n' → logprob: -6.797706127166748
    8. 'list' → logprob: -6.922706127166748
    9. 'm' → logprob: -7.172706127166748
    10. ' str' → logprob: -7.797706127166748

Token 44: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.18661046028137207
    2. ' %' → logprob: -2.561610460281372
    3. '//' → logprob: -2.686610460281372
    4. ' ' → logprob: -4.311610221862793
    5. '%' → logprob: -4.936610221862793
    6. ' -' → logprob: -5.936610221862793
    7. '-' → logprob: -6.936610221862793
    8. '   ' → logprob: -8.686610221862793
    9. ')' → logprob: -8.936610221862793
    10. '  ' → logprob: -9.436610221862793

Token 45: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.001502717612311244
    2. ' ' → logprob: -7.001502513885498
    3. '11' → logprob: -8.001502990722656
    4. '1' → logprob: -9.001502990722656
    5. '   ' → logprob: -10.001502990722656
    6. '  ' → logprob: -10.501502990722656
    7. 'd' → logprob: -11.376502990722656
    8. 'm' → logprob: -11.876502990722656
    9. '    ' → logprob: -12.251502990722656
    10. '     ' → logprob: -12.376502990722656

Token 46: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0001475220051361248
    2. ' ' → logprob: -9.500147819519043
    3. '1' → logprob: -10.375147819519043
    4. '11' → logprob: -11.375147819519043
    5. '   ' → logprob: -12.000147819519043
    6. '  ' → logprob: -12.500147819519043
    7. '	' → logprob: -12.750147819519043
    8. 'd' → logprob: -13.125147819519043
    9. '

' → logprob: -13.125147819519043
    10. '    ' → logprob: -13.562647819519043

Token 47: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01096186600625515
    2. '))' → logprob: -5.385962009429932
    3. ')%' → logprob: -5.760962009429932
    4. ' )' → logprob: -6.010962009429932
    5. '   ' → logprob: -8.635961532592773
    6. '%' → logprob: -9.010961532592773
    7. ' ' → logprob: -9.635961532592773
    8. '1' → logprob: -9.885961532592773
    9. ' %' → logprob: -10.010961532592773
    10. ')**' → logprob: -10.385961532592773

Token 48: ' *' (ID: 425)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017971990630030632
    2. ')>=' → logprob: -5.267971992492676
    3. ')>' → logprob: -5.517971992492676
    4. ')%' → logprob: -5.767971992492676
    5. ' )' → logprob: -6.267971992492676
    6. ')*' → logprob: -6.767971992492676
    7. '>=' → logprob: -8.017971992492676
    8. '   ' → logprob: -8.267971992492676
    9. '*' → logprob: -8.267971992492676
    10. ')<=' → logprob: -8.517971992492676

Token 49: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11382792890071869
    2. ' (' → logprob: -2.36382794380188
    3. '(' → logprob: -4.988827705383301
    4. 'n' → logprob: -5.488827705383301
    5. ' ' → logprob: -7.113827705383301
    6. '   ' → logprob: -7.488827705383301
    7. ' n' → logprob: -7.488827705383301
    8. '  ' → logprob: -8.8638277053833
    9. ')' → logprob: -9.1138277053833
    10. '    ' → logprob: -9.2388277053833

Token 50: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.11549751460552216
    2. 'n' → logprob: -2.240497589111328
    3. ' (' → logprob: -6.490497589111328
    4. '(' → logprob: -6.990497589111328
    5. ' n' → logprob: -8.865497589111328
    6. '   ' → logprob: -9.740497589111328
    7. ' ' → logprob: -11.740497589111328
    8. '  ' → logprob: -11.990497589111328
    9. '((' → logprob: -12.615497589111328
    10. '	n' → logprob: -13.115497589111328

Token 51: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.12698426842689514
    2. '%' → logprob: -2.1269843578338623
    3. ' ' → logprob: -10.501984596252441
    4. '%e' → logprob: -11.751984596252441
    5. ')' → logprob: -12.001984596252441
    6. '%n' → logprob: -13.376984596252441
    7. '1' → logprob: -13.376984596252441
    8. '%d' → logprob: -13.501984596252441
    9. ' ' → logprob: -14.001984596252441
    10. '10' → logprob: -14.001984596252441

Token 52: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0004900033236481249
    2. ' ' → logprob: -7.625490188598633
    3. '1' → logprob: -14.625490188598633
    4. '100' → logprob: -14.875490188598633
    5. '  ' → logprob: -15.000490188598633
    6. 'm' → logprob: -15.250490188598633
    7. '```' → logprob: -15.375490188598633
    8. 'd' → logprob: -15.875490188598633
    9. '   ' → logprob: -15.875490188598633
    10. '``' → logprob: -17.250490188598633

Token 53: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.000340945553034544
    2. ' ' → logprob: -8.000341415405273
    3. '1' → logprob: -12.500341415405273
    4. 'm' → logprob: -14.000341415405273
    5. '100' → logprob: -15.000341415405273
    6. '   ' → logprob: -15.625341415405273
    7. '  ' → logprob: -15.750341415405273
    8. ')' → logprob: -16.125341415405273
    9. '```' → logprob: -16.500341415405273
    10. 'd' → logprob: -16.625341415405273

Token 54: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13518282771110535
    2. '))' → logprob: -2.3851828575134277
    3. ' )' → logprob: -3.7601828575134277
    4. ')==' → logprob: -4.885182857513428
    5. ' ==' → logprob: -6.760182857513428
    6. ' ))' → logprob: -6.885182857513428
    7. '==' → logprob: -7.010182857513428
    8. '   ' → logprob: -9.26018238067627
    9. ')
' → logprob: -10.13518238067627
    10. ' ' → logprob: -10.13518238067627

Token 55: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4298286437988281
    2. '<=' → logprob: -1.3048286437988281
    3. ')' → logprob: -2.929828643798828
    4. ' ==' → logprob: -5.179828643798828
    5. '==' → logprob: -5.304828643798828
    6. ' <' → logprob: -5.554828643798828
    7. ' ' → logprob: -6.054828643798828
    8. ')<=' → logprob: -6.304828643798828
    9. '<' → logprob: -6.429828643798828
    10. ' )' → logprob: -7.054828643798828

Token 56: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0013304755557328463
    2. ' m' → logprob: -6.626330375671387
    3. '   ' → logprob: -12.876330375671387
    4. ' ' → logprob: -13.876330375671387
    5. '  ' → logprob: -14.626330375671387
    6. '	m' → logprob: -15.376330375671387
    7. '    ' → logprob: -16.251331329345703
    8. 'd' → logprob: -16.876331329345703
    9. '```' → logprob: -17.126331329345703
    10. '<m' → logprob: -17.501331329345703

Token 57: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18759290874004364
    2. ' and' → logprob: -2.0625929832458496
    3. '   ' → logprob: -3.8125929832458496
    4. 'and' → logprob: -4.06259298324585
    5. '):' → logprob: -5.93759298324585
    6. ')
' → logprob: -7.06259298324585
    7. ' )' → logprob: -7.68759298324585
    8. ' ' → logprob: -8.937592506408691
    9. '  ' → logprob: -9.187592506408691
    10. '),' → logprob: -9.437592506408691

Token 58: ' (' (ID: 350)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.45456385612487793
    2. ' ' → logprob: -2.079563856124878
    3. '6' → logprob: -2.454563856124878
    4. 't' → logprob: -3.579563856124878
    5. '4' → logprob: -4.204564094543457
    6. 'n' → logprob: -4.329564094543457
    7. '5' → logprob: -4.454564094543457
    8. '   ' → logprob: -4.579564094543457
    9. '(t' → logprob: -4.579564094543457
    10. '3' → logprob: -5.079564094543457

Token 59: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.3006339371204376
    2. 't' → logprob: -1.9256339073181152
    3. 'int' → logprob: -3.1756339073181152
    4. 'd' → logprob: -3.5506339073181152
    5. 'str' → logprob: -5.425633907318115
    6. '0' → logprob: -5.425633907318115
    7. 'm' → logprob: -5.550633907318115
    8. ' n' → logprob: -5.550633907318115
    9. '   ' → logprob: -5.550633907318115
    10. '10' → logprob: -5.800633907318115

Token 60: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.06421906501054764
    2. '%' → logprob: -3.4392189979553223
    3. ')' → logprob: -4.189218997955322
    4. ' //' → logprob: -4.939218997955322
    5. ' >' → logprob: -6.439218997955322
    6. ' ' → logprob: -6.564218997955322
    7. '//' → logprob: -7.439218997955322
    8. ' !=' → logprob: -7.439218997955322
    9. ' >=' → logprob: -7.439218997955322
    10. '[' → logprob: -7.814218997955322

Token 61: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.01469765417277813
    2. ' ' → logprob: -4.264697551727295
    3. '100' → logprob: -8.389698028564453
    4. '  ' → logprob: -9.889698028564453
    5. 'd' → logprob: -10.014698028564453
    6. '   ' → logprob: -10.139698028564453
    7. '14' → logprob: -10.264698028564453
    8. '1' → logprob: -10.264698028564453
    9. ')' → logprob: -10.889698028564453
    10. '11' → logprob: -10.889698028564453

Token 62: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003648534184321761
    2. ' ' → logprob: -6.00364875793457
    3. '1' → logprob: -7.25364875793457
    4. 't' → logprob: -9.00364875793457
    5. 'd' → logprob: -9.75364875793457
    6. 'm' → logprob: -10.00364875793457
    7. '7' → logprob: -10.25364875793457
    8. '2' → logprob: -10.50364875793457
    9. '11' → logprob: -10.62864875793457
    10. '14' → logprob: -10.62864875793457

Token 63: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17994879186153412
    2. '>' → logprob: -2.1799488067626953
    3. ')>' → logprob: -3.9299488067626953
    4. '!=' → logprob: -4.054948806762695
    5. ' !=' → logprob: -5.179948806762695
    6. ' >' → logprob: -5.804948806762695
    7. ')!=' → logprob: -5.804948806762695
    8. '>=' → logprob: -7.179948806762695
    9. ')>=' → logprob: -7.304948806762695
    10. 'and' → logprob: -7.554948806762695

Token 64: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.25067561864852905
    2. '>=' → logprob: -2.375675678253174
    3. '0' → logprob: -2.625675678253174
    4. '1' → logprob: -3.500675678253174
    5. ' >' → logprob: -4.750675678253174
    6. ' >=' → logprob: -5.500675678253174
    7. 'and' → logprob: -5.625675678253174
    8. '!=' → logprob: -5.750675678253174
    9. '2' → logprob: -6.625675678253174
    10. ' and' → logprob: -7.000675678253174

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1474013477563858
    2. '0' → logprob: -2.0224013328552246
    3. ' ' → logprob: -5.522401332855225
    4. '=' → logprob: -7.272401332855225
    5. '   ' → logprob: -11.897401809692383
    6. '>' → logprob: -12.147401809692383
    7. '  ' → logprob: -13.459901809692383
    8. 't' → logprob: -13.647401809692383
    9. ' =' → logprob: -13.834901809692383
    10. '    ' → logprob: -14.397401809692383

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01550528034567833
    2. '0' → logprob: -4.265505313873291
    3. ' ' → logprob: -6.640505313873291
    4. '=' → logprob: -10.640504837036133
    5. '   ' → logprob: -13.078004837036133
    6. '```' → logprob: -13.578004837036133
    7. '  ' → logprob: -13.953004837036133
    8. '>' → logprob: -14.390504837036133
    9. 't' → logprob: -14.453004837036133
    10. ')' → logprob: -14.578004837036133

Token 67: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012734467163681984
    2. '   ' → logprob: -7.7512736320495605
    3. ' and' → logprob: -8.001273155212402
    4. ')
' → logprob: -8.751273155212402
    5. 'and' → logprob: -8.876273155212402
    6. ' )' → logprob: -9.251273155212402
    7. '):' → logprob: -9.626273155212402
    8. ':' → logprob: -12.126273155212402
    9. '  ' → logprob: -12.376273155212402
    10. ' ' → logprob: -12.376273155212402

Token 68: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.942578136920929
    2. '1' → logprob: -1.6925780773162842
    3. ' ' → logprob: -1.6925780773162842
    4. '0' → logprob: -2.317578077316284
    5. '(n' → logprob: -3.067578077316284
    6. '(t' → logprob: -3.067578077316284
    7. '   ' → logprob: -4.192578315734863
    8. '5' → logprob: -5.192578315734863
    9. '4' → logprob: -5.317578315734863
    10. 't' → logprob: -5.442578315734863

Token 69: 'n' (ID: 77)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5035397410392761
    2. '(t' → logprob: -1.253539800643921
    3. '0' → logprob: -3.503539800643921
    4. ' t' → logprob: -4.003539562225342
    5. ' (' → logprob: -4.503539562225342
    6. '1' → logprob: -4.503539562225342
    7. ' ' → logprob: -4.628539562225342
    8. 'n' → logprob: -5.128539562225342
    9. '2' → logprob: -5.503539562225342
    10. '   ' → logprob: -5.628539562225342

Token 70: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.4630410075187683
    2. ' %' → logprob: -1.463041067123413
    3. '//' → logprob: -2.338041067123413
    4. '%' → logprob: -3.463041067123413
    5. ' ' → logprob: -4.838040828704834
    6. ')' → logprob: -6.213040828704834
    7. '>' → logprob: -7.963040828704834
    8. '[' → logprob: -8.338041305541992
    9. ' >' → logprob: -9.088041305541992
    10. '0' → logprob: -9.088041305541992

Token 71: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.012573814950883389
    2. ' ' → logprob: -4.387573719024658
    3. '>' → logprob: -11.012574195861816
    4. ')' → logprob: -11.137574195861816
    5. '1' → logprob: -11.762574195861816
    6. '```' → logprob: -11.762574195861816
    7. '   ' → logprob: -12.137574195861816
    8. '  ' → logprob: -12.887574195861816
    9. ' ' → logprob: -12.887574195861816
    10. '<|end|>' → logprob: -13.075074195861816

Token 72: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0006323783891275525
    2. ' ' → logprob: -7.500632286071777
    3. '1' → logprob: -9.750632286071777
    4. ')' → logprob: -11.250632286071777
    5. '```' → logprob: -13.125632286071777
    6. '0' → logprob: -13.625632286071777
    7. '>' → logprob: -14.000632286071777
    8. '100' → logprob: -14.438132286071777
    9. '   ' → logprob: -14.688132286071777
    10. '  ' → logprob: -14.938132286071777

Token 73: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03053886629641056
    2. ')>' → logprob: -3.53053879737854
    3. ')>=' → logprob: -8.155538558959961
    4. '>' → logprob: -8.405538558959961
    5. ' )' → logprob: -8.780538558959961
    6. ')!=' → logprob: -9.780538558959961
    7. '   ' → logprob: -10.405538558959961
    8. ' >' → logprob: -11.280538558959961
    9. ' ' → logprob: -12.655538558959961
    10. ')
' → logprob: -13.030538558959961

Token 74: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.04947316646575928
    2. ')' → logprob: -3.424473285675049
    3. ' >' → logprob: -4.299473285675049
    4. ')>' → logprob: -6.299473285675049
    5. '   ' → logprob: -8.92447280883789
    6. ' ' → logprob: -10.04947280883789
    7. '>=' → logprob: -10.54947280883789
    8. '2' → logprob: -11.54947280883789
    9. '">' → logprob: -11.79947280883789
    10. '  ' → logprob: -11.79947280883789

Token 75: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0780457854270935
    2. ' ' → logprob: -2.7030458450317383
    3. '0' → logprob: -4.828045845031738
    4. '<|end|>' → logprob: -11.203045845031738
    5. '>' → logprob: -11.515545845031738
    6. '=' → logprob: -11.515545845031738
    7. '   ' → logprob: -11.765545845031738
    8. '  ' → logprob: -11.953045845031738
    9. '.' → logprob: -12.953045845031738
    10. '9' → logprob: -13.078045845031738

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015096496790647507
    2. '0' → logprob: -4.515096664428711
    3. ' ' → logprob: -5.515096664428711
    4. '   ' → logprob: -13.140096664428711
    5. '>' → logprob: -13.390096664428711
    6. '  ' → logprob: -13.452596664428711
    7. '=' → logprob: -13.952596664428711
    8. '```' → logprob: -14.077596664428711
    9. ')' → logprob: -14.202596664428711
    10. ' ' → logprob: -14.390096664428711

Token 77: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001071750302799046
    2. ')
' → logprob: -7.001071929931641
    3. '   ' → logprob: -9.00107192993164
    4. '):' → logprob: -11.62607192993164
    5. ' )' → logprob: -12.50107192993164
    6. ')

' → logprob: -12.50107192993164
    7. ' and' → logprob: -12.50107192993164
    8. '),' → logprob: -13.00107192993164
    9. '))' → logprob: -13.12607192993164
    10. '
' → logprob: -13.75107192993164

Token 78: ' t' (ID: 260)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9303765296936035
    2. '(t' → logprob: -1.9303765296936035
    3. ' t' → logprob: -2.0553765296936035
    4. 't' → logprob: -2.1803765296936035
    5. ' n' → logprob: -2.5553765296936035
    6. 'n' → logprob: -2.6803765296936035
    7. '(n' → logprob: -4.0553765296936035
    8. '   ' → logprob: -4.4303765296936035
    9. ' ' → logprob: -4.8053765296936035
    10. ' True' → logprob: -5.1803765296936035

Token 79: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25706443190574646
    2. ' <=' → logprob: -2.1320643424987793
    3. '==' → logprob: -2.5070643424987793
    4. ' %' → logprob: -5.007064342498779
    5. '<=' → logprob: -5.132064342498779
    6. ' ' → logprob: -5.507064342498779
    7. '%' → logprob: -5.882064342498779
    8. ' !=' → logprob: -6.257064342498779
    9. ' <' → logprob: -6.632064342498779
    10. ' >' → logprob: -7.132064342498779

Token 80: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.21626372635364532
    2. '1' → logprob: -1.841263771057129
    3. 'n' → logprob: -4.091263771057129
    4. ' ' → logprob: -4.591263771057129
    5. '9' → logprob: -5.716263771057129
    6. 'd' → logprob: -7.091263771057129
    7. '4' → logprob: -7.341263771057129
    8. ' n' → logprob: -7.466263771057129
    9. '10' → logprob: -7.591263771057129
    10. '6' → logprob: -7.716263771057129

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4871247410774231
    2. '1' → logprob: -1.3621246814727783
    3. 'n' → logprob: -2.2371246814727783
    4. ' ' → logprob: -5.362124919891357
    5. 'm' → logprob: -5.487124919891357
    6. '9' → logprob: -5.987124919891357
    7. '4' → logprob: -6.237124919891357
    8. '6' → logprob: -6.237124919891357
    9. 'd' → logprob: -6.237124919891357
    10. ' n' → logprob: -6.987124919891357

Token 82: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002198676229454577
    2. ')
' → logprob: -8.62522029876709
    3. '   ' → logprob: -10.50022029876709
    4. '),' → logprob: -12.37522029876709
    5. ')

' → logprob: -13.62522029876709
    6. '):' → logprob: -13.87522029876709
    7. ' )' → logprob: -14.00022029876709
    8. '))' → logprob: -14.12522029876709
    9. ')
' → logprob: -14.12522029876709
    10. ')`' → logprob: -14.25022029876709

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00041029640124179423
    2. ')
' → logprob: -7.875410079956055
    3. '   ' → logprob: -11.000410079956055
    4. '),' → logprob: -12.625410079956055
    5. ')

' → logprob: -13.000410079956055
    6. ' )' → logprob: -13.375410079956055
    7. ')`' → logprob: -14.125410079956055
    8. '):' → logprob: -14.250410079956055
    9. '))' → logprob: -14.625410079956055
    10. ').' → logprob: -14.625410079956055

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.225939872208983e-05
    2. ')' → logprob: -10.375032424926758
    3. ' print' → logprob: -14.500032424926758
    4. '(print' → logprob: -15.375032424926758
    5. '<|end|>' → logprob: -15.875032424926758
    6. '```' → logprob: -17.000032424926758
    7. '
' → logprob: -17.500032424926758
    8. '.print' → logprob: -17.625032424926758
    9. '#print' → logprob: -18.125032424926758
    10. '_print' → logprob: -18.375032424926758

Token 85: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0486091673374176
    2. '(' → logprob: -3.0486092567443848
    3. '(answer' → logprob: -12.048608779907227
    4. '()' → logprob: -12.298608779907227
    5. 'ans' → logprob: -12.548608779907227
    6. '(
' → logprob: -13.548608779907227
    7. '(len' → logprob: -14.173608779907227
    8. '(`' → logprob: -14.298608779907227
    9. ' (' → logprob: -14.423608779907227
    10. '(print' → logprob: -14.423608779907227

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.173704271830502e-06
    2. ')
' → logprob: -13.62500286102295
    3. '))' → logprob: -13.62500286102295
    4. ' )' → logprob: -14.62500286102295
    5. ')`' → logprob: -16.375003814697266
    6. '`)' → logprob: -16.875003814697266
    7. '()' → logprob: -17.125003814697266
    8. '```' → logprob: -18.000003814697266
    9. '）' → logprob: -18.125003814697266
    10. ')}' → logprob: -18.500003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 84
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 31
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 36.90%
Précision (top 10): 83.33%
================================================================================
