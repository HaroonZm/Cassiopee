================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:50:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
move_step_size = int(input())

def compute_next_step(current_x, current_y):
    if abs(target_x - current_x) + abs(target_y - current_y) >= 2 * move_step_size:
        if abs(target_x - current_x) >= move_step_size:
            step_x = move_step_size if target_x > current_x else -move_step_size
        else:
            step_x = abs(target_x - current_x) * (1 if target_x > current_x else -1)
        step_y = (move_step_size - abs(step_x)) * (1 if target_y > current_y else -1)
    elif abs(target_x - current_x) + abs(target_y - current_y) == move_step_size:
        step_x, step_y = target_x - current_x, target_y - current_y
    else:
        surplus = 2 * move_step_size - abs(target_x - current_x) - abs(target_y - current_y)
        surplus = 0 if surplus % 2 else surplus // 2
        if abs(target_x - current_x) < abs(target_y - current_y):
            step_x = (abs(target_x - current_x) + surplus) * (1 if target_x > current_x else -1)
            step_y = (move_step_size - abs(step_x)) * (1 if target_y > current_y else -1)
        else:
            step_y = (abs(target_y - current_y) + surplus) * (1 if target_y > current_y else -1)
            step_x = (move_step_size - abs(step_y)) * (1 if target_x > current_x else -1)
    return (current_x + step_x, current_y + step_y)

start_x, start_y = 0, 0
target_x, target_y = map(int, input().split())

if move_step_size % 2 == 0 and (target_x + target_y) % 2:
    print(-1)
else:
    path_sequence = []
    while start_x != target_x or start_y != target_y:
        start_x, start_y = compute_next_step(start_x, start_y)
        path_sequence.append((start_x, start_y))
    print(len(path_sequence))
    for path_point in path_sequence:
        print(*path_point)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'move' (ID: 16366)
  → Token d'amorce (pas de prédiction)

Token 1: '_step' (ID: 27360)
  → Token d'amorce (pas de prédiction)

Token 2: '_size' (ID: 5044)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.49344053864479065
    2. '_' → logprob: -1.1184405088424683
    3. ' =' → logprob: -3.243440628051758
    4. ')' → logprob: -4.243440628051758
    5. '(' → logprob: -5.743440628051758
    6. '```' → logprob: -6.243440628051758
    7. '*' → logprob: -6.868440628051758
    8. '.' → logprob: -7.118440628051758
    9. '+' → logprob: -7.243440628051758
    10. '[' → logprob: -7.993440628051758

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4793596565723419
    2. '1' → logprob: -0.9793596267700195
    3. '0' → logprob: -6.2293596267700195
    4. '4' → logprob: -6.6043596267700195
    5. '32' → logprob: -6.8543596267700195
    6. '`' → logprob: -7.6043596267700195
    7. '"' → logprob: -9.10435962677002
    8. ' `' → logprob: -9.72935962677002
    9. '```' → logprob: -9.97935962677002
    10. '10' → logprob: -9.97935962677002

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007056696340441704
    2. '_' → logprob: -6.007056713104248
    3. '(move' → logprob: -6.757056713104248
    4. '[' → logprob: -7.007056713104248
    5. '```' → logprob: -7.257056713104248
    6. ')' → logprob: -8.00705623626709
    7. '32' → logprob: -8.38205623626709
    8. '('' → logprob: -8.50705623626709
    9. '40' → logprob: -8.63205623626709
    10. '`' → logprob: -9.00705623626709

Token 6: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014075592160224915
    2. '()' → logprob: -5.139075756072998
    3. ')' → logprob: -5.514075756072998
    4. '('' → logprob: -6.889075756072998
    5. '("("' → logprob: -7.139075756072998
    6. '(()' → logprob: -7.139075756072998
    7. '(
' → logprob: -8.38907527923584
    8. '())' → logprob: -8.51407527923584
    9. '```' → logprob: -8.51407527923584
    10. ''' → logprob: -9.01407527923584

Token 7: 'def' (ID: 1314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5921393632888794
    2. 'if' → logprob: -1.4671393632888794
    3. '*' → logprob: -1.8421393632888794
    4. '#' → logprob: -4.59213924407959
    5. 'move' → logprob: -4.84213924407959
    6. '.' → logprob: -5.59213924407959
    7. ' if' → logprob: -5.71713924407959
    8. '%' → logprob: -5.71713924407959
    9. '\n' → logprob: -5.96713924407959
    10. '+
' → logprob: -5.96713924407959

Token 8: ' compute' (ID: 23864)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.04413062334060669
    2. ' calculate' → logprob: -3.544130563735962
    3. ' process' → logprob: -5.419130802154541
    4. ' ' → logprob: -5.794130802154541
    5. ' space' → logprob: -6.044130802154541
    6. ' my' → logprob: -6.669130802154541
    7. ' step' → logprob: -7.169130802154541
    8. 'move' → logprob: -7.919130802154541
    9. ' add' → logprob: -8.044130325317383
    10. ' moving' → logprob: -8.669130325317383

Token 9: '_next' (ID: 25436)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6039978861808777
    2. '_step' → logprob: -1.7289979457855225
    3. '_move' → logprob: -2.1039979457855225
    4. '_distance' → logprob: -2.1039979457855225
    5. '_velocity' → logprob: -5.228997707366943
    6. '_steps' → logprob: -5.478997707366943
    7. '_position' → logprob: -6.103997707366943
    8. '_angle' → logprob: -6.228997707366943
    9. ')' → logprob: -6.603997707366943
    10. '_offset' → logprob: -6.853997707366943

Token 10: '_step' (ID: 27360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21735773980617523
    2. '_step' → logprob: -1.9673577547073364
    3. '_move' → logprob: -3.592357635498047
    4. '_position' → logprob: -3.717357635498047
    5. '_space' → logprob: -7.092357635498047
    6. '(' → logprob: -7.217357635498047
    7. '_token' → logprob: -7.967357635498047
    8. ' _' → logprob: -8.342357635498047
    9. '_pos' → logprob: -8.592357635498047
    10. '_value' → logprob: -8.717357635498047

Token 11: '(current' (ID: 15023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06298666447401047
    2. '_' → logprob: -2.8129866123199463
    3. '(_)' → logprob: -8.937986373901367
    4. '_step' → logprob: -9.312986373901367
    5. '(_' → logprob: -9.437986373901367
    6. ')' → logprob: -9.437986373901367
    7. '_parent' → logprob: -9.562986373901367
    8. '_position' → logprob: -9.937986373901367
    9. '_(' → logprob: -10.062986373901367
    10. '_distance' → logprob: -10.062986373901367

Token 12: '_x' (ID: 7054)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.34561917185783386
    2. '_step' → logprob: -1.5956192016601562
    3. '_position' → logprob: -3.4706192016601562
    4. ')_' → logprob: -3.5956192016601562
    5. '_)' → logprob: -4.095619201660156
    6. ')' → logprob: -4.720619201660156
    7. '_move' → logprob: -6.845619201660156
    8. '_space' → logprob: -7.720619201660156
    9. '_token' → logprob: -7.720619201660156
    10. ' _' → logprob: -7.970619201660156

Token 13: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.579064667224884
    2. ',' → logprob: -0.829064667224884
    3. ')' → logprob: -6.204064846038818
    4. '+' → logprob: -7.579064846038818
    5. '):
' → logprob: -8.57906436920166
    6. '_' → logprob: -9.07906436920166
    7. ':' → logprob: -9.57906436920166
    8. ' ,' → logprob: -10.20406436920166
    9. ' ):' → logprob: -10.32906436920166
    10. '_,' → logprob: -10.82906436920166

Token 14: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.5277159214019775
    2. ' current' → logprob: -0.9027159214019775
    3. ' step' → logprob: -6.527715682983398
    4. ' y' → logprob: -7.402715682983398
    5. 'step' → logprob: -7.402715682983398
    6. 'y' → logprob: -7.902715682983398
    7. ' move' → logprob: -8.652715682983398
    8. ' ' → logprob: -8.652715682983398
    9. 'next' → logprob: -8.652715682983398
    10. ' next' → logprob: -8.652715682983398

Token 15: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0814075693488121
    2. '_x' → logprob: -2.9564075469970703
    3. '_' → logprob: -3.8314075469970703
    4. '_step' → logprob: -5.70640754699707
    5. ')' → logprob: -7.58140754699707
    6. '_position' → logprob: -8.58140754699707
    7. '_move' → logprob: -9.20640754699707
    8. ' _' → logprob: -9.95640754699707
    9. '_)' → logprob: -9.95640754699707
    10. '_value' → logprob: -10.45640754699707

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5247023701667786
    2. ',' → logprob: -0.8997023701667786
    3. ')' → logprob: -6.649702548980713
    4. ' ,' → logprob: -9.149702072143555
    5. ' ):' → logprob: -9.274702072143555
    6. '   ' → logprob: -10.774702072143555
    7. '):
' → logprob: -11.649702072143555
    8. '),' → logprob: -11.774702072143555
    9. ':' → logprob: -11.899702072143555
    10. ''):' → logprob: -12.274702072143555

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10521454364061356
    2. ':' → logprob: -2.7302145957946777
    3. ' return' → logprob: -4.730214595794678
    4. '<|end|>' → logprob: -5.105214595794678
    5. '```' → logprob: -5.730214595794678
    6. ')' → logprob: -5.980214595794678
    7. '):' → logprob: -5.980214595794678
    8. ' ' → logprob: -6.230214595794678
    9. '    ' → logprob: -6.480214595794678
    10. ':return' → logprob: -6.605214595794678

Token 18: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42315176129341125
    2. '    ' → logprob: -1.7981517314910889
    3. ' return' → logprob: -3.173151731491089
    4. '```' → logprob: -3.423151731491089
    5. 'return' → logprob: -3.548151731491089
    6. '`' → logprob: -3.798151731491089
    7. '     
' → logprob: -4.173151969909668
    8. '    
' → logprob: -4.548151969909668
    9. ' 
' → logprob: -4.923151969909668
    10. ' ' → logprob: -5.048151969909668

Token 19: ' abs' (ID: 8443)
  Prédit: ' current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.37048473954200745
    2. ' ' → logprob: -1.870484709739685
    3. ' move' → logprob: -2.2454848289489746
    4. 'current' → logprob: -3.1204848289489746
    5. 'move' → logprob: -5.995484828948975
    6. ' (' → logprob: -6.870484828948975
    7. ' step' → logprob: -7.870484828948975
    8. '(current' → logprob: -8.245484352111816
    9. ' abs' → logprob: -8.245484352111816
    10. 'abs' → logprob: -8.245484352111816

Token 20: '(target' (ID: 16247)
  Prédit: '(current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.00015217094914987683
    2. '(' → logprob: -9.250152587890625
    3. '(move' → logprob: -9.875152587890625
    4. 'current' → logprob: -13.125152587890625
    5. '(next' → logprob: -14.125152587890625
    6. '((' → logprob: -14.375152587890625
    7. '(max' → logprob: -15.250152587890625
    8. '(x' → logprob: -15.250152587890625
    9. '(m' → logprob: -15.875152587890625
    10. '(change' → logprob: -16.125152587890625

Token 21: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0017444390105083585
    2. 'x' → logprob: -6.501744270324707
    3. ' -' → logprob: -9.251744270324707
    4. '_' → logprob: -10.376744270324707
    5. '_target' → logprob: -11.126744270324707
    6. '_y' → logprob: -11.126744270324707
    7. '-' → logprob: -11.376744270324707
    8. ')' → logprob: -11.376744270324707
    9. '_position' → logprob: -11.876744270324707
    10. 's' → logprob: -12.001744270324707

Token 22: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.3872581124305725
    2. '-' → logprob: -1.1372580528259277
    3. ' ' → logprob: -8.387258529663086
    4. '-current' → logprob: -9.137258529663086
    5. ')' → logprob: -10.887258529663086
    6. '   ' → logprob: -11.137258529663086
    7. '-target' → logprob: -12.512258529663086
    8. '  ' → logprob: -12.762258529663086
    9. '[' → logprob: -12.887258529663086
    10. 'current' → logprob: -13.387258529663086

Token 23: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.14268827438354492
    2. ' current' → logprob: -2.017688274383545
    3. '<|end|>' → logprob: -12.892688751220703
    4. '(current' → logprob: -13.017688751220703
    5. '_current' → logprob: -13.392688751220703
    6. ' ' → logprob: -13.392688751220703
    7. '	current' → logprob: -13.642688751220703
    8. '   ' → logprob: -13.892688751220703
    9. '$current' → logprob: -14.142688751220703
    10. 'Current' → logprob: -14.142688751220703

Token 24: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.845798710244708e-05
    2. '_y' → logprob: -10.250038146972656
    3. 'x' → logprob: -13.250038146972656
    4. '_' → logprob: -14.000038146972656
    5. ')' → logprob: -16.250038146972656
    6. ')_' → logprob: -16.250038146972656
    7. '_)' → logprob: -16.625038146972656
    8. '_step' → logprob: -17.500038146972656
    9. ' _' → logprob: -17.875038146972656
    10. '_a' → logprob: -18.125038146972656

Token 25: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0004360334132798016
    2. ' )' → logprob: -8.000435829162598
    3. ')>' → logprob: -9.625435829162598
    4. ')>=' → logprob: -11.375435829162598
    5. ')<=' → logprob: -11.750435829162598
    6. '>' → logprob: -11.875435829162598
    7. '   ' → logprob: -13.625435829162598
    8. ' >' → logprob: -13.750435829162598
    9. '>)' → logprob: -13.875435829162598
    10. ')<' → logprob: -14.500435829162598

Token 26: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02782442793250084
    2. ' >' → logprob: -4.027824401855469
    3. '>' → logprob: -5.402824401855469
    4. ' )' → logprob: -5.527824401855469
    5. ' <=' → logprob: -7.777824401855469
    6. ')>' → logprob: -7.777824401855469
    7. ' <' → logprob: -9.402824401855469
    8. ' ' → logprob: -10.027824401855469
    9. ' >=' → logprob: -10.152824401855469
    10. '<=' → logprob: -10.527824401855469

Token 27: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0550168976187706
    2. ' abs' → logprob: -2.9300169944763184
    3. 'move' → logprob: -10.18001651763916
    4. ' move' → logprob: -10.30501651763916
    5. '1' → logprob: -10.68001651763916
    6. '(abs' → logprob: -10.93001651763916
    7. 'int' → logprob: -12.18001651763916
    8. '<|end|>' → logprob: -12.43001651763916
    9. '_abs' → logprob: -12.68001651763916
    10. ' ' → logprob: -12.80501651763916

Token 28: '(target' (ID: 16247)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14338672161102295
    2. '(target' → logprob: -2.0183868408203125
    3. '('' → logprob: -8.643386840820312
    4. '(user' → logprob: -8.768386840820312
    5. '<|end|>' → logprob: -9.018386840820312
    6. ' (' → logprob: -9.268386840820312
    7. '((' → logprob: -10.018386840820312
    8. '(s' → logprob: -11.018386840820312
    9. '(next' → logprob: -11.018386840820312
    10. '(current' → logprob: -11.143386840820312

Token 29: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.38697659969329834
    2. '_y' → logprob: -1.1369765996932983
    3. '-_' → logprob: -10.26197624206543
    4. '-' → logprob: -11.26197624206543
    5. '<|end|>' → logprob: -11.76197624206543
    6. '_' → logprob: -11.76197624206543
    7. '-x' → logprob: -12.01197624206543
    8. ' -' → logprob: -12.01197624206543
    9. '_z' → logprob: -12.51197624206543
    10. '_-' → logprob: -12.51197624206543

Token 30: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003762667067348957
    2. '-' → logprob: -5.628762722015381
    3. '<|end|>' → logprob: -9.128762245178223
    4. ' ' → logprob: -10.503762245178223
    5. '<|end|>' → logprob: -11.003762245178223
    6. ')' → logprob: -12.128762245178223
    7. '  ' → logprob: -14.503762245178223
    8. 'user' → logprob: -15.003762245178223
    9. ' to' → logprob: -15.128762245178223
    10. '   ' → logprob: -15.191262245178223

Token 31: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.5760548710823059
    2. 'current' → logprob: -0.8260548710823059
    3. ' ' → logprob: -10.451054573059082
    4. '<|end|>' → logprob: -10.701054573059082
    5. '(current' → logprob: -11.076054573059082
    6. '[current' → logprob: -11.326054573059082
    7. '_current' → logprob: -11.451054573059082
    8. '	current' → logprob: -11.951054573059082
    9. '=current' → logprob: -12.576054573059082
    10. '$current' → logprob: -12.826054573059082

Token 32: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002812363440170884
    2. '_y' → logprob: -5.877812385559082
    3. 'x' → logprob: -12.377812385559082
    4. '_' → logprob: -13.627812385559082
    5. '_step' → logprob: -13.877812385559082
    6. '_)' → logprob: -14.502812385559082
    7. ')' → logprob: -15.127812385559082
    8. 'step' → logprob: -17.002811431884766
    9. '_z' → logprob: -17.252811431884766
    10. ')_' → logprob: -17.565311431884766

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045269086956977844
    2. ' )' → logprob: -3.295269012451172
    3. ' >' → logprob: -5.170269012451172
    4. '>' → logprob: -7.295269012451172
    5. ' <=' → logprob: -7.920269012451172
    6. ' <' → logprob: -8.420269012451172
    7. ')>' → logprob: -8.795269012451172
    8. '>)' → logprob: -11.045269012451172
    9. ')<' → logprob: -11.170269012451172
    10. ')<=' → logprob: -11.170269012451172

Token 34: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.02876296453177929
    2. ' <=' → logprob: -4.5287628173828125
    3. '>' → logprob: -5.2787628173828125
    4. ' ' → logprob: -5.2787628173828125
    5. ' <' → logprob: -5.4037628173828125
    6. ' ==' → logprob: -6.0287628173828125
    7. ')' → logprob: -9.278762817382812
    8. ' !=' → logprob: -9.653762817382812
    9. ' >=' → logprob: -9.653762817382812
    10. '    ' → logprob: -9.903762817382812

Token 35: ' ' (ID: 220)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.6342998743057251
    2. 'move' → logprob: -0.7592998743057251
    3. '1' → logprob: -6.7592997550964355
    4. '2' → logprob: -8.384300231933594
    5. ' ' → logprob: -8.759300231933594
    6. '	move' → logprob: -9.759300231933594
    7. '(move' → logprob: -10.384300231933594
    8. '3' → logprob: -11.759300231933594
    9. '   ' → logprob: -12.009300231933594
    10. ' step' → logprob: -12.134300231933594

Token 36: '2' (ID: 17)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.049158502370119095
    2. ' move' → logprob: -3.0491585731506348
    3. '1' → logprob: -7.549158573150635
    4. ' ' → logprob: -11.174158096313477
    5. '2' → logprob: -11.674158096313477
    6. '(move' → logprob: -11.924158096313477
    7. '	move' → logprob: -12.174158096313477
    8. 'step' → logprob: -13.674158096313477
    9. '   ' → logprob: -13.674158096313477
    10. '0' → logprob: -13.799158096313477

Token 37: ' *' (ID: 425)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03940551355481148
    2. ' :' → logprob: -3.289405584335327
    3. ' and' → logprob: -6.789405345916748
    4. ':return' → logprob: -9.914405822753906
    5. '   ' → logprob: -10.039405822753906
    6. ':
' → logprob: -10.164405822753906
    7. '):' → logprob: -10.289405822753906
    8. 'and' → logprob: -10.789405822753906
    9. ' *' → logprob: -11.539405822753906
    10. '    ' → logprob: -11.664405822753906

Token 38: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.05492832511663437
    2. 'move' → logprob: -2.9299283027648926
    3. '(move' → logprob: -10.42992877960205
    4. ' ' → logprob: -12.17992877960205
    5. '	move' → logprob: -12.17992877960205
    6. ' ' → logprob: -13.30492877960205
    7. '_move' → logprob: -13.42992877960205
    8. '```' → logprob: -14.55492877960205
    9. '`' → logprob: -14.92992877960205
    10. '...' → logprob: -15.05492877960205

Token 39: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -2.0100624169572257e-05
    2. '_' → logprob: -11.375020027160645
    3. '_steps' → logprob: -11.750020027160645
    4. '_s' → logprob: -15.000020027160645
    5. '_STEP' → logprob: -16.87502098083496
    6. '_move' → logprob: -17.00002098083496
    7. '_size' → logprob: -17.12502098083496
    8. ' _' → logprob: -17.75002098083496
    9. '_line' → logprob: -18.12502098083496
    10. '_sn' → logprob: -18.75002098083496

Token 40: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.822646693966817e-06
    2. '_s' → logprob: -12.500007629394531
    3. '_' → logprob: -12.875007629394531
    4. '_SIZE' → logprob: -14.250007629394531
    5. 'size' → logprob: -14.875007629394531
    6. ' _' → logprob: -16.00000762939453
    7. '_length' → logprob: -16.25000762939453
    8. '_sizes' → logprob: -16.25000762939453
    9. '_code' → logprob: -16.87500762939453
    10. 's' → logprob: -17.00000762939453

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041637211688794196
    2. ' :' → logprob: -8.37541675567627
    3. '):' → logprob: -8.87541675567627
    4. ':
' → logprob: -10.87541675567627
    5. ':return' → logprob: -11.00041675567627
    6. '   ' → logprob: -12.62541675567627
    7. ' and' → logprob: -12.75041675567627
    8. ',' → logprob: -13.62541675567627
    9. ':**' → logprob: -14.25041675567627
    10. '<|end|>' → logprob: -14.87541675567627

Token 42: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4028061330318451
    2. '       ' → logprob: -1.6528061628341675
    3. ' :' → logprob: -2.902806043624878
    4. '   ' → logprob: -3.277806043624878
    5. ':return' → logprob: -4.402806282043457
    6. '\n' → logprob: -4.652806282043457
    7. '    ' → logprob: -4.777806282043457
    8. ':
' → logprob: -6.027806282043457
    9. ' ' → logprob: -6.152806282043457
    10. ' return' → logprob: -6.402806282043457

Token 43: ' if' (ID: 538)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6715508103370667
    2. ' 
' → logprob: -1.4215507507324219
    3. '\n' → logprob: -2.421550750732422
    4. ' return' → logprob: -2.546550750732422
    5. '
' → logprob: -3.921550750732422
    6. '       ' → logprob: -3.921550750732422
    7. 'n' → logprob: -5.296550750732422
    8. ' ' → logprob: -5.546550750732422
    9. '        
' → logprob: -5.671550750732422
    10. '    
' → logprob: -5.796550750732422

Token 44: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.019060879945755005
    2. 'abs' → logprob: -4.644061088562012
    3. ' target' → logprob: -5.519061088562012
    4. ' (' → logprob: -5.644061088562012
    5. ' ' → logprob: -7.269061088562012
    6. '(abs' → logprob: -7.644061088562012
    7. ' current' → logprob: -8.269061088562012
    8. 'target' → logprob: -9.144061088562012
    9. ' move' → logprob: -9.519061088562012
    10. '    ' → logprob: -10.269061088562012

Token 45: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.001709328847937286
    2. '(' → logprob: -6.376709461212158
    3. 'target' → logprob: -12.001708984375
    4. '(user' → logprob: -15.251708984375
    5. '<|end|>' → logprob: -15.251708984375
    6. '(next' → logprob: -15.876708984375
    7. '(Target' → logprob: -16.251708984375
    8. '(t' → logprob: -16.876708984375
    9. '(
' → logprob: -17.251708984375
    10. ' (' → logprob: -17.376708984375

Token 46: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.014393717981874943
    2. '_' → logprob: -4.2643938064575195
    3. 'x' → logprob: -9.76439380645752
    4. '<|end|>' → logprob: -9.76439380645752
    5. '-' → logprob: -10.51439380645752
    6. '-_' → logprob: -10.88939380645752
    7. '_y' → logprob: -11.26439380645752
    8. '_-' → logprob: -11.76439380645752
    9. ' _' → logprob: -11.88939380645752
    10. 'user' → logprob: -12.13939380645752

Token 47: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003462152322754264
    2. '-' → logprob: -5.878462314605713
    3. '<|end|>' → logprob: -7.378462314605713
    4. ' ' → logprob: -11.128461837768555
    5. '<|end|>' → logprob: -11.753461837768555
    6. ')' → logprob: -12.128461837768555
    7. ' -
' → logprob: -14.503461837768555
    8. ' ' → logprob: -14.628461837768555
    9. '[' → logprob: -15.003461837768555
    10. '...' → logprob: -15.065961837768555

Token 48: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11288588494062424
    2. ' current' → logprob: -2.2378859519958496
    3. '<|end|>' → logprob: -9.987885475158691
    4. '(current' → logprob: -12.362885475158691
    5. ' ' → logprob: -12.612885475158691
    6. 'Current' → logprob: -12.862885475158691
    7. '_current' → logprob: -12.987885475158691
    8. '[current' → logprob: -13.737885475158691
    9. '	current' → logprob: -13.987885475158691
    10. '$current' → logprob: -14.112885475158691

Token 49: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01420957688242197
    2. 'x' → logprob: -4.264209747314453
    3. '_' → logprob: -10.639209747314453
    4. '_y' → logprob: -10.889209747314453
    5. '<|end|>' → logprob: -13.639209747314453
    6. 'current' → logprob: -14.889209747314453
    7. ')' → logprob: -15.014209747314453
    8. '_current' → logprob: -15.514209747314453
    9. '-x' → logprob: -15.639209747314453
    10. '-' → logprob: -16.264209747314453

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031436316668987274
    2. ' )' → logprob: -3.5314362049102783
    3. ' >' → logprob: -7.031436443328857
    4. ')>' → logprob: -8.0314359664917
    5. ' >=' → logprob: -8.5314359664917
    6. ')>=' → logprob: -8.6564359664917
    7. ' -' → logprob: -10.9064359664917
    8. ' ' → logprob: -10.9064359664917
    9. '>' → logprob: -11.5314359664917
    10. '[' → logprob: -11.6564359664917

Token 51: ' >=' (ID: 5064)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.051106277853250504
    2. ' >=' → logprob: -3.0511062145233154
    3. ' ' → logprob: -7.3011064529418945
    4. '>' → logprob: -7.3011064529418945
    5. ' <' → logprob: -7.4261064529418945
    6. ' <=' → logprob: -8.051106452941895
    7. '<|end|>' → logprob: -9.926106452941895
    8. '>=' → logprob: -10.176106452941895
    9. ' *' → logprob: -10.551106452941895
    10. '   ' → logprob: -10.676106452941895

Token 52: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.05423332750797272
    2. 'move' → logprob: -3.1792333126068115
    3. ' ' → logprob: -4.804233551025391
    4. '2' → logprob: -6.179233551025391
    5. ' abs' → logprob: -7.429233551025391
    6. '	move' → logprob: -8.92923355102539
    7. 'abs' → logprob: -9.55423355102539
    8. '  ' → logprob: -10.05423355102539
    9. '1' → logprob: -10.80423355102539
    10. '_move' → logprob: -11.80423355102539

Token 53: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -7.703443770878948e-06
    2. '_steps' → logprob: -12.625007629394531
    3. '_' → logprob: -12.875007629394531
    4. '_s' → logprob: -14.750007629394531
    5. 'step' → logprob: -14.750007629394531
    6. 'Step' → logprob: -15.500007629394531
    7. '_size' → logprob: -15.500007629394531
    8. '```' → logprob: -15.750007629394531
    9. '_move' → logprob: -16.12500762939453
    10. '_STEP' → logprob: -16.37500762939453

Token 54: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.869017852295656e-06
    2. '_s' → logprob: -12.375006675720215
    3. '_' → logprob: -13.625006675720215
    4. 'size' → logprob: -14.000006675720215
    5. '_SIZE' → logprob: -15.125006675720215
    6. 's' → logprob: -16.50000762939453
    7. '_sizes' → logprob: -17.12500762939453
    8. ' size' → logprob: -17.50000762939453
    9. ' _' → logprob: -17.75000762939453
    10. '_sz' → logprob: -18.00000762939453

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002978179370984435
    2. '):' → logprob: -6.752978324890137
    3. ' :' → logprob: -6.752978324890137
    4. ' and' → logprob: -7.752978324890137
    5. ':
' → logprob: -9.627978324890137
    6. ':return' → logprob: -9.877978324890137
    7. '       ' → logprob: -10.752978324890137
    8. '           ' → logprob: -11.002978324890137
    9. '<|end|>' → logprob: -11.627978324890137
    10. ',' → logprob: -11.627978324890137

Token 56: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6528246998786926
    2. '           ' → logprob: -1.1528246402740479
    3. '        ' → logprob: -3.027824640274048
    4. 'return' → logprob: -4.152824878692627
    5. ' return' → logprob: -4.402824878692627
    6. '               ' → logprob: -4.527824878692627
    7. ':' → logprob: -4.527824878692627
    8. '<|end|>' → logprob: -4.652824878692627
    9. '        
' → logprob: -4.902824878692627
    10. ' 
' → logprob: -5.027824878692627

Token 57: ' step' (ID: 5983)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4403238296508789
    2. 'return' → logprob: -1.315323829650879
    3. '           ' → logprob: -2.940323829650879
    4. '       ' → logprob: -4.440323829650879
    5. '               ' → logprob: -4.565323829650879
    6. ' 
' → logprob: -5.565323829650879
    7. '            ' → logprob: -6.565323829650879
    8. '        ' → logprob: -6.690323829650879
    9. 'n' → logprob: -7.065323829650879
    10. '            
' → logprob: -7.065323829650879

Token 58: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.29007574915885925
    2. '_' → logprob: -1.4150757789611816
    3. '_size' → logprob: -5.290075778961182
    4. 's' → logprob: -5.665075778961182
    5. ' =' → logprob: -8.665075302124023
    6. '_s' → logprob: -9.540075302124023
    7. ' _' → logprob: -10.665075302124023
    8. 'x' → logprob: -10.790075302124023
    9. '=' → logprob: -10.915075302124023
    10. '_dx' → logprob: -10.915075302124023

Token 59: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5056500434875488
    2. '=' → logprob: -1.1306500434875488
    3. ' +=' → logprob: -2.630650043487549
    4. '+=' → logprob: -6.505650043487549
    5. '+' → logprob: -7.630650043487549
    6. ' +' → logprob: -11.63064956665039
    7. ' -=' → logprob: -11.63064956665039
    8. ')' → logprob: -11.88064956665039
    9. '   ' → logprob: -12.25564956665039
    10. ' ' → logprob: -12.38064956665039

Token 60: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5232535004615784
    2. ' move' → logprob: -0.8982535004615784
    3. '	move' → logprob: -9.773253440856934
    4. '(move' → logprob: -10.148253440856934
    5. '1' → logprob: -11.898253440856934
    6. '   ' → logprob: -12.023253440856934
    7. 'int' → logprob: -12.023253440856934
    8. ' ' → logprob: -12.773253440856934
    9. '    ' → logprob: -13.273253440856934
    10. '           ' → logprob: -13.523253440856934

Token 61: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -4.906711546937004e-05
    2. '_' → logprob: -10.000048637390137
    3. '_size' → logprob: -13.500048637390137
    4. '_steps' → logprob: -13.875048637390137
    5. '_x' → logprob: -14.375048637390137
    6. '_s' → logprob: -14.750048637390137
    7. '_STEP' → logprob: -16.375049591064453
    8. 'Step' → logprob: -17.000049591064453
    9. 'step' → logprob: -17.250049591064453
    10. '_move' → logprob: -17.750049591064453

Token 62: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.8624639324116288e-06
    2. '_' → logprob: -14.375001907348633
    3. '_s' → logprob: -14.750001907348633
    4. '_step' → logprob: -15.750001907348633
    5. '_SIZE' → logprob: -15.750001907348633
    6. ' _' → logprob: -15.875001907348633
    7. '```' → logprob: -16.000001907348633
    8. 's' → logprob: -16.375001907348633
    9. 'size' → logprob: -16.375001907348633
    10. '_code' → logprob: -16.625001907348633

Token 63: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3244853615760803
    2. ' else' → logprob: -1.8244853019714355
    3. '       ' → logprob: -2.5744853019714355
    4. '<|end|>' → logprob: -3.4494853019714355
    5. 'elif' → logprob: -5.8244853019714355
    6. ')' → logprob: -6.8244853019714355
    7. '<|end|>' → logprob: -7.1994853019714355
    8. '	else' → logprob: -7.4494853019714355
    9. '   ' → logprob: -7.9494853019714355
    10. '           ' → logprob: -7.9494853019714355

Token 64: ' target' (ID: 3783)
  Prédit: ' target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' target' → logprob: -0.07814235985279083
    2. 'target' → logprob: -2.7031424045562744
    3. '(target' → logprob: -5.453142166137695
    4. ' (' → logprob: -5.578142166137695
    5. ' current' → logprob: -9.828142166137695
    6. '	target' → logprob: -10.453142166137695
    7. ' ' → logprob: -10.953142166137695
    8. 'current' → logprob: -12.703142166137695
    9. '(' → logprob: -12.953142166137695
    10. '_target' → logprob: -13.453142166137695

Token 65: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00016229959146585315
    2. '_' → logprob: -8.750162124633789
    3. '<|end|>' → logprob: -12.875162124633789
    4. 'x' → logprob: -14.250162124633789
    5. ' _' → logprob: -16.00016212463379
    6. '}_' → logprob: -16.12516212463379
    7. '<|end|>' → logprob: -16.37516212463379
    8. '```' → logprob: -17.37516212463379
    9. '_target' → logprob: -17.62516212463379
    10. '_xlim' → logprob: -17.75016212463379

Token 66: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.005440431647002697
    2. '>' → logprob: -5.2554402351379395
    3. ' ' → logprob: -8.630440711975098
    4. ' >=' → logprob: -11.380440711975098
    5. ' -' → logprob: -12.005440711975098
    6. '-' → logprob: -12.630440711975098
    7. '<|end|>' → logprob: -12.755440711975098
    8. ' else' → logprob: -14.130440711975098
    9. '  ' → logprob: -14.505440711975098
    10. '">' → logprob: -15.005440711975098

Token 67: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.10020817816257477
    2. 'current' → logprob: -2.350208282470703
    3. '_current' → logprob: -14.725208282470703
    4. '(current' → logprob: -15.100208282470703
    5. '	current' → logprob: -15.100208282470703
    6. '=current' → logprob: -15.350208282470703
    7. ' ' → logprob: -15.600208282470703
    8. 'Current' → logprob: -16.100208282470703
    9. '[current' → logprob: -16.975208282470703
    10. '$current' → logprob: -16.975208282470703

Token 68: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.4855663721391466e-05
    2. '_y' → logprob: -12.000015258789062
    3. 'x' → logprob: -12.250015258789062
    4. '_' → logprob: -12.500015258789062
    5. '```' → logprob: -17.750015258789062
    6. 'current' → logprob: -18.375015258789062
    7. '_

' → logprob: -18.500015258789062
    8. '_user' → logprob: -18.750015258789062
    9. ' _' → logprob: -19.000015258789062
    10. '_)' → logprob: -19.125015258789062

Token 69: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.0031794982496649027
    2. 'else' → logprob: -5.753179550170898
    3. ' ' → logprob: -13.628179550170898
    4. '-' → logprob: -15.128179550170898
    5. '	else' → logprob: -15.378179550170898
    6. ' -' → logprob: -17.2531795501709
    7. '_else' → logprob: -17.7531795501709
    8. '        ' → logprob: -17.8781795501709
    9. ' ' → logprob: -18.3781795501709
    10. '            ' → logprob: -18.3781795501709

Token 70: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.00377062801271677
    2. '-' → logprob: -5.75377082824707
    3. '-m' → logprob: -7.75377082824707
    4. '-step' → logprob: -9.62877082824707
    5. '-update' → logprob: -10.75377082824707
    6. '-ex' → logprob: -12.00377082824707
    7. '-id' → logprob: -12.75377082824707
    8. '-run' → logprob: -12.87877082824707
    9. '-j' → logprob: -13.00377082824707
    10. '-us' → logprob: -13.12877082824707

Token 71: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0025622190441936255
    2. ' move' → logprob: -6.002562046051025
    3. '1' → logprob: -9.377562522888184
    4. 'step' → logprob: -14.002562522888184
    5. '	move' → logprob: -14.502562522888184
    6. '(move' → logprob: -15.002562522888184
    7. ' ' → logprob: -16.502561569213867
    8. '_move' → logprob: -16.627561569213867
    9. '.move' → logprob: -17.252561569213867
    10. '0' → logprob: -18.002561569213867

Token 72: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -8.506661833962426e-05
    2. '_' → logprob: -9.87508487701416
    3. 'step' → logprob: -10.62508487701416
    4. '_s' → logprob: -12.50008487701416
    5. '_move' → logprob: -13.00008487701416
    6. '_st' → logprob: -13.50008487701416
    7. '_steps' → logprob: -14.37508487701416
    8. '_STEP' → logprob: -15.50008487701416
    9. 'Step' → logprob: -15.62508487701416
    10. ' _' → logprob: -15.87508487701416

Token 73: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -6.146429223008454e-05
    2. '_s' → logprob: -10.25006103515625
    3. '_' → logprob: -11.00006103515625
    4. 'size' → logprob: -11.75006103515625
    5. 's' → logprob: -14.50006103515625
    6. ' size' → logprob: -15.25006103515625
    7. '_SIZE' → logprob: -15.25006103515625
    8. ' _' → logprob: -15.62506103515625
    9. '_sizes' → logprob: -16.37506103515625
    10. '_step' → logprob: -16.37506103515625

Token 74: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0212547779083252
    2. '<|end|>' → logprob: -1.0212547779083252
    3. 'else' → logprob: -1.5212547779083252
    4. ' else' → logprob: -3.521254777908325
    5. '           ' → logprob: -4.396254539489746
    6. ')' → logprob: -5.396254539489746
    7. '
' → logprob: -5.396254539489746
    8. 'elif' → logprob: -5.521254539489746
    9. '<|end|>' → logprob: -6.271254539489746
    10. '\n' → logprob: -6.646254539489746

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6352241635322571
    2. '<|end|>' → logprob: -1.2602241039276123
    3. 'else' → logprob: -2.0102241039276123
    4. ' else' → logprob: -3.5102241039276123
    5. '           ' → logprob: -5.010224342346191
    6. ')' → logprob: -5.385224342346191
    7. '   ' → logprob: -5.885224342346191
    8. 'elif' → logprob: -6.135224342346191
    9. '<|end|>' → logprob: -6.260224342346191
    10. ',' → logprob: -6.385224342346191

Token 76: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6977747678756714
    2. '       ' → logprob: -1.1977747678756714
    3. ' else' → logprob: -1.6977747678756714
    4. '   ' → logprob: -4.447774887084961
    5. '<|end|>' → logprob: -5.572774887084961
    6. 'elif' → logprob: -7.197774887084961
    7. '	else' → logprob: -7.322774887084961
    8. ' step' → logprob: -9.697774887084961
    9. '<|end|>' → logprob: -9.947774887084961
    10. ')' → logprob: -10.072774887084961

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029114089906215668
    2. ':
' → logprob: -3.654114007949829
    3. '           ' → logprob: -6.654114246368408
    4. '       ' → logprob: -6.779114246368408
    5. '   ' → logprob: -8.90411376953125
    6. ',' → logprob: -9.02911376953125
    7. ' :' → logprob: -10.15411376953125
    8. '        ' → logprob: -11.40411376953125
    9. ' :
' → logprob: -11.65411376953125
    10. '          ' → logprob: -11.90411376953125

Token 78: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8830887079238892
    2. ' step' → logprob: -1.2580887079238892
    3. 'step' → logprob: -1.3830887079238892
    4. '       ' → logprob: -3.2580885887145996
    5. '   ' → logprob: -4.6330885887146
    6. ' ' → logprob: -6.7580885887146
    7. '	step' → logprob: -6.7580885887146
    8. '```' → logprob: -8.383089065551758
    9. '               ' → logprob: -8.633089065551758
    10. '        ' → logprob: -9.633089065551758

Token 79: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.20156897604465485
    2. ' step' → logprob: -1.7015689611434937
    3. '           ' → logprob: -8.951568603515625
    4. '	step' → logprob: -11.576568603515625
    5. '0' → logprob: -12.451568603515625
    6. '       ' → logprob: -12.701568603515625
    7. ' ' → logprob: -12.701568603515625
    8. 'Step' → logprob: -12.951568603515625
    9. '   ' → logprob: -13.826568603515625
    10. '            ' → logprob: -14.076568603515625

Token 80: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0017107593594118953
    2. '_y' → logprob: -6.376710891723633
    3. '_' → logprob: -12.001710891723633
    4. 's' → logprob: -14.001710891723633
    5. 'x' → logprob: -14.251710891723633
    6. '_size' → logprob: -14.876710891723633
    7. ' _' → logprob: -15.626710891723633
    8. '_s' → logprob: -16.251710891723633
    9. 'size' → logprob: -17.001710891723633
    10. '=_' → logprob: -17.126710891723633

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132633566856384
    2. ' =' → logprob: -1.3132634162902832
    3. 's' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.313262939453125
    5. ',' → logprob: -15.688262939453125
    6. ' +=' → logprob: -15.938262939453125
    7. '＝' → logprob: -16.438262939453125
    8. '=

' → logprob: -16.438262939453125
    9. '   ' → logprob: -16.813262939453125
    10. '=int' → logprob: -16.938262939453125

Token 82: ' abs' (ID: 8443)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.702409565448761
    2. ' target' → logprob: -0.827409565448761
    3. '0' → logprob: -2.952409505844116
    4. ' ' → logprob: -5.202409744262695
    5. '(target' → logprob: -5.827409744262695
    6. ' abs' → logprob: -5.952409744262695
    7. ' (' → logprob: -6.202409744262695
    8. 'abs' → logprob: -6.327409744262695
    9. ' targ' → logprob: -9.327409744262695
    10. ' move' → logprob: -10.327409744262695

Token 83: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -8.745069499127567e-05
    2. '(' → logprob: -9.87508773803711
    3. 'target' → logprob: -10.25008773803711
    4. '(t' → logprob: -14.75008773803711
    5. ' (' → logprob: -16.87508773803711
    6. ' target' → logprob: -17.12508773803711
    7. '	target' → logprob: -17.50008773803711
    8. '(move' → logprob: -18.12508773803711
    9. '(step' → logprob: -18.25008773803711
    10. '(
' → logprob: -18.37508773803711

Token 84: '_x' (ID: 7054)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.22747717797756195
    2. '_x' → logprob: -1.6024771928787231
    3. 'target' → logprob: -6.352477073669434
    4. '(' → logprob: -9.102477073669434
    5. '_y' → logprob: -9.477477073669434
    6. 'x' → logprob: -9.852477073669434
    7. '_target' → logprob: -10.477477073669434
    8. '[target' → logprob: -10.852477073669434
    9. '_' → logprob: -11.727477073669434
    10. '(x' → logprob: -12.602477073669434

Token 85: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07038229703903198
    2. '-' → logprob: -2.6953823566436768
    3. ')' → logprob: -7.945382118225098
    4. '-current' → logprob: -10.195382118225098
    5. ' ' → logprob: -10.695382118225098
    6. 'current' → logprob: -12.070382118225098
    7. '[' → logprob: -12.320382118225098
    8. '-target' → logprob: -12.820382118225098
    9. ' )' → logprob: -12.945382118225098
    10. '[current' → logprob: -13.070382118225098

Token 86: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10034189373254776
    2. ' current' → logprob: -2.350341796875
    3. '_current' → logprob: -9.225341796875
    4. ' ' → logprob: -11.225341796875
    5. 'x' → logprob: -11.975341796875
    6. '(current' → logprob: -12.100341796875
    7. 'Current' → logprob: -13.100341796875
    8. '<|end|>' → logprob: -13.350341796875
    9. '$current' → logprob: -13.600341796875
    10. '	current' → logprob: -13.975341796875

Token 87: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0002582402084954083
    2. 'x' → logprob: -8.500258445739746
    3. '_y' → logprob: -10.125258445739746
    4. '_step' → logprob: -12.250258445739746
    5. '_' → logprob: -12.625258445739746
    6. '_size' → logprob: -13.375258445739746
    7. 'step' → logprob: -13.625258445739746
    8. ')' → logprob: -14.000258445739746
    9. '```' → logprob: -14.250258445739746
    10. '_s' → logprob: -15.000258445739746

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2535426914691925
    2. '<|end|>' → logprob: -1.5035426616668701
    3. '<|end|>' → logprob: -7.003542900085449
    4. ' )' → logprob: -8.25354290008545
    5. '}' → logprob: -9.37854290008545
    6. '#' → logprob: -9.75354290008545
    7. '       ' → logprob: -9.87854290008545
    8. ')#' → logprob: -10.00354290008545
    9. ')}' → logprob: -10.50354290008545
    10. ' ' → logprob: -10.75354290008545

Token 89: ' *' (ID: 425)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4150969386100769
    2. '((' → logprob: -1.5400969982147217
    3. ' (' → logprob: -2.4150969982147217
    4. '1' → logprob: -4.040096759796143
    5. ' ((' → logprob: -4.665096759796143
    6. '(int' → logprob: -5.540096759796143
    7. '(sign' → logprob: -6.165096759796143
    8. '(
' → logprob: -7.165096759796143
    9. '(-' → logprob: -7.415096759796143
    10. ' ' → logprob: -7.415096759796143

Token 91: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4783715307712555
    2. '1' → logprob: -0.9783715009689331
    3. '((' → logprob: -6.228371620178223
    4. ' (' → logprob: -6.478371620178223
    5. '-' → logprob: -8.103371620178223
    6. '(-' → logprob: -8.728371620178223
    7. ' ' → logprob: -8.853371620178223
    8. '(
' → logprob: -9.603371620178223
    9. '(int' → logprob: -9.978371620178223
    10. '   ' → logprob: -11.353371620178223

Token 92: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05983985215425491
    2. '//' → logprob: -3.434839963912964
    3. ')' → logprob: -4.559839725494385
    4. 'if' → logprob: -5.309839725494385
    5. ' //' → logprob: -5.434839725494385
    6. '<|end|>' → logprob: -5.684839725494385
    7. '/' → logprob: -7.309839725494385
    8. ' /' → logprob: -7.684839725494385
    9. ' ' → logprob: -7.934839725494385
    10. ' and' → logprob: -8.809840202331543

Token 93: ' target' (ID: 3783)
  Prédit: '(target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.16799990832805634
    2. ' (' → logprob: -1.9179998636245728
    3. 'target' → logprob: -5.292999744415283
    4. ' target' → logprob: -6.042999744415283
    5. '(' → logprob: -8.543000221252441
    6. '(t' → logprob: -9.293000221252441
    7. '[target' → logprob: -10.918000221252441
    8. '((' → logprob: -11.668000221252441
    9. ' ' → logprob: -11.793000221252441
    10. '(
' → logprob: -12.043000221252441

Token 94: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.00283899181522429
    2. '_y' → logprob: -5.877839088439941
    3. 'x' → logprob: -10.877839088439941
    4. '_' → logprob: -12.002839088439941
    5. '<|end|>' → logprob: -13.252839088439941
    6. 'target' → logprob: -13.502839088439941
    7. '```' → logprob: -13.627839088439941
    8. '_target' → logprob: -13.627839088439941
    9. '>' → logprob: -14.377839088439941
    10. '   ' → logprob: -14.502839088439941

Token 95: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.10027988255023956
    2. '>' → logprob: -2.3502798080444336
    3. ' ' → logprob: -9.725279808044434
    4. '<|end|>' → logprob: -13.100279808044434
    5. ' >

' → logprob: -13.225279808044434
    6. ' >
' → logprob: -13.350279808044434
    7. '">' → logprob: -13.850279808044434
    8. '-' → logprob: -14.100279808044434
    9. '   ' → logprob: -14.225279808044434
    10. '>x' → logprob: -14.350279808044434

Token 96: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.3868741989135742
    2. 'current' → logprob: -1.1368741989135742
    3. '(current' → logprob: -13.011874198913574
    4. '	current' → logprob: -15.011874198913574
    5. '_current' → logprob: -15.636874198913574
    6. ' ' → logprob: -16.13687515258789
    7. '=current' → logprob: -16.26187515258789
    8. '$current' → logprob: -16.51187515258789
    9. 'Current' → logprob: -17.26187515258789
    10. '[current' → logprob: -17.38687515258789

Token 97: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.011462622322142124
    2. '_y' → logprob: -4.511462688446045
    3. 'x' → logprob: -7.886462688446045
    4. '_' → logprob: -10.511462211608887
    5. 'current' → logprob: -12.386462211608887
    6. '_current' → logprob: -13.261462211608887
    7. 'y' → logprob: -13.511462211608887
    8. ')' → logprob: -14.136462211608887
    9. 'else' → logprob: -14.261462211608887
    10. '```' → logprob: -14.636462211608887

Token 98: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018163753673434258
    2. 'else' → logprob: -4.018163681030273
    3. ')' → logprob: -11.768163681030273
    4. '-' → logprob: -12.893163681030273
    5. '```' → logprob: -13.518163681030273
    6. '           ' → logprob: -14.643163681030273
    7. ' -' → logprob: -14.893163681030273
    8. '	else' → logprob: -15.268163681030273
    9. '       ' → logprob: -15.518163681030273
    10. ' )' → logprob: -15.518163681030273

Token 99: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0040785204619169235
    2. ' -' → logprob: -5.504078388214111
    3. '   ' → logprob: -15.87907886505127
    4. ' ' → logprob: -16.879077911376953
    5. '	' → logprob: -17.504077911376953
    6. '1' → logprob: -18.129077911376953
    7. '  ' → logprob: -18.254077911376953
    8. '−' → logprob: -19.254077911376953
    9. ')' → logprob: -19.379077911376953
    10. '```' → logprob: -19.504077911376953

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. ')' → logprob: -18.125009536743164
    4. '   ' → logprob: -20.125009536743164
    5. '```' → logprob: -20.250009536743164
    6. '-' → logprob: -21.625009536743164
    7. '１' → logprob: -21.750009536743164
    8. '۱' → logprob: -22.125009536743164
    9. '  ' → logprob: -22.250009536743164
    10. '<|end|>' → logprob: -22.500009536743164

Token 101: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18039259314537048
    2. ')
' → logprob: -1.8053926229476929
    3. '       ' → logprob: -7.805392742156982
    4. '   ' → logprob: -8.680392265319824
    5. ')
' → logprob: -10.055392265319824
    6. ')

' → logprob: -12.055392265319824
    7. '<|end|>' → logprob: -12.055392265319824
    8. ')\' → logprob: -12.680392265319824
    9. ')return' → logprob: -12.805392265319824
    10. ' )' → logprob: -12.930392265319824

Token 102: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1807435750961304
    2. '\n' → logprob: -1.6807435750961304
    3. '       ' → logprob: -1.9307435750961304
    4. '<|end|>' → logprob: -2.55574369430542
    5. '    
' → logprob: -2.93074369430542
    6. 'else' → logprob: -2.93074369430542
    7. '
' → logprob: -2.93074369430542
    8. ' else' → logprob: -3.05574369430542
    9. ' 
' → logprob: -3.43074369430542
    10. '  
' → logprob: -4.93074369430542

Token 103: ' step' (ID: 5983)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4434993863105774
    2. '
' → logprob: -2.1934993267059326
    3. '   ' → logprob: -2.4434993267059326
    4. 'else' → logprob: -2.5684993267059326
    5. '\n' → logprob: -3.5684993267059326
    6. ' else' → logprob: -3.8184993267059326
    7. '        
' → logprob: -4.943499565124512
    8. '    
' → logprob: -4.943499565124512
    9. 'newline' → logprob: -5.443499565124512
    10. 'elif' → logprob: -5.693499565124512

Token 104: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.09200790524482727
    2. '_x' → logprob: -2.592007875442505
    3. '_' → logprob: -4.342008113861084
    4. ' _' → logprob: -11.217007637023926
    5. '_
' → logprob: -12.842007637023926
    6. '_

' → logprob: -12.967007637023926
    7. '_s' → logprob: -13.967007637023926
    8. '_t' → logprob: -14.467007637023926
    9. '_z' → logprob: -14.592007637023926
    10. '_a' → logprob: -15.967007637023926

Token 105: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1602255403995514
    2. '=' → logprob: -1.910225510597229
    3. '_' → logprob: -14.285225868225098
    4. ' ' → logprob: -15.035225868225098
    5. 's' → logprob: -15.285225868225098
    6. 'space' → logprob: -16.66022491455078
    7. '   ' → logprob: -17.41022491455078
    8. ')' → logprob: -17.41022491455078
    9. ' +=' → logprob: -17.53522491455078
    10. 'if' → logprob: -17.78522491455078

Token 106: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002978179370984435
    2. 'move' → logprob: -6.627978324890137
    3. ' ' → logprob: -6.877978324890137
    4. 'abs' → logprob: -7.502978324890137
    5. ' move' → logprob: -10.877978324890137
    6. '   ' → logprob: -11.502978324890137
    7. '(' → logprob: -11.627978324890137
    8. 'int' → logprob: -11.877978324890137
    9. 'step' → logprob: -11.877978324890137
    10. ' abs' → logprob: -12.002978324890137

Token 107: 'move' (ID: 16366)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025063248351216316
    2. 'move' → logprob: -4.0250630378723145
    3. 'abs' → logprob: -5.9000630378723145
    4. ' ' → logprob: -5.9000630378723145
    5. ' move' → logprob: -7.4000630378723145
    6. ' abs' → logprob: -8.275063514709473
    7. 'target' → logprob: -8.775063514709473
    8. ')' → logprob: -9.400063514709473
    9. '-m' → logprob: -9.900063514709473
    10. 'current' → logprob: -10.150063514709473

Token 108: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00045319506898522377
    2. '_' → logprob: -7.750452995300293
    3. ')_' → logprob: -12.250452995300293
    4. ')' → logprob: -12.375452995300293
    5. 'Step' → logprob: -12.500452995300293
    6. '_size' → logprob: -12.625452995300293
    7. '_steps' → logprob: -12.750452995300293
    8. '_s' → logprob: -14.250452995300293
    9. 'step' → logprob: -14.500452995300293
    10. '_)' → logprob: -14.625452995300293

Token 109: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.5928495486150496e-05
    2. 'size' → logprob: -11.250016212463379
    3. '_s' → logprob: -13.375016212463379
    4. '_' → logprob: -14.500016212463379
    5. '_SIZE' → logprob: -14.750016212463379
    6. ' size' → logprob: -16.000015258789062
    7. 's' → logprob: -16.625015258789062
    8. ' _' → logprob: -16.750015258789062
    9. '   ' → logprob: -17.250015258789062
    10. '_sizes' → logprob: -17.625015258789062

Token 110: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.5489339232444763
    2. ' if' → logprob: -0.9239339232444763
    3. 'if' → logprob: -4.298933982849121
    4. '-' → logprob: -4.548933982849121
    5. ')' → logprob: -7.298933982849121
    6. '	if' → logprob: -8.673933982849121
    7. ' ' → logprob: -8.923933982849121
    8. '   ' → logprob: -9.423933982849121
    9. '-step' → logprob: -9.423933982849121
    10. '<|end|>' → logprob: -9.923933982849121

Token 111: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02328508161008358
    2. ' abs' → logprob: -3.773285150527954
    3. 'step' → logprob: -10.398284912109375
    4. '(abs' → logprob: -12.648284912109375
    5. ' step' → logprob: -12.773284912109375
    6. '   ' → logprob: -13.023284912109375
    7. '       ' → logprob: -15.273284912109375
    8. '    ' → logprob: -15.523284912109375
    9. '           ' → logprob: -16.023284912109375
    10. ' ' → logprob: -16.273284912109375

Token 112: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -0.013008683919906616
    2. 'step' → logprob: -4.5130085945129395
    3. '(target' → logprob: -6.2630085945129395
    4. 'target' → logprob: -10.513009071350098
    5. '(' → logprob: -10.638009071350098
    6. ' step' → logprob: -13.763009071350098
    7. '(current' → logprob: -14.263009071350098
    8. '	step' → logprob: -15.013009071350098
    9. ' (' → logprob: -16.01300811767578
    10. 'current' → logprob: -18.01300811767578

Token 113: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.704273118884885e-07
    2. 'x' → logprob: -14.750000953674316
    3. '_y' → logprob: -15.750000953674316
    4. ')_' → logprob: -17.875
    5. '_' → logprob: -18.125
    6. ' _' → logprob: -19.25
    7. '}_' → logprob: -21.5
    8. '```' → logprob: -21.875
    9. 's' → logprob: -22.125
    10. ')' → logprob: -22.375

Token 114: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.34892868995666504
    2. ')' → logprob: -1.223928689956665
    3. ' )' → logprob: -8.848928451538086
    4. ' ))' → logprob: -8.973928451538086
    5. '))*' → logprob: -9.223928451538086
    6. ')))' → logprob: -9.973928451538086
    7. '))
' → logprob: -10.973928451538086
    8. ')
' → logprob: -10.973928451538086
    9. '   ' → logprob: -11.598928451538086
    10. ')*' → logprob: -12.223928451538086

Token 115: ' *' (ID: 425)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05542333796620369
    2. 'if' → logprob: -2.9304232597351074
    3. ' *' → logprob: -8.180423736572266
    4. '<|end|>' → logprob: -8.680423736572266
    5. ' ' → logprob: -10.555423736572266
    6. '	if' → logprob: -10.680423736572266
    7. '   ' → logprob: -10.680423736572266
    8. '*' → logprob: -11.555423736572266
    9. '       ' → logprob: -13.055423736572266
    10. '    ' → logprob: -13.305423736572266

Token 116: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11284902691841125
    2. ' (' → logprob: -2.237848997116089
    3. '((' → logprob: -11.612849235534668
    4. '(sign' → logprob: -12.362849235534668
    5. '  ' → logprob: -12.612849235534668
    6. ' ((' → logprob: -12.862849235534668
    7. '(int' → logprob: -13.362849235534668
    8. '   ' → logprob: -13.612849235534668
    9. '<|end|>' → logprob: -13.862849235534668
    10. '1' → logprob: -13.862849235534668

Token 117: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006333283381536603
    2. ' ' → logprob: -7.500633239746094
    3. '(' → logprob: -9.500633239746094
    4. ' (' → logprob: -12.625633239746094
    5. '   ' → logprob: -13.750633239746094
    6. '-' → logprob: -14.500633239746094
    7. ' -' → logprob: -15.125633239746094
    8. '  ' → logprob: -15.625633239746094
    9. '           ' → logprob: -17.000633239746094
    10. '
' → logprob: -17.500633239746094

Token 118: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.0015087933279573917
    2. 'if' → logprob: -6.501508712768555
    3. '	if' → logprob: -12.251508712768555
    4. '<|end|>' → logprob: -14.376508712768555
    5. ' ' → logprob: -15.001508712768555
    6. '   ' → logprob: -15.126508712768555
    7. ')' → logprob: -15.751508712768555
    8. ' *' → logprob: -15.751508712768555
    9. ' ' → logprob: -16.876508712768555
    10. '*' → logprob: -18.251508712768555

Token 119: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.5326170325279236
    2. ' target' → logprob: -1.2826170921325684
    3. '(target' → logprob: -2.0326170921325684
    4. ' (' → logprob: -5.407617092132568
    5. '(' → logprob: -10.15761661529541
    6. ' ' → logprob: -10.40761661529541
    7. '[target' → logprob: -10.40761661529541
    8. '	target' → logprob: -11.40761661529541
    9. '   ' → logprob: -11.90761661529541
    10. ',target' → logprob: -12.03261661529541

Token 120: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.001984544564038515
    2. 'target' → logprob: -6.751984596252441
    3. 'y' → logprob: -7.251984596252441
    4. '_target' → logprob: -9.626984596252441
    5. '_x' → logprob: -11.251984596252441
    6. '(target' → logprob: -11.626984596252441
    7. '[target' → logprob: -11.751984596252441
    8. '_' → logprob: -12.626984596252441
    9. 'user' → logprob: -13.876984596252441
    10. 'Y' → logprob: -13.876984596252441

Token 121: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014175384305417538
    2. '>' → logprob: -4.2641754150390625
    3. ' ' → logprob: -11.514175415039062
    4. '-' → logprob: -14.889175415039062
    5. ' >
' → logprob: -15.014175415039062
    6. '<|end|>' → logprob: -15.264175415039062
    7. ' ' → logprob: -15.514175415039062
    8. ' -' → logprob: -15.764175415039062
    9. '   ' → logprob: -16.264175415039062
    10. '>User' → logprob: -16.389175415039062

Token 122: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.048600658774375916
    2. 'current' → logprob: -3.048600673675537
    3. ' ' → logprob: -12.298600196838379
    4. '(current' → logprob: -12.923600196838379
    5. '_current' → logprob: -13.048600196838379
    6. '[current' → logprob: -13.423600196838379
    7. '	current' → logprob: -13.798600196838379
    8. '<|end|>' → logprob: -14.423600196838379
    9. '=current' → logprob: -14.923600196838379
    10. '$current' → logprob: -15.548600196838379

Token 123: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0009012157097458839
    2. 'y' → logprob: -7.125901222229004
    3. '_x' → logprob: -9.750901222229004
    4. 'current' → logprob: -10.500901222229004
    5. '_' → logprob: -12.500901222229004
    6. '   ' → logprob: -13.750901222229004
    7. ')' → logprob: -13.750901222229004
    8. '_current' → logprob: -13.750901222229004
    9. 'step' → logprob: -14.250901222229004
    10. ' ' → logprob: -14.375901222229004

Token 124: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10021357238292694
    2. 'else' → logprob: -2.3502135276794434
    3. '-' → logprob: -12.725214004516602
    4. ' ' → logprob: -13.100214004516602
    5. ' -' → logprob: -13.725214004516602
    6. '	else' → logprob: -14.600214004516602
    7. ' >' → logprob: -16.4752140045166
    8. '>' → logprob: -16.6002140045166
    9. '   ' → logprob: -16.7252140045166
    10. '```' → logprob: -16.7252140045166

Token 125: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12693293392658234
    2. ' -' → logprob: -2.1269328594207764
    3. '1' → logprob: -12.626933097839355
    4. ' ' → logprob: -13.626933097839355
    5. '0' → logprob: -16.12693214416504
    6. ')' → logprob: -16.12693214416504
    7. '```' → logprob: -16.75193214416504
    8. '-)' → logprob: -17.75193214416504
    9. ' ' → logprob: -18.00193214416504
    10. '   ' → logprob: -18.00193214416504

Token 126: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -18.5000057220459
    4. '   ' → logprob: -19.1250057220459
    5. '```' → logprob: -19.1250057220459
    6. '-' → logprob: -20.0000057220459
    7. ' -' → logprob: -21.1250057220459
    8. '+' → logprob: -21.1250057220459
    9. '１' → logprob: -21.3750057220459
    10. '
' → logprob: -21.3750057220459

Token 127: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.698698704596609e-05
    2. ')
' → logprob: -9.375097274780273
    3. '   ' → logprob: -12.000097274780273
    4. ')return' → logprob: -13.125097274780273
    5. ' )' → logprob: -13.125097274780273
    6. '<|end|>' → logprob: -13.875097274780273
    7. '       ' → logprob: -14.625097274780273
    8. ')

' → logprob: -15.375097274780273
    9. '')' → logprob: -16.625097274780273
    10. '}' → logprob: -16.875097274780273

Token 128: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5331658124923706
    2. '<|end|>' → logprob: -1.1581658124923706
    3. 'return' → logprob: -2.65816593170166
    4. ' return' → logprob: -4.15816593170166
    5. '	return' → logprob: -5.28316593170166
    6. '
' → logprob: -5.65816593170166
    7. ')' → logprob: -6.53316593170166
    8. '\n' → logprob: -6.65816593170166
    9. '<|end|>' → logprob: -7.65816593170166
    10. '       ' → logprob: -7.65816593170166

Token 129: ' elif' (ID: 9497)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43817389011383057
    2. 'else' → logprob: -1.4381738901138306
    3. ')' → logprob: -3.313173770904541
    4. ' else' → logprob: -3.438173770904541
    5. 'return' → logprob: -3.813173770904541
    6. '<|end|>' → logprob: -4.563173770904541
    7. '\n' → logprob: -5.063173770904541
    8. ' return' → logprob: -6.313173770904541
    9. '    
' → logprob: -6.438173770904541
    10. ':return' → logprob: -6.813173770904541

Token 130: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.14574667811393738
    2. ' abs' → logprob: -2.0207467079162598
    3. '   ' → logprob: -6.77074670791626
    4. 'current' → logprob: -7.14574670791626
    5. ' current' → logprob: -7.77074670791626
    6. 'target' → logprob: -8.145746231079102
    7. '(abs' → logprob: -8.895746231079102
    8. 'move' → logprob: -9.020746231079102
    9. ' (' → logprob: -10.020746231079102
    10. ' move' → logprob: -10.395746231079102

Token 131: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -4.143808109802194e-05
    2. '(' → logprob: -10.375041007995605
    3. 'target' → logprob: -11.750041007995605
    4. '((' → logprob: -13.750041007995605
    5. '(move' → logprob: -14.125041007995605
    6. '(step' → logprob: -15.375041007995605
    7. '(t' → logprob: -16.250041961669922
    8. '(next' → logprob: -16.500041961669922
    9. '(current' → logprob: -16.625041961669922
    10. '(source' → logprob: -17.875041961669922

Token 132: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0008251105318777263
    2. '_' → logprob: -7.750824928283691
    3. '_y' → logprob: -7.875824928283691
    4. 'x' → logprob: -11.750824928283691
    5. '-' → logprob: -13.250824928283691
    6. '[' → logprob: -14.125824928283691
    7. ')' → logprob: -15.000824928283691
    8. '_code' → logprob: -15.125824928283691
    9. 'user' → logprob: -15.375824928283691
    10. '_-' → logprob: -15.375824928283691

Token 133: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.1270379275083542
    2. '-' → logprob: -2.12703800201416
    3. '<|end|>' → logprob: -9.37703800201416
    4. ',' → logprob: -12.12703800201416
    5. ' ' → logprob: -12.25203800201416
    6. ')' → logprob: -13.00203800201416
    7. ' -
' → logprob: -13.25203800201416
    8. 'current' → logprob: -13.50203800201416
    9. '<|end|>' → logprob: -13.75203800201416
    10. ' ' → logprob: -13.87703800201416

Token 134: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0015185497468337417
    2. ' current' → logprob: -6.501518726348877
    3. 'user' → logprob: -11.876518249511719
    4. '(current' → logprob: -12.751518249511719
    5. '[current' → logprob: -13.126518249511719
    6. '<|end|>' → logprob: -13.501518249511719
    7. 'Current' → logprob: -14.501518249511719
    8. ')' → logprob: -14.626518249511719
    9. ' ' → logprob: -14.751518249511719
    10. '_current' → logprob: -14.876518249511719

Token 135: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.09570976346731186
    2. 'x' → logprob: -2.470709800720215
    3. '_' → logprob: -5.595709800720215
    4. '_y' → logprob: -6.470709800720215
    5. '<|end|>' → logprob: -6.595709800720215
    6. 'y' → logprob: -9.720709800720215
    7. ')' → logprob: -11.595709800720215
    8. 'user' → logprob: -12.095709800720215
    9. '<|end|>' → logprob: -12.470709800720215
    10. '```' → logprob: -12.970709800720215

Token 136: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.060365608893335e-05
    2. ' )' → logprob: -11.250041007995605
    3. '-' → logprob: -11.500041007995605
    4. ')>' → logprob: -12.125041007995605
    5. ' -' → logprob: -12.375041007995605
    6. ')+' → logprob: -13.125041007995605
    7. '>' → logprob: -13.625041007995605
    8. ')>=' → logprob: -14.000041007995605
    9. '   ' → logprob: -14.375041007995605
    10. ')-' → logprob: -15.250041007995605

Token 137: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6641342043876648
    2. '+' → logprob: -1.4141342639923096
    3. ' >' → logprob: -2.2891342639923096
    4. '>' → logprob: -2.9141342639923096
    5. ' -' → logprob: -3.7891342639923096
    6. '-' → logprob: -4.0391340255737305
    7. ' >=' → logprob: -4.0391340255737305
    8. ' <=' → logprob: -4.4141340255737305
    9. '>=' → logprob: -4.9141340255737305
    10. '<=' → logprob: -5.5391340255737305

Token 138: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.011155464686453342
    2. ' abs' → logprob: -4.511155605316162
    3. '1' → logprob: -9.636155128479004
    4. '(abs' → logprob: -10.261155128479004
    5. '   ' → logprob: -13.011155128479004
    6. ' ' → logprob: -13.636155128479004
    7. '2' → logprob: -14.011155128479004
    8. 'move' → logprob: -14.511155128479004
    9. '    ' → logprob: -15.136155128479004
    10. '```' → logprob: -15.136155128479004

Token 139: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -3.452426608419046e-05
    2. '(' → logprob: -11.25003433227539
    3. 'target' → logprob: -11.25003433227539
    4. '<|end|>' → logprob: -12.25003433227539
    5. ' (' → logprob: -13.12503433227539
    6. '(current' → logprob: -14.25003433227539
    7. '[target' → logprob: -14.75003433227539
    8. ',target' → logprob: -16.00003433227539
    9. '(t' → logprob: -16.62503433227539
    10. '(task' → logprob: -16.87503433227539

Token 140: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0011187844211235642
    2. 'y' → logprob: -6.8761186599731445
    3. 'current' → logprob: -10.126118659973145
    4. '_x' → logprob: -10.376118659973145
    5. '_current' → logprob: -12.001118659973145
    6. 'target' → logprob: -13.501118659973145
    7. '(current' → logprob: -13.751118659973145
    8. '_step' → logprob: -13.751118659973145
    9. '_' → logprob: -14.001118659973145
    10. '```' → logprob: -14.126118659973145

Token 141: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.08330906182527542
    2. '-' → logprob: -2.5833091735839844
    3. ')' → logprob: -5.458309173583984
    4. ' ' → logprob: -9.958309173583984
    5. '   ' → logprob: -10.583309173583984
    6. '<|end|>' → logprob: -11.083309173583984
    7. '>' → logprob: -11.833309173583984
    8. 'def' → logprob: -12.333309173583984
    9. '  ' → logprob: -12.458309173583984
    10. ' >' → logprob: -12.458309173583984

Token 142: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.029806500300765038
    2. ' current' → logprob: -3.529806613922119
    3. ' ' → logprob: -10.529806137084961
    4. '(current' → logprob: -12.154806137084961
    5. ')' → logprob: -12.404806137084961
    6. '   ' → logprob: -12.529806137084961
    7. '	current' → logprob: -12.779806137084961
    8. '_current' → logprob: -13.279806137084961
    9. '<|end|>' → logprob: -13.529806137084961
    10. '0' → logprob: -13.654806137084961

Token 143: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.007607458624988794
    2. 'y' → logprob: -5.007607460021973
    3. 'current' → logprob: -7.382607460021973
    4. '_x' → logprob: -8.382607460021973
    5. ')' → logprob: -10.757607460021973
    6. 'x' → logprob: -11.382607460021973
    7. '_current' → logprob: -13.382607460021973
    8. '   ' → logprob: -13.757607460021973
    9. '```' → logprob: -13.882607460021973
    10. '_' → logprob: -14.257607460021973

Token 144: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00167470658197999
    2. ' )' → logprob: -7.126674652099609
    3. ')<' → logprob: -8.50167465209961
    4. ')<=' → logprob: -8.75167465209961
    5. ' <' → logprob: -8.87667465209961
    6. ')>' → logprob: -9.25167465209961
    7. ' <=' → logprob: -9.25167465209961
    8. '>' → logprob: -9.62667465209961
    9. '<=' → logprob: -10.37667465209961
    10. ' >' → logprob: -10.62667465209961

Token 145: ' ==' (ID: 951)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4884801506996155
    2. ' <=' → logprob: -1.2384800910949707
    3. '<' → logprob: -2.7384800910949707
    4. '<=' → logprob: -3.6134800910949707
    5. ' >' → logprob: -6.238480091094971
    6. ' ==' → logprob: -6.988480091094971
    7. ' >=' → logprob: -7.113480091094971
    8. '>' → logprob: -7.488480091094971
    9. '==' → logprob: -7.738480091094971
    10. '>=' → logprob: -8.863480567932129

Token 146: ' move' (ID: 5275)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4397580325603485
    2. 'move' → logprob: -1.314758062362671
    3. ' move' → logprob: -3.314758062362671
    4. '0' → logprob: -3.564758062362671
    5. ' ' → logprob: -3.814758062362671
    6. '(move' → logprob: -8.18975830078125
    7. '2' → logprob: -9.43975830078125
    8. ' (' → logprob: -9.81475830078125
    9. '	move' → logprob: -10.18975830078125
    10. '   ' → logprob: -10.50225830078125

Token 147: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00026622318546287715
    2. '_' → logprob: -8.250266075134277
    3. '_move' → logprob: -13.625266075134277
    4. 'step' → logprob: -14.000266075134277
    5. '_STEP' → logprob: -14.000266075134277
    6. '_steps' → logprob: -14.125266075134277
    7. '_s' → logprob: -14.500266075134277
    8. 'Step' → logprob: -15.500266075134277
    9. '_size' → logprob: -16.375267028808594
    10. ' _' → logprob: -16.625267028808594

Token 148: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -9.014684110297821e-06
    2. 'size' → logprob: -12.375008583068848
    3. '_s' → logprob: -12.750008583068848
    4. '_' → logprob: -13.875008583068848
    5. '_step' → logprob: -14.250008583068848
    6. '_SIZE' → logprob: -16.625009536743164
    7. ' size' → logprob: -16.625009536743164
    8. ' _' → logprob: -17.875009536743164
    9. 's' → logprob: -18.125009536743164
    10. '_code' → logprob: -18.250009536743164

Token 149: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0052945963107049465
    2. ':
' → logprob: -5.2552947998046875
    3. ' and' → logprob: -10.255294799804688
    4. '   ' → logprob: -11.630294799804688
    5. ':return' → logprob: -11.880294799804688
    6. 'and' → logprob: -12.380294799804688
    7. '       ' → logprob: -13.505294799804688
    8. ' :' → logprob: -13.755294799804688
    9. ',' → logprob: -14.255294799804688
    10. ':

' → logprob: -14.630294799804688

Token 150: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01459475327283144
    2. '   ' → logprob: -4.389594554901123
    3. ' return' → logprob: -7.514594554901123
    4. '
' → logprob: -7.514594554901123
    5. 'return' → logprob: -7.889594554901123
    6. ',' → logprob: -8.889595031738281
    7. '<|end|>' → logprob: -9.014595031738281
    8. ' step' → logprob: -9.264595031738281
    9. ':' → logprob: -9.764595031738281
    10. ':
' → logprob: -10.014595031738281

Token 151: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.05199596285820007
    2. 'return' → logprob: -3.0519959926605225
    3. 'if' → logprob: -5.801995754241943
    4. '   ' → logprob: -8.551996231079102
    5. ' step' → logprob: -9.926996231079102
    6. '       ' → logprob: -10.176996231079102
    7. '#' → logprob: -10.801996231079102
    8. 'pass' → logprob: -10.926996231079102
    9. ' return' → logprob: -11.676996231079102
    10. '
' → logprob: -11.926996231079102

Token 152: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.07009026408195496
    2. '_' → logprob: -2.6950902938842773
    3. '_y' → logprob: -9.070090293884277
    4. 's' → logprob: -11.070090293884277
    5. 'x' → logprob: -11.070090293884277
    6. '_=' → logprob: -12.820090293884277
    7. '_s' → logprob: -13.820090293884277
    8. '=' → logprob: -14.195090293884277
    9. ' _' → logprob: -14.195090293884277
    10. '_
' → logprob: -15.070090293884277

Token 153: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28115925192832947
    2. '=' → logprob: -1.4061592817306519
    3. ',' → logprob: -12.281159400939941
    4. '=int' → logprob: -14.156159400939941
    5. 'step' → logprob: -14.281159400939941
    6. ')' → logprob: -14.531159400939941
    7. ' step' → logprob: -14.781159400939941
    8. ' ' → logprob: -14.906159400939941
    9. '=None' → logprob: -15.281159400939941
    10. 'if' → logprob: -15.406159400939941

Token 154: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.06788570433855057
    2. ' step' → logprob: -2.817885637283325
    3. '0' → logprob: -5.317885875701904
    4. ' ' → logprob: -7.692885875701904
    5. ' =' → logprob: -8.442885398864746
    6. '=' → logprob: -9.317885398864746
    7. '_step' → logprob: -9.817885398864746
    8. '(step' → logprob: -10.067885398864746
    9. '
' → logprob: -10.692885398864746
    10. '1' → logprob: -10.817885398864746

Token 155: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0014516636729240417
    2. 'y' → logprob: -7.00145149230957
    3. '_x' → logprob: -7.62645149230957
    4. '_' → logprob: -10.50145149230957
    5. '=' → logprob: -10.87645149230957
    6. 'x' → logprob: -13.75145149230957
    7. 'Y' → logprob: -14.00145149230957
    8. ',' → logprob: -14.25145149230957
    9. '=_' → logprob: -14.25145149230957
    10. ' _' → logprob: -14.75145149230957

Token 156: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868723213672638
    2. ' =' → logprob: -1.1368722915649414
    3. '=current' → logprob: -14.011872291564941
    4. ',' → logprob: -14.886872291564941
    5. '=None' → logprob: -17.261873245239258
    6. '=(' → logprob: -17.636873245239258
    7. '=

' → logprob: -17.886873245239258
    8. '＝' → logprob: -18.011873245239258
    9. ' step' → logprob: -18.261873245239258
    10. 'step' → logprob: -18.386873245239258

Token 157: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.21463187038898468
    2. '0' → logprob: -2.5896317958831787
    3. '(target' → logprob: -2.8396317958831787
    4. ' target' → logprob: -2.9646317958831787
    5. '(' → logprob: -5.964632034301758
    6. ' (' → logprob: -6.339632034301758
    7. 'abs' → logprob: -6.464632034301758
    8. ' abs' → logprob: -7.089632034301758
    9. '(
' → logprob: -7.839632034301758
    10. ' ' → logprob: -7.964632034301758

Token 158: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.009804612956941128
    2. '_' → logprob: -4.634804725646973
    3. 'x' → logprob: -10.009804725646973
    4. '_,' → logprob: -14.134804725646973
    5. ' _' → logprob: -14.384804725646973
    6. '_y' → logprob: -14.384804725646973
    7. '_)' → logprob: -14.509804725646973
    8. '_
' → logprob: -15.134804725646973
    9. '_

' → logprob: -15.759804725646973
    10. '<|end|>' → logprob: -16.384803771972656

Token 159: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07899003475904465
    2. '-' → logprob: -2.7039899826049805
    3. ',' → logprob: -4.8289899826049805
    4. '-current' → logprob: -7.5789899826049805
    5. ' ' → logprob: -8.32898998260498
    6. ' ,' → logprob: -9.20398998260498
    7. ',current' → logprob: -9.45398998260498
    8. 'current' → logprob: -10.20398998260498
    9. ' current' → logprob: -11.07898998260498
    10. '_current' → logprob: -12.20398998260498

Token 160: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.029752103611826897
    2. ' current' → logprob: -3.529752016067505
    3. '_current' → logprob: -14.404751777648926
    4. 'Current' → logprob: -15.279751777648926
    5. '	current' → logprob: -15.654751777648926
    6. '<|end|>' → logprob: -15.779751777648926
    7. 'user' → logprob: -15.904751777648926
    8. '[current' → logprob: -15.904751777648926
    9. '$current' → logprob: -16.029752731323242
    10. '(current' → logprob: -16.029752731323242

Token 161: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.04316578060388565
    2. 'x' → logprob: -3.168165683746338
    3. '_y' → logprob: -8.793166160583496
    4. 'user' → logprob: -12.293166160583496
    5. 'current' → logprob: -12.668166160583496
    6. '_' → logprob: -12.668166160583496
    7. 'y' → logprob: -13.293166160583496
    8. 'step' → logprob: -13.418166160583496
    9. ' x' → logprob: -16.04316520690918
    10. '_step' → logprob: -16.16816520690918

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016172155737876892
    2. ' ,' → logprob: -6.501617431640625
    3. ',target' → logprob: -9.626617431640625
    4. ',
' → logprob: -10.626617431640625
    5. ' step' → logprob: -11.376617431640625
    6. ',current' → logprob: -12.876617431640625
    7. '<|end|>' → logprob: -13.126617431640625
    8. 'step' → logprob: -13.376617431640625
    9. '   ' → logprob: -13.501617431640625
    10. ',user' → logprob: -14.126617431640625

Token 163: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.008615042082965374
    2. ' target' → logprob: -4.758615016937256
    3. '(target' → logprob: -15.258615493774414
    4. '[target' → logprob: -16.258615493774414
    5. '0' → logprob: -17.008615493774414
    6. '	target' → logprob: -17.133615493774414
    7. ' ' → logprob: -17.758615493774414
    8. ',target' → logprob: -19.758615493774414
    9. '.target' → logprob: -19.883615493774414
    10. '   ' → logprob: -20.258615493774414

Token 164: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -4.008129963040119e-06
    2. 'y' → logprob: -12.500003814697266
    3. '_' → logprob: -16.000003814697266
    4. '_x' → logprob: -16.125003814697266
    5. 'Y' → logprob: -19.250003814697266
    6. '-y' → logprob: -19.750003814697266
    7. 'target' → logprob: -19.875003814697266
    8. ' _' → logprob: -20.000003814697266
    9. '	y' → logprob: -20.000003814697266
    10. '_target' → logprob: -20.875003814697266

Token 165: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519736588001251
    2. '-' → logprob: -1.5019736289978027
    3. '<|end|>' → logprob: -10.376974105834961
    4. ' ' → logprob: -11.626974105834961
    5. ' ' → logprob: -13.751974105834961
    6. '   ' → logprob: -13.751974105834961
    7. '[' → logprob: -14.376974105834961
    8. '<|end|>' → logprob: -14.751974105834961
    9. '```' → logprob: -15.376974105834961
    10. ' -
' → logprob: -15.751974105834961

Token 166: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.002476135268807411
    2. ' current' → logprob: -6.002476215362549
    3. '_current' → logprob: -15.75247573852539
    4. 'user' → logprob: -16.37747573852539
    5. '(current' → logprob: -16.75247573852539
    6. '$current' → logprob: -16.87747573852539
    7. ' ' → logprob: -17.12747573852539
    8. '[current' → logprob: -17.12747573852539
    9. '	current' → logprob: -17.25247573852539
    10. 'cur' → logprob: -17.87747573852539

Token 167: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0036814322229474783
    2. 'y' → logprob: -5.628681659698486
    3. '_x' → logprob: -9.503681182861328
    4. 'Y' → logprob: -13.128681182861328
    5. 'x' → logprob: -13.128681182861328
    6. '_' → logprob: -13.253681182861328
    7. 'step' → logprob: -15.378681182861328
    8. 's' → logprob: -15.753681182861328
    9. ' y' → logprob: -16.378681182861328
    10. '   ' → logprob: -16.878681182861328

Token 168: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 169: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.23966388404369354
    2. ' else' → logprob: -2.11466383934021
    3. '   ' → logprob: -2.73966383934021
    4. '<|end|>' → logprob: -4.364664077758789
    5. '	else' → logprob: -5.114664077758789
    6. 'elif' → logprob: -5.114664077758789
    7. '
' → logprob: -6.114664077758789
    8. '\n' → logprob: -8.614664077758789
    9. '	elif' → logprob: -8.739664077758789
    10. ')' → logprob: -8.989664077758789

Token 170: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.09287052601575851
    2. ' else' → logprob: -2.5928704738616943
    3. 'elif' → logprob: -4.342870712280273
    4. '   ' → logprob: -7.592870712280273
    5. ' elif' → logprob: -8.842870712280273
    6. '	else' → logprob: -9.217870712280273
    7. '<|end|>' → logprob: -9.217870712280273
    8. '	elif' → logprob: -11.467870712280273
    9. ')' → logprob: -12.217870712280273
    10. '
' → logprob: -12.592870712280273

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013346440391615033
    2. ':
' → logprob: -6.6263346672058105
    3. ' :' → logprob: -12.501334190368652
    4. ':return' → logprob: -13.251334190368652
    5. '   ' → logprob: -13.626334190368652
    6. '       ' → logprob: -14.751334190368652
    7. ',' → logprob: -14.751334190368652
    8. '<|end|>' → logprob: -15.251334190368652
    9. ':

' → logprob: -15.376334190368652
    10. ':
' → logprob: -15.376334190368652

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002235186053439975
    2. ' step' → logprob: -6.377235412597656
    3. '   ' → logprob: -8.252235412597656
    4. 'step' → logprob: -8.377235412597656
    5. ' return' → logprob: -11.377235412597656
    6. ' raise' → logprob: -11.752235412597656
    7. 'return' → logprob: -12.252235412597656
    8. '           ' → logprob: -12.377235412597656
    9. '
' → logprob: -12.627235412597656
    10. '        
' → logprob: -12.752235412597656

Token 173: ' surplus' (ID: 78529)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.03581678867340088
    2. ' step' → logprob: -4.660816669464111
    3. 'dx' → logprob: -4.785816669464111
    4. 'distance' → logprob: -4.910816669464111
    5. 'dist' → logprob: -5.160816669464111
    6. 'return' → logprob: -6.660816669464111
    7. 'diff' → logprob: -6.910816669464111
    8. 'if' → logprob: -7.535816669464111
    9. '#' → logprob: -8.41081714630127
    10. 'remaining' → logprob: -8.41081714630127

Token 174: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8702535033226013
    2. '=' → logprob: -1.120253562927246
    3. ' =' → logprob: -1.745253562927246
    4. '_x' → logprob: -2.620253562927246
    5. '_step' → logprob: -5.745253562927246
    6. '_space' → logprob: -6.495253562927246
    7. '_distance' → logprob: -6.745253562927246
    8. '_steps' → logprob: -7.495253562927246
    9. '_move' → logprob: -7.495253562927246
    10. '_amount' → logprob: -8.995253562927246

Token 175: ' ' (ID: 220)
  Prédit: ' move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.6565951108932495
    2. 'move' → logprob: -1.0315951108932495
    3. ' abs' → logprob: -3.156595230102539
    4. '(move' → logprob: -3.406595230102539
    5. 'abs' → logprob: -3.906595230102539
    6. ' (' → logprob: -4.031595230102539
    7. ' ' → logprob: -5.781595230102539
    8. '(abs' → logprob: -5.906595230102539
    9. '(' → logprob: -6.656595230102539
    10. 'int' → logprob: -6.781595230102539

Token 176: '2' (ID: 17)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.45084893703460693
    2. 'abs' → logprob: -1.825848937034607
    3. '(move' → logprob: -2.0758490562438965
    4. ' move' → logprob: -3.5758490562438965
    5. '(abs' → logprob: -3.5758490562438965
    6. ' abs' → logprob: -4.3258490562438965
    7. ' (' → logprob: -5.8258490562438965
    8. '(m' → logprob: -7.3258490562438965
    9. 'int' → logprob: -7.4508490562438965
    10. '(' → logprob: -7.5758490562438965

Token 177: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12727601826190948
    2. '*' → logprob: -2.1272759437561035
    3. '*(' → logprob: -8.002276420593262
    4. 'abs' → logprob: -13.002276420593262
    5. ' ' → logprob: -13.252276420593262
    6. 'def' → logprob: -13.877276420593262
    7. '#' → logprob: -13.877276420593262
    8. '*object' → logprob: -14.002276420593262
    9. '**' → logprob: -14.252276420593262
    10. ':' → logprob: -14.252276420593262

Token 178: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.0069136954843997955
    2. '(move' → logprob: -5.506913661956787
    3. ' move' → logprob: -5.881913661956787
    4. 'abs' → logprob: -10.756914138793945
    5. ' (' → logprob: -12.131914138793945
    6. '(m' → logprob: -12.256914138793945
    7. '	move' → logprob: -12.881914138793945
    8. '(' → logprob: -13.381914138793945
    9. 'm' → logprob: -13.506914138793945
    10. '(abs' → logprob: -13.881914138793945

Token 179: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00013572083844337612
    2. '_move' → logprob: -9.00013542175293
    3. '_' → logprob: -11.62513542175293
    4. '_steps' → logprob: -13.37513542175293
    5. '_s' → logprob: -13.75013542175293
    6. ' _' → logprob: -15.75013542175293
    7. 'Step' → logprob: -16.37513542175293
    8. 'step' → logprob: -16.50013542175293
    9. '_space' → logprob: -16.50013542175293
    10. ''_' → logprob: -16.87513542175293

Token 180: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.2471589798224159e-05
    2. 'size' → logprob: -11.500012397766113
    3. '_step' → logprob: -13.375012397766113
    4. '_s' → logprob: -14.875012397766113
    5. '_' → logprob: -16.25001335144043
    6. '_SIZE' → logprob: -16.37501335144043
    7. '_code' → logprob: -16.87501335144043
    8. '_move' → logprob: -17.37501335144043
    9. ' size' → logprob: -17.62501335144043
    10. '_x' → logprob: -17.62501335144043

Token 181: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05038867145776749
    2. '-' → logprob: -3.0503885746002197
    3. '   ' → logprob: -7.425388813018799
    4. '       ' → logprob: -8.30038833618164
    5. '
' → logprob: -8.42538833618164
    6. ' if' → logprob: -8.55038833618164
    7. ',' → logprob: -8.67538833618164
    8. ' ' → logprob: -9.17538833618164
    9. '<|end|>' → logprob: -9.80038833618164
    10. 'def' → logprob: -9.92538833618164

Token 182: ' abs' (ID: 8443)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.266711950302124
    2. ' (' → logprob: -1.766711950302124
    3. ' abs' → logprob: -3.266711950302124
    4. 'abs' → logprob: -3.766711950302124
    5. '(' → logprob: -6.266712188720703
    6. '(ab' → logprob: -11.641712188720703
    7. '(int' → logprob: -11.891712188720703
    8. '   ' → logprob: -12.141712188720703
    9. ' ' → logprob: -12.141712188720703
    10. '1' → logprob: -12.641712188720703

Token 183: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -2.045823566731997e-05
    2. 'target' → logprob: -11.375020027160645
    3. '(' → logprob: -11.625020027160645
    4. '(abs' → logprob: -18.50002098083496
    5. '[target' → logprob: -18.62502098083496
    6. '((' → logprob: -19.37502098083496
    7. '(t' → logprob: -19.50002098083496
    8. '(
' → logprob: -19.50002098083496
    9. ' (' → logprob: -19.50002098083496
    10. '(step' → logprob: -20.12502098083496

Token 184: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.875000953674316
    3. '_y' → logprob: -16.375
    4. ')_' → logprob: -17.375
    5. '_code' → logprob: -17.5
    6. ' _' → logprob: -17.625
    7. '<|end|>' → logprob: -18.375
    8. '   ' → logprob: -18.625
    9. '}_' → logprob: -18.875
    10. ')' → logprob: -18.875

Token 185: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006721178535372019
    2. '-' → logprob: -5.006721019744873
    3. ' ' → logprob: -12.631721496582031
    4. ' -
' → logprob: -13.506721496582031
    5. ' ' → logprob: -15.631721496582031
    6. ')' → logprob: -15.756721496582031
    7. '[' → logprob: -15.756721496582031
    8. '<|end|>' → logprob: -15.756721496582031
    9. '-current' → logprob: -16.25672149658203
    10. '   ' → logprob: -16.38172149658203

Token 186: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.11283231526613235
    2. ' current' → logprob: -2.2378323078155518
    3. '(current' → logprob: -12.612832069396973
    4. '_current' → logprob: -12.737832069396973
    5. '[current' → logprob: -14.112832069396973
    6. ' ' → logprob: -14.112832069396973
    7. '	current' → logprob: -14.487832069396973
    8. 'Current' → logprob: -14.737832069396973
    9. '.current' → logprob: -15.362832069396973
    10. '$current' → logprob: -15.612832069396973

Token 187: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.007949537597596645
    2. 'x' → logprob: -5.132949352264404
    3. 'current' → logprob: -6.257949352264404
    4. '-' → logprob: -10.382949829101562
    5. '_y' → logprob: -10.632949829101562
    6. '_current' → logprob: -10.757949829101562
    7. '_' → logprob: -11.257949829101562
    8. '-x' → logprob: -12.507949829101562
    9. ')' → logprob: -12.632949829101562
    10. ' current' → logprob: -13.257949829101562

Token 188: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -13.500003814697266
    3. '+' → logprob: -14.125003814697266
    4. ')-' → logprob: -14.375003814697266
    5. '[' → logprob: -14.625003814697266
    6. '-' → logprob: -14.875003814697266
    7. ']' → logprob: -15.750003814697266
    8. 'def' → logprob: -16.250003814697266
    9. '   ' → logprob: -16.250003814697266
    10. ' ' → logprob: -16.375003814697266

Token 189: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.38692185282707214
    2. '-' → logprob: -1.1369218826293945
    3. ' ' → logprob: -10.261921882629395
    4. ')' → logprob: -12.636921882629395
    5. ',' → logprob: -12.886921882629395
    6. '+' → logprob: -13.136921882629395
    7. 'def' → logprob: -13.636921882629395
    8. '<|end|>' → logprob: -13.886921882629395
    9. '   ' → logprob: -14.011921882629395
    10. 'abs' → logprob: -14.261921882629395

Token 190: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.023303711786866188
    2. ' abs' → logprob: -3.773303747177124
    3. '(abs' → logprob: -9.898303985595703
    4. '       ' → logprob: -13.023303985595703
    5. '   ' → logprob: -13.398303985595703
    6. '           ' → logprob: -13.773303985595703
    7. 'target' → logprob: -13.773303985595703
    8. '        ' → logprob: -14.773303985595703
    9. ' ' → logprob: -14.898303985595703
    10. '    ' → logprob: -15.273303985595703

Token 191: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -2.696889623621246e-06
    2. 'target' → logprob: -12.87500286102295
    3. '[target' → logprob: -17.000001907348633
    4. ' (' → logprob: -17.250001907348633
    5. '(' → logprob: -18.000001907348633
    6. ',target' → logprob: -18.250001907348633
    7. '	target' → logprob: -18.875001907348633
    8. '(current' → logprob: -19.375001907348633
    9. ' target' → logprob: -19.625001907348633
    10. '   ' → logprob: -20.000001907348633

Token 192: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0002466774603817612
    2. 'target' → logprob: -8.50024700164795
    3. 'y' → logprob: -10.37524700164795
    4. '(target' → logprob: -11.87524700164795
    5. '_x' → logprob: -12.75024700164795
    6. ' target' → logprob: -14.50024700164795
    7. '[target' → logprob: -14.50024700164795
    8. '_target' → logprob: -15.37524700164795
    9. '[' → logprob: -16.375246047973633
    10. 'Y' → logprob: -16.375246047973633

Token 193: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7015597224235535
    2. ' -' → logprob: -0.7015597224235535
    3. ')' → logprob: -5.451559543609619
    4. '+' → logprob: -5.701559543609619
    5. ' ' → logprob: -8.201560020446777
    6. '   ' → logprob: -8.576560020446777
    7. ' +' → logprob: -9.201560020446777
    8. 'current' → logprob: -9.201560020446777
    9. ',' → logprob: -11.076560020446777
    10. '),' → logprob: -11.576560020446777

Token 194: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0036543605383485556
    2. ' current' → logprob: -5.628654479980469
    3. '_current' → logprob: -10.503654479980469
    4. '(current' → logprob: -11.253654479980469
    5. '   ' → logprob: -11.628654479980469
    6. ' ' → logprob: -14.003654479980469
    7. '[current' → logprob: -14.378654479980469
    8. ')' → logprob: -14.378654479980469
    9. '	current' → logprob: -14.503654479980469
    10. '$current' → logprob: -14.753654479980469

Token 195: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0013202388072386384
    2. '_x' → logprob: -7.0013203620910645
    3. 'y' → logprob: -7.8763203620910645
    4. 'current' → logprob: -11.376319885253906
    5. 'x' → logprob: -11.751319885253906
    6. ')' → logprob: -11.876319885253906
    7. '```' → logprob: -14.501319885253906
    8. '   ' → logprob: -14.626319885253906
    9. '
' → logprob: -15.126319885253906
    10. '_' → logprob: -15.126319885253906

Token 196: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22560061514377594
    2. ')
' → logprob: -1.7256006002426147
    3. '
' → logprob: -3.9756007194519043
    4. '   ' → logprob: -5.725600719451904
    5. '       ' → logprob: -6.975600719451904
    6. '):
' → logprob: -8.350600242614746
    7. '<|end|>' → logprob: -8.975600242614746
    8. ':
' → logprob: -9.350600242614746
    9. ' )' → logprob: -9.600600242614746
    10. ' )
' → logprob: -9.850600242614746

Token 197: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.455425500869751
    2. '       ' → logprob: -1.080425500869751
    3. ' if' → logprob: -4.455425262451172
    4. '        
' → logprob: -5.455425262451172
    5. 'if' → logprob: -5.705425262451172
    6. ' step' → logprob: -5.955425262451172
    7. '   ' → logprob: -6.455425262451172
    8. 'step' → logprob: -6.580425262451172
    9. ',' → logprob: -7.705425262451172
    10. '<|end|>' → logprob: -8.205425262451172

Token 198: ' surplus' (ID: 78529)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40252795815467834
    2. 'step' → logprob: -1.402527928352356
    3. ' if' → logprob: -3.6525280475616455
    4. '       ' → logprob: -4.027527809143066
    5. ' step' → logprob: -4.402527809143066
    6. 'sur' → logprob: -5.527527809143066
    7. 'move' → logprob: -5.902527809143066
    8. '   ' → logprob: -5.902527809143066
    9. 'remaining' → logprob: -6.402527809143066
    10. '#' → logprob: -6.527527809143066

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.074996829032898
    2. '_x' → logprob: -1.074996829032898
    3. '=' → logprob: -1.199996829032898
    4. '_step' → logprob: -5.0749969482421875
    5. ' //' → logprob: -6.1999969482421875
    6. ' -=' → logprob: -6.5749969482421875
    7. '//' → logprob: -7.3249969482421875
    8. ' *=' → logprob: -7.3249969482421875
    9. '_remaining' → logprob: -7.5749969482421875
    10. '_' → logprob: -7.6999969482421875

Token 200: ' ' (ID: 220)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.8079352974891663
    2. 'min' → logprob: -1.3079352378845215
    3. ' surplus' → logprob: -2.0579352378845215
    4. ' min' → logprob: -2.6829352378845215
    5. 'abs' → logprob: -3.0579352378845215
    6. 'max' → logprob: -4.8079352378845215
    7. 'move' → logprob: -5.1829352378845215
    8. '0' → logprob: -5.3079352378845215
    9. 'int' → logprob: -5.4329352378845215
    10. ' abs' → logprob: -5.5579352378845215

Token 201: '0' (ID: 15)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.28111669421195984
    2. 'sur' → logprob: -1.7811167240142822
    3. 'abs' → logprob: -3.5311167240142822
    4. '0' → logprob: -4.031116485595703
    5. 'max' → logprob: -4.031116485595703
    6. 'move' → logprob: -5.656116485595703
    7. ' min' → logprob: -5.781116485595703
    8. '2' → logprob: -6.781116485595703
    9. '-' → logprob: -6.906116485595703
    10. 'int' → logprob: -7.031116485595703

Token 202: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5766302347183228
    2. '<|end|>' → logprob: -0.8266302347183228
    3. '<|end|>' → logprob: -7.951630115509033
    4. '       ' → logprob: -9.451630592346191
    5. '
' → logprob: -10.076630592346191
    6. '	return' → logprob: -10.076630592346191
    7. ' return' → logprob: -10.201630592346191
    8. 'return' → logprob: -10.701630592346191
    9. '   ' → logprob: -10.701630592346191
    10. ' if' → logprob: -11.076630592346191

Token 203: ' surplus' (ID: 78529)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.22603727877140045
    2. ' surplus' → logprob: -1.6010372638702393
    3. 'abs' → logprob: -7.726037502288818
    4. 'target' → logprob: -9.85103702545166
    5. '(s' → logprob: -10.47603702545166
    6. ' abs' → logprob: -10.97603702545166
    7. '_sur' → logprob: -11.47603702545166
    8. 's' → logprob: -11.72603702545166
    9. ' target' → logprob: -11.85103702545166
    10. '   ' → logprob: -11.97603702545166

Token 204: ' %' (ID: 1851)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.00182548095472157
    2. ' <' → logprob: -6.376825332641602
    3. ' ' → logprob: -10.126825332641602
    4. '>' → logprob: -10.376825332641602
    5. '[' → logprob: -10.876825332641602
    6. '<|end|>' → logprob: -11.251825332641602
    7. 'else' → logprob: -11.751825332641602
    8. '<=' → logprob: -11.876825332641602
    9. ' >' → logprob: -14.126825332641602
    10. ' else' → logprob: -14.126825332641602

Token 205: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.026818744838237762
    2. 'move' → logprob: -3.6518187522888184
    3. ' move' → logprob: -8.52681827545166
    4. '1' → logprob: -9.02681827545166
    5. ' ' → logprob: -9.02681827545166
    6. '3' → logprob: -10.15181827545166
    7. '(move' → logprob: -10.77681827545166
    8. 'step' → logprob: -12.15181827545166
    9. '(' → logprob: -12.15181827545166
    10. '4' → logprob: -13.27681827545166

Token 206: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011217609280720353
    2. 'move' → logprob: -7.001121997833252
    3. ' ' → logprob: -9.251121520996094
    4. '1' → logprob: -9.751121520996094
    5. '3' → logprob: -10.501121520996094
    6. ' move' → logprob: -11.876121520996094
    7. '4' → logprob: -11.876121520996094
    8. '(' → logprob: -12.376121520996094
    9. '(move' → logprob: -12.876121520996094
    10. 'step' → logprob: -13.501121520996094

Token 207: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6499876976013184
    2. '==' → logprob: -1.1499876976013184
    3. '!=' → logprob: -2.5249876976013184
    4. ' else' → logprob: -2.5249876976013184
    5. ' !=' → logprob: -7.274987697601318
    6. ' ==' → logprob: -7.649987697601318
    7. '==
' → logprob: -11.899988174438477
    8. '>' → logprob: -12.399988174438477
    9. '```' → logprob: -13.024988174438477
    10. '   ' → logprob: -13.274988174438477

Token 208: ' surplus' (ID: 78529)
  Prédit: ' surplus'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surplus' → logprob: -0.1010027527809143
    2. 'sur' → logprob: -2.3510026931762695
    3. ' move' → logprob: -8.85100269317627
    4. '(s' → logprob: -8.85100269317627
    5. '1' → logprob: -8.97600269317627
    6. 'move' → logprob: -9.72600269317627
    7. ' ' → logprob: -9.72600269317627
    8. ' (' → logprob: -9.85100269317627
    9. ' -' → logprob: -10.10100269317627
    10. '2' → logprob: -10.35100269317627

Token 209: ' //' (ID: 602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06057749316096306
    2. '
' → logprob: -2.935577392578125
    3. '<|end|>' → logprob: -5.685577392578125
    4. '   ' → logprob: -7.685577392578125
    5. ' step' → logprob: -7.810577392578125
    6. '        
' → logprob: -7.810577392578125
    7. 'return' → logprob: -8.560577392578125
    8. 'step' → logprob: -8.935577392578125
    9. ',' → logprob: -9.560577392578125
    10. ' return' → logprob: -9.685577392578125

Token 210: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -15.000085830688477
    4. '
' → logprob: -15.625085830688477
    5. '```' → logprob: -17.250085830688477
    6. '  ' → logprob: -18.187585830688477
    7. '۲' → logprob: -18.187585830688477
    8. '    ' → logprob: -18.750085830688477
    9. ' ' → logprob: -18.750085830688477
    10. '1' → logprob: -18.875085830688477

Token 211: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '
' → logprob: -17.9375057220459
    4. '212' → logprob: -18.1250057220459
    5. '   ' → logprob: -18.3750057220459
    6. '1' → logprob: -18.3750057220459
    7. '۲' → logprob: -18.4375057220459
    8. '22' → logprob: -18.5000057220459
    9. '26' → logprob: -18.9375057220459
    10. '20' → logprob: -19.0625057220459

Token 212: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04177317023277283
    2. '
' → logprob: -3.2917730808258057
    3. '<|end|>' → logprob: -6.541773319244385
    4. ' step' → logprob: -7.041773319244385
    5. '        
' → logprob: -7.791773319244385
    6. '   ' → logprob: -8.041772842407227
    7. 'step' → logprob: -8.166772842407227
    8. 'return' → logprob: -9.166772842407227
    9. ' return' → logprob: -9.916772842407227
    10. ',' → logprob: -10.166772842407227

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012909606099128723
    2. '<|end|>' → logprob: -5.012909412384033
    3. '   ' → logprob: -5.637909412384033
    4. '
' → logprob: -7.012909412384033
    5. ' return' → logprob: -7.262909412384033
    6. 'return' → logprob: -7.762909412384033
    7. ')' → logprob: -8.637909889221191
    8. ' step' → logprob: -8.637909889221191
    9. '	return' → logprob: -10.137909889221191
    10. 'step' → logprob: -10.387909889221191

Token 214: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.1426676511764526
    2. 'step' → logprob: -1.2676676511764526
    3. ' if' → logprob: -1.8926676511764526
    4. '       ' → logprob: -2.142667770385742
    5. ' step' → logprob: -2.267667770385742
    6. 'dx' → logprob: -5.267667770385742
    7. ' dx' → logprob: -5.892667770385742
    8. 'move' → logprob: -6.142667770385742
    9. 'sur' → logprob: -6.267667770385742
    10. 'remaining' → logprob: -6.267667770385742

Token 215: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.2181093841791153
    2. 'abs' → logprob: -1.843109369277954
    3. ' target' → logprob: -3.968109369277954
    4. 'target' → logprob: -4.968109607696533
    5. ' surplus' → logprob: -5.093109607696533
    6. ' step' → logprob: -6.218109607696533
    7. ' move' → logprob: -7.093109607696533
    8. '(abs' → logprob: -7.343109607696533
    9. ' (' → logprob: -7.468109607696533
    10. 'sur' → logprob: -7.593109607696533

Token 216: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.00034893216798081994
    2. 'target' → logprob: -8.000349044799805
    3. '(step' → logprob: -11.625349044799805
    4. '(move' → logprob: -13.375349044799805
    5. 'step' → logprob: -13.625349044799805
    6. 'move' → logprob: -14.125349044799805
    7. '(' → logprob: -15.500349044799805
    8. '[target' → logprob: -15.625349044799805
    9. '(current' → logprob: -16.000349044799805
    10. '	target' → logprob: -16.000349044799805

Token 217: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -3.690834273584187e-05
    2. '_y' → logprob: -10.37503719329834
    3. 'x' → logprob: -12.50003719329834
    4. '[' → logprob: -14.87503719329834
    5. 'target' → logprob: -15.18753719329834
    6. ' ' → logprob: -15.37503719329834
    7. '   ' → logprob: -15.56253719329834
    8. 'user' → logprob: -15.87503719329834
    9. '_' → logprob: -16.250036239624023
    10. '-' → logprob: -16.250036239624023

Token 218: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0076184566132724285
    2. '-' → logprob: -4.882618427276611
    3. ' ' → logprob: -11.88261890411377
    4. ')' → logprob: -12.38261890411377
    5. '<|end|>' → logprob: -14.88261890411377
    6. '   ' → logprob: -15.50761890411377
    7. ' -
' → logprob: -15.75761890411377
    8. ' ' → logprob: -15.88261890411377
    9. '<|end|>' → logprob: -16.507617950439453
    10. '...' → logprob: -16.632617950439453

Token 219: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.1427614390850067
    2. ' current' → logprob: -2.017761468887329
    3. 'target' → logprob: -10.01776123046875
    4. '(current' → logprob: -11.14276123046875
    5. ' target' → logprob: -11.76776123046875
    6. ' ' → logprob: -12.01776123046875
    7. 'Current' → logprob: -13.14276123046875
    8. 'x' → logprob: -13.26776123046875
    9. '_current' → logprob: -13.51776123046875
    10. '[current' → logprob: -13.64276123046875

Token 220: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.01544716116040945
    2. 'x' → logprob: -4.89044713973999
    3. 'current' → logprob: -4.89044713973999
    4. '-x' → logprob: -9.265447616577148
    5. '_y' → logprob: -10.140447616577148
    6. ' current' → logprob: -10.390447616577148
    7. '_current' → logprob: -10.390447616577148
    8. ' -' → logprob: -10.640447616577148
    9. '-' → logprob: -11.140447616577148
    10. '   ' → logprob: -11.265447616577148

Token 221: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024437890388071537
    2. ' )' → logprob: -6.252443790435791
    3. ' >=' → logprob: -8.877443313598633
    4. ')>=' → logprob: -9.502443313598633
    5. ' <=' → logprob: -9.752443313598633
    6. ')>' → logprob: -10.252443313598633
    7. ')+' → logprob: -10.502443313598633
    8. '   ' → logprob: -10.502443313598633
    9. ' >' → logprob: -10.877443313598633
    10. '>=' → logprob: -10.877443313598633

Token 222: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.8530659079551697
    2. ' +' → logprob: -0.9780659079551697
    3. ' <=' → logprob: -3.1030659675598145
    4. ' <' → logprob: -3.2280659675598145
    5. '+' → logprob: -3.3530659675598145
    6. ' >' → logprob: -3.3530659675598145
    7. '>=' → logprob: -3.6030659675598145
    8. '>' → logprob: -4.8530659675598145
    9. '<' → logprob: -5.7280659675598145
    10. '<=' → logprob: -5.9780659675598145

Token 223: ' abs' (ID: 8443)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.5883007049560547
    2. ' move' → logprob: -1.2133007049560547
    3. 'abs' → logprob: -2.3383007049560547
    4. ' abs' → logprob: -3.0883007049560547
    5. ' ' → logprob: -6.838300704956055
    6. 'sur' → logprob: -6.838300704956055
    7. 'target' → logprob: -6.963300704956055
    8. '(move' → logprob: -7.338300704956055
    9. '2' → logprob: -7.963300704956055
    10. ' (' → logprob: -8.088300704956055

Token 224: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0006828876794315875
    2. 'target' → logprob: -7.375682830810547
    3. '(step' → logprob: -10.500682830810547
    4. '(move' → logprob: -11.250682830810547
    5. 'move' → logprob: -12.125682830810547
    6. 'step' → logprob: -12.625682830810547
    7. '(current' → logprob: -12.625682830810547
    8. '(' → logprob: -13.250682830810547
    9. ' (' → logprob: -14.750682830810547
    10. '[target' → logprob: -15.250682830810547

Token 225: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.014971664175391197
    2. '_y' → logprob: -4.264971733093262
    3. 'x' → logprob: -7.639971733093262
    4. 'target' → logprob: -8.139971733093262
    5. 'y' → logprob: -11.139971733093262
    6. 'arget' → logprob: -12.264971733093262
    7. '```' → logprob: -12.889971733093262
    8. '_' → logprob: -13.389971733093262
    9. '
' → logprob: -13.514971733093262
    10. '(target' → logprob: -14.077471733093262

Token 226: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07010449469089508
    2. '-' → logprob: -2.6951045989990234
    3. ' ' → logprob: -8.820104598999023
    4. ')' → logprob: -11.070104598999023
    5. '   ' → logprob: -13.195104598999023
    6. 'current' → logprob: -13.695104598999023
    7. '  ' → logprob: -14.570104598999023
    8. '-current' → logprob: -14.820104598999023
    9. ' current' → logprob: -15.195104598999023
    10. ',' → logprob: -15.820104598999023

Token 227: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.023482587188482285
    2. ' current' → logprob: -3.77348256111145
    3. 'target' → logprob: -8.398482322692871
    4. ' target' → logprob: -12.273482322692871
    5. ' ' → logprob: -13.148482322692871
    6. '_current' → logprob: -13.273482322692871
    7. '(current' → logprob: -13.523482322692871
    8. '   ' → logprob: -14.023482322692871
    9. 'y' → logprob: -15.648482322692871
    10. ' y' → logprob: -15.898482322692871

Token 228: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.07901911437511444
    2. '_x' → logprob: -2.579019069671631
    3. '   ' → logprob: -10.329019546508789
    4. 'current' → logprob: -10.454019546508789
    5. ')' → logprob: -10.579019546508789
    6. 'y' → logprob: -11.204019546508789
    7. '```' → logprob: -11.454019546508789
    8. 'x' → logprob: -11.704019546508789
    9. '_' → logprob: -12.579019546508789
    10. '_)' → logprob: -13.954019546508789

Token 229: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.48381781578063965
    2. '):' → logprob: -0.9838178157806396
    3. '       ' → logprob: -5.358818054199219
    4. ':' → logprob: -5.733818054199219
    5. ':
' → logprob: -7.108818054199219
    6. ')' → logprob: -8.108818054199219
    7. '           ' → logprob: -8.233818054199219
    8. '   ' → logprob: -9.108818054199219
    9. ' ):
' → logprob: -9.358818054199219
    10. '):
' → logprob: -9.858818054199219

Token 230: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00382370688021183
    2. 'step' → logprob: -6.503823757171631
    3. '       ' → logprob: -7.003823757171631
    4. ' step' → logprob: -7.128823757171631
    5. '
' → logprob: -7.878823757171631
    6. '            
' → logprob: -9.003823280334473
    7. 'if' → logprob: -10.253823280334473
    8. ' if' → logprob: -11.003823280334473
    9. '        
' → logprob: -11.378823280334473
    10. '   ' → logprob: -11.378823280334473

Token 231: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.5527096390724182
    2. 'step' (adapté à ' step') → logprob: -0.9277096390724182
    3. '           ' → logprob: -4.677709579467773
    4. ' if' → logprob: -5.052709579467773
    5. 'if' → logprob: -5.302709579467773
    6. '       ' → logprob: -5.552709579467773
    7. ' surplus' → logprob: -6.927709579467773
    8. 'sur' → logprob: -7.177709579467773
    9. ' return' → logprob: -7.552709579467773
    10. 'return' → logprob: -7.927709579467773

Token 232: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.005930693820118904
    2. '_y' → logprob: -5.1309309005737305
    3. 'x' → logprob: -13.38093090057373
    4. '_' → logprob: -14.50593090057373
    5. 'y' → logprob: -17.755929946899414
    6. '_size' → logprob: -18.255929946899414
    7. 's' → logprob: -18.880929946899414
    8. '[' → logprob: -18.880929946899414
    9. '   ' → logprob: -19.380929946899414
    10. 'import' → logprob: -19.880929946899414

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05494265630841255
    2. '=' → logprob: -2.9299426078796387
    3. ',' → logprob: -9.804943084716797
    4. ' +=' → logprob: -12.929943084716797
    5. ' ' → logprob: -14.679943084716797
    6. ' ,' → logprob: -14.804943084716797
    7. 'step' → logprob: -15.179943084716797
    8. '0' → logprob: -15.429943084716797
    9. '   ' → logprob: -15.429943084716797
    10. '	' → logprob: -15.554943084716797

Token 234: ' (' (ID: 350)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5828567743301392
    2. 'move' → logprob: -1.5828567743301392
    3. 'abs' → logprob: -1.5828567743301392
    4. '(move' → logprob: -2.0828566551208496
    5. 'min' → logprob: -2.8328566551208496
    6. '(min' → logprob: -2.9578566551208496
    7. '(' → logprob: -3.7078566551208496
    8. '(abs' → logprob: -3.8328566551208496
    9. 'sur' → logprob: -3.9578566551208496
    10. ' (' → logprob: -4.20785665512085

Token 235: 'abs' (ID: 6071)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.17124289274215698
    2. '0' → logprob: -2.5462429523468018
    3. 'abs' → logprob: -3.2962429523468018
    4. '1' → logprob: -4.296242713928223
    5. '-' → logprob: -4.921242713928223
    6. 'sur' → logprob: -5.296242713928223
    7. 'min' → logprob: -5.421242713928223
    8. ' move' → logprob: -5.671242713928223
    9. 'target' → logprob: -6.171242713928223
    10. '(move' → logprob: -6.421242713928223

Token 236: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.005562786012887955
    2. 'target' → logprob: -5.255562782287598
    3. 'step' → logprob: -8.755562782287598
    4. 'move' → logprob: -9.380562782287598
    5. '(step' → logprob: -10.255562782287598
    6. '(current' → logprob: -10.880562782287598
    7. '(move' → logprob: -10.880562782287598
    8. 'current' → logprob: -12.630562782287598
    9. '(t' → logprob: -13.255562782287598
    10. '(' → logprob: -13.505562782287598

Token 237: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.6913346648216248
    2. '(target' → logprob: -1.0663347244262695
    3. 'target' → logprob: -2.3163347244262695
    4. 'x' → logprob: -3.0663347244262695
    5. '_y' → logprob: -5.0663347244262695
    6. 'y' → logprob: -6.1913347244262695
    7. '(x' → logprob: -7.1913347244262695
    8. '(y' → logprob: -8.69133472442627
    9. ' target' → logprob: -9.44133472442627
    10. '[target' → logprob: -9.81633472442627

Token 238: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.018233997747302055
    2. '-' → logprob: -4.018233776092529
    3. '-current' → logprob: -10.143234252929688
    4. '-target' → logprob: -10.393234252929688
    5. 'current' → logprob: -11.643234252929688
    6. ' ' → logprob: -13.518234252929688
    7. ' current' → logprob: -14.143234252929688
    8. ')' → logprob: -14.393234252929688
    9. '-c' → logprob: -14.393234252929688
    10. '(current' → logprob: -14.643234252929688

Token 239: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.01606721803545952
    2. ' current' → logprob: -4.141067028045654
    3. 'x' → logprob: -11.016067504882812
    4. '(current' → logprob: -11.891067504882812
    5. 'target' → logprob: -13.141067504882812
    6. ' ' → logprob: -13.391067504882812
    7. '_current' → logprob: -13.391067504882812
    8. '   ' → logprob: -13.641067504882812
    9. 'step' → logprob: -14.016067504882812
    10. ' x' → logprob: -14.516067504882812

Token 240: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.006700212135910988
    2. 'current' → logprob: -5.131700038909912
    3. 'x' → logprob: -7.256700038909912
    4. '_y' → logprob: -11.00670051574707
    5. ' current' → logprob: -11.38170051574707
    6. '   ' → logprob: -11.63170051574707
    7. ' ' → logprob: -12.25670051574707
    8. ' -' → logprob: -12.50670051574707
    9. '_current' → logprob: -12.50670051574707
    10. '(current' → logprob: -12.75670051574707

Token 241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031848405487835407
    2. ')+' → logprob: -5.878184795379639
    3. ' )' → logprob: -8.503185272216797
    4. '))' → logprob: -9.253185272216797
    5. '+' → logprob: -10.003185272216797
    6. '   ' → logprob: -11.753185272216797
    7. ')*' → logprob: -12.628185272216797
    8. ')
' → logprob: -12.628185272216797
    9. ' +' → logprob: -12.878185272216797
    10. 'if' → logprob: -12.878185272216797

Token 242: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47166016697883606
    2. ')' → logprob: -1.2216601371765137
    3. '+' → logprob: -3.3466601371765137
    4. ' if' → logprob: -3.5966601371765137
    5. 'if' → logprob: -5.096660137176514
    6. ' -' → logprob: -5.346660137176514
    7. ' *' → logprob: -5.596660137176514
    8. ' )' → logprob: -6.596660137176514
    9. '   ' → logprob: -6.971660137176514
    10. ')*' → logprob: -7.721660137176514

Token 243: ' surplus' (ID: 78529)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.015398808754980564
    2. ' surplus' → logprob: -4.265398979187012
    3. 'min' → logprob: -7.640398979187012
    4. '1' → logprob: -8.265398979187012
    5. 'move' → logprob: -8.515398979187012
    6. '(s' → logprob: -9.140398979187012
    7. ' min' → logprob: -9.890398979187012
    8. 'max' → logprob: -10.390398979187012
    9. ' move' → logprob: -11.015398979187012
    10. '0' → logprob: -11.015398979187012

Token 244: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005841302336193621
    2. ' )' → logprob: -7.625584125518799
    3. ' if' → logprob: -9.750584602355957
    4. '+' → logprob: -11.375584602355957
    5. ')*' → logprob: -11.750584602355957
    6. 'if' → logprob: -12.125584602355957
    7. '   ' → logprob: -12.375584602355957
    8. ' +' → logprob: -12.750584602355957
    9. '*' → logprob: -13.000584602355957
    10. '       ' → logprob: -13.875584602355957

Token 245: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.00738903321325779
    2. '*' → logprob: -5.507389068603516
    3. ' if' → logprob: -6.007389068603516
    4. 'if' → logprob: -7.757389068603516
    5. '*(' → logprob: -8.382389068603516
    6. '<|end|>' → logprob: -8.757389068603516
    7. ' ' → logprob: -12.007389068603516
    8. ')' → logprob: -12.007389068603516
    9. '<|end|>' → logprob: -12.882389068603516
    10. ',' → logprob: -12.882389068603516

Token 246: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1269284337759018
    2. '(' → logprob: -2.1269283294677734
    3. ' ' → logprob: -15.751928329467773
    4. ' ((' → logprob: -16.251928329467773
    5. ' (-' → logprob: -17.376928329467773
    6. '1' → logprob: -17.376928329467773
    7. '  ' → logprob: -17.626928329467773
    8. '((' → logprob: -17.626928329467773
    9. '<|end|>' → logprob: -17.751928329467773
    10. '(-' → logprob: -18.626928329467773

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021593389101326466
    2. ' ' → logprob: -8.500215530395508
    3. '-' → logprob: -11.875215530395508
    4. ' -' → logprob: -12.250215530395508
    5. '(' → logprob: -14.375215530395508
    6. ' (' → logprob: -16.625215530395508
    7. '   ' → logprob: -18.250215530395508
    8. '  ' → logprob: -19.000215530395508
    9. '0' → logprob: -19.250215530395508
    10. '(-' → logprob: -20.625215530395508

Token 248: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.014164221473038197
    2. 'if' → logprob: -4.264164447784424
    3. ' ' → logprob: -14.889163970947266
    4. '```' → logprob: -15.889163970947266
    5. '	if' → logprob: -16.264163970947266
    6. '<|end|>' → logprob: -16.889163970947266
    7. '   ' → logprob: -17.139163970947266
    8. 'If' → logprob: -17.889163970947266
    9. '1' → logprob: -18.389163970947266
    10. ')' → logprob: -18.764163970947266

Token 249: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.47416114807128906
    2. ' target' → logprob: -0.9741611480712891
    3. '(target' → logprob: -10.349161148071289
    4. 'current' → logprob: -10.599161148071289
    5. ' current' → logprob: -10.849161148071289
    6. '	target' → logprob: -12.724161148071289
    7. ' ' → logprob: -12.974161148071289
    8. 't' → logprob: -14.349161148071289
    9. '   ' → logprob: -14.849161148071289
    10. '[target' → logprob: -15.224161148071289

Token 250: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.002704185200855136
    2. '_y' → logprob: -6.62770414352417
    3. 'x' → logprob: -7.25270414352417
    4. 'target' → logprob: -7.37770414352417
    5. '(target' → logprob: -11.252704620361328
    6. 'user' → logprob: -11.877704620361328
    7. '[target' → logprob: -12.377704620361328
    8. ' target' → logprob: -12.877704620361328
    9. '_' → logprob: -12.877704620361328
    10. '>' → logprob: -13.127704620361328

Token 251: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.04859793186187744
    2. '>' → logprob: -3.048597812652588
    3. ' ' → logprob: -11.798598289489746
    4. ' >
' → logprob: -13.423598289489746
    5. ' ' → logprob: -15.048598289489746
    6. '>x' → logprob: -15.548598289489746
    7. '>
' → logprob: -15.923598289489746
    8. ' >
' → logprob: -16.17359733581543
    9. ' >

' → logprob: -16.29859733581543
    10. '  ' → logprob: -16.67359733581543

Token 252: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.1269291490316391
    2. 'current' → logprob: -2.1269290447235107
    3. ' ' → logprob: -14.62692928314209
    4. '	current' → logprob: -15.50192928314209
    5. '=current' → logprob: -16.001928329467773
    6. '(current' → logprob: -16.126928329467773
    7. '_current' → logprob: -16.376928329467773
    8. '[current' → logprob: -16.876928329467773
    9. '$current' → logprob: -17.251928329467773
    10. 'Current' → logprob: -17.501928329467773

Token 253: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0005112105864100158
    2. 'x' → logprob: -7.750511169433594
    3. '_y' → logprob: -9.750511169433594
    4. 'current' → logprob: -10.875511169433594
    5. '_' → logprob: -13.500511169433594
    6. '```' → logprob: -13.750511169433594
    7. '
' → logprob: -15.750511169433594
    8. 's' → logprob: -16.125511169433594
    9. '   ' → logprob: -16.500511169433594
    10. ' _' → logprob: -16.750511169433594

Token 254: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018150413408875465
    2. 'else' → logprob: -4.018150329589844
    3. '```' → logprob: -15.268150329589844
    4. '        ' → logprob: -16.393150329589844
    5. '	else' → logprob: -16.893150329589844
    6. '         ' → logprob: -17.018150329589844
    7. '       ' → logprob: -18.393150329589844
    8. '           ' → logprob: -18.643150329589844
    9. ' ' → logprob: -18.768150329589844
    10. ')' → logprob: -18.768150329589844

Token 255: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07888978719711304
    2. ' -' → logprob: -2.578889846801758
    3. ' ' → logprob: -17.703889846801758
    4. '```' → logprob: -17.703889846801758
    5. '1' → logprob: -17.953889846801758
    6. '   ' → logprob: -19.328889846801758
    7. '−' → logprob: -19.328889846801758
    8. '	' → logprob: -20.578889846801758
    9. '-step' → logprob: -20.578889846801758
    10. '  ' → logprob: -20.828889846801758

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '-' → logprob: -17.750001907348633
    4. ')' → logprob: -18.000001907348633
    5. '```' → logprob: -18.125001907348633
    6. '
' → logprob: -19.937501907348633
    7. '   ' → logprob: -19.937501907348633
    8. ' -' → logprob: -20.437501907348633
    9. '۱' → logprob: -20.437501907348633
    10. '１' → logprob: -21.062501907348633

Token 257: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03876812011003494
    2. ')
' → logprob: -3.2887680530548096
    3. '       ' → logprob: -7.288768291473389
    4. '   ' → logprob: -10.78876781463623
    5. '<|end|>' → logprob: -11.78876781463623
    6. ')

' → logprob: -12.41376781463623
    7. ')
' → logprob: -12.41376781463623
    8. 'else' → logprob: -13.16376781463623
    9. ' )' → logprob: -14.28876781463623
    10. ' else' → logprob: -14.53876781463623

Token 258: '           ' (ID: 352)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4976477324962616
    2. '       ' → logprob: -1.247647762298584
    3. ' else' → logprob: -2.872647762298584
    4. '<|end|>' → logprob: -3.622647762298584
    5. '   ' → logprob: -4.497647762298584
    6. '
' → logprob: -5.247647762298584
    7. 'elif' → logprob: -6.497647762298584
    8. '           ' → logprob: -6.747647762298584
    9. 'step' → logprob: -6.747647762298584
    10. '	else' → logprob: -8.372647285461426

Token 259: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.028750695288181305
    2. ' step' → logprob: -3.6537506580352783
    3. '           ' → logprob: -6.403750896453857
    4. '       ' → logprob: -7.153750896453857
    5. '	step' → logprob: -12.7787504196167
    6. 'sur' → logprob: -13.2787504196167
    7. '   ' → logprob: -13.4037504196167
    8. 'if' → logprob: -13.6537504196167
    9. '(step' → logprob: -14.6537504196167
    10. 'remaining' → logprob: -14.7787504196167

Token 260: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -1.5048530030981055e-06
    2. '_x' → logprob: -13.625001907348633
    3. 'y' → logprob: -15.500001907348633
    4. '_' → logprob: -17.375001907348633
    5. ' _' → logprob: -19.250001907348633
    6. '	y' → logprob: -20.625001907348633
    7. '   ' → logprob: -21.250001907348633
    8. '\' → logprob: -21.500001907348633
    9. '[' → logprob: -21.750001907348633
    10. 'Y' → logprob: -22.125001907348633

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196824833750725
    2. '=' → logprob: -2.8119683265686035
    3. ' +=' → logprob: -15.686967849731445
    4. ' =(' → logprob: -15.936967849731445
    5. '   ' → logprob: -16.436967849731445
    6. '    ' → logprob: -16.811967849731445
    7. ' ' → logprob: -16.811967849731445
    8. ',' → logprob: -17.311967849731445
    9. ')' → logprob: -17.561967849731445
    10. 's' → logprob: -18.061967849731445

Token 262: ' (' (ID: 350)
  Prédit: '(move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.27173975110054016
    2. '(abs' → logprob: -1.5217397212982178
    3. 'move' → logprob: -4.771739959716797
    4. ' (' → logprob: -5.521739959716797
    5. 'abs' → logprob: -5.771739959716797
    6. '(step' → logprob: -6.896739959716797
    7. '((' → logprob: -7.396739959716797
    8. '(' → logprob: -7.771739959716797
    9. '(target' → logprob: -8.021739959716797
    10. '   ' → logprob: -8.146739959716797

Token 263: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.8227017521858215
    2. 'abs' → logprob: -1.4477016925811768
    3. '(move' → logprob: -1.4477016925811768
    4. '(abs' → logprob: -2.4477016925811768
    5. ' abs' → logprob: -6.447701930999756
    6. ' move' → logprob: -6.572701930999756
    7. 'step' → logprob: -8.072701454162598
    8. ' (' → logprob: -8.572701454162598
    9. '(m' → logprob: -9.322701454162598
    10. '(' → logprob: -9.447701454162598

Token 264: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.0921942703134846e-05
    2. 'step' → logprob: -11.87501049041748
    3. 'Step' → logprob: -12.75001049041748
    4. '_steps' → logprob: -14.25001049041748
    5. '_size' → logprob: -16.375011444091797
    6. '_STEP' → logprob: -16.375011444091797
    7. '_' → logprob: -16.500011444091797
    8. '_move' → logprob: -16.875011444091797
    9. '```' → logprob: -17.500011444091797
    10. '_s' → logprob: -17.750011444091797

Token 265: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -7.588793960167095e-05
    2. 'size' → logprob: -9.500076293945312
    3. '_SIZE' → logprob: -14.750076293945312
    4. ' size' → logprob: -15.000076293945312
    5. 's' → logprob: -16.875076293945312
    6. 'ize' → logprob: -16.875076293945312
    7. '_s' → logprob: -17.500076293945312
    8. '   ' → logprob: -17.875076293945312
    9. '-size' → logprob: -18.375076293945312
    10. 'esize' → logprob: -18.375076293945312

Token 266: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0019310165662318468
    2. '-' → logprob: -6.251931190490723
    3. ')' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.501931190490723
    5. '   ' → logprob: -14.876931190490723
    6. ' -
' → logprob: -16.126930236816406
    7. ' -(' → logprob: -16.501930236816406
    8. '<|end|>' → logprob: -16.876930236816406
    9. '
' → logprob: -17.876930236816406
    10. '    ' → logprob: -18.001930236816406

Token 267: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0048262071795761585
    2. ' abs' → logprob: -5.504826068878174
    3. '(abs' → logprob: -7.504826068878174
    4. 'step' → logprob: -9.004826545715332
    5. '           ' → logprob: -9.754826545715332
    6. '       ' → logprob: -12.129826545715332
    7. ' step' → logprob: -13.004826545715332
    8. '            ' → logprob: -13.379826545715332
    9. '   ' → logprob: -13.879826545715332
    10. ' (' → logprob: -14.129826545715332

Token 268: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -9.698698704596609e-05
    2. 'step' → logprob: -9.250097274780273
    3. '(' → logprob: -14.125097274780273
    4. '	step' → logprob: -16.625097274780273
    5. ' step' → logprob: -17.250097274780273
    6. '(
' → logprob: -18.375097274780273
    7. ' (' → logprob: -19.750097274780273
    8. '((' → logprob: -19.750097274780273
    9. 'Step' → logprob: -21.000097274780273
    10. '.step' → logprob: -21.125097274780273

Token 269: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.200166469876422e-06
    2. 'x' → logprob: -12.625004768371582
    3. '_y' → logprob: -13.875004768371582
    4. '(step' → logprob: -14.750004768371582
    5. 'step' → logprob: -14.750004768371582
    6. '[' → logprob: -16.5000057220459
    7. '   ' → logprob: -17.3750057220459
    8. ' ' → logprob: -17.5000057220459
    9. ' step' → logprob: -18.1250057220459
    10. '_' → logprob: -18.1250057220459

Token 270: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.005249648820608854
    2. ')' → logprob: -5.255249500274658
    3. ' ))' → logprob: -12.005249977111816
    4. ')))' → logprob: -12.755249977111816
    5. '   ' → logprob: -13.005249977111816
    6. ' ' → logprob: -13.630249977111816
    7. '))
' → logprob: -14.380249977111816
    8. ')
' → logprob: -14.380249977111816
    9. '))*' → logprob: -14.380249977111816
    10. '```' → logprob: -15.255249977111816

Token 271: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.03045191988348961
    2. '*' → logprob: -3.530452013015747
    3. ' ' → logprob: -8.155451774597168
    4. '*(' → logprob: -8.405451774597168
    5. '   ' → logprob: -9.155451774597168
    6. ')' → logprob: -10.155451774597168
    7. '<|end|>' → logprob: -11.030451774597168
    8. '  ' → logprob: -11.780451774597168
    9. '    ' → logprob: -12.280451774597168
    10. ' ' → logprob: -12.780451774597168

Token 272: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006716079078614712
    2. ' (' → logprob: -5.006716251373291
    3. '   ' → logprob: -15.381715774536133
    4. '1' → logprob: -15.506715774536133
    5. ' ' → logprob: -15.881715774536133
    6. '  ' → logprob: -16.506715774536133
    7. '           ' → logprob: -17.006715774536133
    8. '((' → logprob: -17.256715774536133
    9. '    ' → logprob: -18.256715774536133
    10. '       ' → logprob: -18.381715774536133

Token 273: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0026162052527070045
    2. ' (' → logprob: -6.3776164054870605
    3. '1' → logprob: -7.0026164054870605
    4. ' ' → logprob: -13.002615928649902
    5. '   ' → logprob: -13.877615928649902
    6. '  ' → logprob: -15.627615928649902
    7. '(-' → logprob: -16.00261688232422
    8. '(
' → logprob: -16.12761688232422
    9. '
' → logprob: -16.37761688232422
    10. '((' → logprob: -17.00261688232422

Token 274: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2519367039203644
    2. 'if' → logprob: -1.501936674118042
    3. ' ' → logprob: -12.751936912536621
    4. '<|end|>' → logprob: -13.376936912536621
    5. ')' → logprob: -14.001936912536621
    6. '	if' → logprob: -14.251936912536621
    7. 'target' → logprob: -14.751936912536621
    8. '   ' → logprob: -15.376936912536621
    9. ' target' → logprob: -15.626936912536621
    10. 'If' → logprob: -15.626936912536621

Token 275: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.06216474995017052
    2. ' target' → logprob: -2.812164783477783
    3. '(target' → logprob: -8.562164306640625
    4. ' ' → logprob: -13.187164306640625
    5. '   ' → logprob: -13.187164306640625
    6. '	target' → logprob: -14.437164306640625
    7. '[target' → logprob: -14.562164306640625
    8. '           ' → logprob: -15.187164306640625
    9. 'step' → logprob: -15.312164306640625
    10. '  ' → logprob: -15.687164306640625

Token 276: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.3228147029876709
    2. 'target' → logprob: -1.322814702987671
    3. 'y' → logprob: -4.69781494140625
    4. ' target' → logprob: -8.57281494140625
    5. '_target' → logprob: -9.69781494140625
    6. '_x' → logprob: -9.82281494140625
    7. '(target' → logprob: -10.69781494140625
    8. '[target' → logprob: -10.82281494140625
    9. 'arget' → logprob: -12.19781494140625
    10. 'x' → logprob: -12.32281494140625

Token 277: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.006723183207213879
    2. '>' → logprob: -5.006723403930664
    3. ' ' → logprob: -11.881723403930664
    4. ' <' → logprob: -15.131723403930664
    5. ' >
' → logprob: -15.506723403930664
    6. ' ' → logprob: -16.006723403930664
    7. ' >
' → logprob: -16.631723403930664
    8. ' else' → logprob: -16.756723403930664
    9. '  ' → logprob: -16.881723403930664
    10. '   ' → logprob: -17.506723403930664

Token 278: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.10022132843732834
    2. ' current' → logprob: -2.3502213954925537
    3. ' ' → logprob: -11.975221633911133
    4. '(current' → logprob: -12.600221633911133
    5. '   ' → logprob: -12.850221633911133
    6. '	current' → logprob: -14.725221633911133
    7. '_current' → logprob: -14.725221633911133
    8. '[current' → logprob: -14.725221633911133
    9. '$current' → logprob: -15.225221633911133
    10. '.current' → logprob: -15.600221633911133

Token 279: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0010767532512545586
    2. '_x' → logprob: -7.001076698303223
    3. 'current' → logprob: -9.126076698303223
    4. 'y' → logprob: -10.001076698303223
    5. '```' → logprob: -12.251076698303223
    6. '_' → logprob: -12.626076698303223
    7. '   ' → logprob: -13.501076698303223
    8. '_current' → logprob: -14.876076698303223
    9. 'x' → logprob: -15.126076698303223
    10. ' ' → logprob: -15.876076698303223

Token 280: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5759486556053162
    2. 'else' → logprob: -0.8259486556053162
    3. '         ' → logprob: -12.825948715209961
    4. '        ' → logprob: -13.200948715209961
    5. ' ' → logprob: -13.575948715209961
    6. '   ' → logprob: -14.075948715209961
    7. '	else' → logprob: -14.575948715209961
    8. '     ' → logprob: -14.700948715209961
    9. '       ' → logprob: -14.825948715209961
    10. '    ' → logprob: -15.075948715209961

Token 281: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0006515554850921035
    2. ' -' → logprob: -7.3756513595581055
    3. '1' → logprob: -10.625651359558105
    4. ' ' → logprob: -15.375651359558105
    5. '0' → logprob: -15.500651359558105
    6. '   ' → logprob: -16.625652313232422
    7. 'else' → logprob: -17.250652313232422
    8. '           ' → logprob: -18.500652313232422
    9. '       ' → logprob: -18.625652313232422
    10. '  ' → logprob: -18.875652313232422

Token 282: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.787507714354433e-05
    2. '-' → logprob: -10.00004768371582
    3. ' ' → logprob: -13.12504768371582
    4. ' -' → logprob: -16.00004768371582
    5. '   ' → logprob: -16.12504768371582
    6. '           ' → logprob: -16.12504768371582
    7. '
' → logprob: -16.75004768371582
    8. '       ' → logprob: -16.87504768371582
    9. ')' → logprob: -17.25004768371582
    10. '```' → logprob: -18.25004768371582

Token 283: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009600582998245955
    2. ')
' → logprob: -7.625959873199463
    3. '       ' → logprob: -7.750959873199463
    4. '   ' → logprob: -10.125960350036621
    5. ' )' → logprob: -14.500960350036621
    6. ')return' → logprob: -15.250960350036621
    7. ')

' → logprob: -15.750960350036621
    8. '<|end|>' → logprob: -16.000959396362305
    9. ')
' → logprob: -16.250959396362305
    10. '           ' → logprob: -16.625959396362305

Token 284: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 285: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0405268631875515
    2. '       ' → logprob: -3.540526866912842
    3. ' else' → logprob: -4.540526866912842
    4. 'elif' → logprob: -10.540526390075684
    5. '   ' → logprob: -10.915526390075684
    6. '	else' → logprob: -12.415526390075684
    7. 'return' → logprob: -13.790526390075684
    8. '}else' → logprob: -14.915526390075684
    9. '```' → logprob: -15.790526390075684
    10. ')' → logprob: -15.790526390075684

Token 286: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1832587867975235
    2. ':' → logprob: -2.1832587718963623
    3. ':
' → logprob: -3.3082587718963623
    4. '       ' → logprob: -4.058259010314941
    5. '{' → logprob: -8.183259010314941
    6. '   ' → logprob: -9.058259010314941
    7. '```' → logprob: -9.433259010314941
    8. ' step' → logprob: -9.558259010314941
    9. '[' → logprob: -9.808259010314941
    10. '{
' → logprob: -9.933259010314941

Token 287: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8843294978141785
    2. '           ' → logprob: -1.1343295574188232
    3. 'step' → logprob: -1.3843295574188232
    4. ' step' → logprob: -4.259329319000244
    5. '   ' → logprob: -7.634329319000244
    6. '	step' → logprob: -8.634329795837402
    7. '        ' → logprob: -11.009329795837402
    8. '
' → logprob: -11.134329795837402
    9. '               ' → logprob: -11.384329795837402
    10. ' ' → logprob: -11.759329795837402

Token 288: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.0009354014764539897
    2. ' step' → logprob: -7.0009355545043945
    3. '           ' → logprob: -11.125935554504395
    4. '       ' → logprob: -11.875935554504395
    5. '   ' → logprob: -13.875935554504395
    6. '	step' → logprob: -14.250935554504395
    7. '
' → logprob: -15.000935554504395
    8. ' ' → logprob: -15.500935554504395
    9. 'Step' → logprob: -17.500934600830078
    10. '               ' → logprob: -17.625934600830078

Token 289: '_y' (ID: 9410)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0028060602489858866
    2. '_y' → logprob: -5.877806186676025
    3. '_' → logprob: -14.627805709838867
    4. 'x' → logprob: -14.752805709838867
    5. '_size' → logprob: -16.752805709838867
    6. 's' → logprob: -17.002805709838867
    7. '   ' → logprob: -17.127805709838867
    8. '```' → logprob: -17.377805709838867
    9. 'import' → logprob: -17.627805709838867
    10. 'size' → logprob: -17.627805709838867

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.126929372549057
    2. '=' → logprob: -2.12692928314209
    3. '=(' → logprob: -14.00192928314209
    4. ' =(' → logprob: -15.00192928314209
    5. ')' → logprob: -16.251930236816406
    6. ' ' → logprob: -18.126930236816406
    7. ',' → logprob: -18.251930236816406
    8. '<|end|>' → logprob: -18.251930236816406
    9. ' =)' → logprob: -18.376930236816406
    10. '＝' → logprob: -18.501930236816406

Token 291: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6158984303474426
    2. '(abs' → logprob: -0.8658984303474426
    3. '(move' → logprob: -3.240898370742798
    4. '           ' → logprob: -11.240898132324219
    5. ' move' → logprob: -11.990898132324219
    6. 'move' → logprob: -11.990898132324219
    7. 'abs' → logprob: -13.115898132324219
    8. ' abs' → logprob: -13.240898132324219
    9. ' ' → logprob: -13.365898132324219
    10. '(s' → logprob: -13.740898132324219

Token 292: 'abs' (ID: 6071)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -4.167648876318708e-05
    2. 'abs' → logprob: -10.750041961669922
    3. '(move' → logprob: -10.875041961669922
    4. ' (' → logprob: -14.000041961669922
    5. 'move' → logprob: -15.250041961669922
    6. '(' → logprob: -16.750041961669922
    7. ' abs' → logprob: -17.000041961669922
    8. '(ab' → logprob: -18.000041961669922
    9. '   ' → logprob: -18.625041961669922
    10. '.abs' → logprob: -18.750041961669922

Token 293: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -1.3544423381972592e-05
    2. 'target' → logprob: -11.25001335144043
    3. '[target' → logprob: -15.00001335144043
    4. '(' → logprob: -15.50001335144043
    5. '(current' → logprob: -18.87501335144043
    6. '(t' → logprob: -19.75001335144043
    7. '(step' → logprob: -20.12501335144043
    8. '(
' → logprob: -20.37501335144043
    9. ' (' → logprob: -20.62501335144043
    10. '	target' → logprob: -20.75001335144043

Token 294: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.2927614152431488
    2. '_x' → logprob: -2.1677613258361816
    3. 'target' → logprob: -2.5427613258361816
    4. '(target' → logprob: -3.0427613258361816
    5. 'y' → logprob: -4.417761325836182
    6. 'x' → logprob: -7.167761325836182
    7. '[target' → logprob: -9.16776180267334
    8. ' target' → logprob: -10.79276180267334
    9. 'step' → logprob: -11.04276180267334
    10. '(y' → logprob: -11.41776180267334

Token 295: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.16022859513759613
    2. '-' → logprob: -1.9102286100387573
    3. ' ' → logprob: -12.910228729248047
    4. '-y' → logprob: -13.410228729248047
    5. '-target' → logprob: -15.660228729248047
    6. '   ' → logprob: -16.410228729248047
    7. ' ' → logprob: -16.785228729248047
    8. 'y' → logprob: -17.160228729248047
    9. ')' → logprob: -17.535228729248047
    10. '  ' → logprob: -17.535228729248047

Token 296: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0006958735757507384
    2. ' current' → logprob: -7.500695705413818
    3. '_current' → logprob: -9.125696182250977
    4. 'target' → logprob: -11.250696182250977
    5. '(current' → logprob: -11.500696182250977
    6. '_y' → logprob: -11.875696182250977
    7. 'y' → logprob: -13.125696182250977
    8. 'move' → logprob: -14.250696182250977
    9. 'step' → logprob: -14.500696182250977
    10. '   ' → logprob: -15.875696182250977

Token 297: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0002383441897109151
    2. '_x' → logprob: -8.375238418579102
    3. 'y' → logprob: -12.125238418579102
    4. '-' → logprob: -14.125238418579102
    5. 'current' → logprob: -14.375238418579102
    6. '_' → logprob: -15.125238418579102
    7. '```' → logprob: -15.125238418579102
    8. '   ' → logprob: -15.375238418579102
    9. ' -' → logprob: -16.0002384185791
    10. ')' → logprob: -17.0002384185791

Token 298: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.49508824944496155
    2. ' +' → logprob: -1.3700882196426392
    3. ')' → logprob: -1.9950882196426392
    4. ')+' → logprob: -8.370088577270508
    5. '   ' → logprob: -8.995088577270508
    6. ' ' → logprob: -10.870088577270508
    7. '()' → logprob: -12.495088577270508
    8. '    ' → logprob: -12.995088577270508
    9. ')+(' → logprob: -12.995088577270508
    10. '  ' → logprob: -13.120088577270508

Token 299: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3868773579597473
    2. ' +' → logprob: -1.1368772983551025
    3. ')' → logprob: -12.761877059936523
    4. '+
' → logprob: -13.636877059936523
    5. '   ' → logprob: -14.011877059936523
    6. ' ' → logprob: -14.386877059936523
    7. ' +
' → logprob: -15.386877059936523
    8. '+)' → logprob: -15.886877059936523
    9. '  ' → logprob: -16.636877059936523
    10. ')+' → logprob: -16.761877059936523

Token 300: ' surplus' (ID: 78529)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.00462403753772378
    2. ' surplus' → logprob: -5.379623889923096
    3. 'sup' → logprob: -13.629624366760254
    4. '_sur' → logprob: -13.629624366760254
    5. 'su' → logprob: -14.504624366760254
    6. '(s' → logprob: -14.879624366760254
    7. 'Sur' → logprob: -16.379623413085938
    8. '1' → logprob: -16.504623413085938
    9. ' ' → logprob: -16.879623413085938
    10. 's' → logprob: -17.004623413085938

Token 301: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ' )' → logprob: -13.00000286102295
    3. '   ' → logprob: -14.62500286102295
    4. ')*' → logprob: -17.750001907348633
    5. '       ' → logprob: -18.875001907348633
    6. '	' → logprob: -19.500001907348633
    7. ' ' → logprob: -20.000001907348633
    8. '    ' → logprob: -20.000001907348633
    9. ')
' → logprob: -20.125001907348633
    10. '*' → logprob: -20.125001907348633

Token 302: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -4.3464544432936236e-05
    2. '*' → logprob: -10.625043869018555
    3. '   ' → logprob: -11.875043869018555
    4. ' ' → logprob: -12.250043869018555
    5. '*(' → logprob: -12.500043869018555
    6. ' *(' → logprob: -13.750043869018555
    7. ' ' → logprob: -14.125043869018555
    8. ' (' → logprob: -14.250043869018555
    9. ')' → logprob: -14.250043869018555
    10. '	' → logprob: -15.750043869018555

Token 303: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04860587790608406
    2. '(' → logprob: -3.0486059188842773
    3. '<|end|>' → logprob: -10.923605918884277
    4. ' ' → logprob: -16.29860496520996
    5. '1' → logprob: -16.29860496520996
    6. '(space' → logprob: -16.54860496520996
    7. ' ' → logprob: -17.67360496520996
    8. ')' → logprob: -17.79860496520996
    9. '(True' → logprob: -17.92360496520996
    10. ' (
' → logprob: -18.29860496520996

Token 304: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01115687657147646
    2. ' (' → logprob: -4.511157035827637
    3. '1' → logprob: -9.136157035827637
    4. ' ' → logprob: -13.511157035827637
    5. ')' → logprob: -17.63615608215332
    6. ')(' → logprob: -17.63615608215332
    7. '  ' → logprob: -18.76115608215332
    8. '[' → logprob: -18.88615608215332
    9. ' -' → logprob: -18.88615608215332
    10. '(-' → logprob: -18.88615608215332

Token 305: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00020377879263833165
    2. 'if' → logprob: -8.500204086303711
    3. ' ' → logprob: -16.00020408630371
    4. ')' → logprob: -16.50020408630371
    5. ' ' → logprob: -17.12520408630371
    6. '<|end|>' → logprob: -17.62520408630371
    7. '	if' → logprob: -18.12520408630371
    8. ' )' → logprob: -19.12520408630371
    9. '           ' → logprob: -19.37520408630371
    10. ' for' → logprob: -19.87520408630371

Token 306: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.004144526552408934
    2. ' target' → logprob: -5.504144668579102
    3. '(target' → logprob: -9.629144668579102
    4. '   ' → logprob: -16.2541446685791
    5. ' ' → logprob: -16.6291446685791
    6. '	target' → logprob: -17.1291446685791
    7. 't' → logprob: -17.3791446685791
    8. 'step' → logprob: -17.5041446685791
    9. '[target' → logprob: -17.7541446685791
    10. '  ' → logprob: -17.7541446685791

Token 307: '_y' (ID: 9410)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.012073373422026634
    2. '_y' → logprob: -5.012073516845703
    3. 'y' → logprob: -5.512073516845703
    4. ' target' → logprob: -6.762073516845703
    5. 'current' → logprob: -9.512073516845703
    6. '(target' → logprob: -10.637073516845703
    7. 'step' → logprob: -10.762073516845703
    8. '_x' → logprob: -11.762073516845703
    9. 'x' → logprob: -11.887073516845703
    10. '
' → logprob: -12.137073516845703

Token 308: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.05489412695169449
    2. '>' → logprob: -2.929894208908081
    3. ' ' → logprob: -11.55489444732666
    4. ' ' → logprob: -14.05489444732666
    5. '<|end|>' → logprob: -14.80489444732666
    6. ' >
' → logprob: -15.55489444732666
    7. '```' → logprob: -15.80489444732666
    8. '   ' → logprob: -15.80489444732666
    9. '  ' → logprob: -16.179893493652344
    10. ')>' → logprob: -16.304893493652344

Token 309: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014168089255690575
    2. ' current' → logprob: -4.2641682624816895
    3. 'target' → logprob: -12.514167785644531
    4. '(current' → logprob: -15.139167785644531
    5. '_current' → logprob: -15.764167785644531
    6. '	current' → logprob: -16.51416778564453
    7. '   ' → logprob: -16.76416778564453
    8. '[current' → logprob: -17.13916778564453
    9. '$current' → logprob: -17.13916778564453
    10. ' target' → logprob: -17.26416778564453

Token 310: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.20276229083538055
    2. 'current' → logprob: -1.702762246131897
    3. '_x' → logprob: -7.327762126922607
    4. 'y' → logprob: -7.452762126922607
    5. '_current' → logprob: -9.702762603759766
    6. ' current' → logprob: -10.577762603759766
    7. '(current' → logprob: -12.202762603759766
    8. '_' → logprob: -12.702762603759766
    9. 'curr' → logprob: -12.952762603759766
    10. '```' → logprob: -12.952762603759766

Token 311: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.16022899746894836
    2. 'else' → logprob: -1.910228967666626
    3. ' ' → logprob: -13.035228729248047
    4. '```' → logprob: -13.285228729248047
    5. '	else' → logprob: -15.535228729248047
    6. '   ' → logprob: -15.660228729248047
    7. '         ' → logprob: -16.160228729248047
    8. '       ' → logprob: -16.160228729248047
    9. '     ' → logprob: -16.285228729248047
    10. '        ' → logprob: -16.285228729248047

Token 312: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.023260504007339478
    2. ' -' → logprob: -3.7732605934143066
    3. '1' → logprob: -12.023260116577148
    4. ' ' → logprob: -12.898260116577148
    5. ' else' → logprob: -12.898260116577148
    6. ' current' → logprob: -13.648260116577148
    7. 'current' → logprob: -13.773260116577148
    8. 'else' → logprob: -14.023260116577148
    9. '0' → logprob: -14.648260116577148
    10. '-step' → logprob: -15.148260116577148

Token 313: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.12345656752586365
    2. '1' → logprob: -2.3734564781188965
    3. 'current' → logprob: -3.8734564781188965
    4. '0' → logprob: -6.7484564781188965
    5. 'else' → logprob: -7.7484564781188965
    6. ' -' → logprob: -8.623456954956055
    7. 'y' → logprob: -8.623456954956055
    8. ' ' → logprob: -9.248456954956055
    9. ' current' → logprob: -9.498456954956055
    10. ' y' → logprob: -10.623456954956055

Token 314: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20259439945220947
    2. '       ' → logprob: -1.9525943994522095
    3. ')
' → logprob: -3.82759428024292
    4. '           ' → logprob: -4.57759428024292
    5. '
' → logprob: -5.07759428024292
    6. '<|end|>' → logprob: -6.57759428024292
    7. '   ' → logprob: -6.95259428024292
    8. '               ' → logprob: -8.702594757080078
    9. ' step' → logprob: -9.452594757080078
    10. '          ' → logprob: -9.827594757080078

Token 315: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008791481144726276
    2. '       ' → logprob: -5.133791446685791
    3. ' step' → logprob: -6.508791446685791
    4. 'step' → logprob: -7.383791446685791
    5. '   ' → logprob: -7.633791446685791
    6. '
' → logprob: -9.13379192352295
    7. '	step' → logprob: -9.88379192352295
    8. '               ' → logprob: -10.38379192352295
    9. '```' → logprob: -11.00879192352295
    10. '(step' → logprob: -11.50879192352295

Token 316: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' (adapté à ' step') → logprob: -0.30058664083480835
    2. ' step' → logprob: -1.5505867004394531
    3. '           ' → logprob: -3.050586700439453
    4. '       ' → logprob: -9.050586700439453
    5. '   ' → logprob: -10.300586700439453
    6. '	step' → logprob: -12.550586700439453
    7. '          ' → logprob: -13.300586700439453
    8. '               ' → logprob: -13.425586700439453
    9. ' ' → logprob: -13.675586700439453
    10. '         ' → logprob: -14.550586700439453

Token 317: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0280383548888494e-06
    2. 'x' → logprob: -13.875000953674316
    3. '_y' → logprob: -16.875001907348633
    4. '_' → logprob: -18.000001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '	x' → logprob: -20.000001907348633
    7. '```' → logprob: -20.875001907348633
    8. '_
' → logprob: -21.250001907348633
    9. ' _' → logprob: -21.375001907348633
    10. '           ' → logprob: -22.125001907348633

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.451414108276367
    4. ' =)' → logprob: -15.701414108276367
    5. ' =(' → logprob: -16.201414108276367
    6. ')' → logprob: -16.326414108276367
    7. ',' → logprob: -16.576414108276367
    8. ' +=' → logprob: -16.951414108276367
    9. '   ' → logprob: -17.326414108276367
    10. ' =
' → logprob: -17.326414108276367

Token 319: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.12695540487766266
    2. '(move' → logprob: -2.126955509185791
    3. ' move' → logprob: -11.001955032348633
    4. '(abs' → logprob: -12.751955032348633
    5. 'move' → logprob: -13.001955032348633
    6. '(m' → logprob: -13.001955032348633
    7. '   ' → logprob: -14.126955032348633
    8. '(make' → logprob: -14.376955032348633
    9. ' ' → logprob: -14.501955032348633
    10. '(' → logprob: -14.876955032348633

Token 320: 'move' (ID: 16366)
  Prédit: 'move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.25250130891799927
    2. '(move' → logprob: -1.5025012493133545
    3. ' move' → logprob: -7.502501487731934
    4. ' (' → logprob: -11.627501487731934
    5. '(m' → logprob: -12.377501487731934
    6. '	move' → logprob: -13.127501487731934
    7. ' ' → logprob: -14.127501487731934
    8. '_move' → logprob: -14.377501487731934
    9. '.move' → logprob: -14.502501487731934
    10. 'mov' → logprob: -14.502501487731934

Token 321: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.00021045419271104038
    2. '_' → logprob: -8.500210762023926
    3. 'Step' → logprob: -12.875210762023926
    4. '_size' → logprob: -13.500210762023926
    5. '_steps' → logprob: -14.000210762023926
    6. '-step' → logprob: -14.375210762023926
    7. '_x' → logprob: -15.500210762023926
    8. '_s' → logprob: -15.500210762023926
    9. 'step' → logprob: -15.500210762023926
    10. '_-' → logprob: -15.750210762023926

Token 322: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -12.12501335144043
    3. '_x' → logprob: -12.50001335144043
    4. '_step' → logprob: -13.12501335144043
    5. 'size' → logprob: -13.87501335144043
    6. '_s' → logprob: -14.00001335144043
    7. ' _' → logprob: -16.12501335144043
    8. '_SIZE' → logprob: -17.62501335144043
    9. '   ' → logprob: -17.75001335144043
    10. '```' → logprob: -18.12501335144043

Token 323: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0036118284333497286
    2. '-' → logprob: -5.628612041473389
    3. ' ' → logprob: -11.37861156463623
    4. ' ' → logprob: -16.128612518310547
    5. '   ' → logprob: -16.628612518310547
    6. ' -
' → logprob: -16.878612518310547
    7. '    ' → logprob: -17.253612518310547
    8. '  ' → logprob: -17.378612518310547
    9. ')' → logprob: -18.003612518310547
    10. '<|end|>' → logprob: -18.128612518310547

Token 324: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.0040785204619169235
    2. ' abs' → logprob: -5.504078388214111
    3. '(abs' → logprob: -15.87907886505127
    4. '.abs' → logprob: -18.879077911376953
    5. ' ' → logprob: -19.754077911376953
    6. '
' → logprob: -20.504077911376953
    7. '_abs' → logprob: -20.629077911376953
    8. ' ' → logprob: -20.879077911376953
    9. '   ' → logprob: -21.754077911376953
    10. '|' → logprob: -22.004077911376953

Token 325: '(step' (ID: 79951)
  Prédit: '(step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(step' → logprob: -4.787507714354433e-05
    2. 'step' → logprob: -10.00004768371582
    3. '(' → logprob: -13.00004768371582
    4. ' step' → logprob: -17.00004768371582
    5. '	step' → logprob: -17.75004768371582
    6. '(
' → logprob: -18.00004768371582
    7. 'Step' → logprob: -22.25004768371582
    8. ' (' → logprob: -22.62504768371582
    9. '(term' → logprob: -23.37504768371582
    10. '_step' → logprob: -23.50004768371582

Token 326: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.03365053981542587
    2. '_x' → logprob: -3.4086506366729736
    3. 'y' → logprob: -12.408650398254395
    4. '_' → logprob: -14.783650398254395
    5. '_step' → logprob: -16.03365135192871
    6. 'x' → logprob: -16.15865135192871
    7. '[' → logprob: -17.40865135192871
    8. ')_' → logprob: -17.53365135192871
    9. 'step' → logprob: -17.65865135192871
    10. ' _' → logprob: -17.78365135192871

Token 327: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ' )' → logprob: -14.750000953674316
    3. '))' → logprob: -14.875000953674316
    4. ')*' → logprob: -17.625
    5. '）' → logprob: -18.75
    6. ')
' → logprob: -19.0
    7. '   ' → logprob: -19.0
    8. '```' → logprob: -20.625
    9. ')`' → logprob: -20.625
    10. ' ' → logprob: -20.75

Token 328: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.47412702441215515
    2. '*' → logprob: -0.9741270542144775
    3. '*(' → logprob: -10.474126815795898
    4. '   ' → logprob: -11.474126815795898
    5. ' ' → logprob: -11.599126815795898
    6. ' ' → logprob: -13.599126815795898
    7. ')' → logprob: -15.099126815795898
    8. ' *(' → logprob: -15.599126815795898
    9. '	' → logprob: -15.849126815795898
    10. '  ' → logprob: -16.0991268157959

Token 329: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4740770161151886
    2. '(' → logprob: -0.9740769863128662
    3. '1' → logprob: -17.224077224731445
    4. ' ' → logprob: -18.099077224731445
    5. ' ' → logprob: -18.849077224731445
    6. '(True' → logprob: -19.974077224731445
    7. '`' → logprob: -20.224077224731445
    8. '*(' → logprob: -20.349077224731445
    9. '  ' → logprob: -20.849077224731445
    10. '（' → logprob: -20.974077224731445

Token 330: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00014168102643452585
    2. ' (' → logprob: -9.250142097473145
    3. '1' → logprob: -10.000142097473145
    4. ' ' → logprob: -16.625141143798828
    5. '   ' → logprob: -17.000141143798828
    6. '           ' → logprob: -18.375141143798828
    7. ')(' → logprob: -18.875141143798828
    8. '  ' → logprob: -19.250141143798828
    9. '     ' → logprob: -19.250141143798828
    10. '         ' → logprob: -19.375141143798828

Token 331: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04858759790658951
    2. 'if' → logprob: -3.0485875606536865
    3. '<|end|>' → logprob: -16.173587799072266
    4. ' ' → logprob: -16.798587799072266
    5. '*' → logprob: -17.173587799072266
    6. ')' → logprob: -17.548587799072266
    7. '	if' → logprob: -17.923587799072266
    8. ' *' → logprob: -17.923587799072266
    9. 'If' → logprob: -18.298587799072266
    10. '(if' → logprob: -19.048587799072266

Token 332: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.0789390280842781
    2. ' target' → logprob: -2.5789389610290527
    3. '(target' → logprob: -10.078939437866211
    4. 'current' → logprob: -12.203939437866211
    5. '   ' → logprob: -13.953939437866211
    6. ' current' → logprob: -14.078939437866211
    7. ' ' → logprob: -14.953939437866211
    8. '	target' → logprob: -15.578939437866211
    9. '[target' → logprob: -15.703939437866211
    10. '  ' → logprob: -17.45393943786621

Token 333: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.4617256056226324e-05
    2. 'x' → logprob: -12.000014305114746
    3. 'target' → logprob: -12.375014305114746
    4. '_y' → logprob: -12.500014305114746
    5. '_' → logprob: -15.250014305114746
    6. 'step' → logprob: -16.125015258789062
    7. '_target' → logprob: -16.250015258789062
    8. 'current' → logprob: -18.125015258789062
    9. '_step' → logprob: -18.750015258789062
    10. '```' → logprob: -19.000015258789062

Token 334: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.029766106978058815
    2. '>' → logprob: -3.529766082763672
    3. ' ' → logprob: -11.404766082763672
    4. ' ' → logprob: -13.029766082763672
    5. ' <' → logprob: -14.029766082763672
    6. ' >
' → logprob: -14.029766082763672
    7. '<|end|>' → logprob: -15.654766082763672
    8. '  ' → logprob: -16.029766082763672
    9. ' >
' → logprob: -16.404766082763672
    10. '   ' → logprob: -16.404766082763672

Token 335: ' current' (ID: 2208)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.03804286941885948
    2. ' current' → logprob: -3.2880427837371826
    3. '_current' → logprob: -15.038043022155762
    4. '   ' → logprob: -15.163043022155762
    5. '[current' → logprob: -15.538043022155762
    6. ' ' → logprob: -15.663043022155762
    7. '(current' → logprob: -16.038042068481445
    8. '	current' → logprob: -16.163042068481445
    9. '$current' → logprob: -16.413042068481445
    10. '
' → logprob: -16.788042068481445

Token 336: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0014432109892368317
    2. '_y' → logprob: -7.126443386077881
    3. 'current' → logprob: -7.501443386077881
    4. '_' → logprob: -9.751442909240723
    5. 'x' → logprob: -10.626442909240723
    6. '_current' → logprob: -13.126442909240723
    7. '_c' → logprob: -14.626442909240723
    8. ' current' → logprob: -15.126442909240723
    9. '```' → logprob: -15.126442909240723
    10. '   ' → logprob: -15.626442909240723

Token 337: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.38687190413475037
    2. ' else' → logprob: -1.1368719339370728
    3. '	else' → logprob: -14.386872291564941
    4. ' ' → logprob: -16.011871337890625
    5. '```' → logprob: -16.761871337890625
    6. '_else' → logprob: -17.386871337890625
    7. '   ' → logprob: -17.636871337890625
    8. ')' → logprob: -18.011871337890625
    9. '     ' → logprob: -18.636871337890625
    10. '       ' → logprob: -19.011871337890625

Token 338: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.014168326742947102
    2. ' -' → logprob: -4.2641682624816895
    3. '1' → logprob: -12.264168739318848
    4. ' ' → logprob: -16.13916778564453
    5. ')' → logprob: -17.13916778564453
    6. '-)' → logprob: -18.01416778564453
    7. '   ' → logprob: -20.26416778564453
    8. '+' → logprob: -20.26416778564453
    9. '0' → logprob: -20.51416778564453
    10. '```' → logprob: -21.26416778564453

Token 339: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0015337858349084854
    2. '-' → logprob: -6.5015339851379395
    3. ' ' → logprob: -10.376533508300781
    4. ' -' → logprob: -15.251533508300781
    5. '+' → logprob: -17.62653350830078
    6. '```' → logprob: -18.25153350830078
    7. ')' → logprob: -18.37653350830078
    8. '   ' → logprob: -20.00153350830078
    9. '
' → logprob: -20.62653350830078
    10. '#' → logprob: -21.50153350830078

Token 340: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001710014621494338
    2. ')
' → logprob: -9.125170707702637
    3. '       ' → logprob: -10.125170707702637
    4. '   ' → logprob: -11.000170707702637
    5. ')return' → logprob: -13.000170707702637
    6. ' )' → logprob: -13.125170707702637
    7. '	' → logprob: -14.875170707702637
    8. '<|end|>' → logprob: -15.125170707702637
    9. '}' → logprob: -16.625171661376953
    10. ')

' → logprob: -16.875171661376953

Token 341: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030769171193242073
    2. 'return' → logprob: -4.280769348144531
    3. ' return' → logprob: -4.280769348144531
    4. '	return' → logprob: -6.655769348144531
    5. '<|end|>' → logprob: -8.155769348144531
    6. '
' → logprob: -8.280769348144531
    7. '       ' → logprob: -8.405769348144531
    8. ':return' → logprob: -8.530769348144531
    9. '    
' → logprob: -8.905769348144531
    10. '```' → logprob: -9.405769348144531

Token 342: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16761547327041626
    2. '
' → logprob: -2.6676154136657715
    3. ' return' → logprob: -3.1676154136657715
    4. 'return' (adapté à ' return') → logprob: -3.4176154136657715
    5. '	return' → logprob: -5.2926154136657715
    6. '    
' → logprob: -7.0426154136657715
    7. '<|end|>' → logprob: -7.0426154136657715
    8. '\n' → logprob: -7.1676154136657715
    9. ' ' → logprob: -7.4176154136657715
    10. '  
' → logprob: -7.5426154136657715

Token 343: ' (' (ID: 350)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.019629018381237984
    2. ' step' → logprob: -4.019629001617432
    3. '(step' → logprob: -6.519629001617432
    4. ' (' → logprob: -13.39462947845459
    5. '	step' → logprob: -13.76962947845459
    6. '(' → logprob: -14.26962947845459
    7. '   ' → logprob: -14.64462947845459
    8. 'Step' → logprob: -16.019628524780273
    9. 'steps' → logprob: -17.019628524780273
    10. '_step' → logprob: -17.144628524780273

Token 344: 'current' (ID: 5804)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.001887349528260529
    2. 'current' → logprob: -6.501887321472168
    3. ' step' → logprob: -7.876887321472168
    4. '(step' → logprob: -12.751887321472168
    5. ' current' → logprob: -13.626887321472168
    6. '   ' → logprob: -14.501887321472168
    7. '	step' → logprob: -14.626887321472168
    8. 'Step' → logprob: -15.626887321472168
    9. 'steps' → logprob: -16.376888275146484
    10. '(current' → logprob: -17.001888275146484

Token 345: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.088346359931165e-07
    2. 'x' → logprob: -14.125000953674316
    3. '_' → logprob: -15.875000953674316
    4. '_step' → logprob: -18.375
    5. '_
' → logprob: -18.75
    6. '_y' → logprob: -19.25
    7. ' _' → logprob: -19.375
    8. ')' → logprob: -19.5
    9. '_)' → logprob: -19.625
    10. '_,' → logprob: -20.0

Token 346: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20144470036029816
    2. '+' → logprob: -1.7014447450637817
    3. ',' → logprob: -10.826444625854492
    4. ' +
' → logprob: -11.826444625854492
    5. ' ,' → logprob: -13.076444625854492
    6. '+
' → logprob: -14.076444625854492
    7. ' ' → logprob: -14.951444625854492
    8. '+,' → logprob: -14.951444625854492
    9. '   ' → logprob: -15.326444625854492
    10. ')' → logprob: -16.201444625854492

Token 347: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.023245595395565033
    2. ' step' → logprob: -3.7732455730438232
    3. '	step' → logprob: -16.648244857788086
    4. '(step' → logprob: -17.523244857788086
    5. ' ' → logprob: -18.523244857788086
    6. '_step' → logprob: -19.023244857788086
    7. 'Step' → logprob: -19.148244857788086
    8. '   ' → logprob: -19.148244857788086
    9. '
' → logprob: -19.398244857788086
    10. ')' → logprob: -19.648244857788086

Token 348: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. 'x' → logprob: -16.0
    4. '_y' → logprob: -16.375
    5. '_step' → logprob: -16.625
    6. '_,' → logprob: -18.125
    7. ' _' → logprob: -18.375
    8. '_)' → logprob: -18.5
    9. ')_' → logprob: -18.625
    10. '_
' → logprob: -19.0

Token 349: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.670925358776003e-05
    2. ',current' → logprob: -9.750066757202148
    3. ' ,' → logprob: -12.375066757202148
    4. ',
' → logprob: -12.500066757202148
    5. '),' → logprob: -15.500066757202148
    6. ')' → logprob: -15.750066757202148
    7. ',

' → logprob: -16.25006675720215
    8. '   ' → logprob: -17.12506675720215
    9. ',)' → logprob: -17.62506675720215
    10. ' ' → logprob: -18.87506675720215

Token 350: ' current' (ID: 2208)
  Prédit: ' current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' current' → logprob: -0.03804286941885948
    2. 'current' → logprob: -3.2880427837371826
    3. '   ' → logprob: -13.788043022155762
    4. '(current' → logprob: -15.163043022155762
    5. '	current' → logprob: -16.413042068481445
    6. '.current' → logprob: -17.663042068481445
    7. ',current' → logprob: -17.788042068481445
    8. '    ' → logprob: -17.913042068481445
    9. '_current' → logprob: -17.913042068481445
    10. 'Current' → logprob: -18.038042068481445

Token 351: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.5776860184123507e-06
    2. 'y' → logprob: -13.00000286102295
    3. '_x' → logprob: -15.12500286102295
    4. 'current' → logprob: -17.125001907348633
    5. '_' → logprob: -17.500001907348633
    6. ')' → logprob: -18.500001907348633
    7. ')_' → logprob: -18.500001907348633
    8. ' _' → logprob: -18.875001907348633
    9. '_current' → logprob: -19.125001907348633
    10. '_)' → logprob: -19.125001907348633

Token 352: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519565224647522
    2. '+' → logprob: -1.5019564628601074
    3. ')' → logprob: -10.626956939697266
    4. ' +
' → logprob: -13.501956939697266
    5. '+
' → logprob: -14.626956939697266
    6. '+)' → logprob: -14.751956939697266
    7. ')+' → logprob: -14.876956939697266
    8. ' )' → logprob: -15.126956939697266
    9. '<|end|>' → logprob: -16.001956939697266
    10. ' ' → logprob: -16.376956939697266

Token 353: ' step' (ID: 5983)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.011048528365790844
    2. ' step' → logprob: -4.511048316955566
    3. '_step' → logprob: -15.011048316955566
    4. '   ' → logprob: -16.261049270629883
    5. '	step' → logprob: -16.386049270629883
    6. '(step' → logprob: -16.636049270629883
    7. ' ' → logprob: -16.886049270629883
    8. ')' → logprob: -16.886049270629883
    9. 'Step' → logprob: -17.261049270629883
    10. 'steps' → logprob: -18.761049270629883

Token 354: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00036156410351395607
    2. '_size' → logprob: -8.250361442565918
    3. 'y' → logprob: -9.375361442565918
    4. '_step' → logprob: -11.625361442565918
    5. 'step' → logprob: -12.750361442565918
    6. '_x' → logprob: -13.375361442565918
    7. ')' → logprob: -14.000361442565918
    8. '_' → logprob: -14.375361442565918
    9. 'size' → logprob: -14.875361442565918
    10. 'Y' → logprob: -16.125362396240234

Token 355: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -15.75
    4. ')#' → logprob: -19.375
    5. '))' → logprob: -19.625
    6. ')return' → logprob: -19.75
    7. ')`' → logprob: -20.125
    8. '}' → logprob: -20.125
    9. ')}' → logprob: -20.25
    10. '),' → logprob: -20.875

Token 356: 'start' (ID: 5236)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.3674609959125519
    2. '
' → logprob: -1.2424609661102295
    3. '#' → logprob: -4.742461204528809
    4. '(target' → logprob: -6.367461204528809
    5. '[target' → logprob: -6.617461204528809
    6. '<|end|>' → logprob: -6.617461204528809
    7. ',' → logprob: -6.992461204528809
    8. ' target' → logprob: -6.992461204528809
    9. ',target' → logprob: -7.117461204528809
    10. '\n' → logprob: -7.617461204528809

Token 357: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.25213244557380676
    2. '_' → logprob: -1.5021324157714844
    3. '_coordinates' → logprob: -10.377132415771484
    4. '_coords' → logprob: -10.502132415771484
    5. '<|end|>' → logprob: -11.002132415771484
    6. '_,' → logprob: -11.002132415771484
    7. '_)' → logprob: -11.252132415771484
    8. '_position' → logprob: -11.377132415771484
    9. '_point' → logprob: -11.377132415771484
    10. ' _' → logprob: -11.377132415771484

Token 358: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29540303349494934
    2. ',' → logprob: -1.545403003692627
    3. '=' → logprob: -3.545403003692627
    4. ' ,' → logprob: -4.295403003692627
    5. ' ' → logprob: -10.420403480529785
    6. ',start' → logprob: -11.920403480529785
    7. ' ' → logprob: -12.920403480529785
    8. ',current' → logprob: -13.045403480529785
    9. ' =)' → logprob: -13.170403480529785
    10. ')' → logprob: -13.420403480529785

Token 359: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.08906127512454987
    2. ' start' → logprob: -2.4640612602233887
    3. '=' → logprob: -9.964061737060547
    4. ' =' → logprob: -10.339061737060547
    5. 'target' → logprob: -10.464061737060547
    6. '=start' → logprob: -12.339061737060547
    7. ' ' → logprob: -12.464061737060547
    8. ' target' → logprob: -12.839061737060547
    9. '<|end|>' → logprob: -13.839061737060547
    10. '0' → logprob: -14.589061737060547

Token 360: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0019901362247765064
    2. '_' → logprob: -6.25199031829834
    3. '_,' → logprob: -10.00199031829834
    4. ',' → logprob: -11.37699031829834
    5. '_x' → logprob: -12.50199031829834
    6. 'y' → logprob: -14.75199031829834
    7. ',_' → logprob: -15.00199031829834
    8. '_=' → logprob: -16.626989364624023
    9. ' _' → logprob: -17.251989364624023
    10. '_

' → logprob: -17.751989364624023

Token 361: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761939883232117
    2. '=' → logprob: -0.8261939883232117
    3. ',' → logprob: -8.326193809509277
    4. '=input' → logprob: -11.451193809509277
    5. '=int' → logprob: -13.951193809509277
    6. '=user' → logprob: -16.076194763183594
    7. '=

' → logprob: -16.326194763183594
    8. ' =
' → logprob: -16.576194763183594
    9. ')' → logprob: -16.701194763183594
    10. ' ,' → logprob: -16.826194763183594

Token 362: ' ' (ID: 220)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.707007646560669
    2. ' map' → logprob: -0.707007646560669
    3. '0' → logprob: -4.58200740814209
    4. 'target' → logprob: -6.70700740814209
    5. ' ' → logprob: -7.20700740814209
    6. '1' → logprob: -7.70700740814209
    7. ' target' → logprob: -7.83200740814209
    8. 'int' → logprob: -8.70700740814209
    9. '[' → logprob: -8.70700740814209
    10. ' [' → logprob: -8.83200740814209

Token 363: '0' (ID: 15)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011266027577221394
    2. ' map' → logprob: -4.761266231536865
    3. '0' → logprob: -6.386266231536865
    4. '[' → logprob: -7.386266231536865
    5. 'target' → logprob: -8.761265754699707
    6. '(map' → logprob: -9.136265754699707
    7. '1' → logprob: -10.886265754699707
    8. 'list' → logprob: -11.761265754699707
    9. 'int' → logprob: -11.886265754699707
    10. ' [' → logprob: -11.886265754699707

Token 364: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003253335307817906
    2. ',target' → logprob: -8.375325202941895
    3. '<|end|>' → logprob: -9.750325202941895
    4. ' ,' → logprob: -11.125325202941895
    5. ',
' → logprob: -11.750325202941895
    6. ',start' → logprob: -12.625325202941895
    7. 'target' → logprob: -13.125325202941895
    8. ',current' → logprob: -13.500325202941895
    9. ',user' → logprob: -13.625325202941895
    10. ',input' → logprob: -14.000325202941895

Token 365: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009755974635481834
    2. ' ' → logprob: -4.634756088256836
    3. '   ' → logprob: -18.447256088256836
    4. '  ' → logprob: -18.572256088256836
    5. '1' → logprob: -18.884756088256836
    6. '۰' → logprob: -19.009756088256836
    7. ' ' → logprob: -19.134756088256836
    8. '<|end|>' → logprob: -19.822256088256836
    9. '```' → logprob: -19.884756088256836
    10. '2' → logprob: -19.947256088256836

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '۰' → logprob: -19.375003814697266
    4. '   ' → logprob: -20.812503814697266
    5. '1' → logprob: -20.812503814697266
    6. 'start' → logprob: -20.875003814697266
    7. '<|end|>' → logprob: -21.125003814697266
    8. '  ' → logprob: -21.250003814697266
    9. '```' → logprob: -21.625003814697266
    10. '00' → logprob: -21.812503814697266

Token 367: '
' (ID: 198)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -1.282920129597187e-05
    2. '
' → logprob: -12.500012397766113
    3. ' target' → logprob: -12.750012397766113
    4. '(target' → logprob: -12.875012397766113
    5. '[target' → logprob: -14.125012397766113
    6. 'import' → logprob: -14.750012397766113
    7. 'input' → logprob: -15.125012397766113
    8. '#' → logprob: -15.375012397766113
    9. ',target' → logprob: -15.500012397766113
    10. 'move' → logprob: -15.500012397766113

Token 368: 'target' (ID: 10857)
  Prédit: 'target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -2.7848862373502925e-05
    2. '(target' → logprob: -11.000027656555176
    3. ' target' → logprob: -12.000027656555176
    4. '
' → logprob: -13.250027656555176
    5. 'start' → logprob: -14.000027656555176
    6. 'move' → logprob: -15.000027656555176
    7. ',target' → logprob: -15.000027656555176
    8. '0' → logprob: -15.125027656555176
    9. '[target' → logprob: -15.250027656555176
    10. 'import' → logprob: -15.250027656555176

Token 369: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -9.686778503237292e-05
    2. '_' → logprob: -9.250097274780273
    3. 'x' → logprob: -15.125097274780273
    4. ' _' → logprob: -16.125097274780273
    5. '_y' → logprob: -16.750097274780273
    6. '```' → logprob: -16.875097274780273
    7. '_
' → logprob: -17.000097274780273
    8. '=_' → logprob: -17.125097274780273
    9. '_=' → logprob: -17.250097274780273
    10. '}_' → logprob: -17.625097274780273

Token 370: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3038538694381714
    2. ',' → logprob: -1.5538538694381714
    3. '=' → logprob: -3.053853988647461
    4. ' ,' → logprob: -5.678853988647461
    5. ' =
' → logprob: -13.303853988647461
    6. '<|end|>' → logprob: -14.178853988647461
    7. ')' → logprob: -14.678853988647461
    8. ' ' → logprob: -14.803853988647461
    9. ' ' → logprob: -14.928853988647461
    10. ' =",' → logprob: -15.178853988647461

Token 371: ' target' (ID: 3783)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5821124315261841
    2. 'int' → logprob: -1.207112431526184
    3. ' int' → logprob: -2.9571123123168945
    4. ' ' → logprob: -3.2071123123168945
    5. '10' → logprob: -3.3321123123168945
    6. '5' → logprob: -5.2071123123168945
    7. '20' → logprob: -6.0821123123168945
    8. '7' → logprob: -7.3321123123168945
    9. '2' → logprob: -7.4571123123168945
    10. 'move' → logprob: -7.4571123123168945

Token 372: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00020830852736253291
    2. 'y' → logprob: -8.500207901000977
    3. '_x' → logprob: -12.875207901000977
    4. '=' → logprob: -13.625207901000977
    5. '_' → logprob: -14.250207901000977
    6. 'Y' → logprob: -14.875207901000977
    7. ' =' → logprob: -17.500207901000977
    8. '=_' → logprob: -17.500207901000977
    9. '_=' → logprob: -17.750207901000977
    10. '<|end|>' → logprob: -17.750207901000977

Token 373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3133057951927185
    2. '=' → logprob: -1.3133058547973633
    3. ',' → logprob: -10.063305854797363
    4. '=input' → logprob: -14.313305854797363
    5. ' ,' → logprob: -15.688305854797363
    6. '=int' → logprob: -15.813305854797363
    7. ' =
' → logprob: -16.063304901123047
    8. ' ' → logprob: -16.313304901123047
    9. ')' → logprob: -16.438304901123047
    10. '=
' → logprob: -16.563304901123047

Token 374: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.47781604528427124
    2. ' map' → logprob: -0.9778160452842712
    3. 'int' → logprob: -6.102816104888916
    4. ' ' → logprob: -8.102815628051758
    5. '10' → logprob: -8.352815628051758
    6. '5' → logprob: -8.602815628051758
    7. ' int' → logprob: -9.227815628051758
    8. '1' → logprob: -9.352815628051758
    9. '[int' → logprob: -9.602815628051758
    10. '20' → logprob: -9.602815628051758

Token 375: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.005976554471999407
    2. 'int' → logprob: -5.130976676940918
    3. '(' → logprob: -10.755976676940918
    4. '(input' → logprob: -11.755976676940918
    5. '<int' → logprob: -11.880976676940918
    6. '[int' → logprob: -12.005976676940918
    7. 'input' → logprob: -13.380976676940918
    8. '(lambda' → logprob: -13.505976676940918
    9. '=int' → logprob: -14.130976676940918
    10. '(
' → logprob: -14.755976676940918

Token 376: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7353302240371704
    2. '(input' → logprob: -0.7353302240371704
    3. ',input' → logprob: -3.235330104827881
    4. ' input' → logprob: -6.985330104827881
    5. ')' → logprob: -7.360330104827881
    6. ',' → logprob: -8.110330581665039
    7. '(' → logprob: -9.860330581665039
    8. '=input' → logprob: -10.485330581665039
    9. '	input' → logprob: -12.610330581665039
    10. '[input' → logprob: -12.610330581665039

Token 377: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00015860427811276168
    2. ' input' → logprob: -8.750158309936523
    3. '(input' → logprob: -16.875158309936523
    4. ',input' → logprob: -17.875158309936523
    5. '[input' → logprob: -19.500158309936523
    6. '=input' → logprob: -20.375158309936523
    7. ')' → logprob: -20.500158309936523
    8. '	input' → logprob: -20.625158309936523
    9. '<input' → logprob: -20.750158309936523
    10. '_input' → logprob: -21.125158309936523

Token 378: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9623810658231378e-05
    2. '()' → logprob: -10.875020027160645
    3. ' ().' → logprob: -14.375020027160645
    4. '())' → logprob: -17.625019073486328
    5. '()
' → logprob: -18.125019073486328
    6. '(' → logprob: -18.125019073486328
    7. '.split' → logprob: -18.375019073486328
    8. '()).' → logprob: -18.500019073486328
    9. ')' → logprob: -19.125019073486328
    10. 'split' → logprob: -19.500019073486328

Token 379: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.596781946020201e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -14.750045776367188
    4. '(split' → logprob: -16.375045776367188
    5. 'rstrip' → logprob: -18.000045776367188
    6. 'spl' → logprob: -18.375045776367188
    7. '().' → logprob: -18.625045776367188
    8. '.split' → logprob: -19.875045776367188
    9. 'plit' → logprob: -20.000045776367188
    10. 's' → logprob: -20.125045776367188

Token 380: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02417275309562683
    2. '()' → logprob: -3.774172782897949
    3. ')' → logprob: -7.024172782897949
    4. '(' → logprob: -10.64917278289795
    5. '())
' → logprob: -12.27417278289795
    6. '()))' → logprob: -12.27417278289795
    7. '()]' → logprob: -14.14917278289795
    8. ' ())' → logprob: -14.27417278289795
    9. '(),' → logprob: -14.64917278289795
    10. '())

' → logprob: -15.02417278289795

Token 381: 'if' (ID: 366)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.014155162498354912
    2. 'steps' → logprob: -5.014155387878418
    3. 'path' → logprob: -5.389155387878418
    4. 'positions' → logprob: -7.139155387878418
    5. 'while' → logprob: -7.389155387878418
    6. 'x' → logprob: -7.639155387878418
    7. 'position' → logprob: -8.014155387878418
    8. 'result' → logprob: -8.389155387878418
    9. ' current' → logprob: -9.389155387878418
    10. 'curr' → logprob: -10.139155387878418

Token 382: ' move' (ID: 5275)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.770146369934082
    2. 'abs' → logprob: -1.395146369934082
    3. ' (' → logprob: -2.895146369934082
    4. 'start' → logprob: -2.895146369934082
    5. '(abs' → logprob: -2.895146369934082
    6. ' start' → logprob: -3.020146369934082
    7. ' move' → logprob: -3.395146369934082
    8. '(start' → logprob: -4.145146369934082
    9. 'move' → logprob: -4.520146369934082
    10. '(move' → logprob: -5.520146369934082

Token 383: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -0.0008538239635527134
    2. '_' → logprob: -7.125854015350342
    3. '_steps' → logprob: -10.125853538513184
    4. ' _' → logprob: -13.125853538513184
    5. '_size' → logprob: -13.125853538513184
    6. '_s' → logprob: -13.125853538513184
    7. '_move' → logprob: -14.625853538513184
    8. '_STEP' → logprob: -14.875853538513184
    9. '_x' → logprob: -15.500853538513184
    10. '=' → logprob: -15.625853538513184

Token 384: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -1.1472419600977446e-06
    2. 'size' → logprob: -14.375000953674316
    3. '_' → logprob: -15.125000953674316
    4. '_SIZE' → logprob: -15.625000953674316
    5. '_s' → logprob: -16.875001907348633
    6. ' size' → logprob: -18.250001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '<size' → logprob: -18.625001907348633
    9. '<=' → logprob: -18.625001907348633
    10. '>' → logprob: -18.750001907348633

Token 385: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.873246431350708
    2. ' >=' → logprob: -1.373246431350708
    3. ' <=' → logprob: -1.873246431350708
    4. '>' → logprob: -2.498246431350708
    5. ' ==' → logprob: -3.248246431350708
    6. ' <' → logprob: -4.123246192932129
    7. '>=' → logprob: -4.123246192932129
    8. '==' → logprob: -4.623246192932129
    9. '<=' → logprob: -4.873246192932129
    10. ' !=' → logprob: -6.498246192932129

Token 386: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7385154428193346e-05
    2. ' ' → logprob: -10.37503719329834
    3. '3' → logprob: -12.37503719329834
    4. 'move' → logprob: -14.00003719329834
    5. '1' → logprob: -14.87503719329834
    6. 'target' → logprob: -15.50003719329834
    7. '
' → logprob: -15.62503719329834
    8. '```' → logprob: -15.87503719329834
    9. '10' → logprob: -16.125038146972656
    10. '4' → logprob: -16.500038146972656

Token 387: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.125003814697266
    3. '3' → logprob: -14.250003814697266
    4. '1' → logprob: -15.250003814697266
    5. '10' → logprob: -15.375003814697266
    6. 'move' → logprob: -15.500003814697266
    7. '
' → logprob: -16.875003814697266
    8. '4' → logprob: -17.500003814697266
    9. '5' → logprob: -17.750003814697266
    10. '==' → logprob: -18.000003814697266

Token 388: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.2428286373615265
    2. ' ==' → logprob: -1.992828607559204
    3. '!=' → logprob: -3.117828607559204
    4. ' !=' → logprob: -3.367828607559204
    5. ':' → logprob: -7.742828845977783
    6. ' :' → logprob: -9.617828369140625
    7. '=' → logprob: -10.617828369140625
    8. ' or' → logprob: -11.367828369140625
    9. '>' → logprob: -12.367828369140625
    10. '==
' → logprob: -12.492828369140625

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05125385895371437
    2. '1' → logprob: -3.1762537956237793
    3. ' ' → logprob: -4.801253795623779
    4. 'target' → logprob: -15.238754272460938
    5. '=' → logprob: -15.551254272460938
    6. '```' → logprob: -15.613754272460938
    7. 'move' → logprob: -16.801254272460938
    8. 'in' → logprob: -16.863754272460938
    9. '   ' → logprob: -16.988754272460938
    10. '۰' → logprob: -17.051254272460938

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0062233563512563705
    2. '1' → logprob: -5.131223201751709
    3. ' ' → logprob: -8.131223678588867
    4. '```' → logprob: -16.381223678588867
    5. '
' → logprob: -16.818723678588867
    6. 'in' → logprob: -17.381223678588867
    7. '۰' → logprob: -17.381223678588867
    8. '=' → logprob: -17.443723678588867
    9. '

' → logprob: -17.631223678588867
    10. '2' → logprob: -17.631223678588867

Token 391: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3553963303565979
    2. ':
' → logprob: -1.2303962707519531
    3. ' and' → logprob: -5.980396270751953
    4. ' :' → logprob: -6.230396270751953
    5. ' :
' → logprob: -6.355396270751953
    6. ' or' → logprob: -7.355396270751953
    7. 'and' → logprob: -10.980396270751953
    8. '   ' → logprob: -11.480396270751953
    9. ':return' → logprob: -11.730396270751953
    10. ':
' → logprob: -11.980396270751953

Token 392: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0445877313613892
    2. '(abs' → logprob: -1.1695877313613892
    3. '(move' → logprob: -2.0445876121520996
    4. '(start' → logprob: -2.5445876121520996
    5. '(target' → logprob: -3.0445876121520996
    6. 'abs' → logprob: -3.7945876121520996
    7. ' abs' → logprob: -4.4195876121521
    8. '((' → logprob: -4.4195876121521
    9. 'start' → logprob: -4.6695876121521
    10. '(not' → logprob: -5.2945876121521

Token 393: 'target' (ID: 10857)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6086239218711853
    2. 'start' → logprob: -1.73362398147583
    3. '(abs' → logprob: -2.23362398147583
    4. 'target' → logprob: -2.73362398147583
    5. '(target' → logprob: -2.73362398147583
    6. '(start' → logprob: -3.23362398147583
    7. ' (' → logprob: -6.98362398147583
    8. ' abs' → logprob: -7.23362398147583
    9. 'move' → logprob: -7.85862398147583
    10. '(move' → logprob: -8.608623504638672

Token 394: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.1008713702030946e-06
    2. '_y' → logprob: -13.375001907348633
    3. '_' → logprob: -15.000001907348633
    4. 'x' → logprob: -15.875001907348633
    5. '
' → logprob: -18.500001907348633
    6. '[' → logprob: -18.625001907348633
    7. ' _' → logprob: -18.750001907348633
    8. '_
' → logprob: -18.750001907348633
    9. 'import' → logprob: -19.000001907348633
    10. '```' → logprob: -19.375001907348633

Token 395: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5272204279899597
    2. '%' → logprob: -1.1522204875946045
    3. ' +' → logprob: -2.6522204875946045
    4. ' %' → logprob: -4.652220249176025
    5. '!=' → logprob: -5.027220249176025
    6. '-' → logprob: -5.152220249176025
    7. ' !=' → logprob: -7.152220249176025
    8. ' -' → logprob: -8.402220726013184
    9. '==' → logprob: -9.152220726013184
    10. ',' → logprob: -9.152220726013184

Token 396: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.004627598915249109
    2. ' target' → logprob: -5.379627704620361
    3. '   ' → logprob: -12.379627227783203
    4. '	target' → logprob: -13.754627227783203
    5. '  ' → logprob: -14.254627227783203
    6. '    ' → logprob: -15.129627227783203
    7. ' ' → logprob: -15.254627227783203
    8. '(target' → logprob: -15.379627227783203
    9. '
' → logprob: -15.504627227783203
    10. 'abs' → logprob: -15.629627227783203

Token 397: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0028073713183403015
    2. 'y' → logprob: -5.877807140350342
    3. '_x' → logprob: -13.2528076171875
    4. 'target' → logprob: -15.1278076171875
    5. ' y' → logprob: -15.6278076171875
    6. '_' → logprob: -16.2528076171875
    7. 'Y' → logprob: -16.5028076171875
    8. '   ' → logprob: -17.1278076171875
    9. '	y' → logprob: -17.2528076171875
    10. ' ' → logprob: -17.5028076171875

Token 398: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014025058771949261
    2. ' )' → logprob: -9.000140190124512
    3. ')%' → logprob: -11.125140190124512
    4. ')
' → logprob: -14.375140190124512
    5. '   ' → logprob: -15.000140190124512
    6. '-' → logprob: -15.250140190124512
    7. ' ' → logprob: -15.875140190124512
    8. ')

' → logprob: -16.000141143798828
    9. '）' → logprob: -16.000141143798828
    10. '```' → logprob: -16.125141143798828

Token 399: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.05488893762230873
    2. ' %' → logprob: -2.929888963699341
    3. ')' → logprob: -12.554888725280762
    4. ' ' → logprob: -13.804888725280762
    5. ' ' → logprob: -14.304888725280762
    6. '%
' → logprob: -14.679888725280762
    7. '   ' → logprob: -15.429888725280762
    8. '!=' → logprob: -16.054889678955078
    9. '&' → logprob: -16.179889678955078
    10. '>' → logprob: -16.179889678955078

Token 400: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019313741941004992
    2. ' ' → logprob: -6.251931190490723
    3. 'move' → logprob: -13.376931190490723
    4. '(' → logprob: -14.876931190490723
    5. '(move' → logprob: -15.376931190490723
    6. '
' → logprob: -15.876931190490723
    7. ' move' → logprob: -15.876931190490723
    8. '1' → logprob: -15.876931190490723
    9. '   ' → logprob: -16.00193214416504
    10. '```' → logprob: -16.50193214416504

Token 401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '1' → logprob: -17.125001907348633
    4. 'move' → logprob: -17.125001907348633
    5. '
' → logprob: -17.250001907348633
    6. '(' → logprob: -18.750001907348633
    7. '{' → logprob: -19.000001907348633
    8. '۲' → logprob: -19.125001907348633
    9. '```' → logprob: -19.750001907348633
    10. '２' → logprob: -19.875001907348633

Token 402: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03154558688402176
    2. '()!=' → logprob: -3.781545639038086
    3. ' !=' → logprob: -4.906545639038086
    4. '==' → logprob: -7.781545639038086
    5. ')!=' → logprob: -8.906545639038086
    6. '!' → logprob: -9.406545639038086
    7. '()' → logprob: -9.906545639038086
    8. ']!=' → logprob: -10.156545639038086
    9. '!=(' → logprob: -10.406545639038086
    10. '!==' → logprob: -10.906545639038086

Token 403: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024044280871748924
    2. ' print' → logprob: -4.399044513702393
    3. 'print' → logprob: -4.524044513702393
    4. ':' → logprob: -8.149044036865234
    5. '    
' → logprob: -8.899044036865234
    6. ':
' → logprob: -9.024044036865234
    7. '	print' → logprob: -10.024044036865234
    8. '
' → logprob: -11.524044036865234
    9. ' 
' → logprob: -12.274044036865234
    10. '    ' → logprob: -12.399044036865234

Token 404: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00028624574770219624
    2. '   ' → logprob: -8.375286102294922
    3. '    
' → logprob: -10.250286102294922
    4. ' print' → logprob: -11.250286102294922
    5. '
' → logprob: -12.250286102294922
    6. 'raise' → logprob: -13.500286102294922
    7. '  
' → logprob: -15.000286102294922
    8. '#print' → logprob: -15.250286102294922
    9. '	print' → logprob: -15.375286102294922
    10. '#' → logprob: -16.625286102294922

Token 405: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.002855159342288971
    2. '("' → logprob: -6.12785530090332
    3. '(' → logprob: -7.87785530090332
    4. '-' → logprob: -8.62785530090332
    5. '("-' → logprob: -9.37785530090332
    6. '('' → logprob: -10.75285530090332
    7. '(
' → logprob: -13.12785530090332
    8. '()' → logprob: -13.25285530090332
    9. '(False' → logprob: -14.25285530090332
    10. '('-' → logprob: -14.75285530090332

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -15.5
    3. ' ' → logprob: -16.625
    4. '-' → logprob: -17.375
    5. ' -' → logprob: -18.1875
    6. '
' → logprob: -18.25
    7. '3' → logprob: -19.0625
    8. ')' → logprob: -19.1875
    9. '```' → logprob: -19.1875
    10. '   ' → logprob: -19.25

Token 407: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.47491785883903503
    2. ')' → logprob: -0.9749178886413574
    3. '   ' → logprob: -7.224917888641357
    4. ' )
' → logprob: -9.7249174118042
    5. ' )' → logprob: -10.3499174118042
    6. ')
' → logprob: -11.0999174118042
    7. 'else' → logprob: -12.4749174118042
    8. ')return' → logprob: -14.5999174118042
    9. ')

' → logprob: -14.9749174118042
    10. '
' → logprob: -15.5999174118042

Token 408: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.006086515262722969
    2. '   ' → logprob: -5.631086349487305
    3. 'elif' → logprob: -6.006086349487305
    4. ')' → logprob: -11.881086349487305
    5. '    
' → logprob: -12.006086349487305
    6. ' else' → logprob: -12.881086349487305
    7. '```' → logprob: -13.881086349487305
    8. '<|end|>' → logprob: -13.881086349487305
    9. '
' → logprob: -14.631086349487305
    10. '_else' → logprob: -15.256086349487305

Token 409: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026368575170636177
    2. ':
' → logprob: -3.6513686180114746
    3. '   ' → logprob: -10.276368141174316
    4. ' :' → logprob: -10.776368141174316
    5. ' :
' → logprob: -12.026368141174316
    6. ',' → logprob: -12.776368141174316
    7. ':

' → logprob: -14.151368141174316
    8. '.' → logprob: -14.276368141174316
    9. ':
' → logprob: -14.401368141174316
    10. '):
' → logprob: -14.901368141174316

Token 410: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.05160466209053993
    2. ' current' → logprob: -3.301604747772217
    3. 'x' → logprob: -5.301604747772217
    4. '   ' → logprob: -5.426604747772217
    5. 'steps' → logprob: -5.926604747772217
    6. 'path' → logprob: -7.551604747772217
    7. ' steps' → logprob: -8.176604270935059
    8. ' x' → logprob: -9.426604270935059
    9. 'visited' → logprob: -9.426604270935059
    10. 'while' → logprob: -9.551604270935059

Token 411: ' path' (ID: 3104)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.34337708353996277
    2. 'steps' → logprob: -1.3433771133422852
    3. 'x' → logprob: -3.968377113342285
    4. 'moves' → logprob: -5.718377113342285
    5. 'path' (adapté à ' path') → logprob: -6.468377113342285
    6. 'from' → logprob: -6.468377113342285
    7. 'distance' → logprob: -6.468377113342285
    8. 'curr' → logprob: -7.218377113342285
    9. 'visited' → logprob: -7.468377113342285
    10. 'dist' → logprob: -8.218377113342285

Token 412: '_sequence' (ID: 55606)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016483327373862267
    2. '=' → logprob: -4.141483306884766
    3. '_' → logprob: -7.891483306884766
    4. '=[]' → logprob: -9.641483306884766
    5. '_=' → logprob: -13.016483306884766
    6. '=[]
' → logprob: -13.641483306884766
    7. ')' → logprob: -13.766483306884766
    8. ' ' → logprob: -14.016483306884766
    9. ',' → logprob: -14.016483306884766
    10. '_path' → logprob: -14.141483306884766

Token 413: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008659012615680695
    2. '=' → logprob: -4.7586588859558105
    3. '=[]' → logprob: -10.633659362792969
    4. ',' → logprob: -11.008659362792969
    5. '=[]
' → logprob: -13.883659362792969
    6. '_' → logprob: -14.258659362792969
    7. ')' → logprob: -14.383659362792969
    8. ' ' → logprob: -14.758659362792969
    9. ' =[' → logprob: -15.508659362792969
    10. '[]' → logprob: -15.758659362792969

Token 414: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0001975802006199956
    2. '[]' → logprob: -9.250197410583496
    3. '[' → logprob: -10.000197410583496
    4. '[]
' → logprob: -10.500197410583496
    5. ' [(' → logprob: -10.750197410583496
    6. '[start' → logprob: -12.000197410583496
    7. '[((' → logprob: -14.625197410583496
    8. '   ' → logprob: -15.250197410583496
    9. '[]

' → logprob: -16.875198364257812
    10. '[current' → logprob: -17.000198364257812

Token 415: '   ' (ID: 271)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.16625052690505981
    2. ' current' → logprob: -2.041250467300415
    3. '   ' → logprob: -3.791250467300415
    4. ',' → logprob: -8.666250228881836
    5. '```' → logprob: -8.666250228881836
    6. ',current' → logprob: -9.166250228881836
    7. '    
' → logprob: -9.541250228881836
    8. '
' → logprob: -10.041250228881836
    9. 'x' → logprob: -10.291250228881836
    10. '_current' → logprob: -10.416250228881836

Token 416: ' while' (ID: 2049)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.0010869937250390649
    2. 'cur' → logprob: -7.501087188720703
    3. 'curr' → logprob: -8.001087188720703
    4. 'x' → logprob: -8.751087188720703
    5. 'cx' → logprob: -10.876087188720703
    6. ' current' → logprob: -11.251087188720703
    7. 'while' (adapté à ' while') → logprob: -11.751087188720703
    8. '    
' → logprob: -14.501087188720703
    9. '```' → logprob: -16.876087188720703
    10. 'next' → logprob: -17.126087188720703

Token 417: ' start' (ID: 1604)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.003939955960959196
    2. 'start' → logprob: -6.253940105438232
    3. ' (' → logprob: -6.628940105438232
    4. '(True' → logprob: -7.503940105438232
    5. '(not' → logprob: -9.878939628601074
    6. '(current' → logprob: -10.878939628601074
    7. '(abs' → logprob: -11.003939628601074
    8. ' start' → logprob: -11.128939628601074
    9. '(target' → logprob: -11.128939628601074
    10. 'True' → logprob: -12.253939628601074

Token 418: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.0001363168703392148
    2. '_' → logprob: -9.000136375427246
    3. 'x' → logprob: -12.500136375427246
    4. '!=' → logprob: -12.500136375427246
    5. '```' → logprob: -13.000136375427246
    6. '_y' → logprob: -14.375136375427246
    7. '<x' → logprob: -14.375136375427246
    8. ' !=' → logprob: -14.500136375427246
    9. '}_' → logprob: -15.875136375427246
    10. '_<' → logprob: -15.875136375427246

Token 419: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.02350657992064953
    2. ' !=' → logprob: -3.7735066413879395
    3. ',' → logprob: -8.648506164550781
    4. ')!=' → logprob: -9.648506164550781
    5. '()!=' → logprob: -11.648506164550781
    6. ']!=' → logprob: -11.898506164550781
    7. '!=(' → logprob: -12.523506164550781
    8. ',target' → logprob: -14.648506164550781
    9. '!==' → logprob: -14.773506164550781
    10. '!='' → logprob: -15.023506164550781

Token 420: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -2.7610454708337784e-05
    2. ' target' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.62502670288086
    4. '
' → logprob: -19.75002670288086
    5. '	target' → logprob: -20.25002670288086
    6. '(target' → logprob: -20.37502670288086
    7. ',target' → logprob: -20.62502670288086
    8. '[target' → logprob: -21.50002670288086
    9. '_target' → logprob: -22.25002670288086
    10. 'taget' → logprob: -22.62502670288086

Token 421: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -1.0325924449716695e-05
    2. '_' → logprob: -11.62501049041748
    3. '_target' → logprob: -14.50001049041748
    4. 'x' → logprob: -14.62501049041748
    5. '_y' → logprob: -16.000009536743164
    6. ' _' → logprob: -16.625009536743164
    7. '```' → logprob: -16.875009536743164
    8. '_
' → logprob: -17.250009536743164
    9. 'target' → logprob: -17.375009536743164
    10. ''_' → logprob: -17.875009536743164

Token 422: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0037107658572494984
    2. 'or' → logprob: -5.628710746765137
    3. ' and' → logprob: -9.253710746765137
    4. 'and' → logprob: -11.378710746765137
    5. '	or' → logprob: -13.128710746765137
    6. ' ' → logprob: -14.003710746765137
    7. '   ' → logprob: -14.253710746765137
    8. '    ' → logprob: -17.378711700439453
    9. '```' → logprob: -17.503711700439453
    10. ',' → logprob: -18.003711700439453

Token 423: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.5759410858154297
    2. ' start' → logprob: -0.8259410858154297
    3. '   ' → logprob: -14.20094108581543
    4. '    ' → logprob: -14.57594108581543
    5. ' ' → logprob: -15.57594108581543
    6. '(start' → logprob: -15.57594108581543
    7. '	start' → logprob: -16.70094108581543
    8. '
' → logprob: -16.82594108581543
    9. ' ' → logprob: -17.57594108581543
    10. '  ' → logprob: -17.70094108581543

Token 424: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -2.339278580620885e-06
    2. '_' → logprob: -13.875001907348633
    3. '_x' → logprob: -14.125001907348633
    4. 'y' → logprob: -14.500001907348633
    5. ' _' → logprob: -17.125001907348633
    6. '_
' → logprob: -17.125001907348633
    7. '```' → logprob: -17.625001907348633
    8. '_start' → logprob: -18.625001907348633
    9. '__' → logprob: -18.875001907348633
    10. '_step' → logprob: -19.625001907348633

Token 425: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5236597061157227
    2. ' !=' → logprob: -0.8986597061157227
    3. '<|end|>' → logprob: -8.523659706115723
    4. ')!=' → logprob: -9.023659706115723
    5. '()!=' → logprob: -9.148659706115723
    6. '!=(' → logprob: -10.023659706115723
    7. ']!=' → logprob: -10.898659706115723
    8. '!==' → logprob: -11.398659706115723
    9. '!="' → logprob: -11.773659706115723
    10. '!' → logprob: -11.898659706115723

Token 426: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.004078639671206474
    2. ' target' → logprob: -5.5040788650512695
    3. '(target' → logprob: -15.62907886505127
    4. '	target' → logprob: -16.504077911376953
    5. '[target' → logprob: -17.754077911376953
    6. '   ' → logprob: -18.129077911376953
    7. ',target' → logprob: -19.254077911376953
    8. ' ' → logprob: -19.254077911376953
    9. '
' → logprob: -19.379077911376953
    10. '  ' → logprob: -20.629077911376953

Token 427: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.001675302512012422
    2. '_x' → logprob: -6.501675128936768
    3. '_' → logprob: -9.376675605773926
    4. 'y' → logprob: -9.376675605773926
    5. '_size' → logprob: -13.376675605773926
    6. '```' → logprob: -14.126675605773926
    7. 'x' → logprob: -15.001675605773926
    8. '_
' → logprob: -15.251675605773926
    9. '_step' → logprob: -16.12667465209961
    10. ' _' → logprob: -16.25167465209961

Token 428: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2519993185997009
    2. ':
' → logprob: -1.5019993782043457
    3. '   ' → logprob: -10.501998901367188
    4. '):
' → logprob: -10.876998901367188
    5. ':

' → logprob: -11.751998901367188
    6. ':
' → logprob: -12.876998901367188
    7. ',' → logprob: -13.001998901367188
    8. '():
' → logprob: -13.001998901367188
    9. '):' → logprob: -13.251998901367188
    10. ' :
' → logprob: -13.376998901367188

Token 429: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003233070601709187
    2. '```' → logprob: -8.500323295593262
    3. ' path' → logprob: -10.500323295593262
    4. '        
' → logprob: -10.750323295593262
    5. 'path' → logprob: -11.375323295593262
    6. ' step' → logprob: -11.375323295593262
    7. '[' → logprob: -11.625323295593262
    8. ' 
' → logprob: -12.375323295593262
    9. ',' → logprob: -12.500323295593262
    10. '   ' → logprob: -12.500323295593262

Token 430: ' start' (ID: 1604)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.08302538096904755
    2. 'next' → logprob: -2.5830254554748535
    3. ' step' → logprob: -7.0830254554748535
    4. ' current' → logprob: -7.0830254554748535
    5. ' new' → logprob: -7.3330254554748535
    6. ' nx' → logprob: -7.5830254554748535
    7. ' x' → logprob: -7.8330254554748535
    8. ' nxt' → logprob: -8.083024978637695
    9. 'x' → logprob: -8.458024978637695
    10. '       ' → logprob: -8.958024978637695

Token 431: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.000297685619443655
    2. ',' → logprob: -8.625297546386719
    3. '_,' → logprob: -9.500297546386719
    4. 'x' → logprob: -10.500297546386719
    5. ',_' → logprob: -11.875297546386719
    6. '_' → logprob: -13.375297546386719
    7. '=' → logprob: -13.500297546386719
    8. '```' → logprob: -13.500297546386719
    9. ',x' → logprob: -13.625297546386719
    10. ' =' → logprob: -13.750297546386719

Token 432: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.125210297293961e-05
    2. ',start' → logprob: -9.500081062316895
    3. ',target' → logprob: -13.000081062316895
    4. ',next' → logprob: -13.750081062316895
    5. ' ,' → logprob: -13.875081062316895
    6. ',new' → logprob: -14.250081062316895
    7. 'start' → logprob: -14.875081062316895
    8. ',end' → logprob: -15.250081062316895
    9. ',
' → logprob: -15.875081062316895
    10. ',current' → logprob: -16.12508201599121

Token 433: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0019294669618830085
    2. ' start' → logprob: -6.25192928314209
    3. '=' → logprob: -14.62692928314209
    4. '=start' → logprob: -15.50192928314209
    5. '(start' → logprob: -16.376930236816406
    6. '[start' → logprob: -16.876930236816406
    7. '_start' → logprob: -18.376930236816406
    8. ' =' → logprob: -18.626930236816406
    9. '<|end|>' → logprob: -18.626930236816406
    10. '	start' → logprob: -18.876930236816406

Token 434: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -3.011373155459296e-05
    2. 'y' → logprob: -10.750030517578125
    3. '_' → logprob: -11.875030517578125
    4. '_x' → logprob: -13.500030517578125
    5. '_,' → logprob: -16.375030517578125
    6. '```' → logprob: -17.125030517578125
    7. '=' → logprob: -17.750030517578125
    8. ',_' → logprob: -17.750030517578125
    9. '_
' → logprob: -18.000030517578125
    10. ' _' → logprob: -18.000030517578125

Token 435: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. ',' → logprob: -15.563261985778809
    4. '=
' → logprob: -16.438262939453125
    5. ')' → logprob: -17.813262939453125
    6. '=

' → logprob: -18.188262939453125
    7. '<|end|>' → logprob: -18.188262939453125
    8. '.=' → logprob: -18.438262939453125
    9. ')=' → logprob: -18.563262939453125
    10. ' =
' → logprob: -18.813262939453125

Token 436: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.2519291639328003
    2. 'compute' → logprob: -1.5019291639328003
    3. ' computer' → logprob: -17.626928329467773
    4. '.compute' → logprob: -17.751928329467773
    5. 'computer' → logprob: -18.126928329467773
    6. '   ' → logprob: -18.376928329467773
    7. '_compute' → logprob: -18.501928329467773
    8. '    ' → logprob: -19.001928329467773
    9. '
' → logprob: -19.876928329467773
    10. 'comput' → logprob: -21.251928329467773

Token 437: '_next' (ID: 25436)
  Prédit: '_next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_next' → logprob: -1.688212614681106e-05
    2. 'next' → logprob: -11.000017166137695
    3. '_' → logprob: -17.000017166137695
    4. ' next' → logprob: -18.000017166137695
    5. '_NEXT' → logprob: -18.500017166137695
    6. 'Next' → logprob: -18.750017166137695
    7. '_previous' → logprob: -19.250017166137695
    8. '_last' → logprob: -20.000017166137695
    9. '__' → logprob: -20.000017166137695
    10. '下一' → logprob: -20.250017166137695

Token 438: '_step' (ID: 27360)
  Prédit: '_step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_step' → logprob: -1.7432603272027336e-06
    2. 'step' → logprob: -13.500001907348633
    3. '_next' → logprob: -15.375001907348633
    4. '_steps' → logprob: -17.250001907348633
    5. 'Step' → logprob: -17.750001907348633
    6. '_STEP' → logprob: -17.750001907348633
    7. ' step' → logprob: -18.375001907348633
    8. '_' → logprob: -19.750001907348633
    9. '(step' → logprob: -20.375001907348633
    10. '_start' → logprob: -20.375001907348633

Token 439: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -2.339278580620885e-06
    2. '(' → logprob: -13.125001907348633
    3. ' (' → logprob: -16.125001907348633
    4. '(current' → logprob: -16.375001907348633
    5. 'start' → logprob: -17.375001907348633
    6. '(
' → logprob: -17.500001907348633
    7. '[start' → logprob: -19.750001907348633
    8. '```' → logprob: -19.750001907348633
    9. '(step' → logprob: -20.125001907348633
    10. '(st' → logprob: -20.125001907348633

Token 440: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -4.320199877838604e-07
    2. '_,' → logprob: -15.75
    3. ',' → logprob: -16.375
    4. 'x' → logprob: -16.75
    5. '_' → logprob: -17.5
    6. '_y' → logprob: -18.125
    7. ' _' → logprob: -19.125
    8. ',_' → logprob: -19.625
    9. ')' → logprob: -19.75
    10. '_
' → logprob: -19.875

Token 441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011045700375689194
    2. ',start' → logprob: -9.125110626220703
    3. ' ,' → logprob: -13.875110626220703
    4. ',
' → logprob: -15.000110626220703
    5. ',current' → logprob: -16.000110626220703
    6. ',end' → logprob: -17.125110626220703
    7. '   ' → logprob: -18.250110626220703
    8. '[start' → logprob: -18.375110626220703
    9. '```' → logprob: -18.500110626220703
    10. '‌,' → logprob: -18.750110626220703

Token 442: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7610454708337784e-05
    2. ' start' → logprob: -10.500027656555176
    3. '[start' → logprob: -20.37502670288086
    4. '(start' → logprob: -20.87502670288086
    5. '
' → logprob: -21.50002670288086
    6. '=start' → logprob: -21.50002670288086
    7. '	start' → logprob: -22.62502670288086
    8. ',start' → logprob: -23.00002670288086
    9. ')' → logprob: -23.12502670288086
    10. ' ' → logprob: -23.25002670288086

Token 443: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.00787348672747612
    2. '_x' → logprob: -5.75787353515625
    3. ',' → logprob: -6.38287353515625
    4. 'y' → logprob: -6.38287353515625
    5. '_,' → logprob: -6.88287353515625
    6. ',_' → logprob: -8.88287353515625
    7. 'x' → logprob: -9.88287353515625
    8. '_' → logprob: -10.25787353515625
    9. ',y' → logprob: -11.13287353515625
    10. '```' → logprob: -11.13287353515625

Token 444: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002842675894498825
    2. ')
' → logprob: -5.877842903137207
    3. '       ' → logprob: -10.377842903137207
    4. '<|end|>' → logprob: -12.877842903137207
    5. ')
' → logprob: -13.377842903137207
    6. '   ' → logprob: -14.377842903137207
    7. ' )' → logprob: -15.002842903137207
    8. ')

' → logprob: -15.002842903137207
    9. ')`' → logprob: -15.252842903137207
    10. '),' → logprob: -15.502842903137207

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002370329457335174
    2. 'path' → logprob: -9.000237464904785
    3. '   ' → logprob: -9.125237464904785
    4. '```' → logprob: -12.625237464904785
    5. ' path' → logprob: -14.000237464904785
    6. '	path' → logprob: -16.37523651123047
    7. '           ' → logprob: -16.50023651123047
    8. '
' → logprob: -17.37523651123047
    9. '``' → logprob: -17.37523651123047
    10. '      ' → logprob: -17.50023651123047

Token 446: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.01909831166267395
    2. '       ' → logprob: -4.269098281860352
    3. ' path' → logprob: -5.519098281860352
    4. '   ' → logprob: -7.019098281860352
    5. '```' → logprob: -11.394098281860352
    6. '           ' → logprob: -12.519098281860352
    7. '
' → logprob: -13.519098281860352
    8. '	path' → logprob: -13.894098281860352
    9. '``' → logprob: -14.519098281860352
    10. ' ' → logprob: -15.894098281860352

Token 447: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -3.128163257315464e-07
    2. '_sequences' → logprob: -16.375
    3. 'sequence' → logprob: -16.75
    4. '.append' → logprob: -17.125
    5. '_seq' → logprob: -18.25
    6. '_' → logprob: -18.375
    7. 'Sequence' → logprob: -18.75
    8. '_SEQUENCE' → logprob: -19.375
    9. '_append' → logprob: -19.625
    10. ' _' → logprob: -20.625

Token 448: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0003372502396814525
    2. '.' → logprob: -8.000337600708008
    3. '.app' → logprob: -14.625337600708008
    4. '.push' → logprob: -15.125337600708008
    5. '.ap' → logprob: -15.125337600708008
    6. '.setdefault' → logprob: -15.625337600708008
    7. '.add' → logprob: -15.750337600708008
    8. '.extend' → logprob: -15.875337600708008
    9. '.Append' → logprob: -16.000337600708008
    10. 'append' → logprob: -16.500337600708008

Token 449: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00015038289711810648
    2. '(' → logprob: -9.500150680541992
    3. '(f' → logprob: -9.500150680541992
    4. '(str' → logprob: -15.000150680541992
    5. '(((' → logprob: -15.250150680541992
    6. '(start' → logprob: -17.375150680541992
    7. ' ((' → logprob: -18.125150680541992
    8. '(('' → logprob: -18.625150680541992
    9. '   ' → logprob: -18.750150680541992
    10. '(
' → logprob: -19.375150680541992

Token 450: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.8087270038668066e-05
    2. ' start' → logprob: -10.500027656555176
    3. '   ' → logprob: -15.000027656555176
    4. '
' → logprob: -16.875028610229492
    5. ' ' → logprob: -17.250028610229492
    6. '(start' → logprob: -18.000028610229492
    7. '
' → logprob: -18.250028610229492
    8. '  ' → logprob: -18.875028610229492
    9. ')' → logprob: -19.875028610229492
    10. '    ' → logprob: -20.250028610229492

Token 451: '_x' (ID: 7054)
  Prédit: '_x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -2.696889623621246e-06
    2. 'x' → logprob: -12.87500286102295
    3. '_' → logprob: -17.625001907348633
    4. '_y' → logprob: -17.875001907348633
    5. '_
' → logprob: -18.875001907348633
    6. '```' → logprob: -20.000001907348633
    7. ' _' → logprob: -20.500001907348633
    8. '
' → logprob: -20.625001907348633
    9. '_,' → logprob: -20.750001907348633
    10. '_)' → logprob: -21.000001907348633

Token 452: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2961512513575144e-05
    2. ' ,' → logprob: -11.375022888183594
    3. ',
' → logprob: -11.875022888183594
    4. ',start' → logprob: -12.500022888183594
    5. '<|end|>' → logprob: -15.000022888183594
    6. '‌,' → logprob: -16.125022888183594
    7. ',path' → logprob: -17.125022888183594
    8. ',end' → logprob: -17.250022888183594
    9. ',

' → logprob: -17.375022888183594
    10. ',current' → logprob: -17.625022888183594

Token 453: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.004078401252627373
    2. ' start' → logprob: -5.504078388214111
    3. '       ' → logprob: -19.754077911376953
    4. '(start' → logprob: -20.379077911376953
    5. '	start' → logprob: -20.504077911376953
    6. 'step' → logprob: -20.754077911376953
    7. '[start' → logprob: -20.754077911376953
    8. '   ' → logprob: -20.879077911376953
    9. '
' → logprob: -20.879077911376953
    10. ' ' → logprob: -21.129077911376953

Token 454: '_y' (ID: 9410)
  Prédit: '_y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_y' → logprob: -0.0055869752541184425
    2. 'y' → logprob: -5.255587100982666
    3. ',' → logprob: -8.380586624145508
    4. '_,' → logprob: -9.630586624145508
    5. '```' → logprob: -11.255586624145508
    6. ')' → logprob: -11.755586624145508
    7. '_' → logprob: -11.755586624145508
    8. ',_' → logprob: -11.755586624145508
    9. ',y' → logprob: -12.380586624145508
    10. 'Y' → logprob: -12.630586624145508

Token 455: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1602320373058319
    2. '))' → logprob: -1.9102320671081543
    3. ')
' → logprob: -12.535231590270996
    4. '))
' → logprob: -12.660231590270996
    5. ')))' → logprob: -14.660231590270996
    6. '),' → logprob: -15.785231590270996
    7. ')}' → logprob: -15.910231590270996
    8. ')`' → logprob: -16.160232543945312
    9. ')**' → logprob: -17.535232543945312
    10. '))

' → logprob: -17.535232543945312

Token 456: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26114675402641296
    2. 'print' → logprob: -1.7611467838287354
    3. '   ' → logprob: -2.8861467838287354
    4. '```' → logprob: -6.636146545410156
    5. ' for' → logprob: -7.386146545410156
    6. '
' → logprob: -8.761146545410156
    7. '    
' → logprob: -10.011146545410156
    8. 'if' → logprob: -10.511146545410156
    9. '	for' → logprob: -12.011146545410156
    10. '  
' → logprob: -12.011146545410156

Token 457: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16111420094966888
    2. 'print' (adapté à ' print') → logprob: -1.91111421585083
    3. ' for' → logprob: -7.16111421585083
    4. '   ' → logprob: -9.536113739013672
    5. ' print' → logprob: -10.536113739013672
    6. '```' → logprob: -12.411113739013672
    7. '
' → logprob: -12.536113739013672
    8. 'if' → logprob: -12.911113739013672
    9. '    
' → logprob: -13.286113739013672
    10. 'n' → logprob: -13.786113739013672

Token 458: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.00021069261129014194
    2. 'len' → logprob: -8.625210762023926
    3. '(path' → logprob: -10.500210762023926
    4. '(' → logprob: -13.375210762023926
    5. '(move' → logprob: -13.875210762023926
    6. 'path' → logprob: -14.750210762023926
    7. '(*' → logprob: -15.750210762023926
    8. '((' → logprob: -16.25020980834961
    9. '('\' → logprob: -16.25020980834961
    10. ' len' → logprob: -16.75020980834961

Token 459: '(path' (ID: 10993)
  Prédit: '(path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -13.375001907348633
    3. 'path' → logprob: -15.875001907348633
    4. '(
' → logprob: -18.000001907348633
    5. ' path' → logprob: -18.750001907348633
    6. ')' → logprob: -19.000001907348633
    7. ',path' → logprob: -19.500001907348633
    8. '(paths' → logprob: -21.000001907348633
    9. '[path' → logprob: -21.125001907348633
    10. ' (' → logprob: -21.250001907348633

Token 460: '_sequence' (ID: 55606)
  Prédit: '(path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(path' → logprob: -0.0003721622342709452
    2. '_path' → logprob: -8.625371932983398
    3. 'path' → logprob: -9.625371932983398
    4. '_sequence' → logprob: -9.625371932983398
    5. '(' → logprob: -9.875371932983398
    6. ' path' → logprob: -12.500371932983398
    7. ')' → logprob: -13.250371932983398
    8. ',path' → logprob: -13.625371932983398
    9. 's' → logprob: -14.500371932983398
    10. '(
' → logprob: -15.125371932983398

Token 461: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -12.625007629394531
    3. '))' → logprob: -13.375007629394531
    4. ',' → logprob: -14.250007629394531
    5. '())' → logprob: -14.375007629394531
    6. ' )' → logprob: -14.625007629394531
    7. '()' → logprob: -15.875007629394531
    8. ')`' → logprob: -16.00000762939453
    9. '+' → logprob: -16.37500762939453
    10. '*' → logprob: -16.50000762939453

Token 462: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07414224743843079
    2. '\n' → logprob: -3.5741422176361084
    3. ' for' → logprob: -3.9491422176361084
    4. '<|end|>' → logprob: -4.9491424560546875
    5. ')' → logprob: -5.4491424560546875
    6. '\' → logprob: -5.9491424560546875
    7. '```' → logprob: -6.1991424560546875
    8. 'print' → logprob: -6.3241424560546875
    9. '   ' → logprob: -6.4491424560546875
    10. '[
' → logprob: -6.9491424560546875

Token 463: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004528374411165714
    2. ' for' → logprob: -7.750452995300293
    3. 'print' → logprob: -11.375452995300293
    4. '   ' → logprob: -12.125452995300293
    5. '    
' → logprob: -13.250452995300293
    6. '```' → logprob: -13.500452995300293
    7. '	for' → logprob: -14.000452995300293
    8. '\n' → logprob: -14.750452995300293
    9. '
' → logprob: -14.875452995300293
    10. '<|end|>' → logprob: -16.125452041625977

Token 464: ' path' (ID: 3104)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.04811418429017067
    2. 'step' → logprob: -3.54811429977417
    3. 'pos' → logprob: -4.29811429977417
    4. 'point' → logprob: -5.54811429977417
    5. 'position' → logprob: -8.423113822937012
    6. ' x' → logprob: -9.298113822937012
    7. 'px' → logprob: -9.298113822937012
    8. 'p' → logprob: -9.423113822937012
    9. ' step' → logprob: -9.673113822937012
    10. '_x' → logprob: -9.798113822937012

Token 465: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.04515640065073967
    2. '_' → logprob: -4.170156478881836
    3. '_x' → logprob: -4.295156478881836
    4. '_step' → logprob: -4.795156478881836
    5. '_pos' → logprob: -6.045156478881836
    6. '_position' → logprob: -6.420156478881836
    7. 'point' → logprob: -6.795156478881836
    8. '_sequence' → logprob: -7.295156478881836
    9. '_coordinate' → logprob: -7.920156478881836
    10. ' in' → logprob: -8.545156478881836

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2812577188014984
    2. 'in' → logprob: -1.4062577486038208
    3. ',' → logprob: -9.531257629394531
    4. ' ' → logprob: -10.781257629394531
    5. '	in' → logprob: -12.281257629394531
    6. '  ' → logprob: -13.031257629394531
    7. ' ,' → logprob: -13.156257629394531
    8. '_in' → logprob: -13.156257629394531
    9. ',in' → logprob: -13.906257629394531
    10. '   ' → logprob: -14.781257629394531

Token 467: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0019286326132714748
    2. ' path' → logprob: -6.251928806304932
    3. '   ' → logprob: -18.626928329467773
    4. '(path' → logprob: -21.126928329467773
    5. ' ' → logprob: -21.751928329467773
    6. 'pat' → logprob: -22.376928329467773
    7. '	path' → logprob: -22.501928329467773
    8. '
' → logprob: -23.126928329467773
    9. '[path' → logprob: -23.126928329467773
    10. '_path' → logprob: -23.876928329467773

Token 468: '_sequence' (ID: 55606)
  Prédit: '_sequence'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sequence' → logprob: -1.6240566083070007e-06
    2. 'sequence' → logprob: -13.500001907348633
    3. 'Sequence' → logprob: -16.625001907348633
    4. ' sequence' → logprob: -17.375001907348633
    5. '_SEQUENCE' → logprob: -18.750001907348633
    6. '_path' → logprob: -19.375001907348633
    7. '_' → logprob: -19.625001907348633
    8. '_points' → logprob: -19.875001907348633
    9. '(sequence' → logprob: -20.500001907348633
    10. '_point' → logprob: -20.875001907348633

Token 469: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026470985263586044
    2. ':
' → logprob: -3.651470899581909
    3. '   ' → logprob: -9.651471138000488
    4. 'print' → logprob: -10.526471138000488
    5. ',' → logprob: -11.026471138000488
    6. '[' → logprob: -11.151471138000488
    7. '):
' → logprob: -11.651471138000488
    8. '):' → logprob: -11.651471138000488
    9. '():
' → logprob: -11.776471138000488
    10. ' print' → logprob: -12.151471138000488

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00381076498888433
    2. ' print' → logprob: -6.253810882568359
    3. 'print' → logprob: -7.003810882568359
    4. '```' → logprob: -7.753810882568359
    5. '        
' → logprob: -8.75381088256836
    6. '   ' → logprob: -9.62881088256836
    7. '):
' → logprob: -9.75381088256836
    8. ':
' → logprob: -10.12881088256836
    9. '`' → logprob: -10.37881088256836
    10. ',' → logprob: -10.37881088256836

Token 471: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.014166918583214283
    2. ' print' → logprob: -4.264166831970215
    3. '```' → logprob: -13.514166831970215
    4. '       ' → logprob: -13.764166831970215
    5. '   ' → logprob: -14.139166831970215
    6. '           ' → logprob: -15.389166831970215
    7. '	print' → logprob: -16.88916778564453
    8. 'x' → logprob: -17.88916778564453
    9. '``' → logprob: -18.01416778564453
    10. '#print' → logprob: -18.13916778564453

Token 472: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.1280871480703354
    2. '(path' → logprob: -2.128087043762207
    3. '(f' → logprob: -7.628087043762207
    4. 'path' → logprob: -7.628087043762207
    5. '(' → logprob: -9.128087043762207
    6. '*' → logprob: -9.503087043762207
    7. '('' → logprob: -14.378087043762207
    8. 'f' → logprob: -14.753087043762207
    9. ' path' → logprob: -15.128087043762207
    10. '*f' → logprob: -15.753087043762207

Token 473: 'path' (ID: 4189)
  Prédit: 'path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: 0.0
    2. ' path' → logprob: -17.75
    3. '(path' → logprob: -23.0
    4. '[path' → logprob: -24.0
    5. '_path' → logprob: -25.75
    6. '   ' → logprob: -25.875
    7. 'pat' → logprob: -26.0
    8. '
' → logprob: -26.25
    9. '	path' → logprob: -26.75
    10. 'Path' → logprob: -26.875

Token 474: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -3.128163257315464e-07
    2. 'point' → logprob: -15.5
    3. '_path' → logprob: -17.875
    4. '_points' → logprob: -19.375
    5. 'oint' → logprob: -19.75
    6. '_POINT' → logprob: -19.75
    7. '-point' → logprob: -20.25
    8. 'Point' → logprob: -21.0
    9. '_sequence' → logprob: -21.375
    10. '_Point' → logprob: -21.5

Token 475: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.319370302458992e-06
    2. ')
' → logprob: -12.250005722045898
    3. '<|end|>' → logprob: -16.0000057220459
    4. ' )' → logprob: -16.3750057220459
    5. '))' → logprob: -16.5000057220459
    6. ')`' → logprob: -17.2500057220459
    7. ')}' → logprob: -17.3750057220459
    8. '())' → logprob: -17.3750057220459
    9. '()' → logprob: -17.3750057220459
    10. '}' → logprob: -18.0000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 473
Tokens correctement prédits (1ère position, stricte): 255
Tokens correctement prédits (1ère position, avec adaptation): 268
Tokens correctement prédits (top 10): 436
Précision stricte (1ère position): 53.91%
Précision adaptée (1ère position): 56.66%
Précision (top 10): 92.18%
================================================================================
