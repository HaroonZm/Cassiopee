================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Hmmm, voyons voir... le code pour les bases ADN je suppose

S = input() # je suppose qu'on doit lire ça comme string

if S == "A":
    print("T")
elif S == "T":
    print("A")
elif S == "G":     # j'espère ne pas me tromper d'ordre
    print("C")
elif S == "C":
    print("G")
# euh... je crois que ça couvre tout ? Peut-être un else mais bon
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' H' (ID: 487)
  → Token d'amorce (pas de prédiction)

Token 2: 'mmm' (ID: 66800)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5676262974739075
    2. '\n' → logprob: -1.6926262378692627
    3. ':' → logprob: -2.5676262378692627
    4. ' ' → logprob: -2.9426262378692627
    5. '```' → logprob: -3.0676262378692627
    6. '\' → logprob: -3.6926262378692627
    7. '
' → logprob: -4.442626476287842
    8. '  
' → logprob: -4.567626476287842
    9. '<|end|>' → logprob: -5.192626476287842
    10. ' 
' → logprob: -5.192626476287842

Token 4: ' voy' (ID: 19901)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007510198745876551
    2. ',' → logprob: -6.007510185241699
    3. '  ' → logprob: -6.632510185241699
    4. ' ,' → logprob: -7.132510185241699
    5. '#' → logprob: -7.757510185241699
    6. '  
' → logprob: -7.882510185241699
    7. ' a' → logprob: -8.2575101852417
    8. ' 
' → logprob: -8.2575101852417
    9. '<|end|>' → logprob: -8.3825101852417
    10. ' #' → logprob: -8.5075101852417

Token 5: 'ons' (ID: 1808)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7048510909080505
    2. ' a' → logprob: -1.3298511505126953
    3. 'a' → logprob: -1.9548511505126953
    4. ',' → logprob: -2.9548511505126953
    5. '  ' → logprob: -4.829851150512695
    6. ':' → logprob: -4.954851150512695
    7. '.' → logprob: -5.079851150512695
    8. '```' → logprob: -5.579851150512695
    9. '...' → logprob: -5.704851150512695
    10. '#' → logprob: -5.704851150512695

Token 6: ' voir' (ID: 20611)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5719001889228821
    2. ' ' → logprob: -1.9469001293182373
    3. '#' → logprob: -2.1969001293182373
    4. '```' → logprob: -2.4469001293182373
    5. ':' → logprob: -3.5719001293182373
    6. '...' → logprob: -3.9469001293182373
    7. '.' → logprob: -4.196900367736816
    8. '!' → logprob: -4.446900367736816
    9. '`' → logprob: -5.821900367736816
    10. ' ,' → logprob: -5.821900367736816

Token 7: '...' (ID: 1008)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4419052600860596
    2. ':' → logprob: -1.4419052600860596
    3. ',' → logprob: -2.0669052600860596
    4. '...' → logprob: -2.0669052600860596
    5. ' ' → logprob: -2.0669052600860596
    6. '!' → logprob: -2.8169052600860596
    7. '.' → logprob: -3.6919052600860596
    8. '\n' → logprob: -4.0669050216674805
    9. '```' → logprob: -4.3169050216674805
    10. '
' → logprob: -4.9419050216674805

Token 8: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5627380013465881
    2. '#' → logprob: -1.3127379417419434
    3. '\n' → logprob: -3.0627379417419434
    4. '\' → logprob: -3.3127379417419434
    5. '```' → logprob: -3.6877379417419434
    6. '  
' → logprob: -4.812737941741943
    7. ' 
' → logprob: -4.812737941741943
    8. ' #' → logprob: -5.062737941741943
    9. ' \' → logprob: -5.187737941741943
    10. '...' → logprob: -5.562737941741943

Token 9: ' code' (ID: 3490)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.080472469329834
    2. 'f' → logprob: -2.080472469329834
    3. '   ' → logprob: -2.205472469329834
    4. '  ' → logprob: -2.705472469329834
    5. 's' → logprob: -3.080472469329834
    6. '#' → logprob: -3.330472469329834
    7. 'pro' → logprob: -3.580472469329834
    8. 'c' → logprob: -3.705472469329834
    9. 'r' → logprob: -3.955472469329834
    10. 'code' → logprob: -3.955472469329834

Token 10: ' pour' (ID: 1930)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9664228558540344
    2. ' ' → logprob: -1.3414227962493896
    3. ':' → logprob: -1.5914227962493896
    4. '\' → logprob: -3.7164227962493896
    5. '\n' → logprob: -3.7164227962493896
    6. '```' → logprob: -3.7164227962493896
    7. '_' → logprob: -4.591423034667969
    8. '.' → logprob: -4.841423034667969
    9. '...' → logprob: -4.966423034667969
    10. '=' → logprob: -5.091423034667969

Token 11: ' les' (ID: 1341)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.7960734963417053
    2. ' afficher' → logprob: -1.9210734367370605
    3. ' créer' → logprob: -2.6710734367370605
    4. ' la' → logprob: -2.9210734367370605
    5. ' une' → logprob: -3.6710734367370605
    6. 'calcul' → logprob: -3.9210734367370605
    7. ' l' → logprob: -4.0460734367370605
    8. ' ' → logprob: -4.1710734367370605
    9. 'l' → logprob: -4.4210734367370605
    10. ' ouvrir' → logprob: -4.6710734367370605

Token 12: ' bases' (ID: 31148)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.125397801399231
    2. '#' → logprob: -2.6253976821899414
    3. 'n' → logprob: -2.6253976821899414
    4. ' #' → logprob: -3.1253976821899414
    5. '  ' → logprob: -3.2503976821899414
    6. ' f' → logprob: -3.2503976821899414
    7. 'f' → logprob: -3.2503976821899414
    8. '   ' → logprob: -3.6253976821899414
    9. 'd' → logprob: -3.7503976821899414
    10. ' nombres' → logprob: -3.8128976821899414

Token 13: ' ADN' (ID: 158823)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6541222929954529
    2. '_' → logprob: -1.1541223526000977
    3. '```' → logprob: -3.6541223526000977
    4. 's' → logprob: -4.029122352600098
    5. '.' → logprob: -4.029122352600098
    6. ' de' → logprob: -4.279122352600098
    7. 'de' → logprob: -4.529122352600098
    8. 'd' → logprob: -4.779122352600098
    9. '64' → logprob: -4.779122352600098
    10. '`' → logprob: -5.029122352600098

Token 14: ' je' (ID: 1264)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.21321091055870056
    2. 'a' → logprob: -3.0882108211517334
    3. ':' → logprob: -3.5882108211517334
    4. 's' → logprob: -3.8382108211517334
    5. '_' → logprob: -3.9632108211517334
    6. ' =' → logprob: -4.0882110595703125
    7. '#' → logprob: -4.3382110595703125
    8. '=' → logprob: -4.5882110595703125
    9. '.' → logprob: -5.4632110595703125
    10. ' A' → logprob: -5.4632110595703125

Token 15: ' suppose' (ID: 35968)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9308346509933472
    2. 's' → logprob: -1.1808346509933472
    3. 'n' → logprob: -2.4308347702026367
    4. ' n' → logprob: -2.5558347702026367
    5. ' m' → logprob: -3.9308347702026367
    6. ''' → logprob: -4.055834770202637
    7. ' #' → logprob: -4.180834770202637
    8. ' t' → logprob: -4.430834770202637
    9. '_' → logprob: -4.680834770202637
    10. 'space' → logprob: -4.680834770202637

Token 16: '

' (ID: 279)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.5185461044311523
    2. '_' → logprob: -1.6435461044311523
    3. ' ' → logprob: -1.8935461044311523
    4. ' =' → logprob: -2.1435461044311523
    5. ':' → logprob: -2.6435461044311523
    6. '#' → logprob: -2.7685461044311523
    7. 's' → logprob: -3.1435461044311523
    8. ' :' → logprob: -3.5185461044311523
    9. ' A' → logprob: -3.6435461044311523
    10. '=' → logprob: -3.6435461044311523

Token 17: 'S' (ID: 50)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.557220458984375
    2. ':' → logprob: -1.682220458984375
    3. '#' → logprob: -2.557220458984375
    4. ' =' → logprob: -3.682220458984375
    5. 'a' → logprob: -3.682220458984375
    6. ' :' → logprob: -3.932220458984375
    7. '```' → logprob: -4.307220458984375
    8. '_' → logprob: -4.307220458984375
    9. ' A' → logprob: -4.557220458984375
    10. '=' → logprob: -4.807220458984375

Token 18: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3824949860572815
    2. 'A' → logprob: -2.1324949264526367
    3. 'eq' → logprob: -2.8824949264526367
    4. '#' → logprob: -3.2574949264526367
    5. 'Q' → logprob: -3.8824949264526367
    6. 'E' → logprob: -3.8824949264526367
    7. 'é' → logprob: -4.007494926452637
    8. 'tring' → logprob: -5.132494926452637
    9. 'equ' → logprob: -5.382494926452637
    10. '=' → logprob: -5.507494926452637

Token 19: ' input' (ID: 3422)
  Prédit: ' "'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.1526416838169098
    2. '"' → logprob: -2.402641773223877
    3. ' '' → logprob: -3.402641773223877
    4. ''' → logprob: -4.277641773223877
    5. '"AT' → logprob: -6.777641773223877
    6. '"A' → logprob: -7.027641773223877
    7. ' ' → logprob: -8.027641296386719
    8. '"T' → logprob: -8.277641296386719
    9. '"S' → logprob: -8.902641296386719
    10. ' ['' → logprob: -8.902641296386719

Token 20: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001450187264708802
    2. '("("' → logprob: -9.750144958496094
    3. '()' → logprob: -10.250144958496094
    4. '('' → logprob: -10.625144958496094
    5. '(
' → logprob: -11.625144958496094
    6. '("")' → logprob: -11.875144958496094
    7. '("' → logprob: -13.000144958496094
    8. '(

' → logprob: -13.375144958496094
    9. ' (' → logprob: -13.500144958496094
    10. '(`' → logprob: -14.000144958496094

Token 21: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.024441635236144066
    2. '[' → logprob: -4.524441719055176
    3. '.strip' → logprob: -6.024441719055176
    4. '[:]' → logprob: -6.024441719055176
    5. '.count' → logprob: -6.774441719055176
    6. '[::-' → logprob: -6.899441719055176
    7. '#' → logprob: -7.024441719055176
    8. '.replace' → logprob: -7.149441719055176
    9. ':' → logprob: -7.399441719055176
    10. '.split' → logprob: -7.524441719055176

Token 22: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04654243588447571
    2. ' DNA' → logprob: -4.046542644500732
    3. ' .' → logprob: -4.921542644500732
    4. ' dna' → logprob: -5.171542644500732
    5. 'split' → logprob: -6.296542644500732
    6. ' split' → logprob: -6.296542644500732
    7. ' "' → logprob: -6.296542644500732
    8. ' S' → logprob: -6.921542644500732
    9. 'DNA' → logprob: -7.296542644500732
    10. ' str' → logprob: -7.296542644500732

Token 23: ' suppose' (ID: 35968)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6601495742797852
    2. ' veux' → logprob: -1.1601495742797852
    3. ' n' → logprob: -2.910149574279785
    4. 'n' → logprob: -3.660149574279785
    5. ' souhaite' → logprob: -4.035149574279785
    6. 's' → logprob: -4.035149574279785
    7. ' s' → logprob: -4.535149574279785
    8. ' m' → logprob: -5.035149574279785
    9. ' voudrais' → logprob: -5.785149574279785
    10. '<|end|>' → logprob: -5.785149574279785

Token 24: ' qu' (ID: 474)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13197609782218933
    2. '[' → logprob: -2.3819761276245117
    3. '.replace' → logprob: -5.256976127624512
    4. '_' → logprob: -5.506976127624512
    5. ' =' → logprob: -6.006976127624512
    6. '[:]' → logprob: -6.256976127624512
    7. '=' → logprob: -6.381976127624512
    8. ' ' → logprob: -6.506976127624512
    9. ' .' → logprob: -6.756976127624512
    10. '.count' → logprob: -6.756976127624512

Token 25: ''on' (ID: 25812)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.22825436294078827
    2. ''on' → logprob: -2.3532543182373047
    3. ''' → logprob: -2.7282543182373047
    4. ''il' → logprob: -3.2282543182373047
    5. 'u' → logprob: -5.978254318237305
    6. ''un' → logprob: -8.603254318237305
    7. ''e' → logprob: -8.728254318237305
    8. ' e' → logprob: -8.728254318237305
    9. 'i' → logprob: -8.853254318237305
    10. ''u' → logprob: -8.978254318237305

Token 26: ' doit' (ID: 21822)
  Prédit: ' veut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' veut' → logprob: -0.5192379951477051
    2. ' a' → logprob: -1.394237995147705
    3. ' ' → logprob: -2.644237995147705
    4. ' souhaite' → logprob: -3.769237995147705
    5. ' veux' → logprob: -4.269237995147705
    6. ' va' → logprob: -4.644237995147705
    7. ' continue' → logprob: -5.144237995147705
    8. ' cherche' → logprob: -5.519237995147705
    9. 'a' → logprob: -5.769237995147705
    10. ' want' → logprob: -6.269237995147705

Token 27: ' lire' (ID: 46082)
  Prédit: ' vérifier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vérifier' → logprob: -1.7169874906539917
    2. ' convertir' → logprob: -1.8419874906539917
    3. ' compter' → logprob: -1.8419874906539917
    4. ' calcul' → logprob: -2.7169876098632812
    5. ' tradu' → logprob: -2.8419876098632812
    6. ' lire' → logprob: -2.8419876098632812
    7. ' remplacer' → logprob: -3.0919876098632812
    8. ' analyser' → logprob: -3.8419876098632812
    9. ' coder' → logprob: -3.8419876098632812
    10. ' déc' → logprob: -4.091987609863281

Token 28: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34552380442619324
    2. '()' → logprob: -1.9705238342285156
    3. '(' → logprob: -2.2205238342285156
    4. '("")' → logprob: -5.095523834228516
    5. '.' → logprob: -5.220523834228516
    6. '  ' → logprob: -5.595523834228516
    7. ',' → logprob: -5.845523834228516
    8. 's' → logprob: -5.970523834228516
    9. '[:]' → logprob: -5.970523834228516
    10. ')' → logprob: -6.220523834228516

Token 29: ' comme' (ID: 7971)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.315276563167572
    2. '[' → logprob: -2.565276622772217
    3. 'A' → logprob: -3.315276622772217
    4. ':' → logprob: -3.315276622772217
    5. '=' → logprob: -4.065276622772217
    6. '_' → logprob: -4.065276622772217
    7. 's' → logprob: -4.315276622772217
    8. 'n' → logprob: -4.315276622772217
    9. '#' → logprob: -4.565276622772217
    10. ' =' → logprob: -4.940276622772217

Token 30: ' string' (ID: 1621)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.20626196265220642
    2. ' la' → logprob: -3.0812618732452393
    3. 'une' → logprob: -3.5812618732452393
    4. 'l' → logprob: -3.9562618732452393
    5. ' l' → logprob: -3.9562618732452393
    6. 'str' → logprob: -4.331262111663818
    7. 'le' → logprob: -4.456262111663818
    8. 'string' → logprob: -4.581262111663818
    9. ' un' → logprob: -4.581262111663818
    10. 'la' → logprob: -5.456262111663818

Token 31: '

' (ID: 279)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.37318578362464905
    2. '.' → logprob: -2.123185873031616
    3. 'A' → logprob: -2.873185873031616
    4. '_' → logprob: -3.748185873031616
    5. '```' → logprob: -4.498185634613037
    6. 'dna' → logprob: -4.623185634613037
    7. 'for' → logprob: -4.748185634613037
    8. 's' → logprob: -5.123185634613037
    9. ':' → logprob: -5.123185634613037
    10. 'DNA' → logprob: -5.123185634613037

Token 32: 'if' (ID: 366)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5166032314300537
    2. '_' → logprob: -2.3916032314300537
    3. 'n' → logprob: -2.7666032314300537
    4. '```' → logprob: -3.0166032314300537
    5. '[' → logprob: -3.7666032314300537
    6. 'a' → logprob: -3.7666032314300537
    7. '.' → logprob: -3.7666032314300537
    8. ':' → logprob: -4.266603469848633
    9. 'C' → logprob: -4.391603469848633
    10. 's' → logprob: -4.766603469848633

Token 33: ' S' (ID: 336)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02490953728556633
    2. ' S' → logprob: -3.774909496307373
    3. ' '' → logprob: -7.024909496307373
    4. ' len' → logprob: -7.774909496307373
    5. ''' → logprob: -8.774909973144531
    6. ' "' → logprob: -9.399909973144531
    7. '  ' → logprob: -9.649909973144531
    8. '"' → logprob: -11.399909973144531
    9. 'S' → logprob: -11.524909973144531
    10. ' not' → logprob: -11.524909973144531

Token 34: ' ==' (ID: 951)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.023688904941082
    2. ' ==' → logprob: -4.023688793182373
    3. '.startswith' → logprob: -5.398688793182373
    4. '.' → logprob: -8.148689270019531
    5. '[i' → logprob: -8.523689270019531
    6. '==' → logprob: -9.023689270019531
    7. ' [' → logprob: -9.148689270019531
    8. '[:]' → logprob: -9.398689270019531
    9. ' .' → logprob: -10.023689270019531
    10. '[:' → logprob: -10.148689270019531

Token 35: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.17537738382816315
    2. '"' → logprob: -2.425377368927002
    3. ' '' → logprob: -2.925377368927002
    4. ''' → logprob: -4.800377368927002
    5. ' ""' → logprob: -5.050377368927002
    6. '"A' → logprob: -6.175377368927002
    7. ' ''' → logprob: -7.050377368927002
    8. '"C' → logprob: -8.42537784576416
    9. '""' → logprob: -8.80037784576416
    10. ''A' → logprob: -9.05037784576416

Token 36: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.5130911469459534
    2. 'AT' → logprob: -1.7630910873413086
    3. 'AC' → logprob: -2.7630910873413086
    4. 'AG' → logprob: -3.1380910873413086
    5. '"' → logprob: -3.3880910873413086
    6. '":' → logprob: -3.5130910873413086
    7. 'G' → logprob: -4.513091087341309
    8. 'ACT' → logprob: -4.763091087341309
    9. '"):' → logprob: -5.138091087341309
    10. '"AT' → logprob: -5.138091087341309

Token 37: '":
' (ID: 9213)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5943220257759094
    2. '"T' → logprob: -1.5943219661712646
    3. '":' → logprob: -1.9693219661712646
    4. '">' → logprob: -3.2193219661712646
    5. 'T' → logprob: -3.2193219661712646
    6. '"C' → logprob: -4.469322204589844
    7. '"):' → logprob: -4.719322204589844
    8. '"A' → logprob: -6.719322204589844
    9. 'C' → logprob: -6.844322204589844
    10. 'A' → logprob: -7.219322204589844

Token 38: '   ' (ID: 271)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11858884990215302
    2. ' print' → logprob: -3.118588924407959
    3. ' "' → logprob: -3.493588924407959
    4. ' ' → logprob: -4.993588924407959
    5. 'print' → logprob: -4.993588924407959
    6. '   ' → logprob: -5.118588924407959
    7. ''' → logprob: -5.368588924407959
    8. ' T' → logprob: -5.368588924407959
    9. ':' → logprob: -6.118588924407959
    10. ' :' → logprob: -6.618588924407959

Token 39: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.1597702503204346
    2. 'print' (adapté à ' print') → logprob: -1.2847702503204346
    3. ' T' → logprob: -1.5347702503204346
    4. '"' → logprob: -1.9097702503204346
    5. 'T' → logprob: -3.9097702503204346
    6. ' "' → logprob: -4.1597700119018555
    7. '"T' → logprob: -6.1597700119018555
    8. ''' → logprob: -6.1597700119018555
    9. ' ' → logprob: -6.6597700119018555
    10. '   ' → logprob: -7.1597700119018555

Token 40: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14599990844726562
    2. '("' → logprob: -2.0209999084472656
    3. '('' → logprob: -5.770999908447266
    4. '"' → logprob: -9.395999908447266
    5. '("("' → logprob: -10.020999908447266
    6. '(A' → logprob: -10.895999908447266
    7. '(
' → logprob: -11.395999908447266
    8. '("")' → logprob: -11.645999908447266
    9. '(T' → logprob: -11.645999908447266
    10. 'A' → logprob: -11.895999908447266

Token 41: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.049719102680683136
    2. '1' → logprob: -3.6747190952301025
    3. 'Ad' → logprob: -5.424719333648682
    4. 'U' → logprob: -5.549719333648682
    5. 'A' → logprob: -5.549719333648682
    6. 'aden' → logprob: -5.799719333648682
    7. '0' → logprob: -6.549719333648682
    8. 'Th' → logprob: -6.674719333648682
    9. ' T' → logprob: -7.737219333648682
    10. 't' → logprob: -7.987219333648682

Token 42: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0006016458501107991
    2. 'A' → logprob: -8.250601768493652
    3. '"' → logprob: -8.625601768493652
    4. ' ")' → logprob: -9.625601768493652
    5. '")
' → logprob: -10.250601768493652
    6. ')' → logprob: -10.500601768493652
    7. '')' → logprob: -11.750601768493652
    8. '"A' → logprob: -11.875601768493652
    9. 'G' → logprob: -12.625601768493652
    10. '")

' → logprob: -12.875601768493652

Token 43: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0018429673509672284
    2. 'else' → logprob: -6.626842975616455
    3. 'e' → logprob: -8.251842498779297
    4. 'el' → logprob: -9.001842498779297
    5. ' elif' → logprob: -9.126842498779297
    6. '```' → logprob: -12.126842498779297
    7. '.' → logprob: -12.751842498779297
    8. '
' → logprob: -12.876842498779297
    9. ' else' → logprob: -13.251842498779297
    10. '#elif' → logprob: -13.501842498779297

Token 44: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.007773790508508682
    2. ' ' → logprob: -5.3827738761901855
    3. 'S' → logprob: -5.8827738761901855
    4. ' ' → logprob: -8.132773399353027
    5. '"' → logprob: -10.132773399353027
    6. 's' → logprob: -11.882773399353027
    7. '  ' → logprob: -12.132773399353027
    8. ''' → logprob: -12.507773399353027
    9. '(' → logprob: -13.632773399353027
    10. '(S' → logprob: -13.757773399353027

Token 45: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.026340708136558533
    2. '==' → logprob: -3.6513407230377197
    3. ' ' → logprob: -10.52634048461914
    4. '[' → logprob: -12.77634048461914
    5. ' =="' → logprob: -12.90134048461914
    6. ' =' → logprob: -13.15134048461914
    7. ')' → logprob: -13.15134048461914
    8. '=="' → logprob: -14.02634048461914
    9. ' ===' → logprob: -14.77634048461914
    10. '"' → logprob: -15.02634048461914

Token 46: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0003336777735967189
    2. ''' → logprob: -8.250333786010742
    3. ' "' → logprob: -9.875333786010742
    4. ' ' → logprob: -12.125333786010742
    5. 'A' → logprob: -12.875333786010742
    6. '`' → logprob: -12.875333786010742
    7. ')' → logprob: -12.875333786010742
    8. '```' → logprob: -13.375333786010742
    9. '"""' → logprob: -13.750333786010742
    10. ' ' → logprob: -13.875333786010742

Token 47: 'T' (ID: 51)
  Prédit: 'T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.1122199222445488
    2. 'C' → logprob: -2.36221981048584
    3. '"T' → logprob: -4.98721981048584
    4. 'G' → logprob: -5.98721981048584
    5. '"' → logprob: -6.23721981048584
    6. '"C' → logprob: -7.98721981048584
    7. ''T' → logprob: -9.61221981048584
    8. ''' → logprob: -9.73721981048584
    9. 'A' → logprob: -9.98721981048584
    10. ''C' → logprob: -10.11221981048584

Token 48: '":
' (ID: 9213)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10776981711387634
    2. '":' → logprob: -2.357769727706909
    3. '"):' → logprob: -6.107769966125488
    4. '")' → logprob: -6.232769966125488
    5. ':
' → logprob: -7.107769966125488
    6. '"' → logprob: -7.107769966125488
    7. '">' → logprob: -7.232769966125488
    8. '):' → logprob: -7.607769966125488
    9. '"):
' → logprob: -9.232769966125488
    10. '   ' → logprob: -9.232769966125488

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004289353732019663
    2. '    ' → logprob: -6.754289150238037
    3. 'print' → logprob: -7.129289150238037
    4. ' print' → logprob: -7.504289150238037
    5. '"' → logprob: -7.879289150238037
    6. '       ' → logprob: -8.004289627075195
    7. ' ' → logprob: -8.129289627075195
    8. ' :' → logprob: -8.379289627075195
    9. ':' → logprob: -8.504289627075195
    10. '  ' → logprob: -9.254289627075195

Token 50: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.18356677889823914
    2. '   ' → logprob: -2.1835668087005615
    3. ' print' → logprob: -3.0585668087005615
    4. '"' → logprob: -5.683566570281982
    5. 'A' → logprob: -5.683566570281982
    6. ' A' → logprob: -7.058566570281982
    7. ' ' → logprob: -8.55856704711914
    8. '```' → logprob: -9.30856704711914
    9. '  ' → logprob: -10.05856704711914
    10. '"A' → logprob: -10.68356704711914

Token 51: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.3870130479335785
    2. '(' → logprob: -1.1370130777359009
    3. '('' → logprob: -9.51201343536377
    4. '"' → logprob: -9.76201343536377
    5. '()' → logprob: -12.63701343536377
    6. '("")' → logprob: -12.88701343536377
    7. '("("' → logprob: -13.76201343536377
    8. '(A' → logprob: -14.13701343536377
    9. ')' → logprob: -14.76201343536377
    10. ' ' → logprob: -15.01201343536377

Token 52: 'A' (ID: 32)
  Prédit: 'A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -7.469590491382405e-05
    2. '"A' → logprob: -9.62507438659668
    3. ' A' → logprob: -12.50007438659668
    4. ''A' → logprob: -12.75007438659668
    5. '```' → logprob: -14.37507438659668
    6. 'a' → logprob: -15.00007438659668
    7. '`' → logprob: -15.00007438659668
    8. '"' → logprob: -15.37507438659668
    9. '	A' → logprob: -15.62507438659668
    10. '
' → logprob: -16.87507438659668

Token 53: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.012606660835444927
    2. '")
' → logprob: -4.387606620788574
    3. '"' → logprob: -10.012606620788574
    4. ')' → logprob: -10.137606620788574
    5. 'elif' → logprob: -11.887606620788574
    6. ')")' → logprob: -13.637606620788574
    7. '")

' → logprob: -14.137606620788574
    8. '")
' → logprob: -14.637606620788574
    9. '```' → logprob: -14.762606620788574
    10. ')")
' → logprob: -14.887606620788574

Token 54: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -7.338466093642637e-05
    2. 'el' → logprob: -10.375073432922363
    3. 'else' → logprob: -10.625073432922363
    4. 'e' → logprob: -11.625073432922363
    5. ' elif' → logprob: -12.375073432922363
    6. 'eli' → logprob: -12.625073432922363
    7. 'els' → logprob: -14.500073432922363
    8. 'elseif' → logprob: -15.125073432922363
    9. '```' → logprob: -15.250073432922363
    10. '#elif' → logprob: -16.250072479248047

Token 55: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.02387668378651142
    2. 'S' → logprob: -3.773876667022705
    3. ' ' → logprob: -7.898876667022705
    4. ' ' → logprob: -8.523877143859863
    5. '"' → logprob: -10.523877143859863
    6. 's' → logprob: -11.523877143859863
    7. 'space' → logprob: -12.023877143859863
    8. ''' → logprob: -12.773877143859863
    9. ' space' → logprob: -13.148877143859863
    10. ' s' → logprob: -13.148877143859863

Token 56: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1429119110107422
    2. '==' → logprob: -2.017911911010742
    3. '"' → logprob: -8.892911911010742
    4. '=="' → logprob: -10.267911911010742
    5. ' =="' → logprob: -10.892911911010742
    6. ' "' → logprob: -11.017911911010742
    7. ' ' → logprob: -11.267911911010742
    8. '=' → logprob: -12.017911911010742
    9. ' =' → logprob: -12.142911911010742
    10. '[' → logprob: -13.642911911010742

Token 57: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.22219908237457275
    2. '"G' → logprob: -2.472198963165283
    3. ' "' → logprob: -2.597198963165283
    4. '"C' → logprob: -3.222198963165283
    5. ' ' → logprob: -8.472199440002441
    6. ' G' → logprob: -8.972199440002441
    7. ' C' → logprob: -9.597199440002441
    8. 'G' → logprob: -10.472199440002441
    9. ''' → logprob: -11.222199440002441
    10. 'C' → logprob: -11.472199440002441

Token 58: 'G' (ID: 38)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.4742704927921295
    2. 'G' → logprob: -0.9742704629898071
    3. ''C' → logprob: -9.599270820617676
    4. '"' → logprob: -9.974270820617676
    5. '"C' → logprob: -10.099270820617676
    6. 'A' → logprob: -11.224270820617676
    7. '"G' → logprob: -11.349270820617676
    8. ''' → logprob: -11.599270820617676
    9. '``' → logprob: -13.849270820617676
    10. ' C' → logprob: -13.974270820617676

Token 59: '":' (ID: 1243)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.49387747049331665
    2. '":' → logprob: -0.9938774704933167
    3. ':
' → logprob: -4.868877410888672
    4. '"' → logprob: -4.868877410888672
    5. '")' → logprob: -6.243877410888672
    6. '":"' → logprob: -7.243877410888672
    7. '   ' → logprob: -8.243877410888672
    8. '):' → logprob: -8.243877410888672
    9. '":
' → logprob: -8.368877410888672
    10. ' :' → logprob: -8.368877410888672

Token 60: '    ' (ID: 257)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3164663314819336
    2. '   ' → logprob: -1.5664663314819336
    3. '"C' → logprob: -3.3164663314819336
    4. 'print' → logprob: -4.191466331481934
    5. '"' → logprob: -5.191466331481934
    6. ' C' → logprob: -5.566466331481934
    7. '    
' → logprob: -8.066466331481934
    8. '
' → logprob: -8.316466331481934
    9. '``' → logprob: -9.316466331481934
    10. '```' → logprob: -9.316466331481934

Token 61: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5938628315925598
    2. ':' → logprob: -0.8438628315925598
    3. ' ' → logprob: -5.468863010406494
    4. ' :' → logprob: -5.968863010406494
    5. 'print' → logprob: -6.218863010406494
    6. ':
' → logprob: -6.218863010406494
    7. ')' → logprob: -6.218863010406494
    8. '"' → logprob: -6.468863010406494
    9. '       ' → logprob: -6.593863010406494
    10. '```' → logprob: -7.218863010406494

Token 62: ' j' (ID: 441)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5539489984512329
    2. 'C' → logprob: -1.303948998451233
    3. '   ' → logprob: -2.0539488792419434
    4. ' C' → logprob: -4.053948879241943
    5. ' print' → logprob: -5.303948879241943
    6. '       ' → logprob: -6.678948879241943
    7. '    ' → logprob: -8.053949356079102
    8. '    
' → logprob: -8.553949356079102
    9. '"C' → logprob: -8.678949356079102
    10. '"' → logprob: -8.678949356079102

Token 63: ''espère' (ID: 116557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8034748435020447
    2. '    ' → logprob: -1.5534749031066895
    3. '=' → logprob: -2.5534749031066895
    4. 'print' → logprob: -2.5534749031066895
    5. ' =' → logprob: -3.3034749031066895
    6. '<|end|>' → logprob: -3.4284749031066895
    7. 'u' → logprob: -3.9284749031066895
    8. '  ' → logprob: -4.4284749031066895
    9. ' print' → logprob: -4.4284749031066895
    10. ' ' → logprob: -4.8034749031066895

Token 64: ' ne' (ID: 453)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.24498169124126434
    2. '   ' → logprob: -2.2449817657470703
    3. ' :' → logprob: -2.6199817657470703
    4. '"' → logprob: -3.8699817657470703
    5. '       ' → logprob: -5.36998176574707
    6. 'print' → logprob: -5.61998176574707
    7. ':
' → logprob: -5.86998176574707
    8. 'C' → logprob: -7.11998176574707
    9. '```' → logprob: -7.11998176574707
    10. ' ' → logprob: -7.24498176574707

Token 65: ' pas' (ID: 2173)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9116984605789185
    2. ''ai' → logprob: -1.2866984605789185
    3. 'e' → logprob: -2.411698341369629
    4. 'u' → logprob: -2.911698341369629
    5. '')' → logprob: -3.161698341369629
    6. '   ' → logprob: -4.286698341369629
    7. 'elif' → logprob: -4.411698341369629
    8. ''en' → logprob: -4.536698341369629
    9. ''espère' → logprob: -4.661698341369629
    10. ''aime' → logprob: -5.036698341369629

Token 66: ' me' (ID: 668)
  Prédit: ' avoir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' avoir' → logprob: -1.296347975730896
    2. ' oublier' → logprob: -2.1713480949401855
    3. 'voir' → logprob: -2.6713480949401855
    4. ' ' → logprob: -2.6713480949401855
    5. 'me' → logprob: -2.7963480949401855
    6. ' me' → logprob: -2.9213480949401855
    7. '"' → logprob: -3.1713480949401855
    8. ' voir' → logprob: -3.5463480949401855
    9. ' faire' → logprob: -3.5463480949401855
    10. 's' → logprob: -3.7963480949401855

Token 67: ' trom' (ID: 38558)
  Prédit: ' trom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trom' → logprob: -0.08424759656190872
    2. 't' → logprob: -2.834247589111328
    3. 'être' → logprob: -5.084247589111328
    4. ' ' → logprob: -5.584247589111328
    5. 'prendre' → logprob: -5.584247589111328
    6. ' planter' → logprob: -6.459247589111328
    7. '```' → logprob: -7.209247589111328
    8. 'f' → logprob: -7.459247589111328
    9. 'tré' → logprob: -8.084247589111328
    10. 'plant' → logprob: -8.084247589111328

Token 68: 'per' (ID: 543)
  Prédit: 'per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.0006388116744346917
    2. 'p' → logprob: -8.250638961791992
    3. 'mer' → logprob: -8.750638961791992
    4. 'er' → logprob: -8.875638961791992
    5. 'fer' → logprob: -10.625638961791992
    6. '#' → logprob: -11.250638961791992
    7. '**' → logprob: -11.500638961791992
    8. '"' → logprob: -11.625638961791992
    9. 'pé' → logprob: -12.750638961791992
    10. '   ' → logprob: -13.000638961791992

Token 69: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5887826681137085
    2. ':' → logprob: -0.8387826681137085
    3. ' :' → logprob: -5.213782787322998
    4. '       ' → logprob: -5.588782787322998
    5. ' ' → logprob: -7.088782787322998
    6. ':
' → logprob: -7.338782787322998
    7. ')' → logprob: -7.463782787322998
    8. '  ' → logprob: -7.963782787322998
    9. '    ' → logprob: -8.21378231048584
    10. 'print' → logprob: -8.46378231048584

Token 70: ''ordre' (ID: 124753)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.0941218137741089
    2. 'C' → logprob: -1.8441218137741089
    3. 'e' → logprob: -2.3441219329833984
    4. 'é' → logprob: -2.8441219329833984
    5. ''C' → logprob: -2.8441219329833984
    6. 'elif' → logprob: -3.0941219329833984
    7. 'A' → logprob: -3.2191219329833984
    8. '"' → logprob: -3.4691219329833984
    9. 'a' → logprob: -3.7191219329833984
    10. ''A' → logprob: -3.8441219329833984

Token 71: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3985861539840698
    2. '   ' → logprob: -1.1485861539840698
    3. '       ' → logprob: -4.898586273193359
    4. ' :' → logprob: -5.898586273193359
    5. ' ' → logprob: -7.773586273193359
    6. '):' → logprob: -8.02358627319336
    7. ')' → logprob: -8.64858627319336
    8. '    ' → logprob: -9.02358627319336
    9. '  ' → logprob: -9.27358627319336
    10. ':
' → logprob: -9.39858627319336

Token 72: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5608340501785278
    2. ':' → logprob: -1.0608340501785278
    3. '   ' → logprob: -2.9358339309692383
    4. ' :' → logprob: -4.310833930969238
    5. ' C' → logprob: -4.685833930969238
    6. '       ' → logprob: -5.935833930969238
    7. ':
' → logprob: -6.560833930969238
    8. '"' → logprob: -7.310833930969238
    9. 'print' → logprob: -7.435833930969238
    10. '"C' → logprob: -7.435833930969238

Token 73: ' print' (ID: 2123)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.09713825583457947
    2. '"C' → logprob: -2.5971381664276123
    3. '   ' → logprob: -4.847138404846191
    4. 'print' (adapté à ' print') → logprob: -5.097138404846191
    5. '"' → logprob: -6.097138404846191
    6. '
' → logprob: -7.347138404846191
    7. ' C' → logprob: -7.722138404846191
    8. '    
' → logprob: -7.847138404846191
    9. ''C' → logprob: -9.347138404846191
    10. '"\' → logprob: -10.097138404846191

Token 74: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16099101305007935
    2. '("' → logprob: -1.9109909534454346
    3. '("("' → logprob: -7.285991191864014
    4. '"' → logprob: -10.035990715026855
    5. '(C' → logprob: -11.035990715026855
    6. '('' → logprob: -11.410990715026855
    7. '("")' → logprob: -12.535990715026855
    8. '()' → logprob: -13.410990715026855
    9. '"C' → logprob: -13.410990715026855
    10. '(
' → logprob: -13.785990715026855

Token 75: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00027945113833993673
    2. '"C' → logprob: -8.250279426574707
    3. '"' → logprob: -11.250279426574707
    4. ''C' → logprob: -12.500279426574707
    5. ' C' → logprob: -14.250279426574707
    6. '")' → logprob: -14.625279426574707
    7. ')' → logprob: -16.250280380249023
    8. '"""' → logprob: -16.750280380249023
    9. '```' → logprob: -17.000280380249023
    10. 'С' → logprob: -17.500280380249023

Token 76: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00022999993234407157
    2. ')' → logprob: -8.625229835510254
    3. '")
' → logprob: -10.250229835510254
    4. '"' → logprob: -11.875229835510254
    5. ')")' → logprob: -11.875229835510254
    6. ' ")' → logprob: -14.625229835510254
    7. '')' → logprob: -15.125229835510254
    8. '")

' → logprob: -16.00023078918457
    9. '")
' → logprob: -16.25023078918457
    10. '}")' → logprob: -16.87523078918457

Token 77: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.01712077669799328
    2. 'else' → logprob: -4.142120838165283
    3. 'e' → logprob: -7.017120838165283
    4. 'el' → logprob: -9.267120361328125
    5. 'eli' → logprob: -9.642120361328125
    6. ' elif' → logprob: -11.017120361328125
    7. 'els' → logprob: -12.267120361328125
    8. ' else' → logprob: -13.392120361328125
    9. '```' → logprob: -13.642120361328125
    10. 'elseif' → logprob: -13.767120361328125

Token 78: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.0046827648766338825
    2. 'S' → logprob: -5.379682540893555
    3. ' ' → logprob: -10.004682540893555
    4. ' ' → logprob: -11.129682540893555
    5. 's' → logprob: -13.129682540893555
    6. '  ' → logprob: -16.004682540893555
    7. ' "' → logprob: -16.004682540893555
    8. '"' → logprob: -16.129682540893555
    9. '<|end|>' → logprob: -16.254682540893555
    10. ' ' → logprob: -16.629682540893555

Token 79: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.17979352176189423
    2. '==' → logprob: -1.8047934770584106
    3. ' =="' → logprob: -10.554793357849121
    4. '=' → logprob: -11.679793357849121
    5. '=="' → logprob: -12.304793357849121
    6. ' ' → logprob: -12.554793357849121
    7. ' =' → logprob: -12.804793357849121
    8. ' ' → logprob: -13.179793357849121
    9. '"' → logprob: -14.804793357849121
    10. ' "' → logprob: -14.804793357849121

Token 80: ' "' (ID: 392)
  Prédit: '"C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"C' → logprob: -0.5176175236701965
    2. '"' → logprob: -1.5176174640655518
    3. ' "' → logprob: -1.7676174640655518
    4. ' C' → logprob: -5.267617702484131
    5. 'C' → logprob: -5.392617702484131
    6. '"A' → logprob: -6.142617702484131
    7. ''C' → logprob: -7.017617702484131
    8. '")' → logprob: -8.142617225646973
    9. ' ' → logprob: -8.267617225646973
    10. ' '' → logprob: -8.392617225646973

Token 81: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.008037525229156017
    2. 'A' → logprob: -4.883037567138672
    3. 'T' → logprob: -7.883037567138672
    4. 'G' → logprob: -10.258037567138672
    5. ')' → logprob: -11.633037567138672
    6. 'S' → logprob: -13.008037567138672
    7. 'D' → logprob: -13.383037567138672
    8. '}' → logprob: -13.508037567138672
    9. 'U' → logprob: -13.508037567138672
    10. '")' → logprob: -13.758037567138672

Token 82: '":
' (ID: 9213)
  Prédit: '":'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '":' → logprob: -0.15352770686149597
    2. '"' → logprob: -2.1535277366638184
    3. '")' → logprob: -3.9035277366638184
    4. '"):' → logprob: -5.403527736663818
    5. ':' → logprob: -6.903527736663818
    6. '">' → logprob: -7.653527736663818
    7. '):' → logprob: -10.52852725982666
    8. ')' → logprob: -10.52852725982666
    9. '"):
' → logprob: -10.65352725982666
    10. '```' → logprob: -12.02852725982666

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11739855259656906
    2. '"' → logprob: -2.617398500442505
    3. ':' → logprob: -4.867398738861084
    4. '    ' → logprob: -5.117398738861084
    5. ' :' → logprob: -5.242398738861084
    6. '(' → logprob: -5.492398738861084
    7. '       ' → logprob: -5.742398738861084
    8. 'print' → logprob: -5.992398738861084
    9. ' print' → logprob: -6.117398738861084
    10. ' ' → logprob: -6.242398738861084

Token 84: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.07186757773160934
    2. ' print' → logprob: -3.0718674659729004
    3. 'G' → logprob: -3.9468674659729004
    4. '   ' → logprob: -6.6968674659729
    5. ' G' → logprob: -7.3218674659729
    6. '"' → logprob: -7.3218674659729
    7. '    
' → logprob: -7.9468674659729
    8. ' ' → logprob: -8.571867942810059
    9. ' 
' → logprob: -8.696867942810059
    10. 'T' → logprob: -9.196867942810059

Token 85: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19183780252933502
    2. '("' → logprob: -2.441837787628174
    3. '("("' → logprob: -2.441837787628174
    4. '('' → logprob: -8.691838264465332
    5. '("")' → logprob: -8.691838264465332
    6. '"' → logprob: -8.941838264465332
    7. '(""' → logprob: -10.316838264465332
    8. '("""' → logprob: -10.441838264465332
    9. '("(' → logprob: -12.066838264465332
    10. '()' → logprob: -12.191838264465332

Token 86: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -9.491498531133402e-06
    2. '"' → logprob: -12.125009536743164
    3. '"G' → logprob: -13.375009536743164
    4. '")' → logprob: -14.000009536743164
    5. ')' → logprob: -14.125009536743164
    6. ' G' → logprob: -14.250009536743164
    7. ''' → logprob: -16.000009536743164
    8. 'A' → logprob: -16.250009536743164
    9. '```' → logprob: -17.125009536743164
    10. '`' → logprob: -18.625009536743164

Token 87: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0007333897519856691
    2. '"' → logprob: -7.250733375549316
    3. ')' → logprob: -11.250733375549316
    4. '")
' → logprob: -11.500733375549316
    5. '')' → logprob: -15.750733375549316
    6. '")

' → logprob: -17.375734329223633
    7. ')")' → logprob: -17.375734329223633
    8. ' ")' → logprob: -17.750734329223633
    9. ':' → logprob: -17.750734329223633
    10. '"
' → logprob: -18.125734329223633

Token 88: '#' (ID: 2)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.06983694434165955
    2. '
' → logprob: -3.1948368549346924
    3. '<|end|>' → logprob: -3.9448368549346924
    4. '```' → logprob: -5.9448370933532715
    5. '#' → logprob: -6.4448370933532715
    6. ' ' → logprob: -7.1948370933532715
    7. '\' → logprob: -7.6948370933532715
    8. 'newline' → logprob: -8.069836616516113
    9. '  
' → logprob: -8.194836616516113
    10. '<|end|>' → logprob: -8.569836616516113

Token 89: ' e' (ID: 319)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.22728344798088074
    2. '<|end|>' → logprob: -2.102283477783203
    3. '
' → logprob: -3.227283477783203
    4. '#' → logprob: -3.852283477783203
    5. ' ' → logprob: -5.352283477783203
    6. '\' → logprob: -5.602283477783203
    7. '```' → logprob: -5.602283477783203
    8. ')' → logprob: -6.227283477783203
    9. '[' → logprob: -6.477283477783203
    10. '<|end|>' → logprob: -6.977283477783203

Token 90: 'uh' (ID: 4370)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.24879968166351318
    2. 'n' → logprob: -1.6237996816635132
    3. 'lse' → logprob: -4.248799800872803
    4. 's' → logprob: -5.748799800872803
    5. '#' → logprob: -5.873799800872803
    6. 'ls' → logprob: -6.623799800872803
    7. 'x' → logprob: -6.998799800872803
    8. 'nd' → logprob: -8.498799324035645
    9. '```' → logprob: -9.498799324035645
    10. 'ns' → logprob: -9.498799324035645

Token 91: '...' (ID: 1008)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.4106542766094208
    2. '<|end|>' → logprob: -1.5356543064117432
    3. '
' → logprob: -2.785654306411743
    4. '#' → logprob: -4.035654067993164
    5. '```' → logprob: -4.535654067993164
    6. '\' → logprob: -5.035654067993164
    7. '<|end|>' → logprob: -5.160654067993164
    8. ' ' → logprob: -5.285654067993164
    9. '?' → logprob: -5.910654067993164
    10. ')' → logprob: -6.035654067993164

Token 92: ' je' (ID: 1264)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 93: ' crois' (ID: 65485)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.19909799098968506
    2. 'n' → logprob: -2.8240981101989746
    3. ' pense' → logprob: -3.0740981101989746
    4. ' ' → logprob: -3.4490981101989746
    5. ' n' → logprob: -4.449098110198975
    6. 'l' → logprob: -5.449098110198975
    7. ' suppose' → logprob: -6.074098110198975
    8. 'm' → logprob: -6.074098110198975
    9. 'f' → logprob: -6.324098110198975
    10. ' suis' → logprob: -6.324098110198975

Token 94: ' que' (ID: 661)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.1024102196097374
    2. '<|end|>' → logprob: -2.977410316467285
    3. '
' → logprob: -3.352410316467285
    4. '```' → logprob: -5.727410316467285
    5. ' ' → logprob: -6.227410316467285
    6. '#' → logprob: -6.352410316467285
    7. '\' → logprob: -6.727410316467285
    8. '<|end|>' → logprob: -7.477410316467285
    9. '  
' → logprob: -7.727410316467285
    10. 'newline' → logprob: -8.102410316467285

Token 95: ' ça' (ID: 13590)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15030336380004883
    2. ' c' → logprob: -2.275303363800049
    3. ' il' → logprob: -4.775303363800049
    4. ' on' → logprob: -5.275303363800049
    5. ' le' → logprob: -5.275303363800049
    6. ' l' → logprob: -5.400303363800049
    7. ' S' → logprob: -5.525303363800049
    8. ' ' → logprob: -6.400303363800049
    9. 'c' → logprob: -6.650303363800049
    10. ' ça' → logprob: -6.775303363800049

Token 96: ' couvre' (ID: 137218)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.429776668548584
    2. 's' → logprob: -1.804776668548584
    3. ' manque' → logprob: -2.804776668548584
    4. ' s' → logprob: -3.429776668548584
    5. ' va' → logprob: -4.304776668548584
    6. ' manquer' → logprob: -4.429776668548584
    7. ' a' → logprob: -4.679776668548584
    8. ' n' → logprob: -5.429776668548584
    9. '_' → logprob: -5.554776668548584
    10. ' ' → logprob: -5.804776668548584

Token 97: ' tout' (ID: 5501)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 98: ' ?' (ID: 1423)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: ' Peut' (ID: 116891)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: '-être' (ID: 33599)
  Prédit: 'être'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'être' → logprob: -0.18945443630218506
    2. '-être' → logprob: -1.939454436302185
    3. 'etre' → logprob: -4.064454555511475
    4. 'êt' → logprob: -5.064454555511475
    5. '-' → logprob: -6.064454555511475
    6. 'ê' → logprob: -6.564454555511475
    7. 'êtres' → logprob: -7.189454555511475
    8. 'tre' → logprob: -8.439454078674316
    9. '-on' → logprob: -9.314454078674316
    10. '#' → logprob: -9.314454078674316

Token 101: ' un' (ID: 537)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.522381067276001
    2. 'e' → logprob: -1.397381067276001
    3. ' ' → logprob: -2.022381067276001
    4. ' e' → logprob: -4.397380828857422
    5. 'else' → logprob: -4.647380828857422
    6. ' cas' → logprob: -7.147380828857422
    7. 'es' → logprob: -7.147380828857422
    8. '?' → logprob: -7.522380828857422
    9. ' espace' → logprob: -7.897380828857422
    10. ' autre' → logprob: -8.022380828857422

Token 103: ' mais' (ID: 2899)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16144533455371857
    2. ' :' → logprob: -1.9114453792572021
    3. ' :
' → logprob: -7.911445140838623
    4. ' else' → logprob: -8.036445617675781
    5. ':
' → logprob: -8.411445617675781
    6. ' ' → logprob: -8.786445617675781
    7. 'else' → logprob: -9.036445617675781
    8. 'e' → logprob: -12.161445617675781
    9. ' elif' → logprob: -12.911445617675781
    10. '(' → logprob: -13.036445617675781

Token 104: ' bon' (ID: 4846)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47487154603004456
    2. ' ' → logprob: -1.3498715162277222
    3. '<|end|>' → logprob: -2.9748716354370117
    4. ' :' → logprob: -3.3498716354370117
    5. ' pass' → logprob: -4.349871635437012
    6. '"' → logprob: -5.724871635437012
    7. ':
' → logprob: -6.474871635437012
    8. ''' → logprob: -6.724871635437012
    9. '<|end|>' → logprob: -6.849871635437012
    10. '  ' → logprob: -6.849871635437012


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 102
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 26
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 23.53%
Précision adaptée (1ère position): 25.49%
Précision (top 10): 50.00%
================================================================================
