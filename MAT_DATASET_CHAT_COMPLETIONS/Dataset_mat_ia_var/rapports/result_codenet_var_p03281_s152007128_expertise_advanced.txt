================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:11:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = int(input())

def count_divisors(n):
    return sum(2 - (i * i == n) for i in range(1, int(n**0.5) + 1) if n % i == 0)

print(sum(1 for n in range(1, N+1, 2) if count_divisors(n) == 8))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001967457792488858
    2. '```' → logprob: -9.50019645690918
    3. '(N' → logprob: -10.37519645690918
    4. '`' → logprob: -10.87519645690918
    5. '(
' → logprob: -11.00019645690918
    6. ')' → logprob: -11.62519645690918
    7. '("("' → logprob: -11.62519645690918
    8. ''' → logprob: -11.62519645690918
    9. '()' → logprob: -11.87519645690918
    10. '('' → logprob: -12.25019645690918

Token 4: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.036061398684978485
    2. ')' → logprob: -3.9110612869262695
    3. '()' → logprob: -4.2860612869262695
    4. '())' → logprob: -7.0360612869262695
    5. '(
' → logprob: -8.53606128692627
    6. '('' → logprob: -9.03606128692627
    7. '("("' → logprob: -9.66106128692627
    8. '(

' → logprob: -9.78606128692627
    9. '```' → logprob: -9.78606128692627
    10. '(()' → logprob: -9.91106128692627

Token 5: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7085900902748108
    2. 'for' → logprob: -1.083590030670166
    3. 'i' → logprob: -2.208590030670166
    4. 's' → logprob: -3.583590030670166
    5. 'f' → logprob: -4.083590030670166
    6. 'x' → logprob: -5.458590030670166
    7. 'sum' → logprob: -6.208590030670166
    8. 'total' → logprob: -6.708590030670166
    9. 'result' → logprob: -6.833590030670166
    10. 'factor' → logprob: -6.833590030670166

Token 6: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.016623910516500473
    2. ' factorial' → logprob: -4.7666239738464355
    3. ' f' → logprob: -5.7666239738464355
    4. '_' → logprob: -6.5166239738464355
    5. ' space' → logprob: -7.0166239738464355
    6. ''' → logprob: -7.8916239738464355
    7. ' factor' → logprob: -8.016623497009277
    8. ' sum' → logprob: -8.266623497009277
    9. ' my' → logprob: -8.516623497009277
    10. ' func' → logprob: -9.016623497009277

Token 7: '_div' (ID: 36926)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.011305633001029491
    2. '(' → logprob: -5.136305809020996
    3. '_words' → logprob: -6.136305809020996
    4. '_tokens' → logprob: -7.761305809020996
    5. '_chars' → logprob: -8.011305809020996
    6. '_occ' → logprob: -8.261305809020996
    7. '_s' → logprob: -8.386305809020996
    8. '_spaces' → logprob: -8.511305809020996
    9. '_items' → logprob: -8.886305809020996
    10. '_v' → logprob: -9.136305809020996

Token 8: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.011485722847282887
    2. 'isible' → logprob: -5.261485576629639
    3. '_' → logprob: -5.636485576629639
    4. 'i' → logprob: -7.011485576629639
    5. 'iders' → logprob: -7.261485576629639
    6. 's' → logprob: -7.636485576629639
    7. 'isor' → logprob: -8.886486053466797
    8. '```' → logprob: -9.386486053466797
    9. 'idors' → logprob: -9.761486053466797
    10. '_i' → logprob: -10.386486053466797

Token 9: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.00024275471514556557
    2. '```' → logprob: -9.375243186950684
    3. 'or' → logprob: -9.750243186950684
    4. 'o' → logprob: -10.000243186950684
    5. '   ' → logprob: -11.500243186950684
    6. 'on' → logprob: -12.125243186950684
    7. 'ons' → logprob: -12.500243186950684
    8. '0' → logprob: -12.625243186950684
    9. '[' → logprob: -12.750243186950684
    10. '{' → logprob: -12.875243186950684

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00947649497538805
    2. '_' → logprob: -4.759476661682129
    3. '```' → logprob: -8.509476661682129
    4. '("("' → logprob: -8.759476661682129
    5. '(_' → logprob: -8.884476661682129
    6. '('' → logprob: -9.259476661682129
    7. '(n' → logprob: -10.259476661682129
    8. 's' → logprob: -10.384476661682129
    9. ' (' → logprob: -10.509476661682129
    10. ':' → logprob: -10.884476661682129

Token 11: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030065055936574936
    2. ')' → logprob: -3.5300650596618652
    3. ' ):' → logprob: -9.530064582824707
    4. ':' → logprob: -9.530064582824707
    5. '):
' → logprob: -9.780064582824707
    6. '(' → logprob: -10.030064582824707
    7. 's' → logprob: -11.030064582824707
    8. '(n' → logprob: -11.780064582824707
    9. ''):' → logprob: -12.155064582824707
    10. '   ' → logprob: -12.280064582824707

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.520738959312439
    2. ':' → logprob: -1.020738959312439
    3. '```' → logprob: -3.6457390785217285
    4. ':
' → logprob: -5.3957390785217285
    5. ' ' → logprob: -5.6457390785217285
    6. ' :' → logprob: -5.8957390785217285
    7. '    ' → logprob: -6.6457390785217285
    8. '\' → logprob: -6.7707390785217285
    9. '``' → logprob: -7.0207390785217285
    10. ''' → logprob: -7.1457390785217285

Token 13: ' return' (ID: 622)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7723793387413025
    2. ' count' → logprob: -1.2723793983459473
    3. '   ' → logprob: -1.3973793983459473
    4. 'c' → logprob: -5.897379398345947
    5. '```' → logprob: -6.397379398345947
    6. ' c' → logprob: -6.772379398345947
    7. ' cnt' → logprob: -6.772379398345947
    8. ' ' → logprob: -6.897379398345947
    9. '    ' → logprob: -7.397379398345947
    10. 'cnt' → logprob: -7.647379398345947

Token 14: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.23011177778244019
    2. ' ' → logprob: -2.230111837387085
    3. ' len' → logprob: -2.730111837387085
    4. 'sum' → logprob: -3.980111837387085
    5. '1' → logprob: -4.480111598968506
    6. ' n' → logprob: -6.730111598968506
    7. '2' → logprob: -7.605111598968506
    8. 'len' → logprob: -8.230112075805664
    9. ' int' → logprob: -8.355112075805664
    10. '(sum' → logprob: -8.855112075805664

Token 15: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.023930683732032776
    2. '(i' → logprob: -3.898930788040161
    3. '(n' → logprob: -6.398930549621582
    4. '1' → logprob: -7.148930549621582
    5. ' (' → logprob: -8.398930549621582
    6. '(k' → logprob: -8.648930549621582
    7. '(x' → logprob: -8.773930549621582
    8. '[' → logprob: -9.023930549621582
    9. '((' → logprob: -9.273930549621582
    10. '(
' → logprob: -9.898930549621582

Token 16: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23921211063861847
    2. 'n' → logprob: -1.739212155342102
    3. ' n' → logprob: -3.8642120361328125
    4. '[' → logprob: -5.4892120361328125
    5. '[n' → logprob: -5.4892120361328125
    6. '(n' → logprob: -5.9892120361328125
    7. ' ' → logprob: -5.9892120361328125
    8. '   ' → logprob: -6.4892120361328125
    9. '(' → logprob: -7.9892120361328125
    10. ' [' → logprob: -8.239212036132812

Token 17: ' -' (ID: 533)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.35063979029655457
    2. 'for' → logprob: -1.225639820098877
    3. ' if' → logprob: -7.225639820098877
    4. 'if' → logprob: -7.725639820098877
    5. '*(' → logprob: -8.475639343261719
    6. ' ' → logprob: -9.100639343261719
    7. 'i' → logprob: -9.225639343261719
    8. ' i' → logprob: -9.350639343261719
    9. '**' → logprob: -9.475639343261719
    10. ')' → logprob: -9.600639343261719

Token 18: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.02099200338125229
    2. '(int' → logprob: -4.520991802215576
    3. 'int' → logprob: -5.645991802215576
    4. '(' → logprob: -5.895991802215576
    5. '1' → logprob: -7.270991802215576
    6. '(i' → logprob: -7.270991802215576
    7. '(abs' → logprob: -7.645991802215576
    8. ' (' → logprob: -8.270992279052734
    9. '(x' → logprob: -8.395992279052734
    10. '((' → logprob: -8.770992279052734

Token 19: 'i' (ID: 72)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006836494896560907
    2. '(n' → logprob: -6.006836414337158
    3. '1' → logprob: -6.381836414337158
    4. 'int' → logprob: -6.756836414337158
    5. 'i' → logprob: -7.006836414337158
    6. ' n' → logprob: -8.006836891174316
    7. '(i' → logprob: -9.381836891174316
    8. '0' → logprob: -9.756836891174316
    9. '(int' → logprob: -10.756836891174316
    10. '(' → logprob: -11.006836891174316

Token 20: ' *' (ID: 425)
  Prédit: '*i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*i' → logprob: -0.10463355481624603
    2. '%i' → logprob: -3.3546335697174072
    3. ' *' → logprob: -3.4796335697174072
    4. '*' → logprob: -3.6046335697174072
    5. '%' → logprob: -6.229633331298828
    6. ' %' → logprob: -6.479633331298828
    7. '>' → logprob: -6.604633331298828
    8. '==' → logprob: -7.979633331298828
    9. ' >' → logprob: -8.354633331298828
    10. '%n' → logprob: -8.479633331298828

Token 21: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08280263841152191
    2. ' i' → logprob: -2.5828025341033936
    3. '*i' → logprob: -6.082802772521973
    4. '2' → logprob: -6.832802772521973
    5. ' ' → logprob: -8.832802772521973
    6. '%i' → logprob: -9.082802772521973
    7. '*' → logprob: -9.207802772521973
    8. '0' → logprob: -9.332802772521973
    9. '1' → logprob: -9.832802772521973
    10. '	i' → logprob: -11.332802772521973

Token 22: ' ==' (ID: 951)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.558771014213562
    2. '%i' → logprob: -1.183771014213562
    3. '%' → logprob: -2.1837711334228516
    4. '%n' → logprob: -4.933771133422852
    5. ' ' → logprob: -6.808771133422852
    6. '%c' → logprob: -8.308771133422852
    7. '>' → logprob: -8.558771133422852
    8. ' ==' → logprob: -8.808771133422852
    9. '%x' → logprob: -9.558771133422852
    10. ')' → logprob: -9.808771133422852

Token 23: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.04304075241088867
    2. ' n' → logprob: -3.1680407524108887
    3. '0' → logprob: -11.293041229248047
    4. ')n' → logprob: -11.418041229248047
    5. '	n' → logprob: -12.168041229248047
    6. ' ' → logprob: -12.293041229248047
    7. '1' → logprob: -12.543041229248047
    8. 'N' → logprob: -14.168041229248047
    9. ')' → logprob: -14.418041229248047
    10. '   ' → logprob: -14.418041229248047

Token 24: ')' (ID: 8)
  Prédit: '%i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%i' → logprob: -0.06394512951374054
    2. ' %' → logprob: -3.0639450550079346
    3. '%n' → logprob: -5.063945293426514
    4. '%' → logprob: -5.063945293426514
    5. ' ' → logprob: -6.188945293426514
    6. '%d' → logprob: -8.938944816589355
    7. ')' → logprob: -9.063944816589355
    8. ' and' → logprob: -9.188944816589355
    9. '0' → logprob: -9.688944816589355
    10. 'and' → logprob: -10.313944816589355

Token 25: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8312556743621826
    2. ' for' → logprob: -1.7062556743621826
    3. '%i' → logprob: -1.8312556743621826
    4. ' if' → logprob: -2.5812556743621826
    5. ' and' → logprob: -2.8312556743621826
    6. ')' → logprob: -3.7062556743621826
    7. ' %' → logprob: -3.9562556743621826
    8. 'if' → logprob: -4.206255912780762
    9. 'for' → logprob: -4.831255912780762
    10. ' i' → logprob: -5.081255912780762

Token 26: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06998790055513382
    2. 'i' → logprob: -2.6949880123138428
    3. ' range' → logprob: -10.819988250732422
    4. '	i' → logprob: -10.944988250732422
    5. 'range' → logprob: -11.944988250732422
    6. ' ' → logprob: -13.194988250732422
    7. '```' → logprob: -13.694988250732422
    8. '(i' → logprob: -13.819988250732422
    9. ' in' → logprob: -13.819988250732422
    10. ' ' → logprob: -14.194988250732422

Token 27: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002356856595724821
    2. 'in' → logprob: -6.127357006072998
    3. ' ' → logprob: -9.25235652923584
    4. ',' → logprob: -11.00235652923584
    5. ' i' → logprob: -11.50235652923584
    6. ')' → logprob: -11.62735652923584
    7. '1' → logprob: -11.87735652923584
    8. ' ,' → logprob: -11.87735652923584
    9. '  ' → logprob: -12.00235652923584
    10. '	in' → logprob: -12.00235652923584

Token 28: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0025051478296518326
    2. 'range' → logprob: -6.002505302429199
    3. ' ' → logprob: -11.5025053024292
    4. '	range' → logprob: -11.5025053024292
    5. ' xrange' → logprob: -12.1275053024292
    6. '(range' → logprob: -13.2525053024292
    7. '```' → logprob: -14.5025053024292
    8. ' ' → logprob: -14.6275053024292
    9. ')' → logprob: -15.5025053024292
    10. '1' → logprob: -15.5025053024292

Token 29: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001394761260598898
    2. '1' → logprob: -6.626394748687744
    3. ' ' → logprob: -10.376395225524902
    4. ' (' → logprob: -10.376395225524902
    5. '<|end|>' → logprob: -12.626395225524902
    6. ')' → logprob: -13.501395225524902
    7. '[' → logprob: -14.876395225524902
    8. '<|end|>' → logprob: -15.001395225524902
    9. '(
' → logprob: -15.251395225524902
    10. ',' → logprob: -15.376395225524902

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00071695790393278
    2. ' ' → logprob: -7.2507171630859375
    3. '2' → logprob: -12.375717163085938
    4. '(' → logprob: -13.500717163085938
    5. '   ' → logprob: -14.000717163085938
    6. ')' → logprob: -15.625717163085938
    7. '```' → logprob: -16.188217163085938
    8. '  ' → logprob: -16.438217163085938
    9. ',' → logprob: -16.938217163085938
    10. '	' → logprob: -17.000717163085938

Token 31: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01911795698106289
    2. ' ,' → logprob: -4.019117832183838
    3. ',n' → logprob: -7.644117832183838
    4. ',int' → logprob: -7.769117832183838
    5. ',i' → logprob: -10.894118309020996
    6. '(n' → logprob: -11.144118309020996
    7. '(' → logprob: -11.644118309020996
    8. ' ' → logprob: -11.769118309020996
    9. ',N' → logprob: -12.394118309020996
    10. ',(' → logprob: -13.519118309020996

Token 32: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.39572009444236755
    2. ' int' → logprob: -1.14572012424469
    3. 'n' → logprob: -5.0207200050354
    4. ' n' → logprob: -6.1457200050354
    5. '(int' → logprob: -9.895720481872559
    6. ' ' → logprob: -12.270720481872559
    7. '	int' → logprob: -12.770720481872559
    8. ' (' → logprob: -13.020720481872559
    9. '(n' → logprob: -13.395720481872559
    10. '   ' → logprob: -13.395720481872559

Token 33: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.029864342883229256
    2. '(' → logprob: -3.5298643112182617
    3. 'n' → logprob: -9.779864311218262
    4. '((' → logprob: -10.404864311218262
    5. ' (' → logprob: -11.154864311218262
    6. '(s' → logprob: -12.279864311218262
    7. '(
' → logprob: -13.279864311218262
    8. '(pow' → logprob: -13.279864311218262
    9. ')n' → logprob: -13.654864311218262
    10. ')' → logprob: -14.154864311218262

Token 34: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.0006341627449728549
    2. ' **' → logprob: -7.75063419342041
    3. ')**' → logprob: -9.62563419342041
    4. '.sqrt' → logprob: -9.75063419342041
    5. ')' → logprob: -10.62563419342041
    6. ''s' → logprob: -10.87563419342041
    7. '```' → logprob: -11.87563419342041
    8. 'sqrt' → logprob: -12.25063419342041
    9. '*' → logprob: -12.25063419342041
    10. ' ' → logprob: -12.37563419342041

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9266199160483666e-05
    2. '.' → logprob: -11.125019073486328
    3. ' ' → logprob: -12.500019073486328
    4. '(' → logprob: -14.250019073486328
    5. '   ' → logprob: -16.500019073486328
    6. '```' → logprob: -18.750019073486328
    7. '{' → logprob: -18.875019073486328
    8. '    ' → logprob: -19.625019073486328
    9. ' .' → logprob: -20.000019073486328
    10. ')' → logprob: -20.125019073486328

Token 36: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.56233171664644e-05
    2. '0' → logprob: -9.875055313110352
    3. '5' → logprob: -13.125055313110352
    4. ' .' → logprob: -14.625055313110352
    5. '```' → logprob: -15.000055313110352
    6. '1' → logprob: -15.250055313110352
    7. '50' → logprob: -15.500055313110352
    8. '   ' → logprob: -15.750055313110352
    9. '2' → logprob: -16.00005531311035
    10. '6' → logprob: -16.00005531311035

Token 37: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.2113979209971149e-05
    2. '```' → logprob: -12.250012397766113
    3. '   ' → logprob: -13.437512397766113
    4. '.' → logprob: -13.562512397766113
    5. 'five' → logprob: -13.625012397766113
    6. '``' → logprob: -14.625012397766113
    7. '0' → logprob: -15.625012397766113
    8. '4' → logprob: -15.625012397766113
    9. '...' → logprob: -15.937512397766113
    10. '25' → logprob: -16.000011444091797

Token 38: ')' (ID: 8)
  Prédit: ')+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')+' → logprob: -0.8346810936927795
    2. ')' → logprob: -1.3346810340881348
    3. '+' → logprob: -1.3346810340881348
    4. ' +' → logprob: -3.3346810340881348
    5. '(' → logprob: -6.209681034088135
    6. '()+' → logprob: -7.334681034088135
    7. ' )' → logprob: -7.834681034088135
    8. '(n' → logprob: -8.834681510925293
    9. ' ' → logprob: -8.959681510925293
    10. '))+' → logprob: -8.959681510925293

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3869614899158478
    2. ' +' → logprob: -1.1369614601135254
    3. ')+' → logprob: -10.011961936950684
    4. ' ' → logprob: -10.511961936950684
    5. ')' → logprob: -11.261961936950684
    6. '()+' → logprob: -13.886961936950684
    7. '   ' → logprob: -14.136961936950684
    8. ' )' → logprob: -14.261961936950684
    9. '+)' → logprob: -14.511961936950684
    10. ' +
' → logprob: -14.636961936950684

Token 40: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.125335693359375
    4. '  ' → logprob: -17.250335693359375
    5. '(' → logprob: -17.500335693359375
    6. '2' → logprob: -17.750335693359375
    7. ')' → logprob: -17.875335693359375
    8. '```' → logprob: -17.875335693359375
    9. '    ' → logprob: -19.500335693359375
    10. '۱' → logprob: -19.812835693359375

Token 41: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '   ' → logprob: -17.000001907348633
    4. '```' → logprob: -18.000001907348633
    5. '(' → logprob: -18.750001907348633
    6. '2' → logprob: -19.375001907348633
    7. ')' → logprob: -19.875001907348633
    8. '  ' → logprob: -19.875001907348633
    9. '{' → logprob: -20.125001907348633
    10. '۱' → logprob: -20.875001907348633

Token 42: ')' (ID: 8)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0679556354880333
    2. ')' → logprob: -2.817955732345581
    3. '):' → logprob: -5.442955493927002
    4. ')))' → logprob: -6.692955493927002
    5. ')):' → logprob: -8.06795597076416
    6. ' ))' → logprob: -10.06795597076416
    7. ':' → logprob: -10.94295597076416
    8. ' )' → logprob: -12.19295597076416
    9. '),' → logprob: -12.44295597076416
    10. ')
' → logprob: -12.44295597076416

Token 43: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006589424447156489
    2. '))' → logprob: -7.375658988952637
    3. ')))' → logprob: -10.750658988952637
    4. ' )' → logprob: -12.500658988952637
    5. '`)' → logprob: -13.250658988952637
    6. ')
' → logprob: -13.500658988952637
    7. '   ' → logprob: -13.750658988952637
    8. ')`' → logprob: -14.125658988952637
    9. '):' → logprob: -14.625658988952637
    10. ')")' → logprob: -15.125658988952637

Token 44: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.5759708285331726
    2. 'n' → logprob: -0.8259708285331726
    3. '(n' → logprob: -10.825970649719238
    4. '	n' → logprob: -11.950970649719238
    5. '   ' → logprob: -12.950970649719238
    6. ' ' → logprob: -13.950970649719238
    7. ' not' → logprob: -14.575970649719238
    8. ')n' → logprob: -14.575970649719238
    9. ' (' → logprob: -15.075970649719238
    10. '[n' → logprob: -16.075971603393555

Token 45: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.6949933171272278
    2. ' %' → logprob: -0.6949933171272278
    3. '%i' → logprob: -6.444993495941162
    4. ' ' → logprob: -8.319993019104004
    5. '%x' → logprob: -13.194993019104004
    6. '%c' → logprob: -13.194993019104004
    7. '%d' → logprob: -13.444993019104004
    8. '%n' → logprob: -13.444993019104004
    9. '%e' → logprob: -13.694993019104004
    10. '%s' → logprob: -13.819993019104004

Token 46: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31330955028533936
    2. ' i' → logprob: -1.3133095502853394
    3. ' ' → logprob: -10.813309669494629
    4. '<|end|>' → logprob: -11.063309669494629
    5. '	i' → logprob: -11.813309669494629
    6. '  ' → logprob: -13.688309669494629
    7. '<|end|>' → logprob: -13.938309669494629
    8. '   ' → logprob: -14.063309669494629
    9. '(i' → logprob: -14.813309669494629
    10. ')i' → logprob: -15.188309669494629

Token 47: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4332621395587921
    2. ' ==' → logprob: -1.0582621097564697
    3. ')' → logprob: -6.058262348175049
    4. '=' → logprob: -7.058262348175049
    5. ' ' → logprob: -7.433262348175049
    6. ')==' → logprob: -7.683262348175049
    7. '0' → logprob: -8.55826187133789
    8. '===' → logprob: -10.30826187133789
    9. ' )' → logprob: -10.43326187133789
    10. ' =' → logprob: -10.93326187133789

Token 48: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029750604182481766
    2. ' ' → logprob: -3.5297505855560303
    3. '  ' → logprob: -16.90475082397461
    4. '<|end|>' → logprob: -17.02975082397461
    5. '   ' → logprob: -17.52975082397461
    6. 'i' → logprob: -17.65475082397461
    7. '۰' → logprob: -17.65475082397461
    8. '```' → logprob: -18.21725082397461
    9. '00' → logprob: -18.46725082397461
    10. ')' → logprob: -18.59225082397461

Token 49: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.615255839889869e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -18.12509536743164
    4. '```' → logprob: -18.50009536743164
    5. '  ' → logprob: -18.62509536743164
    6. 'i' → logprob: -18.75009536743164
    7. '۰' → logprob: -19.12509536743164
    8. '=' → logprob: -19.12509536743164
    9. '00' → logprob: -19.25009536743164
    10. '    ' → logprob: -20.18759536743164

Token 50: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005662570474669337
    2. '))' → logprob: -7.500566482543945
    3. ')))' → logprob: -11.375566482543945
    4. ' )' → logprob: -14.375566482543945
    5. ')
' → logprob: -15.375566482543945
    6. ')")' → logprob: -15.625566482543945
    7. ')n' → logprob: -15.750566482543945
    8. '   ' → logprob: -15.875566482543945
    9. ')`' → logprob: -15.875566482543945
    10. '`)' → logprob: -16.125566482543945

Token 51: 'print' (ID: 1598)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.465152382850647
    2. 'if' → logprob: -1.965152382850647
    3. 'print' → logprob: -1.965152382850647
    4. '\n' → logprob: -3.3401522636413574
    5. 'result' → logprob: -4.090152263641357
    6. '
' → logprob: -4.715152263641357
    7. ' for' → logprob: -4.840152263641357
    8. ' 
' → logprob: -5.340152263641357
    9. '[' → logprob: -5.840152263641357
    10. 'count' → logprob: -5.840152263641357

Token 52: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0008522743592038751
    2. '(N' → logprob: -7.375852108001709
    3. '((' → logprob: -9.625852584838867
    4. '('' → logprob: -10.125852584838867
    5. '(count' → logprob: -10.125852584838867
    6. '(f' → logprob: -11.000852584838867
    7. '(n' → logprob: -11.000852584838867
    8. '("("' → logprob: -11.000852584838867
    9. '(sum' → logprob: -12.000852584838867
    10. '(len' → logprob: -12.500852584838867

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40363577008247375
    2. '(i' → logprob: -1.4036357402801514
    3. '(range' → logprob: -2.6536357402801514
    4. '(count' → logprob: -4.4036359786987305
    5. '(div' → logprob: -6.2786359786987305
    6. '(n' → logprob: -7.1536359786987305
    7. '(d' → logprob: -7.9036359786987305
    8. '(x' → logprob: -9.02863597869873
    9. '(k' → logprob: -9.15363597869873
    10. '((' → logprob: -9.15363597869873

Token 54: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.13350118696689606
    2. ' count' → logprob: -2.3835012912750244
    3. 'range' → logprob: -4.633501052856445
    4. 'i' → logprob: -4.883501052856445
    5. '1' → logprob: -5.133501052856445
    6. ' range' → logprob: -5.508501052856445
    7. ' i' → logprob: -5.758501052856445
    8. 'n' → logprob: -7.258501052856445
    9. 'div' → logprob: -7.633501052856445
    10. '(count' → logprob: -7.758501052856445

Token 55: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11902644485235214
    2. 'for' → logprob: -2.9940264225006104
    3. '(i' → logprob: -3.4940264225006104
    4. '(' → logprob: -3.9940264225006104
    5. ' for' → logprob: -4.4940266609191895
    6. '1' → logprob: -7.8690266609191895
    7. '(n' → logprob: -7.9940266609191895
    8. ',i' → logprob: -8.369026184082031
    9. ' i' → logprob: -8.494026184082031
    10. ' ,' → logprob: -8.494026184082031

Token 56: ' n' (ID: 297)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14571554958820343
    2. 'i' → logprob: -2.0207154750823975
    3. ' x' → logprob: -6.520715713500977
    4. 'x' → logprob: -7.145715713500977
    5. ' d' → logprob: -7.895715713500977
    6. ' k' → logprob: -9.145715713500977
    7. ' n' → logprob: -9.270715713500977
    8. 'd' → logprob: -9.770715713500977
    9. 'a' → logprob: -10.520715713500977
    10. 'k' → logprob: -10.770715713500977

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0160507932305336
    2. 'in' → logprob: -4.141050815582275
    3. ' ' → logprob: -12.266050338745117
    4. 'range' → logprob: -12.266050338745117
    5. ')' → logprob: -13.016050338745117
    6. 'n' → logprob: -13.266050338745117
    7. '<|end|>' → logprob: -14.516050338745117
    8. 's' → logprob: -14.766050338745117
    9. 'In' → logprob: -14.766050338745117
    10. '```' → logprob: -15.016050338745117

Token 58: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326422095298767
    2. 'range' → logprob: -1.31326425075531
    3. '	range' → logprob: -13.813263893127441
    4. ' ' → logprob: -14.438263893127441
    5. '(range' → logprob: -14.563263893127441
    6. ')' → logprob: -16.438264846801758
    7. '```' → logprob: -16.688264846801758
    8. '   ' → logprob: -16.688264846801758
    9. '  ' → logprob: -17.188264846801758
    10. '[' → logprob: -17.438264846801758

Token 59: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.696889623621246e-06
    2. '(N' → logprob: -13.12500286102295
    3. '1' → logprob: -15.12500286102295
    4. ' (' → logprob: -15.25000286102295
    5. '(
' → logprob: -16.500001907348633
    6. '(

' → logprob: -18.000001907348633
    7. ')' → logprob: -18.250001907348633
    8. '```' → logprob: -19.000001907348633
    9. '(n' → logprob: -19.250001907348633
    10. '((' → logprob: -20.500001907348633

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001068654702976346
    2. 'N' → logprob: -7.251068592071533
    3. '2' → logprob: -8.001069068908691
    4. ' ' → logprob: -10.876069068908691
    5. '(' → logprob: -12.876069068908691
    6. '(N' → logprob: -14.376069068908691
    7. ' N' → logprob: -14.376069068908691
    8. '   ' → logprob: -14.626069068908691
    9. '3' → logprob: -15.876069068908691
    10. '10' → logprob: -16.001068115234375

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002637199067976326
    2. ',N' → logprob: -8.875264167785645
    3. ' ,' → logprob: -9.000264167785645
    4. ',n' → logprob: -15.875264167785645
    5. 'N' → logprob: -16.000263214111328
    6. '1' → logprob: -16.375263214111328
    7. '   ' → logprob: -16.875263214111328
    8. ' ' → logprob: -17.750263214111328
    9. '，' → logprob: -18.000263214111328
    10. ',
' → logprob: -18.250263214111328

Token 62: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.011047814972698689
    2. ' N' → logprob: -4.511047840118408
    3. '	N' → logprob: -18.88604736328125
    4. '   ' → logprob: -20.01104736328125
    5. ' ' → logprob: -20.38604736328125
    6. '(N' → logprob: -20.76104736328125
    7. 'n' → logprob: -21.01104736328125
    8. ')' → logprob: -21.01104736328125
    9. '```' → logprob: -22.13604736328125
    10. ',N' → logprob: -22.38604736328125

Token 63: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759412050247192
    2. '+' → logprob: -0.8259412050247192
    3. ')' → logprob: -14.45094108581543
    4. '```' → logprob: -14.70094108581543
    5. ' ' → logprob: -15.07594108581543
    6. ',' → logprob: -15.45094108581543
    7. '+n' → logprob: -17.07594108581543
    8. ' ,' → logprob: -17.20094108581543
    9. ' +
' → logprob: -17.70094108581543
    10. '＋' → logprob: -17.82594108581543

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.084206375409849e-05
    2. ' ' → logprob: -10.125041007995605
    3. '```' → logprob: -14.625041007995605
    4. '   ' → logprob: -16.25004005432129
    5. '2' → logprob: -16.37504005432129
    6. ')' → logprob: -17.00004005432129
    7. ' )' → logprob: -18.56254005432129
    8. '  ' → logprob: -18.62504005432129
    9. '``' → logprob: -18.87504005432129
    10. '`' → logprob: -19.25004005432129

Token 65: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12235775589942932
    2. ')' → logprob: -2.2473578453063965
    3. ' )' → logprob: -5.1223578453063965
    4. 'if' → logprob: -6.2473578453063965
    5. ' ' → logprob: -6.9973578453063965
    6. '    ' → logprob: -8.372357368469238
    7. '   ' → logprob: -8.497357368469238
    8. '))' → logprob: -9.622357368469238
    9. '()' → logprob: -10.372357368469238
    10. ' ,' → logprob: -10.372357368469238

Token 66: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07054061442613602
    2. '1' → logprob: -2.8205406665802
    3. ' ' → logprob: -5.070540428161621
    4. '3' → logprob: -6.570540428161621
    5. ')' → logprob: -7.820540428161621
    6. '4' → logprob: -8.695540428161621
    7. '6' → logprob: -9.320540428161621
    8. ' )' → logprob: -9.695540428161621
    9. '```' → logprob: -10.320540428161621
    10. ' n' → logprob: -10.570540428161621

Token 67: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.07211694121360779
    2. '1' → logprob: -2.6971168518066406
    3. '3' → logprob: -6.322116851806641
    4. ' ' → logprob: -8.19711685180664
    5. '4' → logprob: -10.19711685180664
    6. '10' → logprob: -11.32211685180664
    7. '7' → logprob: -11.44711685180664
    8. '6' → logprob: -11.57211685180664
    9. '5' → logprob: -11.94711685180664
    10. '```' → logprob: -12.32211685180664

Token 68: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08330686390399933
    2. ' if' → logprob: -2.5833067893981934
    3. ' )' → logprob: -5.708306789398193
    4. ')))' → logprob: -7.333306789398193
    5. 'if' → logprob: -8.333307266235352
    6. '))' → logprob: -8.833307266235352
    7. ' ' → logprob: -11.333307266235352
    8. '   ' → logprob: -11.583307266235352
    9. ',' → logprob: -12.833307266235352
    10. '):' → logprob: -12.958307266235352

Token 69: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003960497677326202
    2. '   ' → logprob: -6.378960609436035
    3. 'if' → logprob: -7.253960609436035
    4. '    ' → logprob: -7.628960609436035
    5. ' ' → logprob: -7.753960609436035
    6. ')' → logprob: -7.753960609436035
    7. '  ' → logprob: -9.378960609436035
    8. ',' → logprob: -9.628960609436035
    9. ' ,' → logprob: -11.253960609436035
    10. '):' → logprob: -11.628960609436035

Token 70: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.07892449200153351
    2. ' count' → logprob: -2.5789244174957275
    3. '(count' → logprob: -10.828924179077148
    4. 'n' → logprob: -12.078924179077148
    5. '   ' → logprob: -12.203924179077148
    6. ' ' → logprob: -13.578924179077148
    7. ' n' → logprob: -14.203924179077148
    8. '	count' → logprob: -14.578924179077148
    9. '[count' → logprob: -14.953924179077148
    10. ')' → logprob: -15.078924179077148

Token 71: '_div' (ID: 36926)
  Prédit: '_div'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_div' → logprob: -2.935296834039036e-06
    2. '_' → logprob: -12.87500286102295
    3. '_di' → logprob: -15.87500286102295
    4. '_d' → logprob: -16.750003814697266
    5. '_def' → logprob: -17.000003814697266
    6. '<div' → logprob: -17.000003814697266
    7. '_dist' → logprob: -17.125003814697266
    8. 'div' → logprob: -17.375003814697266
    9. '_dis' → logprob: -18.250003814697266
    10. '_DIV' → logprob: -18.625003814697266

Token 72: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -6.12258882028982e-05
    2. 's' → logprob: -11.37506103515625
    3. 'isible' → logprob: -11.37506103515625
    4. 'isor' → logprob: -12.25006103515625
    5. '```' → logprob: -12.87506103515625
    6. '   ' → logprob: -12.87506103515625
    7. '[' → logprob: -13.18756103515625
    8. ')' → logprob: -13.25006103515625
    9. 'ис' → logprob: -13.31256103515625
    10. 'iors' → logprob: -13.43756103515625

Token 73: 'ors' (ID: 914)
  Prédit: 'ors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ors' → logprob: -0.005139119457453489
    2. 'tors' → logprob: -5.630139350891113
    3. 's' → logprob: -6.755139350891113
    4. 'ators' → logprob: -9.130139350891113
    5. '   ' → logprob: -10.380139350891113
    6. 'iors' → logprob: -10.505139350891113
    7. 'o' → logprob: -10.630139350891113
    8. '```' → logprob: -10.755139350891113
    9. 'os' → logprob: -10.880139350891113
    10. 'rors' → logprob: -11.255139350891113

Token 74: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0004164913552813232
    2. '(' → logprob: -7.875416278839111
    3. ' (' → logprob: -10.50041675567627
    4. ')' → logprob: -12.00041675567627
    5. 'n' → logprob: -13.62541675567627
    6. '(N' → logprob: -14.50041675567627
    7. '((' → logprob: -15.37541675567627
    8. '(
' → logprob: -15.75041675567627
    9. ')n' → logprob: -16.250415802001953
    10. '==' → logprob: -16.375415802001953

Token 75: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5500214099884033
    2. ')' → logprob: -1.6750214099884033
    3. ' ==' → logprob: -1.6750214099884033
    4. '()==' → logprob: -3.8000214099884033
    5. '()' → logprob: -3.9250214099884033
    6. ')==' → logprob: -5.425021171569824
    7. '%' → logprob: -7.050021171569824
    8. '=' → logprob: -8.175021171569824
    9. ' )' → logprob: -8.300021171569824
    10. ' ' → logprob: -8.675021171569824

Token 76: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10178033262491226
    2. ' ==' → logprob: -2.351780414581299
    3. '%' → logprob: -7.476780414581299
    4. '=' → logprob: -8.60177993774414
    5. '<=' → logprob: -8.85177993774414
    6. ' ' → logprob: -8.97677993774414
    7. '2' → logprob: -9.10177993774414
    8. '>' → logprob: -9.47677993774414
    9. '()==' → logprob: -9.47677993774414
    10. ')' → logprob: -9.60177993774414

Token 77: ' ' (ID: 220)
  Prédit: '8'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0008204689365811646
    2. ' ' → logprob: -8.62582015991211
    3. '   ' → logprob: -8.62582015991211
    4. '3' → logprob: -8.75082015991211
    5. '2' → logprob: -9.12582015991211
    6. '```' → logprob: -9.87582015991211
    7. '4' → logprob: -10.12582015991211
    8. '	' → logprob: -10.25082015991211
    9. '  ' → logprob: -10.87582015991211
    10. '    ' → logprob: -11.00082015991211

Token 78: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.0007711516227573156
    2. '3' → logprob: -8.250771522521973
    3. '   ' → logprob: -8.750771522521973
    4. '2' → logprob: -9.125771522521973
    5. '```' → logprob: -9.250771522521973
    6. '4' → logprob: -10.500771522521973
    7. '	' → logprob: -10.750771522521973
    8. ' ' → logprob: -10.750771522521973
    9. '    ' → logprob: -11.000771522521973
    10. '``' → logprob: -11.375771522521973

Token 79: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.575945258140564
    2. '))' → logprob: -0.825945258140564
    3. ')))' → logprob: -12.325944900512695
    4. ')
' → logprob: -14.825944900512695
    5. '))
' → logprob: -15.575944900512695
    6. ')n' → logprob: -15.700944900512695
    7. '),' → logprob: -15.825944900512695
    8. ')`' → logprob: -16.325944900512695
    9. ' )' → logprob: -16.575944900512695
    10. '0' → logprob: -16.825944900512695


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 77
Tokens correctement prédits (1ère position, stricte): 34
Tokens correctement prédits (1ère position, avec adaptation): 34
Tokens correctement prédits (top 10): 66
Précision stricte (1ère position): 44.16%
Précision adaptée (1ère position): 44.16%
Précision (top 10): 85.71%
================================================================================
