================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N = eval(input())
P = list(map(int, input().strip().split()))
count = [0]
def is_mid(x, y, z): return (x < y < z) or (x > y > z)
for i in range(*[1, N-1]):
    count[0] += is_mid(P[i-1], P[i], P[i+1])
[print(count[0]),][0]
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' eval' (ID: 29383)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012802376877516508
    2. '('' → logprob: -7.126280307769775
    3. '("("' → logprob: -8.001279830932617
    4. '(eval' → logprob: -9.376279830932617
    5. '(
' → logprob: -11.251279830932617
    6. ''' → logprob: -12.251279830932617
    7. '(N' → logprob: -12.251279830932617
    8. '(input' → logprob: -12.376279830932617
    9. '(open' → logprob: -12.376279830932617
    10. '(user' → logprob: -13.126279830932617

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.059375014156103134
    2. ')' → logprob: -3.684375047683716
    3. '('' → logprob: -4.059374809265137
    4. '("("' → logprob: -5.059374809265137
    5. '()' → logprob: -5.184374809265137
    6. '(""))' → logprob: -6.809374809265137
    7. '())' → logprob: -7.434374809265137
    8. '("")' → logprob: -8.059374809265137
    9. '(
' → logprob: -8.059374809265137
    10. ''' → logprob: -8.684374809265137

Token 5: 'P' (ID: 47)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.281902551651001
    2. 'for' → logprob: -1.406902551651001
    3. '*' → logprob: -1.531902551651001
    4. '+' → logprob: -2.656902551651001
    5. '\n' → logprob: -2.781902551651001
    6. '```' → logprob: -3.406902551651001
    7. '**' → logprob: -3.906902551651001
    8. '#' → logprob: -4.156902313232422
    9. '%' → logprob: -4.781902313232422
    10. 'print' → logprob: -5.156902313232422

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6212438941001892
    2. '(' → logprob: -1.246243953704834
    3. '.' → logprob: -3.121243953704834
    4. '=' → logprob: -3.246243953704834
    5. 'r' → logprob: -3.871243953704834
    6. ')' → logprob: -4.121243953704834
    7. ' =' → logprob: -4.246243953704834
    8. '+' → logprob: -5.246243953704834
    9. '_' → logprob: -5.746243953704834
    10. '[:]' → logprob: -5.871243953704834

Token 7: ' list' (ID: 1562)
  Prédit: 'eval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'eval' → logprob: -1.0103687047958374
    2. ' []' → logprob: -1.7603687047958374
    3. '[]' → logprob: -2.010368824005127
    4. ' eval' → logprob: -2.510368824005127
    5. ' N' → logprob: -2.885368824005127
    6. ' ' → logprob: -3.510368824005127
    7. 'input' → logprob: -3.635368824005127
    8. 'N' → logprob: -3.760368824005127
    9. ' input' → logprob: -3.885368824005127
    10. '[' → logprob: -4.260368824005127

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003475339850410819
    2. '(eval' → logprob: -6.253475189208984
    3. '(range' → logprob: -6.878475189208984
    4. '(input' → logprob: -8.253475189208984
    5. '(map' → logprob: -9.253475189208984
    6. '(int' → logprob: -9.878475189208984
    7. '(P' → logprob: -10.128475189208984
    8. '()' → logprob: -11.253475189208984
    9. '(
' → logprob: -11.378475189208984
    10. '(filter' → logprob: -12.128475189208984

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023525670170783997
    2. '(' → logprob: -3.7735257148742676
    3. '(str' → logprob: -9.27352523803711
    4. 'int' → logprob: -9.39852523803711
    5. '(eval' → logprob: -10.27352523803711
    6. '<int' → logprob: -10.77352523803711
    7. '(input' → logprob: -10.77352523803711
    8. '(
' → logprob: -12.02352523803711
    9. '(lambda' → logprob: -12.14852523803711
    10. '=int' → logprob: -12.27352523803711

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.015663601458072662
    2. ',input' → logprob: -4.2656636238098145
    3. ',' → logprob: -7.5156636238098145
    4. '(' → logprob: -7.6406636238098145
    5. '))' → logprob: -8.765663146972656
    6. 'input' → logprob: -8.765663146972656
    7. '=input' → logprob: -9.890663146972656
    8. '(eval' → logprob: -10.140663146972656
    9. ')' → logprob: -10.640663146972656
    10. ' input' → logprob: -11.640663146972656

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07001735270023346
    2. ' input' → logprob: -2.6950173377990723
    3. '(input' → logprob: -9.57001781463623
    4. ',input' → logprob: -11.94501781463623
    5. ')' → logprob: -12.82001781463623
    6. '=input' → logprob: -13.94501781463623
    7. '	input' → logprob: -14.82001781463623
    8. '<input' → logprob: -15.82001781463623
    9. '[input' → logprob: -16.320016860961914
    10. '```' → logprob: -16.445016860961914

Token 12: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.32409870624542236
    2. '()))' → logprob: -1.6990987062454224
    3. '())' → logprob: -2.824098587036133
    4. '()' → logprob: -3.574098587036133
    5. ')' → logprob: -5.699098587036133
    6. '))' → logprob: -6.324098587036133
    7. '()));' → logprob: -7.074098587036133
    8. '()>' → logprob: -8.699098587036133
    9. '(' → logprob: -9.074098587036133
    10. '())))' → logprob: -9.199098587036133

Token 13: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0015861510764807463
    2. 'strip' → logprob: -6.501585960388184
    3. 'rstrip' → logprob: -9.751585960388184
    4. ' split' → logprob: -10.626585960388184
    5. '(split' → logprob: -14.626585960388184
    6. ')' → logprob: -14.751585960388184
    7. 'spl' → logprob: -15.501585960388184
    8. ' strip' → logprob: -16.1265869140625
    9. 'read' → logprob: -16.3765869140625
    10. 'replace' → logprob: -17.0015869140625

Token 14: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.008270460180938244
    2. '()))' → logprob: -5.133270263671875
    3. '()' → logprob: -6.633270263671875
    4. '(' → logprob: -8.258270263671875
    5. '('' → logprob: -8.258270263671875
    6. '()));' → logprob: -8.758270263671875
    7. '())' → logprob: -9.133270263671875
    8. '))' → logprob: -9.383270263671875
    9. ' ().' → logprob: -10.633270263671875
    10. '('').' → logprob: -11.008270263671875

Token 15: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.796184723294573e-06
    2. ' split' → logprob: -12.625005722045898
    3. 'rstrip' → logprob: -13.000005722045898
    4. '(split' → logprob: -16.0000057220459
    5. 'strip' → logprob: -17.0000057220459
    6. 'spl' → logprob: -17.2500057220459
    7. ')' → logprob: -19.7500057220459
    8. 'startswith' → logprob: -20.0000057220459
    9. 'replace' → logprob: -20.2500057220459
    10. '```' → logprob: -20.3750057220459

Token 16: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7106391191482544
    2. '(' → logprob: -1.3356391191482544
    3. '))' → logprob: -2.085638999938965
    4. '()))' → logprob: -2.960638999938965
    5. '())' → logprob: -3.460638999938965
    6. '('' → logprob: -4.085638999938965
    7. '(','' → logprob: -4.710638999938965
    8. '()' → logprob: -5.085638999938965
    9. ')))' → logprob: -5.460638999938965
    10. '())))' → logprob: -7.335638999938965

Token 17: 'count' (ID: 5420)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3200877606868744
    2. ')' → logprob: -1.6950877904891968
    3. '#' → logprob: -3.5700876712799072
    4. '(' → logprob: -4.195087909698486
    5. ' ' → logprob: -5.070087909698486
    6. '\n' → logprob: -5.070087909698486
    7. '.' → logprob: -5.695087909698486
    8. 'for' → logprob: -5.695087909698486
    9. ''' → logprob: -5.695087909698486
    10. '\' → logprob: -5.820087909698486

Token 18: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08358640223741531
    2. '_' → logprob: -3.2085864543914795
    3. 's' → logprob: -3.3335864543914795
    4. '[' → logprob: -5.7085862159729
    5. '=' → logprob: -8.458586692810059
    6. '('' → logprob: -8.958586692810059
    7. ')' → logprob: -9.958586692810059
    8. '[]' → logprob: -10.583586692810059
    9. '```' → logprob: -10.583586692810059
    10. '_space' → logprob: -10.958586692810059

Token 19: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030928833410143852
    2. ' ' → logprob: -3.53092885017395
    3. '{}' → logprob: -6.905928611755371
    4. '{' → logprob: -9.155928611755371
    5. ' {}' → logprob: -9.905928611755371
    6. '(' → logprob: -11.780928611755371
    7. '[' → logprob: -12.280928611755371
    8. ' {' → logprob: -12.655928611755371
    9. '  ' → logprob: -13.905928611755371
    10. '1' → logprob: -13.905928611755371

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.250097274780273
    3. '(' → logprob: -15.375097274780273
    4. ']' → logprob: -15.625097274780273
    5. '   ' → logprob: -15.750097274780273
    6. ')' → logprob: -15.750097274780273
    7. '1' → logprob: -16.000097274780273
    8. '  ' → logprob: -17.250097274780273
    9. 'int' → logprob: -18.375097274780273
    10. '    ' → logprob: -18.375097274780273

Token 21: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02988574653863907
    2. ']*' → logprob: -3.779885768890381
    3. ']*(' → logprob: -5.779885768890381
    4. ' for' → logprob: -6.404885768890381
    5. '])' → logprob: -6.904885768890381
    6. ' ]' → logprob: -7.904885768890381
    7. ')' → logprob: -8.404885292053223
    8. ',' → logprob: -8.779885292053223
    9. 'for' → logprob: -9.904885292053223
    10. ')]' → logprob: -9.904885292053223

Token 22: 'def' (ID: 1314)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7105956673622131
    2. '0' → logprob: -1.0855956077575684
    3. ' *' → logprob: -3.0855956077575684
    4. '[' → logprob: -3.4605956077575684
    5. ' for' → logprob: -3.4605956077575684
    6. '*(' → logprob: -3.8355956077575684
    7. ' ' → logprob: -4.710595607757568
    8. 'for' → logprob: -5.085595607757568
    9. '*[' → logprob: -5.085595607757568
    10. ']' → logprob: -5.210595607757568

Token 23: ' is' (ID: 382)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.17738346755504608
    2. ' ' → logprob: -2.0523834228515625
    3. ' factorial' → logprob: -4.6773834228515625
    4. 'count' → logprob: -5.4273834228515625
    5. ' solution' → logprob: -6.1773834228515625
    6. ' counter' → logprob: -6.4273834228515625
    7. ' solve' → logprob: -6.4273834228515625
    8. ' dfs' → logprob: -6.4273834228515625
    9. ' process' → logprob: -6.5523834228515625
    10. ' f' → logprob: -6.8023834228515625

Token 24: '_mid' (ID: 105824)
  Prédit: '_prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.9825393557548523
    2. '_' → logprob: -1.482539415359497
    3. '_pal' → logprob: -1.982539415359497
    4. '_sorted' → logprob: -2.982539415359497
    5. '_valid' → logprob: -3.107539415359497
    6. '_in' → logprob: -3.232539415359497
    7. ' ' → logprob: -3.982539415359497
    8. '_p' → logprob: -4.357539176940918
    9. '_even' → logprob: -4.982539176940918
    10. '_div' → logprob: -4.982539176940918

Token 25: '(x' (ID: 4061)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.014385972172021866
    2. 'point' → logprob: -4.639386177062988
    3. '(' → logprob: -6.389386177062988
    4. 'le' → logprob: -7.139386177062988
    5. '_point' → logprob: -7.514386177062988
    6. '_element' → logprob: -8.639386177062988
    7. 'el' → logprob: -9.014386177062988
    8. '(d' → logprob: -9.139386177062988
    9. ')' → logprob: -9.264386177062988
    10. '()' → logprob: -9.264386177062988

Token 26: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04080168157815933
    2. ')' → logprob: -3.290801763534546
    3. ',' → logprob: -6.915801525115967
    4. ')==' → logprob: -8.290802001953125
    5. ')>' → logprob: -8.290802001953125
    6. '):
' → logprob: -8.415802001953125
    7. ' ):' → logprob: -8.790802001953125
    8. ':' → logprob: -8.915802001953125
    9. '==' → logprob: -8.915802001953125
    10. 'x' → logprob: -9.165802001953125

Token 27: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.40039733052253723
    2. ' y' → logprob: -2.275397300720215
    3. 'mid' → logprob: -3.025397300720215
    4. 'N' → logprob: -3.650397300720215
    5. 'x' → logprob: -3.650397300720215
    6. 'P' → logprob: -3.775397300720215
    7. 'n' → logprob: -4.025397300720215
    8. ' mid' → logprob: -4.275397300720215
    9. 'arr' → logprob: -4.650397300720215
    10. 'l' → logprob: -4.775397300720215

Token 28: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11181704699993134
    2. ',' → logprob: -2.7368171215057373
    3. ')' → logprob: -3.2368171215057373
    4. ' ):' → logprob: -7.361816883087158
    5. '):
' → logprob: -7.861816883087158
    6. ' ,' → logprob: -8.861817359924316
    7. '=' → logprob: -9.361817359924316
    8. ' )' → logprob: -9.861817359924316
    9. ')):' → logprob: -9.861817359924316
    10. ')=' → logprob: -10.111817359924316

Token 29: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.2556840777397156
    2. ' z' → logprob: -1.5056841373443604
    3. 'N' → logprob: -7.380683898925781
    4. 'n' → logprob: -8.005683898925781
    5. ' N' → logprob: -8.130683898925781
    6. 'm' → logprob: -8.130683898925781
    7. ' ' → logprob: -8.380683898925781
    8. ' n' → logprob: -8.880683898925781
    9. 'p' → logprob: -8.880683898925781
    10. ')' → logprob: -9.005683898925781

Token 30: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006749955005943775
    2. ')' → logprob: -5.006750106811523
    3. ' ):' → logprob: -11.256750106811523
    4. ''):' → logprob: -11.756750106811523
    5. '):
' → logprob: -11.881750106811523
    6. '）：' → logprob: -13.381750106811523
    7. ')):' → logprob: -14.131750106811523
    8. '"):' → logprob: -14.381750106811523
    9. ':' → logprob: -14.381750106811523
    10. ')：' → logprob: -14.381750106811523

Token 31: ' return' (ID: 622)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6204694509506226
    2. '   ' → logprob: -1.7454694509506226
    3. '<|end|>' → logprob: -2.120469570159912
    4. '(' → logprob: -2.745469570159912
    5. ')' → logprob: -3.370469570159912
    6. ' ' → logprob: -3.870469570159912
    7. ':return' → logprob: -3.870469570159912
    8. '):' → logprob: -4.120469570159912
    9. ':
' → logprob: -6.370469570159912
    10. '  ' → logprob: -6.495469570159912

Token 32: ' (' (ID: 350)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.864586353302002
    2. '(x' → logprob: -0.989586353302002
    3. ' (' → logprob: -2.989586353302002
    4. ' x' → logprob: -2.989586353302002
    5. '(' → logprob: -3.239586353302002
    6. '(P' → logprob: -3.739586353302002
    7. '(y' → logprob: -4.239586353302002
    8. 'y' → logprob: -4.864586353302002
    9. '(abs' → logprob: -5.364586353302002
    10. ' y' → logprob: -5.864586353302002

Token 33: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.19822272658348083
    2. 'y' → logprob: -2.3232226371765137
    3. '(x' → logprob: -2.9482226371765137
    4. 'P' → logprob: -4.698222637176514
    5. '(y' → logprob: -5.198222637176514
    6. ' x' → logprob: -5.323222637176514
    7. ' y' → logprob: -5.948222637176514
    8. 'z' → logprob: -6.073222637176514
    9. '(P' → logprob: -6.198222637176514
    10. ' (' → logprob: -6.448222637176514

Token 34: ' <' (ID: 464)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.28564271330833435
    2. ' +' → logprob: -1.7856427431106567
    3. '<' → logprob: -3.160642623901367
    4. '-' → logprob: -4.660642623901367
    5. '<=' → logprob: -4.785642623901367
    6. ' <' → logprob: -4.910642623901367
    7. ' -' → logprob: -5.410642623901367
    8. '[' → logprob: -5.785642623901367
    9. '+y' → logprob: -6.160642623901367
    10. ' <=' → logprob: -6.535642623901367

Token 35: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.1613689512014389
    2. ' y' → logprob: -1.9113689661026
    3. 'z' → logprob: -7.1613688468933105
    4. '=' → logprob: -9.036369323730469
    5. ' z' → logprob: -9.786369323730469
    6. ' ' → logprob: -10.161369323730469
    7. '>' → logprob: -10.161369323730469
    8. ')' → logprob: -10.286369323730469
    9. '=y' → logprob: -10.911369323730469
    10. '	y' → logprob: -11.536369323730469

Token 36: ' <' (ID: 464)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7111347317695618
    2. '<' → logprob: -1.336134672164917
    3. 'and' → logprob: -1.461134672164917
    4. ' <' → logprob: -4.711134910583496
    5. '>' → logprob: -5.336134910583496
    6. ')' → logprob: -8.961134910583496
    7. '==' → logprob: -9.711134910583496
    8. ' >' → logprob: -10.086134910583496
    9. ' ' → logprob: -10.836134910583496
    10. 'a' → logprob: -12.586134910583496

Token 37: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00018387178715784103
    2. ' z' → logprob: -8.625184059143066
    3. ' ' → logprob: -13.000184059143066
    4. '	z' → logprob: -14.000184059143066
    5. '>' → logprob: -15.000184059143066
    6. 'x' → logprob: -15.250184059143066
    7. ')' → logprob: -15.375184059143066
    8. '  ' → logprob: -16.37518310546875
    9. '=z' → logprob: -17.00018310546875
    10. '   ' → logprob: -17.37518310546875

Token 38: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008174224756658077
    2. ' or' → logprob: -4.883174419403076
    3. 'or' → logprob: -8.008173942565918
    4. ' )' → logprob: -8.383173942565918
    5. ')
' → logprob: -13.258173942565918
    6. '<|end|>' → logprob: -13.758173942565918
    7. '),' → logprob: -13.883173942565918
    8. ' and' → logprob: -14.758173942565918
    9. ' ' → logprob: -15.133173942565918
    10. '	or' → logprob: -15.383173942565918

Token 39: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.537957489490509
    2. '<|end|>' → logprob: -0.912957489490509
    3. ' and' → logprob: -4.537957668304443
    4. 'or' → logprob: -6.287957668304443
    5. '<|end|>' → logprob: -7.037957668304443
    6. 'and' → logprob: -7.662957668304443
    7. '
' → logprob: -7.912957668304443
    8. '[' → logprob: -9.037957191467285
    9. ' ' → logprob: -9.287957191467285
    10. ')' → logprob: -9.662957191467285

Token 40: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.024359844624996185
    2. '(x' → logprob: -4.149359703063965
    3. '(' → logprob: -5.024359703063965
    4. '(z' → logprob: -6.524359703063965
    5. '(y' → logprob: -8.774359703063965
    6. '<|end|>' → logprob: -9.649359703063965
    7. 'x' → logprob: -12.024359703063965
    8. '(True' → logprob: -12.274359703063965
    9. 'z' → logprob: -12.524359703063965
    10. ' x' → logprob: -13.024359703063965

Token 41: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0014671307289972901
    2. 'z' → logprob: -6.626467227935791
    3. ' x' → logprob: -8.876466751098633
    4. ' z' → logprob: -15.001466751098633
    5. '(x' → logprob: -15.251466751098633
    6. 'y' → logprob: -15.626466751098633
    7. '	x' → logprob: -16.001466751098633
    8. ' ' → logprob: -16.001466751098633
    9. 'xz' → logprob: -16.251466751098633
    10. '(' → logprob: -16.376466751098633

Token 42: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6329302787780762
    2. ' >' → logprob: -0.7579302787780762
    3. ')' → logprob: -8.632930755615234
    4. ' ' → logprob: -9.632930755615234
    5. '>)' → logprob: -10.757930755615234
    6. ' and' → logprob: -11.257930755615234
    7. 'y' → logprob: -11.257930755615234
    8. ')>' → logprob: -11.507930755615234
    9. 'and' → logprob: -12.382930755615234
    10. '>x' → logprob: -12.882930755615234

Token 43: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07896414399147034
    2. 'y' → logprob: -2.5789642333984375
    3. ' z' → logprob: -10.203964233398438
    4. '<|end|>' → logprob: -10.578964233398438
    5. 'z' → logprob: -12.203964233398438
    6. ' ' → logprob: -12.828964233398438
    7. '	y' → logprob: -13.453964233398438
    8. '<|end|>' → logprob: -14.203964233398438
    9. '>' → logprob: -14.453964233398438
    10. ')y' → logprob: -14.703964233398438

Token 44: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.47471773624420166
    2. '>' → logprob: -0.9747177362442017
    3. ')' → logprob: -8.34971809387207
    4. ' ' → logprob: -9.09971809387207
    5. '<' → logprob: -9.59971809387207
    6. '<|end|>' → logprob: -9.59971809387207
    7. 'z' → logprob: -9.84971809387207
    8. ' <' → logprob: -9.97471809387207
    9. ' z' → logprob: -11.59971809387207
    10. ' ' → logprob: -11.84971809387207

Token 45: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.5231664180755615
    2. 'z' → logprob: -0.8981664180755615
    3. ' ' → logprob: -11.02316665649414
    4. '<|end|>' → logprob: -11.39816665649414
    5. '	z' → logprob: -12.14816665649414
    6. 'x' → logprob: -12.52316665649414
    7. ')' → logprob: -13.27316665649414
    8. ' x' → logprob: -13.77316665649414
    9. '>' → logprob: -14.21066665649414
    10. '[z' → logprob: -14.39816665649414

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.249780638725497e-05
    2. ')
' → logprob: -11.750032424926758
    3. '<|end|>' → logprob: -11.875032424926758
    4. ' )' → logprob: -12.000032424926758
    5. '))' → logprob: -12.375032424926758
    6. ')return' → logprob: -13.000032424926758
    7. ')`' → logprob: -14.625032424926758
    8. ')**' → logprob: -14.875032424926758
    9. ')

' → logprob: -15.000032424926758
    10. ')}' → logprob: -15.125032424926758

Token 47: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18115341663360596
    2. '<|end|>' → logprob: -2.8061532974243164
    3. '
' → logprob: -3.0561532974243164
    4. ':
' → logprob: -4.681153297424316
    5. '  
' → logprob: -4.931153297424316
    6. '[' → logprob: -4.931153297424316
    7. ' ' → logprob: -5.056153297424316
    8. ' 
' → logprob: -5.431153297424316
    9. '\n' → logprob: -5.556153297424316
    10. ',' → logprob: -5.681153297424316

Token 48: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.024040784686803818
    2. ' _' → logprob: -5.024040699005127
    3. ' ' → logprob: -5.149040699005127
    4. 'i' → logprob: -5.774040699005127
    5. '_' → logprob: -6.024040699005127
    6. ' p' → logprob: -6.149040699005127
    7. ' P' → logprob: -6.274040699005127
    8. ' range' → logprob: -7.274040699005127
    9. ' x' → logprob: -7.524040699005127
    10. '  ' → logprob: -9.024041175842285

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003684162860736251
    2. ' ' → logprob: -6.253684043884277
    3. 'in' → logprob: -6.378684043884277
    4. 'n' → logprob: -10.628684043884277
    5. '  ' → logprob: -11.003684043884277
    6. ' range' → logprob: -12.628684043884277
    7. 'range' → logprob: -12.628684043884277
    8. '	in' → logprob: -12.628684043884277
    9. ' i' → logprob: -13.878684043884277
    10. ' n' → logprob: -14.003684043884277

Token 50: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021486133337021
    2. 'range' → logprob: -2.350214958190918
    3. ' ' → logprob: -12.225214958190918
    4. '(range' → logprob: -13.975214958190918
    5. 'P' → logprob: -14.225214958190918
    6. '	range' → logprob: -14.350214958190918
    7. '  ' → logprob: -14.600214958190918
    8. ' xrange' → logprob: -15.475214958190918
    9. '   ' → logprob: -15.850214958190918
    10. ' P' → logprob: -15.850214958190918

Token 51: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0001483564410591498
    2. '(N' → logprob: -8.87514877319336
    3. '(len' → logprob: -12.12514877319336
    4. ' (' → logprob: -13.12514877319336
    5. '(n' → logprob: -14.12514877319336
    6. '(
' → logprob: -15.62514877319336
    7. ' ' → logprob: -16.75014877319336
    8. '(

' → logprob: -16.87514877319336
    9. '(i' → logprob: -17.25014877319336
    10. '1' → logprob: -17.37514877319336

Token 52: '[' (ID: 58)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006062821019440889
    2. '(N' → logprob: -5.756062984466553
    3. '(range' → logprob: -6.631062984466553
    4. '(len' → logprob: -7.381062984466553
    5. 'range' → logprob: -8.006062507629395
    6. '[' → logprob: -8.631062507629395
    7. ' (' → logprob: -8.756062507629395
    8. '(i' → logprob: -9.506062507629395
    9. '(-' → logprob: -9.756062507629395
    10. '0' → logprob: -10.381062507629395

Token 53: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08155567944049835
    2. '(N' → logprob: -3.0815556049346924
    3. '1' → logprob: -3.7065556049346924
    4. 'N' → logprob: -6.3315558433532715
    5. '2' → logprob: -6.4565558433532715
    6. '0' → logprob: -6.4565558433532715
    7. '(len' → logprob: -6.4565558433532715
    8. '(-' → logprob: -7.4565558433532715
    9. 'len' → logprob: -8.331555366516113
    10. '[' → logprob: -8.706555366516113

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.012912433594465256
    2. ' ,' → logprob: -4.762912273406982
    3. ',N' → logprob: -5.887912273406982
    4. ',len' → logprob: -6.512912273406982
    5. ',n' → logprob: -11.38791275024414
    6. 'len' → logprob: -11.51291275024414
    7. ' ' → logprob: -13.01291275024414
    8. 'N' → logprob: -13.63791275024414
    9. '(len' → logprob: -13.63791275024414
    10. ' N' → logprob: -14.13791275024414

Token 55: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2901901602745056
    2. ' N' → logprob: -1.4151902198791504
    3. 'len' → logprob: -4.91519021987915
    4. ' len' → logprob: -6.54019021987915
    5. ' ' → logprob: -9.040189743041992
    6. '-' → logprob: -10.165189743041992
    7. ' -' → logprob: -10.415189743041992
    8. '  ' → logprob: -11.790189743041992
    9. '(len' → logprob: -12.165189743041992
    10. '	N' → logprob: -12.665189743041992

Token 56: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07383239269256592
    2. ']):' → logprob: -2.9488325119018555
    3. ' -' → logprob: -4.1988325119018555
    4. ']' → logprob: -6.6988325119018555
    5. ',' → logprob: -6.9488325119018555
    6. '])' → logprob: -7.1988325119018555
    7. '):' → logprob: -8.573832511901855
    8. ' ]' → logprob: -8.823832511901855
    9. ')' → logprob: -9.323832511901855
    10. ']):
' → logprob: -9.448832511901855

Token 57: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003222342347726226
    2. ' ' → logprob: -8.250322341918945
    3. '2' → logprob: -9.875322341918945
    4. '0' → logprob: -13.437822341918945
    5. '-' → logprob: -13.687822341918945
    6. '   ' → logprob: -13.812822341918945
    7. '  ' → logprob: -13.937822341918945
    8. '```' → logprob: -14.062822341918945
    9. ')' → logprob: -14.312822341918945
    10. '3' → logprob: -14.625322341918945

Token 58: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.03719338774681091
    2. ']' → logprob: -3.4121932983398438
    3. '])' → logprob: -6.287193298339844
    4. ']:' → logprob: -7.412193298339844
    5. '):' → logprob: -7.662193298339844
    6. ']):
' → logprob: -8.037193298339844
    7. ',' → logprob: -9.162193298339844
    8. ')' → logprob: -9.662193298339844
    9. ' ]' → logprob: -10.537193298339844
    10. ')]' → logprob: -10.662193298339844

Token 59: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14192448556423187
    2. '<|end|>' → logprob: -2.3919243812561035
    3. ' if' → logprob: -4.5169243812561035
    4. ' ' → logprob: -4.7669243812561035
    5. '    
' → logprob: -5.3919243812561035
    6. ' 
' → logprob: -5.6419243812561035
    7. '    ' → logprob: -5.8919243812561035
    8. '       ' → logprob: -6.6419243812561035
    9. '```' → logprob: -6.8919243812561035
    10. '<|end|>' → logprob: -6.8919243812561035

Token 60: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.46497511863708496
    2. 'if' → logprob: -2.214975118637085
    3. ' ' → logprob: -2.464975118637085
    4. '   ' → logprob: -2.589975118637085
    5. '    ' → logprob: -2.589975118637085
    6. ' count' → logprob: -4.589975357055664
    7. '       ' → logprob: -5.214975357055664
    8. 'count' (adapté à ' count') → logprob: -5.214975357055664
    9. ' i' → logprob: -6.464975357055664
    10. '```' → logprob: -6.714975357055664

Token 61: '[' (ID: 58)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013637065887451172
    2. '[-' → logprob: -4.638637065887451
    3. '[' → logprob: -5.888637065887451
    4. '.' → logprob: -7.388637065887451
    5. '.extend' → logprob: -8.51363754272461
    6. '[i' → logprob: -8.63863754272461
    7. ' .' → logprob: -10.51363754272461
    8. '[len' → logprob: -10.76363754272461
    9. '.app' → logprob: -11.01363754272461
    10. ' +=' → logprob: -11.88863754272461

Token 62: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.034523751586675644
    2. '-i' → logprob: -3.5345237255096436
    3. ' -' → logprob: -6.034523963928223
    4. 'i' → logprob: -6.784523963928223
    5. '0' → logprob: -7.409523963928223
    6. ']' → logprob: -8.034523963928223
    7. ' ' → logprob: -9.159523963928223
    8. '-I' → logprob: -9.909523963928223
    9. '(i' → logprob: -10.159523963928223
    10. ' i' → logprob: -10.659523963928223

Token 63: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01684441603720188
    2. ']+=' → logprob: -4.141844272613525
    3. ' ]' → logprob: -7.641844272613525
    4. ']+' → logprob: -8.266844749450684
    5. '+=' → logprob: -10.266844749450684
    6. '+]' → logprob: -10.766844749450684
    7. '+' → logprob: -12.141844749450684
    8. ')' → logprob: -12.641844749450684
    9. ' +=' → logprob: -12.641844749450684
    10. '`]' → logprob: -13.641844749450684

Token 64: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0640721544623375
    2. ' +=' → logprob: -2.8140721321105957
    3. '=' → logprob: -6.439072132110596
    4. '+' → logprob: -7.939072132110596
    5. '+=(' → logprob: -10.064072608947754
    6. ' =' → logprob: -10.314072608947754
    7. ']+=' → logprob: -10.314072608947754
    8. ' ' → logprob: -11.189072608947754
    9. '[' → logprob: -12.564072608947754
    10. '   ' → logprob: -12.689072608947754

Token 65: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.16230180859565735
    2. ' is' → logprob: -2.537301778793335
    3. '1' → logprob: -3.412301778793335
    4. 'int' → logprob: -3.412301778793335
    5. ' int' → logprob: -6.787302017211914
    6. ' ' → logprob: -6.787302017211914
    7. 'not' → logprob: -7.412302017211914
    8. 'P' → logprob: -7.662302017211914
    9. '   ' → logprob: -7.787302017211914
    10. 'len' → logprob: -8.537302017211914

Token 66: '_mid' (ID: 105824)
  Prédit: '_mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_mid' → logprob: -4.417976379045285e-05
    2. 'mid' → logprob: -10.375043869018555
    3. '_' → logprob: -11.500043869018555
    4. 'Mid' → logprob: -14.250043869018555
    5. '_m' → logprob: -14.375043869018555
    6. '(mid' → logprob: -15.250043869018555
    7. '_middle' → logprob: -16.000043869018555
    8. ' mid' → logprob: -16.250043869018555
    9. 'MID' → logprob: -16.250043869018555
    10. '_mod' → logprob: -16.500043869018555

Token 67: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.01705116778612137
    2. '(' → logprob: -4.1420512199401855
    3. '(
' → logprob: -8.017050743103027
    4. '((' → logprob: -8.142050743103027
    5. '(i' → logprob: -8.767050743103027
    6. ' (' → logprob: -9.392050743103027
    7. '('' → logprob: -10.892050743103027
    8. ' ' → logprob: -11.017050743103027
    9. '(p' → logprob: -11.017050743103027
    10. 'P' → logprob: -11.517050743103027

Token 68: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014091627672314644
    2. '[' → logprob: -6.62640905380249
    3. '[
' → logprob: -10.126409530639648
    4. '[P' → logprob: -11.126409530639648
    5. ' [' → logprob: -11.251409530639648
    6. '[I' → logprob: -12.751409530639648
    7. '   ' → logprob: -13.126409530639648
    8. ' ' → logprob: -13.251409530639648
    9. '(i' → logprob: -13.751409530639648
    10. '[(' → logprob: -14.126409530639648

Token 69: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.024692654609680176
    2. '],' → logprob: -4.024692535400391
    3. ' -' → logprob: -5.149692535400391
    4. ' ' → logprob: -7.774692535400391
    5. '1' → logprob: -9.27469253540039
    6. ' ],' → logprob: -9.64969253540039
    7. '   ' → logprob: -10.14969253540039
    8. ']' → logprob: -10.52469253540039
    9. '),' → logprob: -11.27469253540039
    10. '0' → logprob: -11.52469253540039

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.978233846486546e-05
    2. ' ' → logprob: -10.125049591064453
    3. '0' → logprob: -12.125049591064453
    4. '2' → logprob: -13.937549591064453
    5. 'i' → logprob: -14.125049591064453
    6. ']' → logprob: -14.437549591064453
    7. '```' → logprob: -15.062549591064453
    8. '-' → logprob: -15.375049591064453
    9. '],' → logprob: -15.437549591064453
    10. '   ' → logprob: -15.562549591064453

Token 71: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036541218869388103
    2. ' ,' → logprob: -5.7536540031433105
    3. '],' → logprob: -8.878654479980469
    4. ',i' → logprob: -8.878654479980469
    5. '),' → logprob: -9.378654479980469
    6. ' ' → logprob: -10.253654479980469
    7. '>,' → logprob: -10.878654479980469
    8. ',P' → logprob: -11.128654479980469
    9. '‌,' → logprob: -11.503654479980469
    10. '   ' → logprob: -11.753654479980469

Token 72: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.029764965176582336
    2. ' P' → logprob: -3.5297648906707764
    3. '<|end|>' → logprob: -11.279765129089355
    4. '	P' → logprob: -14.654765129089355
    5. '(P' → logprob: -15.154765129089355
    6. ')' → logprob: -15.404765129089355
    7. ',P' → logprob: -15.404765129089355
    8. '>P' → logprob: -15.779765129089355
    9. ' ' → logprob: -15.904765129089355
    10. '<|end|>' → logprob: -16.02976417541504

Token 73: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.054500666621607e-06
    2. '[' → logprob: -13.12500286102295
    3. '[
' → logprob: -13.87500286102295
    4. '```' → logprob: -17.375003814697266
    5. 'i' → logprob: -17.750003814697266
    6. '[I' → logprob: -17.875003814697266
    7. ' [' → logprob: -18.625003814697266
    8. ']' → logprob: -18.750003814697266
    9. '[P' → logprob: -18.750003814697266
    10. '[int' → logprob: -19.125003814697266

Token 74: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.00047630956396460533
    2. ' ],' → logprob: -8.000475883483887
    3. ']' → logprob: -10.375475883483887
    4. '-' → logprob: -10.500475883483887
    5. ',' → logprob: -10.500475883483887
    6. ' ' → logprob: -10.625475883483887
    7. '),' → logprob: -11.375475883483887
    8. ''],' → logprob: -12.500475883483887
    9. '+' → logprob: -12.875475883483887
    10. '>,' → logprob: -13.000475883483887

Token 75: ' P' (ID: 398)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.25196078419685364
    2. ' P' → logprob: -1.5019607543945312
    3. ')' → logprob: -10.626960754394531
    4. ' ' → logprob: -13.376960754394531
    5. '>P' → logprob: -13.501960754394531
    6. '<|end|>' → logprob: -14.251960754394531
    7. '	P' → logprob: -14.376960754394531
    8. '   ' → logprob: -14.626960754394531
    9. '```' → logprob: -15.126960754394531
    10. '`' → logprob: -15.314460754394531

Token 76: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.005966123193502426
    2. 'i' → logprob: -5.1309661865234375
    3. ' i' → logprob: -11.505966186523438
    4. '[' → logprob: -12.505966186523438
    5. '{i' → logprob: -12.505966186523438
    6. '+' → logprob: -12.630966186523438
    7. ' ' → logprob: -12.630966186523438
    8. '1' → logprob: -12.755966186523438
    9. ']' → logprob: -12.880966186523438
    10. '   ' → logprob: -13.005966186523438

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00010521204239921644
    2. ' +' → logprob: -9.250104904174805
    3. '1' → logprob: -12.250104904174805
    4. '])' → logprob: -13.250104904174805
    5. '+
' → logprob: -14.500104904174805
    6. '+i' → logprob: -14.750104904174805
    7. '   ' → logprob: -14.750104904174805
    8. ' ' → logprob: -15.000104904174805
    9. ']+' → logprob: -15.250104904174805
    10. '0' → logprob: -15.750104904174805

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007824686472304165
    2. '])' → logprob: -7.250782489776611
    3. '0' → logprob: -10.125782012939453
    4. ' ' → logprob: -11.500782012939453
    5. 'i' → logprob: -11.750782012939453
    6. ']' → logprob: -12.625782012939453
    7. '+' → logprob: -12.750782012939453
    8. '```' → logprob: -12.875782012939453
    9. ')' → logprob: -13.125782012939453
    10. ']])' → logprob: -14.375782012939453

Token 79: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.43319621682167053
    2. '])' → logprob: -1.0581961870193481
    3. '))' → logprob: -5.683196067810059
    4. ')])' → logprob: -7.308196067810059
    5. '})' → logprob: -8.558196067810059
    6. ')]' → logprob: -9.683196067810059
    7. ')
' → logprob: -9.808196067810059
    8. ''])' → logprob: -10.933196067810059
    9. ']' → logprob: -11.308196067810059
    10. '）' → logprob: -11.433196067810059

Token 80: '[' (ID: 58)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16059595346450806
    2. '
' → logprob: -2.4105958938598633
    3. '<|end|>' → logprob: -3.2855958938598633
    4. '\n' → logprob: -5.160595893859863
    5. ')' → logprob: -5.785595893859863
    6. '[' → logprob: -6.035595893859863
    7. '  
' → logprob: -6.285595893859863
    8. '```' → logprob: -6.410595893859863
    9. ' 
' → logprob: -6.785595893859863
    10. '#' → logprob: -7.160595893859863

Token 81: 'print' (ID: 1598)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.3140760660171509
    2. '-' → logprob: -1.6890760660171509
    3. '0' → logprob: -2.4390759468078613
    4. ':]' → logprob: -2.4390759468078613
    5. 'i' → logprob: -2.5640759468078613
    6. ')]' → logprob: -3.3140759468078613
    7. '>]' → logprob: -3.4390759468078613
    8. ')' → logprob: -3.4390759468078613
    9. 'print' → logprob: -3.5640759468078613
    10. 'count' → logprob: -3.5640759468078613

Token 82: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.11464228481054306
    2. '(' → logprob: -3.239642381668091
    3. '(i' → logprob: -3.489642381668091
    4. '(P' → logprob: -4.114642143249512
    5. '](' → logprob: -4.239642143249512
    6. '(x' → logprob: -6.239642143249512
    7. '(len' → logprob: -6.364642143249512
    8. ']' → logprob: -6.364642143249512
    9. '((' → logprob: -7.864642143249512
    10. '(*' → logprob: -7.989642143249512

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.774276774493046e-05
    2. ')' → logprob: -10.750038146972656
    3. ')[' → logprob: -12.125038146972656
    4. ' [' → logprob: -13.250038146972656
    5. '```' → logprob: -13.375038146972656
    6. '[-' → logprob: -13.500038146972656
    7. ' ' → logprob: -13.750038146972656
    8. '][' → logprob: -13.750038146972656
    9. '0' → logprob: -13.875038146972656
    10. ']' → logprob: -14.750038146972656

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.828512363834307e-05
    2. '-' → logprob: -9.500088691711426
    3. ' ' → logprob: -11.625088691711426
    4. '[' → logprob: -13.687588691711426
    5. ' -' → logprob: -14.562588691711426
    6. '
' → logprob: -15.125088691711426
    7. ')' → logprob: -15.250088691711426
    8. '   ' → logprob: -15.312588691711426
    9. '```' → logprob: -15.437588691711426
    10. '])' → logprob: -15.500088691711426

Token 85: ']),' (ID: 19560)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5891179442405701
    2. '])' → logprob: -1.2141180038452148
    3. ')]' → logprob: -1.9641180038452148
    4. ')])' → logprob: -4.964118003845215
    5. '))' → logprob: -7.464118003845215
    6. ']' → logprob: -9.089118003845215
    7. '])]' → logprob: -9.339118003845215
    8. ' )' → logprob: -10.464118003845215
    9. '),' → logprob: -10.714118003845215
    10. ''])' → logprob: -10.714118003845215

Token 86: '][' (ID: 2696)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08618053048849106
    2. 'exit' → logprob: -3.4611804485321045
    3. ']' → logprob: -4.086180686950684
    4. 'count' → logprob: -4.586180686950684
    5. 'None' → logprob: -4.711180686950684
    6. 'P' → logprob: -6.211180686950684
    7. '0' → logprob: -6.211180686950684
    8. ')' → logprob: -6.211180686950684
    9. 'sum' → logprob: -6.711180686950684
    10. 'len' → logprob: -6.711180686950684

Token 87: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.13648702204227448
    2. '-' → logprob: -2.1364870071411133
    3. '()]' → logprob: -6.136487007141113
    4. '(' → logprob: -6.511487007141113
    5. ':' → logprob: -6.511487007141113
    6. ' ' → logprob: -6.761487007141113
    7. ' -' → logprob: -7.636487007141113
    8. ')' → logprob: -7.636487007141113
    9. ':]' → logprob: -7.761487007141113
    10. ')]' → logprob: -8.511487007141113

Token 88: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.08370339870452881
    2. ')]' → logprob: -2.5837035179138184
    3. '()]' → logprob: -5.708703517913818
    4. ']()' → logprob: -7.083703517913818
    5. ' ]' → logprob: -8.45870304107666
    6. ')' → logprob: -8.58370304107666
    7. ']
' → logprob: -9.83370304107666
    8. '+]' → logprob: -10.33370304107666
    9. '>]' → logprob: -10.45870304107666
    10. '`]' → logprob: -10.45870304107666


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 86
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 68
Précision stricte (1ère position): 43.02%
Précision adaptée (1ère position): 43.02%
Précision (top 10): 79.07%
================================================================================
