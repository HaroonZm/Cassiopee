================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:31
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    N = int(input())
    ans = set()
    from itertools import product,chain,combinations

    def pair(a,b):
        return tuple(sorted((a,b)))
    
    def exclude_indices(iterable, exc):
        return filter(lambda x: x not in exc, iterable)

    def complex_even(N):
        return set(chain.from_iterable(
            chain(
                map(lambda j: [pair(N - i + 1, j), pair(i, j)],
                    exclude_indices(range(1,N+1), {N - i + 1, i}))
            )
            for i in range(1, N+1)
        ))
    
    def complex_odd(N):
        start = set(product(range(1,N), [N]))
        rest = set(chain.from_iterable(
            map(lambda i:
                map(lambda j: [pair(N-i, j), pair(i,j)],
                    exclude_indices(range(1,N+1), {N-i,i}))
            , range(1,N))
        ))
        rest_flat = set(x for sub in rest for x in sub)
        return start | rest_flat

    ans = complex_even(N) if N % 2 == 0 else complex_odd(N)
    print(len(ans))
    for i,j in ans:
        print(i,j)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.373568594455719
    2. '\n' → logprob: -1.7485685348510742
    3. '   ' → logprob: -3.623568534851074
    4. '    
' → logprob: -3.748568534851074
    5. ' 
' → logprob: -3.873568534851074
    6. ''' → logprob: -4.123568534851074
    7. '(' → logprob: -4.623568534851074
    8. '```' → logprob: -4.623568534851074
    9. ' ' → logprob: -5.248568534851074
    10. '    ' → logprob: -5.498568534851074

Token 4: ' N' (ID: 478)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5843620896339417
    2. '   ' → logprob: -1.4593620300292969
    3. 'pass' → logprob: -2.209362030029297
    4. 'return' → logprob: -2.834362030029297
    5. '#' → logprob: -4.209362030029297
    6. 'p' → logprob: -5.209362030029297
    7. '```' → logprob: -5.709362030029297
    8. 'r' → logprob: -5.709362030029297
    9. '\' → logprob: -5.959362030029297
    10. 'a' → logprob: -6.084362030029297

Token 5: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36959168314933777
    2. '=' → logprob: -1.3695917129516602
    3. ' ' → logprob: -3.99459171295166
    4. '_' → logprob: -4.11959171295166
    5. ')' → logprob: -5.11959171295166
    6. ',' → logprob: -5.36959171295166
    7. '   ' → logprob: -5.86959171295166
    8. '.' → logprob: -6.11959171295166
    9. '  ' → logprob: -6.49459171295166
    10. '    ' → logprob: -7.36959171295166

Token 6: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.12677279114723206
    2. ' ' → logprob: -2.251772880554199
    3. 'int' → logprob: -4.501772880554199
    4. '10' → logprob: -6.126772880554199
    5. ' input' → logprob: -8.5017728805542
    6. '0' → logprob: -9.1267728805542
    7. '5' → logprob: -9.2517728805542
    8. '20' → logprob: -9.8767728805542
    9. 'input' → logprob: -10.6267728805542
    10. '=int' → logprob: -11.1267728805542

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012130453251302242
    2. '(input' → logprob: -9.375121116638184
    3. '('' → logprob: -10.750121116638184
    4. ' (' → logprob: -12.125121116638184
    5. '(
' → logprob: -12.750121116638184
    6. '(N' → logprob: -13.625121116638184
    7. '()' → logprob: -14.000121116638184
    8. '(

' → logprob: -14.000121116638184
    9. '("' → logprob: -14.250121116638184
    10. '(`' → logprob: -14.375121116638184

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49558401107788086
    2. ')' → logprob: -1.4955840110778809
    3. '()' → logprob: -2.245584011077881
    4. '())' → logprob: -2.995584011077881
    5. '))' → logprob: -5.495584011077881
    6. '('' → logprob: -5.870584011077881
    7. '')' → logprob: -7.120584011077881
    8. '(
' → logprob: -7.370584011077881
    9. '()))' → logprob: -7.745584011077881
    10. '")' → logprob: -8.370584487915039

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10952894389629364
    2. 'for' → logprob: -3.7345290184020996
    3. '    
' → logprob: -4.2345290184021
    4. '\' → logprob: -4.4845290184021
    5. '\n' → logprob: -4.6095290184021
    6. '```' → logprob: -4.6095290184021
    7. ' for' → logprob: -4.7345290184021
    8. '`' → logprob: -5.1095290184021
    9. ')' → logprob: -5.3595290184021
    10. 'if' → logprob: -6.1095290184021

Token 10: ' ans' (ID: 3345)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.5935615301132202
    2. 'for' → logprob: -1.7185615301132202
    3. '   ' → logprob: -1.7185615301132202
    4. ' for' → logprob: -2.2185616493225098
    5. '\n' → logprob: -3.0935616493225098
    6. 'i' → logprob: -3.3435616493225098
    7. '    
' → logprob: -3.7185616493225098
    8. '\' → logprob: -3.8435616493225098
    9. ' 
' → logprob: -3.8435616493225098
    10. ')' → logprob: -3.8435616493225098

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08333483338356018
    2. '=' → logprob: -2.5833349227905273
    3. ' +=' → logprob: -6.083334922790527
    4. '_' → logprob: -7.208334922790527
    5. ' ' → logprob: -7.333334922790527
    6. ')' → logprob: -8.083334922790527
    7. '[' → logprob: -9.333334922790527
    8. '  ' → logprob: -9.708334922790527
    9. '.' → logprob: -10.083334922790527
    10. '[:]' → logprob: -10.083334922790527

Token 12: ' set' (ID: 920)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1685561239719391
    2. '0' → logprob: -2.0435562133789062
    3. ' N' → logprob: -4.543556213378906
    4. ' "' → logprob: -5.043556213378906
    5. '"' → logprob: -5.168556213378906
    6. ' []' → logprob: -6.668556213378906
    7. ' '' → logprob: -7.668556213378906
    8. ''' → logprob: -7.918556213378906
    9. 'N' → logprob: -8.668556213378906
    10. '[]' → logprob: -8.793556213378906

Token 13: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16054661571979523
    2. '()' → logprob: -1.9105466604232788
    3. '('' → logprob: -9.66054630279541
    4. '((' → logprob: -9.91054630279541
    5. '([]' → logprob: -10.41054630279541
    6. '.' → logprob: -10.78554630279541
    7. '("("' → logprob: -11.03554630279541
    8. '())' → logprob: -11.16054630279541
    9. '(`' → logprob: -11.41054630279541
    10. '([' → logprob: -11.41054630279541

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7326719760894775
    2. '\' → logprob: -1.9826719760894775
    3. '\n' → logprob: -2.3576719760894775
    4. '    
' → logprob: -2.3576719760894775
    5. '```' → logprob: -3.1076719760894775
    6. ' ' → logprob: -3.3576719760894775
    7. '
' → logprob: -3.8576719760894775
    8. '  
' → logprob: -3.9826719760894775
    9. '<|end|>' → logprob: -4.357671737670898
    10. ' 
' → logprob: -4.607671737670898

Token 15: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.078654408454895
    2. '\n' → logprob: -1.078654408454895
    3. '```' → logprob: -2.3286542892456055
    4. ' 
' → logprob: -2.8286542892456055
    5. '\' → logprob: -2.9536542892456055
    6. '    
' → logprob: -3.3286542892456055
    7. ' for' → logprob: -4.3286542892456055
    8. '    ' → logprob: -4.5786542892456055
    9. ' ' → logprob: -4.7036542892456055
    10. 'for' → logprob: -4.9536542892456055

Token 16: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.3042422831058502
    2. ' math' → logprob: -1.4292422533035278
    3. ' collections' → logprob: -4.054242134094238
    4. 'collections' → logprob: -5.679242134094238
    5. 'math' → logprob: -6.554242134094238
    6. ' ' → logprob: -8.679242134094238
    7. ' sys' → logprob: -8.679242134094238
    8. 'it' → logprob: -9.054242134094238
    9. '_' → logprob: -9.179242134094238
    10. ' fractions' → logprob: -10.429242134094238

Token 17: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.011908826418220997
    2. 'import' → logprob: -4.511909008026123
    3. 'ertools' → logprob: -8.511908531188965
    4. '.com' → logprob: -8.636908531188965
    5. '	import' → logprob: -8.636908531188965
    6. '<|end|>' → logprob: -9.011908531188965
    7. ' itertools' → logprob: -10.136908531188965
    8. '.' → logprob: -10.261908531188965
    9. '.import' → logprob: -10.636908531188965
    10. '.im' → logprob: -11.011908531188965

Token 18: ' product' (ID: 1888)
  Prédit: ' permutations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.05338089168071747
    2. ' combinations' → logprob: -3.5533809661865234
    3. ' product' → logprob: -4.053380966186523
    4. 'per' → logprob: -5.803380966186523
    5. 'product' → logprob: -6.053380966186523
    6. 'com' → logprob: -7.428380966186523
    7. ' accumulate' → logprob: -12.053380966186523
    8. ' permutation' → logprob: -12.178380966186523
    9. ' ' → logprob: -12.303380966186523
    10. ' combin' → logprob: -13.178380966186523

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10999990254640579
    2. '   ' → logprob: -3.359999895095825
    3. '\' → logprob: -3.484999895095825
    4. '('' → logprob: -4.110000133514404
    5. '(
' → logprob: -4.985000133514404
    6. '('\' → logprob: -5.110000133514404
    7. '    ' → logprob: -6.235000133514404
    8. '```' → logprob: -6.485000133514404
    9. '(range' → logprob: -6.860000133514404
    10. 'for' → logprob: -7.235000133514404

Token 20: 'chain' (ID: 13289)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.453191339969635
    2. ' permutations' → logprob: -1.4531912803649902
    3. 'per' → logprob: -2.2031912803649902
    4. ' combinations' → logprob: -4.07819128036499
    5. 'repeat' → logprob: -6.95319128036499
    6. ' accumulate' → logprob: -7.57819128036499
    7. 'acc' → logprob: -7.82819128036499
    8. 'chain' → logprob: -7.95319128036499
    9. '```' → logprob: -8.828191757202148
    10. 'count' → logprob: -8.828191757202148

Token 21: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1538829505443573
    2. '('' → logprob: -3.4038829803466797
    3. '<|end|>' → logprob: -3.6538829803466797
    4. '(range' → logprob: -3.7788829803466797
    5. '(
' → logprob: -3.7788829803466797
    6. '()' → logprob: -5.15388298034668
    7. '('\' → logprob: -5.40388298034668
    8. '   ' → logprob: -5.52888298034668
    9. '<|end|>' → logprob: -5.52888298034668
    10. ',' → logprob: -5.65388298034668

Token 22: 'com' (ID: 639)
  Prédit: 'com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.009526687674224377
    2. 'per' → logprob: -5.50952672958374
    3. ' permutations' → logprob: -5.88452672958374
    4. ' combinations' → logprob: -6.25952672958374
    5. 'repeat' → logprob: -8.259526252746582
    6. 'compress' → logprob: -8.759526252746582
    7. 'acc' → logprob: -9.634526252746582
    8. ' ' → logprob: -9.759526252746582
    9. '   ' → logprob: -10.509526252746582
    10. '	com' → logprob: -10.634526252746582

Token 23: 'binations' (ID: 113572)
  Prédit: 'binations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'binations' → logprob: -0.006413728464394808
    2. 'b' → logprob: -5.38141393661499
    3. 'bine' → logprob: -6.63141393661499
    4. '```' → logprob: -8.756413459777832
    5. 'press' → logprob: -9.006413459777832
    6. 'utations' → logprob: -10.131413459777832
    7. 'bin' → logprob: -10.131413459777832
    8. '[b' → logprob: -10.881413459777832
    9. 'pat' → logprob: -11.506413459777832
    10. '>' → logprob: -11.631413459777832

Token 24: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3713292181491852
    2. '(
' → logprob: -1.9963291883468628
    3. '\' → logprob: -2.2463293075561523
    4. '('\' → logprob: -3.8713293075561523
    5. '   ' → logprob: -3.9963293075561523
    6. '
' → logprob: -4.496329307556152
    7. '    
' → logprob: -5.371329307556152
    8. '\n' → logprob: -5.871329307556152
    9. '('' → logprob: -6.246329307556152
    10. 'newline' → logprob: -6.496329307556152

Token 25: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1158723309636116
    2. '(
' → logprob: -3.240872383117676
    3. '('' → logprob: -3.740872383117676
    4. '   ' → logprob: -3.990872383117676
    5. '(range' → logprob: -4.240872383117676
    6. '\' → logprob: -5.990872383117676
    7. '('\' → logprob: -6.115872383117676
    8. '<|end|>' → logprob: -6.240872383117676
    9. '()' → logprob: -6.490872383117676
    10. '```' → logprob: -7.365872383117676

Token 26: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8282774686813354
    2. '   ' → logprob: -1.2032774686813354
    3. ' for' → logprob: -1.4532774686813354
    4. '    
' → logprob: -4.453277587890625
    5. '
' → logprob: -5.328277587890625
    6. '```' → logprob: -6.203277587890625
    7. 's' → logprob: -6.328277587890625
    8. '\n' → logprob: -6.953277587890625
    9. 'a' → logprob: -7.078277587890625
    10. '\' → logprob: -7.328277587890625

Token 27: ' pair' (ID: 10610)
  Prédit: ' powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' powers' → logprob: -0.024241285398602486
    2. ' power' → logprob: -4.3992414474487305
    3. ' all' → logprob: -5.3992414474487305
    4. 'powers' → logprob: -6.0242414474487305
    5. ' bit' → logprob: -7.1492414474487305
    6. ' subsets' → logprob: -7.1492414474487305
    7. '   ' → logprob: -7.1492414474487305
    8. ' pow' → logprob: -7.5242414474487305
    9. ' generate' → logprob: -7.7742414474487305
    10. ' combinations' → logprob: -7.8992414474487305

Token 28: '(a' (ID: 6271)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1555309146642685
    2. 'wise' → logprob: -2.7805309295654297
    3. '(s' → logprob: -3.5305309295654297
    4. '(' → logprob: -3.5305309295654297
    5. '_s' → logprob: -4.40553092956543
    6. '():' → logprob: -4.78053092956543
    7. '_' → logprob: -7.15553092956543
    8. '()' → logprob: -7.40553092956543
    9. 'w' → logprob: -8.03053092956543
    10. '():
' → logprob: -8.65553092956543

Token 29: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03134031593799591
    2. ',b' → logprob: -3.9063403606414795
    3. '):' → logprob: -4.6563401222229
    4. 's' → logprob: -7.7813401222229
    5. ',a' → logprob: -8.906340599060059
    6. ',n' → logprob: -9.156340599060059
    7. ')' → logprob: -9.281340599060059
    8. ' ,' → logprob: -9.281340599060059
    9. 'b' → logprob: -9.531340599060059
    10. ',j' → logprob: -10.406340599060059

Token 30: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005648136138916016
    2. ')' → logprob: -5.505648136138916
    3. ',' → logprob: -6.505648136138916
    4. ' ):' → logprob: -10.380647659301758
    5. '):
' → logprob: -11.880647659301758
    6. ')):' → logprob: -12.380647659301758
    7. ':' → logprob: -12.505647659301758
    8. '=' → logprob: -12.505647659301758
    9. '   ' → logprob: -12.630647659301758
    10. ')=' → logprob: -12.755647659301758

Token 31: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.666305661201477
    2. '       ' → logprob: -1.166305661201477
    3. '   ' → logprob: -2.1663055419921875
    4. '):' → logprob: -3.5413055419921875
    5. '():' → logprob: -4.6663055419921875
    6. '(' → logprob: -5.0413055419921875
    7. ':return' → logprob: -5.6663055419921875
    8. ' return' → logprob: -6.1663055419921875
    9. '<|end|>' → logprob: -6.4163055419921875
    10. ',' → logprob: -6.5413055419921875

Token 32: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7359615564346313
    2. '       ' → logprob: -1.4859615564346313
    3. '   ' → logprob: -1.6109615564346313
    4. 'return' (adapté à ' return') → logprob: -2.985961437225342
    5. '    ' → logprob: -4.235961437225342
    6. ' ' → logprob: -4.360961437225342
    7. ' if' → logprob: -4.735961437225342
    8. ' for' → logprob: -5.735961437225342
    9. '        ' → logprob: -6.610961437225342
    10. '  ' → logprob: -7.235961437225342

Token 33: ' tuple' (ID: 31311)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.39288032054901123
    2. '[(' → logprob: -2.017880439758301
    3. ' (' → logprob: -2.642880439758301
    4. 'a' → logprob: -3.267880439758301
    5. '{' → logprob: -3.267880439758301
    6. '[a' → logprob: -4.267880439758301
    7. '(' → logprob: -5.267880439758301
    8. ' [(' → logprob: -5.767880439758301
    9. 'list' → logprob: -5.892880439758301
    10. ' a' → logprob: -6.017880439758301

Token 34: '(sorted' (ID: 92488)
  Prédit: '(sorted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sorted' → logprob: -0.4895113706588745
    2. '(a' → logprob: -1.2395113706588745
    3. '(' → logprob: -3.239511489868164
    4. '((' → logprob: -3.614511489868164
    5. '([' → logprob: -3.989511489868164
    6. 'sorted' → logprob: -5.114511489868164
    7. '(x' → logprob: -6.114511489868164
    8. '(i' → logprob: -6.989511489868164
    9. '[a' → logprob: -7.239511489868164
    10. '([(' → logprob: -7.489511489868164

Token 35: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07856231927871704
    2. '(' → logprob: -3.3285622596740723
    3. '([' → logprob: -3.3285622596740723
    4. '(a' → logprob: -5.578562259674072
    5. '(('' → logprob: -10.70356273651123
    6. '({' → logprob: -10.95356273651123
    7. '(([' → logprob: -11.20356273651123
    8. '([
' → logprob: -11.95356273651123
    9. '(['' → logprob: -12.20356273651123
    10. '<|end|>' → logprob: -12.32856273651123

Token 36: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0001684981834841892
    2. ' a' → logprob: -9.125168800354004
    3. '(a' → logprob: -9.875168800354004
    4. ' ' → logprob: -12.625168800354004
    5. '   ' → logprob: -12.750168800354004
    6. ' (' → logprob: -14.125168800354004
    7. ')a' → logprob: -14.875168800354004
    8. '  ' → logprob: -15.000168800354004
    9. '	a' → logprob: -16.000167846679688
    10. '[a' → logprob: -16.500167846679688

Token 37: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.13943350315093994
    2. ',' → logprob: -2.1394333839416504
    3. ' ,' → logprob: -4.38943338394165
    4. ',
' → logprob: -11.764433860778809
    5. ' ,
' → logprob: -12.764433860778809
    6. ' ' → logprob: -12.889433860778809
    7. 'b' → logprob: -14.264433860778809
    8. ',s' → logprob: -14.389433860778809
    9. ',k' → logprob: -14.639433860778809
    10. '   ' → logprob: -14.889433860778809

Token 38: ')))
' (ID: 12562)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.002879295265302062
    2. ')' → logprob: -6.0028791427612305
    3. '))' → logprob: -7.8778791427612305
    4. ')))
' → logprob: -11.50287914276123
    5. ' ' → logprob: -12.25287914276123
    6. '))))' → logprob: -12.50287914276123
    7. ')));' → logprob: -13.12787914276123
    8. '   ' → logprob: -13.25287914276123
    9. '')))' → logprob: -14.12787914276123
    10. '),' → logprob: -14.62787914276123

Token 39: '    
' (ID: 1944)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1741935908794403
    2. '<|end|>' → logprob: -2.6741936206817627
    3. '    
' → logprob: -3.2991936206817627
    4. '   ' → logprob: -3.2991936206817627
    5. ')' → logprob: -5.174193382263184
    6. '\n' → logprob: -5.674193382263184
    7. '  
' → logprob: -6.299193382263184
    8. '<|end|>' → logprob: -6.549193382263184
    9. ' 
' → logprob: -6.924193382263184
    10. '' → logprob: -7.299193382263184

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018052493687719107
    2. '
' → logprob: -7.376805305480957
    3. '    
' → logprob: -7.626805305480957
    4. ' for' → logprob: -8.376805305480957
    5. '<|end|>' → logprob: -8.501805305480957
    6. 'for' → logprob: -8.876805305480957
    7. '<|end|>' → logprob: -10.376805305480957
    8. 'def' → logprob: -10.876805305480957
    9. '```' → logprob: -11.876805305480957
    10. '       ' → logprob: -12.376805305480957

Token 41: ' def' (ID: 1056)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20425522327423096
    2. '   ' → logprob: -2.8292551040649414
    3. ' for' → logprob: -2.8292551040649414
    4. 'edges' → logprob: -4.454255104064941
    5. 'res' → logprob: -4.704255104064941
    6. 'def' (adapté à ' def') → logprob: -4.704255104064941
    7. 's' → logprob: -4.954255104064941
    8. 'S' → logprob: -5.454255104064941
    9. 'all' → logprob: -5.454255104064941
    10. ' res' → logprob: -5.954255104064941

Token 42: ' exclude' (ID: 39566)
  Prédit: ' powers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' powers' → logprob: -0.7229152917861938
    2. ' power' → logprob: -0.9729152917861938
    3. ' subsets' → logprob: -3.3479151725769043
    4. ' combinations' → logprob: -3.4729151725769043
    5. 'powers' → logprob: -3.7229151725769043
    6. ' all' → logprob: -4.472915172576904
    7. 'com' → logprob: -4.847915172576904
    8. 'power' → logprob: -5.222915172576904
    9. ' chain' → logprob: -5.222915172576904
    10. ' subse' → logprob: -5.847915172576904

Token 43: '_indices' (ID: 43508)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4017077684402466
    2. '(a' → logprob: -2.026707649230957
    3. '(lst' → logprob: -3.151707649230957
    4. '_' → logprob: -3.651707649230957
    5. '_sets' → logprob: -3.651707649230957
    6. '(s' → logprob: -3.901707649230957
    7. '_set' → logprob: -4.276707649230957
    8. '(set' → logprob: -4.776707649230957
    9. '(_' → logprob: -4.901707649230957
    10. ' (' → logprob: -5.151707649230957

Token 44: '(iter' (ID: 61014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11819745600223541
    2. '(indices' → logprob: -2.493197441101074
    3. ' (' → logprob: -3.743197441101074
    4. '(n' → logprob: -6.743197441101074
    5. '(a' → logprob: -6.743197441101074
    6. '(i' → logprob: -7.493197441101074
    7. '(lst' → logprob: -7.493197441101074
    8. '(s' → logprob: -7.618197441101074
    9. '(ids' → logprob: -8.743197441101074
    10. '(nums' → logprob: -8.868197441101074

Token 45: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.00011152983643114567
    2. 'ator' → logprob: -9.62511157989502
    3. 'ables' → logprob: -10.37511157989502
    4. '=' → logprob: -12.12511157989502
    5. 'ABLE' → logprob: -13.50011157989502
    6. '```' → logprob: -13.50011157989502
    7. '(' → logprob: -13.62511157989502
    8. ')' → logprob: -13.87511157989502
    9. ' able' → logprob: -14.25011157989502
    10. '-able' → logprob: -14.62511157989502

Token 46: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008040298125706613
    2. ' ,' → logprob: -7.7508039474487305
    3. '):' → logprob: -8.00080394744873
    4. '   ' → logprob: -11.62580394744873
    5. ',n' → logprob: -12.12580394744873
    6. ',index' → logprob: -12.25080394744873
    7. ',int' → logprob: -12.87580394744873
    8. ')' → logprob: -13.50080394744873
    9. 's' → logprob: -13.75080394744873
    10. '):
' → logprob: -14.00080394744873

Token 47: ' exc' (ID: 3529)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -0.5843902230262756
    2. ' exclude' → logprob: -1.5843901634216309
    3. 'indices' → logprob: -2.334390163421631
    4. 'exclude' → logprob: -2.709390163421631
    5. ' idx' → logprob: -3.834390163421631
    6. 'ex' → logprob: -4.584390163421631
    7. ' excludes' → logprob: -4.584390163421631
    8. ' to' → logprob: -5.459390163421631
    9. ' excluded' → logprob: -5.459390163421631
    10. 'excluded' → logprob: -5.584390163421631

Token 48: '):
' (ID: 1883)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.31535038352012634
    2. 'lude' → logprob: -1.3153504133224487
    3. 'lu' → logprob: -7.315350532531738
    4. 'uded' → logprob: -8.190350532531738
    5. 'ude' → logprob: -8.565350532531738
    6. '=' → logprob: -8.690350532531738
    7. '

' → logprob: -8.815350532531738
    8. '```' → logprob: -9.065350532531738
    9. 'udes' → logprob: -9.315350532531738
    10. 'ls' → logprob: -9.690350532531738

Token 49: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7534855604171753
    2. ':' → logprob: -1.3784855604171753
    3. '       ' → logprob: -1.6284855604171753
    4. '):' → logprob: -2.753485679626465
    5. ',' → logprob: -5.003485679626465
    6. '):
' → logprob: -5.503485679626465
    7. ')' → logprob: -6.128485679626465
    8. '    ' → logprob: -7.128485679626465
    9. '=' → logprob: -7.628485679626465
    10. 's' → logprob: -8.003485679626465

Token 50: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.33893951773643494
    2. 'return' (adapté à ' return') → logprob: -1.5889395475387573
    3. ' for' → logprob: -3.4639394283294678
    4. '   ' → logprob: -3.5889394283294678
    5. 'for' → logprob: -4.338939666748047
    6. ' yield' → logprob: -4.838939666748047
    7. 'yield' → logprob: -5.838939666748047
    8. '       ' → logprob: -9.213939666748047
    9. '    ' → logprob: -9.463939666748047
    10. ' ' → logprob: -9.463939666748047

Token 51: ' filter' (ID: 6690)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.44099441170692444
    2. 'tuple' → logprob: -2.5659945011138916
    3. '(tuple' → logprob: -2.8159945011138916
    4. 'chain' → logprob: -2.9409945011138916
    5. '(' → logprob: -3.1909945011138916
    6. ' (' → logprob: -3.5659945011138916
    7. '[' → logprob: -4.3159942626953125
    8. '(t' → logprob: -4.4409942626953125
    9. '(i' → logprob: -4.4409942626953125
    10. '(a' → logprob: -4.6909942626953125

Token 52: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.003412251826375723
    2. 'false' → logprob: -6.253412246704102
    3. 'lambda' → logprob: -6.753412246704102
    4. '(
' → logprob: -8.628412246704102
    5. '(' → logprob: -9.878412246704102
    6. '(False' → logprob: -10.378412246704102
    7. 'False' → logprob: -10.753412246704102
    8. '   ' → logprob: -11.378412246704102
    9. '(None' → logprob: -11.753412246704102
    10. '=lambda' → logprob: -12.253412246704102

Token 53: ' x' (ID: 1215)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5454723834991455
    2. 'i' → logprob: -1.0454723834991455
    3. ' x' → logprob: -3.2954723834991455
    4. ' idx' → logprob: -4.295472145080566
    5. 'x' → logprob: -4.545472145080566
    6. 'idx' → logprob: -5.420472145080566
    7. ' ' → logprob: -7.045472145080566
    8. ' ix' → logprob: -7.170472145080566
    9. 'k' → logprob: -8.045472145080566
    10. '   ' → logprob: -8.045472145080566

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009095562854781747
    2. 'x' → logprob: -7.625909328460693
    3. ',' → logprob: -9.125909805297852
    4. ' :' → logprob: -9.125909805297852
    5. ':x' → logprob: -9.375909805297852
    6. ',x' → logprob: -11.000909805297852
    7. '=' → logprob: -11.000909805297852
    8. '   ' → logprob: -11.000909805297852
    9. 'a' → logprob: -11.125909805297852
    10. ' x' → logprob: -11.500909805297852

Token 55: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3137422204017639
    2. ' x' → logprob: -1.3137421607971191
    3. ' all' → logprob: -8.438742637634277
    4. ' ' → logprob: -9.438742637634277
    5. '   ' → logprob: -9.688742637634277
    6. 'all' → logprob: -9.688742637634277
    7. '  ' → logprob: -10.813742637634277
    8. '(x' → logprob: -11.688742637634277
    9. 'lambda' → logprob: -12.688742637634277
    10. ' not' → logprob: -12.751242637634277

Token 56: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.23781901597976685
    2. 'not' → logprob: -1.612818956375122
    3. '[' → logprob: -4.612819194793701
    4. '!=' → logprob: -6.987819194793701
    5. 'x' → logprob: -7.362819194793701
    6. ' !=' → logprob: -7.737819194793701
    7. ':' → logprob: -8.862818717956543
    8. '0' → logprob: -9.362818717956543
    9. '   ' → logprob: -10.237818717956543
    10. ' ' → logprob: -10.237818717956543

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02090701274573803
    2. 'in' → logprob: -3.895906925201416
    3. '=' → logprob: -8.395907402038574
    4. '<|end|>' → logprob: -10.395907402038574
    5. ')' → logprob: -10.770907402038574
    6. ' ' → logprob: -10.895907402038574
    7. '(exc' → logprob: -11.020907402038574
    8. '    ' → logprob: -11.395907402038574
    9. '<|end|>' → logprob: -12.145907402038574
    10. '  ' → logprob: -12.395907402038574

Token 58: ' exc' (ID: 3529)
  Prédit: 'exc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exc' → logprob: -0.1002708226442337
    2. ' exc' → logprob: -2.3502707481384277
    3. '(exc' → logprob: -10.225271224975586
    4. 'set' → logprob: -11.725271224975586
    5. '_exc' → logprob: -11.725271224975586
    6. ' set' → logprob: -12.600271224975586
    7. 'ex' → logprob: -12.850271224975586
    8. '   ' → logprob: -13.475271224975586
    9. 'Exc' → logprob: -13.600271224975586
    10. 'exec' → logprob: -13.850271224975586

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027900191489607096
    2. ' ,' → logprob: -6.2527899742126465
    3. '   ' → logprob: -7.6277899742126465
    4. '),' → logprob: -8.377790451049805
    5. ')' → logprob: -9.502790451049805
    6. '       ' → logprob: -10.252790451049805
    7. ' ' → logprob: -12.002790451049805
    8. '  ' → logprob: -13.002790451049805
    9. ',map' → logprob: -13.002790451049805
    10. ',
' → logprob: -13.377790451049805

Token 60: ' iterable' (ID: 113880)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.5993407964706421
    2. ' iterable' → logprob: -1.974340796470642
    3. 'range' → logprob: -2.0993409156799316
    4. 'iter' → logprob: -2.4743409156799316
    5. ' range' → logprob: -2.4743409156799316
    6. ' enumerate' → logprob: -4.724340915679932
    7. '   ' → logprob: -5.474340915679932
    8. ' iter' → logprob: -6.349340915679932
    9. '       ' → logprob: -6.599340915679932
    10. ' itertools' → logprob: -6.599340915679932

Token 61: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017243190086446702
    2. '   ' → logprob: -9.37517261505127
    3. ' )' → logprob: -10.12517261505127
    4. ')
' → logprob: -10.50017261505127
    5. '       ' → logprob: -11.12517261505127
    6. ' ' → logprob: -13.37517261505127
    7. ')

' → logprob: -13.62517261505127
    8. '))' → logprob: -14.62517261505127
    9. ')}' → logprob: -14.87517261505127
    10. '())' → logprob: -15.00017261505127

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7699686288833618
    2. '
' → logprob: -1.0199686288833618
    3. '    
' → logprob: -2.0199685096740723
    4. '<|end|>' → logprob: -4.019968509674072
    5. 'def' → logprob: -4.519968509674072
    6. '<|end|>' → logprob: -5.644968509674072
    7. '

' → logprob: -5.769968509674072
    8. '  
' → logprob: -5.769968509674072
    9. ')' → logprob: -6.519968509674072
    10. '    

' → logprob: -7.769968509674072

Token 63: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07179035991430283
    2. '
' → logprob: -3.6967904567718506
    3. '    
' → logprob: -3.6967904567718506
    4. 'indices' → logprob: -4.8217902183532715
    5. 'for' → logprob: -5.3217902183532715
    6. ' for' → logprob: -6.0717902183532715
    7. ' lines' → logprob: -7.3217902183532715
    8. ' indices' → logprob: -7.5717902183532715
    9. '  
' → logprob: -7.9467902183532715
    10. 'n' → logprob: -8.19679069519043

Token 64: ' complex' (ID: 8012)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.32557207345962524
    2. ' subsets' → logprob: -2.3255720138549805
    3. ' chain' → logprob: -2.7005720138549805
    4. ' combinations' → logprob: -3.0755720138549805
    5. ' is' → logprob: -4.3255720138549805
    6. ' powers' → logprob: -4.5755720138549805
    7. ' pairs' → logprob: -4.8255720138549805
    8. ' subse' → logprob: -5.0755720138549805
    9. ' power' → logprob: -5.3255720138549805
    10. ' pair' → logprob: -5.8255720138549805

Token 65: '_even' (ID: 186029)
  Prédit: '_com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_com' → logprob: -0.8306248784065247
    2. 'ity' → logprob: -1.3306248188018799
    3. '_product' → logprob: -3.08062481880188
    4. '_pair' → logprob: -3.33062481880188
    5. '(' → logprob: -3.58062481880188
    6. '_function' → logprob: -3.70562481880188
    7. '_chain' → logprob: -3.95562481880188
    8. '_m' → logprob: -4.330625057220459
    9. '_query' → logprob: -4.580625057220459
    10. '_comb' → logprob: -4.580625057220459

Token 66: '(N' (ID: 10564)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.5179376602172852
    2. '():' → logprob: -2.142937660217285
    3. '(' → logprob: -2.517937660217285
    4. '_subset' → logprob: -2.767937660217285
    5. '_sum' → logprob: -2.892937660217285
    6. '_' → logprob: -2.892937660217285
    7. '(iter' → logprob: -3.267937660217285
    8. 's' → logprob: -3.517937660217285
    9. '_indices' → logprob: -3.517937660217285
    10. '_length' → logprob: -3.517937660217285

Token 67: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006750239408574998
    2. ',' → logprob: -8.125675201416016
    3. ')' → logprob: -9.125675201416016
    4. ' ):' → logprob: -9.125675201416016
    5. '):
' → logprob: -9.250675201416016
    6. ':' → logprob: -10.125675201416016
    7. '   ' → logprob: -11.750675201416016
    8. '=' → logprob: -12.375675201416016
    9. '**' → logprob: -12.750675201416016
    10. '-' → logprob: -13.375675201416016

Token 68: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02095640078186989
    2. ':' → logprob: -4.770956516265869
    3. '<|end|>' → logprob: -5.145956516265869
    4. '   ' → logprob: -5.270956516265869
    5. '<|end|>' → logprob: -8.395956039428711
    6. '    ' → logprob: -8.395956039428711
    7. '```' → logprob: -9.020956039428711
    8. '(n' → logprob: -9.520956039428711
    9. '        
' → logprob: -9.520956039428711
    10. '#' → logprob: -9.645956039428711

Token 69: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7931933403015137
    2. ' res' → logprob: -1.9181933403015137
    3. ' result' → logprob: -2.0431933403015137
    4. ' return' → logprob: -2.0431933403015137
    5. ' for' → logprob: -2.6681933403015137
    6. ' ans' → logprob: -2.7931933403015137
    7. ' if' → logprob: -2.7931933403015137
    8. ' bases' → logprob: -3.0431933403015137
    9. ' s' → logprob: -3.4181933403015137
    10. ' from' → logprob: -3.9181933403015137

Token 70: ' set' (ID: 920)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4709571599960327
    2. '{' → logprob: -1.4709571599960327
    3. ' [' → logprob: -2.2209572792053223
    4. '[(' → logprob: -2.5959572792053223
    5. ' {' → logprob: -2.9709572792053223
    6. '[N' → logprob: -3.0959572792053223
    7. 'complex' → logprob: -3.4709572792053223
    8. '[int' → logprob: -3.4709572792053223
    9. ' ' → logprob: -3.7209572792053223
    10. '2' → logprob: -3.8459572792053223

Token 71: '(chain' (ID: 124348)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2322367429733276
    2. '(com' → logprob: -1.7322367429733276
    3. '(' → logprob: -1.9822367429733276
    4. '({' → logprob: -2.357236862182617
    5. '(chain' → logprob: -2.482236862182617
    6. '(range' → logprob: -2.732236862182617
    7. '(product' → logprob: -2.732236862182617
    8. '(i' → logprob: -4.232236862182617
    9. '(pair' → logprob: -4.482236862182617
    10. '(filter' → logprob: -4.482236862182617

Token 72: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.003917395602911711
    2. '(' → logprob: -6.253917217254639
    3. '(com' → logprob: -6.503917217254639
    4. '(*' → logprob: -8.878917694091797
    5. '(from' → logprob: -9.003917694091797
    6. '(
' → logprob: -9.128917694091797
    7. '(*(' → logprob: -10.378917694091797
    8. 'from' → logprob: -11.128917694091797
    9. '   ' → logprob: -11.128917694091797
    10. '(product' → logprob: -11.378917694091797

Token 73: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.006963774096220732
    2. 'iter' → logprob: -5.006963729858398
    3. ' itertools' → logprob: -8.881963729858398
    4. '_' → logprob: -10.506963729858398
    5. '(iter' → logprob: -10.506963729858398
    6. '_iterator' → logprob: -10.756963729858398
    7. 'it' → logprob: -11.381963729858398
    8. 'Iterable' → logprob: -12.756963729858398
    9. ' iter' → logprob: -13.006963729858398
    10. '	iter' → logprob: -13.256963729858398

Token 74: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0008784697856754065
    2. '(chain' → logprob: -7.87587833404541
    3. 'chain' → logprob: -8.75087833404541
    4. 'ables' → logprob: -9.62587833404541
    5. '(product' → logprob: -9.75087833404541
    6. 'product' → logprob: -9.87587833404541
    7. 'gable' → logprob: -10.50087833404541
    8. 'e' → logprob: -10.62587833404541
    9. 'ation' → logprob: -11.00087833404541
    10. 'ate' → logprob: -11.37587833404541

Token 75: '(
' (ID: 1607)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.005277038086205721
    2. '(' → logprob: -5.380277156829834
    3. 'com' → logprob: -8.255276679992676
    4. '([' → logprob: -8.755276679992676
    5. '(
' → logprob: -9.380276679992676
    6. '((' → logprob: -9.505276679992676
    7. '   ' → logprob: -11.130276679992676
    8. '(product' → logprob: -11.130276679992676
    9. '[' → logprob: -11.255276679992676
    10. '(chain' → logprob: -11.755276679992676

Token 76: '           ' (ID: 352)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.04311269149184227
    2. 'com' → logprob: -3.5431127548217773
    3. '       ' → logprob: -5.418112754821777
    4. '(' → logprob: -5.918112754821777
    5. '   ' → logprob: -6.043112754821777
    6. '(product' → logprob: -6.793112754821777
    7. ' combinations' → logprob: -6.793112754821777
    8. '           ' → logprob: -7.918112754821777
    9. '[' → logprob: -8.168112754821777
    10. 'product' → logprob: -8.293112754821777

Token 77: ' chain' (ID: 13464)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.2967699468135834
    2. 'com' → logprob: -1.5467699766159058
    3. ' combinations' → logprob: -3.296769857406616
    4. '   ' → logprob: -6.421770095825195
    5. '(product' → logprob: -6.671770095825195
    6. 'product' → logprob: -6.921770095825195
    7. '[' → logprob: -7.046770095825195
    8. '(pair' → logprob: -7.546770095825195
    9. '(' → logprob: -8.046770095825195
    10. 'pair' → logprob: -8.421770095825195

Token 78: '(
' (ID: 1607)
  Prédit: '.from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0008756125462241471
    2. '(' → logprob: -7.375875473022461
    3. '(
' → logprob: -8.750875473022461
    4. 'from' → logprob: -9.750875473022461
    5. '_from' → logprob: -11.250875473022461
    6. '(from' → logprob: -11.625875473022461
    7. '([' → logprob: -12.875875473022461
    8. '(com' → logprob: -13.000875473022461
    9. '((' → logprob: -13.500875473022461
    10. '(chain' → logprob: -14.375875473022461

Token 79: '               ' (ID: 506)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.3807690739631653
    2. '(
' → logprob: -1.7557690143585205
    3. '(' → logprob: -2.6307690143585205
    4. '(product' → logprob: -3.7557690143585205
    5. '               ' → logprob: -3.8807690143585205
    6. '(map' → logprob: -4.8807692527771
    7. '((' → logprob: -5.0057692527771
    8. '([' → logprob: -5.2557692527771
    9. '           ' → logprob: -5.2557692527771
    10. '(pair' → logprob: -7.1307692527771

Token 80: ' map' (ID: 4014)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.40062233805656433
    2. 'com' → logprob: -1.2756223678588867
    3. 'product' → logprob: -4.150622367858887
    4. '           ' → logprob: -4.650622367858887
    5. '   ' → logprob: -5.275622367858887
    6. '(product' → logprob: -5.400622367858887
    7. '       ' → logprob: -5.650622367858887
    8. '(' → logprob: -6.150622367858887
    9. '(
' → logprob: -6.150622367858887
    10. '[' → logprob: -6.150622367858887

Token 81: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.5898959040641785
    2. '(' → logprob: -0.8398959040641785
    3. '(
' → logprob: -4.839895725250244
    4. '(pair' → logprob: -6.214895725250244
    5. '(part' → logprob: -6.714895725250244
    6. '(com' → logprob: -6.964895725250244
    7. '(product' → logprob: -7.214895725250244
    8. '(p' → logprob: -7.714895725250244
    9. '(tuple' → logprob: -8.589896202087402
    10. '(chain' → logprob: -9.089896202087402

Token 82: ' j' (ID: 441)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.125510334968567
    2. ' pair' → logprob: -1.375510334968567
    3. ' tuple' → logprob: -2.1255102157592773
    4. 'pair' → logprob: -2.6255102157592773
    5. 'lambda' → logprob: -2.7505102157592773
    6. ' x' → logprob: -3.0005102157592773
    7. 'tuple' → logprob: -4.250510215759277
    8. 's' → logprob: -4.375510215759277
    9. '(lambda' → logprob: -4.375510215759277
    10. ' s' → logprob: -4.500510215759277

Token 83: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006218921043910086
    2. ',' → logprob: -8.500621795654297
    3. ' :' → logprob: -9.125621795654297
    4. '(lambda' → logprob: -9.500621795654297
    5. ',j' → logprob: -9.750621795654297
    6. 'lambda' → logprob: -10.250621795654297
    7. ':j' → logprob: -11.000621795654297
    8. ':
' → logprob: -11.125621795654297
    9. '=lambda' → logprob: -11.250621795654297
    10. '   ' → logprob: -11.375621795654297

Token 84: ' [' (ID: 723)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.6530992984771729
    2. 'pair' → logprob: -2.153099298477173
    3. ' product' → logprob: -3.028099298477173
    4. '(com' → logprob: -3.278099298477173
    5. '(pair' → logprob: -3.403099298477173
    6. '{' → logprob: -3.528099298477173
    7. ' range' → logprob: -3.778099298477173
    8. ' (' → logprob: -3.903099298477173
    9. '   ' → logprob: -4.028099060058594
    10. ' {' → logprob: -4.153099060058594

Token 85: 'pair' (ID: 25488)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.4947681427001953
    2. '(pair' → logprob: -1.8697681427001953
    3. 'pair' → logprob: -2.1197681427001953
    4. '(com' → logprob: -2.1197681427001953
    5. '(range' → logprob: -3.1197681427001953
    6. '{' → logprob: -3.2447681427001953
    7. 'range' → logprob: -3.3697681427001953
    8. '(j' → logprob: -3.4947681427001953
    9. '(' → logprob: -3.6197681427001953
    10. '(a' → logprob: -4.119768142700195

Token 86: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12666651606559753
    2. '(j' → logprob: -2.75166654586792
    3. '(' → logprob: -3.87666654586792
    4. '(N' → logprob: -3.87666654586792
    5. '((' → logprob: -4.87666654586792
    6. '(n' → logprob: -5.87666654586792
    7. '(k' → logprob: -6.50166654586792
    8. '(a' → logprob: -7.50166654586792
    9. '(x' → logprob: -7.75166654586792
    10. '(s' → logprob: -8.501666069030762

Token 87: ' -' (ID: 533)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',j' → logprob: -1.7762495279312134
    2. '//' → logprob: -1.9012495279312134
    3. '-' → logprob: -2.026249408721924
    4. ',' → logprob: -2.026249408721924
    5. '-i' → logprob: -2.276249408721924
    6. '-j' → logprob: -2.901249408721924
    7. ',i' → logprob: -2.901249408721924
    8. '+i' → logprob: -3.401249408721924
    9. '*i' → logprob: -3.401249408721924
    10. '*j' → logprob: -3.651249408721924

Token 88: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7941920161247253
    2. '1' → logprob: -1.0441920757293701
    3. 'i' → logprob: -2.79419207572937
    4. '2' → logprob: -2.79419207572937
    5. ' j' → logprob: -3.29419207572937
    6. ' ' → logprob: -4.294191837310791
    7. 'k' → logprob: -4.544191837310791
    8. ' i' → logprob: -4.919191837310791
    9. '   ' → logprob: -7.044191837310791
    10. ' k' → logprob: -7.294191837310791

Token 89: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34685465693473816
    2. ',i' → logprob: -1.9718546867370605
    3. ',j' → logprob: -2.5968546867370605
    4. ',N' → logprob: -3.5968546867370605
    5. '-' → logprob: -3.7218546867370605
    6. ' ,' → logprob: -4.3468546867370605
    7. ' -' → logprob: -5.2218546867370605
    8. ',n' → logprob: -5.9718546867370605
    9. ',k' → logprob: -6.3468546867370605
    10. '   ' → logprob: -6.7218546867370605

Token 90: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.636772632598877
    2. 'j' → logprob: -0.761772632598877
    3. ' j' → logprob: -6.636772632598877
    4. '2' → logprob: -6.761772632598877
    5. '0' → logprob: -7.636772632598877
    6. '   ' → logprob: -7.636772632598877
    7. ' ' → logprob: -8.261772155761719
    8. 'i' → logprob: -9.386772155761719
    9. '    ' → logprob: -9.886772155761719
    10. '3' → logprob: -10.074272155761719

Token 91: '1' (ID: 16)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.015624294057488441
    2. '1' → logprob: -4.265624523162842
    3. ' j' → logprob: -7.140624523162842
    4. '2' → logprob: -8.515624046325684
    5. '   ' → logprob: -8.765624046325684
    6. '0' → logprob: -9.265624046325684
    7. ' ' → logprob: -9.765624046325684
    8. '    ' → logprob: -10.265624046325684
    9. 'i' → logprob: -11.015624046325684
    10. '3' → logprob: -11.015624046325684

Token 92: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.4917363226413727
    2. ',' → logprob: -1.3667362928390503
    3. ',i' → logprob: -2.11673641204834
    4. ' ,' → logprob: -5.11673641204834
    5. ',N' → logprob: -5.74173641204834
    6. ',n' → logprob: -6.86673641204834
    7. ',k' → logprob: -6.99173641204834
    8. ',b' → logprob: -7.36673641204834
    9. ',a' → logprob: -8.11673641204834
    10. '   ' → logprob: -8.36673641204834

Token 93: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5104299187660217
    2. 'N' → logprob: -1.385429859161377
    3. ' j' → logprob: -2.260429859161377
    4. ' N' → logprob: -3.260429859161377
    5. 'i' → logprob: -6.260429859161377
    6. '    ' → logprob: -6.385429859161377
    7. ' i' → logprob: -7.135429859161377
    8. ' ' → logprob: -7.260429859161377
    9. '   ' → logprob: -7.510429859161377
    10. '  ' → logprob: -7.635429859161377

Token 94: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024535416159778833
    2. ' )' → logprob: -6.752453327178955
    3. '-' → logprob: -7.127453327178955
    4. ' -' → logprob: -8.377453804016113
    5. '   ' → logprob: -9.877453804016113
    6. '+' → logprob: -10.127453804016113
    7. '))' → logprob: -10.377453804016113
    8. '),' → logprob: -10.502453804016113
    9. ')
' → logprob: -11.377453804016113
    10. 'for' → logprob: -11.502453804016113

Token 95: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.7674643993377686
    2. 'pair' → logprob: -0.7674643993377686
    3. ' (' → logprob: -3.7674643993377686
    4. '(N' → logprob: -3.7674643993377686
    5. '(pair' → logprob: -4.142464637756348
    6. '(i' → logprob: -5.267464637756348
    7. ' i' → logprob: -7.267464637756348
    8. ')' → logprob: -7.642464637756348
    9. ' N' → logprob: -7.892464637756348
    10. '    ' → logprob: -8.017464637756348

Token 96: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.47025781869888306
    2. '(j' → logprob: -1.2202577590942383
    3. '(N' → logprob: -2.5952577590942383
    4. '(' → logprob: -5.345257759094238
    5. '((' → logprob: -7.970257759094238
    6. '(n' → logprob: -8.970257759094238
    7. '(pair' → logprob: -10.845257759094238
    8. '(a' → logprob: -11.220257759094238
    9. '(I' → logprob: -11.220257759094238
    10. '(p' → logprob: -11.595257759094238

Token 97: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08786190301179886
    2. ',N' → logprob: -2.712862014770508
    3. ',j' → logprob: -4.212862014770508
    4. ' ,' → logprob: -6.587862014770508
    5. ',n' → logprob: -7.712862014770508
    6. ',b' → logprob: -7.712862014770508
    7. ',i' → logprob: -8.087862014770508
    8. '+' → logprob: -9.087862014770508
    9. ',k' → logprob: -9.712862014770508
    10. ',a' → logprob: -10.462862014770508

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.35482197999954224
    2. 'N' → logprob: -1.2298219203948975
    3. ' j' → logprob: -5.729822158813477
    4. ' N' → logprob: -6.604822158813477
    5. 'i' → logprob: -7.854822158813477
    6. '   ' → logprob: -7.979822158813477
    7. '  ' → logprob: -8.104822158813477
    8. '    ' → logprob: -8.729822158813477
    9. ' ' → logprob: -8.979822158813477
    10. '(N' → logprob: -9.479822158813477

Token 99: ')],
' (ID: 73773)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006853427272289991
    2. '       ' → logprob: -6.6318535804748535
    3. '   ' → logprob: -6.6318535804748535
    4. ' )' → logprob: -6.8818535804748535
    5. '           ' → logprob: -7.1318535804748535
    6. ')]' → logprob: -7.2568535804748535
    7. ')])' → logprob: -8.131853103637695
    8. '-' → logprob: -8.256853103637695
    9. ')],' → logprob: -8.256853103637695
    10. ' -' → logprob: -8.756853103637695

Token 100: '                   ' (ID: 699)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5355794429779053
    2. 'range' → logprob: -0.9105794429779053
    3. '(range' → logprob: -6.160579681396484
    4. '           ' → logprob: -6.410579681396484
    5. '                   ' → logprob: -6.660579681396484
    6. '               ' → logprob: -6.785579681396484
    7. '                           ' → logprob: -7.160579681396484
    8. '   ' → logprob: -7.160579681396484
    9. '    ' → logprob: -7.410579681396484
    10. '          ' → logprob: -7.410579681396484

Token 101: ' exclude' (ID: 39566)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.007278275676071644
    2. ' range' → logprob: -5.1322784423828125
    3. 'filter' → logprob: -7.6322784423828125
    4. 'i' → logprob: -8.382278442382812
    5. 'chain' → logprob: -8.632278442382812
    6. '   ' → logprob: -8.882278442382812
    7. '(range' → logprob: -9.132278442382812
    8. '[' → logprob: -9.757278442382812
    9. '[i' → logprob: -10.632278442382812
    10. 'N' → logprob: -11.132278442382812

Token 102: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.22274388372898102
    2. '(range' → logprob: -2.0977439880371094
    3. 'indices' → logprob: -3.0977439880371094
    4. 'range' → logprob: -3.9727439880371094
    5. '(lambda' → logprob: -5.097743988037109
    6. '(indices' → logprob: -5.847743988037109
    7. '   ' → logprob: -6.597743988037109
    8. '(' → logprob: -7.722743988037109
    9. 'lambda' → logprob: -7.722743988037109
    10. 'Indices' → logprob: -8.34774398803711

Token 103: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.00017982252757064998
    2. 'range' → logprob: -9.2501802444458
    3. '(' → logprob: -9.5001802444458
    4. '(iter' → logprob: -12.1251802444458
    5. '(
' → logprob: -13.8751802444458
    6. '(list' → logprob: -14.2501802444458
    7. '   ' → logprob: -14.8751802444458
    8. '((' → logprob: -15.2501802444458
    9. ' range' → logprob: -15.2501802444458
    10. '(chain' → logprob: -15.6251802444458

Token 104: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00047190272016450763
    2. '(N' → logprob: -7.875472068786621
    3. '(i' → logprob: -10.000472068786621
    4. '1' → logprob: -10.250472068786621
    5. '   ' → logprob: -13.125472068786621
    6. '((' → logprob: -13.500472068786621
    7. '(int' → logprob: -14.000472068786621
    8. '(
' → logprob: -14.000472068786621
    9. ' (' → logprob: -14.125472068786621
    10. '(len' → logprob: -14.125472068786621

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13685770332813263
    2. '(' → logprob: -2.136857748031616
    3. 'N' → logprob: -5.136857509613037
    4. '(N' → logprob: -5.636857509613037
    5. '2' → logprob: -9.011857986450195
    6. '   ' → logprob: -9.386857986450195
    7. ' ' → logprob: -9.761857986450195
    8. '0' → logprob: -10.386857986450195
    9. 'int' → logprob: -10.511857986450195
    10. '(int' → logprob: -11.261857986450195

Token 106: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20502348244190216
    2. ',N' → logprob: -1.7050235271453857
    3. ' ,' → logprob: -6.205023288726807
    4. ',i' → logprob: -6.830023288726807
    5. ',n' → logprob: -7.955023288726807
    6. '   ' → logprob: -9.705023765563965
    7. ',int' → logprob: -10.580023765563965
    8. '(N' → logprob: -10.830023765563965
    9. ',j' → logprob: -11.580023765563965
    10. ',len' → logprob: -12.705023765563965

Token 107: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.012557681649923325
    2. ' +' → logprob: -4.387557506561279
    3. '),' → logprob: -11.262557983398438
    4. '   ' → logprob: -11.512557983398438
    5. '-' → logprob: -11.637557983398438
    6. '1' → logprob: -12.637557983398438
    7. ')),' → logprob: -13.387557983398438
    8. '2' → logprob: -13.387557983398438
    9. ' ' → logprob: -13.512557983398438
    10. '```' → logprob: -13.512557983398438

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -11.125027656555176
    3. '2' → logprob: -11.750027656555176
    4. '   ' → logprob: -13.125027656555176
    5. '```' → logprob: -14.312527656555176
    6. '

' → logprob: -15.250027656555176
    7. '
' → logprob: -15.250027656555176
    8. '``' → logprob: -15.812527656555176
    9. '3' → logprob: -15.875027656555176
    10. '),' → logprob: -16.18752670288086

Token 109: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0398552380502224
    2. '),' → logprob: -3.2898552417755127
    3. ' ,' → logprob: -6.789855003356934
    4. '       ' → logprob: -8.414855003356934
    5. '   ' → logprob: -8.539855003356934
    6. '(),' → logprob: -9.539855003356934
    7. '           ' → logprob: -10.164855003356934
    8. ',i' → logprob: -10.414855003356934
    9. '},' → logprob: -10.664855003356934
    10. ' ),' → logprob: -10.914855003356934

Token 110: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.043658994138240814
    2. 'set' → logprob: -4.168659210205078
    3. ' {' → logprob: -4.793659210205078
    4. '{i' → logprob: -4.918659210205078
    5. '{}' → logprob: -6.418659210205078
    6. '[' → logprob: -6.543659210205078
    7. '[]' → logprob: -6.668659210205078
    8. '{x' → logprob: -6.793659210205078
    9. '({' → logprob: -7.043659210205078
    10. '{})' → logprob: -7.293659210205078

Token 111: 'N' (ID: 45)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04334786534309387
    2. 'N' → logprob: -3.9183478355407715
    3. '0' → logprob: -4.1683478355407715
    4. '{i' → logprob: -5.9183478355407715
    5. 'j' → logprob: -6.6683478355407715
    6. '1' → logprob: -6.9183478355407715
    7. '{' → logprob: -7.1683478355407715
    8. '   ' → logprob: -7.7933478355407715
    9. '(i' → logprob: -8.04334831237793
    10. ' i' → logprob: -8.66834831237793

Token 112: ' -' (ID: 533)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0216064453125
    2. '}))' → logprob: -1.0216064453125
    3. '-' → logprob: -2.3966064453125
    4. '}' → logprob: -2.5216064453125
    5. '   ' → logprob: -3.6466064453125
    6. '+' → logprob: -4.0216064453125
    7. ' -' → logprob: -4.3966064453125
    8. '//' → logprob: -4.5216064453125
    9. ',i' → logprob: -4.5216064453125
    10. ' ' → logprob: -5.3966064453125

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023512568441219628
    2. ' i' → logprob: -8.875235557556152
    3. '1' → logprob: -9.875235557556152
    4. 'N' → logprob: -10.875235557556152
    5. '2' → logprob: -12.000235557556152
    6. '   ' → logprob: -12.250235557556152
    7. ' ' → logprob: -13.000235557556152
    8. 'j' → logprob: -13.250235557556152
    9. '{i' → logprob: -13.750235557556152
    10. '0' → logprob: -14.000235557556152

Token 114: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5399252772331238
    2. '+' → logprob: -1.0399253368377686
    3. ' ,' → logprob: -4.2899250984191895
    4. '1' → logprob: -4.5399250984191895
    5. '   ' → logprob: -4.7899250984191895
    6. '}))' → logprob: -4.9149250984191895
    7. '       ' → logprob: -5.2899250984191895
    8. ' +' → logprob: -5.5399250984191895
    9. '}),' → logprob: -5.7899250984191895
    10. '}' → logprob: -5.7899250984191895

Token 115: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00028946425300091505
    2. ' ' → logprob: -8.625289916992188
    3. '0' → logprob: -9.500289916992188
    4. '2' → logprob: -11.125289916992188
    5. 'i' → logprob: -11.375289916992188
    6. '   ' → logprob: -12.750289916992188
    7. ')' → logprob: -13.875289916992188
    8. '
' → logprob: -14.250289916992188
    9. '})' → logprob: -14.625289916992188
    10. '3' → logprob: -15.000289916992188

Token 116: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005365733522921801
    2. 'i' → logprob: -5.63036584854126
    3. '0' → logprob: -6.75536584854126
    4. ' ' → logprob: -7.88036584854126
    5. '2' → logprob: -9.630365371704102
    6. '{' → logprob: -9.755365371704102
    7. '})' → logprob: -11.255365371704102
    8. '{i' → logprob: -11.630365371704102
    9. '   ' → logprob: -11.755365371704102
    10. '(i' → logprob: -11.880365371704102

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19660358130931854
    2. '}))' → logprob: -1.946603536605835
    3. '}' → logprob: -3.946603536605835
    4. '}),' → logprob: -5.321603775024414
    5. '   ' → logprob: -5.696603775024414
    6. '))' → logprob: -6.446603775024414
    7. '})' → logprob: -6.446603775024414
    8. ')))' → logprob: -7.071603775024414
    9. ')}' → logprob: -7.196603775024414
    10. ' ,' → logprob: -7.321603775024414

Token 118: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015577931888401508
    2. ' i' → logprob: -4.515577793121338
    3. 'N' → logprob: -6.390577793121338
    4. '   ' → logprob: -6.890577793121338
    5. 'j' → logprob: -7.390577793121338
    6. '1' → logprob: -8.265578269958496
    7. '0' → logprob: -8.640578269958496
    8. ' ' → logprob: -8.890578269958496
    9. '                   ' → logprob: -9.015578269958496
    10. '                           ' → logprob: -9.890578269958496

Token 119: '}))
' (ID: 98574)
  Prédit: '}))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}))' → logprob: -0.4547557830810547
    2. '}' → logprob: -1.0797557830810547
    3. '}))
' → logprob: -4.079755783081055
    4. ')))' → logprob: -6.204755783081055
    5. ' }))' → logprob: -6.579755783081055
    6. '               ' → logprob: -6.954755783081055
    7. '       ' → logprob: -7.079755783081055
    8. '                   ' → logprob: -7.704755783081055
    9. '))' → logprob: -7.704755783081055
    10. '   ' → logprob: -7.704755783081055

Token 120: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.028888463973999
    2. ')))' → logprob: -1.403888463973999
    3. '       ' → logprob: -1.778888463973999
    4. ')' → logprob: -2.403888463973999
    5. '           ' → logprob: -2.903888463973999
    6. '))' → logprob: -3.528888463973999
    7. '                   ' → logprob: -4.153888702392578
    8. '   ' → logprob: -4.278888702392578
    9. ',' → logprob: -4.528888702392578
    10. '))))' → logprob: -5.778888702392578

Token 121: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2335675954818726
    2. '           ' → logprob: -1.6085675954818726
    3. '),' → logprob: -1.9835675954818726
    4. '               ' → logprob: -2.108567714691162
    5. '))' → logprob: -2.608567714691162
    6. ')))' → logprob: -2.608567714691162
    7. '       ' → logprob: -2.858567714691162
    8. '                   ' → logprob: -4.358567714691162
    9. ')),' → logprob: -4.608567714691162
    10. '))))' → logprob: -4.858567714691162

Token 122: '           ' (ID: 352)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.8283893465995789
    2. ')))' → logprob: -0.9533893465995789
    3. '       ' → logprob: -2.8283894062042236
    4. ')' → logprob: -3.2033894062042236
    5. ',' → logprob: -3.5783894062042236
    6. '           ' → logprob: -3.9533894062042236
    7. '),' → logprob: -4.5783891677856445
    8. '   ' → logprob: -4.8283891677856445
    9. '))))' → logprob: -5.2033891677856445
    10. '               ' → logprob: -5.7033891677856445

Token 123: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.2110912799835205
    2. '))' → logprob: -1.4610912799835205
    3. ')))' → logprob: -1.9610912799835205
    4. ')' → logprob: -2.4610912799835205
    5. ',' → logprob: -2.4610912799835205
    6. '           ' → logprob: -2.9610912799835205
    7. '       ' → logprob: -3.3360912799835205
    8. ' for' → logprob: -3.4610912799835205
    9. '   ' → logprob: -4.086091041564941
    10. '),' → logprob: -4.836091041564941

Token 124: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.038047004491090775
    2. ' i' → logprob: -3.2880470752716064
    3. '	i' → logprob: -12.538046836853027
    4. ' ' → logprob: -14.538046836853027
    5. '   ' → logprob: -14.663046836853027
    6. ')' → logprob: -14.788046836853027
    7. '           ' → logprob: -15.163046836853027
    8. ')i' → logprob: -15.538046836853027
    9. '  ' → logprob: -16.788047790527344
    10. ',i' → logprob: -17.163047790527344

Token 125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04313906282186508
    2. 'in' → logprob: -3.1681389808654785
    3. ')' → logprob: -9.043139457702637
    4. 'range' → logprob: -12.043139457702637
    5. ' )' → logprob: -12.793139457702637
    6. '   ' → logprob: -13.043139457702637
    7. ' ' → logprob: -13.043139457702637
    8. '),' → logprob: -13.293139457702637
    9. ',' → logprob: -13.543139457702637
    10. '    ' → logprob: -13.668139457702637

Token 126: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015042672166600823
    2. ' range' → logprob: -6.501504421234131
    3. ')' → logprob: -13.626503944396973
    4. '(range' → logprob: -15.001503944396973
    5. '   ' → logprob: -16.37650489807129
    6. '	range' → logprob: -16.50150489807129
    7. ' ' → logprob: -16.75150489807129
    8. '[' → logprob: -18.12650489807129
    9. '  ' → logprob: -18.12650489807129
    10. '),' → logprob: -18.12650489807129

Token 127: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.824579784530215e-05
    2. '(N' → logprob: -10.2500581741333
    3. '1' → logprob: -10.7500581741333
    4. '(
' → logprob: -14.3750581741333
    5. '   ' → logprob: -15.1250581741333
    6. ' (' → logprob: -15.5000581741333
    7. ' ' → logprob: -15.6250581741333
    8. '	' → logprob: -17.125059127807617
    9. ')' → logprob: -17.625059127807617
    10. '((' → logprob: -17.750059127807617

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011858412064611912
    2. '2' → logprob: -4.6368584632873535
    3. '(' → logprob: -6.5118584632873535
    4. 'N' → logprob: -7.8868584632873535
    5. ' ' → logprob: -9.136857986450195
    6. '(N' → logprob: -9.511857986450195
    7. '   ' → logprob: -10.386857986450195
    8. '3' → logprob: -11.761857986450195
    9. '4' → logprob: -12.886857986450195
    10. 'int' → logprob: -13.011857986450195

Token 129: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036177411675453186
    2. ' ,' → logprob: -3.411177396774292
    3. ',N' → logprob: -6.036177635192871
    4. '   ' → logprob: -9.661177635192871
    5. '(N' → logprob: -10.411177635192871
    6. ',n' → logprob: -11.411177635192871
    7. ' ' → logprob: -11.661177635192871
    8. ',
' → logprob: -11.786177635192871
    9. '1' → logprob: -12.286177635192871
    10. '(' → logprob: -12.411177635192871

Token 130: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.039313942193984985
    2. '(N' → logprob: -3.289314031600952
    3. ' N' → logprob: -7.789313793182373
    4. '(' → logprob: -7.914313793182373
    5. ' (' → logprob: -8.414314270019531
    6. '1' → logprob: -9.164314270019531
    7. '   ' → logprob: -9.289314270019531
    8. '((' → logprob: -10.664314270019531
    9. '2' → logprob: -11.664314270019531
    10. ' ' → logprob: -11.789314270019531

Token 131: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.015015599317848682
    2. ' +' → logprob: -4.265015602111816
    3. '-' → logprob: -7.640015602111816
    4. '   ' → logprob: -8.515015602111816
    5. ' -' → logprob: -10.265015602111816
    6. '//' → logprob: -10.390015602111816
    7. ')):' → logprob: -11.015015602111816
    8. '))' → logprob: -11.140015602111816
    9. ')):
' → logprob: -11.140015602111816
    10. ' ' → logprob: -11.515015602111816

Token 132: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030829108436591923
    2. '2' → logprob: -8.3753080368042
    3. ' ' → logprob: -9.5003080368042
    4. '   ' → logprob: -13.6253080368042
    5. '```' → logprob: -14.8753080368042
    6. '
' → logprob: -15.2503080368042
    7. '3' → logprob: -15.9378080368042
    8. '(' → logprob: -15.9378080368042
    9. '+' → logprob: -16.062808990478516
    10. '11' → logprob: -16.687808990478516

Token 133: ')
' (ID: 446)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.10625633597373962
    2. ')' → logprob: -3.1062562465667725
    3. '))' → logprob: -3.4812562465667725
    4. '))))' → logprob: -3.8562562465667725
    5. '):' → logprob: -5.981256484985352
    6. '       ' → logprob: -7.606256484985352
    7. '   ' → logprob: -7.731256484985352
    8. ')):' → logprob: -8.606256484985352
    9. ')));' → logprob: -8.731256484985352
    10. '))),' → logprob: -9.481256484985352

Token 134: '       ' (ID: 309)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9215922951698303
    2. ')))' → logprob: -0.9215922951698303
    3. '       ' → logprob: -1.6715922355651855
    4. ')' → logprob: -5.1715922355651855
    5. '))))' → logprob: -5.5465922355651855
    6. '   ' → logprob: -5.7965922355651855
    7. '           ' → logprob: -6.2965922355651855
    8. '               ' → logprob: -6.9215922355651855
    9. ')));' → logprob: -9.046592712402344
    10. '                       ' → logprob: -9.296592712402344

Token 135: ' ))
' (ID: 43705)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.17419028282165527
    2. '))' → logprob: -1.9241902828216553
    3. ')' → logprob: -4.924190521240234
    4. '))))' → logprob: -5.299190521240234
    5. '       ' → logprob: -6.674190521240234
    6. '   ' → logprob: -8.424190521240234
    7. '           ' → logprob: -10.049190521240234
    8. ')));' → logprob: -10.924190521240234
    9. '),' → logprob: -11.299190521240234
    10. ')),' → logprob: -11.924190521240234

Token 136: '    
' (ID: 1944)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05554310604929924
    2. ')))' → logprob: -3.3055431842803955
    3. '))' → logprob: -4.180542945861816
    4. '       ' → logprob: -6.930542945861816
    5. '   ' → logprob: -7.055542945861816
    6. '))))' → logprob: -9.055542945861816
    7. '           ' → logprob: -10.430542945861816
    8. ')
' → logprob: -10.930542945861816
    9. '):' → logprob: -11.180542945861816
    10. '               ' → logprob: -12.055542945861816

Token 137: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00158056674990803
    2. ')))' → logprob: -7.001580715179443
    3. '))' → logprob: -7.501580715179443
    4. ':' → logprob: -10.251580238342285
    5. '   ' → logprob: -10.751580238342285
    6. '):' → logprob: -10.876580238342285
    7. '       ' → logprob: -10.876580238342285
    8. ')
' → logprob: -12.001580238342285
    9. '))))' → logprob: -12.126580238342285
    10. ' )' → logprob: -13.376580238342285

Token 138: ' def' (ID: 1056)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001472483854740858
    2. ':' → logprob: -6.876472473144531
    3. '):' → logprob: -8.126472473144531
    4. ')))' → logprob: -9.376472473144531
    5. '   ' → logprob: -10.501472473144531
    6. '))' → logprob: -11.876472473144531
    7. '       ' → logprob: -12.001472473144531
    8. ')
' → logprob: -12.251472473144531
    9. ':)' → logprob: -12.751472473144531
    10. '(' → logprob: -13.376472473144531

Token 139: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.04872407391667366
    2. ' complex' → logprob: -3.4237241744995117
    3. 'simple' → logprob: -5.923724174499512
    4. 'com' → logprob: -6.173724174499512
    5. 'factor' → logprob: -6.423724174499512
    6. 'even' → logprob: -6.548724174499512
    7. 'square' → logprob: -7.048724174499512
    8. 'main' → logprob: -7.173724174499512
    9. 'complete' → logprob: -7.673724174499512
    10. 'odd' → logprob: -8.048724174499512

Token 140: '_' (ID: 62)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.001202850602567196
    2. '_' → logprob: -6.8762030601501465
    3. '_complex' → logprob: -9.876202583312988
    4. 'even' → logprob: -11.376202583312988
    5. 'Even' → logprob: -12.376202583312988
    6. '_factor' → logprob: -12.501202583312988
    7. '_com' → logprob: -12.626202583312988
    8. '_double' → logprob: -12.751202583312988
    9. '_more' → logprob: -13.001202583312988
    10. '_prime' → logprob: -13.001202583312988

Token 141: 'odd' (ID: 18303)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.06777765601873398
    2. 'odd' → logprob: -2.817777633666992
    3. '_even' → logprob: -7.067777633666992
    4. 'square' → logprob: -7.442777633666992
    5. 'evenodd' → logprob: -7.942777633666992
    6. 'pair' → logprob: -8.192777633666992
    7. 'ev' → logprob: -8.192777633666992
    8. 'power' → logprob: -8.442777633666992
    9. 'pow' → logprob: -8.567777633666992
    10. 'factor' → logprob: -8.567777633666992

Token 142: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004433011345099658
    2. '(' → logprob: -7.750443458557129
    3. '(n' → logprob: -11.875443458557129
    4. '():' → logprob: -13.125443458557129
    5. ' (' → logprob: -13.625443458557129
    6. ':' → logprob: -14.000443458557129
    7. '   ' → logprob: -14.375443458557129
    8. '((' → logprob: -15.375443458557129
    9. '):' → logprob: -16.000442504882812
    10. 'def' → logprob: -16.375442504882812

Token 143: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00017827287956606597
    2. '):
' → logprob: -9.375178337097168
    3. '():' → logprob: -9.500178337097168
    4. ':' → logprob: -11.625178337097168
    5. ')' → logprob: -11.875178337097168
    6. ' ):' → logprob: -13.375178337097168
    7. '   ' → logprob: -14.500178337097168
    8. '):
' → logprob: -15.250178337097168
    9. '(' → logprob: -16.75017738342285
    10. '):

' → logprob: -17.12517738342285

Token 144: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00023417205375153571
    2. ' return' → logprob: -9.000234603881836
    3. ')' → logprob: -10.000234603881836
    4. 'return' → logprob: -10.875234603881836
    5. '(' → logprob: -11.000234603881836
    6. '   ' → logprob: -11.750234603881836
    7. '           ' → logprob: -13.000234603881836
    8. '```' → logprob: -13.125234603881836
    9. '()' → logprob: -13.250234603881836
    10. '        ' → logprob: -13.250234603881836

Token 145: ' start' (ID: 1604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7896625995635986
    2. ' return' → logprob: -1.0396625995635986
    3. 'return' → logprob: -1.6646625995635986
    4. '   ' → logprob: -5.7896623611450195
    5. '	return' → logprob: -9.91466236114502
    6. ')' → logprob: -11.41466236114502
    7. '           ' → logprob: -11.78966236114502
    8. 'def' → logprob: -11.91466236114502
    9. '    ' → logprob: -12.28966236114502
    10. '#' → logprob: -12.66466236114502

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.27121296525001526
    2. '(' → logprob: -2.0212130546569824
    3. ' =' → logprob: -2.5212130546569824
    4. '   ' → logprob: -5.021213054656982
    5. '(N' → logprob: -5.146213054656982
    6. '(range' → logprob: -5.646213054656982
    7. 'from' → logprob: -6.521213054656982
    8. '(
' → logprob: -6.521213054656982
    9. ':' → logprob: -6.521213054656982
    10. 'def' → logprob: -6.646213054656982

Token 147: ' set' (ID: 920)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4921516180038452
    2. '{' → logprob: -1.4921516180038452
    3. '(N' → logprob: -1.8671516180038452
    4. 'set' → logprob: -2.1171517372131348
    5. '0' → logprob: -2.4921517372131348
    6. '(' → logprob: -2.8671517372131348
    7. 'N' → logprob: -3.4921517372131348
    8. '[(' → logprob: -3.6171517372131348
    9. '{}' → logprob: -4.617151737213135
    10. ' ' → logprob: -4.742151737213135

Token 148: '(product' (ID: 31697)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.32206791639328003
    2. '(range' → logprob: -1.8220679759979248
    3. '(chain' → logprob: -2.697067975997925
    4. '((' → logprob: -3.947067975997925
    5. '(' → logprob: -4.447067737579346
    6. '([(' → logprob: -4.697067737579346
    7. '([' → logprob: -5.947067737579346
    8. '(
' → logprob: -7.197067737579346
    9. '(pair' → logprob: -7.572067737579346
    10. '(((' → logprob: -7.697067737579346

Token 149: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -2.8325677703833207e-05
    2. '(' → logprob: -11.250028610229492
    3. 'range' → logprob: -11.625028610229492
    4. '((' → logprob: -12.625028610229492
    5. '([' → logprob: -13.250028610229492
    6. ')' → logprob: -14.875028610229492
    7. '(
' → logprob: -15.375028610229492
    8. '(list' → logprob: -15.875028610229492
    9. '   ' → logprob: -16.250028610229492
    10. '({' → logprob: -16.375028610229492

Token 150: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00297223380766809
    2. '(N' → logprob: -5.87797212600708
    3. '1' → logprob: -9.002972602844238
    4. '((' → logprob: -10.627972602844238
    5. '(-' → logprob: -11.752972602844238
    6. '(n' → logprob: -12.377972602844238
    7. '   ' → logprob: -13.127972602844238
    8. '(
' → logprob: -13.627972602844238
    9. ' (' → logprob: -13.752972602844238
    10. ' ' → logprob: -14.752972602844238

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011018702760338783
    2. 'N' → logprob: -4.886018753051758
    3. '(' → logprob: -5.761018753051758
    4. '(N' → logprob: -8.886018753051758
    5. '0' → logprob: -10.136018753051758
    6. '2' → logprob: -10.511018753051758
    7. ' ' → logprob: -11.136018753051758
    8. '   ' → logprob: -11.386018753051758
    9. '3' → logprob: -12.511018753051758
    10. ' N' → logprob: -13.198518753051758

Token 152: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31229639053344727
    2. '(' → logprob: -1.4372963905334473
    3. '(N' → logprob: -4.187296390533447
    4. ',N' → logprob: -4.312296390533447
    5. '1' → logprob: -6.437296390533447
    6. 'N' → logprob: -8.312295913696289
    7. ' ,' → logprob: -9.187295913696289
    8. ',(' → logprob: -9.562295913696289
    9. '   ' → logprob: -10.812295913696289
    10. ',n' → logprob: -11.187295913696289

Token 153: '),' (ID: 936)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.000944576517213136
    2. '),' → logprob: -8.000944137573242
    3. '(' → logprob: -8.250944137573242
    4. '(N' → logprob: -9.250944137573242
    5. ' +' → logprob: -9.250944137573242
    6. ',' → logprob: -10.000944137573242
    7. ',N' → logprob: -10.000944137573242
    8. '   ' → logprob: -10.875944137573242
    9. '1' → logprob: -11.000944137573242
    10. '()+' → logprob: -12.250944137573242

Token 154: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.634734034538269
    2. 'repeat' → logprob: -0.759734034538269
    3. ' range' → logprob: -6.884734153747559
    4. ' repeat' → logprob: -7.509734153747559
    5. '(range' → logprob: -8.509734153747559
    6. '   ' → logprob: -9.134734153747559
    7. '  ' → logprob: -9.759734153747559
    8. '(' → logprob: -9.884734153747559
    9. '    ' → logprob: -10.259734153747559
    10. ' ' → logprob: -10.384734153747559

Token 155: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.21698567271232605
    2. '0' → logprob: -1.8419857025146484
    3. '1' → logprob: -3.9669857025146484
    4. 'range' → logprob: -4.216985702514648
    5. '*' → logprob: -6.716985702514648
    6. '*N' → logprob: -7.341985702514648
    7. 'i' → logprob: -8.591985702514648
    8. '   ' → logprob: -8.591985702514648
    9. '2' → logprob: -8.841985702514648
    10. '(' → logprob: -9.216985702514648

Token 156: ']))
' (ID: 24801)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.5493701100349426
    2. ')))' → logprob: -1.2993700504302979
    3. '))' → logprob: -2.674370050430298
    4. '-' → logprob: -3.049370050430298
    5. '+' → logprob: -4.549370288848877
    6. ' -' → logprob: -5.299370288848877
    7. '   ' → logprob: -5.424370288848877
    8. '}))' → logprob: -5.674370288848877
    9. ']))
' → logprob: -6.424370288848877
    10. '       ' → logprob: -6.549370288848877

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6509727835655212
    2. ')' → logprob: -0.7759727835655212
    3. ',' → logprob: -4.525972843170166
    4. '   ' → logprob: -5.275972843170166
    5. ',
' → logprob: -7.025972843170166
    6. '<|end|>' → logprob: -7.650972843170166
    7. ')
' → logprob: -8.025972366333008
    8. '           ' → logprob: -8.900972366333008
    9. '),' → logprob: -9.900972366333008
    10. '        ' → logprob: -9.900972366333008

Token 158: ' rest' (ID: 2867)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5425881147384644
    2. ')' → logprob: -0.9175881147384644
    3. '   ' → logprob: -5.042588233947754
    4. 'return' → logprob: -5.292588233947754
    5. ' return' → logprob: -5.917588233947754
    6. '<|end|>' → logprob: -6.667588233947754
    7. ')
' → logprob: -7.292588233947754
    8. '+' → logprob: -7.417588233947754
    9. ' )' → logprob: -7.917588233947754
    10. ',' → logprob: -8.667588233947754

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1604236662387848
    2. '=' → logprob: -1.9104236364364624
    3. '   ' → logprob: -8.785423278808594
    4. '       ' → logprob: -10.910423278808594
    5. ')' → logprob: -11.535423278808594
    6. ' ' → logprob: -12.660423278808594
    7. '=set' → logprob: -12.785423278808594
    8. '    ' → logprob: -13.285423278808594
    9. '=
' → logprob: -13.410423278808594
    10. ' =
' → logprob: -13.410423278808594

Token 160: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.23153486847877502
    2. 'complex' → logprob: -1.7315348386764526
    3. ' set' → logprob: -4.481534957885742
    4. '{' → logprob: -4.856534957885742
    5. ' complex' → logprob: -5.356534957885742
    6. 'chain' → logprob: -5.856534957885742
    7. 'product' → logprob: -6.731534957885742
    8. 'exclude' → logprob: -7.856534957885742
    9. '(com' → logprob: -8.731534957885742
    10. 'pair' → logprob: -9.106534957885742

Token 161: '(chain' (ID: 124348)
  Prédit: '(product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(product' → logprob: -0.06697135418653488
    2. '(chain' → logprob: -2.9419713020324707
    3. '(filter' → logprob: -5.441971302032471
    4. '(range' → logprob: -5.941971302032471
    5. '(com' → logprob: -6.816971302032471
    6. '(' → logprob: -6.816971302032471
    7. '(map' → logprob: -7.066971302032471
    8. '(
' → logprob: -7.066971302032471
    9. '()' → logprob: -7.191971302032471
    10. '((' → logprob: -8.316971778869629

Token 162: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.05277688801288605
    2. 'from' → logprob: -3.17777681350708
    3. '(
' → logprob: -4.67777681350708
    4. '(' → logprob: -7.92777681350708
    5. '(from' → logprob: -11.052777290344238
    6. '(chain' → logprob: -11.052777290344238
    7. '   ' → logprob: -11.427777290344238
    8. '(map' → logprob: -12.552777290344238
    9. '(

' → logprob: -12.677777290344238
    10. '(*' → logprob: -13.177777290344238

Token 163: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.21000991761684418
    2. 'iter' → logprob: -1.7100099325180054
    3. 'product' → logprob: -4.960010051727295
    4. 'it' → logprob: -7.835010051727295
    5. 'com' → logprob: -8.085009574890137
    6. '(iter' → logprob: -9.210009574890137
    7. 'chain' → logprob: -9.460009574890137
    8. 'complex' → logprob: -9.585009574890137
    9. 'Iterable' → logprob: -9.710009574890137
    10. 'comb' → logprob: -9.835009574890137

Token 164: 'able' (ID: 562)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.9769968390464783
    2. 'able' → logprob: -1.726996898651123
    3. 't' → logprob: -1.976996898651123
    4. 'port' → logprob: -2.726996898651123
    5. 'er' → logprob: -3.351996898651123
    6. '(chain' → logprob: -3.476996898651123
    7. 'chain' → logprob: -3.476996898651123
    8. 'from' → logprob: -3.601996898651123
    9. 'itable' → logprob: -3.601996898651123
    10. 'orm' → logprob: -4.226996898651123

Token 165: '(
' (ID: 1607)
  Prédit: '(
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.09893818199634552
    2. '(' → logprob: -2.473938226699829
    3. '(chain' → logprob: -5.34893798828125
    4. '(map' → logprob: -6.09893798828125
    5. '([' → logprob: -6.34893798828125
    6. 'map' → logprob: -8.59893798828125
    7. '([
' → logprob: -8.59893798828125
    8. '(

' → logprob: -8.97393798828125
    9. '       ' → logprob: -9.09893798828125
    10. '[' → logprob: -9.22393798828125

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7155131697654724
    2. '(
' → logprob: -1.4655132293701172
    3. 'map' → logprob: -1.8405132293701172
    4. '(chain' → logprob: -3.465513229370117
    5. '               ' → logprob: -3.590513229370117
    6. 'chain' → logprob: -3.840513229370117
    7. '(' → logprob: -4.215513229370117
    8. '[' → logprob: -4.590513229370117
    9. '(map' → logprob: -5.215513229370117
    10. '[
' → logprob: -5.215513229370117

Token 167: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' (adapté à ' map') → logprob: -0.43500417470932007
    2. '(
' → logprob: -2.060004234313965
    3. '           ' → logprob: -2.560004234313965
    4. 'chain' → logprob: -2.685004234313965
    5. 'product' → logprob: -3.810004234313965
    6. '(chain' → logprob: -3.935004234313965
    7. '[' → logprob: -4.435004234313965
    8. '(map' → logprob: -4.935004234313965
    9. '[
' → logprob: -5.310004234313965
    10. '               ' → logprob: -5.435004234313965

Token 168: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.023194342851638794
    2. '(' → logprob: -3.8981943130493164
    3. '(
' → logprob: -6.023194313049316
    4. '(range' → logprob: -8.648194313049316
    5. '(None' → logprob: -11.398194313049316
    6. '   ' → logprob: -11.898194313049316
    7. 'lambda' → logprob: -12.273194313049316
    8. '(

' → logprob: -12.273194313049316
    9. '(
' → logprob: -12.773194313049316
    10. '((' → logprob: -12.773194313049316

Token 169: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.702826976776123
    2. 'lambda' → logprob: -1.577826976776123
    3. '(lambda' → logprob: -2.077826976776123
    4. ' lambda' → logprob: -2.452826976776123
    5. ' j' → logprob: -2.577826976776123
    6. '   ' → logprob: -5.577826976776123
    7. 'i' → logprob: -5.827826976776123
    8. '(j' → logprob: -7.452826976776123
    9. ' i' → logprob: -7.577826976776123
    10. '(' → logprob: -7.702826976776123

Token 170: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0038846309762448072
    2. ' :' → logprob: -5.878884792327881
    3. '(lambda' → logprob: -7.378884792327881
    4. 'lambda' → logprob: -8.503884315490723
    5. ':
' → logprob: -9.503884315490723
    6. ' lambda' → logprob: -10.003884315490723
    7. '           ' → logprob: -10.253884315490723
    8. ',' → logprob: -10.628884315490723
    9. '   ' → logprob: -11.128884315490723
    10. '=lambda' → logprob: -11.253884315490723

Token 171: '               ' (ID: 506)
  Prédit: ' pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pair' → logprob: -1.605932593345642
    2. ' product' → logprob: -1.855932593345642
    3. 'pair' → logprob: -1.855932593345642
    4. 'product' → logprob: -2.3559327125549316
    5. '           ' → logprob: -2.6059327125549316
    6. ' range' → logprob: -2.9809327125549316
    7. '[' → logprob: -3.1059327125549316
    8. ' set' → logprob: -3.4809327125549316
    9. 'set' → logprob: -3.4809327125549316
    10. ' chain' → logprob: -3.7309327125549316

Token 172: ' map' (ID: 4014)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pair' → logprob: -1.2130365371704102
    2. '[' → logprob: -1.5880365371704102
    3. 'product' → logprob: -2.21303653717041
    4. ' pair' → logprob: -2.58803653717041
    5. '{' → logprob: -2.96303653717041
    6. 'set' → logprob: -3.33803653717041
    7. '(pair' → logprob: -3.33803653717041
    8. ' product' → logprob: -3.71303653717041
    9. 'exclude' → logprob: -3.71303653717041
    10. 'chain' → logprob: -3.71303653717041

Token 173: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.02748490311205387
    2. '(' → logprob: -3.652484893798828
    3. '(
' → logprob: -7.527484893798828
    4. '(pair' → logprob: -7.652484893798828
    5. '                   ' → logprob: -9.402484893798828
    6. 'lambda' → logprob: -10.777484893798828
    7. '           ' → logprob: -10.777484893798828
    8. '               ' → logprob: -11.777484893798828
    9. '(range' → logprob: -12.152484893798828
    10. '(tuple' → logprob: -12.277484893798828

Token 174: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.13463804125785828
    2. 'lambda' → logprob: -2.2596380710601807
    3. '(lambda' → logprob: -4.384637832641602
    4. 'pair' → logprob: -4.884637832641602
    5. ' lambda' → logprob: -7.759637832641602
    6. ' j' → logprob: -8.009637832641602
    7. '   ' → logprob: -8.884637832641602
    8. 'i' → logprob: -9.009637832641602
    9. '(j' → logprob: -9.259637832641602
    10. ' pair' → logprob: -9.634637832641602

Token 175: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002416203496977687
    2. ',' → logprob: -7.752416133880615
    3. ' :' → logprob: -7.877416133880615
    4. ':
' → logprob: -8.502416610717773
    5. '(range' → logprob: -8.502416610717773
    6. ':int' → logprob: -8.752416610717773
    7. '(' → logprob: -8.877416610717773
    8. ' (' → logprob: -9.002416610717773
    9. '           ' → logprob: -9.002416610717773
    10. ' range' → logprob: -9.377416610717773

Token 176: ' [' (ID: 723)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.4248335063457489
    2. ' pair' → logprob: -1.6748335361480713
    3. '[' → logprob: -2.6748335361480713
    4. '(pair' → logprob: -3.0498335361480713
    5. ' [' → logprob: -3.5498335361480713
    6. '[p' → logprob: -5.799833297729492
    7. '   ' → logprob: -6.799833297729492
    8. '[(' → logprob: -6.799833297729492
    9. '<pair' → logprob: -7.174833297729492
    10. '{' → logprob: -7.174833297729492

Token 177: 'pair' (ID: 25488)
  Prédit: 'pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.04849696904420853
    2. '(pair' → logprob: -3.673496961593628
    3. ' pair' → logprob: -3.923496961593628
    4. '(i' → logprob: -7.548497200012207
    5. '(N' → logprob: -8.048497200012207
    6. '               ' → logprob: -8.048497200012207
    7. '                   ' → logprob: -8.548497200012207
    8. 'complex' → logprob: -8.673497200012207
    9. '           ' → logprob: -8.923497200012207
    10. 'tuple' → logprob: -9.173497200012207

Token 178: '(N' (ID: 10564)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.09809362888336182
    2. '(N' → logprob: -2.7230935096740723
    3. '(j' → logprob: -3.7230935096740723
    4. '((' → logprob: -6.098093509674072
    5. '(' → logprob: -6.848093509674072
    6. 'i' → logprob: -9.22309398651123
    7. '(n' → logprob: -9.84809398651123
    8. 'j' → logprob: -9.97309398651123
    9. ' (' → logprob: -10.09809398651123
    10. '(
' → logprob: -12.22309398651123

Token 179: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4377657175064087
    2. '-' → logprob: -1.0627657175064087
    3. '-i' → logprob: -4.812765598297119
    4. '-j' → logprob: -8.062766075134277
    5. ' ' → logprob: -8.312766075134277
    6. ',' → logprob: -9.437766075134277
    7. '+' → logprob: -9.437766075134277
    8. '   ' → logprob: -9.687766075134277
    9. 'i' → logprob: -11.125266075134277
    10. '),' → logprob: -11.125266075134277

Token 180: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0262654609978199
    2. ',' → logprob: -4.151265621185303
    3. ' +' → logprob: -4.901265621185303
    4. '-' → logprob: -6.526265621185303
    5. ',j' → logprob: -7.901265621185303
    6. '+j' → logprob: -7.901265621185303
    7. ' ,' → logprob: -8.401265144348145
    8. '+,' → logprob: -9.526265144348145
    9. '),' → logprob: -10.026265144348145
    10. '+i' → logprob: -10.026265144348145

Token 181: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.009209830313920975
    2. 'N' → logprob: -5.384209632873535
    3. ' j' → logprob: -5.509209632873535
    4. '   ' → logprob: -8.384209632873535
    5. '    ' → logprob: -9.259209632873535
    6. ' N' → logprob: -9.509209632873535
    7. ' ' → logprob: -11.009209632873535
    8. '  ' → logprob: -11.196709632873535
    9. '       ' → logprob: -11.321709632873535
    10. '(N' → logprob: -11.446709632873535

Token 182: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0024250061251223087
    2. '),
' → logprob: -6.877425193786621
    3. '           ' → logprob: -8.002425193786621
    4. ')' → logprob: -8.252425193786621
    5. ')],' → logprob: -8.502425193786621
    6. '               ' → logprob: -8.627425193786621
    7. '],' → logprob: -9.002425193786621
    8. '       ' → logprob: -9.627425193786621
    9. '                   ' → logprob: -9.752425193786621
    10. ' ),' → logprob: -10.752425193786621

Token 183: ' pair' (ID: 10610)
  Prédit: ' pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pair' → logprob: -0.42997825145721436
    2. 'pair' → logprob: -1.0549782514572144
    3. '(pair' → logprob: -6.929978370666504
    4. '               ' → logprob: -9.304978370666504
    5. '                   ' → logprob: -10.054978370666504
    6. '                ' → logprob: -10.179978370666504
    7. ' ' → logprob: -10.679978370666504
    8. '                    ' → logprob: -10.929978370666504
    9. '              ' → logprob: -11.179978370666504
    10. '            ' → logprob: -11.429978370666504

Token 184: '(i' (ID: 3649)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.1275312453508377
    2. '(i' → logprob: -2.3775312900543213
    3. '(j' → logprob: -3.7525312900543213
    4. '(' → logprob: -6.252531051635742
    5. '(n' → logprob: -7.127531051635742
    6. '((' → logprob: -7.752531051635742
    7. ' (' → logprob: -9.502531051635742
    8. '(lambda' → logprob: -9.877531051635742
    9. 'j' → logprob: -10.252531051635742
    10. 'i' → logprob: -10.377531051635742

Token 185: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009917814284563065
    2. ',j' → logprob: -4.884917736053467
    3. '+' → logprob: -6.259917736053467
    4. ' ,' → logprob: -8.884918212890625
    5. ',N' → logprob: -9.009918212890625
    6. ' +' → logprob: -9.884918212890625
    7. ',n' → logprob: -10.884918212890625
    8. '-' → logprob: -11.134918212890625
    9. '   ' → logprob: -11.634918212890625
    10. '           ' → logprob: -11.634918212890625

Token 186: ')],
' (ID: 73773)
  Prédit: '],
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],
' → logprob: -0.7135544419288635
    2. ')],
' → logprob: -1.7135543823242188
    3. ')],' → logprob: -1.8385543823242188
    4. '],' → logprob: -2.0885543823242188
    5. '               ' → logprob: -3.7135543823242188
    6. '                   ' → logprob: -4.713554382324219
    7. '           ' → logprob: -5.713554382324219
    8. '),
' → logprob: -6.338554382324219
    9. '),' → logprob: -6.338554382324219
    10. '                       ' → logprob: -6.588554382324219

Token 187: '                   ' (ID: 699)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' → logprob: -0.6343991756439209
    2. ' exclude' → logprob: -2.009399175643921
    3. 'range' → logprob: -2.134399175643921
    4. '                       ' → logprob: -3.134399175643921
    5. '                           ' → logprob: -3.259399175643921
    6. '                   ' → logprob: -3.259399175643921
    7. ' range' → logprob: -3.384399175643921
    8. '               ' → logprob: -4.8843994140625
    9. '                               ' → logprob: -4.8843994140625
    10. '                            ' → logprob: -5.0093994140625

Token 188: ' exclude' (ID: 39566)
  Prédit: 'exclude'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exclude' (adapté à ' exclude') → logprob: -0.026044338941574097
    2. 'range' → logprob: -4.0260443687438965
    3. ' exclude' → logprob: -5.5260443687438965
    4. 'filter' → logprob: -5.7760443687438965
    5. ' range' → logprob: -7.7760443687438965
    6. '   ' → logprob: -8.901043891906738
    7. 'set' → logprob: -10.401043891906738
    8. '[' → logprob: -10.651043891906738
    9. ' ' → logprob: -10.776043891906738
    10. '    ' → logprob: -11.026043891906738

Token 189: '_indices' (ID: 43508)
  Prédit: '_indices'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_indices' → logprob: -0.0003416607796680182
    2. 'indices' → logprob: -8.125341415405273
    3. 'Indices' → logprob: -10.875341415405273
    4. '_codes' → logprob: -11.625341415405273
    5. 'range' → logprob: -12.125341415405273
    6. '_ranges' → logprob: -12.875341415405273
    7. '"indices' → logprob: -13.375341415405273
    8. '_tokens' → logprob: -14.000341415405273
    9. ' indices' → logprob: -14.000341415405273
    10. 'lambda' → logprob: -14.375341415405273

Token 190: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.0013563097454607487
    2. 'range' → logprob: -6.62635612487793
    3. '(' → logprob: -10.87635612487793
    4. ' range' → logprob: -11.50135612487793
    5. '(
' → logprob: -14.12635612487793
    6. ' (' → logprob: -15.25135612487793
    7. '	range' → logprob: -15.62635612487793
    8. '(lambda' → logprob: -16.25135612487793
    9. '((' → logprob: -16.62635612487793
    10. '<|end|>' → logprob: -17.00135612487793

Token 191: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.9743012671824545e-05
    2. '1' → logprob: -11.125020027160645
    3. '(N' → logprob: -13.375020027160645
    4. '(
' → logprob: -13.500020027160645
    5. ' (' → logprob: -13.625020027160645
    6. ',' → logprob: -15.125020027160645
    7. '   ' → logprob: -16.125019073486328
    8. '{' → logprob: -16.375019073486328
    9. '<|end|>' → logprob: -16.625019073486328
    10. ')' → logprob: -17.000019073486328

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003288466949015856
    2. '(' → logprob: -5.753288269042969
    3. 'N' → logprob: -9.878288269042969
    4. ' ' → logprob: -11.003288269042969
    5. '0' → logprob: -11.628288269042969
    6. ',' → logprob: -11.628288269042969
    7. '(N' → logprob: -11.753288269042969
    8. '   ' → logprob: -11.878288269042969
    9. '2' → logprob: -13.128288269042969
    10. '
' → logprob: -13.628288269042969

Token 193: ',N' (ID: 49539)
  Prédit: ',N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',N' → logprob: -0.3557160496711731
    2. ',' → logprob: -1.3557159900665283
    3. '(' → logprob: -3.6057159900665283
    4. 'N' → logprob: -4.730716228485107
    5. '1' → logprob: -5.605716228485107
    6. '(N' → logprob: -6.480716228485107
    7. ' ,' → logprob: -8.73071575164795
    8. '   ' → logprob: -9.98071575164795
    9. '{' → logprob: -10.10571575164795
    10. ',
' → logprob: -11.35571575164795

Token 194: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003083120798692107
    2. '),' → logprob: -6.003083229064941
    3. ' +' → logprob: -8.378083229064941
    4. '-' → logprob: -8.753083229064941
    5. ' ),' → logprob: -9.753083229064941
    6. '1' → logprob: -10.378083229064941
    7. '),(' → logprob: -10.753083229064941
    8. ')),' → logprob: -10.878083229064941
    9. '   ' → logprob: -11.003083229064941
    10. ')+' → logprob: -11.503083229064941

Token 195: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.570319702499546e-05
    2. ' ' → logprob: -11.625025749206543
    3. '+' → logprob: -11.875025749206543
    4. '```' → logprob: -13.125025749206543
    5. ')' → logprob: -13.375025749206543
    6. '2' → logprob: -13.375025749206543
    7. '
' → logprob: -13.625025749206543
    8. '{' → logprob: -14.125025749206543
    9. '   ' → logprob: -14.500025749206543
    10. '

' → logprob: -14.875025749206543

Token 196: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1801370531320572
    2. '),' → logprob: -1.805137038230896
    3. '{' → logprob: -8.680136680603027
    4. ' ,' → logprob: -9.055136680603027
    5. '},' → logprob: -10.180136680603027
    6. '(),' → logprob: -10.680136680603027
    7. '       ' → logprob: -11.305136680603027
    8. '           ' → logprob: -11.805136680603027
    9. '   ' → logprob: -12.305136680603027
    10. ',{' → logprob: -12.805136680603027

Token 197: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.13192322850227356
    2. ' {' → logprob: -2.131923198699951
    3. '{i' → logprob: -5.381923198699951
    4. '{s' → logprob: -9.25692367553711
    5. 'set' → logprob: -9.50692367553711
    6. '{x' → logprob: -9.88192367553711
    7. ' ' → logprob: -10.00692367553711
    8. '   ' → logprob: -11.13192367553711
    9. ' set' → logprob: -11.75692367553711
    10. '{k' → logprob: -12.00692367553711

Token 198: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00526091456413269
    2. 'i' → logprob: -5.880260944366455
    3. 'j' → logprob: -6.380260944366455
    4. ' N' → logprob: -8.005260467529297
    5. '   ' → logprob: -8.255260467529297
    6. '(N' → logprob: -10.005260467529297
    7. '{' → logprob: -10.380260467529297
    8. '           ' → logprob: -10.880260467529297
    9. '       ' → logprob: -11.255260467529297
    10. '0' → logprob: -11.755260467529297

Token 199: '-i' (ID: 18499)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.055723629891872406
    2. '-i' → logprob: -3.5557236671447754
    3. '-' → logprob: -3.6807236671447754
    4. '+' → logprob: -8.680723190307617
    5. '   ' → logprob: -9.305723190307617
    6. ' ' → logprob: -10.180723190307617
    7. '  ' → logprob: -10.180723190307617
    8. '-j' → logprob: -11.305723190307617
    9. ',' → logprob: -11.430723190307617
    10. ' +' → logprob: -11.680723190307617

Token 200: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5234151482582092
    2. '+' → logprob: -1.0234150886535645
    3. ' ,' → logprob: -3.3984150886535645
    4. ' +' → logprob: -5.0234150886535645
    5. '1' → logprob: -5.6484150886535645
    6. ' ' → logprob: -6.1484150886535645
    7. '   ' → logprob: -6.7734150886535645
    8. ',i' → logprob: -8.273415565490723
    9. '       ' → logprob: -8.398415565490723
    10. '-' → logprob: -8.523415565490723

Token 201: '}))
' (ID: 98574)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.990925133228302
    2. '}))' → logprob: -0.990925133228302
    3. '}))
' → logprob: -1.4909250736236572
    4. '               ' → logprob: -4.365925312042236
    5. '})
' → logprob: -5.240925312042236
    6. '})' → logprob: -5.740925312042236
    7. '                   ' → logprob: -6.115925312042236
    8. '       ' → logprob: -6.240925312042236
    9. '           ' → logprob: -6.240925312042236
    10. '   ' → logprob: -6.990925312042236

Token 202: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36564797163009644
    2. ')' → logprob: -2.365648031234741
    3. ')))' → logprob: -2.490648031234741
    4. '))' → logprob: -2.865648031234741
    5. '           ' → logprob: -3.615648031234741
    6. '                   ' → logprob: -3.740648031234741
    7. '))))' → logprob: -4.115647792816162
    8. '                       ' → logprob: -6.115647792816162
    9. ')
' → logprob: -6.615647792816162
    10. '       ' → logprob: -7.240647792816162

Token 203: ' ,' (ID: 1366)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.0778628587722778
    2. '           ' → logprob: -1.4528628587722778
    3. '               ' → logprob: -1.5778628587722778
    4. '       ' → logprob: -2.9528627395629883
    5. ')' → logprob: -3.0778627395629883
    6. '))
' → logprob: -3.2028627395629883
    7. '))' → logprob: -3.5778627395629883
    8. ')))' → logprob: -4.077862739562988
    9. '))))' → logprob: -4.202862739562988
    10. '                   ' → logprob: -4.827862739562988

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.09507149457931519
    2. ' range' → logprob: -2.97007155418396
    3. '))' → logprob: -4.220071315765381
    4. 'i' → logprob: -4.845071315765381
    5. '           ' → logprob: -5.970071315765381
    6. '   ' → logprob: -6.095071315765381
    7. '       ' → logprob: -6.220071315765381
    8. ')' → logprob: -6.345071315765381
    9. ')))' → logprob: -6.345071315765381
    10. '1' → logprob: -7.095071315765381

Token 205: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005097838002257049
    2. '1' → logprob: -7.625509738922119
    3. '(N' → logprob: -11.250510215759277
    4. '   ' → logprob: -12.750510215759277
    5. ' (' → logprob: -13.375510215759277
    6. '           ' → logprob: -13.625510215759277
    7. ',' → logprob: -13.875510215759277
    8. '       ' → logprob: -14.250510215759277
    9. '(
' → logprob: -14.875510215759277
    10. ' ' → logprob: -15.000510215759277

Token 206: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009629528038203716
    2. '(' → logprob: -4.759629726409912
    3. 'N' → logprob: -8.009629249572754
    4. '0' → logprob: -8.259629249572754
    5. ' ' → logprob: -8.634629249572754
    6. '(N' → logprob: -9.134629249572754
    7. '   ' → logprob: -9.634629249572754
    8. '2' → logprob: -10.134629249572754
    9. ' (' → logprob: -11.634629249572754
    10. '((' → logprob: -12.009629249572754

Token 207: ',N' (ID: 49539)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29692086577415466
    2. ',' → logprob: -1.421920895576477
    3. '(N' → logprob: -4.7969207763671875
    4. ',N' → logprob: -5.7969207763671875
    5. '1' → logprob: -5.9219207763671875
    6. ' ,' → logprob: -6.5469207763671875
    7. '   ' → logprob: -8.921920776367188
    8. '       ' → logprob: -10.296920776367188
    9. '           ' → logprob: -10.546920776367188
    10. ' ' → logprob: -11.296920776367188

Token 208: '))
' (ID: 2210)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.006892031524330378
    2. ')))' → logprob: -5.506892204284668
    3. '))' → logprob: -6.756892204284668
    4. ')' → logprob: -7.381892204284668
    5. ')));' → logprob: -8.506892204284668
    6. ' +' → logprob: -9.006892204284668
    7. '))))' → logprob: -9.006892204284668
    8. '   ' → logprob: -9.506892204284668
    9. ')))),' → logprob: -9.506892204284668
    10. ',' → logprob: -9.506892204284668

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7338662147521973
    2. ')))' → logprob: -0.9838662147521973
    3. '))' → logprob: -2.3588662147521973
    4. ')' → logprob: -3.6088662147521973
    5. '           ' → logprob: -3.9838662147521973
    6. '))))' → logprob: -5.733866214752197
    7. '               ' → logprob: -6.108866214752197
    8. '   ' → logprob: -9.108865737915039
    9. '                   ' → logprob: -9.358865737915039
    10. '                       ' → logprob: -9.733865737915039

Token 210: ' ))
' (ID: 43705)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.22498653829097748
    2. '))' → logprob: -1.8499865531921387
    3. '       ' → logprob: -3.7249865531921387
    4. '))))' → logprob: -4.599986553192139
    5. ')' → logprob: -5.349986553192139
    6. '           ' → logprob: -5.599986553192139
    7. ')))
' → logprob: -7.724986553192139
    8. '   ' → logprob: -7.974986553192139
    9. '               ' → logprob: -8.09998607635498
    10. '))
' (adapté à ' ))
') → logprob: -8.59998607635498

Token 211: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4569289982318878
    2. '       ' → logprob: -1.4569289684295654
    3. ')))' → logprob: -2.5819289684295654
    4. '))' → logprob: -3.0819289684295654
    5. '   ' → logprob: -5.0819292068481445
    6. '           ' → logprob: -5.4569292068481445
    7. '))))' → logprob: -7.2069292068481445
    8. '               ' → logprob: -7.7069292068481445
    9. '                   ' → logprob: -8.706929206848145
    10. ')
' → logprob: -8.956929206848145

Token 212: ' rest' (ID: 2867)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19208653271198273
    2. '       ' → logprob: -2.0670864582061768
    3. '   ' → logprob: -3.3170864582061768
    4. '))' → logprob: -4.817086696624756
    5. ')))' → logprob: -5.817086696624756
    6. ')
' → logprob: -7.942086696624756
    7. '           ' → logprob: -8.317086219787598
    8. '))))' → logprob: -10.567086219787598
    9. 'return' → logprob: -10.567086219787598
    10. ')}' → logprob: -10.692086219787598

Token 213: '_flat' (ID: 103794)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.7836620211601257
    2. '=' → logprob: -1.1586620807647705
    3. ' =' → logprob: -2.2836620807647705
    4. ')' → logprob: -2.6586620807647705
    5. '.union' → logprob: -3.9086620807647705
    6. '.' → logprob: -4.533661842346191
    7. '<|end|>' → logprob: -5.158661842346191
    8. '   ' → logprob: -5.158661842346191
    9. ' |=' → logprob: -5.283661842346191
    10. ').' → logprob: -6.408661842346191

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.016092203557491302
    2. ' =' → logprob: -4.141092300415039
    3. ')' → logprob: -10.391092300415039
    4. ')=' → logprob: -11.641092300415039
    5. '   ' → logprob: -11.766092300415039
    6. '()' → logprob: -12.016092300415039
    7. '=set' → logprob: -13.766092300415039
    8. '  ' → logprob: -14.766092300415039
    9. ' ' → logprob: -14.891092300415039
    10. '(' → logprob: -15.141092300415039

Token 215: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.18394799530506134
    2. 'chain' → logprob: -2.558948040008545
    3. ' set' → logprob: -2.683948040008545
    4. ' chain' → logprob: -3.933948040008545
    5. 'list' → logprob: -6.308948040008545
    6. ' list' → logprob: -7.433948040008545
    7. '   ' → logprob: -9.058947563171387
    8. '{' → logprob: -9.433947563171387
    9. '(chain' → logprob: -9.808947563171387
    10. ' ' → logprob: -10.683947563171387

Token 216: '(x' (ID: 4061)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.00010902655776590109
    2. '(' → logprob: -9.75010871887207
    3. '(flat' → logprob: -10.50010871887207
    4. '([' → logprob: -12.00010871887207
    5. '().' → logprob: -12.25010871887207
    6. '(
' → logprob: -12.62510871887207
    7. '.chain' → logprob: -13.25010871887207
    8. '((' → logprob: -13.50010871887207
    9. '()' → logprob: -13.62510871887207
    10. '(sum' → logprob: -13.75010871887207

Token 217: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.281294047832489
    2. ' for' → logprob: -1.4062941074371338
    3. ' ' → logprob: -10.406293869018555
    4. 'or' → logprob: -10.656293869018555
    5. '   ' → logprob: -10.781293869018555
    6. '	for' → logprob: -11.031293869018555
    7. 'chain' → logprob: -11.656293869018555
    8. '.for' → logprob: -11.781293869018555
    9. '.chain' → logprob: -11.781293869018555
    10. ')' → logprob: -11.906293869018555

Token 218: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.22436055541038513
    2. 'lst' → logprob: -2.474360466003418
    3. 'inner' → logprob: -3.474360466003418
    4. 'pair' → logprob: -4.474360466003418
    5. 'group' → logprob: -4.474360466003418
    6. ' sub' → logprob: -4.724360466003418
    7. 'map' → logprob: -4.724360466003418
    8. 'xs' → logprob: -4.849360466003418
    9. 'rest' → logprob: -5.099360466003418
    10. 'chain' → logprob: -5.099360466003418

Token 219: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.013271166943013668
    2. 'list' → logprob: -4.388271331787109
    3. 'in' → logprob: -7.513271331787109
    4. 'x' → logprob: -9.51327133178711
    5. 'lst' → logprob: -9.51327133178711
    6. 'sub' → logprob: -10.76327133178711
    7. '   ' → logprob: -11.76327133178711
    8. 'set' → logprob: -12.01327133178711
    9. 'for' → logprob: -12.26327133178711
    10. 's' → logprob: -12.26327133178711

Token 220: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -6.511406809295295e-06
    2. ' rest' → logprob: -12.000006675720215
    3. 'map' → logprob: -15.750006675720215
    4. '(rest' → logprob: -16.5000057220459
    5. '   ' → logprob: -18.1250057220459
    6. 'list' → logprob: -19.1250057220459
    7. 'sub' → logprob: -19.2500057220459
    8. 'chain' → logprob: -19.8750057220459
    9. 'x' → logprob: -20.6250057220459
    10. '
' → logprob: -20.7500057220459

Token 221: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5762025713920593
    2. 'for' → logprob: -0.8262025713920593
    3. '       ' → logprob: -9.201202392578125
    4. '   ' → logprob: -9.451202392578125
    5. '           ' → logprob: -9.701202392578125
    6. '	for' → logprob: -11.451202392578125
    7. ' ' → logprob: -12.826202392578125
    8. '         ' → logprob: -13.576202392578125
    9. '          ' → logprob: -13.701202392578125
    10. '               ' → logprob: -13.701202392578125

Token 222: ' x' (ID: 1215)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0267900750041008
    2. 'x' → logprob: -3.776790142059326
    3. ' sub' → logprob: -5.651790142059326
    4. ' x' → logprob: -10.526789665222168
    5. 's' → logprob: -16.651790618896484
    6. '  ' → logprob: -17.026790618896484
    7. ' ' → logprob: -17.276790618896484
    8. '	sub' → logprob: -17.526790618896484
    9. '(sub' → logprob: -17.651790618896484
    10. '   ' → logprob: -18.276790618896484

Token 223: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6942344903945923
    2. ' in' → logprob: -0.6942344903945923
    3. 'sub' → logprob: -6.944234371185303
    4. ' sub' → logprob: -9.569234848022461
    5. '<|end|>' → logprob: -10.444234848022461
    6. ' ' → logprob: -11.194234848022461
    7. '  ' → logprob: -12.569234848022461
    8. '[sub' → logprob: -13.194234848022461
    9. 's' → logprob: -13.694234848022461
    10. ')' → logprob: -14.194234848022461

Token 224: ' sub' (ID: 1543)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.0031781906727701426
    2. ' sub' → logprob: -5.753178119659424
    3. '(sub' → logprob: -15.503178596496582
    4. '	sub' → logprob: -16.628177642822266
    5. ' ' → logprob: -16.878177642822266
    6. '[sub' → logprob: -16.878177642822266
    7. '  ' → logprob: -17.253177642822266
    8. '   ' → logprob: -17.378177642822266
    9. '.sub' → logprob: -17.503177642822266
    10. '{sub' → logprob: -17.753177642822266

Token 225: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006522460374981165
    2. ')
' → logprob: -5.2565226554870605
    3. '   ' → logprob: -7.3815226554870605
    4. '       ' → logprob: -8.131522178649902
    5. '))' → logprob: -8.256522178649902
    6. ' )' → logprob: -9.506522178649902
    7. ')

' → logprob: -11.506522178649902
    8. ')))' → logprob: -11.631522178649902
    9. ')}' → logprob: -12.131522178649902
    10. '))
' → logprob: -13.131522178649902

Token 226: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.48246926069259644
    2. '       ' → logprob: -1.1074693202972412
    3. '   ' → logprob: -2.982469320297241
    4. '<|end|>' → logprob: -6.732469081878662
    5. '           ' → logprob: -9.10746955871582
    6. ')
' → logprob: -9.85746955871582
    7. '<|end|>' → logprob: -9.85746955871582
    8. '
' → logprob: -9.98246955871582
    9. '    ' → logprob: -10.48246955871582
    10. ')))' → logprob: -10.60746955871582

Token 227: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.357328325510025
    2. ')' → logprob: -1.3573282957077026
    3. '   ' → logprob: -3.982328414916992
    4. '<|end|>' → logprob: -4.482328414916992
    5. '
' → logprob: -5.232328414916992
    6. 'return' (adapté à ' return') → logprob: -5.607328414916992
    7. ')
' → logprob: -6.732328414916992
    8. '<|end|>' → logprob: -6.982328414916992
    9. ' return' → logprob: -7.107328414916992
    10. '),' → logprob: -8.232328414916992

Token 228: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.4298475682735443
    2. ' start' → logprob: -1.0548475980758667
    3. '   ' → logprob: -7.804847717285156
    4. '       ' → logprob: -8.679847717285156
    5. 'rest' → logprob: -8.804847717285156
    6. ' ' → logprob: -8.929847717285156
    7. ' rest' → logprob: -8.929847717285156
    8. '(start' → logprob: -10.304847717285156
    9. '     ' → logprob: -10.804847717285156
    10. '  ' → logprob: -10.929847717285156

Token 229: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.022064924240112305
    2. ' |' → logprob: -4.397065162658691
    3. '   ' → logprob: -5.772065162658691
    4. '<|end|>' → logprob: -6.022065162658691
    5. 'union' → logprob: -6.397065162658691
    6. '
' → logprob: -8.022065162658691
    7. ' union' → logprob: -8.147065162658691
    8. ' ' → logprob: -8.397065162658691
    9. '_union' → logprob: -8.397065162658691
    10. ',' → logprob: -8.397065162658691

Token 230: ' rest' (ID: 2867)
  Prédit: 'rest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rest' → logprob: -0.04302602261304855
    2. ' rest' → logprob: -3.1680259704589844
    3. '   ' → logprob: -11.543025970458984
    4. '(rest' → logprob: -11.793025970458984
    5. '       ' → logprob: -12.668025970458984
    6. ' ' → logprob: -13.043025970458984
    7. 'complex' → logprob: -13.668025970458984
    8. '  ' → logprob: -14.543025970458984
    9. '     ' → logprob: -14.668025970458984
    10. '    ' → logprob: -14.793025970458984

Token 231: '_flat' (ID: 103794)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0982932299375534
    2. '       ' → logprob: -2.4732933044433594
    3. '   ' → logprob: -5.223293304443359
    4. ')
' → logprob: -6.598293304443359
    5. ')))' → logprob: -6.723293304443359
    6. '))' → logprob: -7.473293304443359
    7. '           ' → logprob: -8.09829330444336
    8. '               ' → logprob: -9.59829330444336
    9. '))))' → logprob: -9.59829330444336
    10. '<|end|>' → logprob: -9.72329330444336

Token 232: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05396996811032295
    2. '   ' → logprob: -3.5539698600769043
    3. ':' → logprob: -4.303969860076904
    4. '):' → logprob: -5.303969860076904
    5. '       ' → logprob: -5.928969860076904
    6. '<|end|>' → logprob: -6.803969860076904
    7. ')
' → logprob: -7.053969860076904
    8. '<|end|>' → logprob: -9.053970336914062
    9. ' ' → logprob: -9.553970336914062
    10. ':
' → logprob: -9.678970336914062

Token 233: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014292863197624683
    2. '):' → logprob: -7.251429080963135
    3. '   ' → logprob: -8.001429557800293
    4. '       ' → logprob: -9.251429557800293
    5. '<|end|>' → logprob: -9.251429557800293
    6. ':' → logprob: -9.751429557800293
    7. ')
' → logprob: -10.251429557800293
    8. ')))' → logprob: -10.376429557800293
    9. ' ' → logprob: -11.876429557800293
    10. ')}}' → logprob: -12.251429557800293

Token 234: ' ans' (ID: 3345)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06307295709848404
    2. '   ' → logprob: -3.063072919845581
    3. ':' → logprob: -4.43807315826416
    4. '):' → logprob: -7.18807315826416
    5. '<|end|>' → logprob: -7.31307315826416
    6. '       ' → logprob: -8.56307315826416
    7. ' ' → logprob: -8.68807315826416
    8. ')
' → logprob: -8.68807315826416
    9. 'def' → logprob: -9.68807315826416
    10. '  ' → logprob: -9.93807315826416

Token 235: ' =' (ID: 314)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.7646243572235107
    2. '.' → logprob: -1.1396243572235107
    3. '.update' → logprob: -1.6396243572235107
    4. ' .' → logprob: -4.63962459564209
    5. '.union' → logprob: -5.51462459564209
    6. ' |=' → logprob: -6.76462459564209
    7. ' =' → logprob: -6.88962459564209
    8. '.clear' → logprob: -6.88962459564209
    9. '=' → logprob: -7.01462459564209
    10. ')' → logprob: -7.26462459564209

Token 236: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.25296634435653687
    2. ' complex' → logprob: -1.5029664039611816
    3. 'set' → logprob: -7.252966403961182
    4. ' set' → logprob: -8.502965927124023
    5. '   ' → logprob: -9.752965927124023
    6. '{}' → logprob: -11.502965927124023
    7. ' ' → logprob: -11.502965927124023
    8. '{' → logprob: -11.877965927124023
    9. ' complexe' → logprob: -12.002965927124023
    10. '(com' → logprob: -12.502965927124023

Token 237: '_even' (ID: 186029)
  Prédit: '_even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.023247458040714264
    2. '_' → logprob: -3.773247480392456
    3. '_complex' → logprob: -14.398247718811035
    4. '_ev' → logprob: -15.648247718811035
    5. '_equal' → logprob: -15.773247718811035
    6. '_e' → logprob: -15.773247718811035
    7. '_par' → logprob: -16.14824676513672
    8. '_(' → logprob: -16.52324676513672
    9. '_od' → logprob: -16.64824676513672
    10. 'Even' → logprob: -16.64824676513672

Token 238: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002512285253033042
    2. '(' → logprob: -6.002512454986572
    3. '(
' → logprob: -11.627511978149414
    4. ' (' → logprob: -12.002511978149414
    5. '```' → logprob: -12.377511978149414
    6. '   ' → logprob: -12.752511978149414
    7. '(n' → logprob: -12.752511978149414
    8. ',' → logprob: -13.252511978149414
    9. '
' → logprob: -13.252511978149414
    10. '((' → logprob: -13.627511978149414

Token 239: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007852102862671018
    2. '())' → logprob: -7.2507853507995605
    3. '()' → logprob: -9.625784873962402
    4. '))' → logprob: -12.625784873962402
    5. ')
' → logprob: -13.375784873962402
    6. ' )' → logprob: -13.750784873962402
    7. '   ' → logprob: -13.875784873962402
    8. '(N' → logprob: -14.375784873962402
    9. ')}' → logprob: -15.250784873962402
    10. ')`' → logprob: -15.500784873962402

Token 240: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003715761238709092
    2. '<|end|>' → logprob: -6.003715991973877
    3. '   ' → logprob: -6.878715991973877
    4. ')
' → logprob: -9.628715515136719
    5. '<|end|>' → logprob: -10.253715515136719
    6. '
' → logprob: -10.878715515136719
    7. '```' → logprob: -11.128715515136719
    8. '()' → logprob: -12.003715515136719
    9. ')}' → logprob: -12.128715515136719
    10. ' )' → logprob: -12.128715515136719

Token 241: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.38697388768196106
    2. ' N' → logprob: -1.1369738578796387
    3. ' ' → logprob: -9.886974334716797
    4. '   ' → logprob: -10.261974334716797
    5. '  ' → logprob: -12.136974334716797
    6. '(N' → logprob: -12.136974334716797
    7. ' (' → logprob: -12.386974334716797
    8. '(' → logprob: -13.511974334716797
    9. '    ' → logprob: -15.386974334716797
    10. ' ' → logprob: -15.886974334716797

Token 242: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.5547145009040833
    2. '%' → logprob: -0.9297145009040833
    3. ' ' → logprob: -3.5547144412994385
    4. ' >=' → logprob: -6.679714679718018
    5. '>=' → logprob: -8.05471420288086
    6. ' <' → logprob: -8.42971420288086
    7. '<|end|>' → logprob: -8.80471420288086
    8. ' <=' → logprob: -9.05471420288086
    9. '   ' → logprob: -9.05471420288086
    10. '  ' → logprob: -9.42971420288086

Token 243: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0488709881901741
    2. ' ' → logprob: -3.0488710403442383
    3. '==' → logprob: -8.298871040344238
    4. ' ==' → logprob: -10.923871040344238
    5. '   ' → logprob: -11.548871040344238
    6. '  ' → logprob: -12.673871040344238
    7. '```' → logprob: -13.423871040344238
    8. '=' → logprob: -14.798871040344238
    9. '    ' → logprob: -14.798871040344238
    10. '     ' → logprob: -15.298871040344238

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '==' → logprob: -13.500032424926758
    4. '```' → logprob: -16.875032424926758
    5. '   ' → logprob: -17.000032424926758
    6. '0' → logprob: -17.000032424926758
    7. '=' → logprob: -17.750032424926758
    8. '  ' → logprob: -19.000032424926758
    9. ' ==' → logprob: -20.125032424926758
    10. '1' → logprob: -20.250032424926758

Token 245: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0796326994895935
    2. ' ==' → logprob: -2.5796327590942383
    3. ' else' → logprob: -7.579632759094238
    4. 'else' → logprob: -8.454632759094238
    5. '!=' → logprob: -11.829632759094238
    6. ' ' → logprob: -12.329632759094238
    7. ' !=' → logprob: -13.079632759094238
    8. '==
' → logprob: -13.579632759094238
    9. '   ' → logprob: -13.829632759094238
    10. ')==' → logprob: -14.079632759094238

Token 246: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.024517828598618507
    2. ' ' → logprob: -4.149518013000488
    3. '2' → logprob: -4.774518013000488
    4. '   ' → logprob: -12.399518013000488
    5. '1' → logprob: -14.524518013000488
    6. '```' → logprob: -15.274518013000488
    7. '  ' → logprob: -15.524518013000488
    8. '       ' → logprob: -15.899518013000488
    9. '==' → logprob: -16.274517059326172
    10. '    ' → logprob: -17.087017059326172

Token 247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.16034598648548126
    2. '2' → logprob: -1.9103460311889648
    3. ' ' → logprob: -9.035346031188965
    4. '   ' → logprob: -13.660346031188965
    5. '```' → logprob: -13.910346031188965
    6. '1' → logprob: -15.535346031188965
    7. '
' → logprob: -16.53534507751465
    8. '4' → logprob: -16.78534507751465
    9. '==' → logprob: -17.03534507751465
    10. '  ' → logprob: -17.16034507751465

Token 248: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.06197608634829521
    2. 'else' → logprob: -2.811976194381714
    3. '   ' → logprob: -12.561976432800293
    4. '	else' → logprob: -12.811976432800293
    5. '_else' → logprob: -13.936976432800293
    6. ' ' → logprob: -14.311976432800293
    7. '    ' → logprob: -14.686976432800293
    8. '[]' → logprob: -16.436975479125977
    9. '  ' → logprob: -17.061975479125977
    10. '()' → logprob: -17.561975479125977

Token 249: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.47407805919647217
    2. ' complex' → logprob: -0.9740780591964722
    3. '   ' → logprob: -14.224078178405762
    4. ' ' → logprob: -15.974078178405762
    5. '_complex' → logprob: -16.474077224731445
    6. ' complexe' → logprob: -16.599077224731445
    7. '  ' → logprob: -17.349077224731445
    8. 'Complex' → logprob: -17.599077224731445
    9. '    ' → logprob: -17.599077224731445
    10. ' komplex' → logprob: -18.099077224731445

Token 250: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5048530030981055e-06
    2. '_even' → logprob: -13.750001907348633
    3. ''_' → logprob: -16.375001907348633
    4. '_od' → logprob: -16.375001907348633
    5. '```' → logprob: -16.500001907348633
    6. ' _' → logprob: -18.125001907348633
    7. '\' → logprob: -19.250001907348633
    8. '_o' → logprob: -19.500001907348633
    9. '_old' → logprob: -19.625001907348633
    10. '__' → logprob: -19.625001907348633

Token 251: 'odd' (ID: 18303)
  Prédit: 'odd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'odd' → logprob: -6.704273118884885e-07
    2. 'od' → logprob: -14.875000953674316
    3. 'even' → logprob: -15.875000953674316
    4. '_' → logprob: -17.0
    5. ' odd' → logprob: -17.375
    6. 'Odd' → logprob: -17.5
    7. 'old' → logprob: -17.875
    8. 'ood' → logprob: -18.625
    9. '```' → logprob: -19.0
    10. 'o' → logprob: -19.25

Token 252: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00018149138486478478
    2. '(' → logprob: -8.625181198120117
    3. ' (' → logprob: -14.000181198120117
    4. '```' → logprob: -14.375181198120117
    5. 'N' → logprob: -15.500181198120117
    6. '(n' → logprob: -16.250181198120117
    7. '(
' → logprob: -16.875181198120117
    8. '((' → logprob: -17.000181198120117
    9. '<|end|>' → logprob: -17.000181198120117
    10. ' ' → logprob: -17.375181198120117

Token 253: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6550729419104755e-05
    2. '))' → logprob: -11.625036239624023
    3. '())' → logprob: -12.000036239624023
    4. ' )' → logprob: -12.125036239624023
    5. '(N' → logprob: -12.250036239624023
    6. '   ' → logprob: -12.625036239624023
    7. ')
' → logprob: -13.125036239624023
    8. '()' → logprob: -13.125036239624023
    9. '+' → logprob: -13.625036239624023
    10. ')))' → logprob: -14.500036239624023

Token 254: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11277396231889725
    2. ')' → logprob: -2.987773895263672
    3. '<|end|>' → logprob: -2.987773895263672
    4. '
' → logprob: -5.487773895263672
    5. '    
' → logprob: -7.237773895263672
    6. '<|end|>' → logprob: -8.362773895263672
    7. '```' → logprob: -8.487773895263672
    8. '\n' → logprob: -8.737773895263672
    9. ')
' → logprob: -8.987773895263672
    10. 'return' → logprob: -9.737773895263672

Token 255: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006151681300252676
    2. ')' → logprob: -6.0061516761779785
    3. '<|end|>' → logprob: -6.0061516761779785
    4. '
' → logprob: -7.5061516761779785
    5. 'print' (adapté à ' print') → logprob: -8.256152153015137
    6. 'return' → logprob: -8.756152153015137
    7. '    
' → logprob: -9.256152153015137
    8. '<|end|>' → logprob: -10.506152153015137
    9. ' return' → logprob: -11.131152153015137
    10. ')
' → logprob: -11.381152153015137

Token 256: '(len' (ID: 14990)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.09642773121595383
    2. '(len' → logprob: -2.8464276790618896
    3. '(*' → logprob: -3.5964276790618896
    4. '()' → logprob: -5.346427917480469
    5. '(' → logprob: -7.096427917480469
    6. '('' → logprob: -8.346427917480469
    7. '(list' → logprob: -8.596427917480469
    8. '(sorted' → logprob: -8.596427917480469
    9. 'ans' → logprob: -9.221427917480469
    10. '(tuple' → logprob: -9.721427917480469

Token 257: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.00020520923135336488
    2. '(' → logprob: -8.500205039978027
    3. ' (' → logprob: -14.125205039978027
    4. ')' → logprob: -14.250205039978027
    5. 'ans' → logprob: -15.625205039978027
    6. '(
' → logprob: -15.875205039978027
    7. '	ans' → logprob: -17.000205993652344
    8. '(answer' → logprob: -17.125205993652344
    9. '(args' → logprob: -18.000205993652344
    10. '(

' → logprob: -18.375205993652344

Token 258: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47409215569496155
    2. '))' → logprob: -0.9740921258926392
    3. '())' → logprob: -11.974092483520508
    4. ')))' → logprob: -12.099092483520508
    5. '()' → logprob: -13.974092483520508
    6. '()))' → logprob: -14.099092483520508
    7. ')}' → logprob: -14.474092483520508
    8. '))
' → logprob: -14.849092483520508
    9. ')
' → logprob: -15.599092483520508
    10. ' )' → logprob: -15.974092483520508

Token 259: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001773192489054054
    2. ':' → logprob: -9.625177383422852
    3. '):' → logprob: -9.875177383422852
    4. ')))' → logprob: -10.625177383422852
    5. '   ' → logprob: -11.625177383422852
    6. '<|end|>' → logprob: -11.625177383422852
    7. ')
' → logprob: -12.500177383422852
    8. '```' → logprob: -12.875177383422852
    9. '))' → logprob: -13.250177383422852
    10. ')])' → logprob: -13.875177383422852

Token 260: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03129409998655319
    2. '<|end|>' → logprob: -3.531294107437134
    3. '   ' → logprob: -7.656293869018555
    4. '<|end|>' → logprob: -8.156293869018555
    5. '
' → logprob: -8.406293869018555
    6. 'main' → logprob: -8.781293869018555
    7. '```' → logprob: -9.031293869018555
    8. ' ' → logprob: -10.281293869018555
    9. ' main' → logprob: -10.406293869018555
    10. '(main' → logprob: -10.781293869018555

Token 261: ' i' (ID: 575)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.31751811504364014
    2. 'e' → logprob: -1.8175181150436401
    3. 'a' → logprob: -2.9425182342529297
    4. 'x' → logprob: -3.1925182342529297
    5. ' edge' → logprob: -4.94251823425293
    6. 'p' → logprob: -5.44251823425293
    7. 'pair' → logprob: -5.69251823425293
    8. 'item' → logprob: -7.94251823425293
    9. 's' → logprob: -8.56751823425293
    10. ' e' → logprob: -9.31751823425293

Token 262: ',j' (ID: 22712)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.6395993828773499
    2. 'in' → logprob: -0.7645993828773499
    3. ',' → logprob: -5.139599323272705
    4. 'n' → logprob: -7.014599323272705
    5. ',n' → logprob: -9.139599800109863
    6. ' n' → logprob: -10.514599800109863
    7. ' ' → logprob: -10.639599800109863
    8. ',in' → logprob: -10.639599800109863
    9. ' ,' → logprob: -11.264599800109863
    10. '   ' → logprob: -11.639599800109863

Token 263: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25193196535110474
    2. 'in' → logprob: -1.50193190574646
    3. ' ' → logprob: -14.251932144165039
    4. '	in' → logprob: -14.376932144165039
    5. '   ' → logprob: -15.251932144165039
    6. '_in' → logprob: -15.251932144165039
    7. ',' → logprob: -15.626932144165039
    8. 'In' → logprob: -15.751932144165039
    9. ')' → logprob: -15.876932144165039
    10. '  ' → logprob: -16.25193214416504

Token 264: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.31593385338783264
    2. 'sorted' → logprob: -1.3159338235855103
    3. ' ans' → logprob: -6.315933704376221
    4. ' sorted' → logprob: -7.065933704376221
    5. '   ' → logprob: -12.690934181213379
    6. '(ans' → logprob: -13.565934181213379
    7. '	ans' → logprob: -14.315934181213379
    8. 'Ans' → logprob: -14.940934181213379
    9. ' ' → logprob: -14.940934181213379
    10. '(sorted' → logprob: -15.065934181213379

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020578909665346146
    2. ':
' → logprob: -3.8955788612365723
    3. '   ' → logprob: -10.77057933807373
    4. '):' → logprob: -12.27057933807373
    5. '():
' → logprob: -12.52057933807373
    6. '):
' → logprob: -12.64557933807373
    7. 'print' → logprob: -13.64557933807373
    8. ':
' → logprob: -14.89557933807373
    9. '():' → logprob: -15.02057933807373
    10. '       ' → logprob: -15.14557933807373

Token 266: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016166195273399353
    2. ':' → logprob: -6.626616477966309
    3. ',' → logprob: -9.376616477966309
    4. '<|end|>' → logprob: -9.376616477966309
    5. ':
' → logprob: -10.251616477966309
    6. ' print' → logprob: -10.626616477966309
    7. '   ' → logprob: -10.751616477966309
    8. '        
' → logprob: -10.876616477966309
    9. '):
' → logprob: -12.751616477966309
    10. '():
' → logprob: -12.876616477966309

Token 267: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5649327039718628
    2. 'print' (adapté à ' print') → logprob: -1.3149327039718628
    3. '       ' → logprob: -1.8149327039718628
    4. '   ' → logprob: -8.314932823181152
    5. '	print' → logprob: -11.439932823181152
    6. '```' → logprob: -13.064932823181152
    7. ' ' → logprob: -14.314932823181152
    8. '     ' → logprob: -14.814932823181152
    9. '.print' → logprob: -15.189932823181152
    10. '#print' → logprob: -15.314932823181152

Token 268: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -9.460291767027229e-05
    2. '(f' → logprob: -9.750094413757324
    3. 'i' → logprob: -10.250094413757324
    4. '(' → logprob: -14.000094413757324
    5. 'f' → logprob: -16.75009536743164
    6. ' i' → logprob: -17.00009536743164
    7. '{i' → logprob: -17.37509536743164
    8. '   ' → logprob: -18.25009536743164
    9. '("{}' → logprob: -18.87509536743164
    10. '(j' → logprob: -19.00009536743164

Token 269: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25548237562179565
    2. ',j' → logprob: -1.5054824352264404
    3. ' ,' → logprob: -5.755482196807861
    4. ',end' → logprob: -8.00548267364502
    5. ',i' → logprob: -10.25548267364502
    6. ' j' → logprob: -12.63048267364502
    7. '   ' → logprob: -12.88048267364502
    8. ',b' → logprob: -13.88048267364502
    9. ' ' → logprob: -13.88048267364502
    10. 'j' → logprob: -14.00548267364502

Token 270: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -17.500003814697266
    4. ')#' → logprob: -17.500003814697266
    5. '   ' → logprob: -18.125003814697266
    6. '))' → logprob: -18.625003814697266
    7. ')`' → logprob: -19.250003814697266
    8. ')}' → logprob: -19.250003814697266
    9. '),' → logprob: -19.375003814697266
    10. ')}}' → logprob: -19.750003814697266

Token 271: 'if' (ID: 366)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009892228990793228
    2. ')))' → logprob: -7.7509894371032715
    3. '))' → logprob: -7.7509894371032715
    4. ')
' → logprob: -9.750988960266113
    5. ':' → logprob: -11.375988960266113
    6. '):' → logprob: -11.750988960266113
    7. '   ' → logprob: -11.750988960266113
    8. ' )' → logprob: -11.875988960266113
    9. '))))' → logprob: -12.125988960266113
    10. ')}}' → logprob: -12.125988960266113

Token 272: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.07891181856393814
    2. '__' → logprob: -2.578911781311035
    3. '_' → logprob: -11.453911781311035
    4. '_name' → logprob: -12.328911781311035
    5. ' ' → logprob: -12.453911781311035
    6. 'name' → logprob: -13.953911781311035
    7. '___' → logprob: -13.953911781311035
    8. ' ' → logprob: -14.703911781311035
    9. '/__' → logprob: -15.828911781311035
    10. ' _' → logprob: -15.828911781311035

Token 273: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09076663106679916
    2. '==' → logprob: -3.215766668319702
    3. ' ==' → logprob: -3.215766668319702
    4. 'name' → logprob: -5.340766429901123
    5. '=="' → logprob: -6.840766429901123
    6. ' __' → logprob: -8.965766906738281
    7. '__.__' → logprob: -9.465766906738281
    8. '()==' → logprob: -9.590766906738281
    9. '=='' → logprob: -9.840766906738281
    10. 'main' → logprob: -10.090766906738281

Token 274: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.246537173457909e-06
    2. '__.__' → logprob: -13.375003814697266
    3. '==' → logprob: -13.625003814697266
    4. '___' → logprob: -14.250003814697266
    5. '____' → logprob: -15.250003814697266
    6. '_' → logprob: -15.500003814697266
    7. '__('' → logprob: -16.000003814697266
    8. ' ==' → logprob: -17.375003814697266
    9. '__.' → logprob: -17.375003814697266
    10. '__["' → logprob: -17.500003814697266

Token 275: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.48878946900367737
    2. '__' → logprob: -1.113789439201355
    3. ' ==' → logprob: -2.8637895584106445
    4. '=="' → logprob: -6.9887895584106445
    5. '=='' → logprob: -8.488789558410645
    6. '=' → logprob: -9.363789558410645
    7. '_' → logprob: -10.738789558410645
    8. '===' → logprob: -10.863789558410645
    9. '___' → logprob: -12.488789558410645
    10. '.__' → logprob: -13.738789558410645

Token 276: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02328496240079403
    2. ''' → logprob: -3.773284912109375
    3. ' "__' → logprob: -10.523284912109375
    4. '__' → logprob: -11.398284912109375
    5. ' '__' → logprob: -13.898284912109375
    6. '   ' → logprob: -16.023284912109375
    7. '"user' → logprob: -16.648284912109375
    8. '"name' → logprob: -17.273284912109375
    9. '"class' → logprob: -17.398284912109375
    10. ''"' → logprob: -17.523284912109375

Token 277: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4033115804195404
    2. 'main' → logprob: -1.1533116102218628
    3. '"' → logprob: -4.278311729431152
    4. 'name' → logprob: -6.403311729431152
    5. ''' → logprob: -7.278311729431152
    6. '"name' → logprob: -10.153311729431152
    7. '_main' → logprob: -10.778311729431152
    8. '   ' → logprob: -12.153311729431152
    9. ''name' → logprob: -12.403311729431152
    10. '__":
' → logprob: -12.653311729431152

Token 278: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03843950852751732
    2. '__' → logprob: -3.2884395122528076
    3. '__':
' → logprob: -8.163439750671387
    4. '__.' → logprob: -9.288439750671387
    5. '__.__' → logprob: -10.913439750671387
    6. '__["' → logprob: -13.413439750671387
    7. '__
' → logprob: -15.038439750671387
    8. '.' → logprob: -15.788439750671387
    9. '__("' → logprob: -15.788439750671387
    10. '__",' → logprob: -16.41343879699707

Token 279: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19705356657505035
    2. 'main' → logprob: -2.1970536708831787
    3. ' main' → logprob: -2.6970536708831787
    4. '	main' → logprob: -8.072053909301758
    5. ' ' → logprob: -12.697053909301758
    6. '_main' → logprob: -13.197053909301758
    7. '   ' → logprob: -14.072053909301758
    8. '  ' → logprob: -14.572053909301758
    9. '(main' → logprob: -15.197053909301758
    10. '    
' → logprob: -16.072053909301758

Token 280: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -6.704273118884885e-07
    2. ' main' → logprob: -14.250000953674316
    3. '	main' → logprob: -18.5
    4. '   ' → logprob: -19.375
    5. '_main' → logprob: -23.375
    6. '.main' → logprob: -24.125
    7. '(main' → logprob: -24.5
    8. 'import' → logprob: -24.875
    9. '  ' → logprob: -25.125
    10. 'Main' → logprob: -25.625

Token 281: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 279
Tokens correctement prédits (1ère position, stricte): 98
Tokens correctement prédits (1ère position, avec adaptation): 102
Tokens correctement prédits (top 10): 221
Précision stricte (1ère position): 35.13%
Précision adaptée (1ère position): 36.56%
Précision (top 10): 79.21%
================================================================================
