================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def compute_dominoes(h: int, w: int) -> int:
    """
    Calcule le nombre maximal de dominos 1x2 pouvant être placés sur une grille h x w,
    selon les règles suivantes :
    - Si la surface totale (h*w) est supérieure ou égale à la somme (h+w), alors on retourne
      le plafond de (h*w / 2) (nombre maximal de dominos).
    - Sinon, on retourne 1 (au moins un domino peut être placé).

    Args:
        h (int): Nombre de lignes de la grille.
        w (int): Nombre de colonnes de la grille.

    Returns:
        int: Nombre maximal de dominos pouvant être placés.
    """
    # Surface totale de la grille
    surface = h * w
    # Somme des côtés
    perimetre = h + w

    # Si la surface est suffisamment grande, calculer le plafond de surface / 2
    if surface >= perimetre:
        # Calcul du plafond sans utiliser math.ceil : -(-a // b)
        nb_dominos = -(-surface // 2)
        return nb_dominos
    else:
        # Sinon, il n'est possible de placer qu'un seul domino
        return 1

if __name__ == "__main__":
    # Lecture des dimensions de la grille en une ligne séparée par un espace
    h, w = map(int, input().split())
    # Affichage du résultat calculé par la fonction compute_dominoes
    print(compute_dominoes(h, w))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' compute' (ID: 23864)
  → Token d'amorce (pas de prédiction)

Token 2: '_dom' (ID: 90214)
  → Token d'amorce (pas de prédiction)

Token 3: 'ino' (ID: 2081)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4008937478065491
    2. '():' → logprob: -1.1508936882019043
    3. 'ain' → logprob: -4.650893688201904
    4. 'ains' → logprob: -7.025893688201904
    5. '()' → logprob: -7.150893688201904
    6. '(' → logprob: -7.650893688201904
    7. ' ():' → logprob: -7.775893688201904
    8. ':' → logprob: -8.775894165039062
    9. '_:' → logprob: -9.025894165039062
    10. '_string' → logprob: -9.025894165039062

Token 4: 'es' (ID: 268)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1309695690870285
    2. '(' → logprob: -2.630969524383545
    3. '_s' → logprob: -4.130969524383545
    4. '(_' → logprob: -4.130969524383545
    5. '```' → logprob: -4.880969524383545
    6. 's' → logprob: -6.130969524383545
    7. '_(' → logprob: -7.130969524383545
    8. ' _' → logprob: -7.880969524383545
    9. '_block' → logprob: -7.880969524383545
    10. '('_' → logprob: -8.130970001220703

Token 5: '(h' (ID: 8120)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28602758049964905
    2. '_' → logprob: -1.5360275506973267
    3. '():' → logprob: -4.036027431488037
    4. '```' → logprob: -5.161027431488037
    5. '_:' → logprob: -5.536027431488037
    6. '(_:' → logprob: -6.536027431488037
    7. '(_' → logprob: -6.786027431488037
    8. '(:' → logprob: -6.911027431488037
    9. ' (' → logprob: -8.036027908325195
    10. 's' → logprob: -8.036027908325195

Token 6: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21664631366729736
    2. 'e' → logprob: -2.091646194458008
    3. 'a' → logprob: -2.841646194458008
    4. ')' → logprob: -6.091646194458008
    5. 'i' → logprob: -6.341646194458008
    6. ',' → logprob: -6.341646194458008
    7. '_' → logprob: -6.466646194458008
    8. 's' → logprob: -6.591646194458008
    9. 'u' → logprob: -6.591646194458008
    10. '=' → logprob: -7.341646194458008

Token 7: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2539387345314026
    2. 'int' → logprob: -1.5039386749267578
    3. ':int' → logprob: -7.253938674926758
    4. ' ' → logprob: -7.753938674926758
    5. '=int' → logprob: -8.128938674926758
    6. '   ' → logprob: -9.003938674926758
    7. ')' → logprob: -9.628938674926758
    8. '[int' → logprob: -9.878938674926758
    9. '  ' → logprob: -10.128938674926758
    10. '(int' → logprob: -10.128938674926758

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.39972078800201416
    2. ')' → logprob: -1.1497207880020142
    3. '):' → logprob: -4.399720668792725
    4. ':' → logprob: -8.524721145629883
    5. ')->' → logprob: -9.899721145629883
    6. ' ,' → logprob: -10.399721145629883
    7. ',)' → logprob: -10.399721145629883
    8. '```' → logprob: -10.524721145629883
    9. '),' → logprob: -10.774721145629883
    10. ',
' → logprob: -11.024721145629883

Token 9: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.14341823756694794
    2. 'w' → logprob: -2.018418312072754
    3. ' n' → logprob: -9.143418312072754
    4. ' l' → logprob: -9.268418312072754
    5. ' s' → logprob: -9.518418312072754
    6. 'n' → logprob: -9.643418312072754
    7. ' t' → logprob: -10.143418312072754
    8. 's' → logprob: -10.143418312072754
    9. 'b' → logprob: -10.393418312072754
    10. ' b' → logprob: -10.393418312072754

Token 10: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2617984712123871
    2. '):' → logprob: -1.5117985010147095
    3. ',' → logprob: -5.26179838180542
    4. ')' → logprob: -5.51179838180542
    5. '```' → logprob: -8.136798858642578
    6. ':int' → logprob: -9.136798858642578
    7. '`:' → logprob: -10.511798858642578
    8. '):
' → logprob: -11.261798858642578
    9. ' :' → logprob: -11.261798858642578
    10. '<|end|>' → logprob: -11.386798858642578

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.2519679069519043
    2. 'int' → logprob: -1.5019679069519043
    3. ')' → logprob: -11.126968383789062
    4. ':int' → logprob: -11.376968383789062
    5. '=int' → logprob: -11.876968383789062
    6. '[int' → logprob: -13.751968383789062
    7. '(int' → logprob: -14.126968383789062
    8. ' ' → logprob: -14.126968383789062
    9. ' )' → logprob: -14.251968383789062
    10. '<int' → logprob: -14.376968383789062

Token 12: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13035094738006592
    2. '):' → logprob: -2.1303510665893555
    3. ',' → logprob: -6.3803510665893555
    4. ')->' → logprob: -7.6303510665893555
    5. ':' → logprob: -8.130351066589355
    6. '```' → logprob: -8.255351066589355
    7. '`)' → logprob: -8.505351066589355
    8. '<|end|>' → logprob: -9.130351066589355
    9. '):
' → logprob: -9.505351066589355
    10. '')' → logprob: -10.130351066589355

Token 13: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -5.0020742492051795e-05
    2. ':
' → logprob: -11.250049591064453
    3. '':' → logprob: -11.625049591064453
    4. ':return' → logprob: -11.875049591064453
    5. '```' → logprob: -12.125049591064453
    6. '`:' → logprob: -12.750049591064453
    7. '   ' → logprob: -13.250049591064453
    8. '):' → logprob: -13.375049591064453
    9. '():' → logprob: -13.375049591064453
    10. ',' → logprob: -13.625049591064453

Token 14: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.16101770102977753
    2. ' int' → logprob: -1.911017656326294
    3. 'List' → logprob: -7.911017894744873
    4. ' list' → logprob: -9.286017417907715
    5. 'list' → logprob: -9.411017417907715
    6. '[int' → logprob: -9.536017417907715
    7. ' List' → logprob: -9.911017417907715
    8. 'bool' → logprob: -10.286017417907715
    9. ' None' → logprob: -10.911017417907715
    10. 'None' → logprob: -11.036017417907715

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.464347173576243e-05
    2. ':
' → logprob: -11.37503433227539
    3. '```' → logprob: -11.50003433227539
    4. '   ' → logprob: -12.37503433227539
    5. '`:' → logprob: -12.87503433227539
    6. '':' → logprob: -13.00003433227539
    7. ':return' → logprob: -13.87503433227539
    8. '():' → logprob: -14.37503433227539
    9. '":' → logprob: -14.75003433227539
    10. ':**' → logprob: -14.87503433227539

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.038015320897102356
    2. ':' → logprob: -3.413015365600586
    3. '```' → logprob: -5.538015365600586
    4. '    
' → logprob: -9.038015365600586
    5. ':
' → logprob: -9.913015365600586
    6. '\n' → logprob: -10.288015365600586
    7. '   ' → logprob: -10.413015365600586
    8. '    ' → logprob: -10.413015365600586
    9. '\' → logprob: -10.538015365600586
    10. '       ' → logprob: -11.288015365600586

Token 17: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.13844488561153412
    2. ':' → logprob: -3.3884449005126953
    3. '```' → logprob: -3.3884449005126953
    4. 'i' → logprob: -4.013444900512695
    5. '`' → logprob: -4.513444900512695
    6. ' ' → logprob: -5.388444900512695
    7. 'd' → logprob: -5.513444900512695
    8. 'r' → logprob: -5.513444900512695
    9. 'if' → logprob: -5.763444900512695
    10. '       ' → logprob: -6.138444900512695

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5298036336898804
    2. '"""' → logprob: -1.7798036336898804
    3. 'Calculate' → logprob: -3.02980375289917
    4. ' """' → logprob: -3.15480375289917
    5. 'r' → logprob: -4.02980375289917
    6. ' Calculate' → logprob: -4.27980375289917
    7. '#' → logprob: -4.40480375289917
    8. '    ' → logprob: -4.65480375289917
    9. 'n' → logprob: -4.77980375289917
    10. 'i' → logprob: -4.77980375289917

Token 19: ' Cal' (ID: 4453)
  Prédit: '"""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"""' → logprob: -0.7448614835739136
    2. 'Calculate' → logprob: -0.8698614835739136
    3. '   ' → logprob: -3.869861602783203
    4. '#' → logprob: -4.244861602783203
    5. ' """' → logprob: -4.369861602783203
    6. 'Calcul' → logprob: -4.619861602783203
    7. 'Count' → logprob: -4.869861602783203
    8. '```' → logprob: -4.869861602783203
    9. ''''' → logprob: -5.244861602783203
    10. 'Given' → logprob: -5.244861602783203

Token 20: 'cule' (ID: 45017)
  Prédit: 'culate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'culate' → logprob: -0.16349855065345764
    2. 'c' → logprob: -1.9134985208511353
    3. 'cul' → logprob: -6.163498401641846
    4. 'cula' → logprob: -7.163498401641846
    5. '```' → logprob: -9.413498878479004
    6. 'culated' → logprob: -9.663498878479004
    7. '   ' → logprob: -9.788498878479004
    8. 'cu' → logprob: -9.788498878479004
    9. 'cular' → logprob: -10.038498878479004
    10. 'culator' → logprob: -10.413498878479004

Token 21: ' le' (ID: 505)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.019217712804675102
    2. 's' → logprob: -4.519217491149902
    3. 'te' → logprob: -5.519217491149902
    4. 'z' → logprob: -6.019217491149902
    5. '```' → logprob: -7.769217491149902
    6. 'ate' → logprob: -7.894217491149902
    7. 'tes' → logprob: -8.644217491149902
    8. ' the' → logprob: -9.269217491149902
    9. ' la' → logprob: -9.394217491149902
    10. ' r' → logprob: -9.394217491149902

Token 22: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.014207468368113041
    2. 'nombre' → logprob: -5.014207363128662
    3. '   ' → logprob: -5.889207363128662
    4. ' ' → logprob: -6.014207363128662
    5. 's' → logprob: -7.139207363128662
    6. ' nombres' → logprob: -7.639207363128662
    7. '  ' → logprob: -8.13920783996582
    8. ' nomb' → logprob: -8.76420783996582
    9. 'n' → logprob: -9.01420783996582
    10. ' nb' → logprob: -9.38920783996582

Token 23: ' maximal' (ID: 65414)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.2377682775259018
    2. ' ' → logprob: -1.737768292427063
    3. '  ' → logprob: -3.9877681732177734
    4. ' d' → logprob: -4.987768173217773
    5. '   ' → logprob: -5.362768173217773
    6. '    ' → logprob: -6.237768173217773
    7. ' des' → logprob: -7.112768173217773
    8. 'de' → logprob: -7.612768173217773
    9. 's' → logprob: -7.987768173217773
    10. '```' → logprob: -8.237768173217773

Token 24: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13808505237102509
    2. ' de' → logprob: -3.013085126876831
    3. ' d' → logprob: -3.013085126876831
    4. '  ' → logprob: -4.013084888458252
    5. 'de' → logprob: -6.013084888458252
    6. '```' → logprob: -6.138084888458252
    7. '`' → logprob: -6.763084888458252
    8. '_' → logprob: -6.763084888458252
    9. '   ' → logprob: -6.763084888458252
    10. ' des' → logprob: -6.888084888458252

Token 25: ' dom' (ID: 3878)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04813804849982262
    2. ' domino' → logprob: -3.54813814163208
    3. 'dom' → logprob: -4.92313814163208
    4. ' dom' → logprob: -5.42313814163208
    5. ' espaces' → logprob: -6.79813814163208
    6. 'd' → logprob: -6.92313814163208
    7. '_' → logprob: -7.42313814163208
    8. ' ' → logprob: -8.048137664794922
    9. ' domaines' → logprob: -8.048137664794922
    10. ' d' → logprob: -8.235637664794922

Token 26: 'inos' (ID: 8200)
  Prédit: 'ino'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -0.0033187614753842354
    2. 'ино' → logprob: -6.753318786621094
    3. 'inos' → logprob: -6.753318786621094
    4. '```' → logprob: -7.753318786621094
    5. '##' → logprob: -8.503318786621094
    6. 'i' → logprob: -9.503318786621094
    7. '   ' → logprob: -9.753318786621094
    8. '**' → logprob: -10.628318786621094
    9. '_' → logprob: -10.753318786621094
    10. 'in' → logprob: -11.128318786621094

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11657755821943283
    2. '   ' → logprob: -3.491577625274658
    3. ' that' → logprob: -4.116577625274658
    4. ' pouvant' → logprob: -4.491577625274658
    5. ' a' → logprob: -4.616577625274658
    6. '```' → logprob: -4.991577625274658
    7. 's' → logprob: -5.491577625274658
    8. '  ' → logprob: -5.741577625274658
    9. ' à' → logprob: -6.116577625274658
    10. ''' → logprob: -6.116577625274658

Token 28: '1' (ID: 16)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.22341762483119965
    2. ' pouvant' → logprob: -2.5984175205230713
    3. ' that' → logprob: -3.3484175205230713
    4. ' que' → logprob: -4.47341775894165
    5. '```' → logprob: -4.72341775894165
    6. ' can' → logprob: -4.84841775894165
    7. '   ' → logprob: -4.84841775894165
    8. ' qui' → logprob: -4.97341775894165
    9. ' a' → logprob: -5.09841775894165
    10. ' d' → logprob: -5.34841775894165

Token 29: 'x' (ID: 87)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2955220937728882
    2. 'sur' → logprob: -2.2955222129821777
    3. ' /' → logprob: -2.6705222129821777
    4. ' placé' → logprob: -2.6705222129821777
    5. '/' → logprob: -2.7955222129821777
    6. ' que' → logprob: -3.0455222129821777
    7. ' couvr' → logprob: -3.0455222129821777
    8. ' pouvant' → logprob: -3.2955222129821777
    9. ' sur' → logprob: -3.5455222129821777
    10. ' placed' → logprob: -3.7955222129821777

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.726595241460018e-05
    2. ' ' → logprob: -10.62503719329834
    3. '```' → logprob: -12.12503719329834
    4. '1' → logprob: -12.25003719329834
    5. '   ' → logprob: -13.50003719329834
    6. '3' → logprob: -15.43753719329834
    7. '  ' → logprob: -15.56253719329834
    8. '²' → logprob: -15.81253719329834
    9. '-' → logprob: -16.000038146972656
    10. '₂' → logprob: -16.250038146972656

Token 31: ' pouvant' (ID: 104840)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.17474156618118286
    2. ' that' → logprob: -2.299741506576538
    3. ' pouvant' → logprob: -3.299741506576538
    4. ' qui' → logprob: -5.299741744995117
    5. ' qu' → logprob: -5.674741744995117
    6. '   ' → logprob: -5.799741744995117
    7. ' que' → logprob: -6.299741744995117
    8. ' can' → logprob: -6.924741744995117
    9. ')' → logprob: -7.049741744995117
    10. ' ,' → logprob: -7.174741744995117

Token 32: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.19836212694644928
    2. ' be' → logprob: -2.698362112045288
    3. ' ' → logprob: -3.323362112045288
    4. 'être' → logprob: -3.448362112045288
    5. ' etre' → logprob: -4.198362350463867
    6. ' couvrir' → logprob: -4.323362350463867
    7. '<|end|>' → logprob: -5.823362350463867
    8. ' e' → logprob: -5.948362350463867
    9. 'e' → logprob: -5.948362350463867
    10. ' ê' → logprob: -5.948362350463867

Token 33: ' plac' (ID: 7097)
  Prédit: ' plac'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' plac' → logprob: -0.6258595585823059
    2. 'plac' → logprob: -0.8758595585823059
    3. 'pos' → logprob: -3.250859498977661
    4. ' placé' → logprob: -5.12585973739624
    5. ' pos' → logprob: -6.62585973739624
    6. 'position' → logprob: -7.25085973739624
    7. 'posé' → logprob: -7.87585973739624
    8. 'placer' → logprob: -8.125859260559082
    9. 'pla' → logprob: -8.500859260559082
    10. 'place' → logprob: -8.625859260559082

Token 34: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.25250548124313354
    2. 'é' → logprob: -1.5025055408477783
    3. 'er' → logprob: -7.627505302429199
    4. 'e' → logprob: -10.2525053024292
    5. '&eacute' → logprob: -11.1275053024292
    6. 'ées' → logprob: -11.2525053024292
    7. 'es' → logprob: -11.5025053024292
    8. 'ée' → logprob: -12.5025053024292
    9. '```' → logprob: -13.7525053024292
    10. ' ' → logprob: -13.8775053024292

Token 35: ' sur' (ID: 1512)
  Prédit: ' sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sur' → logprob: -0.2746349275112152
    2. 'sur' → logprob: -2.149634838104248
    3. ' ' → logprob: -2.274634838104248
    4. ',' → logprob: -5.524634838104248
    5. '.' → logprob: -5.774634838104248
    6. ' ' → logprob: -6.024634838104248
    7. '```' → logprob: -6.274634838104248
    8. ' dans' → logprob: -6.399634838104248
    9. ' en' → logprob: -6.774634838104248
    10. ' ,' → logprob: -6.899634838104248

Token 36: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.8897531032562256
    2. ' un' → logprob: -1.5147531032562256
    3. ' la' → logprob: -1.7647531032562256
    4. ' ' → logprob: -1.8897531032562256
    5. 'une' → logprob: -3.8897531032562256
    6. ' le' → logprob: -4.764753341674805
    7. ' ' → logprob: -5.264753341674805
    8. 'l' → logprob: -6.264753341674805
    9. 'le' → logprob: -6.264753341674805
    10. 'un' → logprob: -6.389753341674805

Token 37: ' grille' (ID: 99153)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.45548924803733826
    2. ' surface' → logprob: -1.9554892778396606
    3. '   ' → logprob: -2.705489158630371
    4. 'surface' → logprob: -3.205489158630371
    5. ' grille' → logprob: -3.580489158630371
    6. 'gr' → logprob: -3.580489158630371
    7. ' case' → logprob: -4.205489158630371
    8. ' ' → logprob: -4.455489158630371
    9. 'case' → logprob: -5.205489158630371
    10. 'e' → logprob: -6.080489158630371

Token 38: ' h' (ID: 312)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.39427101612091064
    2. '   ' → logprob: -1.5192710161209106
    3. '\' → logprob: -3.519270896911621
    4. ' ' → logprob: -3.894270896911621
    5. ' d' → logprob: -4.269270896911621
    6. '```' → logprob: -4.269270896911621
    7. '\n' → logprob: -4.769270896911621
    8. 'de' → logprob: -5.269270896911621
    9. ' (' → logprob: -6.144270896911621
    10. ',' → logprob: -6.269270896911621

Token 39: ' x' (ID: 1215)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8861372470855713
    2. ' ' → logprob: -1.5111372470855713
    3. ' *' → logprob: -1.8861372470855713
    4. ' x' → logprob: -2.1361372470855713
    5. 'x' → logprob: -2.7611372470855713
    6. ',' → logprob: -4.261137008666992
    7. ')' → logprob: -4.636137008666992
    8. '-' → logprob: -6.136137008666992
    9. 'e' → logprob: -6.136137008666992
    10. '   ' → logprob: -6.386137008666992

Token 40: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.42918163537979126
    2. ' w' → logprob: -1.0541815757751465
    3. ' ' → logprob: -8.054182052612305
    4. '2' → logprob: -9.804182052612305
    5. ' ' → logprob: -10.054182052612305
    6. '```' → logprob: -10.679182052612305
    7. '   ' → logprob: -11.179182052612305
    8. '<w' → logprob: -11.804182052612305
    9. '  ' → logprob: -12.054182052612305
    10. '1' → logprob: -13.679182052612305

Token 41: ',
' (ID: 412)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31499531865119934
    2. '.' → logprob: -2.314995288848877
    3. '\n' → logprob: -2.439995288848877
    4. '\' → logprob: -4.064995288848877
    5. '
' → logprob: -4.314995288848877
    6. ',' → logprob: -5.064995288848877
    7. '```' → logprob: -5.064995288848877
    8. ' 
' → logprob: -5.189995288848877
    9. '"""' → logprob: -5.189995288848877
    10. '"' → logprob: -5.314995288848877

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19503407180309296
    2. ' en' → logprob: -2.1950340270996094
    3. ' sans' → logprob: -3.5700340270996094
    4. '.' → logprob: -4.695034027099609
    5. '```' → logprob: -5.445034027099609
    6. '    ' → logprob: -5.695034027099609
    7. '\n' → logprob: -6.195034027099609
    8. ' sur' → logprob: -6.320034027099609
    9. ' et' → logprob: -6.445034027099609
    10. ' tout' → logprob: -6.570034027099609

Token 43: ' selon' (ID: 27571)
  Prédit: ' en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.221066415309906
    2. ' sans' → logprob: -2.346066474914551
    3. ' compte' → logprob: -3.721066474914551
    4. 'sans' → logprob: -4.096066474914551
    5. 'en' → logprob: -4.346066474914551
    6. ' plac' → logprob: -4.596066474914551
    7. '   ' → logprob: -4.596066474914551
    8. ' tout' → logprob: -5.721066474914551
    9. '\n' → logprob: -5.846066474914551
    10. 's' → logprob: -6.221066474914551

Token 44: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.22843728959560394
    2. ' le' → logprob: -1.9784373044967651
    3. ' les' → logprob: -3.1034371852874756
    4. ' l' → logprob: -4.728437423706055
    5. '   ' → logprob: -5.978437423706055
    6. 'l' → logprob: -6.228437423706055
    7. 'le' → logprob: -6.728437423706055
    8. ' une' → logprob: -6.853437423706055
    9. 'les' → logprob: -7.103437423706055
    10. 'la' → logprob: -7.228437423706055

Token 45: ' règles' (ID: 67042)
  Prédit: ' règles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' règles' → logprob: -0.626771867275238
    2. ' cases' → logprob: -1.8767719268798828
    3. 'r' → logprob: -2.126771926879883
    4. 'cases' → logprob: -2.876771926879883
    5. ' espaces' → logprob: -4.001771926879883
    6. ' lignes' → logprob: -4.126771926879883
    7. '   ' → logprob: -4.376771926879883
    8. ' dimensions' → logprob: -4.376771926879883
    9. ' contraintes' → logprob: -4.501771926879883
    10. ' possibilités' → logprob: -5.126771926879883

Token 46: ' suivantes' (ID: 106173)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.8574878573417664
    2. ' d' → logprob: -1.6074879169464111
    3. ' du' → logprob: -1.9824879169464111
    4. '```' → logprob: -2.232487916946411
    5. '   ' → logprob: -3.232487916946411
    6. '.' → logprob: -3.982487916946411
    7. ' suivantes' → logprob: -4.482487678527832
    8. ' normales' → logprob: -4.857487678527832
    9. '"""' → logprob: -4.982487678527832
    10. ' sur' → logprob: -5.107487678527832

Token 47: ' :
' (ID: 10039)
  Prédit: ' :'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.4256118834018707
    2. ':' → logprob: -1.1756118535995483
    3. '\n' → logprob: -3.800611972808838
    4. '```' → logprob: -5.300611972808838
    5. '   ' → logprob: -5.425611972808838
    6. '
' → logprob: -6.425611972808838
    7. '.' → logprob: -7.050611972808838
    8. ',' → logprob: -7.050611972808838
    9. ' :
' → logprob: -7.175611972808838
    10. '\' → logprob: -7.550611972808838

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04475947469472885
    2. '```' → logprob: -3.294759511947632
    3. '\n' → logprob: -6.044759273529053
    4. '    ' → logprob: -6.419759273529053
    5. '"""' → logprob: -6.919759273529053
    6. '\' → logprob: -8.169759750366211
    7. ' ' → logprob: -8.419759750366211
    8. '``' → logprob: -8.544759750366211
    9. '`' → logprob: -8.669759750366211
    10. '"""
' → logprob: -8.669759750366211

Token 49: ' -' (ID: 533)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8334774971008301
    2. '   ' → logprob: -1.83347749710083
    3. ' """' → logprob: -2.20847749710083
    4. '"""' → logprob: -2.58347749710083
    5. ' ' → logprob: -3.08347749710083
    6. '```' → logprob: -3.20847749710083
    7. ' """
' → logprob: -3.83347749710083
    8. '    ' → logprob: -4.08347749710083
    9. ')' → logprob: -4.08347749710083
    10. '\' → logprob: -4.08347749710083

Token 50: ' Si' (ID: 7832)
  Prédit: ' Chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Chaque' → logprob: -0.6489099264144897
    2. ' chaque' → logprob: -1.0239099264144897
    3. ' La' → logprob: -3.3989100456237793
    4. ' Le' → logprob: -3.6489100456237793
    5. 'Chaque' → logprob: -3.6489100456237793
    6. ' la' → logprob: -4.398910045623779
    7. ' On' → logprob: -5.273910045623779
    8. ' Les' → logprob: -5.523910045623779
    9. ' on' → logprob: -5.898910045623779
    10. ' Each' → logprob: -6.023910045623779

Token 51: ' la' (ID: 557)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.05510026589035988
    2. 'h' → logprob: -3.805100202560425
    3. ' la' → logprob: -4.555100440979004
    4. ' l' → logprob: -4.680100440979004
    5. ' ' → logprob: -5.305100440979004
    6. ' (' → logprob: -6.305100440979004
    7. ' le' → logprob: -6.430100440979004
    8. ' on' → logprob: -7.305100440979004
    9. ' une' → logprob: -7.930100440979004
    10. ' w' → logprob: -8.055100440979004

Token 52: ' surface' (ID: 9753)
  Prédit: ' hauteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -1.4553401470184326
    2. ' largeur' → logprob: -1.5803401470184326
    3. ' surface' → logprob: -1.8303401470184326
    4. 'gr' → logprob: -2.5803401470184326
    5. 'ha' → logprob: -2.5803401470184326
    6. ' grille' → logprob: -2.9553401470184326
    7. ' superficie' → logprob: -3.3303401470184326
    8. 'surface' → logprob: -3.5803401470184326
    9. ' case' → logprob: -3.8303401470184326
    10. 'h' → logprob: -4.205340385437012

Token 53: ' totale' (ID: 52898)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.032561399042606354
    2. ' est' → logprob: -4.407561302185059
    3. ' disponible' → logprob: -5.282561302185059
    4. ' de' → logprob: -5.407561302185059
    5. '   ' → logprob: -5.782561302185059
    6. ' totale' → logprob: -6.407561302185059
    7. '  ' → logprob: -7.157561302185059
    8. 'e' → logprob: -7.532561302185059
    9. 'de' → logprob: -7.657561302185059
    10. ' <=' → logprob: -8.032561302185059

Token 54: ' (' (ID: 350)
  Prédit: ' est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.03297475352883339
    2. ' ' → logprob: -3.6579747200012207
    3. 'est' → logprob: -6.032974720001221
    4. ' de' → logprob: -6.407974720001221
    5. ' is' → logprob: -6.532974720001221
    6. ' divisible' → logprob: -7.532974720001221
    7. ' du' → logprob: -8.282975196838379
    8. 'de' → logprob: -9.157975196838379
    9. 'du' → logprob: -10.032975196838379
    10. ' disponible' → logprob: -10.157975196838379

Token 55: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.43725740909576416
    2. ' h' → logprob: -1.0622574090957642
    3. '   ' → logprob: -5.437257289886475
    4. ')' → logprob: -6.062257289886475
    5. '(h' → logprob: -7.687257289886475
    6. ' (' → logprob: -7.937257289886475
    7. ' ' → logprob: -8.187257766723633
    8. ' )' → logprob: -8.937257766723633
    9. 'ha' → logprob: -9.187257766723633
    10. ' la' → logprob: -9.187257766723633

Token 56: '*w' (ID: 147727)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.014365170150995255
    2. '*' → logprob: -4.264365196228027
    3. '*w' → logprob: -9.389365196228027
    4. ' ' → logprob: -9.639365196228027
    5. ')' → logprob: -11.264365196228027
    6. ' ' → logprob: -11.514365196228027
    7. '%' → logprob: -12.264365196228027
    8. ' *
' → logprob: -12.639365196228027
    9. '-' → logprob: -12.889365196228027
    10. '   ' → logprob: -12.889365196228027

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0794399157166481
    2. ' )' → logprob: -2.579439878463745
    3. ')%' → logprob: -8.829440116882324
    4. ' ' → logprob: -8.954440116882324
    5. ' est' → logprob: -9.079440116882324
    6. '%' → logprob: -9.579440116882324
    7. '   ' → logprob: -10.079440116882324
    8. ' %' → logprob: -11.204440116882324
    9. '%)' → logprob: -11.829440116882324
    10. '  ' → logprob: -12.579440116882324

Token 58: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.012174894101917744
    2. 'est' → logprob: -4.8871750831604
    3. ' is' → logprob: -5.6371750831604
    4. ' ' → logprob: -7.1371750831604
    5. '%' → logprob: -9.637174606323242
    6. ' divisible' → logprob: -10.637174606323242
    7. ' %' → logprob: -10.887174606323242
    8. ')' → logprob: -11.012174606323242
    9. ' n' → logprob: -11.637174606323242
    10. ''est' → logprob: -12.012174606323242

Token 59: ' supérieure' (ID: 106336)
  Prédit: ' imp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' imp' → logprob: -0.7232668995857239
    2. 'imp' → logprob: -1.348266839981079
    3. 'im' → logprob: -2.098266839981079
    4. 'pair' → logprob: -3.348266839981079
    5. '   ' → logprob: -3.848266839981079
    6. 'pa' → logprob: -4.098267078399658
    7. ' impair' → logprob: -4.473267078399658
    8. ' paire' → logprob: -4.473267078399658
    9. 'strict' → logprob: -4.598267078399658
    10. ' ' → logprob: -4.848267078399658

Token 60: ' ou' (ID: 2031)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7777767181396484
    2. ' ou' → logprob: -1.6527767181396484
    3. 'à' → logprob: -1.7777767181396484
    4. 'ou' → logprob: -2.7777767181396484
    5. ' ' → logprob: -3.2777767181396484
    6. '=' → logprob: -3.9027767181396484
    7. '```' → logprob: -3.9027767181396484
    8. '  ' → logprob: -4.652776718139648
    9. '   ' → logprob: -4.902776718139648
    10. 'au' → logprob: -5.027776718139648

Token 61: ' ég' (ID: 33150)
  Prédit: ' ég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ég' → logprob: -0.15219970047473907
    2. 'ég' → logprob: -2.6521997451782227
    3. '=' → logprob: -3.2771997451782227
    4. 'strict' → logprob: -4.777199745178223
    5. 'égal' → logprob: -5.402199745178223
    6. ' à' → logprob: -5.402199745178223
    7. 'à' → logprob: -5.527199745178223
    8. ' ' → logprob: -6.027199745178223
    9. ' strict' → logprob: -6.277199745178223
    10. 'ou' → logprob: -6.902199745178223

Token 62: 'ale' (ID: 1167)
  Prédit: 'ale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ale' → logprob: -0.001707659917883575
    2. 'al' → logprob: -6.376707553863525
    3. '```' → logprob: -13.126708030700684
    4. 'a' → logprob: -13.251708030700684
    5. 'але' → logprob: -14.876708030700684
    6. 'alee' → logprob: -15.376708030700684
    7. '</' → logprob: -16.126707077026367
    8. 'le' → logprob: -16.126707077026367
    9. 'alable' → logprob: -16.251707077026367
    10. 'alité' → logprob: -16.376707077026367

Token 63: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.03978536278009415
    2. 'à' → logprob: -3.414785385131836
    3. ' ' → logprob: -6.039785385131836
    4. '   ' → logprob: -6.289785385131836
    5. '  ' → logprob: -7.414785385131836
    6. '```' → logprob: -7.414785385131836
    7. ''à' → logprob: -8.289785385131836
    8. ' ' → logprob: -9.164785385131836
    9. ' au' → logprob: -9.414785385131836
    10. 'a' → logprob: -9.414785385131836

Token 64: ' la' (ID: 557)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7625828981399536
    2. ' ' → logprob: -0.7625828981399536
    3. '1' → logprob: -4.262582778930664
    4. '12' → logprob: -4.637582778930664
    5. '18' → logprob: -4.762582778930664
    6. '4' → logprob: -5.137582778930664
    7. '8' → logprob: -5.137582778930664
    8. '24' → logprob: -5.387582778930664
    9. '48' → logprob: -6.012582778930664
    10. ' h' → logprob: -6.137582778930664

Token 65: ' somme' (ID: 64484)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1706005334854126
    2. ' ' → logprob: -2.045600414276123
    3. '1' → logprob: -4.420600414276123
    4. '4' → logprob: -5.420600414276123
    5. '0' → logprob: -5.670600414276123
    6. ' h' → logprob: -5.920600414276123
    7. '3' → logprob: -7.045600414276123
    8. 'h' → logprob: -7.045600414276123
    9. '9' → logprob: -7.420600414276123
    10. 'de' → logprob: -8.045600891113281

Token 66: ' (' (ID: 350)
  Prédit: ' des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.0119782080873847
    2. 'des' → logprob: -5.5119781494140625
    3. ' de' → logprob: -5.6369781494140625
    4. ' h' → logprob: -5.8869781494140625
    5. '   ' → logprob: -8.011978149414062
    6. 'de' → logprob: -8.136978149414062
    7. ' ' → logprob: -8.761978149414062
    8. ' totale' → logprob: -9.011978149414062
    9. '_des' → logprob: -9.511978149414062
    10. ' of' → logprob: -9.636978149414062

Token 67: 'h' (ID: 71)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.5477047562599182
    2. 'h' → logprob: -1.0477046966552734
    3. ' des' → logprob: -3.1727046966552734
    4. ' (' → logprob: -4.547704696655273
    5. ' de' → logprob: -4.922704696655273
    6. '(h' → logprob: -6.172704696655273
    7. 'des' → logprob: -6.172704696655273
    8. '   ' → logprob: -6.422704696655273
    9. 'de' → logprob: -6.422704696655273
    10. ' ' → logprob: -6.547704696655273

Token 68: '+w' (ID: 155687)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4742138981819153
    2. '*' → logprob: -2.0992138385772705
    3. '*w' → logprob: -2.4742138385772705
    4. ' *' → logprob: -2.5992138385772705
    5. '+' → logprob: -2.5992138385772705
    6. '+w' → logprob: -4.09921407699585
    7. ' //' → logprob: -6.97421407699585
    8. '//' → logprob: -7.09921407699585
    9. ' -' → logprob: -7.22421407699585
    10. '   ' → logprob: -7.22421407699585

Token 69: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6717427968978882
    2. ')' → logprob: -0.9217427968978882
    3. '-' → logprob: -2.6717429161071777
    4. ' -' → logprob: -4.296742916107178
    5. '+' → logprob: -5.546742916107178
    6. ' ),' → logprob: -6.421742916107178
    7. ' )' → logprob: -7.046742916107178
    8. ' +' → logprob: -7.296742916107178
    9. ' ' → logprob: -8.04674243927002
    10. '   ' → logprob: -8.29674243927002

Token 70: ' alors' (ID: 17971)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0802609771490097
    2. '    ' → logprob: -3.955260992050171
    3. ' ' → logprob: -4.205260753631592
    4. ' ' → logprob: -4.580260753631592
    5. ' on' → logprob: -4.580260753631592
    6. ' la' → logprob: -5.205260753631592
    7. ''' → logprob: -6.330260753631592
    8. ' return' → logprob: -6.455260753631592
    9. ' le' → logprob: -6.455260753631592
    10. ',' → logprob: -6.580260753631592

Token 71: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5842945575714111
    2. ' ' → logprob: -1.9592945575714111
    3. '    ' → logprob: -2.459294557571411
    4. ' return' → logprob: -2.584294557571411
    5. ' ' → logprob: -3.084294557571411
    6. 'return' → logprob: -3.959294557571411
    7. ' retourner' → logprob: -3.959294557571411
    8. ' on' → logprob: -4.459294319152832
    9. '  ' → logprob: -4.834294319152832
    10. '   ' → logprob: -5.209294319152832

Token 72: ' retourne' (ID: 178818)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.511273205280304
    2. ' return' → logprob: -1.8862731456756592
    3. ' retourne' → logprob: -2.386273145675659
    4. 'return' → logprob: -2.511273145675659
    5. ' place' → logprob: -3.636273145675659
    6. '    ' → logprob: -4.511273384094238
    7. 'ret' → logprob: -4.761273384094238
    8. 'place' → logprob: -5.261273384094238
    9. ' peut' → logprob: -5.886273384094238
    10. ' ' → logprob: -5.886273384094238

Token 73: '
' (ID: 198)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.2641282379627228
    2. ' h' → logprob: -2.1391282081604004
    3. '(h' → logprob: -2.2641282081604004
    4. 'h' → logprob: -5.0141282081604
    5. ' ' → logprob: -6.2641282081604
    6. '(' → logprob: -7.2641282081604
    7. '0' → logprob: -8.264128684997559
    8. '   ' → logprob: -8.764128684997559
    9. ' la' → logprob: -8.889128684997559
    10. ' max' → logprob: -9.139128684997559

Token 74: '     ' (ID: 530)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0187265872955322
    2. ' (' → logprob: -1.0187265872955322
    3. ' h' → logprob: -2.2687265872955322
    4. '    ' → logprob: -3.2687265872955322
    5. '(h' → logprob: -3.3937265872955322
    6. 'h' → logprob: -3.6437265872955322
    7. ' ' → logprob: -3.6437265872955322
    8. '0' → logprob: -4.643726348876953
    9. '1' → logprob: -4.893726348876953
    10. ' la' → logprob: -5.143726348876953

Token 75: ' le' (ID: 505)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3379896879196167
    2. '(h' → logprob: -1.8379896879196167
    3. ' h' → logprob: -2.4629898071289062
    4. 'h' → logprob: -3.3379898071289062
    5. ' ' → logprob: -6.087989807128906
    6. '   ' → logprob: -6.212989807128906
    7. '0' → logprob: -6.837989807128906
    8. '(' → logprob: -7.462989807128906
    9. ' max' → logprob: -8.212989807128906
    10. 'max' → logprob: -8.587989807128906

Token 76: ' plafond' (ID: 114829)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.4120228588581085
    2. 'nombre' → logprob: -2.162022829055786
    3. ' maximum' → logprob: -2.912022829055786
    4. ' surface' → logprob: -3.412022829055786
    5. 'surface' → logprob: -3.787022829055786
    6. ' produit' → logprob: -3.912022829055786
    7. ' quotient' → logprob: -4.162023067474365
    8. 'maximum' → logprob: -4.412023067474365
    9. ' résultat' → logprob: -4.537023067474365
    10. ' entier' → logprob: -4.662023067474365

Token 77: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11197543889284134
    2. '(h' → logprob: -2.4869754314422607
    3. '((' → logprob: -3.8619754314422607
    4. ' (' → logprob: -6.86197566986084
    5. ' ' → logprob: -8.98697566986084
    6. 's' → logprob: -9.48697566986084
    7. '(d' → logprob: -9.61197566986084
    8. '(n' → logprob: -10.11197566986084
    9. ')' → logprob: -10.23697566986084
    10. ',' → logprob: -10.36197566986084

Token 78: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6332260370254517
    2. '(h' → logprob: -0.7582260370254517
    3. ' ' → logprob: -7.758225917816162
    4. ' la' → logprob: -9.63322639465332
    5. '(w' → logprob: -10.38322639465332
    6. ' h' → logprob: -10.75822639465332
    7. '((' → logprob: -11.38322639465332
    8. ' ((' → logprob: -11.38322639465332
    9. '(l' → logprob: -11.63322639465332
    10. 'h' → logprob: -11.75822639465332

Token 79: 'h' (ID: 71)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.5654670000076294
    2. ' (' → logprob: -0.9404670000076294
    3. 'h' → logprob: -3.56546688079834
    4. ' h' → logprob: -4.44046688079834
    5. ' ' → logprob: -7.81546688079834
    6. ')' → logprob: -8.06546688079834
    7. '   ' → logprob: -8.44046688079834
    8. '(' → logprob: -9.06546688079834
    9. '  ' → logprob: -10.19046688079834
    10. '(hw' → logprob: -10.56546688079834

Token 80: '*w' (ID: 147727)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.621534526348114
    2. ' *' → logprob: -0.871534526348114
    3. '*w' → logprob: -3.121534585952759
    4. '**' → logprob: -9.49653434753418
    5. ' ' → logprob: -9.62153434753418
    6. '*h' → logprob: -9.74653434753418
    7. '*)' → logprob: -9.99653434753418
    8. ' ' → logprob: -10.12153434753418
    9. ')' → logprob: -10.74653434753418
    10. '   ' → logprob: -10.74653434753418

Token 81: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.3290255665779114
    2. '/' → logprob: -1.9540255069732666
    3. ')' → logprob: -2.3290255069732666
    4. ' ' → logprob: -3.8290255069732666
    5. ' )' → logprob: -4.204025745391846
    6. '   ' → logprob: -6.079025745391846
    7. '/(' → logprob: -7.829025745391846
    8. ')/(' → logprob: -8.204025268554688
    9. '/h' → logprob: -8.454025268554688
    10. ' (' → logprob: -8.579025268554688

Token 82: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.14270833134651184
    2. ' ' → logprob: -2.0177083015441895
    3. ' ' → logprob: -11.142708778381348
    4. '```' → logprob: -12.142708778381348
    5. '  ' → logprob: -12.955208778381348
    6. '   ' → logprob: -13.017708778381348
    7. '1' → logprob: -13.205208778381348
    8. ')' → logprob: -14.017708778381348
    9. '     ' → logprob: -14.080208778381348
    10. '  
' → logprob: -14.330208778381348

Token 83: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.021592887118458748
    2. ' ' → logprob: -4.14659309387207
    3. '(h' → logprob: -5.64659309387207
    4. ' (' → logprob: -7.02159309387207
    5. '1' → logprob: -7.77159309387207
    6. '(' → logprob: -7.77159309387207
    7. '(w' → logprob: -8.39659309387207
    8. '   ' → logprob: -12.14659309387207
    9. 'h' → logprob: -12.39659309387207
    10. ')' → logprob: -12.64659309387207

Token 84: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032879042555578053
    2. ' )' → logprob: -9.25032901763916
    3. '*' → logprob: -9.37532901763916
    4. '):' → logprob: -9.62532901763916
    5. ')
' → logprob: -10.25032901763916
    6. '**' → logprob: -11.50032901763916
    7. ' ' → logprob: -11.62532901763916
    8. '   ' → logprob: -12.25032901763916
    9. ')**' → logprob: -12.25032901763916
    10. '}' → logprob: -13.00032901763916

Token 85: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5709571838378906
    2. '   ' → logprob: -1.1959571838378906
    3. '\n' → logprob: -2.3209571838378906
    4. '' → logprob: -4.945957183837891
    5. '\' → logprob: -4.945957183837891
    6. ' 
' → logprob: -5.820957183837891
    7. '```' → logprob: -5.820957183837891
    8. ' ' → logprob: -5.945957183837891
    9. '    
' → logprob: -6.070957183837891
    10. ':' → logprob: -6.445957183837891

Token 86: 'nombre' (ID: 28576)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16591905057430267
    2. ' )' → logprob: -2.290919065475464
    3. '   ' → logprob: -3.165919065475464
    4. '):' → logprob: -5.290918827056885
    5. ' ' → logprob: -5.915918827056885
    6. ' ):' → logprob: -7.165918827056885
    7. '*' → logprob: -8.415919303894043
    8. '    ' → logprob: -8.665919303894043
    9. '  ' → logprob: -8.915919303894043
    10. ':' → logprob: -9.915919303894043

Token 87: ' maximal' (ID: 65414)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.11723233014345169
    2. ' de' → logprob: -3.117232322692871
    3. ' ' → logprob: -3.742232322692871
    4. ')' → logprob: -3.742232322692871
    5. ' //' → logprob: -5.742232322692871
    6. ' )' → logprob: -5.867232322692871
    7. '   ' → logprob: -6.117232322692871
    8. ' d' → logprob: -6.367232322692871
    9. '_max' → logprob: -6.867232322692871
    10. '  ' → logprob: -6.992232322692871

Token 88: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7856582999229431
    2. ')' → logprob: -0.9106582999229431
    3. ' ' → logprob: -2.910658359527588
    4. '_' → logprob: -3.160658359527588
    5. ' )' → logprob: -4.160658359527588
    6. ' d' → logprob: -4.285658359527588
    7. '   ' → logprob: -4.910658359527588
    8. ' des' → logprob: -6.410658359527588
    9. 'de' → logprob: -6.410658359527588
    10. '  ' → logprob: -6.660658359527588

Token 89: ' dom' (ID: 3878)
  Prédit: ' dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dom' → logprob: -1.0952469110488892
    2. 'dom' → logprob: -1.2202469110488892
    3. ' ' → logprob: -1.3452469110488892
    4. ' domino' → logprob: -2.8452467918395996
    5. 'd' → logprob: -3.8452467918395996
    6. ' d' → logprob: -4.4702467918396
    7. ')' → logprob: -5.4702467918396
    8. '_' → logprob: -6.0952467918396
    9. ' )' → logprob: -6.2202467918396
    10. '_dom' → logprob: -6.3452467918396

Token 90: 'inos' (ID: 8200)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.660297691822052
    2. 'es' → logprob: -1.4102976322174072
    3. 'e' → logprob: -2.5352976322174072
    4. 'o' → logprob: -2.5352976322174072
    5. 'ines' → logprob: -3.4102976322174072
    6. 'inos' → logprob: -4.285297870635986
    7. '```' → logprob: -4.285297870635986
    8. 'in' → logprob: -5.035297870635986
    9. 'ino' → logprob: -6.160297870635986
    10. '   ' → logprob: -6.722797870635986

Token 91: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22622032463550568
    2. ' )' → logprob: -2.2262203693389893
    3. ' ' → logprob: -3.4762203693389893
    4. 's' → logprob: -3.6012203693389893
    5. ').' → logprob: -4.85122013092041
    6. '.' → logprob: -4.85122013092041
    7. '),' → logprob: -6.10122013092041
    8. ' placé' → logprob: -6.10122013092041
    9. ' plac' → logprob: -6.47622013092041
    10. ',' → logprob: -6.47622013092041

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1950065940618515
    2. '"""' → logprob: -2.4450066089630127
    3. ')' → logprob: -3.4450066089630127
    4. '"' → logprob: -4.445006370544434
    5. '\n' → logprob: -4.695006370544434
    6. ' ' → logprob: -4.820006370544434
    7. '```' → logprob: -4.945006370544434
    8. ' """' → logprob: -5.445006370544434
    9. '
' → logprob: -5.695006370544434
    10. '*' → logprob: -5.820006370544434

Token 93: ' -' (ID: 533)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17913071811199188
    2. ' ' → logprob: -2.554130792617798
    3. ')' → logprob: -3.304130792617798
    4. ' 
' → logprob: -3.929130792617798
    5. '\n' → logprob: -4.679130554199219
    6. '"""' → logprob: -5.804130554199219
    7. '  
' → logprob: -6.304130554199219
    8. ' """
' → logprob: -6.304130554199219
    9. '
' → logprob: -6.429130554199219
    10. ' """' → logprob: -6.554130554199219

Token 94: ' Sinon' (ID: 154924)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4991215169429779
    2. ' ' → logprob: -1.7491215467453003
    3. ' else' → logprob: -2.3741214275360107
    4. ' ' → logprob: -2.4991214275360107
    5. ' sinon' → logprob: -4.12412166595459
    6. '  ' → logprob: -4.99912166595459
    7. ' Sinon' → logprob: -5.74912166595459
    8. 'else' → logprob: -6.12412166595459
    9. '    ' → logprob: -6.12412166595459
    10. ' elif' → logprob: -6.24912166595459

Token 95: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7067282795906067
    2. '    ' → logprob: -1.456728219985962
    3. ' return' → logprob: -2.831728219985962
    4. ':' → logprob: -3.081728219985962
    5. 'return' → logprob: -3.081728219985962
    6. ',' → logprob: -3.831728219985962
    7. ' on' → logprob: -3.831728219985962
    8. ' ' → logprob: -3.956728219985962
    9. '     ' → logprob: -4.331728458404541
    10. '     
' → logprob: -4.831728458404541

Token 96: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0255321264266968
    2. ' 
' → logprob: -1.2755321264266968
    3. '    ' → logprob: -1.5255321264266968
    4. '     
' → logprob: -2.6505322456359863
    5. '   ' → logprob: -4.275532245635986
    6. 'return' → logprob: -4.400532245635986
    7. ' return' → logprob: -4.400532245635986
    8. ' ' → logprob: -4.400532245635986
    9. '  ' → logprob: -4.900532245635986
    10. '    
' → logprob: -5.525532245635986

Token 97: ' retourne' (ID: 178818)
  Prédit: ' retourne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' retourne' → logprob: -0.04508187994360924
    2. ' return' → logprob: -4.045082092285156
    3. 'return' → logprob: -4.420082092285156
    4. 'ret' → logprob: -4.420082092285156
    5. ' ret' → logprob: -7.295082092285156
    6. ' ren' → logprob: -7.670082092285156
    7. ' retour' → logprob: -8.045082092285156
    8. '   ' → logprob: -8.045082092285156
    9. ' calc' → logprob: -9.170082092285156
    10. 'ren' → logprob: -9.670082092285156

Token 98: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7355433702468872
    2. ' (' → logprob: -1.6105433702468872
    3. '0' → logprob: -1.8605433702468872
    4. ' h' → logprob: -2.2355432510375977
    5. '1' → logprob: -4.110543251037598
    6. ' max' → logprob: -4.235543251037598
    7. ' ' → logprob: -4.610543251037598
    8. 'h' → logprob: -5.110543251037598
    9. '(h' → logprob: -5.485543251037598
    10. 'max' → logprob: -6.110543251037598

Token 99: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6595935225486755
    2. 'h' → logprob: -1.7845935821533203
    3. ' (' → logprob: -2.0345935821533203
    4. '(h' → logprob: -2.5345935821533203
    5. ' ' → logprob: -3.1595935821533203
    6. ' h' → logprob: -3.6595935821533203
    7. '1' → logprob: -3.9095935821533203
    8. 'max' → logprob: -5.03459358215332
    9. '   ' → logprob: -5.90959358215332
    10. ' max' → logprob: -5.90959358215332

Token 100: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013584024272859097
    2. '   ' → logprob: -5.013584136962891
    3. ':
' → logprob: -5.263584136962891
    4. '\n' → logprob: -6.763584136962891
    5. ':return' → logprob: -9.01358413696289
    6. ' ' → logprob: -9.38858413696289
    7. '\' → logprob: -9.51358413696289
    8. ' :' → logprob: -9.63858413696289
    9. '
' → logprob: -10.01358413696289
    10. ')' → logprob: -10.38858413696289

Token 101: 'au' (ID: 753)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18141785264015198
    2. ' )' → logprob: -1.8064178228378296
    3. ' )
' → logprob: -7.431417942047119
    4. ' ' → logprob: -7.556417942047119
    5. ')
' → logprob: -8.681417465209961
    6. '   ' → logprob: -9.181417465209961
    7. '"""' → logprob: -9.306417465209961
    8. ' ' → logprob: -9.931417465209961
    9. 'def' → logprob: -10.806417465209961
    10. '  ' → logprob: -11.056417465209961

Token 102: ' moins' (ID: 15924)
  Prédit: ' moins'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' moins' → logprob: -0.11859584599733353
    2. 'n' → logprob: -3.243595838546753
    3. 't' → logprob: -4.368596076965332
    4. 'c' → logprob: -4.368596076965332
    5. 'moins' → logprob: -4.618596076965332
    6. '   ' → logprob: -5.743596076965332
    7. 'v' → logprob: -6.118596076965332
    8. ' cas' → logprob: -6.118596076965332
    9. ' return' → logprob: -6.493596076965332
    10. '-' → logprob: -6.618596076965332

Token 103: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.04768327996134758
    2. ' une' → logprob: -3.6726832389831543
    3. 'un' → logprob: -5.172683238983154
    4. ')' → logprob: -5.172683238983154
    5. ' de' → logprob: -5.672683238983154
    6. 'une' → logprob: -6.797683238983154
    7. '```' → logprob: -6.922683238983154
    8. ' one' → logprob: -7.422683238983154
    9. 'de' → logprob: -7.672683238983154
    10. ' d' → logprob: -7.797683238983154

Token 104: ' domino' (ID: 133589)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7452619075775146
    2. ' domino' → logprob: -1.6202619075775146
    3. ' )' → logprob: -1.8702619075775146
    4. ' espace' → logprob: -1.9952619075775146
    5. 'dom' → logprob: -3.6202619075775146
    6. ' dom' → logprob: -5.120262145996094
    7. '```' → logprob: -7.245262145996094
    8. ' espaces' → logprob: -7.495262145996094
    9. ' ' → logprob: -7.870262145996094
    10. 'es' → logprob: -8.245262145996094

Token 105: ' peut' (ID: 9216)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03634434565901756
    2. ' )' → logprob: -3.911344289779663
    3. ' peut' → logprob: -5.036344528198242
    4. '   ' → logprob: -5.286344528198242
    5. ' placé' → logprob: -7.286344528198242
    6. '```' → logprob: -7.286344528198242
    7. ')
' → logprob: -7.786344528198242
    8. ' est' → logprob: -8.161344528198242
    9. '):' → logprob: -8.161344528198242
    10. '):
' → logprob: -8.286344528198242

Token 106: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.02017161063849926
    2. 'être' → logprob: -4.770171642303467
    3. ' toujours' → logprob: -5.020171642303467
    4. ' etre' → logprob: -6.895171642303467
    5. ' ' → logprob: -7.020171642303467
    6. ' ê' → logprob: -7.145171642303467
    7. ' always' → logprob: -7.645171642303467
    8. ''être' → logprob: -8.020171165466309
    9. ' be' → logprob: -8.270171165466309
    10. ' e' → logprob: -8.520171165466309

Token 107: ' placé' (ID: 147030)
  Prédit: ' placé'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' placé' → logprob: -0.496879518032074
    2. 'plac' → logprob: -0.996879518032074
    3. 'posé' → logprob: -4.496879577636719
    4. ' posé' → logprob: -5.621879577636719
    5. 'placed' → logprob: -6.246879577636719
    6. ' plac' → logprob: -6.496879577636719
    7. ' placed' → logprob: -6.621879577636719
    8. 'placer' → logprob: -6.871879577636719
    9. 'pos' → logprob: -6.996879577636719
    10. 'pose' → logprob: -8.621879577636719

Token 108: ').

' (ID: 3991)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020234227180480957
    2. '):' → logprob: -4.270234107971191
    3. '   ' → logprob: -5.770234107971191
    4. ')
' → logprob: -6.520234107971191
    5. '):
' → logprob: -7.020234107971191
    6. ' )' → logprob: -8.145234107971191
    7. '```' → logprob: -9.270234107971191
    8. ' ' → logprob: -9.895234107971191
    9. 'def' → logprob: -10.395234107971191
    10. ':' → logprob: -11.270234107971191

Token 109: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005687257274985313
    2. '"""' → logprob: -6.005687236785889
    3. ')' → logprob: -6.255687236785889
    4. '
' → logprob: -7.380687236785889
    5. '```' → logprob: -7.630687236785889
    6. ':' → logprob: -10.380687713623047
    7. '    
' → logprob: -10.380687713623047
    8. '    ' → logprob: -10.630687713623047
    9. '):' → logprob: -11.005687713623047
    10. '"""
' → logprob: -11.505687713623047

Token 110: ' Args' (ID: 39185)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007199086248874664
    2. '```' → logprob: -5.382199287414551
    3. ')' → logprob: -6.507199287414551
    4. '"""' → logprob: -7.632199287414551
    5. '\n' → logprob: -8.38219928741455
    6. '
' → logprob: -8.88219928741455
    7. '    
' → logprob: -9.88219928741455
    8. '    ' → logprob: -10.00719928741455
    9. ':' → logprob: -10.75719928741455
    10. '' → logprob: -11.00719928741455

Token 111: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016170909628272057
    2. ' :' → logprob: -5.141170978546143
    3. '   ' → logprob: -5.266170978546143
    4. ',' → logprob: -5.891170978546143
    5. ')' → logprob: -7.266170978546143
    6. '):' → logprob: -7.766170978546143
    7. '[' → logprob: -8.016170501708984
    8. '  ' → logprob: -8.141170501708984
    9. ' ' → logprob: -9.266170501708984
    10. 'def' → logprob: -9.641170501708984

Token 112: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04735032841563225
    2. ' h' → logprob: -3.9223504066467285
    3. ')' → logprob: -4.2973504066467285
    4. 'h' → logprob: -5.0473504066467285
    5. ' )' → logprob: -5.6723504066467285
    6. 'int' → logprob: -7.6723504066467285
    7. 'n' → logprob: -7.6723504066467285
    8. '```' → logprob: -7.9223504066467285
    9. '  ' → logprob: -8.29734992980957
    10. ' ' → logprob: -8.42234992980957

Token 113: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.010731088928878307
    2. '   ' → logprob: -4.885731220245361
    3. ' h' → logprob: -5.885731220245361
    4. 'self' → logprob: -8.010730743408203
    5. ' self' → logprob: -12.135730743408203
    6. '```' → logprob: -13.510730743408203
    7. ' ' → logprob: -14.260730743408203
    8. '       ' → logprob: -14.760730743408203
    9. '	h' → logprob: -15.135730743408203
    10. 'int' → logprob: -15.135730743408203

Token 114: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000799980596639216
    2. ':int' → logprob: -7.250800132751465
    3. ' :' → logprob: -9.375800132751465
    4. '   ' → logprob: -13.125800132751465
    5. ',' → logprob: -13.500800132751465
    6. '[int' → logprob: -14.625800132751465
    7. '<int' → logprob: -14.750800132751465
    8. 'int' → logprob: -14.875800132751465
    9. '):' → logprob: -16.00079917907715
    10. ')' → logprob: -16.00079917907715

Token 115: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0032669571228325367
    2. ' int' → logprob: -5.75326681137085
    3. ')' → logprob: -9.503267288208008
    4. '   ' → logprob: -11.628267288208008
    5. ':int' → logprob: -13.128267288208008
    6. '[int' → logprob: -13.378267288208008
    7. '  ' → logprob: -14.003267288208008
    8. ' )' → logprob: -14.253267288208008
    9. '):' → logprob: -15.628267288208008
    10. ' ' → logprob: -15.753267288208008

Token 116: '):' (ID: 3127)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02123280242085457
    2. '):' → logprob: -3.896232843399048
    3. ',' → logprob: -7.896232604980469
    4. '   ' → logprob: -8.771232604980469
    5. ' )' → logprob: -9.646232604980469
    6. '):
' → logprob: -9.646232604980469
    7. ' ):' → logprob: -11.146232604980469
    8. ' ' → logprob: -12.146232604980469
    9. ':' → logprob: -12.396232604980469
    10. '[int' → logprob: -13.021232604980469

Token 117: ' Nombre' (ID: 70208)
  Prédit: ' hauteur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hauteur' → logprob: -0.3336041271686554
    2. 'ha' → logprob: -2.333604097366333
    3. 'Ha' → logprob: -2.333604097366333
    4. 'height' → logprob: -3.458604097366333
    5. '   ' → logprob: -4.083604335784912
    6. ' Ha' → logprob: -4.333604335784912
    7. ' height' → logprob: -4.458604335784912
    8. 'int' → logprob: -5.333604335784912
    9. ' la' → logprob: -6.208604335784912
    10. ' ha' → logprob: -6.333604335784912

Token 118: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.2916063070297241
    2. ' de' → logprob: -1.4166063070297241
    3. ')' → logprob: -6.291606426239014
    4. ' )' → logprob: -6.416606426239014
    5. 'de' → logprob: -6.791606426239014
    6. ' des' → logprob: -6.916606426239014
    7. 'd' → logprob: -7.041606426239014
    8. '<|end|>' → logprob: -7.166606426239014
    9. ' total' → logprob: -7.291606426239014
    10. ' maximal' → logprob: -7.666606426239014

Token 119: ' lignes' (ID: 81687)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.2681037187576294
    2. ' lignes' → logprob: -1.6431037187576294
    3. ' ' → logprob: -3.76810359954834
    4. 'ligne' → logprob: -4.89310359954834
    5. 'colon' → logprob: -6.01810359954834
    6. '   ' → logprob: -6.39310359954834
    7. ' colon' → logprob: -7.01810359954834
    8. ' ' → logprob: -7.14310359954834
    9. 'cases' → logprob: -7.26810359954834
    10. 'c' → logprob: -7.39310359954834

Token 120: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.418364554643631
    2. ')' → logprob: -1.1683645248413086
    3. ',' → logprob: -4.168364524841309
    4. '```' → logprob: -5.043364524841309
    5. '    
' → logprob: -6.543364524841309
    6. ' ' → logprob: -6.668364524841309
    7. ' )' → logprob: -6.793364524841309
    8. '):' → logprob: -6.918364524841309
    9. '
' → logprob: -7.168364524841309
    10. '  ' → logprob: -7.293364524841309

Token 121: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.08646200597286224
    2. 'la' → logprob: -2.5864620208740234
    3. ' grille' → logprob: -5.586462020874023
    4. 'l' → logprob: -6.461462020874023
    5. 'gr' → logprob: -7.086462020874023
    6. ' ' → logprob: -7.586462020874023
    7. ')' → logprob: -8.336462020874023
    8. '<|end|>' → logprob: -8.461462020874023
    9. 'the' → logprob: -8.836462020874023
    10. ' l' → logprob: -9.461462020874023

Token 122: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.4758272171020508
    2. ' grille' → logprob: -0.9758272171020508
    3. ' gr' → logprob: -7.225827217102051
    4. 'grid' → logprob: -7.600827217102051
    5. '   ' → logprob: -8.60082721710205
    6. ' grid' → logprob: -8.85082721710205
    7. 'plate' → logprob: -9.22582721710205
    8. 'board' → logprob: -10.72582721710205
    9. 'pl' → logprob: -11.22582721710205
    10. ' ' → logprob: -11.60082721710205

Token 123: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01579444296658039
    2. ')' → logprob: -4.640794277191162
    3. '```' → logprob: -5.640794277191162
    4. '
' → logprob: -6.640794277191162
    5. '<|end|>' → logprob: -8.26579475402832
    6. ',' → logprob: -8.39079475402832
    7. '    
' → logprob: -8.39079475402832
    8. 'w' → logprob: -9.76579475402832
    9. '):
' → logprob: -9.89079475402832
    10. ' )' → logprob: -9.89079475402832

Token 124: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03354795649647713
    2. 'w' → logprob: -3.908547878265381
    3. ')' → logprob: -5.283547878265381
    4. '```' → logprob: -5.658547878265381
    5. ' w' → logprob: -6.158547878265381
    6. '       ' → logprob: -7.408547878265381
    7. ' ' → logprob: -7.658547878265381
    8. '    ' → logprob: -7.658547878265381
    9. 'def' → logprob: -8.908548355102539
    10. '<|end|>' → logprob: -9.033548355102539

Token 125: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' (adapté à ' w') → logprob: -0.5764583945274353
    2. ' w' → logprob: -0.8264583945274353
    3. '   ' → logprob: -7.57645845413208
    4. '       ' → logprob: -12.951457977294922
    5. ' ' → logprob: -13.201457977294922
    6. '	w' → logprob: -14.076457977294922
    7. '    ' → logprob: -14.451457977294922
    8. ' ' → logprob: -14.576457977294922
    9. '  ' → logprob: -15.326457977294922
    10. 'h' → logprob: -15.951457977294922

Token 126: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.028052911162376404
    2. '(int' → logprob: -4.403052806854248
    3. ':' → logprob: -4.528052806854248
    4. ':int' → logprob: -5.653052806854248
    5. ')' → logprob: -7.403052806854248
    6. '   ' → logprob: -8.653053283691406
    7. '```' → logprob: -8.778053283691406
    8. 'int' → logprob: -9.778053283691406
    9. '[int' → logprob: -9.778053283691406
    10. '<int' → logprob: -10.903053283691406

Token 127: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.008614926598966122
    2. ' int' → logprob: -4.758615016937256
    3. ':int' → logprob: -15.883614540100098
    4. '[int' → logprob: -15.883614540100098
    5. '=int' → logprob: -16.633615493774414
    6. ')' → logprob: -16.633615493774414
    7. '<int' → logprob: -17.258615493774414
    8. ' ' → logprob: -17.258615493774414
    9. '   ' → logprob: -17.508615493774414
    10. '(int' → logprob: -17.508615493774414

Token 128: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47838735580444336
    2. ')' → logprob: -0.9783873558044434
    3. ':' → logprob: -5.478387355804443
    4. ':int' → logprob: -10.228387832641602
    5. 'int' → logprob: -10.603387832641602
    6. '):
' → logprob: -10.728387832641602
    7. ' ):' → logprob: -10.853387832641602
    8. '[int' → logprob: -11.728387832641602
    9. ' )' → logprob: -12.478387832641602
    10. '   ' → logprob: -12.728387832641602

Token 129: ' Nombre' (ID: 70208)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.3485342264175415
    2. ' int' → logprob: -1.2235342264175415
    3. '   ' → logprob: -10.09853458404541
    4. 'Nombre' → logprob: -10.72353458404541
    5. '(int' → logprob: -12.47353458404541
    6. ' ' → logprob: -12.47353458404541
    7. ' Nombre' → logprob: -12.59853458404541
    8. '[int' → logprob: -12.72353458404541
    9. ':int' → logprob: -13.09853458404541
    10. '```' → logprob: -13.47353458404541

Token 130: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5227321982383728
    2. ' de' → logprob: -1.6477322578430176
    3. ' des' → logprob: -2.0227322578430176
    4. ':' → logprob: -3.7727322578430176
    5. ' of' → logprob: -3.7727322578430176
    6. ')' → logprob: -4.647732257843018
    7. '[int' → logprob: -4.647732257843018
    8. ' ' → logprob: -5.772732257843018
    9. 'de' → logprob: -6.147732257843018
    10. 'd' → logprob: -6.147732257843018

Token 131: ' colon' (ID: 20947)
  Prédit: ' colon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' colon' → logprob: -0.10615739971399307
    2. 'colon' → logprob: -2.7311573028564453
    3. ' cases' → logprob: -3.7311573028564453
    4. 'cases' → logprob: -5.231157302856445
    5. 'l' → logprob: -6.981157302856445
    6. ' la' → logprob: -7.106157302856445
    7. 'col' → logprob: -7.106157302856445
    8. ' case' → logprob: -7.481157302856445
    9. 'c' → logprob: -7.481157302856445
    10. ' ' → logprob: -7.731157302856445

Token 132: 'nes' (ID: 4382)
  Prédit: 'es'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.7145143747329712
    2. 'nes' → logprob: -0.7145143747329712
    3. 'ies' → logprob: -3.9645142555236816
    4. 's' → logprob: -7.089514255523682
    5. ' es' → logprob: -7.589514255523682
    6. 'ines' → logprob: -8.96451473236084
    7. 'onnes' → logprob: -9.46451473236084
    8. 'n' → logprob: -9.58951473236084
    9. 'nées' → logprob: -9.58951473236084
    10. 'lines' → logprob: -9.58951473236084

Token 133: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2609386742115021
    2. '   ' → logprob: -1.6359386444091797
    3. '):' → logprob: -3.5109386444091797
    4. '):
' → logprob: -5.51093864440918
    5. ' )' → logprob: -7.26093864440918
    6. ' ):' → logprob: -9.01093864440918
    7. '```' → logprob: -9.88593864440918
    8. '  ' → logprob: -10.63593864440918
    9. ' ' → logprob: -10.76093864440918
    10. ':' → logprob: -11.38593864440918

Token 134: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.3229472041130066
    2. 'la' → logprob: -1.3229472637176514
    3. 'l' → logprob: -4.822947025299072
    4. ')' → logprob: -7.697947025299072
    5. '   ' → logprob: -7.697947025299072
    6. ' ' → logprob: -8.07294750213623
    7. ' grille' → logprob: -8.69794750213623
    8. '```' → logprob: -9.57294750213623
    9. 'the' → logprob: -10.32294750213623
    10. ' the' → logprob: -10.69794750213623

Token 135: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.10041715204715729
    2. 'gr' → logprob: -2.350417137145996
    3. 'grid' → logprob: -8.850417137145996
    4. ' grid' → logprob: -10.100417137145996
    5. ' gr' → logprob: -10.975417137145996
    6. ' ' → logprob: -12.475417137145996
    7. '_gr' → logprob: -13.350417137145996
    8. '```' → logprob: -13.975417137145996
    9. ')' → logprob: -14.350417137145996
    10. 'ligne' → logprob: -14.975417137145996

Token 136: '.

' (ID: 364)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.489619642496109
    2. ')' → logprob: -0.9896196126937866
    3. '):
' → logprob: -4.239619731903076
    4. '):' → logprob: -7.739619731903076
    5. '
' → logprob: -7.989619731903076
    6. '```' → logprob: -8.864619255065918
    7. '"""
' → logprob: -10.864619255065918
    8. '):

' → logprob: -11.364619255065918
    9. '"""' → logprob: -11.614619255065918
    10. '")' → logprob: -11.739619255065918

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009298531338572502
    2. 'Returns' → logprob: -4.759298324584961
    3. '"""' → logprob: -7.884298324584961
    4. ' Returns' → logprob: -8.509298324584961
    5. '"""
' → logprob: -9.634298324584961
    6. '```' → logprob: -10.884298324584961
    7. ' """
' → logprob: -11.509298324584961
    8. ' """' → logprob: -12.759298324584961
    9. ')' → logprob: -13.009298324584961
    10. '
' → logprob: -13.384298324584961

Token 138: ' Returns' (ID: 9609)
  Prédit: '"""
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"""
' → logprob: -0.8209927678108215
    2. '"""' → logprob: -0.8209927678108215
    3. '   ' → logprob: -2.8209927082061768
    4. 'Returns' (adapté à ' Returns') → logprob: -2.8209927082061768
    5. ' """
' → logprob: -7.945992946624756
    6. '```' → logprob: -8.570992469787598
    7. '""' → logprob: -9.070992469787598
    8. ' Returns' → logprob: -9.570992469787598
    9. ' """' → logprob: -9.945992469787598
    10. '"""

' → logprob: -10.070992469787598

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02666959911584854
    2. '[int' → logprob: -4.276669502258301
    3. ':int' → logprob: -5.026669502258301
    4. ' int' → logprob: -5.901669502258301
    5. ' :' → logprob: -7.026669502258301
    6. '   ' → logprob: -7.401669502258301
    7. ')' → logprob: -7.401669502258301
    8. ':
' → logprob: -7.901669502258301
    9. 'int' → logprob: -8.2766695022583
    10. '(int' → logprob: -8.6516695022583

Token 140: '       ' (ID: 309)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.045995090156793594
    2. '   ' → logprob: -3.795994997024536
    3. 'int' → logprob: -3.795994997024536
    4. '       ' → logprob: -10.545994758605957
    5. '(int' → logprob: -13.045994758605957
    6. '    ' → logprob: -13.295994758605957
    7. '```' → logprob: -14.795994758605957
    8. '
' → logprob: -14.920994758605957
    9. ' (' → logprob: -15.295994758605957
    10. '  ' → logprob: -15.420994758605957

Token 141: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.5759896039962769
    2. ' int' → logprob: -0.8259896039962769
    3. '   ' → logprob: -9.950989723205566
    4. '       ' → logprob: -14.200989723205566
    5. '(int' → logprob: -14.325989723205566
    6. ' max' → logprob: -14.825989723205566
    7. '
' → logprob: -15.200989723205566
    8. 'max' → logprob: -15.450989723205566
    9. '```' → logprob: -15.700989723205566
    10. ' math' → logprob: -16.70098876953125

Token 142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010244741570204496
    2. ':
' → logprob: -8.00102424621582
    3. '):' → logprob: -8.50102424621582
    4. '   ' → logprob: -8.50102424621582
    5. ')' → logprob: -9.25102424621582
    6. ' :' → logprob: -9.50102424621582
    7. ':return' → logprob: -9.62602424621582
    8. '```' → logprob: -11.12602424621582
    9. '):
' → logprob: -11.62602424621582
    10. '"""' → logprob: -12.00102424621582

Token 143: ' Nombre' (ID: 70208)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6529501676559448
    2. ' Le' → logprob: -1.6529501676559448
    3. '   ' → logprob: -2.2779502868652344
    4. ' le' → logprob: -2.7779502868652344
    5. ' max' → logprob: -2.9029502868652344
    6. 'Le' → logprob: -3.6529502868652344
    7. ' h' → logprob: -4.402950286865234
    8. ' maximum' → logprob: -4.652950286865234
    9. ' nombre' → logprob: -4.777950286865234
    10. ' maximal' → logprob: -5.902950286865234

Token 144: ' maximal' (ID: 65414)
  Prédit: ' maximal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximal' → logprob: -0.00047964724944904447
    2. ' maximum' → logprob: -8.000479698181152
    3. ' max' → logprob: -10.125479698181152
    4. ' maksimal' → logprob: -10.500479698181152
    5. '_' → logprob: -10.625479698181152
    6. ' maximale' → logprob: -10.875479698181152
    7. '_max' → logprob: -11.000479698181152
    8. ' de' → logprob: -11.750479698181152
    9. 'max' → logprob: -12.625479698181152
    10. ' _' → logprob: -13.500479698181152

Token 145: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.7069831490516663
    2. '_' → logprob: -1.4569830894470215
    3. '   ' → logprob: -1.5819830894470215
    4. ' d' → logprob: -3.7069830894470215
    5. ' ' → logprob: -4.7069830894470215
    6. '    ' → logprob: -5.2069830894470215
    7. '_de' → logprob: -5.4569830894470215
    8. '_possible' → logprob: -5.4569830894470215
    9. '_max' → logprob: -5.5819830894470215
    10. ')' → logprob: -5.9569830894470215

Token 146: ' dom' (ID: 3878)
  Prédit: 'dom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dom' → logprob: -0.0430898517370224
    2. ' dom' → logprob: -3.1680898666381836
    3. ' domino' → logprob: -9.543089866638184
    4. 'd' → logprob: -11.918089866638184
    5. 'domain' → logprob: -13.043089866638184
    6. ' дом' → logprob: -13.043089866638184
    7. ' ' → logprob: -14.043089866638184
    8. '(dom' → logprob: -14.043089866638184
    9. '_dom' → logprob: -14.168089866638184
    10. ' domini' → logprob: -14.168089866638184

Token 147: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.00034595211036503315
    2. 'ino' → logprob: -8.125346183776855
    3. 'ines' → logprob: -10.125346183776855
    4. 'in' → logprob: -12.250346183776855
    5. 'ино' → logprob: -13.875346183776855
    6. '```' → logprob: -13.875346183776855
    7. 'icos' → logprob: -14.625346183776855
    8. 'i' → logprob: -15.000346183776855
    9. '   ' → logprob: -15.125346183776855
    10. 'imos' → logprob: -15.375346183776855

Token 148: ' pouvant' (ID: 104840)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1493891477584839
    2. ' placé' → logprob: -2.1493892669677734
    3. ' plac' → logprob: -2.6493892669677734
    4. '.' → logprob: -2.6493892669677734
    5. ' pouvant' → logprob: -3.0243892669677734
    6. '```' → logprob: -3.0243892669677734
    7. ' """' → logprob: -3.0243892669677734
    8. ' ' → logprob: -3.6493892669677734
    9. '_' → logprob: -3.6493892669677734
    10. ':' → logprob: -3.7743892669677734

Token 149: ' être' (ID: 9104)
  Prédit: ' être'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' être' → logprob: -0.06411173194646835
    2. 'être' → logprob: -2.8141117095947266
    3. ' etre' → logprob: -7.189111709594727
    4. ' be' → logprob: -7.689111709594727
    5. ''être' → logprob: -8.314111709594727
    6. ' ' → logprob: -8.689111709594727
    7. 'êtres' → logprob: -9.064111709594727
    8. '’être' → logprob: -9.189111709594727
    9. 'etre' → logprob: -9.939111709594727
    10. 'ê' → logprob: -10.189111709594727

Token 150: ' plac' (ID: 7097)
  Prédit: 'plac'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plac' → logprob: -0.20692284405231476
    2. ' plac' → logprob: -1.7069228887557983
    3. ' placé' → logprob: -5.331923007965088
    4. 'pos' → logprob: -7.831923007965088
    5. 'placed' → logprob: -9.33192253112793
    6. ' placed' → logprob: -10.45692253112793
    7. 'placer' → logprob: -10.58192253112793
    8. ' ' → logprob: -10.83192253112793
    9. 'pla' → logprob: -10.95692253112793
    10. 'posé' → logprob: -11.08192253112793

Token 151: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.0010858053574338555
    2. 'es' → logprob: -7.0010857582092285
    3. 'é' → logprob: -8.876086235046387
    4. '```' → logprob: -11.876086235046387
    5. 'er' → logprob: -12.501086235046387
    6. '   ' → logprob: -12.626086235046387
    7. 'ements' → logprob: -12.626086235046387
    8. '2' → logprob: -13.001086235046387
    9. '"' → logprob: -13.126086235046387
    10. 'e' → logprob: -13.251086235046387

Token 152: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12703394889831543
    2. '):' → logprob: -2.8770339488983154
    3. ')' → logprob: -3.3770339488983154
    4. ':' → logprob: -4.0020341873168945
    5. '):
' → logprob: -5.1270341873168945
    6. ':
' → logprob: -6.2520341873168945
    7. '
' → logprob: -6.8770341873168945
    8. '```' → logprob: -7.1270341873168945
    9. '\n' → logprob: -7.7520341873168945
    10. '    
' → logprob: -9.002034187316895

Token 153: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013597593642771244
    2. '```' → logprob: -7.376359939575195
    3. '"""' → logprob: -8.126359939575195
    4. ')' → logprob: -8.376359939575195
    5. '
' → logprob: -8.876359939575195
    6. '    
' → logprob: -10.876359939575195
    7. ':' → logprob: -11.001359939575195
    8. '    ' → logprob: -11.501359939575195
    9. '\n' → logprob: -12.251359939575195
    10. '):' → logprob: -12.501359939575195

Token 154: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004673503804951906
    2. '"""' → logprob: -6.129673480987549
    3. '
' → logprob: -6.879673480987549
    4. ')' → logprob: -7.754673480987549
    5. '```' → logprob: -8.004673957824707
    6. '\n' → logprob: -8.129673957824707
    7. '    
' → logprob: -8.254673957824707
    8. '"""
' (adapté à ' """
') → logprob: -10.379673957824707
    9. ':' → logprob: -10.754673957824707
    10. ' """' → logprob: -11.254673957824707

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00012701898231171072
    2. ' if' → logprob: -9.750126838684082
    3. 'if' → logprob: -10.375126838684082
    4. '    ' → logprob: -10.625126838684082
    5. '    
' → logprob: -12.125126838684082
    6. '
' → logprob: -12.750126838684082
    7. '   ' → logprob: -13.625126838684082
    8. ' return' → logprob: -14.125126838684082
    9. '```' → logprob: -14.125126838684082
    10. 'return' → logprob: -14.125126838684082

Token 156: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0511079765856266
    2. ' if' → logprob: -3.176107883453369
    3. '   ' → logprob: -4.926107883453369
    4. 'return' → logprob: -7.176107883453369
    5. '```' → logprob: -10.426108360290527
    6. ' return' → logprob: -11.426108360290527
    7. 'surface' → logprob: -11.676108360290527
    8. 'total' → logprob: -12.551108360290527
    9. 'result' → logprob: -13.426108360290527
    10. ' surface' → logprob: -14.926108360290527

Token 157: ' Surface' (ID: 46665)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15815609693527222
    2. ' if' → logprob: -2.033156156539917
    3. 'surface' → logprob: -4.658155918121338
    4. '   ' → logprob: -5.533155918121338
    5. 'return' → logprob: -7.033155918121338
    6. ' surface' → logprob: -7.783155918121338
    7. 'total' → logprob: -8.283156394958496
    8. 'result' → logprob: -9.283156394958496
    9. 'max' → logprob: -9.533156394958496
    10. '```' → logprob: -10.283156394958496

Token 158: ' totale' (ID: 52898)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5632038116455078
    2. '   ' → logprob: -0.9382038116455078
    3. 'total' → logprob: -4.438203811645508
    4. '_tot' → logprob: -4.688203811645508
    5. '_total' → logprob: -4.813203811645508
    6. 'tot' → logprob: -5.063203811645508
    7. '_surface' → logprob: -7.063203811645508
    8. 'surface' → logprob: -7.188203811645508
    9. '=' → logprob: -7.313203811645508
    10. ' totale' → logprob: -7.313203811645508

Token 159: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007587694562971592
    2. '   ' → logprob: -5.507587909698486
    3. '=' → logprob: -5.882587909698486
    4. 'total' → logprob: -7.632587909698486
    5. 'surface' → logprob: -9.632587432861328
    6. '_total' → logprob: -9.757587432861328
    7. '_surface' → logprob: -10.382587432861328
    8. ' total' → logprob: -10.882587432861328
    9. ' ' → logprob: -11.507587432861328
    10. '    ' → logprob: -11.632587432861328

Token 160: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.14900946617126465
    2. 'la' → logprob: -2.1490094661712646
    3. 'h' → logprob: -4.899009704589844
    4. ' h' → logprob: -4.899009704589844
    5. ' grille' → logprob: -5.149009704589844
    6. 'gr' → logprob: -7.399009704589844
    7. 'l' → logprob: -8.649009704589844
    8. '   ' → logprob: -9.149009704589844
    9. ' grid' → logprob: -9.274009704589844
    10. ' ' → logprob: -10.149009704589844

Token 161: ' grille' (ID: 99153)
  Prédit: 'gr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gr' → logprob: -0.013587082736194134
    2. ' grille' → logprob: -4.38858699798584
    3. 'surface' → logprob: -6.88858699798584
    4. 'grid' → logprob: -10.01358699798584
    5. ' surface' → logprob: -12.13858699798584
    6. ' gr' → logprob: -12.26358699798584
    7. 'plate' → logprob: -14.51358699798584
    8. '   ' → logprob: -15.01358699798584
    9. 'zone' → logprob: -15.13858699798584
    10. 'g' → logprob: -15.76358699798584

Token 162: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1635761857032776
    2. 'surface' → logprob: -2.538576126098633
    3. ' surface' → logprob: -3.038576126098633
    4. 'total' → logprob: -4.788576126098633
    5. ' area' → logprob: -5.038576126098633
    6. ' total' → logprob: -5.163576126098633
    7. 'area' → logprob: -6.038576126098633
    8. ' superficie' → logprob: -7.913576126098633
    9. '    
' → logprob: -8.413576126098633
    10. '
' → logprob: -9.413576126098633

Token 163: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010469821281731129
    2. 'surface' → logprob: -5.135469913482666
    3. 'total' → logprob: -6.510469913482666
    4. '    
' → logprob: -6.885469913482666
    5. ' surface' → logprob: -7.135469913482666
    6. ' total' → logprob: -7.760469913482666
    7. 's' → logprob: -8.260469436645508
    8. ' area' → logprob: -8.885469436645508
    9. 'area' → logprob: -9.385469436645508
    10. ' superficie' → logprob: -10.010469436645508

Token 164: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' (adapté à ' surface') → logprob: -0.24965685606002808
    2. ' surface' → logprob: -1.9996569156646729
    3. 'total' → logprob: -3.499656915664673
    4. ' area' → logprob: -3.874656915664673
    5. 'area' → logprob: -3.874656915664673
    6. ' total' → logprob: -4.374656677246094
    7. '   ' → logprob: -6.874656677246094
    8. ' superficie' → logprob: -9.374656677246094
    9. 's' → logprob: -10.249656677246094
    10. 'sur' → logprob: -10.999656677246094

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13034015893936157
    2. '=' → logprob: -2.130340099334717
    3. '_total' → logprob: -6.130340099334717
    4. '_tot' → logprob: -6.880340099334717
    5. '_' → logprob: -9.005340576171875
    6. 'total' → logprob: -10.130340576171875
    7. '   ' → logprob: -11.130340576171875
    8. 'tot' → logprob: -11.505340576171875
    9. ' ' → logprob: -12.005340576171875
    10. ' ' → logprob: -12.630340576171875

Token 166: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.47408327460289
    2. 'h' → logprob: -0.9740833044052124
    3. '   ' → logprob: -12.224082946777344
    4. '	h' → logprob: -14.224082946777344
    5. ' ' → logprob: -14.474082946777344
    6. ' ' → logprob: -16.724082946777344
    7. '(h' → logprob: -16.724082946777344
    8. '  ' → logprob: -17.349082946777344
    9. '```' → logprob: -18.224082946777344
    10. '"h' → logprob: -18.224082946777344

Token 167: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.011074470356106758
    2. '*' → logprob: -4.511074542999268
    3. '*w' → logprob: -10.63607406616211
    4. ' ' → logprob: -13.76107406616211
    5. ' ' → logprob: -14.26107406616211
    6. '*h' → logprob: -15.51107406616211
    7. '*object' → logprob: -15.63607406616211
    8. '   ' → logprob: -16.13607406616211
    9. ' *
' → logprob: -16.13607406616211
    10. ' **' → logprob: -16.76107406616211

Token 168: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01416398212313652
    2. ' w' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.514163970947266
    4. ' ' → logprob: -15.764163970947266
    5. '	w' → logprob: -16.514163970947266
    6. ' ' → logprob: -17.014163970947266
    7. '```' → logprob: -18.014163970947266
    8. '  ' → logprob: -18.451663970947266
    9. '_w' → logprob: -18.514163970947266
    10. '    ' → logprob: -18.826663970947266

Token 169: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027599835768342018
    2. '   ' → logprob: -3.652599811553955
    3. '    
' → logprob: -6.902599811553955
    4. '
' → logprob: -9.402600288391113
    5. '  
' → logprob: -9.652600288391113
    6. 'if' → logprob: -9.777600288391113
    7. '\n' → logprob: -9.902600288391113
    8. ' 
' → logprob: -11.402600288391113
    9. '   
' → logprob: -11.652600288391113
    10. ' if' → logprob: -11.777600288391113

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35453087091445923
    2. '
' → logprob: -1.2295308113098145
    3. '    
' → logprob: -5.6045308113098145
    4. 'if' → logprob: -6.3545308113098145
    5. ' if' → logprob: -8.479531288146973
    6. '```' → logprob: -8.604531288146973
    7. '\n' → logprob: -8.979531288146973
    8. '  
' → logprob: -10.229531288146973
    9. '
' → logprob: -10.604531288146973
    10. ' 
' → logprob: -10.854531288146973

Token 171: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.33056527376174927
    2. '   ' → logprob: -1.3305652141571045
    3. ' if' → logprob: -4.080565452575684
    4. '
' → logprob: -9.455565452575684
    5. '    
' → logprob: -9.455565452575684
    6. '```' → logprob: -9.580565452575684
    7. 'return' → logprob: -10.830565452575684
    8. '  ' → logprob: -13.455565452575684
    9. '	if' → logprob: -13.455565452575684
    10. '    ' → logprob: -13.705565452575684

Token 172: ' Som' (ID: 12116)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.019160877913236618
    2. ' if' → logprob: -4.019160747528076
    3. 's' → logprob: -8.769161224365234
    4. 'max' → logprob: -8.769161224365234
    5. '   ' → logprob: -8.894161224365234
    6. 'return' → logprob: -9.019161224365234
    7. 'surface' → logprob: -9.144161224365234
    8. 'sum' → logprob: -9.269161224365234
    9. 'som' → logprob: -9.769161224365234
    10. '```' → logprob: -10.269161224365234

Token 173: 'me' (ID: 1047)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.24845056235790253
    2. 'me' → logprob: -1.748450517654419
    3. '   ' → logprob: -3.123450517654419
    4. 'sum' → logprob: -6.748450756072998
    5. 'ma' → logprob: -7.873450756072998
    6. '    ' → logprob: -9.62345027923584
    7. '
' → logprob: -9.74845027923584
    8. '  ' → logprob: -9.99845027923584
    9. 'surface' → logprob: -10.24845027923584
    10. '    
' → logprob: -10.49845027923584

Token 174: ' des' (ID: 731)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5771154165267944
    2. '=' → logprob: -0.8271154165267944
    3. '   ' → logprob: -7.827115535736084
    4. 'surface' → logprob: -8.202115058898926
    5. '(h' → logprob: -8.577115058898926
    6. 'de' → logprob: -9.702115058898926
    7. '=h' → logprob: -9.952115058898926
    8. 'h' → logprob: -9.952115058898926
    9. ' ' → logprob: -10.202115058898926
    10. ' (' → logprob: -10.577115058898926

Token 175: ' côtés' (ID: 103239)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0008571469807066023
    2. ' h' → logprob: -7.375857353210449
    3. '(h' → logprob: -8.62585735321045
    4. 'dimensions' → logprob: -10.62585735321045
    5. 'l' → logprob: -12.00085735321045
    6. 'ha' → logprob: -12.37585735321045
    7. ' (' → logprob: -12.62585735321045
    8. '   ' → logprob: -13.00085735321045
    9. ' lignes' → logprob: -13.50085735321045
    10. ' ' → logprob: -13.87585735321045

Token 176: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.67889004945755
    2. '   ' → logprob: -0.80389004945755
    3. 'sum' → logprob: -4.178890228271484
    4. 's' → logprob: -4.678890228271484
    5. '=' → logprob: -4.928890228271484
    6. 'surface' → logprob: -5.428890228271484
    7. ' sum' → logprob: -6.178890228271484
    8. ' surface' → logprob: -6.678890228271484
    9. ' s' → logprob: -6.678890228271484
    10. '
' → logprob: -7.178890228271484

Token 177: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9640181660652161
    2. 's' → logprob: -1.3390181064605713
    3. 'sum' → logprob: -1.5890181064605713
    4. 'side' → logprob: -3.0890181064605713
    5. 'som' → logprob: -3.3390181064605713
    6. ' =' → logprob: -3.5890181064605713
    7. 'c' → logprob: -4.08901834487915
    8. ' som' → logprob: -5.21401834487915
    9. ' sum' → logprob: -5.33901834487915
    10. 'surface' → logprob: -5.71401834487915

Token 178: ' per' (ID: 777)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32546567916870117
    2. 'sum' → logprob: -2.200465679168701
    3. 'side' → logprob: -2.450465679168701
    4. 'c' → logprob: -3.200465679168701
    5. 'som' → logprob: -3.325465679168701
    6. 'total' → logprob: -6.450465679168701
    7. 'summ' → logprob: -7.200465679168701
    8. 'length' → logprob: -8.20046615600586
    9. 'cot' → logprob: -8.45046615600586
    10. 'surface' → logprob: -8.57546615600586

Token 179: 'imet' (ID: 29890)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.22558444738388062
    2. 'imeter' → logprob: -1.8505845069885254
    3. 'imet' → logprob: -3.9755845069885254
    4. '   ' → logprob: -4.725584506988525
    5. 'imiter' → logprob: -5.850584506988525
    6. ' ' → logprob: -6.100584506988525
    7. '  ' → logprob: -6.225584506988525
    8. 'met' → logprob: -7.100584506988525
    9. '```' → logprob: -7.225584506988525
    10. ' =' → logprob: -7.413084506988525

Token 180: 're' (ID: 264)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.03552183881402016
    2. 're' → logprob: -3.4105217456817627
    3. 'e' → logprob: -6.535521984100342
    4. 'r' → logprob: -8.910521507263184
    5. '=' → logprob: -9.535521507263184
    6. 'eter' → logprob: -9.660521507263184
    7. 'etre' → logprob: -9.660521507263184
    8. 'h' → logprob: -11.285521507263184
    9. '   ' → logprob: -11.285521507263184
    10. 'ere' → logprob: -11.535521507263184

Token 181: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889209687709808
    2. '=' → logprob: -2.5788919925689697
    3. ' ' → logprob: -13.45389175415039
    4. ' ' → logprob: -14.82889175415039
    5. 's' → logprob: -15.07889175415039
    6. '   ' → logprob: -16.45389175415039
    7. '_' → logprob: -17.07889175415039
    8. '  ' → logprob: -17.07889175415039
    9. ')' → logprob: -17.20389175415039
    10. 'e' → logprob: -18.20389175415039

Token 182: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.5759585499763489
    2. ' h' → logprob: -0.8259585499763489
    3. ' (' → logprob: -11.450958251953125
    4. '(h' → logprob: -12.575958251953125
    5. '   ' → logprob: -12.575958251953125
    6. '(' → logprob: -14.075958251953125
    7. ' ' → logprob: -15.075958251953125
    8. '	h' → logprob: -15.575958251953125
    9. ' ' → logprob: -15.825958251953125
    10. '    ' → logprob: -17.700958251953125

Token 183: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.020544573664665222
    2. '+' → logprob: -3.8955445289611816
    3. ' plus' → logprob: -13.64554500579834
    4. ' +
' → logprob: -14.39554500579834
    5. ' ' → logprob: -15.02054500579834
    6. '+w' → logprob: -15.02054500579834
    7. '   ' → logprob: -16.020544052124023
    8. ' ' → logprob: -16.395544052124023
    9. 'plus' → logprob: -17.020544052124023
    10. ' +
' → logprob: -17.145544052124023

Token 184: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.38687190413475037
    2. ' w' → logprob: -1.1368719339370728
    3. ' ' → logprob: -14.886872291564941
    4. '	w' → logprob: -15.386872291564941
    5. '   ' → logprob: -15.636872291564941
    6. '    ' → logprob: -16.261871337890625
    7. ' ' → logprob: -17.261871337890625
    8. ')' → logprob: -17.761871337890625
    9. 'W' → logprob: -17.761871337890625
    10. ''w' → logprob: -17.761871337890625

Token 185: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.030705230310559273
    2. '   ' → logprob: -3.530705213546753
    3. '    
' → logprob: -7.155705451965332
    4. 'if' → logprob: -9.655705451965332
    5. '
' → logprob: -10.405705451965332
    6. '  
' → logprob: -10.530705451965332
    7. ' if' → logprob: -10.655705451965332
    8. '```' → logprob: -11.530705451965332
    9. '   
' → logprob: -12.030705451965332
    10. ' 
' → logprob: -12.155705451965332

Token 186: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2022552639245987
    2. '
' → logprob: -1.7022552490234375
    3. 'if' → logprob: -7.7022552490234375
    4. '    
' → logprob: -8.077255249023438
    5. ' if' → logprob: -9.577255249023438
    6. '```' → logprob: -12.452255249023438
    7. '
' → logprob: -12.827255249023438
    8. '   
' → logprob: -13.827255249023438
    9. '    ' → logprob: -14.577255249023438
    10. '  
' → logprob: -14.827255249023438

Token 187: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0036440188996493816
    2. '   ' → logprob: -5.753643989562988
    3. ' if' → logprob: -7.878643989562988
    4. 'return' → logprob: -9.378643989562988
    5. '```' → logprob: -13.128643989562988
    6. 'import' → logprob: -14.503643989562988
    7. '
' → logprob: -15.378643989562988
    8. '    
' → logprob: -16.128644943237305
    9. ' return' → logprob: -16.878644943237305
    10. 'from' → logprob: -17.253644943237305

Token 188: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.011056549847126007
    2. ' if' → logprob: -4.511056423187256
    3. '   ' → logprob: -12.011056900024414
    4. 'return' → logprob: -13.261056900024414
    5. '```' → logprob: -15.511056900024414
    6. 'result' → logprob: -15.636056900024414
    7. 'si' → logprob: -16.386056900024414
    8. 'import' → logprob: -16.511056900024414
    9. 'Si' → logprob: -16.636056900024414
    10. 'condition' → logprob: -16.761056900024414

Token 189: ' la' (ID: 557)
  Prédit: ' surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.009852062910795212
    2. 'surface' → logprob: -4.634851932525635
    3. '(surface' → logprob: -10.259852409362793
    4. '   ' → logprob: -11.134852409362793
    5. ' ' → logprob: -11.134852409362793
    6. ' ' → logprob: -11.509852409362793
    7. ' surfaces' → logprob: -12.009852409362793
    8. ' superficie' → logprob: -12.259852409362793
    9. '_surface' → logprob: -13.009852409362793
    10. ' space' → logprob: -13.259852409362793

Token 190: ' surface' (ID: 9753)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.38689565658569336
    2. ' surface' → logprob: -1.1368956565856934
    3. 'sur' → logprob: -11.636896133422852
    4. '_surface' → logprob: -12.386896133422852
    5. '(surface' → logprob: -12.511896133422852
    6. '   ' → logprob: -12.886896133422852
    7. ' superficie' → logprob: -13.636896133422852
    8. 'Surface' → logprob: -13.761896133422852
    9. 'surf' → logprob: -14.136896133422852
    10. 'urface' → logprob: -14.386896133422852

Token 191: ' est' (ID: 893)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.01679249294102192
    2. '>=' → logprob: -4.141792297363281
    3. ' ' → logprob: -7.641792297363281
    4. ' ' → logprob: -8.766792297363281
    5. '   ' → logprob: -9.391792297363281
    6. ' <' → logprob: -10.891792297363281
    7. '  ' → logprob: -12.141792297363281
    8. '>' → logprob: -12.516792297363281
    9. ' >' → logprob: -12.641792297363281
    10. '	' → logprob: -12.891792297363281

Token 192: ' suffisamment' (ID: 124434)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.11959999054670334
    2. '>=' → logprob: -2.3696000576019287
    3. '   ' → logprob: -4.36959981918335
    4. ' supérieure' → logprob: -5.49459981918335
    5. 'sup' → logprob: -6.86959981918335
    6. ' sup' → logprob: -7.49459981918335
    7. ' supérieur' → logprob: -8.369600296020508
    8. 'super' → logprob: -8.744600296020508
    9. ' greater' → logprob: -9.244600296020508
    10. 'greater' → logprob: -9.369600296020508

Token 193: ' grande' (ID: 10094)
  Prédit: ' grande'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grande' → logprob: -0.004123161546885967
    2. 'large' → logprob: -6.504123210906982
    3. ' large' → logprob: -6.879123210906982
    4. ' supérieure' → logprob: -7.504123210906982
    5. 'sup' → logprob: -7.879123210906982
    6. ' sup' → logprob: -8.879122734069824
    7. ' élevée' → logprob: -9.379122734069824
    8. 'larg' → logprob: -9.379122734069824
    9. 'grand' → logprob: -9.754122734069824
    10. 'gr' → logprob: -9.879122734069824

Token 194: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14872534573078156
    2. ':' → logprob: -2.1487252712249756
    3. ',' → logprob: -3.8987252712249756
    4. ' :' → logprob: -7.398725509643555
    5. '    ' → logprob: -8.023725509643555
    6. ' ,' → logprob: -9.398725509643555
    7. ':
' → logprob: -9.648725509643555
    8. '  ' → logprob: -9.898725509643555
    9. ' and' → logprob: -10.023725509643555
    10. ' if' → logprob: -10.523725509643555

Token 195: ' calcul' (ID: 7559)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39749279618263245
    2. '   ' → logprob: -1.14749276638031
    3. 'return' → logprob: -5.5224928855896
    4. '    ' → logprob: -6.0224928855896
    5. '       ' → logprob: -6.1474928855896
    6. ' ' → logprob: -7.5224928855896
    7. ' 
' → logprob: -7.7724928855896
    8. '    
' → logprob: -7.8974928855896
    9. ' if' → logprob: -8.147492408752441
    10. ' ' → logprob: -9.772492408752441

Token 196: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.001348688150756061
    2. '   ' → logprob: -6.626348495483398
    3. 'ons' → logprob: -11.626348495483398
    4. 'ate' → logprob: -12.501348495483398
    5. 'é' → logprob: -12.876348495483398
    6. 'e' → logprob: -13.126348495483398
    7. 'r' → logprob: -13.751348495483398
    8. '#' → logprob: -14.376348495483398
    9. ' return' → logprob: -14.501348495483398
    10. 'on' → logprob: -14.626348495483398

Token 197: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.15845932066440582
    2. ' la' → logprob: -2.408459424972534
    3. ' int' → logprob: -4.158459186553955
    4. ' l' → logprob: -4.533459186553955
    5. '   ' → logprob: -5.033459186553955
    6. '    ' → logprob: -5.408459186553955
    7. ' surface' → logprob: -5.658459186553955
    8. ' max' → logprob: -6.033459186553955
    9. ' ' → logprob: -6.283459186553955
    10. 'le' → logprob: -6.408459186553955

Token 198: ' plafond' (ID: 114829)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.42433154582977295
    2. 'max' → logprob: -1.424331545829773
    3. 'nombre' → logprob: -2.9243316650390625
    4. ' return' → logprob: -3.5493316650390625
    5. ' max' → logprob: -5.2993316650390625
    6. ' nombre' → logprob: -5.4243316650390625
    7. 'maximum' → logprob: -5.5493316650390625
    8. 'result' → logprob: -5.6743316650390625
    9. '   ' → logprob: -6.1743316650390625
    10. ' maximum' → logprob: -7.1743316650390625

Token 199: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05259694159030914
    2. '(' → logprob: -3.6775970458984375
    3. '(surface' → logprob: -4.0525970458984375
    4. ' (' → logprob: -5.6775970458984375
    5. ' de' → logprob: -5.8025970458984375
    6. '    ' → logprob: -7.4275970458984375
    7. 'surface' → logprob: -7.8025970458984375
    8. ':' → logprob: -8.802597045898438
    9. '(int' → logprob: -9.052597045898438
    10. '(s' → logprob: -9.177597045898438

Token 200: ' surface' (ID: 9753)
  Prédit: '(surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(surface' → logprob: -0.4726826846599579
    2. ' (' → logprob: -1.5976827144622803
    3. ' surface' → logprob: -2.0976827144622803
    4. 'surface' → logprob: -2.9726827144622803
    5. '(s' → logprob: -8.72268295288086
    6. '(' → logprob: -9.59768295288086
    7. ' ' → logprob: -10.09768295288086
    8. ' int' → logprob: -10.22268295288086
    9. 'int' → logprob: -10.72268295288086
    10. '   ' → logprob: -11.09768295288086

Token 201: ' /' (ID: 820)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25646936893463135
    2. ' /' → logprob: -2.131469249725342
    3. ' //' → logprob: -2.256469249725342
    4. '/' → logprob: -7.006469249725342
    5. ' ' → logprob: -7.631469249725342
    6. '//' → logprob: -7.881469249725342
    7. 'div' → logprob: -8.1314697265625
    8. '    ' → logprob: -8.3814697265625
    9. ' ' → logprob: -9.2564697265625
    10. '  ' → logprob: -9.3814697265625

Token 202: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11306816339492798
    2. ' ' → logprob: -2.238068103790283
    3. '   ' → logprob: -8.363068580627441
    4. '  ' → logprob: -12.363068580627441
    5. '    ' → logprob: -12.488068580627441
    6. ' ' → logprob: -12.738068580627441
    7. '```' → logprob: -14.550568580627441
    8. '     ' → logprob: -16.488067626953125
    9. '3' → logprob: -16.550567626953125
    10. ' ' → logprob: -16.613067626953125

Token 203: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011997550027444959
    2. ' ' → logprob: -6.751199722290039
    3. '   ' → logprob: -10.626199722290039
    4. '```' → logprob: -12.376199722290039
    5. '  ' → logprob: -14.751199722290039
    6. '
' → logprob: -15.751199722290039
    7. '`' → logprob: -16.43869972229004
    8. '    ' → logprob: -16.50119972229004
    9. ' ' → logprob: -16.68869972229004
    10. 'def' → logprob: -16.68869972229004

Token 204: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00324473949149251
    2. '
' → logprob: -6.253244876861572
    3. '    
' → logprob: -7.253244876861572
    4. ':' → logprob: -8.378244400024414
    5. ',' → logprob: -9.003244400024414
    6. 'return' → logprob: -9.378244400024414
    7. '       ' → logprob: -10.003244400024414
    8. ' return' → logprob: -10.878244400024414
    9. '   
' → logprob: -11.003244400024414
    10. '    ' → logprob: -11.128244400024414

Token 205: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034845535992644727
    2. '    
' → logprob: -8.250348091125488
    3. '
' → logprob: -9.750348091125488
    4. ' if' → logprob: -11.500348091125488
    5. 'if' → logprob: -12.125348091125488
    6. '   
' → logprob: -12.875348091125488
    7. '  
' → logprob: -13.000348091125488
    8. ',' → logprob: -13.250348091125488
    9. '    ' → logprob: -13.500348091125488
    10. '  ' → logprob: -14.125348091125488

Token 206: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04433465376496315
    2. 'if' (adapté à ' if') → logprob: -3.669334650039673
    3. ' if' → logprob: -4.294334888458252
    4. 'import' → logprob: -5.919334888458252
    5. '
' → logprob: -7.294334888458252
    6. 'return' → logprob: -7.669334888458252
    7. ' return' → logprob: -8.294334411621094
    8. ' import' → logprob: -9.669334411621094
    9. '    
' → logprob: -10.544334411621094
    10. 'from' → logprob: -11.169334411621094

Token 207: ' surface' (ID: 9753)
  Prédit: ' surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' surface' → logprob: -0.001044955221004784
    2. 'surface' → logprob: -6.876044750213623
    3. ' space' → logprob: -12.501045227050781
    4. '(surface' → logprob: -12.751045227050781
    5. ' ' → logprob: -13.126045227050781
    6. ' ' → logprob: -13.876045227050781
    7. '   ' → logprob: -14.126045227050781
    8. ' superficie' → logprob: -14.251045227050781
    9. ' surfaces' → logprob: -14.751045227050781
    10. '_surface' → logprob: -15.001045227050781

Token 208: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.038059741258621216
    2. '>=' → logprob: -3.288059711456299
    3. ' ' → logprob: -11.913060188293457
    4. ')>=' → logprob: -12.663060188293457
    5. ']>=' → logprob: -13.038060188293457
    6. '   ' → logprob: -13.038060188293457
    7. '>' → logprob: -13.663060188293457
    8. ' ' → logprob: -13.913060188293457
    9. ')' → logprob: -14.163060188293457
    10. ' >' → logprob: -14.538060188293457

Token 209: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.20241163671016693
    2. 'per' → logprob: -1.7024116516113281
    3. '   ' → logprob: -6.952411651611328
    4. '	per' → logprob: -10.827411651611328
    5. '(per' → logprob: -12.452411651611328
    6. '    ' → logprob: -12.577411651611328
    7. '       ' → logprob: -12.702411651611328
    8. ' ' → logprob: -12.952411651611328
    9. ' ' → logprob: -13.077411651611328
    10. ' perimeter' → logprob: -13.827411651611328

Token 210: 'imet' (ID: 29890)
  Prédit: 'imet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imet' → logprob: -0.0297942366451025
    2. 'im' → logprob: -3.529794216156006
    3. 'imeter' → logprob: -11.154794692993164
    4. 'met' → logprob: -11.779794692993164
    5. 'ip' → logprob: -12.904794692993164
    6. 'um' → logprob: -13.279794692993164
    7. 'am' → logprob: -13.404794692993164
    8. 'i' → logprob: -13.654794692993164
    9. '
' → logprob: -13.654794692993164
    10. 'et' → logprob: -13.904794692993164

Token 211: 're' (ID: 264)
  Prédit: 're'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.06826867908239365
    2. 'etre' → logprob: -2.8182687759399414
    3. 'tre' → logprob: -5.443268775939941
    4. 'e' → logprob: -6.568268775939941
    5. 'ere' → logprob: -8.943268775939941
    6. '
' → logprob: -9.318268775939941
    7. '   ' → logprob: -9.568268775939941
    8. '`' → logprob: -10.568268775939941
    9. ' ' → logprob: -10.693268775939941
    10. 'et' → logprob: -10.693268775939941

Token 212: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048630282282829285
    2. ':
' → logprob: -3.0486302375793457
    3. '   ' → logprob: -10.548630714416504
    4. ' :' → logprob: -12.298630714416504
    5. '):
' → logprob: -12.673630714416504
    6. ':return' → logprob: -12.923630714416504
    7. ':
' → logprob: -13.173630714416504
    8. '):' → logprob: -13.173630714416504
    9. ' :
' → logprob: -13.798630714416504
    10. '       ' → logprob: -13.798630714416504

Token 213: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00020926215802319348
    2. '
' → logprob: -9.625208854675293
    3. ' return' → logprob: -9.625208854675293
    4. 'return' → logprob: -9.750208854675293
    5. '   ' → logprob: -12.250208854675293
    6. '        
' → logprob: -12.500208854675293
    7. '      ' → logprob: -13.500208854675293
    8. '\n' → logprob: -13.750208854675293
    9. ':' → logprob: -13.750208854675293
    10. '           ' → logprob: -13.875208854675293

Token 214: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32957831025123596
    2. 'return' → logprob: -1.3295782804489136
    3. ' return' → logprob: -4.329578399658203
    4. 'import' → logprob: -5.829578399658203
    5. '   ' → logprob: -10.704578399658203
    6. 'from' → logprob: -10.954578399658203
    7. ' import' → logprob: -11.204578399658203
    8. '           ' → logprob: -12.829578399658203
    9. '	return' → logprob: -12.829578399658203
    10. '      ' → logprob: -12.954578399658203

Token 215: ' Calcul' (ID: 57243)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1324637234210968
    2. 'import' → logprob: -2.8824636936187744
    3. ' return' → logprob: -3.3824636936187744
    4. '       ' → logprob: -3.5074636936187744
    5. 'from' → logprob: -5.8824639320373535
    6. '   ' → logprob: -7.2574639320373535
    7. ' import' → logprob: -8.007463455200195
    8. ' from' → logprob: -8.882463455200195
    9. 'result' → logprob: -9.257463455200195
    10. 'ret' → logprob: -10.757463455200195

Token 216: ' du' (ID: 1462)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26482459902763367
    2. ' return' → logprob: -2.139824628829956
    3. '   ' → logprob: -2.514824628829956
    4. 'return' → logprob: -4.139824390411377
    5. ' (' → logprob: -5.014824390411377
    6. ' int' → logprob: -6.014824390411377
    7. 'int' → logprob: -6.264824390411377
    8. ' =' → logprob: -6.389824390411377
    9. ' de' → logprob: -7.014824390411377
    10. 'ceil' → logprob: -7.264824390411377

Token 217: ' plafond' (ID: 114829)
  Prédit: '(surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(surface' → logprob: -0.0069136954843997955
    2. ' (' → logprob: -5.381913661956787
    3. '-' → logprob: -6.881913661956787
    4. 'surface' → logprob: -7.756913661956787
    5. ' -' → logprob: -8.256914138793945
    6. '-s' → logprob: -8.756914138793945
    7. '(s' → logprob: -8.756914138793945
    8. 'import' → logprob: -8.881914138793945
    9. 'return' → logprob: -9.631914138793945
    10. '-(' → logprob: -11.256914138793945

Token 218: ' sans' (ID: 9828)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5949407815933228
    2. '   ' → logprob: -1.3449407815933228
    3. ' (' → logprob: -1.9699407815933228
    4. ' return' → logprob: -3.844940662384033
    5. '((' → logprob: -4.844940662384033
    6. '(surface' → logprob: -4.844940662384033
    7. '(' → logprob: -5.719940662384033
    8. 'return' → logprob: -6.094940662384033
    9. ' ((' → logprob: -6.719940662384033
    10. 'int' → logprob: -6.969940662384033

Token 219: ' utiliser' (ID: 43227)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.12244107574224472
    2. ' utiliser' → logprob: -3.122441053390503
    3. '(' → logprob: -3.747441053390503
    4. 'util' → logprob: -4.122441291809082
    5. '((' → logprob: -4.497441291809082
    6. ' import' → logprob: -4.997441291809082
    7. ' (' → logprob: -5.122441291809082
    8. '(import' → logprob: -5.997441291809082
    9. 'div' → logprob: -6.372441291809082
    10. ' using' → logprob: -7.497441291809082

Token 220: ' math' (ID: 13324)
  Prédit: '(surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(surface' → logprob: -0.6687399744987488
    2. 'import' → logprob: -1.4187400341033936
    3. ' (' → logprob: -2.0437400341033936
    4. '(' → logprob: -3.0437400341033936
    5. 'math' → logprob: -4.1687397956848145
    6. 'int' → logprob: -4.1687397956848145
    7. '(math' → logprob: -4.9187397956848145
    8. 'div' → logprob: -5.4187397956848145
    9. '(
' → logprob: -5.4187397956848145
    10. ' math' → logprob: -5.4187397956848145

Token 221: '.ceil' (ID: 60295)
  Prédit: '.ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ceil' → logprob: -0.00035536551149562
    2. 'ceil' → logprob: -8.37535572052002
    3. '.floor' → logprob: -10.12535572052002
    4. '   ' → logprob: -10.37535572052002
    5. ' ceil' → logprob: -10.87535572052002
    6. '```' → logprob: -11.12535572052002
    7. 'import' → logprob: -12.50035572052002
    8. '       ' → logprob: -12.50035572052002
    9. '.' → logprob: -12.62535572052002
    10. '``' → logprob: -12.62535572052002

Token 222: ' :' (ID: 712)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037195575423538685
    2. ':' → logprob: -6.378719329833984
    3. 'return' → logprob: -7.503719329833984
    4. ' return' → logprob: -7.753719329833984
    5. '
' → logprob: -8.003719329833984
    6. ' :' → logprob: -8.628719329833984
    7. ':
' → logprob: -9.253719329833984
    8. '        ' → logprob: -9.253719329833984
    9. ',' → logprob: -9.503719329833984
    10. '        
' → logprob: -10.128719329833984

Token 223: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.589030921459198
    2. '(surface' → logprob: -1.3390309810638428
    3. 'return' → logprob: -1.9640309810638428
    4. ' (' → logprob: -3.7140309810638428
    5. ' return' → logprob: -4.089030742645264
    6. '(return' → logprob: -7.589030742645264
    7. '(s' → logprob: -7.714030742645264
    8. '   ' → logprob: -8.714031219482422
    9. '(result' → logprob: -9.089031219482422
    10. '           ' → logprob: -9.214031219482422

Token 224: '(-' (ID: 8087)
  Prédit: '(surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(surface' → logprob: -0.3868962824344635
    2. '(-' → logprob: -2.2618963718414307
    3. '   ' → logprob: -2.3868963718414307
    4. ' (' → logprob: -2.8868963718414307
    5. '((' → logprob: -3.8868963718414307
    6. '-(' → logprob: -4.761896133422852
    7. '(-(' → logprob: -4.886896133422852
    8. 'return' → logprob: -4.886896133422852
    9. ' -' → logprob: -5.136896133422852
    10. ' return' → logprob: -5.386896133422852

Token 225: 'a' (ID: 64)
  Prédit: 'surface'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'surface' → logprob: -0.017770584672689438
    2. ' surface' → logprob: -4.517770767211914
    3. '(surface' → logprob: -5.017770767211914
    4. ' (' → logprob: -10.392770767211914
    5. '   ' → logprob: -10.892770767211914
    6. '(' → logprob: -11.017770767211914
    7. '(-' → logprob: -12.142770767211914
    8. 'surf' → logprob: -13.267770767211914
    9. ' ' → logprob: -13.392770767211914
    10. ')' → logprob: -13.517770767211914

Token 226: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1844077706336975
    2. '//' → logprob: -2.1844077110290527
    3. 'surface' → logprob: -3.5594077110290527
    4. ' surface' → logprob: -3.6844077110290527
    5. '   ' → logprob: -6.934407711029053
    6. ' ' → logprob: -7.059407711029053
    7. '(surface' → logprob: -8.434408187866211
    8. ' ' → logprob: -9.184408187866211
    9. '_surface' → logprob: -9.809408187866211
    10. 'div' → logprob: -11.184408187866211

Token 227: ' b' (ID: 287)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0008048642775975168
    2. ' ' → logprob: -7.125804901123047
    3. '   ' → logprob: -15.125804901123047
    4. '  ' → logprob: -16.875804901123047
    5. 'b' → logprob: -17.625804901123047
    6. '1' → logprob: -17.750804901123047
    7. 'surface' → logprob: -18.375804901123047
    8. ')' → logprob: -19.000804901123047
    9. ' ' → logprob: -19.125804901123047
    10. '
' → logprob: -19.375804901123047

Token 228: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009872245602309704
    2. '))' → logprob: -5.2598724365234375
    3. ' )' → logprob: -6.0098724365234375
    4. '   ' → logprob: -6.8848724365234375
    5. ')
' → logprob: -7.2598724365234375
    6. 'surface' → logprob: -8.884872436523438
    7. '       ' → logprob: -9.634872436523438
    8. ' ' → logprob: -10.009872436523438
    9. ')))' → logprob: -10.134872436523438
    10. ' ))' → logprob: -10.259872436523438

Token 229: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0003886086633428931
    2. 'return' → logprob: -8.625388145446777
    3. '
' → logprob: -9.125388145446777
    4. ' return' → logprob: -9.250388145446777
    5. '        
' → logprob: -13.625388145446777
    6. '           ' → logprob: -14.375388145446777
    7. '
' → logprob: -14.750388145446777
    8. '      ' → logprob: -15.000388145446777
    9. '   ' → logprob: -15.125388145446777
    10. '    ' → logprob: -15.375388145446777

Token 230: ' nb' (ID: 28791)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02620624005794525
    2. ' return' → logprob: -4.151206016540527
    3. '       ' → logprob: -4.651206016540527
    4. 'result' → logprob: -7.526206016540527
    5. 'max' → logprob: -10.901206016540527
    6. ' result' → logprob: -12.526206016540527
    7. '   ' → logprob: -12.526206016540527
    8. 'surface' → logprob: -13.026206016540527
    9. 'res' → logprob: -14.026206016540527
    10. 'dom' → logprob: -14.776206016540527

Token 231: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -0.0035419787745922804
    2. '_' → logprob: -6.503541946411133
    3. '_d' → logprob: -7.003541946411133
    4. ' =' → logprob: -7.503541946411133
    5. 'dom' → logprob: -9.003541946411133
    6. '_places' → logprob: -9.378541946411133
    7. '   ' → logprob: -9.628541946411133
    8. '_pos' → logprob: -9.753541946411133
    9. '_max' → logprob: -9.753541946411133
    10. '_place' → logprob: -9.753541946411133

Token 232: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.08404441177845001
    2. 'ino' → logprob: -2.5840444564819336
    3. 'in' → logprob: -6.334044456481934
    4. '   ' → logprob: -6.584044456481934
    5. '_dom' → logprob: -7.959044456481934
    6. 'ines' → logprob: -8.209044456481934
    7. '_' → logprob: -8.584044456481934
    8. '_in' → logprob: -8.709044456481934
    9. '	' → logprob: -9.209044456481934
    10. 'dom' → logprob: -9.584044456481934

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196858361363411
    2. '=' → logprob: -2.8119685649871826
    3. ' ' → logprob: -14.561968803405762
    4. '   ' → logprob: -14.811968803405762
    5. ' ' → logprob: -16.936967849731445
    6. ')' → logprob: -17.561967849731445
    7. '=int' → logprob: -18.186967849731445
    8. '    ' → logprob: -18.311967849731445
    9. ' =
' → logprob: -19.061967849731445
    10. '＝' → logprob: -19.061967849731445

Token 234: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.49350878596305847
    2. ' (' → logprob: -1.4935088157653809
    3. '-' → logprob: -2.368508815765381
    4. '   ' → logprob: -3.493508815765381
    5. '(surface' → logprob: -4.118508815765381
    6. '-s' → logprob: -4.368508815765381
    7. '-(' → logprob: -4.993508815765381
    8. ' ' → logprob: -6.618508815765381
    9. '  ' → logprob: -6.993508815765381
    10. '(-' → logprob: -7.118508815765381

Token 235: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.02429341711103916
    2. '(surface' → logprob: -3.7742934226989746
    3. '(' → logprob: -7.399293422698975
    4. '(-(' → logprob: -8.024292945861816
    5. '-(' → logprob: -9.774292945861816
    6. '-' → logprob: -10.774292945861816
    7. ' (-' → logprob: -11.524292945861816
    8. 'surface' → logprob: -11.899292945861816
    9. ' (' → logprob: -12.149292945861816
    10. '((-' → logprob: -12.399292945861816

Token 236: 'surface' (ID: 86531)
  Prédit: 'surface'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'surface' → logprob: -7.171581091824919e-05
    2. '(surface' → logprob: -10.12507152557373
    3. ' surface' → logprob: -10.37507152557373
    4. 'surf' → logprob: -15.50007152557373
    5. 'sur' → logprob: -16.125072479248047
    6. '   ' → logprob: -17.500072479248047
    7. '(' → logprob: -18.000072479248047
    8. '_surface' → logprob: -18.250072479248047
    9. 'Surface' → logprob: -18.625072479248047
    10. '.surface' → logprob: -18.750072479248047

Token 237: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.014348127879202366
    2. '//' → logprob: -4.264348030090332
    3. '   ' → logprob: -9.014348030090332
    4. ' ' → logprob: -10.639348030090332
    5. '    ' → logprob: -11.139348030090332
    6. '       ' → logprob: -11.389348030090332
    7. ' /' → logprob: -11.889348030090332
    8. ' ' → logprob: -12.764348030090332
    9. ')' → logprob: -14.139348030090332
    10. '        ' → logprob: -14.264348030090332

Token 238: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.32654589228332e-05
    2. ' ' → logprob: -9.875073432922363
    3. '   ' → logprob: -10.750073432922363
    4. '       ' → logprob: -16.000072479248047
    5. '  ' → logprob: -16.625072479248047
    6. '```' → logprob: -16.625072479248047
    7. '    ' → logprob: -17.500072479248047
    8. '           ' → logprob: -17.500072479248047
    9. '
' → logprob: -17.750072479248047
    10. '     ' → logprob: -18.500072479248047

Token 239: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.6550729419104755e-05
    2. ' ' → logprob: -10.250036239624023
    3. '   ' → logprob: -14.000036239624023
    4. '
' → logprob: -16.125036239624023
    5. '```' → logprob: -16.875036239624023
    6. '  ' → logprob: -18.750036239624023
    7. '۲' → logprob: -19.375036239624023
    8. 'def' → logprob: -19.500036239624023
    9. '       ' → logprob: -19.500036239624023
    10. '２' → logprob: -20.375036239624023

Token 240: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2522099018096924
    2. ')
' → logprob: -1.5022099018096924
    3. '   ' → logprob: -8.752209663391113
    4. ')
' → logprob: -9.377209663391113
    5. '       ' → logprob: -10.252209663391113
    6. ')`
' → logprob: -14.127209663391113
    7. ')

' → logprob: -14.627209663391113
    8. ' )' → logprob: -14.752209663391113
    9. ')return' → logprob: -14.752209663391113
    10. ' )
' → logprob: -15.252209663391113

Token 241: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.048662420362234116
    2. '       ' → logprob: -3.0486624240875244
    3. 'else' → logprob: -9.923662185668945
    4. 'return' → logprob: -11.298662185668945
    5. ' else' → logprob: -11.673662185668945
    6. ' return' → logprob: -13.423662185668945
    7. '    
' → logprob: -14.173662185668945
    8. '
' → logprob: -14.423662185668945
    9. '```' → logprob: -14.423662185668945
    10. '        
' → logprob: -14.923662185668945

Token 242: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07319708913564682
    2. 'return' (adapté à ' return') → logprob: -2.94819712638855
    3. '       ' → logprob: -4.323196887969971
    4. 'else' → logprob: -5.823196887969971
    5. ' return' → logprob: -6.323196887969971
    6. ' else' → logprob: -8.948197364807129
    7. ' ' → logprob: -13.198197364807129
    8. '	return' → logprob: -13.323197364807129
    9. '  ' → logprob: -13.573197364807129
    10. ':return' → logprob: -14.323197364807129

Token 243: ' nb' (ID: 28791)
  Prédit: ' nb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nb' → logprob: -0.1269317865371704
    2. 'nb' → logprob: -2.126931667327881
    3. '	nb' → logprob: -13.126932144165039
    4. '(nb' → logprob: -14.001932144165039
    5. '_nb' → logprob: -14.501932144165039
    6. '   ' → logprob: -16.25193214416504
    7. ' ' → logprob: -16.50193214416504
    8. '    ' → logprob: -16.87693214416504
    9. ' ' → logprob: -17.25193214416504
    10. '       ' → logprob: -17.37693214416504

Token 244: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -2.3438327843905427e-05
    2. '_' → logprob: -10.75002384185791
    3. 'dom' → logprob: -14.12502384185791
    4. ' _' → logprob: -14.37502384185791
    5. '_DOM' → logprob: -15.62502384185791
    6. '_d' → logprob: -15.75002384185791
    7. '_doc' → logprob: -15.87502384185791
    8. '_surface' → logprob: -17.000022888183594
    9. '_domains' → logprob: -17.000022888183594
    10. '_domain' → logprob: -17.125022888183594

Token 245: 'inos' (ID: 8200)
  Prédit: 'inos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inos' → logprob: -0.01627306453883648
    2. 'os' → logprob: -4.141273021697998
    3. 'ino' → logprob: -9.891273498535156
    4. 'es' → logprob: -9.891273498535156
    5. 'ios' → logprob: -9.891273498535156
    6. 'ines' → logprob: -10.641273498535156
    7. 'in' → logprob: -11.266273498535156
    8. 'icos' → logprob: -11.266273498535156
    9. 'o' → logprob: -12.141273498535156
    10. 'oes' → logprob: -12.266273498535156

Token 246: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004754751571454108
    2. '
' → logprob: -8.125475883483887
    3. 'else' → logprob: -9.125475883483887
    4. '    
' → logprob: -9.625475883483887
    5. ' else' → logprob: -12.750475883483887
    6. 'return' → logprob: -13.500475883483887
    7. '	else' → logprob: -16.50047492980957
    8. '        
' → logprob: -16.62547492980957
    9. '       ' → logprob: -17.00047492980957
    10. '  
' → logprob: -17.37547492980957

Token 247: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0034228316508233547
    2. '    
' → logprob: -5.878422737121582
    3. '
' → logprob: -8.253422737121582
    4. 'else' → logprob: -8.253422737121582
    5. ' else' → logprob: -9.378422737121582
    6. ' 
' → logprob: -12.503422737121582
    7. '  
' → logprob: -13.003422737121582
    8. '        
' → logprob: -13.003422737121582
    9. '   
' → logprob: -13.128422737121582
    10. '	else' → logprob: -13.878422737121582

Token 248: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10594339668750763
    2. 'else' (adapté à ' else') → logprob: -2.355943441390991
    3. 'return' → logprob: -5.605943202972412
    4. ' else' → logprob: -6.230943202972412
    5. '    
' → logprob: -10.23094367980957
    6. '
' → logprob: -10.73094367980957
    7. ' return' → logprob: -11.10594367980957
    8. ' ' → logprob: -13.60594367980957
    9. ' 
' → logprob: -14.73094367980957
    10. '	else' → logprob: -14.73094367980957

Token 249: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23084983229637146
    2. ':' → logprob: -1.7308498620986938
    3. ':
' → logprob: -3.6058497428894043
    4. '   ' → logprob: -6.355849742889404
    5. ' :
' → logprob: -10.605850219726562
    6. ' :' → logprob: -10.855850219726562
    7. '    ' → logprob: -11.230850219726562
    8. ':return' → logprob: -11.605850219726562
    9. '
' → logprob: -11.980850219726562
    10. ',' → logprob: -12.230850219726562

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06873020529747009
    2. '1' → logprob: -3.443730115890503
    3. '   ' → logprob: -3.568730115890503
    4. ' return' → logprob: -5.318730354309082
    5. 'return' → logprob: -6.693730354309082
    6. ' ' → logprob: -9.068730354309082
    7. '    ' → logprob: -10.568730354309082
    8. '           ' → logprob: -13.193730354309082
    9. '     ' → logprob: -13.818730354309082
    10. '      ' → logprob: -13.943730354309082

Token 251: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.05858510732650757
    2. ' return' → logprob: -3.1835851669311523
    3. '       ' → logprob: -4.683585166931152
    4. '1' → logprob: -5.558585166931152
    5. '   ' → logprob: -6.058585166931152
    6. ' ' → logprob: -11.058585166931152
    7. '    ' → logprob: -12.183585166931152
    8. '0' → logprob: -13.183585166931152
    9. '	return' → logprob: -13.808585166931152
    10. '  ' → logprob: -14.183585166931152

Token 252: ' Sinon' (ID: 154924)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0012971388641744852
    2. ' return' → logprob: -6.7512969970703125
    3. '   ' → logprob: -9.376296997070312
    4. '1' → logprob: -10.126296997070312
    5. '       ' → logprob: -13.376296997070312
    6. 'ret' → logprob: -15.376296997070312
    7. '```' → logprob: -15.876296997070312
    8. 're' → logprob: -16.876296997070312
    9. '    ' → logprob: -16.876296997070312
    10. '	return' → logprob: -17.876296997070312

Token 253: ',' (ID: 11)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2742978036403656
    2. '       ' → logprob: -1.524297833442688
    3. 'return' → logprob: -3.8992977142333984
    4. '   ' → logprob: -6.649297714233398
    5. '    ' → logprob: -7.524297714233398
    6. ' ' → logprob: -11.899297714233398
    7. '	return' → logprob: -12.649297714233398
    8. '     ' → logprob: -12.649297714233398
    9. ' ' → logprob: -12.774297714233398
    10. '    ' → logprob: -12.899297714233398

Token 254: ' il' (ID: 1793)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3905261158943176
    2. 'return' → logprob: -1.1405260562896729
    3. '       ' → logprob: -5.640526294708252
    4. '   ' → logprob: -9.265525817871094
    5. '1' → logprob: -14.140525817871094
    6. ' ' → logprob: -14.265525817871094
    7. '    ' → logprob: -14.390525817871094
    8. '	return' → logprob: -14.390525817871094
    9. ' ' → logprob: -16.265525817871094
    10. '           ' → logprob: -17.015525817871094

Token 255: ' n' (ID: 297)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41766613721847534
    2. '   ' → logprob: -1.6676661968231201
    3. 'return' → logprob: -1.9176661968231201
    4. ' ' → logprob: -6.167665958404541
    5. ' y' → logprob: -6.417665958404541
    6. '    ' → logprob: -7.917665958404541
    7. '  ' → logprob: -8.0426664352417
    8. ' is' → logprob: -8.1676664352417
    9. ' faut' → logprob: -8.1676664352417
    10. '       ' → logprob: -8.4176664352417

Token 256: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025296205654740334
    2. ' return' → logprob: -4.900296211242676
    3. '       ' → logprob: -5.025296211242676
    4. ' y' → logprob: -5.025296211242676
    5. 'return' → logprob: -6.150296211242676
    6. '    ' → logprob: -7.525296211242676
    7. 'est' → logprob: -8.150296211242676
    8. 'f' → logprob: -8.275296211242676
    9. ' ' → logprob: -8.400296211242676
    10. ' faut' → logprob: -8.525296211242676

Token 257: ' possible' (ID: 4149)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.4318409264087677
    2. 'possible' → logprob: -1.0568408966064453
    3. ' possible' → logprob: -6.931840896606445
    4. 'au' → logprob: -7.431840896606445
    5. 'poss' → logprob: -7.431840896606445
    6. ' pas' → logprob: -7.806840896606445
    7. 'pe' → logprob: -8.681840896606445
    8. '   ' → logprob: -9.306840896606445
    9. 'que' → logprob: -10.056840896606445
    10. 'p' → logprob: -10.056840896606445

Token 258: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5314064025878906
    2. 'd' → logprob: -1.5314064025878906
    3. ' d' → logprob: -2.1564064025878906
    4. 'de' → logprob: -3.4064064025878906
    5. '       ' → logprob: -3.5314064025878906
    6. ' de' → logprob: -4.281406402587891
    7. '    ' → logprob: -6.531406402587891
    8. ' ' → logprob: -7.281406402587891
    9. '  ' → logprob: -8.15640640258789
    10. ' au' → logprob: -8.15640640258789

Token 259: ' placer' (ID: 55591)
  Prédit: 'placer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'placer' → logprob: -0.004335764329880476
    2. 'place' → logprob: -6.254335880279541
    3. '1' → logprob: -6.379335880279541
    4. 'return' → logprob: -8.504335403442383
    5. 'plac' → logprob: -8.629335403442383
    6. 'mettre' → logprob: -9.004335403442383
    7. ' placer' → logprob: -9.504335403442383
    8. 'placed' → logprob: -10.129335403442383
    9. 'poser' → logprob: -10.629335403442383
    10. 'pl' → logprob: -11.004335403442383

Token 260: ' qu' (ID: 474)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1146579161286354
    2. ' ' → logprob: -2.8646578788757324
    3. ' au' → logprob: -3.2396578788757324
    4. 'au' → logprob: -4.739657878875732
    5. '   ' → logprob: -6.364657878875732
    6. ' un' → logprob: -6.614657878875732
    7. 'un' → logprob: -8.36465835571289
    8. ' at' → logprob: -10.23965835571289
    9. '    ' → logprob: -10.48965835571289
    10. '       ' → logprob: -10.98965835571289

Token 261: ''un' (ID: 9788)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.32079416513442993
    2. ''au' → logprob: -1.3207941055297852
    3. '   ' → logprob: -5.945794105529785
    4. '1' → logprob: -6.320794105529785
    5. ''un' → logprob: -6.945794105529785
    6. ' au' → logprob: -6.945794105529785
    7. '’au' → logprob: -7.195794105529785
    8. 'un' → logprob: -8.320794105529785
    9. '       ' → logprob: -9.820794105529785
    10. 'u' → logprob: -10.695794105529785

Token 262: ' seul' (ID: 33041)
  Prédit: ' seul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seul' → logprob: -0.0005399276851676404
    2. ' seule' → logprob: -8.625539779663086
    3. 'se' → logprob: -9.125539779663086
    4. ' unique' → logprob: -9.500539779663086
    5. ' domino' → logprob: -9.625539779663086
    6. ' ' → logprob: -10.375539779663086
    7. '1' → logprob: -10.625539779663086
    8. ' espace' → logprob: -10.750539779663086
    9. ' only' → logprob: -11.750539779663086
    10. ' se' → logprob: -11.875539779663086

Token 263: ' domino' (ID: 133589)
  Prédit: ' domino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' domino' → logprob: -0.15129034221172333
    2. 'dom' → logprob: -2.0262904167175293
    3. ' dom' → logprob: -5.401290416717529
    4. ' ' → logprob: -6.276290416717529
    5. ' espace' → logprob: -6.401290416717529
    6. ' domaine' → logprob: -9.151289939880371
    7. '_dom' → logprob: -9.526289939880371
    8. ' ' → logprob: -9.901289939880371
    9. '(dom' → logprob: -10.276289939880371
    10. ' space' → logprob: -10.526289939880371

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026099022943526506
    2. 'return' → logprob: -6.502609729766846
    3. ' return' → logprob: -7.752609729766846
    4. '
' → logprob: -7.877609729766846
    5. '   ' → logprob: -8.252610206604004
    6. '        
' → logprob: -11.752610206604004
    7. '	' → logprob: -12.252610206604004
    8. '.' → logprob: -12.502610206604004
    9. '           ' → logprob: -12.502610206604004
    10. ' 
' → logprob: -12.877610206604004

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011477354913949966
    2. '   ' → logprob: -5.261477470397949
    3. ' return' → logprob: -5.761477470397949
    4. 'return' → logprob: -5.886477470397949
    5. '
' → logprob: -8.26147747039795
    6. ' 
' → logprob: -11.76147747039795
    7. '    
' → logprob: -11.88647747039795
    8. '	return' → logprob: -11.88647747039795
    9. '        
' → logprob: -12.38647747039795
    10. '	' → logprob: -12.38647747039795

Token 266: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0026347534731030464
    2. ' return' → logprob: -6.252634525299072
    3. '1' → logprob: -7.377634525299072
    4. '       ' → logprob: -10.00263500213623
    5. '   ' → logprob: -10.25263500213623
    6. '	return' → logprob: -16.377634048461914
    7. 'ret' → logprob: -16.627634048461914
    8. ' ' → logprob: -16.752634048461914
    9. 'eturn' → logprob: -17.502634048461914
    10. '0' → logprob: -17.627634048461914

Token 267: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.061967797577381134
    2. ' ' → logprob: -2.8119678497314453
    3. '   ' → logprob: -16.311967849731445
    4. ' ' → logprob: -17.061967849731445
    5. '```' → logprob: -18.936967849731445
    6. '0' → logprob: -19.811967849731445
    7. '  ' → logprob: -20.499467849731445
    8. '	' → logprob: -20.624467849731445
    9. '１' → logprob: -20.936967849731445
    10. '2' → logprob: -21.061967849731445

Token 268: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '   ' → logprob: -20.25
    4. '```' → logprob: -21.375
    5. '１' → logprob: -23.25
    6. '0' → logprob: -24.25
    7. '۱' → logprob: -24.25
    8. '2' → logprob: -24.875
    9. '  ' → logprob: -25.0
    10. '`' → logprob: -25.0

Token 269: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 270: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 271: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0031825865153223276
    2. '__' → logprob: -5.753182411193848
    3. ' _' → logprob: -13.128182411193848
    4. ' ' → logprob: -13.503182411193848
    5. ' ' → logprob: -14.128182411193848
    6. '_' → logprob: -14.253182411193848
    7. '_name' → logprob: -15.753182411193848
    8. ' ___' → logprob: -17.503183364868164
    9. 'name' → logprob: -18.128183364868164
    10. '  ' → logprob: -18.503183364868164

Token 272: 'name' (ID: 897)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5670345425605774
    2. '__' → logprob: -0.9420345425605774
    3. ' ==' → logprob: -3.3170344829559326
    4. 'name' → logprob: -5.067034721374512
    5. '==' → logprob: -8.567034721374512
    6. ' if' → logprob: -9.817034721374512
    7. 'if' → logprob: -9.942034721374512
    8. '_name' → logprob: -10.942034721374512
    9. '```' → logprob: -11.442034721374512
    10. ' =="' → logprob: -11.692034721374512

Token 273: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -9.088346359931165e-07
    2. '==' → logprob: -14.500000953674316
    3. '__.__' → logprob: -16.0
    4. '_' → logprob: -16.25
    5. '____' → logprob: -16.625
    6. '___' → logprob: -16.625
    7. '__.' → logprob: -18.625
    8. '__
' → logprob: -18.75
    9. ' ==' → logprob: -18.75
    10. '__

' → logprob: -19.0

Token 274: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003048893064260483
    2. '==' → logprob: -6.253048896789551
    3. ' ==' → logprob: -6.878048896789551
    4. '=="' → logprob: -9.37804889678955
    5. '__.__' → logprob: -13.62804889678955
    6. '_' → logprob: -13.87804889678955
    7. '=='' → logprob: -14.00304889678955
    8. ' __' → logprob: -15.00304889678955
    9. ' ' → logprob: -15.25304889678955
    10. '__":
' → logprob: -15.37804889678955

Token 275: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004713376518338919
    2. ''' → logprob: -5.504713535308838
    3. ' "__' → logprob: -7.379713535308838
    4. '__' → logprob: -11.62971305847168
    5. ' '__' → logprob: -13.25471305847168
    6. '"name' → logprob: -16.37971305847168
    7. '"_' → logprob: -16.62971305847168
    8. '("__' → logprob: -17.00471305847168
    9. '"user' → logprob: -17.12971305847168
    10. ' "' → logprob: -17.37971305847168

Token 276: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -9.088346359931165e-07
    2. 'name' → logprob: -14.000000953674316
    3. ' main' → logprob: -17.75
    4. '_main' → logprob: -18.5
    5. 'ma' → logprob: -20.625
    6. '__' → logprob: -21.25
    7. '	main' → logprob: -22.875
    8. '-main' → logprob: -23.5
    9. 'm' → logprob: -23.625
    10. 'mai' → logprob: -23.75

Token 277: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.31328123807907104
    2. '__' → logprob: -1.3132812976837158
    3. '__':
' → logprob: -11.563281059265137
    4. '__:' → logprob: -11.938281059265137
    5. '_' → logprob: -12.813281059265137
    6. '__["' → logprob: -14.688281059265137
    7. '___' → logprob: -16.563282012939453
    8. '__",' → logprob: -16.813282012939453
    9. '__
' → logprob: -16.938282012939453
    10. '__
' → logprob: -17.938282012939453

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14953601360321045
    2. ':' → logprob: -2.1495361328125
    3. '<|end|>' → logprob: -4.7745361328125
    4. ':
' → logprob: -4.8995361328125
    5. '    
' → logprob: -6.3995361328125
    6. '```' → logprob: -7.2745361328125
    7. '\' → logprob: -7.5245361328125
    8. '
' → logprob: -7.5245361328125
    9. '<|end|>' → logprob: -7.7745361328125
    10. 'n' → logprob: -8.0245361328125

Token 279: ' #' (ID: 1069)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.06142938509583473
    2. ' import' → logprob: -3.311429500579834
    3. 'h' → logprob: -4.311429500579834
    4. 'import' → logprob: -5.311429500579834
    5. '   ' → logprob: -5.436429500579834
    6. ' n' → logprob: -8.311429023742676
    7. ' #' → logprob: -10.436429023742676
    8. ' print' → logprob: -10.561429023742676
    9. ' for' → logprob: -10.936429023742676
    10. ' test' → logprob: -10.936429023742676

Token 280: ' Lecture' (ID: 106534)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.39448073506355286
    2. ' h' → logprob: -1.5194807052612305
    3. '#' → logprob: -2.7694807052612305
    4. 'import' → logprob: -4.6444807052612305
    5. 'print' → logprob: -4.8944807052612305
    6. 'test' → logprob: -4.8944807052612305
    7. ' test' → logprob: -5.2694807052612305
    8. 'ha' → logprob: -5.3944807052612305
    9. ' #' → logprob: -6.2694807052612305
    10. 'n' → logprob: -6.6444807052612305

Token 281: ' des' (ID: 731)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1295958012342453
    2. '   ' → logprob: -2.6295957565307617
    3. '(' → logprob: -3.6295957565307617
    4. ' =' → logprob: -4.629595756530762
    5. 'import' → logprob: -5.504595756530762
    6. 's' → logprob: -5.629595756530762
    7. ' des' → logprob: -6.629595756530762
    8. '_' → logprob: -7.379595756530762
    9. ':' → logprob: -8.129595756530762
    10. '=' → logprob: -8.129595756530762

Token 282: ' dimensions' (ID: 23995)
  Prédit: 'dimensions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dimensions' → logprob: -1.2762010097503662
    2. ' dimensions' → logprob: -1.7762010097503662
    3. ' h' → logprob: -2.026201009750366
    4. 'h' → logprob: -2.026201009750366
    5. ' valeurs' → logprob: -2.026201009750366
    6. 'val' → logprob: -2.526201009750366
    7. 'import' → logprob: -3.651201009750366
    8. 'ha' → logprob: -4.401201248168945
    9. ' ' → logprob: -4.776201248168945
    10. '   ' → logprob: -5.151201248168945

Token 283: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015762055292725563
    2. ' =' → logprob: -4.640761852264404
    3. 'import' → logprob: -6.015761852264404
    4. ',' → logprob: -7.015761852264404
    5. '()' → logprob: -7.390761852264404
    6. 'h' → logprob: -7.390761852264404
    7. ':' → logprob: -8.015762329101562
    8. '=' → logprob: -8.390762329101562
    9. 's' → logprob: -8.890762329101562
    10. '(h' → logprob: -9.015762329101562

Token 284: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.11960643529891968
    2. 'l' → logprob: -3.1196064949035645
    3. 'la' → logprob: -3.1196064949035645
    4. '   ' → logprob: -4.1196064949035645
    5. ' l' → logprob: -4.9946064949035645
    6. ' ' → logprob: -7.1196064949035645
    7. 'h' → logprob: -8.744606018066406
    8. 'input' → logprob: -9.369606018066406
    9. ' grille' → logprob: -9.369606018066406
    10. ' input' → logprob: -9.994606018066406

Token 285: ' grille' (ID: 99153)
  Prédit: ' grille'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grille' → logprob: -0.31333020329475403
    2. 'gr' → logprob: -1.3133301734924316
    3. ' gr' → logprob: -10.31333065032959
    4. 'grid' → logprob: -10.81333065032959
    5. 'import' → logprob: -12.18833065032959
    6. ' grid' → logprob: -12.68833065032959
    7. '   ' → logprob: -13.18833065032959
    8. ' ' → logprob: -13.68833065032959
    9. 'ligne' → logprob: -13.81333065032959
    10. '_gr' → logprob: -15.06333065032959

Token 286: ' en' (ID: 469)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003945894539356232
    2. ' h' → logprob: -6.628945827484131
    3. '    
' → logprob: -7.378945827484131
    4. ',' → logprob: -7.503945827484131
    5. 'h' → logprob: -7.503945827484131
    6. 'n' → logprob: -8.128946304321289
    7. 'import' → logprob: -9.128946304321289
    8. ' =' → logprob: -9.253946304321289
    9. 's' → logprob: -9.378946304321289
    10. ':' → logprob: -9.753946304321289

Token 287: ' une' (ID: 2463)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9594249725341797
    2. 'entrée' → logprob: -1.0844249725341797
    3. ' input' → logprob: -1.5844249725341797
    4. ' entrée' → logprob: -2.9594249725341797
    5. '   ' → logprob: -4.95942497253418
    6. 'entr' → logprob: -5.58442497253418
    7. 's' → logprob: -6.33442497253418
    8. 'ligne' → logprob: -6.58442497253418
    9. 'ent' → logprob: -6.70942497253418
    10. 'entrant' → logprob: -6.95942497253418

Token 288: ' ligne' (ID: 19583)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.2103632241487503
    2. ' seule' → logprob: -2.7103631496429443
    3. ' ligne' → logprob: -2.7103631496429443
    4. 'se' → logprob: -2.9603631496429443
    5. 'line' → logprob: -6.460363388061523
    6. 'l' → logprob: -6.960363388061523
    7. ' ' → logprob: -7.460363388061523
    8. 'single' → logprob: -7.585363388061523
    9. 'entrée' → logprob: -7.835363388061523
    10. 'input' → logprob: -8.960363388061523

Token 289: ' sépar' (ID: 97160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013370916247367859
    2. ',' → logprob: -5.013370990753174
    3. 'n' → logprob: -6.263370990753174
    4. 's' → logprob: -6.763370990753174
    5. ':' → logprob: -6.763370990753174
    6. '    
' → logprob: -7.138370990753174
    7. 'input' → logprob: -7.638370990753174
    8. ' =' → logprob: -8.013370513916016
    9. 'h' → logprob: -9.388370513916016
    10. 'a' → logprob: -9.388370513916016

Token 290: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3397810757160187
    2. 'ées' → logprob: -1.4647810459136963
    3. 'é' → logprob: -3.2147810459136963
    4. 'e' → logprob: -5.214781284332275
    5. 'ate' → logprob: -5.839781284332275
    6. 'és' → logprob: -5.964781284332275
    7. ' par' → logprob: -6.464781284332275
    8. 'par' → logprob: -7.089781284332275
    9. ' ' → logprob: -7.214781284332275
    10. ',' → logprob: -7.339781284332275

Token 291: ' par' (ID: 686)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1475057601928711
    2. 'h' → logprob: -2.147505760192871
    3. ' h' → logprob: -4.897505760192871
    4. ',' → logprob: -5.022505760192871
    5. 's' → logprob: -7.022505760192871
    6. '    
' → logprob: -7.147505760192871
    7. ' =' → logprob: -7.147505760192871
    8. ':' → logprob: -7.772505760192871
    9. 'n' → logprob: -7.772505760192871
    10. ' line' → logprob: -7.897505760192871

Token 292: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.037643179297447205
    2. ' un' → logprob: -4.037642955780029
    3. 'des' → logprob: -4.662642955780029
    4. 'es' → logprob: -5.537642955780029
    5. 'esp' → logprob: -6.912642955780029
    6. ''' → logprob: -6.912642955780029
    7. ''un' → logprob: -7.162642955780029
    8. 'space' → logprob: -7.287642955780029
    9. 'l' → logprob: -7.537642955780029
    10. ' des' → logprob: -7.662642955780029

Token 293: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.4992671012878418
    2. 'es' → logprob: -0.9992671012878418
    3. 'esp' → logprob: -4.374267101287842
    4. ''espace' → logprob: -4.749267101287842
    5. 'space' → logprob: -6.249267101287842
    6. '’espace' → logprob: -7.749267101287842
    7. ' ' → logprob: -7.874267101287842
    8. 'e' → logprob: -8.249267578125
    9. ''' → logprob: -8.374267578125
    10. ' space' → logprob: -8.749267578125

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004016072489321232
    2. '    
' → logprob: -6.629015922546387
    3. 'input' → logprob: -7.004015922546387
    4. ',' → logprob: -7.629015922546387
    5. 's' → logprob: -8.129015922546387
    6. ' =' → logprob: -8.879015922546387
    7. 'n' → logprob: -9.004015922546387
    8. '    ' → logprob: -9.004015922546387
    9. '  ' → logprob: -9.504015922546387
    10. ' input' → logprob: -9.629015922546387

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014719503931701183
    2. ' line' → logprob: -4.389719486236572
    3. 'dimensions' → logprob: -7.389719486236572
    4. ' dimensions' → logprob: -7.764719486236572
    5. '    
' → logprob: -8.26471996307373
    6. ' ligne' → logprob: -8.63971996307373
    7. ' input' → logprob: -9.01471996307373
    8. 'input' → logprob: -9.26471996307373
    9. 'line' → logprob: -9.26471996307373
    10. ' lignes' → logprob: -9.38971996307373

Token 296: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.18917112052440643
    2. ' h' → logprob: -1.8141710758209229
    3. 'dimensions' → logprob: -5.439171314239502
    4. ' line' → logprob: -6.439171314239502
    5. ' dimensions' → logprob: -6.564171314239502
    6. 'line' → logprob: -7.439171314239502
    7. 'ligne' → logprob: -7.939171314239502
    8. 'dims' → logprob: -8.314170837402344
    9. '   ' → logprob: -8.439170837402344
    10. 'input' → logprob: -8.814170837402344

Token 297: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1928003813372925e-05
    2. ',w' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.625051498413086
    4. '=' → logprob: -14.000051498413086
    5. ' =' → logprob: -14.625051498413086
    6. 'w' → logprob: -14.750051498413086
    7. ',
' → logprob: -15.000051498413086
    8. 's' → logprob: -15.250051498413086
    9. ',

' → logprob: -15.875051498413086
    10. ',s' → logprob: -16.250051498413086

Token 298: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.3132671117782593
    2. 'w' → logprob: -1.3132671117782593
    3. ' ' → logprob: -12.56326675415039
    4. ' ' → logprob: -14.43826675415039
    5. '<|end|>' → logprob: -14.56326675415039
    6. ' ' → logprob: -15.06326675415039
    7. '  ' → logprob: -15.43826675415039
    8. 'space' → logprob: -16.31326675415039
    9. '	w' → logprob: -16.31326675415039
    10. '=' → logprob: -17.06326675415039

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020828247070312
    2. '=' → logprob: -2.350208282470703
    3. '=input' → logprob: -14.100208282470703
    4. ')' → logprob: -14.975208282470703
    5. ',' → logprob: -15.600208282470703
    6. '=int' → logprob: -15.850208282470703
    7. '<|end|>' → logprob: -16.225208282470703
    8. ' ' → logprob: -17.350208282470703
    9. ' =
' → logprob: -17.350208282470703
    10. ' ' → logprob: -17.850208282470703

Token 300: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25193095207214355
    2. ' map' → logprob: -1.5019309520721436
    3. '	map' → logprob: -14.126931190490723
    4. '(map' → logprob: -15.001931190490723
    5. '[' → logprob: -15.501931190490723
    6. ' ' → logprob: -15.626931190490723
    7. 'int' → logprob: -15.751931190490723
    8. ' ' → logprob: -16.126930236816406
    9. '   ' → logprob: -16.751930236816406
    10. '.map' → logprob: -17.376930236816406

Token 301: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00029995047952979803
    2. 'int' → logprob: -8.500300407409668
    3. '(' → logprob: -9.250300407409668
    4. ' int' → logprob: -15.250300407409668
    5. '<int' → logprob: -16.37529945373535
    6. '(str' → logprob: -17.12529945373535
    7. '=int' → logprob: -17.12529945373535
    8. '(input' → logprob: -17.25029945373535
    9. '(
' → logprob: -18.25029945373535
    10. '[int' → logprob: -18.37529945373535

Token 302: ',' (ID: 11)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.39047732949256897
    2. '(input' → logprob: -1.1404772996902466
    3. ',input' → logprob: -6.265477180480957
    4. ' input' → logprob: -6.765477180480957
    5. ',' → logprob: -8.390477180480957
    6. ')' → logprob: -8.640477180480957
    7. '   ' → logprob: -9.515477180480957
    8. '(' → logprob: -9.890477180480957
    9. '=input' → logprob: -11.515477180480957
    10. ' ' → logprob: -13.265477180480957

Token 303: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009114635176956654
    2. ' input' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.125911712646484
    4. '(input' → logprob: -19.875911712646484
    5. '=input' → logprob: -20.250911712646484
    6. '	input' → logprob: -20.625911712646484
    7. '<input' → logprob: -21.000911712646484
    8. '```' → logprob: -21.375911712646484
    9. ' ' → logprob: -22.000911712646484
    10. ',input' → logprob: -22.000911712646484

Token 304: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.7120533811976202e-05
    2. '()' → logprob: -11.000017166137695
    3. ' ().' → logprob: -15.625017166137695
    4. '(' → logprob: -16.125017166137695
    5. '("").' → logprob: -17.125017166137695
    6. '("' → logprob: -17.375017166137695
    7. '()
' → logprob: -17.875017166137695
    8. '())' → logprob: -18.875017166137695
    9. ')' → logprob: -19.750017166137695
    10. '.split' → logprob: -20.000017166137695

Token 305: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0007110013975761831
    2. 'strip' → logprob: -7.250710964202881
    3. '().' → logprob: -14.375711441040039
    4. '(split' → logprob: -15.375711441040039
    5. ' split' → logprob: -15.875711441040039
    6. 'rstrip' → logprob: -16.00071144104004
    7. '.split' → logprob: -17.50071144104004
    8. 'read' → logprob: -18.25071144104004
    9. 'spl' → logprob: -18.25071144104004
    10. '_split' → logprob: -19.37571144104004

Token 306: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0026601969730108976
    2. '()))' → logprob: -6.377660274505615
    3. '()' → logprob: -7.377660274505615
    4. ')' → logprob: -8.127659797668457
    5. '))' → logprob: -11.002659797668457
    6. '('' → logprob: -11.502659797668457
    7. '(' → logprob: -11.877659797668457
    8. ' ())' → logprob: -13.627659797668457
    9. '("' → logprob: -14.252659797668457
    10. '())
' → logprob: -14.502659797668457

Token 307: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.570319702499546e-05
    2. ' print' → logprob: -11.500025749206543
    3. '   ' → logprob: -11.625025749206543
    4. '
' → logprob: -12.250025749206543
    5. 'result' → logprob: -14.000025749206543
    6. '```' → logprob: -14.000025749206543
    7. ')' → logprob: -17.125024795532227
    8. '    
' → logprob: -17.375024795532227
    9. '#print' → logprob: -17.750024795532227
    10. '<|end|>' → logprob: -18.250024795532227

Token 308: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1994775377388578e-05
    2. 'result' → logprob: -11.500012397766113
    3. ' print' → logprob: -13.375012397766113
    4. '   ' → logprob: -15.375012397766113
    5. '```' → logprob: -18.000011444091797
    6. '#print' → logprob: -19.250011444091797
    7. '
' → logprob: -19.375011444091797
    8. '    
' → logprob: -19.500011444091797
    9. '#' (adapté à ' #') → logprob: -19.750011444091797
    10. 'prin' → logprob: -19.750011444091797

Token 309: ' Aff' (ID: 13741)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019311357755213976
    2. 'result' → logprob: -6.251931190490723
    3. ' print' → logprob: -13.126931190490723
    4. 'res' → logprob: -14.751931190490723
    5. '   ' → logprob: -17.751930236816406
    6. 'dom' → logprob: -17.876930236816406
    7. ' result' → logprob: -18.126930236816406
    8. 'resultado' → logprob: -18.501930236816406
    9. 'rés' → logprob: -19.001930236816406
    10. 'answer' → logprob: -19.376930236816406

Token 310: 'ichage' (ID: 118475)
  Prédit: 'icher'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icher' → logprob: -0.0009923184989020228
    2. 'iche' → logprob: -7.625992298126221
    3. 'ichage' → logprob: -7.875992298126221
    4. 'ic' → logprob: -9.875992774963379
    5. '   ' → logprob: -10.000992774963379
    6. 'ich' → logprob: -10.750992774963379
    7. '#' → logprob: -12.500992774963379
    8. 'icer' → logprob: -14.000992774963379
    9. 'cher' → logprob: -14.125992774963379
    10. '    ' → logprob: -15.625992774963379

Token 311: ' du' (ID: 1462)
  Prédit: '(com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(com' → logprob: -0.024287480860948563
    2. '(' → logprob: -3.774287462234497
    3. 'compute' → logprob: -7.024287700653076
    4. '(print' → logprob: -8.899287223815918
    5. ' compute' → logprob: -12.149287223815918
    6. '(
' → logprob: -12.149287223815918
    7. '(c' → logprob: -14.024287223815918
    8. '()' → logprob: -14.274287223815918
    9. ' (' → logprob: -14.649287223815918
    10. '   ' → logprob: -14.899287223815918

Token 312: ' résultat' (ID: 62556)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.00017231269157491624
    2. ' compute' → logprob: -8.75017261505127
    3. 'print' → logprob: -11.25017261505127
    4. 'result' → logprob: -14.12517261505127
    5. 'calculate' → logprob: -16.375171661376953
    6. 'computed' → logprob: -18.000171661376953
    7. '.compute' → logprob: -18.625171661376953
    8. 'comput' → logprob: -20.125171661376953
    9. '_compute' → logprob: -20.750171661376953
    10. 'max' → logprob: -20.750171661376953

Token 313: ' calcul' (ID: 7559)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007985608652234077
    2. '   ' → logprob: -5.257985591888428
    3. ' print' → logprob: -6.132985591888428
    4. '(print' → logprob: -7.507985591888428
    5. '
' → logprob: -11.007986068725586
    6. ')' → logprob: -12.757986068725586
    7. '(' → logprob: -13.007986068725586
    8. '```' → logprob: -13.382986068725586
    9. '.print' → logprob: -14.007986068725586
    10. 'result' → logprob: -14.007986068725586

Token 314: 'é' (ID: 377)
  Prédit: 'é'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.2658153474330902
    2. 'compute' → logprob: -1.5158153772354126
    3. '   ' → logprob: -4.640815258026123
    4. 'print' → logprob: -6.390815258026123
    5. 'e' → logprob: -6.515815258026123
    6. ' compute' → logprob: -7.515815258026123
    7. 'ate' → logprob: -8.640815734863281
    8. 'er' → logprob: -9.265815734863281
    9. '_compute' → logprob: -9.515815734863281
    10. 'ée' → logprob: -10.890815734863281

Token 315: ' par' (ID: 686)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0072628892958164215
    2. '   ' → logprob: -5.007262706756592
    3. ' print' → logprob: -8.00726318359375
    4. '(print' → logprob: -8.50726318359375
    5. ')' → logprob: -12.50726318359375
    6. ',' → logprob: -12.63226318359375
    7. '(' → logprob: -13.00726318359375
    8. '```' → logprob: -13.50726318359375
    9. '
' → logprob: -14.88226318359375
    10. '.print' → logprob: -15.25726318359375

Token 316: ' la' (ID: 557)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.051723413169384
    2. 'print' → logprob: -3.3017234802246094
    3. ' compute' → logprob: -4.301723480224609
    4. ' print' → logprob: -10.05172348022461
    5. '   ' → logprob: -14.92672348022461
    6. '_compute' → logprob: -17.05172348022461
    7. 'calculate' → logprob: -17.80172348022461
    8. '(print' → logprob: -18.30172348022461
    9. '.compute' → logprob: -18.55172348022461
    10. 'comput' → logprob: -19.05172348022461

Token 317: ' fonction' (ID: 17610)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.07889111340045929
    2. 'print' → logprob: -2.5788910388946533
    3. ' compute' → logprob: -13.578890800476074
    4. 'calculate' → logprob: -19.07889175415039
    5. '.compute' → logprob: -20.57889175415039
    6. ' print' → logprob: -20.57889175415039
    7. 'printf' → logprob: -20.70389175415039
    8. '```' → logprob: -20.70389175415039
    9. '`' → logprob: -21.20389175415039
    10. '
' → logprob: -21.70389175415039

Token 318: ' compute' (ID: 23864)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.660315895918757e-05
    2. ' print' → logprob: -9.500076293945312
    3. '   ' → logprob: -13.375076293945312
    4. '```' → logprob: -16.375076293945312
    5. '(print' → logprob: -17.625076293945312
    6. 'result' → logprob: -19.875076293945312
    7. 'pr' → logprob: -20.000076293945312
    8. 'prin' → logprob: -20.375076293945312
    9. '.print' → logprob: -20.875076293945312
    10. 'compute' → logprob: -20.875076293945312

Token 319: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -5.319370302458992e-06
    2. 'dom' → logprob: -12.500005722045898
    3. '_' → logprob: -13.375005722045898
    4. '_DOM' → logprob: -18.5000057220459
    5. '_d' → logprob: -19.5000057220459
    6. '_doc' → logprob: -19.5000057220459
    7. '_domain' → logprob: -19.7500057220459
    8. '_nom' → logprob: -20.2500057220459
    9. '\' → logprob: -20.5000057220459
    10. '_def' → logprob: -20.5000057220459

Token 320: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -1.1398757123970427e-05
    2. 'ines' → logprob: -12.625011444091797
    3. 'inos' → logprob: -12.750011444091797
    4. 'ино' → logprob: -13.625011444091797
    5. 'o' → logprob: -14.125011444091797
    6. 'in' → logprob: -14.250011444091797
    7. '_' → logprob: -15.000011444091797
    8. '```' → logprob: -15.125011444091797
    9. ' domino' → logprob: -15.250011444091797
    10. '_dom' → logprob: -15.500011444091797

Token 321: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -7.226628895296017e-06
    2. '```' → logprob: -13.250007629394531
    3. 'les' → logprob: -14.250007629394531
    4. 'ces' → logprob: -14.250007629394531
    5. 'dom' → logprob: -14.250007629394531
    6. '(' → logprob: -14.500007629394531
    7. '()' → logprob: -14.625007629394531
    8. 'ues' → logprob: -14.750007629394531
    9. ')' → logprob: -14.750007629394531
    10. 'ies' → logprob: -15.750007629394531

Token 322: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.265633419388905e-05
    2. '(print' → logprob: -10.625062942504883
    3. '   ' → logprob: -10.750062942504883
    4. ' print' → logprob: -11.500062942504883
    5. '```' → logprob: -12.375062942504883
    6. '()' → logprob: -13.375062942504883
    7. ')' → logprob: -14.625062942504883
    8. '()
' → logprob: -15.250062942504883
    9. '(' → logprob: -16.250062942504883
    10. '
' → logprob: -17.250062942504883

Token 323: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0015104549238458276
    2. '   ' → logprob: -6.5015106201171875
    3. ' print' → logprob: -11.751510620117188
    4. '```' → logprob: -15.376510620117188
    5. '(print' → logprob: -16.376510620117188
    6. '	print' → logprob: -18.126510620117188
    7. '#print' → logprob: -19.626510620117188
    8. '.print' → logprob: -19.626510620117188
    9. '    
' → logprob: -20.001510620117188
    10. '    ' → logprob: -20.251510620117188

Token 324: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -4.320199877838604e-07
    2. ' print' → logprob: -14.75
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -21.375
    5. 'pr' → logprob: -22.625
    6. '
' → logprob: -23.0
    7. 'printf' → logprob: -23.0
    8. 'result' → logprob: -23.25
    9. 'prin' → logprob: -24.125
    10. 'println' → logprob: -25.375

Token 325: '(com' (ID: 27868)
  Prédit: '(com'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(com' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.125018119812012
    3. 'compute' → logprob: -12.625018119812012
    4. ' compute' → logprob: -17.375019073486328
    5. ' (' → logprob: -18.625019073486328
    6. '()' → logprob: -19.125019073486328
    7. '(
' → logprob: -19.125019073486328
    8. '(c' → logprob: -19.750019073486328
    9. '((' → logprob: -20.125019073486328
    10. '.compute' → logprob: -20.250019073486328

Token 326: 'pute' (ID: 13605)
  Prédit: 'pute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pute' → logprob: -0.0009190816199406981
    2. 'ute' → logprob: -7.000918865203857
    3. 'put' → logprob: -12.000919342041016
    4. 'p' → logprob: -14.125919342041016
    5. '_' → logprob: -15.000919342041016
    6. 'pte' → logprob: -15.625919342041016
    7. 'pite' → logprob: -17.000919342041016
    8. 'pose' → logprob: -17.375919342041016
    9. 'oute' → logprob: -17.750919342041016
    10. '_put' → logprob: -17.750919342041016

Token 327: '_dom' (ID: 90214)
  Prédit: '_dom'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dom' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.250000953674316
    3. '_d' → logprob: -16.0
    4. '_DOM' → logprob: -16.625
    5. 'dom' → logprob: -18.125
    6. '_doc' → logprob: -18.125
    7. ' _' → logprob: -19.75
    8. '_do' → logprob: -19.875
    9. '_domain' → logprob: -19.875
    10. '_dim' → logprob: -20.75

Token 328: 'ino' (ID: 2081)
  Prédit: 'ino'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ino' → logprob: -9.698698704596609e-05
    2. 'dom' → logprob: -10.500097274780273
    3. 'o' → logprob: -10.625097274780273
    4. '_dom' → logprob: -10.750097274780273
    5. 'no' → logprob: -11.625097274780273
    6. 'oes' → logprob: -12.375097274780273
    7. ' domino' → logprob: -12.875097274780273
    8. '__' → logprob: -13.500097274780273
    9. '_' → logprob: -13.500097274780273
    10. 'ines' → logprob: -14.125097274780273

Token 329: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -4.286852345103398e-05
    2. 'dom' → logprob: -11.875042915344238
    3. ' es' → logprob: -12.125042915344238
    4. '(h' → logprob: -12.250042915344238
    5. 's' → logprob: -12.500042915344238
    6. '```' → logprob: -12.750042915344238
    7. 'e' → logprob: -12.875042915344238
    8. ')' → logprob: -13.000042915344238
    9. '   ' → logprob: -13.375042915344238
    10. 'ces' → logprob: -13.625042915344238

Token 330: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -6.511406809295295e-06
    2. '(' → logprob: -12.000006675720215
    3. ' (' → logprob: -15.625006675720215
    4. ')' → logprob: -15.875006675720215
    5. 'h' → logprob: -17.1250057220459
    6. ')(' → logprob: -17.6250057220459
    7. ',h' → logprob: -19.0000057220459
    8. '   ' → logprob: -20.2500057220459
    9. '(
' → logprob: -20.5000057220459
    10. '((' → logprob: -20.5000057220459

Token 331: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.080963092041202e-06
    2. ',w' → logprob: -12.750004768371582
    3. ' ,' → logprob: -13.250004768371582
    4. ',
' → logprob: -14.875004768371582
    5. '   ' → logprob: -17.8750057220459
    6. 'w' → logprob: -18.5000057220459
    7. ',

' → logprob: -19.3750057220459
    8. '```' → logprob: -20.5000057220459
    9. '‌,' → logprob: -20.5000057220459
    10. ',
' → logprob: -20.7500057220459

Token 332: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.47407791018486023
    2. ' w' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.724078178405762
    4. ')' → logprob: -14.849078178405762
    5. ' ' → logprob: -17.099077224731445
    6. 's' → logprob: -17.224077224731445
    7. 'space' → logprob: -17.599077224731445
    8. '	w' → logprob: -18.224077224731445
    9. '    ' → logprob: -18.474077224731445
    10. '_w' → logprob: -18.474077224731445

Token 333: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020139472326263785
    2. ')' → logprob: -8.750201225280762
    3. '()))' → logprob: -10.125201225280762
    4. ')))' → logprob: -13.375201225280762
    5. '())' → logprob: -14.500201225280762
    6. '))
' → logprob: -14.750201225280762
    7. '()' → logprob: -15.625201225280762
    8. ' ))' → logprob: -16.625202178955078
    9. '   ' → logprob: -18.875202178955078
    10. ' ' → logprob: -19.000202178955078


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 331
Tokens correctement prédits (1ère position, stricte): 127
Tokens correctement prédits (1ère position, avec adaptation): 134
Tokens correctement prédits (top 10): 234
Précision stricte (1ère position): 38.37%
Précision adaptée (1ère position): 40.48%
Précision (top 10): 70.69%
================================================================================
