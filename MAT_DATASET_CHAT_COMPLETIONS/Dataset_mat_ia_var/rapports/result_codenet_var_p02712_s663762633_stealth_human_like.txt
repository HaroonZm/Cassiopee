================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:18:21
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
answer = 0

# petit boucle pour compter
for val in range(1, n+1):
    # j'ignore les multiples de 3
    if val % 3 == 0:
        continue
    # aussi les multiples de 5, je crois
    if val % 5 == 0:
        continue
    # sinon j'ajoute
    answer = answer + val 

# ça affiche le résultat, normal
print(answer)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005685218493454158
    2. '('' → logprob: -8.000568389892578
    3. ''' → logprob: -9.125568389892578
    4. '```' → logprob: -10.500568389892578
    5. '(n' → logprob: -10.750568389892578
    6. '("("' → logprob: -10.875568389892578
    7. '`' → logprob: -11.000568389892578
    8. '(
' → logprob: -11.000568389892578
    9. '()' → logprob: -12.000568389892578
    10. ')' → logprob: -12.875568389892578

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5846247673034668
    2. ')' → logprob: -0.8346247673034668
    3. '()' → logprob: -5.209624767303467
    4. '())' → logprob: -6.209624767303467
    5. '(
' → logprob: -8.084625244140625
    6. '```' → logprob: -8.959625244140625
    7. '('' → logprob: -9.459625244140625
    8. '')' → logprob: -9.459625244140625
    9. '")' → logprob: -9.584625244140625
    10. '))' → logprob: -10.209625244140625

Token 5: 'answer' (ID: 17021)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8063964247703552
    2. 'if' → logprob: -1.431396484375
    3. 'for' → logprob: -1.931396484375
    4. 's' → logprob: -2.306396484375
    5. 'f' → logprob: -4.056396484375
    6. 'x' → logprob: -4.556396484375
    7. 'a' → logprob: -5.056396484375
    8. ' ' → logprob: -5.306396484375
    9. '\n' → logprob: -5.681396484375
    10. '`' → logprob: -5.681396484375

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.981294572353363
    2. '=' → logprob: -1.6062946319580078
    3. '+' → logprob: -1.8562946319580078
    4. ' =' → logprob: -1.8562946319580078
    5. ' +=' → logprob: -2.606294631958008
    6. '+=' → logprob: -3.981294631958008
    7. '_' → logprob: -4.981294631958008
    8. ' ' → logprob: -5.981294631958008
    9. '(' → logprob: -6.106294631958008
    10. '[:]' → logprob: -6.481294631958008

Token 7: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10798793286085129
    2. ' ' → logprob: -2.357987880706787
    3. ' n' → logprob: -5.982987880706787
    4. 'n' → logprob: -6.232987880706787
    5. '"' → logprob: -6.357987880706787
    6. ''' → logprob: -6.857987880706787
    7. '1' → logprob: -8.607988357543945
    8. ' []' → logprob: -9.607988357543945
    9. ' "' → logprob: -9.732988357543945
    10. 'sum' → logprob: -9.857988357543945

Token 8: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05614814907312393
    2. 'n' → logprob: -3.056148052215576
    3. 'sum' → logprob: -5.931148052215576
    4. '1' → logprob: -6.681148052215576
    5. 'max' → logprob: -6.681148052215576
    6. '"' → logprob: -6.681148052215576
    7. ''' → logprob: -7.681148052215576
    8. ''n' → logprob: -8.681148529052734
    9. 'float' → logprob: -9.181148529052734
    10. 'abs' → logprob: -9.431148529052734

Token 9: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2061106562614441
    2. '
' → logprob: -1.9561107158660889
    3. '\n' → logprob: -3.206110715866089
    4. ' 
' → logprob: -6.58111047744751
    5. ' for' → logprob: -6.83111047744751
    6. '```' → logprob: -6.95611047744751
    7. '  
' → logprob: -8.206110954284668
    8. '\' → logprob: -8.456110954284668
    9. '' → logprob: -8.706110954284668
    10. '
' → logprob: -9.706110954284668

Token 10: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.895480277715251e-06
    2. '```' → logprob: -12.375008583068848
    3. ' for' → logprob: -12.625008583068848
    4. 'f' → logprob: -14.750008583068848
    5. '
' → logprob: -14.875008583068848
    6. 'i' → logprob: -16.000009536743164
    7. '	for' → logprob: -16.625009536743164
    8. ')' → logprob: -17.250009536743164
    9. '\n' → logprob: -17.250009536743164
    10. '' → logprob: -17.500009536743164

Token 11: ' petit' (ID: 20577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08897556364536285
    2. ' for' → logprob: -2.463975667953491
    3. 'f' → logprob: -11.33897590637207
    4. ' ' → logprob: -11.46397590637207
    5. 'n' → logprob: -12.96397590637207
    6. 'i' → logprob: -13.08897590637207
    7. '```' → logprob: -13.08897590637207
    8. 'range' → logprob: -13.58897590637207
    9. ' f' → logprob: -14.08897590637207
    10. 'if' → logprob: -14.21397590637207

Token 12: ' boucle' (ID: 174211)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.20619650185108185
    2. 'e' → logprob: -2.0811965465545654
    3. '_' → logprob: -3.7061965465545654
    4. ' for' → logprob: -4.081196308135986
    5. 'for' → logprob: -5.081196308135986
    6. 's' → logprob: -5.581196308135986
    7. 'es' → logprob: -6.331196308135986
    8. 'er' → logprob: -6.456196308135986
    9. 'est' → logprob: -6.581196308135986
    10. ' _' → logprob: -6.831196308135986

Token 13: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023344479501247406
    2. ' for' → logprob: -3.7733445167541504
    3. 'f' → logprob: -9.898344039916992
    4. 'i' → logprob: -10.773344039916992
    5. '```' → logprob: -11.523344039916992
    6. ' ' → logprob: -11.773344039916992
    7. 's' → logprob: -13.023344039916992
    8. 'r' → logprob: -13.773344039916992
    9. 'fo' → logprob: -13.898344039916992
    10. '' → logprob: -14.023344039916992

Token 14: ' compter' (ID: 81694)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.05781201645731926
    2. 'i' → logprob: -2.932811975479126
    3. '_' → logprob: -5.932812213897705
    4. ' ' → logprob: -8.682811737060547
    5. ' _' → logprob: -9.432811737060547
    6. '_i' → logprob: -12.057811737060547
    7. ' n' → logprob: -12.182811737060547
    8. '  ' → logprob: -12.932811737060547
    9. ' ' → logprob: -13.432811737060547
    10. ' calcul' → logprob: -13.682811737060547

Token 15: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3380102515220642
    2. ' ' → logprob: -1.713010311126709
    3. 'for' → logprob: -2.713010311126709
    4. '_' → logprob: -4.088010311126709
    5. ' i' → logprob: -4.338010311126709
    6. 'i' → logprob: -4.838010311126709
    7. ' in' → logprob: -7.338010311126709
    8. 's' → logprob: -7.713010311126709
    9. 'n' → logprob: -8.46300983428955
    10. ' _' → logprob: -9.08800983428955

Token 16: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20609454810619354
    2. ' for' → logprob: -1.70609450340271
    3. ' ' → logprob: -5.956094741821289
    4. 'i' → logprob: -6.706094741821289
    5. 'f' → logprob: -7.581094741821289
    6. ' i' → logprob: -9.456094741821289
    7. '```' → logprob: -9.456094741821289
    8. '_' → logprob: -10.456094741821289
    9. ' f' → logprob: -10.456094741821289
    10. ' ```' → logprob: -10.831094741821289

Token 17: ' val' (ID: 1459)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6398023366928101
    2. ' ' → logprob: -0.7648023366928101
    3. ' n' → logprob: -5.7648024559021
    4. ' _' → logprob: -6.0148024559021
    5. '  ' → logprob: -7.3898024559021
    6. '_' → logprob: -7.3898024559021
    7. 'i' → logprob: -8.389801979064941
    8. ' ' → logprob: -10.014801979064941
    9. ' ‌' → logprob: -11.014801979064941
    10. ' token' → logprob: -11.139801979064941

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21409176290035248
    2. ' ' → logprob: -1.8390917778015137
    3. 'in' → logprob: -4.714091777801514
    4. 'u' → logprob: -5.214091777801514
    5. 'uer' → logprob: -5.214091777801514
    6. '_' → logprob: -6.089091777801514
    7. 'aire' → logprob: -6.339091777801514
    8. 'a' → logprob: -6.339091777801514
    9. ',' → logprob: -6.839091777801514
    10. 'er' → logprob: -6.839091777801514

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.05502772703766823
    2. 'range' → logprob: -2.930027723312378
    3. ' ' → logprob: -9.305027961730957
    4. '	range' → logprob: -11.305027961730957
    5. ' ' → logprob: -12.055027961730957
    6. '(range' → logprob: -12.305027961730957
    7. ' n' → logprob: -12.367527961730957
    8. ' input' → logprob: -12.492527961730957
    9. 'rang' → logprob: -13.055027961730957
    10. ' rang' → logprob: -13.055027961730957

Token 20: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07893726974725723
    2. '(n' → logprob: -2.578937292098999
    3. '(
' → logprob: -10.828937530517578
    4. '(len' → logprob: -11.703937530517578
    5. '(val' → logprob: -11.828937530517578
    6. ' (' → logprob: -12.078937530517578
    7. '(

' → logprob: -12.953937530517578
    8. '((' → logprob: -14.328937530517578
    9. '(s' → logprob: -14.953937530517578
    10. '(value' → logprob: -15.078937530517578

Token 21: '1' (ID: 16)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.23338891565799713
    2. '1' → logprob: -1.608388900756836
    3. ' n' → logprob: -5.108388900756836
    4. '(' → logprob: -7.108388900756836
    5. '(n' → logprob: -7.733388900756836
    6. ' ' → logprob: -8.233388900756836
    7. '0' → logprob: -8.858388900756836
    8. ')' → logprob: -9.358388900756836
    9. '2' → logprob: -9.733388900756836
    10. ')n' → logprob: -10.483388900756836

Token 22: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010473830625414848
    2. ',n' → logprob: -5.135473728179932
    3. '(n' → logprob: -5.635473728179932
    4. ' ,' → logprob: -7.385473728179932
    5. '(' → logprob: -8.01047420501709
    6. 'n' → logprob: -11.76047420501709
    7. ' n' → logprob: -12.88547420501709
    8. ' (' → logprob: -14.13547420501709
    9. ',(' → logprob: -14.26047420501709
    10. ' ' → logprob: -15.13547420501709

Token 23: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.20141363143920898
    2. 'n' → logprob: -1.701413631439209
    3. ' ' → logprob: -15.451414108276367
    4. '	n' → logprob: -16.201414108276367
    5. ' ' → logprob: -17.201414108276367
    6. ')n' → logprob: -17.576414108276367
    7. '(n' → logprob: -17.826414108276367
    8. ')' → logprob: -18.201414108276367
    9. '10' → logprob: -19.326414108276367
    10. '_n' → logprob: -19.451414108276367

Token 24: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141655206680298
    2. ' +' → logprob: -1.7014164924621582
    3. ' ' → logprob: -12.826416969299316
    4. ' +
' → logprob: -15.951416969299316
    5. '+
' → logprob: -16.701416015625
    6. ',' → logprob: -16.826416015625
    7. ' ' → logprob: -16.951416015625
    8. ' plus' → logprob: -17.201416015625
    9. ')' → logprob: -17.326416015625
    10. '):' → logprob: -17.451416015625

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007129086880013347
    2. ' ' → logprob: -7.250712871551514
    3. ')' → logprob: -13.500713348388672
    4. '2' → logprob: -14.625713348388672
    5. '):' → logprob: -14.625713348388672
    6. '  ' → logprob: -15.500713348388672
    7. '```' → logprob: -15.625713348388672
    8. '   ' → logprob: -16.250713348388672
    9. '):
' → logprob: -17.125713348388672
    10. ',' → logprob: -17.375713348388672

Token 26: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01996491104364395
    2. ')' → logprob: -4.519964694976807
    3. ':' → logprob: -4.769964694976807
    4. ' ):' → logprob: -8.519965171813965
    5. '):
' → logprob: -8.769965171813965
    6. ':)' → logprob: -11.019965171813965
    7. ',' → logprob: -12.269965171813965
    8. ' ' → logprob: -12.519965171813965
    9. ' )' → logprob: -12.519965171813965
    10. '+' → logprob: -12.769965171813965

Token 27: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.006496046669781208
    2. ' 
' → logprob: -5.631495952606201
    3. '    ' → logprob: -7.006495952606201
    4. '<|end|>' → logprob: -7.256495952606201
    5. '   ' → logprob: -8.00649642944336
    6. ':' → logprob: -8.88149642944336
    7. ' ,' → logprob: -9.00649642944336
    8. ' )' → logprob: -9.00649642944336
    9. '  ' → logprob: -9.13149642944336
    10. ' :' → logprob: -9.50649642944336

Token 28: ' #' (ID: 1069)
  Prédit: ' answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.7059897780418396
    2. 'answer' → logprob: -0.9559897780418396
    3. ' ' → logprob: -2.4559898376464844
    4. '    ' → logprob: -3.8309898376464844
    5. ' ```' → logprob: -6.205989837646484
    6. '   ' → logprob: -6.330989837646484
    7. '```' → logprob: -6.455989837646484
    8. ' if' → logprob: -6.455989837646484
    9. '<|end|>' → logprob: -6.705989837646484
    10. 'if' → logprob: -6.955989837646484

Token 29: ' j' (ID: 441)
  Prédit: ' answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.44928497076034546
    2. ' if' → logprob: -1.4492850303649902
    3. 'answer' → logprob: -2.8242850303649902
    4. ' val' → logprob: -3.3242850303649902
    5. 'if' → logprob: -4.07428503036499
    6. 'val' → logprob: -4.69928503036499
    7. ' ' → logprob: -5.57428503036499
    8. '    ' → logprob: -6.82428503036499
    9. '   ' → logprob: -8.074284553527832
    10. 'Answer' → logprob: -9.824284553527832

Token 30: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.36481672525405884
    2. 'uste' → logprob: -1.364816665649414
    3. 'ust' → logprob: -3.864816665649414
    4. 'oueur' → logprob: -5.239816665649414
    5. 'u' → logprob: -5.739816665649414
    6. 'eux' → logprob: -5.989816665649414
    7. 'avascript' → logprob: -6.364816665649414
    8. '```' → logprob: -6.364816665649414
    9. 'a' → logprob: -6.614816665649414
    10. ' +=' → logprob: -6.864816665649414

Token 31: 'ignore' (ID: 25112)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.3426554203033447
    2. 'uste' → logprob: -1.7176554203033447
    3. 'a' → logprob: -3.4676554203033447
    4. 'aj' → logprob: -3.9676554203033447
    5. 'uge' → logprob: -4.467655181884766
    6. 'ust' → logprob: -4.592655181884766
    7. ''aj' → logprob: -4.842655181884766
    8. 'observe' → logprob: -5.967655181884766
    9. ''aime' → logprob: -6.217655181884766
    10. 'count' → logprob: -6.467655181884766

Token 32: ' les' (ID: 1341)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.093682885169983
    2. ' les' → logprob: -1.218682885169983
    3. 'les' → logprob: -1.843682885169983
    4. ' val' → logprob: -2.5936827659606934
    5. ' if' → logprob: -3.2186827659606934
    6. '    ' → logprob: -3.9686827659606934
    7. '<|end|>' → logprob: -3.9686827659606934
    8. ' ' → logprob: -4.218682765960693
    9. '   ' → logprob: -4.343682765960693
    10. 'if' → logprob: -4.593682765960693

Token 33: ' multiples' (ID: 70720)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -1.3393079042434692
    2. ' multiples' → logprob: -1.3393079042434692
    3. ' nombres' → logprob: -1.8393079042434692
    4. 'div' → logprob: -1.9643079042434692
    5. ' valeurs' → logprob: -2.7143077850341797
    6. ' val' → logprob: -3.5893077850341797
    7. 'multip' → logprob: -4.21430778503418
    8. ' div' → logprob: -4.21430778503418
    9. ' ' → logprob: -4.71430778503418
    10. ' divisible' → logprob: -4.96430778503418

Token 34: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14224952459335327
    2. '    ' → logprob: -2.392249584197998
    3. ' de' → logprob: -3.767249584197998
    4. ' ' → logprob: -4.767249584197998
    5. 'de' → logprob: -5.017249584197998
    6. ' of' → logprob: -6.767249584197998
    7. '  ' → logprob: -6.892249584197998
    8. '       ' → logprob: -8.76724910736084
    9. ' des' → logprob: -9.01724910736084
    10. '    
' → logprob: -10.01724910736084

Token 35: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04579734429717064
    2. ' ' → logprob: -3.295797348022461
    3. '5' → logprob: -5.170797348022461
    4. '2' → logprob: -6.670797348022461
    5. '4' → logprob: -7.670797348022461
    6. '7' → logprob: -9.045797348022461
    7. '6' → logprob: -9.295797348022461
    8. '10' → logprob: -10.670797348022461
    9. '   ' → logprob: -10.795797348022461
    10. '  ' → logprob: -11.545797348022461

Token 36: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.02675037644803524
    2. '5' → logprob: -4.526750564575195
    3. '2' → logprob: -4.651750564575195
    4. ' ' → logprob: -5.526750564575195
    5. '4' → logprob: -6.401750564575195
    6. '7' → logprob: -8.651750564575195
    7. '6' → logprob: -9.401750564575195
    8. '   ' → logprob: -10.526750564575195
    9. '10' → logprob: -10.651750564575195
    10. '9' → logprob: -11.526750564575195

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022458743304014206
    2. ':' → logprob: -4.522458553314209
    3. ' if' → logprob: -5.772458553314209
    4. '  ' → logprob: -5.897458553314209
    5. '    ' → logprob: -6.397458553314209
    6. ' ' → logprob: -6.397458553314209
    7. ' :' → logprob: -7.147458553314209
    8. ',' → logprob: -7.897458553314209
    9. 'if' → logprob: -8.022459030151367
    10. ' ,' → logprob: -8.272459030151367

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07783804088830948
    2. ' ' → logprob: -3.5778379440307617
    3. '<|end|>' → logprob: -4.702837944030762
    4. '    ' → logprob: -4.952837944030762
    5. ' if' → logprob: -4.952837944030762
    6. '  ' → logprob: -5.077837944030762
    7. ':' → logprob: -5.202837944030762
    8. ',' → logprob: -5.577837944030762
    9. '```' → logprob: -5.827837944030762
    10. ' 
' → logprob: -6.577837944030762

Token 39: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3127923607826233
    2. ' if' → logprob: -1.5627923011779785
    3. 'if' (adapté à ' if') → logprob: -2.9377923011779785
    4. '    ' → logprob: -5.6877923011779785
    5. ' ' → logprob: -6.4377923011779785
    6. '  ' → logprob: -7.5627923011779785
    7. '```' → logprob: -7.9377923011779785
    8. '<|end|>' → logprob: -9.937792778015137
    9. ' ```' → logprob: -10.562792778015137
    10. '       ' → logprob: -10.687792778015137

Token 40: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -1.9266199160483666e-05
    2. 'val' → logprob: -11.000019073486328
    3. ' ' → logprob: -13.000019073486328
    4. '	val' → logprob: -15.625019073486328
    5. '(val' → logprob: -17.125019073486328
    6. '[val' → logprob: -17.500019073486328
    7. '  ' → logprob: -19.125019073486328
    8. ' ' → logprob: -19.125019073486328
    9. ' (' → logprob: -19.500019073486328
    10. '   ' → logprob: -19.750019073486328

Token 41: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0034089400433003902
    2. '%' → logprob: -5.753408908843994
    3. ' ' → logprob: -8.378409385681152
    4. ' ' → logprob: -13.628409385681152
    5. '   ' → logprob: -17.128408432006836
    6. '  ' → logprob: -17.628408432006836
    7. '%i' → logprob: -17.878408432006836
    8. '```' → logprob: -18.378408432006836
    9. ' ==' → logprob: -18.753408432006836
    10. '%e' → logprob: -18.753408432006836

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.043020084500312805
    2. '3' → logprob: -3.168020009994507
    3. ' ' → logprob: -11.043020248413086
    4. '```' → logprob: -13.668020248413086
    5. ')' → logprob: -13.793020248413086
    6. '<|end|>' → logprob: -14.230520248413086
    7. '  ' → logprob: -15.230520248413086
    8. 's' → logprob: -15.793020248413086
    9. '1' → logprob: -15.918020248413086
    10. ' ```' → logprob: -16.293020248413086

Token 43: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -16.875028610229492
    4. '٣' → logprob: -17.875028610229492
    5. '   ' → logprob: -18.375028610229492
    6. '۳' → logprob: -18.375028610229492
    7. '' → logprob: -18.562528610229492
    8. '³' → logprob: -18.750028610229492
    9. '  ' → logprob: -18.812528610229492
    10. '৩' → logprob: -18.937528610229492

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.38307538628578186
    2. '==' → logprob: -1.2580753564834595
    3. ' !=' → logprob: -3.508075475692749
    4. '!=' → logprob: -5.75807523727417
    5. ':' → logprob: -7.38307523727417
    6. '=' → logprob: -9.133075714111328
    7. ' ' → logprob: -9.383075714111328
    8. '0' → logprob: -9.633075714111328
    9. ' :' → logprob: -10.508075714111328
    10. ' =' → logprob: -11.883075714111328

Token 45: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868737816810608
    2. ' ' → logprob: -1.136873722076416
    3. '1' → logprob: -13.511874198913574
    4. ' ' → logprob: -14.949374198913574
    5. '```' → logprob: -15.449374198913574
    6. '=' → logprob: -15.574374198913574
    7. ' 
' → logprob: -16.199373245239258
    8. ' 

' → logprob: -16.386873245239258
    9. ')' → logprob: -16.449373245239258
    10. '3' → logprob: -16.511873245239258

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. ' ' → logprob: -11.375011444091797
    3. '1' → logprob: -16.375011444091797
    4. '3' → logprob: -16.500011444091797
    5. '```' → logprob: -16.625011444091797
    6. '۰' → logprob: -18.875011444091797
    7. '   ' → logprob: -18.875011444091797
    8. '2' → logprob: -18.937511444091797
    9. '٠' → logprob: -19.312511444091797
    10. '  ' → logprob: -19.437511444091797

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004354373668320477
    2. ':
' → logprob: -8.500435829162598
    3. '       ' → logprob: -8.625435829162598
    4. ' continue' → logprob: -10.875435829162598
    5. '   ' → logprob: -11.000435829162598
    6. 'continue' → logprob: -12.125435829162598
    7. ' :' → logprob: -12.250435829162598
    8. '	continue' → logprob: -12.875435829162598
    9. ' continues' → logprob: -13.000435829162598
    10. '_continue' → logprob: -14.875435829162598

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027532225474715233
    2. ' continue' → logprob: -3.9025323390960693
    3. '   ' → logprob: -5.52753210067749
    4. 'continue' → logprob: -5.90253210067749
    5. '	continue' → logprob: -8.652532577514648
    6. '    ' → logprob: -11.277532577514648
    7. '```' → logprob: -11.277532577514648
    8. '    ' → logprob: -11.527532577514648
    9. '     ' → logprob: -11.902532577514648
    10. '	' → logprob: -11.902532577514648

Token 49: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5683347582817078
    2. '       ' → logprob: -1.3183348178863525
    3. 'continue' (adapté à ' continue') → logprob: -1.8183348178863525
    4. '   ' → logprob: -5.818334579467773
    5. '	continue' → logprob: -7.693334579467773
    6. '```' → logprob: -9.068334579467773
    7. '           ' → logprob: -9.693334579467773
    8. 'contin' → logprob: -10.693334579467773
    9. '_continue' → logprob: -11.693334579467773
    10. ' continu' → logprob: -12.318334579467773

Token 50: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32089197635650635
    2. '
' → logprob: -1.8208919763565063
    3. '    
' → logprob: -2.320891857147217
    4. '   
' → logprob: -4.820891857147217
    5. '<|end|>' → logprob: -5.945891857147217
    6. ' 
' → logprob: -6.570891857147217
    7. '  
' → logprob: -6.695891857147217
    8. '  ' → logprob: -7.820891857147217
    9. '\n' → logprob: -8.695892333984375
    10. ')' → logprob: -9.445892333984375

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014460684033110738
    2. ' answer' → logprob: -7.37644624710083
    3. '    
' → logprob: -8.376445770263672
    4. 'answer' → logprob: -8.501445770263672
    5. '  ' → logprob: -8.751445770263672
    6. '    ' → logprob: -9.626445770263672
    7. '<|end|>' → logprob: -10.001445770263672
    8. '```' → logprob: -10.126445770263672
    9. '   
' → logprob: -10.876445770263672
    10. ' ' → logprob: -11.501445770263672

Token 52: ' #' (ID: 1069)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.11201988160610199
    2. ' answer' → logprob: -2.7370197772979736
    3. '   ' → logprob: -3.2370197772979736
    4. '    
' → logprob: -7.237020015716553
    5. '
' → logprob: -8.237019538879395
    6. ' 
' → logprob: -8.362019538879395
    7. '   
' → logprob: -8.737019538879395
    8. '+' → logprob: -8.862019538879395
    9. '	answer' → logprob: -8.987019538879395
    10. '  ' → logprob: -9.487019538879395

Token 53: ' aussi' (ID: 9894)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.10445564240217209
    2. ' answer' → logprob: -2.3544557094573975
    3. '   ' → logprob: -5.479455471038818
    4. '	answer' → logprob: -10.479455947875977
    5. '  ' → logprob: -10.979455947875977
    6. '```' → logprob: -11.729455947875977
    7. '    ' → logprob: -12.229455947875977
    8. 'Answer' → logprob: -13.229455947875977
    9. ' ' → logprob: -13.354455947875977
    10. '(answer' → logprob: -13.729455947875977

Token 54: ' les' (ID: 1341)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9338765144348145
    2. '   ' → logprob: -1.3088765144348145
    3. 'if' → logprob: -1.6838765144348145
    4. ' answer' → logprob: -2.4338765144348145
    5. 'answer' → logprob: -3.0588765144348145
    6. '  ' → logprob: -5.1838765144348145
    7. ':' → logprob: -6.0588765144348145
    8. '    ' → logprob: -6.1838765144348145
    9. ',' → logprob: -6.1838765144348145
    10. '    
' → logprob: -6.4338765144348145

Token 55: ' multiples' (ID: 70720)
  Prédit: ' multiples'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multiples' → logprob: -0.08688656985759735
    2. 'val' → logprob: -3.2118866443634033
    3. 'multip' → logprob: -3.7118866443634033
    4. '5' → logprob: -4.711886405944824
    5. ' val' → logprob: -5.086886405944824
    6. ' multiple' → logprob: -6.961886405944824
    7. 'multiple' → logprob: -7.086886405944824
    8. ' ' → logprob: -7.586886405944824
    9. '   ' → logprob: -8.086886405944824
    10. ' multip' → logprob: -8.461886405944824

Token 56: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.20546874403953552
    2. 'de' → logprob: -1.830468773841858
    3. '   ' → logprob: -4.455468654632568
    4. ' of' → logprob: -5.330468654632568
    5. '<|end|>' → logprob: -5.330468654632568
    6. '    ' → logprob: -5.955468654632568
    7. ' ' → logprob: -7.205468654632568
    8. '  ' → logprob: -7.830468654632568
    9. 'of' → logprob: -9.205469131469727
    10. '<|end|>' → logprob: -9.705469131469727

Token 57: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0021792887710034847
    2. '7' → logprob: -6.377179145812988
    3. ' ' → logprob: -7.752179145812988
    4. '   ' → logprob: -10.252179145812988
    5. '2' → logprob: -11.877179145812988
    6. '  ' → logprob: -13.502179145812988
    7. '    ' → logprob: -14.127179145812988
    8. '_' → logprob: -14.127179145812988
    9. '٥' → logprob: -14.877179145812988
    10. '4' → logprob: -15.002179145812988

Token 58: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005272653419524431
    2. '7' → logprob: -5.25527286529541
    3. '2' → logprob: -11.00527286529541
    4. ' ' → logprob: -11.50527286529541
    5. '4' → logprob: -11.88027286529541
    6. '   ' → logprob: -13.25527286529541
    7. '  ' → logprob: -14.25527286529541
    8. '```' → logprob: -14.50527286529541
    9. '٥' → logprob: -14.63027286529541
    10. '9' → logprob: -15.13027286529541

Token 59: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0033147193025797606
    2. ' if' → logprob: -6.25331449508667
    3. 'if' → logprob: -7.00331449508667
    4. '```' → logprob: -8.253314971923828
    5. '       ' → logprob: -9.378314971923828
    6. '<|end|>' → logprob: -9.503314971923828
    7. '  ' → logprob: -10.378314971923828
    8. ' ' → logprob: -11.628314971923828
    9. '    ' → logprob: -11.753314971923828
    10. '    
' → logprob: -12.878314971923828

Token 60: ' je' (ID: 1264)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01706382818520069
    2. ' if' → logprob: -4.267063617706299
    3. '```' → logprob: -6.267063617706299
    4. 'if' → logprob: -8.142064094543457
    5. '    ' → logprob: -8.642064094543457
    6. '  ' → logprob: -9.142064094543457
    7. ' answer' → logprob: -9.142064094543457
    8. '    
' → logprob: -9.267064094543457
    9. '<|end|>' → logprob: -9.267064094543457
    10. ' ' → logprob: -10.517064094543457

Token 61: ' crois' (ID: 65485)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2332305908203125
    2. '    ' → logprob: -1.9832305908203125
    3. ' continue' → logprob: -3.3582305908203125
    4. '  ' → logprob: -4.1082305908203125
    5. '       ' → logprob: -5.3582305908203125
    6. ' ' → logprob: -5.3582305908203125
    7. 'continue' → logprob: -5.9832305908203125
    8. '     ' → logprob: -6.7332305908203125
    9. 'n' → logprob: -6.8582305908203125
    10. ' n' → logprob: -7.6082305908203125

Token 62: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015771172475069761
    2. '<|end|>' → logprob: -7.251576900482178
    3. '```' → logprob: -7.251576900482178
    4. '  ' → logprob: -9.876577377319336
    5. ' if' → logprob: -10.376577377319336
    6. '    
' → logprob: -10.751577377319336
    7. '<|end|>' → logprob: -11.126577377319336
    8. '
' → logprob: -11.376577377319336
    9. 'if' → logprob: -11.501577377319336
    10. '       ' → logprob: -12.251577377319336

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002004410926019773
    2. '```' → logprob: -9.000200271606445
    3. 'if' → logprob: -10.625200271606445
    4. '    
' → logprob: -10.750200271606445
    5. ' if' → logprob: -11.375200271606445
    6. '<|end|>' → logprob: -11.500200271606445
    7. '       ' → logprob: -12.625200271606445
    8. '  ' → logprob: -13.250200271606445
    9. '    ' → logprob: -13.625200271606445
    10. '
' → logprob: -13.750200271606445

Token 64: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06292979419231415
    2. 'if' (adapté à ' if') → logprob: -3.18792986869812
    3. ' if' → logprob: -3.93792986869812
    4. '```' → logprob: -9.1879301071167
    5. '  ' → logprob: -9.9379301071167
    6. '    ' → logprob: -10.1879301071167
    7. ' ' → logprob: -10.4379301071167
    8. '    
' → logprob: -11.4379301071167
    9. '       ' → logprob: -11.6879301071167
    10. 'elif' → logprob: -12.5629301071167

Token 65: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.00029840084607712924
    2. 'val' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.750298500061035
    4. ' ' → logprob: -14.375298500061035
    5. '	val' → logprob: -15.125298500061035
    6. '[val' → logprob: -15.500298500061035
    7. ' va' → logprob: -16.00029754638672
    8. '(val' → logprob: -16.00029754638672
    9. ' (' → logprob: -17.87529754638672
    10. ',val' → logprob: -18.00029754638672

Token 66: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.014215687289834023
    2. '%' → logprob: -4.264215469360352
    3. ' ' → logprob: -9.889215469360352
    4. ' ' → logprob: -14.139215469360352
    5. '```' → logprob: -16.01421546936035
    6. '   ' → logprob: -16.13921546936035
    7. '  ' → logprob: -16.13921546936035
    8. ' %
' → logprob: -16.26421546936035
    9. '`' → logprob: -17.26421546936035
    10. '7' → logprob: -17.63921546936035

Token 67: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.012516011483967304
    2. '5' → logprob: -4.387516021728516
    3. '<|end|>' → logprob: -12.762516021728516
    4. ' ' → logprob: -13.012516021728516
    5. '20' → logprob: -14.887516021728516
    6. 'space' → logprob: -15.512516021728516
    7. '```' → logprob: -15.637516021728516
    8. '25' → logprob: -15.887516021728516
    9. '  ' → logprob: -15.887516021728516
    10. '10' → logprob: -16.512516021728516

Token 68: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.375004768371582
    3. '<|end|>' → logprob: -16.125003814697266
    4. '```' → logprob: -16.625003814697266
    5. '3' → logprob: -16.875003814697266
    6. '  ' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.375003814697266
    8. '۵' → logprob: -18.062503814697266
    9. '٥' → logprob: -18.125003814697266
    10. '５' → logprob: -18.875003814697266

Token 69: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03804987296462059
    2. '==' → logprob: -3.2880499362945557
    3. ' ' → logprob: -12.163049697875977
    4. ' !=' → logprob: -13.163049697875977
    5. '=' → logprob: -14.288049697875977
    6. ' =' → logprob: -15.788049697875977
    7. '   ' → logprob: -16.163049697875977
    8. '()==' → logprob: -16.538049697875977
    9. ' ' → logprob: -16.663049697875977
    10. ')==' → logprob: -16.663049697875977

Token 70: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036024407017976046
    2. ' ' → logprob: -5.628602504730225
    3. '   ' → logprob: -14.378602027893066
    4. '```' → logprob: -14.566102027893066
    5. '  ' → logprob: -15.191102027893066
    6. '==' → logprob: -15.691102027893066
    7. '=' → logprob: -16.066102981567383
    8. '       ' → logprob: -16.316102981567383
    9. ' ' → logprob: -16.378602981567383
    10. '    ' → logprob: -16.566102981567383

Token 71: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043233807082287967
    2. ' ' → logprob: -7.75043249130249
    3. '   ' → logprob: -14.625432014465332
    4. '```' → logprob: -14.625432014465332
    5. '  ' → logprob: -15.687932014465332
    6. '00' → logprob: -16.12543296813965
    7. '==' → logprob: -16.12543296813965
    8. '       ' → logprob: -16.68793296813965
    9. '۰' → logprob: -16.68793296813965
    10. '=' → logprob: -16.93793296813965

Token 72: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17086513340473175
    2. '       ' → logprob: -1.9208651781082153
    3. ':
' → logprob: -4.670865058898926
    4. 'continue' → logprob: -7.420865058898926
    5. ' continue' → logprob: -7.795865058898926
    6. ' continues' → logprob: -9.420865058898926
    7. '   ' → logprob: -9.545865058898926
    8. '	continue' → logprob: -10.420865058898926
    9. ':

' → logprob: -12.420865058898926
    10. '           ' → logprob: -12.545865058898926

Token 73: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031297095119953156
    2. 'continue' → logprob: -6.003129482269287
    3. ' continue' → logprob: -7.378129482269287
    4. '	continue' → logprob: -11.128129959106445
    5. '   ' → logprob: -11.503129959106445
    6. '           ' → logprob: -13.253129959106445
    7. '```' → logprob: -14.253129959106445
    8. ' continues' → logprob: -14.878129959106445
    9. '_continue' → logprob: -15.003129959106445
    10. '      ' → logprob: -15.128129959106445

Token 74: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.18820756673812866
    2. ' continue' → logprob: -1.8132076263427734
    3. '       ' → logprob: -4.938207626342773
    4. '   ' → logprob: -6.813207626342773
    5. '	continue' → logprob: -9.438207626342773
    6. '           ' → logprob: -10.563207626342773
    7. '```' → logprob: -11.063207626342773
    8. '    ' → logprob: -11.438207626342773
    9. ' ' → logprob: -11.563207626342773
    10. 'continu' → logprob: -12.313207626342773

Token 75: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08232791721820831
    2. '
' → logprob: -3.7073278427124023
    3. ' answer' → logprob: -3.8323278427124023
    4. 'answer' → logprob: -4.082327842712402
    5. ' 
' → logprob: -5.207327842712402
    6. '    
' → logprob: -5.332327842712402
    7. '<|end|>' → logprob: -6.082327842712402
    8. '   
' → logprob: -7.082327842712402
    9. '```' → logprob: -7.582327842712402
    10. '  ' → logprob: -7.832327842712402

Token 76: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02323371171951294
    2. 'answer' → logprob: -4.273233890533447
    3. ' answer' → logprob: -5.773233890533447
    4. '<|end|>' → logprob: -6.023233890533447
    5. '
' → logprob: -6.273233890533447
    6. '    
' → logprob: -7.273233890533447
    7. '  ' → logprob: -8.273233413696289
    8. '```' → logprob: -8.898233413696289
    9. '(answer' → logprob: -9.273233413696289
    10. ' 
' → logprob: -9.273233413696289

Token 77: ' #' (ID: 1069)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.27646318078041077
    2. '   ' → logprob: -1.5264631509780884
    3. ' answer' → logprob: -3.901463270187378
    4. '+' → logprob: -6.901463031768799
    5. '    
' → logprob: -6.901463031768799
    6. '  ' → logprob: -8.026463508605957
    7. '```' → logprob: -8.026463508605957
    8. ' 
' → logprob: -8.151463508605957
    9. '
' → logprob: -8.151463508605957
    10. '	answer' → logprob: -8.401463508605957

Token 78: ' sinon' (ID: 52915)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.08800393342971802
    2. ' answer' → logprob: -2.5880038738250732
    3. '   ' → logprob: -4.713004112243652
    4. '	answer' → logprob: -10.338004112243652
    5. '  ' → logprob: -10.963004112243652
    6. '
' → logprob: -11.088004112243652
    7. '```' → logprob: -11.088004112243652
    8. ' ' → logprob: -12.713004112243652
    9. '    
' → logprob: -12.838004112243652
    10. '(answer' → logprob: -13.088004112243652

Token 79: ' j' (ID: 441)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23034103214740753
    2. 'answer' → logprob: -2.1053409576416016
    3. ' answer' → logprob: -2.6053409576416016
    4. '
' → logprob: -5.730340957641602
    5. '	answer' → logprob: -6.230340957641602
    6. '<|end|>' → logprob: -6.730340957641602
    7. ':' → logprob: -6.980340957641602
    8. '    
' → logprob: -6.980340957641602
    9. ':
' → logprob: -8.105340957641602
    10. '  ' → logprob: -8.480340957641602

Token 80: ''aj' (ID: 116735)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.48055675625801086
    2. ''acc' → logprob: -1.7305567264556885
    3. '+=' → logprob: -2.7305567264556885
    4. '   ' → logprob: -3.6055567264556885
    5. '+' → logprob: -3.9805567264556885
    6. 'acc' → logprob: -4.605556964874268
    7. 'e' → logprob: -4.855556964874268
    8. ''ai' → logprob: -5.105556964874268
    9. ''' → logprob: -5.105556964874268
    10. ''aj' → logprob: -5.230556964874268

Token 81: 'oute' (ID: 3509)
  Prédit: 'oute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oute' → logprob: -0.00027611342375166714
    2. 'o' → logprob: -9.000276565551758
    3. 'ou' → logprob: -9.875276565551758
    4. 'out' → logprob: -10.000276565551758
    5. 'outes' → logprob: -10.875276565551758
    6. 'outer' → logprob: -11.250276565551758
    7. 'outez' → logprob: -11.500276565551758
    8. '#' → logprob: -12.875276565551758
    9. 'oue' → logprob: -13.750276565551758
    10. '```' → logprob: -13.875276565551758

Token 82: '
' (ID: 198)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.6367907524108887
    2. ' answer' → logprob: -0.8867907524108887
    3. '   ' → logprob: -2.8867907524108887
    4. '	answer' → logprob: -6.261790752410889
    5. 'val' → logprob: -7.386790752410889
    6. '+' → logprob: -8.761791229248047
    7. '(answer' → logprob: -9.136791229248047
    8. ' val' → logprob: -9.386791229248047
    9. ' +' → logprob: -9.761791229248047
    10. '  ' → logprob: -10.011791229248047

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08336202800273895
    2. ' answer' → logprob: -2.708362102508545
    3. 'answer' → logprob: -4.333362102508545
    4. '	answer' → logprob: -9.083361625671387
    5. '  ' → logprob: -10.458361625671387
    6. '
' → logprob: -10.958361625671387
    7. '       ' → logprob: -11.583361625671387
    8. '(answer' → logprob: -11.583361625671387
    9. '    
' → logprob: -11.833361625671387
    10. '    ' → logprob: -11.958361625671387

Token 84: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.6441004872322083
    2. 'answer' (adapté à ' answer') → logprob: -1.2691004276275635
    3. '   ' → logprob: -1.6441004276275635
    4. '	answer' → logprob: -8.144100189208984
    5. '  ' → logprob: -8.769100189208984
    6. '    ' → logprob: -10.019100189208984
    7. '+' → logprob: -10.269100189208984
    8. '    
' → logprob: -11.269100189208984
    9. ' +' → logprob: -11.519100189208984
    10. '(answer' → logprob: -11.769100189208984

Token 85: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.00231607211753726
    2. '+=' → logprob: -6.377315998077393
    3. '+' → logprob: -8.00231647491455
    4. ' ' → logprob: -8.50231647491455
    5. '<|end|>' → logprob: -9.87731647491455
    6. ' +' → logprob: -11.37731647491455
    7. '+='' → logprob: -13.25231647491455
    8. ']+=' → logprob: -13.37731647491455
    9. 'space' → logprob: -13.75231647491455
    10. '+="' → logprob: -14.12731647491455

Token 86: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.02658776193857193
    2. 'answer' → logprob: -3.651587724685669
    3. ' val' → logprob: -8.90158748626709
    4. 'val' → logprob: -9.27658748626709
    5. '+' → logprob: -10.02658748626709
    6. '	answer' → logprob: -12.02658748626709
    7. ' ' → logprob: -13.27658748626709
    8. ' ' → logprob: -13.52658748626709
    9. '(answer' → logprob: -13.77658748626709
    10. 'Answer' → logprob: -13.77658748626709

Token 87: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.12692873179912567
    2. ' +' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.501928329467773
    4. ' plus' → logprob: -15.501928329467773
    5. ' +=' → logprob: -16.501928329467773
    6. '＋' → logprob: -17.251928329467773
    7. '<|end|>' → logprob: -17.376928329467773
    8. 'val' → logprob: -17.501928329467773
    9. '+=' → logprob: -17.751928329467773
    10. ' val' → logprob: -18.251928329467773

Token 88: ' val' (ID: 1459)
  Prédit: ' val'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' val' → logprob: -0.3132631778717041
    2. 'val' → logprob: -1.313263177871704
    3. '	val' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.563262939453125
    5. '[val' → logprob: -15.688262939453125
    6. 'v' → logprob: -16.188262939453125
    7. ' va' → logprob: -16.438262939453125
    8. '(val' → logprob: -16.438262939453125
    9. '.val' → logprob: -16.938262939453125
    10. 'va' → logprob: -17.188262939453125

Token 89: ' 

' (ID: 1202)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.29208067059516907
    2. '<|end|>' → logprob: -1.9170806407928467
    3. '\n' → logprob: -2.5420806407928467
    4. '
' → logprob: -4.167080879211426
    5. '#' → logprob: -5.417080879211426
    6. '```' → logprob: -5.792080879211426
    7. '\' → logprob: -6.792080879211426
    8. ' print' → logprob: -7.042080879211426
    9. 'n' → logprob: -7.667080879211426
    10. ' 
' → logprob: -8.042080879211426

Token 90: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0055013722740113735
    2. '
' → logprob: -6.1305012702941895
    3. '\n' → logprob: -6.1305012702941895
    4. '<|end|>' → logprob: -8.005501747131348
    5. '#' → logprob: -8.255501747131348
    6. ')' → logprob: -9.005501747131348
    7. '```' → logprob: -9.255501747131348
    8. ' print' → logprob: -9.380501747131348
    9. 'p' → logprob: -9.505501747131348
    10. '#print' → logprob: -10.505501747131348

Token 91: ' ça' (ID: 13590)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.600714161526412e-05
    2. ' print' → logprob: -9.500076293945312
    3. 'pr' → logprob: -14.500076293945312
    4. 'prin' → logprob: -15.375076293945312
    5. 'p' → logprob: -16.125076293945312
    6. '#print' → logprob: -16.250076293945312
    7. '```' → logprob: -16.875076293945312
    8. 'answer' → logprob: -17.750076293945312
    9. 'prit' → logprob: -18.250076293945312
    10. '#' → logprob: -18.250076293945312

Token 92: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00016682932619005442
    2. ' print' → logprob: -9.250166893005371
    3. '
' → logprob: -9.625166893005371
    4. '<|end|>' → logprob: -13.250166893005371
    5. '#print' → logprob: -14.250166893005371
    6. '.print' → logprob: -14.375166893005371
    7. '#' → logprob: -14.375166893005371
    8. '  
' → logprob: -15.625166893005371
    9. '(print' → logprob: -15.750166893005371
    10. '
' → logprob: -16.125165939331055

Token 93: ' le' (ID: 505)
  Prédit: '(answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(answer' → logprob: -0.6690049171447754
    2. 'answer' → logprob: -1.0440049171447754
    3. '(' → logprob: -2.4190049171447754
    4. ' answer' → logprob: -3.5440049171447754
    5. 'print' → logprob: -4.169004917144775
    6. '(
' → logprob: -7.419004917144775
    7. ' (' → logprob: -8.044004440307617
    8. ' print' → logprob: -8.419004440307617
    9. '()' → logprob: -8.544004440307617
    10. ':' → logprob: -8.544004440307617

Token 94: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.3306970000267029
    2. 'r' → logprob: -2.5806970596313477
    3. 'answer' → logprob: -2.7056970596313477
    4. ' answer' → logprob: -3.2056970596313477
    5. 's' → logprob: -3.4556970596313477
    6. 'rés' → logprob: -3.8306970596313477
    7. ' resultat' → logprob: -4.080697059631348
    8. 'result' → logprob: -4.205697059631348
    9. 'ré' → logprob: -5.580697059631348
    10. ' result' → logprob: -5.830697059631348

Token 95: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005543577950447798
    2. '
' → logprob: -5.2555437088012695
    3. ' print' → logprob: -8.13054370880127
    4. '```' → logprob: -11.63054370880127
    5. '
' → logprob: -12.88054370880127
    6. ' 
' → logprob: -13.00554370880127
    7. '  
' → logprob: -14.88054370880127
    8. ')
' → logprob: -15.25554370880127
    9. '\n' → logprob: -15.25554370880127
    10. '``' → logprob: -15.75554370880127

Token 96: ' normal' (ID: 6078)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04858805239200592
    2. ' print' → logprob: -3.0485880374908447
    3. '```' → logprob: -15.048587799072266
    4. ' 
' → logprob: -15.923587799072266
    5. '   ' → logprob: -16.423587799072266
    6. 'answer' → logprob: -16.798587799072266
    7. ' answer' → logprob: -16.923587799072266
    8. ')' → logprob: -17.173587799072266
    9. ' ' → logprob: -17.298587799072266
    10. ' ' → logprob: -17.423587799072266

Token 97: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00029160623671486974
    2. '
' → logprob: -8.75029182434082
    3. ' print' → logprob: -9.62529182434082
    4. '```' → logprob: -9.62529182434082
    5. '\n' → logprob: -15.00029182434082
    6. '``' → logprob: -15.00029182434082
    7. '
' → logprob: -16.75029182434082
    8. '\' → logprob: -16.87529182434082
    9. '(print' → logprob: -17.00029182434082
    10. ' 
' → logprob: -17.25029182434082

Token 98: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -2.339278580620885e-06
    2. ' print' → logprob: -13.250001907348633
    3. '```' → logprob: -14.750001907348633
    4. '
' → logprob: -16.250001907348633
    5. '``' → logprob: -21.250001907348633
    6. '#print' → logprob: -21.625001907348633
    7. '
' → logprob: -23.250001907348633
    8. '.print' → logprob: -23.375001907348633
    9. '(print' → logprob: -23.500001907348633
    10. '-print' → logprob: -24.250001907348633

Token 99: '(answer' (ID: 78433)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008638089522719383
    2. '(answer' → logprob: -4.75863790512085
    3. '(ans' → logprob: -11.508638381958008
    4. '('' → logprob: -12.133638381958008
    5. ' (' → logprob: -12.508638381958008
    6. '("("' → logprob: -13.133638381958008
    7. '()' → logprob: -14.383638381958008
    8. '(`' → logprob: -14.883638381958008
    9. '((' → logprob: -15.008638381958008
    10. '(print' → logprob: -15.133638381958008

Token 100: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ' )' → logprob: -15.375
    3. '))' → logprob: -17.125
    4. ')`' → logprob: -18.5
    5. '()' → logprob: -19.75
    6. ')
' → logprob: -19.75
    7. '')' → logprob: -20.375
    8. ')}' → logprob: -20.625
    9. '())' → logprob: -20.75
    10. '`)' → logprob: -20.875


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 98
Tokens correctement prédits (1ère position, stricte): 40
Tokens correctement prédits (1ère position, avec adaptation): 41
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 40.82%
Précision adaptée (1ère position): 41.84%
Précision (top 10): 66.33%
================================================================================
