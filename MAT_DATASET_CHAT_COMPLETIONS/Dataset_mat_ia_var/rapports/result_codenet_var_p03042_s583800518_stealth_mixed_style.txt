================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:00:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
first, second = int(s[:2]), int(s[2:])

def check_month(m):
    return 1 <= m <= 12

res = None
if check_month(first):
    if check_month(second):
        print('AMBIGUOUS')
    else:
        res = 'MMYY'
elif check_month(second):
    print('YYMM')
else:
    for _ in range(1):
        res = 'NA'
if res is not None:
    print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0039759352803230286
    2. ''' → logprob: -6.753975868225098
    3. '()' → logprob: -7.128975868225098
    4. '('' → logprob: -7.128975868225098
    5. '`' → logprob: -7.253975868225098
    6. '"' → logprob: -8.878975868225098
    7. '```' → logprob: -8.878975868225098
    8. '("("' → logprob: -9.378975868225098
    9. '(
' → logprob: -9.753975868225098
    10. '(`' → logprob: -10.753975868225098

Token 4: 'first' (ID: 7743)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.30454960465431213
    2. 'if' → logprob: -2.0545496940612793
    3. '[' → logprob: -3.1795496940612793
    4. '+' → logprob: -3.4295496940612793
    5. '[::-' → logprob: -4.179549694061279
    6. 'print' → logprob: -4.804549694061279
    7. '=' → logprob: -5.304549694061279
    8. '_' → logprob: -5.304549694061279
    9. '```' → logprob: -5.304549694061279
    10. ''' → logprob: -5.554549694061279

Token 5: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0021150470711290836
    2. '(' → logprob: -6.877115249633789
    3. '_space' → logprob: -7.627115249633789
    4. 'space' → logprob: -8.377115249633789
    5. 's' → logprob: -8.627115249633789
    6. ' =' → logprob: -10.377115249633789
    7. '_s' → logprob: -10.627115249633789
    8. '_token' → logprob: -10.752115249633789
    9. '()' → logprob: -10.877115249633789
    10. '.' → logprob: -11.502115249633789

Token 6: ' second' (ID: 3099)
  Prédit: 'second'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'second' → logprob: -0.010476783849298954
    2. ' second' → logprob: -4.885476589202881
    3. 's' → logprob: -6.635476589202881
    4. 'rest' → logprob: -6.885476589202881
    5. '=' → logprob: -8.385477066040039
    6. ' rest' → logprob: -8.760477066040039
    7. 'last' → logprob: -9.635477066040039
    8. ' s' → logprob: -10.260477066040039
    9. ' =' → logprob: -11.260477066040039
    10. '*' → logprob: -11.385477066040039

Token 7: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05134298652410507
    2. '=' → logprob: -3.3013429641723633
    3. '_' → logprob: -4.551342964172363
    4. ',' → logprob: -6.426342964172363
    5. ' ' → logprob: -7.176342964172363
    6. 's' → logprob: -9.551342964172363
    7. ' ,' → logprob: -9.676342964172363
    8. ')' → logprob: -10.426342964172363
    9. 'space' → logprob: -10.801342964172363
    10. ' _' → logprob: -10.926342964172363

Token 8: ' int' (ID: 677)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.18089750409126282
    2. 's' → logprob: -1.8058974742889404
    3. ' map' → logprob: -7.1808977127075195
    4. 'map' → logprob: -8.80589771270752
    5. ' ' → logprob: -9.05589771270752
    6. 'input' → logprob: -10.30589771270752
    7. ' None' → logprob: -11.18089771270752
    8. ' input' → logprob: -11.18089771270752
    9. ' [' → logprob: -11.30589771270752
    10. ''s' → logprob: -11.68089771270752

Token 9: '(s' (ID: 1858)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0264853797852993
    2. 's' → logprob: -3.9014854431152344
    3. '(s' → logprob: -5.401485443115234
    4. ')' → logprob: -7.276485443115234
    5. ' ' → logprob: -8.901485443115234
    6. '(first' → logprob: -9.026485443115234
    7. '('' → logprob: -9.026485443115234
    8. ''' → logprob: -9.776485443115234
    9. '()' → logprob: -10.151485443115234
    10. '<|end|>' → logprob: -10.276485443115234

Token 10: '[:' (ID: 7808)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006917051505297422
    2. '[first' → logprob: -8.000691413879395
    3. ')' → logprob: -8.125691413879395
    4. '.split' → logprob: -10.250691413879395
    5. '[len' → logprob: -12.625691413879395
    6. '[
' → logprob: -12.625691413879395
    7. '[])' → logprob: -13.375691413879395
    8. ' [' → logprob: -13.625691413879395
    9. '[s' → logprob: -13.750691413879395
    10. ' )' → logprob: -13.875691413879395

Token 11: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.035048410296440125
    2. '2' → logprob: -3.410048484802246
    3. '3' → logprob: -6.660048484802246
    4. ' ' → logprob: -9.535048484802246
    5. '5' → logprob: -11.160048484802246
    6. '4' → logprob: -11.410048484802246
    7. '-' → logprob: -11.660048484802246
    8. 'len' → logprob: -12.285048484802246
    9. 's' → logprob: -12.535048484802246
    10. '0' → logprob: -12.535048484802246

Token 12: ']),' (ID: 19560)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0037443831097334623
    2. ']),' → logprob: -5.628744602203369
    3. ')' → logprob: -9.128744125366211
    4. '])
' → logprob: -10.878744125366211
    5. ']' → logprob: -12.378744125366211
    6. ' ])' → logprob: -12.878744125366211
    7. '])+' → logprob: -13.378744125366211
    8. ''])' → logprob: -13.503744125366211
    9. ')]' → logprob: -13.878744125366211
    10. ')])' → logprob: -14.003744125366211

Token 13: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005941832438111305
    2. ' int' → logprob: -5.130941867828369
    3. 's' → logprob: -11.380941390991211
    4. ' s' → logprob: -13.630941390991211
    5. ' ' → logprob: -15.505941390991211
    6. '<int' → logprob: -16.00594139099121
    7. '(int' → logprob: -16.13094139099121
    8. '=int' → logprob: -16.25594139099121
    9. '[int' → logprob: -16.75594139099121
    10. ':int' → logprob: -17.63094139099121

Token 14: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.20142270624637604
    2. '(' → logprob: -1.7014226913452148
    3. 's' → logprob: -12.701422691345215
    4. ' (' → logprob: -13.576422691345215
    5. ')(' → logprob: -13.701422691345215
    6. '(f' → logprob: -13.951422691345215
    7. ')' → logprob: -14.701422691345215
    8. '('' → logprob: -14.951422691345215
    9. '(ss' → logprob: -15.076422691345215
    10. ''(' → logprob: -15.576422691345215

Token 15: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012415809032972902
    2. '[:' → logprob: -9.000123977661133
    3. ' [' → logprob: -15.625123977661133
    4. '\[' → logprob: -15.750123977661133
    5. '[-' → logprob: -15.875123977661133
    6. '[
' → logprob: -16.875123977661133
    7. 's' → logprob: -17.125123977661133
    8. '```' → logprob: -17.250123977661133
    9. ''[' → logprob: -17.250123977661133
    10. ')' → logprob: -17.625123977661133

Token 16: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0010424555512145162
    2. '3' → logprob: -7.376042366027832
    3. ' ' → logprob: -8.126042366027832
    4. ':' → logprob: -9.626042366027832
    5. '4' → logprob: -10.251042366027832
    6. '   ' → logprob: -12.251042366027832
    7. '-' → logprob: -12.501042366027832
    8. '0' → logprob: -12.876042366027832
    9. '```' → logprob: -13.251042366027832
    10. '1' → logprob: -13.688542366027832

Token 17: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.082895273109898e-05
    2. '2' → logprob: -10.750030517578125
    3. '])' → logprob: -11.875030517578125
    4. ' ' → logprob: -13.625030517578125
    5. '4' → logprob: -14.875030517578125
    6. ':])
' → logprob: -15.000030517578125
    7. ' :' → logprob: -16.000030517578125
    8. '-' → logprob: -16.750030517578125
    9. '3' → logprob: -17.125030517578125
    10. '(' → logprob: -17.250030517578125

Token 18: '])

' (ID: 21045)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0387466736137867
    2. '4' → logprob: -3.2887465953826904
    3. '2' → logprob: -7.4137468338012695
    4. ')' → logprob: -10.28874683380127
    5. ' ' → logprob: -10.28874683380127
    6. ']' → logprob: -10.78874683380127
    7. ' ])' → logprob: -11.91374683380127
    8. '])]' → logprob: -13.28874683380127
    9. '])

' → logprob: -14.16374683380127
    10. '])
' → logprob: -14.28874683380127

Token 19: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32455024123191833
    2. ' if' → logprob: -1.8245502710342407
    3. ':' → logprob: -3.449550151824951
    4. '<|end|>' → logprob: -3.824550151824951
    5. '
' → logprob: -4.199550151824951
    6. '==' → logprob: -4.449550151824951
    7. ')' → logprob: -4.574550151824951
    8. ' ' → logprob: -5.449550151824951
    9. '```' → logprob: -5.574550151824951
    10. '#' → logprob: -5.824550151824951

Token 20: ' check' (ID: 2371)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01941812038421631
    2. '_' → logprob: -4.519418239593506
    3. ' i' → logprob: -5.769418239593506
    4. ' space' → logprob: -6.144418239593506
    5. ' check' → logprob: -7.394418239593506
    6. ' is' → logprob: -7.769418239593506
    7. ' valid' → logprob: -8.144417762756348
    8. ' max' → logprob: -8.394417762756348
    9. ' _' → logprob: -8.394417762756348
    10. ' a' → logprob: -8.519417762756348

Token 21: '_month' (ID: 43330)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869683861732483
    2. '_time' → logprob: -3.243696928024292
    3. '_' → logprob: -3.868696928024292
    4. '(time' → logprob: -3.993696928024292
    5. '_date' → logprob: -5.243696689605713
    6. '(month' → logprob: -5.243696689605713
    7. '_month' → logprob: -5.618696689605713
    8. '(s' → logprob: -5.618696689605713
    9. '(day' → logprob: -6.118696689605713
    10. '_valid' → logprob: -6.118696689605713

Token 22: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1307697296142578
    2. '(month' → logprob: -2.130769729614258
    3. '(m' → logprob: -5.880769729614258
    4. '(mm' → logprob: -8.505769729614258
    5. '()' → logprob: -8.755769729614258
    6. '():' → logprob: -9.255769729614258
    7. ' (' → logprob: -9.505769729614258
    8. '(M' → logprob: -9.630769729614258
    9. '(月' → logprob: -9.630769729614258
    10. '(day' → logprob: -9.755769729614258

Token 23: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01524607464671135
    2. ')' → logprob: -4.2652459144592285
    3. 'onth' → logprob: -6.8902459144592285
    4. '):
' → logprob: -10.640246391296387
    5. ':' → logprob: -11.515246391296387
    6. 'e' → logprob: -11.890246391296387
    7. ')):' → logprob: -12.015246391296387
    8. ' ):' → logprob: -12.890246391296387
    9. '):

' → logprob: -12.890246391296387
    10. 'o' → logprob: -13.515246391296387

Token 24: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02086557075381279
    2. ' return' → logprob: -4.395865440368652
    3. ' if' → logprob: -5.770865440368652
    4. ' ' → logprob: -6.020865440368652
    5. 'return' → logprob: -6.895865440368652
    6. '  ' → logprob: -7.770865440368652
    7. '(' → logprob: -8.145865440368652
    8. ':' → logprob: -8.270865440368652
    9. '	return' → logprob: -8.645865440368652
    10. '<|end|>' → logprob: -8.645865440368652

Token 25: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9900993704795837
    2. ' if' → logprob: -1.3650994300842285
    3. '   ' → logprob: -1.4900994300842285
    4. 'return' (adapté à ' return') → logprob: -2.1150994300842285
    5. 'if' → logprob: -3.6150994300842285
    6. '0' → logprob: -9.86509895324707
    7. '	return' → logprob: -10.36509895324707
    8. ' ' → logprob: -10.74009895324707
    9. '```' → logprob: -11.11509895324707
    10. '    ' → logprob: -11.24009895324707

Token 26: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002577559556812048
    2. ' ' → logprob: -6.502577781677246
    3. 'm' → logprob: -6.877577781677246
    4. '0' → logprob: -11.377577781677246
    5. '(' → logprob: -11.502577781677246
    6. 'True' → logprob: -11.502577781677246
    7. '(m' → logprob: -12.752577781677246
    8. ' m' → logprob: -12.877577781677246
    9. 'month' → logprob: -13.502577781677246
    10. '01' → logprob: -14.002577781677246

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014935573562979698
    2. 'm' → logprob: -6.626493453979492
    3. ' ' → logprob: -8.876493453979492
    4. '0' → logprob: -11.626493453979492
    5. '(' → logprob: -11.751493453979492
    6. '(m' → logprob: -12.626493453979492
    7. 'month' → logprob: -12.751493453979492
    8. '12' → logprob: -14.126493453979492
    9. ' m' → logprob: -14.126493453979492
    10. '   ' → logprob: -14.376493453979492

Token 28: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2523707151412964
    2. ' <=' → logprob: -1.5023707151412964
    3. ' ' → logprob: -9.502370834350586
    4. '1' → logprob: -9.502370834350586
    5. '```' → logprob: -9.877370834350586
    6. '2' → logprob: -10.002370834350586
    7. '<' → logprob: -10.377370834350586
    8. 'if' → logprob: -10.377370834350586
    9. 'm' → logprob: -10.627370834350586
    10. ' ' → logprob: -11.002370834350586

Token 29: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0007099286303855479
    2. ' m' → logprob: -7.2507100105285645
    3. '	m' → logprob: -20.750709533691406
    4. ')m' → logprob: -22.625709533691406
    5. 'month' → logprob: -23.000709533691406
    6. 'м' → logprob: -23.125709533691406
    7. 'ｍ' → logprob: -23.375709533691406
    8. ' ' → logprob: -23.375709533691406
    9. '_m' → logprob: -24.125709533691406
    10. '   ' → logprob: -24.125709533691406

Token 30: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.4779036045074463
    2. '<=' → logprob: -0.9779036045074463
    3. ' and' → logprob: -6.227903366088867
    4. 'and' → logprob: -6.352903366088867
    5. ' ' → logprob: -9.852903366088867
    6. '<|end|>' → logprob: -11.352903366088867
    7. '```' → logprob: -11.977903366088867
    8. '   ' → logprob: -12.477903366088867
    9. '1' → logprob: -12.727903366088867
    10. ')<=' → logprob: -13.102903366088867

Token 31: ' ' (ID: 220)
  Prédit: '12'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -0.004086116328835487
    2. ' ' → logprob: -5.504086017608643
    3. '1' → logprob: -11.8790864944458
    4. '2' → logprob: -15.7540864944458
    5. '  ' → logprob: -15.7540864944458
    6. '   ' → logprob: -15.8790864944458
    7. '```' → logprob: -16.066585540771484
    8. '3' → logprob: -17.441585540771484
    9. ' ' → logprob: -17.879085540771484
    10. '13' → logprob: -18.066585540771484

Token 32: '12' (ID: 899)
  Prédit: '12'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '12' → logprob: -6.694766489090398e-05
    2. ' ' → logprob: -9.625066757202148
    3. '1' → logprob: -15.000066757202148
    4. '2' → logprob: -15.750066757202148
    5. '```' → logprob: -16.37506675720215
    6. '   ' → logprob: -17.00006675720215
    7. '123' → logprob: -17.62506675720215
    8. '  ' → logprob: -17.68756675720215
    9. '13' → logprob: -17.81256675720215
    10. '122' → logprob: -18.37506675720215

Token 33: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03250462934374809
    2. '<|end|>' → logprob: -3.6575045585632324
    3. '

' → logprob: -5.907504558563232
    4. '\n' → logprob: -6.782504558563232
    5. 'if' → logprob: -7.407504558563232
    6. 'def' → logprob: -7.907504558563232
    7. '
' → logprob: -8.15750503540039
    8. '```' → logprob: -8.28250503540039
    9. '<|end|>' → logprob: -8.40750503540039
    10. 'first' → logprob: -9.28250503540039

Token 34: 'res' (ID: 430)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00591303501278162
    2. '
' → logprob: -5.630913257598877
    3. 'i' → logprob: -7.505913257598877
    4. ' if' → logprob: -7.880913257598877
    5. 'result' → logprob: -8.005912780761719
    6. 'print' → logprob: -8.130912780761719
    7. 'n' → logprob: -8.755912780761719
    8. 'valid' → logprob: -9.130912780761719
    9. '```' → logprob: -9.880912780761719
    10. '<|end|>' → logprob: -9.880912780761719

Token 35: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.15933477878570557
    2. ' =' → logprob: -2.034334659576416
    3. '=' → logprob: -4.909334659576416
    4. 'ults' → logprob: -4.909334659576416
    5. 'ULT' → logprob: -7.159334659576416
    6. 'ul' → logprob: -8.034335136413574
    7. 'ultat' → logprob: -8.034335136413574
    8. 'ulta' → logprob: -9.034335136413574
    9. 'olt' → logprob: -9.159335136413574
    10. '1' → logprob: -10.409335136413574

Token 36: ' None' (ID: 4662)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.7529476881027222
    2. '(check' → logprob: -1.3779476881027222
    3. '"' → logprob: -1.6279476881027222
    4. 'first' → logprob: -3.6279478073120117
    5. ' check' → logprob: -4.127947807312012
    6. 'any' → logprob: -4.877947807312012
    7. '(first' → logprob: -5.377947807312012
    8. '[]' → logprob: -5.377947807312012
    9. ''' → logprob: -5.502947807312012
    10. ' (' → logprob: -5.627947807312012

Token 37: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5313543677330017
    2. '
' → logprob: -2.0313544273376465
    3. ' if' → logprob: -2.1563544273376465
    4. ':' → logprob: -2.6563544273376465
    5. '<|end|>' → logprob: -2.9063544273376465
    6. '\n' → logprob: -4.0313544273376465
    7. '\' → logprob: -5.6563544273376465
    8. ':
' → logprob: -5.9063544273376465
    9. ',' → logprob: -5.9063544273376465
    10. '#' → logprob: -6.2813544273376465

Token 38: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010677669197320938
    2. ' if' → logprob: -5.010677814483643
    3. '<|end|>' → logprob: -6.010677814483643
    4. 'for' → logprob: -6.885677814483643
    5. '#' → logprob: -9.510677337646484
    6. '```' → logprob: -9.635677337646484
    7. ':' → logprob: -10.260677337646484
    8. '
' → logprob: -10.385677337646484
    9. '[' → logprob: -10.635677337646484
    10. ')' → logprob: -10.760677337646484

Token 39: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.12695172429084778
    2. 'check' → logprob: -2.1269516944885254
    3. ' first' → logprob: -11.751952171325684
    4. ' ' → logprob: -12.126952171325684
    5. ' len' → logprob: -12.626952171325684
    6. '   ' → logprob: -12.751952171325684
    7. ' not' → logprob: -13.126952171325684
    8. '(check' → logprob: -14.501952171325684
    9. 'first' → logprob: -14.876952171325684
    10. 'len' → logprob: -15.126952171325684

Token 40: '_month' (ID: 43330)
  Prédit: '_month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_month' → logprob: -0.00015085970517247915
    2. '_' → logprob: -9.375150680541992
    3. '_first' → logprob: -9.875150680541992
    4. '_m' → logprob: -12.375150680541992
    5. '_second' → logprob: -12.625150680541992
    6. '_(' → logprob: -13.250150680541992
    7. '_year' → logprob: -13.750150680541992
    8. '_mon' → logprob: -13.750150680541992
    9. '_week' → logprob: -14.250150680541992
    10. '(' → logprob: -14.500150680541992

Token 41: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -7.803360495017841e-05
    2. '(second' → logprob: -9.500078201293945
    3. '(' → logprob: -13.250078201293945
    4. ' (' → logprob: -14.000078201293945
    5. '(s' → logprob: -15.250078201293945
    6. 'first' → logprob: -15.875078201293945
    7. '(f' → logprob: -16.625078201293945
    8. ' first' → logprob: -17.625078201293945
    9. '(left' → logprob: -17.750078201293945
    10. '(last' → logprob: -17.875078201293945

Token 42: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14312909543514252
    2. '):' → logprob: -2.0181291103363037
    3. ' )' → logprob: -8.268129348754883
    4. ' ):' → logprob: -8.893129348754883
    5. ' and' → logprob: -10.643129348754883
    6. '):
' → logprob: -11.143129348754883
    7. 'and' → logprob: -11.643129348754883
    8. ' ' → logprob: -12.768129348754883
    9. ')>' → logprob: -13.518129348754883
    10. '),' → logprob: -14.018129348754883

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09914612025022507
    2. ' and' → logprob: -2.4741461277008057
    3. ' if' → logprob: -5.849145889282227
    4. ':' → logprob: -5.849145889282227
    5. ' ' → logprob: -5.974145889282227
    6. ':
' → logprob: -6.474145889282227
    7. ',' → logprob: -10.474145889282227
    8. '       ' → logprob: -10.599145889282227
    9. '
' → logprob: -10.599145889282227
    10. '  ' → logprob: -10.599145889282227

Token 44: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3521556854248047
    2. ' if' → logprob: -1.8521556854248047
    3. '   ' → logprob: -1.9771556854248047
    4. 'res' → logprob: -6.727155685424805
    5. ' res' → logprob: -9.102155685424805
    6. ' ' → logprob: -9.102155685424805
    7. '       ' → logprob: -10.227155685424805
    8. '	if' → logprob: -12.227155685424805
    9. '```' → logprob: -13.352155685424805
    10. '  ' → logprob: -14.227155685424805

Token 45: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.22794823348522186
    2. ' check' → logprob: -1.6029481887817383
    3. '1' → logprob: -6.477948188781738
    4. ' ' → logprob: -7.602948188781738
    5. '   ' → logprob: -7.852948188781738
    6. '12' → logprob: -9.977948188781738
    7. '  ' → logprob: -11.602948188781738
    8. '20' → logprob: -11.727948188781738
    9. '0' → logprob: -11.977948188781738
    10. '24' → logprob: -12.227948188781738

Token 46: '_month' (ID: 43330)
  Prédit: '_month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_month' → logprob: -6.670925358776003e-05
    2. '_second' → logprob: -9.750066757202148
    3. '_' → logprob: -12.125066757202148
    4. 'Month' → logprob: -14.125066757202148
    5. 'month' → logprob: -14.625066757202148
    6. '_MONTH' → logprob: -14.875066757202148
    7. '(month' → logprob: -14.875066757202148
    8. '_year' → logprob: -15.500066757202148
    9. '_(' → logprob: -15.750066757202148
    10. '_first' → logprob: -16.12506675720215

Token 47: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -1.0802738870552275e-05
    2. 'second' → logprob: -11.50001049041748
    3. ' (' → logprob: -15.37501049041748
    4. '(' → logprob: -15.62501049041748
    5. ' second' → logprob: -16.250011444091797
    6. '	second' → logprob: -17.250011444091797
    7. '(first' → logprob: -17.750011444091797
    8. '(next' → logprob: -18.375011444091797
    9. '(last' → logprob: -18.625011444091797
    10. '(seconds' → logprob: -18.625011444091797

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00010795372509164736
    2. ')' → logprob: -9.750107765197754
    3. '):
' → logprob: -10.000107765197754
    4. ' ):' → logprob: -13.250107765197754
    5. ':' → logprob: -13.875107765197754
    6. ')):' → logprob: -14.625107765197754
    7. ''):' → logprob: -15.500107765197754
    8. '):

' → logprob: -15.500107765197754
    9. '):
' → logprob: -15.625107765197754
    10. '():' → logprob: -16.12510871887207

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6384086012840271
    2. '   ' → logprob: -0.7634086012840271
    3. 'res' → logprob: -5.388408660888672
    4. ' res' → logprob: -6.888408660888672
    5. ' ' → logprob: -9.638408660888672
    6. '     ' → logprob: -10.138408660888672
    7. '	res' → logprob: -10.638408660888672
    8. '           ' → logprob: -11.138408660888672
    9. ',' → logprob: -11.638408660888672
    10. '    ' → logprob: -11.638408660888672

Token 50: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.026407822966575623
    2. '   ' → logprob: -3.6514077186584473
    3. ' res' → logprob: -9.651408195495605
    4. '       ' → logprob: -11.151408195495605
    5. ' ' → logprob: -11.276408195495605
    6. '	res' → logprob: -11.651408195495605
    7. '```' → logprob: -13.026408195495605
    8. '  ' → logprob: -13.526408195495605
    9. 'pass' → logprob: -13.776408195495605
    10. 'print' (adapté à ' print') → logprob: -14.276408195495605

Token 51: '('' (ID: 706)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.14885519444942474
    2. '("' → logprob: -2.023855209350586
    3. ''' → logprob: -5.773855209350586
    4. '('' → logprob: -6.773855209350586
    5. '"B' → logprob: -6.773855209350586
    6. '"A' → logprob: -8.898855209350586
    7. '   ' → logprob: -9.023855209350586
    8. '"AT' → logprob: -9.773855209350586
    9. '"No' → logprob: -10.023855209350586
    10. '"T' → logprob: -10.273855209350586

Token 52: 'AMB' (ID: 89274)
  Prédit: 'AMB'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AMB' → logprob: -0.324885755777359
    2. 'Amb' → logprob: -1.9498857259750366
    3. 'NA' → logprob: -2.324885845184326
    4. 'amb' → logprob: -3.574885845184326
    5. '不' → logprob: -6.949885845184326
    6. ' ambiguous' → logprob: -6.949885845184326
    7. 'Either' → logprob: -7.074885845184326
    8. 'ambigu' → logprob: -7.199885845184326
    9. 'Invalid' → logprob: -7.574885845184326
    10. 'Impossible' → logprob: -7.699885845184326

Token 53: 'IG' (ID: 3205)
  Prédit: 'IG'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IG' → logprob: -0.008473208174109459
    2. 'I' → logprob: -4.8834733963012695
    3. 'iguous' → logprob: -7.5084733963012695
    4. 'ER' → logprob: -9.00847339630127
    5. '```' → logprob: -9.38347339630127
    6. 'R' → logprob: -10.50847339630127
    7. '')' → logprob: -10.75847339630127
    8. '``' → logprob: -11.63347339630127
    9. 'ID' → logprob: -11.75847339630127
    10. 'IGO' → logprob: -12.13347339630127

Token 54: 'U' (ID: 52)
  Prédit: 'U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'U' → logprob: -0.0007463791989721358
    2. '')' → logprob: -7.375746250152588
    3. 'IOUS' → logprob: -9.500746726989746
    4. '')
' → logprob: -11.625746726989746
    5. ''U' → logprob: -11.625746726989746
    6. '')

' → logprob: -11.875746726989746
    7. 'IU' → logprob: -12.500746726989746
    8. 'OUS' → logprob: -12.750746726989746
    9. '```' → logprob: -13.125746726989746
    10. '''' → logprob: -13.250746726989746

Token 55: 'OUS' (ID: 101154)
  Prédit: 'OUS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OUS' → logprob: -0.003326480044052005
    2. 'O' → logprob: -5.753326416015625
    3. 'OU' → logprob: -9.378326416015625
    4. '\' → logprob: -11.378326416015625
    5. '0' → logprob: -12.128326416015625
    6. '-' → logprob: -12.128326416015625
    7. '1' → logprob: -12.253326416015625
    8. '_O' → logprob: -12.503326416015625
    9. 'OS' → logprob: -12.503326416015625
    10. '_' → logprob: -12.628326416015625

Token 56: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.20428457856178284
    2. '')' → logprob: -1.7042845487594604
    3. '')
' → logprob: -6.82928466796875
    4. ')
' → logprob: -6.95428466796875
    5. ')' → logprob: -7.20428466796875
    6. ')')
' → logprob: -10.32928466796875
    7. ''' → logprob: -10.95428466796875
    8. '')

' → logprob: -11.07928466796875
    9. '")
' → logprob: -11.45428466796875
    10. '\n' → logprob: -12.70428466796875

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06469184160232544
    2. 'elif' → logprob: -2.8146917819976807
    3. '
' → logprob: -6.43969202041626
    4. '```' → logprob: -7.56469202041626
    5. ' elif' → logprob: -8.189691543579102
    6. 'else' → logprob: -8.439691543579102
    7. '	elif' → logprob: -10.689691543579102
    8. ' else' → logprob: -10.689691543579102
    9. '  ' → logprob: -10.814691543579102
    10. '    
' → logprob: -10.939691543579102

Token 58: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3635910749435425
    2. 'else' (adapté à ' else') → logprob: -2.238591194152832
    3. ' else' → logprob: -2.363591194152832
    4. '
' → logprob: -2.863591194152832
    5. 'elif' → logprob: -3.238591194152832
    6. '<|end|>' → logprob: -6.113591194152832
    7. '```' → logprob: -6.238591194152832
    8. ' elif' → logprob: -6.238591194152832
    9. ')' → logprob: -7.113591194152832
    10. '<|end|>' → logprob: -8.488591194152832

Token 59: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3199194073677063
    2. ':
' → logprob: -1.3199193477630615
    3. '       ' → logprob: -5.194919586181641
    4. '   ' → logprob: -7.194919586181641
    5. '    ' → logprob: -9.06991958618164
    6. ' :
' → logprob: -9.06991958618164
    7. '):
' → logprob: -11.06991958618164
    8. '        ' → logprob: -11.06991958618164
    9. ' :' → logprob: -11.06991958618164
    10. ' print' → logprob: -11.31991958618164

Token 60: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22913070023059845
    2. 'print' → logprob: -1.729130744934082
    3. ' print' → logprob: -3.854130744934082
    4. '   ' → logprob: -5.104130744934082
    5. '```' → logprob: -10.604130744934082
    6. '           ' → logprob: -11.229130744934082
    7. '    ' → logprob: -11.479130744934082
    8. '     ' → logprob: -11.854130744934082
    9. ' ' → logprob: -12.104130744934082
    10. 'res' → logprob: -12.729130744934082

Token 61: ' res' (ID: 694)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2811639606952667
    2. ' print' → logprob: -1.4061639308929443
    3. '   ' → logprob: -12.031164169311523
    4. '       ' → logprob: -12.531164169311523
    5. '	print' → logprob: -13.156164169311523
    6. ' ' → logprob: -13.531164169311523
    7. '```' → logprob: -15.406164169311523
    8. '           ' → logprob: -16.031164169311523
    9. '.print' → logprob: -16.281164169311523
    10. ' prin' → logprob: -16.406164169311523

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196858361363411
    2. '=' → logprob: -2.8119685649871826
    3. ' ='' → logprob: -14.311968803405762
    4. ' ' → logprob: -15.311968803405762
    5. '='' → logprob: -16.061967849731445
    6. '＝' → logprob: -17.436967849731445
    7. 's' → logprob: -18.311967849731445
    8. ' ="' → logprob: -18.936967849731445
    9. ' =)' → logprob: -18.936967849731445
    10. ')' → logprob: -19.561967849731445

Token 63: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014997147023677826
    2. ''M' → logprob: -4.3899970054626465
    3. ''D' → logprob: -6.1399970054626465
    4. '"' → logprob: -8.764997482299805
    5. ' '' → logprob: -9.889997482299805
    6. ''US' → logprob: -9.889997482299805
    7. '   ' → logprob: -10.139997482299805
    8. ''A' → logprob: -11.639997482299805
    9. ' ' → logprob: -12.014997482299805
    10. '1' → logprob: -12.139997482299805

Token 64: 'MM' (ID: 12365)
  Prédit: 'MM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -0.00011641718447208405
    2. 'DD' → logprob: -10.000116348266602
    3. 'YY' → logprob: -10.125116348266602
    4. ''' → logprob: -11.500116348266602
    5. ' MM' → logprob: -11.750116348266602
    6. '-MM' → logprob: -12.750116348266602
    7. 'MMM' → logprob: -12.750116348266602
    8. 'MD' → logprob: -13.500116348266602
    9. '/MM' → logprob: -14.000116348266602
    10. 'M' → logprob: -14.375116348266602

Token 65: 'YY' (ID: 17848)
  Prédit: '-DD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-DD' → logprob: -0.45630502700805664
    2. '/DD' → logprob: -1.4563050270080566
    3. 'DD' → logprob: -2.2063050270080566
    4. 'YY' → logprob: -3.9563050270080566
    5. '/' → logprob: -6.581305027008057
    6. '')' → logprob: -6.706305027008057
    7. 'YYYY' → logprob: -7.456305027008057
    8. '-' → logprob: -7.456305027008057
    9. '/YYYY' → logprob: -8.831304550170898
    10. ''' → logprob: -9.706304550170898

Token 66: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010183949954807758
    2. '')' → logprob: -4.635183811187744
    3. ''''' → logprob: -8.260184288024902
    4. 'YYYY' → logprob: -10.010184288024902
    5. '''' → logprob: -10.260184288024902
    6. '```' → logprob: -10.260184288024902
    7. '<|end|>' → logprob: -11.385184288024902
    8. '''''' → logprob: -11.885184288024902
    9. ''\' → logprob: -12.385184288024902
    10. '']' → logprob: -12.510184288024902

Token 67: 'elif' (ID: 29767)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.31784364581108093
    2. 'elif' → logprob: -1.3178436756134033
    3. ' else' → logprob: -5.567843437194824
    4. '   ' → logprob: -7.817843437194824
    5. ' elif' → logprob: -8.317843437194824
    6. '```' → logprob: -9.317843437194824
    7. '<|end|>' → logprob: -12.192843437194824
    8. '       ' → logprob: -12.817843437194824
    9. 'print' → logprob: -13.317843437194824
    10. 'if' → logprob: -13.317843437194824

Token 68: ' check' (ID: 2371)
  Prédit: ' check'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.012539089657366276
    2. 'check' → logprob: -4.387538909912109
    3. ' ' → logprob: -10.88753890991211
    4. ' not' → logprob: -11.88753890991211
    5. '	check' → logprob: -14.01253890991211
    6. '(check' → logprob: -14.26253890991211
    7. '   ' → logprob: -14.51253890991211
    8. ' ' → logprob: -14.88753890991211
    9. '    ' → logprob: -15.13753890991211
    10. '>' → logprob: -15.32503890991211

Token 69: '_month' (ID: 43330)
  Prédit: '_month'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_month' → logprob: -9.253090865968261e-06
    2. '_MONTH' → logprob: -12.750009536743164
    3. 'Month' → logprob: -13.000009536743164
    4. '_' → logprob: -13.375009536743164
    5. 'month' → logprob: -13.500009536743164
    6. 'onth' → logprob: -15.125009536743164
    7. 'check' → logprob: -15.500009536743164
    8. '(month' → logprob: -15.625009536743164
    9. '_year' → logprob: -16.250009536743164
    10. 'MONTH' → logprob: -16.375009536743164

Token 70: '(second' (ID: 78627)
  Prédit: '(second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(second' → logprob: -0.31326746940612793
    2. '(first' → logprob: -1.313267469406128
    3. '(' → logprob: -12.438267707824707
    4. ' (' → logprob: -14.188267707824707
    5. '(last' → logprob: -14.813267707824707
    6. 'second' → logprob: -14.938267707824707
    7. '(left' → logprob: -15.813267707824707
    8. '(s' → logprob: -16.56326675415039
    9. 'first' → logprob: -16.93826675415039
    10. '(next' → logprob: -17.81326675415039

Token 71: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.000273971410933882
    2. '):
' → logprob: -8.250273704528809
    3. ')' → logprob: -12.250273704528809
    4. ':' → logprob: -12.375273704528809
    5. ' ):' → logprob: -13.250273704528809
    6. '   ' → logprob: -14.625273704528809
    7. ''):' → logprob: -14.625273704528809
    8. ' ' → logprob: -15.375273704528809
    9. '):
' → logprob: -15.625273704528809
    10. '():' → logprob: -15.750273704528809

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012951972894370556
    2. '       ' → logprob: -4.387951850891113
    3. 'res' → logprob: -8.262951850891113
    4. ' res' → logprob: -8.887951850891113
    5. '```' → logprob: -10.387951850891113
    6. '    ' → logprob: -12.012951850891113
    7. ' ' → logprob: -12.887951850891113
    8. '  ' → logprob: -13.137951850891113
    9. '    
' → logprob: -13.762951850891113
    10. '
' → logprob: -13.887951850891113

Token 73: ' print' (ID: 2123)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.4908517301082611
    2. '   ' → logprob: -0.9908517599105835
    3. ' res' → logprob: -4.115851879119873
    4. '       ' → logprob: -8.115851402282715
    5. '```' → logprob: -11.490851402282715
    6. ' ' → logprob: -12.115851402282715
    7. '	res' → logprob: -12.490851402282715
    8. '  ' → logprob: -13.240851402282715
    9. '    ' → logprob: -14.115851402282715
    10. '
' → logprob: -14.240851402282715

Token 74: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0027636289596557617
    2. '(' → logprob: -6.002763748168945
    3. '("' → logprob: -8.627763748168945
    4. '('(' → logprob: -9.252763748168945
    5. ''' → logprob: -12.627763748168945
    6. '("("' → logprob: -12.877763748168945
    7. ' ('' → logprob: -13.502763748168945
    8. '(\'' → logprob: -13.752763748168945
    9. '("'' → logprob: -14.002763748168945
    10. '()' → logprob: -14.252763748168945

Token 75: 'YY' (ID: 17848)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0019382734317332506
    2. 'YY' → logprob: -6.251938343048096
    3. 'YYYY' → logprob: -12.126937866210938
    4. '   ' → logprob: -13.626937866210938
    5. '`' → logprob: -13.751937866210938
    6. '"' → logprob: -14.001937866210938
    7. ''US' → logprob: -14.376937866210938
    8. ' '' → logprob: -15.751937866210938
    9. ' YY' → logprob: -16.751937866210938
    10. '’' → logprob: -17.126937866210938

Token 76: 'MM' (ID: 12365)
  Prédit: 'MM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MM' → logprob: -4.320199877838604e-07
    2. 'mm' → logprob: -15.0
    3. 'M' → logprob: -18.5
    4. ' MM' → logprob: -18.625
    5. 'YY' → logprob: -18.625
    6. '-MM' → logprob: -18.875
    7. 'DD' → logprob: -18.875
    8. 'MMdd' → logprob: -19.0
    9. '_MM' → logprob: -19.625
    10. 'MMM' → logprob: -20.0

Token 77: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.31341350078582764
    2. '')
' → logprob: -1.3134135007858276
    3. '')
' → logprob: -9.063413619995117
    4. '')

' → logprob: -11.063413619995117
    5. ''' → logprob: -11.438413619995117
    6. ')' → logprob: -11.938413619995117
    7. ')')
' → logprob: -14.063413619995117
    8. '")' → logprob: -14.438413619995117
    9. ')
' → logprob: -14.813413619995117
    10. '")
' → logprob: -15.188413619995117

Token 78: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0009046725463122129
    2. 'elif' → logprob: -7.125904560089111
    3. '```' → logprob: -9.62590503692627
    4. ' else' → logprob: -10.50090503692627
    5. '<|end|>' → logprob: -13.00090503692627
    6. 'if' → logprob: -13.00090503692627
    7. '``' → logprob: -14.00090503692627
    8. 'print' → logprob: -14.50090503692627
    9. '   ' → logprob: -15.62590503692627
    10. ')' → logprob: -15.87590503692627

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017720464384183288
    2. ':
' → logprob: -6.376771926879883
    3. '<|end|>' → logprob: -10.251771926879883
    4. ' :' → logprob: -11.251771926879883
    5. '   ' → logprob: -11.876771926879883
    6. '{' → logprob: -12.376771926879883
    7. '```' → logprob: -13.376771926879883
    8. ':

' → logprob: -13.376771926879883
    9. '():' → logprob: -14.001771926879883
    10. '<|end|>' → logprob: -14.001771926879883

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3349447548389435
    2. 'print' → logprob: -1.459944725036621
    3. ' print' → logprob: -2.959944725036621
    4. '```' → logprob: -7.584944725036621
    5. '``' → logprob: -11.084944725036621
    6. '	print' → logprob: -11.209944725036621
    7. '    ' → logprob: -12.334944725036621
    8. '       ' → logprob: -12.959944725036621
    9. ' ' → logprob: -13.459944725036621
    10. '
' → logprob: -14.209944725036621

Token 81: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0048231263644993305
    2. ' print' → logprob: -5.629823207855225
    3. '   ' → logprob: -6.754823207855225
    4. '```' → logprob: -10.129822731018066
    5. '``' → logprob: -12.129822731018066
    6. 'pass' → logprob: -12.504822731018066
    7. '	print' → logprob: -12.629822731018066
    8. '    ' → logprob: -13.504822731018066
    9. 'res' → logprob: -14.004822731018066
    10. ' ' → logprob: -14.254822731018066

Token 82: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.226152703166008
    2. '_' → logprob: -2.4761526584625244
    3. 'i' → logprob: -2.8511526584625244
    4. ' _' → logprob: -3.8511526584625244
    5. 'm' → logprob: -4.7261528968811035
    6. ' c' → logprob: -5.6011528968811035
    7. ' ' → logprob: -5.6011528968811035
    8. 'd' → logprob: -5.6011528968811035
    9. 'c' → logprob: -5.7261528968811035
    10. ' year' → logprob: -6.3511528968811035

Token 83: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5850228667259216
    2. '_' → logprob: -1.0850229263305664
    3. 'in' → logprob: -3.3350229263305664
    4. 'i' → logprob: -3.8350229263305664
    5. ' _' → logprob: -3.8350229263305664
    6. 's' → logprob: -5.085022926330566
    7. ' i' → logprob: -5.210022926330566
    8. 'n' → logprob: -5.710022926330566
    9. 'range' → logprob: -5.835022926330566
    10. ' ' → logprob: -6.460022926330566

Token 84: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06483440846204758
    2. ' range' → logprob: -3.4398343563079834
    3. 's' → logprob: -4.4398345947265625
    4. '[' → logprob: -4.9398345947265625
    5. ''' → logprob: -5.4398345947265625
    6. '(' → logprob: -6.6898345947265625
    7. '(range' → logprob: -7.0648345947265625
    8. ' s' → logprob: -7.1898345947265625
    9. '['' → logprob: -7.3148345947265625
    10. '('' → logprob: -7.3148345947265625

Token 85: '(' (ID: 7)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18764252960681915
    2. '(' → logprob: -1.8126425743103027
    3. '10' → logprob: -5.687642574310303
    4. '3' → logprob: -5.687642574310303
    5. '5' → logprob: -8.312642097473145
    6. ' (' → logprob: -8.562642097473145
    7. '100' → logprob: -8.562642097473145
    8. '2' → logprob: -8.562642097473145
    9. '1' → logprob: -9.187642097473145
    10. '4' → logprob: -9.437642097473145

Token 86: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4391395151615143
    2. '3' → logprob: -1.814139485359192
    3. '1' → logprob: -2.4391396045684814
    4. '2' → logprob: -3.1891396045684814
    5. 'int' → logprob: -3.5641396045684814
    6. '5' → logprob: -3.8141396045684814
    7. '100' → logprob: -4.689139366149902
    8. ' ' → logprob: -6.564139366149902
    9. '0' → logprob: -6.814139366149902
    10. '4' → logprob: -7.439139366149902

Token 87: '):
' (ID: 1883)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007400614558719099
    2. ' ' → logprob: -7.625740051269531
    3. '00' → logprob: -8.500740051269531
    4. '1' → logprob: -11.000740051269531
    5. '000' → logprob: -11.000740051269531
    6. '2' → logprob: -12.250740051269531
    7. '10' → logprob: -12.625740051269531
    8. ',' → logprob: -12.750740051269531
    9. '3' → logprob: -13.500740051269531
    10. '(' → logprob: -13.750740051269531

Token 88: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5017791986465454
    2. '       ' → logprob: -1.0017791986465454
    3. 'print' → logprob: -4.126779079437256
    4. ' print' → logprob: -4.751779079437256
    5. ' pass' → logprob: -6.876779079437256
    6. '    ' → logprob: -7.626779079437256
    7. 'pass' → logprob: -7.751779079437256
    8. ' raise' → logprob: -8.376779556274414
    9. 'raise' → logprob: -8.626779556274414
    10. '```' → logprob: -10.501779556274414

Token 89: ' res' (ID: 694)
  Prédit: ' pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -1.162207007408142
    2. 'pass' → logprob: -1.162207007408142
    3. 'print' → logprob: -1.287207007408142
    4. ' print' → logprob: -3.0372071266174316
    5. '   ' → logprob: -3.4122071266174316
    6. 'break' → logprob: -5.412207126617432
    7. ' break' → logprob: -5.537207126617432
    8. 'raise' → logprob: -5.912207126617432
    9. 'res' (adapté à ' res') → logprob: -6.037207126617432
    10. ' res' → logprob: -6.912207126617432

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04877857118844986
    2. ' =' → logprob: -3.048778533935547
    3. ' is' → logprob: -9.673778533935547
    4. '=None' → logprob: -9.798778533935547
    5. ' ' → logprob: -10.423778533935547
    6. '<|end|>' → logprob: -11.173778533935547
    7. '+=' → logprob: -12.548778533935547
    8. ' or' → logprob: -12.548778533935547
    9. 'is' → logprob: -13.048778533935547
    10. '='' → logprob: -13.423778533935547

Token 91: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07349596172571182
    2. '"' → logprob: -2.948495864868164
    3. 'NA' → logprob: -4.948495864868164
    4. '   ' → logprob: -5.698495864868164
    5. '`' → logprob: -6.073495864868164
    6. '-' → logprob: -6.698495864868164
    7. ''N' → logprob: -7.073495864868164
    8. ''D' → logprob: -7.198495864868164
    9. '''' → logprob: -8.198495864868164
    10. ''A' → logprob: -8.448495864868164

Token 92: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.007662932854145765
    2. ''' → logprob: -5.132662773132324
    3. '-' → logprob: -7.757662773132324
    4. ' NA' → logprob: -8.382662773132324
    5. '''' → logprob: -8.507662773132324
    6. 'Invalid' → logprob: -8.757662773132324
    7. 'N' → logprob: -8.882662773132324
    8. 'INVALID' → logprob: -9.132662773132324
    9. 'Na' → logprob: -9.882662773132324
    10. ''N' → logprob: -10.132662773132324

Token 93: ''
' (ID: 2207)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.5251678228378296
    2. ''' → logprob: -0.9001678228378296
    3. '')
' → logprob: -6.650167942047119
    4. ')' → logprob: -8.025167465209961
    5. 'print' → logprob: -8.775167465209961
    6. ''''' → logprob: -9.275167465209961
    7. '')

' → logprob: -10.775167465209961
    8. '');' → logprob: -10.775167465209961
    9. ''M' → logprob: -11.025167465209961
    10. '\n' → logprob: -11.150167465209961

Token 94: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10024431347846985
    2. 'if' → logprob: -2.3502442836761475
    3. ' if' → logprob: -10.725244522094727
    4. '```' → logprob: -12.225244522094727
    5. ' print' → logprob: -12.350244522094727
    6. '
' → logprob: -12.350244522094727
    7. '<|end|>' → logprob: -13.600244522094727
    8. '#print' → logprob: -15.600244522094727
    9. '#' → logprob: -16.100244522094727
    10. '   ' → logprob: -16.225244522094727

Token 95: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.00408160500228405
    2. 'res' → logprob: -5.504081726074219
    3. ' not' → logprob: -13.504081726074219
    4. ' ' → logprob: -13.754081726074219
    5. ' ' → logprob: -14.754081726074219
    6. '	res' → logprob: -15.879081726074219
    7. ' re' → logprob: -17.37908172607422
    8. 's' → logprob: -17.75408172607422
    9. '(res' → logprob: -17.75408172607422
    10. 'not' → logprob: -18.12908172607422

Token 96: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.05507500842213631
    2. ':' → logprob: -2.93007493019104
    3. 'is' → logprob: -9.305074691772461
    4. ' :' → logprob: -9.680074691772461
    5. ' !=' → logprob: -11.305074691772461
    6. '!=' → logprob: -11.430074691772461
    7. '==' → logprob: -12.055074691772461
    8. ' ==' → logprob: -12.305074691772461
    9. ':is' → logprob: -14.055074691772461
    10. ':
' → logprob: -14.180074691772461

Token 97: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03212433308362961
    2. ' None' → logprob: -3.6571242809295654
    3. 'None' → logprob: -5.7821245193481445
    4. 'not' → logprob: -5.9071245193481445
    5. ' ' → logprob: -13.032124519348145
    6. ' '' → logprob: -13.282124519348145
    7. ''' → logprob: -14.782124519348145
    8. ' none' → logprob: -15.532124519348145
    9. '	not' → logprob: -16.157123565673828
    10. '(None' → logprob: -16.407123565673828

Token 98: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.25192946195602417
    2. 'None' → logprob: -1.501929521560669
    3. '(None' → logprob: -15.37692928314209
    4. ' ' → logprob: -16.376930236816406
    5. '_None' → logprob: -17.001930236816406
    6. '   ' → logprob: -17.751930236816406
    7. '=None' → logprob: -18.126930236816406
    8. ' none' → logprob: -18.251930236816406
    9. '  ' → logprob: -19.251930236816406
    10. '.None' → logprob: -19.376930236816406

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005247156601399183
    2. ':
' → logprob: -5.255247116088867
    3. '   ' → logprob: -11.505247116088867
    4. ' :' → logprob: -13.380247116088867
    5. 'print' → logprob: -14.005247116088867
    6. ' print' → logprob: -15.255247116088867
    7. ' :
' → logprob: -15.505247116088867
    8. '):' → logprob: -16.005247116088867
    9. ':return' → logprob: -16.755247116088867
    10. '       ' → logprob: -16.880247116088867

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10655631870031357
    2. ' print' → logprob: -2.6065564155578613
    3. 'print' → logprob: -3.6065564155578613
    4. '       ' → logprob: -8.981555938720703
    5. '	print' → logprob: -11.731555938720703
    6. '```' → logprob: -11.731555938720703
    7. ' ' → logprob: -16.356555938720703
    8. '
' → logprob: -16.356555938720703
    9. '           ' → logprob: -16.481555938720703
    10. '.print' → logprob: -16.731555938720703

Token 101: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.2629586160182953
    2. 'print' (adapté à ' print') → logprob: -1.5129586458206177
    3. '   ' → logprob: -4.512958526611328
    4. '	print' → logprob: -13.012958526611328
    5. '```' → logprob: -14.387958526611328
    6. '.print' → logprob: -16.137958526611328
    7. '       ' → logprob: -16.887958526611328
    8. ' prints' → logprob: -17.887958526611328
    9. ' ' → logprob: -17.887958526611328
    10. '    ' → logprob: -18.762958526611328

Token 102: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38934409618377686
    2. '(res' → logprob: -1.1393440961837769
    3. '('' → logprob: -6.014344215393066
    4. '(f' → logprob: -11.014344215393066
    5. '(
' → logprob: -13.014344215393066
    6. '("("' → logprob: -13.014344215393066
    7. ' (' → logprob: -13.389344215393066
    8. '()' → logprob: -13.764344215393066
    9. '(s' → logprob: -13.764344215393066
    10. '(re' → logprob: -14.764344215393066

Token 103: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -16.0
    3. '))' → logprob: -16.625
    4. ')`' → logprob: -16.75
    5. ' )' → logprob: -17.125
    6. '())' → logprob: -17.625
    7. '')' → logprob: -17.75
    8. '`)' → logprob: -18.875
    9. ')#' → logprob: -19.875
    10. ')}' → logprob: -20.0


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 101
Tokens correctement prédits (1ère position, stricte): 44
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 86
Précision stricte (1ère position): 43.56%
Précision adaptée (1ère position): 44.55%
Précision (top 10): 85.15%
================================================================================
