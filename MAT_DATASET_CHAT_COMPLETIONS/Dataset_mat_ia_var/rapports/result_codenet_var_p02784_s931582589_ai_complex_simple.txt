================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:28:13
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

def sophisticated_input():
    return map(int, input().split())

def main():
    H, N = sophisticated_input()
    A = list(sophisticated_input())
    verdict = (lambda x, y: ["No", "Yes"][x >= y])(reduce(add, A, 0), H)
    print(verdict)

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019195254892110825
    2. '(lambda' → logprob: -4.394195079803467
    3. '.' → logprob: -5.144195079803467
    4. ',' → logprob: -8.019195556640625
    5. ' (' → logprob: -8.519195556640625
    6. '```' → logprob: -9.519195556640625
    7. '(
' → logprob: -10.144195556640625
    8. '\(' → logprob: -10.269195556640625
    9. '\' → logprob: -10.394195556640625
    10. 'lambda' → logprob: -11.019195556640625

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042372774332761765
    2. 'def' → logprob: -3.667372703552246
    3. '\' → logprob: -4.542372703552246
    4. ',' → logprob: -6.417372703552246
    5. '(
' → logprob: -7.292372703552246
    6. '```' → logprob: -7.542372703552246
    7. '(lambda' → logprob: -7.667372703552246
    8. '\(' → logprob: -7.917372703552246
    9. ' ' → logprob: -8.792372703552246
    10. '\n' → logprob: -8.792372703552246

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.1674761325120926
    2. ' itertools' → logprob: -2.292476177215576
    3. ' math' → logprob: -3.917476177215576
    4. ' collections' → logprob: -3.917476177215576
    5. 'operator' → logprob: -4.417476177215576
    6. 'collections' → logprob: -7.792476177215576
    7. ' typing' → logprob: -8.042475700378418
    8. 'math' → logprob: -8.167475700378418
    9. ' os' → logprob: -8.667475700378418
    10. ' ' → logprob: -9.667475700378418

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.2034524381160736
    2. ' import' → logprob: -2.5784523487091064
    3. ' ' → logprob: -2.7034523487091064
    4. ' mul' → logprob: -3.3284523487091064
    5. 'add' → logprob: -5.8284525871276855
    6. ' item' → logprob: -6.9534525871276855
    7. 'import' → logprob: -7.9534525871276855
    8. ' ad' → logprob: -8.203452110290527
    9. ' icon' → logprob: -8.453452110290527
    10. 'mul' → logprob: -8.578452110290527

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05271875485777855
    2. '(
' → logprob: -4.052718639373779
    3. ',' → logprob: -4.552718639373779
    4. '\n' → logprob: -4.677718639373779
    5. '\' → logprob: -4.802718639373779
    6. '#' → logprob: -6.677718639373779
    7. '`' → logprob: -6.802718639373779
    8. '
' → logprob: -7.677718639373779
    9. '()' → logprob: -7.802718639373779
    10. ' ' → logprob: -7.927718639373779

Token 10: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.025066617876291275
    2. '(
' → logprob: -3.775066614151001
    3. '#' → logprob: -7.77506685256958
    4. '\' → logprob: -8.025066375732422
    5. 'def' → logprob: -8.525066375732422
    6. ',' → logprob: -8.525066375732422
    7. '(

' → logprob: -9.025066375732422
    8. '\n' → logprob: -9.275066375732422
    9. 'a' → logprob: -9.775066375732422
    10. 'result' → logprob: -10.025066375732422

Token 11: ' sophisticated' (ID: 36278)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.579380989074707
    2. ' reduce' → logprob: -1.079380989074707
    3. ' sum' → logprob: -3.204380989074707
    4. ' map' → logprob: -3.829380989074707
    5. ' add' → logprob: -4.454380989074707
    6. '_reduce' → logprob: -5.454380989074707
    7. ' calculate' → logprob: -5.579380989074707
    8. 'reduce' → logprob: -5.954380989074707
    9. ' process' → logprob: -6.329380989074707
    10. ' ' → logprob: -6.579380989074707

Token 12: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12210594862699509
    2. '(' → logprob: -2.247105836868286
    3. '_s' → logprob: -5.122106075286865
    4. ' ' → logprob: -7.247106075286865
    5. '_space' → logprob: -7.497106075286865
    6. '_function' → logprob: -7.622106075286865
    7. ' _' → logprob: -7.747106075286865
    8. ' (' → logprob: -8.372105598449707
    9. '_add' → logprob: -9.497105598449707
    10. '_sum' → logprob: -9.997105598449707

Token 13: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003475101664662361
    2. '_' → logprob: -5.753475189208984
    3. ' (' → logprob: -9.753475189208984
    4. '("("' → logprob: -10.253475189208984
    5. '_parent' → logprob: -10.378475189208984
    6. '()' → logprob: -10.753475189208984
    7. '('' → logprob: -10.878475189208984
    8. 's' → logprob: -11.128475189208984
    9. '_string' → logprob: -11.503475189208984
    10. '(prompt' → logprob: -11.628475189208984

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026116473600268364
    2. ' return' → logprob: -4.776116371154785
    3. '(' → logprob: -5.401116371154785
    4. ' input' → logprob: -5.776116371154785
    5. 'input' → logprob: -6.401116371154785
    6. ' ' → logprob: -6.651116371154785
    7. 'return' → logprob: -6.651116371154785
    8. '()' → logprob: -7.151116371154785
    9. '    ' → logprob: -7.276116371154785
    10. ''' → logprob: -7.401116371154785

Token 15: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4902360737323761
    2. ' return' → logprob: -1.3652360439300537
    3. '   ' → logprob: -3.3652360439300537
    4. 'try' → logprob: -3.4902360439300537
    5. 'input' → logprob: -3.7402360439300537
    6. ' try' → logprob: -4.240236282348633
    7. 'user' → logprob: -4.615236282348633
    8. ' input' → logprob: -4.865236282348633
    9. ' user' → logprob: -5.490236282348633
    10. ' line' → logprob: -6.740236282348633

Token 16: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11037362366914749
    2. 'input' → logprob: -2.4853737354278564
    3. ' int' → logprob: -4.610373497009277
    4. ' list' → logprob: -4.735373497009277
    5. 'int' → logprob: -7.110373497009277
    6. 'list' → logprob: -7.235373497009277
    7. '"' → logprob: -8.735373497009277
    8. ' map' → logprob: -9.110373497009277
    9. ' ' → logprob: -9.235373497009277
    10. ' str' → logprob: -9.360373497009277

Token 17: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27068793773651123
    2. '(int' → logprob: -1.7706879377365112
    3. '(lambda' → logprob: -2.895688056945801
    4. '(str' → logprob: -4.520688056945801
    5. '(
' → logprob: -8.7706880569458
    6. ' (' → logprob: -9.0206880569458
    7. '(input' → logprob: -9.1456880569458
    8. 'int' → logprob: -9.5206880569458
    9. '(list' → logprob: -9.6456880569458
    10. '<|end|>' → logprob: -9.6456880569458

Token 18: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08231759816408157
    2. '(' → logprob: -3.207317590713501
    3. ')' → logprob: -3.832317590713501
    4. 'input' → logprob: -4.70731782913208
    5. ',' → logprob: -5.95731782913208
    6. '(user' → logprob: -7.20731782913208
    7. ',input' → logprob: -7.70731782913208
    8. '<|end|>' → logprob: -7.83231782913208
    9. '())' → logprob: -7.83231782913208
    10. '(stdin' → logprob: -7.83231782913208

Token 19: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6335693597793579
    2. 'input' → logprob: -0.7585693597793579
    3. ')' → logprob: -7.258569240570068
    4. '(input' → logprob: -8.758569717407227
    5. ' ' → logprob: -10.133569717407227
    6. ' )' → logprob: -11.383569717407227
    7. '	input' → logprob: -11.758569717407227
    8. '   ' → logprob: -12.008569717407227
    9. ' iter' → logprob: -12.008569717407227
    10. ',input' → logprob: -12.133569717407227

Token 20: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5422624945640564
    2. '(' → logprob: -1.2922625541687012
    3. '())' → logprob: -2.667262554168701
    4. '(()' → logprob: -3.167262554168701
    5. '('' → logprob: -3.667262554168701
    6. '().' → logprob: -5.917262554168701
    7. '("("' → logprob: -6.917262554168701
    8. '());' → logprob: -6.917262554168701
    9. '()))' → logprob: -7.542262554168701
    10. '();)' → logprob: -7.917262554168701

Token 21: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00038920470979064703
    2. 'strip' → logprob: -8.250389099121094
    3. ' split' → logprob: -9.000389099121094
    4. '(split' → logprob: -13.375389099121094
    5. 'spl' → logprob: -13.625389099121094
    6. 'rstrip' → logprob: -14.125389099121094
    7. ')' → logprob: -14.500389099121094
    8. 's' → logprob: -15.000389099121094
    9. ' ' → logprob: -17.125389099121094
    10. ' strip' → logprob: -17.625389099121094

Token 22: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2568548619747162
    2. '()))' → logprob: -1.5068548917770386
    3. '))' → logprob: -6.006855010986328
    4. ')' → logprob: -6.381855010986328
    5. '()' → logprob: -7.256855010986328
    6. '(' → logprob: -10.756855010986328
    7. ' ())' → logprob: -11.506855010986328
    8. '())))' → logprob: -12.131855010986328
    9. '()),' → logprob: -12.256855010986328
    10. '())
' → logprob: -12.756855010986328

Token 23: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09870393574237823
    2. 'n' → logprob: -3.0987038612365723
    3. 'for' → logprob: -3.7237038612365723
    4. 'a' → logprob: -4.723703861236572
    5. 'data' → logprob: -5.723703861236572
    6. 'numbers' → logprob: -5.848703861236572
    7. 'x' → logprob: -5.973703861236572
    8. 'result' → logprob: -7.223703861236572
    9. 'number' → logprob: -7.223703861236572
    10. '\' → logprob: -7.348703861236572

Token 24: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -1.035201072692871
    2. ' sophisticated' → logprob: -1.285201072692871
    3. ' reduce' → logprob: -1.535201072692871
    4. ' add' → logprob: -2.910201072692871
    5. ' factorial' → logprob: -4.410201072692871
    6. ' process' → logprob: -4.535201072692871
    7. ' soph' → logprob: -4.660201072692871
    8. ' calculate' → logprob: -4.785201072692871
    9. ' combine' → logprob: -5.035201072692871
    10. ' sum' → logprob: -5.285201072692871

Token 25: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0009574358118698001
    2. '(' → logprob: -7.500957489013672
    3. '()' → logprob: -7.875957489013672
    4. ' ():' → logprob: -11.125957489013672
    5. ':' → logprob: -12.375957489013672
    6. '(:' → logprob: -12.625957489013672
    7. '_' → logprob: -14.500957489013672
    8. '():
' → logprob: -15.125957489013672
    9. '(":' → logprob: -15.375957489013672
    10. '):' → logprob: -15.750957489013672

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06796877831220627
    2. 'n' → logprob: -3.4429688453674316
    3. 'numbers' → logprob: -4.817968845367432
    4. 'data' → logprob: -4.942968845367432
    5. ' n' → logprob: -5.317968845367432
    6. ' numbers' → logprob: -5.442968845367432
    7. 'a' → logprob: -6.192968845367432
    8. 'nums' → logprob: -6.692968845367432
    9. ' data' → logprob: -6.942968845367432
    10. ' nums' → logprob: -7.067968845367432

Token 27: ' H' (ID: 487)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1688216924667358
    2. 'numbers' → logprob: -1.4188216924667358
    3. 'nums' → logprob: -2.2938218116760254
    4. ' numbers' → logprob: -2.4188218116760254
    5. 'n' → logprob: -2.9188218116760254
    6. 'data' → logprob: -3.2938218116760254
    7. 'lst' → logprob: -3.6688218116760254
    8. ' nums' → logprob: -3.7938218116760254
    9. 'arr' → logprob: -3.9188218116760254
    10. 'total' → logprob: -4.168821811676025

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2750260531902313
    2. ' ,' → logprob: -1.7750260829925537
    3. ' =' → logprob: -2.9000260829925537
    4. '   ' → logprob: -5.400025844573975
    5. ' ' → logprob: -5.525025844573975
    6. '=' → logprob: -6.025025844573975
    7. '  ' → logprob: -6.150025844573975
    8. '[' → logprob: -7.525025844573975
    9. '    ' → logprob: -7.775025844573975
    10. 'W' → logprob: -8.525026321411133

Token 29: ' N' (ID: 478)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.09195440262556076
    2. ' W' → logprob: -2.466954469680786
    3. 'N' → logprob: -6.216954231262207
    4. 'M' → logprob: -8.216954231262207
    5. 'T' → logprob: -8.341954231262207
    6. 'S' → logprob: -8.966954231262207
    7. ' ' → logprob: -9.341954231262207
    8. 'D' → logprob: -9.466954231262207
    9. ' N' → logprob: -9.591954231262207
    10. ' M' → logprob: -11.216954231262207

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889892905950546
    2. '=' → logprob: -2.5788989067077637
    3. ',' → logprob: -12.703899383544922
    4. '   ' → logprob: -12.953899383544922
    5. ' ' → logprob: -13.328899383544922
    6. '  ' → logprob: -14.328899383544922
    7. '=input' → logprob: -14.453899383544922
    8. ')' → logprob: -14.953899383544922
    9. '=int' → logprob: -15.203899383544922
    10. '    ' → logprob: -15.953899383544922

Token 31: ' sophisticated' (ID: 36278)
  Prédit: ' sophisticated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sophisticated' → logprob: -0.009105530567467213
    2. 's' → logprob: -4.759105682373047
    3. ' map' → logprob: -8.884105682373047
    4. 'map' → logprob: -9.009105682373047
    5. ' soph' → logprob: -9.509105682373047
    6. ' sophist' → logprob: -9.884105682373047
    7. ' ' → logprob: -10.384105682373047
    8. 'Soph' → logprob: -10.509105682373047
    9. ' sofistic' → logprob: -11.509105682373047
    10. ' advanced' → logprob: -12.321605682373047

Token 32: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.047134305234067e-05
    2. '_' → logprob: -10.875030517578125
    3. '_inputs' → logprob: -12.000030517578125
    4. 'input' → logprob: -13.250030517578125
    5. '_output' → logprob: -14.375030517578125
    6. '_in' → logprob: -14.625030517578125
    7. ' _' → logprob: -15.125030517578125
    8. 'Input' → logprob: -15.250030517578125
    9. '(_' → logprob: -15.375030517578125
    10. '_s' → logprob: -15.625030517578125

Token 33: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.537868779967539e-06
    2. ' ()' → logprob: -12.750008583068848
    3. '()
' → logprob: -12.875008583068848
    4. '()`' → logprob: -14.000008583068848
    5. '()]' → logprob: -14.625008583068848
    6. '()

' → logprob: -14.625008583068848
    7. '(' → logprob: -14.625008583068848
    8. '())' → logprob: -15.500008583068848
    9. '`()' → logprob: -15.500008583068848
    10. '()<' → logprob: -16.25000762939453

Token 34: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4366377294063568
    2. '    
' → logprob: -2.3116376399993896
    3. '<|end|>' → logprob: -2.4366376399993896
    4. '
' → logprob: -2.5616376399993896
    5. 'data' → logprob: -3.8116376399993896
    6. 'result' → logprob: -4.436637878417969
    7. '```' → logprob: -4.811637878417969
    8. 'tokens' → logprob: -5.061637878417969
    9. ' ' → logprob: -5.624137878417969
    10. '<|end|>' → logprob: -6.436637878417969

Token 35: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -1.0730847120285034
    2. 'a' → logprob: -1.8230847120285034
    3. ' A' → logprob: -1.8230847120285034
    4. 'bomb' → logprob: -2.323084831237793
    5. 'dp' → logprob: -3.573084831237793
    6. 'd' → logprob: -3.573084831237793
    7. ' bomb' → logprob: -3.948084831237793
    8. ' a' → logprob: -4.448084831237793
    9. 'requirements' → logprob: -4.823084831237793
    10. 's' → logprob: -5.073084831237793

Token 36: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08301331102848053
    2. '=' → logprob: -2.7080132961273193
    3. 's' → logprob: -5.208013534545898
    4. ' ' → logprob: -5.583013534545898
    5. ',' → logprob: -6.583013534545898
    6. 'rray' → logprob: -7.208013534545898
    7. 'rr' → logprob: -7.583013534545898
    8. '_list' → logprob: -7.708013534545898
    9. '=[]' → logprob: -8.708013534545898
    10. '_values' → logprob: -9.083013534545898

Token 37: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.406672865152359
    2. 'list' → logprob: -1.1566728353500366
    3. ' [' → logprob: -4.781672954559326
    4. '[' → logprob: -5.656672954559326
    5. '[s' → logprob: -5.781672954559326
    6. 's' → logprob: -6.406672954559326
    7. '[]' → logprob: -6.531672954559326
    8. '[list' → logprob: -7.906672954559326
    9. ' sophisticated' → logprob: -8.281672477722168
    10. ' []' → logprob: -8.406672477722168

Token 38: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.09385527670383453
    2. '(map' → logprob: -2.843855381011963
    3. '(' → logprob: -3.468855381011963
    4. '()' → logprob: -9.093854904174805
    5. '(int' → logprob: -9.843854904174805
    6. '(f' → logprob: -10.718854904174805
    7. '(range' → logprob: -10.968854904174805
    8. 's' → logprob: -11.218854904174805
    9. '(
' → logprob: -13.093854904174805
    10. '(re' → logprob: -13.468854904174805

Token 39: 'oph' (ID: 6502)
  Prédit: 'oph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oph' → logprob: -1.0683535037969705e-05
    2. 'op' → logprob: -12.62501049041748
    3. 'ophi' → logprob: -12.75001049041748
    4. '(' → logprob: -13.87501049041748
    5. 'Soph' → logprob: -14.12501049041748
    6. 'ophie' → logprob: -14.62501049041748
    7. 'ophe' → logprob: -14.62501049041748
    8. 't' → logprob: -14.87501049041748
    9. 'et' → logprob: -15.75001049041748
    10. 'opher' → logprob: -16.000011444091797

Token 40: 'isticated' (ID: 33986)
  Prédit: 'isticated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isticated' → logprob: -0.0004948906716890633
    2. 'ist' → logprob: -8.125494956970215
    3. 'istic' → logprob: -8.875494956970215
    4. 'icated' → logprob: -9.750494956970215
    5. 'icate' → logprob: -14.750494956970215
    6. 'isit' → logprob: -16.1254940032959
    7. 'enticated' → logprob: -16.8754940032959
    8. 'it' → logprob: -17.2504940032959
    9. 'istical' → logprob: -17.2504940032959
    10. 'atic' → logprob: -17.6254940032959

Token 41: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.00017243190086446702
    2. 'input' → logprob: -9.00017261505127
    3. '_' → logprob: -10.12517261505127
    4. 'Input' → logprob: -12.87517261505127
    5. '_map' → logprob: -13.87517261505127
    6. '_list' → logprob: -13.87517261505127
    7. '   ' → logprob: -14.37517261505127
    8. ')' → logprob: -14.62517261505127
    9. '_inputs' → logprob: -14.62517261505127
    10. 'A' → logprob: -14.87517261505127

Token 42: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.011171840131282806
    2. '()' → logprob: -4.511171817779541
    3. ')' → logprob: -9.3861722946167
    4. '()))' → logprob: -11.1361722946167
    5. '())
' → logprob: -11.3861722946167
    6. ' ())' → logprob: -12.0111722946167
    7. '();)' → logprob: -13.3861722946167
    8. '()]' → logprob: -13.3861722946167
    9. '()
' → logprob: -13.5111722946167
    10. '())

' → logprob: -13.8861722946167

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16533881425857544
    2. '<|end|>' → logprob: -1.9153387546539307
    3. '<|end|>' → logprob: -6.66533899307251
    4. '    
' → logprob: -6.79033899307251
    5. ')' → logprob: -7.16533899307251
    6. '
' → logprob: -7.16533899307251
    7. '()' → logprob: -8.540338516235352
    8. '+' → logprob: -8.790338516235352
    9. ' ' → logprob: -8.915338516235352
    10. '[' → logprob: -9.415338516235352

Token 44: ' verdict' (ID: 75722)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7574866414070129
    2. 'damage' → logprob: -1.8824865818023682
    3. 'D' → logprob: -2.757486581802368
    4. 'print' → logprob: -3.007486581802368
    5. 'total' → logprob: -3.007486581802368
    6. 'if' → logprob: -3.132486581802368
    7. 'd' → logprob: -3.507486581802368
    8. 'dp' → logprob: -3.507486581802368
    9. 'result' → logprob: -4.132486820220947
    10. 'sum' → logprob: -4.132486820220947

Token 45: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18086983263492584
    2. '=' → logprob: -1.8058698177337646
    3. 's' → logprob: -7.430870056152344
    4. '_' → logprob: -8.180870056152344
    5. ' ' → logprob: -9.180870056152344
    6. ':' → logprob: -9.430870056152344
    7. '  ' → logprob: -10.555870056152344
    8. '   ' → logprob: -11.555870056152344
    9. '(' → logprob: -11.930870056152344
    10. '[:]' → logprob: -12.055870056152344

Token 46: ' (' (ID: 350)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.6930569410324097
    2. ' all' → logprob: -1.9430569410324097
    3. ' "' → logprob: -2.068057060241699
    4. ' '' → logprob: -2.943057060241699
    5. ' reduce' → logprob: -2.943057060241699
    6. ''' → logprob: -2.943057060241699
    7. 'all' → logprob: -4.193057060241699
    8. 'reduce' → logprob: -4.193057060241699
    9. ' sum' → logprob: -4.318057060241699
    10. ' True' → logprob: -5.443057060241699

Token 47: 'lambda' (ID: 35280)
  Prédit: ' reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -1.0424538850784302
    2. 'reduce' → logprob: -1.1674538850784302
    3. '"' → logprob: -2.6674537658691406
    4. 'sum' → logprob: -2.9174537658691406
    5. ' sum' → logprob: -3.0424537658691406
    6. ' '' → logprob: -3.1674537658691406
    7. ''' → logprob: -3.5424537658691406
    8. '   ' → logprob: -3.6674537658691406
    9. ' "' → logprob: -4.042453765869141
    10. ' all' → logprob: -4.042453765869141

Token 48: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -1.0004030466079712
    2. ' lambda' → logprob: -1.6254030466079712
    3. ':' → logprob: -2.5004029273986816
    4. ' a' → logprob: -2.6254029273986816
    5. ' acc' → logprob: -3.2504029273986816
    6. ' h' → logprob: -3.6254029273986816
    7. 'lambda' → logprob: -3.6254029273986816
    8. ' H' → logprob: -3.7504029273986816
    9. ' total' → logprob: -3.8754029273986816
    10. 'x' → logprob: -4.125402927398682

Token 49: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02175806649029255
    2. ' :' → logprob: -4.396758079528809
    3. ',' → logprob: -4.771758079528809
    4. '=' → logprob: -7.771758079528809
    5. ':x' → logprob: -9.896758079528809
    6. ',y' → logprob: -10.146758079528809
    7. ':list' → logprob: -10.896758079528809
    8. ':A' → logprob: -11.146758079528809
    9. 'H' → logprob: -11.334258079528809
    10. ' ,' → logprob: -11.396758079528809

Token 50: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.4756993353366852
    2. ' y' → logprob: -0.9756993055343628
    3. 'lambda' → logprob: -7.850699424743652
    4. ' lambda' → logprob: -8.350699424743652
    5. ':' → logprob: -8.850699424743652
    6. 'acc' → logprob: -8.850699424743652
    7. 'f' → logprob: -9.100699424743652
    8. ' acc' → logprob: -9.225699424743652
    9. ',' → logprob: -9.725699424743652
    10. 'a' → logprob: -9.850699424743652

Token 51: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011003609746694565
    2. ',' → logprob: -5.011003494262695
    3. ' :' → logprob: -5.511003494262695
    4. '=' → logprob: -9.386003494262695
    5. ':x' → logprob: -10.136003494262695
    6. ',:' → logprob: -10.761003494262695
    7. ':(' → logprob: -11.386003494262695
    8. ':add' → logprob: -11.761003494262695
    9. ',x' → logprob: -11.886003494262695
    10. 'x' → logprob: -12.011003494262695

Token 52: ' ["' (ID: 9129)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6174449920654297
    2. 'x' → logprob: -1.4924449920654297
    3. ' "' → logprob: -2.8674449920654297
    4. '"' → logprob: -3.2424449920654297
    5. ' y' → logprob: -3.6174449920654297
    6. ' '' → logprob: -3.7424449920654297
    7. ' add' → logprob: -3.9924449920654297
    8. ''' → logprob: -4.49244499206543
    9. '   ' → logprob: -4.49244499206543
    10. ' True' → logprob: -4.86744499206543

Token 53: 'No' (ID: 3160)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.27421578764915466
    2. 'No' → logprob: -2.8992156982421875
    3. '"No' → logprob: -3.5242156982421875
    4. ' "' → logprob: -3.8992156982421875
    5. 'Yes' → logprob: -3.8992156982421875
    6. ' ' → logprob: -4.3992156982421875
    7. '"D' → logprob: -4.8992156982421875
    8. '"H' → logprob: -5.0867156982421875
    9. 'Fail' → logprob: -5.0867156982421875
    10. ' No' → logprob: -5.3367156982421875

Token 54: '",' (ID: 672)
  Prédit: '",'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.04933132603764534
    2. '","' → logprob: -3.0493314266204834
    3. '"' → logprob: -8.049331665039062
    4. 'Yes' → logprob: -8.299331665039062
    5. ' ",' → logprob: -9.924331665039062
    6. 'No' → logprob: -10.299331665039062
    7. '"]' → logprob: -11.611831665039062
    8. 'If' → logprob: -12.111831665039062
    9. 'Hello' → logprob: -12.236831665039062
    10. ' ","' → logprob: -12.799331665039062

Token 55: ' "' (ID: 392)
  Prédit: ' "'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' "' → logprob: -0.4292406141757965
    2. '"' → logprob: -1.0542405843734741
    3. '"No' → logprob: -7.804240703582764
    4. ' ' → logprob: -10.179240226745605
    5. ''' → logprob: -11.429240226745605
    6. '"A' → logprob: -11.616740226745605
    7. '"We' → logprob: -11.866740226745605
    8. '"I' → logprob: -12.241740226745605
    9. '"You' → logprob: -12.241740226745605
    10. ' ' → logprob: -12.366740226745605

Token 56: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.11474645137786865
    2. ' Yes' → logprob: -2.239746570587158
    3. '"' → logprob: -6.364746570587158
    4. ' ' → logprob: -9.73974609375
    5. ' "' → logprob: -10.11474609375
    6. '"]' → logprob: -10.48974609375
    7. ' yes' → logprob: -11.23974609375
    8. 'No' → logprob: -11.73974609375
    9. 'Possible' → logprob: -11.86474609375
    10. '",' → logprob: -12.11474609375

Token 57: '"][' (ID: 40438)
  Prédit: '"]['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"][' → logprob: -0.0001438266917830333
    2. '"]' → logprob: -9.000144004821777
    3. '")[' → logprob: -11.875144004821777
    4. '"]["' → logprob: -12.250144004821777
    5. '"[' → logprob: -12.375144004821777
    6. '][' → logprob: -13.375144004821777
    7. '"' → logprob: -13.375144004821777
    8. ''][' → logprob: -15.125144004821777
    9. '"](' → logprob: -15.375144004821777
    10. '"]
' → logprob: -16.12514305114746

Token 58: 'x' (ID: 87)
  Prédit: ' y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -1.1178261041641235
    2. ' reduce' → logprob: -1.6178261041641235
    3. ' x' → logprob: -2.117825984954834
    4. ' sum' → logprob: -2.617825984954834
    5. 'reduce' → logprob: -2.617825984954834
    6. 'y' → logprob: -2.742825984954834
    7. 'x' → logprob: -2.992825984954834
    8. ' add' → logprob: -3.242825984954834
    9. 'sum' → logprob: -3.742825984954834
    10. ' (' → logprob: -4.492825984954834

Token 59: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.7368745803833008
    2. ' +' → logprob: -1.3618745803833008
    3. '+' → logprob: -2.111874580383301
    4. '>=' → logprob: -2.111874580383301
    5. '+y' → logprob: -3.861874580383301
    6. ' *' → logprob: -7.486874580383301
    7. ' <=' → logprob: -8.3618745803833
    8. '*' → logprob: -8.3618745803833
    9. ' ' → logprob: -8.3618745803833
    10. ' >' → logprob: -8.4868745803833

Token 60: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.16595803201198578
    2. ' y' → logprob: -1.915958046913147
    3. 'reduce' → logprob: -5.665957927703857
    4. 'sum' → logprob: -6.790957927703857
    5. ' reduce' → logprob: -7.665957927703857
    6. ' sum' → logprob: -7.915957927703857
    7. ' ' → logprob: -9.165958404541016
    8. '   ' → logprob: -9.790958404541016
    9. '  ' → logprob: -10.290958404541016
    10. '    ' → logprob: -10.665958404541016

Token 61: '])(' (ID: 164063)
  Prédit: '])('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])(' → logprob: -0.12687340378761292
    2. '])' → logprob: -2.87687349319458
    3. '(N' → logprob: -3.87687349319458
    4. '](' → logprob: -4.75187349319458
    5. 'N' → logprob: -5.12687349319458
    6. ']' → logprob: -5.37687349319458
    7. '(H' → logprob: -5.87687349319458
    8. '(' → logprob: -6.00187349319458
    9. '])
' → logprob: -6.00187349319458
    10. ' ' → logprob: -6.37687349319458

Token 62: 'reduce' (ID: 49119)
  Prédit: 'reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.28875023126602173
    2. 'N' → logprob: -2.038750171661377
    3. 'sum' → logprob: -2.163750171661377
    4. ' reduce' → logprob: -6.038750171661377
    5. ' N' → logprob: -6.413750171661377
    6. ' sum' → logprob: -7.288750171661377
    7. 'H' → logprob: -7.788750171661377
    8. 'redu' → logprob: -8.288750648498535
    9. 're' → logprob: -9.038750648498535
    10. '   ' → logprob: -9.413750648498535

Token 63: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.002236139727756381
    2. '(' → logprob: -6.502236366271973
    3. '(operator' → logprob: -8.002236366271973
    4. '(lambda' → logprob: -8.252236366271973
    5. 'add' → logprob: -9.877236366271973
    6. ')add' → logprob: -10.752236366271973
    7. ' (' → logprob: -11.002236366271973
    8. '<|end|>' → logprob: -11.377236366271973
    9. ')' → logprob: -11.502236366271973
    10. ' ' → logprob: -12.127236366271973

Token 64: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01019102893769741
    2. ',A' → logprob: -4.635190963745117
    3. ' ,' → logprob: -8.010190963745117
    4. 'A' → logprob: -10.135190963745117
    5. '(A' → logprob: -10.635190963745117
    6. ' A' → logprob: -11.135190963745117
    7. ',
' → logprob: -12.010190963745117
    8. ')' → logprob: -12.635190963745117
    9. '
' → logprob: -12.635190963745117
    10. '),' → logprob: -13.385190963745117

Token 65: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.635382890701294
    2. 'A' → logprob: -0.760382890701294
    3. '<|end|>' → logprob: -6.635382652282715
    4. '(A' → logprob: -7.135382652282715
    5. ')' → logprob: -8.135382652282715
    6. '[A' → logprob: -8.885382652282715
    7. ',A' → logprob: -9.135382652282715
    8. ' ' → logprob: -10.635382652282715
    9. '	A' → logprob: -10.760382652282715
    10. ',' → logprob: -11.010382652282715

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002374342642724514
    2. ' ,' → logprob: -6.127374172210693
    3. ',N' → logprob: -9.002374649047852
    4. '),' → logprob: -10.002374649047852
    5. ')' → logprob: -11.877374649047852
    6. ',H' → logprob: -11.877374649047852
    7. 'N' → logprob: -13.627374649047852
    8. '(N' → logprob: -13.877374649047852
    9. '(),' → logprob: -13.877374649047852
    10. ' ' → logprob: -13.877374649047852

Token 67: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06349839270114899
    2. ' ' → logprob: -2.9384984970092773
    3. 'H' → logprob: -4.938498497009277
    4. ' H' → logprob: -6.688498497009277
    5. 'N' → logprob: -9.688498497009277
    6. ')' → logprob: -10.563498497009277
    7. '   ' → logprob: -10.688498497009277
    8. ' N' → logprob: -11.063498497009277
    9. '  ' → logprob: -11.750998497009277
    10. '`' → logprob: -12.375998497009277

Token 68: '0' (ID: 15)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.015714533627033234
    2. ' H' → logprob: -4.765714645385742
    3. 'N' → logprob: -5.015714645385742
    4. ')' → logprob: -8.765714645385742
    5. '0' → logprob: -9.265714645385742
    6. ' N' → logprob: -9.640714645385742
    7. ' ' → logprob: -10.015714645385742
    8. '),' → logprob: -11.140714645385742
    9. '	H' → logprob: -11.265714645385742
    10. '   ' → logprob: -12.140714645385742

Token 69: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010798666626214981
    2. ' ,' → logprob: -4.635798454284668
    3. '),' → logprob: -7.385798454284668
    4. ')' → logprob: -8.635798454284668
    5. ',N' → logprob: -8.635798454284668
    6. '   ' → logprob: -10.260798454284668
    7. 'N' → logprob: -11.635798454284668
    8. ' ' → logprob: -11.885798454284668
    9. ',H' → logprob: -12.010798454284668
    10. ' N' → logprob: -13.010798454284668

Token 70: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.05037541314959526
    2. 'N' → logprob: -3.550375461578369
    3. ' H' → logprob: -3.925375461578369
    4. ' N' → logprob: -7.550375461578369
    5. '   ' → logprob: -9.925374984741211
    6. ' ' → logprob: -9.925374984741211
    7. '	H' → logprob: -10.550374984741211
    8. '  ' → logprob: -11.800374984741211
    9. ')' → logprob: -12.675374984741211
    10. '<|end|>' → logprob: -13.050374984741211

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.318681188422488e-05
    2. '))' → logprob: -11.50001335144043
    3. ')
' → logprob: -13.25001335144043
    4. ' )' → logprob: -14.00001335144043
    5. ')

' → logprob: -15.75001335144043
    6. ')))' → logprob: -15.87501335144043
    7. '   ' → logprob: -16.37501335144043
    8. ')`' → logprob: -17.12501335144043
    9. '）' → logprob: -18.25001335144043
    10. '())' → logprob: -18.25001335144043

Token 72: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5881949663162231
    2. ')' → logprob: -0.8381949663162231
    3. '<|end|>' → logprob: -4.838194847106934
    4. 'print' → logprob: -6.338194847106934
    5. '
' → logprob: -6.963194847106934
    6. '```' → logprob: -7.963194847106934
    7. 'if' → logprob: -7.963194847106934
    8. '    
' → logprob: -8.213194847106934
    9. ')
' → logprob: -9.088194847106934
    10. '    ' → logprob: -9.838194847106934

Token 73: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31276699900627136
    2. ')' → logprob: -1.6877670288085938
    3. '<|end|>' → logprob: -2.6877670288085938
    4. '    
' → logprob: -5.437767028808594
    5. 'print' (adapté à ' print') → logprob: -5.687767028808594
    6. '
' → logprob: -5.687767028808594
    7. 'if' → logprob: -6.687767028808594
    8. '<|end|>' → logprob: -7.062767028808594
    9. ')
' → logprob: -7.687767028808594
    10. 'main' → logprob: -7.937767028808594

Token 74: '(ver' (ID: 185185)
  Prédit: '(ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ver' → logprob: -0.1270502209663391
    2. '(' → logprob: -2.1270501613616943
    3. '()' → logprob: -9.127050399780273
    4. '(
' → logprob: -13.252050399780273
    5. '(verbose' → logprob: -13.377050399780273
    6. '("("' → logprob: -13.502050399780273
    7. '('' → logprob: -13.627050399780273
    8. ' (' → logprob: -13.627050399780273
    9. '(`' → logprob: -13.627050399780273
    10. 'ver' → logprob: -13.752050399780273

Token 75: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -0.6379913687705994
    2. 'ict' → logprob: -0.7629913687705994
    3. 'erd' → logprob: -6.012991428375244
    4. 'rd' → logprob: -6.387991428375244
    5. 'd' → logprob: -7.262991428375244
    6. 'dit' → logprob: -8.137990951538086
    7. 'ct' → logprob: -9.387990951538086
    8. '_dict' → logprob: -10.762990951538086
    9. 'ird' → logprob: -10.887990951538086
    10. 't' → logprob: -11.012990951538086

Token 76: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -14.250001907348633
    3. '))' → logprob: -14.250001907348633
    4. ' )' → logprob: -15.125001907348633
    5. ')`' → logprob: -16.625001907348633
    6. '`)' → logprob: -16.750001907348633
    7. '')' → logprob: -17.625001907348633
    8. '")' → logprob: -17.750001907348633
    9. ')}' → logprob: -18.000001907348633
    10. '）' → logprob: -18.125001907348633

Token 77: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04860372841358185
    2. '__' → logprob: -3.0486037731170654
    3. ' ' → logprob: -11.298604011535645
    4. '_' → logprob: -12.923604011535645
    5. '_name' → logprob: -14.298604011535645
    6. ' ' → logprob: -15.298604011535645
    7. 'name' → logprob: -15.298604011535645
    8. '___' → logprob: -15.423604011535645
    9. ' ___' → logprob: -16.673603057861328
    10. '/__' → logprob: -16.798603057861328

Token 79: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0033284954261034727
    2. '__.__' → logprob: -5.878328323364258
    3. '__.' → logprob: -8.503328323364258
    4. '==' → logprob: -9.003328323364258
    5. '.__' → logprob: -9.378328323364258
    6. ' ==' → logprob: -10.253328323364258
    7. '.' → logprob: -10.378328323364258
    8. ' __' → logprob: -10.503328323364258
    9. '___' → logprob: -11.753328323364258
    10. '__["' → logprob: -12.753328323364258

Token 80: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.7697225252486533e-06
    2. '__.__' → logprob: -13.250003814697266
    3. '____' → logprob: -14.000003814697266
    4. '==' → logprob: -14.500003814697266
    5. '___' → logprob: -15.625003814697266
    6. ' ==' → logprob: -16.625003814697266
    7. '__
' → logprob: -16.750003814697266
    8. ' __' → logprob: -17.125003814697266
    9. '_' → logprob: -17.250003814697266
    10. '__('' → logprob: -17.375003814697266

Token 81: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.36800840497016907
    2. ' ==' → logprob: -1.4930083751678467
    3. '==' → logprob: -2.4930083751678467
    4. '=="' → logprob: -8.118008613586426
    5. '_' → logprob: -9.368008613586426
    6. '=='' → logprob: -9.743008613586426
    7. '___' → logprob: -10.868008613586426
    8. '__.__' → logprob: -11.243008613586426
    9. '=' → logprob: -11.618008613586426
    10. ' __' → logprob: -11.868008613586426

Token 82: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.12700171768665314
    2. ''' → logprob: -2.1270017623901367
    3. ' "' → logprob: -10.127001762390137
    4. ' "__' → logprob: -10.877001762390137
    5. '__' → logprob: -11.377001762390137
    6. ' '' → logprob: -13.627001762390137
    7. ' '__' → logprob: -13.877001762390137
    8. '"user' → logprob: -14.627001762390137
    9. '`' → logprob: -15.627001762390137
    10. ' ' → logprob: -16.37700080871582

Token 83: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -8.017927029868588e-05
    2. 'name' → logprob: -9.500080108642578
    3. ' main' → logprob: -12.750080108642578
    4. '_main' → logprob: -14.125080108642578
    5. '__' → logprob: -14.750080108642578
    6. 'ma' → logprob: -15.125080108642578
    7. 'built' → logprob: -15.125080108642578
    8. '"' → logprob: -15.750080108642578
    9. 'm' → logprob: -16.125080108642578
    10. '	main' → logprob: -16.375080108642578

Token 84: '__":
' (ID: 49892)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06396335363388062
    2. '__":
' → logprob: -2.8139634132385254
    3. '__.' → logprob: -6.938963413238525
    4. '__:' → logprob: -7.313963413238525
    5. '__':
' → logprob: -8.313962936401367
    6. '__.__' → logprob: -9.813962936401367
    7. '__
' → logprob: -10.688962936401367
    8. '__["' → logprob: -10.938962936401367
    9. '__)' → logprob: -11.688962936401367
    10. '__",' → logprob: -13.063962936401367

Token 85: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.04465527459979057
    2. '   ' → logprob: -3.7946553230285645
    3. 'main' → logprob: -4.1696553230285645
    4. '	main' → logprob: -5.1696553230285645
    5. '    
' → logprob: -11.544654846191406
    6. '_main' → logprob: -11.919654846191406
    7. ' ' → logprob: -12.169654846191406
    8. ' ' → logprob: -12.169654846191406
    9. '   ' → logprob: -12.544654846191406
    10. '(main' → logprob: -12.919654846191406

Token 86: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00012487331696320325
    2. ' main' → logprob: -9.00012493133545
    3. '	main' → logprob: -13.50012493133545
    4. '   ' → logprob: -16.500123977661133
    5. '_main' → logprob: -18.250123977661133
    6. '  ' → logprob: -21.250123977661133
    7. '.main' → logprob: -21.500123977661133
    8. 'Main' → logprob: -21.500123977661133
    9. '(main' → logprob: -22.000123977661133
    10. 'mainwindow' → logprob: -22.250123977661133

Token 87: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00047285633627325296
    2. '(' → logprob: -7.7504730224609375
    3. '()
' → logprob: -10.500473022460938
    4. ' ()' → logprob: -12.375473022460938
    5. '()

' → logprob: -12.875473022460938
    6. '()`' → logprob: -12.875473022460938
    7. '`()' → logprob: -13.500473022460938
    8. '(
' → logprob: -14.125473022460938
    9. '```' → logprob: -14.125473022460938
    10. ']()' → logprob: -15.125473022460938


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 45
Tokens correctement prédits (top 10): 69
Précision stricte (1ère position): 49.41%
Précision adaptée (1ère position): 52.94%
Précision (top 10): 81.18%
================================================================================
