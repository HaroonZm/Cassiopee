================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:47:28
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
print(s if (a := int(input())) >= 3200 else "red") if (s := input()) else None
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'print' (ID: 1598)
  → Token d'amorce (pas de prédiction)

Token 1: '(s' (ID: 1858)
  → Token d'amorce (pas de prédiction)

Token 2: ' if' (ID: 538)
  → Token d'amorce (pas de prédiction)

Token 3: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6483708024024963
    2. ' ' → logprob: -0.8983708024024963
    3. '  ' → logprob: -3.8983707427978516
    4. ' not' → logprob: -4.273370742797852
    5. ' ==' → logprob: -4.773370742797852
    6. ' )' → logprob: -5.398370742797852
    7. 's' → logprob: -5.398370742797852
    8. '_' → logprob: -5.773370742797852
    9. ' isinstance' → logprob: -5.898370742797852
    10. ' _' → logprob: -6.273370742797852

Token 4: 'a' (ID: 64)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.053709931671619415
    2. ' s' → logprob: -3.1787099838256836
    3. 'condition' → logprob: -6.053709983825684
    4. ' not' → logprob: -6.428709983825684
    5. 'not' → logprob: -6.428709983825684
    6. 'len' → logprob: -6.928709983825684
    7. 'x' → logprob: -7.303709983825684
    8. ')' → logprob: -7.553709983825684
    9. ' condition' → logprob: -8.053709983825684
    10. 'i' → logprob: -8.053709983825684

Token 5: ' :=' (ID: 3405)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.138269066810608
    2. ' ==' → logprob: -1.263269066810608
    3. ')' → logprob: -1.888269066810608
    4. ' >' → logprob: -2.2632689476013184
    5. '>' → logprob: -2.8882689476013184
    6. ' ' → logprob: -3.5132689476013184
    7. ' )' → logprob: -3.7632689476013184
    8. ' >=' → logprob: -4.888268947601318
    9. '%' → logprob: -5.013268947601318
    10. ' %' → logprob: -5.513268947601318

Token 6: ' int' (ID: 677)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1583589315414429
    2. 'b' → logprob: -1.2833589315414429
    3. 'a' → logprob: -1.9083589315414429
    4. ' b' → logprob: -2.2833590507507324
    5. ' input' → logprob: -2.5333590507507324
    6. 's' → logprob: -3.4083590507507324
    7. 'len' → logprob: -4.158359050750732
    8. ' a' → logprob: -4.283359050750732
    9. ' s' → logprob: -5.533359050750732
    10. ' True' → logprob: -6.283359050750732

Token 7: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.00524454889819026
    2. '(' → logprob: -5.755244731903076
    3. '(s' → logprob: -6.755244731903076
    4. '(a' → logprob: -8.380244255065918
    5. '(user' → logprob: -8.380244255065918
    6. 'input' → logprob: -8.880244255065918
    7. '(x' → logprob: -9.005244255065918
    8. '(value' → logprob: -10.005244255065918
    9. '(b' → logprob: -10.255244255065918
    10. '((' → logprob: -10.755244255065918

Token 8: '()))' (ID: 16829)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.7527810335159302
    2. '()))' → logprob: -1.2527810335159302
    3. '(' → logprob: -1.8777810335159302
    4. '("("' → logprob: -2.7527809143066406
    5. '())' → logprob: -4.877780914306641
    6. '()' → logprob: -5.252780914306641
    7. '(()' → logprob: -5.627780914306641
    8. '())))' → logprob: -6.002780914306641
    9. '("' → logprob: -6.252780914306641
    10. '(""))' → logprob: -6.502780914306641

Token 9: ' >=' (ID: 5064)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4193774461746216
    2. '>' → logprob: -1.5443774461746216
    3. '>=' → logprob: -2.544377326965332
    4. '<' → logprob: -5.044377326965332
    5. ' )' → logprob: -5.044377326965332
    6. '<=' → logprob: -5.169377326965332
    7. '%' → logprob: -5.169377326965332
    8. ' >=' → logprob: -5.169377326965332
    9. '```' → logprob: -5.544377326965332
    10. '==' → logprob: -5.794377326965332

Token 10: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5375013947486877
    2. ' ' → logprob: -1.037501335144043
    3. '10' → logprob: -2.912501335144043
    4. '1' → logprob: -5.662501335144043
    5. '18' → logprob: -6.662501335144043
    6. '5' → logprob: -6.787501335144043
    7. '100' → logprob: -7.662501335144043
    8. '50' → logprob: -8.787501335144043
    9. '20' → logprob: -8.912501335144043
    10. '2' → logprob: -9.037501335144043

Token 11: '320' (ID: 15415)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014323215931653976
    2. '10' → logprob: -4.7643232345581055
    3. '1' → logprob: -6.3893232345581055
    4. '18' → logprob: -6.6393232345581055
    5. '5' → logprob: -7.3893232345581055
    6. ' ' → logprob: -7.6393232345581055
    7. '100' → logprob: -8.014323234558105
    8. 's' → logprob: -8.139323234558105
    9. '3' → logprob: -8.264323234558105
    10. '2' → logprob: -8.514323234558105

Token 12: '0' (ID: 15)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.12340915948152542
    2. 'else' → logprob: -2.8734092712402344
    3. ')' → logprob: -2.9984092712402344
    4. '0' → logprob: -5.373409271240234
    5. ' and' → logprob: -6.498409271240234
    6. ' ' → logprob: -6.623409271240234
    7. ' )' → logprob: -7.248409271240234
    8. '```' → logprob: -7.373409271240234
    9. 'and' → logprob: -7.998409271240234
    10. ':' → logprob: -9.873409271240234

Token 13: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.018525531515479088
    2. 'else' → logprob: -4.39352560043335
    3. ')' → logprob: -5.14352560043335
    4. ' ' → logprob: -9.518525123596191
    5. ' and' → logprob: -10.518525123596191
    6. ' )' → logprob: -10.518525123596191
    7. '```' → logprob: -10.893525123596191
    8. '))' → logprob: -13.143525123596191
    9. '	else' → logprob: -13.393525123596191
    10. 'and' → logprob: -13.643525123596191

Token 14: ' "' (ID: 392)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.790378749370575
    2. '"' → logprob: -1.5403788089752197
    3. ''' → logprob: -2.6653788089752197
    4. ''s' → logprob: -2.7903788089752197
    5. '"s' → logprob: -2.7903788089752197
    6. ' s' → logprob: -3.2903788089752197
    7. 'print' → logprob: -3.6653788089752197
    8. 'n' → logprob: -4.165378570556641
    9. '''' → logprob: -4.790378570556641
    10. '""' → logprob: -4.915378570556641

Token 15: 'red' (ID: 1291)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.11060042679309845
    2. 'red' → logprob: -3.110600471496582
    3. '""' → logprob: -3.985600471496582
    4. '")' → logprob: -4.360600471496582
    5. '"No' → logprob: -4.610600471496582
    6. 'Red' → logprob: -5.360600471496582
    7. '"s' → logprob: -5.985600471496582
    8. '"\' → logprob: -6.860600471496582
    9. 'p' → logprob: -6.985600471496582
    10. 'a' → logprob: -7.110600471496582

Token 16: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0033004588913172483
    2. ')' → logprob: -6.003300666809082
    3. '"' → logprob: -7.128300666809082
    4. 's' → logprob: -11.628300666809082
    5. ' )' → logprob: -12.503300666809082
    6. '"s' → logprob: -13.003300666809082
    7. '")
' → logprob: -13.503300666809082
    8. 'a' → logprob: -13.878300666809082
    9. ')")' → logprob: -14.003300666809082
    10. '')' → logprob: -14.253300666809082

Token 17: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16331195831298828
    2. '\n' → logprob: -2.9133119583129883
    3. '\' → logprob: -3.5383119583129883
    4. '<|end|>' → logprob: -3.5383119583129883
    5. ' ' → logprob: -3.9133119583129883
    6. 's' → logprob: -5.538311958312988
    7. '```' → logprob: -5.663311958312988
    8. '' → logprob: -5.788311958312988
    9. '
' → logprob: -6.413311958312988
    10. '"' → logprob: -6.663311958312988

Token 18: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.32011598348617554
    2. 's' → logprob: -1.9451160430908203
    3. ' a' → logprob: -2.4451160430908203
    4. 'a' → logprob: -3.4451160430908203
    5. ' True' → logprob: -5.19511604309082
    6. ' not' → logprob: -6.69511604309082
    7. ' ' → logprob: -7.07011604309082
    8. 'True' → logprob: -7.19511604309082
    9. ' __' → logprob: -7.19511604309082
    10. '__' → logprob: -7.57011604309082

Token 19: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11487580090761185
    2. 's' → logprob: -2.4898757934570312
    3. '(a' → logprob: -4.614875793457031
    4. ' a' → logprob: -5.864875793457031
    5. 'input' → logprob: -5.989875793457031
    6. ' s' → logprob: -6.239875793457031
    7. 'True' → logprob: -6.364875793457031
    8. '(s' → logprob: -6.614875793457031
    9. '320' → logprob: -6.864875793457031
    10. 'not' → logprob: -7.114875793457031

Token 20: ' :=' (ID: 3405)
  Prédit: ' :='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :=' → logprob: -0.3915696144104004
    2. ')' → logprob: -2.1415696144104004
    3. ' )' → logprob: -2.2665696144104004
    4. ':=' → logprob: -2.3915696144104004
    5. ' !=' → logprob: -5.3915696144104
    6. '.startswith' → logprob: -6.3915696144104
    7. '!=' → logprob: -6.6415696144104
    8. ' ==' → logprob: -7.5165696144104
    9. ':' → logprob: -7.6415696144104
    10. ' is' → logprob: -7.8915696144104

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.4758576452732086
    2. ' input' → logprob: -0.9758576154708862
    3. '(input' → logprob: -6.975857734680176
    4. 'str' → logprob: -8.225857734680176
    5. ' str' → logprob: -9.100857734680176
    6. ''' → logprob: -9.600857734680176
    7. '"' → logprob: -9.725857734680176
    8. '=input' → logprob: -9.850857734680176
    9. ''s' → logprob: -10.350857734680176
    10. 'a' → logprob: -10.725857734680176

Token 22: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.14510317146778107
    2. '()' → logprob: -2.0201032161712646
    3. ')' → logprob: -7.0201029777526855
    4. '().' → logprob: -7.2701029777526855
    5. '(' → logprob: -8.145103454589844
    6. '();)' → logprob: -8.770103454589844
    7. ' ())' → logprob: -9.145103454589844
    8. '());' → logprob: -10.145103454589844
    9. '()!=' → logprob: -10.395103454589844
    10. '()))' → logprob: -10.520103454589844

Token 23: ' else' (ID: 1203)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 24: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.3700743019580841
    2. ' print' → logprob: -1.6200742721557617
    3. 'print' → logprob: -3.6200742721557617
    4. 'None' → logprob: -3.7450742721557617
    5. ' True' → logprob: -4.370074272155762
    6. ' ' → logprob: -4.495074272155762
    7. ' exit' → logprob: -4.745074272155762
    8. '"' → logprob: -4.745074272155762
    9. ''' → logprob: -5.620074272155762
    10. '\n' → logprob: -5.745074272155762


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 22
Tokens correctement prédits (1ère position, stricte): 6
Tokens correctement prédits (1ère position, avec adaptation): 6
Tokens correctement prédits (top 10): 13
Précision stricte (1ère position): 27.27%
Précision adaptée (1ère position): 27.27%
Précision (top 10): 59.09%
================================================================================
