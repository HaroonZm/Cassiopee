================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:49
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def count_abc_occurrences(n, s):
    result = 0
    idx = 0
    while idx < n - 2:
        triple = s[idx:idx+3]
        if triple == 'ABC':
            result = result + 1
        idx += 1
    return result

N = int(input())
S = input()
from functools import reduce
output = (lambda z: reduce(lambda x, y: x + y, [1 if S[i:i+3] == 'ABC' else 0 for i in range(N-2)], 0))(range(N-2)) if N > 2 else 0

if N < 10:
    print(count_abc_occurrences(N, S))
else:
    print(output)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' count' (ID: 3605)
  → Token d'amorce (pas de prédiction)

Token 2: '_' (ID: 62)
  → Token d'amorce (pas de prédiction)

Token 3: 'abc' (ID: 26682)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.6113550662994385
    2. 'v' → logprob: -0.8613550662994385
    3. '_words' → logprob: -3.7363550662994385
    4. '_v' → logprob: -5.361354827880859
    5. 'characters' → logprob: -5.986354827880859
    6. 'word' → logprob: -6.986354827880859
    7. 'occ' → logprob: -7.486354827880859
    8. '_' → logprob: -7.861354827880859
    9. 'chars' → logprob: -8.23635482788086
    10. 'lines' → logprob: -8.23635482788086

Token 4: '_occ' (ID: 180107)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04209895804524422
    2. '():' → logprob: -4.0420989990234375
    3. '_' → logprob: -4.4170989990234375
    4. '(:' → logprob: -5.4170989990234375
    5. '(_' → logprob: -6.5420989990234375
    6. '(_:' → logprob: -6.5420989990234375
    7. '_:' → logprob: -6.6670989990234375
    8. '(a' → logprob: -6.7920989990234375
    9. '```' → logprob: -7.1670989990234375
    10. ':' → logprob: -8.292098999023438

Token 5: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.08160898089408875
    2. 'urr' → logprob: -3.206609010696411
    3. 'ur' → logprob: -3.706609010696411
    4. '(' → logprob: -4.581608772277832
    5. 'urrence' → logprob: -6.956608772277832
    6. '(u' → logprob: -7.456608772277832
    7. 'urre' → logprob: -7.956608772277832
    8. 'u' → logprob: -8.206608772277832
    9. 'urances' → logprob: -8.206608772277832
    10. 's' → logprob: -8.956608772277832

Token 6: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003502434410620481
    2. '(:' → logprob: -8.500349998474121
    3. '(_:' → logprob: -10.375349998474121
    4. '_' → logprob: -10.625349998474121
    5. ':' → logprob: -10.750349998474121
    6. '```' → logprob: -10.875349998474121
    7. '():' → logprob: -11.125349998474121
    8. '('' → logprob: -11.625349998474121
    9. '(_' → logprob: -12.625349998474121
    10. '("("' → logprob: -12.875349998474121

Token 7: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.10113637149333954
    2. ')' → logprob: -2.3511364459991455
    3. ':' → logprob: -7.851136207580566
    4. '_' → logprob: -8.351136207580566
    5. 's' → logprob: -8.601136207580566
    6. ',' → logprob: -9.976136207580566
    7. 'a' → logprob: -10.851136207580566
    8. '):
' → logprob: -11.976136207580566
    9. 'def' → logprob: -12.101136207580566
    10. '(' → logprob: -12.226136207580566

Token 8: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4343956708908081
    2. ' string' → logprob: -1.684395670890808
    3. 's' → logprob: -2.5593957901000977
    4. ' abc' → logprob: -3.6843957901000977
    5. ' text' → logprob: -3.8093957901000977
    6. ' word' → logprob: -4.559395790100098
    7. 'string' → logprob: -4.809395790100098
    8. ' sequence' → logprob: -4.934395790100098
    9. ' )' → logprob: -5.309395790100098
    10. ')' → logprob: -5.934395790100098

Token 9: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002783004427328706
    2. ')' → logprob: -6.252782821655273
    3. ':' → logprob: -7.127782821655273
    4. ''):' → logprob: -10.752782821655273
    5. '):
' → logprob: -10.877782821655273
    6. '```' → logprob: -12.002782821655273
    7. '"):' → logprob: -13.752782821655273
    8. '':' → logprob: -14.002782821655273
    9. ',' → logprob: -14.627782821655273
    10. '`:' → logprob: -14.752782821655273

Token 10: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011333089787513018
    2. '   ' → logprob: -7.251133441925049
    3. ':
' → logprob: -8.50113296508789
    4. '```' → logprob: -9.75113296508789
    5. '':' → logprob: -10.37613296508789
    6. '():' → logprob: -10.50113296508789
    7. '":' → logprob: -10.62613296508789
    8. '):' → logprob: -11.00113296508789
    9. '`:' → logprob: -11.25113296508789
    10. ':return' → logprob: -11.37613296508789

Token 11: ' result' (ID: 1534)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05951103940606117
    2. 'i' → logprob: -3.6845109462738037
    3. '       ' → logprob: -4.559511184692383
    4. '    ' → logprob: -5.309511184692383
    5. '```' → logprob: -5.809511184692383
    6. ' ' → logprob: -5.934511184692383
    7. 'c' → logprob: -5.934511184692383
    8. ':' → logprob: -5.934511184692383
    9. 'count' → logprob: -6.309511184692383
    10. '_' → logprob: -7.309511184692383

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25545698404312134
    2. '=' → logprob: -1.6304569244384766
    3. '_' → logprob: -4.630456924438477
    4. ' ' → logprob: -4.755456924438477
    5. '[' → logprob: -5.630456924438477
    6. '.' → logprob: -5.880456924438477
    7. ' +=' → logprob: -6.130456924438477
    8. 'space' → logprob: -7.255456924438477
    9. ')' → logprob: -7.505456924438477
    10. 's' → logprob: -7.880456924438477

Token 13: ' ' (ID: 220)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.6602890491485596
    2. ' ' → logprob: -1.0352890491485596
    3. '0' → logprob: -2.4102890491485596
    4. '{}' → logprob: -3.7852890491485596
    5. ' s' → logprob: -4.4102888107299805
    6. ' []' → logprob: -6.7852888107299805
    7. 's' → logprob: -6.7852888107299805
    8. ' defaultdict' → logprob: -7.5352888107299805
    9. ' [' → logprob: -8.16028881072998
    10. ' {' → logprob: -8.41028881072998

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002377438358962536
    2. '{}' → logprob: -6.127377510070801
    3. 's' → logprob: -8.7523775100708
    4. ' ' → logprob: -10.8773775100708
    5. '[' → logprob: -12.5023775100708
    6. '{' → logprob: -12.6273775100708
    7. '[]' → logprob: -12.7523775100708
    8. ' {}' → logprob: -13.5023775100708
    9. '{s' → logprob: -14.0023775100708
    10. 'default' → logprob: -14.7523775100708

Token 15: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.8451833128929138
    2. '```' → logprob: -0.9701833128929138
    3. '
' → logprob: -2.3451833724975586
    4. '   ' → logprob: -3.4701833724975586
    5. '\' → logprob: -3.5951833724975586
    6. '``' → logprob: -4.720183372497559
    7. '    
' → logprob: -5.095183372497559
    8. ' for' → logprob: -5.345183372497559
    9. 'for' → logprob: -5.720183372497559
    10. '   
' → logprob: -5.845183372497559

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1784909963607788
    2. '```' → logprob: -1.3034909963607788
    3. 'for' → logprob: -1.9284909963607788
    4. '\n' → logprob: -2.1784911155700684
    5. ' for' → logprob: -2.5534911155700684
    6. '
' → logprob: -3.4284911155700684
    7. '\' → logprob: -3.6784911155700684
    8. '    
' → logprob: -4.928491115570068
    9. '``' → logprob: -5.678491115570068
    10. ' ' → logprob: -5.803491115570068

Token 17: ' idx' (ID: 14016)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.6134045720100403
    2. 'for' → logprob: -1.7384045124053955
    3. '   ' → logprob: -2.2384045124053955
    4. ' for' → logprob: -2.4884045124053955
    5. '\n' → logprob: -2.7384045124053955
    6. '
' → logprob: -4.613404750823975
    7. '\' → logprob: -4.863404750823975
    8. '    
' → logprob: -5.738404750823975
    9. ' ' → logprob: -6.113404750823975
    10. '``' → logprob: -6.613404750823975

Token 18: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.421762615442276
    2. ' ' → logprob: -1.6717625856399536
    3. '=' → logprob: -2.421762704849243
    4. '  ' → logprob: -4.171762466430664
    5. ' +=' → logprob: -4.171762466430664
    6. '_' → logprob: -4.296762466430664
    7. ' ==' → logprob: -5.046762466430664
    8. ')' → logprob: -5.171762466430664
    9. '[' → logprob: -5.921762466430664
    10. '+' → logprob: -5.921762466430664

Token 19: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07899686694145203
    2. ' ' → logprob: -2.5789968967437744
    3. '1' → logprob: -10.328996658325195
    4. 's' → logprob: -10.453996658325195
    5. ' s' → logprob: -10.703996658325195
    6. ' n' → logprob: -11.453996658325195
    7. '3' → logprob: -12.203996658325195
    8. 'n' → logprob: -13.203996658325195
    9. ' len' → logprob: -13.953996658325195
    10. 'len' → logprob: -14.016496658325195

Token 20: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0012349952012300491
    2. ' ' → logprob: -6.751235008239746
    3. '1' → logprob: -10.626235008239746
    4. '3' → logprob: -10.876235008239746
    5. 's' → logprob: -11.376235008239746
    6. '2' → logprob: -12.751235008239746
    7. 'n' → logprob: -13.251235008239746
    8. 'len' → logprob: -13.376235008239746
    9. ' s' → logprob: -13.751235008239746
    10. '4' → logprob: -14.813735008239746

Token 21: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -1.3491312265396118
    2. '<|end|>' → logprob: -1.3491312265396118
    3. ' ' → logprob: -1.9741312265396118
    4. '   ' → logprob: -2.2241311073303223
    5. ' while' → logprob: -2.7241311073303223
    6. '   
' → logprob: -3.3491311073303223
    7. '
' → logprob: -3.8491311073303223
    8. 'while' → logprob: -4.099131107330322
    9. '  ' → logprob: -4.099131107330322
    10. ':' → logprob: -4.099131107330322

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9067962765693665
    2. ' ' → logprob: -1.0317962169647217
    3. ' while' → logprob: -1.7817962169647217
    4. 'while' → logprob: -2.9067962169647217
    5. '```' → logprob: -5.156796455383301
    6. '  ' → logprob: -5.281796455383301
    7. '    ' → logprob: -6.531796455383301
    8. ':' → logprob: -7.156796455383301
    9. 'While' → logprob: -7.781796455383301
    10. ' ```' → logprob: -7.781796455383301

Token 23: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.8024906516075134
    2. ' while' → logprob: -1.0524907112121582
    3. '```' → logprob: -2.177490711212158
    4. ' ' → logprob: -2.802490711212158
    5. '   ' → logprob: -3.927490711212158
    6. ':' → logprob: -5.552490711212158
    7. 'While' → logprob: -6.677490711212158
    8. ' ```' → logprob: -6.802490711212158
    9. '  ' → logprob: -7.427490711212158
    10. ''s' → logprob: -7.802490711212158

Token 24: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.0005890139145776629
    2. 'idx' → logprob: -7.750588893890381
    3. ' n' → logprob: -9.375589370727539
    4. ' ' → logprob: -9.750589370727539
    5. '	idx' → logprob: -12.500589370727539
    6. '(idx' → logprob: -12.750589370727539
    7. 'n' → logprob: -13.500589370727539
    8. ' len' → logprob: -13.625589370727539
    9. ' ' → logprob: -13.625589370727539
    10. ' s' → logprob: -13.750589370727539

Token 25: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.1626814901828766
    2. ' <=' → logprob: -1.9126814603805542
    3. '<' → logprob: -6.662681579589844
    4. '<=' → logprob: -7.412681579589844
    5. ' ' → logprob: -7.537681579589844
    6. '+' → logprob: -11.412681579589844
    7. '<len' → logprob: -11.787681579589844
    8. '  ' → logprob: -12.287681579589844
    9. '   ' → logprob: -12.412681579589844
    10. '<n' → logprob: -12.787681579589844

Token 26: ' n' (ID: 297)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02333003468811512
    2. 'len' → logprob: -3.773329973220825
    3. ' n' → logprob: -9.523329734802246
    4. 'n' → logprob: -12.398329734802246
    5. ' ' → logprob: -12.398329734802246
    6. '(len' → logprob: -12.898329734802246
    7. '	len' → logprob: -15.523329734802246
    8. '<len' → logprob: -15.648329734802246
    9. '=len' → logprob: -15.898329734802246
    10. '   ' → logprob: -16.898330688476562

Token 27: ' -' (ID: 533)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13032039999961853
    2. ' and' → logprob: -2.2553203105926514
    3. ':
' → logprob: -4.3803205490112305
    4. '   ' → logprob: -6.1303205490112305
    5. 'and' → logprob: -6.3803205490112305
    6. ' :' → logprob: -7.2553205490112305
    7. '-' → logprob: -9.50532054901123
    8. ' ' → logprob: -9.63032054901123
    9. ' :
' → logprob: -10.00532054901123
    10. '       ' → logprob: -11.38032054901123

Token 28: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004629838280379772
    2. ' ' → logprob: -5.379629611968994
    3. '3' → logprob: -12.254630088806152
    4. '```' → logprob: -12.629630088806152
    5. '1' → logprob: -14.254630088806152
    6. '  ' → logprob: -15.004630088806152
    7. '   ' → logprob: -15.817130088806152
    8. '=' → logprob: -16.567129135131836
    9. 'len' → logprob: -16.879629135131836
    10. '6' → logprob: -16.879629135131836

Token 29: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. '```' → logprob: -13.250005722045898
    3. '3' → logprob: -13.875005722045898
    4. '1' → logprob: -13.875005722045898
    5. ' ' → logprob: -14.000005722045898
    6. 'len' → logprob: -15.250005722045898
    7. '=' → logprob: -15.500005722045898
    8. '``' → logprob: -16.2500057220459
    9. '   ' → logprob: -16.6875057220459
    10. '

' → logprob: -17.0625057220459

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03226804360747337
    2. ' and' → logprob: -3.7822680473327637
    3. ' :' → logprob: -5.657268047332764
    4. ':
' → logprob: -5.907268047332764
    5. '   ' → logprob: -6.282268047332764
    6. '       ' → logprob: -7.907268047332764
    7. 'and' → logprob: -8.157267570495605
    8. '    ' → logprob: -9.157267570495605
    9. ' :
' → logprob: -9.407267570495605
    10. ' ' → logprob: -10.657267570495605

Token 31: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05059404298663139
    2. ':' → logprob: -3.9255940914154053
    3. '   ' → logprob: -3.9255940914154053
    4. ' ' → logprob: -5.425593852996826
    5. '<|end|>' → logprob: -6.300593852996826
    6. '    ' → logprob: -6.925593852996826
    7. ' :' → logprob: -7.800593852996826
    8. ' 
' → logprob: -8.050594329833984
    9. ',' → logprob: -8.425594329833984
    10. '\' → logprob: -8.550594329833984

Token 32: ' triple' (ID: 41563)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5359402894973755
    2. '       ' → logprob: -1.2859402894973755
    3. '    ' → logprob: -2.785940170288086
    4. ' ' → logprob: -3.285940170288086
    5. ' if' → logprob: -4.285940170288086
    6. 'if' → logprob: -5.535940170288086
    7. '```' → logprob: -5.660940170288086
    8. '    
' → logprob: -5.785940170288086
    9. '     
' → logprob: -6.035940170288086
    10. ' 
' → logprob: -6.035940170288086

Token 33: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5940713882446289
    2. ' =' → logprob: -1.469071388244629
    3. '=' → logprob: -2.344071388244629
    4. '==' → logprob: -2.344071388244629
    5. 's' → logprob: -4.094071388244629
    6. '[' → logprob: -4.969071388244629
    7. '[:]' → logprob: -7.719071388244629
    8. '===' → logprob: -7.844071388244629
    9. '   ' → logprob: -8.094071388244629
    10. ' s' → logprob: -8.344071388244629

Token 34: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.06196925416588783
    2. 's' → logprob: -2.81196928024292
    3. ''s' → logprob: -14.311968803405762
    4. '`s' → logprob: -14.561968803405762
    5. '(s' → logprob: -15.936968803405762
    6. '```' → logprob: -16.186969757080078
    7. ''' → logprob: -16.686969757080078
    8. ' ' → logprob: -16.811969757080078
    9. '	s' → logprob: -16.936969757080078
    10. '"s' → logprob: -17.311969757080078

Token 35: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -4.008129963040119e-06
    2. 'idx' → logprob: -12.625003814697266
    3. '[' → logprob: -14.625003814697266
    4. ' idx' → logprob: -16.250003814697266
    5. '[i' → logprob: -16.625003814697266
    6. '```' → logprob: -17.625003814697266
    7. '(idx' → logprob: -17.875003814697266
    8. '   ' → logprob: -17.875003814697266
    9. '	idx' → logprob: -17.875003814697266
    10. ' [' → logprob: -18.625003814697266

Token 36: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.941161776310764e-05
    2. ' :' → logprob: -11.000039100646973
    3. ':]' → logprob: -11.750039100646973
    4. ':index' → logprob: -12.000039100646973
    5. ']' → logprob: -12.375039100646973
    6. ':i' → logprob: -13.000039100646973
    7. 'idx' → logprob: -14.625039100646973
    8. '   ' → logprob: -14.875039100646973
    9. ':id' → logprob: -15.000039100646973
    10. '[idx' → logprob: -15.750039100646973

Token 37: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -8.061054359131958e-06
    2. ' idx' → logprob: -11.750007629394531
    3. '	idx' → logprob: -16.00000762939453
    4. '3' → logprob: -18.25000762939453
    5. '(idx' → logprob: -18.25000762939453
    6. '[idx' → logprob: -18.37500762939453
    7. '_idx' → logprob: -18.87500762939453
    8. '   ' → logprob: -19.87500762939453
    9. '```' → logprob: -20.87500762939453
    10. '.idx' → logprob: -21.50000762939453

Token 38: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0019313741941004992
    2. ' +' → logprob: -6.251931190490723
    3. '3' → logprob: -13.001931190490723
    4. '   ' → logprob: -15.751931190490723
    5. ' ' → logprob: -16.12693214416504
    6. '＋' → logprob: -16.37693214416504
    7. ']+' → logprob: -17.00193214416504
    8. '4' → logprob: -17.62693214416504
    9. '+++' → logprob: -17.75193214416504
    10. '```' → logprob: -17.87693214416504

Token 39: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '```' → logprob: -14.87500286102295
    4. '   ' → logprob: -16.687501907348633
    5. '  ' → logprob: -17.437501907348633
    6. ')' → logprob: -18.562501907348633
    7. '...' → logprob: -18.750001907348633
    8. 'abc' → logprob: -18.750001907348633
    9. '>' → logprob: -19.062501907348633
    10. '۳' → logprob: -19.125001907348633

Token 40: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004225489683449268
    2. ')' → logprob: -6.129225254058838
    3. ']
' → logprob: -6.379225254058838
    4. ')]' → logprob: -9.129225730895996
    5. '       ' → logprob: -10.004225730895996
    6. ']==' → logprob: -10.129225730895996
    7. '   ' → logprob: -10.254225730895996
    8. ' ]' → logprob: -10.504225730895996
    9. '])' → logprob: -10.504225730895996
    10. ')
' → logprob: -10.879225730895996

Token 41: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01500256173312664
    2. '==' → logprob: -5.140002727508545
    3. ' ==' → logprob: -5.390002727508545
    4. '=' → logprob: -6.765002727508545
    5. ' if' → logprob: -7.265002727508545
    6. '   ' → logprob: -7.765002727508545
    7. ' =' → logprob: -8.015002250671387
    8. ':' → logprob: -8.265002250671387
    9. '<|end|>' → logprob: -8.265002250671387
    10. ')' → logprob: -8.515002250671387

Token 42: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04701009765267372
    2. 'if' (adapté à ' if') → logprob: -3.6720101833343506
    3. ' if' → logprob: -3.9220101833343506
    4. '   ' → logprob: -7.6720099449157715
    5. '```' → logprob: -8.54701042175293
    6. '        
' → logprob: -11.79701042175293
    7. ' ' → logprob: -12.17201042175293
    8. '``' → logprob: -12.29701042175293
    9. '           ' → logprob: -12.67201042175293
    10. '  
' → logprob: -13.04701042175293

Token 43: ' triple' (ID: 41563)
  Prédit: ' triple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triple' → logprob: -0.0005544631858356297
    2. ' ' → logprob: -8.125554084777832
    3. 'tr' → logprob: -8.375554084777832
    4. ' '' → logprob: -11.125554084777832
    5. ' s' → logprob: -12.750554084777832
    6. ' "' → logprob: -13.125554084777832
    7. 'Triple' → logprob: -13.500554084777832
    8. 's' → logprob: -13.625554084777832
    9. ' trip' → logprob: -13.750554084777832
    10. ' t' → logprob: -13.750554084777832

Token 44: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1003190279006958
    2. '==' → logprob: -2.3503189086914062
    3. '===' → logprob: -9.600318908691406
    4. '=' → logprob: -10.850318908691406
    5. ' =' → logprob: -12.350318908691406
    6. '=='' → logprob: -12.600318908691406
    7. ')' → logprob: -12.600318908691406
    8. ' ' → logprob: -12.850318908691406
    9. '=="' → logprob: -12.850318908691406
    10. ' ===' → logprob: -13.350318908691406

Token 45: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7294723987579346
    2. '"' → logprob: -0.9794723987579346
    3. ' '' → logprob: -2.4794723987579346
    4. ' "' → logprob: -2.8544723987579346
    5. 'abc' → logprob: -7.3544721603393555
    6. ' abc' → logprob: -8.479472160339355
    7. ''ab' → logprob: -10.604472160339355
    8. ''"' → logprob: -10.979472160339355
    9. '  ' → logprob: -11.104472160339355
    10. ''s' → logprob: -11.354472160339355

Token 46: 'ABC' (ID: 44197)
  Prédit: 'abc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -2.6656825866666622e-05
    2. 'ABC' → logprob: -11.25002670288086
    3. ''' → logprob: -11.62502670288086
    4. 'a' → logprob: -12.75002670288086
    5. '"' → logprob: -14.25002670288086
    6. '```' → logprob: -14.87502670288086
    7. ' abc' → logprob: -15.25002670288086
    8. 'ab' → logprob: -15.37502670288086
    9. 'aba' → logprob: -16.25002670288086
    10. ''''' → logprob: -17.25002670288086

Token 47: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.024124804884195328
    2. ''' → logprob: -4.399124622344971
    3. '':
' → logprob: -4.524124622344971
    4. '':
' → logprob: -7.399124622344971
    5. ':' → logprob: -9.899125099182129
    6. '       ' → logprob: -11.524125099182129
    7. '":' → logprob: -12.024125099182129
    8. '':

' → logprob: -12.274125099182129
    9. '```' → logprob: -12.774125099182129
    10. '   ' → logprob: -12.899125099182129

Token 48: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28756946325302124
    2. ':' → logprob: -1.412569522857666
    3. ':
' → logprob: -5.412569522857666
    4. '       ' → logprob: -6.662569522857666
    5. ' :' → logprob: -8.787569046020508
    6. '):' → logprob: -8.912569046020508
    7. '          ' → logprob: -9.662569046020508
    8. '```' → logprob: -10.537569046020508
    9. '               ' → logprob: -10.662569046020508
    10. '\n' → logprob: -10.662569046020508

Token 49: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.7110604643821716
    2. '           ' → logprob: -0.8360604643821716
    3. '               ' → logprob: -3.3360605239868164
    4. '
' → logprob: -4.086060523986816
    5. ' result' → logprob: -4.086060523986816
    6. ' 
' → logprob: -5.586060523986816
    7. '            
' → logprob: -6.461060523986816
    8. '```' → logprob: -8.461060523986816
    9. '                
' → logprob: -8.711060523986816
    10. '  
' → logprob: -9.211060523986816

Token 50: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.008682532235980034
    2. '+=' → logprob: -4.758682727813721
    3. '+' → logprob: -9.633682250976562
    4. ']+=' → logprob: -14.258682250976562
    5. '=' → logprob: -14.508682250976562
    6. ' +' → logprob: -14.633682250976562
    7. ' =' → logprob: -15.008682250976562
    8. ')' → logprob: -15.508682250976562
    9. '+='' → logprob: -16.133682250976562
    10. ' ' → logprob: -16.383682250976562

Token 51: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.1133088618516922
    2. 'result' → logprob: -2.238308906555176
    3. '+' → logprob: -7.863308906555176
    4. '0' → logprob: -10.488308906555176
    5. ' ' → logprob: -10.738308906555176
    6. '1' → logprob: -10.988308906555176
    7. '            ' → logprob: -11.488308906555176
    8. '(result' → logprob: -11.863308906555176
    9. '	result' → logprob: -12.488308906555176
    10. ' +' → logprob: -12.988308906555176

Token 52: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38687387108802795
    2. ' +' → logprob: -1.1368738412857056
    3. '<|end|>' → logprob: -13.886874198913574
    4. ' plus' → logprob: -14.511874198913574
    5. ' +
' → logprob: -14.761874198913574
    6. ' +=' → logprob: -15.136874198913574
    7. ' ' → logprob: -15.386874198913574
    8. '+++' → logprob: -16.011873245239258
    9. '＋' → logprob: -16.261873245239258
    10. '<|end|>' → logprob: -16.511873245239258

Token 53: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005235190503299236
    2. ' ' → logprob: -5.255235195159912
    3. '3' → logprob: -13.880234718322754
    4. '```' → logprob: -15.630234718322754
    5. '2' → logprob: -16.50523567199707
    6. ' ' → logprob: -16.63023567199707
    7. '<|end|>' → logprob: -17.31773567199707
    8. '4' → logprob: -17.56773567199707
    9. '10' → logprob: -17.81773567199707
    10. '100' → logprob: -17.88023567199707

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.909333023941144e-05
    2. ' ' → logprob: -9.625068664550781
    3. '3' → logprob: -13.125068664550781
    4. '2' → logprob: -15.000068664550781
    5. '   ' → logprob: -15.937568664550781
    6. '10' → logprob: -16.50006866455078
    7. '```' → logprob: -16.68756866455078
    8. '  ' → logprob: -16.93756866455078
    9. '100' → logprob: -17.18756866455078
    10. '4' → logprob: -17.25006866455078

Token 55: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1967114955186844
    2. '           ' → logprob: -2.071711540222168
    3. '\n' → logprob: -3.446711540222168
    4. '       ' → logprob: -4.321711540222168
    5. ' 
' → logprob: -6.696711540222168
    6. '    
' → logprob: -6.696711540222168
    7. '        
' → logprob: -6.821711540222168
    8. '            
' → logprob: -6.946711540222168
    9. '
' → logprob: -7.196711540222168
    10. '\' → logprob: -7.321711540222168

Token 56: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7472058534622192
    2. '           ' → logprob: -0.8722058534622192
    3. '       ' → logprob: -2.3722057342529297
    4. '\n' → logprob: -4.87220573425293
    5. '```' → logprob: -6.62220573425293
    6. '        
' → logprob: -6.87220573425293
    7. '    
' → logprob: -7.12220573425293
    8. '            
' → logprob: -7.12220573425293
    9. 'idx' → logprob: -7.24720573425293
    10. '   ' → logprob: -7.24720573425293

Token 57: ' idx' (ID: 14016)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2455039769411087
    2. '       ' → logprob: -1.6205040216445923
    3. '
' → logprob: -4.870503902435303
    4. 'idx' (adapté à ' idx') → logprob: -4.870503902435303
    5. ' idx' → logprob: -6.245503902435303
    6. '   ' → logprob: -6.870503902435303
    7. '```' → logprob: -8.120504379272461
    8. '        
' → logprob: -8.245504379272461
    9. '\' → logprob: -8.495504379272461
    10. ' 
' → logprob: -8.745504379272461

Token 58: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17891523241996765
    2. ' +=' → logprob: -1.92891526222229
    3. '+=' → logprob: -4.053915023803711
    4. ' +' → logprob: -6.803915023803711
    5. '++' → logprob: -10.428915023803711
    6. '<|end|>' → logprob: -11.803915023803711
    7. '+++' → logprob: -11.928915023803711
    8. ' ' → logprob: -12.303915023803711
    9. '=' → logprob: -13.178915023803711
    10. '+='' → logprob: -13.928915023803711

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.742448022123426e-05
    2. ' ' → logprob: -10.250067710876465
    3. '3' → logprob: -10.375067710876465
    4. '   ' → logprob: -15.187567710876465
    5. '```' → logprob: -15.812567710876465
    6. 's' → logprob: -16.75006675720215
    7. '2' → logprob: -17.12506675720215
    8. '0' → logprob: -17.43756675720215
    9. '  ' → logprob: -17.75006675720215
    10. '+' → logprob: -18.00006675720215

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1994775377388578e-05
    2. ' ' → logprob: -11.375012397766113
    3. '3' → logprob: -15.000012397766113
    4. '```' → logprob: -16.687511444091797
    5. '   ' → logprob: -18.312511444091797
    6. '2' → logprob: -18.562511444091797
    7. '0' → logprob: -18.812511444091797
    8. '１' → logprob: -18.875011444091797
    9. '  ' → logprob: -19.250011444091797
    10. '<|end|>' → logprob: -19.625011444091797

Token 61: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01529807597398758
    2. '
' → logprob: -5.015297889709473
    3. 'return' → logprob: -5.015297889709473
    4. '    
' → logprob: -7.140297889709473
    5. ' return' → logprob: -7.515297889709473
    6. '	return' → logprob: -9.140297889709473
    7. ' ' → logprob: -9.390297889709473
    8. '       ' → logprob: -9.515297889709473
    9. '  
' → logprob: -9.640297889709473
    10. '```' → logprob: -9.640297889709473

Token 62: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009849466383457184
    2. 'return' → logprob: -4.884849548339844
    3. ' return' → logprob: -6.259849548339844
    4. '
' → logprob: -8.259849548339844
    5. '```' → logprob: -10.384849548339844
    6. '	return' → logprob: -10.884849548339844
    7. '    
' → logprob: -11.634849548339844
    8. ' ' → logprob: -12.009849548339844
    9. '       ' → logprob: -13.009849548339844
    10. ':return' → logprob: -13.384849548339844

Token 63: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5798668265342712
    2. 'return' (adapté à ' return') → logprob: -0.8298668265342712
    3. ' return' → logprob: -5.579866886138916
    4. '	return' → logprob: -10.204866409301758
    5. '```' → logprob: -10.454866409301758
    6. ' ' → logprob: -10.704866409301758
    7. ':return' → logprob: -10.954866409301758
    8. '
' → logprob: -11.079866409301758
    9. '    
' → logprob: -11.329866409301758
    10. '       ' → logprob: -12.329866409301758

Token 64: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.014163628220558167
    2. 'result' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.139163970947266
    4. '(result' → logprob: -17.764163970947266
    5. ' results' → logprob: -18.014163970947266
    6. ' ' → logprob: -18.139163970947266
    7. '	result' → logprob: -18.389163970947266
    8. '_result' → logprob: -18.639163970947266
    9. '[result' → logprob: -20.264163970947266
    10. ',result' → logprob: -20.639163970947266

Token 65: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 66: 'N' (ID: 45)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 67: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2066439390182495
    2. '=' → logprob: -1.7066439390182495
    3. ' ' → logprob: -5.831644058227539
    4. ',' → logprob: -6.456644058227539
    5. '<|end|>' → logprob: -8.081644058227539
    6. '  ' → logprob: -8.706644058227539
    7. ')' → logprob: -9.706644058227539
    8. '.' → logprob: -10.206644058227539
    9. '```' → logprob: -10.581644058227539
    10. '#' → logprob: -10.956644058227539

Token 68: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.6253269910812378
    2. ' int' → logprob: -1.0003269910812378
    3. '5' → logprob: -3.0003271102905273
    4. '10' → logprob: -3.3753271102905273
    5. ' ' → logprob: -4.875327110290527
    6. '3' → logprob: -5.750327110290527
    7. 'len' → logprob: -6.875327110290527
    8. ' len' → logprob: -7.250327110290527
    9. '0' → logprob: -8.375327110290527
    10. '7' → logprob: -9.250327110290527

Token 69: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4748965799808502
    2. '(input' → logprob: -0.9748965501785278
    3. 'input' → logprob: -7.474896430969238
    4. '()' → logprob: -8.849896430969238
    5. ' (' → logprob: -9.599896430969238
    6. '('' → logprob: -11.349896430969238
    7. ' input' → logprob: -11.974896430969238
    8. '(
' → logprob: -11.974896430969238
    9. '=input' → logprob: -12.474896430969238
    10. '(int' → logprob: -13.349896430969238

Token 70: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.22193863987922668
    2. '(' → logprob: -2.3469386100769043
    3. '())' → logprob: -2.3469386100769043
    4. ')' → logprob: -5.596938610076904
    5. '('' → logprob: -5.596938610076904
    6. '(()' → logprob: -9.471939086914062
    7. '("("' → logprob: -10.471939086914062
    8. '(
' → logprob: -10.846939086914062
    9. '(`' → logprob: -10.846939086914062
    10. '("")' → logprob: -10.846939086914062

Token 71: 'S' (ID: 50)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004018445499241352
    2. ' s' → logprob: -5.629018306732178
    3. 'S' → logprob: -8.129018783569336
    4. '```' → logprob: -10.129018783569336
    5. ' 
' → logprob: -10.629018783569336
    6. ' ' → logprob: -11.754018783569336
    7. '<|end|>' → logprob: -12.129018783569336
    8. '_s' → logprob: -12.254018783569336
    9. ')' → logprob: -12.254018783569336
    10. ' S' → logprob: -12.379018783569336

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04859815910458565
    2. '=' → logprob: -3.048598051071167
    3. ' ' → logprob: -11.923598289489746
    4. '=input' → logprob: -13.298598289489746
    5. '  ' → logprob: -14.173598289489746
    6. '.' → logprob: -14.173598289489746
    7. ')' → logprob: -15.048598289489746
    8. '   ' → logprob: -15.173598289489746
    9. '[' → logprob: -15.298598289489746
    10. ' ' → logprob: -16.67359733581543

Token 73: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141440629959106
    2. ' input' → logprob: -1.7014143466949463
    3. '=input' → logprob: -14.701414108276367
    4. '(input' → logprob: -15.201414108276367
    5. '<input' → logprob: -16.451414108276367
    6. 'str' → logprob: -16.576414108276367
    7. '	input' → logprob: -16.701414108276367
    8. ' ' → logprob: -16.951414108276367
    9. ' ' → logprob: -17.451414108276367
    10. ' str' → logprob: -17.826414108276367

Token 74: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -6.599403423024341e-05
    2. '(' → logprob: -9.875065803527832
    3. ' ()' → logprob: -11.500065803527832
    4. '().' → logprob: -13.250065803527832
    5. '())' → logprob: -14.375065803527832
    6. '()`' → logprob: -14.625065803527832
    7. '()
' → logprob: -14.750065803527832
    8. '()>' → logprob: -15.375065803527832
    9. '（）' → logprob: -15.500065803527832
    10. '`()' → logprob: -15.625065803527832

Token 75: 'from' (ID: 2845)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001114106344175525
    2. 'result' → logprob: -9.25011157989502
    3. '```' → logprob: -12.12511157989502
    4. 'count' → logprob: -12.62511157989502
    5. 'answer' → logprob: -13.50011157989502
    6. 'output' → logprob: -13.50011157989502
    7. ' print' → logprob: -14.00011157989502
    8. 'p' → logprob: -14.25011157989502
    9. 'P' → logprob: -15.00011157989502
    10. '
' → logprob: -15.25011157989502

Token 76: ' functools' (ID: 142636)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26923877000808716
    2. ' ' → logprob: -2.0192387104034424
    3. ' collections' → logprob: -2.8942387104034424
    4. ' sys' → logprob: -3.1442387104034424
    5. ' _' → logprob: -6.0192389488220215
    6. ' math' → logprob: -7.5192389488220215
    7. ' itertools' → logprob: -7.7692389488220215
    8. ' ' → logprob: -8.019238471984863
    9. 'collections' → logprob: -8.394238471984863
    10. ' functools' → logprob: -8.769238471984863

Token 77: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.07561639696359634
    2. ' import' → logprob: -2.8256163597106934
    3. '_import' → logprob: -4.950616359710693
    4. '_' → logprob: -6.200616359710693
    5. '<|end|>' → logprob: -7.075616359710693
    6. '```' → logprob: -7.200616359710693
    7. '`' → logprob: -7.575616359710693
    8. '+' → logprob: -7.950616359710693
    9. '.' → logprob: -7.950616359710693
    10. '	import' → logprob: -8.700616836547852

Token 78: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.011911765672266483
    2. 'l' → logprob: -4.511911869049072
    3. 'cache' → logprob: -8.011911392211914
    4. 'partial' → logprob: -8.386911392211914
    5. 'wrap' → logprob: -8.511911392211914
    6. 'redu' → logprob: -10.136911392211914
    7. 'cmp' → logprob: -10.636911392211914
    8. ' reduce' → logprob: -11.261911392211914
    9. ' l' → logprob: -11.261911392211914
    10. 'cached' → logprob: -11.761911392211914

Token 79: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23647218942642212
    2. 'result' → logprob: -1.6114721298217773
    3. 'print' → logprob: -5.986472129821777
    4. '
' → logprob: -6.111472129821777
    5. ' result' → logprob: -6.111472129821777
    6. ' 
' → logprob: -6.736472129821777
    7. '<|end|>' → logprob: -7.236472129821777
    8. 'res' → logprob: -7.611472129821777
    9. '' → logprob: -8.111472129821777
    10. 'count' → logprob: -8.361472129821777

Token 80: 'output' (ID: 6130)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020433152094483376
    2. 'result' → logprob: -4.520432949066162
    3. 'count' → logprob: -4.770432949066162
    4. 'answer' → logprob: -8.02043342590332
    5. 'res' → logprob: -8.52043342590332
    6. 'total' → logprob: -9.64543342590332
    7. ' print' → logprob: -10.39543342590332
    8. 'p' → logprob: -10.39543342590332
    9. 'ans' → logprob: -10.52043342590332
    10. 'pr' → logprob: -10.64543342590332

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2324865609407425
    2. '=' → logprob: -1.607486605644226
    3. '_' → logprob: -4.982486724853516
    4. ' ' → logprob: -9.357486724853516
    5. '_result' → logprob: -9.982486724853516
    6. '(' → logprob: -10.857486724853516
    7. '_=' → logprob: -10.982486724853516
    8. '_value' → logprob: -12.607486724853516
    9. 'result' → logprob: -12.857486724853516
    10. '"' → logprob: -12.857486724853516

Token 82: ' (' (ID: 350)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.08437513560056686
    2. ' count' → logprob: -2.7093751430511475
    3. 'reduce' → logprob: -4.334374904632568
    4. ' reduce' → logprob: -7.209374904632568
    5. 'str' → logprob: -7.959374904632568
    6. '(count' → logprob: -9.834375381469727
    7. ' str' → logprob: -9.959375381469727
    8. '[count' → logprob: -11.709375381469727
    9. 'lambda' → logprob: -11.959375381469727
    10. 're' → logprob: -12.084375381469727

Token 83: 'lambda' (ID: 35280)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.5159932374954224
    2. 'count' → logprob: -1.0159932374954224
    3. 'lambda' → logprob: -3.265993118286133
    4. ' reduce' → logprob: -7.015993118286133
    5. ' count' → logprob: -7.015993118286133
    6. ')' → logprob: -7.890993118286133
    7. ' lambda' → logprob: -8.515993118286133
    8. '   ' → logprob: -9.265993118286133
    9. '(lambda' → logprob: -9.515993118286133
    10. 'len' → logprob: -9.765993118286133

Token 84: ' z' (ID: 579)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.30260854959487915
    2. 'x' → logprob: -2.5526084899902344
    3. ' n' → logprob: -2.5526084899902344
    4. ' s' → logprob: -2.9276084899902344
    5. 'n' → logprob: -4.802608489990234
    6. ' acc' → logprob: -4.927608489990234
    7. ' a' → logprob: -5.052608489990234
    8. ' l' → logprob: -5.427608489990234
    9. 's' → logprob: -5.677608489990234
    10. ' f' → logprob: -5.677608489990234

Token 85: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026413388550281525
    2. ',' → logprob: -4.151413440704346
    3. ' :' → logprob: -4.776413440704346
    4. ',z' → logprob: -7.276413440704346
    5. ':z' → logprob: -7.276413440704346
    6. ':n' → logprob: -9.026412963867188
    7. ':s' → logprob: -9.276412963867188
    8. 'z' → logprob: -9.776412963867188
    9. 's' → logprob: -10.026412963867188
    10. ':S' → logprob: -10.526412963867188

Token 86: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.3660672605037689
    2. ' reduce' → logprob: -1.6160672903060913
    3. 'count' → logprob: -2.9910671710968018
    4. 'z' → logprob: -4.116067409515381
    5. ' z' → logprob: -4.116067409515381
    6. ' count' → logprob: -4.116067409515381
    7. 'str' → logprob: -6.366067409515381
    8. ' str' → logprob: -6.741067409515381
    9. 'None' → logprob: -7.241067409515381
    10. ' None' → logprob: -7.616067409515381

Token 87: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.008066141046583652
    2. '(' → logprob: -4.883066177368164
    3. ')' → logprob: -8.383066177368164
    4. ' (' → logprob: -8.883066177368164
    5. '(operator' → logprob: -9.883066177368164
    6. ' lambda' → logprob: -11.758066177368164
    7. '```' → logprob: -11.758066177368164
    8. 'lambda' → logprob: -12.258066177368164
    9. '=lambda' → logprob: -12.383066177368164
    10. '   ' → logprob: -12.383066177368164

Token 88: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2784614562988281
    2. ' lambda' → logprob: -1.7784614562988281
    3. ' a' → logprob: -2.778461456298828
    4. ' ' → logprob: -5.153461456298828
    5. ' acc' → logprob: -5.528461456298828
    6. 'x' → logprob: -7.653461456298828
    7. 'a' → logprob: -7.778461456298828
    8. '(lambda' → logprob: -7.778461456298828
    9. 'lambda' → logprob: -8.903461456298828
    10. ' y' → logprob: -9.028461456298828

Token 89: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00525616854429245
    2. ',y' → logprob: -6.005256175994873
    3. ' ,' → logprob: -6.505256175994873
    4. ',x' → logprob: -7.005256175994873
    5. ',z' → logprob: -9.130255699157715
    6. ',a' → logprob: -9.630255699157715
    7. 'a' → logprob: -10.380255699157715
    8. 'y' → logprob: -10.630255699157715
    9. ',l' → logprob: -11.255255699157715
    10. ',i' → logprob: -11.380255699157715

Token 90: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.07235360145568848
    2. 'y' → logprob: -2.6973536014556885
    3. ' acc' → logprob: -7.072353363037109
    4. ' ' → logprob: -8.07235336303711
    5. ' z' → logprob: -8.19735336303711
    6. ' a' → logprob: -8.44735336303711
    7. ' lambda' → logprob: -8.44735336303711
    8. 'a' → logprob: -9.07235336303711
    9. ' x' → logprob: -9.82235336303711
    10. 'z' → logprob: -9.94735336303711

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011903997510671616
    2. ',' → logprob: -4.511903762817383
    3. ' :' → logprob: -7.386903762817383
    4. ',z' → logprob: -10.011903762817383
    5. ',y' → logprob: -10.136903762817383
    6. ',x' → logprob: -10.261903762817383
    7. ':x' → logprob: -10.511903762817383
    8. ',:' → logprob: -10.886903762817383
    9. '=' → logprob: -11.136903762817383
    10. 'x' → logprob: -11.886903762817383

Token 92: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.20535244047641754
    2. ' x' → logprob: -1.7053524255752563
    3. 'lambda' → logprob: -6.455352306365967
    4. ' lambda' → logprob: -7.205352306365967
    5. '(x' → logprob: -7.330352306365967
    6. '(lambda' → logprob: -8.330352783203125
    7. ' (' → logprob: -8.455352783203125
    8. '	x' → logprob: -9.080352783203125
    9. ' ' → logprob: -9.455352783203125
    10. 'count' → logprob: -9.580352783203125

Token 93: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6255407929420471
    2. ' +' → logprob: -0.8755407929420471
    3. '+y' → logprob: -3.5005407333374023
    4. '*' → logprob: -4.500540733337402
    5. ' *' → logprob: -6.000540733337402
    6. ' if' → logprob: -6.625540733337402
    7. '*y' → logprob: -7.750540733337402
    8. ',' → logprob: -7.875540733337402
    9. 'y' → logprob: -7.875540733337402
    10. '|' → logprob: -8.125540733337402

Token 94: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.3903987407684326
    2. ' y' → logprob: -1.1403987407684326
    3. '1' → logprob: -6.515398979187012
    4. 'z' → logprob: -7.515398979187012
    5. ' ' → logprob: -8.015398979187012
    6. ' (' → logprob: -8.140398979187012
    7. '(y' → logprob: -8.765398979187012
    8. 'count' → logprob: -8.890398979187012
    9. ' z' → logprob: -9.015398979187012
    10. '(' → logprob: -9.265398979187012

Token 95: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013773227110505104
    2. ',z' → logprob: -4.513773441314697
    3. ')(' → logprob: -7.138773441314697
    4. ' ,' → logprob: -7.388773441314697
    5. '(z' → logprob: -8.138772964477539
    6. ',len' → logprob: -8.638772964477539
    7. ',map' → logprob: -9.013772964477539
    8. ',[' → logprob: -9.138772964477539
    9. 'z' → logprob: -9.513772964477539
    10. '+' → logprob: -9.638772964477539

Token 96: ' [' (ID: 723)
  Prédit: '[z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[z' → logprob: -0.8969194293022156
    2. '[' → logprob: -2.0219194889068604
    3. 'map' → logprob: -2.1469194889068604
    4. 'z' → logprob: -2.2719194889068604
    5. ' map' → logprob: -2.5219194889068604
    6. ' [' → logprob: -2.8969194889068604
    7. '[count' → logprob: -3.1469194889068604
    8. ' z' → logprob: -4.021919250488281
    9. 'list' → logprob: -4.146919250488281
    10. 'count' → logprob: -5.396919250488281

Token 97: '1' (ID: 16)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1680956333875656
    2. '1' → logprob: -2.168095588684082
    3. 'z' → logprob: -3.793095588684082
    4. 'int' → logprob: -4.543095588684082
    5. '(' → logprob: -5.918095588684082
    6. '[' → logprob: -6.793095588684082
    7. '(count' → logprob: -7.418095588684082
    8. ' count' → logprob: -7.418095588684082
    9. '[count' → logprob: -7.543095588684082
    10. 'map' → logprob: -8.543095588684082

Token 98: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7678166627883911
    2. 'for' → logprob: -1.2678166627883911
    3. ' if' → logprob: -1.7678166627883911
    4. 'if' → logprob: -2.5178165435791016
    5. '(z' → logprob: -6.392816543579102
    6. ' ' → logprob: -7.892816543579102
    7. ']' → logprob: -9.142816543579102
    8. '(' → logprob: -9.142816543579102
    9. '(x' → logprob: -9.142816543579102
    10. '   ' → logprob: -9.267816543579102

Token 99: ' S' (ID: 336)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.18686869740486145
    2. ' count' → logprob: -2.686868667602539
    3. 'z' → logprob: -3.186868667602539
    4. 'S' → logprob: -3.436868667602539
    5. ''z' → logprob: -4.811868667602539
    6. ''' → logprob: -5.436868667602539
    7. ' z' → logprob: -5.561868667602539
    8. ''s' → logprob: -6.061868667602539
    9. 's' → logprob: -6.186868667602539
    10. ''S' → logprob: -6.186868667602539

Token 100: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.002619297243654728
    2. '.count' → logprob: -6.37761926651001
    3. '.startswith' → logprob: -7.75261926651001
    4. '.find' → logprob: -8.627619743347168
    5. '[idx' → logprob: -9.502619743347168
    6. '[' → logprob: -10.002619743347168
    7. '[j' → logprob: -10.002619743347168
    8. '   ' → logprob: -10.502619743347168
    9. '[z' → logprob: -10.752619743347168
    10. 'i' → logprob: -10.752619743347168

Token 101: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.021882526576519012
    2. 'i' → logprob: -4.1468825340271
    3. '[i' → logprob: -6.1468825340271
    4. ':' → logprob: -6.2718825340271
    5. ' ' → logprob: -7.3968825340271
    6. ' i' → logprob: -8.396882057189941
    7. '(i' → logprob: -8.396882057189941
    8. ' :' → logprob: -8.396882057189941
    9. '-' → logprob: -9.021882057189941
    10. 'y' → logprob: -9.646882057189941

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015085970517247915
    2. ' +' → logprob: -9.250150680541992
    3. '3' → logprob: -10.000150680541992
    4. '==' → logprob: -12.875150680541992
    5. '+i' → logprob: -13.000150680541992
    6. 'i' → logprob: -13.750150680541992
    7. '   ' → logprob: -14.375150680541992
    8. ' ' → logprob: -15.000150680541992
    9. '+'' → logprob: -15.062650680541992
    10. '[' → logprob: -15.437650680541992

Token 103: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.875007629394531
    4. 'ABC' → logprob: -14.375007629394531
    5. '```' → logprob: -14.500007629394531
    6. '  ' → logprob: -15.312507629394531
    7. 'abc' → logprob: -15.500007629394531
    8. ''' → logprob: -16.50000762939453
    9. '"' → logprob: -16.75000762939453
    10. '...' → logprob: -17.37500762939453

Token 104: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2424154281616211
    2. ']==' → logprob: -1.617415428161621
    3. ']=='' → logprob: -4.117415428161621
    4. ' ]' → logprob: -8.242415428161621
    5. ']=="' → logprob: -9.367415428161621
    6. '==' → logprob: -9.492415428161621
    7. '']' → logprob: -9.742415428161621
    8. '']=='' → logprob: -10.242415428161621
    9. '']==' → logprob: -11.367415428161621
    10. '```' → logprob: -11.617415428161621

Token 105: ' ==' (ID: 951)
  Prédit: ']=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']==' → logprob: -0.6115968227386475
    2. ']' → logprob: -0.8615968227386475
    3. ']=='' → logprob: -3.8615968227386475
    4. '==' → logprob: -4.486597061157227
    5. ' ]' → logprob: -6.361597061157227
    6. ' ==' → logprob: -7.736597061157227
    7. ']=="' → logprob: -8.736597061157227
    8. '=='' → logprob: -8.986597061157227
    9. '(i' → logprob: -9.361597061157227
    10. '']==' → logprob: -10.861597061157227

Token 106: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16388800740242004
    2. ' '' → logprob: -1.9138879776000977
    3. '"' → logprob: -5.788887977600098
    4. ' "' → logprob: -8.788887977600098
    5. 'z' → logprob: -8.913887977600098
    6. ''z' → logprob: -9.538887977600098
    7. 'ABC' → logprob: -9.538887977600098
    8. ' z' → logprob: -9.788887977600098
    9. ''A' → logprob: -10.288887977600098
    10. ' ABC' → logprob: -10.538887977600098

Token 107: 'ABC' (ID: 44197)
  Prédit: 'ABC'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABC' → logprob: -0.0004032634024042636
    2. ''' → logprob: -7.87540340423584
    3. ' ABC' → logprob: -11.37540340423584
    4. '"' → logprob: -12.00040340423584
    5. 'abc' → logprob: -12.87540340423584
    6. 'AB' → logprob: -14.12540340423584
    7. 'A' → logprob: -14.62540340423584
    8. '  ' → logprob: -14.62540340423584
    9. ''''' → logprob: -15.12540340423584
    10. '   ' → logprob: -15.62540340423584

Token 108: ''' (ID: 6)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18036730587482452
    2. 'else' → logprob: -1.805367350578308
    3. ']' → logprob: -8.180367469787598
    4. '```' → logprob: -9.180367469787598
    5. ''' → logprob: -9.305367469787598
    6. ' ' → logprob: -10.055367469787598
    7. '       ' → logprob: -10.680367469787598
    8. '   ' → logprob: -11.055367469787598
    9. ')' → logprob: -11.180367469787598
    10. '}' → logprob: -11.305367469787598

Token 109: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.054915569722652435
    2. 'else' → logprob: -2.9299156665802
    3. ' ' → logprob: -11.054915428161621
    4. ')' → logprob: -11.679915428161621
    5. '```' → logprob: -13.054915428161621
    6. ' for' → logprob: -13.429915428161621
    7. '    ' → logprob: -13.679915428161621
    8. '        ' → logprob: -13.804915428161621
    9. '  ' → logprob: -13.804915428161621
    10. '   ' → logprob: -14.304915428161621

Token 110: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014164921827614307
    2. ' ' → logprob: -4.264164924621582
    3. '   ' → logprob: -14.014164924621582
    4. '  ' → logprob: -15.764164924621582
    5. ' ' → logprob: -16.514163970947266
    6. '    ' → logprob: -16.826663970947266
    7. ')' → logprob: -17.326663970947266
    8. '1' → logprob: -17.389163970947266
    9. '```' → logprob: -17.451663970947266
    10. ',' → logprob: -17.701663970947266

Token 111: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.639096970204264e-05
    2. ' ' → logprob: -9.250096321105957
    3. '   ' → logprob: -15.625096321105957
    4. '  ' → logprob: -17.500097274780273
    5. '۰' → logprob: -18.937597274780273
    6. '    ' → logprob: -19.125097274780273
    7. '-' → logprob: -19.187597274780273
    8. '       ' → logprob: -19.250097274780273
    9. '     ' → logprob: -19.375097274780273
    10. '```' → logprob: -19.562597274780273

Token 112: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014196764677762985
    2. 'for' → logprob: -4.264196872711182
    3. ' ' → logprob: -10.389196395874023
    4. '	for' → logprob: -14.139196395874023
    5. '   ' → logprob: -14.389196395874023
    6. '    ' → logprob: -14.764196395874023
    7. '  ' → logprob: -15.514196395874023
    8. ' in' → logprob: -15.889196395874023
    9. ')' → logprob: -16.264196395874023
    10. ' else' → logprob: -16.514196395874023

Token 113: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.100220687687397
    2. ' i' → logprob: -2.3502206802368164
    3. 'range' → logprob: -11.725220680236816
    4. ' range' → logprob: -12.350220680236816
    5. ' in' → logprob: -14.225220680236816
    6. ' ' → logprob: -14.475220680236816
    7. '	i' → logprob: -15.975220680236816
    8. ' ' → logprob: -16.475221633911133
    9. '  ' → logprob: -16.850221633911133
    10. ')i' → logprob: -17.225221633911133

Token 114: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00408801669254899
    2. 'in' → logprob: -5.504087924957275
    3. 'range' → logprob: -12.379088401794434
    4. ' range' → logprob: -12.754088401794434
    5. ' ' → logprob: -13.129088401794434
    6. '  ' → logprob: -15.379088401794434
    7. '<|end|>' → logprob: -16.004087448120117
    8. '   ' → logprob: -16.504087448120117
    9. ' i' → logprob: -17.379087448120117
    10. '	in' → logprob: -17.379087448120117

Token 115: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11283976584672928
    2. ' range' → logprob: -2.237839698791504
    3. ' ' → logprob: -11.487839698791504
    4. '   ' → logprob: -12.987839698791504
    5. '  ' → logprob: -13.237839698791504
    6. '(range' → logprob: -13.237839698791504
    7. '	range' → logprob: -14.487839698791504
    8. ' xrange' → logprob: -15.362839698791504
    9. '    ' → logprob: -15.612839698791504
    10. '`' → logprob: -16.36284065246582

Token 116: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.35457342863082886
    2. '(len' → logprob: -1.3545734882354736
    3. '(n' → logprob: -3.3545734882354736
    4. '(' → logprob: -5.2295732498168945
    5. ' (' → logprob: -9.479573249816895
    6. 'len' → logprob: -9.479573249816895
    7. ' len' → logprob: -10.854573249816895
    8. 'N' → logprob: -12.229573249816895
    9. ' N' → logprob: -12.354573249816895
    10. '   ' → logprob: -13.354573249816895

Token 117: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20236344635486603
    2. ' -' → logprob: -1.7023634910583496
    3. ' ' → logprob: -7.57736349105835
    4. ')])' → logprob: -8.577363014221191
    5. ')]' → logprob: -9.327363014221191
    6. ')' → logprob: -9.577363014221191
    7. '   ' → logprob: -10.077363014221191
    8. '  ' → logprob: -10.577363014221191
    9. ' )' → logprob: -11.827363014221191
    10. '])' → logprob: -12.327363014221191

Token 118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003386806638445705
    2. ' ' → logprob: -8.000338554382324
    3. '```' → logprob: -13.375338554382324
    4. '   ' → logprob: -15.000338554382324
    5. '
' → logprob: -15.812838554382324
    6. ')' → logprob: -16.31283950805664
    7. '3' → logprob: -16.43783950805664
    8. '

' → logprob: -16.50033950805664
    9. 'len' → logprob: -16.62533950805664
    10. '  ' → logprob: -16.62533950805664

Token 119: ')],' (ID: 60559)
  Prédit: ']))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.05824620649218559
    2. ')]' → logprob: -3.30824613571167
    3. '])))' → logprob: -4.30824613571167
    4. ')])' → logprob: -5.80824613571167
    5. '])' → logprob: -6.43324613571167
    6. ']))
' → logprob: -6.93324613571167
    7. ']' → logprob: -7.55824613571167
    8. ' ]' → logprob: -9.808246612548828
    9. ']))

' → logprob: -9.808246612548828
    10. '])))
' → logprob: -9.808246612548828

Token 120: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005931289400905371
    2. ' ' → logprob: -5.130931377410889
    3. ')' → logprob: -14.50593090057373
    4. '   ' → logprob: -14.50593090057373
    5. '  ' → logprob: -14.94343090057373
    6. '           ' → logprob: -15.25593090057373
    7. '    ' → logprob: -16.068431854248047
    8. '     ' → logprob: -16.380931854248047
    9. 'lambda' → logprob: -16.443431854248047
    10. ' ' → logprob: -16.755931854248047

Token 121: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002651503309607506
    2. ' ' → logprob: -8.250265121459961
    3. ')' → logprob: -13.625265121459961
    4. '   ' → logprob: -13.875265121459961
    5. '  ' → logprob: -14.750265121459961
    6. '           ' → logprob: -15.312765121459961
    7. '     ' → logprob: -15.750265121459961
    8. '    ' → logprob: -15.937765121459961
    9. '       ' → logprob: -16.31276512145996
    10. '          ' → logprob: -16.62526512145996

Token 122: '))(' (ID: 72297)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0024412893690168858
    2. ')' → logprob: -6.25244140625
    3. '))(' → logprob: -8.37744140625
    4. '))
' → logprob: -8.62744140625
    5. ')))' → logprob: -9.37744140625
    6. ' ))' → logprob: -12.12744140625
    7. '))

' → logprob: -12.12744140625
    8. ')
' → logprob: -12.75244140625
    9. '))[' → logprob: -13.25244140625
    10. '),' → logprob: -13.62744140625

Token 123: 'range' (ID: 20967)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0005877026706002653
    2. 'N' → logprob: -7.5005879402160645
    3. ')' → logprob: -10.875587463378906
    4. 'len' → logprob: -11.500587463378906
    5. ' S' → logprob: -12.375587463378906
    6. '(S' → logprob: -14.375587463378906
    7. '0' → logprob: -15.625587463378906
    8. '  ' → logprob: -16.375587463378906
    9. '_S' → logprob: -16.625587463378906
    10. 's' → logprob: -16.750587463378906

Token 124: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.002754472428932786
    2. '(' → logprob: -6.0027546882629395
    3. '(n' → logprob: -8.877754211425781
    4. '(len' → logprob: -9.252754211425781
    5. ')' → logprob: -10.502754211425781
    6. 'N' → logprob: -11.752754211425781
    7. '(
' → logprob: -12.877754211425781
    8. '())' → logprob: -13.127754211425781
    9. '()' → logprob: -14.002754211425781
    10. ' (' → logprob: -14.502754211425781

Token 125: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.475082665681839
    2. '))' → logprob: -0.9750826358795166
    3. ')' → logprob: -7.725082874298096
    4. ' -' → logprob: -8.100082397460938
    5. ' ))' → logprob: -9.600082397460938
    6. ')))' → logprob: -9.725082397460938
    7. '))
' → logprob: -10.350082397460938
    8. '()))' → logprob: -10.725082397460938
    9. '(' → logprob: -11.100082397460938
    10. '));' → logprob: -11.725082397460938

Token 126: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001021970878355205
    2. '3' → logprob: -7.751021862030029
    3. '0' → logprob: -8.626022338867188
    4. ' ' → logprob: -8.626022338867188
    5. '1' → logprob: -9.251022338867188
    6. '-' → logprob: -9.501022338867188
    7. ')' → logprob: -10.001022338867188
    8. '(' → logprob: -13.001022338867188
    9. '```' → logprob: -13.313522338867188
    10. '   ' → logprob: -13.563522338867188

Token 127: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06207680702209473
    2. ')' → logprob: -2.8120768070220947
    3. ')))' → logprob: -9.437076568603516
    4. '))
' → logprob: -10.937076568603516
    5. ')
' → logprob: -12.562076568603516
    6. ' ))' → logprob: -13.562076568603516
    7. '))

' → logprob: -14.437076568603516
    8. '])' → logprob: -14.437076568603516
    9. ')[' → logprob: -14.687076568603516
    10. '),' → logprob: -14.687076568603516

Token 128: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7774818539619446
    2. '
' → logprob: -1.2774817943572998
    3. 'print' → logprob: -1.7774817943572998
    4. '<|end|>' → logprob: -2.6524817943573
    5. ')
' → logprob: -4.152482032775879
    6. '()' → logprob: -6.152482032775879
    7. '()
' → logprob: -7.152482032775879
    8. '#' → logprob: -7.777482032775879
    9. '(print' → logprob: -7.902482032775879
    10. '[' → logprob: -7.902482032775879

Token 129: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.2528841495513916
    2. ' N' → logprob: -1.5028841495513916
    3. ' len' → logprob: -7.7528839111328125
    4. 'len' → logprob: -8.002883911132812
    5. ' ' → logprob: -9.252883911132812
    6. ' True' → logprob: -10.377883911132812
    7. 'True' → logprob: -11.127883911132812
    8. 'S' → logprob: -12.252883911132812
    9. ' ' → logprob: -12.252883911132812
    10. '0' → logprob: -12.377883911132812

Token 130: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1494121104478836
    2. '>' → logprob: -2.274412155151367
    3. ' >=' → logprob: -3.399412155151367
    4. '>=' → logprob: -6.149412155151367
    5. ' ' → logprob: -7.899412155151367
    6. ' <' → logprob: -11.774412155151367
    7. ' ' → logprob: -12.649412155151367
    8. '[' → logprob: -12.774412155151367
    9. '   ' → logprob: -13.024412155151367
    10. '  ' → logprob: -13.149412155151367

Token 131: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006015775725245476
    2. ' ' → logprob: -5.131015777587891
    3. '0' → logprob: -10.25601577758789
    4. '1' → logprob: -10.50601577758789
    5. '3' → logprob: -11.38101577758789
    6. '```' → logprob: -12.56851577758789
    7. '
' → logprob: -12.88101577758789
    8. '  ' → logprob: -13.81851577758789
    9. '-' → logprob: -14.00601577758789
    10. '=' → logprob: -14.00601577758789

Token 132: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004033044911921024
    2. ' ' → logprob: -5.629033088684082
    3. '0' → logprob: -8.129033088684082
    4. '3' → logprob: -9.504033088684082
    5. '1' → logprob: -10.129033088684082
    6. '=' → logprob: -12.254033088684082
    7. '```' → logprob: -12.254033088684082
    8. '-' → logprob: -12.754033088684082
    9. '
' → logprob: -12.941533088684082
    10. '   ' → logprob: -13.879033088684082

Token 133: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141831040382385
    2. 'else' → logprob: -1.7014182806015015
    3. '_else' → logprob: -13.576417922973633
    4. '	else' → logprob: -13.701417922973633
    5. ' ' → logprob: -14.201417922973633
    6. ':' → logprob: -14.826417922973633
    7. ')' → logprob: -15.701417922973633
    8. ' output' → logprob: -15.701417922973633
    9. 'output' → logprob: -15.951417922973633
    10. '+' → logprob: -16.326417922973633

Token 134: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011772511061280966
    2. ' ' → logprob: -6.7511773109436035
    3. '   ' → logprob: -12.251176834106445
    4. '  ' → logprob: -14.876176834106445
    5. '    ' → logprob: -15.688676834106445
    6. '1' → logprob: -15.751176834106445
    7. '`' → logprob: -16.063676834106445
    8. '```' → logprob: -16.063676834106445
    9. '"' → logprob: -16.126176834106445
    10. ' ' → logprob: -16.313676834106445

Token 135: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038586699520237744
    2. ' ' → logprob: -7.875385761260986
    3. 'N' → logprob: -13.875386238098145
    4. '   ' → logprob: -14.062886238098145
    5. '-' → logprob: -14.437886238098145
    6. ''' → logprob: -14.625386238098145
    7. '"' → logprob: -14.687886238098145
    8. '`' → logprob: -15.187886238098145
    9. '  ' → logprob: -15.625386238098145
    10. '(' → logprob: -15.750386238098145

Token 136: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1004716008901596
    2. '
' → logprob: -2.3504714965820312
    3. '<|end|>' → logprob: -8.475471496582031
    4. ' print' → logprob: -11.100471496582031
    5. ')' → logprob: -11.225471496582031
    6. ')
' → logprob: -11.725471496582031
    7. '
' → logprob: -11.850471496582031
    8. '  
' → logprob: -12.600471496582031
    9. '```' → logprob: -12.975471496582031
    10. '#print' → logprob: -13.225471496582031

Token 137: 'if' (ID: 366)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16751617193222046
    2. '
' → logprob: -1.9175162315368652
    3. '<|end|>' → logprob: -5.292516231536865
    4. '\n' → logprob: -7.667516231536865
    5. ')' → logprob: -7.792516231536865
    6. 'output' → logprob: -7.917516231536865
    7. ' 
' → logprob: -8.417515754699707
    8. ' print' → logprob: -8.792515754699707
    9. '#print' → logprob: -9.417515754699707
    10. '#' → logprob: -9.542515754699707

Token 138: ' N' (ID: 478)
  Prédit: ' output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' output' → logprob: -0.263031005859375
    2. ' N' → logprob: -1.638031005859375
    3. 'output' → logprob: -4.013031005859375
    4. 'N' → logprob: -4.013031005859375
    5. ' S' → logprob: -7.763031005859375
    6. ' ' → logprob: -8.513031005859375
    7. ' len' → logprob: -9.638031005859375
    8. 'S' → logprob: -10.513031005859375
    9. ' __' → logprob: -11.013031005859375
    10. '(output' → logprob: -12.013031005859375

Token 139: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.014330508187413216
    2. '>' → logprob: -4.2643303871154785
    3. ' >=' → logprob: -9.014330863952637
    4. ' ' → logprob: -10.514330863952637
    5. ' <=' → logprob: -11.764330863952637
    6. '>=' → logprob: -12.389330863952637
    7. ' ==' → logprob: -13.264330863952637
    8. ' >
' → logprob: -13.514330863952637
    9. ' ' → logprob: -13.764330863952637
    10. ' <' → logprob: -13.764330863952637

Token 140: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.016671398654580116
    2. ' ' → logprob: -4.516671180725098
    3. '=' → logprob: -5.266671180725098
    4. '1' → logprob: -8.391671180725098
    5. '2' → logprob: -8.766671180725098
    6. '4' → logprob: -10.016671180725098
    7. ' =' → logprob: -11.891671180725098
    8. '0' → logprob: -12.516671180725098
    9. '>' → logprob: -12.766671180725098
    10. '6' → logprob: -13.516671180725098

Token 141: '10' (ID: 702)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000116655595775228
    2. ' ' → logprob: -10.125116348266602
    3. '=' → logprob: -10.125116348266602
    4. '2' → logprob: -10.625116348266602
    5. '1' → logprob: -11.875116348266602
    6. '```' → logprob: -13.000116348266602
    7. '4' → logprob: -13.375116348266602
    8. ' =' → logprob: -14.750116348266602
    9. '0' → logprob: -14.875116348266602
    10. '>' → logprob: -15.750116348266602

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06262483447790146
    2. ':
' → logprob: -2.812624931335449
    3. ' :' → logprob: -8.18762493133545
    4. '0' → logprob: -8.43762493133545
    5. ' :
' → logprob: -9.31262493133545
    6. ' and' → logprob: -10.68762493133545
    7. '   ' → logprob: -11.06262493133545
    8. '6' → logprob: -12.31262493133545
    9. '==' → logprob: -12.43762493133545
    10. ':
' → logprob: -12.68762493133545

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009606506675481796
    2. ' print' → logprob: -4.88460636138916
    3. 'print' → logprob: -6.50960636138916
    4. ':
' → logprob: -8.38460636138916
    5. ':' → logprob: -9.25960636138916
    6. ' for' → logprob: -9.63460636138916
    7. '    
' → logprob: -10.38460636138916
    8. '
' → logprob: -10.38460636138916
    9. '	print' → logprob: -11.00960636138916
    10. ' output' → logprob: -11.13460636138916

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.714580774307251
    2. ' print' → logprob: -0.964580774307251
    3. '   ' → logprob: -2.089580774307251
    4. ' for' → logprob: -5.589580535888672
    5. ' output' → logprob: -6.839580535888672
    6. 'output' → logprob: -7.839580535888672
    7. 'for' → logprob: -7.839580535888672
    8. '	print' → logprob: -9.839580535888672
    9. '
' → logprob: -10.839580535888672
    10. 'result' → logprob: -11.339580535888672

Token 145: '(count' (ID: 25892)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.01123078539967537
    2. '(count' → logprob: -4.761230945587158
    3. 'output' → logprob: -6.136230945587158
    4. '(' → logprob: -8.38623046875
    5. 'count' → logprob: -8.51123046875
    6. '(result' → logprob: -12.26123046875
    7. '()' → logprob: -12.51123046875
    8. '(
' → logprob: -12.63623046875
    9. ' output' → logprob: -12.88623046875
    10. '(N' → logprob: -13.26123046875

Token 146: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3544423381972592e-05
    2. 'ABC' → logprob: -11.50001335144043
    3. 'abc' → logprob: -13.00001335144043
    4. '```' → logprob: -15.37501335144043
    5. '_
' → logprob: -15.62501335144043
    6. '(' → logprob: -16.00001335144043
    7. '_xyz' → logprob: -16.25001335144043
    8. ')' → logprob: -17.25001335144043
    9. '_AB' → logprob: -17.50001335144043
    10. '_output' → logprob: -17.50001335144043

Token 147: 'abc' (ID: 26682)
  Prédit: 'abc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abc' → logprob: -0.001636024098843336
    2. 'S' → logprob: -7.126636028289795
    3. 'ABC' → logprob: -7.126636028289795
    4. 'xyz' → logprob: -12.001635551452637
    5. 'N' → logprob: -12.126635551452637
    6. '_' → logprob: -12.251635551452637
    7. 'abcdef' → logprob: -13.501635551452637
    8. '```' → logprob: -13.626635551452637
    9. 'input' → logprob: -14.126635551452637
    10. ')' → logprob: -14.126635551452637

Token 148: '_occ' (ID: 180107)
  Prédit: '_occ'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_occ' → logprob: -0.00010998018842656165
    2. '_oc' → logprob: -9.125109672546387
    3. '_OCC' → logprob: -14.500109672546387
    4. 'occ' → logprob: -14.625109672546387
    5. '_' → logprob: -17.125110626220703
    6. 's' → logprob: -17.500110626220703
    7. '```' → logprob: -17.625110626220703
    8. 'Occurrences' → logprob: -18.375110626220703
    9. '

' → logprob: -19.125110626220703
    10. '\' → logprob: -19.500110626220703

Token 149: 'urrences' (ID: 63292)
  Prédit: 'urrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'urrences' → logprob: -0.0004031441640108824
    2. 'ur' → logprob: -8.00040340423584
    3. 'urr' → logprob: -10.12540340423584
    4. 'urrencies' → logprob: -10.75040340423584
    5. 'urances' → logprob: -13.25040340423584
    6. 'urrence' → logprob: -13.62540340423584
    7. 'URRENC' → logprob: -14.37540340423584
    8. 'curr' → logprob: -14.50040340423584
    9. '_' → logprob: -15.12540340423584
    10. 'ences' → logprob: -15.25040340423584

Token 150: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.034773167222738266
    2. '(S' → logprob: -3.659773111343384
    3. '(' → logprob: -4.784773349761963
    4. ')' → logprob: -9.909772872924805
    5. '(n' → logprob: -11.034772872924805
    6. ' (' → logprob: -12.534772872924805
    7. ')(' → logprob: -12.659772872924805
    8. '(
' → logprob: -12.909772872924805
    9. ' ' → logprob: -13.159772872924805
    10. '(s' → logprob: -13.659772872924805

Token 151: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004679560661315918
    2. ',S' → logprob: -5.3796796798706055
    3. ' ,' → logprob: -9.754679679870605
    4. ',
' → logprob: -14.879679679870605
    5. 'S' → logprob: -15.004679679870605
    6. '   ' → logprob: -15.754679679870605
    7. ',N' → logprob: -15.754679679870605
    8. '(' → logprob: -16.75467872619629
    9. '```' → logprob: -16.75467872619629
    10. '(S' → logprob: -17.00467872619629

Token 152: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.2254360169172287
    2. ' S' → logprob: -1.6004359722137451
    3. ')' → logprob: -11.225436210632324
    4. 's' → logprob: -12.350436210632324
    5. ' ' → logprob: -13.600436210632324
    6. ''S' → logprob: -13.600436210632324
    7. '   ' → logprob: -14.225436210632324
    8. '(S' → logprob: -14.850436210632324
    9. '"S' → logprob: -15.100436210632324
    10. ' )' → logprob: -15.225436210632324

Token 153: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005566088366322219
    2. '))' → logprob: -7.500556468963623
    3. '())' → logprob: -13.125556945800781
    4. ')
' → logprob: -13.750556945800781
    5. ')))' → logprob: -15.250556945800781
    6. ' )' → logprob: -16.12555694580078
    7. '()' → logprob: -16.25055694580078
    8. ')")' → logprob: -17.12555694580078
    9. ')`' → logprob: -17.50055694580078
    10. ')}' → logprob: -17.50055694580078

Token 154: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.0019567059352993965
    2. 'elif' → logprob: -6.251956939697266
    3. ' else' → logprob: -10.876956939697266
    4. 'print' → logprob: -12.251956939697266
    5. 'if' → logprob: -13.376956939697266
    6. '<|end|>' → logprob: -13.876956939697266
    7. '```' → logprob: -14.251956939697266
    8. '#else' → logprob: -15.001956939697266
    9. '   ' → logprob: -15.751956939697266
    10. '    
' → logprob: -15.876956939697266

Token 155: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5263502597808838
    2. ':
' → logprob: -0.9013502597808838
    3. '   ' → logprob: -5.776350021362305
    4. '
' → logprob: -9.276350021362305
    5. '    
' → logprob: -12.026350021362305
    6. ':

' → logprob: -12.151350021362305
    7. ' :
' → logprob: -12.526350021362305
    8. 'print' → logprob: -13.026350021362305
    9. '    ' → logprob: -13.026350021362305
    10. ':
' → logprob: -13.526350021362305

Token 156: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0640270933508873
    2. 'print' → logprob: -2.8140270709991455
    3. ' print' → logprob: -6.189027309417725
    4. '```' → logprob: -13.564026832580566
    5. '	print' → logprob: -13.689026832580566
    6. '       ' → logprob: -13.814026832580566
    7. '    ' → logprob: -13.939026832580566
    8. '    
' → logprob: -14.814026832580566
    9. '   ' → logprob: -15.189026832580566
    10. '(print' → logprob: -15.689026832580566

Token 157: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.3856492842023727e-06
    2. ' print' → logprob: -13.625000953674316
    3. '   ' → logprob: -15.875000953674316
    4. 'pr' → logprob: -20.375001907348633
    5. '```' → logprob: -21.250001907348633
    6. '  ' → logprob: -21.375001907348633
    7. ' ' → logprob: -21.500001907348633
    8. '	print' → logprob: -21.750001907348633
    9. '
' → logprob: -21.875001907348633
    10. 'printf' → logprob: -22.625001907348633

Token 158: '(output' (ID: 22485)
  Prédit: '(output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.12500286102295
    3. 'output' → logprob: -14.50000286102295
    4. '(outputs' → logprob: -20.000001907348633
    5. '()' → logprob: -20.125001907348633
    6. '(Output' → logprob: -20.250001907348633
    7. ' (' → logprob: -20.375001907348633
    8. '(input' → logprob: -20.375001907348633
    9. '((' → logprob: -20.500001907348633
    10. '(
' → logprob: -20.625001907348633

Token 159: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. '))' → logprob: -14.000000953674316
    3. '())' → logprob: -17.000001907348633
    4. ' )' → logprob: -17.125001907348633
    5. ')`' → logprob: -17.500001907348633
    6. ')
' → logprob: -17.625001907348633
    7. '`)' → logprob: -18.250001907348633
    8. '')' → logprob: -18.250001907348633
    9. ')}' → logprob: -18.250001907348633
    10. ')))' → logprob: -18.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 157
Tokens correctement prédits (1ère position, stricte): 72
Tokens correctement prédits (1ère position, avec adaptation): 76
Tokens correctement prédits (top 10): 135
Précision stricte (1ère position): 45.86%
Précision adaptée (1ère position): 48.41%
Précision (top 10): 85.99%
================================================================================
