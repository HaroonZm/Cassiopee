================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:35:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from itertools import accumulate, chain, tee

input()
s = input()

# Helper to accumulate growing tuples
def grow(iterable):
    return list(accumulate(iterable, lambda a, b: a + b))

# Generate all first, second, and third order subsequences (contiguous substrings)
g = (lambda seq: (
    set(chain.from_iterable(grow(seq[:i+1]) for i in range(len(seq)))),
    set(chain.from_iterable(
        grow(
            reduce(lambda acc, _: acc[1:], tee(seq, len(seq)))[i][:j+1]
        ) for i in range(len(seq)) for j in range(i+1, len(seq))
    )),
    set()
))

# Simulate the logic of building length-3 substrings ingeniously
def elegant(s):
    # All possible pairs where order is maintained
    pairs = set(chain.from_iterable(
        [(s[i], s[j]) for i in range(len(s)) for j in range(i+1, len(s))]
    ))
    # All possible triplets where order is maintained
    triplets = set(
        ''.join((s[i], s[j], s[k]))
        for i in range(len(s))
        for j in range(i+1, len(s))
        for k in range(j+1, len(s))
    )
    return len(triplets)

print(elegant(s))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.29569441080093384
    2. 'partial' → logprob: -1.545694351196289
    3. 'reduce' → logprob: -3.295694351196289
    4. 'l' → logprob: -5.920694351196289
    5. ' wraps' → logprob: -6.295694351196289
    6. 'cached' → logprob: -7.295694351196289
    7. 'cache' → logprob: -8.295694351196289
    8. 'cmp' → logprob: -8.795694351196289
    9. '`' → logprob: -9.795694351196289
    10. '```' → logprob: -9.795694351196289

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.018257521092891693
    2. '(lambda' → logprob: -4.5182576179504395
    3. '.' → logprob: -5.0182576179504395
    4. ',' → logprob: -8.893257141113281
    5. ' (' → logprob: -8.893257141113281
    6. '```' → logprob: -9.643257141113281
    7. '\' → logprob: -10.143257141113281
    8. '\(' → logprob: -10.268257141113281
    9. '(
' → logprob: -10.393257141113281
    10. 'def' → logprob: -11.268257141113281

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028644466772675514
    2. '\' → logprob: -4.153644561767578
    3. 'def' → logprob: -5.028644561767578
    4. '(
' → logprob: -6.028644561767578
    5. '(lambda' → logprob: -6.653644561767578
    6. ',' → logprob: -7.653644561767578
    7. '\n' → logprob: -7.778644561767578
    8. '```' → logprob: -7.903644561767578
    9. '\(' → logprob: -8.403644561767578
    10. '`' → logprob: -9.278644561767578

Token 6: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.43391409516334534
    2. ' math' → logprob: -1.308914065361023
    3. ' itertools' → logprob: -3.0589141845703125
    4. ' collections' → logprob: -3.8089141845703125
    5. 'operator' → logprob: -4.6839141845703125
    6. 'math' → logprob: -6.1839141845703125
    7. ' os' → logprob: -7.5589141845703125
    8. ' typing' → logprob: -7.9339141845703125
    9. ' ' → logprob: -8.183914184570312
    10. 'collections' → logprob: -8.308914184570312

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.01667022332549095
    2. 'import' → logprob: -4.141670227050781
    3. '.' → logprob: -7.891670227050781
    4. ' ' → logprob: -9.141670227050781
    5. ' .' → logprob: -9.516670227050781
    6. '.import' → logprob: -9.891670227050781
    7. '	import' → logprob: -11.391670227050781
    8. '_import' → logprob: -12.016670227050781
    9. ' itertools' → logprob: -12.641670227050781
    10. '<|end|>' → logprob: -13.391670227050781

Token 8: ' accumulate' (ID: 74226)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.8000409603118896
    2. 'group' → logprob: -2.0500409603118896
    3. 'acc' → logprob: -2.3000409603118896
    4. 'count' → logprob: -2.4250409603118896
    5. ' cycle' → logprob: -2.6750409603118896
    6. ' accumulate' → logprob: -3.1750409603118896
    7. 'cycle' → logprob: -3.3000409603118896
    8. ' chain' → logprob: -3.6750409603118896
    9. 'chain' → logprob: -4.175041198730469
    10. 'com' → logprob: -4.300041198730469

Token 9: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020584287121891975
    2. '(
' → logprob: -4.7705841064453125
    3. '.' → logprob: -5.3955841064453125
    4. ',' → logprob: -6.2705841064453125
    5. '\' → logprob: -6.2705841064453125
    6. 'def' → logprob: -6.6455841064453125
    7. '```' → logprob: -7.3955841064453125
    8. '\n' → logprob: -7.6455841064453125
    9. '`' → logprob: -8.395584106445312
    10. 'import' → logprob: -8.770584106445312

Token 10: ' chain' (ID: 13464)
  Prédit: 'group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'group' → logprob: -0.42702800035476685
    2. ' group' → logprob: -1.927027940750122
    3. 'chain' → logprob: -2.302027940750122
    4. ' chain' → logprob: -3.052027940750122
    5. 'product' → logprob: -4.177028179168701
    6. 'com' → logprob: -4.302028179168701
    7. 'count' → logprob: -4.427028179168701
    8. ' product' → logprob: -5.427028179168701
    9. 'tee' → logprob: -6.177028179168701
    10. 'per' → logprob: -6.677028179168701

Token 11: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13404116034507751
    2. '.' → logprob: -3.1340410709381104
    3. '(
' → logprob: -3.3840410709381104
    4. ',' → logprob: -3.7590410709381104
    5. '\' → logprob: -4.1340413093566895
    6. '\n' → logprob: -6.3840413093566895
    7. 'def' → logprob: -6.3840413093566895
    8. 'import' → logprob: -6.7590413093566895
    9. '```' → logprob: -6.7590413093566895
    10. '\(' → logprob: -7.1340413093566895

Token 12: ' tee' (ID: 44157)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.49332818388938904
    2. ' group' → logprob: -1.8683282136917114
    3. ' product' → logprob: -2.618328094482422
    4. 'compress' → logprob: -3.243328094482422
    5. ' compress' → logprob: -3.368328094482422
    6. 'group' → logprob: -3.368328094482422
    7. 'product' → logprob: -4.243328094482422
    8. ' cycle' → logprob: -4.368328094482422
    9. 'cycle' → logprob: -5.118328094482422
    10. '```' → logprob: -5.743328094482422

Token 13: '

' (ID: 279)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34533002972602844
    2. '\' → logprob: -2.720329999923706
    3. '(' → logprob: -3.220329999923706
    4. ',
' → logprob: -3.220329999923706
    5. 'def' → logprob: -3.345329999923706
    6. '\n' → logprob: -3.345329999923706
    7. 'import' → logprob: -4.470330238342285
    8. '(
' → logprob: -4.845330238342285
    9. '```' → logprob: -4.845330238342285
    10. '
' → logprob: -4.845330238342285

Token 14: 'input' (ID: 2586)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16467848420143127
    2. 'def' → logprob: -2.5396785736083984
    3. '[' → logprob: -3.9146785736083984
    4. '(
' → logprob: -4.164678573608398
    5. ',' → logprob: -4.414678573608398
    6. '```' → logprob: -4.414678573608398
    7. '.' → logprob: -5.539678573608398
    8. '\' → logprob: -6.414678573608398
    9. '`' → logprob: -6.664678573608398
    10. '\n' → logprob: -7.164678573608398

Token 15: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.038983918726444244
    2. '_' → logprob: -3.4139838218688965
    3. '_data' → logprob: -6.4139838218688965
    4. '('' → logprob: -7.5389838218688965
    5. 's' → logprob: -7.6639838218688965
    6. '(
' → logprob: -7.6639838218688965
    7. '=' → logprob: -7.6639838218688965
    8. ''' → logprob: -8.288984298706055
    9. '```' → logprob: -8.788984298706055
    10. ' =' → logprob: -9.038984298706055

Token 16: 's' (ID: 82)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.7746045589447021
    2. 'result' → logprob: -2.149604558944702
    3. ')' → logprob: -2.649604558944702
    4. 'tokens' → logprob: -2.774604558944702
    5. 'for' → logprob: -2.899604558944702
    6. '\n' → logprob: -3.274604558944702
    7. '```' → logprob: -3.399604558944702
    8. '.' → logprob: -3.524604558944702
    9. '[' → logprob: -4.024604797363281
    10. 'a' → logprob: -4.274604797363281

Token 17: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.09780320525169373
    2. '=' → logprob: -3.3478031158447266
    3. ' =' → logprob: -3.4728031158447266
    4. '[' → logprob: -4.597803115844727
    5. 'trip' → logprob: -5.097803115844727
    6. 't' → logprob: -5.597803115844727
    7. 'tr' → logprob: -6.597803115844727
    8. '.=' → logprob: -6.972803115844727
    9. 'p' → logprob: -7.347803115844727
    10. '.strip' → logprob: -7.722803115844727

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.9904472827911377
    2. ' input' → logprob: -1.2404472827911377
    3. ' list' → logprob: -1.6154472827911377
    4. 'list' → logprob: -2.6154472827911377
    5. ' chain' → logprob: -3.4904472827911377
    6. 'chain' → logprob: -4.115447044372559
    7. ' [' → logprob: -5.490447044372559
    8. ' map' → logprob: -5.740447044372559
    9. 'map' → logprob: -5.865447044372559
    10. '[' → logprob: -5.990447044372559

Token 19: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05566905811429024
    2. '()' → logprob: -2.930669069290161
    3. '```' → logprob: -8.680668830871582
    4. '('' → logprob: -8.805668830871582
    5. ''' → logprob: -9.180668830871582
    6. ')' → logprob: -9.430668830871582
    7. '"' → logprob: -9.930668830871582
    8. '(
' → logprob: -9.930668830871582
    9. '`' → logprob: -10.555668830871582
    10. 's' → logprob: -11.180668830871582

Token 20: '#' (ID: 2)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -1.4845823049545288
    2. 'words' → logprob: -1.6095823049545288
    3. 'freq' → logprob: -2.1095824241638184
    4. 'counts' → logprob: -2.2345824241638184
    5. 'lst' → logprob: -3.1095824241638184
    6. 'a' → logprob: -3.2345824241638184
    7. 'arr' → logprob: -3.2345824241638184
    8. 'd' → logprob: -3.2345824241638184
    9. 'pairs' → logprob: -3.3595824241638184
    10. 'count' → logprob: -4.109582424163818

Token 21: ' Helper' (ID: 31006)
  Prédit: 'chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chars' → logprob: -0.8490226864814758
    2. 'freq' → logprob: -2.099022626876831
    3. 'counts' → logprob: -2.474022626876831
    4. 'words' → logprob: -3.099022626876831
    5. 'v' → logprob: -3.474022626876831
    6. 'char' → logprob: -3.474022626876831
    7. 'lst' → logprob: -3.599022626876831
    8. 'counter' → logprob: -3.849022626876831
    9. 'pairs' → logprob: -3.849022626876831
    10. 'd' → logprob: -3.849022626876831

Token 22: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8537420034408569
    2. 'def' → logprob: -0.9787420034408569
    3. ' =' → logprob: -2.1037421226501465
    4. 's' → logprob: -3.6037421226501465
    5. ' ' → logprob: -3.7287421226501465
    6. ' def' → logprob: -4.6037421226501465
    7. '=' → logprob: -4.8537421226501465
    8. ' function' → logprob: -5.9787421226501465
    9. ')' → logprob: -6.1037421226501465
    10. ':' → logprob: -7.4787421226501465

Token 23: ' accumulate' (ID: 74226)
  Prédit: ' split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.5510439872741699
    2. ' tokenize' → logprob: -1.92604398727417
    3. ' convert' → logprob: -2.55104398727417
    4. 'split' → logprob: -2.67604398727417
    5. ' count' → logprob: -3.55104398727417
    6. ' generate' → logprob: -3.67604398727417
    7. 'count' → logprob: -4.42604398727417
    8. ' chain' → logprob: -4.55104398727417
    9. ' filter' → logprob: -4.55104398727417
    10. ' map' → logprob: -5.30104398727417

Token 24: ' growing' (ID: 10606)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7227364778518677
    2. '_' → logprob: -1.8477364778518677
    3. 'def' → logprob: -2.722736358642578
    4. '(' → logprob: -2.847736358642578
    5. '_counts' → logprob: -3.347736358642578
    6. 'counts' → logprob: -3.597736358642578
    7. ' =' → logprob: -3.972736358642578
    8. '_values' → logprob: -3.972736358642578
    9. '_s' → logprob: -4.097736358642578
    10. '_tokens' → logprob: -4.347736358642578

Token 25: ' tuples' (ID: 112464)
  Prédit: ' substr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.728725016117096
    2. 's' → logprob: -2.228724956512451
    3. '_sub' → logprob: -2.228724956512451
    4. ' sequences' → logprob: -2.603724956512451
    5. ' subse' → logprob: -2.853724956512451
    6. '_' → logprob: -3.228724956512451
    7. 'sub' → logprob: -3.603724956512451
    8. '_s' → logprob: -4.103724956512451
    9. 'strings' → logprob: -4.603724956512451
    10. 'set' → logprob: -5.478724956512451

Token 26: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.27724477648735046
    2. 's' → logprob: -2.277244806289673
    3. '(' → logprob: -3.402244806289673
    4. '_' → logprob: -3.527244806289673
    5. ' =' → logprob: -4.152244567871094
    6. ',' → logprob: -4.527244567871094
    7. ':' → logprob: -4.527244567871094
    8. '(
' → logprob: -4.652244567871094
    9. '_
' → logprob: -5.277244567871094
    10. '=' → logprob: -5.527244567871094

Token 27: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004681576509028673
    2. 'from' → logprob: -7.129681587219238
    3. '_' → logprob: -7.254681587219238
    4. ' def' → logprob: -7.629681587219238
    5. 's' → logprob: -7.754681587219238
    6. '(' → logprob: -7.879681587219238
    7. ')' → logprob: -8.004681587219238
    8. '(
' → logprob: -8.254681587219238
    9. '```' → logprob: -8.379681587219238
    10. '(lambda' → logprob: -8.879681587219238

Token 28: ' grow' (ID: 3839)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.26043909788131714
    2. ' accumulate' → logprob: -2.385439157485962
    3. ' growing' → logprob: -3.010439157485962
    4. ' acc' → logprob: -3.010439157485962
    5. '_acc' → logprob: -5.135438919067383
    6. ' helper' → logprob: -5.385438919067383
    7. ' accumulating' → logprob: -5.385438919067383
    8. 'g' → logprob: -5.510438919067383
    9. 'append' → logprob: -5.885438919067383
    10. 'pair' → logprob: -6.010438919067383

Token 29: '(iter' (ID: 61014)
  Prédit: '(tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(tuple' → logprob: -0.6033390164375305
    2. '(' → logprob: -1.7283389568328857
    3. '_tuple' → logprob: -2.7283389568328857
    4. 'ing' → logprob: -3.1033389568328857
    5. '():' → logprob: -3.6033389568328857
    6. '(s' → logprob: -3.7283389568328857
    7. '(t' → logprob: -4.103339195251465
    8. '_' → logprob: -4.103339195251465
    9. '(i' → logprob: -4.853339195251465
    10. '_by' → logprob: -5.103339195251465

Token 30: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.0020950648467987776
    2. 'ator' → logprob: -6.7520952224731445
    3. 'ables' → logprob: -7.2520952224731445
    4. 'tools' → logprob: -10.127095222473145
    5. '
' → logprob: -10.752095222473145
    6. '):
' → logprob: -11.002095222473145
    7. 'ators' → logprob: -11.002095222473145
    8. ')' → logprob: -11.002095222473145
    9. '```' → logprob: -11.002095222473145
    10. '=' → logprob: -11.252095222473145

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3618132174015045
    2. ',' → logprob: -1.2368131875991821
    3. '):
' → logprob: -4.361813068389893
    4. '):
' → logprob: -8.98681354522705
    5. ' ):' → logprob: -8.98681354522705
    6. ')' → logprob: -9.73681354522705
    7. '   ' → logprob: -9.98681354522705
    8. ':' → logprob: -10.11181354522705
    9. 's' → logprob: -10.36181354522705
    10. '=' → logprob: -10.61181354522705

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002370329457335174
    2. '    ' → logprob: -9.125237464904785
    3. ',' → logprob: -10.500237464904785
    4. '    
' → logprob: -11.125237464904785
    5. ' ' → logprob: -11.500237464904785
    6. ':' → logprob: -11.500237464904785
    7. '  ' → logprob: -11.625237464904785
    8. ' for' → logprob: -11.875237464904785
    9. '(' → logprob: -12.000237464904785
    10. ' accumulator' → logprob: -12.125237464904785

Token 33: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6079310178756714
    2. ' prev' → logprob: -1.9829310178756714
    3. ' acc' → logprob: -2.482931137084961
    4. 'prev' → logprob: -2.732931137084961
    5. ' it' → logprob: -2.857931137084961
    6. 'acc' → logprob: -3.732931137084961
    7. ' ' → logprob: -4.607931137084961
    8. 'it' → logprob: -4.732931137084961
    9. 'a' → logprob: -4.732931137084961
    10. ' last' → logprob: -4.982931137084961

Token 34: ' list' (ID: 1562)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.08353343605995178
    2. ' accumulate' → logprob: -2.958533525466919
    3. '(acc' → logprob: -3.708533525466919
    4. 'chain' → logprob: -6.58353328704834
    5. 'map' → logprob: -7.83353328704834
    6. 'zip' → logprob: -8.08353328704834
    7. 'list' → logprob: -8.33353328704834
    8. 'scan' → logprob: -8.45853328704834
    9. '((' → logprob: -8.95853328704834
    10. '	acc' → logprob: -8.95853328704834

Token 35: '(acc' (ID: 82668)
  Prédit: '(acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(acc' → logprob: -0.0009568398236297071
    2. '(chain' → logprob: -7.500957012176514
    3. '(' → logprob: -8.375956535339355
    4. '(ac' → logprob: -8.875956535339355
    5. '(t' → logprob: -10.875956535339355
    6. '(zip' → logprob: -11.875956535339355
    7. '(tuple' → logprob: -13.125956535339355
    8. 'acc' → logprob: -13.375956535339355
    9. '(iter' → logprob: -14.125956535339355
    10. '(scan' → logprob: -14.250956535339355

Token 36: 'umulate' (ID: 134636)
  Prédit: 'umulate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulate' → logprob: -0.0001398929744027555
    2. 'ulate' → logprob: -9.125140190124512
    3. 'um' → logprob: -10.500140190124512
    4. 'om' → logprob: -13.375140190124512
    5. 'ul' → logprob: -13.875140190124512
    6. 'umul' → logprob: -14.500140190124512
    7. 'uminate' → logprob: -16.125139236450195
    8. 'umu' → logprob: -16.625139236450195
    9. 'ulum' → logprob: -17.125139236450195
    10. 'umulative' → logprob: -17.375139236450195

Token 37: '(iter' (ID: 61014)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9665457606315613
    2. '(chain' → logprob: -0.9665457606315613
    3. '(iter' → logprob: -1.841545820236206
    4. '(lambda' → logprob: -2.591545820236206
    5. '(
' → logprob: -5.466545581817627
    6. '(ch' → logprob: -7.466545581817627
    7. '((' → logprob: -8.591546058654785
    8. '(iterator' → logprob: -8.716546058654785
    9. '(tuple' → logprob: -8.966546058654785
    10. '(s' → logprob: -9.091546058654785

Token 38: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.04994615912437439
    2. 'table' → logprob: -3.0499460697174072
    3. 'ble' → logprob: -6.674946308135986
    4. '(' → logprob: -10.924945831298828
    5. 'nable' → logprob: -11.049945831298828
    6. '[' → logprob: -11.424945831298828
    7. 'tables' → logprob: -11.549945831298828
    8. '   ' → logprob: -11.924945831298828
    9. 'utable' → logprob: -12.049945831298828
    10. '```' → logprob: -12.174945831298828

Token 39: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036168331280350685
    2. ' ,' → logprob: -8.375361442565918
    3. '(lambda' → logprob: -9.875361442565918
    4. 'lambda' → logprob: -10.750361442565918
    5. '=lambda' → logprob: -10.750361442565918
    6. '   ' → logprob: -11.750361442565918
    7. '(),' → logprob: -12.375361442565918
    8. ',
' → logprob: -12.500361442565918
    9. ' lambda' → logprob: -12.500361442565918
    10. ')' → logprob: -12.875361442565918

Token 40: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.027471447363495827
    2. 'lambda' → logprob: -3.6524715423583984
    3. '(lambda' → logprob: -6.777471542358398
    4. '=lambda' → logprob: -10.652471542358398
    5. ' tuple' → logprob: -13.152471542358398
    6. '_lambda' → logprob: -13.277471542358398
    7. ')' → logprob: -13.902471542358398
    8. ' lamb' → logprob: -14.027471542358398
    9. '   ' → logprob: -15.214971542358398
    10. ' ' → logprob: -15.214971542358398

Token 41: ' a' (ID: 261)
  Prédit: ' acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.5887203812599182
    2. ' x' → logprob: -1.7137203216552734
    3. ' a' → logprob: -2.0887203216552734
    4. 'a' → logprob: -2.9637203216552734
    5. 'x' → logprob: -3.0887203216552734
    6. 'acc' → logprob: -3.2137203216552734
    7. ' prev' → logprob: -6.588720321655273
    8. 'prev' → logprob: -8.213720321655273
    9. ' t' → logprob: -8.338720321655273
    10. ' s' → logprob: -8.338720321655273

Token 42: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010490043787285686
    2. ' ,' → logprob: -7.501049041748047
    3. ',a' → logprob: -8.251049041748047
    4. 's' → logprob: -9.501049041748047
    5. ',x' → logprob: -9.751049041748047
    6. 'lambda' → logprob: -11.001049041748047
    7. ',s' → logprob: -11.376049041748047
    8. 'a' → logprob: -11.501049041748047
    9. ',n' → logprob: -12.251049041748047
    10. ',b' → logprob: -12.251049041748047

Token 43: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.350376695394516
    2. ' b' → logprob: -1.2253767251968384
    3. 'x' → logprob: -6.975376605987549
    4. ' x' → logprob: -7.725376605987549
    5. 'e' → logprob: -9.100377082824707
    6. 'v' → logprob: -9.350377082824707
    7. ' t' → logprob: -9.475377082824707
    8. 't' → logprob: -9.600377082824707
    9. ' ' → logprob: -9.725377082824707
    10. ' e' → logprob: -10.100377082824707

Token 44: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003322473494336009
    2. ' :' → logprob: -8.12533187866211
    3. ',' → logprob: -10.50033187866211
    4. ':a' → logprob: -13.37533187866211
    5. 's' → logprob: -13.62533187866211
    6. 'a' → logprob: -13.75033187866211
    7. ':(' → logprob: -13.75033187866211
    8. '=' → logprob: -14.12533187866211
    9. ':add' → logprob: -14.62533187866211
    10. '_:' → logprob: -14.87533187866211

Token 45: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.662349283695221
    2. 'a' → logprob: -0.787349283695221
    3. ' (*' → logprob: -4.537349224090576
    4. '(*' → logprob: -5.037349224090576
    5. ' (' → logprob: -5.162349224090576
    6. '(a' → logprob: -6.162349224090576
    7. '(' → logprob: -6.162349224090576
    8. ' tuple' → logprob: -7.037349224090576
    9. ' ' → logprob: -8.162349700927734
    10. 'tuple' → logprob: -8.162349700927734

Token 46: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.043087564408779144
    2. ' +' → logprob: -3.1680874824523926
    3. '+b' → logprob: -10.54308795928955
    4. '+(' → logprob: -10.66808795928955
    5. ',' → logprob: -11.66808795928955
    6. '+[' → logprob: -12.04308795928955
    7. '=' → logprob: -12.66808795928955
    8. '+
' → logprob: -12.79308795928955
    9. '*' → logprob: -12.91808795928955
    10. '+)' → logprob: -12.91808795928955

Token 47: ' b' (ID: 287)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.5932496786117554
    2. ' (' → logprob: -1.2182496786117554
    3. '(' → logprob: -2.343249797821045
    4. 'b' → logprob: -3.093249797821045
    5. ' b' → logprob: -5.093249797821045
    6. '[' → logprob: -6.468249797821045
    7. '[b' → logprob: -7.218249797821045
    8. ' ' → logprob: -7.468249797821045
    9. ',b' → logprob: -8.218249320983887
    10. '   ' → logprob: -8.593249320983887

Token 48: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.007011832669377327
    2. ',' → logprob: -5.382011890411377
    3. ')' → logprob: -6.507011890411377
    4. ' ))' → logprob: -7.882011890411377
    5. '),' → logprob: -8.132011413574219
    6. '+' → logprob: -10.132011413574219
    7. ' if' → logprob: -10.132011413574219
    8. ')))' → logprob: -10.382011413574219
    9. '()))' → logprob: -10.382011413574219
    10. ' +' → logprob: -10.882011413574219

Token 49: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4832313656806946
    2. 's' → logprob: -1.7332313060760498
    3. '(s' → logprob: -2.35823130607605
    4. '(
' → logprob: -2.98323130607605
    5. ')' → logprob: -3.85823130607605
    6. '[' → logprob: -4.483231544494629
    7. '
' → logprob: -5.108231544494629
    8. ',' → logprob: -5.858231544494629
    9. 'def' → logprob: -5.983231544494629
    10. '<|end|>' → logprob: -6.108231544494629

Token 50: ' Generate' (ID: 33886)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3087053298950195
    2. 'result' → logprob: -2.9337053298950195
    3. ' for' → logprob: -3.3087053298950195
    4. 's' → logprob: -3.3087053298950195
    5. 'def' → logprob: -3.4337053298950195
    6. 'for' → logprob: -3.4337053298950195
    7. 'prefix' → logprob: -3.6837053298950195
    8. ' result' → logprob: -3.7462053298950195
    9. ' parts' → logprob: -3.9337053298950195
    10. 'pairs' → logprob: -3.9962053298950195

Token 51: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.14860688149929047
    2. 'all' → logprob: -3.648606777191162
    3. ' tuples' → logprob: -3.773606777191162
    4. ' chain' → logprob: -4.398606777191162
    5. ' prefixes' → logprob: -4.398606777191162
    6. ' pairs' → logprob: -4.898606777191162
    7. ' growing' → logprob: -5.023606777191162
    8. ' substr' → logprob: -5.148606777191162
    9. ' chains' → logprob: -5.273606777191162
    10. ' the' → logprob: -5.398606777191162

Token 52: ' first' (ID: 1577)
  Prédit: ' substr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' substr' → logprob: -0.6625891327857971
    2. ' prefixes' → logprob: -1.5375890731811523
    3. 'sub' → logprob: -2.1625890731811523
    4. 's' → logprob: -3.0375890731811523
    5. ' sub' → logprob: -3.9125890731811523
    6. ' suffix' → logprob: -4.037589073181152
    7. 'suffix' → logprob: -4.287589073181152
    8. ' growing' → logprob: -4.662589073181152
    9. 'prefix' → logprob: -5.412589073181152
    10. ' possible' → logprob: -5.537589073181152

Token 53: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4304244816303253
    2. 'and' → logprob: -2.305424451828003
    3. ',' → logprob: -3.180424451828003
    4. ' ' → logprob: -3.305424451828003
    5. 's' → logprob: -3.930424451828003
    6. ' prefixes' → logprob: -4.305424690246582
    7. '_' → logprob: -4.555424690246582
    8. ' word' → logprob: -4.805424690246582
    9. '_and' → logprob: -4.805424690246582
    10. '-level' → logprob: -4.805424690246582

Token 54: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.7089298367500305
    2. 'second' → logprob: -0.9589298367500305
    3. ' last' → logprob: -2.9589297771453857
    4. 'last' → logprob: -3.8339297771453857
    5. 's' → logprob: -4.333930015563965
    6. 'suffix' → logprob: -4.833930015563965
    7. ' suffix' → logprob: -4.958930015563965
    8. ' growing' → logprob: -5.833930015563965
    9. ' contiguous' → logprob: -5.958930015563965
    10. ' ' → logprob: -6.208930015563965

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9906672239303589
    2. 's' → logprob: -1.4906672239303589
    3. ' and' → logprob: -1.6156672239303589
    4. 'and' → logprob: -2.6156673431396484
    5. 'elements' → logprob: -3.7406673431396484
    6. 'parts' → logprob: -4.365667343139648
    7. ' halves' → logprob: -4.365667343139648
    8. ' parts' → logprob: -4.490667343139648
    9. ' elements' → logprob: -4.490667343139648
    10. '<|end|>' → logprob: -4.615667343139648

Token 56: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.2595815062522888
    2. 'third' → logprob: -1.5095815658569336
    3. ' and' → logprob: -5.134581565856934
    4. ' third' → logprob: -7.509581565856934
    5. '...' → logprob: -7.634581565856934
    6. '#' → logprob: -8.009581565856934
    7. 'last' → logprob: -8.884581565856934
    8. ',' → logprob: -9.634581565856934
    9. 's' → logprob: -10.509581565856934
    10. 'second' → logprob: -11.134581565856934

Token 57: ' third' (ID: 6914)
  Prédit: 'third'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'third' → logprob: -0.4787225127220154
    2. ' third' → logprob: -0.9787225127220154
    3. 'last' → logprob: -6.35372257232666
    4. ' last' → logprob: -6.60372257232666
    5. 's' → logprob: -7.97872257232666
    6. ' all' → logprob: -8.97872257232666
    7. ' thirds' → logprob: -8.97872257232666
    8. ' ' → logprob: -9.22872257232666
    9. 'all' → logprob: -9.47872257232666
    10. 'rest' → logprob: -9.60372257232666

Token 58: ' order' (ID: 2569)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8368692994117737
    2. 'elements' → logprob: -2.336869239807129
    3. ' elements' → logprob: -2.711869239807129
    4. 'level' → logprob: -3.086869239807129
    5. '_elements' → logprob: -3.086869239807129
    6. '-level' → logprob: -3.211869239807129
    7. '_' → logprob: -3.336869239807129
    8. 'element' → logprob: -3.836869239807129
    9. ' level' → logprob: -4.211869239807129
    10. 'order' → logprob: -4.211869239807129

Token 59: ' subse' (ID: 19874)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -1.8397682905197144
    2. 's' → logprob: -2.214768409729004
    3. ' substr' → logprob: -2.214768409729004
    4. ' combinations' → logprob: -2.464768409729004
    5. ' prefixes' → logprob: -2.589768409729004
    6. 'chains' → logprob: -2.839768409729004
    7. 'powers' → logprob: -3.214768409729004
    8. ' powers' → logprob: -3.464768409729004
    9. 'sub' → logprob: -3.464768409729004
    10. ' derivatives' → logprob: -3.589768409729004

Token 60: 'quences' (ID: 16559)
  Prédit: 'quences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'quences' → logprob: -0.0008151084766723216
    2. 'quence' → logprob: -7.125814914703369
    3. 'qu' → logprob: -12.375815391540527
    4. 'q' → logprob: -13.000815391540527
    5. 'qs' → logprob: -13.500815391540527
    6. 'quential' → logprob: -13.625815391540527
    7. ' sequences' → logprob: -14.250815391540527
    8. '#' → logprob: -15.375815391540527
    9. 'quent' → logprob: -15.625815391540527
    10. 'ts' → logprob: -16.12581443786621

Token 61: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1593933403491974
    2. ' =' → logprob: -3.159393310546875
    3. 'def' → logprob: -3.534393310546875
    4. '(' → logprob: -3.909393310546875
    5. '_' → logprob: -4.034393310546875
    6. ' s' → logprob: -4.784393310546875
    7. ' of' → logprob: -5.284393310546875
    8. '(s' → logprob: -5.784393310546875
    9. '_s' → logprob: -6.034393310546875
    10. '#' → logprob: -6.284393310546875

Token 62: 'cont' (ID: 1377)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.6596810817718506
    2. ' s' → logprob: -1.9096810817718506
    3. ' of' → logprob: -2.0346810817718506
    4. ')' → logprob: -2.2846810817718506
    5. ' in' → logprob: -2.4096810817718506
    6. '#' → logprob: -2.7846810817718506
    7. 'def' → logprob: -3.1596810817718506
    8. ' def' → logprob: -3.4096810817718506
    9. ' sequences' → logprob: -3.7846810817718506
    10. 'of' → logprob: -4.03468132019043

Token 63: 'iguous' (ID: 51394)
  Prédit: 'inue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inue' → logprob: -0.29991254210472107
    2. 'in' → logprob: -1.5499125719070435
    3. 'inu' → logprob: -3.674912452697754
    4. '#' → logprob: -5.174912452697754
    5. '...' → logprob: -5.299912452697754
    6. ')' → logprob: -6.174912452697754
    7. '<|end|>' → logprob: -6.299912452697754
    8. 'def' → logprob: -6.674912452697754
    9. 'iguous' → logprob: -6.924912452697754
    10. '```' → logprob: -7.174912452697754

Token 64: ' substr' (ID: 29234)
  Prédit: ' ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ones' → logprob: -1.159246563911438
    2. ')' → logprob: -1.909246563911438
    3. ' sequences' → logprob: -1.909246563911438
    4. ' and' → logprob: -2.7842464447021484
    5. ' substr' → logprob: -2.7842464447021484
    6. ' subse' → logprob: -2.7842464447021484
    7. ' )' → logprob: -3.2842464447021484
    8. ' of' → logprob: -3.5342464447021484
    9. 's' → logprob: -3.5342464447021484
    10. ',' → logprob: -3.7842464447021484

Token 65: 'ings' (ID: 963)
  Prédit: 'ings'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ings' → logprob: -0.0074413432739675045
    2. 's' → logprob: -5.632441520690918
    3. 'ing' → logprob: -5.632441520690918
    4. '```' → logprob: -9.882441520690918
    5. 'ed' → logprob: -10.507441520690918
    6. 'ects' → logprob: -10.632441520690918
    7. '   ' → logprob: -10.882441520690918
    8. 'ingss' → logprob: -11.132441520690918
    9. ' ' → logprob: -11.382441520690918
    10. 'ences' → logprob: -11.757441520690918

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07314889878034592
    2. ' of' → logprob: -3.1981489658355713
    3. 's' → logprob: -4.323148727416992
    4. 'def' → logprob: -5.573148727416992
    5. '):' → logprob: -5.573148727416992
    6. ',' → logprob: -5.823148727416992
    7. '#' → logprob: -6.573148727416992
    8. ' )' → logprob: -6.698148727416992
    9. 'of' → logprob: -6.948148727416992
    10. ' for' → logprob: -7.573148727416992

Token 67: 'g' (ID: 70)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.5358214378356934
    2. 'def' → logprob: -1.6608214378356934
    3. 'sub' → logprob: -2.1608214378356934
    4. '
' → logprob: -2.9108214378356934
    5. 's' → logprob: -3.6608214378356934
    6. 'f' → logprob: -4.910821437835693
    7. 'all' → logprob: -5.285821437835693
    8. 'subs' → logprob: -5.410821437835693
    9. '#' → logprob: -5.660821437835693
    10. 'n' → logprob: -5.785821437835693

Token 68: ' =' (ID: 314)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.0219133198261261
    2. 'enerate' → logprob: -4.896913528442383
    3. ' =' → logprob: -5.271913528442383
    4. 'rows' → logprob: -5.896913528442383
    5. '=' → logprob: -6.646913528442383
    6. '=row' → logprob: -7.396913528442383
    7. 'rowing' → logprob: -7.396913528442383
    8. 'r' → logprob: -7.521913528442383
    9. '_row' → logprob: -8.021913528442383
    10. 'en' → logprob: -8.271913528442383

Token 69: ' (' (ID: 350)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -1.086933970451355
    2. ' chain' → logprob: -1.211933970451355
    3. 'chain' → logprob: -1.336933970451355
    4. 'grow' → logprob: -2.7119340896606445
    5. ' grow' → logprob: -4.2119340896606445
    6. '(lambda' → logprob: -4.7119340896606445
    7. '(g' → logprob: -5.9619340896606445
    8. 'list' → logprob: -6.0869340896606445
    9. ' list' → logprob: -6.2119340896606445
    10. ' (' → logprob: -6.7119340896606445

Token 70: 'lambda' (ID: 35280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20997290313243866
    2. 'grow' → logprob: -1.834972858428955
    3. '(s' → logprob: -4.459972858428955
    4. ' s' → logprob: -4.959972858428955
    5. 'chain' → logprob: -5.209972858428955
    6. ' grow' → logprob: -6.334972858428955
    7. 'tuple' → logprob: -6.834972858428955
    8. '(chain' → logprob: -7.709972858428955
    9. 'g' → logprob: -7.834972858428955
    10. '(' → logprob: -8.209973335266113

Token 71: ' seq' (ID: 26775)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.29913076758384705
    2. 's' → logprob: -2.42413067817688
    3. ' x' → logprob: -2.42413067817688
    4. ' n' → logprob: -3.79913067817688
    5. 'x' → logprob: -4.174130916595459
    6. ' lst' → logprob: -4.799130916595459
    7. ' seq' → logprob: -5.049130916595459
    8. ':' → logprob: -5.549130916595459
    9. 'n' → logprob: -5.674130916595459
    10. ' t' → logprob: -5.799130916595459

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029290661215782166
    2. ',' → logprob: -3.7792906761169434
    3. ' :' → logprob: -5.279290676116943
    4. ',i' → logprob: -8.404290199279785
    5. 's' → logprob: -8.779290199279785
    6. '=' → logprob: -8.904290199279785
    7. 'n' → logprob: -8.904290199279785
    8. ',n' → logprob: -9.529290199279785
    9. 'seq' → logprob: -10.779290199279785
    10. 'g' → logprob: -11.029290199279785

Token 73: ' (
' (ID: 4112)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.5592869520187378
    2. ' chain' → logprob: -1.8092869520187378
    3. '(chain' → logprob: -2.1842870712280273
    4. 'list' → logprob: -2.4342870712280273
    5. 'grow' → logprob: -3.9342870712280273
    6. '[' → logprob: -4.184287071228027
    7. ' list' → logprob: -4.559287071228027
    8. '[g' → logprob: -5.809287071228027
    9. '[i' → logprob: -5.934287071228027
    10. ' grow' → logprob: -6.059287071228027

Token 74: '   ' (ID: 271)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grow' → logprob: -1.1413812637329102
    2. 'list' → logprob: -1.8913812637329102
    3. 'chain' → logprob: -2.01638126373291
    4. '[' → logprob: -2.26638126373291
    5. '(chain' → logprob: -2.64138126373291
    6. '[s' → logprob: -3.01638126373291
    7. '[g' → logprob: -3.14138126373291
    8. 'seq' → logprob: -4.14138126373291
    9. '[i' → logprob: -4.39138126373291
    10. 'g' → logprob: -4.64138126373291

Token 75: ' set' (ID: 920)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grow' → logprob: -0.9280449748039246
    2. 'list' → logprob: -1.4280450344085693
    3. 'chain' → logprob: -1.8030450344085693
    4. '[' → logprob: -3.3030450344085693
    5. '(chain' → logprob: -3.3030450344085693
    6. '[g' → logprob: -3.4280450344085693
    7. 'seq' → logprob: -4.17804479598999
    8. '[s' → logprob: -4.42804479598999
    9. 'g' → logprob: -4.42804479598999
    10. 'tuple' → logprob: -4.42804479598999

Token 76: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.6585701704025269
    2. '(g' → logprob: -0.9085701704025269
    3. '(seq' → logprob: -2.7835702896118164
    4. '(s' → logprob: -4.658570289611816
    5. '(' → logprob: -5.783570289611816
    6. '(tuple' → logprob: -6.408570289611816
    7. '()' → logprob: -7.533570289611816
    8. '([' → logprob: -7.533570289611816
    9. '(map' → logprob: -7.658570289611816
    10. '(acc' → logprob: -7.908570289611816

Token 77: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0725460797548294
    2. '(*' → logprob: -3.4475460052490234
    3. '(' → logprob: -3.8225460052490234
    4. '(g' → logprob: -4.447546005249023
    5. '(*(' → logprob: -6.072546005249023
    6. '(
' → logprob: -6.197546005249023
    7. 'from' → logprob: -9.447546005249023
    8. '(from' → logprob: -9.697546005249023
    9. '(s' → logprob: -11.322546005249023
    10. '(

' → logprob: -11.447546005249023

Token 78: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.20156565308570862
    2. 'iter' → logprob: -1.7015656232833862
    3. 'iterator' → logprob: -9.201565742492676
    4. 'it' → logprob: -11.576565742492676
    5. '(iter' → logprob: -11.701565742492676
    6. '	iter' → logprob: -12.076565742492676
    7. ' iterable' → logprob: -12.201565742492676
    8. 'Iterable' → logprob: -12.326565742492676
    9. '_iterator' → logprob: -12.326565742492676
    10. '_' → logprob: -12.701565742492676

Token 79: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -1.9743012671824545e-05
    2. 'ble' → logprob: -11.125020027160645
    3. 'chain' → logprob: -12.875020027160645
    4. 'tools' → logprob: -14.625020027160645
    5. '(chain' → logprob: -15.250020027160645
    6. '(' → logprob: -15.375020027160645
    7. 'ables' → logprob: -15.625020027160645
    8. '   ' → logprob: -16.000019073486328
    9. 'nable' → logprob: -16.125019073486328
    10. 'g' → logprob: -16.125019073486328

Token 80: '(g' (ID: 7791)
  Prédit: '(g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.048152465373277664
    2. '(map' → logprob: -3.423152446746826
    3. '([' → logprob: -4.798152446746826
    4. '(' → logprob: -5.423152446746826
    5. '(
' → logprob: -7.048152446746826
    6. '((' → logprob: -7.923152446746826
    7. '(chain' → logprob: -9.173152923583984
    8. 'map' → logprob: -9.298152923583984
    9. '([
' → logprob: -9.798152923583984
    10. 'grow' → logprob: -9.798152923583984

Token 81: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.12019697576761246
    2. '(row' → logprob: -2.370197057723999
    3. '(g' → logprob: -4.62019681930542
    4. '(seq' → logprob: -5.49519681930542
    5. '(s' → logprob: -5.74519681930542
    6. '(' → logprob: -7.24519681930542
    7. '(range' → logprob: -7.99519681930542
    8. ')' → logprob: -8.120197296142578
    9. '(iter' → logprob: -8.620197296142578
    10. '(acc' → logprob: -9.120197296142578

Token 82: '(seq' (ID: 78669)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.7089720964431763
    2. '((' → logprob: -1.4589720964431763
    3. '(seq' → logprob: -1.9589720964431763
    4. '(' → logprob: -2.8339719772338867
    5. '(s' → logprob: -3.0839719772338867
    6. '(chain' → logprob: -4.208971977233887
    7. '(([' → logprob: -5.708971977233887
    8. '(map' → logprob: -6.333971977233887
    9. '([(' → logprob: -6.583971977233887
    10. '(sequence' → logprob: -6.833971977233887

Token 83: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.9236682057380676
    2. ')))' → logprob: -2.048668146133423
    3. ')),' → logprob: -2.173668146133423
    4. '))),' → logprob: -2.548668146133423
    5. '(i' → logprob: -3.173668146133423
    6. '[i' → logprob: -3.173668146133423
    7. '))' → logprob: -3.673668146133423
    8. '(' → logprob: -3.673668146133423
    9. '[' → logprob: -3.673668146133423
    10. ')),
' → logprob: -3.798668146133423

Token 84: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006189010571688414
    2. 'n' → logprob: -5.381188869476318
    3. '1' → logprob: -6.756188869476318
    4. ']))' → logprob: -9.256189346313477
    5. ' i' → logprob: -9.381189346313477
    6. 'k' → logprob: -9.881189346313477
    7. '   ' → logprob: -10.381189346313477
    8. '(i' → logprob: -10.506189346313477
    9. 'len' → logprob: -11.131189346313477
    10. 'x' → logprob: -11.381189346313477

Token 85: '+' (ID: 10)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.09638096392154694
    2. '+' → logprob: -2.5963809490203857
    3. ']' → logprob: -4.471381187438965
    4. ']))' → logprob: -5.846381187438965
    5. ' +' → logprob: -6.471381187438965
    6. '+j' → logprob: -8.221381187438965
    7. '1' → logprob: -8.346381187438965
    8. 'j' → logprob: -8.346381187438965
    9. ')' → logprob: -8.846381187438965
    10. '])))' → logprob: -9.471381187438965

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023059594968799502
    2. ' ' → logprob: -8.50023078918457
    3. ']))' → logprob: -11.75023078918457
    4. '2' → logprob: -12.12523078918457
    5. '])' → logprob: -12.25023078918457
    6. '+' → logprob: -13.00023078918457
    7. '   ' → logprob: -13.12523078918457
    8. ']))
' → logprob: -14.00023078918457
    9. ']' → logprob: -14.12523078918457
    10. '```' → logprob: -14.50023078918457

Token 87: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.012935142032802105
    2. ')' → logprob: -4.637935161590576
    3. ']' → logprob: -6.512935161590576
    4. ']))' → logprob: -6.762935161590576
    5. '))' → logprob: -8.387934684753418
    6. ' ])' → logprob: -9.137934684753418
    7. ' ' → logprob: -10.387934684753418
    8. '])))' → logprob: -10.762934684753418
    9. ')])' → logprob: -10.887934684753418
    10. ' )' → logprob: -11.012934684753418

Token 88: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32211896777153015
    2. 'for' → logprob: -1.3221189975738525
    3. '   ' → logprob: -5.197118759155273
    4. '    ' → logprob: -6.947118759155273
    5. ')' → logprob: -7.322118759155273
    6. ' ' → logprob: -7.697118759155273
    7. '       ' → logprob: -8.697118759155273
    8. '           ' → logprob: -8.697118759155273
    9. '        ' → logprob: -8.822118759155273
    10. '          ' → logprob: -9.072118759155273

Token 89: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.17987430095672607
    2. 'i' → logprob: -1.804874300956726
    3. '	i' → logprob: -9.304874420166016
    4. ' ' → logprob: -11.304874420166016
    5. '<|end|>' → logprob: -11.804874420166016
    6. '<|end|>' → logprob: -12.804874420166016
    7. ')' → logprob: -12.929874420166016
    8. '`' → logprob: -13.492374420166016
    9. ')i' → logprob: -13.679874420166016
    10. '  ' → logprob: -13.742374420166016

Token 90: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005738823674619198
    2. '<|end|>' → logprob: -8.125574111938477
    3. 'in' → logprob: -8.500574111938477
    4. ' range' → logprob: -10.250574111938477
    5. ' ' → logprob: -10.875574111938477
    6. 'range' → logprob: -11.750574111938477
    7. '<|end|>' → logprob: -12.000574111938477
    8. ' xrange' → logprob: -12.875574111938477
    9. 's' → logprob: -13.625574111938477
    10. ')' → logprob: -14.250574111938477

Token 91: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021066665649414
    2. 'range' → logprob: -2.350210666656494
    3. '	range' → logprob: -12.850210189819336
    4. ' xrange' → logprob: -14.475210189819336
    5. ' ' → logprob: -14.725210189819336
    6. '(range' → logprob: -14.975210189819336
    7. '   ' → logprob: -16.975210189819336
    8. '  ' → logprob: -16.975210189819336
    9. '.range' → logprob: -17.725210189819336
    10. 'chain' → logprob: -18.100210189819336

Token 92: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -6.051066520740278e-05
    2. '(' → logprob: -10.375060081481934
    3. ' len' → logprob: -10.750060081481934
    4. 'len' → logprob: -12.250060081481934
    5. '	len' → logprob: -13.500060081481934
    6. '   ' → logprob: -13.875060081481934
    7. '(n' → logprob: -14.625060081481934
    8. ' (' → logprob: -16.37506103515625
    9. ',len' → logprob: -17.25006103515625
    10. '=len' → logprob: -17.75006103515625

Token 93: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.013150935992598534
    2. '(s' → logprob: -4.638151168823242
    3. '(' → logprob: -5.763151168823242
    4. '(sequence' → logprob: -8.888151168823242
    5. 'seq' → logprob: -10.138151168823242
    6. '(g' → logprob: -10.763151168823242
    7. ' seq' → logprob: -11.388151168823242
    8. 's' → logprob: -11.513151168823242
    9. ' (' → logprob: -12.138151168823242
    10. '(
' → logprob: -12.513151168823242

Token 94: '))' (ID: 915)
  Prédit: '))))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))))' → logprob: -0.41868501901626587
    2. ')))' → logprob: -1.543684959411621
    3. '))' → logprob: -2.168684959411621
    4. ')))))
' → logprob: -5.543684959411621
    5. ')' → logprob: -5.668684959411621
    6. ' ' → logprob: -6.543684959411621
    7. ' ))' → logprob: -6.668684959411621
    8. ')))),' → logprob: -6.668684959411621
    9. '))))
' → logprob: -7.293684959411621
    10. '   ' → logprob: -7.668684959411621

Token 95: ')),
' (ID: 13846)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.659942090511322
    2. ')))' → logprob: -0.784942090511322
    3. ')' → logprob: -4.409942150115967
    4. '))))' → logprob: -5.034942150115967
    5. '))
' → logprob: -5.784942150115967
    6. ' ' → logprob: -6.284942150115967
    7. '   ' → logprob: -6.534942150115967
    8. ')))
' → logprob: -7.159942150115967
    9. ')),' → logprob: -7.909942150115967
    10. ' ))' → logprob: -8.909941673278809

Token 96: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7508659958839417
    2. ' set' → logprob: -1.0008659362792969
    3. 'set' → logprob: -1.8758659362792969
    4. ' chain' → logprob: -5.750865936279297
    5. 'chain' → logprob: -5.875865936279297
    6. ' ' → logprob: -7.625865936279297
    7. '    ' → logprob: -8.875865936279297
    8. '  ' → logprob: -9.000865936279297
    9. ')' → logprob: -9.375865936279297
    10. '(set' → logprob: -9.625865936279297

Token 97: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.703233003616333
    2. 'set' (adapté à ' set') → logprob: -0.828233003616333
    3. '   ' → logprob: -2.703233003616333
    4. ' ' → logprob: -8.203232765197754
    5. 'chain' → logprob: -8.328232765197754
    6. ' chain' → logprob: -8.578232765197754
    7. '  ' → logprob: -8.828232765197754
    8. '    ' → logprob: -9.078232765197754
    9. '{' → logprob: -9.828232765197754
    10. ' {' → logprob: -10.078232765197754

Token 98: '(chain' (ID: 124348)
  Prédit: '(chain'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.014653606340289116
    2. '(g' → logprob: -4.38965368270874
    3. '(' → logprob: -6.63965368270874
    4. '(acc' → logprob: -7.38965368270874
    5. '(ch' → logprob: -9.514653205871582
    6. '((' → logprob: -10.764653205871582
    7. '(c' → logprob: -11.139653205871582
    8. '(chunk' → logprob: -11.139653205871582
    9. '([' → logprob: -11.139653205871582
    10. '(s' → logprob: -11.639653205871582

Token 99: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.0002003218833124265
    2. '.' → logprob: -8.875200271606445
    3. 'from' → logprob: -10.125200271606445
    4. ' .' → logprob: -11.625200271606445
    5. '.chain' → logprob: -13.125200271606445
    6. '.for' → logprob: -13.625200271606445
    7. '_from' → logprob: -13.750200271606445
    8. '.(' → logprob: -13.875200271606445
    9. '.f' → logprob: -14.000200271606445
    10. '(' → logprob: -14.125200271606445

Token 100: '_iter' (ID: 27043)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.4666021168231964
    2. '_iter' → logprob: -1.466602087020874
    3. 'from' → logprob: -1.966602087020874
    4. 'flatten' → logprob: -6.466602325439453
    5. 'chain' → logprob: -7.966602325439453
    6. 'im' → logprob: -9.091602325439453
    7. 'flat' → logprob: -10.091602325439453
    8. '(iter' → logprob: -10.341602325439453
    9. '_from' → logprob: -10.716602325439453
    10. '```' → logprob: -10.841602325439453

Token 101: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.306533545255661
    2. 'itable' → logprob: -2.9315335750579834
    3. 'from' → logprob: -2.9315335750579834
    4. 'umer' → logprob: -3.1815335750579834
    5. 'utable' → logprob: -3.4315335750579834
    6. 'ate' → logprob: -3.9315335750579834
    7. 'ible' → logprob: -4.306533336639404
    8. 'ite' → logprob: -4.806533336639404
    9. 'er' → logprob: -4.931533336639404
    10. 'ute' → logprob: -5.181533336639404

Token 102: '(
' (ID: 1607)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.000866083602886647
    2. 'grow' → logprob: -8.625865936279297
    3. '(acc' → logprob: -8.625865936279297
    4. '(' → logprob: -8.875865936279297
    5. '(chain' → logprob: -8.875865936279297
    6. '(map' → logprob: -9.625865936279297
    7. '([' → logprob: -10.125865936279297
    8. 'g' → logprob: -10.375865936279297
    9. '((' → logprob: -10.750865936279297
    10. 'acc' → logprob: -10.750865936279297

Token 103: '       ' (ID: 309)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' → logprob: -0.05888265743851662
    2. '   ' → logprob: -3.308882713317871
    3. ' grow' → logprob: -5.183882713317871
    4. 'acc' → logprob: -5.683882713317871
    5. '(g' → logprob: -5.808882713317871
    6. '  ' → logprob: -6.683882713317871
    7. ' ' → logprob: -6.808882713317871
    8. 'chain' → logprob: -6.808882713317871
    9. '       ' → logprob: -6.933882713317871
    10. 'g' → logprob: -7.058882713317871

Token 104: ' grow' (ID: 3839)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' (adapté à ' grow') → logprob: -0.018580064177513123
    2. '   ' → logprob: -5.393579959869385
    3. 'acc' → logprob: -5.393579959869385
    4. ' grow' → logprob: -5.518579959869385
    5. 'chain' → logprob: -7.143579959869385
    6. '(g' → logprob: -7.518579959869385
    7. ' ' → logprob: -7.518579959869385
    8. '  ' → logprob: -7.768579959869385
    9. '       ' → logprob: -8.018580436706543
    10. 'g' → logprob: -8.018580436706543

Token 105: '(
' (ID: 1607)
  Prédit: '(seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.3236548602581024
    2. '(s' → logprob: -1.4486548900604248
    3. '(lambda' → logprob: -3.948654890060425
    4. '(' → logprob: -4.948654651641846
    5. '(chain' → logprob: -5.323654651641846
    6. '((' → logprob: -5.448654651641846
    7. '([' → logprob: -6.073654651641846
    8. 's' → logprob: -6.698654651641846
    9. '(iter' → logprob: -7.948654651641846
    10. ' (' → logprob: -8.198655128479004

Token 106: '           ' (ID: 352)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.28413817286491394
    2. 's' → logprob: -2.1591382026672363
    3. '(seq' → logprob: -2.9091382026672363
    4. 'list' → logprob: -3.7841382026672363
    5. 'chain' → logprob: -4.284138202667236
    6. '           ' → logprob: -4.534138202667236
    7. '       ' → logprob: -5.159138202667236
    8. '   ' → logprob: -5.409138202667236
    9. '[s' → logprob: -5.659138202667236
    10. '[' → logprob: -5.909138202667236

Token 107: ' reduce' (ID: 10389)
  Prédit: 'seq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seq' → logprob: -0.07202731817960739
    2. 'list' → logprob: -3.3220272064208984
    3. 's' → logprob: -4.447027206420898
    4. 'chain' → logprob: -4.947027206420898
    5. '   ' → logprob: -6.072027206420898
    6. 'tuple' → logprob: -6.322027206420898
    7. '[' → logprob: -6.572027206420898
    8. 'tee' → logprob: -6.572027206420898
    9. '(seq' → logprob: -6.572027206420898
    10. 'acc' → logprob: -6.697027206420898

Token 108: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.01484072208404541
    2. '(' → logprob: -5.014840602874756
    3. '(operator' → logprob: -5.264840602874756
    4. '(
' → logprob: -6.264840602874756
    5. '               ' → logprob: -7.889840602874756
    6. 'lambda' → logprob: -8.764841079711914
    7. '(chain' → logprob: -8.889841079711914
    8. '           ' → logprob: -8.889841079711914
    9. '   ' → logprob: -10.139841079711914
    10. ' (' → logprob: -10.389841079711914

Token 109: ' acc' (ID: 1259)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.7328478097915649
    2. 'lambda' → logprob: -0.9828478097915649
    3. '(lambda' → logprob: -2.1078476905822754
    4. 'a' → logprob: -5.732847690582275
    5. ' a' → logprob: -5.857847690582275
    6. 's' → logprob: -6.107847690582275
    7. ' ' → logprob: -6.232847690582275
    8. '               ' → logprob: -6.482847690582275
    9. 'operator' → logprob: -6.607847690582275
    10. '   ' → logprob: -6.607847690582275

Token 110: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8646144866943359
    2. '(lambda' → logprob: -1.114614486694336
    3. ' lambda' → logprob: -1.489614486694336
    4. '           ' → logprob: -4.989614486694336
    5. '               ' → logprob: -4.989614486694336
    6. '            ' → logprob: -5.989614486694336
    7. '=lambda' → logprob: -6.489614486694336
    8. ',' → logprob: -6.739614486694336
    9. ' (' → logprob: -7.114614486694336
    10. '                   ' → logprob: -7.239614486694336

Token 111: ' _:' (ID: 133568)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.8334627747535706
    2. ' acc' → logprob: -1.4584627151489258
    3. 'lambda' → logprob: -1.7084627151489258
    4. 'acc' → logprob: -2.708462715148926
    5. ' chain' → logprob: -3.958462715148926
    6. 'a' → logprob: -4.708462715148926
    7. '   ' → logprob: -4.833462715148926
    8. ' a' → logprob: -4.833462715148926
    9. ' operator' → logprob: -4.958462715148926
    10. ' ' → logprob: -5.333462715148926

Token 112: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.13877180218696594
    2. ' acc' → logprob: -2.1387717723846436
    3. 'chain' → logprob: -5.263772010803223
    4. '(acc' → logprob: -6.138772010803223
    5. ' chain' → logprob: -6.888772010803223
    6. '[' → logprob: -7.388772010803223
    7. 'a' → logprob: -7.638772010803223
    8. 'operator' → logprob: -7.888772010803223
    9. 'lambda' → logprob: -8.013772010803223
    10. ' [' → logprob: -8.638772010803223

Token 113: '[' (ID: 58)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.17905426025390625
    2. ' +' → logprob: -1.9290542602539062
    3. '+b' → logprob: -4.054054260253906
    4. '+[' → logprob: -7.554054260253906
    5. '+s' → logprob: -8.679054260253906
    6. '+a' → logprob: -8.929054260253906
    7. '[' → logprob: -9.179054260253906
    8. '+c' → logprob: -9.304054260253906
    9. '+x' → logprob: -9.429054260253906
    10. '[:-' → logprob: -9.679054260253906

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07158175855875015
    2. '-' → logprob: -3.3215818405151367
    3. '0' → logprob: -3.6965818405151367
    4. ':-' → logprob: -5.696581840515137
    5. '+' → logprob: -6.071581840515137
    6. ':' → logprob: -6.696581840515137
    7. '::-' → logprob: -7.196581840515137
    8. ':]' → logprob: -8.946581840515137
    9. '
' → logprob: -9.071581840515137
    10. '::' → logprob: -10.696581840515137

Token 115: ':],' (ID: 117284)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5402334928512573
    2. ']+' → logprob: -1.4152334928512573
    3. '],' → logprob: -2.415233612060547
    4. ':],' → logprob: -2.665233612060547
    5. ':]' → logprob: -5.290233612060547
    6. ':' → logprob: -5.790233612060547
    7. '-' → logprob: -6.040233612060547
    8. '][' → logprob: -6.165233612060547
    9. '1' → logprob: -7.165233612060547
    10. '0' → logprob: -7.790233612060547

Token 116: ' tee' (ID: 44157)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.6131575107574463
    2. ' range' → logprob: -1.1131575107574463
    3. 's' → logprob: -3.4881575107574463
    4. 'lambda' → logprob: -3.7381575107574463
    5. '   ' → logprob: -4.113157272338867
    6. ' lambda' → logprob: -4.988157272338867
    7. ' s' → logprob: -4.988157272338867
    8. '[' → logprob: -5.113157272338867
    9. 'chain' → logprob: -5.113157272338867
    10. ' [' → logprob: -5.613157272338867

Token 117: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.013935242779552937
    2. '(s' → logprob: -4.888935089111328
    3. '(lambda' → logprob: -5.638935089111328
    4. 'seq' → logprob: -6.513935089111328
    5. '(iter' → logprob: -8.138935089111328
    6. '(' → logprob: -8.388935089111328
    7. '(chain' → logprob: -8.888935089111328
    8. 's' → logprob: -9.013935089111328
    9. '   ' → logprob: -9.638935089111328
    10. ')' → logprob: -9.763935089111328

Token 118: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5627232193946838
    2. '(i' → logprob: -1.562723159790039
    3. '(' → logprob: -2.437723159790039
    4. '(seq' → logprob: -3.687723159790039
    5. '       ' → logprob: -4.062723159790039
    6. '(len' → logprob: -4.187723159790039
    7. '(_,' → logprob: -4.187723159790039
    8. '           ' → logprob: -4.687723159790039
    9. '   ' → logprob: -4.812723159790039
    10. '(n' → logprob: -4.937723159790039

Token 119: ' len' (ID: 4631)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5279176235198975
    2. '3' → logprob: -0.9029176235198975
    3. ' ' → logprob: -5.902917861938477
    4. '1' → logprob: -6.527917861938477
    5. 'len' → logprob: -8.277917861938477
    6. '0' → logprob: -9.527917861938477
    7. 'i' → logprob: -10.027917861938477
    8. '4' → logprob: -10.152917861938477
    9. '   ' → logprob: -10.402917861938477
    10. 's' → logprob: -10.902917861938477

Token 120: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.01120426133275032
    2. '(s' → logprob: -4.511204242706299
    3. '(g' → logprob: -10.386204719543457
    4. '(i' → logprob: -10.636204719543457
    5. '(' → logprob: -10.636204719543457
    6. 'seq' → logprob: -11.136204719543457
    7. '(sequence' → logprob: -11.511204719543457
    8. '(se' → logprob: -11.636204719543457
    9. 's' → logprob: -11.636204719543457
    10. '(sub' → logprob: -12.011204719543457

Token 121: '))' (ID: 915)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9978985786437988
    2. ')' → logprob: -1.9978985786437988
    3. ')))' → logprob: -2.247898578643799
    4. ')),' → logprob: -2.372898578643799
    5. ')[' → logprob: -2.497898578643799
    6. '-' → logprob: -2.997898578643799
    7. '))' → logprob: -3.622898578643799
    8. ')-' → logprob: -3.747898578643799
    9. ' -' → logprob: -3.872898578643799
    10. ' ' → logprob: -4.247898578643799

Token 122: ')[' (ID: 13637)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1787142753601074
    2. ')' → logprob: -1.5537142753601074
    3. '),' → logprob: -1.5537142753601074
    4. ')))' → logprob: -2.6787142753601074
    5. ')[' → logprob: -2.8037142753601074
    6. '))' → logprob: -3.0537142753601074
    7. '[' → logprob: -3.6787142753601074
    8. ')),' → logprob: -4.303714275360107
    9. ').__' → logprob: -4.303714275360107
    10. '0' → logprob: -4.928714275360107

Token 123: 'i' (ID: 72)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04461434483528137
    2. '0' → logprob: -3.419614315032959
    3. 'i' → logprob: -5.419614315032959
    4. ':' → logprob: -5.794614315032959
    5. ' ' → logprob: -6.919614315032959
    6. '2' → logprob: -7.794614315032959
    7. '   ' → logprob: -8.169614791870117
    8. ' :' → logprob: -8.544614791870117
    9. ' i' → logprob: -8.919614791870117
    10. '
' → logprob: -9.169614791870117

Token 124: '][:' (ID: 63357)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6510874629020691
    2. '][' → logprob: -1.7760875225067139
    3. '])' → logprob: -1.9010875225067139
    4. ':' → logprob: -3.401087522506714
    5. ':i' → logprob: -3.526087522506714
    6. ']))' → logprob: -3.776087522506714
    7. '+' → logprob: -3.901087522506714
    8. ')' → logprob: -4.901087284088135
    9. '],' → logprob: -5.026087284088135
    10. '][:' → logprob: -5.151087284088135

Token 125: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5202074646949768
    2. 'i' → logprob: -1.145207405090332
    3. 'len' → logprob: -3.520207405090332
    4. '1' → logprob: -4.270207405090332
    5. ']' → logprob: -5.020207405090332
    6. '])' → logprob: -5.395207405090332
    7. 'k' → logprob: -5.520207405090332
    8. 'None' → logprob: -5.645207405090332
    9. '-' → logprob: -5.770207405090332
    10. '(' → logprob: -6.020207405090332

Token 126: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04506877809762955
    2. ']' → logprob: -3.2950687408447266
    3. ' +' → logprob: -5.545068740844727
    4. '])' → logprob: -6.295068740844727
    5. ']
' → logprob: -7.795068740844727
    6. '1' → logprob: -7.920068740844727
    7. '   ' → logprob: -9.045068740844727
    8. '+i' → logprob: -9.295068740844727
    9. ']))' → logprob: -9.420068740844727
    10. '])
' → logprob: -10.545068740844727

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013512482109945267
    2. 'i' → logprob: -9.75013542175293
    3. ' ' → logprob: -10.12513542175293
    4. '+' → logprob: -11.62513542175293
    5. '   ' → logprob: -12.50013542175293
    6. 'j' → logprob: -12.50013542175293
    7. '
' → logprob: -12.75013542175293
    8. '-' → logprob: -12.75013542175293
    9. 'None' → logprob: -12.87513542175293
    10. ']' → logprob: -13.37513542175293

Token 128: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0336376316845417
    2. '])' → logprob: -3.908637523651123
    3. ']))' → logprob: -5.283637523651123
    4. ')' → logprob: -5.783637523651123
    5. ']
' → logprob: -7.033637523651123
    6. '   ' → logprob: -7.033637523651123
    7. '       ' → logprob: -7.158637523651123
    8. 'for' → logprob: -7.158637523651123
    9. '           ' → logprob: -7.783637523651123
    10. ' for' → logprob: -8.658638000488281

Token 129: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2385537326335907
    2. ')' → logprob: -2.238553762435913
    3. 'for' → logprob: -2.488553762435913
    4. '   ' → logprob: -4.613553524017334
    5. '           ' → logprob: -5.363553524017334
    6. '       ' → logprob: -5.738553524017334
    7. '))' → logprob: -6.738553524017334
    8. ')))' → logprob: -6.988553524017334
    9. '               ' → logprob: -7.488553524017334
    10. ' ' → logprob: -7.988553524017334

Token 130: ' )' (ID: 1546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23844820261001587
    2. ' for' → logprob: -1.613448143005371
    3. '       ' → logprob: -5.363448143005371
    4. ')' (adapté à ' )') → logprob: -5.863448143005371
    5. '           ' → logprob: -5.863448143005371
    6. '   ' → logprob: -6.988448143005371
    7. '        ' → logprob: -8.113448143005371
    8. '               ' → logprob: -8.238448143005371
    9. 'i' → logprob: -8.488448143005371
    10. ']' → logprob: -8.863448143005371

Token 131: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6590853929519653
    2. 'for' → logprob: -1.0340853929519653
    3. '       ' → logprob: -2.659085273742676
    4. '   ' → logprob: -3.159085273742676
    5. '    ' → logprob: -5.409085273742676
    6. ')' → logprob: -5.659085273742676
    7. '           ' → logprob: -6.284085273742676
    8. '        ' → logprob: -6.284085273742676
    9. '	for' → logprob: -7.784085273742676
    10. ' ' → logprob: -7.909085273742676

Token 132: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.7290515303611755
    2. 'i' → logprob: -0.9790515303611755
    3. ' j' → logprob: -2.4790515899658203
    4. 'j' → logprob: -2.8540515899658203
    5. ' ' → logprob: -8.60405158996582
    6. ' _' → logprob: -9.47905158996582
    7. '_' → logprob: -9.60405158996582
    8. '   ' → logprob: -10.10405158996582
    9. ' range' → logprob: -10.10405158996582
    10. '_i' → logprob: -10.54155158996582

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0032985552679747343
    2. 'in' → logprob: -5.753298759460449
    3. ',' → logprob: -10.00329875946045
    4. 'range' → logprob: -10.00329875946045
    5. ')' → logprob: -11.75329875946045
    6. ' ' → logprob: -11.87829875946045
    7. ' range' → logprob: -12.25329875946045
    8. '   ' → logprob: -13.12829875946045
    9. '  ' → logprob: -13.62829875946045
    10. '    ' → logprob: -13.87829875946045

Token 134: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.054891426116228104
    2. ' range' → logprob: -2.929891347885132
    3. '(range' → logprob: -13.054891586303711
    4. 'chain' → logprob: -13.304891586303711
    5. ' ' → logprob: -13.429891586303711
    6. '   ' → logprob: -13.929891586303711
    7. '	range' → logprob: -14.179891586303711
    8. '  ' → logprob: -14.679891586303711
    9. '```' → logprob: -14.929891586303711
    10. ')' → logprob: -15.304891586303711

Token 135: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.005325427744537592
    2. 'len' → logprob: -5.5053253173828125
    3. ' len' → logprob: -6.7553253173828125
    4. '(' → logprob: -9.755325317382812
    5. ' (' → logprob: -11.505325317382812
    6. '   ' → logprob: -12.630325317382812
    7. '	len' → logprob: -12.630325317382812
    8. '<len' → logprob: -13.630325317382812
    9. '(i' → logprob: -13.880325317382812
    10. ',len' → logprob: -13.880325317382812

Token 136: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.01025603897869587
    2. '(s' → logprob: -5.010255813598633
    3. '(g' → logprob: -6.010255813598633
    4. 'seq' → logprob: -7.260255813598633
    5. 's' → logprob: -8.760255813598633
    6. '(' → logprob: -9.385255813598633
    7. '(chain' → logprob: -10.260255813598633
    8. 'g' → logprob: -10.760255813598633
    9. '(se' → logprob: -10.885255813598633
    10. '(sequence' → logprob: -11.635255813598633

Token 137: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.48730671405792236
    2. ')' → logprob: -0.9873067140579224
    3. '   ' → logprob: -5.362306594848633
    4. ')))' → logprob: -5.737306594848633
    5. '       ' → logprob: -5.987306594848633
    6. '))
' → logprob: -6.862306594848633
    7. ')
' → logprob: -8.237306594848633
    8. ' ' → logprob: -8.487306594848633
    9. '))))' → logprob: -8.737306594848633
    10. '+' → logprob: -8.987306594848633

Token 138: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5194017887115479
    2. 'for' → logprob: -1.0194017887115479
    3. '       ' → logprob: -3.269401788711548
    4. '   ' → logprob: -5.644401550292969
    5. ')' → logprob: -6.394401550292969
    6. '))' → logprob: -7.644401550292969
    7. '        ' → logprob: -8.769401550292969
    8. '    ' → logprob: -8.894401550292969
    9. '           ' → logprob: -8.894401550292969
    10. ')))' → logprob: -10.394401550292969

Token 139: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.10024841129779816
    2. ' j' → logprob: -2.350248336791992
    3. '   ' → logprob: -10.850248336791992
    4. ' ' → logprob: -11.975248336791992
    5. 'range' → logprob: -12.350248336791992
    6. '	j' → logprob: -12.600248336791992
    7. ' range' → logprob: -12.850248336791992
    8. '    ' → logprob: -13.600248336791992
    9. '  ' → logprob: -14.100248336791992
    10. ' ' → logprob: -14.225248336791992

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0012607101816684008
    2. 'in' → logprob: -6.751260757446289
    3. 'range' → logprob: -9.501260757446289
    4. '<|end|>' → logprob: -12.251260757446289
    5. ' range' → logprob: -12.501260757446289
    6. '(range' → logprob: -13.001260757446289
    7. ')' → logprob: -13.251260757446289
    8. ' ' → logprob: -13.376260757446289
    9. '   ' → logprob: -15.376260757446289
    10. 's' → logprob: -15.501260757446289

Token 141: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.126937136054039
    2. ' range' → logprob: -2.1269371509552
    3. '(range' → logprob: -12.376936912536621
    4. '   ' → logprob: -13.126936912536621
    5. ' ' → logprob: -13.251936912536621
    6. '  ' → logprob: -15.126936912536621
    7. '	range' → logprob: -15.376936912536621
    8. 'i' → logprob: -15.376936912536621
    9. 'chain' → logprob: -16.126937866210938
    10. '
' → logprob: -16.376937866210938

Token 142: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12710511684417725
    2. '(len' → logprob: -2.127105236053467
    3. '(' → logprob: -8.752104759216309
    4. 'len' → logprob: -11.377104759216309
    5. 'i' → logprob: -12.377104759216309
    6. '((' → logprob: -13.877104759216309
    7. '(j' → logprob: -14.252104759216309
    8. '(n' → logprob: -15.002104759216309
    9. '(l' → logprob: -15.252104759216309
    10. ' (' → logprob: -15.377104759216309

Token 143: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3089964985847473
    2. ',' → logprob: -1.9339964389801025
    3. ',len' → logprob: -2.1839964389801025
    4. ' +' → logprob: -5.058996677398682
    5. '(len' → logprob: -6.683996677398682
    6. 'len' → logprob: -7.308996677398682
    7. '))' → logprob: -9.308996200561523
    8. ')))' → logprob: -9.933996200561523
    9. ' ,' → logprob: -10.058996200561523
    10. ',length' → logprob: -10.183996200561523

Token 144: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.038304947316646576
    2. 'len' → logprob: -3.2883050441741943
    3. ' ' → logprob: -9.538305282592773
    4. 'i' → logprob: -10.163305282592773
    5. ' len' → logprob: -10.413305282592773
    6. 's' → logprob: -10.538305282592773
    7. 'j' → logprob: -10.663305282592773
    8. '(len' → logprob: -10.788305282592773
    9. '0' → logprob: -11.163305282592773
    10. '+' → logprob: -11.913305282592773

Token 145: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.9499787092208862
    2. ')))' → logprob: -0.9499787092208862
    3. ')' → logprob: -1.8249787092208862
    4. '))))' → logprob: -3.699978828430176
    5. '+' → logprob: -4.199978828430176
    6. '):' → logprob: -4.699978828430176
    7. ')):' → logprob: -4.699978828430176
    8. ')));' → logprob: -6.074978828430176
    9. ')):
' → logprob: -6.824978828430176
    10. '   ' → logprob: -7.699978828430176

Token 146: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0009373087668791413
    2. ' len' → logprob: -7.000937461853027
    3. '(len' → logprob: -11.125937461853027
    4. '   ' → logprob: -12.250937461853027
    5. '           ' → logprob: -12.750937461853027
    6. '       ' → logprob: -14.250937461853027
    7. 'j' → logprob: -14.625937461853027
    8. '	len' → logprob: -14.625937461853027
    9. '          ' → logprob: -15.500937461853027
    10. 'n' → logprob: -15.500937461853027

Token 147: '(seq' (ID: 78669)
  Prédit: '(seq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(seq' → logprob: -0.00015300170343834907
    2. '(s' → logprob: -8.875152587890625
    3. 'seq' → logprob: -11.750152587890625
    4. '(' → logprob: -12.625152587890625
    5. '(sequence' → logprob: -14.000152587890625
    6. 's' → logprob: -14.875152587890625
    7. '(
' → logprob: -15.125152587890625
    8. '(se' → logprob: -15.375152587890625
    9. '(sub' → logprob: -17.375152587890625
    10. '(seg' → logprob: -17.750152587890625

Token 148: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.4802190363407135
    2. ')))' → logprob: -2.1052191257476807
    3. ')' → logprob: -2.4802191257476807
    4. ')+' → logprob: -2.6052191257476807
    5. '))))' → logprob: -2.6052191257476807
    6. ')))
' → logprob: -5.355218887329102
    7. '+' → logprob: -5.480218887329102
    8. '))))
' → logprob: -5.480218887329102
    9. ')))))
' → logprob: -5.730218887329102
    10. '))
' → logprob: -6.355218887329102

Token 149: '   ' (ID: 271)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.14887192845344543
    2. '))' → logprob: -2.648871898651123
    3. '))))' → logprob: -3.273871898651123
    4. '   ' → logprob: -3.773871898651123
    5. ')' → logprob: -5.273871898651123
    6. '       ' → logprob: -7.023871898651123
    7. ')))
' → logprob: -8.023872375488281
    8. ')
' → logprob: -9.398872375488281
    9. '           ' → logprob: -9.898872375488281
    10. ')))),' → logprob: -9.898872375488281

Token 150: ' )),
' (ID: 72666)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.13045527040958405
    2. '))))' → logprob: -2.755455255508423
    3. '))' → logprob: -3.005455255508423
    4. ')' → logprob: -5.255455493927002
    5. '   ' → logprob: -6.255455493927002
    6. '))),' → logprob: -7.255455493927002
    7. ')))),' → logprob: -7.630455493927002
    8. ')),' → logprob: -8.130455017089844
    9. ')))
' → logprob: -8.505455017089844
    10. ')));' → logprob: -9.255455017089844

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0683765709400177
    2. '))' → logprob: -3.1933765411376953
    3. 'set' → logprob: -4.443376541137695
    4. ')' → logprob: -4.568376541137695
    5. ')))' → logprob: -7.443376541137695
    6. ')),' → logprob: -7.943376541137695
    7. 's' → logprob: -8.068376541137695
    8. ' set' → logprob: -8.568376541137695
    9. 'g' → logprob: -8.568376541137695
    10. '...' → logprob: -8.568376541137695

Token 152: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' (adapté à ' set') → logprob: -0.013508414849638939
    2. ' set' → logprob: -4.388508319854736
    3. '   ' → logprob: -7.763508319854736
    4. ')' → logprob: -7.888508319854736
    5. '{' → logprob: -10.013508796691895
    6. '))' → logprob: -10.138508796691895
    7. '(set' → logprob: -11.138508796691895
    8. ' ' → logprob: -11.388508796691895
    9. ')set' → logprob: -11.388508796691895
    10. 's' → logprob: -11.388508796691895

Token 153: '()
' (ID: 1234)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.025108112022280693
    2. '(' → logprob: -4.025108337402344
    3. '(
' → logprob: -5.275108337402344
    4. '(g' → logprob: -6.400108337402344
    5. '()' → logprob: -10.275108337402344
    6. '(acc' → logprob: -10.650108337402344
    7. '(ch' → logprob: -10.900108337402344
    8. '([' → logprob: -11.275108337402344
    9. '(

' → logprob: -11.900108337402344
    10. 'chain' → logprob: -12.025108337402344

Token 154: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3499319553375244
    2. '(chain' → logprob: -1.3499319553375244
    3. '(' → logprob: -1.4749319553375244
    4. '(g' → logprob: -2.5999319553375244
    5. '(
' → logprob: -2.7249319553375244
    6. '))' → logprob: -2.9749319553375244
    7. ')))' → logprob: -3.5999319553375244
    8. '(seq' → logprob: -4.099931716918945
    9. '(s' → logprob: -4.474931716918945
    10. '(lambda' → logprob: -6.349931716918945

Token 155: '#' (ID: 2)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38371822237968445
    2. '(s' → logprob: -1.7587182521820068
    3. ')' → logprob: -2.133718252182007
    4. 's' → logprob: -4.258718013763428
    5. '(
' → logprob: -5.258718013763428
    6. '<|end|>' → logprob: -5.383718013763428
    7. '(seq' → logprob: -6.008718013763428
    8. '#' → logprob: -8.008718490600586
    9. '()' → logprob: -8.258718490600586
    10. '(chain' → logprob: -9.133718490600586

Token 156: ' Sim' (ID: 7973)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1119840145111084
    2. '<|end|>' → logprob: -1.4869840145111084
    3. 's' → logprob: -2.2369840145111084
    4. '(s' → logprob: -2.4869840145111084
    5. 'g' → logprob: -2.6119840145111084
    6. '(' → logprob: -3.2369840145111084
    7. 'for' → logprob: -3.3619840145111084
    8. 'def' → logprob: -3.7369840145111084
    9. '#' → logprob: -4.7369842529296875
    10. '(
' → logprob: -4.8619842529296875

Token 157: 'ulate' (ID: 10111)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2936590909957886
    2. ')' → logprob: -2.293659210205078
    3. 'ple' → logprob: -3.543659210205078
    4. 's' → logprob: -3.668659210205078
    5. '(s' → logprob: -3.668659210205078
    6. 'def' → logprob: -4.168659210205078
    7. ')#' → logprob: -4.543659210205078
    8. 'ply' → logprob: -4.793659210205078
    9. '(' → logprob: -5.418659210205078
    10. 'split' → logprob: -5.543659210205078

Token 158: ' the' (ID: 290)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7126485705375671
    2. '<|end|>' → logprob: -0.7126485705375671
    3. '(' → logprob: -4.712648391723633
    4. '(s' → logprob: -5.587648391723633
    5. 's' → logprob: -6.212648391723633
    6. '<|end|>' → logprob: -6.712648391723633
    7. '(
' → logprob: -7.087648391723633
    8. '#' → logprob: -7.212648391723633
    9. ' s' → logprob: -8.087648391723633
    10. '...' → logprob: -8.712648391723633

Token 159: ' logic' (ID: 18485)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.087756872177124
    2. 's' → logprob: -1.837756872177124
    3. ')' → logprob: -1.962756872177124
    4. 'lambda' → logprob: -1.962756872177124
    5. ' lambda' → logprob: -3.462756872177124
    6. '#' → logprob: -3.462756872177124
    7. 'def' → logprob: -3.712756872177124
    8. 'next' → logprob: -4.462757110595703
    9. 'for' → logprob: -4.462757110595703
    10. '(lambda' → logprob: -4.462757110595703

Token 160: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14629633724689484
    2. '<|end|>' → logprob: -2.646296262741089
    3. '(s' → logprob: -3.646296262741089
    4. 's' → logprob: -3.896296262741089
    5. '))' → logprob: -4.896296501159668
    6. ')))' → logprob: -5.646296501159668
    7. '(' → logprob: -5.771296501159668
    8. '(
' → logprob: -6.896296501159668
    9. '   ' → logprob: -7.646296501159668
    10. ')s' → logprob: -7.896296501159668

Token 161: ' building' (ID: 6282)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.18289905786514282
    2. 's' → logprob: -2.557898998260498
    3. 'lambda' → logprob: -3.182898998260498
    4. 'len' → logprob: -4.432898998260498
    5. '(lambda' → logprob: -4.557898998260498
    6. '#' → logprob: -5.557898998260498
    7. 'def' → logprob: -5.682898998260498
    8. ')' → logprob: -5.807898998260498
    9. '(s' → logprob: -6.182898998260498
    10. 'range' → logprob: -6.182898998260498

Token 162: ' length' (ID: 5517)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 163: '-' (ID: 12)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9950762391090393
    2. '(' → logprob: -1.7450761795043945
    3. '1' → logprob: -2.2450761795043945
    4. '3' → logprob: -2.8700761795043945
    5. '(g' → logprob: -3.1200761795043945
    6. 'sub' → logprob: -3.3700761795043945
    7. '=' → logprob: -3.7450761795043945
    8. 'g' → logprob: -3.8700761795043945
    9. '(s' → logprob: -3.9950761795043945
    10. ' ' → logprob: -3.9950761795043945

Token 164: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.10470311343669891
    2. '1' → logprob: -3.604703187942505
    3. '2' → logprob: -3.604703187942505
    4. 's' → logprob: -3.729703187942505
    5. '4' → logprob: -4.729702949523926
    6. 'g' → logprob: -5.479702949523926
    7. ' ' → logprob: -6.354702949523926
    8. 'three' → logprob: -6.854702949523926
    9. 'sub' → logprob: -6.979702949523926
    10. 'def' → logprob: -7.354702949523926

Token 165: ' substr' (ID: 29234)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.6258044838905334
    2. ' subse' → logprob: -1.0008044242858887
    3. ' substr' → logprob: -3.6258044242858887
    4. 's' → logprob: -3.8758044242858887
    5. 'se' → logprob: -4.500804424285889
    6. ' sequences' → logprob: -4.750804424285889
    7. ')' → logprob: -4.875804424285889
    8. '(' → logprob: -4.875804424285889
    9. '<|end|>' → logprob: -6.125804424285889
    10. 'substr' → logprob: -6.250804424285889

Token 166: 'ings' (ID: 963)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6347306966781616
    2. ')' → logprob: -1.6347306966781616
    3. '(s' → logprob: -2.384730815887451
    4. '(lambda' → logprob: -3.259730815887451
    5. '<|end|>' → logprob: -3.384730815887451
    6. '(seq' → logprob: -3.634730815887451
    7. 'g' → logprob: -4.009730815887451
    8. 'seq' → logprob: -4.509730815887451
    9. '(' → logprob: -4.759730815887451
    10. '[' → logprob: -4.759730815887451

Token 167: ' ingen' (ID: 30430)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.909919261932373
    2. '(
' → logprob: -1.659919261932373
    3. '(s' → logprob: -2.534919261932373
    4. '(' → logprob: -2.534919261932373
    5. 's' → logprob: -3.034919261932373
    6. ')' → logprob: -3.034919261932373
    7. '(seq' → logprob: -3.534919261932373
    8. 'def' → logprob: -3.659919261932373
    9. '([' → logprob: -4.284919261932373
    10. 'lambda' → logprob: -4.409919261932373

Token 168: 'iously' (ID: 23138)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'er' → logprob: -1.527379035949707
    2. 'r' → logprob: -1.777379035949707
    3. 'g' → logprob: -1.902379035949707
    4. 't' → logprob: -2.277379035949707
    5. 'def' → logprob: -2.402379035949707
    6. 's' → logprob: -2.652379035949707
    7. '```' → logprob: -3.402379035949707
    8. '#' → logprob: -3.652379035949707
    9. 'ment' → logprob: -4.402379035949707
    10. 'n' → logprob: -4.652379035949707

Token 169: '
' (ID: 198)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.8180055022239685
    2. '(
' → logprob: -1.5680055618286133
    3. '(' → logprob: -1.8180055618286133
    4. ')' → logprob: -2.8180055618286133
    5. 'lambda' → logprob: -3.3180055618286133
    6. '   ' → logprob: -4.068005561828613
    7. '(chain' → logprob: -4.443005561828613
    8. '(g' → logprob: -4.818005561828613
    9. 'g' → logprob: -4.818005561828613
    10. 'def' → logprob: -4.943005561828613

Token 170: 'def' (ID: 1314)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -1.0659503936767578
    2. '(
' → logprob: -1.4409503936767578
    3. '(' → logprob: -1.9409503936767578
    4. 'lambda' → logprob: -2.565950393676758
    5. 'g' → logprob: -2.815950393676758
    6. 's' → logprob: -3.440950393676758
    7. ')' → logprob: -3.440950393676758
    8. 'def' → logprob: -3.690950393676758
    9. '(s' → logprob: -4.940950393676758
    10. ' (' → logprob: -4.940950393676758

Token 171: ' elegant' (ID: 24612)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.27896061539649963
    2. ' build' → logprob: -2.153960704803467
    3. 'generate' → logprob: -3.528960704803467
    4. 'complete' → logprob: -3.903960704803467
    5. 'simulate' → logprob: -4.278960704803467
    6. 'third' → logprob: -4.653960704803467
    7. 'get' → logprob: -4.903960704803467
    8. 'sub' → logprob: -5.278960704803467
    9. 'g' → logprob: -5.278960704803467
    10. 'fill' → logprob: -5.778960704803467

Token 172: '(s' (ID: 1858)
  Prédit: '_sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.5543985366821289
    2. '_trip' → logprob: -1.804398536682129
    3. '_' → logprob: -3.429398536682129
    4. '_sequences' → logprob: -3.554398536682129
    5. '_length' → logprob: -4.054398536682129
    6. '(s' → logprob: -4.304398536682129
    7. '_tr' → logprob: -4.304398536682129
    8. '(n' → logprob: -4.554398536682129
    9. '(' → logprob: -4.554398536682129
    10. '_three' → logprob: -4.679398536682129

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011152047663927078
    2. '):
' → logprob: -4.511152267456055
    3. ',' → logprob: -9.761152267456055
    4. ')' → logprob: -10.886152267456055
    5. '):
' → logprob: -11.761152267456055
    6. ' ):' → logprob: -12.136152267456055
    7. '   ' → logprob: -12.886152267456055
    8. 's' → logprob: -13.011152267456055
    9. '):

' → logprob: -13.011152267456055
    10. ':' → logprob: -13.136152267456055

Token 174: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000477620807942003
    2. ' n' → logprob: -8.62547779083252
    3. ' for' → logprob: -9.62547779083252
    4. ' return' → logprob: -10.25047779083252
    5. ' parts' → logprob: -10.50047779083252
    6. ' substr' → logprob: -10.50047779083252
    7. 'n' → logprob: -10.62547779083252
    8. ' tokens' → logprob: -10.87547779083252
    9. ' length' → logprob: -11.37547779083252
    10. ' subse' → logprob: -11.87547779083252

Token 175: ' #' (ID: 1069)
  Prédit: ' res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.7079942226409912
    2. '   ' → logprob: -1.8329942226409912
    3. 'res' → logprob: -2.582994222640991
    4. 'result' → logprob: -2.957994222640991
    5. ' result' → logprob: -2.957994222640991
    6. ' trip' → logprob: -4.08299446105957
    7. 'trip' → logprob: -4.08299446105957
    8. 'third' → logprob: -4.08299446105957
    9. 'n' → logprob: -4.20799446105957
    10. ' triples' → logprob: -4.45799446105957

Token 176: ' All' (ID: 2545)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.506003975868225
    2. 'third' → logprob: -1.506003975868225
    3. 'trip' → logprob: -1.631003975868225
    4. 'result' → logprob: -2.3810038566589355
    5. 'n' → logprob: -2.8810038566589355
    6. ' res' → logprob: -3.1310038566589355
    7. 'first' → logprob: -3.2560038566589355
    8. '   ' → logprob: -4.3810038566589355
    9. 'three' → logprob: -4.3810038566589355
    10. ' trip' → logprob: -4.3810038566589355

Token 177: ' possible' (ID: 4149)
  Prédit: ' length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' length' → logprob: -1.423296332359314
    2. ' trip' → logprob: -1.673296332359314
    3. 'length' → logprob: -1.673296332359314
    4. 'trip' → logprob: -2.1732964515686035
    5. ' substr' → logprob: -2.6732964515686035
    6. '   ' → logprob: -3.0482964515686035
    7. 'sub' → logprob: -3.2982964515686035
    8. 'subs' → logprob: -3.7982964515686035
    9. ' triples' → logprob: -3.9232964515686035
    10. ' first' → logprob: -4.0482964515686035

Token 178: ' pairs' (ID: 24702)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -1.4637889862060547
    2. ' substr' → logprob: -1.5887889862060547
    3. ' trip' → logprob: -2.0887889862060547
    4. 'length' → logprob: -2.3387889862060547
    5. ' three' → logprob: -2.4637889862060547
    6. 'sub' → logprob: -2.4637889862060547
    7. ' triples' → logprob: -2.9637889862060547
    8. ' length' → logprob: -3.7137889862060547
    9. 'three' → logprob: -3.9637889862060547
    10. '   ' → logprob: -4.213788986206055

Token 179: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02435392327606678
    2. '   ' → logprob: -3.8993539810180664
    3. '=' → logprob: -6.024353981018066
    4. 's' → logprob: -7.024353981018066
    5. ',' → logprob: -8.274353981018066
    6. '_pairs' → logprob: -9.899353981018066
    7. 'pairs' → logprob: -10.024353981018066
    8. ' ' → logprob: -10.524353981018066
    9. ' s' → logprob: -10.899353981018066
    10. '  ' → logprob: -11.274353981018066

Token 180: ' order' (ID: 2569)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.32345473766326904
    2. ' i' → logprob: -2.3234548568725586
    3. 'a' → logprob: -3.5734548568725586
    4. 'len' → logprob: -3.6984548568725586
    5. ' s' → logprob: -3.8234548568725586
    6. 'j' → logprob: -3.9484548568725586
    7. 's' → logprob: -4.198454856872559
    8. '_' → logprob: -4.198454856872559
    9. ' j' → logprob: -4.948454856872559
    10. '   ' → logprob: -4.948454856872559

Token 181: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.0357478857040405
    2. ' is' → logprob: -1.2857478857040405
    3. '=' → logprob: -2.66074800491333
    4. 's' → logprob: -2.66074800491333
    5. '<' → logprob: -3.16074800491333
    6. ' of' → logprob: -4.16074800491333
    7. 'of' → logprob: -4.16074800491333
    8. 'for' → logprob: -4.16074800491333
    9. 'and' → logprob: -4.28574800491333
    10. ' =' → logprob: -4.41074800491333

Token 182: ' maintained' (ID: 26871)
  Prédit: 'pres'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pres' → logprob: -0.07997224479913712
    2. ' preserved' → logprob: -3.579972267150879
    3. 'maint' → logprob: -3.829972267150879
    4. 'important' → logprob: -4.454972267150879
    5. 'not' → logprob: -5.079972267150879
    6. 's' → logprob: -6.329972267150879
    7. ' ' → logprob: -6.454972267150879
    8. 'ke' → logprob: -6.579972267150879
    9. ' maintained' → logprob: -7.329972267150879
    10. 'strict' → logprob: -7.329972267150879

Token 183: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3449234068393707
    2. ',' → logprob: -2.094923496246338
    3. ' =' → logprob: -2.844923496246338
    4. 'def' → logprob: -3.844923496246338
    5. ':' → logprob: -4.094923496246338
    6. ' for' → logprob: -4.344923496246338
    7. '(s' → logprob: -4.594923496246338
    8. ' in' → logprob: -5.094923496246338
    9. '(' → logprob: -5.344923496246338
    10. 's' → logprob: -5.344923496246338

Token 184: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11241094768047333
    2. ' res' → logprob: -3.7374110221862793
    3. ' pairs' → logprob: -3.7374110221862793
    4. ' result' → logprob: -4.737411022186279
    5. ' tokens' → logprob: -5.112411022186279
    6. 'result' → logprob: -5.112411022186279
    7. ' subse' → logprob: -5.237411022186279
    8. 'tokens' → logprob: -5.237411022186279
    9. 'pairs' → logprob: -5.362411022186279
    10. ' subsets' → logprob: -5.862411022186279

Token 185: ' pairs' (ID: 24702)
  Prédit: ' pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pairs' → logprob: -0.45292210578918457
    2. 'pairs' (adapté à ' pairs') → logprob: -1.5779221057891846
    3. ' res' → logprob: -2.9529221057891846
    4. '   ' → logprob: -4.0779218673706055
    5. 'from' → logprob: -4.0779218673706055
    6. 'res' → logprob: -4.3279218673706055
    7. 'result' → logprob: -4.3279218673706055
    8. ' result' → logprob: -4.7029218673706055
    9. '[(' → logprob: -4.9529218673706055
    10. ' from' → logprob: -5.3279218673706055

Token 186: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02673797309398651
    2. '=' → logprob: -3.651737928390503
    3. '   ' → logprob: -8.026738166809082
    4. ')' → logprob: -10.276738166809082
    5. ',' → logprob: -10.276738166809082
    6. 's' → logprob: -11.026738166809082
    7. ' ' → logprob: -12.026738166809082
    8. '=[]' → logprob: -12.526738166809082
    9. 'import' → logprob: -13.026738166809082
    10. '  ' → logprob: -13.026738166809082

Token 187: ' set' (ID: 920)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.3889181613922119
    2. ' [(' → logprob: -2.388918161392212
    3. 'set' → logprob: -2.638918161392212
    4. 'list' → logprob: -3.138918161392212
    5. ' set' → logprob: -3.263918161392212
    6. '{' → logprob: -3.888918161392212
    7. ' list' → logprob: -4.138917922973633
    8. '[]' → logprob: -5.013917922973633
    9. ' {(' → logprob: -5.388917922973633
    10. '((' → logprob: -5.513917922973633

Token 188: '(chain' (ID: 124348)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.3417263329029083
    2. '((' → logprob: -1.966726303100586
    3. '()
' → logprob: -2.341726303100586
    4. '(chain' → logprob: -3.466726303100586
    5. '(s' → logprob: -4.591726303100586
    6. '(
' → logprob: -4.716726303100586
    7. '(' → logprob: -6.841726303100586
    8. '([(' → logprob: -7.341726303100586
    9. '()

' → logprob: -8.091726303100586
    10. '(tuple' → logprob: -8.341726303100586

Token 189: '.from' (ID: 10935)
  Prédit: '.from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.from' → logprob: -0.00196645874530077
    2. 'from' → logprob: -6.25196647644043
    3. '.' → logprob: -10.87696647644043
    4. '(*(' → logprob: -12.12696647644043
    5. '(' → logprob: -12.37696647644043
    6. '(*' → logprob: -12.50196647644043
    7. '   ' → logprob: -13.75196647644043
    8. '(from' → logprob: -14.00196647644043
    9. '_from' → logprob: -14.12696647644043
    10. '.(' → logprob: -14.62696647644043

Token 190: '_iter' (ID: 27043)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.5846502184867859
    2. '_iter' → logprob: -0.8346502184867859
    3. 'from' → logprob: -5.834650039672852
    4. 'pair' → logprob: -6.084650039672852
    5. 'com' → logprob: -6.709650039672852
    6. 'filter' → logprob: -7.334650039672852
    7. 'flatten' → logprob: -7.584650039672852
    8. 'chain' → logprob: -7.834650039672852
    9. 'flat' → logprob: -9.209650039672852
    10. '```' → logprob: -9.459650039672852

Token 191: 'able' (ID: 562)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.06306960433721542
    2. 'ute' → logprob: -3.3130695819854736
    3. 'able' → logprob: -4.313069820404053
    4. 'from' → logprob: -5.688069820404053
    5. 'ut' → logprob: -6.563069820404053
    6. 't' → logprob: -6.813069820404053
    7. 'ite' → logprob: -7.313069820404053
    8. 'ule' → logprob: -7.563069820404053
    9. 'to' → logprob: -7.563069820404053
    10. 'utable' → logprob: -7.938069820404053

Token 192: '(
' (ID: 1607)
  Prédit: '(g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(g' → logprob: -0.211099311709404
    2. 'grow' → logprob: -2.96109938621521
    3. '(
' → logprob: -3.33609938621521
    4. '[g' → logprob: -3.46109938621521
    5. '([' → logprob: -3.58609938621521
    6. '(' → logprob: -4.711099147796631
    7. '   ' → logprob: -5.211099147796631
    8. '(map' → logprob: -5.336099147796631
    9. '(acc' → logprob: -5.461099147796631
    10. '(chain' → logprob: -5.586099147796631

Token 193: '       ' (ID: 309)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' → logprob: -0.40864232182502747
    2. '   ' → logprob: -2.158642292022705
    3. '(g' → logprob: -2.658642292022705
    4. '((' → logprob: -3.658642292022705
    5. '(s' → logprob: -3.908642292022705
    6. '[g' → logprob: -4.033642292022705
    7. '[(' → logprob: -4.408642292022705
    8. '(
' → logprob: -4.533642292022705
    9. '       ' → logprob: -4.658642292022705
    10. ' grow' → logprob: -5.033642292022705

Token 194: ' [(' (ID: 43900)
  Prédit: 'grow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grow' → logprob: -1.0387433767318726
    2. '[(' (adapté à ' [(') → logprob: -1.9137433767318726
    3. '((' → logprob: -2.038743495941162
    4. '(g' → logprob: -2.288743495941162
    5. '([' → logprob: -3.288743495941162
    6. '(s' → logprob: -3.288743495941162
    7. '[g' → logprob: -3.413743495941162
    8. '[' → logprob: -3.913743495941162
    9. '(
' → logprob: -3.913743495941162
    10. '   ' → logprob: -4.163743495941162

Token 195: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.14546410739421844
    2. '(s' → logprob: -2.5204641819000244
    3. 'a' → logprob: -4.020463943481445
    4. 'x' → logprob: -4.520463943481445
    5. 'c' → logprob: -4.895463943481445
    6. ' s' → logprob: -5.395463943481445
    7. '(a' → logprob: -5.395463943481445
    8. '(x' → logprob: -6.145463943481445
    9. 'p' → logprob: -6.145463943481445
    10. '(c' → logprob: -6.895463943481445

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.010703611187636852
    2. '[:' → logprob: -4.7607035636901855
    3. '[k' → logprob: -6.3857035636901855
    4. '[x' → logprob: -8.760704040527344
    5. '[j' → logprob: -9.385704040527344
    6. '[a' → logprob: -10.135704040527344
    7. '[m' → logprob: -10.760704040527344
    8. '   ' → logprob: -11.135704040527344
    9. '[p' → logprob: -11.135704040527344
    10. '[' → logprob: -11.260704040527344

Token 197: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.31698593497276306
    2. ':i' → logprob: -1.6919859647750854
    3. ',' → logprob: -3.066985845565796
    4. ']+' → logprob: -4.441986083984375
    5. ']' → logprob: -4.816986083984375
    6. ',i' → logprob: -4.941986083984375
    7. ':' → logprob: -4.941986083984375
    8. '[i' → logprob: -6.691986083984375
    9. '   ' → logprob: -6.941986083984375
    10. ':],' → logprob: -6.941986083984375

Token 198: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.11402418464422226
    2. ' s' → logprob: -2.2390241622924805
    3. ')' → logprob: -7.3640241622924805
    4. '(s' → logprob: -9.23902416229248
    5. '),' → logprob: -9.36402416229248
    6. '   ' → logprob: -9.61402416229248
    7. ' ' → logprob: -9.98902416229248
    8. 'j' → logprob: -9.98902416229248
    9. ')s' → logprob: -10.11402416229248
    10. ' (' → logprob: -10.61402416229248

Token 199: '[j' (ID: 7895)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.9985405206680298
    2. '[j' → logprob: -1.3735405206680298
    3. 'j' → logprob: -1.8735405206680298
    4. '),' → logprob: -2.4985404014587402
    5. ',' → logprob: -3.1235404014587402
    6. ']),' → logprob: -3.4985404014587402
    7. 'k' → logprob: -3.9985404014587402
    8. '[i' → logprob: -4.12354040145874
    9. '])' → logprob: -4.87354040145874
    10. '   ' → logprob: -5.12354040145874

Token 200: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01382989902049303
    2. '])' → logprob: -4.388829708099365
    3. ')]' → logprob: -7.013829708099365
    4. ' )' → logprob: -9.388830184936523
    5. ')
' → logprob: -9.513830184936523
    6. ')])' → logprob: -9.638830184936523
    7. ']' → logprob: -10.138830184936523
    8. '')' → logprob: -10.888830184936523
    9. '),' → logprob: -10.888830184936523
    10. '))' → logprob: -10.888830184936523

Token 201: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8070955276489258
    2. ' for' → logprob: -1.0570955276489258
    3. 'for' → logprob: -1.6820955276489258
    4. '       ' → logprob: -5.307095527648926
    5. '   ' → logprob: -6.057095527648926
    6. '    ' → logprob: -6.307095527648926
    7. ']' → logprob: -6.307095527648926
    8. '         ' → logprob: -6.432095527648926
    9. '        ' → logprob: -6.682095527648926
    10. '])' → logprob: -6.932095527648926

Token 202: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6326542496681213
    2. ' j' → logprob: -0.7576542496681213
    3. '	j' → logprob: -11.007654190063477
    4. '   ' → logprob: -11.632654190063477
    5. ' ' → logprob: -12.007654190063477
    6. '    ' → logprob: -12.382654190063477
    7. '```' → logprob: -12.507654190063477
    8. ')' → logprob: -13.382654190063477
    9. '  ' → logprob: -13.382654190063477
    10. '<|end|>' → logprob: -13.507654190063477

Token 203: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0008600078872404993
    2. 'in' → logprob: -7.125860214233398
    3. ' ' → logprob: -10.875860214233398
    4. 'range' → logprob: -11.500860214233398
    5. ')' → logprob: -12.000860214233398
    6. ',' → logprob: -12.625860214233398
    7. ' range' → logprob: -13.000860214233398
    8. '+' → logprob: -13.000860214233398
    9. '<|end|>' → logprob: -13.000860214233398
    10. '   ' → logprob: -13.125860214233398

Token 204: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16023224592208862
    2. ' range' → logprob: -1.9102323055267334
    3. '(range' → logprob: -12.410232543945312
    4. ')' → logprob: -14.285232543945312
    5. '   ' → logprob: -14.410232543945312
    6. ' ' → logprob: -14.660232543945312
    7. 'chain' → logprob: -14.660232543945312
    8. ' xrange' → logprob: -14.910232543945312
    9. '	range' → logprob: -15.160232543945312
    10. 'i' → logprob: -15.535232543945312

Token 205: '(len' (ID: 14990)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8248225450515747
    2. 'j' → logprob: -0.8248225450515747
    3. '(i' → logprob: -3.449822425842285
    4. 'len' → logprob: -3.699822425842285
    5. ' j' → logprob: -4.074822425842285
    6. ' i' → logprob: -4.199822425842285
    7. '(len' → logprob: -4.199822425842285
    8. '(j' → logprob: -4.324822425842285
    9. '   ' → logprob: -6.199822425842285
    10. ' len' → logprob: -6.199822425842285

Token 206: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.014367170631885529
    2. 's' → logprob: -4.26436710357666
    3. ' s' → logprob: -9.01436710357666
    4. '(' → logprob: -10.51436710357666
    5. ')' → logprob: -10.51436710357666
    6. ' (' → logprob: -11.88936710357666
    7. ')s' → logprob: -12.51436710357666
    8. '+' → logprob: -13.01436710357666
    9. ' ' → logprob: -13.01436710357666
    10. '   ' → logprob: -13.26436710357666

Token 207: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10214215517044067
    2. '))' → logprob: -2.352142095565796
    3. ' )' → logprob: -6.977142333984375
    4. ')]' → logprob: -8.602142333984375
    5. ')+' → logprob: -8.852142333984375
    6. '   ' → logprob: -8.852142333984375
    7. '       ' → logprob: -9.227142333984375
    8. 's' → logprob: -9.227142333984375
    9. ')])' → logprob: -10.102142333984375
    10. ' ' → logprob: -10.227142333984375

Token 208: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2650658190250397
    2. ' if' → logprob: -1.8900657892227173
    3. '+' → logprob: -3.140065908432007
    4. '       ' → logprob: -4.765065670013428
    5. ',' → logprob: -5.015065670013428
    6. 'for' → logprob: -5.265065670013428
    7. '           ' → logprob: -5.390065670013428
    8. ')' → logprob: -5.515065670013428
    9. '   ' → logprob: -5.640065670013428
    10. '    ' → logprob: -6.390065670013428

Token 209: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2519416809082031
    2. ' j' → logprob: -1.5019416809082031
    3. '	j' → logprob: -12.376941680908203
    4. '   ' → logprob: -12.876941680908203
    5. '    ' → logprob: -13.751941680908203
    6. ' ' → logprob: -13.751941680908203
    7. ',' → logprob: -14.751941680908203
    8. ',j' → logprob: -15.001941680908203
    9. '[j' → logprob: -15.126941680908203
    10. '  ' → logprob: -15.251941680908203

Token 210: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00040242893737740815
    2. 'in' → logprob: -8.000402450561523
    3. ' i' → logprob: -10.625402450561523
    4. '=' → logprob: -11.125402450561523
    5. '<|end|>' → logprob: -11.375402450561523
    6. '=i' → logprob: -11.625402450561523
    7. ' =' → logprob: -13.375402450561523
    8. 'range' → logprob: -13.625402450561523
    9. ')' → logprob: -14.000402450561523
    10. ' range' → logprob: -14.125402450561523

Token 211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10085511952638626
    2. ' range' → logprob: -2.3508551120758057
    3. '(range' → logprob: -7.350855350494385
    4. '	range' → logprob: -13.600854873657227
    5. ')' → logprob: -13.725854873657227
    6. '   ' → logprob: -13.975854873657227
    7. 'i' → logprob: -14.350854873657227
    8. ' ' → logprob: -15.100854873657227
    9. ' xrange' → logprob: -15.350854873657227
    10. 'rang' → logprob: -15.725854873657227

Token 212: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00011677479778882116
    2. '(range' → logprob: -9.875116348266602
    3. 'range' → logprob: -10.500116348266602
    4. '(' → logprob: -10.875116348266602
    5. ' (' → logprob: -11.750116348266602
    6. ' range' → logprob: -12.250116348266602
    7. '(len' → logprob: -12.750116348266602
    8. '(s' → logprob: -13.625116348266602
    9. 'i' → logprob: -14.375116348266602
    10. '   ' → logprob: -14.875116348266602

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005915171932429075
    2. ' +' → logprob: -7.62559175491333
    3. '1' → logprob: -9.375591278076172
    4. '()+' → logprob: -11.875591278076172
    5. '+
' → logprob: -12.625591278076172
    6. ')+' → logprob: -12.875591278076172
    7. '+i' → logprob: -13.375591278076172
    8. '+j' → logprob: -14.000591278076172
    9. '(' → logprob: -14.625591278076172
    10. '+,' → logprob: -14.750591278076172

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.290784560609609e-05
    2. 'len' → logprob: -10.500072479248047
    3. ' ' → logprob: -10.625072479248047
    4. '+' → logprob: -12.000072479248047
    5. '(len' → logprob: -12.375072479248047
    6. '(' → logprob: -12.625072479248047
    7. '2' → logprob: -13.000072479248047
    8. 'i' → logprob: -14.000072479248047
    9. '(i' → logprob: -14.000072479248047
    10. '   ' → logprob: -14.000072479248047

Token 215: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5670126080513
    2. '(len' → logprob: -1.1920125484466553
    3. ',len' → logprob: -2.8170125484466553
    4. '(' → logprob: -3.4420125484466553
    5. ',' → logprob: -3.6920125484466553
    6. '1' → logprob: -4.942012786865234
    7. ' +' → logprob: -6.067012786865234
    8. 'len' → logprob: -6.692012786865234
    9. '()+' → logprob: -7.567012786865234
    10. '+,' → logprob: -8.067012786865234

Token 216: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0004931025905534625
    2. ' len' → logprob: -7.625493049621582
    3. '(len' → logprob: -12.375493049621582
    4. '           ' → logprob: -15.000493049621582
    5. '   ' → logprob: -15.250493049621582
    6. '       ' → logprob: -16.2504940032959
    7. '	len' → logprob: -17.1254940032959
    8. '               ' → logprob: -17.5004940032959
    9. '<len' → logprob: -17.5004940032959
    10. ',len' → logprob: -17.6254940032959

Token 217: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -6.64708495605737e-05
    2. 's' → logprob: -9.625066757202148
    3. '(' → logprob: -14.875066757202148
    4. '(
' → logprob: -17.87506675720215
    5. ')' → logprob: -18.12506675720215
    6. '(seq' → logprob: -18.37506675720215
    7. '```' → logprob: -18.50006675720215
    8. '   ' → logprob: -18.62506675720215
    9. ')s' → logprob: -19.25006675720215
    10. '(sequence' → logprob: -19.62506675720215

Token 218: '))]
' (ID: 53695)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5787520408630371
    2. 's' → logprob: -1.078752040863037
    3. '(s' → logprob: -3.203752040863037
    4. ')' → logprob: -3.453752040863037
    5. ')))' → logprob: -3.953752040863037
    6. ')])' → logprob: -5.453752040863037
    7. ')s' → logprob: -6.203752040863037
    8. ')]' → logprob: -7.078752040863037
    9. '   ' → logprob: -7.953752040863037
    10. '))]
' → logprob: -8.578752517700195

Token 219: '   ' (ID: 271)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19133414328098297
    2. '       ' → logprob: -3.0663342475891113
    3. ')))' → logprob: -3.0663342475891113
    4. ']))' → logprob: -3.0663342475891113
    5. '   ' → logprob: -3.5663342475891113
    6. ')' → logprob: -5.941334247589111
    7. ' for' → logprob: -7.441334247589111
    8. '}))' → logprob: -7.566334247589111
    9. '           ' → logprob: -8.066333770751953
    10. ' ))' → logprob: -8.316333770751953

Token 220: ' ))
' (ID: 43705)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.010483743622899055
    2. '   ' → logprob: -4.760483741760254
    3. ')))' → logprob: -6.885483741760254
    4. '))
' (adapté à ' ))
') → logprob: -7.385483741760254
    5. ')' → logprob: -9.260483741760254
    6. '       ' → logprob: -10.010483741760254
    7. ' ))' → logprob: -11.135483741760254
    8. '()))' → logprob: -11.260483741760254
    9. ']))' → logprob: -11.510483741760254
    10. '           ' → logprob: -11.760483741760254

Token 221: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36545172333717346
    2. '<|end|>' → logprob: -1.365451693534851
    3. ')' → logprob: -3.3654518127441406
    4. '
' → logprob: -4.865451812744141
    5. ' ' → logprob: -5.990451812744141
    6. ',' → logprob: -6.490451812744141
    7. '<|end|>' → logprob: -6.990451812744141
    8. ':' → logprob: -7.115451812744141
    9. '  ' → logprob: -8.11545181274414
    10. 'def' → logprob: -8.24045181274414

Token 222: ' #' (ID: 1069)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.1700778305530548
    2. '   ' → logprob: -2.5450778007507324
    3. ' trip' → logprob: -2.9200778007507324
    4. ' triples' → logprob: -4.170077800750732
    5. 'third' → logprob: -6.045077800750732
    6. 'tr' → logprob: -6.545077800750732
    7. 'result' → logprob: -7.045077800750732
    8. ' third' → logprob: -7.795077800750732
    9. ' tr' → logprob: -7.920077800750732
    10. ' triple' → logprob: -7.920077800750732

Token 223: ' All' (ID: 2545)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.02492930367588997
    2. ' trip' → logprob: -4.524929523468018
    3. ' triples' → logprob: -4.649929523468018
    4. 'third' → logprob: -6.649929523468018
    5. 'tr' → logprob: -7.024929523468018
    6. 'th' → logprob: -7.274929523468018
    7. '#' → logprob: -8.52492904663086
    8. 'all' → logprob: -8.77492904663086
    9. 'length' → logprob: -9.14992904663086
    10. 'for' → logprob: -9.14992904663086

Token 224: ' possible' (ID: 4149)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.24387221038341522
    2. ' trip' → logprob: -1.7438721656799316
    3. ' triples' → logprob: -3.6188721656799316
    4. '   ' → logprob: -5.243872165679932
    5. '_trip' → logprob: -5.493872165679932
    6. ' possible' → logprob: -6.743872165679932
    7. 'possible' → logprob: -6.868872165679932
    8. ' substr' → logprob: -7.618872165679932
    9. 'tr' → logprob: -7.868872165679932
    10. 'third' → logprob: -8.36887264251709

Token 225: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' → logprob: -0.1563057154417038
    2. ' trip' → logprob: -2.1563057899475098
    3. ' triples' → logprob: -3.6563057899475098
    4. ' ' → logprob: -7.53130578994751
    5. '_trip' → logprob: -7.78130578994751
    6. 'length' → logprob: -8.406305313110352
    7. 'third' → logprob: -8.406305313110352
    8. 'tr' → logprob: -8.406305313110352
    9. '3' → logprob: -8.656305313110352
    10. ' substr' → logprob: -9.031305313110352

Token 226: 'lets' (ID: 12222)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.4296357035636902
    2. 'lets' → logprob: -1.054635763168335
    3. 's' → logprob: -7.804635524749756
    4. 'le' → logprob: -8.429636001586914
    5. 'airs' → logprob: -8.679636001586914
    6. 'ples' → logprob: -10.304636001586914
    7. '   ' → logprob: -11.054636001586914
    8. 'let' → logprob: -11.054636001586914
    9. '(' → logprob: -12.179636001586914
    10. '#' → logprob: -12.304636001586914

Token 227: ' where' (ID: 1919)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0044779470190405846
    2. '=' → logprob: -6.0044779777526855
    3. '   ' → logprob: -6.2544779777526855
    4. 's' → logprob: -10.504477500915527
    5. ' =
' → logprob: -11.504477500915527
    6. '=set' → logprob: -11.879477500915527
    7. '<|end|>' → logprob: -12.129477500915527
    8. '(chain' → logprob: -12.754477500915527
    9. ' for' → logprob: -13.129477500915527
    10. ' ' → logprob: -13.129477500915527

Token 228: ' order' (ID: 2569)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.37098434567451477
    2. 'i' → logprob: -1.3709843158721924
    3. '   ' → logprob: -3.9959843158721924
    4. ' s' → logprob: -4.3709845542907715
    5. ' (' → logprob: -4.7459845542907715
    6. 's' → logprob: -5.1209845542907715
    7. ' for' → logprob: -6.1209845542907715
    8. '(i' → logprob: -6.2459845542907715
    9. ' j' → logprob: -7.1209845542907715
    10. 'for' → logprob: -7.1209845542907715

Token 229: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.22639484703540802
    2. 'is' → logprob: -1.6013948917388916
    3. ' =' → logprob: -7.6013946533203125
    4. '=' → logprob: -8.601394653320312
    5. '   ' → logprob: -8.726394653320312
    6. ' ' → logprob: -10.351394653320312
    7. ' (' → logprob: -10.851394653320312
    8. 'def' → logprob: -11.226394653320312
    9. '=is' → logprob: -11.476394653320312
    10. 's' → logprob: -11.726394653320312

Token 230: ' maintained' (ID: 26871)
  Prédit: 'maint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maint' → logprob: -0.31334030628204346
    2. ' maintained' → logprob: -1.3133403062820435
    3. 's' → logprob: -10.438340187072754
    4. '   ' → logprob: -10.938340187072754
    5. '-maint' → logprob: -12.563340187072754
    6. 'Maint' → logprob: -12.688340187072754
    7. ' preserved' → logprob: -12.813340187072754
    8. 'managed' → logprob: -13.313340187072754
    9. '
' → logprob: -13.438340187072754
    10. '                           ' → logprob: -13.563340187072754

Token 231: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08703233301639557
    2. ' =' → logprob: -2.7120323181152344
    3. '=' → logprob: -4.962032318115234
    4. '<|end|>' → logprob: -5.837032318115234
    5. '
' → logprob: -6.087032318115234
    6. '(
' → logprob: -6.837032318115234
    7. ',' → logprob: -7.837032318115234
    8. '[
' → logprob: -7.837032318115234
    9. '=
' → logprob: -7.962032318115234
    10. 'tokens' → logprob: -7.962032318115234

Token 232: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010136271826922894
    2. '<|end|>' → logprob: -4.885136127471924
    3. ' =' → logprob: -7.385136127471924
    4. ')' → logprob: -7.510136127471924
    5. 'tokens' → logprob: -7.885136127471924
    6. '
' → logprob: -8.260136604309082
    7. ',' → logprob: -9.010136604309082
    8. '<|end|>' → logprob: -9.135136604309082
    9. 'return' → logprob: -9.260136604309082
    10. '=' → logprob: -9.885136604309082

Token 233: ' trip' (ID: 8831)
  Prédit: 'trip'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'trip' (adapté à ' trip') → logprob: -0.20663976669311523
    2. ' trip' → logprob: -2.0816397666931152
    3. '   ' → logprob: -3.0816397666931152
    4. ' triples' → logprob: -5.081639766693115
    5. 'tr' → logprob: -5.956639766693115
    6. 'return' → logprob: -6.081639766693115
    7. ' return' → logprob: -6.831639766693115
    8. '[(' → logprob: -6.956639766693115
    9. ' tr' → logprob: -7.706639766693115
    10. 'pairs' → logprob: -7.956639766693115

Token 234: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -0.0007376811117865145
    2. 's' → logprob: -7.37573766708374
    3. 'les' → logprob: -9.500738143920898
    4. '=' → logprob: -11.625738143920898
    5. ' =' → logprob: -12.250738143920898
    6. '   ' → logprob: -12.375738143920898
    7. 'ets' → logprob: -12.625738143920898
    8. 'let' → logprob: -12.875738143920898
    9. '
' → logprob: -13.250738143920898
    10. '_' → logprob: -13.250738143920898

Token 235: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061973731964826584
    2. '=' → logprob: -2.811973810195923
    3. 's' → logprob: -12.311973571777344
    4. ' ' → logprob: -14.436973571777344
    5. '   ' → logprob: -14.936973571777344
    6. '=set' → logprob: -15.061973571777344
    7. ' =
' → logprob: -15.561973571777344
    8. ')' → logprob: -16.061973571777344
    9. '=
' → logprob: -17.561973571777344
    10. ' ' → logprob: -17.811973571777344

Token 236: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.25198015570640564
    2. 'set' → logprob: -1.501980185508728
    3. '   ' → logprob: -11.00197982788086
    4. '{' → logprob: -11.37697982788086
    5. ' {(' → logprob: -12.00197982788086
    6. 's' → logprob: -12.87697982788086
    7. ' pairs' → logprob: -13.25197982788086
    8. ' ' → logprob: -13.25197982788086
    9. 'pairs' → logprob: -13.25197982788086
    10. 'chain' → logprob: -13.25197982788086

Token 237: '(
' (ID: 1607)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.06454555690288544
    2. '(
' → logprob: -3.5645456314086914
    3. '((' → logprob: -3.6895456314086914
    4. '(' → logprob: -5.064545631408691
    5. '([(' → logprob: -6.064545631408691
    6. '([' → logprob: -8.189545631408691
    7. '(tuple' → logprob: -9.189545631408691
    8. 'chain' → logprob: -9.689545631408691
    9. '(

' → logprob: -10.314545631408691
    10. '([
' → logprob: -10.564545631408691

Token 238: '       ' (ID: 309)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.3790756165981293
    2. 'chain' → logprob: -1.5040756464004517
    3. '   ' → logprob: -3.379075527191162
    4. '(s' → logprob: -4.254075527191162
    5. '[(' → logprob: -4.504075527191162
    6. 'tuple' → logprob: -4.504075527191162
    7. '(tuple' → logprob: -4.754075527191162
    8. ' (' → logprob: -5.004075527191162
    9. '(
' → logprob: -6.129075527191162
    10. '(' → logprob: -6.879075527191162

Token 239: ' ''.' (ID: 105941)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(chain' → logprob: -1.0609313249588013
    2. '(s' → logprob: -1.1859313249588013
    3. 'chain' → logprob: -1.6859313249588013
    4. 'tuple' → logprob: -2.5609312057495117
    5. '(tuple' → logprob: -3.0609312057495117
    6. '[(' → logprob: -4.185931205749512
    7. ' (' → logprob: -4.685931205749512
    8. '(it' → logprob: -5.810931205749512
    9. '(
' → logprob: -6.185931205749512
    10. '(' → logprob: -6.435931205749512

Token 240: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.5094070477061905e-05
    2. '''.' → logprob: -11.250015258789062
    3. ''.' → logprob: -13.750015258789062
    4. ' join' → logprob: -14.375015258789062
    5. '.join' → logprob: -15.125015258789062
    6. '```' → logprob: -16.125015258789062
    7. 'com' → logprob: -17.500015258789062
    8. '(join' → logprob: -17.875015258789062
    9. '   ' → logprob: -18.000015258789062
    10. ' ' → logprob: -18.000015258789062

Token 241: '((' (ID: 2054)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.4048771858215332
    2. 'trip' → logprob: -2.279877185821533
    3. 't' → logprob: -2.529877185821533
    4. '(x' → logprob: -3.154877185821533
    5. '([' → logprob: -3.654877185821533
    6. '(p' → logprob: -4.029877185821533
    7. 'tr' → logprob: -4.154877185821533
    8. '(tr' → logprob: -4.279877185821533
    9. '[t' → logprob: -4.654877185821533
    10. 'p' → logprob: -5.404877185821533

Token 242: 's' (ID: 82)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2952479422092438
    2. 'x' → logprob: -1.6702479124069214
    3. 's' → logprob: -3.295248031616211
    4. 'p' → logprob: -3.795248031616211
    5. 'i' → logprob: -5.170248031616211
    6. 'c' → logprob: -6.920248031616211
    7. 'pair' → logprob: -7.295248031616211
    8. 'trip' → logprob: -8.920248031616211
    9. 't' → logprob: -9.420248031616211
    10. '[i' → logprob: -10.045248031616211

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.147740689106286e-05
    2. '[a' → logprob: -10.12507152557373
    3. '[x' → logprob: -10.50007152557373
    4. '[k' → logprob: -13.87507152557373
    5. '[c' → logprob: -14.12507152557373
    6. 'i' → logprob: -14.37507152557373
    7. '[p' → logprob: -14.87507152557373
    8. '[' → logprob: -15.00007152557373
    9. '[j' → logprob: -15.37507152557373
    10. '[idx' → logprob: -16.250070571899414

Token 244: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003044500946998596
    2. '],' → logprob: -6.253044605255127
    3. ',k' → logprob: -7.253044605255127
    4. ' ,' → logprob: -8.128044128417969
    5. ',j' → logprob: -10.378044128417969
    6. '   ' → logprob: -10.753044128417969
    7. '[i' → logprob: -11.503044128417969
    8. '),' → logprob: -11.753044128417969
    9. 'k' → logprob: -11.753044128417969
    10. ',i' → logprob: -11.878044128417969

Token 245: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08901046961545944
    2. ' s' → logprob: -2.46401047706604
    3. '   ' → logprob: -10.464010238647461
    4. ' ' → logprob: -11.339010238647461
    5. '     ' → logprob: -11.839010238647461
    6. '    ' → logprob: -11.964010238647461
    7. '  ' → logprob: -12.214010238647461
    8. '       ' → logprob: -12.589010238647461
    9. '      ' → logprob: -13.589010238647461
    10. '
' → logprob: -14.089010238647461

Token 246: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00014597235713154078
    2. '[k' → logprob: -9.12514591217041
    3. 'j' → logprob: -10.75014591217041
    4. '[i' → logprob: -11.50014591217041
    5. '[m' → logprob: -12.87514591217041
    6. '[' → logprob: -14.62514591217041
    7. '   ' → logprob: -15.25014591217041
    8. '[n' → logprob: -15.37514591217041
    9. '_j' → logprob: -15.50014591217041
    10. '[
' → logprob: -15.62514591217041

Token 247: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009188218042254448
    2. '],' → logprob: -5.134188175201416
    3. ',k' → logprob: -6.134188175201416
    4. '),' → logprob: -7.759188175201416
    5. ' ,' → logprob: -8.009188652038574
    6. 'k' → logprob: -8.134188652038574
    7. ']),' → logprob: -11.259188652038574
    8. ',s' → logprob: -13.009188652038574
    9. ']))' → logprob: -13.009188652038574
    10. '   ' → logprob: -13.259188652038574

Token 248: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.054992981255054474
    2. ' s' → logprob: -2.929992914199829
    3. 'k' → logprob: -9.80499267578125
    4. '   ' → logprob: -11.17999267578125
    5. ' ' → logprob: -11.80499267578125
    6. '       ' → logprob: -12.55499267578125
    7. ' k' → logprob: -12.67999267578125
    8. '  ' → logprob: -12.80499267578125
    9. '           ' → logprob: -12.92999267578125
    10. '
' → logprob: -12.92999267578125

Token 249: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.31335321068763733
    2. 'k' → logprob: -1.313353180885315
    3. '[' → logprob: -11.063353538513184
    4. '
' → logprob: -11.313353538513184
    5. '[i' → logprob: -11.563353538513184
    6. '])' → logprob: -11.688353538513184
    7. '[
' → logprob: -11.813353538513184
    8. '{k' → logprob: -11.813353538513184
    9. '+k' → logprob: -12.313353538513184
    10. '[l' → logprob: -12.563353538513184

Token 250: ']))
' (ID: 24801)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0012815415393561125
    2. '))
' → logprob: -6.87628173828125
    3. ')' → logprob: -8.37628173828125
    4. '])' → logprob: -11.75128173828125
    5. 'for' → logprob: -12.37628173828125
    6. ''))' → logprob: -13.25128173828125
    7. ' ))' → logprob: -13.25128173828125
    8. '})' → logprob: -14.25128173828125
    9. '))

' → logprob: -14.87628173828125
    10. ')
' → logprob: -15.00128173828125

Token 251: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0077060069888830185
    2. 'for' → logprob: -4.882706165313721
    3. ')' → logprob: -9.382705688476562
    4. '<|end|>' → logprob: -12.257705688476562
    5. '	for' → logprob: -12.632705688476562
    6. '   ' → logprob: -12.757705688476562
    7. ' )' → logprob: -13.757705688476562
    8. '           ' → logprob: -13.757705688476562
    9. '       ' → logprob: -14.007705688476562
    10. ' ' → logprob: -14.007705688476562

Token 252: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20151031017303467
    2. 'for' (adapté à ' for') → logprob: -1.7015103101730347
    3. '       ' → logprob: -9.451510429382324
    4. '           ' → logprob: -11.826510429382324
    5. ')' → logprob: -12.826510429382324
    6. '   ' → logprob: -12.951510429382324
    7. '	for' → logprob: -12.951510429382324
    8. '               ' → logprob: -13.576510429382324
    9. '        ' → logprob: -14.201510429382324
    10. ' ' → logprob: -14.451510429382324

Token 253: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.07745551317930222
    2. 'k' → logprob: -2.827455520629883
    3. ' i' → logprob: -4.202455520629883
    4. ' k' → logprob: -7.827455520629883
    5. 'j' → logprob: -11.577455520629883
    6. ' ' → logprob: -14.577455520629883
    7. '	i' → logprob: -14.952455520629883
    8. '`' → logprob: -15.077455520629883
    9. ' j' → logprob: -15.202455520629883
    10. ' ' → logprob: -16.577455520629883

Token 254: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004904801025986671
    2. 'in' → logprob: -7.625490665435791
    3. 'range' → logprob: -13.125490188598633
    4. ' ' → logprob: -15.750490188598633
    5. '   ' → logprob: -16.625490188598633
    6. '<|end|>' → logprob: -16.750490188598633
    7. ' range' → logprob: -16.875490188598633
    8. 'import' → logprob: -17.375490188598633
    9. '  ' → logprob: -17.375490188598633
    10. '```' → logprob: -17.875490188598633

Token 255: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011047935113310814
    2. ' range' → logprob: -4.511047840118408
    3. '(range' → logprob: -16.26104736328125
    4. ' ' → logprob: -18.76104736328125
    5. '	range' → logprob: -19.01104736328125
    6. '  ' → logprob: -20.01104736328125
    7. '   ' → logprob: -20.13604736328125
    8. '
' → logprob: -21.38604736328125
    9. ' xrange' → logprob: -21.51104736328125
    10. 'rang' → logprob: -21.88604736328125

Token 256: '(len' (ID: 14990)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.06197250634431839
    2. '(len' → logprob: -2.8119726181030273
    3. ' len' → logprob: -12.311972618103027
    4. '           ' → logprob: -16.06197166442871
    5. '   ' → logprob: -16.68697166442871
    6. '(i' → logprob: -16.81197166442871
    7. '       ' → logprob: -17.18697166442871
    8. '	len' → logprob: -17.31197166442871
    9. '0' → logprob: -17.43697166442871
    10. 'i' → logprob: -18.31197166442871

Token 257: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009176511666737497
    2. 's' → logprob: -7.000917434692383
    3. ' s' → logprob: -12.750917434692383
    4. '(' → logprob: -13.250917434692383
    5. ' (' → logprob: -13.875917434692383
    6. ')' → logprob: -15.000917434692383
    7. ')s' → logprob: -16.375917434692383
    8. '   ' → logprob: -17.250917434692383
    9. ' ' → logprob: -17.750917434692383
    10. '```' → logprob: -18.250917434692383

Token 258: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16614270210266113
    2. '))' → logprob: -2.041142702102661
    3. ')
' → logprob: -4.291142463684082
    4. '))
' → logprob: -4.666142463684082
    5. '       ' → logprob: -10.416142463684082
    6. ' )' → logprob: -10.541142463684082
    7. '   ' → logprob: -10.791142463684082
    8. ')s' → logprob: -12.041142463684082
    9. 's' → logprob: -12.666142463684082
    10. ' ' → logprob: -13.291142463684082

Token 259: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07519464939832687
    2. 'for' → logprob: -2.7001945972442627
    3. '       ' → logprob: -5.325194835662842
    4. '   ' → logprob: -9.200194358825684
    5. '+' → logprob: -9.450194358825684
    6. '	for' → logprob: -9.825194358825684
    7. ')' → logprob: -10.075194358825684
    8. '           ' → logprob: -10.450194358825684
    9. ' in' → logprob: -10.575194358825684
    10. '    ' → logprob: -11.075194358825684

Token 260: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2519860863685608
    2. ' for' → logprob: -1.501986026763916
    3. '           ' → logprob: -10.626986503601074
    4. '       ' → logprob: -10.626986503601074
    5. '   ' → logprob: -12.501986503601074
    6. 'range' → logprob: -13.751986503601074
    7. '	for' → logprob: -14.126986503601074
    8. '+' → logprob: -14.126986503601074
    9. ' ' → logprob: -14.751986503601074
    10. '
' → logprob: -14.751986503601074

Token 261: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001770139206200838
    2. ' j' → logprob: -6.37677001953125
    3. 'i' → logprob: -9.62677001953125
    4. 'k' → logprob: -14.37677001953125
    5. '   ' → logprob: -14.62677001953125
    6. ' i' → logprob: -15.25177001953125
    7. '           ' → logprob: -15.25177001953125
    8. '    ' → logprob: -16.37677001953125
    9. '(j' → logprob: -16.50177001953125
    10. '       ' → logprob: -16.50177001953125

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005946691147983074
    2. 'in' → logprob: -5.130946636199951
    3. 'range' → logprob: -11.13094711303711
    4. ')' → logprob: -13.88094711303711
    5. '=' → logprob: -14.75594711303711
    6. 'for' → logprob: -14.88094711303711
    7. 'i' → logprob: -15.25594711303711
    8. 'In' → logprob: -15.50594711303711
    9. 'import' → logprob: -15.50594711303711
    10. ' ' → logprob: -15.75594711303711

Token 263: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06639490276575089
    2. ' range' → logprob: -2.816394805908203
    3. '(i' → logprob: -5.816394805908203
    4. '(range' → logprob: -6.566394805908203
    5. 'i' → logprob: -10.566394805908203
    6. ' i' → logprob: -12.691394805908203
    7. ' (' → logprob: -13.066394805908203
    8. '   ' → logprob: -14.441394805908203
    9. 'for' → logprob: -14.816394805908203
    10. 'Range' → logprob: -16.691394805908203

Token 264: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.652451464906335e-05
    2. 'range' → logprob: -11.625016212463379
    3. '(range' → logprob: -12.500016212463379
    4. '(len' → logprob: -13.000016212463379
    5. ' (' → logprob: -13.750016212463379
    6. 'i' → logprob: -15.500016212463379
    7. ' range' → logprob: -15.625016212463379
    8. '(' → logprob: -16.875017166137695
    9. ' i' → logprob: -18.000017166137695
    10. '   ' → logprob: -18.000017166137695

Token 265: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012821101699955761
    2. ' +' → logprob: -9.125127792358398
    3. '1' → logprob: -10.875127792358398
    4. ')+' → logprob: -16.5001277923584
    5. ' ' → logprob: -16.7501277923584
    6. '   ' → logprob: -17.0001277923584
    7. '()+' → logprob: -17.2501277923584
    8. '+j' → logprob: -17.2501277923584
    9. '+
' → logprob: -17.3751277923584
    10. '+k' → logprob: -18.5001277923584

Token 266: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. '+' → logprob: -11.75001335144043
    3. ' ' → logprob: -12.25001335144043
    4. '   ' → logprob: -15.75001335144043
    5. 'range' → logprob: -16.50001335144043
    6. '
' → logprob: -17.25001335144043
    7. 'i' → logprob: -17.62501335144043
    8. 'len' → logprob: -18.00001335144043
    9. '       ' → logprob: -18.37501335144043
    10. '```' → logprob: -18.37501335144043

Token 267: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004251608159393072
    2. '1' → logprob: -5.879251480102539
    3. ' +' → logprob: -6.629251480102539
    4. ',' → logprob: -9.129251480102539
    5. '+,' → logprob: -11.629251480102539
    6. '+j' → logprob: -13.004251480102539
    7. ' ' → logprob: -13.379251480102539
    8. '+
' → logprob: -14.379251480102539
    9. '+k' → logprob: -14.504251480102539
    10. '   ' → logprob: -14.629251480102539

Token 268: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000553151941858232
    2. ' len' → logprob: -7.500553131103516
    3. 'k' → logprob: -16.250553131103516
    4. '(len' → logprob: -16.250553131103516
    5. 'length' → logprob: -18.125553131103516
    6. '[len' → logprob: -20.500553131103516
    7. '	len' → logprob: -20.500553131103516
    8. '<len' → logprob: -20.875553131103516
    9. ' k' → logprob: -21.000553131103516
    10. ' ' → logprob: -21.000553131103516

Token 269: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.737475574016571
    2. 'len' → logprob: -0.737475574016571
    3. '(s' → logprob: -3.862475633621216
    4. '(len' → logprob: -3.987475633621216
    5. 'j' → logprob: -5.862475395202637
    6. ' len' → logprob: -8.112475395202637
    7. 'k' → logprob: -8.237475395202637
    8. '(j' → logprob: -9.612475395202637
    9. 'length' → logprob: -9.737475395202637
    10. 'range' → logprob: -9.737475395202637

Token 270: '))
' (ID: 2210)
  Prédit: '))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))
' → logprob: -0.18190473318099976
    2. '))' → logprob: -1.9319047927856445
    3. '       ' → logprob: -4.8069047927856445
    4. ')' → logprob: -5.3069047927856445
    5. ')
' → logprob: -5.4319047927856445
    6. '+' → logprob: -5.6819047927856445
    7. '),' → logprob: -9.056904792785645
    8. ',' → logprob: -9.181904792785645
    9. 's' → logprob: -9.681904792785645
    10. '   ' → logprob: -9.931904792785645

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018777096644043922
    2. 'for' → logprob: -4.018776893615723
    3. ' for' → logprob: -7.393776893615723
    4. '           ' → logprob: -12.768776893615723
    5. '	' → logprob: -12.893776893615723
    6. '   ' → logprob: -13.143776893615723
    7. ')' → logprob: -13.643776893615723
    8. '               ' → logprob: -14.143776893615723
    9. '	for' → logprob: -14.268776893615723
    10. '
' → logprob: -14.518776893615723

Token 272: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.49516868591308594
    2. '       ' → logprob: -0.9951686859130859
    3. ' for' → logprob: -3.870168685913086
    4. '   ' → logprob: -12.745168685913086
    5. '
' → logprob: -13.245168685913086
    6. '           ' → logprob: -13.370168685913086
    7. 'in' → logprob: -13.370168685913086
    8. ')' → logprob: -13.620168685913086
    9. ' in' → logprob: -13.745168685913086
    10. 'from' → logprob: -13.995168685913086

Token 273: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0031777136027812958
    2. ' k' → logprob: -5.753177642822266
    3. '   ' → logprob: -18.003177642822266
    4. '	k' → logprob: -18.753177642822266
    5. '    ' → logprob: -19.128177642822266
    6. '(k' → logprob: -19.628177642822266
    7. ' ' → logprob: -19.628177642822266
    8. '       ' → logprob: -19.753177642822266
    9. '           ' → logprob: -19.753177642822266
    10. '     ' → logprob: -20.003177642822266

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009868424385786057
    2. 'in' → logprob: -7.1259870529174805
    3. 'range' → logprob: -8.62598705291748
    4. '(range' → logprob: -13.75098705291748
    5. ' range' → logprob: -14.00098705291748
    6. '(j' → logprob: -15.62598705291748
    7. '   ' → logprob: -15.62598705291748
    8. '```' → logprob: -15.75098705291748
    9. ' ' → logprob: -16.250986099243164
    10. ')' → logprob: -16.250986099243164

Token 275: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.025711067020893097
    2. ' range' → logprob: -4.0257110595703125
    3. '(range' → logprob: -5.2757110595703125
    4. '(j' → logprob: -6.0257110595703125
    5. 'j' → logprob: -13.525711059570312
    6. ' j' → logprob: -14.900711059570312
    7. '(len' → logprob: -15.400711059570312
    8. '   ' → logprob: -15.900711059570312
    9. 'Range' → logprob: -16.275711059570312
    10. ' ' → logprob: -16.525711059570312

Token 276: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -8.2994620242971e-06
    2. 'j' → logprob: -11.750008583068848
    3. '(len' → logprob: -15.625008583068848
    4. ' (' → logprob: -15.750008583068848
    5. '[j' → logprob: -18.50000762939453
    6. '(k' → logprob: -18.62500762939453
    7. '   ' → logprob: -18.62500762939453
    8. '(' → logprob: -19.25000762939453
    9. ' j' → logprob: -19.25000762939453
    10. '(i' → logprob: -20.62500762939453

Token 277: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.9875325708417222e-05
    2. ' +' → logprob: -11.125029563903809
    3. '+k' → logprob: -11.250029563903809
    4. '1' → logprob: -13.750029563903809
    5. 'k' → logprob: -14.500029563903809
    6. '()+' → logprob: -14.625029563903809
    7. ')+' → logprob: -17.000030517578125
    8. '+,' → logprob: -18.500030517578125
    9. '+
' → logprob: -18.750030517578125
    10. '+j' → logprob: -19.250030517578125

Token 278: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011439072113716975
    2. 'k' → logprob: -9.125114440917969
    3. '+' → logprob: -12.625114440917969
    4. ' ' → logprob: -13.875114440917969
    5. '(k' → logprob: -14.500114440917969
    6. '+k' → logprob: -15.125114440917969
    7. ' k' → logprob: -15.625114440917969
    8. ',k' → logprob: -16.50011444091797
    9. 'len' → logprob: -17.25011444091797
    10. '(' → logprob: -17.25011444091797

Token 279: ',' (ID: 11)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.2411099672317505
    2. ',' → logprob: -1.7411099672317505
    3. ',len' → logprob: -3.366109848022461
    4. '(k' → logprob: -6.491109848022461
    5. '<len' → logprob: -6.866109848022461
    6. 'len' → logprob: -7.366109848022461
    7. ',k' → logprob: -7.491109848022461
    8. '+' → logprob: -8.741109848022461
    9. '=len' → logprob: -8.741109848022461
    10. 'k' → logprob: -9.116109848022461

Token 280: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0019297054968774319
    2. ' len' → logprob: -6.251929759979248
    3. '(len' → logprob: -13.87692928314209
    4. 'k' → logprob: -17.376930236816406
    5. '   ' → logprob: -17.876930236816406
    6. '  ' → logprob: -18.376930236816406
    7. 'length' → logprob: -18.501930236816406
    8. '<len' → logprob: -18.501930236816406
    9. '	len' → logprob: -18.501930236816406
    10. ' ' → logprob: -18.626930236816406

Token 281: '(s' (ID: 1858)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2530278265476227
    2. '(s' → logprob: -1.5030277967453003
    3. '(len' → logprob: -7.50302791595459
    4. 'len' → logprob: -7.87802791595459
    5. 'k' → logprob: -9.12802791595459
    6. ')' → logprob: -10.75302791595459
    7. 'range' → logprob: -11.62802791595459
    8. '(k' → logprob: -11.75302791595459
    9. ')s' → logprob: -11.75302791595459
    10. 'size' → logprob: -12.87802791595459

Token 282: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.011833544820547104
    2. ')))' → logprob: -4.761833667755127
    3. '))
' → logprob: -5.761833667755127
    4. '))))' → logprob: -10.136833190917969
    5. ')' → logprob: -11.011833190917969
    6. '   ' → logprob: -12.886833190917969
    7. ' ))' → logprob: -13.261833190917969
    8. ' ' → logprob: -13.511833190917969
    9. ')))
' → logprob: -13.636833190917969
    10. ')
' → logprob: -13.636833190917969

Token 283: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012323977425694466
    2. '   ' → logprob: -4.76232385635376
    3. ')
' → logprob: -5.76232385635376
    4. '       ' → logprob: -7.88732385635376
    5. ')return' → logprob: -10.387324333190918
    6. '):' → logprob: -10.512324333190918
    7. '<|end|>' → logprob: -10.637324333190918
    8. '):
' → logprob: -10.762324333190918
    9. '           ' → logprob: -10.762324333190918
    10. '
' → logprob: -11.762324333190918

Token 284: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011509653180837631
    2. ')
' (adapté à ' )
') → logprob: -4.636509418487549
    3. '   ' → logprob: -6.386509418487549
    4. ')return' → logprob: -10.136509895324707
    5. 'return' → logprob: -10.761509895324707
    6. ')

' → logprob: -12.761509895324707
    7. '))' → logprob: -13.636509895324707
    8. ')
' → logprob: -14.011509895324707
    9. ' )' → logprob: -14.886509895324707
    10. 'def' → logprob: -15.011509895324707

Token 285: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002777822664938867
    2. 'return' → logprob: -8.750277519226074
    3. ' return' → logprob: -9.750277519226074
    4. '
' → logprob: -10.500277519226074
    5. '    
' → logprob: -11.000277519226074
    6. '<|end|>' → logprob: -11.125277519226074
    7. '<|end|>' → logprob: -14.875277519226074
    8. '  ' → logprob: -15.000277519226074
    9. '	return' → logprob: -15.375277519226074
    10. ')' → logprob: -15.500277519226074

Token 286: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6508387327194214
    2. '   ' → logprob: -0.7758387327194214
    3. ' return' → logprob: -4.025838851928711
    4. '
' → logprob: -9.775838851928711
    5. ')' → logprob: -10.025838851928711
    6. '    
' → logprob: -10.400838851928711
    7. ' ' → logprob: -10.650838851928711
    8. 'for' → logprob: -10.900838851928711
    9. '  ' → logprob: -11.150838851928711
    10. '#' → logprob: -11.525838851928711

Token 287: ' len' (ID: 4631)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.0036469954065978527
    2. ' pairs' → logprob: -6.1286468505859375
    3. 'trip' → logprob: -7.5036468505859375
    4. 'len' → logprob: -7.8786468505859375
    5. '(p' → logprob: -8.253646850585938
    6. 'p' → logprob: -9.878646850585938
    7. 'pair' → logprob: -10.128646850585938
    8. '{' → logprob: -10.253646850585938
    9. 's' → logprob: -10.628646850585938
    10. '[p' → logprob: -10.753646850585938

Token 288: '(tr' (ID: 14363)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.056631069630384445
    2. '(tr' → logprob: -2.931631088256836
    3. '(e' → logprob: -7.181631088256836
    4. '(s' → logprob: -7.181631088256836
    5. 'trip' → logprob: -9.431631088256836
    6. '(' → logprob: -10.056631088256836
    7. '(g' → logprob: -10.681631088256836
    8. '(pair' → logprob: -10.806631088256836
    9. '(set' → logprob: -10.931631088256836
    10. 'tr' → logprob: -11.681631088256836

Token 289: 'ip' (ID: 488)
  Prédit: 'ip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ip' → logprob: -0.004494208376854658
    2. 'ips' → logprob: -5.8794941902160645
    3. 'iples' → logprob: -6.5044941902160645
    4. '(p' → logprob: -9.379494667053223
    5. '(tr' → logprob: -10.754494667053223
    6. 'trip' → logprob: -11.004494667053223
    7. 'ipts' → logprob: -11.129494667053223
    8. '(ip' → logprob: -11.629494667053223
    9. 'p' → logprob: -12.129494667053223
    10. 'ipit' → logprob: -12.129494667053223

Token 290: 'lets' (ID: 12222)
  Prédit: 'lets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lets' → logprob: -6.988221684878226e-06
    2. 'let' → logprob: -12.750006675720215
    3. 'ets' → logprob: -13.500006675720215
    4. 'its' → logprob: -13.500006675720215
    5. 'sets' → logprob: -13.750006675720215
    6. 'plets' → logprob: -15.750006675720215
    7. 's' → logprob: -16.50000762939453
    8. '(' → logprob: -17.87500762939453
    9. 'ts' → logprob: -18.50000762939453
    10. 'bits' → logprob: -18.87500762939453

Token 291: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0035830873530358076
    2. '),' → logprob: -6.503582954406738
    3. ',' → logprob: -6.878582954406738
    4. ' )' → logprob: -7.378582954406738
    5. '())' → logprob: -8.253582954406738
    6. ')+' → logprob: -10.253582954406738
    7. '()' → logprob: -10.628582954406738
    8. '+' → logprob: -10.878582954406738
    9. ' ' → logprob: -11.128582954406738
    10. ' ,' → logprob: -11.378582954406738

Token 292: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05303240939974785
    2. '#' → logprob: -4.053032398223877
    3. '<|end|>' → logprob: -4.553032398223877
    4. 'trip' → logprob: -5.428032398223877
    5. '(' → logprob: -5.553032398223877
    6. 'g' → logprob: -5.553032398223877
    7. 'print' → logprob: -5.928032398223877
    8. 's' → logprob: -6.553032398223877
    9. 'return' → logprob: -6.678032398223877
    10. '()' → logprob: -6.928032398223877

Token 293: '(e' (ID: 3454)
  Prédit: '(e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(e' → logprob: -0.00018101456225849688
    2. '(' → logprob: -8.625181198120117
    3. '(len' → logprob: -13.875181198120117
    4. '(el' → logprob: -15.125181198120117
    5. '(
' → logprob: -16.625181198120117
    6. '(ele' → logprob: -16.625181198120117
    7. '(s' → logprob: -17.125181198120117
    8. '()' → logprob: -17.875181198120117
    9. ' (' → logprob: -18.125181198120117
    10. '((' → logprob: -18.500181198120117

Token 294: 'leg' (ID: 2001)
  Prédit: 'leg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'leg' → logprob: -0.0017013642936944962
    2. 'l' → logprob: -6.626701354980469
    3. 'lg' → logprob: -8.376701354980469
    4. '(' → logprob: -10.251701354980469
    5. 'lag' → logprob: -10.501701354980469
    6. 'лег' → logprob: -10.876701354980469
    7. 'lig' → logprob: -11.376701354980469
    8. 'g' → logprob: -11.626701354980469
    9. '```' → logprob: -11.876701354980469
    10. 'le' → logprob: -12.001701354980469

Token 295: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -1.0683535037969705e-05
    2. 's' → logprob: -11.62501049041748
    3. 'gant' → logprob: -14.25001049041748
    4. '(' → logprob: -14.75001049041748
    5. 'ent' → logprob: -15.25001049041748
    6. 'ант' → logprob: -16.000011444091797
    7. '```' → logprob: -16.625011444091797
    8. '[' → logprob: -17.500011444091797
    9. 'ants' → logprob: -17.500011444091797
    10. 'antt' → logprob: -17.500011444091797

Token 296: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.47495681833243e-05
    2. '(' → logprob: -10.750024795532227
    3. ')' → logprob: -13.125024795532227
    4. 's' → logprob: -13.875024795532227
    5. ')(' → logprob: -15.625024795532227
    6. ' (' → logprob: -15.875024795532227
    7. '(
' → logprob: -17.875024795532227
    8. ')s' → logprob: -18.000024795532227
    9. ',' → logprob: -18.625024795532227
    10. '(ss' → logprob: -19.375024795532227

Token 297: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.038042180240154266
    2. ')' → logprob: -3.2880420684814453
    3. ')))' → logprob: -14.788042068481445
    4. '))
' → logprob: -15.663042068481445
    5. '()))' → logprob: -16.913042068481445
    6. '})' → logprob: -17.163042068481445
    7. '())' → logprob: -17.538042068481445
    8. ')
' → logprob: -17.663042068481445
    9. ')}' → logprob: -18.288042068481445
    10. '),' → logprob: -18.288042068481445


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 295
Tokens correctement prédits (1ère position, stricte): 108
Tokens correctement prédits (1ère position, avec adaptation): 114
Tokens correctement prédits (top 10): 218
Précision stricte (1ère position): 36.61%
Précision adaptée (1ère position): 38.64%
Précision (top 10): 73.90%
================================================================================
