================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:46
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A,B,M=map(int,input().split())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
X=[]
Y=[]
C=[]
for _ in range(M):
    x,y,c=map(int,input().split())
    X.append(x)
    Y.append(y)
    C.append(c)
no_coupon=min(a)+min(b)
total=[]
for i in range(M):
    total.append(a[X[i]-1]+b[Y[i]-1]-C[i])
with_coupon=min(total)
print(min(no_coupon,with_coupon))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',B' (ID: 19853)
  → Token d'amorce (pas de prédiction)

Token 2: ',M' (ID: 54127)
  → Token d'amorce (pas de prédiction)

Token 3: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03660744056105614
    2. ' =' → logprob: -3.911607503890991
    3. ',' → logprob: -4.411607265472412
    4. ';' → logprob: -6.536607265472412
    5. '.' → logprob: -7.661607265472412
    6. ')' → logprob: -7.661607265472412
    7. '[' → logprob: -8.03660774230957
    8. '+' → logprob: -8.28660774230957
    9. '(' → logprob: -8.66160774230957
    10. '```' → logprob: -8.91160774230957

Token 4: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.552822470664978
    2. ' ' → logprob: -2.1778225898742676
    3. 'map' → logprob: -2.4278225898742676
    4. '1' → logprob: -2.5528225898742676
    5. '10' → logprob: -2.8028225898742676
    6. '[]' → logprob: -3.6778225898742676
    7. ' map' → logprob: -4.052822589874268
    8. 'input' → logprob: -4.677822589874268
    9. '3' → logprob: -5.302822589874268
    10. '5' → logprob: -5.552822589874268

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40500497817993164
    2. '<|end|>' → logprob: -1.1550049781799316
    3. '(lambda' → logprob: -4.655004978179932
    4. '(int' → logprob: -5.280004978179932
    5. '<|end|>' → logprob: -7.030004978179932
    6. '```' → logprob: -7.405004978179932
    7. ')' → logprob: -7.530004978179932
    8. '(user' → logprob: -8.905004501342773
    9. '(code' → logprob: -9.405004501342773
    10. '(input' → logprob: -9.405004501342773

Token 6: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03381927311420441
    2. '(input' → logprob: -4.033819198608398
    3. '<|end|>' → logprob: -5.533819198608398
    4. '(' → logprob: -6.033819198608398
    5. '`)' → logprob: -7.158819198608398
    6. ')(' → logprob: -7.158819198608398
    7. '<|end|>' → logprob: -7.158819198608398
    8. '(user' → logprob: -7.283819198608398
    9. '```' → logprob: -7.283819198608398
    10. '(A' → logprob: -7.408819198608398

Token 7: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6325600743293762
    2. '()' → logprob: -1.0075600147247314
    3. ')' → logprob: -3.1325600147247314
    4. '(' → logprob: -3.5075600147247314
    5. '().' → logprob: -3.8825600147247314
    6. '('' → logprob: -6.5075602531433105
    7. '`()' → logprob: -6.7575602531433105
    8. '(()' → logprob: -6.8825602531433105
    9. '()>' → logprob: -7.1325602531433105
    10. '();)' → logprob: -7.2575602531433105

Token 8: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00020008347928524017
    2. ')' → logprob: -8.875200271606445
    3. ' split' → logprob: -10.625200271606445
    4. 'strip' → logprob: -11.000200271606445
    5. 'spl' → logprob: -11.750200271606445
    6. '(split' → logprob: -11.750200271606445
    7. 'rstrip' → logprob: -13.625200271606445
    8. '<|end|>' → logprob: -14.125200271606445
    9. 'read' → logprob: -15.125200271606445
    10. 'startswith' → logprob: -15.500200271606445

Token 9: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006303803995251656
    2. '())' → logprob: -5.256303787231445
    3. '))' → logprob: -7.381303787231445
    4. '()' → logprob: -8.631303787231445
    5. '`)' → logprob: -8.756303787231445
    6. '(' → logprob: -10.131303787231445
    7. ')`' → logprob: -10.631303787231445
    8. '```' → logprob: -11.631303787231445
    9. ' )' → logprob: -12.256303787231445
    10. '),' → logprob: -12.881303787231445

Token 10: 'a' (ID: 64)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7686475515365601
    2. '#' → logprob: -1.26864755153656
    3. '*' → logprob: -2.5186476707458496
    4. ',' → logprob: -3.7686476707458496
    5. 'if' → logprob: -3.7686476707458496
    6. '
' → logprob: -4.01864767074585
    7. '+
' → logprob: -4.14364767074585
    8. 'c' → logprob: -4.14364767074585
    9. '```' → logprob: -4.64364767074585
    10. '\n' → logprob: -4.64364767074585

Token 11: '=list' (ID: 93413)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0891168117523193
    2. '=' → logprob: -1.2141168117523193
    3. '[' → logprob: -1.7141168117523193
    4. '.' → logprob: -1.9641168117523193
    5. ' =' → logprob: -4.089117050170898
    6. '_' → logprob: -5.089117050170898
    7. ',b' → logprob: -5.214117050170898
    8. ')' → logprob: -5.339117050170898
    9. 'r' → logprob: -6.339117050170898
    10. '[i' → logprob: -6.464117050170898

Token 12: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002043913584202528
    2. '(a' → logprob: -6.627043724060059
    3. '()' → logprob: -8.877043724060059
    4. '(input' → logprob: -9.002043724060059
    5. '(int' → logprob: -9.377043724060059
    6. '(A' → logprob: -9.752043724060059
    7. '(
' → logprob: -9.877043724060059
    8. '((' → logprob: -10.002043724060059
    9. '(range' → logprob: -10.252043724060059
    10. '("("' → logprob: -10.627043724060059

Token 13: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01270670909434557
    2. '(' → logprob: -4.387706756591797
    3. '(input' → logprob: -9.387706756591797
    4. '<int' → logprob: -10.012706756591797
    5. '[int' → logprob: -11.137706756591797
    6. 'int' → logprob: -11.137706756591797
    7. ')' → logprob: -11.887706756591797
    8. '(
' → logprob: -12.012706756591797
    9. '=int' → logprob: -12.137706756591797
    10. '(str' → logprob: -12.262706756591797

Token 14: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007698314264416695
    2. ',input' → logprob: -5.0076985359191895
    3. '(' → logprob: -7.3826985359191895
    4. '(int' → logprob: -8.257698059082031
    5. '=input' → logprob: -10.257698059082031
    6. ' (' → logprob: -10.757698059082031
    7. ',' → logprob: -11.132698059082031
    8. ')' → logprob: -11.757698059082031
    9. 'input' → logprob: -12.132698059082031
    10. '<input' → logprob: -12.382698059082031

Token 15: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.001274877111427486
    2. '()' → logprob: -7.251275062561035
    3. '(' → logprob: -8.001275062561035
    4. ' ().' → logprob: -9.876275062561035
    5. '())' → logprob: -10.126275062561035
    6. '()))' → logprob: -10.626275062561035
    7. ')' → logprob: -10.876275062561035
    8. '(.' → logprob: -11.126275062561035
    9. '()));' → logprob: -11.251275062561035
    10. '()>' → logprob: -12.501275062561035

Token 16: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -14.375000953674316
    3. 'strip' → logprob: -14.750000953674316
    4. '(split' → logprob: -15.875000953674316
    5. 'spl' → logprob: -16.375001907348633
    6. 'rstrip' → logprob: -17.750001907348633
    7. 'plit' → logprob: -20.000001907348633
    8. ')' → logprob: -20.625001907348633
    9. '_split' → logprob: -21.000001907348633
    10. 's' → logprob: -21.000001907348633

Token 17: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1906121969223022
    2. '()))' → logprob: -1.3156121969223022
    3. '))' → logprob: -1.6906121969223022
    4. '())' → logprob: -1.8156121969223022
    5. '(' → logprob: -2.565612316131592
    6. '()' → logprob: -6.190612316131592
    7. '('' → logprob: -7.190612316131592
    8. ')))' → logprob: -9.190611839294434
    9. '())))' → logprob: -9.440611839294434
    10. '(""))' → logprob: -9.565611839294434

Token 18: 'b' (ID: 65)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19707421958446503
    2. 'c' → logprob: -2.1970741748809814
    3. 's' → logprob: -3.3220741748809814
    4. 'b' → logprob: -4.1970744132995605
    5. 'm' → logprob: -5.1970744132995605
    6. 'for' → logprob: -5.9470744132995605
    7. '.' → logprob: -6.3220744132995605
    8. 'result' → logprob: -6.6970744132995605
    9. 'count' → logprob: -6.9470744132995605
    10. '```' → logprob: -7.3220744132995605

Token 19: '=list' (ID: 93413)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00030114251421764493
    2. '[' → logprob: -8.625301361083984
    3. '=' → logprob: -10.125301361083984
    4. ' =' → logprob: -10.625301361083984
    5. '.=' → logprob: -10.625301361083984
    6. '.append' → logprob: -11.500301361083984
    7. '[:]' → logprob: -12.375301361083984
    8. '.setdefault' → logprob: -13.000301361083984
    9. '.[' → logprob: -13.375301361083984
    10. ' .' → logprob: -13.500301361083984

Token 20: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00786544382572174
    2. '(map' → logprob: -5.1328654289245605
    3. '(.' → logprob: -6.8828654289245605
    4. '(int' → logprob: -8.007865905761719
    5. '((' → logprob: -9.007865905761719
    6. '(list' → logprob: -9.507865905761719
    7. '(input' → logprob: -9.882865905761719
    8. ' (' → logprob: -10.632865905761719
    9. '(eval' → logprob: -10.632865905761719
    10. '(
' → logprob: -10.757865905761719

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00010092071170220152
    2. '(' → logprob: -10.125101089477539
    3. '<int' → logprob: -10.500101089477539
    4. 'int' → logprob: -10.625101089477539
    5. '=int' → logprob: -12.000101089477539
    6. '[int' → logprob: -13.125101089477539
    7. ',int' → logprob: -15.375101089477539
    8. '```' → logprob: -15.625101089477539
    9. ']int' → logprob: -16.00010108947754
    10. ' (' → logprob: -16.37510108947754

Token 22: ',input' (ID: 123014)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.01634577289223671
    2. '(input' → logprob: -4.516345977783203
    3. ',int' → logprob: -6.016345977783203
    4. '=int' → logprob: -6.891345977783203
    5. 'int' → logprob: -7.016345977783203
    6. '<int' → logprob: -7.891345977783203
    7. '```' → logprob: -8.891345977783203
    8. '[int' → logprob: -9.141345977783203
    9. ',input' → logprob: -9.266345977783203
    10. '(' → logprob: -9.641345977783203

Token 23: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0314224548637867
    2. '(int' → logprob: -3.5314223766326904
    3. '()' → logprob: -7.0314226150512695
    4. '.int' → logprob: -8.40642261505127
    5. '(' → logprob: -8.78142261505127
    6. '=int' → logprob: -9.03142261505127
    7. '<int' → logprob: -9.78142261505127
    8. '```' → logprob: -10.40642261505127
    9. '[int' → logprob: -10.53142261505127
    10. '.' → logprob: -10.53142261505127

Token 24: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.750000953674316
    3. 'spl' → logprob: -16.875
    4. ')' → logprob: -17.125
    5. 'int' → logprob: -17.125
    6. '(split' → logprob: -17.375
    7. '```' → logprob: -17.625
    8. 'strip' → logprob: -18.125
    9. 's' → logprob: -18.75
    10. '_split' → logprob: -18.875

Token 25: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.888390064239502
    2. '))' → logprob: -1.263390064239502
    3. ')' → logprob: -1.638390064239502
    4. '())' → logprob: -2.263390064239502
    5. '()' → logprob: -4.888390064239502
    6. '(' → logprob: -9.763389587402344
    7. '()))
' → logprob: -10.763389587402344
    8. '()));' → logprob: -11.013389587402344
    9. ')))' → logprob: -11.138389587402344
    10. ' ())' → logprob: -12.138389587402344

Token 26: 'X' (ID: 55)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3832702040672302
    2. 'a' → logprob: -1.383270263671875
    3. 'for' → logprob: -3.383270263671875
    4. 'result' → logprob: -4.133270263671875
    5. 'm' → logprob: -5.883270263671875
    6. 'res' → logprob: -6.133270263671875
    7. 'b' → logprob: -6.133270263671875
    8. 'r' → logprob: -6.383270263671875
    9. 's' → logprob: -6.508270263671875
    10. 'count' → logprob: -6.883270263671875

Token 27: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023446490988135338
    2. ' =' → logprob: -4.023446559906006
    3. '=[]' → logprob: -5.773446559906006
    4. ',' → logprob: -6.773446559906006
    5. '=[' → logprob: -8.023446083068848
    6. '_' → logprob: -8.773446083068848
    7. '.' → logprob: -9.148446083068848
    8. '[' → logprob: -9.648446083068848
    9. ')' → logprob: -9.648446083068848
    10. '=int' → logprob: -9.648446083068848

Token 28: 'Y' (ID: 56)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01703241467475891
    2. '=' → logprob: -4.642032623291016
    3. 'i' → logprob: -5.767032623291016
    4. '.' → logprob: -6.267032623291016
    5. ' for' → logprob: -6.642032623291016
    6. 'a' → logprob: -7.517032623291016
    7. 'A' → logprob: -9.642032623291016
    8. '```' → logprob: -9.892032623291016
    9. '+' → logprob: -10.017032623291016
    10. 'f' → logprob: -10.267032623291016

Token 29: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0010823521297425032
    2. '=[]' → logprob: -7.876082420349121
    3. '.' → logprob: -8.126082420349121
    4. ' =' → logprob: -8.251082420349121
    5. ',' → logprob: -9.501082420349121
    6. '+=' → logprob: -11.501082420349121
    7. '[' → logprob: -11.626082420349121
    8. '.=' → logprob: -11.751082420349121
    9. '.append' → logprob: -12.001082420349121
    10. '=

' → logprob: -12.001082420349121

Token 30: 'C' (ID: 34)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0031704644206911325
    2. 'i' → logprob: -6.378170490264893
    3. '=' → logprob: -7.253170490264893
    4. ' for' → logprob: -7.878170490264893
    5. 'f' → logprob: -8.753170013427734
    6. '.' → logprob: -9.378170013427734
    7. 'a' → logprob: -9.878170013427734
    8. 'A' → logprob: -10.503170013427734
    9. 'x' → logprob: -11.628170013427734
    10. 'n' → logprob: -12.003170013427734

Token 31: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10155581682920456
    2. '=[]' → logprob: -2.351555824279785
    3. ' =' → logprob: -7.601555824279785
    4. '.' → logprob: -8.351555824279785
    5. '=[' → logprob: -8.976555824279785
    6. ',' → logprob: -9.351555824279785
    7. '[:]' → logprob: -9.976555824279785
    8. '=list' → logprob: -10.351555824279785
    9. 'ount' → logprob: -10.351555824279785
    10. '.append' → logprob: -10.601555824279785

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00016861737822182477
    2. ' for' → logprob: -9.000168800354004
    3. 'i' → logprob: -10.875168800354004
    4. 'f' → logprob: -11.250168800354004
    5. '=' → logprob: -12.625168800354004
    6. '.' → logprob: -12.625168800354004
    7. ':' → logprob: -13.875168800354004
    8. '<|end|>' → logprob: -14.000168800354004
    9. 'F' → logprob: -14.125168800354004
    10. '```' → logprob: -14.625168800354004

Token 33: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.005975957959890366
    2. ' ' → logprob: -5.880975723266602
    3. 'i' → logprob: -6.005975723266602
    4. ' _' → logprob: -7.380975723266602
    5. '_' → logprob: -10.880975723266602
    6. ' ' → logprob: -10.880975723266602
    7. ' x' → logprob: -11.005975723266602
    8. '  ' → logprob: -12.005975723266602
    9. ' I' → logprob: -12.130975723266602
    10. ' A' → logprob: -12.255975723266602

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2524251639842987
    2. 'in' → logprob: -1.502425193786621
    3. ' ' → logprob: -8.502425193786621
    4. 'n' → logprob: -9.127425193786621
    5. 'i' → logprob: -9.502425193786621
    6. 'range' → logprob: -10.502425193786621
    7. '```' → logprob: -11.752425193786621
    8. 'import' → logprob: -11.877425193786621
    9. 'I' → logprob: -12.127425193786621
    10. 's' → logprob: -12.127425193786621

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0049753207713365555
    2. ' range' → logprob: -5.379975318908691
    3. 'a' → logprob: -8.129975318908691
    4. 'b' → logprob: -11.504975318908691
    5. '(range' → logprob: -11.629975318908691
    6. 'r' → logprob: -12.004975318908691
    7. 'ange' → logprob: -12.379975318908691
    8. '```' → logprob: -12.504975318908691
    9. ' a' → logprob: -12.754975318908691
    10. 'rang' → logprob: -12.879975318908691

Token 36: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.06379247456789017
    2. '(A' → logprob: -3.1887924671173096
    3. '(B' → logprob: -4.313792705535889
    4. '(' → logprob: -4.938792705535889
    5. '(range' → logprob: -11.31379222869873
    6. '(m' → logprob: -12.18879222869873
    7. '(int' → logprob: -12.56379222869873
    8. ' (' → logprob: -13.31379222869873
    9. '(a' → logprob: -13.43879222869873
    10. '((' → logprob: -13.68879222869873

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0027297406923025846
    2. ')' → logprob: -6.127729892730713
    3. ':' → logprob: -8.002729415893555
    4. '+' → logprob: -8.877729415893555
    5. '):
' → logprob: -10.002729415893555
    6. ' ):' → logprob: -10.877729415893555
    7. '+:' → logprob: -13.627729415893555
    8. '():' → logprob: -14.377729415893555
    9. ',' → logprob: -14.502729415893555
    10. '>:' → logprob: -14.627729415893555

Token 38: '   ' (ID: 271)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1671772003173828
    2. 'C' → logprob: -1.7921772003173828
    3. '   ' → logprob: -1.9171772003173828
    4. 'x' → logprob: -2.042177200317383
    5. 'a' → logprob: -2.292177200317383
    6. 'A' → logprob: -3.792177200317383
    7. '```' → logprob: -4.042177200317383
    8. 'X' → logprob: -4.292177200317383
    9. ' c' → logprob: -4.292177200317383
    10. 't' → logprob: -4.542177200317383

Token 39: ' x' (ID: 1215)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2937420904636383
    2. 'x' (adapté à ' x') → logprob: -1.543742060661316
    3. 'C' → logprob: -3.7937421798706055
    4. 'a' → logprob: -4.4187421798706055
    5. 'i' → logprob: -7.1687421798706055
    6. 'A' → logprob: -7.1687421798706055
    7. '_c' → logprob: -7.1687421798706055
    8. 's' → logprob: -7.2937421798706055
    9. 'u' → logprob: -7.5437421798706055
    10. '_' → logprob: -7.5437421798706055

Token 40: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.04395027831196785
    2. ',' → logprob: -3.168950319290161
    3. 'y' → logprob: -7.418950080871582
    4. ',Y' → logprob: -8.918950080871582
    5. ',c' → logprob: -9.793950080871582
    6. ' ,' → logprob: -10.293950080871582
    7. ',a' → logprob: -10.543950080871582
    8. ',i' → logprob: -10.918950080871582
    9. ',int' → logprob: -11.293950080871582
    10. '_,' → logprob: -11.543950080871582

Token 41: ',c' (ID: 22261)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0019737191032618284
    2. ' =' → logprob: -6.751973628997803
    3. '=input' → logprob: -7.251973628997803
    4. '=int' → logprob: -9.376974105834961
    5. '=list' → logprob: -12.001974105834961
    6. '=line' → logprob: -13.501974105834961
    7. '=value' → logprob: -15.501974105834961
    8. '_=' → logprob: -15.626974105834961
    9. '=_' → logprob: -15.626974105834961
    10. '   ' → logprob: -15.751974105834961

Token 42: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00044783088378608227
    2. '=input' → logprob: -8.250448226928711
    3. ' =' → logprob: -8.750448226928711
    4. '=int' → logprob: -10.625448226928711
    5. '=list' → logprob: -13.875448226928711
    6. '=line' → logprob: -14.125448226928711
    7. '=i' → logprob: -14.625448226928711
    8. '=_' → logprob: -15.375448226928711
    9. '=`' → logprob: -15.375448226928711
    10. '_=' → logprob: -15.875448226928711

Token 43: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0019289902411401272
    2. ' map' → logprob: -6.251928806304932
    3. '	map' → logprob: -15.50192928314209
    4. 'input' → logprob: -16.376928329467773
    5. 'list' → logprob: -17.251928329467773
    6. '(map' → logprob: -18.126928329467773
    7. 'tuple' → logprob: -20.001928329467773
    8. '.map' → logprob: -20.376928329467773
    9. ' ' → logprob: -20.501928329467773
    10. '_map' → logprob: -20.751928329467773

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -1.8908587662735954e-05
    2. 'int' → logprob: -11.875019073486328
    3. '<int' → logprob: -12.000019073486328
    4. '[int' → logprob: -12.875019073486328
    5. '=int' → logprob: -13.125019073486328
    6. '(input' → logprob: -14.875019073486328
    7. ',int' → logprob: -15.000019073486328
    8. '(' → logprob: -15.875019073486328
    9. ']int' → logprob: -16.125019073486328
    10. '```' → logprob: -16.750019073486328

Token 45: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0042251357808709145
    2. ',' → logprob: -6.004225254058838
    3. '(input' → logprob: -6.879225254058838
    4. ',int' → logprob: -7.629225254058838
    5. 'input' → logprob: -9.12922477722168
    6. '<|end|>' → logprob: -9.87922477722168
    7. '(),' → logprob: -10.62922477722168
    8. '(' → logprob: -11.25422477722168
    9. ')' → logprob: -12.00422477722168
    10. '```' → logprob: -12.12922477722168

Token 46: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.300083648762666e-05
    2. '()' → logprob: -10.125053405761719
    3. '.' → logprob: -12.125053405761719
    4. ' ().' → logprob: -13.250053405761719
    5. '.readline' → logprob: -13.625053405761719
    6. '>().' → logprob: -14.125053405761719
    7. ')' → logprob: -14.125053405761719
    8. '())' → logprob: -14.250053405761719
    9. '('').' → logprob: -15.000053405761719
    10. '().__' → logprob: -15.875053405761719

Token 47: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.25
    3. 'spl' → logprob: -16.375
    4. '(split' → logprob: -17.375
    5. 'strip' → logprob: -18.375
    6. ')' → logprob: -18.5
    7. 'plit' → logprob: -19.5
    8. 's' → logprob: -20.375
    9. 'rstrip' → logprob: -20.625
    10. '.split' → logprob: -21.125

Token 48: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.03416057676076889
    2. ')' → logprob: -4.034160614013672
    3. '()' → logprob: -4.159160614013672
    4. '())
' → logprob: -8.409160614013672
    5. '()))' → logprob: -11.659160614013672
    6. '();)' → logprob: -12.034160614013672
    7. '())

' → logprob: -12.409160614013672
    8. '());' → logprob: -12.534160614013672
    9. ' ())' → logprob: -12.534160614013672
    10. '(' → logprob: -12.534160614013672

Token 49: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 50: ' X' (ID: 2127)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.3403140604496002
    2. 'X' (adapté à ' X') → logprob: -1.3403140306472778
    3. '<|end|>' → logprob: -3.7153141498565674
    4. ' C' → logprob: -6.965313911437988
    5. '   ' → logprob: -7.840313911437988
    6. ' ' → logprob: -8.215313911437988
    7. ' X' → logprob: -8.340313911437988
    8. 'x' → logprob: -9.715313911437988
    9. '```' → logprob: -9.840313911437988
    10. ')' → logprob: -9.840313911437988

Token 51: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003804949577897787
    2. '.' → logprob: -5.628805160522461
    3. '.app' → logprob: -8.753805160522461
    4. '.ap' → logprob: -10.753805160522461
    5. '.Append' → logprob: -11.753805160522461
    6. '.push' → logprob: -11.878805160522461
    7. '.add' → logprob: -12.878805160522461
    8. '.extend' → logprob: -13.003805160522461
    9. '.py' → logprob: -13.503805160522461
    10. '.p' → logprob: -13.628805160522461

Token 52: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.011048528365790844
    2. '(' → logprob: -4.511048316955566
    3. '(X' → logprob: -15.261048316955566
    4. '((' → logprob: -15.511048316955566
    5. '(
' → logprob: -15.761048316955566
    6. 'x' → logprob: -16.136049270629883
    7. ' (' → logprob: -17.761049270629883
    8. '(xs' → logprob: -18.761049270629883
    9. '(

' → logprob: -18.886049270629883
    10. '(int' → logprob: -19.886049270629883

Token 53: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. ' )' → logprob: -10.375042915344238
    3. ')
' → logprob: -11.500042915344238
    4. '),' → logprob: -14.875042915344238
    5. '))' → logprob: -15.375042915344238
    6. ')#' → logprob: -15.875042915344238
    7. ')y' → logprob: -15.875042915344238
    8. ')

' → logprob: -16.625041961669922
    9. ')`' → logprob: -16.875041961669922
    10. '')' → logprob: -16.875041961669922

Token 54: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: ' Y' (ID: 865)
  Prédit: 'Y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Y' (adapté à ' Y') → logprob: -5.0020742492051795e-05
    2. ' Y' → logprob: -10.250049591064453
    3. 'y' → logprob: -11.875049591064453
    4. '<|end|>' → logprob: -11.875049591064453
    5. '   ' → logprob: -15.125049591064453
    6. ' ' → logprob: -15.250049591064453
    7. '	Y' → logprob: -16.625049591064453
    8. '<|end|>' → logprob: -17.750049591064453
    9. '    ' → logprob: -18.125049591064453
    10. '```' → logprob: -18.250049591064453

Token 56: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.3135024607181549
    2. '.' → logprob: -1.3135024309158325
    3. '<|end|>' → logprob: -9.188502311706543
    4. ').' → logprob: -10.063502311706543
    5. ' .' → logprob: -10.063502311706543
    6. '.extend' → logprob: -10.688502311706543
    7. '.setdefault' → logprob: -10.938502311706543
    8. '.Append' → logprob: -12.938502311706543
    9. '.add' → logprob: -13.688502311706543
    10. '<|end|>' → logprob: -13.688502311706543

Token 57: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.003606959478929639
    2. '(' → logprob: -5.628606796264648
    3. 'y' → logprob: -12.378606796264648
    4. ' (' → logprob: -13.753606796264648
    5. '(Y' → logprob: -14.628606796264648
    6. ')' → logprob: -14.628606796264648
    7. ')y' → logprob: -15.628606796264648
    8. '(
' → logprob: -15.753606796264648
    9. '<|end|>' → logprob: -16.12860679626465
    10. '(x' → logprob: -16.25360679626465

Token 58: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04868592321872711
    2. ')
' → logprob: -3.0486860275268555
    3. ')c' → logprob: -9.423686027526855
    4. ')
' → logprob: -11.673686027526855
    5. ' )' → logprob: -12.673686027526855
    6. '   ' → logprob: -12.798686027526855
    7. ')

' → logprob: -13.548686027526855
    8. ' )
' → logprob: -13.923686027526855
    9. '),' → logprob: -15.173686027526855
    10. '<|end|>' → logprob: -15.173686027526855

Token 59: '   ' (ID: 271)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.31551799178123474
    2. '   ' → logprob: -1.3155180215835571
    3. ' C' → logprob: -7.065517902374268
    4. '```' → logprob: -7.190517902374268
    5. 'c' → logprob: -7.690517902374268
    6. '<|end|>' → logprob: -9.315518379211426
    7. '``' → logprob: -9.690518379211426
    8. ' ' → logprob: -11.690518379211426
    9. ')' → logprob: -12.065518379211426
    10. '  ' → logprob: -12.315518379211426

Token 60: ' C' (ID: 363)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.029765060171484947
    2. 'C' (adapté à ' C') → logprob: -3.5297651290893555
    3. ' c' → logprob: -11.279765129089355
    4. '   ' → logprob: -13.904765129089355
    5. ' C' → logprob: -14.904765129089355
    6. '```' → logprob: -15.029765129089355
    7. '<|end|>' → logprob: -15.529765129089355
    8. ')c' → logprob: -15.654765129089355
    9. ' ' → logprob: -17.27976417541504
    10. '_c' → logprob: -17.40476417541504

Token 61: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0036181241739541292
    2. '.' → logprob: -5.628618240356445
    3. '.app' → logprob: -12.128618240356445
    4. '.push' → logprob: -12.503618240356445
    5. '.extend' → logprob: -13.003618240356445
    6. '.ap' → logprob: -13.503618240356445
    7. '.setdefault' → logprob: -13.503618240356445
    8. '.add' → logprob: -14.128618240356445
    9. '.py' → logprob: -14.253618240356445
    10. ' .' → logprob: -14.378618240356445

Token 62: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.526570384972729e-05
    2. 'c' → logprob: -9.875055313110352
    3. '(' → logprob: -12.500055313110352
    4. '(
' → logprob: -18.37505531311035
    5. ')c' → logprob: -18.50005531311035
    6. ' (' → logprob: -19.75005531311035
    7. '(C' → logprob: -19.75005531311035
    8. ' c' → logprob: -20.12505531311035
    9. '	c' → logprob: -20.37505531311035
    10. '(abs' → logprob: -21.62505531311035

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ')
' → logprob: -13.750001907348633
    3. ' )' → logprob: -15.375001907348633
    4. '))' → logprob: -15.875001907348633
    5. '`)' → logprob: -18.875001907348633
    6. ')`' → logprob: -19.125001907348633
    7. '),' → logprob: -19.375001907348633
    8. ')

' → logprob: -19.375001907348633
    9. ')return' → logprob: -19.500001907348633
    10. ')#' → logprob: -19.750001907348633

Token 64: 'no' (ID: 1750)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17506031692028046
    2. 'for' → logprob: -2.675060272216797
    3. 'ans' → logprob: -4.425060272216797
    4. 'DP' → logprob: -4.675060272216797
    5. 'result' → logprob: -4.675060272216797
    6. 'D' → logprob: -4.800060272216797
    7. 'd' → logprob: -4.800060272216797
    8. 'dist' → logprob: -4.800060272216797
    9. 'max' → logprob: -5.175060272216797
    10. 'answer' → logprob: -5.300060272216797

Token 65: '_coupon' (ID: 197395)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2466571182012558
    2. 'w' → logprob: -2.121657133102417
    3. 'de' → logprob: -2.746657133102417
    4. 'ne' → logprob: -3.621657133102417
    5. 'te' → logprob: -5.746656894683838
    6. 'r' → logprob: -5.871656894683838
    7. 'd' → logprob: -7.246656894683838
    8. 'des' → logprob: -7.621656894683838
    9. 'n' → logprob: -9.371657371520996
    10. 'def' → logprob: -9.496657371520996

Token 66: '=min' (ID: 149377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5854700803756714
    2. 's' → logprob: -1.3354700803756714
    3. ' =' → logprob: -2.460470199584961
    4. '_' → logprob: -2.585470199584961
    5. '_s' → logprob: -5.335470199584961
    6. '_=' → logprob: -5.710470199584961
    7. '_used' → logprob: -5.835470199584961
    8. '_use' → logprob: -6.335470199584961
    9. '=[]' → logprob: -6.585470199584961
    10. '=True' → logprob: -7.335470199584961

Token 67: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2560187578201294
    2. '(A' → logprob: -1.8810187578201294
    3. '(a' → logprob: -3.13101863861084
    4. '(_' → logprob: -4.13101863861084
    5. '_' → logprob: -5.38101863861084
    6. '(X' → logprob: -5.88101863861084
    7. '((' → logprob: -6.50601863861084
    8. '(len' → logprob: -7.00601863861084
    9. '(B' → logprob: -7.50601863861084
    10. '()' → logprob: -7.63101863861084

Token 68: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16661368310451508
    2. '[' → logprob: -1.9166136980056763
    3. '[A' → logprob: -6.166613578796387
    4. '[a' → logprob: -7.041613578796387
    5. '[i' → logprob: -7.291613578796387
    6. '[min' → logprob: -7.541613578796387
    7. '[B' → logprob: -8.416613578796387
    8. '))' → logprob: -8.416613578796387
    9. '[X' → logprob: -8.791613578796387
    10. ',no' → logprob: -8.916613578796387

Token 69: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0025578304193913937
    2. 'b' → logprob: -6.502557754516602
    3. ' min' → logprob: -7.127557754516602
    4. 'max' → logprob: -9.127557754516602
    5. '(min' → logprob: -9.502557754516602
    6. '[min' → logprob: -11.127557754516602
    7. '	min' → logprob: -11.627557754516602
    8. '100' → logprob: -12.377557754516602
    9. '=min' → logprob: -12.377557754516602
    10. ' ' → logprob: -12.502557754516602

Token 70: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0009226576657965779
    2. '(' → logprob: -7.000922679901123
    3. '(B' → logprob: -12.125922203063965
    4. 'b' → logprob: -12.625922203063965
    5. '(a' → logprob: -14.000922203063965
    6. '(s' → logprob: -14.500922203063965
    7. ' (' → logprob: -14.750922203063965
    8. '(
' → logprob: -16.25092315673828
    9. '((' → logprob: -16.37592315673828
    10. '(space' → logprob: -16.50092315673828

Token 71: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014656837447546422
    2. ' )' → logprob: -9.375146865844727
    3. '-' → logprob: -10.875146865844727
    4. '-)' → logprob: -11.750146865844727
    5. '())' → logprob: -12.000146865844727
    6. ')-' → logprob: -12.125146865844727
    7. '*)' → logprob: -12.750146865844727
    8. ')
' → logprob: -13.000146865844727
    9. '`)' → logprob: -13.250146865844727
    10. '))' → logprob: -13.375146865844727

Token 72: 'total' (ID: 9577)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24654671549797058
    2. '+' → logprob: -1.871546745300293
    3. ' for' → logprob: -3.371546745300293
    4. '<|end|>' → logprob: -4.621546745300293
    5. '\n' → logprob: -4.871546745300293
    6. '=' → logprob: -6.246546745300293
    7. '
' → logprob: -6.246546745300293
    8. '*' → logprob: -6.371546745300293
    9. '```' → logprob: -6.496546745300293
    10. '-' → logprob: -6.496546745300293

Token 73: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.35600951313972473
    2. ' =' → logprob: -1.2310094833374023
    3. '=sum' → logprob: -5.606009483337402
    4. '=[]' → logprob: -6.856009483337402
    5. '_' → logprob: -7.231009483337402
    6. '_=' → logprob: -7.481009483337402
    7. '=[' → logprob: -7.856009483337402
    8. '(' → logprob: -8.856009483337402
    9. '=A' → logprob: -8.856009483337402
    10. '=len' → logprob: -9.231009483337402

Token 74: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002871684730052948
    2. '=' → logprob: -6.002871513366699
    3. ' for' → logprob: -8.3778715133667
    4. '(' → logprob: -9.6278715133667
    5. ':' → logprob: -10.7528715133667
    6. '<|end|>' → logprob: -11.1278715133667
    7. '+' → logprob: -11.5028715133667
    8. ')' → logprob: -11.6278715133667
    9. '[' → logprob: -12.0028715133667
    10. '```' → logprob: -12.1278715133667

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02407849207520485
    2. ' _' → logprob: -3.899078607559204
    3. '_' → logprob: -7.149078369140625
    4. ' c' → logprob: -7.524078369140625
    5. ' x' → logprob: -7.524078369140625
    6. ' ' → logprob: -7.649078369140625
    7. ' a' → logprob: -7.899078369140625
    8. 'i' → logprob: -8.149078369140625
    9. ' range' → logprob: -8.524078369140625
    10. ' A' → logprob: -9.149078369140625

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.049293555319309235
    2. 'in' → logprob: -3.0492935180664062
    3. ' ' → logprob: -7.799293518066406
    4. 'n' → logprob: -8.924293518066406
    5. 'range' → logprob: -9.924293518066406
    6. ',' → logprob: -10.424293518066406
    7. '  ' → logprob: -11.049293518066406
    8. '   ' → logprob: -11.049293518066406
    9. 's' → logprob: -11.924293518066406
    10. '1' → logprob: -12.049293518066406

Token 77: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008158236742019653
    2. ' range' → logprob: -7.1258158683776855
    3. 'a' → logprob: -11.500815391540527
    4. 'A' → logprob: -14.250815391540527
    5. 'C' → logprob: -15.375815391540527
    6. '(range' → logprob: -16.000816345214844
    7. 'X' → logprob: -16.125816345214844
    8. ' ' → logprob: -17.125816345214844
    9. '	range' → logprob: -17.625816345214844
    10. 'r' → logprob: -17.750816345214844

Token 78: '(M' (ID: 6103)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.005539781413972378
    2. '(M' → logprob: -5.755539894104004
    3. '(len' → logprob: -6.755539894104004
    4. '(B' → logprob: -7.130539894104004
    5. '(' → logprob: -7.880539894104004
    6. '(a' → logprob: -12.130539894104004
    7. ' (' → logprob: -12.630539894104004
    8. 'A' → logprob: -13.505539894104004
    9. '(N' → logprob: -13.755539894104004
    10. '((' → logprob: -13.880539894104004

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -6.253713218029588e-05
    2. ')' → logprob: -10.125062942504883
    3. ' ):' → logprob: -11.500062942504883
    4. '):
' → logprob: -12.000062942504883
    5. ':' → logprob: -12.250062942504883
    6. '():' → logprob: -14.500062942504883
    7. '):
' → logprob: -15.125062942504883
    8. '+' → logprob: -15.375062942504883
    9. '）：' → logprob: -16.500062942504883
    10. '):(' → logprob: -16.875062942504883

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5805174112319946
    2. 'total' → logprob: -0.8305174112319946
    3. ' ' → logprob: -6.330517292022705
    4. ' total' → logprob: -6.455517292022705
    5. '	total' → logprob: -7.830517292022705
    6. '    
' → logprob: -8.580517768859863
    7. 'ans' → logprob: -9.330517768859863
    8. 'cost' → logprob: -9.455517768859863
    9. 'temp' → logprob: -9.705517768859863
    10. '```' → logprob: -9.830517768859863

Token 81: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.01551138423383236
    2. '   ' → logprob: -4.515511512756348
    3. 'no' → logprob: -6.265511512756348
    4. 'min' → logprob: -7.390511512756348
    5. ' total' → logprob: -7.390511512756348
    6. 'c' → logprob: -8.515511512756348
    7. 'a' → logprob: -8.640511512756348
    8. 'temp' → logprob: -8.640511512756348
    9. '    
' → logprob: -9.140511512756348
    10. 'ans' → logprob: -9.140511512756348

Token 82: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06692586094141006
    2. '=' → logprob: -2.8169257640838623
    3. '.' → logprob: -5.566926002502441
    4. '.=' → logprob: -7.941926002502441
    5. ' =' → logprob: -8.566926002502441
    6. '=[' → logprob: -8.691926002502441
    7. '=(' → logprob: -9.316926002502441
    8. '=min' → logprob: -9.566926002502441
    9. ' .' → logprob: -9.941926002502441
    10. 'append' → logprob: -10.566926002502441

Token 83: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.36789610981941223
    2. '(min' → logprob: -1.3678960800170898
    3. '(no' → logprob: -3.11789608001709
    4. '((' → logprob: -5.86789608001709
    5. 'min' → logprob: -6.24289608001709
    6. '(' → logprob: -6.61789608001709
    7. 'no' → logprob: -6.99289608001709
    8. 'a' → logprob: -6.99289608001709
    9. '(A' → logprob: -7.11789608001709
    10. '(max' → logprob: -10.11789608001709

Token 84: '[X' (ID: 118621)
  Prédit: '[X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[X' → logprob: -0.00036846695002168417
    2. 'X' → logprob: -8.125368118286133
    3. '[' → logprob: -10.125368118286133
    4. '[x' → logprob: -10.500368118286133
    5. '   ' → logprob: -14.375368118286133
    6. '[
' → logprob: -14.500368118286133
    7. '[A' → logprob: -14.750368118286133
    8. ')' → logprob: -14.875368118286133
    9. '(X' → logprob: -15.000368118286133
    10. ' [' → logprob: -15.125368118286133

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.584239938296378e-06
    2. '[' → logprob: -12.750007629394531
    3. 'i' → logprob: -13.375007629394531
    4. '[I' → logprob: -13.625007629394531
    5. '-' → logprob: -14.250007629394531
    6. ' [' → logprob: -14.375007629394531
    7. '[X' → logprob: -16.00000762939453
    8. '[-' → logprob: -16.00000762939453
    9. '[
' → logprob: -16.37500762939453
    10. '][' → logprob: -17.00000762939453

Token 86: ']-' (ID: 27107)
  Prédit: ']-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']-' → logprob: -0.03850363567471504
    2. ']' → logprob: -3.538503646850586
    3. '-' → logprob: -4.913503646850586
    4. '[i' → logprob: -7.538503646850586
    5. '[' → logprob: -8.163503646850586
    6. '1' → logprob: -8.538503646850586
    7. ' ' → logprob: -8.913503646850586
    8. ' -' → logprob: -9.413503646850586
    9. ']]' → logprob: -9.538503646850586
    10. 'i' → logprob: -10.413503646850586

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7120533811976202e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. ']' → logprob: -16.250017166137695
    5. '１' → logprob: -17.812517166137695
    6. '۱' → logprob: -18.062517166137695
    7. '  ' → logprob: -18.187517166137695
    8. '-' → logprob: -18.250017166137695
    9. '```' → logprob: -18.312517166137695
    10. ')' → logprob: -18.437517166137695

Token 88: ']+' (ID: 15344)
  Prédit: ']+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.5309222340583801
    2. ']' → logprob: -0.9059222340583801
    3. ']-' → logprob: -4.9059224128723145
    4. ']*' → logprob: -8.405921936035156
    5. ' ]' → logprob: -9.655921936035156
    6. '])' → logprob: -10.905921936035156
    7. '-' → logprob: -10.905921936035156
    8. ']+\' → logprob: -10.905921936035156
    9. '])+' → logprob: -11.530921936035156
    10. ']+=' → logprob: -12.905921936035156

Token 89: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0001681405701674521
    2. ' b' → logprob: -8.750167846679688
    3. '   ' → logprob: -12.250167846679688
    4. ' ' → logprob: -13.000167846679688
    5. 'C' → logprob: -14.125167846679688
    6. '  ' → logprob: -14.375167846679688
    7. '    ' → logprob: -14.625167846679688
    8. 'c' → logprob: -15.375167846679688
    9. '+b' → logprob: -15.750167846679688
    10. 'B' → logprob: -16.500167846679688

Token 90: '[Y' (ID: 173881)
  Prédit: '[Y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[Y' → logprob: -3.047134305234067e-05
    2. '[' → logprob: -10.875030517578125
    3. 'Y' → logprob: -11.625030517578125
    4. '[
' → logprob: -13.875030517578125
    5. '   ' → logprob: -14.250030517578125
    6. '[y' → logprob: -14.875030517578125
    7. ' [' → logprob: -14.875030517578125
    8. '(Y' → logprob: -16.500030517578125
    9. '	Y' → logprob: -16.500030517578125
    10. ' Y' → logprob: -16.750030517578125

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.25
    3. '(i' → logprob: -19.25
    4. '[I' → logprob: -19.375
    5. '{i' → logprob: -19.5
    6. ' [' → logprob: -20.0
    7. 'i' → logprob: -21.0
    8. '[
' → logprob: -21.0
    9. '[user' → logprob: -21.0
    10. 'user' → logprob: -21.875

Token 92: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.14912952482700348
    2. ' -' → logprob: -2.149129629135132
    3. ']-' → logprob: -4.024129390716553
    4. '[i' → logprob: -6.024129390716553
    5. '[' → logprob: -7.399129390716553
    6. ']' → logprob: -7.524129390716553
    7. '1' → logprob: -8.149129867553711
    8. ' ' → logprob: -9.524129867553711
    9. '   ' → logprob: -10.399129867553711
    10. ' ]' → logprob: -10.649129867553711

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.93448489275761e-05
    2. ' ' → logprob: -9.500079154968262
    3. '-' → logprob: -12.875079154968262
    4. '   ' → logprob: -14.375079154968262
    5. '<|end|>' → logprob: -15.125079154968262
    6. ']' → logprob: -15.562579154968262
    7. ')' → logprob: -15.875079154968262
    8. '2' → logprob: -16.125080108642578
    9. '  ' → logprob: -16.562580108642578
    10. '```' → logprob: -16.812580108642578

Token 94: ']-' (ID: 27107)
  Prédit: '-C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-C' → logprob: -0.5813411474227905
    2. '-' → logprob: -1.5813411474227905
    3. ' -' → logprob: -1.5813411474227905
    4. ']-' → logprob: -3.83134126663208
    5. '-c' → logprob: -5.70634126663208
    6. ')-' → logprob: -5.83134126663208
    7. ']' → logprob: -7.20634126663208
    8. ')' → logprob: -7.95634126663208
    9. ' ]' → logprob: -9.706340789794922
    10. ' ' → logprob: -9.956340789794922

Token 95: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.00044592362246476114
    2. ' C' → logprob: -7.75044584274292
    3. '   ' → logprob: -11.250446319580078
    4. 'c' → logprob: -13.250446319580078
    5. '	C' → logprob: -15.750446319580078
    6. ' ' → logprob: -15.750446319580078
    7. '  ' → logprob: -16.375446319580078
    8. '<|end|>' → logprob: -16.750446319580078
    9. '>C' → logprob: -17.000446319580078
    10. '*C' → logprob: -17.625446319580078

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -14.250000953674316
    3. '[I' → logprob: -16.125001907348633
    4. ')[' → logprob: -16.250001907348633
    5. ')' → logprob: -18.125001907348633
    6. ' [' → logprob: -18.625001907348633
    7. '[
' → logprob: -18.875001907348633
    8. '```' → logprob: -19.125001907348633
    9. 'i' → logprob: -19.375001907348633
    10. '[M' → logprob: -20.375001907348633

Token 97: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.0126840758603066e-05
    2. '])' → logprob: -10.875040054321289
    3. '))' → logprob: -11.000040054321289
    4. ' )' → logprob: -13.000040054321289
    5. '）' → logprob: -14.000040054321289
    6. ')
' → logprob: -14.375040054321289
    7. '})' → logprob: -15.500040054321289
    8. '`)' → logprob: -15.500040054321289
    9. ')`' → logprob: -16.25004005432129
    10. ')])' → logprob: -16.37504005432129

Token 98: 'with' (ID: 6332)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.003931525629013777
    2. 'total' → logprob: -6.003931522369385
    3. 'if' → logprob: -6.628931522369385
    4. '
' → logprob: -10.253931999206543
    5. 'for' → logprob: -10.378931999206543
    6. 'ans' → logprob: -10.753931999206543
    7. '```' → logprob: -11.253931999206543
    8. ' print' → logprob: -11.753931999206543
    9. 'min' → logprob: -12.003931999206543
    10. 'no' → logprob: -12.128931999206543

Token 99: '_coupon' (ID: 197395)
  Prédit: 'out'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'out' → logprob: -0.1616971790790558
    2. '_' → logprob: -2.0366971492767334
    3. 'open' → logprob: -4.5366973876953125
    4. ' open' → logprob: -6.4116973876953125
    5. '<|end|>' → logprob: -7.0366973876953125
    6. ' ' → logprob: -7.5366973876953125
    7. '```' → logprob: -7.6616973876953125
    8. ''' → logprob: -7.6616973876953125
    9. '__' → logprob: -7.9116973876953125
    10. 'space' → logprob: -8.036697387695312

Token 100: '=min' (ID: 149377)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15084223449230194
    2. '=min' → logprob: -2.1508421897888184
    3. '=max' → logprob: -4.150842189788818
    4. ' =' → logprob: -4.900842189788818
    5. '=_' → logprob: -8.150842666625977
    6. '_=' → logprob: -10.025842666625977
    7. '=int' → logprob: -10.900842666625977
    8. '_' → logprob: -11.025842666625977
    9. '=[]' → logprob: -11.150842666625977
    10. '＝' → logprob: -12.150842666625977

Token 101: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.005964226555079222
    2. '(min' → logprob: -5.505964279174805
    3. '([' → logprob: -7.005964279174805
    4. 'total' → logprob: -7.130964279174805
    5. '(' → logprob: -9.005964279174805
    6. '(no' → logprob: -10.255964279174805
    7. '(a' → logprob: -12.130964279174805
    8. '(max' → logprob: -12.630964279174805
    9. '([
' → logprob: -13.005964279174805
    10. '(
' → logprob: -13.630964279174805

Token 102: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013625658117234707
    2. ',' → logprob: -4.888625621795654
    3. ')
' → logprob: -5.138625621795654
    4. ',no' → logprob: -10.138626098632812
    5. ' )' → logprob: -10.263626098632812
    6. ',)' → logprob: -11.013626098632812
    7. '))' → logprob: -11.013626098632812
    8. ' ,' → logprob: -12.263626098632812
    9. ',min' → logprob: -12.388626098632812
    10. '),' → logprob: -12.888626098632812

Token 103: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00026848804554902017
    2. '
' → logprob: -8.500268936157227
    3. 'if' → logprob: -9.750268936157227
    4. 'answer' → logprob: -12.875268936157227
    5. 'result' → logprob: -13.250268936157227
    6. 'ans' → logprob: -13.875268936157227
    7. '#print' → logprob: -14.625268936157227
    8. '```' → logprob: -14.875268936157227
    9. '
' → logprob: -15.500268936157227
    10. ' print' → logprob: -15.625268936157227

Token 104: '(min' (ID: 26035)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7096579074859619
    2. '(no' → logprob: -0.7096579074859619
    3. '(min' → logprob: -4.209657669067383
    4. '()' → logprob: -6.584657669067383
    5. '(max' → logprob: -8.959657669067383
    6. '(No' → logprob: -12.334657669067383
    7. '(
' → logprob: -12.584657669067383
    8. '(n' → logprob: -13.459657669067383
    9. '((' → logprob: -13.584657669067383
    10. '(

' → logprob: -15.084657669067383

Token 105: '(no' (ID: 67114)
  Prédit: '(no'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(no' → logprob: -0.0007119550718925893
    2. '(' → logprob: -7.250711917877197
    3. ' (' → logprob: -14.125712394714355
    4. 'no' → logprob: -14.375712394714355
    5. '(No' → logprob: -15.250712394714355
    6. '(n' → logprob: -15.375712394714355
    7. '(A' → logprob: -16.75071144104004
    8. ' no' → logprob: -16.75071144104004
    9. '((' → logprob: -16.87571144104004
    10. ')' → logprob: -17.50071144104004

Token 106: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -1.3856492842023727e-06
    2. 'coupon' → logprob: -14.000000953674316
    3. '_c' → logprob: -16.000001907348633
    4. ',_' → logprob: -16.000001907348633
    5. 'Coupon' → logprob: -16.375001907348633
    6. '_discount' → logprob: -17.250001907348633
    7. '_no' → logprob: -17.625001907348633
    8. ' _' → logprob: -17.625001907348633
    9. ' coupon' → logprob: -17.875001907348633
    10. 'oupon' → logprob: -18.125001907348633

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3044552505016327
    2. ',total' → logprob: -1.554455280303955
    3. ',no' → logprob: -3.054455280303955
    4. ',min' → logprob: -5.804455280303955
    5. ' ,' → logprob: -7.679455280303955
    6. ',b' → logprob: -8.554454803466797
    7. ',c' → logprob: -8.804454803466797
    8. ',use' → logprob: -9.054454803466797
    9. ',to' → logprob: -9.929454803466797
    10. ',current' → logprob: -12.429454803466797

Token 108: 'with' (ID: 6332)
  Prédit: 'with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.006717743817716837
    2. ' with' → logprob: -5.006717681884766
    3. '(with' → logprob: -13.756717681884766
    4. 'w' → logprob: -15.006717681884766
    5. '	with' → logprob: -15.131717681884766
    6. 'without' → logprob: -15.381717681884766
    7. '_with' → logprob: -15.756717681884766
    8. '.with' → logprob: -16.131717681884766
    9. 'wit' → logprob: -16.881717681884766
    10. 'wi' → logprob: -17.006717681884766

Token 109: '_coupon' (ID: 197395)
  Prédit: '_coupon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coupon' → logprob: -4.127333340875339e-06
    2. 'coupon' → logprob: -12.500003814697266
    3. '_' → logprob: -16.250003814697266
    4. ')_' → logprob: -16.375003814697266
    5. '_c' → logprob: -16.375003814697266
    6. ' coupon' → logprob: -17.000003814697266
    7. '_coin' → logprob: -18.000003814697266
    8. 'Coupon' → logprob: -18.000003814697266
    9. '_discount' → logprob: -18.375003814697266
    10. ' _' → logprob: -18.375003814697266

Token 110: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.029750952497124672
    2. ')' → logprob: -3.5297510623931885
    3. ')))' → logprob: -15.15475082397461
    4. '))
' → logprob: -15.52975082397461
    5. ' ))' → logprob: -16.90475082397461
    6. ')
' → logprob: -17.65475082397461
    7. ')}' → logprob: -18.02975082397461
    8. ' )' → logprob: -18.15475082397461
    9. '),' → logprob: -18.40475082397461
    10. '})' → logprob: -18.52975082397461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 108
Tokens correctement prédits (1ère position, stricte): 51
Tokens correctement prédits (1ère position, avec adaptation): 53
Tokens correctement prédits (top 10): 83
Précision stricte (1ère position): 47.22%
Précision adaptée (1ère position): 49.07%
Précision (top 10): 76.85%
================================================================================
