================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:23:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demande à l'utilisateur de saisir une chaîne de caractères via le clavier
# La fonction input() attend que l'utilisateur entre quelque chose et appuie sur Entrée
# La chaîne saisie est stockée dans la variable 's'
s = input()

# On va maintenant vérifier si le premier, le deuxième et le troisième caractère de la chaîne sont identiques
# s[0] correspond au premier caractère de la chaîne (l'indice commence à 0 en Python)
# s[1] correspond au deuxième caractère
# s[2] correspond au troisième caractère
# L'expression s[0] == s[1] == s[2] vérifie deux choses :
# D'abord, elle vérifie si s[0] est égal à s[1], puis, si ce résultat est vrai, elle vérifie si s[1] est aussi égal à s[2]
if s[0] == s[1] == s[2]:
    # Si la condition est vraie, cela signifie que les 3 premiers caractères de la chaîne sont identiques
    # Dans ce cas, on affiche "No" à l'écran avec la fonction print()
    print("No")
else:
    # Si la condition n'est pas remplie (au moins un caractère parmi les trois est différent),
    # on entre dans la section else
    # La fonction print() affiche alors "Yes" à l'écran
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ande' (ID: 4102)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7398747801780701
    2. ' ' → logprob: -1.6148748397827148
    3. ':' → logprob: -1.8648748397827148
    4. '_' → logprob: -2.239874839782715
    5. ' :' → logprob: -4.239874839782715
    6. ' de' → logprob: -4.364874839782715
    7. '```' → logprob: -4.989874839782715
    8. ' =' → logprob: -5.239874839782715
    9. ' d' → logprob: -5.239874839782715
    10. ''' → logprob: -5.489874839782715

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.013280224055051804
    2. ' l' → logprob: -4.388280391693115
    3. 'user' → logprob: -8.388279914855957
    4. '#' → logprob: -8.638279914855957
    5. 'util' → logprob: -9.513279914855957
    6. ''' → logprob: -10.263279914855957
    7. '`' → logprob: -10.263279914855957
    8. '```' → logprob: -10.638279914855957
    9. ' ' → logprob: -10.888279914855957
    10. 'la' → logprob: -11.013279914855957

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.177214115858078
    2. ''' → logprob: -2.3022141456604004
    3. 'u' → logprob: -3.4272141456604004
    4. 'a' → logprob: -3.9272141456604004
    5. '’utilisateur' → logprob: -5.6772141456604
    6. 'util' → logprob: -6.0522141456604
    7. ' utilisateur' → logprob: -6.5522141456604
    8. 'e' → logprob: -6.9272141456604
    9. '_' → logprob: -7.3022141456604
    10. 'é' → logprob: -8.427213668823242

Token 6: ' de' (ID: 334)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.6397954821586609
    2. 's' → logprob: -2.6397955417633057
    3. 'user' → logprob: -2.7647955417633057
    4. 'n' → logprob: -2.8897955417633057
    5. 'nom' → logprob: -2.8897955417633057
    6. 'input' → logprob: -3.0147955417633057
    7. '#' → logprob: -3.5147955417633057
    8. 'username' → logprob: -4.014795303344727
    9. '_' → logprob: -4.139795303344727
    10. 'print' → logprob: -4.264795303344727

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02078360691666603
    2. 'entr' → logprob: -5.145783424377441
    3. ' saisir' → logprob: -5.145783424377441
    4. 'r' → logprob: -5.270783424377441
    5. '```' → logprob: -6.645783424377441
    6. '#' → logprob: -7.145783424377441
    7. 'sa' → logprob: -7.895783424377441
    8. 'l' → logprob: -8.645783424377441
    9. 'don' → logprob: -9.020783424377441
    10. 'entrée' → logprob: -9.020783424377441

Token 8: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4754936993122101
    2. ' un' → logprob: -1.4754936695098877
    3. ' une' → logprob: -2.2254936695098877
    4. ''' → logprob: -4.350493907928467
    5. 's' → logprob: -5.725493907928467
    6. ''un' → logprob: -5.850493907928467
    7. ' ' → logprob: -5.850493907928467
    8. 'un' → logprob: -6.100493907928467
    9. 'une' → logprob: -6.225493907928467
    10. ''une' → logprob: -6.350493907928467

Token 9: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5672470331192017
    2. ' chaîne' → logprob: -1.1922470331192017
    3. ' phrase' → logprob: -2.692246913909912
    4. 'chaine' → logprob: -3.692246913909912
    5. ' chaine' → logprob: -4.567246913909912
    6. ' ligne' → logprob: -4.692246913909912
    7. 'phrase' → logprob: -5.317246913909912
    8. ' valeur' → logprob: -5.942246913909912
    9. ' ' → logprob: -6.567246913909912
    10. ' string' → logprob: -6.567246913909912

Token 10: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5759298205375671
    2. 'input' → logprob: -1.450929880142212
    3. 'user' → logprob: -2.075929880142212
    4. '_' → logprob: -3.950929880142212
    5. 'i' → logprob: -4.325929641723633
    6. 'chaine' → logprob: -4.325929641723633
    7. '```' → logprob: -5.325929641723633
    8. '`' → logprob: -5.325929641723633
    9. 'print' → logprob: -5.825929641723633
    10. 'entrée' → logprob: -5.825929641723633

Token 11: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.004347636830061674
    2. ' caractères' → logprob: -5.504347801208496
    3. '#' → logprob: -8.754347801208496
    4. 'texte' → logprob: -9.504347801208496
    5. 'chars' → logprob: -12.129347801208496
    6. 's' → logprob: -12.504347801208496
    7. ' caractère' → logprob: -12.629347801208496
    8. ' caracteres' → logprob: -12.629347801208496
    9. ' caract' → logprob: -12.629347801208496
    10. '```' → logprob: -12.754347801208496

Token 12: ' via' (ID: 4493)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18780921399593353
    2. 'input' → logprob: -2.5628092288970947
    3. 'user' → logprob: -2.9378092288970947
    4. 'i' → logprob: -4.062808990478516
    5. 'chaine' → logprob: -4.562808990478516
    6. '```' → logprob: -5.812808990478516
    7. 'u' → logprob: -6.187808990478516
    8. 'a' → logprob: -6.562808990478516
    9. 'c' → logprob: -6.562808990478516
    10. '`' → logprob: -6.812808990478516

Token 13: ' le' (ID: 505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.15215259790420532
    2. ' input' → logprob: -2.0271525382995605
    3. '`' → logprob: -6.2771525382995605
    4. ' ' → logprob: -6.4021525382995605
    5. '=input' → logprob: -6.4021525382995605
    6. 'l' → logprob: -6.6521525382995605
    7. '```' → logprob: -7.5271525382995605
    8. '(input' → logprob: -8.027153015136719
    9. '<input' → logprob: -8.027153015136719
    10. 'une' → logprob: -8.152153015136719

Token 14: ' clavier' (ID: 187878)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.48465150594711304
    2. ' input' → logprob: -0.984651505947113
    3. '=input' → logprob: -4.859651565551758
    4. ' ' → logprob: -7.109651565551758
    5. 'n' → logprob: -7.984651565551758
    6. '`' → logprob: -8.109651565551758
    7. 's' → logprob: -8.234651565551758
    8. '```' → logprob: -8.734651565551758
    9. '(input' → logprob: -9.109651565551758
    10. 'prompt' → logprob: -9.609651565551758

Token 15: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.501988410949707
    2. 'input' → logprob: -1.376988410949707
    3. 'i' → logprob: -2.501988410949707
    4. 'user' → logprob: -4.126988410949707
    5. 'chaine' → logprob: -4.501988410949707
    6. 'c' → logprob: -4.751988410949707
    7. 'n' → logprob: -5.251988410949707
    8. 'u' → logprob: -6.001988410949707
    9. 'a' → logprob: -6.126988410949707
    10. '```' → logprob: -6.251988410949707

Token 16: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5268779397010803
    2. 's' → logprob: -1.6518778800964355
    3. 'chaine' → logprob: -2.4018778800964355
    4. 'input' → logprob: -2.5268778800964355
    5. 'entrée' → logprob: -3.5268778800964355
    6. 'entr' → logprob: -5.7768778800964355
    7. '\' → logprob: -6.4018778800964355
    8. '\n' → logprob: -6.5268778800964355
    9. 'print' → logprob: -6.5268778800964355
    10. '```' → logprob: -6.6518778800964355

Token 17: ' La' (ID: 3038)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.8145739436149597
    2. 'user' → logprob: -1.1895740032196045
    3. 's' → logprob: -1.6895740032196045
    4. 'input' → logprob: -3.1895740032196045
    5. 'texte' → logprob: -5.189573764801025
    6. 'cha' → logprob: -5.689573764801025
    7. 'text' → logprob: -5.939573764801025
    8. 'nom' → logprob: -6.064573764801025
    9. 'entrée' → logprob: -6.064573764801025
    10. 'ch' → logprob: -6.189573764801025

Token 18: ' fonction' (ID: 17610)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.5247295498847961
    2. 's' → logprob: -1.1497294902801514
    3. 'cha' → logprob: -2.7747294902801514
    4. ' chaîne' → logprob: -4.5247297286987305
    5. ' chaine' → logprob: -4.8997297286987305
    6. 'string' → logprob: -5.8997297286987305
    7. ' sais' → logprob: -6.2747297286987305
    8. 'str' → logprob: -6.2747297286987305
    9. ' s' → logprob: -7.3997297286987305
    10. ' ' → logprob: -7.5247297286987305

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.21703192591667175
    2. 'def' → logprob: -1.8420319557189941
    3. ' input' → logprob: -3.342031955718994
    4. 's' → logprob: -6.842031955718994
    5. ' def' → logprob: -9.342031478881836
    6. '=input' → logprob: -10.467031478881836
    7. 'print' → logprob: -10.842031478881836
    8. 'd' → logprob: -12.342031478881836
    9. 'str' → logprob: -12.467031478881836
    10. '`' → logprob: -12.842031478881836

Token 20: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0035235751420259476
    2. '_' → logprob: -7.003523349761963
    3. ' (' → logprob: -7.378523349761963
    4. '()' → logprob: -7.503523349761963
    5. '.' → logprob: -8.253523826599121
    6. ' ' → logprob: -8.503523826599121
    7. 's' → logprob: -8.878523826599121
    8. '('' → logprob: -8.878523826599121
    9. ',' → logprob: -9.128523826599121
    10. ')' → logprob: -9.628523826599121

Token 21: ' attend' (ID: 13384)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1307602971792221
    2. ' ' → logprob: -2.6307601928710938
    3. ' (' → logprob: -3.8807601928710938
    4. '.' → logprob: -5.130760192871094
    5. ')' → logprob: -5.630760192871094
    6. 's' → logprob: -5.630760192871094
    7. '#' → logprob: -5.880760192871094
    8. '()' → logprob: -6.005760192871094
    9. '_' → logprob: -6.130760192871094
    10. ' )' → logprob: -6.380760192871094

Token 22: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0426493883132935
    2. ' ' → logprob: -1.1676493883132935
    3. ' une' → logprob: -2.292649269104004
    4. 'une' → logprob: -3.292649269104004
    5. ',' → logprob: -3.542649269104004
    6. ' )' → logprob: -3.667649269104004
    7. '_' → logprob: -3.917649269104004
    8. ')' → logprob: -4.042649269104004
    9. '()' → logprob: -4.292649269104004
    10. 's' → logprob: -4.417649269104004

Token 23: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.35066017508506775
    2. 'l' → logprob: -1.2256602048873901
    3. ' ' → logprob: -7.97566032409668
    4. ' la' → logprob: -8.35066032409668
    5. 'la' → logprob: -8.47566032409668
    6. 'que' → logprob: -8.47566032409668
    7. ' utilisateur' → logprob: -8.47566032409668
    8. ''utilisateur' → logprob: -8.85066032409668
    9. ' input' → logprob: -8.97566032409668
    10. 'input' → logprob: -9.22566032409668

Token 24: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.004214213229715824
    2. '’utilisateur' → logprob: -6.254214286804199
    3. ''' → logprob: -6.629214286804199
    4. 'a' → logprob: -7.254214286804199
    5. ''entrée' → logprob: -9.1292142868042
    6. ''user' → logprob: -10.1292142868042
    7. 'u' → logprob: -10.5042142868042
    8. ''util' → logprob: -11.0042142868042
    9. ' utilisateur' → logprob: -11.3792142868042
    10. ''a' → logprob: -11.5042142868042

Token 25: ' entre' (ID: 3853)
  Prédit: ' sais'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sais' → logprob: -0.8266617059707642
    2. 's' → logprob: -1.2016617059707642
    3. ' frappe' → logprob: -2.7016615867614746
    4. ' app' → logprob: -2.9516615867614746
    5. ' tape' → logprob: -3.3266615867614746
    6. ' entre' → logprob: -3.4516615867614746
    7. 'app' → logprob: -3.5766615867614746
    8. 'r' → logprob: -3.8266615867614746
    9. 't' → logprob: -4.451661586761475
    10. 'entre' → logprob: -5.326661586761475

Token 26: ' quelque' (ID: 36359)
  Prédit: ' une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.4082745611667633
    2. ' ' → logprob: -1.533274531364441
    3. 'une' → logprob: -2.6582746505737305
    4. ' un' → logprob: -3.4082746505737305
    5. 'r' → logprob: -5.4082746505737305
    6. 'un' → logprob: -6.5332746505737305
    7. '  ' → logprob: -6.6582746505737305
    8. ''une' → logprob: -7.0332746505737305
    9. 'e' → logprob: -7.1582746505737305
    10. ' ' → logprob: -7.1582746505737305

Token 27: ' chose' (ID: 15505)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.19374269247055054
    2. ' chose' → logprob: -1.9437427520751953
    3. '#' → logprob: -4.443742752075195
    4. 's' → logprob: -5.568742752075195
    5. 'n' → logprob: -5.693742752075195
    6. 'c' → logprob: -5.693742752075195
    7. '_' → logprob: -6.068742752075195
    8. 'un' → logprob: -6.693742752075195
    9. ''un' → logprob: -6.818742752075195
    10. ' ' → logprob: -7.193742752075195

Token 28: ' et' (ID: 859)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.730556309223175
    2. 'user' → logprob: -1.1055562496185303
    3. 'chaine' → logprob: -2.3555562496185303
    4. 'u' → logprob: -3.7305562496185303
    5. '#' → logprob: -4.480556488037109
    6. 'n' → logprob: -4.605556488037109
    7. 'us' → logprob: -5.105556488037109
    8. 'c' → logprob: -5.480556488037109
    9. 'x' → logprob: -5.730556488037109
    10. '_' → logprob: -5.855556488037109

Token 29: ' app' (ID: 1053)
  Prédit: ' app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' app' → logprob: -0.26572009921073914
    2. 'app' → logprob: -1.5157201290130615
    3. ' retourne' → logprob: -5.015719890594482
    4. 'ren' → logprob: -5.890719890594482
    5. 'r' → logprob: -6.765719890594482
    6. ' presse' → logprob: -7.390719890594482
    7. 'return' → logprob: -7.515719890594482
    8. ' ren' → logprob: -7.515719890594482
    9. ' return' → logprob: -7.515719890594482
    10. 'p' → logprob: -8.51572036743164

Token 30: 'uie' (ID: 123775)
  Prédit: 'uie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'uie' → logprob: -0.028777683153748512
    2. 'u' → logprob: -3.778777599334717
    3. 'uye' → logprob: -5.778777599334717
    4. 'ui' → logprob: -6.153777599334717
    5. 'uya' → logprob: -9.403778076171875
    6. 'ue' → logprob: -10.028778076171875
    7. '\' → logprob: -10.528778076171875
    8. 'uy' → logprob: -10.653778076171875
    9. 'uyant' → logprob: -10.778778076171875
    10. '#' → logprob: -11.528778076171875

Token 31: ' sur' (ID: 1512)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29900118708610535
    2. ' sur' → logprob: -1.7990012168884277
    3. 'sur' → logprob: -2.5490012168884277
    4. '  ' → logprob: -5.049001216888428
    5. '_sur' → logprob: -5.174001216888428
    6. '_' → logprob: -7.674001216888428
    7. ' ' → logprob: -7.799001216888428
    8. '`' → logprob: -8.04900074005127
    9. ')' → logprob: -8.54900074005127
    10. 'Sur' → logprob: -9.11150074005127

Token 32: ' Entr' (ID: 50650)
  Prédit: 'Entr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Entr' → logprob: -0.20108580589294434
    2. ' Entr' → logprob: -1.9510858058929443
    3. 'Enter' → logprob: -3.9510858058929443
    4. ' Enter' → logprob: -4.826086044311523
    5. 'entrée' → logprob: -5.076086044311523
    6. ' ' → logprob: -6.076086044311523
    7. ' entrée' → logprob: -6.576086044311523
    8. ' ' → logprob: -7.076086044311523
    9. 'entr' → logprob: -7.201086044311523
    10. '<' → logprob: -8.201086044311523

Token 33: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.0012458281125873327
    2. 'é' → logprob: -6.751245975494385
    3. 'er' → logprob: -9.501245498657227
    4. 'ées' → logprob: -14.501245498657227
    5. 'ee' → logprob: -16.001245498657227
    6. 'e' → logprob: -16.376245498657227
    7. 'éer' → logprob: -17.001245498657227
    8. '```' → logprob: -17.626245498657227
    9. '%C' → logprob: -18.001245498657227
    10. 'É' → logprob: -18.376245498657227

Token 34: '
' (ID: 198)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.2819836735725403
    2. 'chaine' → logprob: -1.7819836139678955
    3. 's' → logprob: -3.2819836139678955
    4. 'nom' → logprob: -4.281983852386475
    5. 'n' → logprob: -5.656983852386475
    6. 'u' → logprob: -6.031983852386475
    7. 'us' → logprob: -6.156983852386475
    8. 'texte' → logprob: -6.156983852386475
    9. 'util' → logprob: -6.281983852386475
    10. '#' → logprob: -6.406983852386475

Token 35: '#' (ID: 2)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.14829130470752716
    2. 'chaine' → logprob: -2.1482913494110107
    3. 'nom' → logprob: -4.773291110992432
    4. 's' → logprob: -5.273291110992432
    5. 'texte' → logprob: -6.148291110992432
    6. 'text' → logprob: -7.273291110992432
    7. 'name' → logprob: -7.273291110992432
    8. 'username' → logprob: -7.523291110992432
    9. 'cha' → logprob: -7.523291110992432
    10. 'util' → logprob: -7.648291110992432

Token 36: ' La' (ID: 3038)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.6330438852310181
    2. 'chaine' → logprob: -1.258043885231018
    3. 's' → logprob: -2.2580437660217285
    4. 'u' → logprob: -4.0080437660217285
    5. 'n' → logprob: -4.2580437660217285
    6. 'nom' → logprob: -4.3830437660217285
    7. 'c' → logprob: -5.2580437660217285
    8. 'input' → logprob: -5.7580437660217285
    9. 'text' → logprob: -5.8830437660217285
    10. 'name' → logprob: -6.0080437660217285

Token 37: ' chaîne' (ID: 89288)
  Prédit: 'chaine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chaine' → logprob: -0.43517836928367615
    2. 'cha' → logprob: -1.8101783990859985
    3. 's' → logprob: -2.310178279876709
    4. '#' → logprob: -4.060178279876709
    5. ' chaîne' → logprob: -4.060178279876709
    6. 'user' → logprob: -4.435178279876709
    7. 'entrée' → logprob: -4.560178279876709
    8. 'suite' → logprob: -4.935178279876709
    9. 'variable' → logprob: -5.435178279876709
    10. 'val' → logprob: -5.685178279876709

Token 38: ' sais' (ID: 30010)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5590225458145142
    2. '_' → logprob: -1.0590225458145142
    3. ' =' → logprob: -3.1840224266052246
    4. ' de' → logprob: -3.6840224266052246
    5. ' _' → logprob: -5.184022426605225
    6. 'de' → logprob: -6.059022426605225
    7. '  ' → logprob: -6.559022426605225
    8. '_de' → logprob: -7.059022426605225
    9. ' )' → logprob: -7.184022426605225
    10. 's' → logprob: -7.434022426605225

Token 39: 'ie' (ID: 396)
  Prédit: 'rie'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rie' → logprob: -0.4786469340324402
    2. 'ie' → logprob: -0.9786469340324402
    3. 'e' → logprob: -6.978646755218506
    4. 'sie' → logprob: -7.228646755218506
    5. 'isie' → logprob: -7.603646755218506
    6. 'i' → logprob: -7.853646755218506
    7. 'is' → logprob: -7.978646755218506
    8. 'ise' → logprob: -7.978646755218506
    9. 'r' → logprob: -8.353647232055664
    10. '#' → logprob: -8.728647232055664

Token 40: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1003122329711914
    2. '_' → logprob: -3.2253122329711914
    3. ' ' → logprob: -3.9753122329711914
    4. ' est' → logprob: -4.350312232971191
    5. 's' → logprob: -4.850312232971191
    6. '=' → logprob: -5.350312232971191
    7. 'est' → logprob: -5.600312232971191
    8. 'user' → logprob: -6.600312232971191
    9. '#' → logprob: -7.100312232971191
    10. 'chaine' → logprob: -7.475312232971191

Token 41: ' stock' (ID: 6546)
  Prédit: ' stock'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stock' → logprob: -0.028371967375278473
    2. ' assign' → logprob: -4.403371810913086
    3. ' récup' → logprob: -5.653371810913086
    4. ' affect' → logprob: -6.028371810913086
    5. 'assign' → logprob: -6.028371810913086
    6. 'stock' → logprob: -6.153371810913086
    7. ' ' → logprob: -6.528371810913086
    8. 'r' → logprob: -7.028371810913086
    9. ' retourn' → logprob: -7.028371810913086
    10. ' assigned' → logprob: -7.278371810913086

Token 42: 'ée' (ID: 2894)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.31402909755706787
    2. 'ée' → logprob: -1.3140290975570679
    3. ' ' → logprob: -7.814029216766357
    4. ' é' → logprob: -9.0640287399292
    5. 'e' → logprob: -9.1890287399292
    6. '_' → logprob: -9.5640287399292
    7. '=' → logprob: -10.8140287399292
    8. 'u' → logprob: -11.1890287399292
    9. '   ' → logprob: -12.0640287399292
    10. 'd' → logprob: -12.6890287399292

Token 43: ' dans' (ID: 2671)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0242655277252197
    2. ' user' → logprob: -1.6492655277252197
    3. 'user' → logprob: -2.0242655277252197
    4. ' dans' → logprob: -2.3992655277252197
    5. 'nom' → logprob: -3.0242655277252197
    6. 'chaine' → logprob: -3.1492655277252197
    7. 'dans' → logprob: -3.2742655277252197
    8. '_' → logprob: -3.5242655277252197
    9. ' nom' → logprob: -3.8992655277252197
    10. ' ' → logprob: -4.524265289306641

Token 44: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.120856523513794
    2. ' variable' → logprob: -1.495856523513794
    3. ' une' → logprob: -1.995856523513794
    4. ' user' → logprob: -2.120856523513794
    5. ' ma' → logprob: -2.620856523513794
    6. ' ' → logprob: -3.745856523513794
    7. ' nom' → logprob: -3.995856523513794
    8. ' input' → logprob: -4.495856285095215
    9. ' chaine' → logprob: -4.620856285095215
    10. 'chaine' → logprob: -4.745856285095215

Token 45: ' variable' (ID: 11076)
  Prédit: 'variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'variable' → logprob: -0.41115105152130127
    2. 'chaine' → logprob: -1.2861510515213013
    3. ' variable' → logprob: -3.2861509323120117
    4. 'user' → logprob: -4.286150932312012
    5. 's' → logprob: -5.911150932312012
    6. 'nom' → logprob: -6.036150932312012
    7. 'texte' → logprob: -6.786150932312012
    8. 'var' → logprob: -7.036150932312012
    9. ' chaine' → logprob: -7.286150932312012
    10. 'cha' → logprob: -7.661150932312012

Token 46: ' '' (ID: 461)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' user' → logprob: -0.8123835921287537
    2. 's' → logprob: -1.5623836517333984
    3. 'user' → logprob: -1.5623836517333984
    4. 'chaine' → logprob: -3.0623836517333984
    5. ' ' → logprob: -3.5623836517333984
    6. ' s' → logprob: -4.187383651733398
    7. ' nom' → logprob: -4.687383651733398
    8. 'nom' → logprob: -5.062383651733398
    9. 'texte' → logprob: -5.437383651733398
    10. ' text' → logprob: -5.812383651733398

Token 47: 's' (ID: 82)
  Prédit: 'user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'user' → logprob: -0.5407388806343079
    2. 'chaine' → logprob: -1.040738821029663
    3. 's' → logprob: -3.290738821029663
    4. 'texte' → logprob: -3.790738821029663
    5. ' user' → logprob: -6.790739059448242
    6. 'nom' → logprob: -7.165739059448242
    7. 'text' → logprob: -7.415739059448242
    8. 'input' → logprob: -7.540739059448242
    9. 'cha' → logprob: -7.540739059448242
    10. 'string' → logprob: -8.415739059448242

Token 48: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7210254669189453
    2. 'e' → logprob: -1.4710254669189453
    3. 'a' → logprob: -1.7210254669189453
    4. '')' → logprob: -2.5960254669189453
    5. 'tring' → logprob: -4.846025466918945
    6. '#' → logprob: -5.971025466918945
    7. 's' → logprob: -5.971025466918945
    8. '']' → logprob: -6.096025466918945
    9. 't' → logprob: -6.221025466918945
    10. ''''' → logprob: -6.596025466918945

Token 49: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.943783253314905e-05
    2. '```' → logprob: -9.750059127807617
    3. '``' → logprob: -15.125059127807617
    4. '#' → logprob: -15.250059127807617
    5. 'n' → logprob: -15.750059127807617
    6. ' s' → logprob: -16.500059127807617
    7. '
' → logprob: -16.625059127807617
    8. '`s' → logprob: -16.750059127807617
    9. 'print' → logprob: -17.125059127807617
    10. ' 
' → logprob: -17.375059127807617

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018361462280154228
    2. '=' → logprob: -4.018361568450928
    3. ' ' → logprob: -9.01836109161377
    4. '=input' → logprob: -10.14336109161377
    5. 's' → logprob: -10.89336109161377
    6. 'tring' → logprob: -11.51836109161377
    7. 'a' → logprob: -12.26836109161377
    8. ' ' → logprob: -12.26836109161377
    9. '.' → logprob: -12.76836109161377
    10. '=s' → logprob: -13.39336109161377

Token 51: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2519318461418152
    2. 'input' → logprob: -1.50193190574646
    3. ' ' → logprob: -14.251932144165039
    4. '(input' → logprob: -14.501932144165039
    5. '=input' → logprob: -14.626932144165039
    6. '	input' → logprob: -14.751932144165039
    7. ' ' → logprob: -14.751932144165039
    8. '<input' → logprob: -15.376932144165039
    9. '_input' → logprob: -17.12693214416504
    10. ',input' → logprob: -17.62693214416504

Token 52: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14863687753677368
    2. '("("' → logprob: -2.398636817932129
    3. '('' → logprob: -3.148636817932129
    4. '("' → logprob: -5.773636817932129
    5. '("(' → logprob: -7.148636817932129
    6. '()' → logprob: -8.523636817932129
    7. '("")' → logprob: -8.773636817932129
    8. '("""' → logprob: -10.273636817932129
    9. '('(' → logprob: -10.898636817932129
    10. '(">' → logprob: -11.023636817932129

Token 53: '#' (ID: 2)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4155024588108063
    2. '#' → logprob: -2.1655025482177734
    3. ' ' → logprob: -2.5405025482177734
    4. 's' → logprob: -3.1655025482177734
    5. 'print' → logprob: -3.1655025482177734
    6. ')' → logprob: -4.290502548217773
    7. ''' → logprob: -4.415502548217773
    8. '+' → logprob: -4.665502548217773
    9. '.strip' → logprob: -5.540502548217773
    10. 'if' → logprob: -5.915502548217773

Token 54: ' On' (ID: 2160)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10181404650211334
    2. 'if' → logprob: -2.976814031600952
    3. '#' → logprob: -3.601814031600952
    4. 'len' → logprob: -4.851814270019531
    5. 'length' → logprob: -5.351814270019531
    6. 's' → logprob: -5.601814270019531
    7. ' if' → logprob: -7.351814270019531
    8. ' print' → logprob: -7.726814270019531
    9. 'long' → logprob: -8.601814270019531
    10. 'p' → logprob: -9.101814270019531

Token 55: ' va' (ID: 3423)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10745028406381607
    2. '#' → logprob: -3.732450246810913
    3. ' print' → logprob: -3.857450246810913
    4. 'if' → logprob: -3.982450246810913
    5. ' if' → logprob: -4.357450485229492
    6. '.print' → logprob: -4.982450485229492
    7. 's' → logprob: -5.607450485229492
    8. '.' → logprob: -6.357450485229492
    9. ' =' → logprob: -6.357450485229492
    10. 'len' → logprob: -6.607450485229492

Token 56: ' maintenant' (ID: 35735)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -1.4495798349380493
    2. ' afficher' → logprob: -1.4495798349380493
    3. ' ' → logprob: -1.5745798349380493
    4. ' #' → logprob: -2.6995797157287598
    5. ' vérifier' → logprob: -3.1995797157287598
    6. 'print' → logprob: -3.4495797157287598
    7. ' continuer' → logprob: -3.4495797157287598
    8. ' convertir' → logprob: -3.9495797157287598
    9. ' analyser' → logprob: -4.19957971572876
    10. ' compter' → logprob: -4.44957971572876

Token 57: ' vérifier' (ID: 93671)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.9601030349731445
    2. ' afficher' → logprob: -0.9601030349731445
    3. 'print' → logprob: -2.3351030349731445
    4. ' continuer' → logprob: -3.7101030349731445
    5. ' vérifier' → logprob: -3.7101030349731445
    6. ' traiter' → logprob: -4.2101030349731445
    7. ' analyser' → logprob: -4.7101030349731445
    8. 'aff' → logprob: -5.2101030349731445
    9. ' convertir' → logprob: -5.3351030349731445
    10. ' ' → logprob: -5.5851030349731445

Token 58: ' si' (ID: 1784)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.042071644216775894
    2. 's' → logprob: -4.29207181930542
    3. ' s' → logprob: -4.54207181930542
    4. ' if' → logprob: -4.66707181930542
    5. ' si' → logprob: -6.29207181930542
    6. '  ' → logprob: -6.41707181930542
    7. '<|end|>' → logprob: -7.04207181930542
    8. 'if' → logprob: -7.29207181930542
    9. '_' → logprob: -7.79207181930542
    10. 'si' → logprob: -8.417071342468262

Token 59: ' le' (ID: 505)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -1.6264801025390625
    2. ' ' → logprob: -1.8764801025390625
    3. ' s' → logprob: -1.8764801025390625
    4. ''' → logprob: -2.0014801025390625
    5. ' "' → logprob: -2.3764801025390625
    6. '"' → logprob: -2.5014801025390625
    7. 's' → logprob: -2.6264801025390625
    8. ''s' → logprob: -2.8764801025390625
    9. ' len' → logprob: -3.1264801025390625
    10. 'len' → logprob: -4.7514801025390625

Token 60: ' premier' (ID: 15506)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5880786776542664
    2. 's' → logprob: -0.9630786776542664
    3. ''s' → logprob: -3.588078737258911
    4. ''' → logprob: -4.838078498840332
    5. ' ' → logprob: -5.213078498840332
    6. ' '' → logprob: -5.338078498840332
    7. '"' → logprob: -5.463078498840332
    8. 'a' → logprob: -5.713078498840332
    9. ' a' → logprob: -6.463078498840332
    10. 'len' → logprob: -6.588078498840332

Token 61: ',' (ID: 11)
  Prédit: ' caractère'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.22604431211948395
    2. ' ' → logprob: -2.4760444164276123
    3. 'car' → logprob: -2.6010444164276123
    4. ' caract' → logprob: -3.4760444164276123
    5. ' car' → logprob: -5.226044178009033
    6. ' s' → logprob: -6.226044178009033
    7. 's' → logprob: -6.226044178009033
    8. ' caractères' → logprob: -6.976044178009033
    9. 'a' → logprob: -7.601044178009033
    10. '_' → logprob: -7.851044178009033

Token 62: ' le' (ID: 505)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3356422185897827
    2. ' ' → logprob: -1.4606422185897827
    3. ' second' → logprob: -1.7106422185897827
    4. ' deuxième' → logprob: -2.0856423377990723
    5. 'second' → logprob: -2.8356423377990723
    6. ' s' → logprob: -3.7106423377990723
    7. '  ' → logprob: -4.335642337799072
    8. 'le' → logprob: -4.460642337799072
    9. ' espace' → logprob: -4.460642337799072
    10. ' '' → logprob: -4.460642337799072

Token 63: ' deuxième' (ID: 51664)
  Prédit: 'dern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dern' → logprob: -0.6398236751556396
    2. ' dernier' → logprob: -0.7648236751556396
    3. 'der' → logprob: -6.639823913574219
    4. 's' → logprob: -7.014823913574219
    5. ' ' → logprob: -7.264823913574219
    6. ' deuxième' → logprob: -7.264823913574219
    7. '```' → logprob: -7.514823913574219
    8. ' last' → logprob: -7.514823913574219
    9. 'last' → logprob: -7.764823913574219
    10. ' second' → logprob: -8.014823913574219

Token 64: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7508589625358582
    2. ' caractère' → logprob: -0.7508589625358582
    3. 'car' → logprob: -4.000858783721924
    4. ' et' → logprob: -4.750858783721924
    5. ' caract' → logprob: -5.000858783721924
    6. 's' → logprob: -5.000858783721924
    7. ' caractères' → logprob: -5.125858783721924
    8. ',' → logprob: -5.875858783721924
    9. 'et' → logprob: -6.000858783721924
    10. ' espace' → logprob: -7.125858783721924

Token 65: ' le' (ID: 505)
  Prédit: ' le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -0.4961153268814087
    2. 'le' → logprob: -0.9961153268814087
    3. ' troisième' → logprob: -4.121115207672119
    4. '#' → logprob: -6.496115207672119
    5. ' #' → logprob: -6.746115207672119
    6. ' ' → logprob: -6.871115207672119
    7. 'tro' → logprob: -7.121115207672119
    8. ' tro' → logprob: -8.621115684509277
    9. 's' → logprob: -8.996115684509277
    10. ' third' → logprob: -9.246115684509277

Token 66: ' troisième' (ID: 75373)
  Prédit: ' troisième'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' troisième' → logprob: -0.05955743417143822
    2. 'tro' → logprob: -3.0595574378967285
    3. ' tro' → logprob: -4.9345574378967285
    4. ' third' → logprob: -7.3095574378967285
    5. ' quatrième' → logprob: -7.4345574378967285
    6. ' ' → logprob: -7.8095574378967285
    7. ' dernier' → logprob: -7.9345574378967285
    8. 's' → logprob: -8.18455696105957
    9. '#' → logprob: -8.43455696105957
    10. ' trois' → logprob: -8.68455696105957

Token 67: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.41756471991539
    2. ' caractère' → logprob: -1.4175647497177124
    3. ' caractères' → logprob: -2.917564630508423
    4. '  ' → logprob: -4.042564868927002
    5. ' caract' → logprob: -4.292564868927002
    6. ' espace' → logprob: -5.417564868927002
    7. 'car' → logprob: -6.042564868927002
    8. 's' → logprob: -6.542564868927002
    9. ' espaces' → logprob: -7.292564868927002
    10. ' s' → logprob: -7.417564868927002

Token 68: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1806635856628418
    2. ' ' → logprob: -2.055663585662842
    3. ' s' → logprob: -3.555663585662842
    4. ' de' → logprob: -5.055663585662842
    5. ' sont' → logprob: -6.555663585662842
    6. ' '' → logprob: -8.3056640625
    7. '  ' → logprob: -8.4306640625
    8. 'de' → logprob: -9.0556640625
    9. ''s' → logprob: -9.5556640625
    10. '(s' → logprob: -10.3056640625

Token 69: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7253314256668091
    2. 's' → logprob: -0.8503314256668091
    3. ' la' → logprob: -2.4753313064575195
    4. 'la' → logprob: -5.7253313064575195
    5. ' '' → logprob: -7.9753313064575195
    6. ' ' → logprob: -8.22533130645752
    7. 'a' → logprob: -8.72533130645752
    8. ' `' → logprob: -8.85033130645752
    9. ' ' → logprob: -9.72533130645752
    10. ' cette' → logprob: -9.97533130645752

Token 70: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037818145006895065
    2. 'chaine' → logprob: -4.16281795501709
    3. ' chaîne' → logprob: -4.28781795501709
    4. ' s' → logprob: -5.66281795501709
    5. 'string' → logprob: -6.16281795501709
    6. ' string' → logprob: -7.16281795501709
    7. 'cha' → logprob: -7.78781795501709
    8. '```' → logprob: -8.16281795501709
    9. ' chaine' → logprob: -8.53781795501709
    10. 'a' → logprob: -9.41281795501709

Token 71: ' sont' (ID: 5242)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5777907967567444
    2. ' ' → logprob: -1.0777907371520996
    3. ' s' → logprob: -2.8277907371520996
    4. ' sont' → logprob: -3.5777907371520996
    5. ' '' → logprob: -4.8277907371521
    6. ' #' → logprob: -6.7027907371521
    7. ''s' → logprob: -7.5777907371521
    8. ' "' → logprob: -7.7027907371521
    9. '  ' → logprob: -8.577791213989258
    10. ' ,' → logprob: -8.827791213989258

Token 72: ' ident' (ID: 3951)
  Prédit: ' ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.8323577642440796
    2. 's' → logprob: -1.3323577642440796
    3. ' des' → logprob: -2.707357883453369
    4. ''' → logprob: -3.207357883453369
    5. ''a' → logprob: -3.582357883453369
    6. ''un' → logprob: -3.957357883453369
    7. ' "' → logprob: -4.082357883453369
    8. ' une' → logprob: -4.082357883453369
    9. ''s' → logprob: -4.082357883453369
    10. 'des' → logprob: -4.082357883453369

Token 73: 'iques' (ID: 11654)
  Prédit: 'ques'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ques' → logprob: -0.20983317494392395
    2. 'q' → logprob: -1.9598331451416016
    3. 'f' → logprob: -3.5848331451416016
    4. 'que' → logprob: -4.209833145141602
    5. 'c' → logprob: -6.334833145141602
    6. 'qu' → logprob: -6.584833145141602
    7. '#' → logprob: -7.334833145141602
    8. '```' → logprob: -7.334833145141602
    9. 'iques' → logprob: -8.209833145141602
    10. 'cal' → logprob: -8.334833145141602

Token 74: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.507965087890625
    2. ' if' → logprob: -1.882965087890625
    3. 's' → logprob: -2.007965087890625
    4. ' ' → logprob: -2.882965087890625
    5. 'i' → logprob: -3.382965087890625
    6. ' i' → logprob: -5.632965087890625
    7. '#' → logprob: -6.007965087890625
    8. ',' → logprob: -6.007965087890625
    9. '[' → logprob: -6.132965087890625
    10. ' 
' → logprob: -6.382965087890625

Token 75: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7455973625183105
    2. 'i' → logprob: -1.3705973625183105
    3. 's' → logprob: -1.6205973625183105
    4. ' if' → logprob: -3.2455973625183105
    5. '```' → logprob: -4.3705973625183105
    6. ':' → logprob: -5.7455973625183105
    7. ' i' → logprob: -5.7455973625183105
    8. 'e' → logprob: -5.8705973625183105
    9. ''s' → logprob: -5.8705973625183105
    10. '[' → logprob: -5.9955973625183105

Token 76: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14432410895824432
    2. ' if' → logprob: -2.5193240642547607
    3. 'i' → logprob: -3.1443240642547607
    4. 's' → logprob: -5.39432430267334
    5. ' i' → logprob: -5.39432430267334
    6. ' ' → logprob: -7.26932430267334
    7. '```' → logprob: -8.14432430267334
    8. '#' → logprob: -8.26932430267334
    9. ''s' → logprob: -9.39432430267334
    10. ' #' → logprob: -9.89432430267334

Token 77: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.537180211627856e-05
    2. ' [' → logprob: -10.875045776367188
    3. '[:' → logprob: -11.250045776367188
    4. '[
' → logprob: -12.375045776367188
    5. '[]' → logprob: -13.125045776367188
    6. '['' → logprob: -13.500045776367188
    7. '[:]' → logprob: -14.000045776367188
    8. ''' → logprob: -14.250045776367188
    9. '[i' → logprob: -14.500045776367188
    10. ''[' → logprob: -14.625045776367188

Token 78: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.3199920178740285e-05
    2. ' ' → logprob: -10.750022888183594
    3. ']' → logprob: -13.375022888183594
    4. '1' → logprob: -15.625022888183594
    5. ')' → logprob: -17.875022888183594
    6. '[' → logprob: -18.125022888183594
    7. ' ]' → logprob: -19.250022888183594
    8. '2' → logprob: -19.875022888183594
    9. '3' → logprob: -20.625022888183594
    10. '][' → logprob: -21.000022888183594

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.030135851353406906
    2. ' ]' → logprob: -3.5301358699798584
    3. ']==' → logprob: -7.905135631561279
    4. 's' → logprob: -12.155136108398438
    5. '']' → logprob: -13.280136108398438
    6. ':]' → logprob: -13.280136108398438
    7. ':' → logprob: -13.530136108398438
    8. ' ' → logprob: -13.905136108398438
    9. ']
' → logprob: -14.030136108398438
    10. ' :]' → logprob: -14.155136108398438

Token 80: ' correspond' (ID: 11095)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0270455963909626
    2. '==' → logprob: -3.652045488357544
    3. '=' → logprob: -7.652045726776123
    4. 's' → logprob: -8.652045249938965
    5. ' =' → logprob: -10.652045249938965
    6. ')' → logprob: -10.777045249938965
    7. ' s' → logprob: -11.152045249938965
    8. ',' → logprob: -11.777045249938965
    9. ' ' → logprob: -12.277045249938965
    10. ']==' → logprob: -12.527045249938965

Token 81: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.07045706361532211
    2. ' à' → logprob: -2.8204569816589355
    3. 'au' → logprob: -5.4454569816589355
    4. 's' → logprob: -6.4454569816589355
    5. ''au' → logprob: -6.8204569816589355
    6. ' ' → logprob: -7.9454569816589355
    7. 'à' → logprob: -8.070457458496094
    8. ''à' → logprob: -8.195457458496094
    9. '  ' → logprob: -8.820457458496094
    10. ' aux' → logprob: -9.695457458496094

Token 82: ' premier' (ID: 15506)
  Prédit: ' premier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' premier' → logprob: -0.40743231773376465
    2. 'prem' → logprob: -1.1574323177337646
    3. 's' → logprob: -4.532432556152344
    4. ' ' → logprob: -5.282432556152344
    5. '1' → logprob: -6.532432556152344
    6. 'car' → logprob: -7.032432556152344
    7. ' caractère' → logprob: -7.532432556152344
    8. 'a' → logprob: -8.157432556152344
    9. 'pr' → logprob: -8.407432556152344
    10. ' s' → logprob: -8.907432556152344

Token 83: ' caractère' (ID: 80509)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6707850694656372
    2. 's' → logprob: -1.9207850694656372
    3. ' ' → logprob: -2.0457849502563477
    4. ']' → logprob: -2.7957849502563477
    5. ' ]' → logprob: -2.7957849502563477
    6. ' s' → logprob: -4.295784950256348
    7. '.' → logprob: -4.420784950256348
    8. ')' → logprob: -4.795784950256348
    9. ' [' → logprob: -4.920784950256348
    10. ',' → logprob: -4.920784950256348

Token 84: ' de' (ID: 334)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3730837106704712
    2. ' and' → logprob: -1.3730837106704712
    3. ' ,' → logprob: -4.123083591461182
    4. ',' → logprob: -4.373083591461182
    5. 's' → logprob: -4.748083591461182
    6. 'and' → logprob: -4.873083591461182
    7. ' ' → logprob: -5.373083591461182
    8. ' s' → logprob: -5.748083591461182
    9. '==' → logprob: -5.748083591461182
    10. ' et' → logprob: -7.373083591461182

Token 85: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.33639612793922424
    2. 's' → logprob: -1.3363960981369019
    3. ' la' → logprob: -3.8363962173461914
    4. ' ' → logprob: -7.336396217346191
    5. 'la' → logprob: -7.586396217346191
    6. 'a' → logprob: -10.086396217346191
    7. ' l' → logprob: -10.711396217346191
    8. 'l' → logprob: -10.961396217346191
    9. ' '' → logprob: -11.336396217346191
    10. ' a' → logprob: -11.336396217346191

Token 86: ' chaîne' (ID: 89288)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2741507589817047
    2. ' s' → logprob: -1.6491507291793823
    3. ' ' → logprob: -3.399150848388672
    4. ' string' → logprob: -5.149150848388672
    5. ' chaîne' → logprob: -6.024150848388672
    6. 'string' → logprob: -6.274150848388672
    7. 'a' → logprob: -6.399150848388672
    8. 'chaine' → logprob: -7.274150848388672
    9. 'cha' → logprob: -8.274150848388672
    10. 'c' → logprob: -8.399150848388672

Token 87: ' (' (ID: 350)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.29062145948410034
    2. ' ' → logprob: -1.6656215190887451
    3. 's' → logprob: -3.915621519088745
    4. ' and' → logprob: -4.290621280670166
    5. ',' → logprob: -4.665621280670166
    6. ' ,' → logprob: -4.915621280670166
    7. '==' → logprob: -6.040621280670166
    8. ' s' → logprob: -6.290621280670166
    9. '=' → logprob: -6.415621280670166
    10. 'and' → logprob: -6.790621280670166

Token 88: 'l' (ID: 75)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0162747073918581
    2. ' )' → logprob: -5.266274929046631
    3. ']' → logprob: -5.391274929046631
    4. '')' → logprob: -6.641274929046631
    5. ' la' → logprob: -6.891274929046631
    6. 's' → logprob: -7.016274929046631
    7. 'la' → logprob: -7.516274929046631
    8. '])' → logprob: -7.516274929046631
    9. ''' → logprob: -8.391274452209473
    10. ',' → logprob: -8.391274452209473

Token 89: ''ind' (ID: 82245)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.639459490776062
    2. 'a' → logprob: -0.889459490776062
    3. '')' → logprob: -3.6394596099853516
    4. ''' → logprob: -4.764459609985352
    5. '']' → logprob: -5.014459609985352
    6. ')' → logprob: -5.514459609985352
    7. ']' → logprob: -5.764459609985352
    8. 's' → logprob: -6.264459609985352
    9. ''a' → logprob: -6.389459609985352
    10. 'es' → logprob: -6.514459609985352

Token 90: 'ice' (ID: 603)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -1.2648636102676392
    2. 'i' → logprob: -1.2648636102676392
    3. 'ex' → logprob: -1.3898636102676392
    4. 'é' → logprob: -2.2648634910583496
    5. 'ice' → logprob: -2.6398634910583496
    6. 'í' → logprob: -6.26486349105835
    7. 'ic' → logprob: -6.38986349105835
    8. 'è' → logprob: -6.76486349105835
    9. 'éc' → logprob: -7.38986349105835
    10. '   ' → logprob: -7.76486349105835

Token 91: ' commence' (ID: 44755)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.15344274044036865
    2. ' ]' → logprob: -2.903442859649658
    3. '[' → logprob: -3.403442859649658
    4. '0' → logprob: -3.778442859649658
    5. ')' → logprob: -4.153442859649658
    6. ' ' → logprob: -5.153442859649658
    7. 's' → logprob: -5.528442859649658
    8. ' )' → logprob: -6.403442859649658
    9. '1' → logprob: -6.653442859649658
    10. '+' → logprob: -7.028442859649658

Token 92: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.1062307208776474
    2. ' ' → logprob: -2.6062307357788086
    3. ')' → logprob: -4.231230735778809
    4. '0' → logprob: -5.606230735778809
    5. 'à' → logprob: -5.606230735778809
    6. ' ]' → logprob: -6.106230735778809
    7. ' )' → logprob: -6.606230735778809
    8. ']' → logprob: -7.106230735778809
    9. '[' → logprob: -8.981230735778809
    10. ''à' → logprob: -9.231230735778809

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1798233985900879
    2. ' ' → logprob: -1.804823398590088
    3. 'z' → logprob: -10.67982292175293
    4. ' z' → logprob: -10.80482292175293
    5. ' zéro' → logprob: -10.80482292175293
    6. ' ' → logprob: -11.92982292175293
    7. ')' → logprob: -12.17982292175293
    8. '1' → logprob: -13.80482292175293
    9. ' )' → logprob: -14.30482292175293
    10. ' zero' → logprob: -14.42982292175293

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.939851037808694e-05
    2. ' ' → logprob: -11.250029563903809
    3. 'z' → logprob: -11.625029563903809
    4. '1' → logprob: -12.750029563903809
    5. ')' → logprob: -13.125029563903809
    6. 's' → logprob: -13.875029563903809
    7. 'o' → logprob: -14.750029563903809
    8. '```' → logprob: -15.125029563903809
    9. ' zéro' → logprob: -15.250029563903809
    10. ''' → logprob: -17.062528610229492

Token 95: ' en' (ID: 469)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20994585752487183
    2. ')' → logprob: -1.7099459171295166
    3. 's' → logprob: -5.0849456787109375
    4. '])' → logprob: -6.5849456787109375
    5. '']' → logprob: -8.334945678710938
    6. '[' → logprob: -8.834945678710938
    7. '')' → logprob: -9.334945678710938
    8. ' ]' → logprob: -9.459945678710938
    9. 'e' → logprob: -9.584945678710938
    10. 'a' → logprob: -10.084945678710938

Token 96: ' Python' (ID: 26534)
  Prédit: ' Python'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Python' → logprob: -0.6923108696937561
    2. 'Python' → logprob: -1.8173108100891113
    3. ' ' → logprob: -2.0673108100891113
    4. '0' → logprob: -2.8173108100891113
    5. 'python' → logprob: -2.9423108100891113
    6. ' python' → logprob: -2.9423108100891113
    7. ' P' → logprob: -4.317310810089111
    8. '1' → logprob: -4.442310810089111
    9. 'P' → logprob: -4.942310810089111
    10. 'u' → logprob: -6.067310810089111

Token 97: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5418265461921692
    2. ']' → logprob: -0.9168265461921692
    3. ' )' → logprob: -5.4168267250061035
    4. '])' → logprob: -5.5418267250061035
    5. ' and' → logprob: -5.6668267250061035
    6. 's' → logprob: -5.7918267250061035
    7. ' ]' → logprob: -6.7918267250061035
    8. 'a' → logprob: -7.1668267250061035
    9. '')' → logprob: -7.9168267250061035
    10. '']' → logprob: -8.166826248168945

Token 98: '#' (ID: 2)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9099060893058777
    2. ' and' → logprob: -1.1599061489105225
    3. 's' → logprob: -1.9099061489105225
    4. 'if' → logprob: -2.9099061489105225
    5. 'and' → logprob: -3.9099061489105225
    6. ' if' → logprob: -3.9099061489105225
    7. ',' → logprob: -4.659905910491943
    8. 'a' → logprob: -4.784905910491943
    9. ':' → logprob: -5.784905910491943
    10. 'i' → logprob: -6.284905910491943

Token 99: ' s' (ID: 265)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8532767295837402
    2. ' ' → logprob: -1.1032767295837402
    3. 's' → logprob: -2.1032767295837402
    4. ' if' → logprob: -2.6032767295837402
    5. 'i' → logprob: -3.9782767295837402
    6. '#' → logprob: -4.10327672958374
    7. ' #' → logprob: -4.97827672958374
    8. ' i' → logprob: -7.35327672958374
    9. 'a' → logprob: -7.85327672958374
    10. 'n' → logprob: -7.97827672958374

Token 100: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.828512363834307e-05
    2. '.' → logprob: -10.000088691711426
    3. '[
' → logprob: -11.625088691711426
    4. ']' → logprob: -12.250088691711426
    5. '[]' → logprob: -12.375088691711426
    6. '[:' → logprob: -12.625088691711426
    7. '>' → logprob: -13.000088691711426
    8. '#' → logprob: -13.000088691711426
    9. 'if' → logprob: -13.250088691711426
    10. ''' → logprob: -13.375088691711426

Token 101: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6339551210403442
    2. '1' → logprob: -0.7589551210403442
    3. '2' → logprob: -7.008955001831055
    4. ' ' → logprob: -8.758955001831055
    5. ']' → logprob: -8.758955001831055
    6. '[' → logprob: -9.383955001831055
    7. '3' → logprob: -11.133955001831055
    8. ':' → logprob: -11.383955001831055
    9. '```' → logprob: -11.508955001831055
    10. ')' → logprob: -13.133955001831055

Token 102: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006359508261084557
    2. ' ]' → logprob: -7.375636100769043
    3. '']' → logprob: -12.000636100769043
    4. 's' → logprob: -13.750636100769043
    5. ']
' → logprob: -14.000636100769043
    6. '"]' → logprob: -14.875636100769043
    7. ' ' → logprob: -15.250636100769043
    8. ']==' → logprob: -15.500636100769043
    9. ')' → logprob: -15.750636100769043
    10. ']

' → logprob: -16.375635147094727

Token 103: ' correspond' (ID: 11095)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3665352165699005
    2. ' ' → logprob: -1.2415351867675781
    3. '==' → logprob: -5.241535186767578
    4. ')' → logprob: -5.366535186767578
    5. ' )' → logprob: -6.241535186767578
    6. '<|end|>' → logprob: -6.366535186767578
    7. '  ' → logprob: -7.241535186767578
    8. 's' → logprob: -7.491535186767578
    9. ' ,' → logprob: -7.616535186767578
    10. ']' → logprob: -7.866535186767578

Token 104: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.6815763711929321
    2. ' à' → logprob: -1.1815763711929321
    3. ' ' → logprob: -2.3065762519836426
    4. '<|end|>' → logprob: -3.3065762519836426
    5. '  ' → logprob: -3.6815762519836426
    6. ' to' → logprob: -5.181576251983643
    7. '[' → logprob: -5.806576251983643
    8. ' ' → logprob: -5.931576251983643
    9. 'au' → logprob: -5.931576251983643
    10. '[]' → logprob: -6.556576251983643

Token 105: ' deuxième' (ID: 51664)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.08406831324100494
    2. ' deuxième' → logprob: -2.7090682983398438
    3. ' second' → logprob: -4.959068298339844
    4. 'd' → logprob: -6.334068298339844
    5. 's' → logprob: -6.459068298339844
    6. ' ' → logprob: -6.709068298339844
    7. 'second' → logprob: -7.209068298339844
    8. ' d' → logprob: -7.334068298339844
    9. ' deux' → logprob: -7.334068298339844
    10. ' ' → logprob: -8.209068298339844

Token 106: ' caractère' (ID: 80509)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8991605043411255
    2. ' ' → logprob: -1.0241605043411255
    3. ' ]' → logprob: -1.8991605043411255
    4. '[' → logprob: -3.399160385131836
    5. ')' → logprob: -4.149160385131836
    6. 's' → logprob: -4.149160385131836
    7. ' )' → logprob: -5.899160385131836
    8. ' espace' → logprob: -6.274160385131836
    9. '  ' → logprob: -6.274160385131836
    10. ' ==' → logprob: -6.399160385131836

Token 107: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9879234433174133
    2. ' s' → logprob: -1.8629233837127686
    3. ' ' → logprob: -1.9879233837127686
    4. 's' → logprob: -1.9879233837127686
    5. ' et' → logprob: -2.4879233837127686
    6. ')' → logprob: -2.4879233837127686
    7. ' )' → logprob: -3.9879233837127686
    8. ' ==' → logprob: -5.487923622131348
    9. '<|end|>' → logprob: -6.237923622131348
    10. ',' → logprob: -6.362923622131348

Token 108: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.43677783012390137
    2. ' s' → logprob: -1.0617778301239014
    3. ' ' → logprob: -5.3117780685424805
    4. '```' → logprob: -6.3117780685424805
    5. ' and' → logprob: -7.3117780685424805
    6. '[' → logprob: -9.31177806854248
    7. ' 
' → logprob: -9.68677806854248
    8. ' if' → logprob: -10.06177806854248
    9. '``' → logprob: -10.06177806854248
    10. ' ```' → logprob: -10.06177806854248

Token 109: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42874523997306824
    2. ' s' → logprob: -1.0537452697753906
    3. ' ' → logprob: -10.80374526977539
    4. ''' → logprob: -12.17874526977539
    5. ''s' → logprob: -12.42874526977539
    6. ' ' → logprob: -12.42874526977539
    7. '#' → logprob: -13.42874526977539
    8. '(s' → logprob: -13.80374526977539
    9. '```' → logprob: -14.11624526977539
    10. '	s' → logprob: -14.36624526977539

Token 110: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.531315314830863e-06
    2. ' [' → logprob: -14.000003814697266
    3. '[]' → logprob: -14.250003814697266
    4. '.' → logprob: -14.250003814697266
    5. '[
' → logprob: -14.250003814697266
    6. '```' → logprob: -15.500003814697266
    7. ']' → logprob: -15.875003814697266
    8. 's' → logprob: -16.500003814697266
    9. '2' → logprob: -16.875003814697266
    10. '[...]' → logprob: -17.750003814697266

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.739826181321405e-05
    2. ' ' → logprob: -10.00004768371582
    3. '0' → logprob: -14.37504768371582
    4. '3' → logprob: -14.75004768371582
    5. '```' → logprob: -15.06254768371582
    6. '1' → logprob: -15.25004768371582
    7. '  ' → logprob: -16.06254768371582
    8. ']' → logprob: -16.81254768371582
    9. '   ' → logprob: -16.87504768371582
    10. '۲' → logprob: -17.37504768371582

Token 112: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009357591043226421
    2. ' ]' → logprob: -7.1259355545043945
    3. '']' → logprob: -9.000935554504395
    4. '"]' → logprob: -12.750935554504395
    5. 's' → logprob: -13.750935554504395
    6. ']==' → logprob: -13.875935554504395
    7. ' ' → logprob: -14.500935554504395
    8. '[' → logprob: -14.625935554504395
    9. ' ' → logprob: -14.875935554504395
    10. ')' → logprob: -15.500935554504395

Token 113: ' correspond' (ID: 11095)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09033479541540146
    2. ' ' → logprob: -2.590334892272949
    3. ']' → logprob: -5.465334892272949
    4. '==' → logprob: -5.590334892272949
    5. ' ]' → logprob: -6.465334892272949
    6. 's' → logprob: -7.965334892272949
    7. ')' → logprob: -7.965334892272949
    8. ' s' → logprob: -8.59033489227295
    9. ' )' → logprob: -8.71533489227295
    10. '  ' → logprob: -8.84033489227295

Token 114: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.09753961861133575
    2. ' à' → logprob: -2.5975396633148193
    3. 'au' → logprob: -5.09753942489624
    4. ' ==' → logprob: -5.47253942489624
    5. ' a' → logprob: -6.09753942489624
    6. ' ' → logprob: -6.09753942489624
    7. ']' → logprob: -6.59753942489624
    8. ' to' → logprob: -7.84753942489624
    9. ')' → logprob: -7.84753942489624
    10. 'à' → logprob: -8.097539901733398

Token 115: ' troisième' (ID: 75373)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.04933791235089302
    2. ' troisième' → logprob: -3.049337863922119
    3. ' tro' → logprob: -7.799337863922119
    4. 's' → logprob: -9.674338340759277
    5. 'third' → logprob: -9.799338340759277
    6. 't' → logprob: -9.799338340759277
    7. '3' → logprob: -9.924338340759277
    8. ' third' → logprob: -10.174338340759277
    9. 'de' → logprob: -10.674338340759277
    10. ' ' → logprob: -11.174338340759277

Token 116: ' caractère' (ID: 80509)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5246086716651917
    2. ']' → logprob: -1.8996086120605469
    3. ' ]' → logprob: -2.274608612060547
    4. ' ==' → logprob: -2.899608612060547
    5. ''' → logprob: -3.899608612060547
    6. ')' → logprob: -4.149608612060547
    7. ' )' → logprob: -4.524608612060547
    8. ' and' → logprob: -4.774608612060547
    9. '[' → logprob: -5.399608612060547
    10. '_' → logprob: -5.399608612060547

Token 117: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013608485460281372
    2. ' if' → logprob: -4.763608455657959
    3. 'i' → logprob: -5.638608455657959
    4. ':' → logprob: -7.138608455657959
    5. ':
' → logprob: -8.513608932495117
    6. ' 
' → logprob: -9.263608932495117
    7. 's' → logprob: -9.263608932495117
    8. '
' → logprob: -9.763608932495117
    9. ' i' → logprob: -9.888608932495117
    10. ',' → logprob: -10.263608932495117

Token 118: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0672454684972763
    2. 'i' → logprob: -3.0672454833984375
    3. ' if' → logprob: -4.6922454833984375
    4. '
' → logprob: -5.0672454833984375
    5. ' 
' → logprob: -6.1922454833984375
    6. ' i' → logprob: -8.192245483398438
    7. 's' → logprob: -8.817245483398438
    8. '#' → logprob: -8.817245483398438
    9. 'a' → logprob: -9.067245483398438
    10. '  
' → logprob: -9.567245483398438

Token 119: ' L' (ID: 451)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023560136556625366
    2. 'i' → logprob: -3.773560047149658
    3. ' if' → logprob: -8.148560523986816
    4. '#' → logprob: -11.273560523986816
    5. ' i' → logprob: -11.648560523986816
    6. ' 
' → logprob: -13.398560523986816
    7. '
' → logprob: -13.898560523986816
    8. 's' → logprob: -15.273560523986816
    9. '  
' → logprob: -15.273560523986816
    10. 'a' → logprob: -15.398560523986816

Token 120: ''ex' (ID: 23472)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.1562097668647766
    2. '#' → logprob: -2.781209707260132
    3. 'i' → logprob: -2.781209707260132
    4. 'if' → logprob: -4.656209945678711
    5. 'en' → logprob: -5.656209945678711
    6. ''' → logprob: -6.406209945678711
    7. 'a' → logprob: -6.531209945678711
    8. 's' → logprob: -7.406209945678711
    9. 'f' → logprob: -7.531209945678711
    10. '```' → logprob: -7.656209945678711

Token 121: 'pression' (ID: 4521)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05665866658091545
    2. 'if' → logprob: -3.1816587448120117
    3. 'e' → logprob: -4.931658744812012
    4. '#' → logprob: -5.681658744812012
    5. 'a' → logprob: -6.681658744812012
    6. 'c' → logprob: -7.931658744812012
    7. '```' → logprob: -8.306658744812012
    8. 's' → logprob: -9.056658744812012
    9. 'p' → logprob: -9.056658744812012
    10. ' if' → logprob: -9.181658744812012

Token 122: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0652756318449974
    2. 's' → logprob: -2.8152756690979004
    3. ' (' → logprob: -5.9402756690979
    4. '(s' → logprob: -8.565275192260742
    5. ' ' → logprob: -8.690275192260742
    6. ' if' → logprob: -9.190275192260742
    7. ' len' → logprob: -9.690275192260742
    8. 'if' → logprob: -10.315275192260742
    9. ' ' → logprob: -10.440275192260742
    10. '(' → logprob: -10.440275192260742

Token 123: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9504606825648807e-05
    2. '[:' → logprob: -11.125019073486328
    3. '.' → logprob: -13.625019073486328
    4. '[
' → logprob: -13.875019073486328
    5. 's' → logprob: -14.250019073486328
    6. '0' → logprob: -14.500019073486328
    7. ' [' → logprob: -14.750019073486328
    8. '.startswith' → logprob: -15.000019073486328
    9. '```' → logprob: -15.375019073486328
    10. '[:]' → logprob: -16.375019073486328

Token 124: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.894790981779806e-05
    2. ' ' → logprob: -10.000048637390137
    3. '[' → logprob: -12.875048637390137
    4. '2' → logprob: -14.875048637390137
    5. ']' → logprob: -15.125048637390137
    6. '1' → logprob: -16.500049591064453
    7. ':' → logprob: -16.750049591064453
    8. '```' → logprob: -16.875049591064453
    9. 's' → logprob: -17.000049591064453
    10. '  ' → logprob: -17.250049591064453

Token 125: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05493960529565811
    2. ']==' → logprob: -3.0549395084381104
    3. '==' → logprob: -5.4299397468566895
    4. ' ]' → logprob: -6.9299397468566895
    5. ' ==' → logprob: -7.3049397468566895
    6. 's' → logprob: -8.304939270019531
    7. '```' → logprob: -11.429939270019531
    8. '']' → logprob: -11.554939270019531
    9. '']==' → logprob: -12.429939270019531
    10. ' ' → logprob: -12.429939270019531

Token 126: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2521020770072937
    2. '==' → logprob: -1.5021021366119385
    3. 's' → logprob: -9.25210189819336
    4. '=' → logprob: -9.87710189819336
    5. ' ' → logprob: -12.25210189819336
    6. ' s' → logprob: -12.75210189819336
    7. '==
' → logprob: -12.87710189819336
    8. ')==' → logprob: -13.00210189819336
    9. ' ' → logprob: -13.12710189819336
    10. ')' → logprob: -13.12710189819336

Token 127: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6931529641151428
    2. ' s' → logprob: -0.6931529641151428
    3. ' ' → logprob: -12.818153381347656
    4. ' ' → logprob: -13.318153381347656
    5. '(s' → logprob: -14.193153381347656
    6. ''s' → logprob: -15.318153381347656
    7. '	s' → logprob: -15.943153381347656
    8. '_s' → logprob: -16.443153381347656
    9. ' '' → logprob: -17.068153381347656
    10. '  ' → logprob: -17.193153381347656

Token 128: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.771655115589965e-05
    2. ' [' → logprob: -11.625018119812012
    3. 's' → logprob: -13.125018119812012
    4. '[
' → logprob: -13.250018119812012
    5. '1' → logprob: -13.500018119812012
    6. '[s' → logprob: -14.125018119812012
    7. ']' → logprob: -14.250018119812012
    8. '```' → logprob: -15.000018119812012
    9. 'and' → logprob: -15.250018119812012
    10. ' and' → logprob: -15.250018119812012

Token 129: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.25000286102295
    3. '2' → logprob: -13.87500286102295
    4. ']' → logprob: -15.75000286102295
    5. '[' → logprob: -16.687503814697266
    6. '```' → logprob: -16.812503814697266
    7. '0' → logprob: -17.250003814697266
    8. 's' → logprob: -17.437503814697266
    9. '   ' → logprob: -18.437503814697266
    10. '
' → logprob: -18.625003814697266

Token 130: ']' (ID: 60)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06496020406484604
    2. ' ==' → logprob: -3.314960241317749
    3. ']' → logprob: -4.43996000289917
    4. 'and' → logprob: -4.68996000289917
    5. '==' → logprob: -5.31496000289917
    6. ')' → logprob: -7.81496000289917
    7. ' ' → logprob: -8.939960479736328
    8. ' et' → logprob: -10.189960479736328
    9. ']==' → logprob: -10.939960479736328
    10. ' ' → logprob: -11.189960479736328

Token 131: ' ==' (ID: 951)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018108973279595375
    2. 'and' → logprob: -4.14310884475708
    3. ' ==' → logprob: -6.51810884475708
    4. '==' → logprob: -8.268109321594238
    5. ' et' → logprob: -8.643109321594238
    6. ' ' → logprob: -8.893109321594238
    7. 'et' → logprob: -11.268109321594238
    8. ' ' → logprob: -12.518109321594238
    9. ')' → logprob: -12.643109321594238
    10. ' a' → logprob: -13.518109321594238

Token 132: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5759410262107849
    2. 's' → logprob: -0.8259410262107849
    3. ' ' → logprob: -13.70094108581543
    4. ' ' → logprob: -15.32594108581543
    5. '(s' → logprob: -16.95094108581543
    6. '	s' → logprob: -17.20094108581543
    7. '_s' → logprob: -17.32594108581543
    8. ''s' → logprob: -17.45094108581543
    9. '`s' → logprob: -18.07594108581543
    10. '​' → logprob: -19.20094108581543

Token 133: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.896309739408025e-07
    2. ' [' → logprob: -14.125000953674316
    3. '2' → logprob: -17.5
    4. 's' → logprob: -17.625
    5. ''[' → logprob: -17.75
    6. '[
' → logprob: -18.125
    7. '```' → logprob: -18.25
    8. '0' → logprob: -18.375
    9. '[]' → logprob: -18.875
    10. ' ' → logprob: -19.0

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.630610641877865e-06
    2. ' ' → logprob: -12.625006675720215
    3. '[' → logprob: -13.500006675720215
    4. '```' → logprob: -14.250006675720215
    5. '0' → logprob: -15.125006675720215
    6. '
' → logprob: -15.500006675720215
    7. '۲' → logprob: -15.562506675720215
    8. ']' → logprob: -16.2500057220459
    9. '२' → logprob: -16.8125057220459
    10. '২' → logprob: -17.1875057220459

Token 135: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.042735494673252106
    2. '):' → logprob: -3.7927355766296387
    3. ')' → logprob: -4.167735576629639
    4. ':
' → logprob: -5.667735576629639
    5. ']' → logprob: -9.16773509979248
    6. ' :' → logprob: -9.66773509979248
    7. '):
' → logprob: -9.79273509979248
    8. ']:' → logprob: -10.04273509979248
    9. '":' → logprob: -10.66773509979248
    10. '':' → logprob: -11.04273509979248

Token 136: ' vér' (ID: 42524)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020320152398198843
    2. ':
' → logprob: -6.7520318031311035
    3. ' :' → logprob: -7.2520318031311035
    4. ')' → logprob: -9.377032279968262
    5. 'if' → logprob: -10.377032279968262
    6. '):' → logprob: -11.627032279968262
    7. 'print' → logprob: -12.002032279968262
    8. ' ' → logprob: -12.127032279968262
    9. ' :
' → logprob: -12.627032279968262
    10. ' if' → logprob: -12.752032279968262

Token 137: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.003530105808749795
    2. 'if' → logprob: -5.753530025482178
    3. 'ifi' → logprob: -9.378530502319336
    4. 'ifiez' → logprob: -9.753530502319336
    5. 'f' → logprob: -10.378530502319336
    6. 'ifié' → logprob: -10.503530502319336
    7. 'ifiant' → logprob: -10.503530502319336
    8. 'er' → logprob: -10.878530502319336
    9. 'ief' → logprob: -12.003530502319336
    10. 'éf' → logprob: -12.003530502319336

Token 138: ' deux' (ID: 10301)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.3823302984237671
    2. ' ' → logprob: -1.757330298423767
    3. ' si' → logprob: -2.3823304176330566
    4. ' if' → logprob: -3.2573304176330566
    5. ' que' → logprob: -5.257330417633057
    6. ' s' → logprob: -5.507330417633057
    7. ' true' → logprob: -6.757330417633057
    8. 'True' → logprob: -6.757330417633057
    9. ' ' → logprob: -6.882330417633057
    10. 's' → logprob: -7.132330417633057

Token 139: ' choses' (ID: 36936)
  Prédit: ' espaces'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.4550315737724304
    2. 's' → logprob: -2.205031633377075
    3. ' s' → logprob: -2.955031633377075
    4. ' choses' → logprob: -3.580031633377075
    5. ' ' → logprob: -3.705031633377075
    6. ' espace' → logprob: -3.955031633377075
    7. 'es' → logprob: -4.205031394958496
    8. ''' → logprob: -4.455031394958496
    9. ' ==' → logprob: -4.455031394958496
    10. 'spaces' → logprob: -4.580031394958496

Token 140: ' :
' (ID: 10039)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6370980739593506
    2. ':' → logprob: -1.5120980739593506
    3. ' :' → logprob: -1.6370980739593506
    4. 's' → logprob: -3.7620980739593506
    5. ' s' → logprob: -4.51209831237793
    6. '  ' → logprob: -5.26209831237793
    7. ',' → logprob: -5.51209831237793
    8. ' if' → logprob: -6.01209831237793
    9. '<|end|>' → logprob: -6.13709831237793
    10. ' ,' → logprob: -6.26209831237793

Token 141: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9517902731895447
    2. ' ' → logprob: -1.5767903327941895
    3. ' s' → logprob: -1.5767903327941895
    4. ' that' → logprob: -2.4517903327941895
    5. ' que' → logprob: -2.5767903327941895
    6. ' (' → logprob: -3.9517903327941895
    7. ' ' → logprob: -4.8267903327941895
    8. ' if' → logprob: -5.7017903327941895
    9. '(s' → logprob: -6.3267903327941895
    10. ' si' → logprob: -6.5767903327941895

Token 142: ' D' (ID: 415)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.2796805202960968
    2. ' ' → logprob: -2.1546804904937744
    3. 's' → logprob: -2.4046804904937744
    4. ' (' → logprob: -3.4046804904937744
    5. '(s' → logprob: -6.9046807289123535
    6. '(' → logprob: -6.9046807289123535
    7. ' ' → logprob: -8.029680252075195
    8. ' '' → logprob: -8.154680252075195
    9. ' a' → logprob: -8.279680252075195
    10. '  ' → logprob: -8.404680252075195

Token 143: ''abord' (ID: 89989)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.26646944880485535
    2. 's' → logprob: -1.7664694786071777
    3. ''abord' → logprob: -3.2664694786071777
    4. ' (' → logprob: -5.766469478607178
    5. ' ' → logprob: -6.266469478607178
    6. 'ans' → logprob: -6.266469478607178
    7. ' que' → logprob: -6.391469478607178
    8. 'e' → logprob: -6.516469478607178
    9. ' si' → logprob: -6.766469478607178
    10. ' ' → logprob: -7.016469478607178

Token 144: ',' (ID: 11)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.2041783332824707
    2. ' si' → logprob: -2.2041783332824707
    3. ' if' → logprob: -3.5791783332824707
    4. ' s' → logprob: -3.7041783332824707
    5. ' ' → logprob: -4.829178333282471
    6. ' ' → logprob: -5.329178333282471
    7. 's' → logprob: -5.829178333282471
    8. ' that' → logprob: -5.829178333282471
    9. 'si' → logprob: -6.329178333282471
    10. 'que' → logprob: -7.454178333282471

Token 145: ' elle' (ID: 11451)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.6173833608627319
    2. 's' → logprob: -0.8673833608627319
    3. ' que' → logprob: -3.3673834800720215
    4. ' si' → logprob: -6.6173834800720215
    5. ' that' → logprob: -6.7423834800720215
    6. ' if' → logprob: -6.9923834800720215
    7. 'que' → logprob: -7.1173834800720215
    8. 'si' → logprob: -7.3673834800720215
    9. ' ' → logprob: -8.117383003234863
    10. ' ' → logprob: -8.367383003234863

Token 146: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.0068347216583788395
    2. 'v' → logprob: -5.881834506988525
    3. ' vérifier' → logprob: -6.631834506988525
    4. ' s' → logprob: -7.131834506988525
    5. 's' → logprob: -7.256834506988525
    6. ' check' → logprob: -7.881834506988525
    7. ' compare' → logprob: -8.381834983825684
    8. ' teste' → logprob: -9.006834983825684
    9. ' regarde' → logprob: -9.506834983825684
    10. 'compare' → logprob: -9.756834983825684

Token 147: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -4.203409844194539e-05
    2. 'if' → logprob: -10.500041961669922
    3. 'ifiez' → logprob: -12.625041961669922
    4. 'ifié' → logprob: -12.875041961669922
    5. 'ifi' → logprob: -13.125041961669922
    6. 'ife' → logprob: -13.375041961669922
    7. '```' → logprob: -13.375041961669922
    8. '#' → logprob: -14.375041961669922
    9. 'ifier' → logprob: -14.500041961669922
    10. '?' → logprob: -15.125041961669922

Token 148: ' si' (ID: 1784)
  Prédit: ' que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.601690948009491
    2. ' si' → logprob: -0.976690948009491
    3. ' if' → logprob: -3.1016910076141357
    4. 'si' → logprob: -3.8516910076141357
    5. 'que' → logprob: -5.476690769195557
    6. 'if' → logprob: -6.351690769195557
    7. 's' → logprob: -6.476690769195557
    8. ' ' → logprob: -6.976690769195557
    9. ' ' → logprob: -7.351690769195557
    10. ' s' → logprob: -8.851691246032715

Token 149: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.049317147582769394
    2. 's' → logprob: -3.0493171215057373
    3. ' les' → logprob: -7.674317359924316
    4. ' ' → logprob: -9.299317359924316
    5. ' ' → logprob: -9.799317359924316
    6. ' le' → logprob: -9.924317359924316
    7. ' the' → logprob: -11.299317359924316
    8. ' la' → logprob: -11.299317359924316
    9. 'les' → logprob: -11.674317359924316
    10. ' len' → logprob: -11.799317359924316

Token 150: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.869017852295656e-06
    2. '0' → logprob: -12.875006675720215
    3. '[
' → logprob: -13.125006675720215
    4. ' [' → logprob: -14.500006675720215
    5. 's' → logprob: -14.875006675720215
    6. 'a' → logprob: -15.500006675720215
    7. ' ' → logprob: -15.500006675720215
    8. '.' → logprob: -15.750006675720215
    9. '#' → logprob: -16.12500762939453
    10. '['' → logprob: -16.25000762939453

Token 151: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.500005722045898
    3. ' ' → logprob: -13.375005722045898
    4. ']' → logprob: -17.6250057220459
    5. 's' → logprob: -19.1250057220459
    6. '1' → logprob: -19.1250057220459
    7. '```' → logprob: -19.1250057220459
    8. '(' → logprob: -19.3750057220459
    9. ')' → logprob: -19.3750057220459
    10. '۰' → logprob: -19.4375057220459

Token 152: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01654570922255516
    2. ' ]' → logprob: -4.89154577255249
    3. ']==' → logprob: -5.14154577255249
    4. ' ==' → logprob: -6.01654577255249
    5. '==' → logprob: -7.76654577255249
    6. ' ' → logprob: -9.266545295715332
    7. ')' → logprob: -9.891545295715332
    8. 's' → logprob: -10.891545295715332
    9. '']' → logprob: -12.141545295715332
    10. ' ' → logprob: -12.766545295715332

Token 153: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18102769553661346
    2. '==' → logprob: -1.8060276508331299
    3. ' ' → logprob: -8.30602741241455
    4. '=' → logprob: -8.43102741241455
    5. 's' → logprob: -8.43102741241455
    6. ' !=' → logprob: -9.18102741241455
    7. ' est' → logprob: -9.43102741241455
    8. ')' → logprob: -9.80602741241455
    9. ' and' → logprob: -10.18102741241455
    10. ' is' → logprob: -10.30602741241455

Token 154: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.2134256809949875
    2. 'égal' → logprob: -1.713425636291504
    3. ' ég' → logprob: -4.963425636291504
    4. 'ég' → logprob: -5.838425636291504
    5. 'ident' → logprob: -7.338425636291504
    6. 'equal' → logprob: -7.588425636291504
    7. ' equal' → logprob: -7.713425636291504
    8. ' ident' → logprob: -9.213425636291504
    9. 's' → logprob: -9.588425636291504
    10. 'égalité' → logprob: -9.838425636291504

Token 155: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.06700023263692856
    2. 's' → logprob: -3.192000150680542
    3. 'à' → logprob: -4.817000389099121
    4. '<|end|>' → logprob: -5.067000389099121
    5. ' ' → logprob: -5.192000389099121
    6. ' to' → logprob: -7.192000389099121
    7. ' s' → logprob: -7.317000389099121
    8. ' a' → logprob: -7.567000389099121
    9. 'to' → logprob: -7.692000389099121
    10. ''à' → logprob: -7.942000389099121

Token 156: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.029758360236883163
    2. ' s' → logprob: -3.5297584533691406
    3. ' ' → logprob: -12.40475845336914
    4. '<|end|>' → logprob: -12.65475845336914
    5. ' ' → logprob: -14.40475845336914
    6. '_s' → logprob: -17.65475845336914
    7. ' ' → logprob: -17.90475845336914
    8. '	s' → logprob: -18.02975845336914
    9. '(s' → logprob: -18.15475845336914
    10. '  ' → logprob: -18.15475845336914

Token 157: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.191489642835222e-05
    2. ']' → logprob: -10.750041961669922
    3. 's' → logprob: -11.250041961669922
    4. '][' → logprob: -13.500041961669922
    5. ')' → logprob: -13.750041961669922
    6. ''[' → logprob: -14.000041961669922
    7. ' s' → logprob: -14.125041961669922
    8. ' [' → logprob: -14.375041961669922
    9. '1' → logprob: -14.375041961669922
    10. ''' → logprob: -14.750041961669922

Token 158: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -13.125004768371582
    3. ']' → logprob: -13.875004768371582
    4. '[' → logprob: -14.250004768371582
    5. '2' → logprob: -14.375004768371582
    6. '<|end|>' → logprob: -15.750004768371582
    7. '0' → logprob: -16.375003814697266
    8. ')' → logprob: -17.750003814697266
    9. 's' → logprob: -18.000003814697266
    10. '-' → logprob: -18.250003814697266

Token 159: '],' (ID: 2155)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.46581894159317017
    2. '==' → logprob: -1.4658188819885254
    3. ')' → logprob: -2.3408188819885254
    4. ']' → logprob: -3.9658188819885254
    5. ' and' → logprob: -4.340818881988525
    6. ' et' → logprob: -5.090818881988525
    7. ' ' → logprob: -6.465818881988525
    8. ' ' → logprob: -6.590818881988525
    9. ']==' → logprob: -6.590818881988525
    10. ' )' → logprob: -6.840818881988525

Token 160: ' puis' (ID: 18766)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.3047678470611572
    2. 's' → logprob: -1.6797678470611572
    3. ' ' → logprob: -1.9297678470611572
    4. ' and' → logprob: -2.0547678470611572
    5. ' puis' → logprob: -2.1797678470611572
    6. ' et' → logprob: -2.3047678470611572
    7. 'et' → logprob: -3.8047678470611572
    8. 'and' → logprob: -4.054767608642578
    9. ' then' → logprob: -4.429767608642578
    10. ')' → logprob: -7.429767608642578

Token 161: ',' (ID: 11)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.0047675371170044
    2. ' si' → logprob: -1.1297675371170044
    3. ' if' → logprob: -1.7547675371170044
    4. 's' → logprob: -2.379767417907715
    5. ' ' → logprob: -3.629767417907715
    6. 'si' → logprob: -5.129767417907715
    7. 'if' → logprob: -5.254767417907715
    8. ' ' → logprob: -5.254767417907715
    9. ' elle' → logprob: -6.629767417907715
    10. ' que' → logprob: -8.504767417907715

Token 162: ' si' (ID: 1784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5328030586242676
    2. ' s' → logprob: -1.2828030586242676
    3. ' si' → logprob: -2.2828030586242676
    4. 'si' → logprob: -4.157803058624268
    5. ' if' → logprob: -4.782803058624268
    6. ' ' → logprob: -5.157803058624268
    7. 'if' → logprob: -6.032803058624268
    8. ' elle' → logprob: -7.407803058624268
    9. 'ens' → logprob: -8.53280258178711
    10. ' ' → logprob: -8.78280258178711

Token 163: ' ce' (ID: 2357)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07915371656417847
    2. 's' → logprob: -2.5791537761688232
    3. ' ' → logprob: -8.579154014587402
    4. ' ' → logprob: -9.579154014587402
    5. '  ' → logprob: -13.829154014587402
    6. '(s' → logprob: -14.204154014587402
    7. '<|end|>' → logprob: -14.454154014587402
    8. '(' → logprob: -15.141654014587402
    9. '=' → logprob: -15.141654014587402
    10. 'c' → logprob: -15.141654014587402

Token 164: ' résultat' (ID: 62556)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08405044674873352
    2. 'n' → logprob: -3.334050416946411
    3. 'u' → logprob: -4.58405065536499
    4. 'ux' → logprob: -4.70905065536499
    5. '[' → logprob: -4.83405065536499
    6. 't' → logprob: -5.58405065536499
    7. ' s' → logprob: -6.33405065536499
    8. 'ui' → logprob: -6.58405065536499
    9. '```' → logprob: -6.83405065536499
    10. '0' → logprob: -6.95905065536499

Token 165: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.5284641981124878
    2. ' and' → logprob: -1.7784641981124878
    3. ' ' → logprob: -2.2784643173217773
    4. ' is' → logprob: -2.5284643173217773
    5. 'and' → logprob: -3.7784643173217773
    6. ' et' → logprob: -4.653464317321777
    7. ' True' → logprob: -4.653464317321777
    8. ' s' → logprob: -5.528464317321777
    9. '<|end|>' → logprob: -6.278464317321777
    10. 'est' → logprob: -6.403464317321777

Token 166: ' vrai' (ID: 42682)
  Prédit: 'égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'égal' → logprob: -0.525214433670044
    2. ' égal' → logprob: -1.650214433670044
    3. 'v' → logprob: -2.775214433670044
    4. ' True' → logprob: -2.775214433670044
    5. ' vrai' → logprob: -2.900214433670044
    6. 'True' → logprob: -3.400214433670044
    7. ' equal' → logprob: -7.025214195251465
    8. ' ég' → logprob: -7.275214195251465
    9. ' vra' → logprob: -7.525214195251465
    10. 'egal' → logprob: -8.400214195251465

Token 167: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.858971357345581
    2. ' et' → logprob: -1.358971357345581
    3. ' ==' → logprob: -1.983971357345581
    4. '==' → logprob: -2.733971357345581
    5. ' and' → logprob: -2.733971357345581
    6. ',' → logprob: -3.358971357345581
    7. ' ,' → logprob: -4.98397159576416
    8. 'et' → logprob: -5.10897159576416
    9. 'and' → logprob: -6.60897159576416
    10. ' s' → logprob: -7.60897159576416

Token 168: ' elle' (ID: 11451)
  Prédit: ' elle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' elle' → logprob: -0.016370993107557297
    2. ' s' → logprob: -5.26637077331543
    3. ' ' → logprob: -5.26637077331543
    4. 's' → logprob: -5.76637077331543
    5. ' ' → logprob: -6.01637077331543
    6. 'elle' → logprob: -9.64137077331543
    7. ''elle' → logprob: -10.01637077331543
    8. ' on' → logprob: -10.39137077331543
    9. 'la' → logprob: -10.51637077331543
    10. ',' → logprob: -11.01637077331543

Token 169: ' vér' (ID: 42524)
  Prédit: ' vér'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vér' → logprob: -0.001534620183520019
    2. 'v' → logprob: -7.126534461975098
    3. ' vérifier' → logprob: -8.376534461975098
    4. ' compare' → logprob: -8.626534461975098
    5. ' continue' → logprob: -9.001534461975098
    6. ' teste' → logprob: -10.376534461975098
    7. ' regarde' → logprob: -10.501534461975098
    8. 'continue' → logprob: -10.751534461975098
    9. 'compare' → logprob: -10.751534461975098
    10. ' and' → logprob: -10.876534461975098

Token 170: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.0006171276327222586
    2. 'if' → logprob: -7.500617027282715
    3. 'ifié' → logprob: -10.875617027282715
    4. 'ifiez' → logprob: -11.000617027282715
    5. '#' → logprob: -11.250617027282715
    6. 'иф' → logprob: -12.625617027282715
    7. 'i' → logprob: -12.750617027282715
    8. 'ifiée' → logprob: -13.000617027282715
    9. '```' → logprob: -13.625617027282715
    10. 'ifi' → logprob: -13.625617027282715

Token 171: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45989519357681274
    2. ' si' → logprob: -1.084895133972168
    3. 's' → logprob: -4.709895133972168
    4. 'if' → logprob: -4.834895133972168
    5. 'si' → logprob: -5.084895133972168
    6. ' ' → logprob: -5.709895133972168
    7. ' que' → logprob: -5.959895133972168
    8. ' s' → logprob: -7.209895133972168
    9. ' ' → logprob: -7.209895133972168
    10. 'égal' → logprob: -9.209895133972168

Token 172: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.061981577426195145
    2. 's' → logprob: -2.811981678009033
    3. ' ' → logprob: -11.436981201171875
    4. ' ' → logprob: -12.686981201171875
    5. '(s' → logprob: -17.811981201171875
    6. 'c' → logprob: -18.061981201171875
    7. ' ' → logprob: -18.186981201171875
    8. '	s' → logprob: -18.561981201171875
    9. '  ' → logprob: -18.624481201171875
    10. 't' → logprob: -18.749481201171875

Token 173: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.558399319241289e-05
    2. 's' → logprob: -11.125025749206543
    3. '[
' → logprob: -12.625025749206543
    4. ' [' → logprob: -13.375025749206543
    5. '>' → logprob: -14.500025749206543
    6. '[]' → logprob: -14.625025749206543
    7. 'a' → logprob: -14.625025749206543
    8. '[s' → logprob: -14.625025749206543
    9. '[i' → logprob: -14.750025749206543
    10. '[...]' → logprob: -14.875025749206543

Token 174: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003097381442785263
    2. '[' → logprob: -5.8780975341796875
    3. '0' → logprob: -8.378097534179688
    4. ' ' → logprob: -10.128097534179688
    5. '1' → logprob: -11.753097534179688
    6. '```' → logprob: -12.628097534179688
    7. '
' → logprob: -12.753097534179688
    8. '   ' → logprob: -12.940597534179688
    9. ']' → logprob: -13.878097534179688
    10. ' [' → logprob: -14.003097534179688

Token 175: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04980882257223129
    2. ']==' → logprob: -3.5498087406158447
    3. ' ==' → logprob: -4.424808979034424
    4. '==' → logprob: -4.924808979034424
    5. ' ]' → logprob: -7.924808979034424
    6. ' est' → logprob: -9.049808502197266
    7. 's' → logprob: -10.424808502197266
    8. ' ' → logprob: -10.549808502197266
    9. ' ' → logprob: -11.049808502197266
    10. 'est' → logprob: -11.549808502197266

Token 176: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1750411093235016
    2. '==' → logprob: -1.9250410795211792
    3. ' est' → logprob: -4.300041198730469
    4. 'est' → logprob: -7.550041198730469
    5. ' ' → logprob: -8.050041198730469
    6. ' ' → logprob: -8.675041198730469
    7. ']==' → logprob: -10.925041198730469
    8. ' égal' → logprob: -10.925041198730469
    9. ' is' → logprob: -11.175041198730469
    10. ' equal' → logprob: -11.300041198730469

Token 177: ' aussi' (ID: 9894)
  Prédit: ' égal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.7465720772743225
    2. 'égal' → logprob: -1.2465720176696777
    3. ' equal' → logprob: -1.7465720176696777
    4. 'equal' → logprob: -3.6215720176696777
    5. ' ég' → logprob: -3.9965720176696777
    6. ' ==' → logprob: -4.371572017669678
    7. '==' → logprob: -5.371572017669678
    8. 'egal' → logprob: -6.996572017669678
    9. '=' → logprob: -7.996572017669678
    10. ' igual' → logprob: -8.746572494506836

Token 178: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.2267148494720459
    2. 'égal' → logprob: -1.976714849472046
    3. ' ég' → logprob: -3.476714849472046
    4. ' equal' → logprob: -4.101715087890625
    5. '==' → logprob: -4.726715087890625
    6. 'equal' → logprob: -5.226715087890625
    7. ' ==' → logprob: -6.726715087890625
    8. '=' → logprob: -6.976715087890625
    9. 'ég' → logprob: -8.476715087890625
    10. 'egal' → logprob: -8.976715087890625

Token 179: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.00441587483510375
    2. 'à' → logprob: -5.754415988922119
    3. 's' → logprob: -6.879415988922119
    4. ' ' → logprob: -9.504415512084961
    5. ' to' → logprob: -10.004415512084961
    6. ' a' → logprob: -10.379415512084961
    7. ' s' → logprob: -10.879415512084961
    8. ''à' → logprob: -11.004415512084961
    9. 'a' → logprob: -11.879415512084961
    10. ' ' → logprob: -12.629415512084961

Token 180: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3132627606391907
    2. ' s' → logprob: -1.313262701034546
    3. ' ' → logprob: -14.188262939453125
    4. ' ' → logprob: -15.688262939453125
    5. '	s' → logprob: -16.688262939453125
    6. '(s' → logprob: -18.813262939453125
    7. '   ' → logprob: -18.813262939453125
    8. '  ' → logprob: -18.813262939453125
    9. '>s' → logprob: -18.938262939453125
    10. 'c' → logprob: -19.188262939453125

Token 181: '[' (ID: 58)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5037779808044434
    2. '[' → logprob: -1.6287779808044434
    3. 's' → logprob: -1.6287779808044434
    4. ' ' → logprob: -7.003777980804443
    5. '3' → logprob: -7.378777980804443
    6. 'e' → logprob: -7.503777980804443
    7. '2' → logprob: -8.128778457641602
    8. '	s' → logprob: -8.128778457641602
    9. ' ' → logprob: -8.628778457641602
    10. ''s' → logprob: -9.378778457641602

Token 182: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.625028610229492
    3. '0' → logprob: -13.500028610229492
    4. '[' → logprob: -13.625028610229492
    5. ']' → logprob: -14.500028610229492
    6. '۲' → logprob: -15.375028610229492
    7. 's' → logprob: -15.500028610229492
    8. '```' → logprob: -15.625028610229492
    9. '
' → logprob: -15.750028610229492
    10. '  ' → logprob: -16.000028610229492

Token 183: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.15816667675971985
    2. '):' → logprob: -2.5331666469573975
    3. ':' → logprob: -2.7831666469573975
    4. ' )' → logprob: -6.783166885375977
    5. 'if' → logprob: -7.158166885375977
    6. '):
' → logprob: -7.158166885375977
    7. ']' → logprob: -7.283166885375977
    8. 's' → logprob: -7.533166885375977
    9. ':
' → logprob: -8.283166885375977
    10. ')
' → logprob: -8.408166885375977

Token 184: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06142793595790863
    2. ':' → logprob: -3.4364278316497803
    3. ':
' → logprob: -4.061428070068359
    4. ' if' → logprob: -4.811428070068359
    5. ' and' → logprob: -7.436428070068359
    6. '
' → logprob: -7.686428070068359
    7. 's' → logprob: -8.31142807006836
    8. ':

' → logprob: -8.81142807006836
    9. 'and' → logprob: -9.06142807006836
    10. 'i' → logprob: -9.31142807006836

Token 185: ' s' (ID: 265)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.43247267603874207
    2. ' s' → logprob: -1.0574727058410645
    3. 'len' → logprob: -6.4324727058410645
    4. 's' → logprob: -6.4324727058410645
    5. ' ' → logprob: -7.6824727058410645
    6. ' ' → logprob: -9.432472229003906
    7. '(len' → logprob: -12.932472229003906
    8. ' (' → logprob: -13.682472229003906
    9. ' space' → logprob: -14.307472229003906
    10. '  ' → logprob: -14.432472229003906

Token 186: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.7120533811976202e-05
    2. '[:' → logprob: -11.625017166137695
    3. ' [' → logprob: -12.250017166137695
    4. ' and' → logprob: -14.000017166137695
    5. '.' → logprob: -14.125017166137695
    6. '.startswith' → logprob: -14.625017166137695
    7. '0' → logprob: -14.750017166137695
    8. 'and' → logprob: -15.375017166137695
    9. ' ' → logprob: -16.125017166137695
    10. '```' → logprob: -16.375017166137695

Token 187: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.417976379045285e-05
    2. ' ' → logprob: -10.125043869018555
    3. '3' → logprob: -12.500043869018555
    4. ']' → logprob: -15.500043869018555
    5. '   ' → logprob: -16.875043869018555
    6. ''' → logprob: -17.125043869018555
    7. '  ' → logprob: -17.250043869018555
    8. ':' → logprob: -17.750043869018555
    9. '```' → logprob: -18.125043869018555
    10. '2' → logprob: -18.625043869018555

Token 188: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.001192490803077817
    2. ' ]' → logprob: -7.376192569732666
    3. ']==' → logprob: -7.501192569732666
    4. '==' → logprob: -11.626192092895508
    5. ' ==' → logprob: -12.501192092895508
    6. 's' → logprob: -15.626192092895508
    7. ' ' → logprob: -15.751192092895508
    8. ')' → logprob: -16.751192092895508
    9. '']' → logprob: -16.876192092895508
    10. '"]' → logprob: -17.001192092895508

Token 189: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.02069498412311077
    2. '==' → logprob: -3.8956949710845947
    3. ' ' → logprob: -8.895694732666016
    4. '=' → logprob: -11.395694732666016
    5. ' =' → logprob: -13.020694732666016
    6. ' ' → logprob: -14.020694732666016
    7. '  ' → logprob: -14.145694732666016
    8. ' ==
' → logprob: -15.395694732666016
    9. ' ===' → logprob: -16.270694732666016
    10. ')' → logprob: -16.270694732666016

Token 190: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141586661338806
    2. ' s' → logprob: -1.7014158964157104
    3. '<|end|>' → logprob: -13.451416015625
    4. ' ' → logprob: -14.201416015625
    5. ' ' → logprob: -15.201416015625
    6. '(s' → logprob: -15.826416015625
    7. '_s' → logprob: -17.076416015625
    8. '	s' → logprob: -18.076416015625
    9. ''s' → logprob: -18.326416015625
    10. '<|end|>' → logprob: -19.826416015625

Token 191: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4021237802808173e-05
    2. '.' → logprob: -11.750014305114746
    3. ']' → logprob: -12.375014305114746
    4. ' [' → logprob: -14.000014305114746
    5. '][' → logprob: -14.500014305114746
    6. '[
' → logprob: -15.250014305114746
    7. '.[' → logprob: -15.625014305114746
    8. '1' → logprob: -15.875014305114746
    9. ' ' → logprob: -17.00001335144043
    10. '	' → logprob: -17.75001335144043

Token 192: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.703443770878948e-06
    2. ' ' → logprob: -12.250007629394531
    3. ']' → logprob: -13.000007629394531
    4. '[' → logprob: -15.750007629394531
    5. '2' → logprob: -15.750007629394531
    6. '0' → logprob: -16.25000762939453
    7. 's' → logprob: -17.18750762939453
    8. '<|end|>' → logprob: -17.25000762939453
    9. '-' → logprob: -17.56250762939453
    10. '' → logprob: -17.56250762939453

Token 193: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004358552396297455
    2. ']==' → logprob: -6.004358768463135
    3. ' ]' → logprob: -6.754358768463135
    4. ' ==' → logprob: -7.504358768463135
    5. '==' → logprob: -8.754358291625977
    6. ' ' → logprob: -12.629358291625977
    7. '']' → logprob: -14.254358291625977
    8. ')' → logprob: -14.754358291625977
    9. '}' → logprob: -14.879358291625977
    10. '"]' → logprob: -15.004358291625977

Token 194: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.014187362976372242
    2. '==' → logprob: -4.264187335968018
    3. ' and' → logprob: -10.889187812805176
    4. ' ' → logprob: -13.389187812805176
    5. ' ' → logprob: -14.014187812805176
    6. '=' → logprob: -14.139187812805176
    7. ' ==
' → logprob: -14.264187812805176
    8. 'and' → logprob: -14.514187812805176
    9. '==
' → logprob: -15.014187812805176
    10. ']==' → logprob: -15.639187812805176

Token 195: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1269282102584839
    2. ' s' → logprob: -2.1269283294677734
    3. ' ' → logprob: -17.126928329467773
    4. ' ' → logprob: -17.376928329467773
    5. '	s' → logprob: -18.001928329467773
    6. '_s' → logprob: -18.001928329467773
    7. ''s' → logprob: -18.751928329467773
    8. '(s' → logprob: -18.751928329467773
    9. '<|end|>' → logprob: -19.626928329467773
    10. '`s' → logprob: -20.376928329467773

Token 196: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '2' → logprob: -16.125
    3. ' [' → logprob: -17.625
    4. '[
' → logprob: -18.75
    5. '\[' → logprob: -18.75
    6. '][' → logprob: -19.25
    7. ''[' → logprob: -19.625
    8. ']' → logprob: -19.75
    9. '```' → logprob: -20.125
    10. ' ' → logprob: -20.625

Token 197: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. ']' → logprob: -14.875008583068848
    4. '```' → logprob: -15.125008583068848
    5. '۲' → logprob: -16.375009536743164
    6. '
' → logprob: -16.500009536743164
    7. '   ' → logprob: -16.750009536743164
    8. '  ' → logprob: -17.125009536743164
    9. '[' → logprob: -17.437509536743164
    10. '２' → logprob: -17.750009536743164

Token 198: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.05199834331870079
    2. ':' → logprob: -3.0519983768463135
    3. ']' → logprob: -6.051998138427734
    4. ']:
' → logprob: -6.926998138427734
    5. '):' → logprob: -10.301998138427734
    6. ':
' → logprob: -11.301998138427734
    7. '}:' → logprob: -11.301998138427734
    8. '>:' → logprob: -12.801998138427734
    9. ':]' → logprob: -13.176998138427734
    10. ']:
' → logprob: -13.301998138427734

Token 199: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3330039381980896
    2. '   ' → logprob: -1.3330039978027344
    3. ':
' → logprob: -4.708003997802734
    4. 'print' → logprob: -5.208003997802734
    5. ' print' → logprob: -5.333003997802734
    6. ' :' → logprob: -9.208003997802734
    7. '	print' → logprob: -9.333003997802734
    8. '   ' → logprob: -11.458003997802734
    9. ' :
' → logprob: -11.958003997802734
    10. '  ' → logprob: -12.208003997802734

Token 200: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2664124369621277
    2. ' print' → logprob: -1.7664124965667725
    3. '   ' → logprob: -2.7664124965667725
    4. '
' → logprob: -11.016412734985352
    5. ' ' → logprob: -11.266412734985352
    6. '	print' → logprob: -12.266412734985352
    7. '    
' → logprob: -13.016412734985352
    8. '  ' → logprob: -13.266412734985352
    9. '   ' → logprob: -13.266412734985352
    10. ' ' → logprob: -13.391412734985352

Token 201: ' Si' (ID: 7832)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.47535470128059387
    2. ' print' → logprob: -0.9753546714782715
    3. '   ' → logprob: -6.7253546714782715
    4. ' prin' → logprob: -10.97535514831543
    5. ' ' → logprob: -11.10035514831543
    6. 'prin' → logprob: -11.35035514831543
    7. 'pr' → logprob: -11.47535514831543
    8. 'p' → logprob: -12.60035514831543
    9. '	print' → logprob: -12.85035514831543
    10. ' ' → logprob: -12.85035514831543

Token 202: ' la' (ID: 557)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.7137258052825928
    2. '   ' → logprob: -0.9637258052825928
    3. 'print' → logprob: -2.4637258052825928
    4. ' s' → logprob: -4.588726043701172
    5. ' True' → logprob: -4.588726043701172
    6. ' len' → logprob: -5.213726043701172
    7. ' la' → logprob: -5.463726043701172
    8. '    ' → logprob: -5.713726043701172
    9. ' ' → logprob: -5.838726043701172
    10. 's' → logprob: -5.963726043701172

Token 203: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5075700283050537
    2. '   ' → logprob: -1.1325700283050537
    3. ' print' → logprob: -2.6325700283050537
    4. ' ' → logprob: -6.507570266723633
    5. 'chaine' → logprob: -7.257570266723633
    6. '  ' → logprob: -7.507570266723633
    7. '    ' → logprob: -8.007570266723633
    8. ' chaîne' → logprob: -8.382570266723633
    9. 's' → logprob: -8.757570266723633
    10. 'pr' → logprob: -8.757570266723633

Token 204: ' est' (ID: 893)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.038713641464710236
    2. ' :' → logprob: -4.038713455200195
    3. ' print' → logprob: -4.913713455200195
    4. ' est' → logprob: -4.913713455200195
    5. 'print' → logprob: -6.038713455200195
    6. '   ' → logprob: -6.538713455200195
    7. ':
' → logprob: -7.163713455200195
    8. 's' → logprob: -8.163713455200195
    9. 'est' → logprob: -8.913713455200195
    10. ' is' → logprob: -8.913713455200195

Token 205: ' vraie' (ID: 105841)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005402250215411186
    2. ' vraie' → logprob: -5.505402088165283
    3. 'True' → logprob: -7.130402088165283
    4. ' True' → logprob: -8.005402565002441
    5. '   ' → logprob: -9.755402565002441
    6. 'true' → logprob: -9.755402565002441
    7. ' vrai' → logprob: -10.880402565002441
    8. ' ' → logprob: -11.630402565002441
    9. ' vér' → logprob: -11.755402565002441
    10. 'V' → logprob: -11.880402565002441

Token 206: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17931029200553894
    2. ':' → logprob: -2.0543103218078613
    3. 'print' → logprob: -4.054310321807861
    4. ':
' → logprob: -4.679310321807861
    5. ' print' → logprob: -4.804310321807861
    6. ' :' → logprob: -7.679310321807861
    7. '
' → logprob: -8.054309844970703
    8. '	print' → logprob: -9.179309844970703
    9. ' :
' → logprob: -9.429309844970703
    10. '    
' → logprob: -9.554309844970703

Token 207: ' cela' (ID: 17542)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3646402657032013
    2. 'print' → logprob: -1.614640235900879
    3. '   ' → logprob: -2.239640235900879
    4. '	print' → logprob: -10.739640235900879
    5. '    ' → logprob: -10.989640235900879
    6. ' ' → logprob: -11.114640235900879
    7. '  ' → logprob: -11.364640235900879
    8. '   ' → logprob: -11.989640235900879
    9. '
' → logprob: -12.114640235900879
    10. ' prin' → logprob: -12.239640235900879

Token 208: ' signifie' (ID: 81149)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7932809591293335
    2. ' print' → logprob: -0.7932809591293335
    3. 'print' → logprob: -2.793281078338623
    4. ':' → logprob: -3.418281078338623
    5. ' :' → logprob: -7.168281078338623
    6. ' imprime' → logprob: -8.918280601501465
    7. '	print' → logprob: -9.418280601501465
    8. ' ' → logprob: -9.668280601501465
    9. '    ' → logprob: -10.168280601501465
    10. ' ' → logprob: -10.293280601501465

Token 209: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3951681852340698
    2. ' que' → logprob: -1.1451681852340698
    3. ' ' → logprob: -5.520168304443359
    4. 'print' → logprob: -6.520168304443359
    5. ' print' → logprob: -6.895168304443359
    6. '  ' → logprob: -7.770168304443359
    7. ' qu' → logprob: -7.895168304443359
    8. 'que' → logprob: -7.895168304443359
    9. '    ' → logprob: -8.27016830444336
    10. ' that' → logprob: -9.52016830444336

Token 210: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.5453291535377502
    2. 'print' → logprob: -1.4203290939331055
    3. ' print' → logprob: -2.4203290939331055
    4. 'les' → logprob: -3.7953290939331055
    5. 's' → logprob: -3.9203290939331055
    6. ' s' → logprob: -4.2953290939331055
    7. ' la' → logprob: -4.5453290939331055
    8. ' tous' → logprob: -4.7953290939331055
    9. ' le' → logprob: -5.4203290939331055
    10. ' trois' → logprob: -6.0453290939331055

Token 211: ' ' (ID: 220)
  Prédit: ' trois'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' trois' → logprob: -0.5847801566123962
    2. 'tro' → logprob: -0.8347801566123962
    3. '3' → logprob: -5.584780216217041
    4. 'car' → logprob: -5.834780216217041
    5. ' ' → logprob: -7.459780216217041
    6. ' caractères' → logprob: -7.459780216217041
    7. 'prem' → logprob: -7.959780216217041
    8. 't' → logprob: -8.959779739379883
    9. ' premiers' → logprob: -9.459779739379883
    10. '   ' → logprob: -9.584779739379883

Token 212: '3' (ID: 18)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.028073551133275032
    2. ' trois' → logprob: -4.278073787689209
    3. 'car' → logprob: -4.778073787689209
    4. '3' → logprob: -5.278073787689209
    5. 'prem' → logprob: -9.27807331085205
    6. ' ' → logprob: -9.52807331085205
    7. 'print' → logprob: -10.27807331085205
    8. 'three' → logprob: -10.65307331085205
    9. 'de' → logprob: -10.77807331085205
    10. '   ' → logprob: -11.52807331085205

Token 213: ' premiers' (ID: 59140)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.1774347573518753
    2. ' caractères' → logprob: -2.0524346828460693
    3. ' premiers' → logprob: -4.052434921264648
    4. 'prem' → logprob: -4.177434921264648
    5. '   ' → logprob: -7.927434921264648
    6. '#' → logprob: -8.302434921264648
    7. ' ' → logprob: -8.552434921264648
    8. ' caract' → logprob: -8.552434921264648
    9. ' car' → logprob: -8.802434921264648
    10. ' caracteres' → logprob: -9.427434921264648

Token 214: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.5764361619949341
    2. 'car' → logprob: -0.8264361619949341
    3. ' caracteres' → logprob: -8.701436042785645
    4. ' caract' → logprob: -8.951436042785645
    5. ' car' → logprob: -9.701436042785645
    6. ' caractère' → logprob: -9.701436042785645
    7. ' ' → logprob: -10.451436042785645
    8. 'c' → logprob: -10.951436042785645
    9. 's' → logprob: -11.201436042785645
    10. ' ' → logprob: -12.201436042785645

Token 215: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07225535064935684
    2. ' sont' → logprob: -2.8222553730010986
    3. ' de' → logprob: -5.0722551345825195
    4. 'de' → logprob: -5.8222551345825195
    5. '   ' → logprob: -7.5722551345825195
    6. '#' → logprob: -7.8222551345825195
    7. ' #' → logprob: -10.82225513458252
    8. ' ' → logprob: -10.82225513458252
    9. 'ont' → logprob: -11.19725513458252
    10. 'son' → logprob: -11.44725513458252

Token 216: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3521440327167511
    2. ' s' → logprob: -1.7271440029144287
    3. ' la' → logprob: -2.4771440029144287
    4. 'la' → logprob: -3.3521440029144287
    5. ' ' → logprob: -10.977144241333008
    6. 'l' → logprob: -11.727144241333008
    7. 'chaine' → logprob: -12.477144241333008
    8. 'a' → logprob: -12.727144241333008
    9. '   ' → logprob: -12.852144241333008
    10. ' ' → logprob: -14.352144241333008

Token 217: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -1.0798790454864502
    2. 'cha' → logprob: -1.2048790454864502
    3. 'chaine' → logprob: -1.2048790454864502
    4. 's' → logprob: -2.82987904548645
    5. 'string' → logprob: -7.579878807067871
    6. ' chaine' → logprob: -7.829878807067871
    7. '   ' → logprob: -7.954878807067871
    8. ' ' → logprob: -8.704878807067871
    9. 'print' → logprob: -9.329878807067871
    10. ' s' → logprob: -9.579878807067871

Token 218: ' sont' (ID: 5242)
  Prédit: ' sont'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sont' → logprob: -0.8130744099617004
    2. 's' → logprob: -1.3130743503570557
    3. '   ' → logprob: -1.8130743503570557
    4. 'print' → logprob: -2.5630743503570557
    5. ' print' → logprob: -3.3130743503570557
    6. 'ont' → logprob: -4.813074588775635
    7. '#' → logprob: -6.813074588775635
    8. 'son' → logprob: -7.563074588775635
    9. ' #' → logprob: -7.688074588775635
    10. ' ' → logprob: -9.063074111938477

Token 219: ' ident' (ID: 3951)
  Prédit: ' ident'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ident' → logprob: -0.1479225754737854
    2. 'ident' → logprob: -2.0229225158691406
    3. ' ég' → logprob: -5.772922515869141
    4. ' les' → logprob: -6.522922515869141
    5. 'les' → logprob: -7.772922515869141
    6. 'ég' → logprob: -9.39792251586914
    7. 't' → logprob: -10.64792251586914
    8. 'égal' → logprob: -10.64792251586914
    9. '   ' → logprob: -10.77292251586914
    10. ' identical' → logprob: -11.14792251586914

Token 220: 'iques' (ID: 11654)
  Prédit: 'iques'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iques' → logprob: -0.00010688089241739362
    2. 'ique' → logprob: -9.500106811523438
    3. 'i' → logprob: -11.125106811523438
    4. 'iqu' → logprob: -12.625106811523438
    5. 'ic' → logprob: -12.750106811523438
    6. '#' → logprob: -13.000106811523438
    7. 'ical' → logprob: -13.000106811523438
    8. '```' → logprob: -13.125106811523438
    9. 'aux' → logprob: -13.625106811523438
    10. 'iq' → logprob: -14.000106811523438

Token 221: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005532554816454649
    2. ':' → logprob: -5.630532741546631
    3. 'print' → logprob: -6.880532741546631
    4. ':
' → logprob: -7.755532741546631
    5. ' print' → logprob: -7.880532741546631
    6. '
' → logprob: -10.005532264709473
    7. ' :' → logprob: -11.005532264709473
    8. '    
' → logprob: -11.630532264709473
    9. '       ' → logprob: -12.005532264709473
    10. '   ' → logprob: -12.130532264709473

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002612878568470478
    2. 'print' → logprob: -6.002613067626953
    3. ' print' → logprob: -9.002613067626953
    4. ':' → logprob: -12.002613067626953
    5. '   ' → logprob: -12.752613067626953
    6. '
' → logprob: -13.252613067626953
    7. '    
' → logprob: -13.627613067626953
    8. '	print' → logprob: -14.127613067626953
    9. '       ' → logprob: -14.877613067626953
    10. ' ' → logprob: -15.002613067626953

Token 223: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26609084010124207
    2. '   ' → logprob: -1.5160908699035645
    3. ' print' → logprob: -4.2660908699035645
    4. ' ' → logprob: -11.891090393066406
    5. '  ' → logprob: -12.141090393066406
    6. '	print' → logprob: -12.266090393066406
    7. '    
' → logprob: -12.766090393066406
    8. '   ' → logprob: -13.516090393066406
    9. '
' → logprob: -13.766090393066406
    10. '    ' → logprob: -13.891090393066406

Token 224: ' Dans' (ID: 22082)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.11411959677934647
    2. ' print' → logprob: -2.614119529724121
    3. '   ' → logprob: -3.364119529724121
    4. ' ' → logprob: -11.489119529724121
    5. '  ' → logprob: -12.489119529724121
    6. 'pr' → logprob: -12.989119529724121
    7. '	print' → logprob: -12.989119529724121
    8. 'prin' → logprob: -13.614119529724121
    9. ' prin' → logprob: -14.239119529724121
    10. '    ' → logprob: -14.239119529724121

Token 225: ' ce' (ID: 2357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028331879526376724
    2. ' print' → logprob: -3.903331995010376
    3. ' ' → logprob: -5.903331756591797
    4. '   ' → logprob: -6.653331756591797
    5. 's' → logprob: -6.903331756591797
    6. ' la' → logprob: -7.153331756591797
    7. ' ce' → logprob: -8.028331756591797
    8. ':' → logprob: -8.403331756591797
    9. 'la' → logprob: -8.528331756591797
    10. 'le' → logprob: -8.778331756591797

Token 226: ' cas' (ID: 2108)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20031432807445526
    2. 'case' → logprob: -2.8253142833709717
    3. '   ' → logprob: -3.3253142833709717
    4. ':' → logprob: -3.7003142833709717
    5. ' case' → logprob: -3.8253142833709717
    6. ' cas' → logprob: -4.575314521789551
    7. 'if' → logprob: -4.575314521789551
    8. ' print' → logprob: -5.075314521789551
    9. 'cas' → logprob: -6.075314521789551
    10. '"' → logprob: -6.200314521789551

Token 227: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21253781020641327
    2. ':' → logprob: -2.0875377655029297
    3. 'print' → logprob: -2.9625377655029297
    4. ' print' → logprob: -4.21253776550293
    5. ':
' → logprob: -7.33753776550293
    6. '	print' → logprob: -9.21253776550293
    7. '       ' → logprob: -9.33753776550293
    8. '  ' → logprob: -10.46253776550293
    9. '    ' → logprob: -10.46253776550293
    10. ' :' → logprob: -10.58753776550293

Token 228: ' on' (ID: 402)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.1616818606853485
    2. 'print' → logprob: -1.911681890487671
    3. '   ' → logprob: -6.536681652069092
    4. ' prin' → logprob: -12.91168212890625
    5. '	print' → logprob: -13.53668212890625
    6. ' ' → logprob: -13.66168212890625
    7. 'pr' → logprob: -14.53668212890625
    8. '  ' → logprob: -14.78668212890625
    9. 'prin' → logprob: -14.78668212890625
    10. ' ' → logprob: -14.91168212890625

Token 229: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0225095748901367
    2. ' print' → logprob: -1.0225095748901367
    3. '   ' → logprob: -1.2725095748901367
    4. 'pr' → logprob: -9.147509574890137
    5. '	print' → logprob: -9.272509574890137
    6. ' ' → logprob: -9.772509574890137
    7. ' prin' → logprob: -10.147509574890137
    8. '  ' → logprob: -10.272509574890137
    9. '    
' → logprob: -10.647509574890137
    10. '
' → logprob: -10.647509574890137

Token 230: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0010129223810508847
    2. '(' → logprob: -7.126012802124023
    3. '"' → logprob: -9.126012802124023
    4. '(s' → logprob: -9.876012802124023
    5. '('' → logprob: -10.376012802124023
    6. '(f' → logprob: -11.751012802124023
    7. '()' → logprob: -13.751012802124023
    8. ' "' → logprob: -13.876012802124023
    9. '"s' → logprob: -13.876012802124023
    10. 's' → logprob: -14.001012802124023

Token 231: 'No' (ID: 3160)
  Prédit: 'Les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Les' → logprob: -0.264305979013443
    2. 'Tro' → logprob: -2.26430606842041
    3. 'Oui' → logprob: -2.76430606842041
    4. 'Car' → logprob: -3.76430606842041
    5. '3' → logprob: -5.01430606842041
    6. 'AAA' → logprob: -5.13930606842041
    7. 'les' → logprob: -5.13930606842041
    8. 'Triple' → logprob: -5.51430606842041
    9. '"' → logprob: -6.01430606842041
    10. 'oui' → logprob: -6.13930606842041

Token 232: '"' (ID: 1)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006013764068484306
    2. 't' → logprob: -6.381013870239258
    3. 'nn' → logprob: -6.381013870239258
    4. 'ne' → logprob: -6.631013870239258
    5. 'm' → logprob: -8.631013870239258
    6. 'oo' → logprob: -9.006013870239258
    7. 'r' → logprob: -9.131013870239258
    8. 'nne' → logprob: -9.506013870239258
    9. '```' → logprob: -9.631013870239258
    10. 'p' → logprob: -10.006013870239258

Token 233: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1895686388015747
    2. '   ' → logprob: -1.9395686388015747
    3. '()' → logprob: -4.439568519592285
    4. '("' → logprob: -4.439568519592285
    5. '()
' → logprob: -6.564568519592285
    6. '
' → logprob: -6.939568519592285
    7. '(' → logprob: -7.314568519592285
    8. ' print' → logprob: -7.314568519592285
    9. '")' → logprob: -8.064568519592285
    10. ')' → logprob: -8.564568519592285

Token 234: ' l' (ID: 305)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2256147861480713
    2. 'ut' → logprob: -2.3506147861480713
    3. 'r' → logprob: -2.4756147861480713
    4. '   ' → logprob: -4.850614547729492
    5. 'n' → logprob: -5.725614547729492
    6. 'u' → logprob: -5.725614547729492
    7. 'la' → logprob: -6.100614547729492
    8. 'ur' → logprob: -6.350614547729492
    9. ' print' → logprob: -6.850614547729492
    10. 'int' → logprob: -7.600614547729492

Token 235: ''écran' (ID: 147901)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.35040318965911865
    2. 'print' → logprob: -1.3504031896591187
    3. 'e' → logprob: -3.975403308868408
    4. ''utilisateur' → logprob: -4.725403308868408
    5. ''écran' → logprob: -5.225403308868408
    6. ''' → logprob: -6.975403308868408
    7. '   ' → logprob: -7.475403308868408
    8. ''é' → logprob: -8.22540283203125
    9. 'og' → logprob: -8.85040283203125
    10. ''impression' → logprob: -8.97540283203125

Token 236: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10121501237154007
    2. 'print' → logprob: -2.351215124130249
    3. '
' → logprob: -7.60121488571167
    4. ' print' → logprob: -7.97621488571167
    5. ':' → logprob: -9.476215362548828
    6. '    
' → logprob: -10.601215362548828
    7. '       ' → logprob: -10.601215362548828
    8. '```' → logprob: -10.851215362548828
    9. '	print' → logprob: -12.601215362548828
    10. ')' → logprob: -12.601215362548828

Token 237: ' la' (ID: 557)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16149109601974487
    2. ' print' → logprob: -1.9114911556243896
    3. 'r' → logprob: -6.7864909172058105
    4. '(print' → logprob: -9.661491394042969
    5. ')' → logprob: -10.911491394042969
    6. 'nt' → logprob: -11.161491394042969
    7. '	print' → logprob: -11.536491394042969
    8. ' la' → logprob: -12.286491394042969
    9. ' ' → logprob: -12.411491394042969
    10. 'n' → logprob: -13.036491394042969

Token 238: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0033167421352118254
    2. ' print' → logprob: -5.753316879272461
    3. 'pp' → logprob: -9.753316879272461
    4. 'r' → logprob: -11.128316879272461
    5. '#print' → logprob: -11.378316879272461
    6. '`' → logprob: -11.503316879272461
    7. 'Print' → logprob: -11.628316879272461
    8. 'rg' → logprob: -11.878316879272461
    9. 'n' → logprob: -12.753316879272461
    10. 'p' → logprob: -12.753316879272461

Token 239: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12693440914154053
    2. ' print' → logprob: -2.12693452835083
    3. '```' → logprob: -12.626934051513672
    4. '`' → logprob: -13.251934051513672
    5. '(print' → logprob: -14.001934051513672
    6. '.print' → logprob: -15.876934051513672
    7. '	print' → logprob: -17.001934051513672
    8. '   ' → logprob: -17.001934051513672
    9. 'pr' → logprob: -17.251934051513672
    10. 'prin' → logprob: -17.251934051513672

Token 240: '()
' (ID: 1234)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0222209692001343
    2. '   ' → logprob: -1.2722209692001343
    3. '("' → logprob: -1.5222209692001343
    4. '(' → logprob: -2.147221088409424
    5. '(
' → logprob: -4.897221088409424
    6. '()' → logprob: -5.022221088409424
    7. '()
' → logprob: -5.272221088409424
    8. ' print' → logprob: -6.022221088409424
    9. '("\' → logprob: -6.647221088409424
    10. '('' → logprob: -7.397221088409424

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07078220695257187
    2. 'print' → logprob: -2.69578218460083
    3. ' print' → logprob: -7.19578218460083
    4. '```' → logprob: -9.945782661437988
    5. '       ' → logprob: -11.070782661437988
    6. '    
' → logprob: -11.570782661437988
    7. '	print' → logprob: -12.195782661437988
    8. '
' → logprob: -12.445782661437988
    9. ':' → logprob: -13.070782661437988
    10. ')' → logprob: -13.320782661437988

Token 242: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.060512974858284
    2. '   ' → logprob: -3.0605130195617676
    3. ' print' → logprob: -4.435513019561768
    4. '```' → logprob: -12.43551254272461
    5. '	print' → logprob: -14.18551254272461
    6. '       ' → logprob: -15.31051254272461
    7. '   ' → logprob: -15.68551254272461
    8. '  ' → logprob: -15.81051254272461
    9. ' ' → logprob: -15.93551254272461
    10. '    
' → logprob: -16.18551254272461

Token 243: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0019313741941004992
    2. '(' → logprob: -6.251931190490723
    3. '()' → logprob: -13.626931190490723
    4. '('' → logprob: -13.626931190490723
    5. '("")' → logprob: -15.876931190490723
    6. ' ("' → logprob: -16.50193214416504
    7. '("("' → logprob: -16.62693214416504
    8. '(
' → logprob: -17.75193214416504
    9. ' ' → logprob: -18.00193214416504
    10. '"' → logprob: -18.12693214416504

Token 244: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -7.703443770878948e-06
    2. 'Yes' → logprob: -11.875007629394531
    3. ' No' → logprob: -15.250007629394531
    4. 'N' → logprob: -15.375007629394531
    5. '"No' → logprob: -16.62500762939453
    6. 'Oui' → logprob: -17.12500762939453
    7. 'Non' → logprob: -17.87500762939453
    8. '   ' → logprob: -18.00000762939453
    9. '_No' → logprob: -19.12500762939453
    10. '```' → logprob: -19.62500762939453

Token 245: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.9160102712921798e-05
    2. '")
' → logprob: -10.625029563903809
    3. ')")' → logprob: -13.125029563903809
    4. ')' → logprob: -13.625029563903809
    5. '")
' → logprob: -14.250029563903809
    6. '"' → logprob: -15.000029563903809
    7. '")

' → logprob: -15.500029563903809
    8. '!")' → logprob: -15.875029563903809
    9. '");' → logprob: -16.375028610229492
    10. ' ")' → logprob: -16.625028610229492

Token 246: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.00018935515254270285
    2. ' else' → logprob: -8.750189781188965
    3. 'elif' → logprob: -10.750189781188965
    4. 'el' → logprob: -13.125189781188965
    5. '```' → logprob: -13.250189781188965
    6. 'e' → logprob: -13.500189781188965
    7. 'elser' → logprob: -13.625189781188965
    8. '#else' → logprob: -14.000189781188965
    9. 'els' → logprob: -14.250189781188965
    10. '}else' → logprob: -15.000189781188965

Token 247: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0019301822176203132
    2. ':
' → logprob: -6.251930236816406
    3. '   ' → logprob: -13.751930236816406
    4. ' :' → logprob: -14.501930236816406
    5. ' :
' → logprob: -17.126930236816406
    6. '():' → logprob: -17.376930236816406
    7. 'print' → logprob: -17.626930236816406
    8. ':

' → logprob: -17.751930236816406
    9. ':
' → logprob: -18.126930236816406
    10. '):' → logprob: -18.251930236816406

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004411601927131414
    2. 'print' → logprob: -6.004411697387695
    3. ' print' → logprob: -6.254411697387695
    4. '   ' → logprob: -11.754411697387695
    5. '	print' → logprob: -12.754411697387695
    6. '       ' → logprob: -15.254411697387695
    7. ' ' → logprob: -15.379411697387695
    8. '   ' → logprob: -15.504411697387695
    9. '    
' → logprob: -15.629411697387695
    10. '(print' → logprob: -15.629411697387695

Token 249: ' #' (ID: 1069)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.14745813608169556
    2. 'print' → logprob: -2.147458076477051
    3. '   ' → logprob: -3.897458076477051
    4. ' ' → logprob: -11.52245807647705
    5. '	print' → logprob: -11.52245807647705
    6. '    ' → logprob: -12.89745807647705
    7. ' 
' → logprob: -13.64745807647705
    8. ' ' → logprob: -14.02245807647705
    9. '    
' → logprob: -14.02245807647705
    10. '   ' → logprob: -14.52245807647705

Token 250: ' Si' (ID: 7832)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.564501166343689
    2. 'print' → logprob: -1.189501166343689
    3. ' print' → logprob: -2.0645012855529785
    4. ' ' → logprob: -10.56450080871582
    5. '  ' → logprob: -10.93950080871582
    6. '    ' → logprob: -10.93950080871582
    7. '	print' → logprob: -11.31450080871582
    8. '   ' → logprob: -11.43950080871582
    9. 'Print' → logprob: -12.68950080871582
    10. '       ' → logprob: -12.81450080871582

Token 251: ' la' (ID: 557)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.4279245138168335
    2. ' print' → logprob: -1.4279245138168335
    3. 'print' → logprob: -2.927924633026123
    4. '   ' → logprob: -3.677924633026123
    5. 's' → logprob: -4.302924633026123
    6. ' ' → logprob: -5.052924633026123
    7. ':' → logprob: -5.927924633026123
    8. ' ' → logprob: -6.052924633026123
    9. ' not' → logprob: -6.177924633026123
    10. '    ' → logprob: -6.552924633026123

Token 252: ' condition' (ID: 7060)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07649710774421692
    2. ' print' → logprob: -2.7014970779418945
    3. 's' → logprob: -5.7014970779418945
    4. ' s' → logprob: -6.3264970779418945
    5. 'len' → logprob: -8.451497077941895
    6. ' True' → logprob: -8.451497077941895
    7. '   ' → logprob: -8.451497077941895
    8. ' len' → logprob: -8.701497077941895
    9. ' ' → logprob: -8.826497077941895
    10. ' not' → logprob: -9.201497077941895

Token 253: ' n' (ID: 297)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.005746406503021717
    2. '   ' → logprob: -5.880746364593506
    3. ' est' → logprob: -6.755746364593506
    4. ':
' → logprob: -7.755746364593506
    5. ' print' → logprob: -8.255746841430664
    6. ' n' → logprob: -8.380746841430664
    7. ' :' → logprob: -8.380746841430664
    8. ' s' → logprob: -8.630746841430664
    9. ' not' → logprob: -9.130746841430664
    10. 'print' → logprob: -9.380746841430664

Token 254: ''est' (ID: 6616)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2953120172023773
    2. ''est' → logprob: -1.9203120470046997
    3. '   ' → logprob: -3.04531192779541
    4. ' print' → logprob: -3.79531192779541
    5. 'est' → logprob: -4.29531192779541
    6. 'e' → logprob: -4.92031192779541
    7. ' est' → logprob: -5.67031192779541
    8. 'else' → logprob: -6.04531192779541
    9. 'pas' → logprob: -6.42031192779541
    10. '’est' → logprob: -6.67031192779541

Token 255: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.11320549994707108
    2. ' pas' → logprob: -2.2382054328918457
    3. 'v' → logprob: -8.238205909729004
    4. '_pas' → logprob: -9.988205909729004
    5. 'true' → logprob: -11.363205909729004
    6. 'Pas' → logprob: -11.488205909729004
    7. 'True' → logprob: -11.738205909729004
    8. 'else' → logprob: -12.113205909729004
    9. 's' → logprob: -12.238205909729004
    10. 'pass' → logprob: -12.363205909729004

Token 256: ' rempl' (ID: 66326)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3068735599517822
    2. ' vraie' → logprob: -1.6818735599517822
    3. 'true' → logprob: -3.3068735599517822
    4. ' pas' → logprob: -4.306873321533203
    5. ' true' → logprob: -4.681873321533203
    6. 'pas' → logprob: -4.806873321533203
    7. 'True' → logprob: -5.181873321533203
    8. ' True' → logprob: -6.056873321533203
    9. ' rempl' → logprob: -6.806873321533203
    10. ' vrai' → logprob: -7.306873321533203

Token 257: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.08800163865089417
    2. '   ' → logprob: -2.9630017280578613
    3. 'print' → logprob: -3.7130017280578613
    4. 'ue' → logprob: -5.838001728057861
    5. 'ait' → logprob: -6.213001728057861
    6. 'i' → logprob: -6.838001728057861
    7. '       ' → logprob: -7.213001728057861
    8. 'int' → logprob: -7.838001728057861
    9. 'it' → logprob: -8.213001251220703
    10. 'iss' → logprob: -9.963001251220703

Token 258: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25607597827911377
    2. '   ' → logprob: -1.5060759782791138
    3. ':
' → logprob: -6.256075859069824
    4. 'print' → logprob: -6.381075859069824
    5. ',' → logprob: -8.006075859069824
    6. ' print' → logprob: -9.006075859069824
    7. '       ' → logprob: -10.381075859069824
    8. ' :' → logprob: -10.756075859069824
    9. '(print' → logprob: -12.256075859069824
    10. '():' → logprob: -13.006075859069824

Token 259: 'au' (ID: 753)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03626398742198944
    2. ')' → logprob: -3.661263942718506
    3. 'print' → logprob: -5.286263942718506
    4. ' )' → logprob: -5.661263942718506
    5. ' print' → logprob: -7.161263942718506
    6. '    ' → logprob: -8.536264419555664
    7. '  ' → logprob: -9.286264419555664
    8. ' ' → logprob: -9.786264419555664
    9. '")' → logprob: -9.911264419555664
    10. '   ' → logprob: -10.161264419555664

Token 260: ' moins' (ID: 15924)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.023096853867173195
    2. ' moins' → logprob: -4.148097038269043
    3. 'm' → logprob: -5.773097038269043
    4. 'mo' → logprob: -6.148097038269043
    5. 'else' → logprob: -8.148097038269043
    6. 'cas' → logprob: -8.523097038269043
    7. 'une' → logprob: -8.773097038269043
    8. 'c' → logprob: -8.898097038269043
    9. 'menos' → logprob: -8.898097038269043
    10. 'pas' → logprob: -9.148097038269043

Token 261: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.15045596659183502
    2. 'un' → logprob: -2.525455951690674
    3. 'une' → logprob: -3.900455951690674
    4. ' une' → logprob: -4.400455951690674
    5. ' deux' → logprob: -4.525455951690674
    6. 'de' → logprob: -5.400455951690674
    7. ' ' → logprob: -5.650455951690674
    8. ' trois' → logprob: -5.650455951690674
    9. ' one' → logprob: -6.775455951690674
    10. ''un' → logprob: -7.400455951690674

Token 262: ' caractère' (ID: 80509)
  Prédit: ' caractère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractère' → logprob: -0.26496994495391846
    2. ' des' → logprob: -2.264969825744629
    3. 'car' → logprob: -2.514969825744629
    4. ')' → logprob: -3.889969825744629
    5. ' espace' → logprob: -4.514969825744629
    6. ' caract' → logprob: -4.639969825744629
    7. ' ' → logprob: -6.139969825744629
    8. 'des' → logprob: -7.014969825744629
    9. ' car' → logprob: -7.264969825744629
    10. 'print' → logprob: -7.389969825744629

Token 263: ' parmi' (ID: 51713)
  Prédit: ' différent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.41987282037734985
    2. ' est' → logprob: -1.294872760772705
    3. 'diff' → logprob: -3.544872760772705
    4. ' different' → logprob: -4.294872760772705
    5. ' diff' → logprob: -4.544872760772705
    6. ' n' → logprob: -5.044872760772705
    7. ' is' → logprob: -5.294872760772705
    8. 'different' → logprob: -5.919872760772705
    9. 'est' → logprob: -7.669872760772705
    10. 'n' → logprob: -8.419873237609863

Token 264: ' les' (ID: 1341)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16220399737358093
    2. ' s' → logprob: -1.9122040271759033
    3. 'les' → logprob: -7.287203788757324
    4. ' les' → logprob: -7.287203788757324
    5. ' ' → logprob: -7.537203788757324
    6. '   ' → logprob: -10.912203788757324
    7. '  ' → logprob: -11.287203788757324
    8. 'le' → logprob: -11.662203788757324
    9. ' ceux' → logprob: -11.787203788757324
    10. ' le' → logprob: -12.287203788757324

Token 265: ' trois' (ID: 25564)
  Prédit: 'tro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tro' → logprob: -0.03930488973855972
    2. '3' → logprob: -3.4143049716949463
    3. 's' → logprob: -5.664304733276367
    4. 'prem' → logprob: -6.289304733276367
    5. ' trois' → logprob: -8.289304733276367
    6. 'three' → logprob: -10.414304733276367
    7. ' ' → logprob: -11.164304733276367
    8. 'de' → logprob: -12.414304733276367
    9. 't' → logprob: -12.414304733276367
    10. 'Tro' → logprob: -12.789304733276367

Token 266: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.13501712679862976
    2. 'est' → logprob: -2.635017156600952
    3. ' n' → logprob: -3.510017156600952
    4. 'n' → logprob: -4.260016918182373
    5. 'diff' → logprob: -5.510016918182373
    6. ' is' → logprob: -6.010016918182373
    7. ' premiers' → logprob: -6.510016918182373
    8. ')' → logprob: -7.385016918182373
    9. 'prem' → logprob: -7.510016918182373
    10. 's' → logprob: -8.260017395019531

Token 267: ' différent' (ID: 114823)
  Prédit: ' différent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' différent' → logprob: -0.1723334640264511
    2. 'different' → logprob: -2.1723334789276123
    3. 'diff' → logprob: -3.5473334789276123
    4. ' different' → logprob: -4.172333240509033
    5. 'd' → logprob: -9.172333717346191
    6. ' différents' → logprob: -10.797333717346191
    7. ' diff' → logprob: -11.047333717346191
    8. ' différente' → logprob: -11.297333717346191
    9. ' diferente' → logprob: -12.422333717346191
    10. '```' → logprob: -12.672333717346191

Token 268: '),
' (ID: 2313)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.2962546944618225
    2. '   ' → logprob: -1.4212546348571777
    3. '"),' → logprob: -4.546254634857178
    4. ')' → logprob: -5.796254634857178
    5. '):' → logprob: -7.046254634857178
    6. 'print' → logprob: -9.046255111694336
    7. ' ),' → logprob: -9.046255111694336
    8. ',' → logprob: -9.296255111694336
    9. '):
' → logprob: -9.546255111694336
    10. '  ' → logprob: -11.171255111694336

Token 269: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4736459888808895e-05
    2. 'print' → logprob: -11.250014305114746
    3. ' print' → logprob: -13.625014305114746
    4. '   ' → logprob: -15.125014305114746
    5. '       ' → logprob: -16.875015258789062
    6. '    ' → logprob: -17.625015258789062
    7. '  ' → logprob: -18.750015258789062
    8. '    
' → logprob: -18.750015258789062
    9. '   ' → logprob: -18.750015258789062
    10. '
' → logprob: -19.375015258789062

Token 270: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0012540421448647976
    2. 'print' → logprob: -7.001254081726074
    3. ' print' → logprob: -8.001254081726074
    4. '   ' → logprob: -12.001254081726074
    5. '   ' → logprob: -14.876254081726074
    6. '       ' → logprob: -15.001254081726074
    7. '    ' → logprob: -15.001254081726074
    8. ' ' → logprob: -16.251253128051758
    9. '    
' → logprob: -16.501253128051758
    10. '  ' → logprob: -16.876253128051758

Token 271: ' on' (ID: 402)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02380136400461197
    2. 'print' → logprob: -4.273801326751709
    3. ' print' → logprob: -4.648801326751709
    4. '   ' → logprob: -11.398801803588867
    5. '    ' → logprob: -13.273801803588867
    6. '       ' → logprob: -13.773801803588867
    7. '   ' → logprob: -13.773801803588867
    8. '  ' → logprob: -13.773801803588867
    9. ' ' → logprob: -14.023801803588867
    10. '	print' → logprob: -14.273801803588867

Token 272: ' entre' (ID: 3853)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.32808807492256165
    2. ' print' → logprob: -1.7030880451202393
    3. '   ' → logprob: -2.3280880451202393
    4. ' ' → logprob: -10.57808780670166
    5. '  ' → logprob: -10.70308780670166
    6. 'pr' → logprob: -11.32808780670166
    7. '	print' → logprob: -11.45308780670166
    8. ' ' → logprob: -11.95308780670166
    9. '    ' → logprob: -12.32808780670166
    10. '   ' → logprob: -12.45308780670166

Token 273: ' dans' (ID: 2671)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36976274847984314
    2. 'print' → logprob: -1.2447627782821655
    3. ' print' → logprob: -4.244762897491455
    4. '("' → logprob: -6.494762897491455
    5. '()' → logprob: -6.744762897491455
    6. ' la' → logprob: -7.244762897491455
    7. '(' → logprob: -7.369762897491455
    8. '  ' → logprob: -7.869762897491455
    9. '"' → logprob: -7.869762897491455
    10. ':' → logprob: -8.119762420654297

Token 274: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6800897121429443
    2. 'le' → logprob: -1.5550897121429443
    3. ' le' → logprob: -2.4300897121429443
    4. ' la' → logprob: -2.4300897121429443
    5. 'print' → logprob: -2.8050897121429443
    6. 'la' → logprob: -3.8050897121429443
    7. ' print' → logprob: -4.680089950561523
    8. 'l' → logprob: -5.680089950561523
    9. 'else' → logprob: -5.805089950561523
    10. ':' → logprob: -6.055089950561523

Token 275: ' section' (ID: 7102)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.046335089951753616
    2. ' print' → logprob: -4.046335220336914
    3. 'else' → logprob: -4.046335220336914
    4. '   ' → logprob: -4.921335220336914
    5. 'block' → logprob: -6.546335220336914
    6. ' block' → logprob: -7.921335220336914
    7. 'bloc' → logprob: -8.421335220336914
    8. 'elif' → logprob: -8.671335220336914
    9. '```' → logprob: -8.796335220336914
    10. ' else' → logprob: -8.796335220336914

Token 276: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7033640146255493
    2. ' print' → logprob: -1.0783640146255493
    3. 'print' → logprob: -1.9533640146255493
    4. 'else' → logprob: -4.57836389541626
    5. ':' → logprob: -5.07836389541626
    6. ' else' → logprob: -5.07836389541626
    7. '    ' → logprob: -9.203364372253418
    8. '  ' → logprob: -9.578364372253418
    9. ' ' → logprob: -10.578364372253418
    10. ' ' → logprob: -10.578364372253418

Token 277: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10536132007837296
    2. ':' → logprob: -2.730361223220825
    3. 'print' → logprob: -3.605361223220825
    4. ':
' → logprob: -4.980361461639404
    5. ' print' → logprob: -7.480361461639404
    6. '       ' → logprob: -9.355360984802246
    7. '(print' → logprob: -10.855360984802246
    8. '    
' → logprob: -11.230360984802246
    9. '
' → logprob: -11.230360984802246
    10. '  ' → logprob: -11.480360984802246

Token 278: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002826627343893051
    2. 'print' → logprob: -5.877826690673828
    3. ' print' → logprob: -11.002826690673828
    4. '   ' → logprob: -13.127826690673828
    5. '```' → logprob: -14.002826690673828
    6. '    
' → logprob: -14.127826690673828
    7. '       ' → logprob: -14.127826690673828
    8. '	print' → logprob: -14.752826690673828
    9. '
' → logprob: -14.877826690673828
    10. '(print' → logprob: -17.377826690673828

Token 279: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025399761274456978
    2. 'print' → logprob: -3.775399684906006
    3. ' print' → logprob: -6.150399684906006
    4. '   ' → logprob: -11.650400161743164
    5. '       ' → logprob: -11.900400161743164
    6. '	print' → logprob: -13.400400161743164
    7. '    
' → logprob: -14.400400161743164
    8. '    ' → logprob: -14.650400161743164
    9. '   ' → logprob: -15.025400161743164
    10. '```' → logprob: -15.275400161743164

Token 280: ' La' (ID: 3038)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23231732845306396
    2. '   ' → logprob: -1.607317328453064
    3. ' print' → logprob: -4.9823174476623535
    4. '	print' → logprob: -11.982316970825195
    5. ' ' → logprob: -12.732316970825195
    6. '  ' → logprob: -12.857316970825195
    7. '   ' → logprob: -13.107316970825195
    8. '       ' → logprob: -13.357316970825195
    9. '```' → logprob: -13.357316970825195
    10. '    ' → logprob: -13.482316970825195

Token 281: ' fonction' (ID: 17610)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2764206826686859
    2. ' print' → logprob: -1.5264207124710083
    3. '   ' → logprob: -3.7764205932617188
    4. ' ' → logprob: -7.776420593261719
    5. 'pr' → logprob: -8.776420593261719
    6. '  ' → logprob: -8.901420593261719
    7. ' ' → logprob: -9.151420593261719
    8. 'n' → logprob: -9.276420593261719
    9. '#' → logprob: -9.401420593261719
    10. 'p' → logprob: -10.151420593261719

Token 282: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4743509590625763
    2. ' print' → logprob: -0.9743509292602539
    3. '(' → logprob: -8.474350929260254
    4. '(print' → logprob: -10.599350929260254
    5. '   ' → logprob: -12.099350929260254
    6. 'pr' → logprob: -12.349350929260254
    7. '()' → logprob: -12.349350929260254
    8. '.print' → logprob: -12.349350929260254
    9. ' ' → logprob: -12.599350929260254
    10. '("' → logprob: -12.599350929260254

Token 283: '()' (ID: 416)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0027213026769459248
    2. '(' → logprob: -6.002721309661865
    3. '()' → logprob: -8.377720832824707
    4. '("")' → logprob: -11.252720832824707
    5. '('' → logprob: -13.252720832824707
    6. '("("' → logprob: -15.502720832824707
    7. '(
' → logprob: -15.627720832824707
    8. '(">' → logprob: -15.877720832824707
    9. ' ("' → logprob: -16.002721786499023
    10. '(s' → logprob: -16.877721786499023

Token 284: ' affiche' (ID: 127479)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0047619035467505455
    2. '(' → logprob: -5.379761695861816
    3. 'print' → logprob: -9.629761695861816
    4. '('' → logprob: -10.379761695861816
    5. '(print' → logprob: -10.629761695861816
    6. '("")' → logprob: -11.504761695861816
    7. '()' → logprob: -11.879761695861816
    8. ' ("' → logprob: -13.754761695861816
    9. ' print' → logprob: -14.129761695861816
    10. '("""' → logprob: -14.379761695861816

Token 285: ' alors' (ID: 17971)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0005587508203461766
    2. '(' → logprob: -7.500558853149414
    3. '('' → logprob: -13.500558853149414
    4. '"' → logprob: -13.625558853149414
    5. '("")' → logprob: -13.750558853149414
    6. '()' → logprob: -14.625558853149414
    7. '"No' → logprob: -14.625558853149414
    8. '(s' → logprob: -14.750558853149414
    9. '(No' → logprob: -14.875558853149414
    10. '(True' → logprob: -16.250558853149414

Token 286: ' "' (ID: 392)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -6.682846287731081e-05
    2. '(' → logprob: -10.125066757202148
    3. '"No' → logprob: -11.000066757202148
    4. '"' → logprob: -11.750066757202148
    5. '(No' → logprob: -14.000066757202148
    6. '('' → logprob: -14.375066757202148
    7. '("")' → logprob: -15.625066757202148
    8. '(True' → logprob: -16.00006675720215
    9. '()' → logprob: -16.12506675720215
    10. '(s' → logprob: -16.25006675720215

Token 287: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.0014274981804192066
    2. '"' → logprob: -7.25142765045166
    3. 'Oui' → logprob: -7.62642765045166
    4. 'Ok' → logprob: -9.37642765045166
    5. 'Ye' → logprob: -9.87642765045166
    6. 'No' → logprob: -10.00142765045166
    7. 'OK' → logprob: -10.87642765045166
    8. ' Yes' → logprob: -12.12642765045166
    9. 'YES' → logprob: -12.50142765045166
    10. 'Go' → logprob: -12.62642765045166

Token 288: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0032221528235822916
    2. '("' → logprob: -5.7532219886779785
    3. '()' → logprob: -11.003222465515137
    4. '")
' → logprob: -11.128222465515137
    5. ')")' → logprob: -12.253222465515137
    6. '"' → logprob: -12.503222465515137
    7. ')' → logprob: -13.378222465515137
    8. '")
' → logprob: -13.628222465515137
    9. '!")' → logprob: -14.253222465515137
    10. '("")' → logprob: -14.503222465515137

Token 289: ' à' (ID: 1221)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.046892035752534866
    2. '(' → logprob: -4.296892166137695
    3. '()' → logprob: -4.296892166137695
    4. 'print' → logprob: -4.296892166137695
    5. ')' → logprob: -6.296892166137695
    6. '("")' → logprob: -6.546892166137695
    7. '   ' → logprob: -6.921892166137695
    8. '(print' → logprob: -8.046892166137695
    9. '")' → logprob: -8.296892166137695
    10. ' print' → logprob: -10.421892166137695

Token 290: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11429581046104431
    2. ' l' → logprob: -2.364295721054077
    3. '("' → logprob: -4.739295959472656
    4. 'la' → logprob: -5.989295959472656
    5. '(l' → logprob: -7.489295959472656
    6. ' écran' → logprob: -7.614295959472656
    7. '()' → logprob: -7.989295959472656
    8. 'é' → logprob: -8.239295959472656
    9. ' la' → logprob: -8.364295959472656
    10. '(' → logprob: -8.364295959472656

Token 291: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.10536539554595947
    2. 'é' → logprob: -2.35536527633667
    3. '’écran' → logprob: -6.48036527633667
    4. ''é' → logprob: -6.60536527633667
    5. ' écran' → logprob: -6.73036527633667
    6. 'a' → logprob: -7.98036527633667
    7. ''utilisateur' → logprob: -8.230365753173828
    8. 'print' → logprob: -9.230365753173828
    9. 'e' → logprob: -9.730365753173828
    10. '   ' → logprob: -10.230365753173828

Token 292: '
' (ID: 198)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -0.11206795275211334
    2. '   ' → logprob: -2.987067937850952
    3. 'print' → logprob: -2.987067937850952
    4. '(' → logprob: -6.612068176269531
    5. ')' → logprob: -6.612068176269531
    6. '()' → logprob: -6.737068176269531
    7. '(print' → logprob: -7.987068176269531
    8. ' print' → logprob: -8.112068176269531
    9. '")' → logprob: -8.112068176269531
    10. '("")' → logprob: -8.987068176269531

Token 293: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5761164426803589
    2. 'print' → logprob: -0.8261164426803589
    3. ' print' → logprob: -8.701116561889648
    4. '```' → logprob: -11.576116561889648
    5. '	print' → logprob: -14.576116561889648
    6. '    
' → logprob: -15.576116561889648
    7. '(print' → logprob: -15.576116561889648
    8. '.print' → logprob: -15.951116561889648
    9. '
' → logprob: -16.07611656188965
    10. '   ' → logprob: -16.82611656188965

Token 294: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.006944829132407904
    2. '   ' → logprob: -5.00694465637207
    3. ' print' → logprob: -8.38194465637207
    4. '	print' → logprob: -15.75694465637207
    5. '```' → logprob: -16.13194465637207
    6. 'pr' → logprob: -16.50694465637207
    7. '  ' → logprob: -17.63194465637207
    8. 'Print' → logprob: -18.00694465637207
    9. '.print' → logprob: -18.00694465637207
    10. ' ' → logprob: -18.25694465637207

Token 295: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -1.306760805164231e-05
    2. '(' → logprob: -11.25001335144043
    3. '('' → logprob: -18.00001335144043
    4. '()' → logprob: -19.12501335144043
    5. '("")' → logprob: -19.37501335144043
    6. '(
' → logprob: -20.12501335144043
    7. '("("' → logprob: -20.87501335144043
    8. '("""' → logprob: -21.12501335144043
    9. '(("' → logprob: -21.12501335144043
    10. ' ("' → logprob: -21.12501335144043

Token 296: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -1.306760805164231e-05
    2. 'Ye' → logprob: -11.75001335144043
    3. 'No' → logprob: -12.25001335144043
    4. 'Y' → logprob: -15.37501335144043
    5. '"' → logprob: -16.50001335144043
    6. ' Yes' → logprob: -17.37501335144043
    7. '")' → logprob: -17.87501335144043
    8. 'Yo' → logprob: -18.50001335144043
    9. 'Ya' → logprob: -18.87501335144043
    10. 'Oui' → logprob: -20.25001335144043

Token 297: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -2.816093228830141e-06
    2. ')' → logprob: -13.75000286102295
    3. ')")' → logprob: -13.87500286102295
    4. '")
' → logprob: -15.00000286102295
    5. '()' → logprob: -15.37500286102295
    6. '"' → logprob: -16.625001907348633
    7. '!")' → logprob: -18.375001907348633
    8. '("' → logprob: -18.500001907348633
    9. ' ")' → logprob: -19.125001907348633
    10. '')' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 295
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 97
Tokens correctement prédits (top 10): 192
Précision stricte (1ère position): 32.20%
Précision adaptée (1ère position): 32.88%
Précision (top 10): 65.08%
================================================================================
