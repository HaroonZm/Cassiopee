================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:53:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_chars = list(input())
input_chars.sort()
if input_chars[0] == input_chars[1] and input_chars[2] == input_chars[3] and input_chars[1] != input_chars[2]:
    print("Yes")
else:
    print("No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_chars' (ID: 94246)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' list' (ID: 1562)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.7079887986183167
    2. ''' → logprob: -1.2079887390136719
    3. '[' → logprob: -2.332988739013672
    4. ' "' → logprob: -2.957988739013672
    5. '['' → logprob: -3.957988739013672
    6. ' '' → logprob: -4.207988739013672
    7. ' ['' → logprob: -5.207988739013672
    8. ' [' → logprob: -5.207988739013672
    9. ' ' → logprob: -5.332988739013672
    10. ' []' → logprob: -6.332988739013672

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.013138583861291409
    2. '(input' → logprob: -4.513138771057129
    3. '```' → logprob: -6.763138771057129
    4. '[' → logprob: -8.388138771057129
    5. '[input' → logprob: -8.513138771057129
    6. '`' → logprob: -9.513138771057129
    7. '(
' → logprob: -9.888138771057129
    8. ' (' → logprob: -10.013138771057129
    9. '(open' → logprob: -10.013138771057129
    10. '(user' → logprob: -10.388138771057129

Token 5: '())
' (ID: 4574)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.04830082505941391
    2. '_' → logprob: -3.1733007431030273
    3. '(' → logprob: -6.173300743103027
    4. '_)' → logprob: -6.298300743103027
    5. ')' → logprob: -6.798300743103027
    6. '())' → logprob: -9.923300743103027
    7. ')_' → logprob: -10.298300743103027
    8. '(_' → logprob: -10.548300743103027
    9. '()' → logprob: -10.673300743103027
    10. '_char' → logprob: -10.923300743103027

Token 6: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.022425178438425064
    2. '[:]' → logprob: -5.272425174713135
    3. '.append' → logprob: -5.522425174713135
    4. '[' → logprob: -5.522425174713135
    5. '[::-' → logprob: -6.772425174713135
    6. '```' → logprob: -6.897425174713135
    7. '.sort' → logprob: -6.897425174713135
    8. '=' → logprob: -7.397425174713135
    9. '.reverse' → logprob: -7.522425174713135
    10. '+' → logprob: -7.522425174713135

Token 7: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.03678544983267784
    2. '_' → logprob: -3.536785364151001
    3. '(' → logprob: -5.66178560256958
    4. '()' → logprob: -6.53678560256958
    5. ')' → logprob: -7.41178560256958
    6. '[' → logprob: -8.161785125732422
    7. '_)' → logprob: -8.161785125732422
    8. '_tokens' → logprob: -8.411785125732422
    9. '```' → logprob: -9.286785125732422
    10. 'chars' → logprob: -9.411785125732422

Token 8: '.sort' (ID: 19551)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.563086748123169
    2. '[' → logprob: -0.938086748123169
    3. '+' → logprob: -4.81308650970459
    4. ')' → logprob: -4.93808650970459
    5. '```' → logprob: -5.43808650970459
    6. '[
' → logprob: -5.56308650970459
    7. '#' → logprob: -5.68808650970459
    8. '<|end|>' → logprob: -5.68808650970459
    9. '[:]' → logprob: -6.31308650970459
    10. '[::-' → logprob: -6.68808650970459

Token 9: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22559386491775513
    2. '()' → logprob: -1.6005938053131104
    3. '```' → logprob: -10.475593566894531
    4. '.' → logprob: -11.100593566894531
    5. '`()' → logprob: -11.100593566894531
    6. '()`' → logprob: -11.475593566894531
    7. '('' → logprob: -11.475593566894531
    8. ')' → logprob: -11.475593566894531
    9. '(`' → logprob: -11.600593566894531
    10. '().' → logprob: -11.600593566894531

Token 10: 'if' (ID: 366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0946727991104126
    2. 'print' → logprob: -1.2196727991104126
    3. '(' → logprob: -2.344672679901123
    4. '()' → logprob: -2.719672679901123
    5. '```' → logprob: -2.844672679901123
    6. '[' → logprob: -3.094672679901123
    7. 'if' → logprob: -3.219672679901123
    8. '#' → logprob: -4.219672679901123
    9. 'output' → logprob: -4.469672679901123
    10. '.' → logprob: -5.094672679901123

Token 11: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20929144322872162
    2. 'input' → logprob: -2.084291458129883
    3. ' ' → logprob: -3.084291458129883
    4. ' len' → logprob: -4.459291458129883
    5. ''' → logprob: -5.959291458129883
    6. ' '' → logprob: -6.334291458129883
    7. ' not' → logprob: -6.959291458129883
    8. 'len' → logprob: -7.209291458129883
    9. '  ' → logprob: -8.209291458129883
    10. '"' → logprob: -8.834291458129883

Token 12: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0016648273449391127
    2. '()' → logprob: -7.251664638519287
    3. '_' → logprob: -7.626664638519287
    4. '_char' → logprob: -9.001665115356445
    5. '[' → logprob: -9.251665115356445
    6. '(' → logprob: -9.751665115356445
    7. '```' → logprob: -10.001665115356445
    8. 'Chars' → logprob: -10.251665115356445
    9. '()==' → logprob: -11.751665115356445
    10. 'char' → logprob: -12.001665115356445

Token 13: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013895035721361637
    2. ' and' → logprob: -5.388895034790039
    3. '[-' → logprob: -5.388895034790039
    4. ':' → logprob: -5.513895034790039
    5. '==' → logprob: -7.888895034790039
    6. ' ==' → logprob: -9.388895034790039
    7. 'and' → logprob: -9.513895034790039
    8. '[count' → logprob: -11.138895034790039
    9. '!=' → logprob: -11.388895034790039
    10. ' ' → logprob: -11.388895034790039

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0565892793238163
    2. ' ' → logprob: -2.931589365005493
    3. '1' → logprob: -6.556589126586914
    4. '-' → logprob: -8.806589126586914
    5. ']' → logprob: -9.931589126586914
    6. '>' → logprob: -10.431589126586914
    7. '==' → logprob: -11.681589126586914
    8. ' ==' → logprob: -11.869089126586914
    9. '   ' → logprob: -11.931589126586914
    10. ']==' → logprob: -12.431589126586914

Token 15: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.09727876633405685
    2. ' <' → logprob: -3.3472788333892822
    3. '==' → logprob: -3.3472788333892822
    4. ' !=' → logprob: -4.222278594970703
    5. ' ' → logprob: -6.097278594970703
    6. ' >' → logprob: -6.722278594970703
    7. ' <=' → logprob: -6.847278594970703
    8. '<' → logprob: -6.972278594970703
    9. '!=' → logprob: -7.597278594970703
    10. '.is' → logprob: -8.097278594970703

Token 16: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.30704644322395325
    2. '==' → logprob: -1.9320464134216309
    3. ' !=' → logprob: -3.182046413421631
    4. ' <' → logprob: -3.682046413421631
    5. '.is' → logprob: -4.057046413421631
    6. '!=' → logprob: -4.432046413421631
    7. '<' → logprob: -4.932046413421631
    8. ':' → logprob: -5.682046413421631
    9. '>' → logprob: -5.932046413421631
    10. '.' → logprob: -6.432046413421631

Token 17: ' input' (ID: 3422)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8394454121589661
    2. 'input' → logprob: -0.8394454121589661
    3. ' input' → logprob: -2.9644453525543213
    4. ' '' → logprob: -3.7144453525543213
    5. '"' → logprob: -3.8394453525543213
    6. ''a' → logprob: -4.3394455909729
    7. ''\' → logprob: -4.5894455909729
    8. ''"' → logprob: -5.7144455909729
    9. ''A' → logprob: -6.5894455909729
    10. ' '"'' → logprob: -6.7144455909729

Token 18: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.001170225441455841
    2. '_' → logprob: -8.00117015838623
    3. ''_' → logprob: -8.25117015838623
    4. '('_' → logprob: -8.25117015838623
    5. '_char' → logprob: -9.25117015838623
    6. ''' → logprob: -9.50117015838623
    7. '```' → logprob: -10.25117015838623
    8. '(' → logprob: -11.25117015838623
    9. '_s' → logprob: -11.37617015838623
    10. 'Chars' → logprob: -11.37617015838623

Token 19: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.38734108209609985
    2. '[-' → logprob: -1.137341022491455
    3. '```' → logprob: -8.762341499328613
    4. '[len' → logprob: -9.512341499328613
    5. '[
' → logprob: -10.012341499328613
    6. ' [' → logprob: -10.512341499328613
    7. 's' → logprob: -10.637341499328613
    8. '[_' → logprob: -11.387341499328613
    9. ' ' → logprob: -11.512341499328613
    10. ' [-' → logprob: -11.574841499328613

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07072199881076813
    2. '-' → logprob: -2.6957221031188965
    3. '0' → logprob: -7.8207221031188965
    4. ' ' → logprob: -8.195721626281738
    5. ' -' → logprob: -9.945721626281738
    6. ']' → logprob: -10.695721626281738
    7. 'len' → logprob: -11.070721626281738
    8. '```' → logprob: -12.320721626281738
    9. '+' → logprob: -12.570721626281738
    10. '])' → logprob: -12.945721626281738

Token 21: ']' (ID: 60)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15455791354179382
    2. '):' → logprob: -2.654557943344116
    3. ']:' → logprob: -3.654557943344116
    4. ' ):' → logprob: -3.904557943344116
    5. ' :' → logprob: -4.404557704925537
    6. ')' → logprob: -5.154557704925537
    7. ']' → logprob: -5.529557704925537
    8. ' ]' → logprob: -6.029557704925537
    9. ' and' → logprob: -7.404557704925537
    10. ' ' → logprob: -7.529557704925537

Token 22: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4642941951751709
    2. ' :' → logprob: -1.089294195175171
    3. ' and' → logprob: -3.714294195175171
    4. ' ==' → logprob: -4.71429443359375
    5. ' ' → logprob: -7.58929443359375
    6. '=' → logprob: -8.08929443359375
    7. 'and' → logprob: -8.21429443359375
    8. '==' → logprob: -8.58929443359375
    9. ' !=' → logprob: -9.21429443359375
    10. ' =' → logprob: -9.83929443359375

Token 23: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.06024881452322006
    2. 'input' → logprob: -2.935248851776123
    3. ' ' → logprob: -5.435248851776123
    4. ' ' → logprob: -7.060248851776123
    5. ''' → logprob: -9.685248374938965
    6. ' len' → logprob: -10.935248374938965
    7. '  ' → logprob: -11.685248374938965
    8. ' (' → logprob: -11.935248374938965
    9. ' not' → logprob: -12.060248374938965
    10. '(input' → logprob: -12.185248374938965

Token 24: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -6.2729995988775045e-06
    2. '_' → logprob: -12.750006675720215
    3. '```' → logprob: -14.000006675720215
    4. '_char' → logprob: -14.250006675720215
    5. 'chars' → logprob: -14.625006675720215
    6. ' _' → logprob: -15.000006675720215
    7. ')_' → logprob: -15.750006675720215
    8. 'Chars' → logprob: -15.875006675720215
    9. ''_' → logprob: -15.875006675720215
    10. '_chunks' → logprob: -16.1250057220459

Token 25: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.2166411478538066e-05
    2. '```' → logprob: -10.125052452087402
    3. '[-' → logprob: -12.000052452087402
    4. '[
' → logprob: -13.125052452087402
    5. ' [' → logprob: -14.000052452087402
    6. '`' → logprob: -14.125052452087402
    7. '``' → logprob: -14.875052452087402
    8. ''' → logprob: -15.375052452087402
    9. '[...]' → logprob: -15.375052452087402
    10. ''[' → logprob: -15.500052452087402

Token 26: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02014836110174656
    2. ' ' → logprob: -4.270148277282715
    3. '0' → logprob: -5.270148277282715
    4. '1' → logprob: -7.145148277282715
    5. ']' → logprob: -10.895148277282715
    6. '```' → logprob: -12.645148277282715
    7. '  ' → logprob: -12.770148277282715
    8. '   ' → logprob: -13.020148277282715
    9. '3' → logprob: -13.145148277282715
    10. '-' → logprob: -13.145148277282715

Token 27: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0526418499648571
    2. '==' → logprob: -3.0526418685913086
    3. ' ' → logprob: -5.802641868591309
    4. ']' → logprob: -8.177641868591309
    5. ')' → logprob: -8.302641868591309
    6. ']==' → logprob: -8.677641868591309
    7. '<|end|>' → logprob: -9.177641868591309
    8. '  ' → logprob: -9.677641868591309
    9. '=' → logprob: -10.302641868591309
    10. ' <=' → logprob: -10.552641868591309

Token 28: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024608327075839043
    2. '==' → logprob: -3.7746083736419678
    3. ' ' → logprob: -7.024608135223389
    4. ' !=' → logprob: -8.399608612060547
    5. ' <=' → logprob: -9.649608612060547
    6. ' <' → logprob: -10.024608612060547
    7. '  ' → logprob: -10.399608612060547
    8. '[' → logprob: -11.024608612060547
    9. ' ' → logprob: -11.274608612060547
    10. ')' → logprob: -11.399608612060547

Token 29: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.2520297169685364
    2. 'input' → logprob: -1.5020296573638916
    3. ' ' → logprob: -9.502029418945312
    4. ''' → logprob: -11.002029418945312
    5. ' '' → logprob: -12.377029418945312
    6. ' ' → logprob: -13.752029418945312
    7. '"' → logprob: -14.002029418945312
    8. '=input' → logprob: -14.502029418945312
    9. '	input' → logprob: -14.627029418945312
    10. '(input' → logprob: -14.752029418945312

Token 30: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -17.125
    3. 'Chars' → logprob: -17.25
    4. '_char' → logprob: -17.5
    5. 'chars' → logprob: -18.75
    6. ' _' → logprob: -19.25
    7. '_' → logprob: -19.375
    8. '[' → logprob: -19.5
    9. '_coords' → logprob: -19.5
    10. '[_' → logprob: -20.0

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.6789137084269896e-05
    2. '[-' → logprob: -10.50003719329834
    3. '```' → logprob: -12.37503719329834
    4. ' [' → logprob: -13.75003719329834
    5. '\[' → logprob: -13.75003719329834
    6. ''[' → logprob: -14.00003719329834
    7. '3' → logprob: -14.62503719329834
    8. '`' → logprob: -14.75003719329834
    9. '[
' → logprob: -15.50003719329834
    10. '``' → logprob: -15.87503719329834

Token 32: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.6656825866666622e-05
    2. ' ' → logprob: -10.75002670288086
    3. '-' → logprob: -13.00002670288086
    4. '2' → logprob: -13.50002670288086
    5. ']' → logprob: -14.25002670288086
    6. '```' → logprob: -14.75002670288086
    7. '1' → logprob: -16.25002670288086
    8. '[' → logprob: -16.37502670288086
    9. '３' → logprob: -16.81252670288086
    10. '   ' → logprob: -17.00002670288086

Token 33: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8600407838821411
    2. '):' → logprob: -1.6100407838821411
    3. ']' → logprob: -1.7350407838821411
    4. ' and' → logprob: -2.2350406646728516
    5. ':' → logprob: -2.8600406646728516
    6. ']:' → logprob: -3.6100406646728516
    7. 'and' → logprob: -4.860040664672852
    8. ' ):' → logprob: -7.735040664672852
    9. ' ]' → logprob: -8.360040664672852
    10. ' )' → logprob: -8.735040664672852

Token 34: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002760533709079027
    2. ' and' → logprob: -6.377760410308838
    3. ' :' → logprob: -6.877760410308838
    4. 'and' → logprob: -10.877760887145996
    5. '):' → logprob: -13.127760887145996
    6. ':
' → logprob: -13.252760887145996
    7. ':**' → logprob: -13.502760887145996
    8. ',' → logprob: -13.877760887145996
    9. ' ':'' → logprob: -15.252760887145996
    10. ':

' → logprob: -15.377760887145996

Token 35: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.0432196706533432
    2. 'input' → logprob: -3.168219566345215
    3. ' not' → logprob: -9.168219566345215
    4. ' ' → logprob: -10.043219566345215
    5. ' ' → logprob: -10.168219566345215
    6. ''' → logprob: -11.918219566345215
    7. ' True' → logprob: -11.918219566345215
    8. ' '' → logprob: -12.293219566345215
    9. ' (' → logprob: -13.043219566345215
    10. '"' → logprob: -13.168219566345215

Token 36: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -1.9862216504407115e-05
    2. 'chars' → logprob: -11.750020027160645
    3. '_' → logprob: -12.125020027160645
    4. '```' → logprob: -13.250020027160645
    5. 'Chars' → logprob: -14.000020027160645
    6. '_char' → logprob: -14.125020027160645
    7. ''_' → logprob: -14.125020027160645
    8. '[' → logprob: -14.375020027160645
    9. '`' → logprob: -15.125020027160645
    10. ''' → logprob: -15.500020027160645

Token 37: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.2762428822461516e-05
    2. '<|end|>' → logprob: -10.000052452087402
    3. '```' → logprob: -12.500052452087402
    4. '<|end|>' → logprob: -14.000052452087402
    5. '[
' → logprob: -14.250052452087402
    6. '[-' → logprob: -15.000052452087402
    7. ' [' → logprob: -15.625052452087402
    8. ' ' → logprob: -15.625052452087402
    9. '[len' → logprob: -15.875052452087402
    10. '[]' → logprob: -15.875052452087402

Token 38: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.000491076149046421
    2. '0' → logprob: -8.50049114227295
    3. ' ' → logprob: -9.00049114227295
    4. '2' → logprob: -9.12549114227295
    5. '5' → logprob: -11.00049114227295
    6. '```' → logprob: -11.62549114227295
    7. '6' → logprob: -11.81299114227295
    8. '-' → logprob: -12.25049114227295
    9. '[' → logprob: -12.37549114227295
    10. '1' → logprob: -12.43799114227295

Token 39: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08713538199663162
    2. '==' → logprob: -2.9621353149414062
    3. ' ' → logprob: -3.8371353149414062
    4. ' <' → logprob: -5.587135314941406
    5. ' <=' → logprob: -6.212135314941406
    6. ' !=' → logprob: -6.712135314941406
    7. ')' → logprob: -7.087135314941406
    8. '<' → logprob: -7.462135314941406
    9. '>' → logprob: -7.587135314941406
    10. '=' → logprob: -7.837135314941406

Token 40: ' !=' (ID: 1666)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.799516499042511
    2. '==' → logprob: -1.6745164394378662
    3. ' <' → logprob: -1.9245164394378662
    4. '<' → logprob: -2.174516439437866
    5. ' !=' → logprob: -2.924516439437866
    6. ' ' → logprob: -3.924516439437866
    7. '!=' → logprob: -4.049516677856445
    8. '=' → logprob: -5.424516677856445
    9. ' <=' → logprob: -5.799516677856445
    10. ' ' → logprob: -6.424516677856445

Token 41: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07889683544635773
    2. ' input' → logprob: -2.5788967609405518
    3. '[input' → logprob: -13.078896522521973
    4. ''' → logprob: -13.578896522521973
    5. '=input' → logprob: -13.828896522521973
    6. '(input' → logprob: -14.203896522521973
    7. ' ' → logprob: -14.703896522521973
    8. ',input' → logprob: -14.703896522521973
    9. '<input' → logprob: -15.203896522521973
    10. '"' → logprob: -15.328896522521973

Token 42: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -9.968312951968983e-06
    2. 'chars' → logprob: -12.625009536743164
    3. '_char' → logprob: -12.750009536743164
    4. '_' → logprob: -13.125009536743164
    5. 'Chars' → logprob: -14.500009536743164
    6. '(chars' → logprob: -14.625009536743164
    7. '(' → logprob: -14.875009536743164
    8. '```' → logprob: -16.000009536743164
    9. '[' → logprob: -16.625009536743164
    10. '()' → logprob: -16.750009536743164

Token 43: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.860340752406046e-05
    2. '```' → logprob: -10.1250581741333
    3. '\[' → logprob: -12.0000581741333
    4. '_[' → logprob: -12.6250581741333
    5. '[
' → logprob: -12.7500581741333
    6. '__[' → logprob: -13.6250581741333
    7. 's' → logprob: -14.1250581741333
    8. ''[' → logprob: -14.6250581741333
    9. '()[' → logprob: -14.8750581741333
    10. '"[' → logprob: -15.0000581741333

Token 44: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.75001049041748
    3. '0' → logprob: -13.87501049041748
    4. '２' → logprob: -15.12501049041748
    5. '3' → logprob: -15.31251049041748
    6. '```' → logprob: -15.37501049041748
    7. '۲' → logprob: -15.93751049041748
    8. '   ' → logprob: -16.375009536743164
    9. '-' → logprob: -16.687509536743164
    10. '``' → logprob: -17.125009536743164

Token 45: ']:
' (ID: 22152)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.17898301780223846
    2. ']:' → logprob: -2.428982973098755
    3. ':' → logprob: -2.928982973098755
    4. ')' → logprob: -4.178983211517334
    5. ']' → logprob: -5.053983211517334
    6. ' and' → logprob: -8.053982734680176
    7. ',' → logprob: -10.178982734680176
    8. ']):' → logprob: -10.428982734680176
    9. '}:' → logprob: -10.428982734680176
    10. 'and' → logprob: -10.553982734680176

Token 46: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3437657654285431
    2. '   ' → logprob: -1.5937657356262207
    3. 'print' → logprob: -2.9687657356262207
    4. ':
' → logprob: -3.8437657356262207
    5. ' print' → logprob: -4.843765735626221
    6. '	print' → logprob: -5.343765735626221
    7. '\n' → logprob: -7.343765735626221
    8. ' and' → logprob: -7.593765735626221
    9. '\t' → logprob: -8.968766212463379
    10. '\' → logprob: -8.968766212463379

Token 47: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.13224494457244873
    2. ' print' → logprob: -2.6322450637817383
    3. '   ' → logprob: -3.0072450637817383
    4. '\n' → logprob: -6.257245063781738
    5. '\' → logprob: -8.382245063781738
    6. '	print' → logprob: -9.382245063781738
    7. ':' → logprob: -10.132245063781738
    8. '    ' → logprob: -10.257245063781738
    9. ''' → logprob: -10.382245063781738
    10. '    
' → logprob: -10.757245063781738

Token 48: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1173270046710968
    2. '("' → logprob: -2.4923269748687744
    3. '("("' → logprob: -4.2423272132873535
    4. '('' → logprob: -4.3673272132873535
    5. '(True' → logprob: -7.7423272132873535
    6. '(input' → logprob: -8.492326736450195
    7. '("(' → logprob: -8.617326736450195
    8. '"' → logprob: -10.367326736450195
    9. '("")' → logprob: -11.117326736450195
    10. '()' → logprob: -11.117326736450195

Token 49: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.012890775687992573
    2. 'YES' → logprob: -4.762890815734863
    3. '"' → logprob: -6.637890815734863
    4. ' Yes' → logprob: -7.262890815734863
    5. '8' → logprob: -7.887890815734863
    6. 'yes' → logprob: -8.512890815734863
    7. ' yes' → logprob: -8.762890815734863
    8. 'Eight' → logprob: -8.887890815734863
    9. 'G' → logprob: -9.262890815734863
    10. 'Full' → logprob: -9.387890815734863

Token 50: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00012415809032972902
    2. ')' → logprob: -9.125123977661133
    3. '")
' → logprob: -11.625123977661133
    4. ')")' → logprob: -12.250123977661133
    5. '!")' → logprob: -14.250123977661133
    6. '"' → logprob: -15.000123977661133
    7. '”)' → logprob: -15.750123977661133
    8. '\")' → logprob: -16.250123977661133
    9. '}")' → logprob: -16.750123977661133
    10. '')' → logprob: -17.125123977661133

Token 51: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.007707300130277872
    2. ' else' → logprob: -4.882707118988037
    3. 'elif' → logprob: -9.257707595825195
    4. 'e' → logprob: -13.382707595825195
    5. '<|end|>' → logprob: -13.507707595825195
    6. '```' → logprob: -14.382707595825195
    7. '_else' → logprob: -14.632707595825195
    8. 'el' → logprob: -14.882707595825195
    9. ')' → logprob: -15.007707595825195
    10. 'elser' → logprob: -15.757707595825195

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.722539834911004e-05
    2. ':
' → logprob: -9.250097274780273
    3. ' :' → logprob: -14.125097274780273
    4. '   ' → logprob: -16.500097274780273
    5. '):' → logprob: -16.750097274780273
    6. ':return' → logprob: -17.125097274780273
    7. '():' → logprob: -17.500097274780273
    8. ':

' → logprob: -18.125097274780273
    9. ':def' → logprob: -18.250097274780273
    10. '：' → logprob: -18.250097274780273

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009269589558243752
    2. ' print' → logprob: -4.759269714355469
    3. 'print' → logprob: -8.259269714355469
    4. ' ' → logprob: -9.509269714355469
    5. '   ' → logprob: -9.509269714355469
    6. '    ' → logprob: -9.884269714355469
    7. '    
' → logprob: -10.384269714355469
    8. '       ' → logprob: -10.634269714355469
    9. '```' → logprob: -10.634269714355469
    10. '<|end|>' → logprob: -10.634269714355469

Token 54: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.3869379758834839
    2. ' print' → logprob: -1.1369379758834839
    3. '   ' → logprob: -9.636938095092773
    4. '	print' → logprob: -14.511938095092773
    5. '```' → logprob: -14.511938095092773
    6. '(print' → logprob: -15.136938095092773
    7. '    ' → logprob: -15.636938095092773
    8. '.print' → logprob: -15.886938095092773
    9. ' ' → logprob: -16.261938095092773
    10. 'Print' → logprob: -16.886938095092773

Token 55: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.5981873869895935
    2. '(' → logprob: -0.8481873869895935
    3. '("("' → logprob: -3.8481874465942383
    4. '("")' → logprob: -7.848187446594238
    5. '("(' → logprob: -8.348187446594238
    6. '()' → logprob: -10.723187446594238
    7. '('' → logprob: -10.973187446594238
    8. '(""' → logprob: -12.598187446594238
    9. '("""' → logprob: -12.848187446594238
    10. '(
' → logprob: -12.848187446594238

Token 56: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -1.688212614681106e-05
    2. '"No' → logprob: -11.000017166137695
    3. ' No' → logprob: -16.375017166137695
    4. 'Yes' → logprob: -19.125017166137695
    5. '"' → logprob: -19.375017166137695
    6. 'NO' → logprob: -19.875017166137695
    7. '")' → logprob: -20.875017166137695
    8. '“No' → logprob: -21.125017166137695
    9. 'N' → logprob: -21.125017166137695
    10. '>No' → logprob: -21.750017166137695

Token 57: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00012725738633889705
    2. ')' → logprob: -9.000126838684082
    3. ')")' → logprob: -12.625126838684082
    4. '"' → logprob: -14.875126838684082
    5. '")
' → logprob: -16.0001277923584
    6. '')' → logprob: -17.3751277923584
    7. '}")' → logprob: -17.7501277923584
    8. '”)' → logprob: -18.3751277923584
    9. '`)' → logprob: -18.6251277923584
    10. '```' → logprob: -19.0001277923584


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 55
Tokens correctement prédits (1ère position, stricte): 30
Tokens correctement prédits (1ère position, avec adaptation): 32
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 54.55%
Précision adaptée (1ère position): 58.18%
Précision (top 10): 85.45%
================================================================================
