================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_total, input_subtract = map(int, input().split())
output_result = input_total - input_subtract + 1
print(output_result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_total' (ID: 23814)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: 'output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'output' → logprob: -1.005073070526123
    2. '_output' → logprob: -1.880073070526123
    3. ' ' → logprob: -2.255073070526123
    4. 'input' → logprob: -2.380073070526123
    5. '_' → logprob: -2.755073070526123
    6. ' output' → logprob: -2.755073070526123
    7. ' _' → logprob: -3.380073070526123
    8. '_input' → logprob: -3.630073070526123
    9. ' input' → logprob: -4.005073070526123
    10. '_value' → logprob: -4.130073070526123

Token 4: '_sub' (ID: 11572)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.37506410479545593
    2. '.' → logprob: -1.6250641345977783
    3. '[' → logprob: -2.6250641345977783
    4. ')' → logprob: -4.000063896179199
    5. ',' → logprob: -4.625063896179199
    6. '=' → logprob: -5.000063896179199
    7. '```' → logprob: -5.750063896179199
    8. '(' → logprob: -6.625063896179199
    9. '._' → logprob: -7.500063896179199
    10. ''' → logprob: -8.0000638961792

Token 5: 'tract' (ID: 2642)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.21003234386444092
    2. '+' → logprob: -2.7100324630737305
    3. '=' → logprob: -3.4600324630737305
    4. '[' → logprob: -3.9600324630737305
    5. '.' → logprob: -3.9600324630737305
    6. '```' → logprob: -3.9600324630737305
    7. '*' → logprob: -4.3350324630737305
    8. ' =' → logprob: -4.8350324630737305
    9. ',' → logprob: -5.7100324630737305
    10. ' +' → logprob: -6.0850324630737305

Token 6: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.48401328921318054
    2. '=' → logprob: -1.484013319015503
    3. ' =' → logprob: -2.359013319015503
    4. ',' → logprob: -3.609013319015503
    5. '```' → logprob: -4.484013080596924
    6. '(' → logprob: -5.234013080596924
    7. ')' → logprob: -5.484013080596924
    8. '.' → logprob: -5.609013080596924
    9. '+' → logprob: -6.109013080596924
    10. '*' → logprob: -6.234013080596924

Token 7: ' map' (ID: 4014)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -1.164503812789917
    2. 'input' → logprob: -1.289503812789917
    3. ' []' → logprob: -1.914503812789917
    4. ' ' → logprob: -2.414503812789917
    5. ' map' → logprob: -2.664503812789917
    6. '0' → logprob: -3.664503812789917
    7. '[]' → logprob: -3.914503812789917
    8. ' [' → logprob: -4.039504051208496
    9. ' [],' → logprob: -4.039504051208496
    10. 'map' → logprob: -4.164504051208496

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23745441436767578
    2. '(lambda' → logprob: -1.7374544143676758
    3. '<|end|>' → logprob: -4.112454414367676
    4. '(int' → logprob: -4.862454414367676
    5. '```' → logprob: -5.112454414367676
    6. ')' → logprob: -6.987454414367676
    7. '(str' → logprob: -7.112454414367676
    8. '<|end|>' → logprob: -7.737454414367676
    9. '(input' → logprob: -7.862454414367676
    10. '(token' → logprob: -8.112454414367676

Token 9: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.030528003349900246
    2. 'input' → logprob: -3.7805280685424805
    3. ')' → logprob: -5.1555280685424805
    4. '(' → logprob: -7.1555280685424805
    5. '(user' → logprob: -8.28052806854248
    6. 'user' → logprob: -8.78052806854248
    7. ' input' → logprob: -9.53052806854248
    8. ',input' → logprob: -9.53052806854248
    9. '```' → logprob: -10.15552806854248
    10. '[input' → logprob: -10.65552806854248

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029853466898202896
    2. ' input' → logprob: -3.529853582382202
    3. '(input' → logprob: -9.529853820800781
    4. ')' → logprob: -10.529853820800781
    5. ',input' → logprob: -13.029853820800781
    6. '=input' → logprob: -15.029853820800781
    7. '[input' → logprob: -15.029853820800781
    8. '<input' → logprob: -15.279853820800781
    9. '```' → logprob: -15.904853820800781
    10. '	input' → logprob: -16.40485382080078

Token 11: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5964674353599548
    2. '()' → logprob: -1.8464674949645996
    3. '().' → logprob: -2.0964674949645996
    4. '(' → logprob: -2.0964674949645996
    5. ')' → logprob: -4.0964674949646
    6. '`()' → logprob: -5.2214674949646
    7. '```' → logprob: -5.7214674949646
    8. '()))' → logprob: -5.7214674949646
    9. '());' → logprob: -6.4714674949646
    10. '(""))' → logprob: -6.4714674949646

Token 12: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001305950863752514
    2. 'strip' → logprob: -9.000130653381348
    3. 'rstrip' → logprob: -12.500130653381348
    4. ' split' → logprob: -13.375130653381348
    5. 'spl' → logprob: -13.625130653381348
    6. ')' → logprob: -15.500130653381348
    7. 'startswith' → logprob: -15.625130653381348
    8. 'replace' → logprob: -16.00012969970703
    9. '(split' → logprob: -16.37512969970703
    10. 's' → logprob: -17.12512969970703

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3596842288970947
    2. ')' → logprob: -1.2346842288970947
    3. '))' → logprob: -5.359683990478516
    4. '()' → logprob: -5.484683990478516
    5. '()))' → logprob: -6.609683990478516
    6. '(' → logprob: -7.234683990478516
    7. '`)' → logprob: -9.859683990478516
    8. '('' → logprob: -9.859683990478516
    9. ' ())' → logprob: -10.109683990478516
    10. '(','' → logprob: -11.734683990478516

Token 14: 'output' (ID: 6130)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.08969180285930634
    2. 'if' → logprob: -3.5896918773651123
    3. 'print' → logprob: -3.8396918773651123
    4. '#' → logprob: -4.464691638946533
    5. '*' → logprob: -4.589691638946533
    6. 'result' → logprob: -5.964691638946533
    7. '
' → logprob: -6.089691638946533
    8. '+
' → logprob: -6.214691638946533
    9. '<|end|>' → logprob: -6.714691638946533
    10. 'input' → logprob: -6.839691638946533

Token 15: '_result' (ID: 11623)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05939062684774399
    2. '(' → logprob: -3.1843905448913574
    3. '[' → logprob: -5.059390544891357
    4. '.' → logprob: -6.059390544891357
    5. '=' → logprob: -6.434390544891357
    6. '```' → logprob: -6.434390544891357
    7. ''' → logprob: -7.059390544891357
    8. ')' → logprob: -7.309390544891357
    9. '()' → logprob: -8.059391021728516
    10. '"' → logprob: -8.184391021728516

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7048964500427246
    2. ')' → logprob: -1.5798964500427246
    3. '+' → logprob: -1.9548964500427246
    4. '<|end|>' → logprob: -2.9548964500427246
    5. ' =' → logprob: -3.4548964500427246
    6. '_' → logprob: -3.5798964500427246
    7. '[' → logprob: -4.454896450042725
    8. '(' → logprob: -4.954896450042725
    9. '```' → logprob: -4.954896450042725
    10. '()' → logprob: -5.579896450042725

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.5232818126678467
    2. 'input' → logprob: -0.8982818126678467
    3. '0' → logprob: -9.523282051086426
    4. ' max' → logprob: -10.398282051086426
    5. 'max' → logprob: -11.273282051086426
    6. ' ' → logprob: -11.523282051086426
    7. '(input' → logprob: -11.898282051086426
    8. 'output' → logprob: -12.148282051086426
    9. 'sum' → logprob: -12.523282051086426
    10. 'int' → logprob: -12.648282051086426

Token 18: '_total' (ID: 23814)
  Prédit: '_total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.5475648641586304
    2. '_' → logprob: -0.9225648641586304
    3. '_.' → logprob: -4.54756498336792
    4. '.' → logprob: -5.54756498336792
    5. '```' → logprob: -6.29756498336792
    6. '(' → logprob: -6.92256498336792
    7. '()' → logprob: -7.17256498336792
    8. '[' → logprob: -7.42256498336792
    9. '._' → logprob: -7.42256498336792
    10. ')' → logprob: -7.42256498336792

Token 19: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.18713508546352386
    2. ' -' → logprob: -2.1871349811553955
    3. '<|end|>' → logprob: -3.5621349811553955
    4. ' ' → logprob: -3.8121349811553955
    5. '+' → logprob: -5.312135219573975
    6. ')' → logprob: -7.187135219573975
    7. '_' → logprob: -7.562135219573975
    8. '  ' → logprob: -8.062134742736816
    9. '<|end|>' → logprob: -8.062134742736816
    10. '```' → logprob: -8.187134742736816

Token 20: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.02054784446954727
    2. ' input' → logprob: -3.895547866821289
    3. '1' → logprob: -12.270547866821289
    4. '_input' → logprob: -14.895547866821289
    5. ' ' → logprob: -15.270547866821289
    6. '<input' → logprob: -15.395547866821289
    7. 'output' → logprob: -15.895547866821289
    8. '(input' → logprob: -16.27054786682129
    9. '	input' → logprob: -16.77054786682129
    10. '=input' → logprob: -16.89554786682129

Token 21: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -0.21226750314235687
    2. '_' → logprob: -2.0872673988342285
    3. '_total' → logprob: -2.7122673988342285
    4. '_s' → logprob: -8.587267875671387
    5. '__' → logprob: -9.087267875671387
    6. '_)' → logprob: -9.212267875671387
    7. ')' → logprob: -9.837267875671387
    8. '_-' → logprob: -9.837267875671387
    9. ')_' → logprob: -10.212267875671387
    10. '_output' → logprob: -10.837267875671387

Token 22: 'tract' (ID: 2642)
  Prédit: 'tract'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tract' → logprob: -2.868328920158092e-05
    2. ' tract' → logprob: -11.625028610229492
    3. 'stract' → logprob: -11.750028610229492
    4. 't' → logprob: -12.375028610229492
    5. 'r' → logprob: -13.125028610229492
    6. 'tr' → logprob: -13.125028610229492
    7. 'tra' → logprob: -13.375028610229492
    8. '```' → logprob: -14.750028610229492
    9. 'TRACT' → logprob: -15.000028610229492
    10. 'tracted' → logprob: -15.000028610229492

Token 23: ' +' (ID: 659)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7649730443954468
    2. '<|end|>' → logprob: -0.7649730443954468
    3. '
' → logprob: -3.2649731636047363
    4. ')' → logprob: -4.764973163604736
    5. '```' → logprob: -4.764973163604736
    6. '\' → logprob: -5.139973163604736
    7. 'newline' → logprob: -6.264973163604736
    8. '<|end|>' → logprob: -6.514973163604736
    9. '#' → logprob: -6.639973163604736
    10. ' ' → logprob: -6.764973163604736

Token 24: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19465292990207672
    2. '1' → logprob: -1.8196529150009155
    3. '10' → logprob: -5.319653034210205
    4. '0' → logprob: -5.694653034210205
    5. ' input' → logprob: -6.194653034210205
    6. '2' → logprob: -6.944653034210205
    7. '100' → logprob: -6.944653034210205
    8. '5' → logprob: -7.444653034210205
    9. 'input' → logprob: -7.569653034210205
    10. '20' → logprob: -8.069652557373047

Token 25: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1211109459400177
    2. '10' → logprob: -3.3711109161376953
    3. '0' → logprob: -3.4961109161376953
    4. 'input' → logprob: -3.8711109161376953
    5. '5' → logprob: -4.746110916137695
    6. '100' → logprob: -5.246110916137695
    7. ' ' → logprob: -5.371110916137695
    8. '2' → logprob: -5.496110916137695
    9. '(' → logprob: -6.621110916137695
    10. '3' → logprob: -7.121110916137695

Token 26: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 27: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.72809237241745
    2. '<|end|>' → logprob: -0.97809237241745
    3. ')' → logprob: -2.6030924320220947
    4. '\n' → logprob: -3.4780924320220947
    5. '```' → logprob: -4.353092193603516
    6. '#' → logprob: -4.853092193603516
    7. '
' → logprob: -5.228092193603516
    8. '\' → logprob: -5.728092193603516
    9. '<|end|>' → logprob: -6.478092193603516
    10. '%' → logprob: -6.728092193603516

Token 28: '(output' (ID: 22485)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02976888418197632
    2. '(output' → logprob: -3.529768943786621
    3. '(input' → logprob: -12.154768943786621
    4. '("("' → logprob: -12.154768943786621
    5. '('' → logprob: -12.904768943786621
    6. ' (' → logprob: -13.279768943786621
    7. '(open' → logprob: -13.404768943786621
    8. '(
' → logprob: -14.654768943786621
    9. '()' → logprob: -15.154768943786621
    10. '(print' → logprob: -15.404768943786621

Token 29: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -0.0059871007688343525
    2. '_' → logprob: -5.630987167358398
    3. '_output' → logprob: -6.630987167358398
    4. ')_' → logprob: -7.630987167358398
    5. '_)' → logprob: -8.255987167358398
    6. '_res' → logprob: -8.880987167358398
    7. ')' → logprob: -9.255987167358398
    8. '_r' → logprob: -10.380987167358398
    9. '_results' → logprob: -10.880987167358398
    10. '_out' → logprob: -11.505987167358398

Token 30: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ' )' → logprob: -13.625001907348633
    3. '))' → logprob: -15.000001907348633
    4. '`)' → logprob: -16.375001907348633
    5. ')
' → logprob: -16.875001907348633
    6. ')`' → logprob: -17.625001907348633
    7. '')' → logprob: -17.875001907348633
    8. '）' → logprob: -19.250001907348633
    9. '")' → logprob: -19.625001907348633
    10. '```' → logprob: -19.625001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 28
Tokens correctement prédits (1ère position, stricte): 10
Tokens correctement prédits (1ère position, avec adaptation): 10
Tokens correctement prédits (top 10): 20
Précision stricte (1ère position): 35.71%
Précision adaptée (1ère position): 35.71%
Précision (top 10): 71.43%
================================================================================
