================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
cards = input().split()
a = int(cards[0])
b = int(cards[1])
c = int(cards[2])

if a >= b and a >= c:
    max1 = a
    if b >= c:
        max2 = b
        max3 = c
    else:
        max2 = c
        max3 = b
elif b >= a and b >= c:
    max1 = b
    if a >= c:
        max2 = a
        max3 = c
    else:
        max2 = c
        max3 = a
else:
    max1 = c
    if a >= b:
        max2 = a
        max3 = b
    else:
        max2 = b
        max3 = a

ans = max1 * 10 + max2 + max3
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'cards' (ID: 40956)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015744570642709732
    2. ''' → logprob: -4.765744686126709
    3. '"' → logprob: -5.640744686126709
    4. '[' → logprob: -6.640744686126709
    5. '.' → logprob: -7.015744686126709
    6. '()' → logprob: -8.14074420928955
    7. '('' → logprob: -8.51574420928955
    8. '```' → logprob: -9.01574420928955
    9. '("("' → logprob: -9.14074420928955
    10. '`' → logprob: -9.26574420928955

Token 4: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.24262084066867828
    2. 'strip' → logprob: -1.617620825767517
    3. '.' → logprob: -4.742620944976807
    4. '.split' → logprob: -5.242620944976807
    5. '.strip' → logprob: -6.117620944976807
    6. '```' → logprob: -8.117620468139648
    7. 'rstrip' → logprob: -8.742620468139648
    8. '()' → logprob: -9.117620468139648
    9. '.lower' → logprob: -9.492620468139648
    10. '_split' → logprob: -9.992620468139648

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06206212937831879
    2. '()' → logprob: -2.8120620250701904
    3. '('' → logprob: -10.81206226348877
    4. '(
' → logprob: -11.43706226348877
    5. '`' → logprob: -11.68706226348877
    6. '"' → logprob: -11.81206226348877
    7. '```' → logprob: -11.81206226348877
    8. '(`' → logprob: -12.06206226348877
    9. '("("' → logprob: -12.06206226348877
    10. '`()' → logprob: -12.18706226348877

Token 6: 'a' (ID: 64)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4983203113079071
    2. 'for' → logprob: -1.3733203411102295
    3. '.sort' → logprob: -2.4983203411102295
    4. '[' → logprob: -3.3733203411102295
    5. '=' → logprob: -5.49832010269165
    6. '.for' → logprob: -5.74832010269165
    7. 'sorted' → logprob: -5.87332010269165
    8. '.append' → logprob: -6.24832010269165
    9. '[::-' → logprob: -6.24832010269165
    10. 'print' → logprob: -6.37332010269165

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3533679246902466
    2. ' =' → logprob: -1.7283679246902466
    3. '.' → logprob: -3.103367805480957
    4. '=' → logprob: -3.478367805480957
    5. 's' → logprob: -3.978367805480957
    6. 'dd' → logprob: -4.228367805480957
    7. ',' → logprob: -6.603367805480957
    8. '_' → logprob: -6.853367805480957
    9. 'r' → logprob: -6.978367805480957
    10. 'd' → logprob: -6.978367805480957

Token 8: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.314657986164093
    2. ' int' → logprob: -2.0646579265594482
    3. ' cards' → logprob: -3.0646579265594482
    4. '[]' → logprob: -3.9396579265594482
    5. 'list' → logprob: -3.9396579265594482
    6. 'cards' → logprob: -4.064658164978027
    7. ' list' → logprob: -4.189658164978027
    8. ' []' → logprob: -4.439658164978027
    9. '[int' → logprob: -4.814658164978027
    10. 'len' → logprob: -6.564658164978027

Token 9: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.07900611311197281
    2. '(' → logprob: -2.5790061950683594
    3. '(card' → logprob: -10.07900619506836
    4. '(a' → logprob: -10.57900619506836
    5. '(input' → logprob: -10.70400619506836
    6. '(c' → logprob: -11.82900619506836
    7. '(chars' → logprob: -12.45400619506836
    8. '('' → logprob: -12.70400619506836
    9. '(tokens' → logprob: -13.07900619506836
    10. '(user' → logprob: -13.20400619506836

Token 10: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.1318875446449965e-05
    2. '[a' → logprob: -10.375041007995605
    3. ')' → logprob: -11.750041007995605
    4. ' [' → logprob: -13.875041007995605
    5. '[len' → logprob: -14.625041007995605
    6. '[
' → logprob: -15.625041007995605
    7. '[-' → logprob: -15.750041007995605
    8. '[count' → logprob: -16.875041961669922
    9. '```' → logprob: -17.375041961669922
    10. '   ' → logprob: -17.375041961669922

Token 11: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.173704271830502e-06
    2. '1' → logprob: -13.37500286102295
    3. ' ' → logprob: -13.37500286102295
    4. ')' → logprob: -17.750003814697266
    5. '2' → logprob: -18.000003814697266
    6. '```' → logprob: -18.625003814697266
    7. '۰' → logprob: -19.125003814697266
    8. 'a' → logprob: -20.062503814697266
    9. '])' → logprob: -20.437503814697266
    10. '-' → logprob: -20.562503814697266

Token 12: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0008949052426032722
    2. ']' → logprob: -7.375895023345947
    3. ')' → logprob: -8.375894546508789
    4. ' ])' → logprob: -10.500894546508789
    5. '[' → logprob: -13.125894546508789
    6. ''])' → logprob: -13.375894546508789
    7. ')])' → logprob: -13.500894546508789
    8. ']))' → logprob: -13.750894546508789
    9. '+' → logprob: -14.000894546508789
    10. ')]' → logprob: -14.250894546508789

Token 13: 'b' (ID: 65)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01059416402131319
    2. 'a' → logprob: -5.885594367980957
    3. '```' → logprob: -6.260594367980957
    4. ' ' → logprob: -6.885594367980957
    5. '=' → logprob: -6.885594367980957
    6. ')' → logprob: -7.010594367980957
    7. '+a' → logprob: -7.885594367980957
    8. '*' → logprob: -7.885594367980957
    9. '<|end|>' → logprob: -7.885594367980957
    10. '[' → logprob: -8.385594367980957

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4922783374786377
    2. '=' → logprob: -0.9922783374786377
    3. ')' → logprob: -4.242278099060059
    4. '=int' → logprob: -6.742278099060059
    5. '+' → logprob: -7.117278099060059
    6. ' ' → logprob: -7.367278099060059
    7. '[' → logprob: -8.117278099060059
    8. 'int' → logprob: -8.992278099060059
    9. '_' → logprob: -9.117278099060059
    10. '<|end|>' → logprob: -9.242278099060059

Token 15: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47407805919647217
    2. 'int' → logprob: -0.9740780591964722
    3. ' ' → logprob: -14.599078178405762
    4. '=int' → logprob: -15.224078178405762
    5. '(int' → logprob: -16.224077224731445
    6. 'a' → logprob: -16.349077224731445
    7. '<int' → logprob: -16.474077224731445
    8. '	int' → logprob: -17.474077224731445
    9. '[int' → logprob: -17.474077224731445
    10. ' a' → logprob: -17.724077224731445

Token 16: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.0621926449239254
    2. '(' → logprob: -2.812192678451538
    3. '(b' → logprob: -9.312192916870117
    4. '(a' → logprob: -9.562192916870117
    5. '(card' → logprob: -10.437192916870117
    6. '(c' → logprob: -11.687192916870117
    7. '(`' → logprob: -12.062192916870117
    8. '("("' → logprob: -12.312192916870117
    9. '(chars' → logprob: -13.312192916870117
    10. '```' → logprob: -13.312192916870117

Token 17: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. ' [' → logprob: -13.87500286102295
    3. ')' → logprob: -14.00000286102295
    4. '```' → logprob: -15.00000286102295
    5. '1' → logprob: -15.62500286102295
    6. '[
' → logprob: -16.000001907348633
    7. ')[' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.625001907348633
    9. '	' → logprob: -17.375001907348633
    10. ''[' → logprob: -17.375001907348633

Token 18: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.519893501419574e-05
    2. '0' → logprob: -9.62509536743164
    3. '])' → logprob: -10.62509536743164
    4. ' ' → logprob: -12.50009536743164
    5. ']' → logprob: -14.25009536743164
    6. ')' → logprob: -15.62509536743164
    7. '2' → logprob: -16.12509536743164
    8. '   ' → logprob: -17.37509536743164
    9. '```' → logprob: -17.37509536743164
    10. ')]' → logprob: -17.50009536743164

Token 19: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004752884153276682
    2. '])' → logprob: -5.504753112792969
    3. ']' → logprob: -7.379753112792969
    4. '）' → logprob: -11.754753112792969
    5. '')' → logprob: -11.879753112792969
    6. '`)' → logprob: -11.879753112792969
    7. ')]' → logprob: -12.129753112792969
    8. '))' → logprob: -12.129753112792969
    9. ''])' → logprob: -12.379753112792969
    10. ')])' → logprob: -12.379753112792969

Token 20: 'c' (ID: 66)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024294056929647923
    2. '*' → logprob: -7.627429485321045
    3. '>' → logprob: -8.002429008483887
    4. 'c' → logprob: -8.127429008483887
    5. '%' → logprob: -8.252429008483887
    6. '#' → logprob: -8.502429008483887
    7. '+c' → logprob: -8.627429008483887
    8. '=' → logprob: -8.877429008483887
    9. '+
' → logprob: -8.877429008483887
    10. '-' → logprob: -9.502429008483887

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6985152363777161
    2. ' =' → logprob: -0.6985152363777161
    3. '_' → logprob: -5.94851541519165
    4. ')' → logprob: -6.94851541519165
    5. '[' → logprob: -7.07351541519165
    6. 's' → logprob: -7.69851541519165
    7. 'a' → logprob: -9.448514938354492
    8. '.' → logprob: -9.823514938354492
    9. ' ' → logprob: -9.823514938354492
    10. ']' → logprob: -10.323514938354492

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.054898083209991455
    2. 'int' → logprob: -2.9298980236053467
    3. ' ' → logprob: -12.179898262023926
    4. 'a' → logprob: -12.429898262023926
    5. ' a' → logprob: -12.679898262023926
    6. '0' → logprob: -13.679898262023926
    7. '(int' → logprob: -14.304898262023926
    8. ' cards' → logprob: -14.679898262023926
    9. '<int' → logprob: -15.429898262023926
    10. '[int' → logprob: -15.429898262023926

Token 23: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.2015121579170227
    2. '(' → logprob: -1.701512098312378
    3. '(c' → logprob: -9.701512336730957
    4. '(card' → logprob: -11.451512336730957
    5. '("("' → logprob: -11.451512336730957
    6. '(`' → logprob: -12.326512336730957
    7. '(chars' → logprob: -13.576512336730957
    8. '('' → logprob: -13.701512336730957
    9. ' (' → logprob: -13.701512336730957
    10. '(tokens' → logprob: -13.951512336730957

Token 24: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.842555426876061e-06
    2. '[
' → logprob: -13.125004768371582
    3. '```' → logprob: -13.500004768371582
    4. ')' → logprob: -14.625004768371582
    5. '3' → logprob: -15.125004768371582
    6. '2' → logprob: -15.375004768371582
    7. '0' → logprob: -15.875004768371582
    8. '][' → logprob: -16.1250057220459
    9. ')[' → logprob: -16.6250057220459
    10. ''[' → logprob: -16.7500057220459

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2664456789934775e-06
    2. '```' → logprob: -15.000000953674316
    3. '1' → logprob: -15.562500953674316
    4. '0' → logprob: -15.562500953674316
    5. '])' → logprob: -15.625000953674316
    6. '3' → logprob: -15.875000953674316
    7. ' ' → logprob: -16.312501907348633
    8. ')' → logprob: -16.937501907348633
    9. ']' → logprob: -17.187501907348633
    10. '   ' → logprob: -17.375001907348633

Token 26: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0014867663849145174
    2. ']' → logprob: -6.876486778259277
    3. '])' → logprob: -7.751486778259277
    4. '`)' → logprob: -12.001486778259277
    5. '）' → logprob: -12.376486778259277
    6. '')' → logprob: -12.501486778259277
    7. ')]' → logprob: -12.751486778259277
    8. '))' → logprob: -13.251486778259277
    9. ')])' → logprob: -14.001486778259277
    10. ' )' → logprob: -14.126486778259277

Token 27: 'if' (ID: 366)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.059256721287965775
    2. 'if' → logprob: -3.9342567920684814
    3. 'd' → logprob: -4.059256553649902
    4. '=' → logprob: -5.684256553649902
    5. '+
' → logprob: -5.684256553649902
    6. 'i' → logprob: -5.809256553649902
    7. '#' → logprob: -6.309256553649902
    8. ' if' → logprob: -6.434256553649902
    9. '*' → logprob: -6.559256553649902
    10. '+d' → logprob: -6.809256553649902

Token 28: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.26863130927085876
    2. ' ' → logprob: -1.8936313390731812
    3. 'a' → logprob: -2.5186312198638916
    4. ' ' → logprob: -6.893631458282471
    5. ' c' → logprob: -7.143631458282471
    6. ''' → logprob: -7.268631458282471
    7. ' (' → logprob: -7.768631458282471
    8. ' '' → logprob: -8.268630981445312
    9. 'c' → logprob: -8.393630981445312
    10. ' cards' → logprob: -8.643630981445312

Token 29: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3600701689720154
    2. ' >' → logprob: -1.3600702285766602
    3. ' <' → logprob: -3.36007022857666
    4. '_' → logprob: -5.98507022857666
    5. ' >=' → logprob: -6.23507022857666
    6. ' ' → logprob: -6.61007022857666
    7. '==' → logprob: -6.86007022857666
    8. ' !=' → logprob: -6.98507022857666
    9. '>' → logprob: -7.36007022857666
    10. ' <=' → logprob: -7.48507022857666

Token 30: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003158707171678543
    2. '18' → logprob: -6.7531585693359375
    3. '1' → logprob: -7.6281585693359375
    4. ' b' → logprob: -7.7531585693359375
    5. '10' → logprob: -7.7531585693359375
    6. '5' → logprob: -9.253158569335938
    7. '3' → logprob: -9.378158569335938
    8. 'c' → logprob: -9.628158569335938
    9. '100' → logprob: -9.628158569335938
    10. '2' → logprob: -10.128158569335938

Token 31: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7125676870346069
    2. ':' → logprob: -1.462567687034607
    3. ' :' → logprob: -1.462567687034607
    4. ' ' → logprob: -3.2125678062438965
    5. 'and' → logprob: -6.0875678062438965
    6. ' >' → logprob: -6.3375678062438965
    7. '>' → logprob: -7.3375678062438965
    8. ' or' → logprob: -7.9625678062438965
    9. ' a' → logprob: -8.212567329406738
    10. ' ):' → logprob: -8.587567329406738

Token 32: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2553643584251404
    2. ' c' → logprob: -1.5053644180297852
    3. 'a' → logprob: -6.130364418029785
    4. 'c' → logprob: -7.880364418029785
    5. ' b' → logprob: -7.880364418029785
    6. ' ' → logprob: -8.005364418029785
    7. ' ' → logprob: -8.880364418029785
    8. ''' → logprob: -11.255364418029785
    9. '"' → logprob: -12.505364418029785
    10. 'b' → logprob: -13.505364418029785

Token 33: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04322241246700287
    2. '>=' → logprob: -3.543222427368164
    3. ' >' → logprob: -4.793222427368164
    4. ' <=' → logprob: -5.668222427368164
    5. '>' → logprob: -7.168222427368164
    6. ' ' → logprob: -7.293222427368164
    7. '<=' → logprob: -9.168222427368164
    8. ' <' → logprob: -10.918222427368164
    9. ' and' → logprob: -11.043222427368164
    10. ' ==' → logprob: -11.918222427368164

Token 34: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.16022484004497528
    2. ' c' → logprob: -1.9102247953414917
    3. ' ' → logprob: -14.785224914550781
    4. '	c' → logprob: -15.535224914550781
    5. ')c' → logprob: -16.53522491455078
    6. '_c' → logprob: -17.03522491455078
    7. 'b' → logprob: -17.28522491455078
    8. ' ' → logprob: -17.91022491455078
    9. 'с' → logprob: -18.91022491455078
    10. '```' → logprob: -19.28522491455078

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019250456243753433
    2. ' :' → logprob: -4.019250392913818
    3. ' and' → logprob: -6.894250392913818
    4. 'and' → logprob: -9.894250869750977
    5. ':
' → logprob: -11.644250869750977
    6. '):' → logprob: -12.144250869750977
    7. '':' → logprob: -12.644250869750977
    8. ' ' → logprob: -12.644250869750977
    9. ':**' → logprob: -12.644250869750977
    10. ' ):' → logprob: -13.394250869750977

Token 36: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016147684305906296
    2. ' :' → logprob: -4.391147613525391
    3. ' ' → logprob: -6.516147613525391
    4. ' and' → logprob: -7.141147613525391
    5. ' a' → logprob: -7.516147613525391
    6. '   ' → logprob: -8.76614761352539
    7. 'print' → logprob: -8.89114761352539
    8. ':
' → logprob: -9.26614761352539
    9. 'a' → logprob: -9.39114761352539
    10. ' print' → logprob: -9.89114761352539

Token 37: ' max' (ID: 2999)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6731422543525696
    2. ' print' → logprob: -0.7981422543525696
    3. '   ' → logprob: -3.423142194747925
    4. ' a' → logprob: -5.298142433166504
    5. 'a' → logprob: -7.173142433166504
    6. '    ' → logprob: -7.923142433166504
    7. ' ' → logprob: -8.048142433166504
    8. ':' → logprob: -8.423142433166504
    9. ' if' → logprob: -10.173142433166504
    10. ' :' → logprob: -10.298142433166504

Token 38: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.30195674300193787
    2. '(' → logprob: -1.5519567728042603
    3. 'a' → logprob: -3.6769566535949707
    4. '(a' → logprob: -4.676956653594971
    5. '_a' → logprob: -5.426956653594971
    6. '_value' → logprob: -6.051956653594971
    7. '_val' → logprob: -6.051956653594971
    8. ')' → logprob: -6.676956653594971
    9. '<|end|>' → logprob: -6.676956653594971
    10. ' ' → logprob: -7.426956653594971

Token 39: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2428307831287384
    2. ' ' → logprob: -1.742830753326416
    3. '=' → logprob: -3.867830753326416
    4. '_' → logprob: -4.117830753326416
    5. '<|end|>' → logprob: -7.117830753326416
    6. 'a' → logprob: -7.367830753326416
    7. ' ==' → logprob: -7.742830753326416
    8. ',' → logprob: -7.992830753326416
    9. '  ' → logprob: -8.617831230163574
    10. ' _' → logprob: -8.867831230163574

Token 40: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.25193095207214355
    2. ' a' → logprob: -1.5019309520721436
    3. ' ' → logprob: -14.251931190490723
    4. '	a' → logprob: -14.501931190490723
    5. 'b' → logprob: -15.626931190490723
    6. ' ' → logprob: -15.751931190490723
    7. '   ' → logprob: -17.001930236816406
    8. ''a' → logprob: -17.251930236816406
    9. '_a' → logprob: -17.376930236816406
    10. '(a' → logprob: -17.626930236816406

Token 41: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.21848590672016144
    2. '
' → logprob: -2.3434858322143555
    3. '<|end|>' → logprob: -3.0934858322143555
    4. 'else' → logprob: -4.0934858322143555
    5. '\n' → logprob: -4.8434858322143555
    6. ':' → logprob: -5.0934858322143555
    7. 'if' → logprob: -5.3434858322143555
    8. '   ' → logprob: -5.4684858322143555
    9. ' ' → logprob: -5.9684858322143555
    10. ' elif' → logprob: -6.4684858322143555

Token 42: '   ' (ID: 271)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.1918553113937378
    2. 'else' → logprob: -2.6918554306030273
    3. '
' → logprob: -2.8168554306030273
    4. '\n' → logprob: -3.9418554306030273
    5. '    
' → logprob: -4.691855430603027
    6. '   ' → logprob: -5.191855430603027
    7. ' 
' → logprob: -6.191855430603027
    8. ' elif' → logprob: -6.191855430603027
    9. '```' → logprob: -6.941855430603027
    10. '<|end|>' → logprob: -6.941855430603027

Token 43: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6367007493972778
    2. 'elif' → logprob: -1.3867007493972778
    3. 'max' → logprob: -2.2617006301879883
    4. 'if' (adapté à ' if') → logprob: -2.3867006301879883
    5. '<|end|>' → logprob: -4.886700630187988
    6. '\n' → logprob: -5.261700630187988
    7. 'else' → logprob: -5.636700630187988
    8. '   ' → logprob: -7.136700630187988
    9. '    
' → logprob: -7.136700630187988
    10. '  
' → logprob: -7.136700630187988

Token 44: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2811598777770996
    2. 'b' → logprob: -1.4061598777770996
    3. ' ' → logprob: -12.406160354614258
    4. '   ' → logprob: -13.656160354614258
    5. '	b' → logprob: -13.781160354614258
    6. 'a' → logprob: -13.906160354614258
    7. ' ' → logprob: -14.281160354614258
    8. '(b' → logprob: -15.031160354614258
    9. ' a' → logprob: -15.531160354614258
    10. '>b' → logprob: -15.531160354614258

Token 45: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.18809270858764648
    2. '>=' → logprob: -1.8130927085876465
    3. ' >' → logprob: -5.1880927085876465
    4. '>' → logprob: -5.9380927085876465
    5. ' ' → logprob: -9.813093185424805
    6. ' <=' → logprob: -11.313093185424805
    7. ' <' → logprob: -12.063093185424805
    8. '   ' → logprob: -12.188093185424805
    9. '<=' → logprob: -12.563093185424805
    10. ' ' → logprob: -13.313093185424805

Token 46: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02054375410079956
    2. ' c' → logprob: -3.8955438137054443
    3. ' ' → logprob: -13.770544052124023
    4. '	c' → logprob: -14.895544052124023
    5. '   ' → logprob: -15.020544052124023
    6. '_c' → logprob: -16.895544052124023
    7. '  ' → logprob: -17.020544052124023
    8. '    ' → logprob: -17.270544052124023
    9. ' ' → logprob: -17.520544052124023
    10. ')c' → logprob: -17.645544052124023

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004977574571967125
    2. ':
' → logprob: -5.754977703094482
    3. ' :' → logprob: -6.379977703094482
    4. ' and' → logprob: -9.629977226257324
    5. ' :
' → logprob: -10.629977226257324
    6. '   ' → logprob: -12.379977226257324
    7. 'and' → logprob: -12.879977226257324
    8. '>' → logprob: -13.754977226257324
    9. '       ' → logprob: -13.879977226257324
    10. '):' → logprob: -14.129977226257324

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10798182338476181
    2. ':' → logprob: -2.3579819202423096
    3. 'max' → logprob: -6.2329816818237305
    4. '   ' → logprob: -6.6079816818237305
    5. '    ' → logprob: -7.1079816818237305
    6. ':
' → logprob: -7.3579816818237305
    7. ' max' → logprob: -7.7329816818237305
    8. '\n' → logprob: -7.7329816818237305
    9. '        
' → logprob: -8.10798168182373
    10. '    
' → logprob: -8.60798168182373

Token 49: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.19071665406227112
    2. ' max' → logprob: -1.8157166242599487
    3. '\n' → logprob: -5.190716743469238
    4. '
' → logprob: -6.440716743469238
    5. '           ' → logprob: -6.440716743469238
    6. '       ' → logprob: -7.065716743469238
    7. 'b' → logprob: -8.440716743469238
    8. ' ' → logprob: -8.690716743469238
    9. ' 
' → logprob: -9.065716743469238
    10. '(max' → logprob: -9.190716743469238

Token 50: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006434533279389143
    2. '1' → logprob: -7.375643253326416
    3. ' ' → logprob: -11.125643730163574
    4. ' b' → logprob: -13.875643730163574
    5. 'b' → logprob: -14.375643730163574
    6. '0' → logprob: -15.500643730163574
    7. '3' → logprob: -16.250642776489258
    8. '_' → logprob: -16.750642776489258
    9. '  ' → logprob: -16.938142776489258
    10. '   ' → logprob: -17.188142776489258

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018153101205825806
    2. '=' → logprob: -4.018153190612793
    3. ' ' → logprob: -13.643153190612793
    4. '=b' → logprob: -14.018153190612793
    5. ' =
' → logprob: -14.393153190612793
    6. ',' → logprob: -14.768153190612793
    7. ' =
' → logprob: -17.268152236938477
    8. ' =)' → logprob: -17.643152236938477
    9. '=c' → logprob: -17.768152236938477
    10. '=

' → logprob: -18.518152236938477

Token 52: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005234002135694027
    2. ' b' → logprob: -5.2552337646484375
    3. '	b' → logprob: -16.380233764648438
    4. '   ' → logprob: -16.755233764648438
    5. ' ' → logprob: -18.380233764648438
    6. '>b' → logprob: -18.505233764648438
    7. ' б' → logprob: -18.630233764648438
    8. ')b' → logprob: -19.005233764648438
    9. 'c' → logprob: -19.255233764648438
    10. 'a' → logprob: -19.880233764648438

Token 53: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.6492595076560974
    2. 'else' → logprob: -0.8992595076560974
    3. '<|end|>' → logprob: -3.024259567260742
    4. '   ' → logprob: -4.649259567260742
    5. '
' → logprob: -4.899259567260742
    6. 'elif' → logprob: -6.274259567260742
    7. '       ' → logprob: -6.774259567260742
    8. ' elif' → logprob: -7.524259567260742
    9. '	else' → logprob: -7.774259567260742
    10. '<|end|>' → logprob: -8.024259567260742

Token 54: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.5312594175338745
    2. 'else' → logprob: -0.9062594175338745
    3. '       ' → logprob: -5.281259536743164
    4. '<|end|>' → logprob: -6.406259536743164
    5. '
' → logprob: -7.531259536743164
    6. '   ' → logprob: -8.281259536743164
    7. ' 
' → logprob: -8.656259536743164
    8. 'elif' → logprob: -8.781259536743164
    9. '	else' → logprob: -9.281259536743164
    10. ' elif' → logprob: -10.406259536743164

Token 55: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1664024442434311
    2. 'else' → logprob: -2.1664023399353027
    3. ' c' → logprob: -3.6664023399353027
    4. '   ' → logprob: -5.541402339935303
    5. '       ' → logprob: -5.666402339935303
    6. ' else' → logprob: -5.666402339935303
    7. 'elif' → logprob: -6.416402339935303
    8. 'max' (adapté à ' max') → logprob: -7.666402339935303
    9. ' ' → logprob: -9.416402816772461
    10. '
' → logprob: -10.541402816772461

Token 56: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.00024596223374828696
    2. '_' → logprob: -8.375246047973633
    3. 'c' → logprob: -12.500246047973633
    4. '1' → logprob: -12.875246047973633
    5. '2' → logprob: -13.125246047973633
    6. ' ' → logprob: -13.250246047973633
    7. '<|end|>' → logprob: -13.250246047973633
    8. ' c' → logprob: -13.500246047973633
    9. '   ' → logprob: -14.750246047973633
    10. ' _' → logprob: -15.250246047973633

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740871787071228
    2. '=' → logprob: -0.9740871787071228
    3. ' ' → logprob: -11.59908676147461
    4. ' =
' → logprob: -14.84908676147461
    5. ' =
' → logprob: -16.09908676147461
    6. ')' → logprob: -16.34908676147461
    7. ',' → logprob: -16.59908676147461
    8. ' ' → logprob: -16.84908676147461
    9. '<|end|>' → logprob: -16.84908676147461
    10. '=

' → logprob: -16.97408676147461

Token 58: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.061971161514520645
    2. 'c' → logprob: -2.8119711875915527
    3. ' ' → logprob: -13.186970710754395
    4. '	c' → logprob: -14.311970710754395
    5. ' ' → logprob: -14.686970710754395
    6. '_c' → logprob: -15.436970710754395
    7. '    ' → logprob: -16.31197166442871
    8. ')c' → logprob: -16.68697166442871
    9. '   ' → logprob: -16.93697166442871
    10. '```' → logprob: -17.06197166442871

Token 59: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18898776173591614
    2. 'else' → logprob: -2.1889877319335938
    3. ' else' → logprob: -2.8139877319335938
    4. '	else' → logprob: -9.313987731933594
    5. '       ' → logprob: -10.063987731933594
    6. 'elif' → logprob: -10.188987731933594
    7. '
' → logprob: -11.438987731933594
    8. '    
' → logprob: -11.813987731933594
    9. '   ' → logprob: -12.563987731933594
    10. '```' → logprob: -12.563987731933594

Token 60: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30647414922714233
    2. 'else' → logprob: -1.681474208831787
    3. ' else' → logprob: -2.556474208831787
    4. '	else' → logprob: -8.806473731994629
    5. '
' → logprob: -9.806473731994629
    6. 'elif' → logprob: -10.681473731994629
    7. '```' → logprob: -10.931473731994629
    8. '    
' → logprob: -11.056473731994629
    9. '       ' → logprob: -11.931473731994629
    10. '<|end|>' → logprob: -12.056473731994629

Token 61: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5951161980628967
    2. ' else' → logprob: -0.8451161980628967
    3. '   ' → logprob: -3.970116138458252
    4. 'elif' → logprob: -9.72011661529541
    5. '	else' → logprob: -9.97011661529541
    6. '    
' → logprob: -12.34511661529541
    7. ' elif' → logprob: -12.84511661529541
    8. ' ' → logprob: -12.97011661529541
    9. '<|end|>' → logprob: -12.97011661529541
    10. ' 
' → logprob: -14.09511661529541

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018526007188484073
    2. ':
' → logprob: -6.626852512359619
    3. ' :' → logprob: -7.751852512359619
    4. '       ' → logprob: -9.751852989196777
    5. ' :
' → logprob: -10.876852989196777
    6. '   ' → logprob: -11.751852989196777
    7. '    ' → logprob: -13.251852989196777
    8. ' c' → logprob: -13.626852989196777
    9. ' ' → logprob: -13.626852989196777
    10. ':

' → logprob: -13.751852989196777

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4591139256954193
    2. ' ' → logprob: -2.084113836288452
    3. ' b' → logprob: -2.209113836288452
    4. '        ' → logprob: -3.084113836288452
    5. ' c' → logprob: -3.084113836288452
    6. '    ' → logprob: -3.834113836288452
    7. ' ' → logprob: -4.709114074707031
    8. 'b' → logprob: -5.584114074707031
    9. ' max' → logprob: -6.459114074707031
    10. '   ' → logprob: -6.584114074707031

Token 64: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.926912784576416
    2. 'b' → logprob: -1.801912784576416
    3. ' c' → logprob: -1.926912784576416
    4. '       ' → logprob: -2.301912784576416
    5. ' max' → logprob: -2.551912784576416
    6. 'max' (adapté à ' max') → logprob: -2.801912784576416
    7. '        ' → logprob: -3.676912784576416
    8. ' b' → logprob: -4.176912784576416
    9. ' ' → logprob: -5.301912784576416
    10. '    ' → logprob: -5.551912784576416

Token 65: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.2521257996559143
    2. '3' → logprob: -1.5021257400512695
    3. ' ' → logprob: -8.75212574005127
    4. ' c' → logprob: -10.87712574005127
    5. '   ' → logprob: -11.87712574005127
    6. 'c' → logprob: -12.25212574005127
    7. '  ' → logprob: -12.75212574005127
    8. '_' → logprob: -12.87712574005127
    9. '    ' → logprob: -13.87712574005127
    10. '       ' → logprob: -14.87712574005127

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020710527896881
    2. '=' → logprob: -2.3502070903778076
    3. ' ' → logprob: -14.975207328796387
    4. '=c' → logprob: -16.35020637512207
    5. ' =
' → logprob: -16.97520637512207
    6. '＝' → logprob: -18.72520637512207
    7. 'c' → logprob: -18.85020637512207
    8. ')' → logprob: -19.22520637512207
    9. '_' → logprob: -19.22520637512207
    10. '   ' → logprob: -19.60020637512207

Token 67: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06196824833750725
    2. 'c' → logprob: -2.8119683265686035
    3. '	c' → logprob: -15.061967849731445
    4. ' ' → logprob: -15.436967849731445
    5. ' ' → logprob: -15.811967849731445
    6. ')c' → logprob: -17.686967849731445
    7. '_c' → logprob: -17.811967849731445
    8. '<|end|>' → logprob: -19.061967849731445
    9. '    ' → logprob: -19.936967849731445
    10. 'с' → logprob: -19.936967849731445

Token 68: '
' (ID: 198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6461278200149536
    2. ' b' → logprob: -0.8961278200149536
    3. '
' → logprob: -3.771127700805664
    4. ' ' → logprob: -4.146127700805664
    5. '       ' → logprob: -4.271127700805664
    6. ' 
' → logprob: -5.396127700805664
    7. '```' → logprob: -5.521127700805664
    8. '<|end|>' → logprob: -6.646127700805664
    9. '   ' → logprob: -7.146127700805664
    10. ')' → logprob: -7.271127700805664

Token 69: '       ' (ID: 309)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.8936634063720703
    2. 'b' → logprob: -1.0186634063720703
    3. ' 
' → logprob: -2.1436634063720703
    4. ' ' → logprob: -2.3936634063720703
    5. '       ' → logprob: -4.89366340637207
    6. '        
' → logprob: -5.76866340637207
    7. '
' → logprob: -6.01866340637207
    8. '<|end|>' → logprob: -6.64366340637207
    9. '```' → logprob: -6.64366340637207
    10. '	b' → logprob: -7.01866340637207

Token 70: ' max' (ID: 2999)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0019286326132714748
    2. ' b' → logprob: -6.251928806304932
    3. ' ' → logprob: -17.376928329467773
    4. '   ' → logprob: -17.626928329467773
    5. '	b' → logprob: -18.126928329467773
    6. '       ' → logprob: -18.751928329467773
    7. '    ' → logprob: -19.876928329467773
    8. '  ' → logprob: -20.126928329467773
    9. '```' → logprob: -20.126928329467773
    10. ')b' → logprob: -20.751928329467773

Token 71: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.8624639324116288e-06
    2. '2' → logprob: -13.500001907348633
    3. ' ' → logprob: -15.000001907348633
    4. '1' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.625001907348633
    6. '۳' → logprob: -19.000001907348633
    7. '  ' → logprob: -19.500001907348633
    8. '```' → logprob: -20.000001907348633
    9. '[' → logprob: -20.625001907348633
    10. '٣' → logprob: -21.250001907348633

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2519415020942688
    2. ' =' → logprob: -1.501941442489624
    3. '=b' → logprob: -11.501941680908203
    4. ' ' → logprob: -13.376941680908203
    5. ' =
' → logprob: -15.251941680908203
    6. ')' → logprob: -16.126941680908203
    7. '=
' → logprob: -16.626941680908203
    8. 'b' → logprob: -16.876941680908203
    9. '=

' → logprob: -17.126941680908203
    10. '<|end|>' → logprob: -17.126941680908203

Token 73: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0485873706638813
    2. ' b' → logprob: -3.0485873222351074
    3. '	b' → logprob: -17.923587799072266
    4. ' ' → logprob: -18.173587799072266
    5. '_b' → logprob: -20.173587799072266
    6. ')b' → logprob: -20.173587799072266
    7. '   ' → logprob: -20.923587799072266
    8. ' ' → logprob: -21.298587799072266
    9. ' б' → logprob: -21.673587799072266
    10. '*b' → logprob: -21.923587799072266

Token 74: '
' (ID: 198)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.0425417497754097
    2. 'else' → logprob: -3.667541742324829
    3. '<|end|>' → logprob: -4.667541980743408
    4. '
' → logprob: -6.167541980743408
    5. '\n' → logprob: -6.417541980743408
    6. '```' → logprob: -6.542541980743408
    7. ' elif' → logprob: -7.542541980743408
    8. 'e' → logprob: -8.16754150390625
    9. ' else' → logprob: -8.79254150390625
    10. '#elif' → logprob: -8.79254150390625

Token 75: 'elif' (ID: 29767)
  Prédit: 'elif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.08537090569734573
    2. 'else' → logprob: -2.9603710174560547
    3. 'e' → logprob: -4.585371017456055
    4. '
' → logprob: -5.335371017456055
    5. '\n' → logprob: -5.460371017456055
    6. '<|end|>' → logprob: -5.460371017456055
    7. '```' → logprob: -5.710371017456055
    8. ' elif' → logprob: -7.210371017456055
    9. '    
' → logprob: -7.835371017456055
    10. ' else' → logprob: -7.835371017456055

Token 76: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.005160227883607149
    2. 'b' → logprob: -5.380160331726074
    3. ' a' → logprob: -7.630160331726074
    4. 'a' → logprob: -9.880160331726074
    5. ' ' → logprob: -13.005160331726074
    6. ' c' → logprob: -14.630160331726074
    7. ' ' → logprob: -15.880160331726074
    8. '	b' → logprob: -17.317659378051758
    9. '    ' → logprob: -17.317659378051758
    10. '"' → logprob: -17.505159378051758

Token 77: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.004820395726710558
    2. '>=' → logprob: -5.504820346832275
    3. ' >' → logprob: -7.254820346832275
    4. '>' → logprob: -10.879820823669434
    5. ' ' → logprob: -11.129820823669434
    6. ' ' → logprob: -15.254820823669434
    7. ' >=",' → logprob: -15.379820823669434
    8. '   ' → logprob: -15.504820823669434
    9. ' ≥' → logprob: -15.629820823669434
    10. '  ' → logprob: -16.004819869995117

Token 78: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.043019168078899384
    2. ' a' → logprob: -3.1680190563201904
    3. 'c' → logprob: -11.29301929473877
    4. ' c' → logprob: -12.16801929473877
    5. ' ' → logprob: -14.16801929473877
    6. '>a' → logprob: -14.16801929473877
    7. '	a' → logprob: -14.54301929473877
    8. '   ' → logprob: -16.043018341064453
    9. ''a' → logprob: -16.168018341064453
    10. ' а' → logprob: -16.793018341064453

Token 79: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023260504007339478
    2. 'and' → logprob: -3.7732605934143066
    3. ' ' → logprob: -11.148260116577148
    4. '   ' → logprob: -15.273260116577148
    5. '```' → logprob: -16.02326011657715
    6. ' a' → logprob: -16.14826011657715
    7. ' ' → logprob: -16.64826011657715
    8. '<|end|>' → logprob: -16.89826011657715
    9. ' an' → logprob: -17.27326011657715
    10. '	and' → logprob: -17.77326011657715

Token 80: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.011049585416913033
    2. 'b' → logprob: -4.511049747467041
    3. ' ' → logprob: -14.011049270629883
    4. ' c' → logprob: -14.386049270629883
    5. '	b' → logprob: -16.011049270629883
    6. ' ' → logprob: -16.261049270629883
    7. ' б' → logprob: -16.636049270629883
    8. '<|end|>' → logprob: -17.386049270629883
    9. '```' → logprob: -17.636049270629883
    10. 'c' → logprob: -17.698549270629883

Token 81: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.47412946820259094
    2. '>=' → logprob: -0.9741294384002686
    3. '>' → logprob: -10.224129676818848
    4. ' >' → logprob: -11.974129676818848
    5. ' ' → logprob: -12.349129676818848
    6. '<|end|>' → logprob: -12.724129676818848
    7. ']>=' → logprob: -13.599129676818848
    8. ')>=' → logprob: -14.474129676818848
    9. '≥' → logprob: -14.849129676818848
    10. 'and' → logprob: -15.974129676818848

Token 82: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6931562423706055
    2. ' c' → logprob: -0.6931562423706055
    3. ' ' → logprob: -12.318156242370605
    4. '<|end|>' → logprob: -13.443156242370605
    5. 'a' → logprob: -13.943156242370605
    6. '	c' → logprob: -14.193156242370605
    7. '   ' → logprob: -14.693156242370605
    8. '_c' → logprob: -15.318156242370605
    9. ' a' → logprob: -15.318156242370605
    10. '  ' → logprob: -15.318156242370605

Token 83: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00022570860164705664
    2. ':
' → logprob: -8.500226020812988
    3. ' :' → logprob: -10.750226020812988
    4. ':
' → logprob: -15.000226020812988
    5. '):' → logprob: -15.250226020812988
    6. ':

' → logprob: -16.625225067138672
    7. ' :
' → logprob: -16.750225067138672
    8. ':`' → logprob: -17.375225067138672
    9. ':**' → logprob: -17.625225067138672
    10. '   ' → logprob: -17.875225067138672

Token 84: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.030048180371522903
    2. '
' → logprob: -4.030048370361328
    3. '    
' → logprob: -5.030048370361328
    4. '```' → logprob: -6.655048370361328
    5. ' max' → logprob: -6.905048370361328
    6. 'max' → logprob: -6.905048370361328
    7. '`
' → logprob: -7.155048370361328
    8. '       ' → logprob: -8.030048370361328
    9. ' 
' → logprob: -8.280048370361328
    10. '``' → logprob: -8.405048370361328

Token 85: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.038227617740631104
    2. 'max' (adapté à ' max') → logprob: -3.6632275581359863
    3. '   ' → logprob: -4.538227558135986
    4. 'b' → logprob: -7.413227558135986
    5. ' b' → logprob: -8.163228034973145
    6. '
' → logprob: -9.538228034973145
    7. ' 
' → logprob: -9.663228034973145
    8. '    
' → logprob: -10.163228034973145
    9. '```' → logprob: -10.163228034973145
    10. ' ' → logprob: -10.663228034973145

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5759406685829163
    2. '2' → logprob: -0.8259406685829163
    3. ' ' → logprob: -14.20094108581543
    4. '3' → logprob: -15.57594108581543
    5. '   ' → logprob: -16.07594108581543
    6. '=' → logprob: -16.32594108581543
    7. '  ' → logprob: -16.45094108581543
    8. ' =' → logprob: -16.57594108581543
    9. '```' → logprob: -17.13844108581543
    10. '

' → logprob: -18.01344108581543

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048170737922192
    2. '=' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.886048316955566
    4. ' =
' → logprob: -18.51104736328125
    5. ')' → logprob: -19.63604736328125
    6. ' =)' → logprob: -19.63604736328125
    7. '＝' → logprob: -19.76104736328125
    8. ' =
' → logprob: -19.76104736328125
    9. ' ' → logprob: -20.26104736328125
    10. '   ' → logprob: -20.38604736328125

Token 88: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.5759395360946655
    2. 'b' → logprob: -0.8259395360946655
    3. ' ' → logprob: -16.700939178466797
    4. '	b' → logprob: -17.575939178466797
    5. ' ' → logprob: -17.700939178466797
    6. '>b' → logprob: -18.575939178466797
    7. ' б' → logprob: -18.700939178466797
    8. '```' → logprob: -18.950939178466797
    9. '   ' → logprob: -19.075939178466797
    10. ')b' → logprob: -19.200939178466797

Token 89: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.20626294612884521
    2. '   ' → logprob: -1.9562629461288452
    3. '<|end|>' → logprob: -3.2062630653381348
    4. '    
' → logprob: -6.081263065338135
    5. '  
' → logprob: -6.956263065338135
    6. ' 
' → logprob: -8.331262588500977
    7. '<|end|>' → logprob: -8.581262588500977
    8. ' ' → logprob: -8.581262588500977
    9. ' if' → logprob: -8.706262588500977
    10. 'if' → logprob: -9.206262588500977

Token 90: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.016949787735939026
    2. '
' → logprob: -4.516949653625488
    3. 'if' → logprob: -5.766949653625488
    4. ' if' → logprob: -7.141949653625488
    5. '<|end|>' → logprob: -7.391949653625488
    6. '    
' → logprob: -7.516949653625488
    7. ' ' → logprob: -8.141949653625488
    8. '  
' → logprob: -8.891949653625488
    9. '  ' → logprob: -9.141949653625488
    10. '```' → logprob: -9.391949653625488

Token 91: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04053236171603203
    2. ' if' → logprob: -3.540532350540161
    3. '   ' → logprob: -4.54053258895874
    4. ' ' → logprob: -10.165532112121582
    5. '```' → logprob: -11.915532112121582
    6. '  ' → logprob: -12.415532112121582
    7. '	if' → logprob: -12.915532112121582
    8. '    ' → logprob: -13.290532112121582
    9. '       ' → logprob: -14.290532112121582
    10. '    
' → logprob: -14.540532112121582

Token 92: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10021228343248367
    2. ' a' → logprob: -2.350212335586548
    3. '   ' → logprob: -12.975212097167969
    4. '	a' → logprob: -13.850212097167969
    5. 'c' → logprob: -13.975212097167969
    6. ' ' → logprob: -14.225212097167969
    7. '>a' → logprob: -14.850212097167969
    8. '(a' → logprob: -16.10021209716797
    9. ' c' → logprob: -16.22521209716797
    10. '  ' → logprob: -16.85021209716797

Token 93: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.04862847179174423
    2. '>=' → logprob: -3.048628568649292
    3. ' ' → logprob: -10.423628807067871
    4. ' >' → logprob: -12.548628807067871
    5. '>' → logprob: -13.048628807067871
    6. '<|end|>' → logprob: -13.423628807067871
    7. ')>=' → logprob: -13.423628807067871
    8. ']>=' → logprob: -13.673628807067871
    9. '   ' → logprob: -14.798628807067871
    10. ' ≥' → logprob: -14.923628807067871

Token 94: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06196891888976097
    2. ' c' → logprob: -2.8119688034057617
    3. ' ' → logprob: -14.561968803405762
    4. '	c' → logprob: -15.186968803405762
    5. '<|end|>' → logprob: -15.811968803405762
    6. '   ' → logprob: -16.061969757080078
    7. '```' → logprob: -16.436969757080078
    8. ')c' → logprob: -16.811969757080078
    9. '
' → logprob: -17.061969757080078
    10. '_c' → logprob: -17.311969757080078

Token 95: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02326202020049095
    2. ':
' → logprob: -3.7732620239257812
    3. ' :' → logprob: -12.148262023925781
    4. ':

' → logprob: -12.273262023925781
    5. '       ' → logprob: -13.273262023925781
    6. ':
' → logprob: -13.773262023925781
    7. '<|end|>' → logprob: -13.773262023925781
    8. '   ' → logprob: -14.273262023925781
    9. ' :
' → logprob: -14.273262023925781
    10. '):' → logprob: -14.273262023925781

Token 96: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018796122167259455
    2. '
' → logprob: -7.751879692077637
    3. 'max' → logprob: -7.876879692077637
    4. '   ' → logprob: -8.251879692077637
    5. 'a' → logprob: -8.251879692077637
    6. ' max' → logprob: -8.501879692077637
    7. ' ' → logprob: -9.376879692077637
    8. '        
' → logprob: -9.501879692077637
    9. ' a' → logprob: -10.251879692077637
    10. '    
' → logprob: -11.001879692077637

Token 97: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.02077544294297695
    2. ' max' → logprob: -3.895775556564331
    3. '       ' → logprob: -8.52077579498291
    4. '   ' → logprob: -11.02077579498291
    5. 'a' → logprob: -11.27077579498291
    6. ' ' → logprob: -13.39577579498291
    7. '	max' → logprob: -13.77077579498291
    8. '
' → logprob: -14.39577579498291
    9. '(max' → logprob: -15.02077579498291
    10. '  ' → logprob: -15.02077579498291

Token 98: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.5776860184123507e-06
    2. '1' → logprob: -12.87500286102295
    3. ' ' → logprob: -17.375001907348633
    4. '3' → logprob: -18.000001907348633
    5. '```' → logprob: -18.375001907348633
    6. '۲' → logprob: -19.062501907348633
    7. '   ' → logprob: -19.625001907348633
    8. '২' → logprob: -20.250001907348633
    9. '₂' → logprob: -20.437501907348633
    10. '[' → logprob: -20.687501907348633

Token 99: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740816056728363
    2. ' =' → logprob: -0.9740816354751587
    3. '=a' → logprob: -12.474081993103027
    4. 'a' → logprob: -14.849081993103027
    5. ' ' → logprob: -15.224081993103027
    6. ' =
' → logprob: -17.34908103942871
    7. '=
' → logprob: -17.34908103942871
    8. '<|end|>' → logprob: -17.34908103942871
    9. '=

' → logprob: -17.72408103942871
    10. ')' → logprob: -18.09908103942871

Token 100: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10020732134580612
    2. ' a' → logprob: -2.3502073287963867
    3. 'c' → logprob: -14.975207328796387
    4. '	a' → logprob: -15.100207328796387
    5. ' c' → logprob: -17.35020637512207
    6. ' ' → logprob: -17.47520637512207
    7. '>a' → logprob: -18.85020637512207
    8. '_a' → logprob: -19.85020637512207
    9. ' а' → logprob: -19.97520637512207
    10. '   ' → logprob: -19.97520637512207

Token 101: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00691085634753108
    2. '
' → logprob: -5.006910800933838
    3. '   ' → logprob: -9.381911277770996
    4. '        
' → logprob: -9.881911277770996
    5. ' 
' → logprob: -10.881911277770996
    6. '```' → logprob: -11.631911277770996
    7. '<|end|>' → logprob: -11.756911277770996
    8. 'else' → logprob: -12.256911277770996
    9. ' ' → logprob: -12.506911277770996
    10. '  
' → logprob: -12.881911277770996

Token 103: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7005901336669922
    2. 'max' (adapté à ' max') → logprob: -0.7005901336669922
    3. ' max' → logprob: -5.075590133666992
    4. ' c' → logprob: -6.825590133666992
    5. '
' → logprob: -9.700590133666992
    6. '       ' → logprob: -10.950590133666992
    7. ' ' → logprob: -13.825590133666992
    8. '```' → logprob: -14.450590133666992
    9. '   ' → logprob: -14.575590133666992
    10. ' 
' → logprob: -15.325590133666992

Token 104: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.320199877838604e-07
    2. '2' → logprob: -14.75
    3. '<|end|>' → logprob: -18.25
    4. ' ' → logprob: -18.625
    5. '۳' → logprob: -19.5
    6. '```' → logprob: -20.625
    7. '৩' → logprob: -20.875
    8. '<|end|>' → logprob: -21.0
    9. '   ' → logprob: -21.5625
    10. ' third' → logprob: -21.5625

Token 105: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931619644165039
    2. ' =' → logprob: -0.6931619644165039
    3. '=c' → logprob: -11.318161964416504
    4. ' ' → logprob: -13.318161964416504
    5. 'c' → logprob: -14.318161964416504
    6. '<|end|>' → logprob: -16.068161010742188
    7. ')' → logprob: -16.443161010742188
    8. ' =
' → logprob: -16.818161010742188
    9. ' c' → logprob: -16.818161010742188
    10. '=

' → logprob: -17.568161010742188

Token 106: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.04858794063329697
    2. ' c' → logprob: -3.0485880374908447
    3. '	c' → logprob: -15.048587799072266
    4. ' ' → logprob: -16.548587799072266
    5. ')c' → logprob: -17.798587799072266
    6. '_c' → logprob: -18.548587799072266
    7. '   ' → logprob: -19.298587799072266
    8. ' ' → logprob: -19.548587799072266
    9. '$c' → logprob: -19.548587799072266
    10. 'C' → logprob: -20.173587799072266

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012210107408463955
    2. 'else' → logprob: -4.512209892272949
    3. ' else' → logprob: -6.762209892272949
    4. '	else' → logprob: -13.01220989227295
    5. '       ' → logprob: -13.26220989227295
    6. '  ' → logprob: -15.38720989227295
    7. '```' → logprob: -15.76220989227295
    8. '    
' → logprob: -15.88720989227295
    9. ' ' → logprob: -16.012210845947266
    10. 'elif' → logprob: -16.387210845947266

Token 108: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17813292145729065
    2. 'else' → logprob: -1.9281328916549683
    3. ' else' → logprob: -4.053133010864258
    4. '	else' → logprob: -8.803133010864258
    5. '<|end|>' → logprob: -8.803133010864258
    6. '```' → logprob: -10.178133010864258
    7. '  ' → logprob: -11.053133010864258
    8. '    
' → logprob: -12.053133010864258
    9. '       ' → logprob: -12.053133010864258
    10. 'elif' → logprob: -12.678133010864258

Token 109: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.0129638547077775
    2. '   ' → logprob: -4.512963771820068
    3. ' else' → logprob: -6.262963771820068
    4. ' ' → logprob: -12.512964248657227
    5. '	else' → logprob: -12.887964248657227
    6. '  ' → logprob: -13.887964248657227
    7. '```' → logprob: -14.387964248657227
    8. '       ' → logprob: -14.512964248657227
    9. 'elif' → logprob: -15.637964248657227
    10. '
' → logprob: -16.137964248657227

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0832410529255867
    2. '       ' → logprob: -2.5832409858703613
    3. ':
' → logprob: -5.458240985870361
    4. ' :' → logprob: -9.95824146270752
    5. '      ' → logprob: -12.33324146270752
    6. '   ' → logprob: -12.33324146270752
    7. '```' → logprob: -12.45824146270752
    8. '<|end|>' → logprob: -12.83324146270752
    9. '{' → logprob: -13.08324146270752
    10. '     ' → logprob: -13.20824146270752

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020578444004058838
    2. 'a' → logprob: -5.770578384399414
    3. ' max' → logprob: -5.770578384399414
    4. ' c' → logprob: -5.770578384399414
    5. 'max' → logprob: -6.020578384399414
    6. ' a' → logprob: -6.145578384399414
    7. 'c' → logprob: -6.270578384399414
    8. ' ' → logprob: -6.395578384399414
    9. '   ' → logprob: -7.270578384399414
    10. '        
' → logprob: -7.520578384399414

Token 112: ' max' (ID: 2999)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1602613925933838
    2. ' c' → logprob: -1.9102613925933838
    3. 'max' (adapté à ' max') → logprob: -11.285261154174805
    4. '   ' → logprob: -11.535261154174805
    5. '       ' → logprob: -12.410261154174805
    6. '	c' → logprob: -12.660261154174805
    7. ' max' → logprob: -12.660261154174805
    8. ' ' → logprob: -13.660261154174805
    9. '```' → logprob: -13.910261154174805
    10. '    ' → logprob: -14.160261154174805

Token 113: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3869269788265228
    2. '2' → logprob: -1.1369270086288452
    3. 'c' → logprob: -9.886926651000977
    4. '   ' → logprob: -13.261926651000977
    5. 'C' → logprob: -14.136926651000977
    6. '```' → logprob: -14.386926651000977
    7. '_c' → logprob: -14.636926651000977
    8. '1' → logprob: -14.636926651000977
    9. '  ' → logprob: -16.136926651000977
    10. '=' → logprob: -16.199426651000977

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36760327219963074
    2. '=' → logprob: -1.3676033020019531
    3. ' c' → logprob: -3.492603302001953
    4. 'c' → logprob: -3.867603302001953
    5. '=c' → logprob: -6.492603302001953
    6. ' ' → logprob: -10.867603302001953
    7. '	c' → logprob: -11.367603302001953
    8. '_c' → logprob: -11.617603302001953
    9. 's' → logprob: -13.242603302001953
    10. '>' → logprob: -13.867603302001953

Token 115: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0003372502396814525
    2. ' c' → logprob: -8.000337600708008
    3. '<|end|>' → logprob: -13.375337600708008
    4. '	c' → logprob: -16.250337600708008
    5. ')c' → logprob: -18.000337600708008
    6. '_c' → logprob: -18.500337600708008
    7. 'C' → logprob: -18.625337600708008
    8. '   ' → logprob: -18.750337600708008
    9. '```' → logprob: -18.875337600708008
    10. ' ' → logprob: -19.250337600708008

Token 116: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036762056406587362
    2. '<|end|>' → logprob: -6.253676414489746
    3. '        
' → logprob: -7.253676414489746
    4. '
' → logprob: -8.003676414489746
    5. '   ' → logprob: -8.628676414489746
    6. '```' → logprob: -9.253676414489746
    7. 'a' → logprob: -9.503676414489746
    8. ' 
' → logprob: -9.878676414489746
    9. '      ' → logprob: -10.003676414489746
    10. '	' → logprob: -10.128676414489746

Token 117: '       ' (ID: 309)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.001184276770800352
    2. '       ' → logprob: -7.376184463500977
    3. ' a' → logprob: -7.876184463500977
    4. '   ' → logprob: -9.501184463500977
    5. '<|end|>' → logprob: -9.501184463500977
    6. '	a' → logprob: -11.751184463500977
    7. ' ' → logprob: -12.376184463500977
    8. 'b' → logprob: -12.501184463500977
    9. '```' → logprob: -12.876184463500977
    10. '     ' → logprob: -13.376184463500977

Token 118: ' max' (ID: 2999)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.4855663721391466e-05
    2. ' a' → logprob: -11.125015258789062
    3. '	a' → logprob: -17.250015258789062
    4. '   ' → logprob: -18.125015258789062
    5. '<|end|>' → logprob: -18.500015258789062
    6. '```' → logprob: -19.500015258789062
    7. '>a' → logprob: -20.000015258789062
    8. ' ' → logprob: -20.125015258789062
    9. '       ' → logprob: -20.375015258789062
    10. '#a' → logprob: -21.000015258789062

Token 119: '3' (ID: 18)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -3.173704271830502e-06
    2. ' a' → logprob: -13.00000286102295
    3. '1' → logprob: -14.50000286102295
    4. '<|end|>' → logprob: -14.87500286102295
    5. 'b' → logprob: -17.125003814697266
    6. 'а' → logprob: -18.375003814697266
    7. '	a' → logprob: -18.500003814697266
    8. '<|end|>' → logprob: -18.625003814697266
    9. '_a' → logprob: -19.000003814697266
    10. '3' → logprob: -19.000003814697266

Token 120: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889165729284286
    2. ' =' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.82889175415039
    4. 'a' → logprob: -15.32889175415039
    5. '<|end|>' → logprob: -15.32889175415039
    6. '=
' → logprob: -15.45389175415039
    7. '=a' → logprob: -15.70389175415039
    8. '=b' → logprob: -16.45389175415039
    9. ' =
' → logprob: -16.45389175415039
    10. 'b' → logprob: -17.45389175415039

Token 121: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019288709154352546
    2. ' a' → logprob: -6.251928806304932
    3. '	a' → logprob: -15.62692928314209
    4. '<|end|>' → logprob: -15.62692928314209
    5. '   ' → logprob: -18.126928329467773
    6. ' ' → logprob: -18.376928329467773
    7. '_a' → logprob: -18.751928329467773
    8. '>a' → logprob: -18.876928329467773
    9. ''a' → logprob: -19.501928329467773
    10. '```' → logprob: -19.751928329467773

Token 122: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.01277167722582817
    2. 'elif' → logprob: -4.3877716064453125
    3. '
' → logprob: -8.762771606445312
    4. ' else' → logprob: -9.637771606445312
    5. '```' → logprob: -10.637771606445312
    6. '<|end|>' → logprob: -12.012771606445312
    7. '    
' → logprob: -12.262771606445312
    8. 'elseif' → logprob: -13.512771606445312
    9. '#else' → logprob: -14.137771606445312
    10. '\
' → logprob: -14.637771606445312

Token 123: 'else' (ID: 2807)
  Prédit: 'else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.014181028120219707
    2. 'elif' → logprob: -4.264181137084961
    3. ' else' → logprob: -11.139181137084961
    4. '```' → logprob: -13.639181137084961
    5. 'el' → logprob: -14.514181137084961
    6. 'e' → logprob: -14.889181137084961
    7. 'els' → logprob: -15.014181137084961
    8. '
' → logprob: -15.639181137084961
    9. 'elsif' → logprob: -15.889181137084961
    10. 'elseif' → logprob: -16.26418113708496

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03814132884144783
    2. ':
' → logprob: -3.2881412506103516
    3. ' :' → logprob: -9.913141250610352
    4. ' :
' → logprob: -10.038141250610352
    5. ':
' → logprob: -12.788141250610352
    6. ':

' → logprob: -13.538141250610352
    7. '   ' → logprob: -14.163141250610352
    8. '):
' → logprob: -14.538141250610352
    9. '<|end|>' → logprob: -15.788141250610352
    10. '```' → logprob: -15.913141250610352

Token 125: '   ' (ID: 271)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16375917196273804
    2. '   ' → logprob: -2.413759231567383
    3. ' max' → logprob: -2.788759231567383
    4. ' ' → logprob: -10.038759231567383
    5. '	max' → logprob: -10.913759231567383
    6. '  ' → logprob: -12.288759231567383
    7. '
' → logprob: -12.788759231567383
    8. '```' → logprob: -13.038759231567383
    9. 'c' → logprob: -13.538759231567383
    10. '    
' → logprob: -13.788759231567383

Token 126: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.06204700469970703
    2. ' max' → logprob: -2.812047004699707
    3. 'c' → logprob: -9.562047004699707
    4. '   ' → logprob: -12.562047004699707
    5. ' c' → logprob: -13.437047004699707
    6. '	max' → logprob: -13.812047004699707
    7. '
' → logprob: -14.187047004699707
    8. ' ' → logprob: -14.937047004699707
    9. '    
' → logprob: -14.937047004699707
    10. '```' → logprob: -14.937047004699707

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. '3' → logprob: -15.0
    3. '_' → logprob: -18.125
    4. 'c' → logprob: -18.25
    5. ' ' → logprob: -18.375
    6. '=' → logprob: -19.0
    7. '```' → logprob: -19.0
    8. 'max' → logprob: -19.25
    9. '=max' → logprob: -19.75
    10. 'a' → logprob: -20.0

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12692810595035553
    2. ' =' → logprob: -2.1269280910491943
    3. '=

' → logprob: -17.501928329467773
    4. '＝' → logprob: -17.751928329467773
    5. ' ' → logprob: -17.876928329467773
    6. ')' → logprob: -18.501928329467773
    7. '=
' → logprob: -19.251928329467773
    8. ' =
' → logprob: -19.376928329467773
    9. '=max' → logprob: -19.876928329467773
    10. '=c' → logprob: -19.876928329467773

Token 129: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -8.494741632603109e-05
    2. ' c' → logprob: -9.37508487701416
    3. '	c' → logprob: -17.500085830688477
    4. ')c' → logprob: -19.000085830688477
    5. '<|end|>' → logprob: -19.375085830688477
    6. ' ' → logprob: -19.375085830688477
    7. '_c' → logprob: -19.875085830688477
    8. '   ' → logprob: -19.875085830688477
    9. 'max' → logprob: -20.000085830688477
    10. '
' → logprob: -20.750085830688477

Token 130: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.020062360912561417
    2. '   ' → logprob: -4.270062446594238
    3. ' if' → logprob: -5.145062446594238
    4. ' ' → logprob: -10.270062446594238
    5. '    
' → logprob: -12.395062446594238
    6. '<|end|>' → logprob: -12.520062446594238
    7. '  ' → logprob: -12.770062446594238
    8. '
' → logprob: -12.895062446594238
    9. '	if' → logprob: -13.395062446594238
    10. '```' → logprob: -13.520062446594238

Token 131: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0008077251841314137
    2. '   ' → logprob: -7.375807762145996
    3. ' if' → logprob: -8.625807762145996
    4. ' ' → logprob: -14.250807762145996
    5. '    
' → logprob: -14.750807762145996
    6. '```' → logprob: -14.750807762145996
    7. '	if' → logprob: -15.625807762145996
    8. '  
' → logprob: -16.62580680847168
    9. '  ' → logprob: -16.87580680847168
    10. 'If' → logprob: -17.12580680847168

Token 132: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00071553117595613
    2. ' if' → logprob: -7.250715732574463
    3. '   ' → logprob: -12.125715255737305
    4. ' ' → logprob: -15.625715255737305
    5. 'elif' → logprob: -16.500715255737305
    6. '  ' → logprob: -17.375715255737305
    7. 'If' → logprob: -18.000715255737305
    8. '```' → logprob: -18.125715255737305
    9. '	if' → logprob: -18.875715255737305
    10. '       ' → logprob: -19.250715255737305

Token 133: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005234121344983578
    2. ' a' → logprob: -5.255234241485596
    3. 'b' → logprob: -16.380233764648438
    4. '	a' → logprob: -16.380233764648438
    5. ' ' → logprob: -17.130233764648438
    6. '   ' → logprob: -17.505233764648438
    7. '>a' → logprob: -18.505233764648438
    8. '<|end|>' → logprob: -18.880233764648438
    9. '_a' → logprob: -19.630233764648438
    10. '  ' → logprob: -20.005233764648438

Token 134: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.2014189064502716
    2. '>=' → logprob: -1.7014188766479492
    3. '>' → logprob: -13.20141887664795
    4. ' >' → logprob: -13.20141887664795
    5. ' ' → logprob: -13.57641887664795
    6. ']>=' → logprob: -15.57641887664795
    7. '≥' → logprob: -15.82641887664795
    8. ')>=' → logprob: -16.076419830322266
    9. ' ≥' → logprob: -16.576419830322266
    10. ' ' → logprob: -17.076419830322266

Token 135: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.006717505399137735
    2. ' b' → logprob: -5.006717681884766
    3. '<|end|>' → logprob: -13.131717681884766
    4. ' ' → logprob: -16.006717681884766
    5. '	b' → logprob: -16.881717681884766
    6. '>b' → logprob: -17.381717681884766
    7. ')b' → logprob: -18.881717681884766
    8. '   ' → logprob: -19.381717681884766
    9. ' б' → logprob: -19.506717681884766
    10. '  ' → logprob: -20.131717681884766

Token 136: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0445239432156086
    2. ':
' → logprob: -3.4195239543914795
    3. '       ' → logprob: -4.5445237159729
    4. '<|end|>' → logprob: -9.544524192810059
    5. '   ' → logprob: -9.669524192810059
    6. ' :' → logprob: -11.169524192810059
    7. ':

' → logprob: -11.294524192810059
    8. ':
' → logprob: -12.419524192810059
    9. '    ' → logprob: -12.669524192810059
    10. ' :
' → logprob: -12.669524192810059

Token 137: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001526525360532105
    2. 'max' → logprob: -7.376526355743408
    3. ' max' → logprob: -7.376526355743408
    4. '   ' → logprob: -9.376526832580566
    5. '<|end|>' → logprob: -10.251526832580566
    6. ':' → logprob: -10.501526832580566
    7. ' ' → logprob: -10.501526832580566
    8. ':
' → logprob: -10.501526832580566
    9. '      ' → logprob: -11.126526832580566
    10. '        
' → logprob: -11.251526832580566

Token 138: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.0031777136027812958
    2. ' max' → logprob: -5.753177642822266
    3. '	max' → logprob: -17.503177642822266
    4. '
' → logprob: -18.003177642822266
    5. '_max' → logprob: -18.378177642822266
    6. 'a' → logprob: -18.503177642822266
    7. '(max' → logprob: -19.128177642822266
    8. '       ' → logprob: -19.878177642822266
    9. ' ' → logprob: -20.378177642822266
    10. '<|end|>' → logprob: -20.503177642822266

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0017023178515955806
    2. '1' → logprob: -6.376702308654785
    3. ' ' → logprob: -15.751702308654785
    4. 'a' → logprob: -17.1267032623291
    5. '3' → logprob: -17.2517032623291
    6. '<|end|>' → logprob: -17.3767032623291
    7. '   ' → logprob: -18.0017032623291
    8. '  ' → logprob: -19.1267032623291
    9. '۲' → logprob: -19.9392032623291
    10. '```' → logprob: -20.0017032623291

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04858953505754471
    2. '=' → logprob: -3.0485894680023193
    3. ' ' → logprob: -13.673589706420898
    4. ')' → logprob: -14.798589706420898
    5. '<|end|>' → logprob: -15.173589706420898
    6. 'a' → logprob: -15.673589706420898
    7. '=a' → logprob: -16.4235897064209
    8. ' =
' → logprob: -17.0485897064209
    9. '   ' → logprob: -17.7985897064209
    10. ',' → logprob: -18.6735897064209

Token 141: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.014163863845169544
    2. ' a' → logprob: -4.264163970947266
    3. '	a' → logprob: -15.264163970947266
    4. '>a' → logprob: -17.514163970947266
    5. ' ' → logprob: -17.889163970947266
    6. '   ' → logprob: -17.889163970947266
    7. '<|end|>' → logprob: -18.389163970947266
    8. '_a' → logprob: -18.639163970947266
    9. 'а' → logprob: -19.014163970947266
    10. ''a' → logprob: -19.764163970947266

Token 142: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21356791257858276
    2. '
' → logprob: -1.7135679721832275
    3. '<|end|>' → logprob: -4.463567733764648
    4. '   ' → logprob: -8.963567733764648
    5. '\n' → logprob: -9.588567733764648
    6. '        
' → logprob: -9.588567733764648
    7. 'else' → logprob: -9.963567733764648
    8. 'max' → logprob: -9.963567733764648
    9. '```' → logprob: -9.963567733764648
    10. '
' → logprob: -10.588567733764648

Token 143: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20346195995807648
    2. '
' → logprob: -1.70346200466156
    3. '<|end|>' → logprob: -7.07846212387085
    4. 'max' → logprob: -7.45346212387085
    5. '   ' → logprob: -7.95346212387085
    6. '        
' → logprob: -9.203461647033691
    7. '
' → logprob: -9.328461647033691
    8. ' ' → logprob: -10.828461647033691
    9. 'else' → logprob: -11.703461647033691
    10. ' max' → logprob: -11.703461647033691

Token 144: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -1.723973582556937e-05
    2. ' max' → logprob: -11.500017166137695
    3. '       ' → logprob: -12.250017166137695
    4. '
' → logprob: -13.125017166137695
    5. 'b' → logprob: -15.375017166137695
    6. '   ' → logprob: -18.250017166137695
    7. '	max' → logprob: -18.375017166137695
    8. '_max' → logprob: -18.750017166137695
    9. '        
' → logprob: -18.875017166137695
    10. '
' → logprob: -19.500017166137695

Token 145: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.250000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '<|end|>' → logprob: -16.875001907348633
    5. '۳' → logprob: -18.375001907348633
    6. '_' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.437501907348633
    8. '৩' → logprob: -19.625001907348633
    9. '  ' → logprob: -19.750001907348633
    10. '
' → logprob: -19.875001907348633

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759541988372803
    2. ' =' → logprob: -0.8259541988372803
    3. '=b' → logprob: -11.57595443725586
    4. ' ' → logprob: -12.32595443725586
    5. 'b' → logprob: -14.57595443725586
    6. ' =
' → logprob: -15.45095443725586
    7. ' b' → logprob: -15.57595443725586
    8. '=
' → logprob: -16.95095443725586
    9. '    ' → logprob: -17.20095443725586
    10. ' =
' → logprob: -17.32595443725586

Token 147: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38687121868133545
    2. ' b' → logprob: -1.1368712186813354
    3. ' ' → logprob: -15.761871337890625
    4. '	b' → logprob: -17.761871337890625
    5. ' ' → logprob: -18.136871337890625
    6. ' б' → logprob: -18.511871337890625
    7. ' 
' → logprob: -18.636871337890625
    8. '<|end|>' → logprob: -18.636871337890625
    9. '>b' → logprob: -19.136871337890625
    10. '_b' → logprob: -19.886871337890625

Token 148: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.033902015537023544
    2. 'else' → logprob: -3.5339019298553467
    3. ' else' → logprob: -5.533902168273926
    4. '       ' → logprob: -9.658902168273926
    5. '
' → logprob: -9.908902168273926
    6. '	else' → logprob: -10.658902168273926
    7. '    
' → logprob: -10.908902168273926
    8. '<|end|>' → logprob: -10.908902168273926
    9. '        
' → logprob: -12.033902168273926
    10. 'elif' → logprob: -12.908902168273926

Token 149: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.2606862187385559
    2. '   ' → logprob: -1.5106861591339111
    3. ' else' → logprob: -4.76068639755249
    4. '	else' → logprob: -9.635685920715332
    5. '
' → logprob: -10.135685920715332
    6. '    
' → logprob: -11.260685920715332
    7. '  ' → logprob: -11.760685920715332
    8. '<|end|>' → logprob: -11.760685920715332
    9. '       ' → logprob: -11.885685920715332
    10. '```' → logprob: -12.385685920715332

Token 150: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.001662324066273868
    2. ' else' → logprob: -6.501662254333496
    3. '   ' → logprob: -8.751662254333496
    4. '	else' → logprob: -13.501662254333496
    5. '       ' → logprob: -15.626662254333496
    6. '
' → logprob: -16.376663208007812
    7. 'elif' → logprob: -16.751663208007812
    8. ' ' → logprob: -16.876663208007812
    9. '```' → logprob: -17.626663208007812
    10. '  ' → logprob: -18.251663208007812

Token 151: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6811779141426086
    2. '       ' → logprob: -0.9311779141426086
    3. ':
' → logprob: -2.306177854537964
    4. '   ' → logprob: -9.181178092956543
    5. '      ' → logprob: -10.056178092956543
    6. '    ' → logprob: -10.681178092956543
    7. '     ' → logprob: -10.931178092956543
    8. ' :
' → logprob: -11.431178092956543
    9. '):
' → logprob: -11.681178092956543
    10. ' :' → logprob: -11.806178092956543

Token 152: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3010067641735077
    2. ' max' → logprob: -1.55100679397583
    3. 'max' → logprob: -3.05100679397583
    4. ' ' → logprob: -8.801006317138672
    5. '   ' → logprob: -8.926006317138672
    6. '        ' → logprob: -9.551006317138672
    7. '        
' → logprob: -10.051006317138672
    8. '    ' → logprob: -10.176006317138672
    9. '     ' → logprob: -10.301006317138672
    10. '```' → logprob: -10.426006317138672

Token 153: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' (adapté à ' max') → logprob: -0.023246875032782555
    2. ' max' → logprob: -3.7732467651367188
    3. '       ' → logprob: -14.648246765136719
    4. '   ' → logprob: -14.773246765136719
    5. 'b' → logprob: -15.023246765136719
    6. '	max' → logprob: -15.898246765136719
    7. '           ' → logprob: -17.77324676513672
    8. '
' → logprob: -17.89824676513672
    9. ' ' → logprob: -18.39824676513672
    10. '_max' → logprob: -18.39824676513672

Token 154: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.676981345459353e-06
    2. '3' → logprob: -12.125005722045898
    3. ' ' → logprob: -16.1250057220459
    4. '_' → logprob: -16.2500057220459
    5. '۲' → logprob: -18.0000057220459
    6. '   ' → logprob: -18.6250057220459
    7. '```' → logprob: -18.7500057220459
    8. '  ' → logprob: -19.1250057220459
    9. '
' → logprob: -19.1875057220459
    10. '=' → logprob: -19.3125057220459

Token 155: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4740825295448303
    2. ' =' → logprob: -0.9740825295448303
    3. '=b' → logprob: -12.224082946777344
    4. ' ' → logprob: -14.974082946777344
    5. ' b' → logprob: -16.349082946777344
    6. 'b' → logprob: -16.349082946777344
    7. ' =
' → logprob: -16.849082946777344
    8. '=
' → logprob: -17.349082946777344
    9. '=c' → logprob: -17.349082946777344
    10. '=

' → logprob: -18.099082946777344

Token 156: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0040793512016534805
    2. ' b' → logprob: -5.504079341888428
    3. '<|end|>' → logprob: -13.879079818725586
    4. '>b' → logprob: -17.754079818725586
    5. ' ' → logprob: -17.879079818725586
    6. '	b' → logprob: -19.254079818725586
    7. 'c' → logprob: -20.004079818725586
    8. ')b' → logprob: -20.129079818725586
    9. 'B' → logprob: -20.504079818725586
    10. '_b' → logprob: -20.754079818725586

Token 157: '
' (ID: 198)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.46196448802948
    2. ' c' → logprob: -1.08696448802948
    3. 'a' → logprob: -3.9619646072387695
    4. ' a' → logprob: -4.4619646072387695
    5. '	c' → logprob: -7.0869646072387695
    6. '
' → logprob: -7.9619646072387695
    7. 'max' → logprob: -8.08696460723877
    8. '       ' → logprob: -8.33696460723877
    9. ' 
' → logprob: -9.46196460723877
    10. '<|end|>' → logprob: -9.46196460723877

Token 158: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006384541047737002
    2. 'a' → logprob: -7.750638484954834
    3. ' c' → logprob: -8.500638008117676
    4. 'max' → logprob: -12.750638008117676
    5. '	c' → logprob: -14.500638008117676
    6. '       ' → logprob: -14.500638008117676
    7. '   ' → logprob: -15.125638008117676
    8. ')c' → logprob: -16.375638961791992
    9. '```' → logprob: -16.875638961791992
    10. ' a' → logprob: -17.125638961791992

Token 159: ' max' (ID: 2999)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -7.553032628493384e-05
    2. ' a' → logprob: -9.500075340270996
    3. 'c' → logprob: -14.625075340270996
    4. '	a' → logprob: -16.375076293945312
    5. '   ' → logprob: -17.625076293945312
    6. ' ' → logprob: -18.000076293945312
    7. '    ' → logprob: -19.625076293945312
    8. '  ' → logprob: -19.625076293945312
    9. '       ' → logprob: -20.000076293945312
    10. '     ' → logprob: -20.375076293945312

Token 160: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '2' → logprob: -17.125
    4. 'c' → logprob: -17.375
    5. '1' → logprob: -17.75
    6. '۳' → logprob: -18.625
    7. '   ' → logprob: -18.75
    8. '৩' → logprob: -19.0625
    9. '  ' → logprob: -19.625
    10. '３' → logprob: -20.125

Token 161: ' =' (ID: 314)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.49634990096092224
    2. ' c' → logprob: -1.1213499307632446
    3. 'a' → logprob: -2.871349811553955
    4. ' a' → logprob: -4.996349811553955
    5. '=' → logprob: -6.996349811553955
    6. '	c' → logprob: -7.871349811553955
    7. '=c' → logprob: -8.746350288391113
    8. ' =' → logprob: -8.871350288391113
    9. '   ' → logprob: -8.871350288391113
    10. '_c' → logprob: -9.371350288391113

Token 162: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004307884373702109
    2. ' a' → logprob: -7.750430583953857
    3. '	a' → logprob: -16.500431060791016
    4. 'c' → logprob: -18.750431060791016
    5. ' ' → logprob: -21.000431060791016
    6. '_a' → logprob: -22.125431060791016
    7. '>a' → logprob: -22.375431060791016
    8. '"a' → logprob: -23.125431060791016
    9. ')a' → logprob: -23.125431060791016
    10. ''a' → logprob: -23.500431060791016

Token 163: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3053309917449951
    2. 'print' → logprob: -2.430330991744995
    3. 'if' → logprob: -2.555330991744995
    4. '#' → logprob: -3.430330991744995
    5. '\n' → logprob: -4.055331230163574
    6. '<|end|>' → logprob: -4.055331230163574
    7. '  
' → logprob: -5.180331230163574
    8. ' 
' → logprob: -5.305331230163574
    9. ')' → logprob: -5.680331230163574
    10. ' if' → logprob: -5.805331230163574

Token 164: 'ans' (ID: 616)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43509867787361145
    2. 'print' → logprob: -1.060098648071289
    3. 'max' → logprob: -6.185098648071289
    4. 'result' → logprob: -6.560098648071289
    5. 'sum' → logprob: -7.185098648071289
    6. ' if' → logprob: -7.685098648071289
    7. '#' → logprob: -7.935098648071289
    8. '
' → logprob: -8.935098648071289
    9. 'for' → logprob: -9.060098648071289
    10. '\n' → logprob: -9.060098648071289

Token 165: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10023395717144012
    2. ' =' → logprob: -2.350234031677246
    3. '_' → logprob: -11.225234031677246
    4. ' ' → logprob: -12.600234031677246
    5. ')' → logprob: -13.350234031677246
    6. 's' → logprob: -13.475234031677246
    7. '1' → logprob: -13.475234031677246
    8. 'space' → logprob: -13.600234031677246
    9. 'w' → logprob: -14.475234031677246
    10. ':' → logprob: -14.475234031677246

Token 166: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.08000779896974564
    2. ' max' → logprob: -2.705007791519165
    3. '(max' → logprob: -4.830008029937744
    4. 'str' → logprob: -7.455008029937744
    5. '100' → logprob: -7.580008029937744
    6. ' (' → logprob: -8.830007553100586
    7. ' ' → logprob: -8.955007553100586
    8. '(' → logprob: -8.955007553100586
    9. '[max' → logprob: -9.080007553100586
    10. ' str' → logprob: -9.205007553100586

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005711443373002112
    2. '3' → logprob: -8.125571250915527
    3. '2' → logprob: -8.250571250915527
    4. '(' → logprob: -13.000571250915527
    5. '`' → logprob: -13.125571250915527
    6. 'max' → logprob: -13.125571250915527
    7. '(max' → logprob: -13.500571250915527
    8. '
' → logprob: -13.625571250915527
    9. '"' → logprob: -13.750571250915527
    10. '```' → logprob: -14.063071250915527

Token 168: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.560042142868042
    2. '*' → logprob: -1.435042142868042
    3. ' +' → logprob: -1.810042142868042
    4. ' if' → logprob: -4.685042381286621
    5. 'if' → logprob: -4.935042381286621
    6. ' *' → logprob: -4.935042381286621
    7. '+
' → logprob: -6.810042381286621
    8. '%' → logprob: -7.560042381286621
    9. '-' → logprob: -7.560042381286621
    10. ' +
' → logprob: -7.935042381286621

Token 169: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.4606059193611145
    2. 'max' → logprob: -1.0856058597564697
    3. '10' → logprob: -4.210606098175049
    4. '(max' → logprob: -4.335606098175049
    5. ' max' → logprob: -6.585606098175049
    6. ' ' → logprob: -6.835606098175049
    7. '(' → logprob: -7.210606098175049
    8. '4' → logprob: -10.33560562133789
    9. '2' → logprob: -10.33560562133789
    10. '11' → logprob: -10.46060562133789

Token 170: '10' (ID: 702)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.36048251390457153
    2. '10' → logprob: -1.7354824542999268
    3. '100' → logprob: -2.1104824542999268
    4. '(max' → logprob: -5.860482692718506
    5. '11' → logprob: -6.485482692718506
    6. '3' → logprob: -9.235482215881348
    7. '101' → logprob: -9.235482215881348
    8. '111' → logprob: -9.360482215881348
    9. '500' → logprob: -9.485482215881348
    10. '(' → logprob: -9.610482215881348

Token 171: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03838903456926346
    2. '0' → logprob: -4.288389205932617
    3. '2' → logprob: -4.413389205932617
    4. 'max' → logprob: -5.288389205932617
    5. ' +' → logprob: -5.413389205932617
    6. '**' → logprob: -6.538389205932617
    7. '*' → logprob: -7.413389205932617
    8. '20' → logprob: -10.163389205932617
    9. '5' → logprob: -10.288389205932617
    10. '+
' → logprob: -10.538389205932617

Token 172: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -7.493430894101039e-05
    2. ' max' → logprob: -9.500075340270996
    3. '10' → logprob: -17.87507438659668
    4. ' ' → logprob: -18.87507438659668
    5. '(max' → logprob: -20.12507438659668
    6. 'min' → logprob: -20.12507438659668
    7. '	max' → logprob: -20.50007438659668
    8. '5' → logprob: -20.62507438659668
    9. '20' → logprob: -21.25007438659668
    10. 'm' → logprob: -21.62507438659668

Token 173: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.650518920039758e-06
    2. '23' → logprob: -13.125003814697266
    3. '_' → logprob: -15.000003814697266
    4. ' ' → logprob: -15.250003814697266
    5. '22' → logprob: -15.375003814697266
    6. '234' → logprob: -15.812503814697266
    7. '1' → logprob: -16.125003814697266
    8. '230' → logprob: -16.312503814697266
    9. '۲' → logprob: -16.375003814697266
    10. '20' → logprob: -16.375003814697266

Token 174: ' +' (ID: 659)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.23713181912899017
    2. 'if' → logprob: -1.7371318340301514
    3. ' if' → logprob: -4.487131595611572
    4. '*' → logprob: -4.612131595611572
    5. '+' → logprob: -4.862131595611572
    6. '
' → logprob: -5.737131595611572
    7. 'max' → logprob: -7.237131595611572
    8. 'ans' → logprob: -7.737131595611572
    9. '#' → logprob: -7.862131595611572
    10. ' print' → logprob: -7.987131595611572

Token 175: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0067161982879042625
    2. ' max' → logprob: -5.006716251373291
    3. ' ' → logprob: -14.631715774536133
    4. '(max' → logprob: -15.631715774536133
    5. '3' → logprob: -17.006715774536133
    6. '	max' → logprob: -17.256715774536133
    7. '1' → logprob: -18.006715774536133
    8. '   ' → logprob: -18.381715774536133
    9. '
' → logprob: -18.756715774536133
    10. '0' → logprob: -18.756715774536133

Token 176: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. '۳' → logprob: -17.125
    3. ' ' → logprob: -17.5
    4. '৩' → logprob: -17.625
    5. '٣' → logprob: -18.125
    6. '<|end|>' → logprob: -18.4375
    7. '३' → logprob: -19.25
    8. '
' → logprob: -19.5625
    9. '1' → logprob: -19.625
    10. 'x' → logprob: -20.25

Token 177: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008740628836676478
    2. '
' → logprob: -7.250874042510986
    3. ' print' → logprob: -9.000874519348145
    4. ')' → logprob: -11.500874519348145
    5. '#' → logprob: -11.875874519348145
    6. '.print' → logprob: -12.250874519348145
    7. '
' → logprob: -12.750874519348145
    8. '+' → logprob: -12.875874519348145
    9. '#print' → logprob: -13.125874519348145
    10. '-print' → logprob: -13.250874519348145

Token 178: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0009016924886964262
    2. '
' → logprob: -7.125901699066162
    3. '\n' → logprob: -10.750901222229004
    4. '\' → logprob: -11.500901222229004
    5. ' print' → logprob: -11.500901222229004
    6. 'if' → logprob: -11.750901222229004
    7. ')' → logprob: -11.750901222229004
    8. '<|end|>' → logprob: -12.000901222229004
    9. '```' → logprob: -12.000901222229004
    10. '#' → logprob: -12.375901222229004

Token 179: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.5759560465812683
    2. '(' → logprob: -0.8259560465812683
    3. '("("' → logprob: -12.200956344604492
    4. '('' → logprob: -12.575956344604492
    5. '(
' → logprob: -12.700956344604492
    6. '()' → logprob: -13.450956344604492
    7. ' (' → logprob: -14.075956344604492
    8. '(

' → logprob: -14.700956344604492
    9. '(an' → logprob: -14.950956344604492
    10. '(`' → logprob: -14.950956344604492

Token 180: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1472419600977446e-06
    2. ' )' → logprob: -14.250000953674316
    3. '))' → logprob: -15.250000953674316
    4. ')`' → logprob: -15.875000953674316
    5. '()' → logprob: -17.500001907348633
    6. ')
' → logprob: -18.250001907348633
    7. '(' → logprob: -18.250001907348633
    8. '())' → logprob: -18.625001907348633
    9. ')}' → logprob: -18.750001907348633
    10. '`)' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 178
Tokens correctement prédits (1ère position, stricte): 70
Tokens correctement prédits (1ère position, avec adaptation): 81
Tokens correctement prédits (top 10): 161
Précision stricte (1ère position): 39.33%
Précision adaptée (1ère position): 45.51%
Précision (top 10): 90.45%
================================================================================
