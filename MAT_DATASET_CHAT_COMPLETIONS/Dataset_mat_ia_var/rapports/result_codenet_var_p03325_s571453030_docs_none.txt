================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
A = list(map(int, input().split()))
ans = 0
for a in A:
    while a % 2 == 0:
        a //= 2
        ans += 1
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006202232325449586
    2. '('' → logprob: -7.875620365142822
    3. ''' → logprob: -9.250619888305664
    4. '```' → logprob: -10.375619888305664
    5. '(n' → logprob: -10.500619888305664
    6. '()' → logprob: -10.875619888305664
    7. '("("' → logprob: -10.875619888305664
    8. '`' → logprob: -11.125619888305664
    9. '(
' → logprob: -11.875619888305664
    10. '(input' → logprob: -12.625619888305664

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11869344860315323
    2. ')' → logprob: -2.2436933517456055
    3. '()' → logprob: -5.3686933517456055
    4. '())' → logprob: -7.4936933517456055
    5. '(
' → logprob: -8.243693351745605
    6. '```' → logprob: -9.993693351745605
    7. '(

' → logprob: -10.368693351745605
    8. '('' → logprob: -10.493693351745605
    9. ''' → logprob: -10.618693351745605
    10. '(n' → logprob: -10.868693351745605

Token 5: 'A' (ID: 32)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7040315866470337
    2. 'if' → logprob: -1.4540315866470337
    3. 'for' → logprob: -2.329031467437744
    4. 's' → logprob: -2.454031467437744
    5. 'f' → logprob: -4.329031467437744
    6. ' ' → logprob: -4.454031467437744
    7. 'x' → logprob: -4.829031467437744
    8. ')' → logprob: -4.954031467437744
    9. 'a' → logprob: -4.954031467437744
    10. ''' → logprob: -5.079031467437744

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.007994360290467739
    2. ' =' → logprob: -5.757994174957275
    3. '[:]' → logprob: -6.382994174957275
    4. '=' → logprob: -6.757994174957275
    5. '[i' → logprob: -7.632994174957275
    6. '.' → logprob: -7.632994174957275
    7. '+' → logprob: -8.382994651794434
    8. '\[' → logprob: -8.757994651794434
    9. '.append' → logprob: -9.007994651794434
    10. '[]' → logprob: -9.132994651794434

Token 7: ' list' (ID: 1562)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.7693637013435364
    2. '[]' → logprob: -1.0193636417388916
    3. ' [' → logprob: -2.1443636417388916
    4. '[' → logprob: -3.7693636417388916
    5. 'list' → logprob: -4.269363880157471
    6. ' list' → logprob: -4.769363880157471
    7. '[input' → logprob: -5.019363880157471
    8. '[int' → logprob: -5.769363880157471
    9. '[list' → logprob: -6.394363880157471
    10. '[n' → logprob: -6.519363880157471

Token 8: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014296402223408222
    2. '(range' → logprob: -7.001429557800293
    3. '[' → logprob: -8.626429557800293
    4. '```' → logprob: -8.751429557800293
    5. ')' → logprob: -10.251429557800293
    6. '[(' → logprob: -10.751429557800293
    7. '(
' → logprob: -11.001429557800293
    8. ''s' → logprob: -11.251429557800293
    9. '("("' → logprob: -11.251429557800293
    10. ' (' → logprob: -11.751429557800293

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.12553241848945618
    2. '(' → logprob: -2.250532388687134
    3. '(str' → logprob: -4.875532627105713
    4. '(lambda' → logprob: -6.125532627105713
    5. '(input' → logprob: -6.375532627105713
    6. 'int' → logprob: -7.750532627105713
    7. ')' → logprob: -8.375532150268555
    8. '```' → logprob: -9.250532150268555
    9. '(eval' → logprob: -9.250532150268555
    10. '<int' → logprob: -9.875532150268555

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.01680808514356613
    2. '(' → logprob: -4.266808032989502
    3. ',input' → logprob: -6.766808032989502
    4. ')' → logprob: -7.016808032989502
    5. '))' → logprob: -8.39180850982666
    6. 'input' → logprob: -9.26680850982666
    7. '=input' → logprob: -9.89180850982666
    8. '```' → logprob: -10.51680850982666
    9. ',' → logprob: -10.64180850982666
    10. ' (' → logprob: -10.76680850982666

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018170194700360298
    2. ' input' → logprob: -4.018170356750488
    3. '(input' → logprob: -10.893170356750488
    4. ',input' → logprob: -14.143170356750488
    5. '=input' → logprob: -15.268170356750488
    6. ')' → logprob: -15.393170356750488
    7. '<input' → logprob: -15.643170356750488
    8. '	input' → logprob: -15.643170356750488
    9. ' ' → logprob: -15.893170356750488
    10. '```' → logprob: -17.143169403076172

Token 12: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2648621201515198
    2. '())' → logprob: -2.139862060546875
    3. '()' → logprob: -2.264862060546875
    4. '().' → logprob: -5.014862060546875
    5. '()));' → logprob: -6.264862060546875
    6. '(' → logprob: -6.889862060546875
    7. '())))' → logprob: -7.639862060546875
    8. '))' → logprob: -7.889862060546875
    9. ')' → logprob: -8.514862060546875
    10. '()>' → logprob: -8.639862060546875

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00045379105722531676
    2. 'strip' → logprob: -7.750453948974609
    3. 'rstrip' → logprob: -10.75045394897461
    4. ' split' → logprob: -13.50045394897461
    5. '(split' → logprob: -15.62545394897461
    6. ')' → logprob: -16.25045394897461
    7. 'spl' → logprob: -17.12545394897461
    8. 's' → logprob: -18.75045394897461
    9. 'replace' → logprob: -18.87545394897461
    10. 'read' → logprob: -19.00045394897461

Token 14: '()))
' (ID: 24521)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1187927722930908
    2. '))' → logprob: -1.3687927722930908
    3. '()))' → logprob: -1.3687927722930908
    4. '())' → logprob: -1.8687927722930908
    5. '(' → logprob: -5.118792533874512
    6. '()' → logprob: -5.743792533874512
    7. ')))' → logprob: -7.743792533874512
    8. '('' → logprob: -8.493792533874512
    9. '())))' → logprob: -8.868792533874512
    10. ''))' → logprob: -9.868792533874512

Token 15: 'ans' (ID: 616)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0686752796173096
    2. 'A' → logprob: -1.4436752796173096
    3. 'for' → logprob: -2.3186752796173096
    4. 'result' → logprob: -2.8186752796173096
    5. 'count' → logprob: -3.4436752796173096
    6. 'sum' → logprob: -3.5686752796173096
    7. 'm' → logprob: -3.6936752796173096
    8. 'B' → logprob: -3.8186752796173096
    9. 'S' → logprob: -3.8186752796173096
    10. 'c' → logprob: -3.9436752796173096

Token 16: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.607875406742096
    2. '[' → logprob: -1.6078753471374512
    3. '_' → logprob: -2.357875347137451
    4. ' +=' → logprob: -3.357875347137451
    5. ' =' → logprob: -3.357875347137451
    6. '.' → logprob: -3.482875347137451
    7. '+' → logprob: -3.732875347137451
    8. '+=' → logprob: -3.982875347137451
    9. '.append' → logprob: -4.607875347137451
    10. '[:]' → logprob: -6.357875347137451

Token 17: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2737480103969574
    2. ' ' → logprob: -1.6487480401992798
    3. ' max' → logprob: -3.6487479209899902
    4. 'max' → logprob: -4.64874792098999
    5. ' A' → logprob: -5.39874792098999
    6. 'sum' → logprob: -6.39874792098999
    7. ' []' → logprob: -6.39874792098999
    8. ' sum' → logprob: -6.52374792098999
    9. '[]' → logprob: -7.64874792098999
    10. 'A' → logprob: -7.64874792098999

Token 18: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12184319645166397
    2. 'max' → logprob: -2.371843099594116
    3. 'sum' → logprob: -4.621843338012695
    4. '[]' → logprob: -5.246843338012695
    5. '[' → logprob: -5.621843338012695
    6. 'min' → logprob: -7.121843338012695
    7. '[max' → logprob: -7.121843338012695
    8. 'A' → logprob: -7.621843338012695
    9. 'float' → logprob: -8.621843338012695
    10. 'len' → logprob: -9.621843338012695

Token 19: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12724578380584717
    2. ' for' → logprob: -2.1272459030151367
    3. 'i' → logprob: -9.127245903015137
    4. 'n' → logprob: -9.877245903015137
    5. ',' → logprob: -10.627245903015137
    6. 'f' → logprob: -10.752245903015137
    7. ')' → logprob: -10.877245903015137
    8. 's' → logprob: -10.877245903015137
    9. '\n' → logprob: -11.127245903015137
    10. '\' → logprob: -11.252245903015137

Token 20: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.064297824399546e-05
    2. ' for' → logprob: -10.000070571899414
    3. '```' → logprob: -11.375070571899414
    4. 'i' → logprob: -11.625070571899414
    5. 'n' → logprob: -13.750070571899414
    6. 'f' → logprob: -14.375070571899414
    7. '
' → logprob: -14.625070571899414
    8. '\' → logprob: -14.750070571899414
    9. '' → logprob: -14.875070571899414
    10. 'A' → logprob: -15.125070571899414

Token 21: ' a' (ID: 261)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38849198818206787
    2. ' ' → logprob: -1.1384919881820679
    3. '  ' → logprob: -6.638492107391357
    4. ' ‌' → logprob: -9.5134916305542
    5. 'i' → logprob: -9.6384916305542
    6. '_' → logprob: -9.7634916305542
    7. ' _' → logprob: -10.5134916305542
    8. ' n' → logprob: -10.5134916305542
    9. ' x' → logprob: -10.8884916305542
    10. ' item' → logprob: -11.7634916305542

Token 22: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.045682668685913086
    2. 'in' → logprob: -3.420682668685913
    3. ' ' → logprob: -4.545682907104492
    4. '  ' → logprob: -7.295682907104492
    5. ',' → logprob: -8.795682907104492
    6. '[' → logprob: -8.920682907104492
    7. ' i' → logprob: -9.420682907104492
    8. '_' → logprob: -9.545682907104492
    9. 'n' → logprob: -10.295682907104492
    10. ' n' → logprob: -10.420682907104492

Token 23: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16023580729961395
    2. ' A' → logprob: -1.9102357625961304
    3. ' ' → logprob: -11.660235404968262
    4. '	A' → logprob: -13.910235404968262
    5. '_A' → logprob: -14.785235404968262
    6. '(A' → logprob: -14.910235404968262
    7. ' ' → logprob: -15.785235404968262
    8. 'a' → logprob: -15.785235404968262
    9. '<|end|>' → logprob: -15.785235404968262
    10. '  ' → logprob: -15.910235404968262

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00014370749704539776
    2. ':
' → logprob: -9.000144004821777
    3. '):' → logprob: -11.750144004821777
    4. ' :' → logprob: -12.750144004821777
    5. ':**' → logprob: -12.750144004821777
    6. '+:' → logprob: -13.250144004821777
    7. '   ' → logprob: -13.500144004821777
    8. '>:' → logprob: -14.500144004821777
    9. ',' → logprob: -14.750144004821777
    10. 'if' → logprob: -15.125144004821777

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020038645714521408
    2. ' if' → logprob: -4.270038604736328
    3. ' ans' → logprob: -5.645038604736328
    4. '```' → logprob: -7.395038604736328
    5. '    ' → logprob: -7.520038604736328
    6. ' ' → logprob: -7.645038604736328
    7. ' `' → logprob: -9.395038604736328
    8. 'if' → logprob: -9.395038604736328
    9. ' ```' → logprob: -9.395038604736328
    10. '    
' → logprob: -9.645038604736328

Token 26: ' while' (ID: 2049)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.4011867940425873
    2. ' if' → logprob: -1.4011868238449097
    3. 'if' → logprob: -3.52618670463562
    4. 'ans' → logprob: -3.65118670463562
    5. '   ' → logprob: -3.65118670463562
    6. ' a' → logprob: -6.776186943054199
    7. 'a' → logprob: -7.526186943054199
    8. '(ans' → logprob: -7.901186943054199
    9. '    ' → logprob: -8.2761869430542
    10. ' ' → logprob: -9.0261869430542

Token 27: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.4742056727409363
    2. 'a' → logprob: -0.9742056727409363
    3. ' ' → logprob: -9.84920597076416
    4. '_a' → logprob: -10.97420597076416
    5. '(a' → logprob: -11.34920597076416
    6. '<|end|>' → logprob: -11.59920597076416
    7. 'n' → logprob: -12.34920597076416
    8. 'A' → logprob: -12.34920597076416
    9. '>a' → logprob: -12.59920597076416
    10. '	a' → logprob: -12.59920597076416

Token 28: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.3179427981376648
    2. ' >' → logprob: -1.5679428577423096
    3. '%' → logprob: -3.1929428577423096
    4. '>' → logprob: -3.9429428577423096
    5. ' ' → logprob: -6.5679426193237305
    6. ' >=' → logprob: -6.5679426193237305
    7. ' &' → logprob: -7.6929426193237305
    8. ' !=' → logprob: -10.44294261932373
    9. '>=' → logprob: -10.81794261932373
    10. ' %=' → logprob: -10.81794261932373

Token 29: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019693158101290464
    2. ' ' → logprob: -6.626969337463379
    3. '3' → logprob: -7.876969337463379
    4. '5' → logprob: -8.876969337463379
    5. '10' → logprob: -9.501969337463379
    6. '6' → logprob: -10.751969337463379
    7. '7' → logprob: -11.501969337463379
    8. '4' → logprob: -11.626969337463379
    9. '   ' → logprob: -13.251969337463379
    10. '26' → logprob: -14.001969337463379

Token 30: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.537868779967539e-06
    2. '3' → logprob: -12.250008583068848
    3. ' ' → logprob: -13.625008583068848
    4. '26' → logprob: -13.875008583068848
    5. '   ' → logprob: -14.375008583068848
    6. '  ' → logprob: -16.00000762939453
    7. '

' → logprob: -16.12500762939453
    8. '10' → logprob: -16.25000762939453
    9. '２' → logprob: -16.37500762939453
    10. '{' → logprob: -16.62500762939453

Token 31: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3880661725997925
    2. ' ==' → logprob: -1.1380661725997925
    3. '=' → logprob: -7.138066291809082
    4. '0' → logprob: -8.388066291809082
    5. ' ' → logprob: -9.013066291809082
    6. ' =' → logprob: -10.263066291809082
    7. ')==' → logprob: -12.263066291809082
    8. '===' → logprob: -12.888066291809082
    9. '()==' → logprob: -13.013066291809082
    10. '```' → logprob: -13.638066291809082

Token 32: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.474077969789505
    2. ' ' → logprob: -0.9740779399871826
    3. ' ' → logprob: -14.349078178405762
    4. '  ' → logprob: -16.099077224731445
    5. '```' → logprob: -16.224077224731445
    6. '   ' → logprob: -16.849077224731445
    7. '1' → logprob: -17.724077224731445
    8. '۰' → logprob: -17.724077224731445
    9. '<|end|>' → logprob: -17.849077224731445
    10. ' 

' → logprob: -18.036577224731445

Token 33: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001584850688232109
    2. ' ' → logprob: -8.750158309936523
    3. '۰' → logprob: -19.125158309936523
    4. '  ' → logprob: -19.187658309936523
    5. '   ' → logprob: -19.250158309936523
    6. '00' → logprob: -19.375158309936523
    7. '０' → logprob: -19.875158309936523
    8. '2' → logprob: -20.125158309936523
    9. '=' → logprob: -20.375158309936523
    10. ' ' → logprob: -20.375158309936523

Token 34: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007967620622366667
    2. ':
' → logprob: -7.250796794891357
    3. '):' → logprob: -10.2507963180542
    4. '   ' → logprob: -10.5007963180542
    5. '       ' → logprob: -11.0007963180542
    6. ' :' → logprob: -13.1257963180542
    7. '):
' → logprob: -13.3757963180542
    8. ',' → logprob: -14.0007963180542
    9. ' and' → logprob: -14.1257963180542
    10. '<|end|>' → logprob: -14.7507963180542

Token 35: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00405085226520896
    2. '   ' → logprob: -6.6290507316589355
    3. ' ' → logprob: -7.2540507316589355
    4. '    ' → logprob: -7.5040507316589355
    5. '        
' → logprob: -7.7540507316589355
    6. ' a' → logprob: -8.129051208496094
    7. 'a' → logprob: -8.129051208496094
    8. ' 
' → logprob: -9.254051208496094
    9. '<|end|>' → logprob: -9.254051208496094
    10. '```' → logprob: -10.504051208496094

Token 36: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20607835054397583
    2. ' a' → logprob: -2.956078290939331
    3. 'a' (adapté à ' a') → logprob: -3.331078290939331
    4. ' ans' → logprob: -3.581078290939331
    5. 'ans' → logprob: -3.956078290939331
    6. '        ' → logprob: -4.45607852935791
    7. '        
' → logprob: -4.83107852935791
    8. '           ' → logprob: -4.95607852935791
    9. ' ' → logprob: -5.20607852935791
    10. '```' → logprob: -5.20607852935791

Token 37: ' //' (ID: 602)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4856080412864685
    2. '//=' → logprob: -1.7356081008911133
    3. ' //' → logprob: -2.2356081008911133
    4. ' =' → logprob: -2.3606081008911133
    5. ' >>=' → logprob: -5.860608100891113
    6. ' ' → logprob: -6.235608100891113
    7. '//' → logprob: -6.610608100891113
    8. ' /=' → logprob: -7.360608100891113
    9. '```' → logprob: -9.235608100891113
    10. '   ' → logprob: -9.485608100891113

Token 38: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.4617256056226324e-05
    2. '2' → logprob: -11.250014305114746
    3. '=}' → logprob: -14.250014305114746
    4. '=_' → logprob: -15.375014305114746
    5. '=.' → logprob: -15.750014305114746
    6. '==' → logprob: -16.000015258789062
    7. '=*/' → logprob: -16.875015258789062
    8. '=/' → logprob: -16.875015258789062
    9. ' =' → logprob: -17.250015258789062
    10. '='' → logprob: -17.375015258789062

Token 39: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.125030517578125
    4. '```' → logprob: -16.875030517578125
    5. '２' → logprob: -18.500030517578125
    6. '۲' → logprob: -19.375030517578125
    7. '  ' → logprob: -20.125030517578125
    8. '>' → logprob: -20.500030517578125
    9. '       ' → logprob: -20.687530517578125
    10. '२' → logprob: -21.000030517578125

Token 40: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '```' → logprob: -17.5
    4. '   ' → logprob: -17.875
    5. '２' → logprob: -19.625
    6. '۲' → logprob: -20.0
    7. '<|end|>' → logprob: -21.0
    8. '>' → logprob: -21.125
    9. '  ' → logprob: -21.5
    10. '`' → logprob: -21.875

Token 41: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003626439021900296
    2. '1' → logprob: -6.003626346588135
    3. '```' → logprob: -8.128626823425293
    4. '   ' → logprob: -8.378626823425293
    5. '        
' → logprob: -8.878626823425293
    6. '2' → logprob: -9.378626823425293
    7. 'ans' → logprob: -9.503626823425293
    8. '4' → logprob: -9.753626823425293
    9. '
' → logprob: -10.128626823425293
    10. '8' → logprob: -10.378626823425293

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003935679793357849
    2. 'ans' → logprob: -6.128935813903809
    3. '1' → logprob: -7.628935813903809
    4. '   ' → logprob: -7.753935813903809
    5. '```' → logprob: -7.753935813903809
    6. ' ans' → logprob: -8.503935813903809
    7. ' ' → logprob: -10.128935813903809
    8. '<|end|>' → logprob: -10.753935813903809
    9. '``' → logprob: -11.003935813903809
    10. '        
' → logprob: -11.128935813903809

Token 43: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.00016301481809932739
    2. ' ans' → logprob: -8.750163078308105
    3. '       ' → logprob: -13.125163078308105
    4. '   ' → logprob: -13.375163078308105
    5. '	ans' → logprob: -14.875163078308105
    6. '```' → logprob: -15.250163078308105
    7. '1' → logprob: -15.375163078308105
    8. '(ans' → logprob: -16.87516212463379
    9. '_ans' → logprob: -17.37516212463379
    10. ' ' → logprob: -17.50016212463379

Token 44: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.004123280756175518
    2. ' +=' → logprob: -5.504123210906982
    3. '+' → logprob: -10.12912368774414
    4. '=' → logprob: -13.37912368774414
    5. '+='' → logprob: -13.50412368774414
    6. ']+=' → logprob: -13.62912368774414
    7. '+="' → logprob: -14.62912368774414
    8. '+=(' → logprob: -15.25412368774414
    9. '++' → logprob: -16.25412368774414
    10. '   ' → logprob: -17.12912368774414

Token 45: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.87510871887207
    4. '１' → logprob: -20.25010871887207
    5. '```' → logprob: -20.37510871887207
    6. '       ' → logprob: -20.50010871887207
    7. '  ' → logprob: -20.68760871887207
    8. '<|end|>' → logprob: -21.50010871887207
    9. '2' → logprob: -21.56260871887207
    10. '۱' → logprob: -22.12510871887207

Token 46: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -19.125001907348633
    4. '１' → logprob: -20.625001907348633
    5. '```' → logprob: -20.750001907348633
    6. '2' → logprob: -21.500001907348633
    7. '  ' → logprob: -21.562501907348633
    8. '१' → logprob: -21.937501907348633
    9. '       ' → logprob: -22.062501907348633
    10. '<|end|>' → logprob: -22.062501907348633

Token 47: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00023047674039844424
    2. '
' → logprob: -8.87523078918457
    3. '\n' → logprob: -9.87523078918457
    4. ' print' → logprob: -10.50023078918457
    5. '```' → logprob: -12.25023078918457
    6. '<|end|>' → logprob: -12.50023078918457
    7. '\' → logprob: -14.00023078918457
    8. '#print' → logprob: -14.50023078918457
    9. '(print' → logprob: -14.50023078918457
    10. '#' → logprob: -15.25023078918457

Token 48: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.703443770878948e-06
    2. '\n' → logprob: -12.875007629394531
    3. ' print' → logprob: -13.000007629394531
    4. '<|end|>' → logprob: -13.875007629394531
    5. '```' → logprob: -14.125007629394531
    6. '
' → logprob: -14.750007629394531
    7. '\' → logprob: -15.375007629394531
    8. '#print' → logprob: -15.500007629394531
    9. '#' → logprob: -15.875007629394531
    10. '(print' → logprob: -17.12500762939453

Token 49: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25238341093063354
    2. '(ans' → logprob: -1.5023834705352783
    3. '()' → logprob: -7.752383232116699
    4. '('' → logprob: -11.0023832321167
    5. 'ans' → logprob: -13.2523832321167
    6. '("("' → logprob: -13.7523832321167
    7. '(answer' → logprob: -14.2523832321167
    8. '("' → logprob: -14.3773832321167
    9. '(len' → logprob: -14.3773832321167
    10. '(`' → logprob: -14.5023832321167

Token 50: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. '))' → logprob: -14.500000953674316
    3. ')`' → logprob: -16.875
    4. '')' → logprob: -17.625
    5. ')
' → logprob: -17.75
    6. ' )' → logprob: -17.875
    7. '`)' → logprob: -18.625
    8. ')}' → logprob: -19.25
    9. '）' → logprob: -19.375
    10. '()' → logprob: -19.5


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 48
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 18
Tokens correctement prédits (top 10): 40
Précision stricte (1ère position): 35.42%
Précision adaptée (1ère position): 37.50%
Précision (top 10): 83.33%
================================================================================
