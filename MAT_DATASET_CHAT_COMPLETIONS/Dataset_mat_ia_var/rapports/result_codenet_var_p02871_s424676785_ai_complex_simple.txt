================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:39:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
from collections import defaultdict
from functools import reduce
from itertools import chain, repeat

def extravagant_max_finder(cost, order):
    # Convoluted decision using reduce and lambda with tuple manipulation
    return reduce(lambda acc, key: (key, cost[key]) if cost[key] > acc[1] else acc, order, (0, 0))

def solve():
    # Redundant infinite value generator
    inf = int(1e10) + int(1e-10)
    input = sys.stdin.readline

    V, E = map(int, input().split())
    # Use defaultdicts for unnecessary flexibility
    edge = defaultdict(lambda: defaultdict(lambda: inf))
    wf = defaultdict(lambda: defaultdict(lambda: inf))
    next_id = defaultdict(dict)

    for i, j in ((i, j) for i in range(V) for j in range(V)):
        edge[i][j] = wf[i][j] = 0 if i == j else inf
        next_id[i][j] = j

    for _ in range(E):
        u, v, d = map(int, input().split())
        for a, b in ((u-1, v-1), (v-1, u-1)):
            edge[a][b] = wf[a][b] = d

    # Floyd-Warshall using unnecessary comprehension and chain
    for k, i, j in ((k, i, j) for k in range(V) for i in range(V) for j in range(V)):
        wf_ik, wf_kj = wf[i][k], wf[k][j]
        if wf[i][j] > wf_ik + wf_kj:
            wf[i][j] = wf_ik + wf_kj
            next_id[i][j] = next_id[i][k]

    T = int(input())
    order, stuck_order = set(), set()
    command = [None] * T
    heading, dist_left, final_dist = 0, 0, 0
    stuck_cost = [0]*V
    cost = [0]*V
    driver_hold = store_hold = 0

    # For extreme obscurity, define inline identity function with unusual name
    def ω(x): return x

    for t in range(T):
        N = int(input())
        if N == 1:
            new_id, dst = map(int, input().split())
            stuck_order |= frozenset([dst-1])
            stuck_cost[dst-1] += 1
            store_hold += 1

        # Obfuscating logic with one-liners and generator abuse
        if dist_left > 0:
            command[t], dist_left = ω(heading + 1), dist_left - 1

        else:
            if heading == 0:
                if not (store_hold or driver_hold):
                    command[t] = -1
                    continue
                else:
                    order |= stuck_order
                    _ = list(map(lambda k: cost.__setitem__(k, cost[k] + stuck_cost[k]), order))
                    _ = list(map(lambda k: stuck_cost.__setitem__(k, 0), order))
                    driver_hold = sum(cost)
                    stuck_order = set()
                    store_hold = 0
            # Nested obscure lambda in in-place logic
            if heading in order and heading > 0:
                order -= {heading}
                driver_hold -= cost[heading]
                cost[heading] = 0

            current_id = heading

            # Unusual structure for clarity hindrance
            if len(order) > 0:
                if current_id == final_dist:
                    final_dist, max_hold = extravagant_max_finder(cost, order)
                    # Overcomplicated min function for condition
                    if driver_hold < store_hold and current_id > 0 and \
                       min([max_hold == 1, True, all(True for _ in range(1))]):
                        final_dist = 0
            else:
                final_dist = 0

            heading = next_id[current_id][final_dist]
            # Wrap subtraction in a silly map to obfuscate intent
            dist_left = list(map(lambda a, b: a-b, [edge[current_id][heading]], [1]))[0]
            command[t] = heading + 1

    # Print in unnecessarily involved way
    list(map(lambda x: sys.stdout.write(f"{x}\n"), command))

    return 0

if __name__ == "__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.5435490608215332
    2. '.' → logprob: -1.0435490608215332
    3. '<|end|>' → logprob: -3.918549060821533
    4. '\' → logprob: -4.043549060821533
    5. 'import' → logprob: -4.418549060821533
    6. 'newline' → logprob: -5.293549060821533
    7. '' → logprob: -6.043549060821533
    8. '\r' → logprob: -6.168549060821533
    9. '
' → logprob: -6.293549060821533
    10. '<|end|>' → logprob: -6.418549060821533

Token 4: ' collections' (ID: 22690)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.012081976048648357
    2. 'os' → logprob: -4.762082099914551
    3. ' collections' → logprob: -6.887082099914551
    4. ' ' → logprob: -7.512082099914551
    5. ' math' → logprob: -7.887082099914551
    6. ' Py' → logprob: -7.887082099914551
    7. ' pathlib' → logprob: -8.01208209991455
    8. ' typing' → logprob: -8.63708209991455
    9. 'collections' → logprob: -9.38708209991455
    10. ' datetime' → logprob: -9.38708209991455

Token 5: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.537659227848053
    2. 'import' → logprob: -0.912659227848053
    3. '.' → logprob: -4.287659168243408
    4. ' ' → logprob: -8.287659645080566
    5. '<|end|>' → logprob: -9.037659645080566
    6. '.import' → logprob: -9.287659645080566
    7. '```' → logprob: -9.412659645080566
    8. '_import' → logprob: -10.537659645080566
    9. '	import' → logprob: -10.662659645080566
    10. '_' → logprob: -11.412659645080566

Token 6: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.2618234157562256
    2. ' deque' → logprob: -1.7618234157562256
    3. ' abc' → logprob: -3.0118234157562256
    4. 'deque' → logprob: -4.886823654174805
    5. 'abc' → logprob: -7.136823654174805
    6. ' named' → logprob: -7.761823654174805
    7. ' Counter' → logprob: -7.886823654174805
    8. ' import' → logprob: -9.261823654174805
    9. 'default' → logprob: -10.511823654174805
    10. ' ' → logprob: -10.511823654174805

Token 7: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.5965788960456848
    2. '
' → logprob: -1.97157883644104
    3. 'import' → logprob: -1.97157883644104
    4. '\n' → logprob: -2.34657883644104
    5. '```' → logprob: -3.09657883644104
    6. ' 

' → logprob: -5.096579074859619
    7. '<|end|>' → logprob: -5.346579074859619
    8. '' → logprob: -5.346579074859619
    9. '\' → logprob: -5.971579074859619
    10. ',' → logprob: -6.221579074859619

Token 8: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.554141640663147
    2. '

' → logprob: -2.0541415214538574
    3. '```' → logprob: -2.0541415214538574
    4. '
' → logprob: -3.0541415214538574
    5. '\n' → logprob: -3.5541415214538574
    6. ',' → logprob: -3.5541415214538574
    7. 'def' → logprob: -4.304141521453857
    8. ' 

' → logprob: -4.429141521453857
    9. '' → logprob: -4.679141521453857
    10. '\' → logprob: -4.804141521453857

Token 9: ' functools' (ID: 142636)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.511254608631134
    2. ' itertools' → logprob: -1.5112545490264893
    3. ' os' → logprob: -2.8862545490264893
    4. ' math' → logprob: -3.3862545490264893
    5. ' functools' → logprob: -4.136254787445068
    6. ' threading' → logprob: -4.386254787445068
    7. ' queue' → logprob: -4.761254787445068
    8. ' pathlib' → logprob: -4.761254787445068
    9. ' io' → logprob: -4.886254787445068
    10. ' ' → logprob: -5.136254787445068

Token 10: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.11440787464380264
    2. 'import' → logprob: -2.239407777786255
    3. '	import' → logprob: -7.739408016204834
    4. '.' → logprob: -7.864408016204834
    5. ' ' → logprob: -8.239407539367676
    6. '_import' → logprob: -8.614407539367676
    7. ' .' → logprob: -8.989407539367676
    8. '<|end|>' → logprob: -9.239407539367676
    9. '.import' → logprob: -10.489407539367676
    10. '_' → logprob: -11.239407539367676

Token 11: ' reduce' (ID: 10389)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.11384452879428864
    2. ' l' → logprob: -2.488844633102417
    3. 'wrap' → logprob: -4.238844394683838
    4. 'partial' → logprob: -5.363844394683838
    5. ' wraps' → logprob: -5.488844394683838
    6. 'reduce' → logprob: -6.863844394683838
    7. ' partial' → logprob: -9.113844871520996
    8. 'cached' → logprob: -9.113844871520996
    9. 'cache' → logprob: -10.238844871520996
    10. 'cmp' → logprob: -10.988844871520996

Token 12: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.8542820811271667
    2. '

' → logprob: -0.9792820811271667
    3. '
' → logprob: -1.9792821407318115
    4. ' 

' → logprob: -3.8542821407318115
    5. '\n' → logprob: -4.354281902313232
    6. ',' → logprob: -5.229281902313232
    7. '```' → logprob: -5.354281902313232
    8. '<|end|>' → logprob: -5.479281902313232
    9. 'def' → logprob: -5.979281902313232
    10. '\' → logprob: -6.229281902313232

Token 13: 'from' (ID: 2845)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.09301120787858963
    2. '```' → logprob: -3.0930111408233643
    3. 'def' → logprob: -3.8430111408233643
    4. '\n' → logprob: -4.843011379241943
    5. '

' → logprob: -5.718011379241943
    6. '
' → logprob: -5.843011379241943
    7. ',' → logprob: -5.968011379241943
    8. '\' → logprob: -6.593011379241943
    9. ' 

' → logprob: -7.343011379241943
    10. '`' → logprob: -7.468011379241943

Token 14: ' itertools' (ID: 103178)
  Prédit: ' operator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.17390359938144684
    2. ' itertools' → logprob: -1.9239035844802856
    3. ' math' → logprob: -4.673903465270996
    4. 'operator' → logprob: -5.798903465270996
    5. ' ' → logprob: -7.548903465270996
    6. ' typing' → logprob: -7.673903465270996
    7. ' os' → logprob: -9.423903465270996
    8. ' io' → logprob: -10.673903465270996
    9. 'math' → logprob: -10.673903465270996
    10. ' heap' → logprob: -11.173903465270996

Token 15: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7094143629074097
    2. 'import' → logprob: -0.9594143629074097
    3. '.' → logprob: -2.209414482116699
    4. ' .' → logprob: -4.459414482116699
    5. '.import' → logprob: -6.084414482116699
    6. '<|end|>' → logprob: -8.0844144821167
    7. '.groupby' → logprob: -8.2094144821167
    8. '	import' → logprob: -8.9594144821167
    9. '_import' → logprob: -9.0844144821167
    10. '.im' → logprob: -9.5844144821167

Token 16: ' chain' (ID: 13464)
  Prédit: ' group'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' group' → logprob: -0.105295330286026
    2. 'group' → logprob: -2.980295419692993
    3. ' chain' → logprob: -3.480295419692993
    4. ' cycle' → logprob: -4.980295181274414
    5. ' permutations' → logprob: -5.980295181274414
    6. ' product' → logprob: -6.230295181274414
    7. 'com' → logprob: -6.605295181274414
    8. 'chain' → logprob: -6.980295181274414
    9. ' count' → logprob: -7.230295181274414
    10. 'count' → logprob: -7.355295181274414

Token 17: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.0526689291000366
    2. ',' → logprob: -1.1776689291000366
    3. '

' → logprob: -1.4276689291000366
    4. '
' → logprob: -3.302669048309326
    5. ',

' → logprob: -3.677669048309326
    6. '```' → logprob: -4.802669048309326
    7. ',
' → logprob: -4.927669048309326
    8. ' 

' → logprob: -4.927669048309326
    9. 'def' → logprob: -5.427669048309326
    10. '\n' → logprob: -5.677669048309326

Token 18: ' repeat' (ID: 22962)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.028619104996323586
    2. 'product' → logprob: -4.653619289398193
    3. 'cycle' → logprob: -5.028619289398193
    4. 'is' → logprob: -6.028619289398193
    5. 'group' → logprob: -6.278619289398193
    6. ' product' → logprob: -6.403619289398193
    7. ' combinations' → logprob: -6.653619289398193
    8. ' is' → logprob: -6.903619289398193
    9. 'count' → logprob: -7.028619289398193
    10. 'compress' → logprob: -7.403619289398193

Token 19: '

' (ID: 279)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.9649510979652405
    2. ',' → logprob: -1.4649510383605957
    3. '

' → logprob: -1.9649510383605957
    4. '
' → logprob: -1.9649510383605957
    5. 'import' → logprob: -3.3399510383605957
    6. '```' → logprob: -4.214951038360596
    7. '<|end|>' → logprob: -4.214951038360596
    8. '\' → logprob: -4.464951038360596
    9. 'def' → logprob: -5.214951038360596
    10. '.' → logprob: -5.714951038360596

Token 20: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4797152876853943
    2. '\' → logprob: -2.354715347290039
    3. '```' → logprob: -2.479715347290039
    4. '\n' → logprob: -3.104715347290039
    5. '
' → logprob: -3.229715347290039
    6. 'd' → logprob: -3.729715347290039
    7. 'import' → logprob: -3.729715347290039
    8. '`' → logprob: -4.104715347290039
    9. 'class' → logprob: -4.354715347290039
    10. '

' → logprob: -4.479715347290039

Token 21: ' extravagant' (ID: 145785)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03452088311314583
    2. '_' → logprob: -4.784521102905273
    3. ' process' → logprob: -5.659521102905273
    4. ' factorial' → logprob: -5.784521102905273
    5. ' calculate' → logprob: -5.909521102905273
    6. ' _' → logprob: -6.159521102905273
    7. ' map' → logprob: -6.284521102905273
    8. ' wrap' → logprob: -6.909521102905273
    9. ' main' → logprob: -6.909521102905273
    10. ' my' → logprob: -7.284521102905273

Token 22: '_max' (ID: 13731)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13159167766571045
    2. '(' → logprob: -2.131591796875
    3. '_ex' → logprob: -7.256591796875
    4. '_space' → logprob: -7.256591796875
    5. '_cost' → logprob: -7.756591796875
    6. ' (' → logprob: -8.006591796875
    7. '_exp' → logprob: -8.506591796875
    8. '_trip' → logprob: -8.631591796875
    9. '_function' → logprob: -8.756591796875
    10. '_l' → logprob: -9.006591796875

Token 23: '_f' (ID: 1337)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005549508612602949
    2. 'imum' → logprob: -6.255549430847168
    3. '(a' → logprob: -6.505549430847168
    4. '(x' → logprob: -8.005549430847168
    5. '(iter' → logprob: -8.880549430847168
    6. '(*' → logprob: -8.880549430847168
    7. '(s' → logprob: -8.880549430847168
    8. '(chain' → logprob: -9.130549430847168
    9. '(value' → logprob: -9.380549430847168
    10. '(tokens' → logprob: -9.630549430847168

Token 24: 'inder' (ID: 5508)
  Prédit: 'unction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unction' → logprob: -0.25664183497428894
    2. 'unc' → logprob: -2.3816418647766113
    3. 'inder' → logprob: -2.7566418647766113
    4. 'ind' → logprob: -3.5066418647766113
    5. 'un' → logprob: -4.506641864776611
    6. 'or' → logprob: -4.631641864776611
    7. 'actor' → logprob: -5.131641864776611
    8. 'ilter' → logprob: -5.381641864776611
    9. 'irst' → logprob: -6.131641864776611
    10. 'def' → logprob: -6.381641864776611

Token 25: '(cost' (ID: 133554)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003688245196826756
    2. '_' → logprob: -8.37536907196045
    3. ' (' → logprob: -9.62536907196045
    4. '('' → logprob: -10.87536907196045
    5. '("("' → logprob: -12.00036907196045
    6. '(user' → logprob: -12.12536907196045
    7. '():' → logprob: -12.25036907196045
    8. '(
' → logprob: -12.50036907196045
    9. '<|end|>' → logprob: -12.87536907196045
    10. '()' → logprob: -13.12536907196045

Token 26: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.030425673350691795
    2. ')' → logprob: -4.405425548553467
    3. '):' → logprob: -4.405425548553467
    4. ',' → logprob: -5.530425548553467
    5. '_' → logprob: -8.030426025390625
    6. '_list' → logprob: -8.530426025390625
    7. '_per' → logprob: -8.905426025390625
    8. '_func' → logprob: -9.030426025390625
    9. ')_' → logprob: -9.030426025390625
    10. '_s' → logprob: -9.280426025390625

Token 27: ' order' (ID: 2569)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -1.8730804920196533
    2. ' values' → logprob: -3.2480804920196533
    3. ' key' → logprob: -3.3105804920196533
    4. ' budget' → logprob: -3.4355804920196533
    5. ' sequence' → logprob: -3.4980804920196533
    6. 'values' → logprob: -3.6855804920196533
    7. ' max' → logprob: -3.6855804920196533
    8. 'items' → logprob: -3.7480804920196533
    9. ' n' → logprob: -3.8105804920196533
    10. ' length' → logprob: -3.8105804920196533

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.29651349782943726
    2. 's' → logprob: -1.421513557434082
    3. ')' → logprob: -4.421513557434082
    4. '_items' → logprob: -6.921513557434082
    5. '_list' → logprob: -7.921513557434082
    6. '=' → logprob: -8.296513557434082
    7. '_ids' → logprob: -8.421513557434082
    8. '_' → logprob: -8.421513557434082
    9. ' ):' → logprob: -8.796513557434082
    10. ',' → logprob: -9.046513557434082

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28657346963882446
    2. ':' → logprob: -1.7865734100341797
    3. '    ' → logprob: -2.6615734100341797
    4. ' :' → logprob: -6.03657341003418
    5. '(' → logprob: -6.28657341003418
    6. ' ' → logprob: -6.53657341003418
    7. '    
' → logprob: -7.03657341003418
    8. '\' → logprob: -7.03657341003418
    9. '     
' → logprob: -7.53657341003418
    10. '):' → logprob: -7.66157341003418

Token 30: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4068024158477783
    2. '    ' → logprob: -1.4068024158477783
    3. '     
' → logprob: -4.031802177429199
    4. '   ' → logprob: -4.156802177429199
    5. ' 
' → logprob: -4.156802177429199
    6. '\' → logprob: -4.406802177429199
    7. ':' → logprob: -5.156802177429199
    8. ' return' → logprob: -6.281802177429199
    9. ''' → logprob: -6.406802177429199
    10. '    
' → logprob: -6.531802177429199

Token 31: ' Con' (ID: 1532)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1876736879348755
    2. ' max' → logprob: -1.3126736879348755
    3. '    ' → logprob: -1.6876736879348755
    4. ' defaultdict' → logprob: -2.687673568725586
    5. 'max' → logprob: -3.062673568725586
    6. '   ' → logprob: -3.812673568725586
    7. ' if' → logprob: -4.312673568725586
    8. ' def' → logprob: -4.812673568725586
    9. 'def' → logprob: -4.812673568725586
    10. ' pass' → logprob: -5.187673568725586

Token 32: 'vol' (ID: 2978)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.6758109331130981
    2. 't' → logprob: -1.4258109331130981
    3. 's' → logprob: -2.1758108139038086
    4. 'vert' → logprob: -3.3008108139038086
    5. 'd' → logprob: -3.6758108139038086
    6. 'text' → logprob: -4.050810813903809
    7. '   ' → logprob: -4.675810813903809
    8. 'verted' → logprob: -4.800810813903809
    9. 'def' → logprob: -5.175810813903809
    10. 'tent' → logprob: -5.175810813903809

Token 33: 'uted' (ID: 26369)
  Prédit: 'ution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ution' → logprob: -0.24621035158634186
    2. 've' → logprob: -1.6212103366851807
    3. 'utions' → logprob: -4.87121057510376
    4. 'ving' → logprob: -5.24621057510376
    5. 'ut' → logprob: -5.74621057510376
    6. 'ute' → logprob: -6.12121057510376
    7. 'ved' → logprob: -7.12121057510376
    8. 'utive' → logprob: -7.49621057510376
    9. 'uting' → logprob: -8.246210098266602
    10. 'uted' → logprob: -8.621210098266602

Token 34: ' decision' (ID: 8660)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6368435621261597
    2. '_' → logprob: -1.5118435621261597
    3. ' ' → logprob: -2.511843681335449
    4. ' :' → logprob: -3.511843681335449
    5. ' _' → logprob: -3.886843681335449
    6. '_max' → logprob: -3.886843681335449
    7. '   ' → logprob: -4.136843681335449
    8. 'def' → logprob: -4.886843681335449
    9. '_result' → logprob: -5.011843681335449
    10. ':' → logprob: -5.386843681335449

Token 35: ' using' (ID: 2360)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3362022042274475
    2. ' ' → logprob: -1.7112021446228027
    3. '   ' → logprob: -3.5862021446228027
    4. ' =' → logprob: -3.8362021446228027
    5. ' _' → logprob: -4.461202144622803
    6. ':' → logprob: -4.711202144622803
    7. '-making' → logprob: -4.961202144622803
    8. '    ' → logprob: -5.086202144622803
    9. '  ' → logprob: -5.586202144622803
    10. ' :' → logprob: -6.211202144622803

Token 36: ' reduce' (ID: 10389)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -1.1672725677490234
    2. ' map' → logprob: -1.9172725677490234
    3. ' lambda' → logprob: -2.5422725677490234
    4. ' all' → logprob: -2.6672725677490234
    5. ' list' → logprob: -2.6672725677490234
    6. ' reduce' → logprob: -2.6672725677490234
    7. ' chain' → logprob: -3.2922725677490234
    8. ' a' → logprob: -3.2922725677490234
    9. ' functools' → logprob: -3.4172725677490234
    10. ' sum' → logprob: -3.7922725677490234

Token 37: ' and' (ID: 326)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3877655565738678
    2. '   ' → logprob: -1.5127655267715454
    3. '    ' → logprob: -3.262765645980835
    4. '(
' → logprob: -4.137765407562256
    5. ' (' → logprob: -4.262765407562256
    6. ',' → logprob: -4.262765407562256
    7. ' (
' → logprob: -5.387765407562256
    8. ' ' → logprob: -5.387765407562256
    9. '_' → logprob: -5.762765407562256
    10. '(lambda' → logprob: -6.637765407562256

Token 38: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.15957120060920715
    2. 'lambda' → logprob: -3.1595711708068848
    3. ' chain' → logprob: -3.1595711708068848
    4. ' filter' → logprob: -3.5345711708068848
    5. ' map' → logprob: -4.159571170806885
    6. ' max' → logprob: -5.284571170806885
    7. 'filter' → logprob: -5.409571170806885
    8. 'map' → logprob: -6.409571170806885
    9. ' defaultdict' → logprob: -6.409571170806885
    10. 'chain' → logprob: -6.534571170806885

Token 39: ' with' (ID: 483)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.93723064661026
    2. '   ' → logprob: -0.93723064661026
    3. ' :' → logprob: -1.9372305870056152
    4. '    ' → logprob: -3.6872305870056152
    5. '(' → logprob: -4.187230587005615
    6. '(lambda' → logprob: -4.812230587005615
    7. '(
' → logprob: -5.562230587005615
    8. '```' → logprob: -6.062230587005615
    9. ' return' → logprob: -6.187230587005615
    10. ',' → logprob: -6.312230587005615

Token 40: ' tuple' (ID: 31311)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -1.633739948272705
    2. ' filter' → logprob: -1.633739948272705
    3. ' chain' → logprob: -2.008739948272705
    4. ' a' → logprob: -2.133739948272705
    5. ' nested' → logprob: -2.758739948272705
    6. ' list' → logprob: -3.133739948272705
    7. ' None' → logprob: -3.258739948272705
    8. ' lambda' → logprob: -4.008739948272705
    9. 'map' → logprob: -4.008739948272705
    10. 'filter' → logprob: -4.133739948272705

Token 41: ' manipulation' (ID: 61519)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.21703577041625977
    2. ' =' → logprob: -2.0920357704162598
    3. '(s' → logprob: -3.8420357704162598
    4. ' s' → logprob: -4.34203577041626
    5. ' ' → logprob: -4.46703577041626
    6. ':' → logprob: -4.84203577041626
    7. ',' → logprob: -5.59203577041626
    8. ' (' → logprob: -5.84203577041626
    9. ' ,' → logprob: -5.96703577041626
    10. '   ' → logprob: -6.34203577041626

Token 42: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5210282802581787
    2. ':' → logprob: -1.0210282802581787
    3. ' :' → logprob: -3.6460282802581787
    4. '    ' → logprob: -5.146028518676758
    5. ',' → logprob: -5.396028518676758
    6. '(' → logprob: -6.146028518676758
    7. ' return' → logprob: -6.896028518676758
    8. '```' → logprob: -7.146028518676758
    9. '    
' → logprob: -7.271028518676758
    10. '(
' → logprob: -7.771028518676758

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04684494808316231
    2. ':' → logprob: -3.546844959259033
    3. ',' → logprob: -5.171844959259033
    4. ' :' → logprob: -6.421844959259033
    5. ' return' → logprob: -6.796844959259033
    6. '):' → logprob: -6.921844959259033
    7. '
' → logprob: -7.171844959259033
    8. 'return' → logprob: -7.296844959259033
    9. ' =' → logprob: -7.546844959259033
    10. '(' → logprob: -7.546844959259033

Token 44: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30016931891441345
    2. 'return' (adapté à ' return') → logprob: -2.1751692295074463
    3. '   ' → logprob: -3.0501692295074463
    4. '    ' → logprob: -3.4251692295074463
    5. ' result' → logprob: -3.4251692295074463
    6. 'result' → logprob: -4.175169467926025
    7. ' ' → logprob: -5.050169467926025
    8. ' 
' → logprob: -5.675169467926025
    9. ' max' → logprob: -6.675169467926025
    10. '     
' → logprob: -6.925169467926025

Token 45: ' reduce' (ID: 10389)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6469004154205322
    2. ' reduce' → logprob: -1.7719004154205322
    3. 'max' → logprob: -1.7719004154205322
    4. 'reduce' → logprob: -2.0219004154205322
    5. '(max' → logprob: -6.396900177001953
    6. 're' → logprob: -7.396900177001953
    7. '(re' → logprob: -7.771900177001953
    8. '   ' → logprob: -7.771900177001953
    9. ' ' → logprob: -8.771900177001953
    10. ' (' → logprob: -9.396900177001953

Token 46: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.004631265066564083
    2. '(' → logprob: -5.379631042480469
    3. '(
' → logprob: -11.879631042480469
    4. ' (' → logprob: -13.504631042480469
    5. ' lambda' → logprob: -13.629631042480469
    6. 'lambda' → logprob: -14.004631042480469
    7. '=lambda' → logprob: -15.379631042480469
    8. '((' → logprob: -15.754631042480469
    9. '   ' → logprob: -16.00463104248047
    10. '```' → logprob: -16.12963104248047

Token 47: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6937164068222046
    2. ' a' → logprob: -1.6937164068222046
    3. ' lambda' → logprob: -1.6937164068222046
    4. ' x' → logprob: -2.318716526031494
    5. ' (' → logprob: -5.193716526031494
    6. 'acc' → logprob: -5.318716526031494
    7. '(lambda' → logprob: -5.568716526031494
    8. 'lambda' → logprob: -5.693716526031494
    9. 'a' → logprob: -6.068716526031494
    10. ' accumulator' → logprob: -6.193716526031494

Token 48: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016432604752480984
    2. ' ,' → logprob: -9.500164031982422
    3. ':' → logprob: -10.000164031982422
    4. ',
' → logprob: -10.875164031982422
    5. ',x' → logprob: -12.625164031982422
    6. ',:' → logprob: -13.375164031982422
    7. ',value' → logprob: -13.375164031982422
    8. 's' → logprob: -13.500164031982422
    9. ',

' → logprob: -13.500164031982422
    10. ',(' → logprob: -13.625164031982422

Token 49: ' key' (ID: 2140)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.27440327405929565
    2. 'x' → logprob: -2.3994033336639404
    3. ' item' → logprob: -3.2744033336639404
    4. ' c' → logprob: -4.024403095245361
    5. ' pair' → logprob: -4.024403095245361
    6. ' co' → logprob: -4.274403095245361
    7. ' curr' → logprob: -4.399403095245361
    8. ' o' → logprob: -4.774403095245361
    9. 'item' → logprob: -5.149403095245361
    10. ' cur' → logprob: -5.774403095245361

Token 50: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018219047924503684
    2. ',' → logprob: -7.001821994781494
    3. ' :' → logprob: -7.376821994781494
    4. ',:' → logprob: -8.626821517944336
    5. ':
' → logprob: -10.376821517944336
    6. '_:' → logprob: -10.626821517944336
    7. 's' → logprob: -11.001821517944336
    8. ':(' → logprob: -12.501821517944336
    9. ':`' → logprob: -12.501821517944336
    10. '__:' → logprob: -12.751821517944336

Token 51: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.23438787460327148
    2. '(max' → logprob: -2.7343878746032715
    3. '(' → logprob: -3.1093878746032715
    4. ' max' → logprob: -3.2343878746032715
    5. '(acc' → logprob: -3.8593878746032715
    6. 'max' → logprob: -4.3593878746032715
    7. '(key' → logprob: -4.7343878746032715
    8. '(cost' → logprob: -4.8593878746032715
    9. ' (
' → logprob: -6.3593878746032715
    10. '(lambda' → logprob: -6.4843878746032715

Token 52: 'key' (ID: 1898)
  Prédit: 'key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'key' → logprob: -0.4617806375026703
    2. 'max' → logprob: -2.086780548095703
    3. 'cost' → logprob: -2.086780548095703
    4. 'acc' → logprob: -2.586780548095703
    5. ' key' → logprob: -3.961780548095703
    6. '(key' → logprob: -4.711780548095703
    7. '(cost' → logprob: -5.586780548095703
    8. 'order' → logprob: -5.711780548095703
    9. '(acc' → logprob: -6.211780548095703
    10. '(max' → logprob: -6.336780548095703

Token 53: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.18210238218307495
    2. ',' → logprob: -1.9321024417877197
    3. 'if' → logprob: -3.9321024417877197
    4. ')' → logprob: -6.807102203369141
    5. '   ' → logprob: -7.682102203369141
    6. ' ,' → logprob: -8.93210220336914
    7. '[' → logprob: -8.93210220336914
    8. ' ' → logprob: -9.18210220336914
    9. '```' → logprob: -10.68210220336914
    10. 'and' → logprob: -10.80710220336914

Token 54: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.3978424668312073
    2. ' max' → logprob: -1.8978424072265625
    3. 'cost' → logprob: -2.0228424072265625
    4. 'max' → logprob: -3.2728424072265625
    5. ' order' → logprob: -5.6478424072265625
    6. 'acc' → logprob: -7.0228424072265625
    7. ' key' → logprob: -7.1478424072265625
    8. ' acc' → logprob: -7.3978424072265625
    9. 'order' → logprob: -7.3978424072265625
    10. '(cost' → logprob: -7.5228424072265625

Token 55: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0003657362540252507
    2. '.get' → logprob: -8.1253662109375
    3. ' if' → logprob: -10.8753662109375
    4. ')' → logprob: -11.1253662109375
    5. '(key' → logprob: -11.3753662109375
    6. '[' → logprob: -11.6253662109375
    7. 'key' → logprob: -13.3753662109375
    8. '[get' → logprob: -13.5003662109375
    9. ',key' → logprob: -13.6253662109375
    10. '   ' → logprob: -13.8753662109375

Token 56: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004126961342990398
    2. ' if' → logprob: -6.129127025604248
    3. ' )' → logprob: -6.379127025604248
    4. '))' → logprob: -9.50412654876709
    5. ',' → logprob: -10.37912654876709
    6. '>' → logprob: -10.62912654876709
    7. ' +' → logprob: -11.00412654876709
    8. '   ' → logprob: -11.00412654876709
    9. 'if' → logprob: -11.12912654876709
    10. '+' → logprob: -11.12912654876709

Token 57: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.003807907458394766
    2. 'if' → logprob: -5.62880802154541
    3. ',' → logprob: -8.62880802154541
    4. ' ,' → logprob: -11.87880802154541
    5. '   ' → logprob: -12.00380802154541
    6. ' ' → logprob: -12.12880802154541
    7. ')' → logprob: -12.25380802154541
    8. '    ' → logprob: -14.00380802154541
    9. '  ' → logprob: -14.25380802154541
    10. '	if' → logprob: -14.37880802154541

Token 58: ' cost' (ID: 3097)
  Prédit: ' cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.2526036202907562
    2. 'cost' → logprob: -1.5026036500930786
    3. ' key' → logprob: -8.877603530883789
    4. '(cost' → logprob: -8.877603530883789
    5. 'acc' → logprob: -9.252603530883789
    6. ' acc' → logprob: -9.377603530883789
    7. ' (' → logprob: -9.752603530883789
    8. ' ' → logprob: -10.127603530883789
    9. '   ' → logprob: -10.252603530883789
    10. 'key' → logprob: -10.502603530883789

Token 59: '[key' (ID: 16401)
  Prédit: '[key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[key' → logprob: -0.0004789320519194007
    2. '.get' → logprob: -7.750478744506836
    3. '[' → logprob: -10.375478744506836
    4. 'get' → logprob: -12.375478744506836
    5. 'key' → logprob: -12.375478744506836
    6. 'cost' → logprob: -13.250478744506836
    7. '[
' → logprob: -13.375478744506836
    8. '```' → logprob: -13.500478744506836
    9. '.setdefault' → logprob: -14.750478744506836
    10. ' [' → logprob: -14.937978744506836

Token 60: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.03516063466668129
    2. '>' → logprob: -3.410160541534424
    3. ' ' → logprob: -6.785160541534424
    4. ' >=' → logprob: -8.160161018371582
    5. '[' → logprob: -10.535161018371582
    6. ')' → logprob: -10.910161018371582
    7. ' >
' → logprob: -12.035161018371582
    8. '>=' → logprob: -12.160161018371582
    9. ' <' → logprob: -12.410161018371582
    10. ' >

' → logprob: -12.472661018371582

Token 61: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.3874051570892334
    2. '>' → logprob: -1.1374051570892334
    3. ' ' → logprob: -8.262405395507812
    4. '[' → logprob: -8.637405395507812
    5. '  ' → logprob: -11.387405395507812
    6. ' >=' → logprob: -11.512405395507812
    7. '   ' → logprob: -11.637405395507812
    8. ' >
' → logprob: -11.762405395507812
    9. 'and' → logprob: -12.137405395507812
    10. ')' → logprob: -12.387405395507812

Token 62: ' acc' (ID: 1259)
  Prédit: ' acc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acc' → logprob: -0.6931675672531128
    2. 'acc' → logprob: -0.6931675672531128
    3. '	acc' → logprob: -11.693167686462402
    4. '(acc' → logprob: -12.318167686462402
    5. '   ' → logprob: -12.943167686462402
    6. '_acc' → logprob: -12.943167686462402
    7. ' ' → logprob: -14.068167686462402
    8. ' ' → logprob: -14.568167686462402
    9. 'cost' → logprob: -15.068167686462402
    10. 'ac' → logprob: -15.568167686462402

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0005088301841169596
    2. ' [' → logprob: -7.625508785247803
    3. '1' → logprob: -11.375509262084961
    4. ' ' → logprob: -12.250509262084961
    5. '[
' → logprob: -13.250509262084961
    6. '```' → logprob: -14.000509262084961
    7. '][' → logprob: -14.750509262084961
    8. '
' → logprob: -15.688009262084961
    9. '\[' → logprob: -15.875509262084961
    10. ' `[' → logprob: -16.00050926208496

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.3226136767771095e-05
    2. '[' → logprob: -10.500042915344238
    3. ' ' → logprob: -12.625042915344238
    4. '' → logprob: -12.750042915344238
    5. '```' → logprob: -13.250042915344238
    6. '
' → logprob: -13.312542915344238
    7. '`' → logprob: -14.000042915344238
    8. ']' → logprob: -14.500042915344238
    9. '=' → logprob: -14.562542915344238
    10. '][' → logprob: -14.625042915344238

Token 65: ']' (ID: 60)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.001218451652675867
    2. 'else' → logprob: -6.751218318939209
    3. ')' → logprob: -10.626218795776367
    4. ' ' → logprob: -11.376218795776367
    5. ' )' → logprob: -12.001218795776367
    6. '    ' → logprob: -13.001218795776367
    7. '        ' → logprob: -14.251218795776367
    8. ' and' → logprob: -14.501218795776367
    9. '   ' → logprob: -14.626218795776367
    10. '	else' → logprob: -14.626218795776367

Token 66: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.009780999273061752
    2. 'else' → logprob: -4.6347808837890625
    3. ' ' → logprob: -11.884780883789062
    4. '        ' → logprob: -12.384780883789062
    5. ' and' → logprob: -12.759780883789062
    6. '    ' → logprob: -12.884780883789062
    7. ' or' → logprob: -13.384780883789062
    8. '            ' → logprob: -13.759780883789062
    9. ')' → logprob: -14.009780883789062
    10. '	else' → logprob: -14.009780883789062

Token 67: ' acc' (ID: 1259)
  Prédit: 'acc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acc' → logprob: -0.42876750230789185
    2. ' acc' → logprob: -1.053767442703247
    3. '(acc' → logprob: -9.803767204284668
    4. '	acc' → logprob: -12.553767204284668
    5. ' (' → logprob: -13.303767204284668
    6. '(' → logprob: -13.303767204284668
    7. ' ' → logprob: -14.053767204284668
    8. 'ac' → logprob: -14.303767204284668
    9. '_acc' → logprob: -14.428767204284668
    10. '   ' → logprob: -14.553767204284668

Token 68: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026846135035157204
    2. ' ,' → logprob: -3.651846170425415
    3. '   ' → logprob: -7.901845932006836
    4. ' if' → logprob: -9.276845932006836
    5. '),' → logprob: -9.901845932006836
    6. ' ),' → logprob: -11.776845932006836
    7. ')' → logprob: -12.401845932006836
    8. ',(' → logprob: -12.776845932006836
    9. ',key' → logprob: -12.901845932006836
    10. ' ' → logprob: -13.026845932006836

Token 69: ' order' (ID: 2569)
  Prédit: ' order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' order' → logprob: -0.25664064288139343
    2. 'order' → logprob: -1.5066406726837158
    3. ' chain' → logprob: -6.131640434265137
    4. 'chain' → logprob: -6.381640434265137
    5. '   ' → logprob: -8.006640434265137
    6. ' [' → logprob: -9.131640434265137
    7. ' list' → logprob: -9.631640434265137
    8. ' ' → logprob: -10.131640434265137
    9. '	order' → logprob: -10.131640434265137
    10. '[' → logprob: -10.506640434265137

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020735491125378758
    2. ' ,' → logprob: -9.37520694732666
    3. ')' → logprob: -9.75020694732666
    4. '),' → logprob: -10.12520694732666
    5. '[' → logprob: -11.37520694732666
    6. '(' → logprob: -12.25020694732666
    7. ',(' → logprob: -12.25020694732666
    8. '(),' → logprob: -14.75020694732666
    9. ' )' → logprob: -14.87520694732666
    10. '[(' → logprob: -15.00020694732666

Token 71: ' (' (ID: 350)
  Prédit: '('','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('',' → logprob: -0.7429519295692444
    2. '(None' → logprob: -1.1179518699645996
    3. '(order' → logprob: -1.7429518699645996
    4. ' (' → logprob: -4.7429518699646
    5. '("",' → logprob: -5.3679518699646
    6. '(next' → logprob: -5.9929518699646
    7. ' ('' → logprob: -6.1179518699646
    8. '('' → logprob: -6.3679518699646
    9. '(' → logprob: -6.3679518699646
    10. '(chain' → logprob: -8.867952346801758

Token 72: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.022117625921964645
    2. 'order' → logprob: -4.272117614746094
    3. ''',' → logprob: -5.272117614746094
    4. ' None' → logprob: -6.272117614746094
    5. ''' → logprob: -8.147117614746094
    6. '''' → logprob: -9.147117614746094
    7. '0' → logprob: -9.272117614746094
    8. '-' → logprob: -9.772117614746094
    9. '(None' → logprob: -9.772117614746094
    10. '"",' → logprob: -9.772117614746094

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003898299066349864
    2. '0' → logprob: -6.0038981437683105
    3. ',float' → logprob: -6.7538981437683105
    4. 'None' → logprob: -9.753898620605469
    5. '-' → logprob: -9.878898620605469
    6. ' ,' → logprob: -9.878898620605469
    7. ',-' → logprob: -10.878898620605469
    8. 'float' → logprob: -11.003898620605469
    9. ' ' → logprob: -11.378898620605469
    10. ',None' → logprob: -11.378898620605469

Token 74: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.37630748748779297
    2. ' -' → logprob: -2.126307487487793
    3. 'float' → logprob: -2.626307487487793
    4. '0' → logprob: -2.751307487487793
    5. ' float' → logprob: -3.751307487487793
    6. '-f' → logprob: -4.126307487487793
    7. '-s' → logprob: -5.251307487487793
    8. ' ' → logprob: -5.376307487487793
    9. '-cost' → logprob: -5.876307487487793
    10. '-inf' → logprob: -6.876307487487793

Token 75: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.2563953697681427
    2. 'float' → logprob: -2.6313953399658203
    3. '0' → logprob: -3.1313953399658203
    4. '-f' → logprob: -3.3813953399658203
    5. '-s' → logprob: -3.7563953399658203
    6. ' -' → logprob: -3.8813953399658203
    7. '-cost' → logprob: -4.13139533996582
    8. ' float' → logprob: -5.38139533996582
    9. '-inf' → logprob: -6.00639533996582
    10. '-eff' → logprob: -6.63139533996582

Token 76: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014186308719217777
    2. ')' → logprob: -4.264186382293701
    3. ')))' → logprob: -11.139185905456543
    4. '))
' → logprob: -12.764185905456543
    5. ' ))' → logprob: -12.764185905456543
    6. '),' → logprob: -14.389185905456543
    7. '));' → logprob: -14.639185905456543
    8. '0' → logprob: -14.889185905456543
    9. ' )' → logprob: -15.139185905456543
    10. ')
' → logprob: -15.514185905456543

Token 77: 'def' (ID: 1314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6033012270927429
    2. ')' → logprob: -0.8533012270927429
    3. '<|end|>' → logprob: -3.9783012866973877
    4. '(' → logprob: -5.978301048278809
    5. '
' → logprob: -6.603301048278809
    6. '.' → logprob: -7.103301048278809
    7. ' ' → logprob: -7.103301048278809
    8. ',' → logprob: -7.478301048278809
    9. '```' → logprob: -7.853301048278809
    10. ')[' → logprob: -8.228301048278809

Token 78: ' solve' (ID: 17722)
  Prédit: ' extravagant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extravagant' → logprob: -0.08328865468502045
    2. ' extr' → logprob: -3.7082886695861816
    3. ' extravag' → logprob: -4.708288669586182
    4. 'extr' → logprob: -4.958288669586182
    5. ' main' → logprob: -5.208288669586182
    6. ' expensive' → logprob: -5.583288669586182
    7. ' lavish' → logprob: -5.583288669586182
    8. ' max' → logprob: -5.708288669586182
    9. ' find' → logprob: -6.083288669586182
    10. ' cost' → logprob: -6.458288669586182

Token 79: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.362764447927475
    2. '(' → logprob: -1.3627644777297974
    3. '(cost' → logprob: -3.737764358520508
    4. '(line' → logprob: -5.487764358520508
    5. '(code' → logprob: -5.737764358520508
    6. '_' → logprob: -5.862764358520508
    7. '()' → logprob: -5.987764358520508
    8. '(args' → logprob: -6.112764358520508
    9. '```' → logprob: -7.112764358520508
    10. '(s' → logprob: -7.237764358520508

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02998478151857853
    2. ' import' → logprob: -4.154984951019287
    3. 'import' → logprob: -4.654984951019287
    4. ' input' → logprob: -5.904984951019287
    5. 'n' → logprob: -8.029984474182129
    6. 'input' → logprob: -8.029984474182129
    7. ' n' → logprob: -8.779984474182129
    8. ' readline' → logprob: -8.779984474182129
    9. '    
' → logprob: -8.904984474182129
    10. '```' → logprob: -9.279984474182129

Token 81: ' #' (ID: 1069)
  Prédit: ' import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.7439538836479187
    2. 'import' → logprob: -1.1189539432525635
    3. '   ' → logprob: -2.1189539432525635
    4. ' cost' → logprob: -4.118953704833984
    5. ' n' → logprob: -4.243953704833984
    6. ' order' → logprob: -4.368953704833984
    7. ' input' → logprob: -4.493953704833984
    8. 'cost' → logprob: -4.868953704833984
    9. 'input' → logprob: -5.493953704833984
    10. ' sys' → logprob: -5.618953704833984

Token 82: ' Red' (ID: 5952)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.671906054019928
    2. ' import' → logprob: -1.5469059944152832
    3. 'input' → logprob: -2.171905994415283
    4. ' input' → logprob: -2.421905994415283
    5. '   ' → logprob: -3.421905994415283
    6. 'pass' → logprob: -4.171905994415283
    7. ' pass' → logprob: -4.546905994415283
    8. 'from' → logprob: -5.546905994415283
    9. '```' → logprob: -6.046905994415283
    10. ' sys' → logprob: -6.421905994415283

Token 83: 'undant' (ID: 170136)
  Prédit: 'uce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'uce' → logprob: -1.1316715478897095
    2. 'uced' → logprob: -1.5066715478897095
    3. 'ef' → logprob: -1.8816715478897095
    4. '   ' → logprob: -2.25667142868042
    5. 'def' → logprob: -2.75667142868042
    6. 'efined' → logprob: -3.13167142868042
    7. 'uc' → logprob: -4.00667142868042
    8. 'er' → logprob: -4.75667142868042
    9. 'irect' → logprob: -4.88167142868042
    10. 'uct' → logprob: -5.00667142868042

Token 84: ' infinite' (ID: 48413)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.0780091285705566
    2. ' input' → logprob: -1.2030091285705566
    3. '   ' → logprob: -2.2030091285705566
    4. 'input' → logprob: -2.4530091285705566
    5. 'import' → logprob: -2.5780091285705566
    6. ' lines' → logprob: -3.5780091285705566
    7. ' import' → logprob: -4.203009128570557
    8. '_input' → logprob: -4.703009128570557
    9. 'code' → logprob: -5.078009128570557
    10. '_code' → logprob: -5.203009128570557

Token 85: ' value' (ID: 1432)
  Prédit: ' loop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' loop' → logprob: -0.01319329533725977
    2. '_loop' → logprob: -4.888193130493164
    3. 'loop' → logprob: -5.388193130493164
    4. ' for' → logprob: -7.888193130493164
    5. ' loops' → logprob: -7.888193130493164
    6. '_' → logprob: -9.513193130493164
    7. ' while' → logprob: -9.513193130493164
    8. 'for' → logprob: -10.638193130493164
    9. '-loop' → logprob: -11.138193130493164
    10. 'loops' → logprob: -11.388193130493164

Token 86: ' generator' (ID: 23989)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06794240325689316
    2. '=' → logprob: -3.5679423809051514
    3. '   ' → logprob: -4.3179426193237305
    4. 'import' → logprob: -4.5679426193237305
    5. 'cost' → logprob: -5.3179426193237305
    6. '=float' → logprob: -6.3179426193237305
    7. '_inf' → logprob: -6.4429426193237305
    8. 'inf' → logprob: -6.5679426193237305
    9. ' cost' → logprob: -6.9429426193237305
    10. '_cost' → logprob: -7.0679426193237305

Token 87: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015248310752213001
    2. 'import' → logprob: -5.1402482986450195
    3. 'def' → logprob: -6.0152482986450195
    4. '
' → logprob: -6.1402482986450195
    5. ' for' → logprob: -6.8902482986450195
    6. '    
' → logprob: -7.0152482986450195
    7. 'inf' → logprob: -7.0152482986450195
    8. ' def' → logprob: -7.8902482986450195
    9. 'for' → logprob: -8.26524829864502
    10. ' inf' → logprob: -9.01524829864502

Token 88: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011833433993160725
    2. '    ' → logprob: -5.636833667755127
    3. 'import' → logprob: -6.136833667755127
    4. 'def' → logprob: -6.636833667755127
    5. '    
' → logprob: -6.886833667755127
    6. ' for' → logprob: -7.261833667755127
    7. ' def' → logprob: -7.636833667755127
    8. 'inf' → logprob: -7.886833667755127
    9. ' while' → logprob: -8.011833190917969
    10. ' import' → logprob: -8.386833190917969

Token 89: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' (adapté à ' inf') → logprob: -0.7837458848953247
    2. '   ' → logprob: -1.5337458848953247
    3. ' inf' → logprob: -2.658745765686035
    4. 'def' → logprob: -2.658745765686035
    5. 'for' → logprob: -3.283745765686035
    6. ' for' → logprob: -3.783745765686035
    7. 'in' → logprob: -4.283745765686035
    8. ' def' → logprob: -4.408745765686035
    9. 'gen' → logprob: -4.658745765686035
    10. 'float' → logprob: -4.783745765686035

Token 90: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36811575293540955
    2. ' =' → logprob: -1.243115782737732
    3. '=float' → logprob: -4.3681159019470215
    4. 'inity' → logprob: -5.7431159019470215
    5. '=int' → logprob: -6.2431159019470215
    6. 'inite' → logprob: -7.8681159019470215
    7. 'ity' → logprob: -8.118115425109863
    8. '=sys' → logprob: -8.368115425109863
    9. 'inty' → logprob: -8.493115425109863
    10. '=lambda' → logprob: -9.118115425109863

Token 91: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.25664812326431274
    2. ' float' → logprob: -1.506648063659668
    3. '10' → logprob: -6.881648063659668
    4. '1' → logprob: -7.381648063659668
    5. 'iter' → logprob: -7.381648063659668
    6. ' ' → logprob: -7.381648063659668
    7. ' iter' → logprob: -7.756648063659668
    8. '   ' → logprob: -8.131648063659668
    9. 'int' → logprob: -8.256648063659668
    10. 'repeat' → logprob: -8.631648063659668

Token 92: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0075735002756118774
    2. '('' → logprob: -5.13257360458374
    3. '(float' → logprob: -6.50757360458374
    4. '(max' → logprob: -10.007573127746582
    5. '1' → logprob: -10.757573127746582
    6. '(sys' → logprob: -11.007573127746582
    7. '()' → logprob: -11.007573127746582
    8. '(int' → logprob: -11.507573127746582
    9. '(pow' → logprob: -11.507573127746582
    10. ' ' → logprob: -11.757573127746582

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0054118577390909195
    2. ''' → logprob: -5.380411624908447
    3. '(' → logprob: -8.130412101745605
    4. ' ' → logprob: -8.255412101745605
    5. '"' → logprob: -9.505412101745605
    6. ')' → logprob: -10.130412101745605
    7. '   ' → logprob: -10.255412101745605
    8. '9' → logprob: -10.505412101745605
    9. '10' → logprob: -11.255412101745605
    10. '2' → logprob: -11.505412101745605

Token 94: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0036499607376754284
    2. '0' → logprob: -5.753650188446045
    3. '<<' → logprob: -7.878650188446045
    4. ' <<' → logprob: -10.378649711608887
    5. '1' → logprob: -11.003649711608887
    6. ')' → logprob: -11.253649711608887
    7. '00' → logprob: -11.628649711608887
    8. '```' → logprob: -12.628649711608887
    9. '_' → logprob: -12.753649711608887
    10. 'е' → logprob: -12.753649711608887

Token 95: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0010818752925843
    2. '10' → logprob: -7.001081943511963
    3. '18' → logprob: -9.626081466674805
    4. '100' → logprob: -10.001081466674805
    5. '12' → logprob: -11.126081466674805
    6. '7' → logprob: -11.876081466674805
    7. '6' → logprob: -12.001081466674805
    8. '8' → logprob: -12.126081466674805
    9. '09' → logprob: -12.251081466674805
    10. '+' → logprob: -12.376081466674805

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.641841820150148e-05
    2. ' )' → logprob: -11.37502670288086
    3. '+' → logprob: -12.00002670288086
    4. ')
' → logprob: -12.25002670288086
    5. '0' → logprob: -14.00002670288086
    6. '+)' → logprob: -14.00002670288086
    7. ')+' → logprob: -14.62502670288086
    8. '9' → logprob: -14.75002670288086
    9. ')
' → logprob: -15.12502670288086
    10. '6' → logprob: -15.25002670288086

Token 97: ' +' (ID: 659)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04052136838436127
    2. '<|end|>' → logprob: -3.4155213832855225
    3. ' 
' → logprob: -6.415521144866943
    4. '    
' → logprob: -6.915521144866943
    5. '  
' → logprob: -7.040521144866943
    6. '
' → logprob: -7.415521144866943
    7. '<|end|>' → logprob: -7.540521144866943
    8. '' → logprob: -7.665521144866943
    9. '

' → logprob: -7.915521144866943
    10. '
    
' → logprob: -8.290521621704102

Token 98: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12718522548675537
    2. ' ' → logprob: -2.127185344696045
    3. '0' → logprob: -9.502184867858887
    4. '100' → logprob: -9.877184867858887
    5. '2' → logprob: -10.377184867858887
    6. '10' → logprob: -10.502184867858887
    7. '7' → logprob: -10.877184867858887
    8. '+' → logprob: -11.502184867858887
    9. '  ' → logprob: -11.502184867858887
    10. 'int' → logprob: -12.064684867858887

Token 99: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024953833781182766
    2. '1' → logprob: -8.625249862670898
    3. ' (' → logprob: -9.750249862670898
    4. '(.' → logprob: -12.625249862670898
    5. '0' → logprob: -13.250249862670898
    6. '()' → logprob: -13.875249862670898
    7. '(+' → logprob: -14.000249862670898
    8. '(
' → logprob: -14.000249862670898
    9. '((' → logprob: -14.250249862670898
    10. ' ' → logprob: -14.625249862670898

Token 100: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1484195739030838
    2. '0' → logprob: -2.5234196186065674
    3. ' ' → logprob: -3.0234196186065674
    4. '10' → logprob: -6.023419380187988
    5. ''' → logprob: -6.648419380187988
    6. '9' → logprob: -6.648419380187988
    7. '100' → logprob: -6.898419380187988
    8. '5' → logprob: -7.523419380187988
    9. '7' → logprob: -7.648419380187988
    10. '.' → logprob: -7.898419380187988

Token 101: 'e' (ID: 68)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03099517710506916
    2. '5' → logprob: -3.7809951305389404
    3. '10' → logprob: -6.1559953689575195
    4. '4' → logprob: -6.4059953689575195
    5. '6' → logprob: -6.9059953689575195
    6. '9' → logprob: -7.0309953689575195
    7. '2' → logprob: -7.5309953689575195
    8. '1' → logprob: -7.6559953689575195
    9. ')' → logprob: -8.15599536895752
    10. '3' → logprob: -8.53099536895752

Token 102: '-' (ID: 12)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.09920766204595566
    2. '9' → logprob: -2.724207639694214
    3. '5' → logprob: -4.224207878112793
    4. '6' → logprob: -4.849207878112793
    5. '12' → logprob: -6.599207878112793
    6. '7' → logprob: -6.599207878112793
    7. '8' → logprob: -7.099207878112793
    8. '11' → logprob: -7.099207878112793
    9. '15' → logprob: -7.724207878112793
    10. '4' → logprob: -7.849207878112793

Token 103: '10' (ID: 702)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.21561890840530396
    2. '10' → logprob: -1.9656188488006592
    3. '5' → logprob: -3.715618848800659
    4. '7' → logprob: -4.590619087219238
    5. '6' → logprob: -4.965619087219238
    6. '100' → logprob: -5.215619087219238
    7. '8' → logprob: -6.090619087219238
    8. '1' → logprob: -6.840619087219238
    9. '15' → logprob: -7.215619087219238
    10. '4' → logprob: -7.340619087219238

Token 104: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008725132793188095
    2. ' )' → logprob: -7.250872611999512
    3. '0' → logprob: -9.375872611999512
    4. ')
' → logprob: -9.875872611999512
    5. '))' → logprob: -11.875872611999512
    6. '+' → logprob: -13.000872611999512
    7. '1' → logprob: -13.125872611999512
    8. ')))' → logprob: -13.250872611999512
    9. '000' → logprob: -13.375872611999512
    10. ')+' → logprob: -13.500872611999512

Token 105: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06420766562223434
    2. '<|end|>' → logprob: -3.0642075538635254
    3. '   ' → logprob: -4.564207553863525
    4. '    
' → logprob: -6.314207553863525
    5. ' 
' → logprob: -6.814207553863525
    6. ')' → logprob: -7.314207553863525
    7. ' ' → logprob: -8.064208030700684
    8. '<|end|>' → logprob: -8.189208030700684
    9. '  
' → logprob: -8.314208030700684
    10. '
' → logprob: -9.314208030700684

Token 106: ' input' (ID: 3422)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3016830384731293
    2. 'max' → logprob: -2.176682949066162
    3. '   ' → logprob: -2.926682949066162
    4. '<|end|>' → logprob: -4.051682949066162
    5. ' max' → logprob: -4.301682949066162
    6. ' ' → logprob: -4.301682949066162
    7. ' 
' → logprob: -5.051682949066162
    8. '    
' → logprob: -5.176682949066162
    9. 'rest' → logprob: -5.551682949066162
    10. ')' → logprob: -5.551682949066162

Token 107: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05368632450699806
    2. '_data' → logprob: -3.6786863803863525
    3. '_line' → logprob: -4.553686141967773
    4. '_' → logprob: -4.928686141967773
    5. '().' → logprob: -6.178686141967773
    6. '(' → logprob: -6.303686141967773
    7. ' =' → logprob: -6.678686141967773
    8. 'data' → logprob: -7.053686141967773
    9. '=' → logprob: -7.178686141967773
    10. '_lines' → logprob: -7.428686141967773

Token 108: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.02354220300912857
    2. 'sys' → logprob: -3.7735421657562256
    3. ' input' → logprob: -8.398542404174805
    4. 'input' → logprob: -9.898542404174805
    5. '(sys' → logprob: -11.773542404174805
    6. '	sys' → logprob: -12.273542404174805
    7. '=sys' → logprob: -12.398542404174805
    8. ' lambda' → logprob: -12.523542404174805
    9. 'lambda' → logprob: -14.398542404174805
    10. ' ' → logprob: -16.148542404174805

Token 109: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.009017512202262878
    2. '.' → logprob: -4.759017467498779
    3. '.stdout' → logprob: -8.134017944335938
    4. '.readline' → logprob: -10.134017944335938
    5. '.argv' → logprob: -10.384017944335938
    6. '.std' → logprob: -10.634017944335938
    7. ' .' → logprob: -12.384017944335938
    8. '.exit' → logprob: -13.509017944335938
    9. '.input' → logprob: -13.509017944335938
    10. '.max' → logprob: -13.884017944335938

Token 110: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002247438533231616
    2. '.read' → logprob: -6.127247333526611
    3. '.' → logprob: -10.12724781036377
    4. '.readlines' → logprob: -11.12724781036377
    5. 'read' → logprob: -12.12724781036377
    6. '.buffer' → logprob: -14.12724781036377
    7. '.Read' → logprob: -14.37724781036377
    8. '_read' → logprob: -15.00224781036377
    9. '<|end|>' → logprob: -15.50224781036377
    10. ' readline' → logprob: -16.377246856689453

Token 111: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.20117013156414032
    2. '().' → logprob: -2.2011702060699463
    3. '   ' → logprob: -2.8261702060699463
    4. '()
' → logprob: -4.951169967651367
    5. '
' → logprob: -6.076169967651367
    6. '    
' → logprob: -7.576169967651367
    7. '<|end|>' → logprob: -7.826169967651367
    8. '.rstrip' → logprob: -7.951169967651367
    9. '()\' → logprob: -8.326169967651367
    10. 'rstrip' → logprob: -8.701169967651367

Token 112: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26010942459106445
    2. '()' → logprob: -1.8851094245910645
    3. '
' → logprob: -4.1351094245910645
    4. 'n' → logprob: -4.2601094245910645
    5. 'def' → logprob: -4.6351094245910645
    6. '    
' → logprob: -4.8851094245910645
    7. 'order' → logprob: -5.1351094245910645
    8. '()
' → logprob: -5.6351094245910645
    9. ',' → logprob: -6.5101094245910645
    10. '(n' → logprob: -6.5101094245910645

Token 113: ' V' (ID: 631)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.029681410640478134
    2. '   ' → logprob: -3.904681444168091
    3. ' n' → logprob: -5.154681205749512
    4. 't' → logprob: -6.404681205749512
    5. 'N' → logprob: -6.654681205749512
    6. 'T' → logprob: -8.904681205749512
    7. 'num' → logprob: -9.529681205749512
    8. ' t' → logprob: -10.029681205749512
    9. '```' → logprob: -10.654681205749512
    10. '_' → logprob: -11.279681205749512

Token 114: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017711322754621506
    2. ' ,' → logprob: -4.267711162567139
    3. ' =' → logprob: -5.892711162567139
    4. '=' → logprob: -7.642711162567139
    5. ',E' → logprob: -9.392711639404297
    6. ',N' → logprob: -9.642711639404297
    7. '   ' → logprob: -10.392711639404297
    8. ',V' → logprob: -10.642711639404297
    9. '_,' → logprob: -10.767711639404297
    10. '=int' → logprob: -11.517711639404297

Token 115: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.21233412623405457
    2. ' E' → logprob: -1.837334156036377
    3. 'Q' → logprob: -4.587334156036377
    4. 'W' → logprob: -4.837334156036377
    5. 'K' → logprob: -5.587334156036377
    6. ' W' → logprob: -5.837334156036377
    7. 'P' → logprob: -6.837334156036377
    8. ' Q' → logprob: -7.212334156036377
    9. ' K' → logprob: -7.212334156036377
    10. 'F' → logprob: -7.587334156036377

Token 116: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3869119882583618
    2. '=' → logprob: -1.1369119882583618
    3. ',' → logprob: -10.26191234588623
    4. '=input' → logprob: -12.76191234588623
    5. '=line' → logprob: -13.88691234588623
    6. ' ' → logprob: -14.63691234588623
    7. ')' → logprob: -14.76191234588623
    8. ' ,' → logprob: -15.13691234588623
    9. '[' → logprob: -15.26191234588623
    10. '=int' → logprob: -15.76191234588623

Token 117: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00407923199236393
    2. 'map' → logprob: -5.504079341888428
    3. ' input' → logprob: -14.62907886505127
    4. ' list' → logprob: -15.62907886505127
    5. 'input' → logprob: -16.379079818725586
    6. '	map' → logprob: -16.379079818725586
    7. '   ' → logprob: -18.004079818725586
    8. ' ' → logprob: -18.129079818725586
    9. '[' → logprob: -18.629079818725586
    10. 'list' → logprob: -18.879079818725586

Token 118: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2583680748939514
    2. '(int' → logprob: -1.6333680152893066
    3. '(input' → logprob: -4.133368015289307
    4. '(lambda' → logprob: -4.383368015289307
    5. '(str' → logprob: -5.633368015289307
    6. '(list' → logprob: -9.258368492126465
    7. '(
' → logprob: -10.383368492126465
    8. ' (' → logprob: -10.383368492126465
    9. '(line' → logprob: -10.633368492126465
    10. '(tuple' → logprob: -10.883368492126465

Token 119: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10174975544214249
    2. ',input' → logprob: -2.6017496585845947
    3. '(input' → logprob: -4.226749897003174
    4. '(' → logprob: -5.476749897003174
    5. ' ,' → logprob: -6.601749897003174
    6. ',int' → logprob: -7.101749897003174
    7. 'input' → logprob: -7.226749897003174
    8. '(int' → logprob: -8.101749420166016
    9. '(sys' → logprob: -8.226749420166016
    10. ')' → logprob: -9.351749420166016

Token 120: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47407862544059753
    2. ' input' → logprob: -0.9740786552429199
    3. 'lambda' → logprob: -14.099078178405762
    4. ')' → logprob: -15.474078178405762
    5. 'int' → logprob: -15.849078178405762
    6. 'str' → logprob: -15.849078178405762
    7. ',input' → logprob: -16.099079132080078
    8. 'sys' → logprob: -16.224079132080078
    9. ' sys' → logprob: -16.599079132080078
    10. ' lambda' → logprob: -16.974079132080078

Token 121: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00016420685278717428
    2. '()' → logprob: -8.750164031982422
    3. '())' → logprob: -12.375164031982422
    4. ' ().' → logprob: -14.250164031982422
    5. ')' → logprob: -15.375164031982422
    6. '(' → logprob: -15.500164031982422
    7. '('' → logprob: -15.750164031982422
    8. '()[' → logprob: -16.375164031982422
    9. '().'' → logprob: -16.875164031982422
    10. 'line' → logprob: -17.625164031982422

Token 122: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5770288705825806
    2. 'strip' → logprob: -0.8270288705825806
    3. 'rstrip' → logprob: -6.827028751373291
    4. '(split' → logprob: -13.57702922821045
    5. '().' → logprob: -13.95202922821045
    6. ' strip' → logprob: -14.20202922821045
    7. '(strip' → logprob: -14.32702922821045
    8. 'read' → logprob: -14.32702922821045
    9. ' split' → logprob: -14.57702922821045
    10. '```' → logprob: -16.452028274536133

Token 123: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.5654348731040955
    2. ')' → logprob: -0.9404348731040955
    3. '()' → logprob: -3.1904349327087402
    4. '(' → logprob: -8.940434455871582
    5. '(),' → logprob: -9.690434455871582
    6. '())
' → logprob: -10.940434455871582
    7. ' )' → logprob: -10.940434455871582
    8. '('' → logprob: -11.440434455871582
    9. '))' → logprob: -11.940434455871582
    10. ' ())' → logprob: -12.440434455871582

Token 124: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.25519803166389465
    2. '<|end|>' → logprob: -2.1301980018615723
    3. '    
' → logprob: -3.5051980018615723
    4. '   ' → logprob: -3.5051980018615723
    5. 'graph' → logprob: -4.130198001861572
    6. ' 
' → logprob: -5.005198001861572
    7. ' edges' → logprob: -5.380198001861572
    8. ')' → logprob: -5.505198001861572
    9. 'edges' → logprob: -5.630198001861572
    10. ' graph' → logprob: -5.755198001861572

Token 125: ' #' (ID: 1069)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5845664739608765
    2. 'graph' → logprob: -0.8345664739608765
    3. 'adj' → logprob: -5.459566593170166
    4. ' adj' → logprob: -6.334566593170166
    5. ' edges' → logprob: -6.834566593170166
    6. 'edges' → logprob: -7.834566593170166
    7. 'g' → logprob: -7.959566593170166
    8. '   ' → logprob: -9.084566116333008
    9. ' adjacency' → logprob: -9.334566116333008
    10. ' g' → logprob: -9.459566116333008

Token 126: ' Use' (ID: 7649)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23139677941799164
    2. ' graph' → logprob: -1.8563967943191528
    3. 'adj' → logprob: -3.2313966751098633
    4. ' adj' → logprob: -5.356396675109863
    5. 'edges' → logprob: -6.106396675109863
    6. 'g' → logprob: -6.606396675109863
    7. ' edges' → logprob: -7.231396675109863
    8. ' g' → logprob: -7.856396675109863
    9. 'G' → logprob: -8.481396675109863
    10. 'cost' → logprob: -8.731396675109863

Token 127: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.5064823627471924
    2. 'default' → logprob: -1.0064823627471924
    3. ' default' → logprob: -3.7564823627471924
    4. ' a' → logprob: -5.631482124328613
    5. ' adjacency' → logprob: -5.756482124328613
    6. 'adj' → logprob: -7.881482124328613
    7. 'a' → logprob: -7.881482124328613
    8. 'd' → logprob: -8.256482124328613
    9. ' the' → logprob: -9.756482124328613
    10. ' ' → logprob: -9.881482124328613

Token 128: 's' (ID: 82)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.5851707458496094
    2. 'graph' → logprob: -1.2101707458496094
    3. '(lambda' → logprob: -3.3351707458496094
    4. ' graph' → logprob: -3.5851707458496094
    5. '(graph' → logprob: -3.7101707458496094
    6. 'adj' → logprob: -4.835170745849609
    7. 'int' → logprob: -5.335170745849609
    8. ' for' → logprob: -5.335170745849609
    9. 'def' → logprob: -5.710170745849609
    10. '   ' → logprob: -5.835170745849609

Token 129: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6989575028419495
    2. '(int' → logprob: -1.3239574432373047
    3. ' to' → logprob: -2.8239574432373047
    4. 'for' → logprob: -3.1989574432373047
    5. 'graph' → logprob: -3.1989574432373047
    6. ' of' → logprob: -3.9489574432373047
    7. 'def' → logprob: -4.073957443237305
    8. 'int' → logprob: -4.823957443237305
    9. 'to' → logprob: -5.198957443237305
    10. ' graph' → logprob: -5.573957443237305

Token 130: ' unnecessary' (ID: 42963)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.9183685183525085
    2. 'graph' → logprob: -0.9183685183525085
    3. ' adjacency' → logprob: -1.9183685779571533
    4. 'adj' → logprob: -3.5433685779571533
    5. ' edges' → logprob: -4.668368339538574
    6. ' defaultdict' → logprob: -5.293368339538574
    7. 'list' → logprob: -5.793368339538574
    8. 'default' → logprob: -6.168368339538574
    9. 'edges' → logprob: -6.418368339538574
    10. 'neighbors' → logprob: -7.043368339538574

Token 131: ' flexibility' (ID: 29142)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.576249897480011
    2. ' graph' → logprob: -2.451249837875366
    3. ' nested' → logprob: -2.826249837875366
    4. ' adjacency' → logprob: -2.826249837875366
    5. 'adj' → logprob: -3.326249837875366
    6. 'nested' → logprob: -3.451249837875366
    7. 'lambda' → logprob: -3.451249837875366
    8. 'list' → logprob: -3.701249837875366
    9. 'complex' → logprob: -3.826249837875366
    10. 'lists' → logprob: -4.326250076293945

Token 132: '
' (ID: 198)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5350518226623535
    2. ' graph' → logprob: -1.0350518226623535
    3. 'adj' → logprob: -3.5350518226623535
    4. '   ' → logprob: -5.4100518226623535
    5. ' adjacency' → logprob: -5.4100518226623535
    6. ' adj' → logprob: -5.5350518226623535
    7. 'cost' → logprob: -5.7850518226623535
    8. ' edges' → logprob: -6.0350518226623535
    9. ' cost' → logprob: -6.2850518226623535
    10. 'edges' → logprob: -6.5350518226623535

Token 133: '   ' (ID: 271)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7704250812530518
    2. ' graph' → logprob: -1.1454250812530518
    3. '   ' → logprob: -1.6454250812530518
    4. 'adj' → logprob: -4.645424842834473
    5. ' adjacency' → logprob: -5.270424842834473
    6. ' edges' → logprob: -5.395424842834473
    7. ' adj' → logprob: -5.895424842834473
    8. 'edges' → logprob: -6.520424842834473
    9. 'neighbors' → logprob: -7.395424842834473
    10. ' neighbors' → logprob: -7.520424842834473

Token 134: ' edge' (ID: 11165)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09175758063793182
    2. 'adj' → logprob: -2.8417575359344482
    3. ' graph' → logprob: -4.466757774353027
    4. 'edges' → logprob: -4.591757774353027
    5. 'cost' → logprob: -5.591757774353027
    6. 'dist' → logprob: -6.716757774353027
    7. 'neighbors' → logprob: -7.341757774353027
    8. ' adj' → logprob: -7.716757774353027
    9. ' edges' → logprob: -8.341757774353027
    10. 'g' → logprob: -8.341757774353027

Token 135: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0029447749257087708
    2. '=' → logprob: -6.8779449462890625
    3. ' =' → logprob: -7.0029449462890625
    4. '_list' → logprob: -7.7529449462890625
    5. '_counts' → logprob: -8.502944946289062
    6. '_count' → logprob: -9.002944946289062
    7. '_weights' → logprob: -9.752944946289062
    8. '_cost' → logprob: -10.252944946289062
    9. '_lists' → logprob: -10.502944946289062
    10. ' s' → logprob: -10.627944946289062

Token 136: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.011683570221066475
    2. 'default' → logprob: -4.511683464050293
    3. 'lambda' → logprob: -8.011683464050293
    4. ' lambda' → logprob: -8.511683464050293
    5. '   ' → logprob: -10.261683464050293
    6. '(lambda' → logprob: -10.761683464050293
    7. ' default' → logprob: -11.011683464050293
    8. '(default' → logprob: -12.011683464050293
    9. 'def' → logprob: -12.261683464050293
    10. 'd' → logprob: -12.511683464050293

Token 137: '(lambda' (ID: 43341)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.03146091848611832
    2. '(lambda' → logprob: -3.906461000442505
    3. '(dict' → logprob: -4.906460762023926
    4. '(' → logprob: -6.031460762023926
    5. 'list' → logprob: -7.406460762023926
    6. '(set' → logprob: -8.281460762023926
    7. '(int' → logprob: -8.906460762023926
    8. '(
' → logprob: -10.531460762023926
    9. '(<' → logprob: -12.156460762023926
    10. '(default' → logprob: -12.281460762023926

Token 138: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036794093903154135
    2. ' :' → logprob: -5.628679275512695
    3. ':list' → logprob: -9.878679275512695
    4. ':int' → logprob: -10.753679275512695
    5. ':
' → logprob: -12.878679275512695
    6. ':[' → logprob: -13.503679275512695
    7. 'lambda' → logprob: -14.503679275512695
    8. ' lambda' → logprob: -14.753679275512695
    9. ':set' → logprob: -15.128679275512695
    10. ':return' → logprob: -15.628679275512695

Token 139: ' defaultdict' (ID: 107098)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8436396718025208
    2. 'default' → logprob: -1.218639612197876
    3. 'list' → logprob: -1.968639612197876
    4. '[])' → logprob: -3.093639612197876
    5. 'float' → logprob: -3.843639612197876
    6. 'dict' → logprob: -3.968639612197876
    7. 'int' → logprob: -4.718639850616455
    8. '[]' → logprob: -4.718639850616455
    9. '{})' → logprob: -4.718639850616455
    10. 'inf' → logprob: -5.093639850616455

Token 140: '(lambda' (ID: 43341)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.020535936579108238
    2. '(lambda' → logprob: -4.020535945892334
    3. '(list' → logprob: -6.520535945892334
    4. 'int' → logprob: -7.270535945892334
    5. '(dict' → logprob: -9.145535469055176
    6. 'lambda' → logprob: -9.895535469055176
    7. 'list' → logprob: -10.895535469055176
    8. '(bool' → logprob: -11.020535469055176
    9. '[int' → logprob: -11.895535469055176
    10. '(' → logprob: -12.395535469055176

Token 141: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002681367564946413
    2. ' :' → logprob: -6.252681255340576
    3. ':int' → logprob: -7.252681255340576
    4. '0' → logprob: -11.377681732177734
    5. ':list' → logprob: -11.377681732177734
    6. 'int' → logprob: -11.627681732177734
    7. ':
' → logprob: -12.127681732177734
    8. ':set' → logprob: -13.252681732177734
    9. ':-' → logprob: -14.002681732177734
    10. ' ' → logprob: -14.752681732177734

Token 142: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.12710469961166382
    2. 'int' → logprob: -2.7521047592163086
    3. ' inf' → logprob: -3.3771047592163086
    4. 'float' → logprob: -4.877104759216309
    5. ' int' → logprob: -5.627104759216309
    6. '0' → logprob: -5.752104759216309
    7. 'sys' → logprob: -6.377104759216309
    8. 'lambda' → logprob: -7.127104759216309
    9. ' sys' → logprob: -7.252104759216309
    10. 'False' → logprob: -7.377104759216309

Token 143: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0006494098342955112
    2. '))
' → logprob: -8.375649452209473
    3. ' ))' → logprob: -8.500649452209473
    4. ')))' → logprob: -8.875649452209473
    5. '()))' → logprob: -10.125649452209473
    6. ')' → logprob: -11.250649452209473
    7. '))

' → logprob: -11.500649452209473
    8. '   ' → logprob: -12.375649452209473
    9. ' ' → logprob: -12.750649452209473
    10. ',' → logprob: -14.500649452209473

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09606500715017319
    2. '    
' → logprob: -2.721065044403076
    3. '<|end|>' → logprob: -4.596065044403076
    4. ')' → logprob: -4.846065044403076
    5. '
' → logprob: -5.346065044403076
    6. ' 
' → logprob: -6.596065044403076
    7. ',' → logprob: -8.096064567565918
    8. '  
' → logprob: -8.096064567565918
    9. '   
' → logprob: -8.846064567565918
    10. '<|end|>' → logprob: -9.221064567565918

Token 145: ' wf' (ID: 99382)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5110898613929749
    2. 'for' → logprob: -1.01108980178833
    3. '   ' → logprob: -3.38608980178833
    4. 'dist' → logprob: -8.136090278625488
    5. 'distance' → logprob: -8.136090278625488
    6. 'graph' → logprob: -8.261090278625488
    7. ')' → logprob: -8.511090278625488
    8. '    
' → logprob: -9.011090278625488
    9. ' 
' → logprob: -9.011090278625488
    10. '<|end|>' → logprob: -9.136090278625488

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.585616409778595
    2. ' =' → logprob: -0.960616409778595
    3. 'l' → logprob: -3.83561635017395
    4. 'ull' → logprob: -4.835616588592529
    5. '_' → logprob: -5.335616588592529
    6. 'w' → logprob: -5.710616588592529
    7. '_edges' → logprob: -5.835616588592529
    8. '=edge' → logprob: -6.085616588592529
    9. '_edge' → logprob: -6.335616588592529
    10. '_matrix' → logprob: -6.335616588592529

Token 147: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.8880048394203186
    2. 'default' → logprob: -1.1380047798156738
    3. ' [[' → logprob: -1.7630047798156738
    4. '[[' → logprob: -2.513004779815674
    5. '[' → logprob: -4.763004779815674
    6. ' [' → logprob: -5.388004779815674
    7. ' default' → logprob: -6.513004779815674
    8. ' ' → logprob: -8.138005256652832
    9. '   ' → logprob: -8.138005256652832
    10. 'lambda' → logprob: -9.513005256652832

Token 148: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.021154483780264854
    2. '(dict' → logprob: -3.8961544036865234
    3. '(int' → logprob: -8.146154403686523
    4. '(' → logprob: -8.521154403686523
    5. '(list' → logprob: -10.146154403686523
    6. 'dict' → logprob: -10.521154403686523
    7. ' (' → logprob: -10.771154403686523
    8. 'lambda' → logprob: -11.021154403686523
    9. '(float' → logprob: -11.271154403686523
    10. '(bool' → logprob: -13.146154403686523

Token 149: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12633268535137177
    2. '(lambda' → logprob: -2.7513327598571777
    3. 'lambda' → logprob: -3.0013327598571777
    4. ' :' → logprob: -6.126332759857178
    5. ' lambda' → logprob: -6.251332759857178
    6. '=lambda' → logprob: -7.251332759857178
    7. ' (' → logprob: -9.12633228302002
    8. '   ' → logprob: -10.50133228302002
    9. '(' → logprob: -10.62633228302002
    10. ' ' → logprob: -10.75133228302002

Token 150: ' defaultdict' (ID: 107098)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.7145325541496277
    2. 'lambda' → logprob: -1.3395326137542725
    3. 'default' → logprob: -1.4645326137542725
    4. ' defaultdict' → logprob: -4.964532375335693
    5. 'int' → logprob: -5.714532375335693
    6. ' lambda' → logprob: -5.839532375335693
    7. '0' → logprob: -6.839532375335693
    8. ' inf' → logprob: -7.339532375335693
    9. ')' → logprob: -7.339532375335693
    10. '(lambda' → logprob: -7.464532375335693

Token 151: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.010379218496382236
    2. 'lambda' → logprob: -5.010379314422607
    3. '(int' → logprob: -5.760379314422607
    4. 'int' → logprob: -8.63537883758545
    5. ' (' → logprob: -9.26037883758545
    6. '=lambda' → logprob: -9.38537883758545
    7. '(' → logprob: -9.63537883758545
    8. ' lambda' → logprob: -10.01037883758545
    9. '(float' → logprob: -11.13537883758545
    10. '```' → logprob: -11.76037883758545

Token 152: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003989720717072487
    2. ' :' → logprob: -7.875399112701416
    3. ':int' → logprob: -11.750398635864258
    4. 'inf' → logprob: -12.875398635864258
    5. ':return' → logprob: -12.875398635864258
    6. '{' → logprob: -14.250398635864258
    7. '0' → logprob: -14.250398635864258
    8. ':
' → logprob: -14.750398635864258
    9. ' ' → logprob: -14.875398635864258
    10. 'lambda' → logprob: -15.000398635864258

Token 153: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0018573652487248182
    2. ' inf' → logprob: -7.126857280731201
    3. 'int' → logprob: -7.376857280731201
    4. '0' → logprob: -8.37685775756836
    5. 'float' → logprob: -9.12685775756836
    6. '1' → logprob: -10.87685775756836
    7. 'sys' → logprob: -11.00185775756836
    8. '(' → logprob: -12.00185775756836
    9. 'lambda' → logprob: -12.00185775756836
    10. ' ' → logprob: -12.31435775756836

Token 154: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015252856246661395
    2. '))
' → logprob: -9.625152587890625
    3. ')))' → logprob: -9.750152587890625
    4. '()))' → logprob: -11.250152587890625
    5. ')' → logprob: -12.000152587890625
    6. ' ))' → logprob: -12.625152587890625
    7. '))

' → logprob: -13.125152587890625
    8. '   ' → logprob: -13.625152587890625
    9. '}))' → logprob: -14.250152587890625
    10. '__))' → logprob: -15.125152587890625

Token 155: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3298569321632385
    2. '
' → logprob: -2.0798568725585938
    3. '<|end|>' → logprob: -2.0798568725585938
    4. '    
' → logprob: -3.8298568725585938
    5. ')' → logprob: -5.079856872558594
    6. '  
' → logprob: -6.829856872558594
    7. ' 
' → logprob: -7.329856872558594
    8. '<|end|>' → logprob: -7.829856872558594
    9. ' for' → logprob: -8.579856872558594
    10. 'for' → logprob: -9.204856872558594

Token 156: ' next' (ID: 2613)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2063591480255127
    2. '<|end|>' → logprob: -2.0813591480255127
    3. ' for' → logprob: -3.2063591480255127
    4. 'for' → logprob: -4.081358909606934
    5. '    
' → logprob: -6.081358909606934
    6. ')' → logprob: -6.831358909606934
    7. '
' → logprob: -8.331358909606934
    8. '<|end|>' → logprob: -8.456358909606934
    9. '	for' → logprob: -9.581358909606934
    10. ',' → logprob: -9.706358909606934

Token 157: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6426816582679749
    2. '_' → logprob: -1.64268159866333
    3. '=' → logprob: -2.51768159866333
    4. 'def' → logprob: -2.76768159866333
    5. 'for' → logprob: -3.01768159866333
    6. '(' → logprob: -4.14268159866333
    7. '_edge' → logprob: -4.51768159866333
    8. '()' → logprob: -4.76768159866333
    9. ' ' → logprob: -4.89268159866333
    10. '_vertices' → logprob: -5.01768159866333

Token 158: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7322045564651489
    2. ' =' → logprob: -1.357204556465149
    3. '=' → logprob: -1.857204556465149
    4. '_node' → logprob: -2.3572044372558594
    5. '_vertex' → logprob: -5.357204437255859
    6. '_=' → logprob: -6.107204437255859
    7. '_id' → logprob: -7.357204437255859
    8. '_token' → logprob: -7.482204437255859
    9. '_val' → logprob: -7.857204437255859
    10. 's' → logprob: -7.982204437255859

Token 159: ' defaultdict' (ID: 107098)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02146105282008648
    2. ' ' → logprob: -4.896461009979248
    3. 'V' → logprob: -5.396461009979248
    4. '{' → logprob: -6.146461009979248
    5. 'default' → logprob: -6.271461009979248
    6. '{}' → logprob: -6.271461009979248
    7. '1' → logprob: -6.396461009979248
    8. '[' → logprob: -8.021461486816406
    9. ' V' → logprob: -8.146461486816406
    10. 'chain' → logprob: -8.521461486816406

Token 160: '(dict' (ID: 71792)
  Prédit: '(int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.10061756521463394
    2. '(lambda' → logprob: -2.3506176471710205
    3. '()' → logprob: -9.225617408752441
    4. '(' → logprob: -9.225617408752441
    5. 'int' → logprob: -9.475617408752441
    6. '(list' → logprob: -9.600617408752441
    7. '(dict' → logprob: -9.850617408752441
    8. 'lambda' → logprob: -12.475617408752441
    9. '(bool' → logprob: -12.850617408752441
    10. '(
' → logprob: -13.475617408752441

Token 161: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0026201317086815834
    2. '())' → logprob: -6.002620220184326
    3. '   ' → logprob: -10.127619743347168
    4. ')
' → logprob: -10.252619743347168
    5. ' )' → logprob: -10.252619743347168
    6. ')

' → logprob: -11.127619743347168
    7. '()' → logprob: -11.502619743347168
    8. '))' → logprob: -13.127619743347168
    9. ' ' → logprob: -13.627619743347168
    10. ' ())' → logprob: -14.127619743347168

Token 162: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.904679000377655
    2. '<|end|>' → logprob: -1.1546790599822998
    3. '
' → logprob: -1.4046790599822998
    4. '    
' → logprob: -3.7796790599823
    5. '  
' → logprob: -5.904678821563721
    6. ')' → logprob: -5.904678821563721
    7. ' 
' → logprob: -6.029678821563721
    8. '<|end|>' → logprob: -6.779678821563721
    9. ' for' → logprob: -7.404678821563721
    10. ' ' → logprob: -7.529678821563721

Token 163: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6757709383964539
    2. 'for' (adapté à ' for') → logprob: -1.3007709980010986
    3. '   ' → logprob: -1.5507709980010986
    4. ' i' → logprob: -6.3007707595825195
    5. 'i' → logprob: -6.5507707595825195
    6. '    
' → logprob: -7.6757707595825195
    7. ' 
' → logprob: -8.30077075958252
    8. '
' → logprob: -8.30077075958252
    9. ' counter' → logprob: -8.30077075958252
    10. 'current' → logprob: -8.42577075958252

Token 164: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.001885326812043786
    2. '_' → logprob: -6.626885414123535
    3. ' i' → logprob: -7.626885414123535
    4. ' ' → logprob: -10.251885414123535
    5. ' range' → logprob: -10.251885414123535
    6. 'range' → logprob: -14.876885414123535
    7. ' ' → logprob: -15.001885414123535
    8. 'i' → logprob: -15.251885414123535
    9. ' in' → logprob: -15.751885414123535
    10. '  ' → logprob: -16.75188446044922

Token 165: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08968634903430939
    2. 'in' → logprob: -2.464686393737793
    3. '_' → logprob: -7.964686393737793
    4. ',' → logprob: -8.464686393737793
    5. 'n' → logprob: -9.214686393737793
    6. ' ' → logprob: -9.964686393737793
    7. 'range' → logprob: -11.214686393737793
    8. ' ,' → logprob: -11.839686393737793
    9. ' _' → logprob: -12.339686393737793
    10. '(' → logprob: -12.589686393737793

Token 166: ' j' (ID: 441)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.936419665813446
    2. ' (' → logprob: -1.1864197254180908
    3. '(' → logprob: -2.061419725418091
    4. '(line' → logprob: -2.686419725418091
    5. '(_,' → logprob: -3.686419725418091
    6. 'range' → logprob: -3.811419725418091
    7. '(range' → logprob: -3.936419725418091
    8. '(E' → logprob: -5.186419486999512
    9. ' _' → logprob: -5.186419486999512
    10. ' range' → logprob: -5.561419486999512

Token 167: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2548927366733551
    2. 'in' → logprob: -1.5048927068710327
    3. ',' → logprob: -5.879892826080322
    4. ' ,' → logprob: -9.504892349243164
    5. ' ' → logprob: -9.629892349243164
    6. ')' → logprob: -11.754892349243164
    7. 'n' → logprob: -13.254892349243164
    8. '  ' → logprob: -13.379892349243164
    9. 'import' → logprob: -13.379892349243164
    10. '	in' → logprob: -13.754892349243164

Token 168: ' ((' (ID: 3536)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -1.0262088775634766
    2. ' chain' → logprob: -1.6512088775634766
    3. ' map' → logprob: -1.9012088775634766
    4. '[' → logprob: -2.5262088775634766
    5. 'range' → logprob: -2.9012088775634766
    6. ' [' → logprob: -3.4012088775634766
    7. 'chain' → logprob: -3.5262088775634766
    8. 'map' → logprob: -3.9012088775634766
    9. ' (' → logprob: -4.026208877563477
    10. '(range' → logprob: -4.151208877563477

Token 169: 'i' (ID: 72)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.011972910724580288
    2. ' map' → logprob: -4.636972904205322
    3. 'input' → logprob: -6.511972904205322
    4. 'int' → logprob: -8.76197338104248
    5. ')' → logprob: -8.88697338104248
    6. '(map' → logprob: -9.63697338104248
    7. 'range' → logprob: -9.63697338104248
    8. 'tuple' → logprob: -9.88697338104248
    9. '
' → logprob: -10.01197338104248
    10. 'lambda' → logprob: -11.01197338104248

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01016211323440075
    2. ' ,' → logprob: -4.760161876678467
    3. ',k' → logprob: -7.260161876678467
    4. ',j' → logprob: -7.885161876678467
    5. ')' → logprob: -8.510162353515625
    6. ' in' → logprob: -10.010162353515625
    7. ',)' → logprob: -10.135162353515625
    8. '),' → logprob: -10.385162353515625
    9. ',i' → logprob: -10.760162353515625
    10. ',n' → logprob: -11.010162353515625

Token 171: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029012659564614296
    2. ' j' → logprob: -4.279012680053711
    3. 'i' → logprob: -4.529012680053711
    4. 'k' → logprob: -6.154012680053711
    5. '0' → logprob: -7.654012680053711
    6. 'int' → logprob: -8.029012680053711
    7. 'v' → logprob: -8.779012680053711
    8. ' ' → logprob: -8.779012680053711
    9. ' i' → logprob: -8.904012680053711
    10. 'x' → logprob: -9.029012680053711

Token 172: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011546281166374683
    2. ' )' → logprob: -7.62615442276001
    3. 'in' → logprob: -7.75115442276001
    4. 'for' → logprob: -9.126154899597168
    5. '))' → logprob: -10.251154899597168
    6. ' in' → logprob: -10.376154899597168
    7. '(' → logprob: -11.751154899597168
    8. ',' → logprob: -11.876154899597168
    9. '(i' → logprob: -11.876154899597168
    10. ')
' → logprob: -12.001154899597168

Token 173: ' for' (ID: 395)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7293100953102112
    2. ' for' → logprob: -1.6043100357055664
    3. ')' → logprob: -2.1043100357055664
    4. 'in' → logprob: -2.2293100357055664
    5. 'for' → logprob: -2.4793100357055664
    6. ' )' → logprob: -6.354310035705566
    7. ' ' → logprob: -6.854310035705566
    8. ',' → logprob: -9.229310035705566
    9. '  ' → logprob: -9.229310035705566
    10. '
' → logprob: -9.354310035705566

Token 174: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10222286731004715
    2. ' _' → logprob: -3.1022229194641113
    3. 'i' → logprob: -3.4772229194641113
    4. '_' → logprob: -4.227222919464111
    5. ' range' → logprob: -5.602222919464111
    6. '_i' → logprob: -7.102222919464111
    7. ' ' → logprob: -7.102222919464111
    8. ' j' → logprob: -7.852222919464111
    9. 'range' → logprob: -7.977222919464111
    10. ' in' → logprob: -8.227222442626953

Token 175: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.055065423250198364
    2. 'in' → logprob: -2.930065393447876
    3. 'range' → logprob: -9.930065155029297
    4. ' ' → logprob: -10.305065155029297
    5. ' i' → logprob: -10.305065155029297
    6. ')' → logprob: -10.805065155029297
    7. ' range' → logprob: -11.055065155029297
    8. '_' → logprob: -11.430065155029297
    9. ',' → logprob: -12.180065155029297
    10. 'i' → logprob: -12.555065155029297

Token 176: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2811695337295532
    2. ' range' → logprob: -1.4061695337295532
    3. ' ' → logprob: -12.156169891357422
    4. ')' → logprob: -12.406169891357422
    5. '	range' → logprob: -12.781169891357422
    6. '(range' → logprob: -13.656169891357422
    7. ' xrange' → logprob: -13.906169891357422
    8. 'chain' → logprob: -13.906169891357422
    9. '
' → logprob: -14.468669891357422
    10. '  ' → logprob: -14.593669891357422

Token 177: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0017245612107217312
    2. '(' → logprob: -6.376724720001221
    3. ' (' → logprob: -12.001724243164062
    4. ' ' → logprob: -12.501724243164062
    5. '(i' → logprob: -12.501724243164062
    6. '(E' → logprob: -13.001724243164062
    7. ' V' → logprob: -13.751724243164062
    8. '	V' → logprob: -13.751724243164062
    9. 'V' → logprob: -13.876724243164062
    10. '   ' → logprob: -14.626724243164062

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0023585218004882336
    2. ' for' → logprob: -6.877358436584473
    3. 'for' → logprob: -7.002358436584473
    4. ' )' → logprob: -8.127358436584473
    5. '   ' → logprob: -9.377358436584473
    6. '+' → logprob: -11.127358436584473
    7. ' ' → logprob: -12.252358436584473
    8. '       ' → logprob: -12.627358436584473
    9. '	for' → logprob: -12.627358436584473
    10. '           ' → logprob: -13.502358436584473

Token 179: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.07001145929098129
    2. 'for' → logprob: -2.6950113773345947
    3. '	for' → logprob: -10.195011138916016
    4. '   ' → logprob: -11.195011138916016
    5. ')' → logprob: -11.320011138916016
    6. ' ' → logprob: -12.070011138916016
    7. '    ' → logprob: -13.320011138916016
    8. ' in' → logprob: -13.695011138916016
    9. '       ' → logprob: -13.820011138916016
    10. '  ' → logprob: -14.445011138916016

Token 180: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1321776956319809
    2. ' j' → logprob: -2.1321775913238525
    3. 'i' → logprob: -6.007177829742432
    4. 'V' → logprob: -7.257177829742432
    5. ' i' → logprob: -7.507177829742432
    6. '   ' → logprob: -7.632177829742432
    7. '(V' → logprob: -7.882177829742432
    8. '(j' → logprob: -8.132177352905273
    9. ' V' → logprob: -9.007177352905273
    10. ' (' → logprob: -9.882177352905273

Token 181: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001817862968891859
    2. 'in' → logprob: -6.37681770324707
    3. '<|end|>' → logprob: -9.87681770324707
    4. 'range' → logprob: -10.87681770324707
    5. '(V' → logprob: -11.00181770324707
    6. ')' → logprob: -12.00181770324707
    7. '(' → logprob: -12.25181770324707
    8. '(range' → logprob: -12.50181770324707
    9. ' range' → logprob: -13.00181770324707
    10. ' ' → logprob: -13.12681770324707

Token 182: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6115157008171082
    2. 'range' → logprob: -0.8615157008171082
    3. ' V' → logprob: -3.986515760421753
    4. 'V' → logprob: -4.236515522003174
    5. '(V' → logprob: -7.361515522003174
    6. '(range' → logprob: -7.611515522003174
    7. ' i' → logprob: -8.361515998840332
    8. 'i' → logprob: -8.486515998840332
    9. ')' → logprob: -9.486515998840332
    10. ' ' → logprob: -10.111515998840332

Token 183: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.016438890248537064
    2. '(i' → logprob: -4.141438961029053
    3. '(' → logprob: -8.891438484191895
    4. 'V' → logprob: -9.141438484191895
    5. ' (' → logprob: -9.391438484191895
    6. 'i' → logprob: -10.266438484191895
    7. ' V' → logprob: -11.766438484191895
    8. '((' → logprob: -12.141438484191895
    9. ')' → logprob: -12.391438484191895
    10. ' i' → logprob: -12.516438484191895

Token 184: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003571565030142665
    2. '):
' → logprob: -6.878571510314941
    3. ' if' → logprob: -7.003571510314941
    4. ')):' → logprob: -7.003571510314941
    5. ')' → logprob: -7.628571510314941
    6. 'if' → logprob: -9.003571510314941
    7. '   ' → logprob: -10.628571510314941
    8. ' ):' → logprob: -10.628571510314941
    9. ':' → logprob: -11.003571510314941
    10. '):

' → logprob: -11.253571510314941

Token 185: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10531733185052872
    2. ':' → logprob: -2.3553173542022705
    3. ':
' → logprob: -6.480317115783691
    4. '<|end|>' → logprob: -6.605317115783691
    5. '):' → logprob: -7.230317115783691
    6. ',' → logprob: -7.855317115783691
    7. '):
' → logprob: -8.230317115783691
    8. ' :' → logprob: -8.730317115783691
    9. '        
' → logprob: -8.730317115783691
    10. '   ' → logprob: -8.980317115783691

Token 186: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2483794391155243
    2. 'wf' → logprob: -2.2483794689178467
    3. ' wf' → logprob: -2.3733794689178467
    4. ' if' → logprob: -4.623379230499268
    5. '   ' → logprob: -4.998379230499268
    6. 'if' → logprob: -5.873379230499268
    7. '           ' → logprob: -7.998379230499268
    8. ' ' → logprob: -8.435879707336426
    9. ' edge' → logprob: -8.873379707336426
    10. '	w' → logprob: -8.998379707336426

Token 187: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014269021339714527
    2. '[' → logprob: -6.626426696777344
    3. '[j' → logprob: -9.626426696777344
    4. '][' → logprob: -11.126426696777344
    5. ' [' → logprob: -12.251426696777344
    6. '[(' → logprob: -12.751426696777344
    7. ')[' → logprob: -13.251426696777344
    8. '   ' → logprob: -13.626426696777344
    9. '[I' → logprob: -13.751426696777344
    10. '[
' → logprob: -13.876426696777344

Token 188: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.049242258071899414
    2. '[i' → logprob: -3.6742422580718994
    3. ']' → logprob: -4.04924201965332
    4. '[' → logprob: -5.54924201965332
    5. ']=' → logprob: -7.29924201965332
    6. ' ][' → logprob: -7.92424201965332
    7. ')[' → logprob: -9.54924201965332
    8. ']['' → logprob: -9.67424201965332
    9. '[j' → logprob: -10.17424201965332
    10. ']={' → logprob: -10.92424201965332

Token 189: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.703443770878948e-06
    2. ' j' → logprob: -12.875007629394531
    3. ']' → logprob: -13.250007629394531
    4. 'i' → logprob: -13.500007629394531
    5. '   ' → logprob: -13.750007629394531
    6. '
' → logprob: -15.375007629394531
    7. ' ' → logprob: -15.750007629394531
    8. '  ' → logprob: -16.37500762939453
    9. '	j' → logprob: -16.50000762939453
    10. '$j' → logprob: -16.87500762939453

Token 190: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5333148241043091
    2. '=' → logprob: -1.033314824104309
    3. ']' → logprob: -2.9083147048950195
    4. ']=' → logprob: -6.2833147048950195
    5. ')' → logprob: -7.1583147048950195
    6. ' ]' → logprob: -8.40831470489502
    7. ')=' → logprob: -10.90831470489502
    8. ' ' → logprob: -11.03331470489502
    9. '[' → logprob: -11.15831470489502
    10. '   ' → logprob: -12.03331470489502

Token 191: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0021896373946219683
    2. ' =' → logprob: -6.127189636230469
    3. '=

' → logprob: -13.127189636230469
    4. '=
' → logprob: -14.002189636230469
    5. '=int' → logprob: -14.127189636230469
    6. ' ' → logprob: -15.127189636230469
    7. '=float' → logprob: -16.12718963623047
    8. ',' → logprob: -16.62718963623047
    9. '=}' → logprob: -16.62718963623047
    10. '+=' → logprob: -16.75218963623047

Token 192: ' wf' (ID: 99382)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.04576830565929413
    2. '0' → logprob: -3.2957682609558105
    3. 'int' → logprob: -5.9207682609558105
    4. 'float' → logprob: -6.5457682609558105
    5. '(' → logprob: -6.5457682609558105
    6. 'i' → logprob: -7.5457682609558105
    7. ' inf' → logprob: -8.170768737792969
    8. ' ' → logprob: -8.295768737792969
    9. '1' → logprob: -8.420768737792969
    10. 'in' → logprob: -8.920768737792969

Token 193: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.004430947359651327
    2. '[' → logprob: -5.504430770874023
    3. 'inf' → logprob: -8.129430770874023
    4. '[j' → logprob: -12.129430770874023
    5. '[in' → logprob: -12.254430770874023
    6. '```' → logprob: -12.254430770874023
    7. ' [' → logprob: -12.379430770874023
    8. 'i' → logprob: -12.629430770874023
    9. ' inf' → logprob: -12.629430770874023
    10. ')' → logprob: -12.629430770874023

Token 194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00258636218495667
    2. '[j' → logprob: -6.752586364746094
    3. ']' → logprob: -7.002586364746094
    4. '[i' → logprob: -8.127586364746094
    5. '[' → logprob: -9.627586364746094
    6. ')[' → logprob: -10.002586364746094
    7. ' ][' → logprob: -10.252586364746094
    8. '"][' → logprob: -11.252586364746094
    9. '<|end|>' → logprob: -11.252586364746094
    10. ''][' → logprob: -11.877586364746094

Token 195: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0010058967163786292
    2. 'i' → logprob: -7.001006126403809
    3. ' j' → logprob: -9.876006126403809
    4. '<|end|>' → logprob: -10.626006126403809
    5. '   ' → logprob: -11.876006126403809
    6. ' ' → logprob: -12.751006126403809
    7. '0' → logprob: -13.501006126403809
    8. ' i' → logprob: -14.126006126403809
    9. '  ' → logprob: -14.251006126403809
    10. ')' → logprob: -14.438506126403809

Token 196: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.060309190303087234
    2. ' if' → logprob: -3.1853091716766357
    3. ' ]' → logprob: -5.060309410095215
    4. 'if' → logprob: -5.185309410095215
    5. 'inf' → logprob: -5.810309410095215
    6. ')' → logprob: -7.185309410095215
    7. '<|end|>' → logprob: -7.685309410095215
    8. ']=' → logprob: -7.685309410095215
    9. ' =' → logprob: -8.810309410095215
    10. '=' → logprob: -9.685309410095215

Token 197: ' =' (ID: 314)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1259174942970276
    2. 'if' → logprob: -2.500917434692383
    3. 'inf' → logprob: -4.375917434692383
    4. ' =' → logprob: -4.750917434692383
    5. '<|end|>' → logprob: -4.750917434692383
    6. '=' → logprob: -6.000917434692383
    7. ' ' → logprob: -7.250917434692383
    8. '
' → logprob: -7.625917434692383
    9. '0' → logprob: -7.625917434692383
    10. ' inf' → logprob: -8.000917434692383

Token 198: ' ' (ID: 220)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.02126733772456646
    2. '0' → logprob: -4.521267414093018
    3. ' inf' → logprob: -5.396267414093018
    4. '(' → logprob: -5.646267414093018
    5. 'int' → logprob: -7.521267414093018
    6. 'float' → logprob: -8.02126693725586
    7. '(in' → logprob: -8.14626693725586
    8. ' ' → logprob: -8.39626693725586
    9. ' (' → logprob: -8.39626693725586
    10. 'i' → logprob: -8.52126693725586

Token 199: '0' (ID: 15)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.04814065247774124
    2. '0' → logprob: -3.42314076423645
    3. '(' → logprob: -5.173140525817871
    4. 'float' → logprob: -5.423140525817871
    5. 'int' → logprob: -5.923140525817871
    6. 'i' → logprob: -7.423140525817871
    7. '(i' → logprob: -8.173140525817871
    8. '(in' → logprob: -8.423140525817871
    9. '100' → logprob: -9.298140525817871
    10. '1' → logprob: -9.548140525817871

Token 200: ' if' (ID: 538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23377972841262817
    2. '<|end|>' → logprob: -1.6087796688079834
    3. '    
' → logprob: -6.2337799072265625
    4. '   ' → logprob: -6.2337799072265625
    5. '<|end|>' → logprob: -6.3587799072265625
    6. '  
' → logprob: -7.3587799072265625
    7. '\n' → logprob: -7.3587799072265625
    8. ' 
' → logprob: -7.4837799072265625
    9. ' ' → logprob: -8.108779907226562
    10. '
' → logprob: -9.608779907226562

Token 201: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38687583804130554
    2. ' i' → logprob: -1.136875867843628
    3. ' ' → logprob: -13.261876106262207
    4. '	i' → logprob: -13.636876106262207
    5. ' ' → logprob: -14.261876106262207
    6. '   ' → logprob: -14.886876106262207
    7. '(i' → logprob: -15.011876106262207
    8. '  ' → logprob: -15.386876106262207
    9. 'I' → logprob: -16.01187515258789
    10. ' (' → logprob: -16.76187515258789

Token 202: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12693145871162415
    2. ' ==' → logprob: -2.1269314289093018
    3. '=' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.001931190490723
    5. '==
' → logprob: -14.626931190490723
    6. ']==' → logprob: -15.376931190490723
    7. ' ' → logprob: -16.00193214416504
    8. 'else' → logprob: -16.25193214416504
    9. '[' → logprob: -16.37693214416504
    10. '===' → logprob: -16.62693214416504

Token 203: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2811591923236847
    2. ' j' → logprob: -1.4061591625213623
    3. ' ' → logprob: -12.531159400939941
    4. '	j' → logprob: -12.656159400939941
    5. '   ' → logprob: -13.906159400939941
    6. '    ' → logprob: -14.406159400939941
    7. ' ' → logprob: -15.156159400939941
    8. '  ' → logprob: -16.156158447265625
    9. '<|end|>' → logprob: -16.656158447265625
    10. '$j' → logprob: -16.781158447265625

Token 204: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.25202488899230957
    2. 'else' → logprob: -1.5020248889923096
    3. '	else' → logprob: -9.62702465057373
    4. '<|end|>' → logprob: -10.62702465057373
    5. ' ' → logprob: -13.12702465057373
    6. '   ' → logprob: -13.50202465057373
    7. '       ' → logprob: -14.50202465057373
    8. '  ' → logprob: -15.12702465057373
    9. ' or' → logprob: -15.37702465057373
    10. ' ' → logprob: -15.37702465057373

Token 205: ' inf' (ID: 5603)
  Prédit: 'inf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.0012477317359298468
    2. ' inf' → logprob: -7.376247882843018
    3. 'int' → logprob: -7.751247882843018
    4. '999' → logprob: -10.00124740600586
    5. '100' → logprob: -10.50124740600586
    6. '1' → logprob: -10.50124740600586
    7. 'float' → logprob: -10.75124740600586
    8. '   ' → logprob: -10.87624740600586
    9. '10' → logprob: -10.87624740600586
    10. '0' → logprob: -12.12624740600586

Token 206: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 207: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6015217304229736
    2. '<|end|>' → logprob: -1.1015217304229736
    3. '
' → logprob: -2.3515217304229736
    4. ' for' → logprob: -4.4765214920043945
    5. 'for' → logprob: -5.2265214920043945
    6. '    
' → logprob: -5.2265214920043945
    7. '<|end|>' → logprob: -7.2265214920043945
    8. '```' → logprob: -8.351521492004395
    9. '	for' → logprob: -8.476521492004395
    10. '  
' → logprob: -8.476521492004395

Token 208: ' next' (ID: 2613)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 209: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.292907877039397e-06
    2. '_i' → logprob: -13.37500286102295
    3. '[i' → logprob: -14.75000286102295
    4. '```' → logprob: -15.00000286102295
    5. '_' → logprob: -15.25000286102295
    6. '[' → logprob: -15.50000286102295
    7. '[_' → logprob: -16.125003814697266
    8. '_ids' → logprob: -16.125003814697266
    9. '   ' → logprob: -17.125003814697266
    10. ' _' → logprob: -17.125003814697266

Token 210: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.4021237802808173e-05
    2. '[' → logprob: -11.375014305114746
    3. ')[' → logprob: -14.625014305114746
    4. '[I' → logprob: -14.625014305114746
    5. '][' → logprob: -14.750014305114746
    6. ' [' → logprob: -15.000014305114746
    7. '```' → logprob: -15.625014305114746
    8. ']' → logprob: -16.12501335144043
    9. '}[' → logprob: -16.37501335144043
    10. '.setdefault' → logprob: -16.75001335144043

Token 211: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007238025311380625
    2. '[j' → logprob: -5.632237911224365
    3. ']' → logprob: -6.507237911224365
    4. ')[' → logprob: -7.007237911224365
    5. '[' → logprob: -7.257237911224365
    6. '[i' → logprob: -8.132238388061523
    7. '}[' → logprob: -9.132238388061523
    8. '>[' → logprob: -10.507238388061523
    9. '"][' → logprob: -11.007238388061523
    10. ''][' → logprob: -11.132238388061523

Token 212: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.625001907348633
    4. ' ' → logprob: -18.500001907348633
    5. '  ' → logprob: -18.875001907348633
    6. '	j' → logprob: -19.000001907348633
    7. '
' → logprob: -20.375001907348633
    8. '$j' → logprob: -20.375001907348633
    9. '    ' → logprob: -20.875001907348633
    10. '[j' → logprob: -21.250001907348633

Token 213: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02297825925052166
    2. '=' → logprob: -4.77297830581665
    3. ' =' → logprob: -4.77297830581665
    4. ']=' → logprob: -5.39797830581665
    5. ' ]' → logprob: -7.02297830581665
    6. ')' → logprob: -7.89797830581665
    7. ')=' → logprob: -12.772977828979492
    8. ' ' → logprob: -12.897977828979492
    9. '[' → logprob: -13.522977828979492
    10. '   ' → logprob: -13.772977828979492

Token 214: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.693164050579071
    2. ' =' → logprob: -0.693164050579071
    3. '[' → logprob: -11.318163871765137
    4. ' ' → logprob: -13.193163871765137
    5. '=None' → logprob: -14.068163871765137
    6. '=i' → logprob: -14.568163871765137
    7. '=j' → logprob: -15.818163871765137
    8. '['' → logprob: -16.068164825439453
    9. '[i' → logprob: -16.068164825439453
    10. ')' → logprob: -16.318164825439453

Token 215: ' j' (ID: 441)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.29190173745155334
    2. 'j' → logprob: -2.0419018268585205
    3. 'None' → logprob: -2.1669018268585205
    4. ' -' → logprob: -5.416901588439941
    5. ' None' → logprob: -5.791901588439941
    6. '-j' → logprob: -7.291901588439941
    7. ' j' → logprob: -8.041901588439941
    8. ' ' → logprob: -9.291901588439941
    9. 'i' → logprob: -9.791901588439941
    10. '   ' → logprob: -10.291901588439941

Token 216: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6045670509338379
    2. '<|end|>' → logprob: -0.8545670509338379
    3. '   ' → logprob: -3.854567050933838
    4. '<|end|>' → logprob: -6.104567050933838
    5. '    
' → logprob: -6.354567050933838
    6. 'def' → logprob: -6.854567050933838
    7. '  
' → logprob: -7.979567050933838
    8. ' for' → logprob: -8.10456657409668
    9. 'for' → logprob: -8.22956657409668
    10. ' ' → logprob: -8.85456657409668

Token 217: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 218: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.044639892876148224
    2. ' for' → logprob: -3.169639825820923
    3. '   ' → logprob: -6.419640064239502
    4. '	for' → logprob: -12.544639587402344
    5. '    
' → logprob: -12.669639587402344
    6. '```' → logprob: -13.919639587402344
    7. '<|end|>' → logprob: -14.294639587402344
    8. '
' → logprob: -14.294639587402344
    9. ' 
' → logprob: -14.669639587402344
    10. '  ' → logprob: -15.419639587402344

Token 219: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.20143857598304749
    2. '_' → logprob: -1.701438546180725
    3. '_i' → logprob: -11.576438903808594
    4. ' i' → logprob: -11.701438903808594
    5. ' ' → logprob: -12.451438903808594
    6. '_E' → logprob: -13.451438903808594
    7. ' in' → logprob: -14.451438903808594
    8. '_e' → logprob: -15.076438903808594
    9. '   ' → logprob: -15.326438903808594
    10. ' ' → logprob: -15.326438903808594

Token 220: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10483569651842117
    2. 'in' → logprob: -2.3548357486724854
    3. ' ' → logprob: -5.479835510253906
    4. ' i' → logprob: -8.854835510253906
    5. ' _' → logprob: -9.479835510253906
    6. ' ,' → logprob: -9.729835510253906
    7. '_' → logprob: -9.854835510253906
    8. 'i' → logprob: -10.229835510253906
    9. '  ' → logprob: -10.479835510253906
    10. ',' → logprob: -10.854835510253906

Token 221: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020401719666551799
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -14.625204086303711
    4. '	range' → logprob: -18.75020408630371
    5. 'r' → logprob: -19.37520408630371
    6. '_' → logprob: -19.62520408630371
    7. 'rang' → logprob: -19.75020408630371
    8. '(' → logprob: -20.37520408630371
    9. 'ran' → logprob: -20.87520408630371
    10. '```' → logprob: -21.00020408630371

Token 222: '(E' (ID: 20882)
  Prédit: '(E'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(E' → logprob: -5.676981345459353e-06
    2. '(' → logprob: -12.750005722045898
    3. 'E' → logprob: -13.125005722045898
    4. ' (' → logprob: -14.750005722045898
    5. ' E' → logprob: -15.000005722045898
    6. '(int' → logprob: -18.0000057220459
    7. '(
' → logprob: -18.5000057220459
    8. '	E' → logprob: -19.2500057220459
    9. '((' → logprob: -20.1250057220459
    10. ' ' → logprob: -20.2500057220459

Token 223: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0031407589558511972
    2. '):
' → logprob: -5.878140926361084
    3. ' ):' → logprob: -8.378140449523926
    4. ':' → logprob: -9.378140449523926
    5. '():' → logprob: -11.628140449523926
    6. ',' → logprob: -12.128140449523926
    7. ')' → logprob: -13.128140449523926
    8. '   ' → logprob: -13.503140449523926
    9. '):
' → logprob: -14.128140449523926
    10. ']:' → logprob: -14.128140449523926

Token 224: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010952319949865341
    2. '   ' → logprob: -4.635952472686768
    3. ',' → logprob: -7.260952472686768
    4. '<|end|>' → logprob: -8.38595199584961
    5. '	   ' → logprob: -9.01095199584961
    6. ':' → logprob: -10.63595199584961
    7. ':
' → logprob: -10.76095199584961
    8. '<|end|>' → logprob: -11.38595199584961
    9. '):
' → logprob: -11.88595199584961
    10. ' ' → logprob: -12.01095199584961

Token 225: ' u' (ID: 337)
  Prédit: ' u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.4964989423751831
    2. 'u' (adapté à ' u') → logprob: -0.9964989423751831
    3. 'a' → logprob: -4.121499061584473
    4. ' a' → logprob: -5.496499061584473
    5. '   ' → logprob: -6.871499061584473
    6. 'i' → logprob: -7.871499061584473
    7. ' i' → logprob: -8.746499061584473
    8. 's' → logprob: -9.371499061584473
    9. ' s' → logprob: -9.996499061584473
    10. 'v' → logprob: -10.371499061584473

Token 226: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007526897243224084
    2. ' ,' → logprob: -7.250752925872803
    3. ',v' → logprob: -10.125752449035645
    4. ',j' → logprob: -13.625752449035645
    5. ',u' → logprob: -14.375752449035645
    6. ',user' → logprob: -15.500752449035645
    7. ',
' → logprob: -16.12575340270996
    8. '<|end|>' → logprob: -16.12575340270996
    9. ',input' → logprob: -16.37575340270996
    10. ',w' → logprob: -16.50075340270996

Token 227: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.31328028440475464
    2. ' v' → logprob: -1.3132803440093994
    3. ',v' → logprob: -11.43828010559082
    4. ' ' → logprob: -13.06328010559082
    5. '	v' → logprob: -13.18828010559082
    6. '_v' → logprob: -14.18828010559082
    7. 'w' → logprob: -14.18828010559082
    8. 'vv' → logprob: -14.31328010559082
    9. ',' → logprob: -14.43828010559082
    10. ' w' → logprob: -15.56328010559082

Token 228: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.30622661113739014
    2. ' =' → logprob: -1.6812266111373901
    3. ',' → logprob: -2.5562267303466797
    4. ' ,' → logprob: -10.68122673034668
    5. '=input' → logprob: -12.55622673034668
    6. ' ' → logprob: -13.43122673034668
    7. ')' → logprob: -13.55622673034668
    8. ',v' → logprob: -13.68122673034668
    9. ')=' → logprob: -14.05622673034668
    10. ',u' → logprob: -14.18122673034668

Token 229: ' d' (ID: 272)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.026662399992346764
    2. ' w' → logprob: -3.6516623497009277
    3. 'c' → logprob: -8.401662826538086
    4. 'cost' → logprob: -9.901662826538086
    5. 'd' → logprob: -10.901662826538086
    6. 'l' → logprob: -11.026662826538086
    7. ' c' → logprob: -11.776662826538086
    8. 't' → logprob: -12.026662826538086
    9. ' ' → logprob: -12.151662826538086
    10. 'weight' → logprob: -12.401662826538086

Token 230: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132653534412384
    2. ' =' → logprob: -1.313265323638916
    3. ',' → logprob: -13.688265800476074
    4. ' ' → logprob: -14.438265800476074
    5. '=sys' → logprob: -14.938265800476074
    6. '=int' → logprob: -15.063265800476074
    7. '   ' → logprob: -15.063265800476074
    8. ')' → logprob: -15.188265800476074
    9. '=line' → logprob: -15.688265800476074
    10. '=input' → logprob: -15.688265800476074

Token 231: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.01105206273496151
    2. 'map' → logprob: -4.511052131652832
    3. '    ' → logprob: -12.886052131652832
    4. '	map' → logprob: -13.761052131652832
    5. '   ' → logprob: -15.511052131652832
    6. ' ' → logprob: -15.886052131652832
    7. ' list' → logprob: -16.511051177978516
    8. 'm' → logprob: -16.636051177978516
    9. '        ' → logprob: -17.261051177978516
    10. ' tuple' → logprob: -17.511051177978516

Token 232: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.286852345103398e-05
    2. '(input' → logprob: -10.625042915344238
    3. 'int' → logprob: -11.000042915344238
    4. '(' → logprob: -13.500042915344238
    5. '[int' → logprob: -15.875042915344238
    6. '<int' → logprob: -16.125041961669922
    7. '(str' → logprob: -17.000041961669922
    8. ',int' → logprob: -17.375041961669922
    9. '(list' → logprob: -17.500041961669922
    10. '=int' → logprob: -17.750041961669922

Token 233: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04105662927031517
    2. ',input' → logprob: -4.0410566329956055
    3. ',' → logprob: -4.2910566329956055
    4. 'input' → logprob: -5.4160566329956055
    5. '(sys' → logprob: -6.2910566329956055
    6. ')' → logprob: -6.5410566329956055
    7. '(' → logprob: -6.9160566329956055
    8. ' input' → logprob: -9.291056632995605
    9. '(),' → logprob: -9.916056632995605
    10. 'sys' → logprob: -10.666056632995605

Token 234: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00861528143286705
    2. ' input' → logprob: -4.758615493774414
    3. 'sys' → logprob: -14.258615493774414
    4. ' sys' → logprob: -17.508615493774414
    5. '   ' → logprob: -18.008615493774414
    6. '(input' → logprob: -18.383615493774414
    7. ')' → logprob: -18.758615493774414
    8. '_input' → logprob: -18.883615493774414
    9. '	input' → logprob: -19.633615493774414
    10. ' ' → logprob: -19.758615493774414

Token 235: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.676981345459353e-06
    2. '()' → logprob: -12.125005722045898
    3. '(' → logprob: -16.1250057220459
    4. ' ().' → logprob: -16.8750057220459
    5. '.' → logprob: -18.7500057220459
    6. ')' → logprob: -18.8750057220459
    7. '().__' → logprob: -19.1250057220459
    8. '.readline' → logprob: -19.7500057220459
    9. '.split' → logprob: -20.5000057220459
    10. '()
' → logprob: -20.5000057220459

Token 236: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.7432603272027336e-06
    2. 'strip' → logprob: -13.500001907348633
    3. ' split' → logprob: -15.750001907348633
    4. '(split' → logprob: -16.750001907348633
    5. 'rstrip' → logprob: -17.500001907348633
    6. 'spl' → logprob: -18.000001907348633
    7. 'read' → logprob: -19.375001907348633
    8. ')' → logprob: -19.375001907348633
    9. '.split' → logprob: -19.875001907348633
    10. 'sys' → logprob: -20.000001907348633

Token 237: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20156730711460114
    2. ')
' → logprob: -1.70156729221344
    3. '       ' → logprob: -9.826567649841309
    4. ')
' → logprob: -10.201567649841309
    5. '())
' → logprob: -10.701567649841309
    6. '())' → logprob: -10.826567649841309
    7. '()' → logprob: -11.326567649841309
    8. '()
' → logprob: -13.201567649841309
    9. ')`
' → logprob: -13.326567649841309
    10. '   ' → logprob: -13.701567649841309

Token 238: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009635086171329021
    2. '
' → logprob: -4.759634971618652
    3. '<|end|>' → logprob: -7.259634971618652
    4. '   ' → logprob: -8.759634971618652
    5. ',' → logprob: -10.134634971618652
    6. '<|end|>' → logprob: -10.384634971618652
    7. '        
' → logprob: -10.509634971618652
    8. ',
' → logprob: -10.759634971618652
    9. ')' → logprob: -11.884634971618652
    10. '	' → logprob: -12.634634971618652

Token 239: ' for' (ID: 395)
  Prédit: ' edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.4937380850315094
    2. '       ' → logprob: -0.993738055229187
    3. 'edge' → logprob: -4.118738174438477
    4. '   ' → logprob: -7.243738174438477
    5. ' if' → logprob: -7.368738174438477
    6. ' wf' → logprob: -7.368738174438477
    7. ' next' → logprob: -7.868738174438477
    8. 'wf' → logprob: -7.993738174438477
    9. ' u' → logprob: -9.556238174438477
    10. '
' → logprob: -9.556238174438477

Token 240: ' a' (ID: 261)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.9897110462188721
    2. 'x' → logprob: -1.239711046218872
    3. 'w' → logprob: -2.114711046218872
    4. 'node' → logprob: -3.489711046218872
    5. 'i' → logprob: -3.614711046218872
    6. 'key' → logprob: -3.739711046218872
    7. 'neighbor' → logprob: -4.239710807800293
    8. ' x' → logprob: -4.239710807800293
    9. 'start' → logprob: -4.364710807800293
    10. 'a' → logprob: -4.739710807800293

Token 241: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6332645416259766
    2. ' in' → logprob: -0.7582645416259766
    3. ',' → logprob: -7.633264541625977
    4. ' ' → logprob: -9.758264541625977
    5. 'a' → logprob: -10.633264541625977
    6. '	in' → logprob: -10.758264541625977
    7. 'b' → logprob: -11.008264541625977
    8. 'u' → logprob: -11.633264541625977
    9. ' ,' → logprob: -11.758264541625977
    10. 'i' → logprob: -12.133264541625977

Token 242: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003167545364703983
    2. ' b' → logprob: -8.875316619873047
    3. '(b' → logprob: -10.625316619873047
    4. 'c' → logprob: -10.875316619873047
    5. 'i' → logprob: -11.250316619873047
    6. '   ' → logprob: -11.625316619873047
    7. 'u' → logprob: -11.625316619873047
    8. '```' → logprob: -11.625316619873047
    9. ',b' → logprob: -11.750316619873047
    10. 'a' → logprob: -11.750316619873047

Token 243: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10032323002815247
    2. 'in' → logprob: -2.35032320022583
    3. ',' → logprob: -9.850323677062988
    4. ' ' → logprob: -10.725323677062988
    5. 'a' → logprob: -11.475323677062988
    6. 's' → logprob: -12.100323677062988
    7. 'n' → logprob: -12.725323677062988
    8. '	in' → logprob: -12.850323677062988
    9. '  ' → logprob: -13.037823677062988
    10. '   ' → logprob: -13.225323677062988

Token 244: ' ((' (ID: 3536)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5167717933654785
    2. '((' → logprob: -1.0167717933654785
    3. ' ((' → logprob: -3.8917717933654785
    4. ' [(' → logprob: -3.8917717933654785
    5. '(u' → logprob: -8.01677131652832
    6. '([(' → logprob: -8.64177131652832
    7. '[((' → logprob: -8.89177131652832
    8. '[u' → logprob: -9.39177131652832
    9. ' chain' → logprob: -9.64177131652832
    10. ' (' → logprob: -10.01677131652832

Token 245: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.017925387248396873
    2. '(u' → logprob: -4.142925262451172
    3. 'v' → logprob: -7.392925262451172
    4. 'a' → logprob: -7.767925262451172
    5. 'i' → logprob: -7.892925262451172
    6. '   ' → logprob: -9.267925262451172
    7. '0' → logprob: -9.392925262451172
    8. '(i' → logprob: -9.517925262451172
    9. ' u' → logprob: -9.517925262451172
    10. '[u' → logprob: -10.267925262451172

Token 246: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0315626859664917
    2. ',v' → logprob: -3.5315628051757812
    3. ' ,' → logprob: -6.781562805175781
    4. ',b' → logprob: -7.406562805175781
    5. ',d' → logprob: -11.031562805175781
    6. ',w' → logprob: -11.656562805175781
    7. ',a' → logprob: -11.781562805175781
    8. ',y' → logprob: -12.406562805175781
    9. 'v' → logprob: -12.656562805175781
    10. ',
' → logprob: -12.781562805175781

Token 247: '1' (ID: 16)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.3733460009098053
    2. '1' → logprob: -1.248345971107483
    3. ',' → logprob: -4.373345851898193
    4. ' v' → logprob: -4.748345851898193
    5. ',v' → logprob: -6.373345851898193
    6. ' ' → logprob: -7.373345851898193
    7. 'a' → logprob: -8.373346328735352
    8. '-' → logprob: -8.873346328735352
    9. 'u' → logprob: -9.060846328735352
    10. ' ,' → logprob: -9.185846328735352

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012032082304358482
    2. ' ,' → logprob: -7.1262030601501465
    3. ',b' → logprob: -8.001203536987305
    4. ',
' → logprob: -10.876203536987305
    5. ',v' → logprob: -10.876203536987305
    6. '),' → logprob: -11.001203536987305
    7. ',a' → logprob: -13.501203536987305
    8. ',

' → logprob: -13.876203536987305
    9. '),(' → logprob: -13.876203536987305
    10. ',d' → logprob: -14.126203536987305

Token 249: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.005402845796197653
    2. ' v' → logprob: -5.2554030418396
    3. '   ' → logprob: -9.380402565002441
    4. ' ' → logprob: -10.630402565002441
    5. '  ' → logprob: -11.255402565002441
    6. '	v' → logprob: -11.255402565002441
    7. '    ' → logprob: -11.630402565002441
    8. '
' → logprob: -12.255402565002441
    9. '(v' → logprob: -13.067902565002441
    10. 'b' → logprob: -13.067902565002441

Token 250: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -9.722539834911004e-05
    2. ' -' → logprob: -9.250097274780273
    3. '[' → logprob: -14.375097274780273
    4. ')-' → logprob: -15.625097274780273
    5. ' ' → logprob: -16.125097274780273
    6. '1' → logprob: -16.875097274780273
    7. '   ' → logprob: -16.875097274780273
    8. '),' → logprob: -17.000097274780273
    9. ')' → logprob: -17.000097274780273
    10. '0' → logprob: -18.000097274780273

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.77627644513268e-06
    2. '-' → logprob: -12.000008583068848
    3. ' ' → logprob: -13.000008583068848
    4. '```' → logprob: -16.000009536743164
    5. '   ' → logprob: -16.750009536743164
    6. ')' → logprob: -17.437509536743164
    7. '2' → logprob: -17.500009536743164
    8. ' -' → logprob: -18.562509536743164
    9. '  ' → logprob: -19.250009536743164
    10. '
' → logprob: -19.562509536743164

Token 252: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.06555144488811493
    2. ',' → logprob: -2.815551519393921
    3. '):' → logprob: -6.815551280975342
    4. ')' → logprob: -6.940551280975342
    5. ',d' → logprob: -7.315551280975342
    6. 'd' → logprob: -7.815551280975342
    7. '),(' → logprob: -8.5655517578125
    8. ' ),' → logprob: -8.6905517578125
    9. ' ,' → logprob: -10.5655517578125
    10. '),
' → logprob: -11.1905517578125

Token 253: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.3856140077114105
    2. '(v' → logprob: -1.385614037513733
    3. '(b' → logprob: -2.7606139183044434
    4. '(u' → logprob: -5.260613918304443
    5. '   ' → logprob: -7.635613918304443
    6. '       ' → logprob: -8.510614395141602
    7. '           ' → logprob: -9.010614395141602
    8. 'b' → logprob: -9.885614395141602
    9. ' ' → logprob: -9.885614395141602
    10. '    ' → logprob: -10.010614395141602

Token 254: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01818506233394146
    2. ' v' → logprob: -4.018185138702393
    3. 'b' → logprob: -10.393184661865234
    4. '	v' → logprob: -13.643184661865234
    5. '   ' → logprob: -13.643184661865234
    6. ' b' → logprob: -13.893184661865234
    7. ' ' → logprob: -14.393184661865234
    8. 'u' → logprob: -15.643184661865234
    9. ')v' → logprob: -15.893184661865234
    10. '(v' → logprob: -16.143184661865234

Token 255: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.842555426876061e-06
    2. ' -' → logprob: -12.250004768371582
    3. 'u' → logprob: -16.7500057220459
    4. ',' → logprob: -17.6250057220459
    5. ' ' → logprob: -18.3750057220459
    6. '-u' → logprob: -18.3750057220459
    7. '   ' → logprob: -18.5000057220459
    8. '1' → logprob: -19.0000057220459
    9. '[' → logprob: -19.7500057220459
    10. '
' → logprob: -19.8750057220459

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.750004768371582
    3. 'u' → logprob: -13.250004768371582
    4. '-' → logprob: -15.625004768371582
    5. '0' → logprob: -16.5000057220459
    6. '```' → logprob: -17.7500057220459
    7. 'user' → logprob: -18.0000057220459
    8. '<|end|>' → logprob: -18.8750057220459
    9. '   ' → logprob: -19.2500057220459
    10. 'a' → logprob: -19.8750057220459

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006559623870998621
    2. ' ,' → logprob: -7.3756561279296875
    3. ',u' → logprob: -10.500656127929688
    4. ',a' → logprob: -13.875656127929688
    5. 'u' → logprob: -14.625656127929688
    6. ',
' → logprob: -16.125656127929688
    7. '   ' → logprob: -16.250656127929688
    8. 'a' → logprob: -16.500656127929688
    9. ' ' → logprob: -16.625656127929688
    10. '‌,' → logprob: -18.000656127929688

Token 258: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.023271219804883003
    2. ' u' → logprob: -3.773271322250366
    3. ' ' → logprob: -11.523271560668945
    4. '	u' → logprob: -12.148271560668945
    5. 'a' → logprob: -12.398271560668945
    6. '   ' → logprob: -12.898271560668945
    7. '[u' → logprob: -14.273271560668945
    8. '(u' → logprob: -14.773271560668945
    9. ' ' → logprob: -14.773271560668945
    10. '
' → logprob: -14.773271560668945

Token 259: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -8.180258191714529e-06
    2. ' -' → logprob: -12.000008583068848
    3. ',' → logprob: -13.375008583068848
    4. '1' → logprob: -16.37500762939453
    5. '```' → logprob: -16.37500762939453
    6. '[' → logprob: -16.87500762939453
    7. '-,' → logprob: -17.25000762939453
    8. '	' → logprob: -17.25000762939453
    9. ',-' → logprob: -17.37500762939453
    10. '-
' → logprob: -17.75000762939453

Token 260: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.470901229884475e-05
    2. 'u' → logprob: -9.50008487701416
    3. '0' → logprob: -11.87508487701416
    4. ')' → logprob: -13.50008487701416
    5. '-' → logprob: -14.37508487701416
    6. ' ' → logprob: -15.12508487701416
    7. 'a' → logprob: -15.62508487701416
    8. '```' → logprob: -16.000083923339844
    9. 'user' → logprob: -17.375083923339844
    10. '[u' → logprob: -17.500083923339844

Token 261: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5478069186210632
    2. ')):' → logprob: -1.047806978225708
    3. ')):
' → logprob: -3.172806978225708
    4. '):
' → logprob: -3.672806978225708
    5. ',' → logprob: -6.172806739807129
    6. '))' → logprob: -6.797806739807129
    7. ')):
' → logprob: -8.047806739807129
    8. '):
' → logprob: -9.922806739807129
    9. ' ):' → logprob: -10.047806739807129
    10. '):

' → logprob: -10.172806739807129

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004385844804346561
    2. ':
' → logprob: -6.629385948181152
    3. ':' → logprob: -7.004385948181152
    4. ',' → logprob: -7.879385948181152
    5. '):
' → logprob: -7.879385948181152
    6. '       ' → logprob: -8.129385948181152
    7. '
' → logprob: -8.379385948181152
    8. '   ' → logprob: -9.129385948181152
    9. '          ' → logprob: -9.254385948181152
    10. '            
' → logprob: -9.254385948181152

Token 263: ' edge' (ID: 11165)
  Prédit: ' edge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edge' → logprob: -0.29643940925598145
    2. '           ' → logprob: -2.4214394092559814
    3. 'edge' (adapté à ' edge') → logprob: -2.9214394092559814
    4. '               ' → logprob: -3.0464394092559814
    5. ' wf' → logprob: -3.6714394092559814
    6. 'wf' → logprob: -4.046439170837402
    7. '   ' → logprob: -4.671439170837402
    8. ' if' → logprob: -4.796439170837402
    9. 'if' → logprob: -6.796439170837402
    10. ' ' → logprob: -7.108939170837402

Token 264: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -4.723352049040841e-06
    2. 'a' → logprob: -12.375004768371582
    3. ' [' → logprob: -15.375004768371582
    4. '[' → logprob: -15.750004768371582
    5. '][' → logprob: -17.000003814697266
    6. ')[' → logprob: -17.000003814697266
    7. '[u' → logprob: -17.125003814697266
    8. '}[' → logprob: -18.500003814697266
    9. '```' → logprob: -18.750003814697266
    10. '
' → logprob: -19.125003814697266

Token 265: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00023286080977413803
    2. ']' → logprob: -9.375232696533203
    3. '[a' → logprob: -9.375232696533203
    4. ' ][' → logprob: -10.750232696533203
    5. ')[' → logprob: -11.000232696533203
    6. '[b' → logprob: -11.375232696533203
    7. ']][' → logprob: -13.125232696533203
    8. '[' → logprob: -13.125232696533203
    9. ')][' → logprob: -13.250232696533203
    10. '   ' → logprob: -13.500232696533203

Token 266: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.704273118884885e-07
    2. '[b' → logprob: -15.250000953674316
    3. '	b' → logprob: -15.750000953674316
    4. ' b' → logprob: -16.25
    5. '][' → logprob: -16.25
    6. ']' → logprob: -18.125
    7. ')b' → logprob: -18.25
    8. '   ' → logprob: -18.375
    9. '           ' → logprob: -19.125
    10. '>b' → logprob: -19.75

Token 267: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021244358271360397
    2. ']=' → logprob: -3.8962442874908447
    3. ' ]' → logprob: -7.771244525909424
    4. '=' → logprob: -8.396244049072266
    5. ' =' → logprob: -10.646244049072266
    6. '],' → logprob: -11.396244049072266
    7. '[' → logprob: -12.021244049072266
    8. 'd' → logprob: -12.521244049072266
    9. ']+=' → logprob: -12.896244049072266
    10. ')' → logprob: -13.021244049072266

Token 268: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12694847583770752
    2. ' =' → logprob: -2.126948356628418
    3. '=min' → logprob: -11.876948356628418
    4. '[' → logprob: -12.626948356628418
    5. '=d' → logprob: -13.251948356628418
    6. '<' → logprob: -13.251948356628418
    7. '+=' → logprob: -13.751948356628418
    8. ',' → logprob: -14.001948356628418
    9. '>' → logprob: -14.251948356628418
    10. ')' → logprob: -14.626948356628418

Token 269: ' wf' (ID: 99382)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.019450625404715538
    2. ' d' → logprob: -4.519450664520264
    3. 'min' → logprob: -5.019450664520264
    4. ' min' → logprob: -6.394450664520264
    5. ' ' → logprob: -11.019450187683105
    6. 'inf' → logprob: -11.019450187683105
    7. '   ' → logprob: -11.769450187683105
    8. 'int' → logprob: -11.894450187683105
    9. '	d' → logprob: -11.956950187683105
    10. 'max' → logprob: -12.269450187683105

Token 270: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00026300468016415834
    2. 'a' → logprob: -8.250263214111328
    3. '[' → logprob: -13.875263214111328
    4. ' [' → logprob: -15.375263214111328
    5. ' a' → logprob: -15.750263214111328
    6. '[i' → logprob: -16.500263214111328
    7. '```' → logprob: -16.625263214111328
    8. '[b' → logprob: -17.000263214111328
    9. '[u' → logprob: -17.000263214111328
    10. '(a' → logprob: -17.250263214111328

Token 271: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00044103997061029077
    2. ']' → logprob: -8.12544059753418
    3. '[b' → logprob: -9.50044059753418
    4. '[a' → logprob: -9.87544059753418
    5. ' ][' → logprob: -12.25044059753418
    6. '[' → logprob: -12.62544059753418
    7. '}[' → logprob: -13.00044059753418
    8. '"][' → logprob: -13.12544059753418
    9. ')[' → logprob: -13.37544059753418
    10. ']][' → logprob: -14.00044059753418

Token 272: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.107425062713446e-06
    2. '[b' → logprob: -12.250006675720215
    3. ' b' → logprob: -14.375006675720215
    4. ']' → logprob: -14.375006675720215
    5. 'j' → logprob: -15.500006675720215
    6. '][' → logprob: -15.875006675720215
    7. 'a' → logprob: -15.875006675720215
    8. '(b' → logprob: -16.25000762939453
    9. '{' → logprob: -16.37500762939453
    10. ')b' → logprob: -16.62500762939453

Token 273: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6357282996177673
    2. ']' → logprob: -1.385728359222412
    3. ' =' → logprob: -1.760728359222412
    4. ']=' → logprob: -3.510728359222412
    5. 'd' → logprob: -4.510728359222412
    6. '=d' → logprob: -5.635728359222412
    7. ' ]' → logprob: -7.135728359222412
    8. '[' → logprob: -7.385728359222412
    9. ' if' → logprob: -7.635728359222412
    10. ')' → logprob: -7.760728359222412

Token 274: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14037729799747467
    2. ' =' → logprob: -2.1403772830963135
    3. '=d' → logprob: -4.640377521514893
    4. 'd' → logprob: -6.015377521514893
    5. '[d' → logprob: -6.890377521514893
    6. ' d' → logprob: -9.265377044677734
    7. '=min' → logprob: -10.265377044677734
    8. '[' → logprob: -10.390377044677734
    9. ',d' → logprob: -11.015377044677734
    10. ' ' → logprob: -11.265377044677734

Token 275: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.027445359155535698
    2. ' d' → logprob: -3.6524453163146973
    3. 'min' → logprob: -7.527445316314697
    4. ' min' → logprob: -7.652445316314697
    5. '   ' → logprob: -10.152445793151855
    6. '	d' → logprob: -10.777445793151855
    7. '           ' → logprob: -11.152445793151855
    8. ' ' → logprob: -11.402445793151855
    9. 'int' → logprob: -11.527445793151855
    10. '  ' → logprob: -11.652445793151855

Token 276: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 278: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42487475275993347
    2. 'for' → logprob: -1.1748747825622559
    3. ' for' → logprob: -3.299874782562256
    4. '```' → logprob: -8.924874305725098
    5. '    
' → logprob: -9.299874305725098
    6. '
' → logprob: -9.424874305725098
    7. 'def' → logprob: -9.924874305725098
    8. '#' (adapté à ' #') → logprob: -10.799874305725098
    9. ')' → logprob: -12.299874305725098
    10. '	for' → logprob: -12.549874305725098

Token 279: ' Floyd' (ID: 76639)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04760156199336052
    2. ' for' → logprob: -3.6726014614105225
    3. '#' → logprob: -4.422601699829102
    4. '   ' → logprob: -5.547601699829102
    5. 'dist' → logprob: -5.547601699829102
    6. 'def' → logprob: -8.297601699829102
    7. ' #' → logprob: -8.547601699829102
    8. ' dist' → logprob: -8.922601699829102
    9. 'dp' → logprob: -9.047601699829102
    10. 'distance' → logprob: -9.047601699829102

Token 280: '-W' (ID: 14439)
  Prédit: 'war'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'war' → logprob: -1.03532874584198
    2. '-war' → logprob: -1.03532874584198
    3. '-W' → logprob: -1.78532874584198
    4. 'War' → logprob: -2.4103288650512695
    5. '_w' → logprob: -3.9103288650512695
    6. 'def' → logprob: -5.2853288650512695
    7. 'for' → logprob: -6.4103288650512695
    8. '{' → logprob: -7.0353288650512695
    9. '–' → logprob: -7.4103288650512695
    10. '   ' → logprob: -7.5353288650512695

Token 281: 'ar' (ID: 277)
  Prédit: 'ar'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.0023689894005656242
    2. 'arshal' → logprob: -6.252368927001953
    3. '```' → logprob: -8.377368927001953
    4. 'ars' → logprob: -10.127368927001953
    5. 'arst' → logprob: -10.627368927001953
    6. '
' → logprob: -10.877368927001953
    7. 'arle' → logprob: -11.127368927001953
    8. '``' → logprob: -11.502368927001953
    9. '   ' → logprob: -11.752368927001953
    10. 'al' → logprob: -11.877368927001953

Token 282: 'shall' (ID: 30275)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.1612088531255722
    2. 'shall' → logprob: -1.9112088680267334
    3. 'sh' → logprob: -8.161209106445312
    4. 'll' → logprob: -8.286209106445312
    5. 's' → logprob: -8.536209106445312
    6. '```' → logprob: -9.661209106445312
    7. 'hall' → logprob: -10.286209106445312
    8. '–' → logprob: -10.536209106445312
    9. 'shal' → logprob: -10.786209106445312
    10. 'd' → logprob: -11.036209106445312

Token 283: ' using' (ID: 2360)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7226284146308899
    2. 'for' → logprob: -1.0976283550262451
    3. '   ' → logprob: -1.7226283550262451
    4. '
' → logprob: -6.347628593444824
    5. '    
' → logprob: -8.347628593444824
    6. ' algorithm' → logprob: -9.222628593444824
    7. '	for' → logprob: -9.597628593444824
    8. ' ' → logprob: -10.847628593444824
    9. '```' → logprob: -11.097628593444824
    10. '  
' → logprob: -11.597628593444824

Token 284: ' unnecessary' (ID: 42963)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10869189351797104
    2. 'chain' → logprob: -2.483691930770874
    3. 'nested' → logprob: -4.483691692352295
    4. 'range' → logprob: -5.983691692352295
    5. ' for' → logprob: -6.233691692352295
    6. 'lambda' → logprob: -6.858691692352295
    7. ' chain' → logprob: -7.108691692352295
    8. ' nested' → logprob: -7.733691692352295
    9. 'reduce' → logprob: -8.483692169189453
    10. 'next' → logprob: -8.483692169189453

Token 285: ' comprehension' (ID: 91423)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.9973832964897156
    2. 'nested' → logprob: -1.6223833560943604
    3. 'lambda' → logprob: -1.7473833560943604
    4. 'for' → logprob: -2.4973833560943604
    5. 'reduce' → logprob: -2.7473833560943604
    6. '(lambda' → logprob: -3.1223833560943604
    7. ' nested' → logprob: -3.4973833560943604
    8. ' chain' → logprob: -4.747383117675781
    9. 'chains' → logprob: -5.122383117675781
    10. 'ch' → logprob: -5.497383117675781

Token 286: ' and' (ID: 326)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20418602228164673
    2. ' for' → logprob: -1.954185962677002
    3. 'for' → logprob: -3.704185962677002
    4. '_' → logprob: -4.579185962677002
    5. ' _' → logprob: -5.829185962677002
    6. '
' → logprob: -6.829185962677002
    7. '[' → logprob: -7.329185962677002
    8. ' next' → logprob: -7.454185962677002
    9. '[
' → logprob: -7.579185962677002
    10. ' [' → logprob: -7.704185962677002

Token 287: ' chain' (ID: 13464)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.4874508380889893
    2. 'for' → logprob: -1.7374508380889893
    3. 'chain' → logprob: -1.8624508380889893
    4. 'reduce' → logprob: -1.9874508380889893
    5. 'map' → logprob: -2.4874508380889893
    6. 'lambda' → logprob: -2.8624508380889893
    7. 'nested' → logprob: -2.8624508380889893
    8. 'next' → logprob: -3.3624508380889893
    9. 'tuple' → logprob: -3.8624508380889893
    10. 'all' → logprob: -4.11245059967041

Token 288: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32493674755096436
    2. 'for' → logprob: -1.8249367475509644
    3. ' for' → logprob: -2.199936866760254
    4. '
' → logprob: -6.449936866760254
    5. '```' → logprob: -6.824936866760254
    6. ':' → logprob: -8.074936866760254
    7. 's' → logprob: -8.199936866760254
    8. '    
' → logprob: -8.449936866760254
    9. ':
' → logprob: -8.449936866760254
    10. '[
' → logprob: -8.824936866760254

Token 289: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5055083632469177
    2. 'for' → logprob: -1.2555084228515625
    3. ' for' → logprob: -2.2555084228515625
    4. '_' → logprob: -5.8805084228515625
    5. '```' → logprob: -6.0055084228515625
    6. '[
' → logprob: -8.130508422851562
    7. '
' → logprob: -8.755508422851562
    8. 'next' → logprob: -9.005508422851562
    9. '[' → logprob: -9.130508422851562
    10. 'list' → logprob: -9.255508422851562

Token 290: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29149943590164185
    2. '_' → logprob: -1.666499376296997
    3. '[' → logprob: -3.916499376296997
    4. 'wf' → logprob: -4.291499614715576
    5. 'next' → logprob: -4.791499614715576
    6. 'all' → logprob: -4.916499614715576
    7. '   ' → logprob: -6.041499614715576
    8. '_=' → logprob: -6.166499614715576
    9. '[(' → logprob: -6.291499614715576
    10. '[next' → logprob: -6.416499614715576

Token 291: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00216905539855361
    2. ' k' → logprob: -6.877169132232666
    3. '_k' → logprob: -7.252169132232666
    4. 'i' → logprob: -9.252168655395508
    5. '_' → logprob: -9.377168655395508
    6. 'via' → logprob: -9.752168655395508
    7. '(k' → logprob: -10.002168655395508
    8. 'w' → logprob: -10.002168655395508
    9. 't' → logprob: -10.502168655395508
    10. '   ' → logprob: -11.252168655395508

Token 292: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03816979005932808
    2. 'in' → logprob: -3.2881698608398438
    3. ',' → logprob: -9.163169860839844
    4. ' ' → logprob: -11.538169860839844
    5. 'chain' → logprob: -13.038169860839844
    6. '   ' → logprob: -13.413169860839844
    7. '0' → logprob: -13.413169860839844
    8. 'n' → logprob: -13.913169860839844
    9. '	in' → logprob: -13.913169860839844
    10. '```' → logprob: -14.288169860839844

Token 293: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002783004427328706
    2. 'j' → logprob: -6.752782821655273
    3. ' i' → logprob: -7.502782821655273
    4. '(i' → logprob: -7.502782821655273
    5. 'v' → logprob: -8.752782821655273
    6. 'l' → logprob: -9.252782821655273
    7. 'chain' → logprob: -10.002782821655273
    8. '```' → logprob: -10.002782821655273
    9. 'w' → logprob: -10.627782821655273
    10. '(' → logprob: -11.127782821655273

Token 294: ',' (ID: 11)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5822156667709351
    2. ' in' → logprob: -0.8322156667709351
    3. ',' → logprob: -5.082215785980225
    4. ' ' → logprob: -10.957215309143066
    5. ')' → logprob: -12.207215309143066
    6. 'n' → logprob: -12.332215309143066
    7. '   ' → logprob: -12.582215309143066
    8. ' ,' → logprob: -12.832215309143066
    9. '	in' → logprob: -12.832215309143066
    10. '```' → logprob: -13.082215309143066

Token 295: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.130576806142926e-05
    2. ' j' → logprob: -10.375031471252441
    3. '```' → logprob: -16.875030517578125
    4. '	j' → logprob: -17.750030517578125
    5. '_j' → logprob: -18.000030517578125
    6. 'k' → logprob: -18.625030517578125
    7. ',j' → logprob: -18.750030517578125
    8. '$j' → logprob: -19.125030517578125
    9. 'b' → logprob: -19.250030517578125
    10. '(j' → logprob: -20.000030517578125

Token 296: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20142202079296112
    2. 'in' → logprob: -1.7014219760894775
    3. '   ' → logprob: -13.451421737670898
    4. 'n' → logprob: -13.701421737670898
    5. 'chain' → logprob: -13.701421737670898
    6. ',' → logprob: -13.826421737670898
    7. '	in' → logprob: -13.826421737670898
    8. ' ' → logprob: -14.076421737670898
    9. 's' → logprob: -14.826421737670898
    10. '  ' → logprob: -15.201421737670898

Token 297: ' ((' (ID: 3536)
  Prédit: 'chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'chain' → logprob: -0.39763858914375305
    2. '((' → logprob: -1.1476385593414307
    3. 'product' → logprob: -4.64763879776001
    4. ' chain' → logprob: -8.022638320922852
    5. '(chain' → logprob: -8.022638320922852
    6. '[(' → logprob: -8.522638320922852
    7. '(((' → logprob: -9.022638320922852
    8. 'zip' → logprob: -9.647638320922852
    9. ' ((' → logprob: -10.647638320922852
    10. ' product' → logprob: -11.397638320922852

Token 298: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0016467304667457938
    2. 'i' → logprob: -6.876646518707275
    3. 'x' → logprob: -8.376646995544434
    4. '(k' → logprob: -8.751646995544434
    5. 'a' → logprob: -9.001646995544434
    6. 'z' → logprob: -10.626646995544434
    7. 'chain' → logprob: -10.876646995544434
    8. ')' → logprob: -11.251646995544434
    9. '(i' → logprob: -12.126646995544434
    10. 'l' → logprob: -12.376646995544434

Token 299: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01020400132983923
    2. ',i' → logprob: -4.885203838348389
    3. ',k' → logprob: -6.885203838348389
    4. ' ,' → logprob: -6.885203838348389
    5. ',j' → logprob: -7.885203838348389
    6. '   ' → logprob: -9.885204315185547
    7. ' for' → logprob: -10.260204315185547
    8. 'for' → logprob: -10.635204315185547
    9. ' ' → logprob: -11.260204315185547
    10. ',
' → logprob: -12.135204315185547

Token 300: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.000156577822053805
    2. 'j' → logprob: -9.00015640258789
    3. ' i' → logprob: -10.50015640258789
    4. 'k' → logprob: -12.50015640258789
    5. '```' → logprob: -14.37515640258789
    6. '   ' → logprob: -15.25015640258789
    7. ')' → logprob: -15.87515640258789
    8. '(i' → logprob: -16.25015640258789
    9. ',i' → logprob: -16.25015640258789
    10. '	i' → logprob: -16.37515640258789

Token 301: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005664954078383744
    2. ',j' → logprob: -7.625566482543945
    3. ' ,' → logprob: -9.875566482543945
    4. 'j' → logprob: -10.875566482543945
    5. ',k' → logprob: -12.250566482543945
    6. ' j' → logprob: -13.750566482543945
    7. '   ' → logprob: -14.500566482543945
    8. ',
' → logprob: -15.375566482543945
    9. ')' → logprob: -15.375566482543945
    10. ' ' → logprob: -16.125566482543945

Token 302: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.265633419388905e-05
    2. ' j' → logprob: -9.750062942504883
    3. 'k' → logprob: -12.625062942504883
    4. '   ' → logprob: -15.000062942504883
    5. ')' → logprob: -15.250062942504883
    6. ' ' → logprob: -15.875062942504883
    7. '```' → logprob: -16.000062942504883
    8. '  ' → logprob: -16.750062942504883
    9. '	j' → logprob: -16.750062942504883
    10. '    ' → logprob: -16.875062942504883

Token 303: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04927777871489525
    2. 'for' → logprob: -3.6742777824401855
    3. ' for' → logprob: -3.7992777824401855
    4. ' )' → logprob: -8.924277305603027
    5. '   ' → logprob: -9.299277305603027
    6. ' in' → logprob: -10.299277305603027
    7. ')
' → logprob: -11.174277305603027
    8. '```' → logprob: -11.674277305603027
    9. '       ' → logprob: -11.924277305603027
    10. '    ' → logprob: -12.174277305603027

Token 304: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03675695136189461
    2. 'for' → logprob: -3.536756992340088
    3. ' in' → logprob: -5.036756992340088
    4. ')' → logprob: -8.03675651550293
    5. '   ' → logprob: -10.03675651550293
    6. 'in' → logprob: -10.03675651550293
    7. '    ' → logprob: -10.53675651550293
    8. ' ' → logprob: -11.16175651550293
    9. '	for' → logprob: -11.91175651550293
    10. '
' → logprob: -12.28675651550293

Token 305: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.00499441334977746
    2. ' k' → logprob: -5.5049943923950195
    3. 'i' → logprob: -7.3799943923950195
    4. 'range' → logprob: -9.00499439239502
    5. ' in' → logprob: -9.50499439239502
    6. 'j' → logprob: -10.25499439239502
    7. ' range' → logprob: -10.50499439239502
    8. ' i' → logprob: -10.75499439239502
    9. 'in' → logprob: -12.12999439239502
    10. ' j' → logprob: -13.12999439239502

Token 306: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1797882318496704
    2. 'in' → logprob: -1.8047882318496704
    3. ',' → logprob: -10.804788589477539
    4. ')' → logprob: -11.304788589477539
    5. ' ' → logprob: -12.429788589477539
    6. '   ' → logprob: -13.054788589477539
    7. 'range' → logprob: -13.804788589477539
    8. '0' → logprob: -14.054788589477539
    9. '
' → logprob: -14.429788589477539
    10. 'for' → logprob: -14.679788589477539

Token 307: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024763736873865128
    2. ' range' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.627476692199707
    4. 'chain' → logprob: -15.752476692199707
    5. '(range' → logprob: -16.12747573852539
    6. ' ' → logprob: -16.50247573852539
    7. '
' → logprob: -16.87747573852539
    8. '	range' → logprob: -16.87747573852539
    9. '  ' → logprob: -17.25247573852539
    10. '0' → logprob: -17.50247573852539

Token 308: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0009561245678924024
    2. 'V' → logprob: -7.000956058502197
    3. '(' → logprob: -11.250956535339355
    4. '   ' → logprob: -11.500956535339355
    5. ')' → logprob: -12.750956535339355
    6. '
' → logprob: -12.875956535339355
    7. ',' → logprob: -13.000956535339355
    8. ' V' → logprob: -13.125956535339355
    9. '               ' → logprob: -13.375956535339355
    10. '       ' → logprob: -13.375956535339355

Token 309: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39394909143447876
    2. 'for' → logprob: -1.143949031829834
    3. ')' → logprob: -5.018949031829834
    4. '   ' → logprob: -8.393949508666992
    5. ' ' → logprob: -9.393949508666992
    6. '
' → logprob: -10.018949508666992
    7. '           ' → logprob: -10.393949508666992
    8. '       ' → logprob: -10.768949508666992
    9. '	for' → logprob: -11.143949508666992
    10. '               ' → logprob: -12.268949508666992

Token 310: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2525290846824646
    2. 'for' → logprob: -1.5025291442871094
    3. '           ' → logprob: -8.37752914428711
    4. '   ' → logprob: -8.50252914428711
    5. '       ' → logprob: -9.87752914428711
    6. '               ' → logprob: -10.00252914428711
    7. ' ' → logprob: -10.75252914428711
    8. '
' → logprob: -11.62752914428711
    9. '                   ' → logprob: -11.87752914428711
    10. '             ' → logprob: -12.37752914428711

Token 311: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08708325773477554
    2. 'i' → logprob: -3.087083339691162
    3. 'range' → logprob: -3.337083339691162
    4. ' range' → logprob: -6.587083339691162
    5. ' j' → logprob: -7.212083339691162
    6. 'V' → logprob: -9.962082862854004
    7. ' i' → logprob: -9.962082862854004
    8. '   ' → logprob: -11.837082862854004
    9. '(range' → logprob: -12.837082862854004
    10. ' ' → logprob: -14.087082862854004

Token 312: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06299169361591339
    2. 'in' → logprob: -2.8129916191101074
    3. 'range' → logprob: -6.937991619110107
    4. '(range' → logprob: -10.187992095947266
    5. ' range' → logprob: -11.937992095947266
    6. ')' → logprob: -12.437992095947266
    7. '(V' → logprob: -12.937992095947266
    8. ' ' → logprob: -13.562992095947266
    9. '   ' → logprob: -14.437992095947266
    10. 'for' → logprob: -15.812992095947266

Token 313: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0024829115718603134
    2. ' range' → logprob: -6.002482891082764
    3. 'V' → logprob: -12.502483367919922
    4. '(range' → logprob: -12.627483367919922
    5. 'chain' → logprob: -16.377483367919922
    6. ' V' → logprob: -16.627483367919922
    7. '(V' → logprob: -17.127483367919922
    8. '	range' → logprob: -17.377483367919922
    9. '
' → logprob: -17.502483367919922
    10. ' ' → logprob: -17.502483367919922

Token 314: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.24198156595230103
    2. 'V' → logprob: -1.6169815063476562
    3. 'range' → logprob: -4.116981506347656
    4. ' range' → logprob: -10.116981506347656
    5. ')' → logprob: -10.616981506347656
    6. ' V' → logprob: -11.116981506347656
    7. '(range' → logprob: -11.491981506347656
    8. 'Range' → logprob: -11.616981506347656
    9. 'for' → logprob: -11.991981506347656
    10. '
' → logprob: -12.366981506347656

Token 315: ')' (ID: 8)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.474553644657135
    2. 'for' → logprob: -0.974553644657135
    3. ')' → logprob: -7.84955358505249
    4. '	for' → logprob: -10.724554061889648
    5. ' ' → logprob: -11.099554061889648
    6. '           ' → logprob: -11.349554061889648
    7. '               ' → logprob: -11.974554061889648
    8. ' in' → logprob: -12.599554061889648
    9. '   ' → logprob: -13.099554061889648
    10. '       ' → logprob: -13.224554061889648

Token 316: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5759658217430115
    2. 'for' → logprob: -0.8259658217430115
    3. '           ' → logprob: -11.075965881347656
    4. '               ' → logprob: -12.825965881347656
    5. '	for' → logprob: -13.200965881347656
    6. ')' → logprob: -13.825965881347656
    7. ' ' → logprob: -13.825965881347656
    8. '   ' → logprob: -14.075965881347656
    9. '             ' → logprob: -14.200965881347656
    10. '       ' → logprob: -14.325965881347656

Token 317: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.027327511459589005
    2. 'range' → logprob: -3.777327537536621
    3. ' j' → logprob: -6.027327537536621
    4. ' range' → logprob: -6.402327537536621
    5. '   ' → logprob: -13.902327537536621
    6. '(range' → logprob: -14.152327537536621
    7. 'k' → logprob: -14.527327537536621
    8. ' ' → logprob: -14.527327537536621
    9. ')' → logprob: -14.777327537536621
    10. '  ' → logprob: -15.152327537536621

Token 318: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4753755033016205
    2. ' in' → logprob: -0.9753755331039429
    3. 'range' → logprob: -7.100375652313232
    4. '(range' → logprob: -7.975375652313232
    5. ')' → logprob: -9.225375175476074
    6. ' range' → logprob: -11.350375175476074
    7. '(V' → logprob: -11.475375175476074
    8. '   ' → logprob: -12.600375175476074
    9. ' ' → logprob: -12.975375175476074
    10. '(' → logprob: -14.100375175476074

Token 319: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005243002902716398
    2. ' range' → logprob: -5.255242824554443
    3. '(range' → logprob: -11.630243301391602
    4. '(V' → logprob: -15.255243301391602
    5. 'V' → logprob: -16.7552433013916
    6. '	range' → logprob: -18.6302433013916
    7. ')' → logprob: -18.7552433013916
    8. '.range' → logprob: -20.1302433013916
    9. ' ' → logprob: -20.2552433013916
    10. ' V' → logprob: -20.2552433013916

Token 320: '(V' (ID: 16949)
  Prédit: '(V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(V' → logprob: -0.0007118358626030385
    2. 'range' → logprob: -7.375711917877197
    3. 'V' → logprob: -9.625711441040039
    4. '(range' → logprob: -11.125711441040039
    5. ' range' → logprob: -12.500711441040039
    6. 'Range' → logprob: -15.375711441040039
    7. ' (' → logprob: -15.500711441040039
    8. '
' → logprob: -15.625711441040039
    9. '<V' → logprob: -16.25071144104004
    10. ')' → logprob: -16.62571144104004

Token 321: ')):
' (ID: 22530)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4742887616157532
    2. '):' → logprob: -0.9742887616157532
    3. '):
' → logprob: -8.974288940429688
    4. '   ' → logprob: -10.849288940429688
    5. '):

' → logprob: -10.974288940429688
    6. ')' → logprob: -11.099288940429688
    7. ' ):
' → logprob: -11.474288940429688
    8. ' ):' → logprob: -11.724288940429688
    9. '       ' → logprob: -12.099288940429688
    10. '           ' → logprob: -12.849288940429688

Token 322: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031837786082178354
    2. ':' → logprob: -6.378183841705322
    3. ' if' → logprob: -8.378183364868164
    4. '   ' → logprob: -8.503183364868164
    5. ' wf' → logprob: -8.628183364868164
    6. ':
' → logprob: -8.878183364868164
    7. '           ' → logprob: -9.128183364868164
    8. '):
' → logprob: -9.128183364868164
    9. '               ' → logprob: -9.253183364868164
    10. 'wf' → logprob: -9.628183364868164

Token 323: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' (adapté à ' wf') → logprob: -0.036158785223960876
    2. '           ' → logprob: -3.536158800125122
    3. ' wf' → logprob: -5.411158561706543
    4. '       ' → logprob: -7.036158561706543
    5. 'if' → logprob: -7.911158561706543
    6. '               ' → logprob: -8.036158561706543
    7. '   ' → logprob: -9.161158561706543
    8. 'w' → logprob: -10.161158561706543
    9. 'tmp' → logprob: -11.286158561706543
    10. 'wt' → logprob: -11.286158561706543

Token 324: '_' (ID: 62)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.13388703338569e-06
    2. '[j' → logprob: -12.375009536743164
    3. '[k' → logprob: -12.625009536743164
    4. '[' → logprob: -14.625009536743164
    5. ')[' → logprob: -15.375009536743164
    6. '][' → logprob: -15.375009536743164
    7. ' [' → logprob: -16.250009536743164
    8. '
' → logprob: -16.375009536743164
    9. '[I' → logprob: -16.500009536743164
    10. 'i' → logprob: -16.625009536743164

Token 325: 'ik' (ID: 507)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006348780007101595
    2. '[k' → logprob: -8.250635147094727
    3. '[j' → logprob: -8.250635147094727
    4. '[next' → logprob: -10.125635147094727
    5. '[' → logprob: -10.375635147094727
    6. 'i' → logprob: -10.750635147094727
    7. 'next' → logprob: -12.125635147094727
    8. '=' → logprob: -13.625635147094727
    9. ' [' → logprob: -13.750635147094727
    10. '[w' → logprob: -13.875635147094727

Token 326: ',' (ID: 11)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08565238863229752
    2. '[j' → logprob: -3.2106523513793945
    3. '][' → logprob: -3.7106523513793945
    4. '[k' → logprob: -4.3356523513793945
    5. ' =' → logprob: -6.5856523513793945
    6. '=' → logprob: -6.7106523513793945
    7. 'j' → logprob: -8.460652351379395
    8. '[' → logprob: -8.835652351379395
    9. '   ' → logprob: -8.960652351379395
    10. ']' → logprob: -8.960652351379395

Token 327: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.00033534664544276893
    2. ' wf' → logprob: -8.500335693359375
    3. 'inf' → logprob: -9.875335693359375
    4. 'wk' → logprob: -10.000335693359375
    5. 'wi' → logprob: -11.750335693359375
    6. 'wj' → logprob: -12.000335693359375
    7. 'edge' → logprob: -12.000335693359375
    8. 'ik' → logprob: -12.500335693359375
    9. 'w' → logprob: -13.000335693359375
    10. 'next' → logprob: -13.875335693359375

Token 328: '_k' (ID: 11637)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2677922248840332
    2. '_i' → logprob: -2.642792224884033
    3. 'ij' → logprob: -2.767792224884033
    4. ' =' → logprob: -2.767792224884033
    5. '_' → logprob: -3.642792224884033
    6. 'i' → logprob: -5.642792224884033
    7. '_j' → logprob: -5.767792224884033
    8. '[i' → logprob: -6.267792224884033
    9. 'kj' → logprob: -6.517792224884033
    10. '=i' → logprob: -7.142792224884033

Token 329: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00136678502894938
    2. '_j' → logprob: -6.62636661529541
    3. 'i' → logprob: -11.12636661529541
    4. '=' → logprob: -11.50136661529541
    5. 'k' → logprob: -12.12636661529541
    6. ' =' → logprob: -13.50136661529541
    7. 'jk' → logprob: -13.62636661529541
    8. '```' → logprob: -13.62636661529541
    9. ' j' → logprob: -13.87636661529541
    10. '
' → logprob: -14.00136661529541

Token 330: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38699379563331604
    2. ' =' → logprob: -1.1369937658309937
    3. ',' → logprob: -9.011993408203125
    4. '=w' → logprob: -15.261993408203125
    5. ' ,' → logprob: -15.761993408203125
    6. '=edge' → logprob: -15.886993408203125
    7. ' ' → logprob: -16.011993408203125
    8. ')' → logprob: -17.261993408203125
    9. ',w' → logprob: -17.261993408203125
    10. '=f' → logprob: -17.386993408203125

Token 331: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.004401036538183689
    2. '(w' → logprob: -5.754401206970215
    3. ' wf' → logprob: -6.754401206970215
    4. '   ' → logprob: -10.504401206970215
    5. 'w' → logprob: -10.754401206970215
    6. 'chain' → logprob: -13.379401206970215
    7. 'WF' → logprob: -13.629401206970215
    8. ' (' → logprob: -14.254401206970215
    9. '(' → logprob: -14.254401206970215
    10. 'fw' → logprob: -14.379401206970215

Token 332: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.531315314830863e-06
    2. 'i' → logprob: -13.250003814697266
    3. '[k' → logprob: -14.750003814697266
    4. '   ' → logprob: -14.875003814697266
    5. ' [' → logprob: -15.125003814697266
    6. '[' → logprob: -15.375003814697266
    7. '[(' → logprob: -15.750003814697266
    8. '
' → logprob: -17.250003814697266
    9. ' ' → logprob: -17.250003814697266
    10. '

' → logprob: -17.375003814697266

Token 333: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011681916192173958
    2. '[k' → logprob: -4.511682033538818
    3. ']' → logprob: -8.13668155670166
    4. '[i' → logprob: -8.26168155670166
    5. 'k' → logprob: -10.26168155670166
    6. '[' → logprob: -11.26168155670166
    7. ' ][' → logprob: -11.26168155670166
    8. ')[' → logprob: -12.51168155670166
    9. '"][' → logprob: -13.13668155670166
    10. ']][' → logprob: -13.51168155670166

Token 334: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -3.8889261304575484e-06
    2. ' k' → logprob: -12.625003814697266
    3. '[k' → logprob: -14.625003814697266
    4. '   ' → logprob: -18.250003814697266
    5. ' ' → logprob: -18.500003814697266
    6. '	k' → logprob: -18.500003814697266
    7. '(k' → logprob: -19.125003814697266
    8. ',k' → logprob: -19.125003814697266
    9. '{k' → logprob: -19.125003814697266
    10. 'j' → logprob: -19.500003814697266

Token 335: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0005968777113594115
    2. ']' → logprob: -7.50059700012207
    3. ']+' → logprob: -10.25059700012207
    4. ' ],' → logprob: -12.75059700012207
    5. '][' → logprob: -13.00059700012207
    6. ',' → logprob: -13.87559700012207
    7. '[' → logprob: -15.12559700012207
    8. '[i' → logprob: -15.12559700012207
    9. '[j' → logprob: -15.25059700012207
    10. ']
' → logprob: -15.50059700012207

Token 336: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.10021239519119263
    2. ' wf' → logprob: -2.350212335586548
    3. '   ' → logprob: -13.475212097167969
    4. '       ' → logprob: -13.600212097167969
    5. 'w' → logprob: -14.100212097167969
    6. ' ' → logprob: -14.350212097167969
    7. '    ' → logprob: -14.350212097167969
    8. '           ' → logprob: -15.225212097167969
    9. '     ' → logprob: -16.22521209716797
    10. '  ' → logprob: -16.22521209716797

Token 337: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.004624272231012583
    2. 'k' → logprob: -5.379624366760254
    3. '[j' → logprob: -13.004624366760254
    4. '
' → logprob: -14.754624366760254
    5. '   ' → logprob: -15.629624366760254
    6. '[
' → logprob: -15.629624366760254
    7. '(k' → logprob: -15.754624366760254
    8. '[' → logprob: -15.879624366760254
    9. '	k' → logprob: -15.879624366760254
    10. '```' → logprob: -16.129623413085938

Token 338: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006242761737667024
    2. '[j' → logprob: -7.500624179840088
    3. 'j' → logprob: -10.000624656677246
    4. ']' → logprob: -10.625624656677246
    5. ' ][' → logprob: -14.125624656677246
    6. '[' → logprob: -15.750624656677246
    7. ',j' → logprob: -16.12562370300293
    8. '   ' → logprob: -16.25062370300293
    9. '"][' → logprob: -16.62562370300293
    10. ']
' → logprob: -16.62562370300293

Token 339: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.173704271830502e-06
    2. ' j' → logprob: -13.37500286102295
    3. '
' → logprob: -14.25000286102295
    4. '[j' → logprob: -15.50000286102295
    5. 'k' → logprob: -15.62500286102295
    6. '   ' → logprob: -16.125003814697266
    7. ']' → logprob: -16.500003814697266
    8. '```' → logprob: -16.625003814697266
    9. '	j' → logprob: -16.750003814697266
    10. '
' → logprob: -16.875003814697266

Token 340: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.41344696283340454
    2. ']' → logprob: -1.2884469032287598
    3. '       ' → logprob: -2.9134469032287598
    4. '
' → logprob: -5.41344690322876
    5. ']+' → logprob: -6.66344690322876
    6. ']
' → logprob: -7.28844690322876
    7. '   ' → logprob: -7.78844690322876
    8. '           ' → logprob: -8.538447380065918
    9. 'if' → logprob: -8.538447380065918
    10. ')
' → logprob: -8.788447380065918

Token 341: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17433197796344757
    2. '       ' → logprob: -2.0493319034576416
    3. ' if' → logprob: -5.174332141876221
    4. '  
' → logprob: -5.299332141876221
    5. '        
' → logprob: -5.299332141876221
    6. 'if' → logprob: -5.799332141876221
    7. ' 
' → logprob: -5.924332141876221
    8. '```' → logprob: -6.049332141876221
    9. '    
' → logprob: -6.924332141876221
    10. '
' → logprob: -6.924332141876221

Token 342: ' if' (ID: 538)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.3180205821990967
    2. '       ' → logprob: -1.8180205821990967
    3. ' wf' → logprob: -2.8180205821990967
    4. 'if' (adapté à ' if') → logprob: -3.9430205821990967
    5. 'new' → logprob: -4.568020820617676
    6. ' if' → logprob: -4.818020820617676
    7. ' new' → logprob: -4.943020820617676
    8. 'temp' → logprob: -6.068020820617676
    9. 'tmp' → logprob: -7.443020820617676
    10. 'old' → logprob: -8.068020820617676

Token 343: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.25200098752975464
    2. ' wf' → logprob: -1.5020010471343994
    3. 'w' → logprob: -10.12700080871582
    4. '   ' → logprob: -11.00200080871582
    5. '	w' → logprob: -12.25200080871582
    6. '(w' → logprob: -12.37700080871582
    7. ' ' → logprob: -13.12700080871582
    8. '>w' → logprob: -14.50200080871582
    9. '           ' → logprob: -14.50200080871582
    10. '    ' → logprob: -15.00200080871582

Token 344: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6047699318733066e-05
    2. '_' → logprob: -11.500016212463379
    3. '[' → logprob: -13.375016212463379
    4. ' [' → logprob: -13.875016212463379
    5. '   ' → logprob: -14.375016212463379
    6. 'i' → logprob: -14.625016212463379
    7. '[I' → logprob: -15.000016212463379
    8. 'w' → logprob: -15.125016212463379
    9. '_i' → logprob: -15.500016212463379
    10. '
' → logprob: -15.500016212463379

Token 345: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.4809945821762085
    2. '[i' → logprob: -1.3559945821762085
    3. '[k' → logprob: -2.355994701385498
    4. '[j' → logprob: -3.605994701385498
    5. '[' → logprob: -6.605994701385498
    6. ' [' → logprob: -8.35599422454834
    7. ']' → logprob: -8.98099422454834
    8. '   ' → logprob: -9.10599422454834
    9. ' ][' → logprob: -9.23099422454834
    10. 'k' → logprob: -9.85599422454834

Token 346: 'j' (ID: 73)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06998179107904434
    2. 'j' → logprob: -2.694981813430786
    3. 'i' → logprob: -10.569981575012207
    4. ']' → logprob: -11.569981575012207
    5. ' k' → logprob: -12.944981575012207
    6. '[k' → logprob: -13.569981575012207
    7. '```' → logprob: -13.694981575012207
    8. '[j' → logprob: -13.819981575012207
    9. ' j' → logprob: -13.944981575012207
    10. '
' → logprob: -14.319981575012207

Token 347: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2902090847492218
    2. ']' → logprob: -1.4152090549468994
    3. ']>' → logprob: -5.2902092933654785
    4. ' >' → logprob: -5.5402092933654785
    5. '[' → logprob: -11.16520881652832
    6. ' ]' → logprob: -11.54020881652832
    7. ')' → logprob: -12.66520881652832
    8. '">' → logprob: -12.79020881652832
    9. '[i' → logprob: -12.79020881652832
    10. '>w' → logprob: -12.91520881652832

Token 348: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.006727683823555708
    2. ' >' → logprob: -5.006727695465088
    3. '>w' → logprob: -11.75672721862793
    4. '>
' → logprob: -12.88172721862793
    5. '>
' → logprob: -15.13172721862793
    6. '>

' → logprob: -15.25672721862793
    7. ' ' → logprob: -15.50672721862793
    8. '   ' → logprob: -15.63172721862793
    9. '```' → logprob: -15.75672721862793
    10. ' >
' → logprob: -16.13172721862793

Token 349: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.05489356443285942
    2. ' wf' → logprob: -2.9298934936523438
    3. '   ' → logprob: -12.554893493652344
    4. ' ' → logprob: -12.679893493652344
    5. 'w' → logprob: -13.304893493652344
    6. '    ' → logprob: -14.929893493652344
    7. '  ' → logprob: -15.054893493652344
    8. 'WF' → logprob: -15.179893493652344
    9. '	w' → logprob: -15.304893493652344
    10. '       ' → logprob: -15.554893493652344

Token 350: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.35415974259376526
    2. 'ik' → logprob: -1.4791597127914429
    3. '[i' → logprob: -2.7291598320007324
    4. '[' → logprob: -5.729159832000732
    5. 'i' → logprob: -6.729159832000732
    6. '_i' → logprob: -7.854159832000732
    7. ' ik' → logprob: -9.104159355163574
    8. 'Ik' → logprob: -9.729159355163574
    9. 'k' → logprob: -11.479159355163574
    10. '```' → logprob: -11.854159355163574

Token 351: 'ik' (ID: 507)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1617087423801422
    2. 'ik' → logprob: -1.9117087125778198
    3. '[i' → logprob: -6.786708831787109
    4. 'k' → logprob: -8.41170883178711
    5. ' i' → logprob: -9.53670883178711
    6. '[' → logprob: -10.53670883178711
    7. ' ik' → logprob: -11.78670883178711
    8. '[k' → logprob: -12.66170883178711
    9. '_i' → logprob: -12.91170883178711
    10. ' ' → logprob: -13.41170883178711

Token 352: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890014350414276
    2. '+' → logprob: -2.578900098800659
    3. '[' → logprob: -12.703900337219238
    4. ' +
' → logprob: -13.578900337219238
    5. '+
' → logprob: -13.828900337219238
    6. ' plus' → logprob: -13.953900337219238
    7. '+w' → logprob: -13.953900337219238
    8. ']+' → logprob: -14.078900337219238
    9. ' ' → logprob: -14.453900337219238
    10. ']' → logprob: -14.453900337219238

Token 353: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.06196858361363411
    2. ' wf' → logprob: -2.8119685649871826
    3. '   ' → logprob: -15.186968803405762
    4. ' ' → logprob: -15.561968803405762
    5. '       ' → logprob: -16.311967849731445
    6. 'w' → logprob: -16.561967849731445
    7. '           ' → logprob: -16.561967849731445
    8. '    ' → logprob: -17.061967849731445
    9. 'WF' → logprob: -17.561967849731445
    10. '  ' → logprob: -17.686967849731445

Token 354: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.10098228603601456
    2. '[k' → logprob: -2.350982189178467
    3. 'kj' → logprob: -7.225982189178467
    4. 'k' → logprob: -10.350982666015625
    5. '[' → logprob: -11.600982666015625
    6. '[
' → logprob: -13.350982666015625
    7. '	k' → logprob: -13.850982666015625
    8. ' kj' → logprob: -13.975982666015625
    9. '_' → logprob: -13.975982666015625
    10. '(k' → logprob: -14.100982666015625

Token 355: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7479908466339111
    2. 'kj' → logprob: -0.7479908466339111
    3. 'k' → logprob: -3.122990846633911
    4. '[k' → logprob: -5.247990608215332
    5. '_k' → logprob: -5.872990608215332
    6. '[j' → logprob: -7.122990608215332
    7. '_j' → logprob: -8.497990608215332
    8. 'jk' → logprob: -8.872990608215332
    9. ' kj' → logprob: -10.497990608215332
    10. '[' → logprob: -10.747990608215332

Token 356: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08290830254554749
    2. ':
' → logprob: -2.5829083919525146
    3. ' :' → logprob: -6.4579081535339355
    4. ' and' → logprob: -6.7079081535339355
    5. '           ' → logprob: -7.2079081535339355
    6. ' :
' → logprob: -8.082908630371094
    7. '       ' → logprob: -10.082908630371094
    8. '   ' → logprob: -10.582908630371094
    9. ':
' → logprob: -10.707908630371094
    10. 'and' → logprob: -11.332908630371094

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021257536485791206
    2. ':' → logprob: -5.271257400512695
    3. '               ' → logprob: -5.271257400512695
    4. ' wf' → logprob: -5.271257400512695
    5. ':
' → logprob: -5.896257400512695
    6. '
' → logprob: -7.271257400512695
    7. '       ' → logprob: -7.646257400512695
    8. 'wf' → logprob: -8.146257400512695
    9. '                   ' → logprob: -8.271257400512695
    10. '[' → logprob: -8.396257400512695

Token 358: ' wf' (ID: 99382)
  Prédit: ' wf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' wf' → logprob: -0.07385320961475372
    2. 'wf' (adapté à ' wf') → logprob: -3.1988532543182373
    3. '               ' → logprob: -3.6988532543182373
    4. '           ' → logprob: -5.198853015899658
    5. ' next' → logprob: -10.073853492736816
    6. '                   ' → logprob: -11.073853492736816
    7. '                       ' → logprob: -11.573853492736816
    8. '```' → logprob: -11.823853492736816
    9. ' ' → logprob: -11.948853492736816
    10. '   ' → logprob: -12.573853492736816

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[j' → logprob: -13.875001907348633
    3. '][' → logprob: -15.000001907348633
    4. '```' → logprob: -15.375001907348633
    5. ')[' → logprob: -16.250001907348633
    6. '[' → logprob: -16.625001907348633
    7. ' [' → logprob: -17.000001907348633
    8. 'i' → logprob: -17.500001907348633
    9. ']' → logprob: -17.875001907348633
    10. '
' → logprob: -18.000001907348633

Token 360: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00899825431406498
    2. '[j' → logprob: -5.258998394012451
    3. '[i' → logprob: -5.633998394012451
    4. ']' → logprob: -8.758997917175293
    5. '[' → logprob: -11.758997917175293
    6. ' ][' → logprob: -12.133997917175293
    7. ')[' → logprob: -12.383997917175293
    8. '}[' → logprob: -12.883997917175293
    9. '```' → logprob: -13.633997917175293
    10. ']][' → logprob: -14.383997917175293

Token 361: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.392202976712724e-06
    2. 'k' → logprob: -12.625006675720215
    3. '[j' → logprob: -13.125006675720215
    4. '][' → logprob: -15.250006675720215
    5. ' j' → logprob: -15.375006675720215
    6. ']' → logprob: -15.750006675720215
    7. '```' → logprob: -15.750006675720215
    8. '
' → logprob: -16.3750057220459
    9. '   ' → logprob: -16.5000057220459
    10. '{' → logprob: -16.8750057220459

Token 362: ']' (ID: 60)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693557143211365
    2. '=' → logprob: -2.1269354820251465
    3. ']' → logprob: -12.126935958862305
    4. '>' → logprob: -14.626935958862305
    5. ' =
' → logprob: -14.876935958862305
    6. ',' → logprob: -15.376935958862305
    7. ')' → logprob: -15.501935958862305
    8. '    ' → logprob: -15.876935958862305
    9. ' ' → logprob: -15.876935958862305
    10. ']=' → logprob: -16.001935958862305

Token 363: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931493282318115
    2. ' =' → logprob: -0.6931493282318115
    3. ',' → logprob: -13.19314956665039
    4. '.=' → logprob: -16.44314956665039
    5. ' ' → logprob: -16.69314956665039
    6. '=
' → logprob: -17.81814956665039
    7. '           ' → logprob: -17.81814956665039
    8. '            ' → logprob: -17.94314956665039
    9. '    ' → logprob: -17.94314956665039
    10. ' =
' → logprob: -18.19314956665039

Token 364: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.0019307781476527452
    2. ' wf' → logprob: -6.2519307136535645
    3. 'w' → logprob: -14.376931190490723
    4. '   ' → logprob: -15.001931190490723
    5. '           ' → logprob: -15.126931190490723
    6. 'vf' → logprob: -15.501931190490723
    7. 'fw' → logprob: -15.876931190490723
    8. 'wv' → logprob: -16.126930236816406
    9. ' ' → logprob: -16.626930236816406
    10. 'wt' → logprob: -16.751930236816406

Token 365: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0003956416912842542
    2. '[i' → logprob: -8.625395774841309
    3. 'ik' → logprob: -8.875395774841309
    4. '_k' → logprob: -10.375395774841309
    5. '_i' → logprob: -11.000395774841309
    6. '[' → logprob: -11.250395774841309
    7. '[k' → logprob: -11.500395774841309
    8. 'k' → logprob: -12.500395774841309
    9. 'ijk' → logprob: -15.000395774841309
    10. 'i' → logprob: -15.625395774841309

Token 366: 'ik' (ID: 507)
  Prédit: 'ik'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ik' → logprob: -9.088346359931165e-07
    2. 'k' → logprob: -15.000000953674316
    3. '_' → logprob: -15.250000953674316
    4. 'i' → logprob: -16.125
    5. '[' → logprob: -16.375
    6. '[i' → logprob: -16.875
    7. ' ik' → logprob: -17.5
    8. '[k' → logprob: -18.125
    9. '_k' → logprob: -18.125
    10. 'ик' → logprob: -18.5

Token 367: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.40943408012390137
    2. ' +' → logprob: -1.7844340801239014
    3. '+k' → logprob: -1.7844340801239014
    4. 'k' → logprob: -9.28443431854248
    5. '[k' → logprob: -10.28443431854248
    6. '+j' → logprob: -10.65943431854248
    7. '[' → logprob: -10.78443431854248
    8. '+w' → logprob: -12.28443431854248
    9. '_k' → logprob: -12.65943431854248
    10. ' ' → logprob: -13.53443431854248

Token 368: ' wf' (ID: 99382)
  Prédit: 'wf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wf' → logprob: -0.014163863845169544
    2. ' wf' → logprob: -4.264163970947266
    3. 'wj' → logprob: -16.639163970947266
    4. ' ' → logprob: -17.014163970947266
    5. 'w' → logprob: -17.264163970947266
    6. '
' → logprob: -17.389163970947266
    7. 'kf' → logprob: -17.389163970947266
    8. 'jf' → logprob: -17.639163970947266
    9. 'wt' → logprob: -17.889163970947266
    10. 'wk' → logprob: -18.014163970947266

Token 369: '_k' (ID: 11637)
  Prédit: '_k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_k' → logprob: -0.04989342764019966
    2. 'kj' → logprob: -3.049893379211426
    3. '[k' → logprob: -6.674893379211426
    4. 'k' → logprob: -10.299893379211426
    5. '_j' → logprob: -12.299893379211426
    6. ' kj' → logprob: -13.049893379211426
    7. '(k' → logprob: -14.549893379211426
    8. '
' → logprob: -14.674893379211426
    9. '-k' → logprob: -14.924893379211426
    10. '[j' → logprob: -15.299893379211426

Token 370: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00017350474081467837
    2. '[j' → logprob: -9.125173568725586
    3. '_j' → logprob: -10.000173568725586
    4. 'k' → logprob: -12.375173568725586
    5. '[' → logprob: -12.500173568725586
    6. 'kj' → logprob: -12.875173568725586
    7. '```' → logprob: -13.500173568725586
    8. 'sj' → logprob: -13.750173568725586
    9. 's' → logprob: -13.875173568725586
    10. '[k' → logprob: -14.125173568725586

Token 371: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006486945785582066
    2. ' next' → logprob: -8.000648498535156
    3. 'next' → logprob: -8.500648498535156
    4. '               ' → logprob: -10.375648498535156
    5. ',' → logprob: -10.875648498535156
    6. '[' → logprob: -11.000648498535156
    7. '[next' → logprob: -11.375648498535156
    8. '                   ' → logprob: -11.625648498535156
    9. '(next' → logprob: -12.125648498535156
    10. ',next' → logprob: -12.250648498535156

Token 372: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007070713327266276
    2. 'next' → logprob: -7.750707149505615
    3. ' next' → logprob: -8.625706672668457
    4. '               ' → logprob: -10.250706672668457
    5. '                   ' → logprob: -10.375706672668457
    6. '```' → logprob: -11.500706672668457
    7. '                       ' → logprob: -11.750706672668457
    8. '(next' → logprob: -12.625706672668457
    9. '[next' → logprob: -13.500706672668457
    10. '[' → logprob: -13.625706672668457

Token 373: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -3.726595241460018e-05
    2. ' next' → logprob: -10.25003719329834
    3. '           ' → logprob: -13.25003719329834
    4. '
' → logprob: -17.250038146972656
    5. '               ' → logprob: -17.750038146972656
    6. '   ' → logprob: -18.625038146972656
    7. '[next' → logprob: -18.625038146972656
    8. '	next' → logprob: -18.750038146972656
    9. '(next' → logprob: -19.375038146972656
    10. '.next' → logprob: -19.375038146972656

Token 374: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -3.292907877039397e-06
    2. '[i' → logprob: -12.87500286102295
    3. '```' → logprob: -14.62500286102295
    4. 'id' → logprob: -15.62500286102295
    5. '_i' → logprob: -16.000003814697266
    6. '[' → logprob: -17.250003814697266
    7. '[
' → logprob: -18.250003814697266
    8. '[_' → logprob: -19.000003814697266
    9. '`' → logprob: -19.125003814697266
    10. '   ' → logprob: -19.125003814697266

Token 375: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: 0.0
    2. '```' → logprob: -16.75
    3. ' [' → logprob: -17.5
    4. '[' → logprob: -17.5
    5. '[I' → logprob: -18.75
    6. '[j' → logprob: -19.75
    7. ')[' → logprob: -20.25
    8. '][' → logprob: -20.625
    9. '[int' → logprob: -20.625
    10. '[k' → logprob: -20.875

Token 376: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.04990953207015991
    2. '][' → logprob: -3.0499095916748047
    3. '[j' → logprob: -6.674909591674805
    4. '[' → logprob: -10.799909591674805
    5. ')[' → logprob: -10.924909591674805
    6. '}[' → logprob: -12.174909591674805
    7. '```' → logprob: -12.299909591674805
    8. '>[' → logprob: -12.549909591674805
    9. '[k' → logprob: -12.674909591674805
    10. ']' → logprob: -13.799909591674805

Token 377: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.512236498361744e-07
    2. 'i' → logprob: -15.250000953674316
    3. ' j' → logprob: -15.750000953674316
    4. '[j' → logprob: -15.750000953674316
    5. 'k' → logprob: -17.5
    6. '```' → logprob: -18.875
    7. '
' → logprob: -20.125
    8. '   ' → logprob: -20.5
    9. '	j' → logprob: -21.375
    10. '][' → logprob: -21.375

Token 378: ']' (ID: 60)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.18154780566692352
    2. '][' → logprob: -1.80654776096344
    3. ']' → logprob: -6.43154764175415
    4. ']=' → logprob: -9.681548118591309
    5. ')[' → logprob: -10.431548118591309
    6. '```' → logprob: -10.806548118591309
    7. '=' → logprob: -11.056548118591309
    8. '[k' → logprob: -11.181548118591309
    9. '=i' → logprob: -11.931548118591309
    10. 'i' → logprob: -11.931548118591309

Token 379: ' =' (ID: 314)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00012403888104017824
    2. '[k' → logprob: -9.500123977661133
    3. '[j' → logprob: -10.250123977661133
    4. '=' → logprob: -11.625123977661133
    5. '[' → logprob: -13.125123977661133
    6. '=[' → logprob: -14.250123977661133
    7. '```' → logprob: -14.375123977661133
    8. '=i' → logprob: -14.750123977661133
    9. ' =' → logprob: -15.125123977661133
    10. ' [' → logprob: -15.250123977661133

Token 380: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0011185461189597845
    2. 'k' → logprob: -6.8761186599731445
    3. ' next' → logprob: -9.376118659973145
    4. '	next' → logprob: -14.126118659973145
    5. '(next' → logprob: -15.626118659973145
    6. '[next' → logprob: -16.001117706298828
    7. ' k' → logprob: -17.876117706298828
    8. '   ' → logprob: -18.126117706298828
    9. 'Next' → logprob: -18.251117706298828
    10. ',next' → logprob: -18.626117706298828

Token 381: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.04051679000258446
    2. '[k' → logprob: -3.6655168533325195
    3. '[i' → logprob: -4.4155168533325195
    4. 'k' → logprob: -6.5405168533325195
    5. '_i' → logprob: -8.29051685333252
    6. '[' → logprob: -9.79051685333252
    7. 'i' → logprob: -10.29051685333252
    8. 'id' → logprob: -10.29051685333252
    9. '```' → logprob: -10.29051685333252
    10. '   ' → logprob: -10.41551685333252

Token 382: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -14.375000953674316
    3. '[' → logprob: -15.750000953674316
    4. '[k' → logprob: -16.000001907348633
    5. '   ' → logprob: -17.000001907348633
    6. ' [' → logprob: -17.000001907348633
    7. '][' → logprob: -17.250001907348633
    8. 'i' → logprob: -17.250001907348633
    9. '``' → logprob: -18.125001907348633
    10. '`' → logprob: -18.250001907348633

Token 383: '][' (ID: 2696)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05107886716723442
    2. '][' → logprob: -3.0510787963867188
    3. '[k' → logprob: -6.051078796386719
    4. 'k' → logprob: -9.426078796386719
    5. '[' → logprob: -10.176078796386719
    6. 'i' → logprob: -12.301078796386719
    7. '}[' → logprob: -13.051078796386719
    8. ' ][' → logprob: -13.176078796386719
    9. '[j' → logprob: -13.551078796386719
    10. '```' → logprob: -13.551078796386719

Token 384: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -1.1472419600977446e-06
    2. '[k' → logprob: -14.000000953674316
    3. ' k' → logprob: -16.125001907348633
    4. 'j' → logprob: -16.625001907348633
    5. 'i' → logprob: -18.500001907348633
    6. '{k' → logprob: -18.500001907348633
    7. '[' → logprob: -18.625001907348633
    8. '	k' → logprob: -19.000001907348633
    9. '```' → logprob: -19.625001907348633
    10. '   ' → logprob: -19.750001907348633

Token 385: ']

' (ID: 3144)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.013007979840040207
    2. ']' → logprob: -5.013008117675781
    3. '][' → logprob: -5.263008117675781
    4. '[' → logprob: -7.513008117675781
    5. '[i' → logprob: -8.138008117675781
    6. 'j' → logprob: -8.888008117675781
    7. '[k' → logprob: -9.888008117675781
    8. ')' → logprob: -11.013008117675781
    9. '```' → logprob: -12.013008117675781
    10. '])' → logprob: -12.138008117675781

Token 386: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5490640997886658
    2. '<|end|>' → logprob: -0.9240640997886658
    3. '
' → logprob: -4.4240641593933105
    4. '```' → logprob: -4.9240641593933105
    5. 'def' → logprob: -6.2990641593933105
    6. '<|end|>' → logprob: -6.5490641593933105
    7. '...' → logprob: -6.6740641593933105
    8. '    
' → logprob: -7.0490641593933105
    9. 'import' → logprob: -8.174063682556152
    10. '       ' → logprob: -8.549063682556152

Token 387: ' T' (ID: 353)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32675692439079285
    2. 'Q' → logprob: -1.3267569541931152
    3. 'q' → logprob: -5.576756954193115
    4. '```' → logprob: -5.701756954193115
    5. 'for' → logprob: -6.701756954193115
    6. 'def' → logprob: -6.951756954193115
    7. ' Q' → logprob: -7.951756954193115
    8. 'n' → logprob: -8.201756477355957
    9. 'answer' → logprob: -8.826756477355957
    10. 'M' → logprob: -8.826756477355957

Token 388: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10795828700065613
    2. '=' → logprob: -2.3579583168029785
    3. ',' → logprob: -5.1079583168029785
    4. 'C' → logprob: -6.7329583168029785
    5. '=int' → logprob: -8.10795783996582
    6. '  ' → logprob: -11.10795783996582
    7. '   ' → logprob: -11.10795783996582
    8. 'c' → logprob: -11.23295783996582
    9. '	' → logprob: -11.23295783996582
    10. '_' → logprob: -11.35795783996582

Token 389: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.029753733426332474
    2. ' int' → logprob: -3.5297536849975586
    3. '[int' → logprob: -13.029753684997559
    4. '(int' → logprob: -14.779753684997559
    5. '1' → logprob: -15.779753684997559
    6. '=int' → logprob: -15.904753684997559
    7. ' ' → logprob: -16.279754638671875
    8. '<int' → logprob: -16.279754638671875
    9. '10' → logprob: -16.654754638671875
    10. '0' → logprob: -16.779754638671875

Token 390: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.029800361022353172
    2. '(' → logprob: -3.5298004150390625
    3. ' (' → logprob: -11.029800415039062
    4. '(sys' → logprob: -11.154800415039062
    5. 'input' → logprob: -12.029800415039062
    6. '(
' → logprob: -12.279800415039062
    7. '('' → logprob: -12.654800415039062
    8. '()' → logprob: -12.779800415039062
    9. '(int' → logprob: -13.529800415039062
    10. '=input' → logprob: -15.529800415039062

Token 391: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0067733959294855595
    2. '()' → logprob: -5.006773471832275
    3. '())
' → logprob: -10.256772994995117
    4. '().' → logprob: -10.756772994995117
    5. ')' → logprob: -14.006772994995117
    6. '())

' → logprob: -15.506772994995117
    7. '()
' → logprob: -15.631772994995117
    8. ' ())' → logprob: -15.631772994995117
    9. '();)' → logprob: -16.256772994995117
    10. '(' → logprob: -16.506772994995117

Token 392: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02335868403315544
    2. 'for' → logprob: -3.7733585834503174
    3. ' for' → logprob: -9.398358345031738
    4. '	for' → logprob: -11.148358345031738
    5. '
' → logprob: -11.773358345031738
    6. '    
' → logprob: -11.773358345031738
    7. 'while' → logprob: -16.023359298706055
    8. '       ' → logprob: -16.398359298706055
    9. '<|end|>' → logprob: -16.648359298706055
    10. '```' → logprob: -17.398359298706055

Token 393: ' order' (ID: 2569)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39129123091697693
    2. '   ' → logprob: -1.1412912607192993
    3. 'results' → logprob: -6.14129114151001
    4. ' for' → logprob: -6.26629114151001
    5. 'answers' → logprob: -8.766291618347168
    6. 'result' → logprob: -9.516291618347168
    7. '    
' → logprob: -10.266291618347168
    8. '	for' → logprob: -10.516291618347168
    9. '
' → logprob: -10.891291618347168
    10. 'output' → logprob: -11.391291618347168

Token 394: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16049310564994812
    2. '=' → logprob: -1.9104931354522705
    3. '(' → logprob: -9.035492897033691
    4. ',' → logprob: -9.285492897033691
    5. '   ' → logprob: -11.035492897033691
    6. '_' → logprob: -11.285492897033691
    7. '[' → logprob: -11.535492897033691
    8. '[]' → logprob: -12.035492897033691
    9. '()' → logprob: -12.410492897033691
    10. '[:]' → logprob: -13.285492897033691

Token 395: ' stuck' (ID: 24327)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8456862568855286
    2. '=' → logprob: -1.8456861972808838
    3. ' =' → logprob: -1.9706861972808838
    4. '_' → logprob: -3.095686197280884
    5. 'cost' → logprob: -3.470686197280884
    6. ' []' → logprob: -3.595686197280884
    7. '[' → logprob: -3.595686197280884
    8. 'list' → logprob: -3.970686197280884
    9. '=[]' → logprob: -4.220686435699463
    10. 'answers' → logprob: -4.345686435699463

Token 396: '_order' (ID: 17446)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.527691125869751
    2. ' =' → logprob: -0.902691125869751
    3. ',' → logprob: -5.402690887451172
    4. ' ,' → logprob: -10.652690887451172
    5. ' ' → logprob: -11.402690887451172
    6. '   ' → logprob: -12.277690887451172
    7. '_' → logprob: -12.402690887451172
    8. '[' → logprob: -12.902690887451172
    9. 's' → logprob: -13.777690887451172
    10. '  ' → logprob: -13.777690887451172

Token 397: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12701262533664703
    2. '=' → logprob: -2.1270127296447754
    3. ',' → logprob: -9.502012252807617
    4. ' ,' → logprob: -12.377012252807617
    5. ' ' → logprob: -12.627012252807617
    6. '[' → logprob: -14.752012252807617
    7. ')' → logprob: -15.002012252807617
    8. '   ' → logprob: -15.002012252807617
    9. '  ' → logprob: -15.377012252807617
    10. ' =
' → logprob: -15.627012252807617

Token 398: ' set' (ID: 920)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6676576137542725
    2. '[],' → logprob: -1.0426576137542725
    3. ' list' → logprob: -2.5426576137542725
    4. ' [],' → logprob: -3.9176576137542725
    5. 'range' → logprob: -4.167657852172852
    6. '[' → logprob: -5.042657852172852
    7. '[list' → logprob: -5.042657852172852
    8. '[]' → logprob: -6.292657852172852
    9. ' range' → logprob: -6.542657852172852
    10. ' [' → logprob: -6.792657852172852

Token 399: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5911284685134888
    2. '(),' → logprob: -0.8411284685134888
    3. '(range' → logprob: -4.466128349304199
    4. '(map' → logprob: -5.966128349304199
    5. '([]' → logprob: -7.216128349304199
    6. '([' → logprob: -9.3411283493042
    7. '()
' → logprob: -10.0911283493042
    8. '(input' → logprob: -10.5911283493042
    9. '(' → logprob: -11.0911283493042
    10. '((' → logprob: -11.2161283493042

Token 400: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.13382397592067719
    2. ' set' → logprob: -2.258823871612549
    3. '[]' → logprob: -4.383823871612549
    4. ' []' → logprob: -5.383823871612549
    5. '{}' → logprob: -5.758823871612549
    6. ' {}' → logprob: -8.633824348449707
    7. 'list' → logprob: -8.633824348449707
    8. 'dict' → logprob: -10.008824348449707
    9. ' list' → logprob: -10.633824348449707
    10. '{' → logprob: -10.633824348449707

Token 401: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0002942287246696651
    2. '()
' → logprob: -8.37529468536377
    3. '([]' → logprob: -10.37529468536377
    4. '()\' → logprob: -12.00029468536377
    5. '()
' → logprob: -12.12529468536377
    6. ' ()' → logprob: -12.25029468536377
    7. '()`' → logprob: -12.50029468536377
    8. '()

' → logprob: -12.50029468536377
    9. '(' → logprob: -12.87529468536377
    10. '(),' → logprob: -13.50029468536377

Token 402: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21078133583068848
    2. '   ' → logprob: -2.0857813358306885
    3. ' for' → logprob: -3.8357813358306885
    4. 'for' → logprob: -3.9607813358306885
    5. '<|end|>' → logprob: -4.835781097412109
    6. '  
' → logprob: -5.085781097412109
    7. ' 
' → logprob: -5.460781097412109
    8. '    
' → logprob: -5.710781097412109
    9. '```' → logprob: -7.460781097412109
    10. '	for' → logprob: -7.585781097412109

Token 403: ' command' (ID: 6348)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02606559731066227
    2. '   ' → logprob: -3.7760655879974365
    3. ' for' → logprob: -5.901065826416016
    4. '	for' → logprob: -10.401065826416016
    5. '    
' → logprob: -11.026065826416016
    6. 'while' → logprob: -11.151065826416016
    7. '
' → logprob: -11.901065826416016
    8. '' → logprob: -12.901065826416016
    9. '  ' → logprob: -13.276065826416016
    10. ' ' → logprob: -13.776065826416016

Token 404: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7927868366241455
    2. 's' → logprob: -0.9177868366241455
    3. '=' → logprob: -1.9177868366241455
    4. '_' → logprob: -7.542786598205566
    5. '_list' → logprob: -8.417786598205566
    6. '_line' → logprob: -9.542786598205566
    7. '   ' → logprob: -9.917786598205566
    8. '=line' → logprob: -10.292786598205566
    9. ' ' → logprob: -10.417786598205566
    10. '=s' → logprob: -10.792786598205566

Token 405: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.043719582259655
    2. '[]' → logprob: -3.418719530105591
    3. '{}' → logprob: -5.04371976852417
    4. ' input' → logprob: -6.54371976852417
    5. ' []' → logprob: -7.54371976852417
    6. '{' → logprob: -7.91871976852417
    7. '[input' → logprob: -8.293719291687012
    8. 'set' → logprob: -8.918719291687012
    9. 'lambda' → logprob: -8.918719291687012
    10. '""' → logprob: -9.043719291687012

Token 406: 'None' (ID: 8505)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.020893480628728867
    2. ']' → logprob: -4.520893573760986
    3. '[]' → logprob: -6.145893573760986
    4. '(input' → logprob: -6.395893573760986
    5. 'None' → logprob: -6.645893573760986
    6. '0' → logprob: -6.770893573760986
    7. 'list' → logprob: -7.395893573760986
    8. '()]' → logprob: -7.395893573760986
    9. 'tuple' → logprob: -8.020893096923828
    10. '"' → logprob: -8.145893096923828

Token 407: ']' (ID: 60)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.19490645825862885
    2. ']' → logprob: -2.31990647315979
    3. '()' → logprob: -2.69490647315979
    4. ']()' → logprob: -4.694906234741211
    5. 'for' → logprob: -7.069906234741211
    6. ']*' → logprob: -7.694906234741211
    7. ' for' → logprob: -7.694906234741211
    8. '(' → logprob: -8.944906234741211
    9. ' ()' → logprob: -9.819906234741211
    10. ',' → logprob: -10.069906234741211

Token 408: ' *' (ID: 425)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056224215775728226
    2. '()]' → logprob: -3.4312241077423096
    3. '(None' → logprob: -4.806224346160889
    4. ']' → logprob: -5.181224346160889
    5. '(' → logprob: -5.681224346160889
    6. 'for' → logprob: -6.181224346160889
    7. '()
' → logprob: -6.556224346160889
    8. '("")' → logprob: -7.181224346160889
    9. ' for' → logprob: -8.43122386932373
    10. ',' → logprob: -9.05622386932373

Token 409: ' T' (ID: 353)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.10007821768522263
    2. '100' → logprob: -2.9750781059265137
    3. '(' → logprob: -3.4750781059265137
    4. '(T' → logprob: -4.975078105926514
    5. '101' → logprob: -6.100078105926514
    6. '10' → logprob: -6.475078105926514
    7. '200' → logprob: -7.475078105926514
    8. '3' → logprob: -8.350078582763672
    9. '500' → logprob: -8.725078582763672
    10. '300' → logprob: -8.725078582763672

Token 410: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7694874405860901
    2. '   ' → logprob: -1.6444873809814453
    3. '<|end|>' → logprob: -1.8944873809814453
    4. '[
' → logprob: -2.6444873809814453
    5. '(' → logprob: -3.1444873809814453
    6. '\' → logprob: -4.394487380981445
    7. ')' → logprob: -4.394487380981445
    8. '(
' → logprob: -4.519487380981445
    9. '[]' → logprob: -5.144487380981445
    10. '<|end|>' → logprob: -5.394487380981445

Token 411: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2562168836593628
    2. ' for' → logprob: -2.5062170028686523
    3. '<|end|>' → logprob: -2.8812170028686523
    4. 'for' → logprob: -3.1312170028686523
    5. '
' → logprob: -3.8812170028686523
    6. '    
' → logprob: -4.256217002868652
    7. '```' → logprob: -6.381217002868652
    8. '	for' → logprob: -6.381217002868652
    9. '  
' → logprob: -6.631217002868652
    10. '[' → logprob: -6.756217002868652

Token 412: ' heading' (ID: 23808)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1249144971370697
    2. ' for' → logprob: -2.2499144077301025
    3. '   ' → logprob: -4.499914646148682
    4. '	for' → logprob: -7.249914646148682
    5. 'i' → logprob: -8.874914169311523
    6. '    
' → logprob: -10.874914169311523
    7. 'idx' → logprob: -11.249914169311523
    8. ' i' → logprob: -12.374914169311523
    9. '```' → logprob: -12.374914169311523
    10. '  ' → logprob: -12.999914169311523

Token 413: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5507119297981262
    2. 's' → logprob: -1.0507118701934814
    3. '=' → logprob: -2.6757118701934814
    4. ',' → logprob: -6.5507121086120605
    5. 'to' → logprob: -7.6757121086120605
    6. '_to' → logprob: -7.6757121086120605
    7. '_s' → logprob: -7.8007121086120605
    8. '_line' → logprob: -8.175711631774902
    9. 'for' → logprob: -8.175711631774902
    10. '=[]' → logprob: -8.175711631774902

Token 414: ' dist' (ID: 3601)
  Prédit: ' position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' position' → logprob: -1.1445214748382568
    2. 'position' → logprob: -1.8945214748382568
    3. '0' → logprob: -2.644521474838257
    4. 'pos' → logprob: -2.769521474838257
    5. 'st' → logprob: -3.144521474838257
    6. ' pos' → logprob: -3.957021474838257
    7. ' speed' → logprob: -4.082021713256836
    8. ' stuck' → logprob: -4.082021713256836
    9. ' destination' → logprob: -4.144521713256836
    10. ' current' → logprob: -4.144521713256836

Token 415: '_left' (ID: 22189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23704877495765686
    2. '=' → logprob: -1.6120487451553345
    3. ',' → logprob: -4.487048625946045
    4. 's' → logprob: -8.237049102783203
    5. '   ' → logprob: -10.987049102783203
    6. ' ,' → logprob: -11.862049102783203
    7. '[' → logprob: -11.862049102783203
    8. ' ' → logprob: -12.237049102783203
    9. '_' → logprob: -12.737049102783203
    10. '  ' → logprob: -13.112049102783203

Token 416: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16206136345863342
    2. '=' → logprob: -2.2870614528656006
    3. ',' → logprob: -3.0370614528656006
    4. ' ,' → logprob: -10.16206169128418
    5. ' ' → logprob: -12.16206169128418
    6. '   ' → logprob: -12.28706169128418
    7. '<|end|>' → logprob: -12.28706169128418
    8. 's' → logprob: -12.41206169128418
    9. '  ' → logprob: -12.53706169128418
    10. '[' → logprob: -13.66206169128418

Token 417: ' final' (ID: 1721)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.6845303177833557
    2. 'position' → logprob: -2.684530258178711
    3. '0' → logprob: -2.809530258178711
    4. 'speed' → logprob: -3.059530258178711
    5. 'current' → logprob: -3.309530258178711
    6. 'st' → logprob: -3.309530258178711
    7. 'path' → logprob: -3.684530258178711
    8. 'curr' → logprob: -3.809530258178711
    9. 'time' → logprob: -4.434530258178711
    10. 'cur' → logprob: -4.559530258178711

Token 418: '_dist' (ID: 37968)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.44140467047691345
    2. ' =' → logprob: -2.3164045810699463
    3. '_destination' → logprob: -2.3164045810699463
    4. '=' → logprob: -3.3164045810699463
    5. '_dest' → logprob: -3.4414045810699463
    6. '_position' → logprob: -3.6914045810699463
    7. '_' → logprob: -4.316404819488525
    8. '_direction' → logprob: -4.316404819488525
    9. 'ized' → logprob: -4.816404819488525
    10. '_target' → logprob: -5.191404819488525

Token 419: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7448893189430237
    2. '=' → logprob: -0.8698893189430237
    3. ',' → logprob: -2.244889259338379
    4. '_' → logprob: -9.119889259338379
    5. '_left' → logprob: -9.744889259338379
    6. 's' → logprob: -9.994889259338379
    7. ' ' → logprob: -11.244889259338379
    8. '[' → logprob: -11.744889259338379
    9. ' ,' → logprob: -11.869889259338379
    10. '=[]' → logprob: -11.994889259338379

Token 420: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.10958236455917358
    2. '0' → logprob: -2.4845824241638184
    3. ' [' → logprob: -4.484582424163818
    4. '[-' → logprob: -5.359582424163818
    5. 'None' → logprob: -6.609582424163818
    6. ' ' → logprob: -7.734582424163818
    7. '-' → logprob: -8.10958194732666
    8. '(None' → logprob: -8.10958194732666
    9. ' None' → logprob: -8.35958194732666
    10. 'default' → logprob: -8.73458194732666

Token 421: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.061484772711992264
    2. '0' → logprob: -3.1864848136901855
    3. '[-' → logprob: -4.3114848136901855
    4. 'None' → logprob: -6.0614848136901855
    5. '-' → logprob: -6.5614848136901855
    6. ' [' → logprob: -8.186484336853027
    7. '(' → logprob: -9.061484336853027
    8. '[(' → logprob: -9.061484336853027
    9. '[V' → logprob: -9.061484336853027
    10. '(None' → logprob: -9.186484336853027

Token 422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09034328907728195
    2. '<|end|>' → logprob: -2.8403432369232178
    3. '
' → logprob: -3.8403432369232178
    4. ',
' → logprob: -5.965343475341797
    5. '<|end|>' → logprob: -6.715343475341797
    6. '  
' → logprob: -7.465343475341797
    7. 'def' → logprob: -7.965343475341797
    8. ' 
' → logprob: -8.090343475341797
    9. '    
' → logprob: -8.215343475341797
    10. '[' → logprob: -8.590343475341797

Token 423: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.023399915546178818
    2. 'inf' → logprob: -4.273399829864502
    3. ' ' → logprob: -4.898399829864502
    4. '-' → logprob: -7.898399829864502
    5. 'None' → logprob: -8.14840030670166
    6. '[' → logprob: -8.39840030670166
    7. ' inf' → logprob: -8.77340030670166
    8. 'int' → logprob: -9.14840030670166
    9. 'float' → logprob: -9.14840030670166
    10. ' None' → logprob: -9.27340030670166

Token 424: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03009953163564205
    2. 'inf' → logprob: -3.655099630355835
    3. 'None' → logprob: -6.780099391937256
    4. '-' → logprob: -7.030099391937256
    5. 'int' → logprob: -7.405099391937256
    6. 'float' → logprob: -8.155099868774414
    7. 'sys' → logprob: -8.655099868774414
    8. 'extr' → logprob: -8.780099868774414
    9. '[]' → logprob: -9.405099868774414
    10. '1' → logprob: -9.655099868774414

Token 425: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012921375222504139
    2. 'inf' → logprob: -4.637921333312988
    3. '[]' → logprob: -7.262921333312988
    4. '[' → logprob: -7.512921333312988
    5. 'None' → logprob: -7.512921333312988
    6. 'int' → logprob: -7.762921333312988
    7. '-' → logprob: -8.137921333312988
    8. ' ' → logprob: -8.887921333312988
    9. '[]
' → logprob: -9.137921333312988
    10. 'sys' → logprob: -9.762921333312988

Token 427: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07668018341064453
    2. 'inf' → logprob: -2.7016801834106445
    3. 'None' → logprob: -6.2016801834106445
    4. 'int' → logprob: -6.5766801834106445
    5. '-' → logprob: -6.9516801834106445
    6. 'float' → logprob: -7.5766801834106445
    7. '[' → logprob: -7.8266801834106445
    8. '[]' → logprob: -7.8266801834106445
    9. '[]
' → logprob: -8.951680183410645
    10. '[int' → logprob: -9.076680183410645

Token 428: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.21629810333251953
    2. '<|end|>' → logprob: -1.7162981033325195
    3. '   ' → logprob: -5.2162981033325195
    4. '<|end|>' → logprob: -5.9662981033325195
    5. '  
' → logprob: -6.5912981033325195
    6. '```' → logprob: -6.5912981033325195
    7. '    
' → logprob: -6.9662981033325195
    8. ' for' → logprob: -6.9662981033325195
    9. 'for' → logprob: -7.4662981033325195
    10. '
' → logprob: -8.09129810333252

Token 429: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 430: ' stuck' (ID: 24327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.5362896919250488
    2. '	for' → logprob: -1.6612896919250488
    3. 'for' → logprob: -1.6612896919250488
    4. '<|end|>' → logprob: -1.7862896919250488
    5. ' for' → logprob: -1.9112896919250488
    6. '\t' → logprob: -3.286289691925049
    7. '\n' → logprob: -4.286289691925049
    8. '
' → logprob: -5.036289691925049
    9. '    
' → logprob: -5.411289691925049
    10. '	
' → logprob: -5.911289691925049

Token 431: '_cost' (ID: 36820)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.2548976242542267
    2. '=' → logprob: -2.3798975944519043
    3. '_' → logprob: -2.5048975944519043
    4. ' =' → logprob: -3.3798975944519043
    5. '_index' → logprob: -5.879897594451904
    6. '_orders' → logprob: -6.129897594451904
    7. '_idx' → logprob: -6.504897594451904
    8. ',' → logprob: -6.504897594451904
    9. '_count' → logprob: -6.629897594451904
    10. '_status' → logprob: -6.879897594451904

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0754900574684143
    2. '=' → logprob: -2.7004899978637695
    3. ',' → logprob: -5.2004899978637695
    4. ' ,' → logprob: -11.45048999786377
    5. ' ' → logprob: -12.32548999786377
    6. '   ' → logprob: -12.82548999786377
    7. 's' → logprob: -13.32548999786377
    8. '  ' → logprob: -13.45048999786377
    9. ')' → logprob: -13.82548999786377
    10. '[' → logprob: -14.70048999786377

Token 433: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.222051203250885
    2. 'inf' → logprob: -2.9720511436462402
    3. 'int' → logprob: -3.0970511436462402
    4. '100' → logprob: -3.3470511436462402
    5. '10' → logprob: -3.8470511436462402
    6. '999' → logprob: -4.72205114364624
    7. 'extr' → logprob: -4.84705114364624
    8. '1' → logprob: -5.34705114364624
    9. ' ' → logprob: -5.84705114364624
    10. 'default' → logprob: -5.97205114364624

Token 434: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11905618757009506
    2. 'inf' → logprob: -2.494056224822998
    3. 'float' → logprob: -4.494056224822998
    4. 'int' → logprob: -4.494056224822998
    5. ']' → logprob: -6.369056224822998
    6. 'None' → logprob: -6.744056224822998
    7. '100' → logprob: -7.369056224822998
    8. '-' → logprob: -7.369056224822998
    9. '[]' → logprob: -7.369056224822998
    10. '10' → logprob: -7.744056224822998

Token 435: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00029720881138928235
    2. ']*' → logprob: -8.375297546386719
    3. ' for' → logprob: -10.125297546386719
    4. ',' → logprob: -11.250297546386719
    5. ']*(' → logprob: -11.625297546386719
    6. 'for' → logprob: -13.375297546386719
    7. ' ]' → logprob: -13.500297546386719
    8. ']+' → logprob: -14.500297546386719
    9. '*' → logprob: -14.875297546386719
    10. '0' → logprob: -14.875297546386719

Token 436: 'V' (ID: 53)
  Prédit: 'T'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'T' → logprob: -0.03462957963347435
    2. '(T' → logprob: -4.5346293449401855
    3. '(' → logprob: -4.9096293449401855
    4. '100' → logprob: -5.1596293449401855
    5. 'V' → logprob: -5.6596293449401855
    6. '101' → logprob: -6.4096293449401855
    7. '10' → logprob: -6.9096293449401855
    8. '(V' → logprob: -7.2846293449401855
    9. '3' → logprob: -7.7846293449401855
    10. '200' → logprob: -8.159629821777344

Token 437: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6932218074798584
    2. '
' → logprob: -1.1932218074798584
    3. '<|end|>' → logprob: -1.8182218074798584
    4. ' for' → logprob: -4.3182220458984375
    5. 'for' → logprob: -4.9432220458984375
    6. '    
' → logprob: -5.0682220458984375
    7. '<|end|>' → logprob: -5.5682220458984375
    8. 'def' → logprob: -6.9432220458984375
    9. ',' → logprob: -7.1932220458984375
    10. '  
' → logprob: -7.5682220458984375

Token 438: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5332536697387695
    2. '   ' → logprob: -1.6582536697387695
    3. ' for' → logprob: -2.1582536697387695
    4. '
' → logprob: -2.5332536697387695
    5. '	for' → logprob: -4.4082536697387695
    6. '<|end|>' → logprob: -4.4082536697387695
    7. '    
' → logprob: -6.7832536697387695
    8. 'def' → logprob: -7.9082536697387695
    9. '```' → logprob: -8.28325366973877
    10. '<|end|>' → logprob: -8.40825366973877

Token 439: ' cost' (ID: 3097)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16450375318527222
    2. '   ' → logprob: -2.414503812789917
    3. ' for' → logprob: -2.914503812789917
    4. '	for' → logprob: -5.289503574371338
    5. 'i' → logprob: -7.664503574371338
    6. '\t' → logprob: -8.039504051208496
    7. 'next' → logprob: -8.539504051208496
    8. '    
' → logprob: -8.539504051208496
    9. 'idx' → logprob: -8.539504051208496
    10. 'current' → logprob: -8.664504051208496

Token 440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1276984065771103
    2. '=' → logprob: -2.1276984214782715
    3. ',' → logprob: -7.2526984214782715
    4. '[' → logprob: -10.377697944641113
    5. '=[]' → logprob: -11.877697944641113
    6. ' =[' → logprob: -12.002697944641113
    7. ' ,' → logprob: -12.627697944641113
    8. '=[' → logprob: -12.752697944641113
    9. 's' → logprob: -12.877697944641113
    10. '[:]' → logprob: -13.502697944641113

Token 441: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.013826720416545868
    2. ' [' → logprob: -4.513826847076416
    3. 'default' → logprob: -6.513826847076416
    4. '{' → logprob: -7.638826847076416
    5. '{}' → logprob: -7.638826847076416
    6. ' defaultdict' → logprob: -8.138826370239258
    7. '[]' → logprob: -11.013826370239258
    8. '[v' → logprob: -12.138826370239258
    9. 'st' → logprob: -12.638826370239258
    10. ' {}' → logprob: -13.263826370239258

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005626800935715437
    2. 'inf' → logprob: -5.255626678466797
    3. 'float' → logprob: -8.505626678466797
    4. 'int' → logprob: -9.505626678466797
    5. ']' → logprob: -10.505626678466797
    6. ' ' → logprob: -11.380626678466797
    7. '(' → logprob: -11.630626678466797
    8. 'None' → logprob: -11.755626678466797
    9. '1' → logprob: -11.755626678466797
    10. '[' → logprob: -12.005626678466797

Token 443: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.25339236855506897
    2. ']' → logprob: -1.5033923387527466
    3. ']*(' → logprob: -6.628392219543457
    4. '*' → logprob: -9.753392219543457
    5. '+' → logprob: -10.378392219543457
    6. ' for' → logprob: -11.128392219543457
    7. ']+' → logprob: -11.128392219543457
    8. ' ]' → logprob: -11.503392219543457
    9. 'for' → logprob: -11.878392219543457
    10. '*(' → logprob: -14.378392219543457

Token 444: 'V' (ID: 53)
  Prédit: 'V'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'V' → logprob: -0.000632139970548451
    2. '(' → logprob: -8.375632286071777
    3. '(V' → logprob: -8.375632286071777
    4. 'T' → logprob: -8.750632286071777
    5. ' V' → logprob: -12.250632286071777
    6. '(T' → logprob: -13.000632286071777
    7. '```' → logprob: -14.250632286071777
    8. ' (' → logprob: -14.250632286071777
    9. '1' → logprob: -14.625632286071777
    10. '	V' → logprob: -14.875632286071777

Token 445: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 446: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 447: ' driver' (ID: 8931)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16380146145820618
    2. ' for' → logprob: -2.538801431655884
    3. '	for' → logprob: -3.038801431655884
    4. '   ' → logprob: -4.038801670074463
    5. 'i' → logprob: -6.038801670074463
    6. 't' → logprob: -7.663801670074463
    7. '\t' → logprob: -7.663801670074463
    8. '[' → logprob: -7.913801670074463
    9. '	' → logprob: -7.913801670074463
    10. 'idx' → logprob: -8.288801193237305

Token 448: '_hold' (ID: 160928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09930136054754257
    2. '_pos' → logprob: -3.599301338195801
    3. 's' → logprob: -4.224301338195801
    4. '_position' → logprob: -4.474301338195801
    5. '_positions' → logprob: -4.724301338195801
    6. '=' → logprob: -4.849301338195801
    7. '_idx' → logprob: -5.224301338195801
    8. ',' → logprob: -5.724301338195801
    9. '_location' → logprob: -5.849301338195801
    10. '_id' → logprob: -6.099301338195801

Token 449: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6245750188827515
    2. 'ing' → logprob: -0.8745750188827515
    3. '=' → logprob: -3.874575138092041
    4. ' =' → logprob: -4.249575138092041
    5. 'er' → logprob: -5.749575138092041
    6. 'ed' → logprob: -5.874575138092041
    7. 'ings' → logprob: -6.124575138092041
    8. '_' → logprob: -6.499575138092041
    9. '_cost' → logprob: -6.874575138092041
    10. '_s' → logprob: -8.499574661254883

Token 450: ' store' (ID: 4897)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.277923047542572
    2. '0' → logprob: -2.027923107147217
    3. 'False' → logprob: -3.277923107147217
    4. ' [' → logprob: -4.027923107147217
    5. '{}' → logprob: -4.152923107147217
    6. 'None' → logprob: -4.152923107147217
    7. 'set' → logprob: -5.152923107147217
    8. '-' → logprob: -5.652923107147217
    9. '[-' → logprob: -6.027923107147217
    10. 'default' → logprob: -6.027923107147217

Token 451: '_hold' (ID: 160928)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32202714681625366
    2. 'd' → logprob: -2.5720272064208984
    3. '=' → logprob: -3.5720272064208984
    4. 's' → logprob: -3.6970272064208984
    5. 'out' → logprob: -4.072027206420898
    6. 'ing' → logprob: -4.322027206420898
    7. 'r' → logprob: -4.322027206420898
    8. '[' → logprob: -4.322027206420898
    9. 'back' → logprob: -4.572027206420898
    10. '=[]' → logprob: -4.697027206420898

Token 452: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38869068026542664
    2. ' =' → logprob: -1.888690710067749
    3. '[' → logprob: -2.263690710067749
    4. 'd' → logprob: -3.263690710067749
    5. 'ed' → logprob: -4.51369047164917
    6. '=[' → logprob: -5.13869047164917
    7. '=[]' → logprob: -5.76369047164917
    8. '   ' → logprob: -5.88869047164917
    9. '*' → logprob: -6.38869047164917
    10. 'ing' → logprob: -7.38869047164917

Token 453: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07393568754196167
    2. 'False' → logprob: -3.1989357471466064
    3. '[' → logprob: -4.823935508728027
    4. '{}' → logprob: -4.948935508728027
    5. '[]' → logprob: -5.698935508728027
    6. 'None' → logprob: -5.823935508728027
    7. 'set' → logprob: -6.323935508728027
    8. ' ' → logprob: -6.448935508728027
    9. 'True' → logprob: -6.573935508728027
    10. '{' → logprob: -6.948935508728027

Token 454: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08482129126787186
    2. '[' → logprob: -3.3348212242126465
    3. 'False' → logprob: -3.5848212242126465
    4. '{}' → logprob: -5.5848212242126465
    5. 'None' → logprob: -5.5848212242126465
    6. 'default' → logprob: -5.8348212242126465
    7. 'set' → logprob: -6.4598212242126465
    8. '{' → logprob: -6.8348212242126465
    9. 'True' → logprob: -6.8348212242126465
    10. '-' → logprob: -6.9598212242126465

Token 455: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 456: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 457: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0013574945041909814
    2. ' for' → logprob: -6.751357555389404
    3. '   ' → logprob: -8.876357078552246
    4. '	for' → logprob: -10.001357078552246
    5. '    
' → logprob: -14.751357078552246
    6. '
' → logprob: -15.001357078552246
    7. '\t' → logprob: -15.126357078552246
    8. 'i' → logprob: -15.501357078552246
    9. 'while' → logprob: -15.626357078552246
    10. '    ' → logprob: -16.251358032226562

Token 458: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.040457421680912e-05
    2. ' for' → logprob: -9.750070571899414
    3. '   ' → logprob: -11.375070571899414
    4. '
' → logprob: -15.125070571899414
    5. 'while' → logprob: -16.000070571899414
    6. 'def' → logprob: -16.500070571899414
    7. 'prev' → logprob: -16.750070571899414
    8. '```' → logprob: -16.750070571899414
    9. 'current' → logprob: -17.750070571899414
    10. '	for' → logprob: -17.750070571899414

Token 459: ' extreme' (ID: 23700)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.5543226003646851
    2. ' _' → logprob: -1.429322600364685
    3. '_' → logprob: -1.804322600364685
    4. 't' → logprob: -4.179322719573975
    5. ' i' → logprob: -5.429322719573975
    6. 'i' → logprob: -7.304322719573975
    7. '_t' → logprob: -8.804322242736816
    8. ' T' → logprob: -8.804322242736816
    9. '_T' → logprob: -9.304322242736816
    10. ' ' → logprob: -9.429322242736816

Token 460: ' obsc' (ID: 39503)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.23742613196372986
    2. 'i' → logprob: -2.4874260425567627
    3. ' i' → logprob: -3.1124260425567627
    4. ' _' → logprob: -3.4874260425567627
    5. 't' → logprob: -4.737426280975342
    6. ' idx' → logprob: -4.862426280975342
    7. ' t' → logprob: -5.112426280975342
    8. ' line' → logprob: -5.487426280975342
    9. 'idx' → logprob: -5.737426280975342
    10. ' in' → logprob: -5.987426280975342

Token 461: 'urity' (ID: 168725)
  Prédit: 'ure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ure' → logprob: -0.009026841260492802
    2. 'ene' → logprob: -4.884027004241943
    3. 'ur' → logprob: -7.634027004241943
    4. 'urity' → logprob: -7.634027004241943
    5. '```' → logprob: -8.384026527404785
    6. '_' → logprob: -10.884026527404785
    7. '

' → logprob: -11.009026527404785
    8. '#' → logprob: -11.009026527404785
    9. '[' → logprob: -11.134026527404785
    10. 'ule' → logprob: -11.134026527404785

Token 462: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9300262928009033
    2. '   ' → logprob: -1.6800262928009033
    3. ' for' → logprob: -1.9300262928009033
    4. '
' → logprob: -1.9300262928009033
    5. '<|end|>' → logprob: -2.1800262928009033
    6. '    
' → logprob: -5.055026054382324
    7. '<|end|>' → logprob: -5.930026054382324
    8. '\n' → logprob: -6.180026054382324
    9. '	for' → logprob: -7.055026054382324
    10. '```' → logprob: -7.680026054382324

Token 463: ' define' (ID: 13174)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2942682206630707
    2. ' for' → logprob: -1.419268250465393
    3. '
' → logprob: -5.1692681312561035
    4. '   ' → logprob: -5.5442681312561035
    5. 'while' → logprob: -7.2942681312561035
    6. 'def' → logprob: -7.5442681312561035
    7. 'i' → logprob: -7.9192681312561035
    8. ' i' → logprob: -8.044268608093262
    9. ' while' → logprob: -8.169268608093262
    10. '    
' → logprob: -8.169268608093262

Token 464: ' inline' (ID: 15905)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3431686460971832
    2. ' def' → logprob: -1.3431686162948608
    3. 'class' → logprob: -4.71816873550415
    4. '   ' → logprob: -4.96816873550415
    5. 'lambda' → logprob: -4.96816873550415
    6. ' lambda' → logprob: -6.84316873550415
    7. 'a' → logprob: -6.96816873550415
    8. ' class' → logprob: -7.46816873550415
    9. 'driver' → logprob: -7.46816873550415
    10. ' driver' → logprob: -7.59316873550415

Token 465: ' identity' (ID: 16696)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3898167908191681
    2. ' def' → logprob: -1.3898167610168457
    3. 'lambda' → logprob: -3.6398167610168457
    4. '   ' → logprob: -3.7648167610168457
    5. ' lambda' → logprob: -4.764816761016846
    6. ' functions' → logprob: -6.389816761016846
    7. '```' → logprob: -6.639816761016846
    8. '(lambda' → logprob: -6.764816761016846
    9. 'f' → logprob: -6.889816761016846
    10. 'solve' → logprob: -7.014816761016846

Token 466: ' function' (ID: 1114)
  Prédit: '=lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.8191448450088501
    2. ' =' → logprob: -1.69414484500885
    3. 'lambda' → logprob: -1.94414484500885
    4. 'def' → logprob: -2.6941447257995605
    5. '=' → logprob: -2.6941447257995605
    6. '(lambda' → logprob: -3.4441447257995605
    7. '   ' → logprob: -3.6941447257995605
    8. '
' → logprob: -3.8191447257995605
    9. 'f' → logprob: -5.5691447257995605
    10. 'identity' → logprob: -5.6941447257995605

Token 467: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1293269544839859
    2. 'identity' → logprob: -2.3793270587921143
    3. 'id' → logprob: -3.8793270587921143
    4. '_identity' → logprob: -6.004326820373535
    5. 'iden' → logprob: -7.129326820373535
    6. 'i' → logprob: -7.379326820373535
    7. ' identity' → logprob: -7.504326820373535
    8. 'ident' → logprob: -7.629326820373535
    9. 'idt' → logprob: -8.004326820373535
    10. '(identity' → logprob: -8.004326820373535

Token 468: ' unusual' (ID: 30529)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.060053057968616486
    2. '(lambda' → logprob: -3.0600531101226807
    3. 'id' → logprob: -5.310052871704102
    4. 'identity' → logprob: -5.810052871704102
    5. '_' → logprob: -7.185052871704102
    6. 'f' → logprob: -7.560052871704102
    7. '=lambda' → logprob: -7.685052871704102
    8. '_lambda' → logprob: -8.310052871704102
    9. 'x' → logprob: -8.435052871704102
    10. ' lambda' → logprob: -8.560052871704102

Token 469: ' name' (ID: 1308)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.17184136807918549
    2. 'syntax' → logprob: -2.2968413829803467
    3. '(lambda' → logprob: -3.9218413829803467
    4. 'name' → logprob: -4.046841144561768
    5. ' lambda' → logprob: -4.546841144561768
    6. ' syntax' → logprob: -5.796841144561768
    7. '=lambda' → logprob: -6.421841144561768
    8. 'kwargs' → logprob: -7.421841144561768
    9. 'def' → logprob: -7.546841144561768
    10. '_lambda' → logprob: -7.671841144561768

Token 470: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6264985799789429
    2. 'def' → logprob: -2.0014986991882324
    3. 'identity' → logprob: -2.8764986991882324
    4. 'id' → logprob: -3.2514986991882324
    5. 'lambda' → logprob: -3.6264986991882324
    6. '_id' → logprob: -4.063998699188232
    7. '_identity' → logprob: -4.063998699188232
    8. '_' → logprob: -4.376498699188232
    9. 'f' → logprob: -4.376498699188232
    10. 'i' → logprob: -4.501498699188232

Token 471: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7668851613998413
    2. 'def' → logprob: -2.391885280609131
    3. '_' → logprob: -2.641885280609131
    4. 'identity' → logprob: -3.516885280609131
    5. '_id' → logprob: -3.579385280609131
    6. '_i' → logprob: -3.829385280609131
    7. '_identity' → logprob: -3.829385280609131
    8. 'lambda' → logprob: -3.954385280609131
    9. 'λ' → logprob: -4.141885280609131
    10. 'id' → logprob: -4.266885280609131

Token 472: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.8669228553771973
    2. 'identity' → logprob: -2.4294228553771973
    3. '_' → logprob: -2.5544228553771973
    4. 'λ' → logprob: -2.8044228553771973
    5. 'lambda' → logprob: -3.0544228553771973
    6. '\xf0\x9d' → logprob: -3.2419228553771973
    7. '_identity' → logprob: -3.3669228553771973
    8. 'id' → logprob: -3.4294228553771973
    9. 'I' → logprob: -3.8044228553771973
    10. 'i' → logprob: -3.8669228553771973

Token 473: ' ω' (ID: 112349)
  Prédit: 'identity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'identity' → logprob: -1.8380043506622314
    2. '\xf0\x9d' → logprob: -1.9630043506622314
    3. 'λ' → logprob: -2.4630043506622314
    4. '_' → logprob: -2.7130043506622314
    5. 'ξ' → logprob: -2.7130043506622314
    6. '\xc9' → logprob: -2.9630043506622314
    7. 'ι' → logprob: -3.0880043506622314
    8. 'ζ' → logprob: -3.3380043506622314
    9. 'ψ' → logprob: -3.7130043506622314
    10. '__' → logprob: -3.7130043506622314

Token 474: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0055514052510261536
    2. '(' → logprob: -6.005551338195801
    3. 'x' → logprob: -7.130551338195801
    4. 'λ' → logprob: -7.380551338195801
    5. '(a' → logprob: -8.2555513381958
    6. '(s' → logprob: -8.3805513381958
    7. '(w' → logprob: -8.8805513381958
    8. '(n' → logprob: -8.8805513381958
    9. '(lambda' → logprob: -9.1305513381958
    10. '(t' → logprob: -9.5055513381958

Token 475: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005415419116616249
    2. '):
' → logprob: -5.255415439605713
    3. ')' → logprob: -9.005414962768555
    4. ' ):' → logprob: -10.880414962768555
    5. '=' → logprob: -11.630414962768555
    6. '   ' → logprob: -11.755414962768555
    7. ':' → logprob: -12.130414962768555
    8. '):
' → logprob: -12.255414962768555
    9. '):

' → logprob: -13.130414962768555
    10. ' ' → logprob: -13.630414962768555

Token 476: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -1.0016247034072876
    2. 'return' → logprob: -1.3766247034072876
    3. '   ' → logprob: -1.8766247034072876
    4. 'x' → logprob: -2.126624584197998
    5. ' x' → logprob: -2.251624584197998
    6. '    ' → logprob: -6.126624584197998
    7. '	return' → logprob: -8.251625061035156
    8. ' ' → logprob: -9.126625061035156
    9. ' ' → logprob: -10.251625061035156
    10. '   ' → logprob: -10.376625061035156

Token 477: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.003181159496307373
    2. ' x' → logprob: -5.753180980682373
    3. '   ' → logprob: -13.628181457519531
    4. ' ' → logprob: -13.878181457519531
    5. '	x' → logprob: -14.503181457519531
    6. '  ' → logprob: -14.628181457519531
    7. ' ' → logprob: -15.753181457519531
    8. '    ' → logprob: -16.50318145751953
    9. '(x' → logprob: -16.62818145751953
    10. '     ' → logprob: -17.62818145751953

Token 478: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14740176498889923
    2. '<|end|>' → logprob: -2.022401809692383
    3. '<|end|>' → logprob: -6.022401809692383
    4. '   ' → logprob: -7.147401809692383
    5. '    
' → logprob: -7.147401809692383
    6. '  
' → logprob: -8.022401809692383
    7. '

' → logprob: -9.272401809692383
    8. '\n' → logprob: -9.897401809692383
    9. ' for' → logprob: -10.647401809692383
    10. ' 
' → logprob: -10.647401809692383

Token 479: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1903141736984253
    2. '   ' → logprob: -2.940314292907715
    3. '<|end|>' → logprob: -3.190314292907715
    4. ' for' → logprob: -3.440314292907715
    5. 'for' → logprob: -3.440314292907715
    6. '    
' → logprob: -5.440314292907715
    7. '```' → logprob: -5.565314292907715
    8. '  
' → logprob: -6.565314292907715
    9. '[
' → logprob: -6.690314292907715
    10. '' → logprob: -7.315314292907715

Token 480: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.009561288170516491
    2. '   ' → logprob: -4.759561061859131
    3. ' for' → logprob: -7.009561061859131
    4. '	for' → logprob: -10.884561538696289
    5. '
' → logprob: -11.259561538696289
    6. '    
' → logprob: -11.509561538696289
    7. '```' → logprob: -15.634561538696289
    8. '  ' → logprob: -15.759561538696289
    9. 'i' → logprob: -15.884561538696289
    10. ' ' → logprob: -16.25956153869629

Token 481: ' t' (ID: 260)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.2858807146549225
    2. ' t' → logprob: -1.6608806848526
    3. '_' → logprob: -3.0358808040618896
    4. ' i' → logprob: -4.7858805656433105
    5. 't' → logprob: -6.9108805656433105
    6. ' ' → logprob: -8.035881042480469
    7. ' ti' → logprob: -8.535881042480469
    8. ' tc' → logprob: -8.785881042480469
    9. ' idx' → logprob: -9.410881042480469
    10. 'i' → logprob: -9.660881042480469

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0802922174334526
    2. 'in' → logprob: -2.580292224884033
    3. ',' → logprob: -6.955292224884033
    4. ' ' → logprob: -8.080291748046875
    5. '_' → logprob: -10.330291748046875
    6. ' ,' → logprob: -10.705291748046875
    7. '  ' → logprob: -10.955291748046875
    8. '	in' → logprob: -11.080291748046875
    9. '+' → logprob: -11.705291748046875
    10. '   ' → logprob: -12.080291748046875

Token 483: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00029744720086455345
    2. ' range' → logprob: -8.125297546386719
    3. 'T' → logprob: -15.375297546386719
    4. '0' → logprob: -16.00029754638672
    5. '(range' → logprob: -16.00029754638672
    6. '[' → logprob: -16.25029754638672
    7. '	range' → logprob: -16.25029754638672
    8. 'r' → logprob: -16.37529754638672
    9. 'ra' → logprob: -16.50029754638672
    10. 'rang' → logprob: -16.62529754638672

Token 484: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.005241702310740948
    2. '(' → logprob: -5.255241870880127
    3. '(
' → logprob: -12.505241394042969
    4. 'T' → logprob: -12.880241394042969
    5. ' (' → logprob: -14.130241394042969
    6. '(t' → logprob: -14.880241394042969
    7. ' T' → logprob: -15.505241394042969
    8. '(len' → logprob: -16.00524139404297
    9. '   ' → logprob: -17.00524139404297
    10. '(

' → logprob: -17.13024139404297

Token 485: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05951711907982826
    2. '):
' → logprob: -2.9345171451568604
    3. '+' → logprob: -5.559516906738281
    4. '   ' → logprob: -8.059516906738281
    5. ':' → logprob: -8.184516906738281
    6. '):
' → logprob: -9.309516906738281
    7. ' ):' → logprob: -10.684516906738281
    8. ' +' → logprob: -10.809516906738281
    9. ')' → logprob: -10.809516906738281
    10. ',' → logprob: -10.934516906738281

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05068459361791611
    2. ' line' → logprob: -3.675684690475464
    3. '   ' → logprob: -4.175684452056885
    4. '    ' → logprob: -5.925684452056885
    5. '```' → logprob: -6.175684452056885
    6. ' tokens' → logprob: -7.300684452056885
    7. ' input' → logprob: -7.800684452056885
    8. 'line' → logprob: -8.050684928894043
    9. ',' → logprob: -8.300684928894043
    10. '	line' → logprob: -8.425684928894043

Token 487: ' N' (ID: 478)
  Prédit: 'cmd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cmd' → logprob: -0.7688162922859192
    2. 'line' → logprob: -1.1438162326812744
    3. '   ' → logprob: -2.0188162326812744
    4. 'parts' → logprob: -3.5188162326812744
    5. 'c' → logprob: -3.8938162326812744
    6. 's' → logprob: -4.1438164710998535
    7. ' line' → logprob: -5.0188164710998535
    8. 'command' → logprob: -6.0188164710998535
    9. 'raw' → logprob: -6.1438164710998535
    10. ' parts' → logprob: -6.7688164710998535

Token 488: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.025813765823841095
    2. ' =' → logprob: -3.9008138179779053
    3. '=' → logprob: -5.775813579559326
    4. ' ,' → logprob: -6.775813579559326
    5. '   ' → logprob: -7.400813579559326
    6. '       ' → logprob: -9.775814056396484
    7. ',k' → logprob: -10.025814056396484
    8. ',x' → logprob: -10.650814056396484
    9. '_,' → logprob: -10.650814056396484
    10. ',K' → logprob: -10.775814056396484

Token 489: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.08739090710878372
    2. 'ω' → logprob: -2.587390899658203
    3. ' int' → logprob: -4.837390899658203
    4. ' ω' → logprob: -7.587390899658203
    5. 'omega' → logprob: -12.212390899658203
    6. '   ' → logprob: -12.337390899658203
    7. ' ' → logprob: -12.462390899658203
    8. '  ' → logprob: -12.587390899658203
    9. '	int' → logprob: -13.087390899658203
    10. 'λ' → logprob: -13.337390899658203

Token 490: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0003872974484693259
    2. '(' → logprob: -8.500387191772461
    3. 'input' → logprob: -8.625387191772461
    4. '(sys' → logprob: -13.375387191772461
    5. '()' → logprob: -13.500387191772461
    6. '(
' → logprob: -14.750387191772461
    7. ' input' → logprob: -15.250387191772461
    8. ' (' → logprob: -15.375387191772461
    9. '=input' → logprob: -15.750387191772461
    10. '((' → logprob: -16.00038719177246

Token 491: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.003238555509597063
    2. '())
' → logprob: -6.003238677978516
    3. '()' → logprob: -7.253238677978516
    4. ')' → logprob: -10.628238677978516
    5. '().' → logprob: -11.128238677978516
    6. '())
' → logprob: -12.503238677978516
    7. '(' → logprob: -12.503238677978516
    8. ' ())' → logprob: -12.878238677978516
    9. '())

' → logprob: -13.003238677978516
    10. '()
' → logprob: -13.128238677978516

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6386162638664246
    2. '<|end|>' → logprob: -0.7636162638664246
    3. '
' → logprob: -6.51361608505249
    4. '<|end|>' → logprob: -6.63861608505249
    5. ' for' → logprob: -7.26361608505249
    6. 'for' → logprob: -7.26361608505249
    7. '        
' → logprob: -7.51361608505249
    8. 'tokens' → logprob: -8.013616561889648
    9. ',' → logprob: -8.138616561889648
    10. '```' → logprob: -9.513616561889648

Token 493: ' if' (ID: 538)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6840222477912903
    2. '       ' → logprob: -1.3090221881866455
    3. 'for' → logprob: -2.3090221881866455
    4. ' points' → logprob: -3.5590221881866455
    5. ' if' → logprob: -4.059022426605225
    6. 'points' → logprob: -4.684022426605225
    7. ' items' → logprob: -5.434022426605225
    8. ' commands' → logprob: -5.559022426605225
    9. ' positions' → logprob: -5.684022426605225
    10. ' choices' → logprob: -5.809022426605225

Token 494: ' N' (ID: 478)
  Prédit: ' N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' N' → logprob: -0.24019700288772583
    2. 'N' → logprob: -1.740196943283081
    3. ' ω' → logprob: -4.36519718170166
    4. ' not' → logprob: -5.24019718170166
    5. 'ω' → logprob: -5.49019718170166
    6. ' cost' → logprob: -5.49019718170166
    7. ' t' → logprob: -5.99019718170166
    8. 'cost' → logprob: -6.36519718170166
    9. 't' → logprob: -6.61519718170166
    10. ' ' → logprob: -6.74019718170166

Token 495: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2879008650779724
    2. ' >' → logprob: -2.162900924682617
    3. '==' → logprob: -2.662900924682617
    4. ' <' → logprob: -3.537900924682617
    5. '>' → logprob: -3.787900924682617
    6. ':' → logprob: -4.912900924682617
    7. ' <=' → logprob: -5.787900924682617
    8. '<' → logprob: -6.537900924682617
    9. ' !=' → logprob: -7.662900924682617
    10. '<=' → logprob: -8.037900924682617

Token 496: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08245174586772919
    2. ' ' → logprob: -2.582451820373535
    3. '1' → logprob: -5.957451820373535
    4. '-' → logprob: -7.707451820373535
    5. 'ω' → logprob: -8.457451820373535
    6. ' -' → logprob: -9.582451820373535
    7. '  ' → logprob: -9.832451820373535
    8. '   ' → logprob: -10.519951820373535
    9. ' ω' → logprob: -10.707451820373535
    10. '2' → logprob: -10.707451820373535

Token 497: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.036527909338474274
    2. '-' → logprob: -4.03652811050415
    3. '1' → logprob: -4.41152811050415
    4. 'ω' → logprob: -5.66152811050415
    5. ' ' → logprob: -6.53652811050415
    6. '2' → logprob: -8.161527633666992
    7. '100' → logprob: -9.161527633666992
    8. '3' → logprob: -9.661527633666992
    9. 'st' → logprob: -9.849027633666992
    10. ' -' → logprob: -10.224027633666992

Token 498: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5762932300567627
    2. ':
' → logprob: -0.8262932300567627
    3. ' and' → logprob: -9.076292991638184
    4. '       ' → logprob: -10.076292991638184
    5. '           ' → logprob: -10.326292991638184
    6. '<|end|>' → logprob: -10.326292991638184
    7. ' :
' → logprob: -10.701292991638184
    8. ',' → logprob: -10.701292991638184
    9. '[' → logprob: -10.951292991638184
    10. ':

' → logprob: -11.076292991638184

Token 499: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7878819108009338
    2. ':' → logprob: -1.037881851196289
    3. ':
' → logprob: -2.037881851196289
    4. '
' → logprob: -4.037881851196289
    5. '	       ' → logprob: -4.912881851196289
    6. ',' → logprob: -5.162881851196289
    7. '            
' → logprob: -5.287881851196289
    8. '		' → logprob: -5.662881851196289
    9. '<|end|>' → logprob: -5.662881851196289
    10. '               ' → logprob: -6.412881851196289

Token 500: ' new' (ID: 620)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6560765504837036
    2. 'x' → logprob: -2.906076431274414
    3. ' command' → logprob: -2.906076431274414
    4. ' x' → logprob: -3.031076431274414
    5. 'driver' → logprob: -3.031076431274414
    6. 'command' → logprob: -3.156076431274414
    7. ' driver' → logprob: -3.281076431274414
    8. ' cost' → logprob: -3.656076431274414
    9. ' line' → logprob: -4.031076431274414
    10. 'cost' → logprob: -4.031076431274414

Token 501: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.1759775876998901
    2. '_cost' → logprob: -1.9259775876998901
    3. '_order' → logprob: -2.4259777069091797
    4. '_' → logprob: -2.9259777069091797
    5. '=' → logprob: -3.1759777069091797
    6. '_item' → logprob: -3.4259777069091797
    7. '_id' → logprob: -3.6759777069091797
    8. '_command' → logprob: -3.6759777069091797
    9. '_destination' → logprob: -3.6759777069091797
    10. '_pos' → logprob: -4.05097770690918

Token 502: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28188690543174744
    2. '=' → logprob: -1.4068869352340698
    3. ',' → logprob: -7.281887054443359
    4. 's' → logprob: -11.15688705444336
    5. ' ' → logprob: -11.78188705444336
    6. '[' → logprob: -12.53188705444336
    7. '=int' → logprob: -12.78188705444336
    8. ' ' → logprob: -12.90688705444336
    9. '_' → logprob: -13.03188705444336
    10. '_=' → logprob: -13.40688705444336

Token 503: ' dst' (ID: 23480)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -1.6086894273757935
    2. 'int' → logprob: -1.8586894273757935
    3. ' ' → logprob: -2.608689308166504
    4. ' =' → logprob: -2.608689308166504
    5. '_' → logprob: -2.858689308166504
    6. ' ω' → logprob: -2.983689308166504
    7. 'ω' → logprob: -3.108689308166504
    8. ' t' → logprob: -3.233689308166504
    9. '0' → logprob: -3.358689308166504
    10. ' input' → logprob: -3.608689308166504

Token 504: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31535178422927856
    2. ' =' → logprob: -1.3153517246246338
    3. ',' → logprob: -6.190351963043213
    4. ')' → logprob: -12.065351486206055
    5. '=int' → logprob: -12.190351486206055
    6. 'x' → logprob: -12.940351486206055
    7. ' ' → logprob: -12.940351486206055
    8. '_id' → logprob: -13.190351486206055
    9. '_' → logprob: -13.190351486206055
    10. 'oken' → logprob: -13.690351486206055

Token 505: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5820236802101135
    2. 'map' → logprob: -0.8320236802101135
    3. 'ω' → logprob: -6.207023620605469
    4. '   ' → logprob: -7.082023620605469
    5. ' ω' → logprob: -7.207023620605469
    6. '0' → logprob: -7.332023620605469
    7. 'int' → logprob: -7.957023620605469
    8. ' ' → logprob: -8.082023620605469
    9. 'tuple' → logprob: -8.832023620605469
    10. 'list' → logprob: -9.082023620605469

Token 506: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0010798488510772586
    2. '(' → logprob: -6.87608003616333
    3. '(lambda' → logprob: -10.626079559326172
    4. 'int' → logprob: -11.251079559326172
    5. '(str' → logprob: -11.876079559326172
    6. '(
' → logprob: -13.876079559326172
    7. '()' → logprob: -14.126079559326172
    8. '[int' → logprob: -14.876079559326172
    9. '=int' → logprob: -15.501079559326172
    10. '<int' → logprob: -15.751079559326172

Token 507: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.26797810196876526
    2. ',' → logprob: -2.5179781913757324
    3. '(' → logprob: -2.8929781913757324
    4. ',input' → logprob: -2.8929781913757324
    5. '(),' → logprob: -4.017978191375732
    6. ')' → logprob: -4.267978191375732
    7. '()' → logprob: -5.142978191375732
    8. '(int' → logprob: -6.642978191375732
    9. '   ' → logprob: -7.017978191375732
    10. '(lambda' → logprob: -7.267978191375732

Token 508: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0031888822559267282
    2. ' input' → logprob: -5.7531890869140625
    3. 'sys' → logprob: -12.253189086914062
    4. ')' → logprob: -13.003189086914062
    5. 'ω' → logprob: -13.628189086914062
    6. '   ' → logprob: -13.753189086914062
    7. ' ' → logprob: -14.628189086914062
    8. ' sys' → logprob: -15.378189086914062
    9. 'lambda' → logprob: -15.628189086914062
    10. 'int' → logprob: -15.753189086914062

Token 509: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001596771035110578
    2. '()' → logprob: -8.87515926361084
    3. ')' → logprob: -11.37515926361084
    4. '())' → logprob: -12.25015926361084
    5. '(' → logprob: -13.25015926361084
    6. ' ().' → logprob: -14.25015926361084
    7. '()
' → logprob: -14.62515926361084
    8. '()[' → logprob: -15.37515926361084
    9. '().__' → logprob: -15.50015926361084
    10. '   ' → logprob: -16.625160217285156

Token 510: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.000001907348633
    3. ' split' → logprob: -14.500001907348633
    4. '(split' → logprob: -16.875001907348633
    5. 'strip' → logprob: -17.375001907348633
    6. 'spl' → logprob: -17.500001907348633
    7. '.split' → logprob: -17.625001907348633
    8. ').' → logprob: -18.000001907348633
    9. '().' → logprob: -18.250001907348633
    10. '
' → logprob: -18.500001907348633

Token 511: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4051675498485565
    2. '())
' → logprob: -1.780167579650879
    3. ')' → logprob: -2.155167579650879
    4. '()' → logprob: -3.405167579650879
    5. ')
' → logprob: -4.280167579650879
    6. '()
' → logprob: -7.655167579650879
    7. '(' → logprob: -7.905167579650879
    8. '())
' → logprob: -8.155167579650879
    9. '(),' → logprob: -9.155167579650879
    10. '       ' → logprob: -9.280167579650879

Token 512: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 513: ' stuck' (ID: 24327)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.6814992427825928
    2. '
' → logprob: -1.8064992427825928
    3. ' ' → logprob: -2.3064992427825928
    4. '            
' → logprob: -3.5564992427825928
    5. '<|end|>' → logprob: -3.9314992427825928
    6. ' cost' → logprob: -4.056499481201172
    7. ' new' → logprob: -4.181499481201172
    8. '' → logprob: -4.431499481201172
    9. 'new' → logprob: -4.556499481201172
    10. '           ' → logprob: -4.556499481201172

Token 514: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.06216093897819519
    2. '_cost' → logprob: -2.8121609687805176
    3. '_id' → logprob: -8.68716049194336
    4. '_add' → logprob: -11.31216049194336
    5. '_' → logprob: -12.43716049194336
    6. '=_' → logprob: -13.68716049194336
    7. '.add' → logprob: -13.93716049194336
    8. '=' → logprob: -13.93716049194336
    9. ' =' → logprob: -14.18716049194336
    10. '_update' → logprob: -14.31216049194336

Token 515: ' |=' (ID: 19917)
  Prédit: '.add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0029907748103141785
    2. '.' → logprob: -6.12799072265625
    3. ' .' → logprob: -7.75299072265625
    4. '.update' → logprob: -8.37799072265625
    5. '.dis' → logprob: -9.75299072265625
    6. ' =' → logprob: -10.62799072265625
    7. '.remove' → logprob: -11.25299072265625
    8. '=' → logprob: -11.50299072265625
    9. '.clear' → logprob: -11.62799072265625
    10. '.=' → logprob: -12.12799072265625

Token 516: ' fro' (ID: 16956)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.00017946491425391287
    2. '{s' → logprob: -9.875179290771484
    3. '{i' → logprob: -10.125179290771484
    4. '{x' → logprob: -10.250179290771484
    5. ' {' → logprob: -10.375179290771484
    6. '{id' → logprob: -12.000179290771484
    7. '{k' → logprob: -12.250179290771484
    8. '{o' → logprob: -12.625179290771484
    9. '{name' → logprob: -13.125179290771484
    10. 'set' → logprob: -13.500179290771484

Token 517: 'zens' (ID: 33107)
  Prédit: 'zens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zens' → logprob: -0.0016544676618650556
    2. 'zen' → logprob: -6.751654624938965
    3. 'zes' → logprob: -8.876654624938965
    4. 'set' → logprob: -8.876654624938965
    5. '{' → logprob: -9.001654624938965
    6. 'zent' → logprob: -9.751654624938965
    7. 'zet' → logprob: -11.876654624938965
    8. 'ze' → logprob: -12.126654624938965
    9. 'z' → logprob: -12.501654624938965
    10. 'zend' → logprob: -12.876654624938965

Token 518: 'et' (ID: 292)
  Prédit: 'et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.00027099132421426475
    2. 'ate' → logprob: -8.50027084350586
    3. 'set' → logprob: -10.12527084350586
    4. 't' → logprob: -11.75027084350586
    5. 'al' → logprob: -11.87527084350586
    6. 'ent' → logprob: -13.00027084350586
    7. 'te' → logprob: -13.12527084350586
    8. '{' → logprob: -13.25027084350586
    9. 'ct' → logprob: -13.50027084350586
    10. 'e' → logprob: -13.50027084350586

Token 519: '([' (ID: 5194)
  Prédit: '({'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.16189044713974
    2. '([' → logprob: -2.0368905067443848
    3. '{' → logprob: -4.286890506744385
    4. '((' → logprob: -5.411890506744385
    5. '(' → logprob: -7.411890506744385
    6. '([(' → logprob: -8.911890029907227
    7. '([{' → logprob: -10.536890029907227
    8. '(({' → logprob: -10.786890029907227
    9. '(new' → logprob: -10.911890029907227
    10. '[' → logprob: -12.536890029907227

Token 520: 'dst' (ID: 29763)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.001050434890203178
    2. '{' → logprob: -7.2510504722595215
    3. '(new' → logprob: -8.501049995422363
    4. ' new' → logprob: -9.251049995422363
    5. '[new' → logprob: -10.251049995422363
    6. 'ω' → logprob: -12.626049995422363
    7. ')new' → logprob: -14.501049995422363
    8. '[' → logprob: -15.001049995422363
    9. ' {' → logprob: -15.376049995422363
    10. '	new' → logprob: -15.501049995422363

Token 521: '-' (ID: 12)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.007510672323405743
    2. '])
' → logprob: -5.007510662078857
    3. ' ])' → logprob: -7.507510662078857
    4. '])]' → logprob: -10.132511138916016
    5. '-' → logprob: -10.257511138916016
    6. ' -' → logprob: -10.382511138916016
    7. ')])' → logprob: -10.757511138916016
    8. '       ' → logprob: -11.257511138916016
    9. '])
' → logprob: -11.257511138916016
    10. ' ])
' → logprob: -11.257511138916016

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002973280206788331
    2. ' ' → logprob: -8.125297546386719
    3. '0' → logprob: -14.750297546386719
    4. '2' → logprob: -16.12529754638672
    5. '   ' → logprob: -16.31279754638672
    6. '(' → logprob: -16.37529754638672
    7. '```' → logprob: -16.37529754638672
    8. ')' → logprob: -16.62529754638672
    9. '{' → logprob: -17.18779754638672
    10. ']' → logprob: -17.31279754638672

Token 523: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1608906388282776
    2. '])
' → logprob: -1.9108905792236328
    3. '])
' → logprob: -8.160890579223633
    4. ' ])' → logprob: -8.535890579223633
    5. ' ])
' → logprob: -9.785890579223633
    6. '])

' → logprob: -10.660890579223633
    7. ']' → logprob: -10.910890579223633
    8. ']);' → logprob: -11.035890579223633
    9. ',' → logprob: -11.035890579223633
    10. '           ' → logprob: -11.285890579223633

Token 524: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0998213291168213
    2. ' 
' → logprob: -1.0998213291168213
    3. '<|end|>' → logprob: -1.5998213291168213
    4. ' ' → logprob: -2.5998213291168213
    5. '           ' → logprob: -4.099821090698242
    6. ')' → logprob: -4.349821090698242
    7. '  
' → logprob: -5.724821090698242
    8. '[' → logprob: -5.849821090698242
    9. '            
' → logprob: -6.099821090698242
    10. ',' → logprob: -6.224821090698242

Token 525: ' stuck' (ID: 24327)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -1.29746675491333
    2. '
' → logprob: -1.79746675491333
    3. 'cost' → logprob: -1.92246675491333
    4. ' 
' → logprob: -2.67246675491333
    5. 'order' → logprob: -2.79746675491333
    6. ' order' → logprob: -3.17246675491333
    7. '<|end|>' → logprob: -3.42246675491333
    8. ' ' → logprob: -3.42246675491333
    9. '	' → logprob: -3.54746675491333
    10. ' ' → logprob: -3.79746675491333

Token 526: '_cost' (ID: 36820)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.0025158505886793137
    2. '_cost' → logprob: -6.00251579284668
    3. '_orders' → logprob: -10.87751579284668
    4. 'order' → logprob: -11.62751579284668
    5. '_' → logprob: -12.00251579284668
    6. '_code' → logprob: -13.62751579284668
    7. 'cost' → logprob: -14.62751579284668
    8. 'Order' → logprob: -14.75251579284668
    9. '_answer' → logprob: -15.00251579284668
    10. '_ORDER' → logprob: -15.12751579284668

Token 527: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0018965097842738032
    2. '[new' → logprob: -6.626896381378174
    3. '[s' → logprob: -8.751896858215332
    4. '[t' → logprob: -8.876896858215332
    5. ' [' → logprob: -9.876896858215332
    6. '[next' → logprob: -11.001896858215332
    7. '[src' → logprob: -11.001896858215332
    8. '[d' → logprob: -11.126896858215332
    9. '[
' → logprob: -11.126896858215332
    10. '=' → logprob: -11.251896858215332

Token 528: 'dst' (ID: 29763)
  Prédit: 'dst'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dst' → logprob: -0.012521898373961449
    2. ' dst' → logprob: -4.762521743774414
    3. 'new' → logprob: -6.137521743774414
    4. '[' → logprob: -7.387521743774414
    5. '(dst' → logprob: -7.512521743774414
    6. ']' → logprob: -8.762521743774414
    7. '0' → logprob: -9.137521743774414
    8. ' new' → logprob: -9.262521743774414
    9. '	dst' → logprob: -10.262521743774414
    10. '(' → logprob: -11.137521743774414

Token 529: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001495484757469967
    2. ' -' → logprob: -9.250149726867676
    3. '[' → logprob: -10.625149726867676
    4. ']' → logprob: -11.250149726867676
    5. '()-' → logprob: -11.500149726867676
    6. ']-' → logprob: -12.750149726867676
    7. '   ' → logprob: -13.625149726867676
    8. '0' → logprob: -15.375149726867676
    9. '1' → logprob: -15.500149726867676
    10. '<|end|>' → logprob: -15.750149726867676

Token 530: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.62501335144043
    3. '<|end|>' → logprob: -13.50001335144043
    4. ']' → logprob: -14.68751335144043
    5. '2' → logprob: -14.81251335144043
    6. '```' → logprob: -15.06251335144043
    7. '...' → logprob: -15.56251335144043
    8. '
' → logprob: -15.62501335144043
    9. '   ' → logprob: -15.81251335144043
    10. '-' → logprob: -16.18751335144043

Token 531: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1542297750711441
    2. ']+=' → logprob: -2.1542298793792725
    3. ' ]' → logprob: -3.9042298793792725
    4. '+=' → logprob: -5.404229640960693
    5. ' +=' → logprob: -6.279229640960693
    6. ']=' → logprob: -8.279230117797852
    7. '=' → logprob: -9.529230117797852
    8. '+' → logprob: -10.529230117797852
    9. ']+' → logprob: -10.654230117797852
    10. ' =' → logprob: -12.154230117797852

Token 532: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.15466830134391785
    2. ' +=' → logprob: -2.5296683311462402
    3. '=' → logprob: -2.7796683311462402
    4. ' =' → logprob: -6.52966833114624
    5. ']+=' → logprob: -10.154667854309082
    6. '+' → logprob: -10.779667854309082
    7. '[' → logprob: -11.279667854309082
    8. '-=' → logprob: -12.279667854309082
    9. ' ' → logprob: -12.279667854309082
    10. ' +' → logprob: -12.904667854309082

Token 533: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5683980584144592
    2. 'new' → logprob: -1.4433979988098145
    3. 'ω' → logprob: -2.0683979988098145
    4. ' cost' → logprob: -4.0683979988098145
    5. 'dst' → logprob: -4.1933979988098145
    6. '1' → logprob: -4.1933979988098145
    7. ' new' → logprob: -5.0683979988098145
    8. '100' → logprob: -6.0683979988098145
    9. ' ω' → logprob: -6.0683979988098145
    10. 'inf' → logprob: -6.1933979988098145

Token 534: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7300716042518616
    2. 'new' → logprob: -0.9800716042518616
    3. 'ω' → logprob: -2.605071544647217
    4. 'dist' → logprob: -4.105071544647217
    5. '1' → logprob: -4.230071544647217
    6. 'wf' → logprob: -4.855071544647217
    7. 'edge' → logprob: -5.355071544647217
    8. 'dst' → logprob: -5.605071544647217
    9. '100' → logprob: -5.855071544647217
    10. 'int' → logprob: -5.855071544647217

Token 535: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 536: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 537: ' store' (ID: 4897)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.47892051935195923
    2. ' cost' → logprob: -1.1039204597473145
    3. 'order' → logprob: -5.2289204597473145
    4. '           ' → logprob: -5.2289204597473145
    5. '<|end|>' → logprob: -5.2289204597473145
    6. 'store' (adapté à ' store') → logprob: -5.6039204597473145
    7. 'continue' → logprob: -5.7289204597473145
    8. 'command' → logprob: -5.8539204597473145
    9. ' order' → logprob: -6.2289204597473145
    10. '       ' → logprob: -6.3539204597473145

Token 538: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.00026622318546287715
    2. '_' → logprob: -8.750266075134277
    3. '_cost' → logprob: -10.500266075134277
    4. '_order' → logprob: -11.250266075134277
    5. '_holder' → logprob: -11.500266075134277
    6. '=' → logprob: -11.625266075134277
    7. ' _' → logprob: -11.875266075134277
    8. '_h' → logprob: -12.125266075134277
    9. 'hold' → logprob: -12.250266075134277
    10. '_id' → logprob: -12.375266075134277

Token 539: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5291783213615417
    2. ' +=' → logprob: -0.9041783213615417
    3. '=' → logprob: -5.279178142547607
    4. ' =' → logprob: -7.154178142547607
    5. '+' → logprob: -9.904178619384766
    6. ' |=' → logprob: -10.529178619384766
    7. ' ' → logprob: -10.904178619384766
    8. ' -=' → logprob: -11.029178619384766
    9. ' +' → logprob: -11.404178619384766
    10. ']+=' → logprob: -11.779178619384766

Token 540: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07365211099386215
    2. 'ω' → logprob: -3.4486520290374756
    3. ' ' → logprob: -4.198652267456055
    4. 'dst' → logprob: -4.448652267456055
    5. 'new' → logprob: -5.323652267456055
    6. 'cost' → logprob: -5.448652267456055
    7. ' ω' → logprob: -6.823652267456055
    8. ' new' → logprob: -7.448652267456055
    9. ' dst' → logprob: -7.823652267456055
    10. ' cost' → logprob: -8.323652267456055

Token 541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.028753822669386864
    2. 'dst' → logprob: -4.278753757476807
    3. ' ' → logprob: -5.153753757476807
    4. 'ω' → logprob: -5.653753757476807
    5. 'cost' → logprob: -5.653753757476807
    6. 'new' → logprob: -7.278753757476807
    7. ' dst' → logprob: -8.778754234313965
    8. 'N' → logprob: -8.903754234313965
    9. ' cost' → logprob: -9.028754234313965
    10. ' ω' → logprob: -9.028754234313965

Token 542: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5351717472076416
    2. '<|end|>' → logprob: -0.9101717472076416
    3. '\n' → logprob: -4.9101715087890625
    4. '<|end|>' → logprob: -6.9101715087890625
    5. 'elif' → logprob: -7.1601715087890625
    6. '       ' → logprob: -7.7851715087890625
    7. '' → logprob: -8.035171508789062
    8. ' 
' → logprob: -8.035171508789062
    9. '  
' → logprob: -8.785171508789062
    10. '           ' → logprob: -8.910171508789062

Token 543: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 544: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 545: ' Ob' (ID: 3057)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4261668622493744
    2. 'elif' → logprob: -1.5511668920516968
    3. ' else' → logprob: -2.4261667728424072
    4. '       ' → logprob: -3.3011667728424072
    5. ' elif' → logprob: -4.801167011260986
    6. 'if' → logprob: -7.551167011260986
    7. ' if' → logprob: -8.926166534423828
    8. '           ' → logprob: -9.051166534423828
    9. '```' → logprob: -9.051166534423828
    10. '   ' → logprob: -9.426166534423828

Token 546: 'fusc' (ID: 96715)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0242695808410645
    2. 'serve' → logprob: -1.2742695808410645
    3. 'elif' → logprob: -2.1492695808410645
    4. 'else' → logprob: -2.6492695808410645
    5. '```' → logprob: -2.7742695808410645
    6. 'solete' → logprob: -3.2742695808410645
    7. 'viously' → logprob: -4.3992695808410645
    8. '           ' → logprob: -4.7742695808410645
    9. '   ' → logprob: -4.7742695808410645
    10. 's' → logprob: -4.8992695808410645

Token 547: 'ating' (ID: 1365)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.766144871711731
    2. 'ate' → logprob: -1.016144871711731
    3. '   ' → logprob: -3.1411447525024414
    4. '        
' → logprob: -3.6411447525024414
    5. '        ' → logprob: -4.516144752502441
    6. '    ' → logprob: -4.891144752502441
    7. '      ' → logprob: -5.141144752502441
    8. '    
' → logprob: -5.141144752502441
    9. '```' → logprob: -5.141144752502441
    10. ' ' → logprob: -5.266144752502441

Token 548: ' logic' (ID: 18485)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7842897772789001
    2. 'else' → logprob: -1.159289836883545
    3. 'elif' → logprob: -1.909289836883545
    4. ' elif' → logprob: -2.534289836883545
    5. '       ' → logprob: -7.784289836883545
    6. 'el' → logprob: -7.784289836883545
    7. '   ' → logprob: -7.784289836883545
    8. '    ' → logprob: -8.159289360046387
    9. ' ' → logprob: -9.034289360046387
    10. '```' → logprob: -9.159289360046387

Token 549: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10307153314352036
    2. '<|end|>' → logprob: -3.228071451187134
    3. 'elif' → logprob: -3.853071451187134
    4. ' else' → logprob: -4.103071689605713
    5. ' elif' → logprob: -4.603071689605713
    6. 'else' → logprob: -4.853071689605713
    7. '<|end|>' → logprob: -7.228071689605713
    8. '
' → logprob: -7.603071689605713
    9. '        
' → logprob: -7.978071689605713
    10. '   ' → logprob: -8.228071212768555

Token 550: ' one' (ID: 1001)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.5314624905586243
    2. 'else' → logprob: -1.4064624309539795
    3. 'continue' → logprob: -2.6564624309539795
    4. ' continue' → logprob: -3.2814624309539795
    5. 'ω' → logprob: -4.656462669372559
    6. ' else' → logprob: -4.656462669372559
    7. 'if' → logprob: -4.656462669372559
    8. ' not' → logprob: -5.156462669372559
    9. ' elif' → logprob: -5.281462669372559
    10. 'not' → logprob: -5.656462669372559

Token 551: '-l' (ID: 2887)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.4112086892127991
    2. '_' → logprob: -2.4112086296081543
    3. ' elif' → logprob: -2.4112086296081543
    4. ' more' → logprob: -3.1612086296081543
    5. ' line' → logprob: -4.161208629608154
    6. 'else' → logprob: -4.286208629608154
    7. '   ' → logprob: -4.536208629608154
    8. 'e' → logprob: -4.911208629608154
    9. '-' → logprob: -5.286208629608154
    10. 'space' → logprob: -5.411208629608154

Token 552: 'iners' (ID: 64245)
  Prédit: 'ine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.23135675489902496
    2. 'iner' → logprob: -1.6063567399978638
    3. '   ' → logprob: -6.481356620788574
    4. 'inen' → logprob: -6.856356620788574
    5. 'ined' → logprob: -7.481356620788574
    6. 'in' → logprob: -7.731356620788574
    7. 'inear' → logprob: -7.981356620788574
    8. 'en' → logprob: -8.356356620788574
    9. 'inem' → logprob: -8.981356620788574
    10. 'line' → logprob: -9.106356620788574

Token 553: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2776084542274475
    2. 'elif' → logprob: -2.5276083946228027
    3. 'else' → logprob: -2.5276083946228027
    4. ' else' → logprob: -2.9026083946228027
    5. ' elif' → logprob: -3.7776083946228027
    6. '<|end|>' → logprob: -6.152608394622803
    7. '```' → logprob: -7.152608394622803
    8. '   ' → logprob: -8.152608871459961
    9. '        
' → logprob: -8.652608871459961
    10. '	elif' → logprob: -8.652608871459961

Token 554: ' generator' (ID: 23989)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.22700996696949005
    2. ' continue' → logprob: -1.7270100116729736
    3. 'else' → logprob: -4.8520097732543945
    4. 'elif' → logprob: -5.3520097732543945
    5. 'pass' → logprob: -6.3520097732543945
    6. '
' → logprob: -6.7270097732543945
    7. '```' → logprob: -6.7270097732543945
    8. 'ω' → logprob: -6.8520097732543945
    9. 'continued' → logprob: -7.1020097732543945
    10. 'complex' → logprob: -7.2270097732543945

Token 555: ' abuse' (ID: 21562)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8448428511619568
    2. '        
' → logprob: -2.0948429107666016
    3. ':
' → logprob: -2.0948429107666016
    4. ' expressions' → logprob: -2.2198429107666016
    5. '       ' → logprob: -3.0948429107666016
    6. 'express' → logprob: -3.5948429107666016
    7. 'exp' → logprob: -3.8448429107666016
    8. ' expression' → logprob: -4.219842910766602
    9. 'expression' → logprob: -4.469842910766602
    10. '=' → logprob: -4.719842910766602

Token 556: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06456008553504944
    2. 'else' → logprob: -3.9395601749420166
    3. ' else' → logprob: -4.0645599365234375
    4. 'elif' → logprob: -4.1895599365234375
    5. ' elif' → logprob: -5.1895599365234375
    6. '<|end|>' → logprob: -5.6895599365234375
    7. ',' → logprob: -7.9395599365234375
    8. '           ' → logprob: -8.189559936523438
    9. '```' → logprob: -8.314559936523438
    10. '   ' → logprob: -8.314559936523438

Token 557: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030927561223506927
    2. '<|end|>' → logprob: -4.155927658081055
    3. ' else' → logprob: -5.155927658081055
    4. 'else' → logprob: -5.530927658081055
    5. 'elif' → logprob: -6.155927658081055
    6. ' elif' → logprob: -6.405927658081055
    7. '<|end|>' → logprob: -7.780927658081055
    8. ',' → logprob: -8.530927658081055
    9. '```' → logprob: -8.530927658081055
    10. '           ' → logprob: -9.280927658081055

Token 558: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -1.3548141717910767
    2. '       ' → logprob: -1.6048141717910767
    3. ' else' → logprob: -2.229814052581787
    4. ' cost' → logprob: -2.604814052581787
    5. 'elif' → logprob: -2.604814052581787
    6. 'cost' → logprob: -2.729814052581787
    7. 'for' → logprob: -3.354814052581787
    8. ' for' → logprob: -3.604814052581787
    9. 'order' → logprob: -3.729814052581787
    10. '   ' → logprob: -3.979814052581787

Token 559: ' dist' (ID: 3601)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.7697184681892395
    2. 'N' → logprob: -1.7697184085845947
    3. 'st' → logprob: -2.5197184085845947
    4. 'cost' → logprob: -2.8947184085845947
    5. 'order' → logprob: -3.1447184085845947
    6. 'ω' → logprob: -3.2697184085845947
    7. 'len' → logprob: -3.6447184085845947
    8. ' store' → logprob: -3.7697184085845947
    9. 'command' → logprob: -4.144718647003174
    10. ' N' → logprob: -4.394718647003174

Token 560: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.4378848391061183e-05
    2. '_' → logprob: -11.875014305114746
    3. '_le' → logprob: -12.000014305114746
    4. '_right' → logprob: -14.625014305114746
    5. '>' → logprob: -15.625014305114746
    6. '_less' → logprob: -16.125015258789062
    7. ' _' → logprob: -16.750015258789062
    8. '_LEFT' → logprob: -17.000015258789062
    9. '__' → logprob: -17.125015258789062
    10. 'left' → logprob: -17.125015258789062

Token 561: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.09692361205816269
    2. '>' → logprob: -2.846923589706421
    3. ' ==' → logprob: -3.596923589706421
    4. ':' → logprob: -5.971923828125
    5. '==' → logprob: -6.221923828125
    6. ' <=' → logprob: -6.971923828125
    7. ' and' → logprob: -7.721923828125
    8. ' <' → logprob: -7.721923828125
    9. ' !=' → logprob: -8.596923828125
    10. ' ' → logprob: -9.221923828125

Token 562: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004113542847335339
    2. ' ' → logprob: -5.504113674163818
    3. '1' → logprob: -11.00411319732666
    4. 'ω' → logprob: -12.00411319732666
    5. 'new' → logprob: -12.87911319732666
    6. ' ' → logprob: -13.12911319732666
    7. '   ' → logprob: -13.69161319732666
    8. '  ' → logprob: -13.87911319732666
    9. ' new' → logprob: -14.19161319732666
    10. ' ω' → logprob: -14.87911319732666

Token 563: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004728449042886496
    2. ' ' → logprob: -5.379728317260742
    3. '1' → logprob: -9.754728317260742
    4. 'ω' → logprob: -10.629728317260742
    5. ' ' → logprob: -12.192228317260742
    6. '   ' → logprob: -12.567228317260742
    7. '  ' → logprob: -13.067228317260742
    8. '2' → logprob: -13.379728317260742
    9. ' ω' → logprob: -13.629728317260742
    10. 'new' → logprob: -13.754728317260742

Token 564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030203755013644695
    2. ':
' → logprob: -5.878020286560059
    3. '           ' → logprob: -8.628020286560059
    4. ' :' → logprob: -11.378020286560059
    5. ' and' → logprob: -11.878020286560059
    6. '       ' → logprob: -12.503020286560059
    7. ':
' → logprob: -12.503020286560059
    8. '-' → logprob: -12.878020286560059
    9. '               ' → logprob: -13.753020286560059
    10. 'and' → logprob: -13.753020286560059

Token 565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2952803373336792
    2. '       ' → logprob: -1.7952803373336792
    3. '	       ' → logprob: -3.4202804565429688
    4. '        ' → logprob: -4.420280456542969
    5. '               ' → logprob: -4.670280456542969
    6. '		' → logprob: -5.170280456542969
    7. '                   ' → logprob: -5.795280456542969
    8. '   ' → logprob: -6.045280456542969
    9. '	   ' → logprob: -6.045280456542969
    10. ' ' → logprob: -6.045280456542969

Token 566: ' command' (ID: 6348)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.2556232511997223
    2. 'dist' → logprob: -1.5056232213974
    3. '               ' → logprob: -5.8806233406066895
    4. '	dist' → logprob: -7.5056233406066895
    5. '           ' → logprob: -8.130622863769531
    6. '
' → logprob: -11.130622863769531
    7. '                   ' → logprob: -12.255622863769531
    8. ' ' → logprob: -12.505622863769531
    9. '	       ' → logprob: -12.755622863769531
    10. '_dist' → logprob: -12.755622863769531

Token 567: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.1160349458805285e-05
    2. '.append' → logprob: -12.125011444091797
    3. '=' → logprob: -13.250011444091797
    4. '=t' → logprob: -13.625011444091797
    5. '[' → logprob: -14.125011444091797
    6. ' =' → logprob: -14.375011444091797
    7. ' [' → logprob: -14.375011444091797
    8. '=[' → logprob: -15.750011444091797
    9. '

' → logprob: -16.000011444091797
    10. 't' → logprob: -16.000011444091797

Token 568: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03594168648123741
    2. ']=' → logprob: -3.4109416007995605
    3. '=' → logprob: -6.2859416007995605
    4. ' ]' → logprob: -9.160942077636719
    5. '],' → logprob: -9.535942077636719
    6. '[' → logprob: -9.660942077636719
    7. ' =' → logprob: -9.910942077636719
    8. ']+=' → logprob: -9.910942077636719
    9. ']='' → logprob: -9.910942077636719
    10. ')' → logprob: -11.910942077636719

Token 569: ' dist' (ID: 3601)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4273855686187744
    2. '"' → logprob: -1.6773855686187744
    3. '('' → logprob: -1.6773855686187744
    4. ''' → logprob: -1.8023855686187744
    5. '("' → logprob: -2.5523855686187744
    6. 'heading' → logprob: -2.6773855686187744
    7. 'ω' → logprob: -4.302385330200195
    8. '0' → logprob: -4.927385330200195
    9. ''h' → logprob: -4.927385330200195
    10. 'dist' → logprob: -5.177385330200195

Token 570: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -1.759734732331708e-05
    2. 'Left' → logprob: -12.375017166137695
    3. 'left' → logprob: -12.500017166137695
    4. '_LEFT' → logprob: -13.125017166137695
    5. '_' → logprob: -13.500017166137695
    6. '_Left' → logprob: -13.625017166137695
    7. '```' → logprob: -13.875017166137695
    8. ' =' → logprob: -14.625017166137695
    9. ')' → logprob: -14.625017166137695
    10. '=' → logprob: -14.750017166137695

Token 571: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08093426376581192
    2. '-=' → logprob: -2.9559342861175537
    3. ' =' → logprob: -3.8309342861175537
    4. ' -=' → logprob: -5.705934047698975
    5. '-' → logprob: -7.330934047698975
    6. ',' → logprob: -10.955934524536133
    7. '+=' → logprob: -11.455934524536133
    8. ' ' → logprob: -12.205934524536133
    9. '   ' → logprob: -13.080934524536133
    10. ' -' → logprob: -13.455934524536133

Token 572: ' ω' (ID: 112349)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.4584696292877197
    2. '('' → logprob: -1.4584696292877197
    3. '("' → logprob: -1.7084696292877197
    4. '"' → logprob: -2.0834696292877197
    5. 'ω' → logprob: -2.4584696292877197
    6. ''' → logprob: -2.5834696292877197
    7. 'command' → logprob: -4.208469390869141
    8. '(command' → logprob: -4.708469390869141
    9. 'λ' → logprob: -4.958469390869141
    10. '(lambda' → logprob: -5.708469390869141

Token 573: '(' (ID: 7)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -1.3071016073226929
    2. '(command' → logprob: -1.3071016073226929
    3. '("' → logprob: -1.6821016073226929
    4. '('' → logprob: -1.6821016073226929
    5. '"' → logprob: -3.1821017265319824
    6. ''' → logprob: -4.057101726531982
    7. '(' → logprob: -4.307101726531982
    8. '(dist' → logprob: -5.807101726531982
    9. '(order' → logprob: -6.432101726531982
    10. 'dist' → logprob: -6.432101726531982

Token 574: 'heading' (ID: 24070)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '("' → logprob: -1.3588453531265259
    2. '('' → logprob: -1.3588453531265259
    3. '"' → logprob: -2.2338452339172363
    4. 'dist' → logprob: -2.4838452339172363
    5. '(dist' → logprob: -2.4838452339172363
    6. ''' → logprob: -2.6088452339172363
    7. '(' → logprob: -2.9838452339172363
    8. '(command' → logprob: -3.4838452339172363
    9. 'command' → logprob: -3.6088452339172363
    10. ''d' → logprob: -5.608845233917236

Token 575: ' +' (ID: 659)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.10072966665029526
    2. ',' → logprob: -3.1007297039031982
    3. ' ),' → logprob: -4.225729465484619
    4. '+' → logprob: -4.350729465484619
    5. '-' → logprob: -4.600729465484619
    6. ' -' → logprob: -5.100729465484619
    7. ')' → logprob: -5.725729465484619
    8. ' +' → logprob: -5.850729465484619
    9. ')+' → logprob: -8.475729942321777
    10. ',),' → logprob: -8.475729942321777

Token 576: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01387904491275549
    2. ' ' → logprob: -4.76387882232666
    3. 'dist' → logprob: -5.51387882232666
    4. ' dist' → logprob: -7.88887882232666
    5. ')' → logprob: -8.13887882232666
    6. '0' → logprob: -8.26387882232666
    7. 'dst' → logprob: -9.88887882232666
    8. '-' → logprob: -10.38887882232666
    9. '(' → logprob: -10.57637882232666
    10. '(dist' → logprob: -10.88887882232666

Token 577: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06319192796945572
    2. 'dist' → logprob: -2.9381918907165527
    3. ' ' → logprob: -5.938191890716553
    4. '0' → logprob: -6.313191890716553
    5. '-' → logprob: -6.438191890716553
    6. '(' → logprob: -7.438191890716553
    7. ' dist' → logprob: -7.813191890716553
    8. '(dist' → logprob: -7.938191890716553
    9. '(-' → logprob: -8.438192367553711
    10. 'order' → logprob: -9.313192367553711

Token 578: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.296252578496933
    2. '),' → logprob: -1.5462526082992554
    3. '-' → logprob: -3.546252489089966
    4. ')' → logprob: -4.796252727508545
    5. ' -' → logprob: -5.296252727508545
    6. ' ,' → logprob: -7.421252727508545
    7. ' ),' → logprob: -7.921252727508545
    8. ' if' → logprob: -10.046252250671387
    9. 'if' → logprob: -10.546252250671387
    10. ',
' → logprob: -10.671252250671387

Token 579: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0067469896748661995
    2. ' dist' → logprob: -5.006746768951416
    3. 'max' → logprob: -11.381747245788574
    4. '	dist' → logprob: -12.256747245788574
    5. '(dist' → logprob: -12.256747245788574
    6. ' ' → logprob: -12.506747245788574
    7. '0' → logprob: -13.381747245788574
    8. '1' → logprob: -14.506747245788574
    9. '   ' → logprob: -14.506747245788574
    10. 'wf' → logprob: -14.631747245788574

Token 580: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -9.496052371105179e-05
    2. 't' → logprob: -9.50009536743164
    3. 'left' → logprob: -11.25009536743164
    4. 'Left' → logprob: -12.87509536743164
    5. '_' → logprob: -13.75009536743164
    6. ' _' → logprob: -14.50009536743164
    7. '_right' → logprob: -14.87509536743164
    8. '_LEFT' → logprob: -14.87509536743164
    9. '```' → logprob: -15.12509536743164
    10. 'eft' → logprob: -15.25009536743164

Token 581: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.033646851778030396
    2. ' -' → logprob: -3.408646821975708
    3. ',' → logprob: -15.033646583557129
    4. ' ' → logprob: -15.408646583557129
    5. ' ' → logprob: -16.033647537231445
    6. ' if' → logprob: -16.533647537231445
    7. ')' → logprob: -16.533647537231445
    8. '<|end|>' → logprob: -16.908647537231445
    9. '   ' → logprob: -17.033647537231445
    10. '+' → logprob: -17.283647537231445

Token 582: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. ' ' → logprob: -16.3767032623291
    4. '   ' → logprob: -17.1267032623291
    5. '2' → logprob: -17.8767032623291
    6. '```' → logprob: -18.0642032623291
    7. '0' → logprob: -18.1267032623291
    8. '' → logprob: -18.4392032623291
    9. '
' → logprob: -18.6892032623291
    10. '=' → logprob: -19.0642032623291

Token 583: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00029685118352063
    2. ' ' → logprob: -8.125296592712402
    3. '   ' → logprob: -15.375296592712402
    4. '```' → logprob: -16.00029754638672
    5. ' ' → logprob: -16.50029754638672
    6. '2' → logprob: -16.81279754638672
    7. '0' → logprob: -16.87529754638672
    8. '
' → logprob: -17.12529754638672
    9. '' → logprob: -17.43779754638672
    10. '           ' → logprob: -17.81279754638672

Token 584: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 585: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 586: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.49722471833229065
    2. 'elif' → logprob: -1.3722246885299683
    3. ' else' → logprob: -2.497224807739258
    4. '<|end|>' → logprob: -3.122224807739258
    5. ' elif' → logprob: -5.372224807739258
    6. '.' → logprob: -5.997224807739258
    7. '	elif' → logprob: -6.747224807739258
    8. '	else' → logprob: -7.372224807739258
    9. '...' → logprob: -7.622224807739258
    10. ')' → logprob: -7.872224807739258

Token 587: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4744449853897095
    2. ':' → logprob: -0.9744449853897095
    3. ' if' → logprob: -8.724445343017578
    4. 'if' → logprob: -9.724445343017578
    5. '       ' → logprob: -9.849445343017578
    6. '           ' → logprob: -10.349445343017578
    7. ':

' → logprob: -11.099445343017578
    8. '   ' → logprob: -11.349445343017578
    9. ' :
' → logprob: -11.349445343017578
    10. ':
' → logprob: -11.849445343017578

Token 588: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0748531818389893
    2. '       ' → logprob: -1.3248531818389893
    3. 'if' → logprob: -1.9498531818389893
    4. 'command' → logprob: -1.9498531818389893
    5. ' if' → logprob: -2.6998531818389893
    6. ' command' → logprob: -4.19985294342041
    7. 'heading' → logprob: -4.32485294342041
    8. '   ' → logprob: -5.69985294342041
    9. 'for' → logprob: -5.94985294342041
    10. ' for' → logprob: -6.57485294342041

Token 589: ' if' (ID: 538)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.772672712802887
    2. 'if' (adapté à ' if') → logprob: -1.5226726531982422
    3. 'order' → logprob: -3.147672653198242
    4. 'c' → logprob: -3.147672653198242
    5. 'heading' → logprob: -3.147672653198242
    6. 'dist' → logprob: -3.272672653198242
    7. 'new' → logprob: -3.647672653198242
    8. 'possible' → logprob: -3.647672653198242
    9. 'cost' → logprob: -4.147672653198242
    10. 'st' → logprob: -4.272672653198242

Token 590: ' heading' (ID: 23808)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.3743174374103546
    2. 'order' → logprob: -2.2493174076080322
    3. 'store' → logprob: -2.6243174076080322
    4. 'st' → logprob: -2.9993174076080322
    5. ' N' → logprob: -3.1243174076080322
    6. ' order' → logprob: -4.749317646026611
    7. ' stuck' → logprob: -4.999317646026611
    8. ' store' → logprob: -5.374317646026611
    9. 'command' → logprob: -5.749317646026611
    10. 'cost' → logprob: -5.874317646026611

Token 591: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08353596180677414
    2. '==' → logprob: -3.58353590965271
    3. ' +' → logprob: -3.83353590965271
    4. ' <' → logprob: -4.208536148071289
    5. '+' → logprob: -5.333536148071289
    6. '<|end|>' → logprob: -5.708536148071289
    7. ' !=' → logprob: -6.208536148071289
    8. ' ' → logprob: -6.208536148071289
    9. ' <=' → logprob: -6.583536148071289
    10. ' >' → logprob: -6.833536148071289

Token 592: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3635748326778412
    2. 'V' → logprob: -1.8635748624801636
    3. '-' → logprob: -2.863574743270874
    4. 'store' → logprob: -2.988574743270874
    5. 'final' → logprob: -4.238574981689453
    6. ' ' → logprob: -4.988574981689453
    7. 'st' → logprob: -5.238574981689453
    8. 'ω' → logprob: -5.863574981689453
    9. 'T' → logprob: -5.988574981689453
    10. 'order' → logprob: -6.113574981689453

Token 593: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2908163070678711
    2. 'V' → logprob: -2.040816307067871
    3. '-' → logprob: -2.665816307067871
    4. 'store' → logprob: -3.665816307067871
    5. 'st' → logprob: -5.040816307067871
    6. '1' → logprob: -5.290816307067871
    7. 'T' → logprob: -5.290816307067871
    8. 'final' → logprob: -5.665816307067871
    9. 'None' → logprob: -6.665816307067871
    10. 't' → logprob: -7.040816307067871

Token 594: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16888239979743958
    2. ':' → logprob: -1.9188823699951172
    3. '               ' → logprob: -5.043882369995117
    4. '           ' → logprob: -7.168882369995117
    5. ' and' → logprob: -7.168882369995117
    6. ',' → logprob: -8.418882369995117
    7. '):
' → logprob: -10.293882369995117
    8. ':
' → logprob: -10.293882369995117
    9. ' or' → logprob: -10.418882369995117
    10. ':

' → logprob: -10.418882369995117

Token 595: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08961310237646103
    2. '           ' → logprob: -2.714613199234009
    3. ' command' → logprob: -5.08961296081543
    4. '```' → logprob: -6.08961296081543
    5. 'command' → logprob: -6.33961296081543
    6. '                   ' → logprob: -6.83961296081543
    7. '	       ' → logprob: -6.96461296081543
    8. '                
' → logprob: -7.08961296081543
    9. '                       ' → logprob: -7.08961296081543
    10. '<|end|>' → logprob: -7.21461296081543

Token 596: ' if' (ID: 538)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.4292988181114197
    2. ' command' → logprob: -1.1792988777160645
    3. '           ' → logprob: -4.9292988777160645
    4. 'destination' → logprob: -5.3042988777160645
    5. 'heading' → logprob: -5.5542988777160645
    6. '               ' → logprob: -5.6792988777160645
    7. 'new' → logprob: -5.8042988777160645
    8. 'pass' → logprob: -6.1792988777160645
    9. ' new' → logprob: -6.4292988777160645
    10. '                   ' → logprob: -6.4292988777160645

Token 597: ' not' (ID: 625)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.5608559250831604
    2. 'store' → logprob: -2.3108558654785156
    3. ' order' → logprob: -2.4358558654785156
    4. 'len' → logprob: -2.8108558654785156
    5. 'st' → logprob: -3.0608558654785156
    6. ' len' → logprob: -3.6858558654785156
    7. ' stuck' → logprob: -3.8108558654785156
    8. 'N' → logprob: -3.8108558654785156
    9. ' not' → logprob: -4.060855865478516
    10. ' store' → logprob: -4.185855865478516

Token 598: ' (' (ID: 350)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.442657470703125
    2. 'order' → logprob: -1.567657470703125
    3. ' stuck' → logprob: -2.942657470703125
    4. '(order' → logprob: -3.442657470703125
    5. ' order' → logprob: -3.942657470703125
    6. 'store' → logprob: -3.942657470703125
    7. '(st' → logprob: -4.317657470703125
    8. 'cost' → logprob: -6.442657470703125
    9. ' store' → logprob: -6.442657470703125
    10. '(store' → logprob: -6.692657470703125

Token 599: 'store' (ID: 8862)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.5186241269111633
    2. 'order' → logprob: -1.0186240673065186
    3. 'store' → logprob: -3.3936240673065186
    4. 'len' → logprob: -6.018624305725098
    5. 'command' → logprob: -6.018624305725098
    6. 'cost' → logprob: -6.893624305725098
    7. ' stuck' → logprob: -7.018624305725098
    8. '(order' → logprob: -7.018624305725098
    9. ' order' → logprob: -7.393624305725098
    10. '(st' → logprob: -8.018624305725098

Token 600: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -7.73183855926618e-05
    2. 'hold' → logprob: -9.500077247619629
    3. '   ' → logprob: -14.875077247619629
    4. '_h' → logprob: -15.250077247619629
    5. '_holder' → logprob: -15.250077247619629
    6. '_order' → logprob: -15.375077247619629
    7. '_' → logprob: -15.625077247619629
    8. ')' → logprob: -15.625077247619629
    9. '_keep' → logprob: -15.750077247619629
    10. 'Hold' → logprob: -15.875077247619629

Token 601: ' or' (ID: 503)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.33361077308654785
    2. '>' → logprob: -1.7086107730865479
    3. '):' → logprob: -2.708610773086548
    4. ' and' → logprob: -4.833610534667969
    5. '==' → logprob: -5.208610534667969
    6. ' or' → logprob: -5.208610534667969
    7. ' ==' → logprob: -5.333610534667969
    8. ')>' → logprob: -5.458610534667969
    9. ')' → logprob: -5.833610534667969
    10. '):
' → logprob: -6.083610534667969

Token 602: ' driver' (ID: 8931)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.3748748302459717
    2. 'order' → logprob: -1.4998748302459717
    3. ' stuck' → logprob: -3.1248748302459717
    4. 'cost' → logprob: -4.499875068664551
    5. ' order' → logprob: -4.624875068664551
    6. 'command' → logprob: -4.999875068664551
    7. 'dist' → logprob: -5.249875068664551
    8. 'not' → logprob: -5.374875068664551
    9. ' not' → logprob: -7.124875068664551
    10. 'len' → logprob: -7.124875068664551

Token 603: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.0016018638852983713
    2. 'hold' → logprob: -6.876601696014404
    3. '):' → logprob: -8.501602172851562
    4. '_st' → logprob: -8.876602172851562
    5. ')' → logprob: -10.126602172851562
    6. '>' → logprob: -10.376602172851562
    7. '==' → logprob: -10.501602172851562
    8. '_order' → logprob: -11.251602172851562
    9. '_' → logprob: -11.376602172851562
    10. '):
' → logprob: -11.501602172851562

Token 604: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6367032527923584
    2. '):
' → logprob: -0.7617032527923584
    3. ' or' → logprob: -5.8867034912109375
    4. ')' → logprob: -7.3867034912109375
    5. ' ):
' → logprob: -8.261703491210938
    6. ' ):' → logprob: -8.636703491210938
    7. '):
' → logprob: -9.261703491210938
    8. ' and' → logprob: -9.511703491210938
    9. '):

' → logprob: -9.886703491210938
    10. ':' → logprob: -11.636703491210938

Token 605: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.031430188566446304
    2. '               ' → logprob: -4.656430244445801
    3. '                       ' → logprob: -4.906430244445801
    4. '<|end|>' → logprob: -5.781430244445801
    5. ':
' → logprob: -5.906430244445801
    6. '                    
' → logprob: -6.531430244445801
    7. '                        
' → logprob: -6.781430244445801
    8. ' command' → logprob: -7.156430244445801
    9. '                           ' → logprob: -7.281430244445801
    10. '):
' → logprob: -7.281430244445801

Token 606: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' (adapté à ' command') → logprob: -0.02607419155538082
    2. ' command' → logprob: -3.776074171066284
    3. 'continue' → logprob: -6.401074409484863
    4. '               ' → logprob: -7.901074409484863
    5. 'pass' → logprob: -8.651074409484863
    6. '                   ' → logprob: -8.776074409484863
    7. 'heading' → logprob: -9.151074409484863
    8. '           ' → logprob: -9.401074409484863
    9. 'break' → logprob: -9.401074409484863
    10. ' continue' → logprob: -9.651074409484863

Token 607: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -5.319370302458992e-06
    2. '[' → logprob: -12.750005722045898
    3. '.append' → logprob: -13.875005722045898
    4. ' [' → logprob: -15.000005722045898
    5. '=' → logprob: -15.375005722045898
    6. '[
' → logprob: -15.625005722045898
    7. '=t' → logprob: -15.875005722045898
    8. '	t' → logprob: -15.875005722045898
    9. 't' → logprob: -16.0000057220459
    10. '   ' → logprob: -16.1250057220459

Token 608: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39357003569602966
    2. ',' → logprob: -1.643570065498352
    3. '],' → logprob: -2.2685699462890625
    4. '),' → logprob: -4.2685699462890625
    5. ' =' → logprob: -4.6435699462890625
    6. ']' → logprob: -5.8935699462890625
    7. ']=' → logprob: -6.7685699462890625
    8. ')' → logprob: -8.393569946289062
    9. ' ,' → logprob: -8.393569946289062
    10. ' ' → logprob: -8.768569946289062

Token 609: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15003560483455658
    2. ' =' → logprob: -2.4000356197357178
    3. ',' → logprob: -3.0250356197357178
    4. ' ,' → logprob: -10.275035858154297
    5. ' ' → logprob: -13.150035858154297
    6. '[' → logprob: -13.400035858154297
    7. '+=' → logprob: -13.400035858154297
    8. '=
' → logprob: -13.525035858154297
    9. '=None' → logprob: -13.775035858154297
    10. '=True' → logprob: -14.150035858154297

Token 610: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09988611191511154
    2. 'ω' → logprob: -2.849886178970337
    3. '1' → logprob: -4.474885940551758
    4. 'None' → logprob: -4.474885940551758
    5. '-' → logprob: -4.974885940551758
    6. ''' → logprob: -6.224885940551758
    7. 'λ' → logprob: -6.599885940551758
    8. '"' → logprob: -6.974885940551758
    9. 'heading' → logprob: -7.599885940551758
    10. ' ' → logprob: -7.599885940551758

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009657287038862705
    2. '2' → logprob: -4.759657382965088
    3. '3' → logprob: -8.00965690612793
    4. '100' → logprob: -8.63465690612793
    5. '10' → logprob: -9.25965690612793
    6. '999' → logprob: -9.38465690612793
    7. 'ω' → logprob: -9.63465690612793
    8. '99' → logprob: -10.00965690612793
    9. '4' → logprob: -10.25965690612793
    10. '5' → logprob: -10.50965690612793

Token 612: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 613: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20356009900569916
    2. '<|end|>' → logprob: -1.8285601139068604
    3. 'elif' → logprob: -4.828559875488281
    4. 'else' → logprob: -5.078559875488281
    5. '           ' → logprob: -5.828559875488281
    6. '
' → logprob: -5.828559875488281
    7. ' else' → logprob: -6.953559875488281
    8. '                   ' → logprob: -7.328559875488281
    9. '<|end|>' → logprob: -7.703559875488281
    10. ')' → logprob: -7.953559875488281

Token 614: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.5225582122802734
    2. '               ' → logprob: -1.2725582122802734
    3. 'else' → logprob: -2.5225582122802734
    4. '                   ' → logprob: -4.147558212280273
    5. 'elif' → logprob: -4.272558212280273
    6. ' continue' → logprob: -5.147558212280273
    7. '           ' → logprob: -5.522558212280273
    8. '<|end|>' → logprob: -6.272558212280273
    9. ' else' → logprob: -6.397558212280273
    10. 'return' → logprob: -6.772558212280273

Token 615: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4267982840538025
    2. '           ' → logprob: -1.6767983436584473
    3. '<|end|>' → logprob: -2.0517983436584473
    4. 'elif' → logprob: -4.551798343658447
    5. '
' → logprob: -5.301798343658447
    6. '            
' → logprob: -5.426798343658447
    7. '                
' → logprob: -5.551798343658447
    8. 'else' → logprob: -6.301798343658447
    9. '       ' → logprob: -6.926798343658447
    10. ' 
' → logprob: -7.551798343658447

Token 616: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4508392810821533
    2. '           ' → logprob: -1.2008392810821533
    3. '<|end|>' → logprob: -3.2008392810821533
    4. 'elif' → logprob: -4.825839042663574
    5. 'else' → logprob: -5.950839042663574
    6. '
' → logprob: -6.075839042663574
    7. '       ' → logprob: -6.200839042663574
    8. '```' → logprob: -6.950839042663574
    9. '            
' → logprob: -7.075839042663574
    10. '                
' → logprob: -7.325839042663574

Token 617: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12849733233451843
    2. 'command' → logprob: -3.378497362136841
    3. 'elif' → logprob: -3.753497362136841
    4. '               ' → logprob: -4.003497123718262
    5. '<|end|>' → logprob: -4.503497123718262
    6. 'if' → logprob: -4.878497123718262
    7. ')' → logprob: -5.253497123718262
    8. 'else' (adapté à ' else') → logprob: -5.253497123718262
    9. '            
' → logprob: -5.753497123718262
    10. '
' → logprob: -5.753497123718262

Token 618: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6397595405578613
    2. ':' → logprob: -1.0147595405578613
    3. '                   ' → logprob: -2.5147595405578613
    4. '               ' → logprob: -4.389759540557861
    5. '           ' → logprob: -4.764759540557861
    6. '<|end|>' → logprob: -5.889759540557861
    7. '                       ' → logprob: -7.389759540557861
    8. '{' → logprob: -7.514759540557861
    9. 'command' → logprob: -7.514759540557861
    10. '{
' → logprob: -7.764759540557861

Token 619: '                   ' (ID: 699)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.14029596745967865
    2. '                   ' → logprob: -3.26529598236084
    3. ' command' → logprob: -3.26529598236084
    4. 'heading' → logprob: -3.39029598236084
    5. 'driver' → logprob: -4.89029598236084
    6. '               ' → logprob: -5.26529598236084
    7. '```' → logprob: -6.14029598236084
    8. '	command' → logprob: -6.64029598236084
    9. '           ' → logprob: -6.76529598236084
    10. '                       ' → logprob: -7.26529598236084

Token 620: ' order' (ID: 2569)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.32336461544036865
    2. 'command' → logprob: -1.8233646154403687
    3. 'driver' → logprob: -2.448364734649658
    4. 'store' → logprob: -4.448364734649658
    5. 'dist' → logprob: -5.448364734649658
    6. ' heading' → logprob: -6.073364734649658
    7. '#' → logprob: -6.823364734649658
    8. ' command' → logprob: -6.948364734649658
    9. 'for' → logprob: -6.948364734649658
    10. 'head' → logprob: -7.198364734649658

Token 621: ' |=' (ID: 19917)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8761111497879028
    2. '=' → logprob: -1.3761111497879028
    3. '.add' → logprob: -2.0011110305786133
    4. '.update' → logprob: -2.5011110305786133
    5. ' |=' → logprob: -2.8761110305786133
    6. ',' → logprob: -3.5011110305786133
    7. '|' → logprob: -3.8761110305786133
    8. '.clear' → logprob: -5.626111030578613
    9. '.' → logprob: -7.001111030578613
    10. '.setdefault' → logprob: -7.501111030578613

Token 622: ' stuck' (ID: 24327)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.6470821499824524
    2. 'st' → logprob: -1.2720820903778076
    3. 'fro' → logprob: -2.0220820903778076
    4. 'set' → logprob: -2.8970820903778076
    5. 'store' → logprob: -5.397082328796387
    6. ' {' → logprob: -7.397082328796387
    7. '(st' → logprob: -7.772082328796387
    8. '{-' → logprob: -8.147082328796387
    9. '{s' → logprob: -8.147082328796387
    10. 'order' → logprob: -8.334582328796387

Token 623: '_order' (ID: 17446)
  Prédit: '_order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.001530216890387237
    2. '_cost' → logprob: -6.501530170440674
    3. '_orders' → logprob: -11.751530647277832
    4. '_' → logprob: -12.126530647277832
    5. 'order' → logprob: -12.376530647277832
    6. '{' → logprob: -12.501530647277832
    7. '_set' → logprob: -12.626530647277832
    8. '_f' → logprob: -13.876530647277832
    9. ''_' → logprob: -14.626530647277832
    10. '```' → logprob: -15.251530647277832

Token 624: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 625: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7823037505149841
    2. '
' → logprob: -1.407303810119629
    3. '<|end|>' → logprob: -1.407303810119629
    4. '           ' → logprob: -4.157303810119629
    5. '               ' → logprob: -4.282303810119629
    6. '                    
' → logprob: -5.282303810119629
    7. '       ' → logprob: -5.907303810119629
    8. '[' → logprob: -6.032303810119629
    9. '<|end|>' → logprob: -6.532303810119629
    10. '\n' → logprob: -6.907303810119629

Token 626: ' _' (ID: 1175)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.9911677837371826
    2. 'driver' → logprob: -1.1161677837371826
    3. 'st' → logprob: -1.3661677837371826
    4. 'store' → logprob: -4.116168022155762
    5. 'command' → logprob: -4.741168022155762
    6. '                   ' → logprob: -5.491168022155762
    7. 'dist' → logprob: -5.741168022155762
    8. 'head' → logprob: -5.991168022155762
    9. '           ' → logprob: -5.991168022155762
    10. '               ' → logprob: -6.241168022155762

Token 627: ' =' (ID: 314)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.37553319334983826
    2. 'store' → logprob: -2.125533103942871
    3. 'order' → logprob: -2.625533103942871
    4. '=' → logprob: -3.375533103942871
    5. 'cost' → logprob: -3.375533103942871
    6. 'heading' → logprob: -3.500533103942871
    7. 'dist' → logprob: -4.625533103942871
    8. ' =' → logprob: -5.625533103942871
    9. 'continue' → logprob: -7.000533103942871
    10. '_st' → logprob: -7.500533103942871

Token 628: ' list' (ID: 1562)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.25785204768180847
    2. 'order' → logprob: -2.882852077484131
    3. 'st' → logprob: -3.382852077484131
    4. 'max' → logprob: -3.507852077484131
    5. ' extravagant' → logprob: -3.632852077484131
    6. 'dist' → logprob: -4.382852077484131
    7. 'next' → logprob: -4.757852077484131
    8. 'reduce' → logprob: -4.882852077484131
    9. 'cost' → logprob: -5.007852077484131
    10. '(order' → logprob: -5.132852077484131

Token 629: '(map' (ID: 16946)
  Prédit: '(chain'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chain' → logprob: -0.17403022944927216
    2. '(order' → logprob: -2.674030303955078
    3. '(map' → logprob: -3.174030303955078
    4. '(st' → logprob: -3.549030303955078
    5. '((' → logprob: -4.424030303955078
    6. '(' → logprob: -5.924030303955078
    7. '(filter' → logprob: -6.424030303955078
    8. '(
' → logprob: -6.924030303955078
    9. '(f' → logprob: -7.674030303955078
    10. '(iter' → logprob: -7.799030303955078

Token 630: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.21312712132930756
    2. '(order' → logprob: -1.7131271362304688
    3. '(' → logprob: -4.838127136230469
    4. '(command' → logprob: -6.838127136230469
    5. '(cost' → logprob: -7.338127136230469
    6. '(ord' → logprob: -7.463127136230469
    7. '(st' → logprob: -7.588127136230469
    8. '((' → logprob: -7.588127136230469
    9. '(int' → logprob: -8.588127136230469
    10. '(
' → logprob: -9.088127136230469

Token 631: ' k' (ID: 372)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.8246250748634338
    2. 'x' → logprob: -1.449625015258789
    3. '(lambda' → logprob: -2.074625015258789
    4. ' lambda' → logprob: -2.324625015258789
    5. 'order' → logprob: -2.949625015258789
    6. ' x' → logprob: -3.574625015258789
    7. 'st' → logprob: -4.449625015258789
    8. ' order' → logprob: -5.199625015258789
    9. '   ' → logprob: -6.949625015258789
    10. 'o' → logprob: -7.574625015258789

Token 632: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004439374431967735
    2. ':k' → logprob: -6.004439353942871
    3. ' :' → logprob: -6.379439353942871
    4. ' k' → logprob: -9.254439353942871
    5. 'k' → logprob: -9.754439353942871
    6. ':
' → logprob: -10.129439353942871
    7. ':set' → logprob: -10.754439353942871
    8. ':(' → logprob: -11.004439353942871
    9. 'order' → logprob: -12.004439353942871
    10. ',k' → logprob: -12.379439353942871

Token 633: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.415001779794693
    2. 'st' → logprob: -1.7900017499923706
    3. '(cost' → logprob: -1.9150017499923706
    4. '(st' → logprob: -4.54000186920166
    5. ' cost' → logprob: -4.66500186920166
    6. '   ' → logprob: -6.54000186920166
    7. ' stuck' → logprob: -7.04000186920166
    8. '(lambda' → logprob: -7.29000186920166
    9. '(' → logprob: -8.04000186920166
    10. ' ' → logprob: -8.54000186920166

Token 634: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.0071626389399170876
    2. '[k' → logprob: -5.257162570953369
    3. '__' → logprob: -6.382162570953369
    4. '().__' → logprob: -9.632163047790527
    5. '(k' → logprob: -9.757163047790527
    6. ':' → logprob: -10.132163047790527
    7. ' setattr' → logprob: -11.007163047790527
    8. 'k' → logprob: -11.382163047790527
    9. ' __' → logprob: -11.507163047790527
    10. 'set' → logprob: -12.007163047790527

Token 635: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00027825910365208983
    2. 'i' → logprob: -8.37527847290039
    3. 'getitem' → logprob: -10.62527847290039
    4. 'sets' → logprob: -11.12527847290039
    5. '__' → logprob: -12.25027847290039
    6. 'imul' → logprob: -13.50027847290039
    7. '```' → logprob: -14.37527847290039
    8. 'init' → logprob: -14.75027847290039
    9. '_' → logprob: -15.37527847290039
    10. 'inc' → logprob: -15.37527847290039

Token 636: 'item' (ID: 2057)
  Prédit: 'item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'item' → logprob: -2.339278580620885e-06
    2. 'attr' → logprob: -13.000001907348633
    3. 'getitem' → logprob: -17.625001907348633
    4. 'ite' → logprob: -17.875001907348633
    5. ' item' → logprob: -18.000001907348633
    6. '
' → logprob: -18.750001907348633
    7. '(item' → logprob: -19.250001907348633
    8. '((' → logprob: -19.375001907348633
    9. '(' → logprob: -20.250001907348633
    10. 'default' → logprob: -20.375001907348633

Token 637: '__(' (ID: 8241)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(k' → logprob: -1.0206720617134124e-05
    2. '(' → logprob: -12.00001049041748
    3. 'k' → logprob: -13.12501049041748
    4. '(key' → logprob: -14.12501049041748
    5. '((' → logprob: -14.25001049041748
    6. ' (' → logprob: -15.12501049041748
    7. ')(' → logprob: -15.87501049041748
    8. '(
' → logprob: -16.625009536743164
    9. ',k' → logprob: -16.875009536743164
    10. '[k' → logprob: -17.375009536743164

Token 638: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0001593195047462359
    2. '(k' → logprob: -8.75015926361084
    3. ' k' → logprob: -14.87515926361084
    4. ')' → logprob: -16.000160217285156
    5. '
' → logprob: -16.125160217285156
    6. ',k' → logprob: -16.500160217285156
    7. '[k' → logprob: -16.625160217285156
    8. '   ' → logprob: -17.125160217285156
    9. '	k' → logprob: -17.125160217285156
    10. '{k' → logprob: -17.125160217285156

Token 639: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13182605803012848
    2. ',k' → logprob: -2.131826162338257
    3. 'k' → logprob: -5.631825923919678
    4. '(k' → logprob: -6.881825923919678
    5. ',
' → logprob: -8.881826400756836
    6. ',[' → logprob: -10.631826400756836
    7. ',(' → logprob: -10.756826400756836
    8. ' ,' → logprob: -10.881826400756836
    9. '[k' → logprob: -11.506826400756836
    10. ' k' → logprob: -11.631826400756836

Token 640: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.024264561012387276
    2. '0' → logprob: -4.274264335632324
    3. 'st' → logprob: -5.274264335632324
    4. ' cost' → logprob: -6.524264335632324
    5. '(cost' → logprob: -6.774264335632324
    6. 'ω' → logprob: -6.899264335632324
    7. 'k' → logprob: -7.274264335632324
    8. 'omega' → logprob: -9.024264335632324
    9. '(' → logprob: -9.524264335632324
    10. 'dist' → logprob: -9.524264335632324

Token 641: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.006811884231865406
    2. '.__' → logprob: -5.00681209564209
    3. 'k' → logprob: -10.00681209564209
    4. '.get' → logprob: -10.25681209564209
    5. '.index' → logprob: -11.75681209564209
    6. '(k' → logprob: -12.13181209564209
    7. 'index' → logprob: -14.13181209564209
    8. '[' → logprob: -14.38181209564209
    9. ',k' → logprob: -15.25681209564209
    10. ')' → logprob: -15.75681209564209

Token 642: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16726236045360565
    2. ']+' → logprob: -2.667262315750122
    3. ']' → logprob: -2.917262315750122
    4. ' +' → logprob: -3.792262315750122
    5. '()+' → logprob: -5.417262554168701
    6. '()' → logprob: -7.042262554168701
    7. ')' → logprob: -7.542262554168701
    8. ')+' → logprob: -7.667262554168701
    9. '+k' → logprob: -8.042262077331543
    10. '*' → logprob: -8.042262077331543

Token 643: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2652676999568939
    2. ' +' → logprob: -1.5152677297592163
    3. '()+' → logprob: -4.765267848968506
    4. '+k' → logprob: -6.015267848968506
    5. '()' → logprob: -6.640267848968506
    6. '),' → logprob: -7.890267848968506
    7. ')' → logprob: -8.265267372131348
    8. ')+' → logprob: -8.890267372131348
    9. '*' → logprob: -10.265267372131348
    10. ' ()' → logprob: -10.765267372131348

Token 644: ' stuck' (ID: 24327)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.05751573294401169
    2. 'store' → logprob: -3.4325156211853027
    3. 'st' → logprob: -4.057515621185303
    4. 'dist' → logprob: -5.807515621185303
    5. 'ω' → logprob: -7.307515621185303
    6. ' ' → logprob: -7.307515621185303
    7. '2' → logprob: -7.432515621185303
    8. 'command' → logprob: -8.557516098022461
    9. '(' → logprob: -8.682516098022461
    10. '0' → logprob: -8.932516098022461

Token 645: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0009449340868741274
    2. '_order' → logprob: -7.000945091247559
    3. 'cost' → logprob: -10.500945091247559
    4. 'Cost' → logprob: -13.250945091247559
    5. '1' → logprob: -13.625945091247559
    6. '[' → logprob: -14.250945091247559
    7. ')' → logprob: -14.375945091247559
    8. 'order' → logprob: -15.000945091247559
    9. '[_' → logprob: -15.125945091247559
    10. '
' → logprob: -15.500945091247559

Token 646: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.10035708546638489
    2. '(k' → logprob: -2.3503570556640625
    3. 'k' → logprob: -10.100357055664062
    4. '))' → logprob: -10.600357055664062
    5. ')' → logprob: -10.850357055664062
    6. ')),' → logprob: -11.100357055664062
    7. '[' → logprob: -11.225357055664062
    8. ')))' → logprob: -11.350357055664062
    9. '),' → logprob: -12.350357055664062
    10. '(' → logprob: -13.100357055664062

Token 647: ']),' (ID: 19560)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -0.11240795999765396
    2. ')),' → logprob: -2.362407922744751
    3. '()),' → logprob: -5.11240816116333
    4. ')' → logprob: -6.11240816116333
    5. ' ),' → logprob: -6.48740816116333
    6. '()' → logprob: -6.86240816116333
    7. ' ' → logprob: -7.98740816116333
    8. '))),' → logprob: -8.612407684326172
    9. '*' → logprob: -8.862407684326172
    10. '       ' → logprob: -8.862407684326172

Token 648: ' order' (ID: 2569)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.16889618337154388
    2. 'order' → logprob: -1.918896198272705
    3. ' order' → logprob: -5.668896198272705
    4. 'range' → logprob: -6.168896198272705
    5. ' stuck' → logprob: -6.543896198272705
    6. '[' → logprob: -7.793896198272705
    7. 'store' → logprob: -8.043895721435547
    8. 'list' → logprob: -8.918895721435547
    9. 'fro' → logprob: -8.918895721435547
    10. ' range' → logprob: -9.731395721435547

Token 649: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.012818521820008755
    2. '))
' → logprob: -4.512818336486816
    3. '               ' → logprob: -7.262818336486816
    4. '                   ' → logprob: -7.512818336486816
    5. '           ' → logprob: -8.137818336486816
    6. ')))' → logprob: -9.387818336486816
    7. '));' → logprob: -9.762818336486816
    8. '()))' → logprob: -10.762818336486816
    9. ' ))' → logprob: -11.012818336486816
    10. '))
' → logprob: -11.262818336486816

Token 650: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020291941240429878
    2. '               ' → logprob: -4.895291805267334
    3. '<|end|>' → logprob: -4.895291805267334
    4. '           ' → logprob: -5.770291805267334
    5. '                    
' → logprob: -7.520291805267334
    6. '```' → logprob: -7.895291805267334
    7. 'command' → logprob: -8.395292282104492
    8. '
' → logprob: -8.770292282104492
    9. '                    ' → logprob: -9.270292282104492
    10. ',' → logprob: -9.520292282104492

Token 651: ' _' (ID: 1175)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.027245044708252
    2. 'heading' → logprob: -1.277245044708252
    3. 'driver' → logprob: -1.652245044708252
    4. 'st' → logprob: -2.652245044708252
    5. 'store' → logprob: -2.902245044708252
    6. 'dist' → logprob: -3.777245044708252
    7. 'head' → logprob: -5.027245044708252
    8. '               ' → logprob: -5.152245044708252
    9. 'order' → logprob: -5.652245044708252
    10. 'cost' → logprob: -6.152245044708252

Token 652: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018642781302332878
    2. ' =' → logprob: -4.518642902374268
    3. '                   ' → logprob: -5.393642902374268
    4. '=[]' → logprob: -6.268642902374268
    5. '[:]' → logprob: -8.01864242553711
    6. '.clear' → logprob: -8.01864242553711
    7. ',' → logprob: -8.64364242553711
    8. '=[]
' → logprob: -9.26864242553711
    9. '               ' → logprob: -10.14364242553711
    10. '.' → logprob: -10.76864242553711

Token 653: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.05457676574587822
    2. '[' → logprob: -4.179576873779297
    3. ' list' → logprob: -4.804576873779297
    4. '[]' → logprob: -5.554576873779297
    5. 'order' → logprob: -5.804576873779297
    6. 'store' → logprob: -5.804576873779297
    7. 'None' → logprob: -5.804576873779297
    8. 'cost' → logprob: -5.929576873779297
    9. '[]
' → logprob: -6.429576873779297
    10. 'st' → logprob: -6.554576873779297

Token 654: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006307095172815025
    2. '(chain' → logprob: -8.125630378723145
    3. '(st' → logprob: -9.125630378723145
    4. '(order' → logprob: -9.250630378723145
    5. '(' → logprob: -10.125630378723145
    6. '(filter' → logprob: -10.750630378723145
    7. '(command' → logprob: -11.125630378723145
    8. '(lambda' → logprob: -11.250630378723145
    9. '(store' → logprob: -11.375630378723145
    10. '(set' → logprob: -11.375630378723145

Token 655: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -8.137130498653278e-05
    2. '(' → logprob: -9.625081062316895
    3. '(cost' → logprob: -12.000081062316895
    4. '(command' → logprob: -12.750081062316895
    5. '(order' → logprob: -13.375081062316895
    6. 'lambda' → logprob: -13.625081062316895
    7. '(st' → logprob: -14.000081062316895
    8. '(
' → logprob: -14.000081062316895
    9. '(int' → logprob: -14.625081062316895
    10. '((' → logprob: -15.125081062316895

Token 656: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.8315831422805786
    2. ' k' → logprob: -1.0815831422805786
    3. '(k' → logprob: -1.7065831422805786
    4. '(lambda' → logprob: -3.456583023071289
    5. ' (' → logprob: -5.206583023071289
    6. ' lambda' → logprob: -6.331583023071289
    7. 'lambda' → logprob: -6.331583023071289
    8. '(' → logprob: -6.956583023071289
    9. 'cost' → logprob: -7.081583023071289
    10. '(cost' → logprob: -7.706583023071289

Token 657: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005486258305609226
    2. ' :' → logprob: -7.750548839569092
    3. ':k' → logprob: -9.250548362731934
    4. '(k' → logprob: -12.125548362731934
    5. ':
' → logprob: -12.500548362731934
    6. ',k' → logprob: -12.625548362731934
    7. ',' → logprob: -13.000548362731934
    8. '(cost' → logprob: -13.250548362731934
    9. ' k' → logprob: -14.375548362731934
    10. '          ' → logprob: -14.625548362731934

Token 658: ' stuck' (ID: 24327)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.21762925386428833
    2. 'st' → logprob: -2.3426291942596436
    3. ' cost' → logprob: -3.2176291942596436
    4. 'order' → logprob: -3.9676291942596436
    5. '(cost' → logprob: -3.9676291942596436
    6. ' stuck' → logprob: -4.217629432678223
    7. 'store' → logprob: -6.092629432678223
    8. ' order' → logprob: -6.467629432678223
    9. '(st' → logprob: -6.967629432678223
    10. '(order' → logprob: -7.592629432678223

Token 659: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0002632430987432599
    2. '_order' → logprob: -8.250263214111328
    3. 'cost' → logprob: -13.125263214111328
    4. 'Cost' → logprob: -17.375263214111328
    5. ' cost' → logprob: -19.500263214111328
    6. '_' → logprob: -20.000263214111328
    7. '```' → logprob: -20.000263214111328
    8. '_COST' → logprob: -20.125263214111328
    9. 'order' → logprob: -20.250263214111328
    10. '
' → logprob: -20.250263214111328

Token 660: '.__' (ID: 10210)
  Prédit: '.__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.__' → logprob: -0.11349032074213028
    2. '[k' → logprob: -2.238490343093872
    3. '(k' → logprob: -7.613490104675293
    4. 'k' → logprob: -9.738490104675293
    5. '__' → logprob: -10.238490104675293
    6. '.' → logprob: -10.488490104675293
    7. '().__' → logprob: -10.738490104675293
    8. '.setdefault' → logprob: -12.113490104675293
    9. '__.__' → logprob: -12.238490104675293
    10. ').__' → logprob: -12.238490104675293

Token 661: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -9.968312951968983e-06
    2. 'k' → logprob: -12.250009536743164
    3. 'getitem' → logprob: -13.000009536743164
    4. '__' → logprob: -13.625009536743164
    5. '[k' → logprob: -14.250009536743164
    6. ' set' → logprob: -15.125009536743164
    7. 'clear' → logprob: -15.250009536743164
    8. '_set' → logprob: -15.375009536743164
    9. '(k' → logprob: -15.875009536743164
    10. '{k' → logprob: -17.250009536743164

Token 662: 'item' (ID: 2057)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0034470646642148495
    2. 'item' → logprob: -5.75344705581665
    3. 'getitem' → logprob: -8.253447532653809
    4. 'et' → logprob: -12.503447532653809
    5. 'iter' → logprob: -12.753447532653809
    6. 'init' → logprob: -14.253447532653809
    7. 'it' → logprob: -14.253447532653809
    8. 'i' → logprob: -15.378447532653809
    9. 'iset' → logprob: -15.378447532653809
    10. 'k' → logprob: -15.878447532653809

Token 663: '__(' (ID: 8241)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -9.968312951968983e-06
    2. ' (' → logprob: -11.875009536743164
    3. '[k' → logprob: -13.625009536743164
    4. '__(' → logprob: -14.125009536743164
    5. '(' → logprob: -14.250009536743164
    6. 'k' → logprob: -15.250009536743164
    7. '(key' → logprob: -17.000009536743164
    8. ')(' → logprob: -17.500009536743164
    9. ',k' → logprob: -18.000009536743164
    10. '```' → logprob: -18.000009536743164

Token 664: 'k' (ID: 74)
  Prédit: 'k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -4.4849443838757e-06
    2. '(k' → logprob: -12.750004768371582
    3. ' k' → logprob: -14.250004768371582
    4. '   ' → logprob: -14.750004768371582
    5. '[k' → logprob: -15.750004768371582
    6. '  ' → logprob: -16.125003814697266
    7. '           ' → logprob: -16.375003814697266
    8. ' ' → logprob: -16.875003814697266
    9. '	k' → logprob: -17.125003814697266
    10. '
' → logprob: -17.125003814697266

Token 665: ',' (ID: 11)
  Prédit: '(k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(k' → logprob: -0.3735387921333313
    2. 'k' → logprob: -1.4985387325286865
    3. '[k' → logprob: -2.7485387325286865
    4. ',' → logprob: -4.248538970947266
    5. ',k' → logprob: -4.623538970947266
    6. ' (' → logprob: -9.873538970947266
    7. ' k' → logprob: -10.998538970947266
    8. ')' → logprob: -12.123538970947266
    9. ')(' → logprob: -12.123538970947266
    10. '),' → logprob: -12.248538970947266

Token 666: ' ' (ID: 220)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.0006532243569381535
    2. '0' → logprob: -7.375653266906738
    3. '[k' → logprob: -11.125653266906738
    4. '(k' → logprob: -12.250653266906738
    5. ' k' → logprob: -12.250653266906738
    6. '   ' → logprob: -14.375653266906738
    7. ' ' → logprob: -14.500653266906738
    8. '[' → logprob: -14.875653266906738
    9. '```' → logprob: -15.375653266906738
    10. '  ' → logprob: -16.125652313232422

Token 667: '0' (ID: 15)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.22542499005794525
    2. '0' → logprob: -1.6004250049591064
    3. ' k' → logprob: -12.100424766540527
    4. ' ' → logprob: -12.475424766540527
    5. '[k' → logprob: -13.600424766540527
    6. '(k' → logprob: -14.100424766540527
    7. '{k' → logprob: -14.975424766540527
    8. '```' → logprob: -16.475425720214844
    9. '   ' → logprob: -16.600425720214844
    10. 'kx' → logprob: -16.600425720214844

Token 668: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.6665791869163513
    2. ',' → logprob: -0.7915791869163513
    3. ',k' → logprob: -3.666579246520996
    4. '(k' → logprob: -5.291579246520996
    5. 'k' → logprob: -6.291579246520996
    6. ' ,' → logprob: -8.291579246520996
    7. ' ),' → logprob: -8.416579246520996
    8. '[k' → logprob: -9.291579246520996
    9. ')),' → logprob: -9.541579246520996
    10. '           ' → logprob: -9.541579246520996

Token 669: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.011830609291791916
    2. 'st' → logprob: -4.636830806732178
    3. ' order' → logprob: -6.511830806732178
    4. 'range' → logprob: -7.886830806732178
    5. 'store' → logprob: -9.38683032989502
    6. 'k' → logprob: -9.88683032989502
    7. 'list' → logprob: -10.26183032989502
    8. '[' → logprob: -12.26183032989502
    9. ' stuck' → logprob: -12.51183032989502
    10. '  ' → logprob: -12.76183032989502

Token 670: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.07075455039739609
    2. '))
' → logprob: -2.6957545280456543
    3. '                   ' → logprob: -7.570754528045654
    4. '               ' → logprob: -9.195755004882812
    5. '           ' → logprob: -9.320755004882812
    6. '))
' → logprob: -10.070755004882812
    7. ' ))' → logprob: -11.070755004882812
    8. '       ' → logprob: -11.695755004882812
    9. '                       ' → logprob: -11.695755004882812
    10. '()))' → logprob: -12.070755004882812

Token 671: '                   ' (ID: 699)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9118677973747253
    2. '                   ' → logprob: -0.9118677973747253
    3. '<|end|>' → logprob: -2.03686785697937
    4. '               ' → logprob: -3.66186785697937
    5. '```' → logprob: -4.161867618560791
    6. '       ' → logprob: -4.286867618560791
    7. 't' → logprob: -6.786867618560791
    8. 'else' → logprob: -6.911867618560791
    9. 'elif' → logprob: -7.036867618560791
    10. 'continue' → logprob: -7.286867618560791

Token 672: ' driver' (ID: 8931)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.6663779616355896
    2. '                   ' → logprob: -1.0413780212402344
    3. 'driver' (adapté à ' driver') → logprob: -3.0413780212402344
    4. 'store' → logprob: -3.6663780212402344
    5. 'st' → logprob: -3.7913780212402344
    6. 'dist' → logprob: -4.666378021240234
    7. 'order' → logprob: -5.041378021240234
    8. 'command' → logprob: -5.166378021240234
    9. '               ' → logprob: -5.416378021240234
    10. 'head' → logprob: -5.666378021240234

Token 673: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -2.5776860184123507e-06
    2. 'hold' → logprob: -13.25000286102295
    3. '_' → logprob: -15.37500286102295
    4. '=' → logprob: -15.37500286102295
    5. 'Hold' → logprob: -16.750001907348633
    6. '_holder' → logprob: -17.000001907348633
    7. '
' → logprob: -17.625001907348633
    8. '=_' → logprob: -17.750001907348633
    9. '_h' → logprob: -17.750001907348633
    10. '_=' → logprob: -17.875001907348633

Token 674: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.4921548068523407
    2. '+=' → logprob: -1.117154836654663
    3. '=' → logprob: -2.992154836654663
    4. ' =' → logprob: -4.492154598236084
    5. ' -=' → logprob: -10.242155075073242
    6. ',' → logprob: -10.867155075073242
    7. ' |=' → logprob: -11.117155075073242
    8. '+' → logprob: -11.992155075073242
    9. ']+=' → logprob: -12.117155075073242
    10. '-=' → logprob: -12.367155075073242

Token 675: ' sum' (ID: 4215)
  Prédit: 'store'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'store' → logprob: -0.011967604048550129
    2. '0' → logprob: -4.636967658996582
    3. 'sum' → logprob: -7.261967658996582
    4. ' store' → logprob: -7.261967658996582
    5. '1' → logprob: -8.386967658996582
    6. 'order' → logprob: -8.886967658996582
    7. 'driver' → logprob: -9.011967658996582
    8. 'max' → logprob: -9.136967658996582
    9. ' ' → logprob: -10.261967658996582
    10. 'st' → logprob: -10.386967658996582

Token 676: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.309391587972641
    2. '(st' → logprob: -1.9343916177749634
    3. '(store' → logprob: -2.434391498565674
    4. '([' → logprob: -4.309391498565674
    5. '(order' → logprob: -4.434391498565674
    6. '((' → logprob: -6.059391498565674
    7. 'cost' → logprob: -6.059391498565674
    8. '(command' → logprob: -6.559391498565674
    9. '(' → logprob: -6.559391498565674
    10. '(k' → logprob: -8.559391975402832

Token 677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6090495586395264
    2. '[k' → logprob: -1.2340495586395264
    3. '(k' → logprob: -1.8590495586395264
    4. '(order' → logprob: -5.1090497970581055
    5. ')+' → logprob: -6.4840497970581055
    6. ')
' → logprob: -7.4840497970581055
    7. '.values' → logprob: -8.109049797058105
    8. '[' → logprob: -8.484049797058105
    9. '[:' → logprob: -9.109049797058105
    10. '())' → logprob: -9.359049797058105

Token 678: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 679: ' stuck' (ID: 24327)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7218478918075562
    2. 'heading' → logprob: -0.8468478918075562
    3. '           ' → logprob: -3.5968480110168457
    4. 'dist' → logprob: -3.8468480110168457
    5. 'command' → logprob: -4.221848011016846
    6. ' heading' → logprob: -4.971848011016846
    7. '               ' → logprob: -5.346848011016846
    8. 'head' → logprob: -6.721848011016846
    9. 'elif' → logprob: -6.721848011016846
    10. 'continue' → logprob: -7.096848011016846

Token 680: '_order' (ID: 17446)
  Prédit: '_cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.31327494978904724
    2. '_order' → logprob: -1.3132749795913696
    3. 'cost' → logprob: -12.438275337219238
    4. '_orders' → logprob: -12.563275337219238
    5. '_' → logprob: -12.938275337219238
    6. 'order' → logprob: -14.313275337219238
    7. '_code' → logprob: -14.813275337219238
    8. 'Cost' → logprob: -14.938275337219238
    9. '_answer' → logprob: -16.188274383544922
    10. '_set' → logprob: -16.438274383544922

Token 681: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18091490864753723
    2. '.clear' → logprob: -1.8059148788452148
    3. ' =' → logprob: -6.930914878845215
    4. '.=' → logprob: -9.555914878845215
    5. 'clear' → logprob: -9.930914878845215
    6. '=set' → logprob: -10.055914878845215
    7. '.' → logprob: -11.180914878845215
    8. '=.' → logprob: -11.930914878845215
    9. '.Clear' → logprob: -12.805914878845215
    10. ' .' → logprob: -13.555914878845215

Token 682: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.001270112581551075
    2. 'fro' → logprob: -6.751270294189453
    3. ' set' → logprob: -9.251270294189453
    4. '{' → logprob: -13.001270294189453
    5. '{}' → logprob: -14.001270294189453
    6. ' fro' → logprob: -14.126270294189453
    7. '(set' → logprob: -17.626270294189453
    8. ')set' → logprob: -17.751270294189453
    9. 'f' → logprob: -18.126270294189453
    10. '```' → logprob: -18.251270294189453

Token 683: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005245971959084272
    2. '()
' → logprob: -5.255246162414551
    3. '()

' → logprob: -12.50524616241455
    4. '()
' → logprob: -12.50524616241455
    5. '()]' → logprob: -14.00524616241455
    6. '())' → logprob: -14.13024616241455
    7. '()</' → logprob: -14.13024616241455
    8. '()\' → logprob: -14.25524616241455
    9. '()>' → logprob: -14.63024616241455
    10. '();' → logprob: -14.88024616241455

Token 684: '                   ' (ID: 699)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 685: ' store' (ID: 4897)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.16985273361206055
    2. '                   ' → logprob: -2.1698527336120605
    3. 'command' → logprob: -3.5448527336120605
    4. '           ' → logprob: -4.9198527336120605
    5. '               ' → logprob: -6.1698527336120605
    6. 'head' → logprob: -6.9198527336120605
    7. 'dist' → logprob: -7.5448527336120605
    8. '```' → logprob: -7.7948527336120605
    9. 'continue' → logprob: -7.9198527336120605
    10. '                       ' → logprob: -8.169853210449219

Token 686: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -4.36574100604048e-06
    2. 'hold' → logprob: -12.500004768371582
    3. '=' → logprob: -16.125003814697266
    4. '_h' → logprob: -16.375003814697266
    5. '+=' → logprob: -16.875003814697266
    6. ' hold' → logprob: -16.875003814697266
    7. 'Hold' → logprob: -16.875003814697266
    8. '   ' → logprob: -17.125003814697266
    9. '_holder' → logprob: -17.125003814697266
    10. '_' → logprob: -17.250003814697266

Token 687: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014309004880487919
    2. ' =' → logprob: -4.264308929443359
    3. '-=' → logprob: -9.76430892944336
    4. '+=' → logprob: -9.88930892944336
    5. ' -=' → logprob: -10.51430892944336
    6. ' +=' → logprob: -11.63930892944336
    7. '*=' → logprob: -14.38930892944336
    8. ',' → logprob: -14.51430892944336
    9. '==' → logprob: -15.76430892944336
    10. '.=' → logprob: -16.13930892944336

Token 688: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037311585037969053
    2. ' ' → logprob: -8.250372886657715
    3. 'driver' → logprob: -9.125372886657715
    4. '   ' → logprob: -14.375372886657715
    5. ' driver' → logprob: -14.750372886657715
    6. 'store' → logprob: -14.875372886657715
    7. '```' → logprob: -15.562872886657715
    8. ' ' → logprob: -15.875372886657715
    9. '  ' → logprob: -15.937872886657715
    10. '	' → logprob: -16.06287384033203

Token 689: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.250018119812012
    3. 'driver' → logprob: -12.375018119812012
    4. '```' → logprob: -16.375017166137695
    5. '00' → logprob: -17.125017166137695
    6. '1' → logprob: -17.187517166137695
    7. 'store' → logprob: -17.312517166137695
    8. '۰' → logprob: -17.437517166137695
    9. ' ' → logprob: -17.812517166137695
    10. '   ' → logprob: -18.187517166137695

Token 690: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 691: '           ' (ID: 352)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1885108947753906
    2. 'command' → logprob: -1.4385108947753906
    3. '           ' → logprob: -1.6885108947753906
    4. 'heading' → logprob: -2.0635108947753906
    5. '               ' → logprob: -2.6885108947753906
    6. 'else' → logprob: -3.8135108947753906
    7. 't' → logprob: -4.438510894775391
    8. '```' → logprob: -4.563510894775391
    9. 'continue' → logprob: -5.188510894775391
    10. 'elif' → logprob: -5.438510894775391

Token 692: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5212602019309998
    2. 'command' → logprob: -1.6462602615356445
    3. '                   ' → logprob: -2.2712602615356445
    4. '               ' → logprob: -4.0212602615356445
    5. '       ' → logprob: -4.0212602615356445
    6. 'heading' → logprob: -4.2712602615356445
    7. ' command' → logprob: -4.3962602615356445
    8. ' ' → logprob: -4.8962602615356445
    9. '            
' → logprob: -5.2712602615356445
    10. 'elif' → logprob: -5.6462602615356445

Token 693: ' Nested' (ID: 120284)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19888490438461304
    2. 'heading' → logprob: -3.073884963989258
    3. ' if' → logprob: -3.448884963989258
    4. 'if' → logprob: -3.573884963989258
    5. 'command' → logprob: -3.823884963989258
    6. '               ' → logprob: -4.573884963989258
    7. ' command' → logprob: -4.823884963989258
    8. '```' → logprob: -5.573884963989258
    9. '       ' → logprob: -5.698884963989258
    10. '                   ' → logprob: -5.698884963989258

Token 694: ' obscure' (ID: 77331)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.65544193983078
    2. '           ' → logprob: -0.90544193983078
    3. 'elif' → logprob: -3.405441999435425
    4. ' if' → logprob: -3.530441999435425
    5. '               ' → logprob: -5.030441761016846
    6. 'else' → logprob: -5.155441761016846
    7. '                       ' → logprob: -7.905441761016846
    8. '                   ' → logprob: -8.155442237854004
    9. ' elif' → logprob: -8.530442237854004
    10. '		' → logprob: -8.530442237854004

Token 695: ' lambda' (ID: 27871)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14110203087329865
    2. '           ' → logprob: -2.2661020755767822
    3. ' if' → logprob: -3.6411020755767822
    4. '               ' → logprob: -6.891101837158203
    5. '                       ' → logprob: -8.641101837158203
    6. '                   ' → logprob: -9.016101837158203
    7. '   ' → logprob: -9.266101837158203
    8. 'elif' → logprob: -9.641101837158203
    9. '		' → logprob: -9.766101837158203
    10. '       ' → logprob: -10.141101837158203

Token 696: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08571255952119827
    2. '                   ' → logprob: -2.7107126712799072
    3. '               ' → logprob: -4.710712432861328
    4. ',' → logprob: -6.585712432861328
    5. '                       ' → logprob: -6.960712432861328
    6. '       ' → logprob: -7.085712432861328
    7. '            
' → logprob: -7.210712432861328
    8. 'else' → logprob: -7.710712432861328
    9. ':' → logprob: -7.835712432861328
    10. ':
' → logprob: -8.085712432861328

Token 697: ' in' (ID: 306)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.4522581994533539
    2. '(command' → logprob: -1.7022582292556763
    3. ' command' → logprob: -3.3272581100463867
    4. '(' → logprob: -3.7022581100463867
    5. 'order' → logprob: -4.327258110046387
    6. '(lambda' → logprob: -4.327258110046387
    7. 'omega' → logprob: -4.452258110046387
    8. 'solve' → logprob: -4.452258110046387
    9. 'dist' → logprob: -4.577258110046387
    10. '(
' → logprob: -4.702258110046387

Token 698: '-place' (ID: 81838)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -1.2725129127502441
    2. 'range' → logprob: -2.147512912750244
    3. 'line' → logprob: -2.772512912750244
    4. '       ' → logprob: -3.022512912750244
    5. 't' → logprob: -3.272512912750244
    6. 'def' → logprob: -3.397512912750244
    7. 'order' → logprob: -3.397512912750244
    8. '   ' → logprob: -3.397512912750244
    9. '[' → logprob: -3.397512912750244
    10. '               ' → logprob: -3.522512912750244

Token 699: ' logic' (ID: 18485)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.15823575854301453
    2. 'assignment' → logprob: -3.658235788345337
    3. '(command' → logprob: -3.908235788345337
    4. 'operation' → logprob: -4.158235549926758
    5. 'statement' → logprob: -4.283235549926758
    6. '(' → logprob: -4.533235549926758
    7. 'heading' → logprob: -4.658235549926758
    8. 'cost' → logprob: -4.783235549926758
    9. ' command' → logprob: -5.033235549926758
    10. '(lambda' → logprob: -5.158235549926758

Token 700: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09168992936611176
    2. '                   ' → logprob: -2.5916898250579834
    3. '               ' → logprob: -4.8416900634765625
    4. 'command' → logprob: -6.8416900634765625
    5. '                       ' → logprob: -7.2166900634765625
    6. ' command' → logprob: -7.5916900634765625
    7. ',' → logprob: -7.5916900634765625
    8. '       ' → logprob: -7.8416900634765625
    9. '```' → logprob: -7.9666900634765625
    10. '            
' → logprob: -8.466690063476562

Token 701: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022476350888609886
    2. '                   ' → logprob: -4.6474761962890625
    3. '               ' → logprob: -4.8974761962890625
    4. '		' → logprob: -6.2724761962890625
    5. '                       ' → logprob: -7.2724761962890625
    6. 'command' → logprob: -7.6474761962890625
    7. '```' → logprob: -7.6474761962890625
    8. ' command' → logprob: -7.7724761962890625
    9. '       ' → logprob: -8.397476196289062
    10. ',' → logprob: -9.022476196289062

Token 702: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4527493119239807
    2. 'heading' → logprob: -2.202749252319336
    3. 'command' → logprob: -2.577749252319336
    4. '           ' → logprob: -2.827749252319336
    5. ' dist' → logprob: -3.202749252319336
    6. '               ' → logprob: -4.202749252319336
    7. ' heading' → logprob: -4.327749252319336
    8. ' command' → logprob: -4.702749252319336
    9. '                   ' → logprob: -4.952749252319336
    10. 'dest' → logprob: -5.327749252319336

Token 703: ' heading' (ID: 23808)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7910330891609192
    2. 'heading' → logprob: -1.0410330295562744
    3. 'command' → logprob: -2.9160330295562744
    4. ' dist' → logprob: -3.0410330295562744
    5. 'order' → logprob: -3.9160330295562744
    6. ' heading' → logprob: -4.4160332679748535
    7. 'driver' → logprob: -4.6660332679748535
    8. 'not' → logprob: -4.6660332679748535
    9. 'cost' → logprob: -4.6660332679748535
    10. 'store' → logprob: -5.0410332679748535

Token 704: ' in' (ID: 306)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5265891551971436
    2. '==' → logprob: -0.9015891551971436
    3. ' =' → logprob: -7.401589393615723
    4. ' <' → logprob: -7.901589393615723
    5. '=' → logprob: -8.026589393615723
    6. ':' → logprob: -8.276589393615723
    7. ' +=' → logprob: -8.276589393615723
    8. '<|end|>' → logprob: -8.526589393615723
    9. '+=' → logprob: -8.526589393615723
    10. '   ' → logprob: -8.901589393615723

Token 705: ' order' (ID: 2569)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8346166014671326
    2. '{' → logprob: -0.8346166014671326
    3. '[' → logprob: -2.7096166610717773
    4. 'range' → logprob: -3.2096166610717773
    5. ' (' → logprob: -4.584616661071777
    6. ' {' → logprob: -5.584616661071777
    7. ' range' → logprob: -5.709616661071777
    8. '(range' → logprob: -6.334616661071777
    9. 'order' → logprob: -6.834616661071777
    10. '({' → logprob: -6.959616661071777

Token 706: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.477020263671875
    2. ':
' → logprob: -0.977020263671875
    3. '           ' → logprob: -6.727020263671875
    4. ' and' → logprob: -7.227020263671875
    5. '               ' → logprob: -7.477020263671875
    6. '=' → logprob: -9.602020263671875
    7. '       ' → logprob: -9.727020263671875
    8. ':
' → logprob: -9.852020263671875
    9. ',' → logprob: -9.977020263671875
    10. '==' → logprob: -10.227020263671875

Token 707: ' heading' (ID: 23808)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.687082052230835
    2. 'cost' → logprob: -1.687082052230835
    3. ' dist' → logprob: -1.812082052230835
    4. '(cost' → logprob: -2.187082052230835
    5. '(dist' → logprob: -2.437082052230835
    6. ' cost' → logprob: -2.562082052230835
    7. ' (' → logprob: -3.937082052230835
    8. ' not' → logprob: -3.937082052230835
    9. 'command' → logprob: -4.187082290649414
    10. 'driver' → logprob: -4.187082290649414

Token 708: ' >' (ID: 1424)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.10989248752594
    2. ' ==' → logprob: -1.10989248752594
    3. '==' → logprob: -1.48489248752594
    4. ':
' → logprob: -3.2348923683166504
    5. ' !=' → logprob: -3.3598923683166504
    6. ' not' → logprob: -3.9848923683166504
    7. '!=' → logprob: -5.10989236831665
    8. '   ' → logprob: -5.85989236831665
    9. 'not' → logprob: -6.10989236831665
    10. ' in' → logprob: -6.10989236831665

Token 709: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15169186890125275
    2. '-' → logprob: -2.0266919136047363
    3. ' ' → logprob: -5.026691913604736
    4. ' -' → logprob: -6.776691913604736
    5. '=' → logprob: -7.776691913604736
    6. 'cost' → logprob: -8.776691436767578
    7. 'ω' → logprob: -8.901691436767578
    8. 'max' → logprob: -8.901691436767578
    9. '1' → logprob: -9.651691436767578
    10. 't' → logprob: -9.651691436767578

Token 710: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.013679162599146366
    2. '-' → logprob: -4.388679027557373
    3. ' ' → logprob: -7.138679027557373
    4. '=' → logprob: -8.263679504394531
    5. ' -' → logprob: -10.263679504394531
    6. '1' → logprob: -10.888679504394531
    7. 'cost' → logprob: -11.138679504394531
    8. 't' → logprob: -12.013679504394531
    9. 'st' → logprob: -12.013679504394531
    10. '
' → logprob: -12.763679504394531

Token 711: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5504565238952637
    2. ':' → logprob: -0.9254565238952637
    3. ' and' → logprob: -4.050456523895264
    4. '           ' → logprob: -5.300456523895264
    5. '               ' → logprob: -5.800456523895264
    6. ',' → logprob: -8.175457000732422
    7. '):
' → logprob: -8.175457000732422
    8. '=' → logprob: -9.175457000732422
    9. ' :
' → logprob: -9.175457000732422
    10. 'and' → logprob: -9.425457000732422

Token 712: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.42625921964645386
    2. ':' → logprob: -1.5512592792510986
    3. '               ' → logprob: -2.3012592792510986
    4. '           ' → logprob: -4.5512590408325195
    5. '       ' → logprob: -5.3012590408325195
    6. ',' → logprob: -5.5512590408325195
    7. '[' → logprob: -5.5512590408325195
    8. '):
' → logprob: -5.8012590408325195
    9. '```' → logprob: -6.1762590408325195
    10. '                       ' → logprob: -7.3012590408325195

Token 713: ' order' (ID: 2569)
  Prédit: ' dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.6412329077720642
    2. 'dist' → logprob: -1.016232967376709
    3. '                   ' → logprob: -3.016232967376709
    4. '               ' → logprob: -3.891232967376709
    5. ' command' → logprob: -4.141232967376709
    6. 'command' → logprob: -4.891232967376709
    7. ' cost' → logprob: -5.141232967376709
    8. 'cost' → logprob: -5.516232967376709
    9. 'distance' → logprob: -6.516232967376709
    10. '                ' → logprob: -6.891232967376709

Token 714: ' -=' (ID: 12583)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.44436177611351013
    2. '.remove' → logprob: -1.6943618059158325
    3. '|' → logprob: -2.319361686706543
    4. '=' → logprob: -3.319361686706543
    5. ' -=' → logprob: -3.819361686706543
    6. '-' → logprob: -4.569361686706543
    7. '.dis' → logprob: -5.694361686706543
    8. ' |=' → logprob: -6.694361686706543
    9. ' =' → logprob: -7.069361686706543
    10. '   ' → logprob: -7.194361686706543

Token 715: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.31793567538261414
    2. 'fro' → logprob: -1.3179357051849365
    3. 'set' → logprob: -5.442935466766357
    4. 'st' → logprob: -8.942935943603516
    5. '{i' → logprob: -9.692935943603516
    6. '{s' → logprob: -9.942935943603516
    7. '{k' → logprob: -11.442935943603516
    8. ' {' → logprob: -11.442935943603516
    9. '{x' → logprob: -11.567935943603516
    10. '{
' → logprob: -11.692935943603516

Token 716: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -3.4881879400927573e-05
    2. ' heading' → logprob: -11.000035285949707
    3. 'ω' → logprob: -11.625035285949707
    4. 'head' → logprob: -12.375035285949707
    5. 'omega' → logprob: -13.375035285949707
    6. '(' → logprob: -14.000035285949707
    7. '0' → logprob: -14.125035285949707
    8. '-heading' → logprob: -15.125035285949707
    9. 'header' → logprob: -15.375035285949707
    10. 'he' → logprob: -15.625035285949707

Token 717: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.06479787081480026
    2. '}
' → logprob: -2.814797878265381
    3. '               ' → logprob: -6.189797878265381
    4. '                   ' → logprob: -8.564797401428223
    5. '}
' → logprob: -8.564797401428223
    6. '           ' → logprob: -8.814797401428223
    7. ' }' → logprob: -9.189797401428223
    8. '}

' → logprob: -10.689797401428223
    9. ',' → logprob: -10.689797401428223
    10. ' }
' → logprob: -10.814797401428223

Token 718: '               ' (ID: 506)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9190114140510559
    2. '<|end|>' → logprob: -1.2940113544464111
    3. ':' → logprob: -2.794011354446411
    4. ':
' → logprob: -3.169011354446411
    5. '       ' → logprob: -3.669011354446411
    6. '
' → logprob: -3.669011354446411
    7. '[' → logprob: -4.04401159286499
    8. '               ' → logprob: -4.04401159286499
    9. '(' → logprob: -4.29401159286499
    10. ')
' → logprob: -4.41901159286499

Token 719: ' driver' (ID: 8931)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.06473083794116974
    2. 'heading' → logprob: -3.6897308826446533
    3. 'cost' → logprob: -4.439730644226074
    4. ' dist' → logprob: -4.439730644226074
    5. 'command' → logprob: -5.189730644226074
    6. '               ' → logprob: -5.939730644226074
    7. 'order' → logprob: -6.439730644226074
    8. 'st' → logprob: -6.564730644226074
    9. '           ' → logprob: -7.689730644226074
    10. 'distance' → logprob: -8.064730644226074

Token 720: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -3.702754474943504e-05
    2. 'hold' → logprob: -10.50003719329834
    3. '_cost' → logprob: -13.37503719329834
    4. '_' → logprob: -13.50003719329834
    5. '=' → logprob: -13.75003719329834
    6. '   ' → logprob: -14.00003719329834
    7. 'Hold' → logprob: -14.75003719329834
    8. ' _' → logprob: -15.00003719329834
    9. '```' → logprob: -15.25003719329834
    10. '[' → logprob: -15.37503719329834

Token 721: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.548336923122406
    2. '-=' → logprob: -1.1733369827270508
    3. '=' → logprob: -2.423336982727051
    4. '+=' → logprob: -4.423336982727051
    5. ' =' → logprob: -4.798336982727051
    6. ' +=' → logprob: -5.798336982727051
    7. '-' → logprob: -7.423336982727051
    8. '   ' → logprob: -9.17333698272705
    9. ' -' → logprob: -9.67333698272705
    10. ',' → logprob: -10.04833698272705

Token 722: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.010279283858835697
    2. ' cost' → logprob: -5.385279178619385
    3. '(cost' → logprob: -5.885279178619385
    4. '1' → logprob: -6.760279178619385
    5. 'st' → logprob: -7.510279178619385
    6. 'ω' → logprob: -7.635279178619385
    7. 'dist' → logprob: -8.385279655456543
    8. 'heading' → logprob: -8.635279655456543
    9. '(' → logprob: -9.385279655456543
    10. 'driver' → logprob: -10.510279655456543

Token 723: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.65707261255011e-06
    2. '{' → logprob: -13.125008583068848
    3. '[token' → logprob: -13.500008583068848
    4. '[assembly' → logprob: -13.875008583068848
    5. ' ' → logprob: -14.500008583068848
    6. '[key' → logprob: -14.625008583068848
    7. '[action' → logprob: -14.750008583068848
    8. '[
' → logprob: -14.875008583068848
    9. '[{' → logprob: -15.125008583068848
    10. '[in' → logprob: -15.750008583068848

Token 724: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.000158842682139948
    2. ' heading' → logprob: -8.75015926361084
    3. '   ' → logprob: -16.125158309936523
    4. '.heading' → logprob: -16.750158309936523
    5. ' ' → logprob: -16.875158309936523
    6. '(' → logprob: -17.250158309936523
    7. 'head' → logprob: -17.500158309936523
    8. '[' → logprob: -17.625158309936523
    9. '
' → logprob: -18.375158309936523
    10. '-heading' → logprob: -18.500158309936523

Token 725: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.640583872795105
    2. '[' → logprob: -0.765583872795105
    3. ']
' → logprob: -5.0155839920043945
    4. ']+' → logprob: -8.015583992004395
    5. '+' → logprob: -8.390583992004395
    6. ']}' → logprob: -8.765583992004395
    7. '[
' → logprob: -9.265583992004395
    8. ' ]' → logprob: -9.390583992004395
    9. '           ' → logprob: -9.515583992004395
    10. '               ' → logprob: -10.015583992004395

Token 726: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: ' cost' (ID: 3097)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.7654918432235718
    2. 'dist' → logprob: -1.0154918432235718
    3. 'command' → logprob: -2.5154919624328613
    4. 'cost' (adapté à ' cost') → logprob: -2.6404919624328613
    5. ' dist' → logprob: -5.265491962432861
    6. '               ' → logprob: -5.265491962432861
    7. ' heading' → logprob: -6.265491962432861
    8. '           ' → logprob: -6.515491962432861
    9. 'distance' → logprob: -7.015491962432861
    10. ' command' → logprob: -7.015491962432861

Token 728: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.729906196298543e-06
    2. '=' → logprob: -12.750009536743164
    3. ' =' → logprob: -13.500009536743164
    4. '[:]' → logprob: -13.875009536743164
    5. '<|end|>' → logprob: -14.000009536743164
    6. '=[' → logprob: -14.125009536743164
    7. '.__' → logprob: -14.500009536743164
    8. '[assembly' → logprob: -15.375009536743164
    9. '__' → logprob: -15.375009536743164
    10. '[
' → logprob: -15.500009536743164

Token 729: 'heading' (ID: 24070)
  Prédit: 'heading'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.0001334559783572331
    2. ' heading' → logprob: -9.250133514404297
    3. '[' → logprob: -10.250133514404297
    4. '.heading' → logprob: -13.875133514404297
    5. '0' → logprob: -14.500133514404297
    6. '   ' → logprob: -15.875133514404297
    7. '_heading' → logprob: -16.000133514404297
    8. ' ' → logprob: -16.250133514404297
    9. '-heading' → logprob: -16.750133514404297
    10. '{' → logprob: -17.625133514404297

Token 730: ']' (ID: 60)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.008009973913431168
    2. ']' → logprob: -4.883009910583496
    3. '][' → logprob: -8.633009910583496
    4. ']+=' → logprob: -9.508009910583496
    5. ']=' → logprob: -10.008009910583496
    6. ' ]' → logprob: -10.633009910583496
    7. ' [' → logprob: -10.633009910583496
    8. ']+' → logprob: -10.758009910583496
    9. ' +=' → logprob: -12.008009910583496
    10. '   ' → logprob: -12.633009910583496

Token 731: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.019641879945993423
    2. ' =' → logprob: -4.019641876220703
    3. '+=' → logprob: -6.894641876220703
    4. '-=' → logprob: -8.644641876220703
    5. ' +=' → logprob: -8.769641876220703
    6. '*=' → logprob: -9.519641876220703
    7. ' -=' → logprob: -10.394641876220703
    8. '[' → logprob: -10.394641876220703
    9. ',' → logprob: -12.519641876220703
    10. ' ' → logprob: -12.769641876220703

Token 732: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006628761766478419
    2. '-' → logprob: -7.750662803649902
    3. ' ' → logprob: -9.000662803649902
    4. '1' → logprob: -10.750662803649902
    5. 'st' → logprob: -11.125662803649902
    6. '999' → logprob: -11.625662803649902
    7. 'store' → logprob: -11.750662803649902
    8. 'float' → logprob: -11.938162803649902
    9. '-st' → logprob: -12.063162803649902
    10. 'max' → logprob: -12.625662803649902

Token 733: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005457649822346866
    2. '-' → logprob: -7.625545978546143
    3. ' ' → logprob: -11.000545501708984
    4. '1' → logprob: -12.000545501708984
    5. 'st' → logprob: -12.438045501708984
    6. 'store' → logprob: -12.750545501708984
    7. 'dist' → logprob: -12.813045501708984
    8. '-st' → logprob: -13.250545501708984
    9. 'driver' → logprob: -13.250545501708984
    10. '(' → logprob: -13.375545501708984

Token 734: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 735: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.424417108297348
    2. '<|end|>' → logprob: -2.174417018890381
    3. ' 
' → logprob: -3.174417018890381
    4. '  
' → logprob: -4.174417018890381
    5. '        
' → logprob: -4.424417018890381
    6. '           ' → logprob: -4.424417018890381
    7. '   ' → logprob: -4.424417018890381
    8. ',' → logprob: -4.424417018890381
    9. '[' → logprob: -4.424417018890381
    10. ' ' → logprob: -4.549417018890381

Token 736: ' current' (ID: 2208)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.559329092502594
    2. 'command' → logprob: -1.6843290328979492
    3. 'dist' → logprob: -1.9343290328979492
    4. '       ' → logprob: -3.059329032897949
    5. ' heading' → logprob: -4.309329032897949
    6. ' command' → logprob: -4.309329032897949
    7. '           ' → logprob: -5.309329032897949
    8. '   ' → logprob: -6.059329032897949
    9. ' dist' → logprob: -6.059329032897949
    10. 'if' → logprob: -6.434329032897949

Token 737: '_id' (ID: 1537)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.382987916469574
    2. '=' → logprob: -1.8829879760742188
    3. '_' → logprob: -2.6329879760742188
    4. '_heading' → logprob: -2.8829879760742188
    5. ',' → logprob: -4.382987976074219
    6. '_token' → logprob: -4.632987976074219
    7. '[' → logprob: -5.757987976074219
    8. '```' → logprob: -6.507987976074219
    9. '_dist' → logprob: -6.632987976074219
    10. '_command' → logprob: -6.757987976074219

Token 738: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2534371316432953
    2. '=' → logprob: -1.7534371614456177
    3. ',' → logprob: -3.003437042236328
    4. '<|end|>' → logprob: -7.378437042236328
    5. ' ,' → logprob: -8.753437042236328
    6. ')' → logprob: -9.003437042236328
    7. ' +=' → logprob: -9.878437042236328
    8. ' ' → logprob: -11.128437042236328
    9. 's' → logprob: -11.253437042236328
    10. '+=' → logprob: -11.378437042236328

Token 739: ' heading' (ID: 23808)
  Prédit: ' extravagant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extravagant' → logprob: -0.32098522782325745
    2. 'extr' → logprob: -1.570985198020935
    3. 'ω' → logprob: -3.4459853172302246
    4. 'next' → logprob: -4.695985317230225
    5. 'reduce' → logprob: -4.945985317230225
    6. ' next' → logprob: -5.820985317230225
    7. 'heading' → logprob: -5.945985317230225
    8. 'order' → logprob: -6.320985317230225
    9. ' extravag' → logprob: -6.445985317230225
    10. '0' → logprob: -6.445985317230225

Token 740: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 741: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2354234457015991
    2. ' 
' → logprob: -1.7354234457015991
    3. ' if' → logprob: -2.2354235649108887
    4. '<|end|>' → logprob: -2.4854235649108887
    5. ',' → logprob: -2.6104235649108887
    6. '
' → logprob: -2.8604235649108887
    7. ',
' → logprob: -3.7354235649108887
    8. '[' → logprob: -3.8604235649108887
    9. '   ' → logprob: -3.9854235649108887
    10. '	' → logprob: -4.360423564910889

Token 742: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.5071408152580261
    2. 'heading' → logprob: -1.257140874862671
    3. 'next' → logprob: -2.757140874862671
    4. '           ' → logprob: -3.882140874862671
    5. 'if' → logprob: -5.507140636444092
    6. 'command' → logprob: -5.757140636444092
    7. 'dest' → logprob: -5.882140636444092
    8. '       ' → logprob: -6.007140636444092
    9. 'new' → logprob: -6.007140636444092
    10. ' heading' → logprob: -6.632140636444092

Token 743: ' Un' (ID: 1367)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.8160260319709778
    2. 'dist' → logprob: -1.191025972366333
    3. 'heading' → logprob: -3.066025972366333
    4. 'target' → logprob: -3.066025972366333
    5. 'dest' → logprob: -3.316025972366333
    6. ' next' → logprob: -3.691025972366333
    7. 'new' → logprob: -4.066026210784912
    8. ' dist' → logprob: -4.816026210784912
    9. 'destination' → logprob: -4.941026210784912
    10. 'dst' → logprob: -5.191026210784912

Token 744: 'usual' (ID: 134017)
  Prédit: 'der'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'der' → logprob: -0.799950897693634
    2. 'finished' → logprob: -1.5499508380889893
    3. '
' → logprob: -3.0499508380889893
    4. 'dert' → logprob: -3.2999508380889893
    5. '       ' → logprob: -3.4249508380889893
    6. 'used' → logprob: -3.4249508380889893
    7. '           ' → logprob: -3.5499508380889893
    8. '   ' → logprob: -3.9249508380889893
    9. 'til' → logprob: -3.9249508380889893
    10. 'def' → logprob: -4.049951076507568

Token 745: ' structure' (ID: 8866)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.43580129742622375
    2. '           ' → logprob: -1.9358012676239014
    3. ' dist' → logprob: -2.1858012676239014
    4. 'next' → logprob: -4.3108015060424805
    5. 'distance' → logprob: -4.5608015060424805
    6. 'dest' → logprob: -4.6858015060424805
    7. ' next' → logprob: -4.8108015060424805
    8. 'heading' → logprob: -5.5608015060424805
    9. 'direction' → logprob: -5.8108015060424805
    10. 'command' → logprob: -5.9358015060424805

Token 746: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11963118612766266
    2. ' if' → logprob: -3.119631290435791
    3. 'if' → logprob: -4.494631290435791
    4. ',' → logprob: -4.494631290435791
    5. '            
' → logprob: -5.369631290435791
    6. 'while' → logprob: -5.494631290435791
    7. 'next' → logprob: -5.619631290435791
    8. ' for' → logprob: -5.619631290435791
    9. ' next' → logprob: -5.619631290435791
    10. '
' → logprob: -5.744631290435791

Token 747: ' clarity' (ID: 45632)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.0889633446931839
    2. '_' → logprob: -3.463963270187378
    3. 'next' → logprob: -3.963963270187378
    4. 'new' → logprob: -4.838963508605957
    5. 't' → logprob: -5.713963508605957
    6. ' dist' → logprob: -5.713963508605957
    7. 'i' → logprob: -6.338963508605957
    8. 'order' → logprob: -6.463963508605957
    9. 'if' → logprob: -6.588963508605957
    10. 'd' → logprob: -6.713963508605957

Token 748: ' hind' (ID: 54538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0480483770370483
    2. '           ' → logprob: -1.2980483770370483
    3. 'if' → logprob: -2.298048496246338
    4. 'distance' → logprob: -2.923048496246338
    5. ' if' → logprob: -3.298048496246338
    6. 'next' → logprob: -3.423048496246338
    7. 'current' → logprob: -3.673048496246338
    8. '```' → logprob: -3.798048496246338
    9. 'for' → logprob: -4.173048496246338
    10. ' for' → logprob: -4.798048496246338

Token 749: 'rance' (ID: 103771)
  Prédit: 'ering'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ering' → logprob: -0.19713079929351807
    2. 'ent' → logprob: -2.9471306800842285
    3. 'er' → logprob: -3.1971306800842285
    4. 'ing' → logprob: -3.4471306800842285
    5. 't' → logprob: -4.4471306800842285
    6. 'e' → logprob: -4.4471306800842285
    7. '   ' → logprob: -5.1971306800842285
    8. 'rance' → logprob: -5.3221306800842285
    9. '       ' → logprob: -6.1971306800842285
    10. '```' → logprob: -6.3221306800842285

Token 750: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16476614773273468
    2. 'next' → logprob: -3.1647660732269287
    3. ' next' → logprob: -3.9147660732269287
    4. 'dist' → logprob: -4.039766311645508
    5. 'distance' → logprob: -4.664766311645508
    6. '
' → logprob: -4.789766311645508
    7. '       ' → logprob: -4.914766311645508
    8. '            
' → logprob: -5.414766311645508
    9. 'if' → logprob: -5.539766311645508
    10. 'new' → logprob: -5.789766311645508

Token 751: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3518267571926117
    2. ' next' → logprob: -1.851826786994934
    3. 'next' → logprob: -3.1018266677856445
    4. ' dist' → logprob: -4.3518266677856445
    5. 'dist' → logprob: -4.4768266677856445
    6. ' if' → logprob: -4.6018266677856445
    7. 'dest' → logprob: -5.4768266677856445
    8. 'destination' → logprob: -5.4768266677856445
    9. ' for' → logprob: -5.6018266677856445
    10. '```' → logprob: -5.6018266677856445

Token 752: ' if' (ID: 538)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -1.5264629125595093
    2. 'dist' → logprob: -1.7764629125595093
    3. ' next' → logprob: -1.7764629125595093
    4. '           ' → logprob: -2.526463031768799
    5. ' dist' → logprob: -2.776463031768799
    6. ' for' → logprob: -3.026463031768799
    7. 'for' → logprob: -3.151463031768799
    8. 'if' (adapté à ' if') → logprob: -3.651463031768799
    9. 'dest' → logprob: -3.901463031768799
    10. ' if' → logprob: -4.151463031768799

Token 753: ' len' (ID: 4631)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.35279467701911926
    2. ' dist' → logprob: -1.9777946472167969
    3. 'store' → logprob: -2.602794647216797
    4. 'driver' → logprob: -3.227794647216797
    5. 'command' → logprob: -4.352794647216797
    6. 'not' → logprob: -5.227794647216797
    7. ' store' → logprob: -5.227794647216797
    8. 'order' → logprob: -5.352794647216797
    9. ' driver' → logprob: -5.852794647216797
    10. '   ' → logprob: -6.227794647216797

Token 754: '(order' (ID: 33050)
  Prédit: '(order'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(order' → logprob: -0.0017670509405434132
    2. '(command' → logprob: -6.626767158508301
    3. '(st' → logprob: -8.7517671585083
    4. 'order' → logprob: -9.2517671585083
    5. '(store' → logprob: -9.3767671585083
    6. '(' → logprob: -9.6267671585083
    7. '(cost' → logprob: -10.7517671585083
    8. ' (' → logprob: -12.3767671585083
    9. '(ord' → logprob: -12.5017671585083
    10. '(
' → logprob: -13.1267671585083

Token 755: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028354592621326447
    2. ')>' → logprob: -3.7783546447753906
    3. ' >' → logprob: -6.153354644775391
    4. ')==' → logprob: -6.653354644775391
    5. '>' → logprob: -7.278354644775391
    6. ' ==' → logprob: -8.02835464477539
    7. ' )' → logprob: -8.77835464477539
    8. '==' → logprob: -8.77835464477539
    9. '):' → logprob: -8.77835464477539
    10. '):
' → logprob: -9.65335464477539

Token 756: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.9312887787818909
    2. ' ==' → logprob: -1.056288719177246
    3. '>' → logprob: -2.181288719177246
    4. '==' → logprob: -2.431288719177246
    5. ' <' → logprob: -3.056288719177246
    6. '<' → logprob: -5.306288719177246
    7. ' <=' → logprob: -6.181288719177246
    8. ':' → logprob: -7.181288719177246
    9. '<=' → logprob: -8.056288719177246
    10. ' >=' → logprob: -8.181288719177246

Token 757: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011816580081358552
    2. ' ' → logprob: -6.751181602478027
    3. '1' → logprob: -11.751181602478027
    4. '  ' → logprob: -14.251181602478027
    5. '   ' → logprob: -14.501181602478027
    6. '
' → logprob: -14.626181602478027
    7. '[' → logprob: -15.188681602478027
    8. '۰' → logprob: -15.251181602478027
    9. '```' → logprob: -15.813681602478027
    10. ' ' → logprob: -16.063682556152344

Token 758: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00039504567394033074
    2. ' ' → logprob: -8.000394821166992
    3. '1' → logprob: -9.875394821166992
    4. '2' → logprob: -13.937894821166992
    5. '(' → logprob: -14.312894821166992
    6. '3' → logprob: -14.375394821166992
    7. '[' → logprob: -14.562894821166992
    8. '
' → logprob: -14.625394821166992
    9. '۰' → logprob: -14.687894821166992
    10. '5' → logprob: -14.750394821166992

Token 759: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7194104194641113
    2. ':
' → logprob: -1.0944104194641113
    3. ':' → logprob: -1.9694104194641113
    4. '               ' → logprob: -3.7194104194641113
    5. 'and' → logprob: -4.844410419464111
    6. '           ' → logprob: -5.094410419464111
    7. '   ' → logprob: -9.094409942626953
    8. '       ' → logprob: -9.844409942626953
    9. '                   ' → logprob: -9.844409942626953
    10. ',' → logprob: -10.469409942626953

Token 760: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013477603904902935
    2. '           ' → logprob: -5.388477802276611
    3. ':
' → logprob: -5.888477802276611
    4. ',' → logprob: -6.388477802276611
    5. ':' → logprob: -6.763477802276611
    6. '<|end|>' → logprob: -7.513477802276611
    7. '```' → logprob: -7.638477802276611
    8. '                
' → logprob: -8.138477325439453
    9. '):
' → logprob: -8.388477325439453
    10. ',
' → logprob: -8.513477325439453

Token 761: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.374561071395874
    2. 'next' → logprob: -1.749561071395874
    3. 'dist' → logprob: -2.749561071395874
    4. 'heading' → logprob: -4.124561309814453
    5. ' next' → logprob: -4.124561309814453
    6. '           ' → logprob: -4.624561309814453
    7. 'dest' → logprob: -5.124561309814453
    8. '                   ' → logprob: -5.624561309814453
    9. 'destination' → logprob: -5.624561309814453
    10. 'max' → logprob: -5.999561309814453

Token 762: ' current' (ID: 2208)
  Prédit: ' extravagant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' extravagant' → logprob: -1.9938431978225708
    2. '(' → logprob: -2.1188430786132812
    3. 'order' → logprob: -2.6188430786132812
    4. 'heading' → logprob: -2.7438430786132812
    5. 'False' → logprob: -2.9938430786132812
    6. 'dist' → logprob: -2.9938430786132812
    7. 'len' → logprob: -3.1188430786132812
    8. ' (' → logprob: -3.3688430786132812
    9. 'extr' → logprob: -3.4938430786132812
    10. 't' → logprob: -3.4938430786132812

Token 763: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.004025445319712162
    2. ' in' → logprob: -6.504025459289551
    3. '_token' → logprob: -7.004025459289551
    4. '_' → logprob: -7.254025459289551
    5. 'in' → logprob: -8.25402545928955
    6. '   ' → logprob: -9.75402545928955
    7. 'id' → logprob: -9.87902545928955
    8. '+' → logprob: -10.00402545928955
    9. 'token' → logprob: -10.00402545928955
    10. ' not' → logprob: -10.12902545928955

Token 764: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1236090213060379
    2. ' in' → logprob: -2.9986090660095215
    3. 'not' → logprob: -2.9986090660095215
    4. 'in' → logprob: -4.4986090660095215
    5. ' !=' → logprob: -5.7486090660095215
    6. '!=' → logprob: -6.4986090660095215
    7. ' ==' → logprob: -8.373608589172363
    8. '==' → logprob: -8.498608589172363
    9. '<|end|>' → logprob: -9.623608589172363
    10. ')' → logprob: -9.748608589172363

Token 765: ' final' (ID: 1721)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.9019359350204468
    2. 'heading' → logprob: -1.2769359350204468
    3. '0' → logprob: -1.5269359350204468
    4. 'ω' → logprob: -3.7769360542297363
    5. 'max' → logprob: -3.9019360542297363
    6. '(' → logprob: -4.026936054229736
    7. 'min' → logprob: -4.526936054229736
    8. ' extravagant' → logprob: -4.651936054229736
    9. 'next' → logprob: -5.526936054229736
    10. 'wf' → logprob: -6.401936054229736

Token 766: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.022507237270474434
    2. '_' → logprob: -5.147507190704346
    3. '_id' → logprob: -5.272507190704346
    4. 'Dist' → logprob: -5.772507190704346
    5. 'ist' → logprob: -6.147507190704346
    6. '_order' → logprob: -6.897507190704346
    7. '_distance' → logprob: -7.272507190704346
    8. ':' → logprob: -7.272507190704346
    9. 'dist' → logprob: -7.397507190704346
    10. '   ' → logprob: -8.022507667541504

Token 767: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7453463673591614
    2. ':
' → logprob: -0.7453463673591614
    3. '                   ' → logprob: -3.9953463077545166
    4. ' and' → logprob: -3.9953463077545166
    5. 'and' → logprob: -4.620346546173096
    6. '               ' → logprob: -6.245346546173096
    7. '                       ' → logprob: -7.245346546173096
    8. ' or' → logprob: -7.495346546173096
    9. '           ' → logprob: -8.495346069335938
    10. '+' → logprob: -8.745346069335938

Token 768: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02724572829902172
    2. ':
' → logprob: -4.52724552154541
    3. '               ' → logprob: -5.65224552154541
    4. '                       ' → logprob: -5.65224552154541
    5. ':' → logprob: -5.90224552154541
    6. '<|end|>' → logprob: -6.40224552154541
    7. '           ' → logprob: -6.65224552154541
    8. '```' → logprob: -6.77724552154541
    9. '<|end|>' → logprob: -8.02724552154541
    10. '                    
' → logprob: -8.27724552154541

Token 769: ' final' (ID: 1721)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3765633702278137
    2. 'dist' → logprob: -1.376563310623169
    3. ' dist' → logprob: -3.126563310623169
    4. '                       ' → logprob: -5.376563549041748
    5. 'heading' → logprob: -5.376563549041748
    6. ' heading' → logprob: -5.876563549041748
    7. 'final' (adapté à ' final') → logprob: -6.251563549041748
    8. '               ' → logprob: -7.001563549041748
    9. '```' → logprob: -7.876563549041748
    10. ' final' → logprob: -8.00156307220459

Token 770: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.01175591442734003
    2. 'dist' → logprob: -5.26175594329834
    3. '_' → logprob: -5.88675594329834
    4. 'Dist' → logprob: -6.63675594329834
    5. '=' → logprob: -7.51175594329834
    6. '_id' → logprob: -8.13675594329834
    7. ' =' → logprob: -8.26175594329834
    8. '_cost' → logprob: -8.51175594329834
    9. '_distance' → logprob: -8.88675594329834
    10. '_order' → logprob: -9.38675594329834

Token 771: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.68736732006073
    2. ' =' → logprob: -0.93736732006073
    3. ' +=' → logprob: -2.6873674392700195
    4. '+=' → logprob: -3.3123674392700195
    5. ',' → logprob: -7.1873674392700195
    6. '+' → logprob: -10.31236743927002
    7. ' ' → logprob: -10.43736743927002
    8. ')' → logprob: -10.68736743927002
    9. ' +' → logprob: -10.81236743927002
    10. ' -=' → logprob: -10.93736743927002

Token 772: ' max' (ID: 2999)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.08434084057807922
    2. 'heading' → logprob: -2.834340810775757
    3. 'order' → logprob: -4.584341049194336
    4. ' dist' → logprob: -5.709341049194336
    5. 'current' → logprob: -6.584341049194336
    6. 'final' → logprob: -6.584341049194336
    7. 'command' → logprob: -6.834341049194336
    8. 'next' → logprob: -7.334341049194336
    9. ' heading' → logprob: -7.709341049194336
    10. '=' → logprob: -7.959341049194336

Token 773: '_hold' (ID: 160928)
  Prédit: '_order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_order' → logprob: -0.8889291286468506
    2. '_cost' → logprob: -1.5139291286468506
    3. 'order' → logprob: -2.5139291286468506
    4. '_id' → logprob: -2.5139291286468506
    5. '_key' → logprob: -2.7639291286468506
    6. '_token' → logprob: -3.0139291286468506
    7. 'cost' → logprob: -3.6389291286468506
    8. '_val' → logprob: -4.01392936706543
    9. '(order' → logprob: -4.26392936706543
    10. '_' → logprob: -4.51392936706543

Token 774: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4741140604019165
    2. ' =' → logprob: -0.9741140604019165
    3. ',' → logprob: -11.474114418029785
    4. ' ' → logprob: -11.849114418029785
    5. '=max' → logprob: -12.349114418029785
    6. ')' → logprob: -13.349114418029785
    7. '=user' → logprob: -13.474114418029785
    8. '   ' → logprob: -13.724114418029785
    9. ')=' → logprob: -14.099114418029785
    10. '=current' → logprob: -14.536614418029785

Token 775: ' extravagant' (ID: 145785)
  Prédit: 'extr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'extr' → logprob: -0.019358837977051735
    2. ' extravagant' → logprob: -4.1443586349487305
    3. ' extr' → logprob: -6.3943586349487305
    4. 'extra' → logprob: -7.6443586349487305
    5. ' extravag' → logprob: -8.01935863494873
    6. '   ' → logprob: -8.39435863494873
    7. '(' → logprob: -8.64435863494873
    8. 'max' → logprob: -9.64435863494873
    9. 'redu' → logprob: -10.01935863494873
    10. 'chain' → logprob: -10.26935863494873

Token 776: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0006442877347581089
    2. 'max' → logprob: -7.375644207000732
    3. '_cost' → logprob: -11.50064468383789
    4. '_order' → logprob: -12.50064468383789
    5. 'order' → logprob: -13.25064468383789
    6. '_min' → logprob: -14.75064468383789
    7. '(order' → logprob: -14.87564468383789
    8. 'Max' → logprob: -15.00064468383789
    9. '(max' → logprob: -15.25064468383789
    10. 'cost' → logprob: -15.87564468383789

Token 777: '_f' (ID: 1337)
  Prédit: '_f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_f' → logprob: -9.221884101862088e-05
    2. '_order' → logprob: -9.625092506408691
    3. '_cost' → logprob: -10.875092506408691
    4. '_holder' → logprob: -12.375092506408691
    5. '_find' → logprob: -13.625092506408691
    6. '_max' → logprob: -14.375092506408691
    7. '_hold' → logprob: -15.000092506408691
    8. '_' → logprob: -16.000091552734375
    9. 'Finder' → logprob: -16.000091552734375
    10. '```' → logprob: -16.375091552734375

Token 778: 'inder' (ID: 5508)
  Prédit: 'inder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inder' → logprob: -0.012851828709244728
    2. 'finder' → logprob: -4.387851715087891
    3. 'max' → logprob: -8.26285171508789
    4. 'ind' → logprob: -10.51285171508789
    5. '_max' → logprob: -11.13785171508789
    6. 'nder' → logprob: -11.63785171508789
    7. '```' → logprob: -11.76285171508789
    8. 'Finder' → logprob: -13.38785171508789
    9. 'ander' → logprob: -13.51285171508789
    10. 'def' → logprob: -13.51285171508789

Token 779: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.0011155696120113134
    2. 'cost' → logprob: -6.876115798950195
    3. '(' → logprob: -9.751115798950195
    4. '(st' → logprob: -12.001115798950195
    5. '(
' → logprob: -12.001115798950195
    6. '(store' → logprob: -12.376115798950195
    7. '(order' → logprob: -13.001115798950195
    8. '(dist' → logprob: -13.751115798950195
    9. ' cost' → logprob: -14.126115798950195
    10. '(distance' → logprob: -14.501115798950195

Token 780: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038265250623226166
    2. '(cost' → logprob: -3.6632652282714844
    3. ',c' → logprob: -4.663265228271484
    4. 'cost' → logprob: -6.663265228271484
    5. ')' → logprob: -7.663265228271484
    6. '(order' → logprob: -8.163265228271484
    7. '),' → logprob: -9.288265228271484
    8. ' ,' → logprob: -9.413265228271484
    9. 'order' → logprob: -10.288265228271484
    10. ',[' → logprob: -10.413265228271484

Token 781: ' order' (ID: 2569)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.0015930612571537495
    2. 'list' → logprob: -6.751593112945557
    3. ' order' → logprob: -8.126592636108398
    4. '[' → logprob: -9.626592636108398
    5. '(order' → logprob: -10.751592636108398
    6. 'range' → logprob: -11.251592636108398
    7. 'sorted' → logprob: -12.001592636108398
    8. '   ' → logprob: -12.376592636108398
    9. 'tuple' → logprob: -12.376592636108398
    10. ' list' → logprob: -13.001592636108398

Token 782: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36020970344543457
    2. ')
' → logprob: -1.3602097034454346
    3. ')[' → logprob: -3.9852097034454346
    4. '               ' → logprob: -4.7352094650268555
    5. ')
' → logprob: -4.8602094650268555
    6. '[' → logprob: -5.7352094650268555
    7. '(order' → logprob: -5.8602094650268555
    8. '                   ' → logprob: -6.1102094650268555
    9. '),' → logprob: -7.3602094650268555
    10. 'order' → logprob: -7.8602094650268555

Token 783: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.09002914279699326
    2. '               ' → logprob: -2.590029239654541
    3. '           ' → logprob: -5.840029239654541
    4. '                       ' → logprob: -6.340029239654541
    5. '<|end|>' → logprob: -6.340029239654541
    6. ')' → logprob: -6.465029239654541
    7. '                    
' → logprob: -7.465029239654541
    8. '                           ' → logprob: -7.715029239654541
    9. '       ' → logprob: -8.340028762817383
    10. ',' → logprob: -8.340028762817383

Token 784: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.6923962831497192
    2. '                   ' → logprob: -0.9423962831497192
    3. 'heading' → logprob: -3.0673961639404297
    4. ' dist' → logprob: -3.3173961639404297
    5. 'final' → logprob: -5.31739616394043
    6. '               ' → logprob: -5.31739616394043
    7. 'command' → logprob: -5.44239616394043
    8. 'current' → logprob: -5.56739616394043
    9. ' heading' → logprob: -5.69239616394043
    10. ' command' → logprob: -6.94239616394043

Token 785: ' Over' (ID: 7931)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.042913999408483505
    2. 'heading' → logprob: -3.4179139137268066
    3. '                   ' → logprob: -5.042913913726807
    4. '               ' → logprob: -6.917913913726807
    5. 'final' → logprob: -7.917913913726807
    6. 'command' → logprob: -8.542914390563965
    7. '           ' → logprob: -8.792914390563965
    8. ' dist' → logprob: -8.792914390563965
    9. '                       ' → logprob: -8.792914390563965
    10. 'max' → logprob: -9.042914390563965

Token 786: 'comp' (ID: 3697)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.680545449256897
    2. '           ' → logprob: -1.180545449256897
    3. '               ' → logprob: -2.8055453300476074
    4. 'loaded' → logprob: -3.3055453300476074
    5. 'all' → logprob: -3.6805453300476074
    6. 'final' → logprob: -3.9305453300476074
    7. 'load' → logprob: -4.930545330047607
    8. '                       ' → logprob: -5.180545330047607
    9. '                    ' → logprob: -5.555545330047607
    10. 'write' → logprob: -6.180545330047607

Token 787: 'licated' (ID: 90176)
  Prédit: 'licated'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'licated' → logprob: -0.789700448513031
    2. 'ex' → logprob: -1.1647005081176758
    3. 'lex' → logprob: -2.289700508117676
    4. 'lete' → logprob: -3.039700508117676
    5. 'x' → logprob: -4.039700508117676
    6. 'leted' → logprob: -4.289700508117676
    7. '```' → logprob: -4.914700508117676
    8. 'leting' → logprob: -4.914700508117676
    9. 'l' → logprob: -5.039700508117676
    10. 'licate' → logprob: -5.164700508117676

Token 788: ' min' (ID: 1349)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.7810018658638
    2. 'max' → logprob: -0.9060018658638
    3. 'final' → logprob: -3.1560018062591553
    4. 'current' → logprob: -4.156002044677734
    5. 'continue' → logprob: -4.531002044677734
    6. 'distance' → logprob: -4.531002044677734
    7. 'code' → logprob: -4.906002044677734
    8. '                   ' → logprob: -5.156002044677734
    9. 'lambda' → logprob: -5.156002044677734
    10. 'for' → logprob: -5.156002044677734

Token 789: ' function' (ID: 1114)
  Prédit: '(
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(
' → logprob: -0.8647361993789673
    2. 'max' → logprob: -1.9897361993789673
    3. '(' → logprob: -2.2397360801696777
    4. '(lambda' → logprob: -2.6147360801696777
    5. '(max' → logprob: -3.3647360801696777
    6. 'final' → logprob: -3.4897360801696777
    7. '_distance' → logprob: -3.7397360801696777
    8. 'imum' → logprob: -4.114736080169678
    9. '(dist' → logprob: -4.239736080169678
    10. '                   ' → logprob: -4.239736080169678

Token 790: ' for' (ID: 395)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0024813658092170954
    2. '               ' → logprob: -6.502481460571289
    3. 'final' → logprob: -8.627481460571289
    4. 'max' → logprob: -9.127481460571289
    5. '                       ' → logprob: -9.252481460571289
    6. '           ' → logprob: -9.377481460571289
    7. '
' → logprob: -9.377481460571289
    8. ',' → logprob: -9.502481460571289
    9. '<|end|>' → logprob: -10.127481460571289
    10. 'next' → logprob: -10.252481460571289

Token 791: ' condition' (ID: 7060)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.41432711482048035
    2. 'dist' → logprob: -1.6643271446228027
    3. 't' → logprob: -3.2893271446228027
    4. 'final' → logprob: -3.6643271446228027
    5. 'next' → logprob: -4.164327144622803
    6. 'distance' → logprob: -4.289327144622803
    7. ' max' → logprob: -5.164327144622803
    8. 'order' → logprob: -5.164327144622803
    9. 'finding' → logprob: -5.664327144622803
    10. '_' → logprob: -5.664327144622803

Token 792: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0239889994263649
    2. 'if' → logprob: -4.523989200592041
    3. ' if' → logprob: -5.523989200592041
    4. '               ' → logprob: -5.898989200592041
    5. 'final' → logprob: -6.523989200592041
    6. '                       ' → logprob: -7.023989200592041
    7. '                           ' → logprob: -7.398989200592041
    8. '           ' → logprob: -7.523989200592041
    9. '```' → logprob: -7.898989200592041
    10. 'current' → logprob: -8.273988723754883

Token 793: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2494158297777176
    2. ' if' → logprob: -2.249415874481201
    3. 'if' → logprob: -2.624415874481201
    4. '```' → logprob: -3.749415874481201
    5. 'final' → logprob: -5.374415874481201
    6. '                           ' → logprob: -6.124415874481201
    7. ' final' → logprob: -6.249415874481201
    8. ')' → logprob: -6.499415874481201
    9. '               ' → logprob: -6.749415874481201
    10. '                       ' → logprob: -6.749415874481201

Token 794: ' if' (ID: 538)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.0348601341247559
    2. ' dist' → logprob: -1.6598601341247559
    3. '                   ' → logprob: -2.034860134124756
    4. 'if' (adapté à ' if') → logprob: -2.159860134124756
    5. 'final' → logprob: -2.534860134124756
    6. ' if' → logprob: -3.159860134124756
    7. ' final' → logprob: -3.909860134124756
    8. 'max' → logprob: -4.159860134124756
    9. ' max' → logprob: -4.534860134124756
    10. ' min' → logprob: -4.909860134124756

Token 795: ' driver' (ID: 8931)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8473168611526489
    2. 'max' → logprob: -0.9723168611526489
    3. '(min' → logprob: -2.8473167419433594
    4. '(max' → logprob: -3.2223167419433594
    5. 'dist' → logprob: -4.222316741943359
    6. '(' → logprob: -4.347316741943359
    7. '(dist' → logprob: -4.847316741943359
    8. 'cost' → logprob: -4.972316741943359
    9. 'final' → logprob: -4.972316741943359
    10. 'not' → logprob: -5.222316741943359

Token 796: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -5.68153518543113e-05
    2. 'hold' → logprob: -10.875057220458984
    3. '_' → logprob: -11.375057220458984
    4. ' _' → logprob: -12.250057220458984
    5. '_cost' → logprob: -12.750057220458984
    6. '
' → logprob: -12.875057220458984
    7. '_keep' → logprob: -13.500057220458984
    8. '_h' → logprob: -13.500057220458984
    9. '   ' → logprob: -13.500057220458984
    10. '\' → logprob: -13.875057220458984

Token 797: ' <' (ID: 464)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7224545478820801
    2. '>' → logprob: -1.59745454788208
    3. ' <' → logprob: -1.72245454788208
    4. ' <=' → logprob: -3.09745454788208
    5. '<' → logprob: -3.22245454788208
    6. '<=' → logprob: -4.22245454788208
    7. ' >=' → logprob: -4.22245454788208
    8. '>=' → logprob: -4.97245454788208
    9. ' ==' → logprob: -5.97245454788208
    10. ' and' → logprob: -6.22245454788208

Token 798: ' store' (ID: 4897)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06226545572280884
    2. ' min' → logprob: -3.437265396118164
    3. 'max' → logprob: -4.562265396118164
    4. '(' → logprob: -4.687265396118164
    5. '(min' → logprob: -5.562265396118164
    6. 'cost' → logprob: -6.062265396118164
    7. 'final' → logprob: -7.812265396118164
    8. 'sum' → logprob: -8.187265396118164
    9. '0' → logprob: -8.187265396118164
    10. ' (' → logprob: -8.562265396118164

Token 799: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.0002658655575942248
    2. 'hold' → logprob: -8.375266075134277
    3. '_cost' → logprob: -11.125266075134277
    4. '_' → logprob: -12.625266075134277
    5. '_keep' → logprob: -12.750266075134277
    6. '   ' → logprob: -13.000266075134277
    7. '[' → logprob: -13.875266075134277
    8. '_max' → logprob: -13.875266075134277
    9. 'max' → logprob: -14.000266075134277
    10. '_h' → logprob: -14.500266075134277

Token 800: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1667144000530243
    2. ' and' → logprob: -2.6667144298553467
    3. '                       ' → logprob: -3.6667144298553467
    4. 'or' → logprob: -3.7917144298553467
    5. 'and' → logprob: -4.666714191436768
    6. ':' → logprob: -4.666714191436768
    7. '                   ' → logprob: -4.791714191436768
    8. '                           ' → logprob: -5.916714191436768
    9. ':
' → logprob: -6.416714191436768
    10. '               ' → logprob: -6.916714191436768

Token 801: ' current' (ID: 2208)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3771575689315796
    2. '(' → logprob: -2.752157688140869
    3. 'final' → logprob: -2.752157688140869
    4. 'min' → logprob: -3.252157688140869
    5. 'dist' → logprob: -3.502157688140869
    6. 'cost' → logprob: -3.752157688140869
    7. '(max' → logprob: -3.877157688140869
    8. '(dist' → logprob: -4.502157688140869
    9. 'driver' → logprob: -4.752157688140869
    10. 'not' → logprob: -4.752157688140869

Token 802: '_id' (ID: 1537)
  Prédit: '_hold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.2832980751991272
    2. '_id' → logprob: -1.9082980155944824
    3. '_dist' → logprob: -2.5332980155944824
    4. '_cost' → logprob: -4.658298015594482
    5. 'hold' → logprob: -5.408298015594482
    6. '_order' → logprob: -6.283298015594482
    7. '_max' → logprob: -7.533298015594482
    8. 'dist' → logprob: -7.908298015594482
    9. '_' → logprob: -8.40829849243164
    10. '   ' → logprob: -8.53329849243164

Token 803: ' >' (ID: 1424)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.33503755927085876
    2. '!=' → logprob: -1.9600375890731812
    3. ' ==' → logprob: -2.8350374698638916
    4. '==' → logprob: -2.9600374698638916
    5. ' not' → logprob: -4.585037708282471
    6. ' in' → logprob: -4.585037708282471
    7. ' <' → logprob: -5.210037708282471
    8. '+' → logprob: -6.710037708282471
    9. ':' → logprob: -6.710037708282471
    10. ' ' → logprob: -7.460037708282471

Token 804: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.6146119236946106
    2. '0' → logprob: -0.9896119236946106
    3. 'final' → logprob: -2.739611864089966
    4. '-' → logprob: -4.364612102508545
    5. '=' → logprob: -5.989612102508545
    6. '1' → logprob: -6.239612102508545
    7. 'inf' → logprob: -6.989612102508545
    8. 'min' → logprob: -6.989612102508545
    9. ' max' → logprob: -7.364612102508545
    10. '(max' → logprob: -7.489612102508545

Token 805: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4445931017398834
    2. '0' → logprob: -1.319593071937561
    3. 'final' → logprob: -2.6945931911468506
    4. '-' → logprob: -4.5695929527282715
    5. 'min' → logprob: -5.8195929527282715
    6. '1' → logprob: -5.9445929527282715
    7. '(max' → logprob: -6.1945929527282715
    8. 'V' → logprob: -7.0695929527282715
    9. 'inf' → logprob: -7.0695929527282715
    10. '=' → logprob: -7.5695929527282715

Token 806: ' and' (ID: 326)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6431066393852234
    2. ' and' → logprob: -1.2681066989898682
    3. ':' → logprob: -1.7681066989898682
    4. 'and' → logprob: -4.768106460571289
    5. '                       ' → logprob: -5.018106460571289
    6. ' or' → logprob: -5.768106460571289
    7. '                   ' → logprob: -6.143106460571289
    8. '                           ' → logprob: -7.518106460571289
    9. ':return' → logprob: -8.393106460571289
    10. '               ' → logprob: -8.643106460571289

Token 807: ' \
' (ID: 6814)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2727713882923126
    2. 'cost' → logprob: -2.5227713584899902
    3. 'dist' → logprob: -3.8977713584899902
    4. 'final' → logprob: -4.14777135848999
    5. '(max' → logprob: -4.27277135848999
    6. 'min' → logprob: -4.27277135848999
    7. ' max' → logprob: -4.39777135848999
    8. '(cost' → logprob: -4.39777135848999
    9. 'store' → logprob: -4.64777135848999
    10. 'order' → logprob: -4.64777135848999

Token 808: '                      ' (ID: 10682)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.8191899061203003
    2. 'cost' → logprob: -1.5691899061203003
    3. '(cost' → logprob: -2.94419002532959
    4. '(max' → logprob: -3.44419002532959
    5. 'driver' → logprob: -3.56919002532959
    6. 'dist' → logprob: -3.56919002532959
    7. 'store' → logprob: -3.69419002532959
    8. '(' → logprob: -3.81919002532959
    9. 'final' → logprob: -3.81919002532959
    10. '(dist' → logprob: -3.94419002532959

Token 809: ' min' (ID: 1349)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5995993614196777
    2. 'min' (adapté à ' min') → logprob: -2.2245993614196777
    3. 'cost' → logprob: -2.5995993614196777
    4. '(' → logprob: -3.2245993614196777
    5. '(max' → logprob: -3.3495993614196777
    6. 'driver' → logprob: -3.8495993614196777
    7. 'final' → logprob: -3.8495993614196777
    8. '(cost' → logprob: -3.8495993614196777
    9. 'not' → logprob: -4.099599361419678
    10. 'store' → logprob: -4.224599361419678

Token 810: '([' (ID: 5194)
  Prédit: '(driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(driver' → logprob: -0.5381624102592468
    2. '(store' → logprob: -2.4131624698638916
    3. '(cost' → logprob: -2.5381624698638916
    4. '(' → logprob: -2.7881624698638916
    5. '((' → logprob: -2.7881624698638916
    6. '(order' → logprob: -3.1631624698638916
    7. '(max' → logprob: -3.2881624698638916
    8. '([' → logprob: -4.1631622314453125
    9. '(command' → logprob: -5.2881622314453125
    10. '(
' → logprob: -5.2881622314453125

Token 811: 'max' (ID: 3228)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'driver' → logprob: -0.6500963568687439
    2. 'max' → logprob: -1.6500964164733887
    3. 'store' → logprob: -2.0250964164733887
    4. 'final' → logprob: -2.9000964164733887
    5. 'cost' → logprob: -3.7750964164733887
    6. '(' → logprob: -4.150096416473389
    7. '1' → logprob: -4.775096416473389
    8. 'order' → logprob: -5.025096416473389
    9. '(max' → logprob: -5.275096416473389
    10. '(store' → logprob: -5.400096416473389

Token 812: '_hold' (ID: 160928)
  Prédit: '_hold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_hold' → logprob: -0.002341992687433958
    2. '(cost' → logprob: -7.252342224121094
    3. '(' → logprob: -7.502342224121094
    4. '(order' → logprob: -8.127342224121094
    5. 'hold' → logprob: -8.377342224121094
    6. '(max' → logprob: -9.002342224121094
    7. '_cost' → logprob: -9.502342224121094
    8. '(k' → logprob: -9.627342224121094
    9. '([' → logprob: -10.502342224121094
    10. '(store' → logprob: -10.627342224121094

Token 813: ' ==' (ID: 951)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09507051110267639
    2. ']' → logprob: -3.8450706005096436
    3. ' >' → logprob: -3.8450706005096436
    4. ' <' → logprob: -4.0950703620910645
    5. ' ,' → logprob: -4.4700703620910645
    6. ' for' → logprob: -4.7200703620910645
    7. ' ==' → logprob: -6.0950703620910645
    8. ',
' → logprob: -7.0950703620910645
    9. ' >=' → logprob: -7.0950703620910645
    10. ' <=' → logprob: -7.4700703620910645

Token 814: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2056327611207962
    2. 'cost' → logprob: -1.9556328058242798
    3. 'max' → logprob: -3.9556326866149902
    4. 'store' → logprob: -4.70563268661499
    5. 'driver' → logprob: -5.20563268661499
    6. 'final' → logprob: -5.33063268661499
    7. 'inf' → logprob: -6.83063268661499
    8. 'float' → logprob: -6.95563268661499
    9. ' ' → logprob: -6.95563268661499
    10. '1' → logprob: -7.45563268661499

Token 815: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46038344502449036
    2. 'cost' → logprob: -1.085383415222168
    3. 'max' → logprob: -4.710383415222168
    4. 'driver' → logprob: -4.710383415222168
    5. 'store' → logprob: -5.585383415222168
    6. 'final' → logprob: -5.835383415222168
    7. 'st' → logprob: -5.960383415222168
    8. ' ' → logprob: -6.835383415222168
    9. 'inf' → logprob: -7.710383415222168
    10. '(' → logprob: -7.960383415222168

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13533703982830048
    2. '])' → logprob: -2.5103371143341064
    3. ']' → logprob: -4.010336875915527
    4. ',
' → logprob: -5.010336875915527
    5. ' ,' → logprob: -5.135336875915527
    6. ']+' → logprob: -5.760336875915527
    7. ']):' → logprob: -6.260336875915527
    8. '],' → logprob: -6.635336875915527
    9. ' or' → logprob: -6.760336875915527
    10. ' for' → logprob: -6.885336875915527

Token 817: ' True' (ID: 6432)
  Prédit: 'driver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'driver' → logprob: -1.5495593547821045
    2. 'max' → logprob: -1.9245593547821045
    3. 'store' → logprob: -1.9245593547821045
    4. 'current' → logprob: -2.1745593547821045
    5. 'True' → logprob: -2.2995593547821045
    6. 'False' → logprob: -3.1745593547821045
    7. ' max' → logprob: -3.2995593547821045
    8. 'final' → logprob: -3.5495593547821045
    9. 'heading' → logprob: -3.6745593547821045
    10. ' driver' → logprob: -3.6745593547821045

Token 818: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.47459733486175537
    2. ']):' → logprob: -1.8495973348617554
    3. '])' → logprob: -2.099597454071045
    4. ']):
' → logprob: -2.474597454071045
    5. '                       ' → logprob: -5.724597454071045
    6. ']' → logprob: -6.099597454071045
    7. ',
' → logprob: -6.474597454071045
    8. '                      ' → logprob: -6.474597454071045
    9. ' ,' → logprob: -7.349597454071045
    10. '                   ' → logprob: -7.599597454071045

Token 819: ' all' (ID: 722)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.46378180384635925
    2. 'True' → logprob: -1.8387818336486816
    3. 'max' → logprob: -2.3387818336486816
    4. 'store' → logprob: -3.5887818336486816
    5. 'driver' → logprob: -4.213781833648682
    6. 'cost' → logprob: -4.213781833648682
    7. 'current' → logprob: -4.338781833648682
    8. ' False' → logprob: -4.838781833648682
    9. 'final' → logprob: -4.838781833648682
    10. 'order' → logprob: -4.838781833648682

Token 820: '(True' (ID: 55978)
  Prédit: '(cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cost' → logprob: -0.14282852411270142
    2. '(order' → logprob: -3.2678284645080566
    3. '([' → logprob: -3.5178284645080566
    4. '(map' → logprob: -4.142828464508057
    5. '((' → logprob: -4.142828464508057
    6. '(' → logprob: -4.392828464508057
    7. '(st' → logprob: -5.267828464508057
    8. '(lambda' → logprob: -5.267828464508057
    9. '(ord' → logprob: -6.017828464508057
    10. '(c' → logprob: -6.267828464508057

Token 821: ' for' (ID: 395)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -1.1734607219696045
    2. ' for' → logprob: -1.5484607219696045
    3. ')]' → logprob: -1.5484607219696045
    4. '])' → logprob: -2.0484607219696045
    5. ',' → logprob: -3.1734607219696045
    6. 'for' → logprob: -3.7984607219696045
    7. ')' → logprob: -3.9234607219696045
    8. '])]' → logprob: -4.673460960388184
    9. '()' → logprob: -4.798460960388184
    10. '                       ' → logprob: -5.048460960388184

Token 822: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.028875676915049553
    2. 'k' → logprob: -4.403875827789307
    3. ' _' → logprob: -4.653875827789307
    4. '_k' → logprob: -6.028875827789307
    5. ' k' → logprob: -7.028875827789307
    6. '__' → logprob: -7.153875827789307
    7. 'x' → logprob: -7.403875827789307
    8. '_=' → logprob: -8.403875350952148
    9. 'c' → logprob: -8.778875350952148
    10. '___' → logprob: -8.778875350952148

Token 823: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5262680053710938
    2. ' in' → logprob: -0.9012680053710938
    3. '_' → logprob: -6.151268005371094
    4. ' ' → logprob: -7.651268005371094
    5. '  ' → logprob: -9.526268005371094
    6. ' _' → logprob: -9.901268005371094
    7. 'k' → logprob: -10.026268005371094
    8. 'x' → logprob: -10.151268005371094
    9. '
' → logprob: -10.526268005371094
    10. '   ' → logprob: -10.776268005371094

Token 824: ' range' (ID: 3352)
  Prédit: 'order'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'order' → logprob: -0.7149195671081543
    2. '_' → logprob: -1.2149195671081543
    3. 'range' → logprob: -1.8399195671081543
    4. 'cost' → logprob: -4.339919567108154
    5. 'chain' → logprob: -4.589919567108154
    6. '()' → logprob: -5.089919567108154
    7. '[' → logprob: -5.214919567108154
    8. 'command' → logprob: -5.839919567108154
    9. ' order' → logprob: -5.964919567108154
    10. ' range' → logprob: -6.089919567108154

Token 825: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.49334269762039185
    2. '(len' → logprob: -1.618342638015747
    3. '(order' → logprob: -1.993342638015747
    4. '(max' → logprob: -4.368342876434326
    5. 'order' → logprob: -4.743342876434326
    6. '(cost' → logprob: -4.743342876434326
    7. 'len' → logprob: -5.118342876434326
    8. '1' → logprob: -5.743342876434326
    9. '(store' → logprob: -5.993342876434326
    10. '(current' → logprob: -6.118342876434326

Token 826: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6125085353851318
    2. '0' → logprob: -2.362508535385132
    3. 'cost' → logprob: -2.612508535385132
    4. 'order' → logprob: -2.737508535385132
    5. 'len' → logprob: -2.862508535385132
    6. '2' → logprob: -3.362508535385132
    7. '3' → logprob: -3.362508535385132
    8. '(' → logprob: -3.737508535385132
    9. 'max' → logprob: -3.737508535385132
    10. '10' → logprob: -4.237508773803711

Token 827: '))' (ID: 915)
  Prédit: ')])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.9422081708908081
    2. ')]' → logprob: -1.192208170890808
    3. '(' → logprob: -1.442208170890808
    4. ')' → logprob: -4.192208290100098
    5. ' )' → logprob: -4.317208290100098
    6. ',' → logprob: -4.567208290100098
    7. '))' → logprob: -5.067208290100098
    8. '())' → logprob: -5.567208290100098
    9. ')],' → logprob: -5.567208290100098
    10. '1' → logprob: -5.817208290100098

Token 828: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.7719389796257019
    2. ']):
' → logprob: -0.8969389796257019
    3. '                       ' → logprob: -3.2719390392303467
    4. '])' → logprob: -3.3969390392303467
    5. ',' → logprob: -3.6469390392303467
    6. '                      ' → logprob: -4.146938800811768
    7. ')]' → logprob: -5.896938800811768
    8. '])):
' → logprob: -6.146938800811768
    9. '                   ' → logprob: -6.396938800811768
    10. '                          ' → logprob: -6.396938800811768

Token 829: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14938633143901825
    2. ':
' → logprob: -2.149386405944824
    3. '                   ' → logprob: -4.649386405944824
    4. ':' → logprob: -5.149386405944824
    5. '):
' → logprob: -5.899386405944824
    6. '                      ' → logprob: -6.524386405944824
    7. '                           ' → logprob: -6.899386405944824
    8. ' :
' → logprob: -8.399386405944824
    9. '
' → logprob: -8.649386405944824
    10. '                        
' → logprob: -8.774386405944824

Token 830: ' final' (ID: 1721)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.24579499661922455
    2. 'heading' → logprob: -1.8707950115203857
    3. 'final' (adapté à ' final') → logprob: -3.3707950115203857
    4. '                           ' → logprob: -4.245794773101807
    5. 'dist' → logprob: -5.495794773101807
    6. ' heading' → logprob: -5.745794773101807
    7. 'command' → logprob: -5.745794773101807
    8. '                   ' → logprob: -6.245794773101807
    9. '                      ' → logprob: -7.495794773101807
    10. ' final' → logprob: -8.120795249938965

Token 831: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -4.096126576769166e-05
    2. 'dist' → logprob: -11.000041007995605
    3. 'Dist' → logprob: -11.000041007995605
    4. '_cost' → logprob: -12.875041007995605
    5. '=' → logprob: -13.750041007995605
    6. ' Dist' → logprob: -13.875041007995605
    7. '_distance' → logprob: -14.500041007995605
    8. '_DIST' → logprob: -14.625041007995605
    9. '_dest' → logprob: -14.750041007995605
    10. '	dist' → logprob: -15.500041007995605

Token 832: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8787477016448975
    2. '=' → logprob: -1.0037477016448975
    3. ' +=' → logprob: -2.0037477016448975
    4. '+=' → logprob: -2.7537477016448975
    5. ',' → logprob: -4.003747940063477
    6. ' ,' → logprob: -7.378747940063477
    7. ' -=' → logprob: -7.628747940063477
    8. ' ' → logprob: -8.878747940063477
    9. '   ' → logprob: -9.878747940063477
    10. '-=' → logprob: -9.878747940063477

Token 833: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2622281312942505
    2. 'max' → logprob: -2.137228012084961
    3. '-' → logprob: -3.387228012084961
    4. 'extr' → logprob: -3.762228012084961
    5. 'current' → logprob: -4.012228012084961
    6. 'heading' → logprob: -4.387228012084961
    7. 'next' → logprob: -5.012228012084961
    8. 'ω' → logprob: -5.137228012084961
    9. ' ' → logprob: -6.387228012084961
    10. 'min' → logprob: -6.387228012084961

Token 834: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12962114810943604
    2. 'max' → logprob: -2.7546210289001465
    3. '-' → logprob: -3.5046210289001465
    4. 'heading' → logprob: -4.6296210289001465
    5. 'ω' → logprob: -5.8796210289001465
    6. 'next' → logprob: -5.8796210289001465
    7. '1' → logprob: -6.0046210289001465
    8. 'store' → logprob: -6.6296210289001465
    9. 'extr' → logprob: -6.6296210289001465
    10. 'final' → logprob: -6.7546210289001465

Token 835: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4009949564933777
    2. '               ' → logprob: -1.9009950160980225
    3. '                   ' → logprob: -2.0259950160980225
    4. '<|end|>' → logprob: -3.9009950160980225
    5. '           ' → logprob: -4.775994777679443
    6. '                        
' → logprob: -5.150994777679443
    7. '                       ' → logprob: -5.775994777679443
    8. '                    
' → logprob: -6.025994777679443
    9. 'final' → logprob: -6.525994777679443
    10. '                
' → logprob: -6.775994777679443

Token 836: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9550338983535767
    2. '
' → logprob: -1.5800338983535767
    3. '                   ' → logprob: -1.7050338983535767
    4. '<|end|>' → logprob: -1.8300338983535767
    5. ')' → logprob: -4.455033779144287
    6. '           ' → logprob: -4.455033779144287
    7. '                       ' → logprob: -4.580033779144287
    8. '                        
' → logprob: -4.955033779144287
    9. ' 
' → logprob: -5.830033779144287
    10. '                    
' → logprob: -6.330033779144287

Token 837: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8570810556411743
    2. '           ' → logprob: -1.2320810556411743
    3. '                   ' → logprob: -2.8570809364318848
    4. 'final' → logprob: -2.9820809364318848
    5. '                       ' → logprob: -3.2320809364318848
    6. 'current' → logprob: -4.357080936431885
    7. '<|end|>' → logprob: -4.357080936431885
    8. '                        
' → logprob: -4.357080936431885
    9. 'elif' → logprob: -4.732080936431885
    10. ' final' → logprob: -4.732080936431885

Token 838: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03393692895770073
    2. '           ' → logprob: -3.7839369773864746
    3. ':
' → logprob: -4.908936977386475
    4. ':' → logprob: -6.033936977386475
    5. '                   ' → logprob: -7.908936977386475
    6. '       ' → logprob: -8.408936500549316
    7. '   ' → logprob: -9.283936500549316
    8. '                       ' → logprob: -9.408936500549316
    9. '	           ' → logprob: -10.908936500549316
    10. '              ' → logprob: -11.283936500549316

Token 839: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17018884420394897
    2. 'command' → logprob: -2.2951889038085938
    3. '           ' → logprob: -3.5451889038085938
    4. 'final' → logprob: -4.045188903808594
    5. '       ' → logprob: -4.920188903808594
    6. 'heading' → logprob: -7.170188903808594
    7. '   ' → logprob: -7.545188903808594
    8. '                   ' → logprob: -8.295188903808594
    9. ' command' → logprob: -8.420188903808594
    10. 'if' → logprob: -9.670188903808594

Token 840: ' final' (ID: 1721)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.13874274492263794
    2. 'final' (adapté à ' final') → logprob: -2.763742685317993
    3. 'heading' → logprob: -2.888742685317993
    4. '               ' → logprob: -5.513742923736572
    5. '           ' → logprob: -5.763742923736572
    6. '   ' → logprob: -6.888742923736572
    7. ' command' → logprob: -7.888742923736572
    8. '                   ' → logprob: -8.013742446899414
    9. 'order' → logprob: -8.138742446899414
    10. 'pass' → logprob: -8.263742446899414

Token 841: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.00029387109680101275
    2. 'dist' → logprob: -8.375293731689453
    3. 'Dist' → logprob: -10.500293731689453
    4. '           ' → logprob: -11.500293731689453
    5. '       ' → logprob: -12.375293731689453
    6. '=' → logprob: -12.625293731689453
    7. '   ' → logprob: -12.875293731689453
    8. ' =' → logprob: -13.000293731689453
    9. '	dist' → logprob: -13.000293731689453
    10. '_d' → logprob: -13.000293731689453

Token 842: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01162831299006939
    2. ' =' → logprob: -4.511628150939941
    3. ',' → logprob: -7.636628150939941
    4. '+=' → logprob: -9.386628150939941
    5. ' +=' → logprob: -11.261628150939941
    6. ' ,' → logprob: -14.511628150939941
    7. ' ' → logprob: -15.761628150939941
    8. '	' → logprob: -16.136629104614258
    9. ')' → logprob: -16.761629104614258
    10. '   ' → logprob: -17.136629104614258

Token 843: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1063118651509285
    2. '-' → logprob: -2.356311798095703
    3. 'heading' → logprob: -5.356311798095703
    4. 'final' → logprob: -7.231311798095703
    5. ' ' → logprob: -8.856311798095703
    6. 'st' → logprob: -9.606311798095703
    7. ' -' → logprob: -10.481311798095703
    8. 'None' → logprob: -10.481311798095703
    9. 'head' → logprob: -10.481311798095703
    10. 'command' → logprob: -10.606311798095703

Token 844: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09212760627269745
    2. '-' → logprob: -2.467127561569214
    3. 'heading' → logprob: -6.217127799987793
    4. 'final' → logprob: -7.467127799987793
    5. ' ' → logprob: -8.592127799987793
    6. ' -' → logprob: -9.967127799987793
    7. 'None' → logprob: -10.217127799987793
    8. 'int' → logprob: -10.217127799987793
    9. 'max' → logprob: -10.467127799987793
    10. 'store' → logprob: -10.842127799987793

Token 845: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08518700301647186
    2. '           ' → logprob: -3.4601869583129883
    3. 'if' → logprob: -4.460186958312988
    4. 'heading' → logprob: -4.460186958312988
    5. '	' → logprob: -5.710186958312988
    6. '   ' → logprob: -5.960186958312988
    7. '<|end|>' → logprob: -5.960186958312988
    8. ' if' → logprob: -5.960186958312988
    9. 'final' → logprob: -6.085186958312988
    10. '        
' → logprob: -6.085186958312988

Token 846: '           ' (ID: 352)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.9391168355941772
    2. '       ' → logprob: -1.0641168355941772
    3. '           ' → logprob: -2.439116954803467
    4. 'if' → logprob: -2.814116954803467
    5. 'dist' → logprob: -2.814116954803467
    6. ' if' → logprob: -4.314116954803467
    7. 'command' → logprob: -4.564116954803467
    8. '   ' → logprob: -4.814116954803467
    9. ' heading' → logprob: -5.439116954803467
    10. 'final' → logprob: -5.439116954803467

Token 847: ' heading' (ID: 23808)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.14936096966266632
    2. 'if' → logprob: -2.5243608951568604
    3. '           ' → logprob: -3.5243608951568604
    4. 'heading' (adapté à ' heading') → logprob: -3.6493608951568604
    5. 'for' → logprob: -6.8993611335754395
    6. 'command' → logprob: -7.2743611335754395
    7. 'final' → logprob: -7.7743611335754395
    8. '       ' → logprob: -8.899360656738281
    9. '               ' → logprob: -9.274360656738281
    10. 'distance' → logprob: -9.274360656738281

Token 848: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6657651662826538
    2. ' =' → logprob: -1.0407651662826538
    3. '+=' → logprob: -2.6657652854919434
    4. ' +=' → logprob: -3.0407652854919434
    5. ',' → logprob: -4.165765285491943
    6. ' ,' → logprob: -10.165764808654785
    7. ' ' → logprob: -11.415764808654785
    8. ' <<=' → logprob: -12.665764808654785
    9. '=int' → logprob: -13.415764808654785
    10. '+' → logprob: -13.540764808654785

Token 849: ' next' (ID: 2613)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.021299080923199654
    2. 'extr' → logprob: -4.646298885345459
    3. 'ω' → logprob: -5.646298885345459
    4. 'current' → logprob: -6.021298885345459
    5. '(' → logprob: -6.396298885345459
    6. '0' → logprob: -6.771298885345459
    7. '(final' → logprob: -7.021298885345459
    8. 'next' → logprob: -7.021298885345459
    9. ' final' → logprob: -8.146299362182617
    10. ' extravagant' → logprob: -8.646299362182617

Token 850: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -7.219262624857947e-05
    2. '[' → logprob: -10.500072479248047
    3. 'final' → logprob: -11.000072479248047
    4. '[next' → logprob: -11.250072479248047
    5. 'id' → logprob: -12.500072479248047
    6. '```' → logprob: -12.750072479248047
    7. 'next' → logprob: -12.875072479248047
    8. '_' → logprob: -14.000072479248047
    9. 's' → logprob: -15.125072479248047
    10. '[current' → logprob: -15.250072479248047

Token 851: '[current' (ID: 49470)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. '[current' → logprob: -11.875009536743164
    3. 'heading' → logprob: -13.125009536743164
    4. '[int' → logprob: -14.750009536743164
    5. '```' → logprob: -15.625009536743164
    6. '[
' → logprob: -16.375009536743164
    7. ' [' → logprob: -17.375009536743164
    8. '[line' → logprob: -17.500009536743164
    9. '[in' → logprob: -17.625009536743164
    10. '\[' → logprob: -18.000009536743164

Token 852: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.0004534334584604949
    2. 'id' → logprob: -8.375452995300293
    3. '[' → logprob: -8.875452995300293
    4. 'heading' → logprob: -9.625452995300293
    5. 'Id' → logprob: -12.625452995300293
    6. '_heading' → logprob: -12.625452995300293
    7. '```' → logprob: -13.125452995300293
    8. '][' → logprob: -13.625452995300293
    9. '[id' → logprob: -14.125452995300293
    10. '_' → logprob: -14.250452995300293

Token 853: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.38706234097480774
    2. '[' → logprob: -1.1370623111724854
    3. 'final' → logprob: -9.887062072753906
    4. ')[' → logprob: -10.012062072753906
    5. ']' → logprob: -10.762062072753906
    6. '```' → logprob: -11.512062072753906
    7. '}[' → logprob: -11.637062072753906
    8. '[f' → logprob: -12.012062072753906
    9. '[first' → logprob: -12.012062072753906
    10. '[line' → logprob: -12.637062072753906

Token 854: 'final' (ID: 17196)
  Prédit: 'final'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -1.5048530030981055e-06
    2. ' final' → logprob: -13.500001907348633
    3. '(final' → logprob: -19.000001907348633
    4. '	final' → logprob: -22.250001907348633
    5. '.final' → logprob: -25.125001907348633
    6. '_final' → logprob: -25.250001907348633
    7. '   ' → logprob: -25.500001907348633
    8. 'Final' → logprob: -25.875001907348633
    9. 'current' → logprob: -26.250001907348633
    10. '  ' → logprob: -26.625001907348633

Token 855: '_dist' (ID: 37968)
  Prédit: '_dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dist' → logprob: -0.009836251847445965
    2. 'ist' → logprob: -4.634836196899414
    3. 'dist' → logprob: -10.134836196899414
    4. 't' → logprob: -11.134836196899414
    5. 'st' → logprob: -11.634836196899414
    6. '_id' → logprob: -11.884836196899414
    7. '_dest' → logprob: -12.634836196899414
    8. '_' → logprob: -12.759836196899414
    9. 's' → logprob: -13.759836196899414
    10. '_st' → logprob: -14.634836196899414

Token 856: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000624514592345804
    2. ')' → logprob: -8.000624656677246
    3. ']
' → logprob: -9.250624656677246
    4. '])' → logprob: -9.500624656677246
    5. ')]' → logprob: -10.375624656677246
    6. ' ]' → logprob: -10.625624656677246
    7. '<|end|>' → logprob: -10.750624656677246
    8. ']()' → logprob: -11.250624656677246
    9. '           ' → logprob: -12.125624656677246
    10. '   ' → logprob: -12.125624656677246

Token 857: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5708016753196716
    2. '   ' → logprob: -2.3208017349243164
    3. '<|end|>' → logprob: -2.3208017349243164
    4. '\n' → logprob: -2.9458017349243164
    5. '           ' → logprob: -3.6958017349243164
    6. '	' → logprob: -3.8208017349243164
    7. '```' → logprob: -3.8208017349243164
    8. '\t' → logprob: -4.070801734924316
    9. '        
' → logprob: -4.320801734924316
    10. ' 
' → logprob: -4.445801734924316

Token 858: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.010514771565794945
    2. '           ' → logprob: -4.635514736175537
    3. '       ' → logprob: -7.260514736175537
    4. 'if' → logprob: -10.760515213012695
    5. '   ' → logprob: -11.510515213012695
    6. '	dist' → logprob: -11.510515213012695
    7. ' dist' → logprob: -11.635515213012695
    8. '               ' → logprob: -13.385515213012695
    9. 'distance' → logprob: -13.635515213012695
    10. '```' → logprob: -14.260515213012695

Token 859: ' Wrap' (ID: 60850)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00010437761375214905
    2. ' dist' → logprob: -10.125103950500488
    3. '           ' → logprob: -10.875103950500488
    4. '       ' → logprob: -11.000103950500488
    5. '   ' → logprob: -11.125103950500488
    6. 'final' → logprob: -12.500103950500488
    7. 'if' → logprob: -12.625103950500488
    8. '```' → logprob: -13.500103950500488
    9. 'store' → logprob: -13.750103950500488
    10. 'print' → logprob: -13.875103950500488

Token 860: ' subtraction' (ID: 131994)
  Prédit: 'around'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'around' → logprob: -0.008535854518413544
    2. 'heading' → logprob: -5.133535861968994
    3. '           ' → logprob: -7.383535861968994
    4. 'if' → logprob: -7.633535861968994
    5. '-around' → logprob: -7.633535861968994
    6. '_heading' → logprob: -8.633535385131836
    7. '   ' → logprob: -8.758535385131836
    8. ' around' → logprob: -8.883535385131836
    9. '#' → logprob: -9.133535385131836
    10. 'return' → logprob: -9.383535385131836

Token 861: ' in' (ID: 306)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.23375576734542847
    2. ' dist' → logprob: -2.2337558269500732
    3. '           ' → logprob: -3.4837558269500732
    4. '(dist' → logprob: -3.6087558269500732
    5. ' if' → logprob: -4.108755588531494
    6. 'if' → logprob: -4.233755588531494
    7. '(' → logprob: -5.483755588531494
    8. 'distance' → logprob: -5.608755588531494
    9. '(
' → logprob: -6.233755588531494
    10. '   ' → logprob: -7.733755588531494

Token 862: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3631565570831299
    2. 'max' → logprob: -2.23815655708313
    3. 'abs' → logprob: -2.86315655708313
    4. '(max' → logprob: -2.98815655708313
    5. '(abs' → logprob: -3.36315655708313
    6. '()' → logprob: -3.98815655708313
    7. '(lambda' → logprob: -4.988156318664551
    8. '((' → logprob: -5.488156318664551
    9. '(dist' → logprob: -5.988156318664551
    10. '(-' → logprob: -6.238156318664551

Token 863: ' silly' (ID: 49285)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5292304158210754
    2. 'abs' → logprob: -1.4042303562164307
    3. 'try' → logprob: -3.0292303562164307
    4. 'wf' → logprob: -3.1542303562164307
    5. 'dist' → logprob: -4.02923059463501
    6. 'lambda' → logprob: -4.15423059463501
    7. 'chain' → logprob: -4.40423059463501
    8. '(' → logprob: -5.52923059463501
    9. 'distance' → logprob: -5.77923059463501
    10. 'cost' → logprob: -5.77923059463501

Token 864: ' map' (ID: 4014)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.71221923828125
    2. 'abs' → logprob: -1.21221923828125
    3. 'lambda' → logprob: -2.58721923828125
    4. 'max' → logprob: -3.08721923828125
    5. '(lambda' → logprob: -3.21221923828125
    6. '(' → logprob: -3.96221923828125
    7. '(abs' → logprob: -4.46221923828125
    8. 'while' → logprob: -5.83721923828125
    9. 'distance' → logprob: -5.96221923828125
    10. 'int' → logprob: -6.08721923828125

Token 865: ' to' (ID: 316)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.03646928817033768
    2. 'list' → logprob: -3.4114692211151123
    3. '_' → logprob: -7.286469459533691
    4. '           ' → logprob: -7.411469459533691
    5. '   ' → logprob: -7.536469459533691
    6. '```' → logprob: -8.786469459533691
    7. ' dist' → logprob: -8.911469459533691
    8. '       ' → logprob: -9.161469459533691
    9. '(dist' → logprob: -9.286469459533691
    10. 'map' → logprob: -9.411469459533691

Token 866: ' ob' (ID: 1067)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.14512814581394196
    2. 'lambda' → logprob: -2.5201282501220703
    3. 'dist' → logprob: -3.3951282501220703
    4. 'command' → logprob: -4.14512825012207
    5. 'next' → logprob: -5.64512825012207
    6. 'int' → logprob: -7.14512825012207
    7. '(lambda' → logprob: -8.39512825012207
    8. 'current' → logprob: -8.52012825012207
    9. 'order' → logprob: -9.52012825012207
    10. 'str' → logprob: -9.52012825012207

Token 867: 'fusc' (ID: 96715)
  Prédit: 'fusc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fusc' → logprob: -0.3351110517978668
    2. 'f' → logprob: -1.8351110219955444
    3. 'sc' → logprob: -2.835111141204834
    4. 'b' → logprob: -3.335111141204834
    5. 'r' → logprob: -4.585111141204834
    6. 'serve' → logprob: -5.585111141204834
    7. 'uf' → logprob: -5.835111141204834
    8. 'range' → logprob: -6.335111141204834
    9. 'fuscated' → logprob: -6.460111141204834
    10. 'ject' → logprob: -6.710111141204834

Token 868: 'ate' (ID: 379)
  Prédit: 'ping'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ping' → logprob: -0.03433762863278389
    2. 'ped' → logprob: -4.284337520599365
    3. 'ulate' → logprob: -4.784337520599365
    4. 'map' → logprob: -5.659337520599365
    5. '(lambda' → logprob: -6.409337520599365
    6. 'p' → logprob: -6.784337520599365
    7. 'per' → logprob: -7.159337520599365
    8. '           ' → logprob: -7.659337520599365
    9. 'lambda' → logprob: -7.659337520599365
    10. 'filter' → logprob: -8.034337997436523

Token 869: ' intent' (ID: 9841)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.839543342590332
    2. 'list' → logprob: -1.464543342590332
    3. '           ' → logprob: -2.089543342590332
    4. 'dist' → logprob: -2.464543342590332
    5. 't' → logprob: -3.214543342590332
    6. '[t' → logprob: -4.339543342590332
    7. '       ' → logprob: -4.464543342590332
    8. '\t' → logprob: -4.589543342590332
    9. 'next' → logprob: -4.714543342590332
    10. 'map' → logprob: -4.714543342590332

Token 870: '
' (ID: 198)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.48517000675201416
    2. '           ' → logprob: -1.9851700067520142
    3. 'dist' → logprob: -2.1101698875427246
    4. 'command' → logprob: -2.8601698875427246
    5. 't' → logprob: -3.3601698875427246
    6. 'map' → logprob: -4.610169887542725
    7. '       ' → logprob: -5.235169887542725
    8. '_' → logprob: -5.735169887542725
    9. '```' → logprob: -5.735169887542725
    10. '   ' → logprob: -6.235169887542725

Token 871: '           ' (ID: 352)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -0.2659881114959717
    2. 'list' → logprob: -2.0159881114959717
    3. 't' → logprob: -3.2659881114959717
    4. '```' → logprob: -3.8909881114959717
    5. '           ' → logprob: -4.515988349914551
    6. '       ' → logprob: -5.390988349914551
    7. '[t' → logprob: -5.640988349914551
    8. 'for' → logprob: -5.640988349914551
    9. ' command' → logprob: -5.765988349914551
    10. '\t' → logprob: -6.015988349914551

Token 872: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00807122327387333
    2. 'list' → logprob: -5.633071422576904
    3. '_' → logprob: -5.758071422576904
    4. ' dist' → logprob: -7.133071422576904
    5. '_,' → logprob: -8.633070945739746
    6. '_dist' → logprob: -9.633070945739746
    7. 'map' → logprob: -9.633070945739746
    8. '(dist' → logprob: -9.758070945739746
    9. '   ' → logprob: -10.633070945739746
    10. 'for' → logprob: -11.008070945739746

Token 873: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -7.266944157890975e-05
    2. ' =' → logprob: -10.625072479248047
    3. '_' → logprob: -10.750072479248047
    4. '=' → logprob: -11.625072479248047
    5. '   ' → logprob: -12.750072479248047
    6. '[' → logprob: -13.500072479248047
    7. 'Left' → logprob: -13.625072479248047
    8. '[_' → logprob: -13.750072479248047
    9. '```' → logprob: -13.875072479248047
    10. '_LEFT' → logprob: -14.125072479248047

Token 874: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01054096408188343
    2. ' =' → logprob: -4.760540962219238
    3. ',' → logprob: -6.260540962219238
    4. ',t' → logprob: -12.385540962219238
    5. ' ,' → logprob: -12.760540962219238
    6. '=list' → logprob: -13.135540962219238
    7. '=t' → logprob: -13.760540962219238
    8. '+=' → logprob: -14.010540962219238
    9. '[' → logprob: -14.260540962219238
    10. '=
' → logprob: -15.260540962219238

Token 875: ' list' (ID: 1562)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.6389915347099304
    2. 'list' → logprob: -0.7639915347099304
    3. 'sum' → logprob: -5.888991355895996
    4. ' next' → logprob: -6.013991355895996
    5. ' list' → logprob: -7.888991355895996
    6. '(next' → logprob: -8.388991355895996
    7. 'map' → logprob: -8.638991355895996
    8. 'dict' → logprob: -9.263991355895996
    9. 'int' → logprob: -9.388991355895996
    10. 'tuple' → logprob: -9.513991355895996

Token 876: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.03521392197581e-05
    2. '(' → logprob: -10.750030517578125
    3. 'map' → logprob: -11.750030517578125
    4. '(
' → logprob: -14.125030517578125
    5. '(re' → logprob: -16.750030517578125
    6. '	map' → logprob: -17.500030517578125
    7. '(filter' → logprob: -17.750030517578125
    8. ',map' → logprob: -17.750030517578125
    9. '(zip' → logprob: -18.750030517578125
    10. '((' → logprob: -18.875030517578125

Token 877: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.00199477793648839
    2. '(int' → logprob: -6.501994609832764
    3. 'lambda' → logprob: -8.001995086669922
    4. '(abs' → logprob: -9.376995086669922
    5. '(' → logprob: -10.251995086669922
    6. '(operator' → logprob: -10.751995086669922
    7. '((' → logprob: -12.126995086669922
    8. 'int' → logprob: -12.501995086669922
    9. 'abs' → logprob: -12.626995086669922
    10. '   ' → logprob: -13.876995086669922

Token 878: ' a' (ID: 261)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.05293065682053566
    2. 'lambda' → logprob: -3.3029305934906006
    3. '(int' → logprob: -4.30293083190918
    4. 'int' → logprob: -6.80293083190918
    5. '(operator' → logprob: -9.67793083190918
    6. 'operator' → logprob: -10.55293083190918
    7. '(' → logprob: -11.30293083190918
    8. 'abs' → logprob: -11.42793083190918
    9. '(abs' → logprob: -11.80293083190918
    10. 'sub' → logprob: -12.30293083190918

Token 879: ',' (ID: 11)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.03260905668139458
    2. '(lambda' → logprob: -3.657608985900879
    3. ' lambda' → logprob: -6.032608985900879
    4. 'int' → logprob: -6.282608985900879
    5. ':' → logprob: -7.407608985900879
    6. 'operator' → logprob: -7.657608985900879
    7. 'a' → logprob: -8.782608985900879
    8. '-' → logprob: -8.907608985900879
    9. '   ' → logprob: -9.532608985900879
    10. '=lambda' → logprob: -9.532608985900879

Token 880: ' b' (ID: 287)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.20352789759635925
    2. 'b' → logprob: -1.7035279273986816
    3. '(lambda' → logprob: -6.703527927398682
    4. 'int' → logprob: -7.703527927398682
    5. ' lambda' → logprob: -8.953527450561523
    6. '=lambda' → logprob: -8.953527450561523
    7. 'operator' → logprob: -9.328527450561523
    8. 'λ' → logprob: -10.578527450561523
    9. 'cost' → logprob: -11.578527450561523
    10. 'max' → logprob: -11.703527450561523

Token 881: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2736550569534302
    2. 'lambda' → logprob: -2.3986549377441406
    3. '(lambda' → logprob: -3.3986549377441406
    4. '=lambda' → logprob: -3.3986549377441406
    5. ',int' → logprob: -3.8986549377441406
    6. 'a' → logprob: -4.148654937744141
    7. ':' → logprob: -4.648654937744141
    8. 'sub' → logprob: -5.148654937744141
    9. '```' → logprob: -5.273654937744141
    10. 'int' → logprob: -5.398654937744141

Token 882: ' a' (ID: 261)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.6587018370628357
    2. 'a' → logprob: -1.2837018966674805
    3. 'int' → logprob: -1.9087018966674805
    4. 'abs' → logprob: -3.1587018966674805
    5. '(lambda' → logprob: -5.0337018966674805
    6. '(int' → logprob: -6.2837018966674805
    7. 'max' → logprob: -6.4087018966674805
    8. 'operator' → logprob: -6.9087018966674805
    9. '=lambda' → logprob: -7.2837018966674805
    10. ' lambda' → logprob: -7.5337018966674805

Token 883: '-b' (ID: 2118)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.8748306035995483
    2. '-' → logprob: -0.9998306035995483
    3. 'a' → logprob: -2.624830722808838
    4. '-b' → logprob: -2.624830722808838
    5. 'lambda' → logprob: -3.749830722808838
    6. ':' → logprob: -4.124830722808838
    7. ',' → logprob: -4.499830722808838
    8. 'abs' → logprob: -5.374830722808838
    9. 'int' → logprob: -5.749830722808838
    10. ',b' → logprob: -5.874830722808838

Token 884: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.591572642326355
    2. ',w' → logprob: -0.841572642326355
    3. ',(' → logprob: -5.0915727615356445
    4. ',[' → logprob: -5.2165727615356445
    5. '(w' → logprob: -6.3415727615356445
    6. ' ,' → logprob: -7.9665727615356445
    7. '[' → logprob: -8.091572761535645
    8. '   ' → logprob: -8.591572761535645
    9. ',
' → logprob: -9.216572761535645
    10. '(' → logprob: -9.216572761535645

Token 885: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18877439200878143
    2. 'repeat' → logprob: -2.688774347305298
    3. '[w' → logprob: -3.188774347305298
    4. '(re' → logprob: -3.563774347305298
    5. '[next' → logprob: -5.188774585723877
    6. '(chain' → logprob: -5.313774585723877
    7. '[it' → logprob: -5.813774585723877
    8. '(edge' → logprob: -6.188774585723877
    9. 'edge' → logprob: -6.188774585723877
    10. '(' → logprob: -6.188774585723877

Token 886: 'edge' (ID: 13457)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.071022629737854
    2. '[w' → logprob: -2.8210225105285645
    3. '[next' → logprob: -4.8210225105285645
    4. '[event' → logprob: -8.821022987365723
    5. '[df' → logprob: -9.071022987365723
    6. '[current' → logprob: -9.446022987365723
    7. '[node' → logprob: -9.696022987365723
    8. '[count' → logprob: -9.696022987365723
    9. '[word' → logprob: -9.946022987365723
    10. '[it' → logprob: -10.446022987365723

Token 887: '[current' (ID: 49470)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.42948195338249207
    2. '[current' → logprob: -1.0544819831848145
    3. '[i' → logprob: -8.054481506347656
    4. 'current' → logprob: -8.679481506347656
    5. '][' → logprob: -9.054481506347656
    6. 'heading' → logprob: -9.804481506347656
    7. '[curr' → logprob: -11.304481506347656
    8. ' [' → logprob: -11.429481506347656
    9. '[row' → logprob: -11.554481506347656
    10. ')[' → logprob: -11.929481506347656

Token 888: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.47445738315582275
    2. 'heading' → logprob: -1.2244573831558228
    3. '[' → logprob: -2.974457263946533
    4. 'id' → logprob: -3.974457263946533
    5. '_heading' → logprob: -4.849457263946533
    6. '][' → logprob: -6.099457263946533
    7. '[current' → logprob: -6.474457263946533
    8. ']' → logprob: -7.099457263946533
    9. '_ids' → logprob: -8.474457740783691
    10. 'current' → logprob: -8.599457740783691

Token 889: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.039162762463092804
    2. '[' → logprob: -3.2891628742218018
    3. ']' → logprob: -7.664162635803223
    4. '[current' → logprob: -8.414162635803223
    5. ' ][' → logprob: -9.039162635803223
    6. '[next' → logprob: -9.414162635803223
    7. '   ' → logprob: -10.039162635803223
    8. ' [' → logprob: -10.414162635803223
    9. ' ' → logprob: -10.914162635803223
    10. '       ' → logprob: -11.414162635803223

Token 890: 'heading' (ID: 24070)
  Prédit: 'final'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'final' → logprob: -0.00041398804751224816
    2. 'heading' → logprob: -8.50041389465332
    3. ' final' → logprob: -8.62541389465332
    4. '(final' → logprob: -11.62541389465332
    5. 'next' → logprob: -11.62541389465332
    6. 'current' → logprob: -12.37541389465332
    7. '[' → logprob: -12.37541389465332
    8. '   ' → logprob: -13.62541389465332
    9. ' ' → logprob: -14.62541389465332
    10. '  ' → logprob: -14.75041389465332

Token 891: ']],' (ID: 37171)
  Prédit: '],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.023118292912840843
    2. '][' → logprob: -4.648118495941162
    3. '],[' → logprob: -4.898118495941162
    4. ',' → logprob: -5.523118495941162
    5. ']][' → logprob: -7.273118495941162
    6. ',current' → logprob: -8.273118019104004
    7. ']' → logprob: -8.523118019104004
    8. '[' → logprob: -8.773118019104004
    9. ']],' → logprob: -8.773118019104004
    10. '[current' → logprob: -9.523118019104004

Token 892: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0026496173813939095
    2. ' [' → logprob: -6.002649784088135
    3. '           ' → logprob: -10.127649307250977
    4. '   ' → logprob: -10.252649307250977
    5. ' ' → logprob: -11.127649307250977
    6. '[list' → logprob: -11.252649307250977
    7. '               ' → logprob: -11.502649307250977
    8. '[a' → logprob: -11.752649307250977
    9. '       ' → logprob: -11.877649307250977
    10. '[b' → logprob: -12.127649307250977

Token 893: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035361594054847956
    2. 'edge' → logprob: -6.253536224365234
    3. 'dist' → logprob: -6.753536224365234
    4. 'final' → logprob: -8.628536224365234
    5. 'wf' → logprob: -8.878536224365234
    6. '   ' → logprob: -10.378536224365234
    7. ' ' → logprob: -10.628536224365234
    8. '0' → logprob: -10.753536224365234
    9. '
' → logprob: -12.253536224365234
    10. 'current' → logprob: -12.378536224365234

Token 894: ']))' (ID: 20259)
  Prédit: ']))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']))' → logprob: -0.024146102368831635
    2. ']' → logprob: -3.77414608001709
    3. '])[' → logprob: -7.64914608001709
    4. '])).' → logprob: -8.14914608001709
    5. '])' → logprob: -10.02414608001709
    6. '])))' → logprob: -10.27414608001709
    7. ']))
' → logprob: -10.52414608001709
    8. '],' → logprob: -12.27414608001709
    9. ']))

' → logprob: -12.52414608001709
    10. ' ]' → logprob: -12.77414608001709

Token 895: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026492342352867126
    2. ')[' → logprob: -3.6514923572540283
    3. '][' → logprob: -8.90149211883545
    4. '0' → logprob: -10.40149211883545
    5. '()[' → logprob: -11.15149211883545
    6. ')' → logprob: -12.52649211883545
    7. '")[' → logprob: -13.02649211883545
    8. '   ' → logprob: -13.90149211883545
    9. ',' → logprob: -14.52649211883545
    10. ' )[' → logprob: -14.52649211883545

Token 896: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '۰' → logprob: -18.375
    4. '-' → logprob: -18.875
    5. '```' → logprob: -20.125
    6. '00' → logprob: -20.375
    7. '０' → logprob: -20.75
    8. '
' → logprob: -20.875
    9. '٠' → logprob: -21.25
    10. '   ' → logprob: -21.375

Token 897: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.263011578586884e-05
    2. ')
' → logprob: -10.125042915344238
    3. ' )' → logprob: -14.250042915344238
    4. '       ' → logprob: -15.125042915344238
    5. '   ' → logprob: -15.125042915344238
    6. ')

' → logprob: -15.250042915344238
    7. '<|end|>' → logprob: -15.625042915344238
    8. ')
' → logprob: -16.000041961669922
    9. ')`' → logprob: -16.375041961669922
    10. ')]' → logprob: -16.375041961669922

Token 898: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 899: ' command' (ID: 6348)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 900: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.007663528434932232
    2. '[' → logprob: -4.882663726806641
    3. '.append' → logprob: -10.88266372680664
    4. '[T' → logprob: -11.13266372680664
    5. '[:]' → logprob: -12.00766372680664
    6. '\[' → logprob: -12.00766372680664
    7. '```' → logprob: -12.63266372680664
    8. ' [' → logprob: -13.25766372680664
    9. '[
' → logprob: -13.38266372680664
    10. '[token' → logprob: -14.00766372680664

Token 901: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05620574206113815
    2. ' =' → logprob: -3.3062057495117188
    3. ',' → logprob: -4.556205749511719
    4. ']' → logprob: -5.056205749511719
    5. ')' → logprob: -7.431205749511719
    6. ']=' → logprob: -7.931205749511719
    7. ' +=' → logprob: -10.056205749511719
    8. ' ' → logprob: -10.681205749511719
    9. '+=' → logprob: -10.681205749511719
    10. ')=' → logprob: -10.681205749511719

Token 902: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00075125927105546
    2. '+=' → logprob: -7.500751495361328
    3. ' =' → logprob: -8.625751495361328
    4. ' +=' → logprob: -12.125751495361328
    5. '*=' → logprob: -13.125751495361328
    6. ')' → logprob: -13.375751495361328
    7. ',' → logprob: -13.625751495361328
    8. '=
' → logprob: -13.625751495361328
    9. '.=' → logprob: -13.875751495361328
    10. '[' → logprob: -14.250751495361328

Token 903: ' heading' (ID: 23808)
  Prédit: 'heading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heading' → logprob: -0.09260270744562149
    2. 'ω' → logprob: -2.4676027297973633
    3. '0' → logprob: -6.342602729797363
    4. 'current' → logprob: -6.842602729797363
    5. ' heading' → logprob: -8.092602729797363
    6. 'head' → logprob: -8.592602729797363
    7. '1' → logprob: -9.717602729797363
    8. '(' → logprob: -9.842602729797363
    9. ' ω' → logprob: -9.967602729797363
    10. 'omega' → logprob: -10.530102729797363

Token 904: ' +' (ID: 659)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15817634761333466
    2. '
' → logprob: -2.5331764221191406
    3. '<|end|>' → logprob: -2.9081764221191406
    4. '' → logprob: -5.408176422119141
    5. ' 
' → logprob: -5.783176422119141
    6. '  
' → logprob: -6.533176422119141
    7. '\' → logprob: -7.283176422119141
    8. '
' → logprob: -7.533176422119141
    9. '```' → logprob: -7.908176422119141
    10. '    
' → logprob: -8.28317642211914

Token 905: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007702016155235469
    2. ' ' → logprob: -7.375770092010498
    3. '0' → logprob: -8.875770568847656
    4. ' (' → logprob: -13.250770568847656
    5. '(' → logprob: -14.000770568847656
    6. '-' → logprob: -14.875770568847656
    7. '<|end|>' → logprob: -15.250770568847656
    8. ' -' → logprob: -15.500770568847656
    9. '+' → logprob: -15.750770568847656
    10. '```' → logprob: -16.625770568847656

Token 906: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1604182869195938
    2. '0' → logprob: -1.9104182720184326
    3. ' ' → logprob: -9.035418510437012
    4. '-' → logprob: -9.535418510437012
    5. ' -' → logprob: -13.910418510437012
    6. '<|end|>' → logprob: -14.785418510437012
    7. '2' → logprob: -15.035418510437012
    8. '```' → logprob: -15.160418510437012
    9. '+' → logprob: -15.285418510437012
    10. '(' → logprob: -16.035417556762695

Token 907: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 908: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 909: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7977519631385803
    2. 'for' → logprob: -1.1727519035339355
    3. '<|end|>' → logprob: -1.6727519035339355
    4. '```' → logprob: -4.2977519035339355
    5. '   ' → logprob: -4.4227519035339355
    6. '#' (adapté à ' #') → logprob: -4.5477519035339355
    7. ' for' → logprob: -4.9227519035339355
    8. 'print' → logprob: -5.2977519035339355
    9. ' return' → logprob: -6.5477519035339355
    10. '	return' → logprob: -7.6727519035339355

Token 910: ' Print' (ID: 13103)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6983232498168945
    2. 'for' → logprob: -0.9483232498168945
    3. 'print' → logprob: -2.1983232498168945
    4. '   ' → logprob: -5.5733232498168945
    5. ' for' → logprob: -8.323323249816895
    6. ' return' → logprob: -8.823323249816895
    7. ' print' → logprob: -11.823323249816895
    8. 'sys' → logprob: -12.698323249816895
    9. '```' → logprob: -12.823323249816895
    10. '#' → logprob: -15.198323249816895

Token 911: ' in' (ID: 306)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15545500814914703
    2. 'for' → logprob: -2.1554551124572754
    3. '```' → logprob: -4.155455112457275
    4. '   ' → logprob: -4.405455112457275
    5. '(' → logprob: -8.780454635620117
    6. '``' → logprob: -10.405454635620117
    7. '('\' → logprob: -11.280454635620117
    8. '(print' → logprob: -11.530454635620117
    9. '
' → logprob: -11.905454635620117
    10. ' for' → logprob: -12.155454635620117

Token 912: ' unnecessarily' (ID: 169842)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.895327091217041
    2. '('' → logprob: -1.895327091217041
    3. '"\' → logprob: -2.145327091217041
    4. '("\' → logprob: -2.270327091217041
    5. ''' → logprob: -2.395327091217041
    6. ''\' → logprob: -2.645327091217041
    7. 'range' → logprob: -4.020327091217041
    8. '"' → logprob: -4.270327091217041
    9. '("' → logprob: -4.395327091217041
    10. 'print' → logprob: -5.270327091217041

Token 913: ' involved' (ID: 9808)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5826895833015442
    2. '('' → logprob: -1.5826895236968994
    3. '("' → logprob: -2.8326895236968994
    4. 'join' → logprob: -3.0826895236968994
    5. '("\' → logprob: -3.3326895236968994
    6. ''' → logprob: -3.4576895236968994
    7. '"' → logprob: -3.5826895236968994
    8. '('\' → logprob: -4.4576897621154785
    9. '"\' → logprob: -4.9576897621154785
    10. 'enumer' → logprob: -5.4576897621154785

Token 914: ' way' (ID: 2006)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.5012702941894531
    2. '("\' → logprob: -2.001270294189453
    3. '(' → logprob: -2.126270294189453
    4. '('' → logprob: -2.376270294189453
    5. 'print' → logprob: -3.626270294189453
    6. '("' → logprob: -4.376270294189453
    7. '("("' → logprob: -5.751270294189453
    8. 'for' → logprob: -6.751270294189453
    9. '(
' → logprob: -7.126270294189453
    10. '(print' → logprob: -7.376270294189453

Token 915: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.17712503671646118
    2. '   ' → logprob: -1.9271249771118164
    3. 'for' → logprob: -4.177124977111816
    4. '```' → logprob: -6.802124977111816
    5. '_' → logprob: -8.552124977111816
    6. '``' → logprob: -9.677124977111816
    7. '
' → logprob: -11.177124977111816
    8. ' for' → logprob: -11.802124977111816
    9. ' print' → logprob: -12.177124977111816
    10. '    
' → logprob: -12.302124977111816

Token 916: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.08513380587100983
    2. 'for' → logprob: -2.8351337909698486
    3. '   ' → logprob: -3.8351337909698486
    4. '```' → logprob: -6.710134029388428
    5. '
' → logprob: -10.71013355255127
    6. ' for' → logprob: -10.71013355255127
    7. '_' → logprob: -11.33513355255127
    8. '``' → logprob: -11.46013355255127
    9. '    
' → logprob: -11.83513355255127
    10. ' print' → logprob: -12.46013355255127

Token 917: ' list' (ID: 1562)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005327435676008463
    2. 'for' → logprob: -5.255327224731445
    3. '   ' → logprob: -9.380327224731445
    4. '_' → logprob: -12.880327224731445
    5. '```' → logprob: -12.880327224731445
    6. 'sys' → logprob: -13.005327224731445
    7. '(' → logprob: -14.255327224731445
    8. '
' → logprob: -14.505327224731445
    9. '``' → logprob: -15.505327224731445
    10. '    
' → logprob: -15.630327224731445

Token 918: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -2.8921695047756657e-05
    2. '(' → logprob: -10.875028610229492
    3. '(print' → logprob: -11.750028610229492
    4. 'map' → logprob: -14.125028610229492
    5. '(
' → logprob: -14.625028610229492
    6. 'print' → logprob: -15.000028610229492
    7. '```' → logprob: -15.625028610229492
    8. '(filter' → logprob: -16.000028610229492
    9. '=' → logprob: -16.625028610229492
    10. '_' → logprob: -17.000028610229492

Token 919: '(lambda' (ID: 43341)
  Prédit: '(print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(print' → logprob: -0.25237730145454407
    2. '(lambda' → logprob: -1.5023772716522217
    3. 'print' → logprob: -8.2523775100708
    4. '(sys' → logprob: -8.8773775100708
    5. '(' → logprob: -10.1273775100708
    6. '((' → logprob: -12.7523775100708
    7. '```' → logprob: -13.6273775100708
    8. '   ' → logprob: -13.8773775100708
    9. '(
' → logprob: -14.1273775100708
    10. '(write' → logprob: -14.2523775100708

Token 920: ' x' (ID: 1215)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.06343496590852737
    2. 'print' → logprob: -3.0634350776672363
    3. 'lambda' → logprob: -4.813435077667236
    4. '(print' → logprob: -5.813435077667236
    5. '(sys' → logprob: -6.313435077667236
    6. 'sys' → logprob: -6.313435077667236
    7. '   ' → logprob: -12.688434600830078
    8. '```' → logprob: -13.563434600830078
    9. ' (' → logprob: -13.938434600830078
    10. '=lambda' → logprob: -14.563434600830078

Token 921: ':' (ID: 25)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.03139091655611992
    2. '(print' → logprob: -4.031391143798828
    3. 'print' → logprob: -4.406391143798828
    4. ' (' → logprob: -7.781391143798828
    5. '(sys' → logprob: -8.031391143798828
    6. 'lambda' → logprob: -9.281391143798828
    7. '(' → logprob: -9.406391143798828
    8. '   ' → logprob: -11.531391143798828
    9. 'sys' → logprob: -11.906391143798828
    10. ':' → logprob: -12.156391143798828

Token 922: ' sys' (ID: 12228)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00248338864184916
    2. 'sys' → logprob: -6.002483367919922
    3. 'lambda' → logprob: -12.252483367919922
    4. '(print' → logprob: -13.377483367919922
    5. '(sys' → logprob: -14.502483367919922
    6. '(lambda' → logprob: -14.752483367919922
    7. '__' → logprob: -14.877483367919922
    8. ' print' → logprob: -16.752483367919922
    9. '   ' → logprob: -17.252483367919922
    10. 'set' → logprob: -18.127483367919922

Token 923: '.stdout' (ID: 59462)
  Prédit: '.stdout'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdout' → logprob: -5.848420551046729e-05
    2. 'stdout' → logprob: -10.2500581741333
    3. '(stdout' → logprob: -11.5000581741333
    4. '.stderr' → logprob: -12.5000581741333
    5. '.write' → logprob: -13.2500581741333
    6. '.' → logprob: -13.3750581741333
    7. '.stdin' → logprob: -13.5000581741333
    8. '.setdefault' → logprob: -13.6250581741333
    9. '.print' → logprob: -14.2500581741333
    10. '_stdout' → logprob: -14.6250581741333

Token 924: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -2.534558552724775e-05
    2. '.' → logprob: -11.375025749206543
    3. 'write' → logprob: -11.375025749206543
    4. '.stdout' → logprob: -13.250025749206543
    5. '.flush' → logprob: -15.250025749206543
    6. ' .' → logprob: -16.500024795532227
    7. '.w' → logprob: -16.750024795532227
    8. 'stdout' → logprob: -16.750024795532227
    9. '   ' → logprob: -17.125024795532227
    10. '().' → logprob: -17.250024795532227

Token 925: '(f' (ID: 1526)
  Prédit: '(str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(str' → logprob: -0.04860779643058777
    2. '(f' → logprob: -3.04860782623291
    3. 'str' → logprob: -12.04860782623291
    4. '(' → logprob: -12.17360782623291
    5. '(chr' → logprob: -12.17360782623291
    6. '("{}' → logprob: -13.17360782623291
    7. 'f' → logprob: -13.29860782623291
    8. '('{}' → logprob: -14.92360782623291
    9. '((' → logprob: -15.29860782623291
    10. '=str' → logprob: -17.548606872558594

Token 926: '"{' (ID: 27510)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.08468691259622574
    2. 'f' → logprob: -2.5846869945526123
    3. '"{' → logprob: -5.584686756134033
    4. '(str' → logprob: -6.334686756134033
    5. '(f' → logprob: -8.959687232971191
    6. ' str' → logprob: -10.209687232971191
    7. '{' → logprob: -10.834687232971191
    8. '"' → logprob: -11.209687232971191
    9. '"%' → logprob: -11.209687232971191
    10. '{}' → logprob: -11.459687232971191

Token 927: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -4.739826181321405e-05
    2. 'str' → logprob: -10.00004768371582
    3. '{x' → logprob: -14.00004768371582
    4. ' x' → logprob: -14.12504768371582
    5. 'command' → logprob: -16.37504768371582
    6. 'f' → logprob: -16.50004768371582
    7. '(x' → logprob: -16.87504768371582
    8. 'int' → logprob: -17.75004768371582
    9. '{}' → logprob: -18.00004768371582
    10. '"x' → logprob: -18.00004768371582

Token 928: '}\' (ID: 21170)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.14379090070724487
    2. '}\' → logprob: -2.0187909603118896
    3. '()}' → logprob: -8.018791198730469
    4. '(x' → logprob: -8.393791198730469
    5. '()' → logprob: -8.643791198730469
    6. '[' → logprob: -9.518791198730469
    7. '{' → logprob: -9.518791198730469
    8. '('' → logprob: -9.643791198730469
    9. '{}\' → logprob: -10.268791198730469
    10. '(' → logprob: -10.893791198730469

Token 929: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1069064661860466
    2. '\n' → logprob: -2.3569064140319824
    3. '"\' → logprob: -5.106906414031982
    4. '}\' → logprob: -7.856906414031982
    5. ''\' → logprob: -9.35690689086914
    6. '_n' → logprob: -9.60690689086914
    7. '"' → logprob: -10.85690689086914
    8. ''n' → logprob: -10.98190689086914
    9. '">\' → logprob: -11.23190689086914
    10. '`\' → logprob: -12.10690689086914

Token 930: '"),' (ID: 7645)
  Prédit: '",'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '",' → logprob: -0.1927570253610611
    2. '"),' → logprob: -1.8177570104599
    3. '(x' → logprob: -4.4427571296691895
    4. '")),' → logprob: -8.192756652832031
    5. '"' → logprob: -8.317756652832031
    6. '"))' → logprob: -8.942756652832031
    7. '}",' → logprob: -9.067756652832031
    8. '{x' → logprob: -9.192756652832031
    9. '),' → logprob: -9.817756652832031
    10. ')",' → logprob: -9.942756652832031

Token 931: ' command' (ID: 6348)
  Prédit: 'command'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'command' → logprob: -1.9266199160483666e-05
    2. ' command' → logprob: -10.875019073486328
    3. '(command' → logprob: -15.250019073486328
    4. '[' → logprob: -17.375019073486328
    5. '   ' → logprob: -17.875019073486328
    6. 'map' → logprob: -18.250019073486328
    7. '	command' → logprob: -18.250019073486328
    8. ' ' → logprob: -18.875019073486328
    9. '  ' → logprob: -19.500019073486328
    10. 'comment' → logprob: -19.750019073486328

Token 932: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0001835141738411039
    2. ')' → logprob: -8.62518310546875
    3. '))
' → logprob: -13.62518310546875
    4. '   ' → logprob: -13.75018310546875
    5. '()))' → logprob: -14.00018310546875
    6. ' ))' → logprob: -14.87518310546875
    7. ')))' → logprob: -15.50018310546875
    8. '));' → logprob: -16.62518310546875
    9. '[' → logprob: -17.12518310546875
    10. '),' → logprob: -17.75018310546875

Token 933: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 934: ' return' (ID: 622)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 935: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 936: '0' (ID: 15)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00476368423551321
    2. '<|end|>' → logprob: -6.254763603210449
    3. 'solve' → logprob: -6.504763603210449
    4. '{}' → logprob: -7.254763603210449
    5. '0' → logprob: -8.12976360321045
    6. '[]' → logprob: -8.75476360321045
    7. '```' → logprob: -9.75476360321045
    8. ' None' → logprob: -9.87976360321045
    9. '()' → logprob: -10.62976360321045
    10. '(None' → logprob: -11.00476360321045

Token 937: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 938: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 939: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0067154900170862675
    2. '__' → logprob: -5.006715297698975
    3. 'name' → logprob: -16.881715774536133
    4. '_' → logprob: -16.881715774536133
    5. ' ' → logprob: -17.381715774536133
    6. '_name' → logprob: -18.006715774536133
    7. ' ' → logprob: -18.381715774536133
    8. '___' → logprob: -18.631715774536133
    9. '.__' → logprob: -19.756715774536133
    10. ' _' → logprob: -20.006715774536133

Token 940: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.020412949845194817
    2. '__.__' → logprob: -4.895412921905518
    3. '.__' → logprob: -5.395412921905518
    4. ' __' → logprob: -6.270412921905518
    5. '.' → logprob: -6.270412921905518
    6. ' ==' → logprob: -6.520412921905518
    7. '__.' → logprob: -6.520412921905518
    8. '==' → logprob: -7.395412921905518
    9. '_' → logprob: -7.895412921905518
    10. ' ' → logprob: -10.020413398742676

Token 941: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00013691288768313825
    2. '__.__' → logprob: -9.250137329101562
    3. '==' → logprob: -10.625137329101562
    4. '=="' → logprob: -11.375137329101562
    5. '__.' → logprob: -12.625137329101562
    6. '__["' → logprob: -14.500137329101562
    7. ' ==' → logprob: -14.875137329101562
    8. '___' → logprob: -15.625137329101562
    9. '=='' → logprob: -15.750137329101562
    10. '__('' → logprob: -16.375137329101562

Token 942: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0011170001234859228
    2. '==' → logprob: -7.12611722946167
    3. '=="' → logprob: -8.876116752624512
    4. '__.__' → logprob: -9.001116752624512
    5. ' ==' → logprob: -11.126116752624512
    6. '___' → logprob: -11.876116752624512
    7. '=='' → logprob: -12.126116752624512
    8. '____' → logprob: -12.251116752624512
    9. '_' → logprob: -12.376116752624512
    10. '__.' → logprob: -13.126116752624512

Token 943: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1602400690317154
    2. ''' → logprob: -1.9102400541305542
    3. ' "__' → logprob: -11.660240173339844
    4. '__' → logprob: -12.785240173339844
    5. '`' → logprob: -13.535240173339844
    6. ' '__' → logprob: -14.160240173339844
    7. '"user' → logprob: -14.285240173339844
    8. ' "' → logprob: -14.910240173339844
    9. '"name' → logprob: -15.035240173339844
    10. '"class' → logprob: -16.035240173339844

Token 944: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00027849749312736094
    2. 'name' → logprob: -8.50027847290039
    3. '__' → logprob: -9.75027847290039
    4. '_main' → logprob: -11.50027847290039
    5. '"' → logprob: -12.50027847290039
    6. ''' → logprob: -13.12527847290039
    7. ' main' → logprob: -14.62527847290039
    8. '```' → logprob: -16.12527847290039
    9. '_MAIN' → logprob: -16.62527847290039
    10. '(main' → logprob: -16.87527847290039

Token 945: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.1279715597629547
    2. '__' → logprob: -2.127971649169922
    3. '__':
' → logprob: -7.127971649169922
    4. '__:' → logprob: -8.502971649169922
    5. '__["' → logprob: -11.377971649169922
    6. '__.' → logprob: -11.502971649169922
    7. '__.__' → logprob: -11.752971649169922
    8. '__
' → logprob: -13.752971649169922
    9. '__("' → logprob: -14.002971649169922
    10. '__
' → logprob: -14.127971649169922

Token 946: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6355989575386047
    2. 'solve' → logprob: -0.7605989575386047
    3. ' solve' → logprob: -5.885599136352539
    4. '.solve' → logprob: -9.260599136352539
    5. '(s' → logprob: -10.385599136352539
    6. '	s' → logprob: -10.510599136352539
    7. '```' → logprob: -10.635599136352539
    8. '    
' → logprob: -11.635599136352539
    9. '    ' → logprob: -12.010599136352539
    10. '  ' → logprob: -12.260599136352539

Token 947: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -0.06205115094780922
    2. 'sys' → logprob: -2.8120510578155518
    3. 'import' → logprob: -9.812050819396973
    4. '   ' → logprob: -10.687050819396973
    5. ' solve' → logprob: -12.937050819396973
    6. '```' → logprob: -13.187050819396973
    7. 'exit' → logprob: -14.312050819396973
    8. ' sys' → logprob: -15.187050819396973
    9. '	sys' → logprob: -15.187050819396973
    10. '.solve' → logprob: -15.937050819396973

Token 948: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06028518080711365
    2. '(' → logprob: -2.9352850914001465
    3. '()
' → logprob: -6.0602850914001465
    4. '<|end|>' → logprob: -6.5602850914001465
    5. '(
' → logprob: -7.0602850914001465
    6. '```' → logprob: -8.060285568237305
    7. '();' → logprob: -9.060285568237305
    8. '
' → logprob: -9.060285568237305
    9. ' ()' → logprob: -10.435285568237305
    10. '()\' → logprob: -10.560285568237305


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 946
Tokens correctement prédits (1ère position, stricte): 334
Tokens correctement prédits (1ère position, avec adaptation): 346
Tokens correctement prédits (top 10): 664
Précision stricte (1ère position): 35.31%
Précision adaptée (1ère position): 36.58%
Précision (top 10): 70.19%
================================================================================
