================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s = input()
c = 0
for i in s:
    if i == '+':
        c = c + 1
    else:
        c = c - 1
print(c)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003908014856278896
    2. '('' → logprob: -6.378908157348633
    3. '()' → logprob: -6.878908157348633
    4. ''' → logprob: -7.128908157348633
    5. '"' → logprob: -8.878908157348633
    6. '`' → logprob: -9.753908157348633
    7. '(
' → logprob: -9.878908157348633
    8. '("("' → logprob: -9.878908157348633
    9. '```' → logprob: -11.003908157348633
    10. ' (' → logprob: -11.628908157348633

Token 4: 'c' (ID: 66)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.044769834727048874
    2. 'if' → logprob: -4.044769763946533
    3. '+' → logprob: -4.419769763946533
    4. '[' → logprob: -5.419769763946533
    5. '.strip' → logprob: -6.169769763946533
    6. '=' → logprob: -6.544769763946533
    7. 'print' → logprob: -6.669769763946533
    8. ''' → logprob: -7.044769763946533
    9. '[::-' → logprob: -7.044769763946533
    10. ' if' → logprob: -7.669769763946533

Token 5: ' =' (ID: 314)
  Prédit: 'ount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ount' → logprob: -0.7135601043701172
    2. ' =' → logprob: -0.9635601043701172
    3. '=' → logprob: -3.463560104370117
    4. 'har' → logprob: -3.713560104370117
    5. 'ounter' → logprob: -3.713560104370117
    6. 'h' → logprob: -4.088560104370117
    7. 'o' → logprob: -4.213560104370117
    8. '()' → logprob: -5.713560104370117
    9. 'nt' → logprob: -6.463560104370117
    10. 'ont' → logprob: -6.588560104370117

Token 6: ' ' (ID: 220)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0175151824951172
    2. ' s' → logprob: -1.2675151824951172
    3. ' ' → logprob: -1.3925151824951172
    4. '0' → logprob: -2.267515182495117
    5. ''' → logprob: -6.017515182495117
    6. ''s' → logprob: -7.017515182495117
    7. 'int' → logprob: -8.017515182495117
    8. '"' → logprob: -8.392515182495117
    9. '1' → logprob: -8.517515182495117
    10. 'input' → logprob: -8.892515182495117

Token 7: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10574276000261307
    2. 's' → logprob: -2.3557426929473877
    3. 'input' → logprob: -6.480742931365967
    4. ''' → logprob: -6.855742931365967
    5. ''s' → logprob: -6.980742931365967
    6. '''' → logprob: -7.105742931365967
    7. 'int' → logprob: -7.855742931365967
    8. '1' → logprob: -8.355742454528809
    9. 'len' → logprob: -8.730742454528809
    10. '"' → logprob: -9.105742454528809

Token 8: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5613982081413269
    2. ':' → logprob: -2.1863982677459717
    3. ' ' → logprob: -2.4363982677459717
    4. 'for' → logprob: -2.6863982677459717
    5. ' for' → logprob: -2.6863982677459717
    6. 'i' → logprob: -3.1863982677459717
    7. '=' → logprob: -4.686398029327393
    8. '```' → logprob: -4.936398029327393
    9. '
' → logprob: -5.311398029327393
    10. ''' → logprob: -5.311398029327393

Token 9: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02670232765376568
    2. ' for' → logprob: -4.276702404022217
    3. '```' → logprob: -5.526702404022217
    4. ':' → logprob: -5.776702404022217
    5. 'f' → logprob: -6.151702404022217
    6. 'i' → logprob: -6.151702404022217
    7. '=' → logprob: -8.526701927185059
    8. '`' → logprob: -8.901701927185059
    9. '.' → logprob: -9.151701927185059
    10. '+' → logprob: -9.151701927185059

Token 10: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.015058682300150394
    2. ' s' → logprob: -4.890058517456055
    3. '  ' → logprob: -5.265058517456055
    4. ' i' → logprob: -6.640058517456055
    5. ''' → logprob: -7.515058517456055
    6. 's' → logprob: -8.890058517456055
    7. 'i' → logprob: -9.265058517456055
    8. ' c' → logprob: -9.515058517456055
    9. '"' → logprob: -10.765058517456055
    10. ' '' → logprob: -11.015058517456055

Token 11: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07160482555627823
    2. 'in' → logprob: -3.0716047286987305
    3. ' ' → logprob: -4.1966047286987305
    4. 'n' → logprob: -5.5716047286987305
    5. 's' → logprob: -6.1966047286987305
    6. ' n' → logprob: -8.07160472869873
    7. '  ' → logprob: -8.44660472869873
    8. ' s' → logprob: -8.44660472869873
    9. '_' → logprob: -8.57160472869873
    10. '[' → logprob: -8.69660472869873

Token 12: ' s' (ID: 265)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.08976993709802628
    2. ' s' → logprob: -2.8397698402404785
    3. 'range' → logprob: -3.7147698402404785
    4. 's' → logprob: -5.8397698402404785
    5. ' ' → logprob: -8.839770317077637
    6. '(range' → logprob: -13.589770317077637
    7. '  ' → logprob: -14.714770317077637
    8. ')' → logprob: -14.714770317077637
    9. '_range' → logprob: -14.964770317077637
    10. '	range' → logprob: -14.964770317077637

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2098480761051178
    2. '[' → logprob: -2.084848165512085
    3. '[:]' → logprob: -3.084848165512085
    4. '[:' → logprob: -4.459847927093506
    5. '[]' → logprob: -5.834847927093506
    6. ' in' → logprob: -6.584847927093506
    7. ' :' → logprob: -6.834847927093506
    8. '.' → logprob: -8.209848403930664
    9. '+' → logprob: -8.209848403930664
    10. '```' → logprob: -8.584848403930664

Token 14: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5250136256217957
    2. '   ' → logprob: -1.0250136852264404
    3. ' if' → logprob: -3.2750136852264404
    4. 'if' → logprob: -5.775013446807861
    5. '  ' → logprob: -6.400013446807861
    6. '```' → logprob: -6.525013446807861
    7. '    ' → logprob: -6.650013446807861
    8. ' ```' → logprob: -7.275013446807861
    9. 'c' → logprob: -7.400013446807861
    10. ':' → logprob: -7.900013446807861

Token 15: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.801962673664093
    2. 'if' (adapté à ' if') → logprob: -1.1769626140594482
    3. ' if' → logprob: -1.6769626140594482
    4. '   ' → logprob: -3.3019626140594482
    5. 'i' → logprob: -4.676962852478027
    6. ' c' → logprob: -5.051962852478027
    7. ' ' → logprob: -5.926962852478027
    8. 's' → logprob: -7.301962852478027
    9. ' i' → logprob: -7.676962852478027
    10. '  ' → logprob: -10.426962852478027

Token 16: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.015126906335353851
    2. 'i' → logprob: -4.515126705169678
    3. ' ' → logprob: -5.515126705169678
    4. ' s' → logprob: -10.640127182006836
    5. '  ' → logprob: -12.140127182006836
    6. '(i' → logprob: -12.265127182006836
    7. ' c' → logprob: -12.265127182006836
    8. 's' → logprob: -12.890127182006836
    9. ' ' → logprob: -13.890127182006836
    10. ' not' → logprob: -14.015127182006836

Token 17: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.21068236231803894
    2. '==' → logprob: -1.7106823921203613
    3. '=' → logprob: -5.585682392120361
    4. ' in' → logprob: -5.835682392120361
    5. '.' → logprob: -6.335682392120361
    6. '=='' → logprob: -8.835681915283203
    7. ' =' → logprob: -8.960681915283203
    8. 's' → logprob: -9.585681915283203
    9. ' ' → logprob: -9.585681915283203
    10. ' =='' → logprob: -9.710681915283203

Token 18: ' '+' (ID: 30120)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.15382079780101776
    2. '"' → logprob: -2.028820753097534
    3. ''a' → logprob: -4.778820991516113
    4. '"a' → logprob: -7.403820991516113
    5. ''s' → logprob: -7.528820991516113
    6. 'a' → logprob: -8.278820991516113
    7. ''i' → logprob: -8.278820991516113
    8. ' '' → logprob: -8.528820991516113
    9. ''o' → logprob: -8.903820991516113
    10. ''e' → logprob: -9.028820991516113

Token 19: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.6526394486427307
    2. '+' → logprob: -0.7776394486427307
    3. ''' → logprob: -4.277639389038086
    4. ''+' → logprob: -6.027639389038086
    5. '='' → logprob: -6.027639389038086
    6. '1' → logprob: -7.527639389038086
    7. '+'' → logprob: -9.277639389038086
    8. '=' → logprob: -9.277639389038086
    9. '+:' → logprob: -9.652639389038086
    10. '+='' → logprob: -9.777639389038086

Token 20: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1831454336643219
    2. ' c' → logprob: -1.8081454038619995
    3. ' ' → logprob: -6.433145523071289
    4. '       ' → logprob: -6.683145523071289
    5. '	c' → logprob: -8.058145523071289
    6. '1' → logprob: -9.433145523071289
    7. '   ' → logprob: -9.433145523071289
    8. '    ' → logprob: -10.933145523071289
    9. '  ' → logprob: -11.433145523071289
    10. '+c' → logprob: -11.808145523071289

Token 21: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.1604609340429306
    2. ' c' → logprob: -1.9104609489440918
    3. ' ' → logprob: -8.535460472106934
    4. '1' → logprob: -10.785460472106934
    5. '	c' → logprob: -11.035460472106934
    6. '   ' → logprob: -13.785460472106934
    7. '  ' → logprob: -13.910460472106934
    8. '    ' → logprob: -13.910460472106934
    9. '       ' → logprob: -15.035460472106934
    10. '+c' → logprob: -16.91046142578125

Token 22: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.056776031851768494
    2. ' +=' → logprob: -2.9317760467529297
    3. '=' → logprob: -6.55677604675293
    4. '+' → logprob: -7.68177604675293
    5. '+='' → logprob: -12.55677604675293
    6. ' =' → logprob: -13.30677604675293
    7. ']+=' → logprob: -13.80677604675293
    8. '-=' → logprob: -13.93177604675293
    9. ' ' → logprob: -14.05677604675293
    10. '+="' → logprob: -14.18177604675293

Token 23: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.6368235349655151
    2. 'c' → logprob: -0.7618235349655151
    3. '1' → logprob: -5.636823654174805
    4. ' ' → logprob: -7.511823654174805
    5. '0' → logprob: -10.261823654174805
    6. '+' → logprob: -10.261823654174805
    7. '10' → logprob: -11.386823654174805
    8. '2' → logprob: -12.011823654174805
    9. '	c' → logprob: -12.886823654174805
    10. '   ' → logprob: -13.011823654174805

Token 24: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04750016704201698
    2. '1' → logprob: -3.4225001335144043
    3. ' +' → logprob: -4.422500133514404
    4. ' ' → logprob: -6.547500133514404
    5. 'c' → logprob: -9.172500610351562
    6. '+c' → logprob: -9.172500610351562
    7. '-' → logprob: -10.422500610351562
    8. ' c' → logprob: -10.422500610351562
    9. 's' → logprob: -11.172500610351562
    10. '0' → logprob: -11.297500610351562

Token 25: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00023572170175611973
    2. ' ' → logprob: -8.375235557556152
    3. '   ' → logprob: -12.250235557556152
    4. '  ' → logprob: -15.375235557556152
    5. '<|end|>' → logprob: -16.62523651123047
    6. '    ' → logprob: -17.00023651123047
    7. '2' → logprob: -17.25023651123047
    8. '       ' → logprob: -17.37523651123047
    9. '+' → logprob: -17.87523651123047
    10. '     ' → logprob: -19.00023651123047

Token 26: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.000018119812012
    3. '2' → logprob: -14.875018119812012
    4. '   ' → logprob: -15.500018119812012
    5. '+' → logprob: -15.875018119812012
    6. '  ' → logprob: -16.000017166137695
    7. '-' → logprob: -17.250017166137695
    8. '3' → logprob: -18.125017166137695
    9. '0' → logprob: -18.187517166137695
    10. '<|end|>' → logprob: -18.250017166137695

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7057851552963257
    2. 'elif' → logprob: -1.4557851552963257
    3. '<|end|>' → logprob: -2.2057852745056152
    4. ' elif' → logprob: -3.0807852745056152
    5. ' else' → logprob: -3.2057852745056152
    6. 'else' → logprob: -3.3307852745056152
    7. ' ' → logprob: -3.8307852745056152
    8. '
' → logprob: -5.455785274505615
    9. '	elif' → logprob: -5.705785274505615
    10. '\n' → logprob: -5.955785274505615

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0652337521314621
    2. ' else' → logprob: -3.6902337074279785
    3. ' elif' → logprob: -4.0652337074279785
    4. 'elif' → logprob: -4.8152337074279785
    5. 'else' → logprob: -5.4402337074279785
    6. ' ' → logprob: -5.5652337074279785
    7. '<|end|>' → logprob: -6.4402337074279785
    8. '```' → logprob: -7.0652337074279785
    9. '    ' → logprob: -7.1902337074279785
    10. '	elif' → logprob: -7.3152337074279785

Token 29: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.29431822896003723
    2. 'else' (adapté à ' else') → logprob: -2.044318199157715
    3. ' elif' → logprob: -2.544318199157715
    4. ' else' → logprob: -3.169318199157715
    5. ' ' → logprob: -5.669318199157715
    6. 'e' → logprob: -7.169318199157715
    7. '   ' → logprob: -8.419318199157715
    8. '	elif' → logprob: -8.669318199157715
    9. '-' → logprob: -9.544318199157715
    10. '```' → logprob: -9.544318199157715

Token 30: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022540991194546223
    2. ':
' → logprob: -6.127254009246826
    3. '-' → logprob: -10.252254486083984
    4. '       ' → logprob: -11.252254486083984
    5. '   ' → logprob: -11.877254486083984
    6. ' :' → logprob: -12.502254486083984
    7. ':

' → logprob: -13.252254486083984
    8. ' c' → logprob: -13.627254486083984
    9. '<|end|>' → logprob: -13.627254486083984
    10. ':
' → logprob: -13.752254486083984

Token 31: '       ' (ID: 309)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1818488985300064
    2. ' c' → logprob: -1.8068488836288452
    3. '   ' → logprob: -7.181849002838135
    4. '-' → logprob: -7.306849002838135
    5. '       ' → logprob: -8.431848526000977
    6. '	c' → logprob: -8.556848526000977
    7. '    ' → logprob: -9.056848526000977
    8. ':c' → logprob: -10.181848526000977
    9. ' ' → logprob: -10.681848526000977
    10. '-c' → logprob: -10.681848526000977

Token 32: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.07892504334449768
    2. ' c' → logprob: -2.578925132751465
    3. '-' → logprob: -11.203925132751465
    4. '	c' → logprob: -11.453925132751465
    5. ' ' → logprob: -12.078925132751465
    6. '    ' → logprob: -13.328925132751465
    7. '1' → logprob: -13.703925132751465
    8. '   ' → logprob: -13.953925132751465
    9. '-c' → logprob: -14.578925132751465
    10. '```' → logprob: -15.078925132751465

Token 33: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05444683879613876
    2. ' =' → logprob: -3.1794469356536865
    3. '-' → logprob: -4.554446697235107
    4. ' -=' → logprob: -7.804446697235107
    5. '-=' → logprob: -7.929446697235107
    6. ' ' → logprob: -10.179447174072266
    7. ' -' → logprob: -10.304447174072266
    8. '_' → logprob: -12.054447174072266
    9. '+=' → logprob: -12.304447174072266
    10. '+' → logprob: -12.679447174072266

Token 34: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5759518146514893
    2. 'c' → logprob: -0.8259518146514893
    3. ' ' → logprob: -12.07595157623291
    4. '0' → logprob: -12.07595157623291
    5. '-' → logprob: -14.32595157623291
    6. '	c' → logprob: -15.32595157623291
    7. ' -' → logprob: -16.575952529907227
    8. ')c' → logprob: -17.200952529907227
    9. ' ' → logprob: -18.575952529907227
    10. '  ' → logprob: -18.575952529907227

Token 35: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07043050974607468
    2. ' -' → logprob: -2.6954305171966553
    3. ' ' → logprob: -8.320430755615234
    4. '+' → logprob: -8.445430755615234
    5. '<|end|>' → logprob: -11.195430755615234
    6. ' +' → logprob: -11.570430755615234
    7. '```' → logprob: -13.195430755615234
    8. '-
' → logprob: -13.320430755615234
    9. ''-' → logprob: -13.945430755615234
    10. '  ' → logprob: -14.070430755615234

Token 36: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.11282389611005783
    2. ' ' → logprob: -2.237823963165283
    3. '<|end|>' → logprob: -14.112823486328125
    4. ' ' → logprob: -15.487823486328125
    5. '   ' → logprob: -15.737823486328125
    6. '0' → logprob: -15.737823486328125
    7. '	' → logprob: -16.487823486328125
    8. '<|end|>' → logprob: -16.612823486328125
    9. '_' → logprob: -16.737823486328125
    10. '```' → logprob: -16.987823486328125

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -17.000028610229492
    4. '```' → logprob: -18.375028610229492
    5. '  ' → logprob: -18.750028610229492
    6. '<|end|>' → logprob: -19.000028610229492
    7. '１' → logprob: -19.750028610229492
    8. '0' → logprob: -19.937528610229492
    9. '۱' → logprob: -20.187528610229492
    10. '१' → logprob: -20.375028610229492

Token 38: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.010117624886333942
    2. '
' → logprob: -4.635117530822754
    3. '\n' → logprob: -8.385117530822754
    4. '```' → logprob: -10.260117530822754
    5. ' print' → logprob: -10.885117530822754
    6. 'p' → logprob: -11.010117530822754
    7. ' 
' → logprob: -11.510117530822754
    8. '  
' → logprob: -11.510117530822754
    9. '#' → logprob: -12.135117530822754
    10. '+
' → logprob: -12.385117530822754

Token 39: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00045902872807346284
    2. '
' → logprob: -8.000458717346191
    3. 'p' → logprob: -9.125458717346191
    4. ' print' → logprob: -11.625458717346191
    5. '#' → logprob: -13.875458717346191
    6. ' 
' → logprob: -13.875458717346191
    7. '```' → logprob: -13.875458717346191
    8. '\n' → logprob: -14.500458717346191
    9. '  
' → logprob: -14.625458717346191
    10. 'pr' → logprob: -15.000458717346191

Token 40: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.4741164743900299
    2. '(' → logprob: -0.9741164445877075
    3. '((' → logprob: -10.974116325378418
    4. '(s' → logprob: -11.349116325378418
    5. '('' → logprob: -12.224116325378418
    6. '()' → logprob: -12.724116325378418
    7. '(`' → logprob: -14.349116325378418
    8. '("("' → logprob: -14.724116325378418
    9. '(C' → logprob: -14.849116325378418
    10. '(a' → logprob: -15.474116325378418

Token 41: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: 0.0
    2. ' )' → logprob: -17.0
    3. '))' → logprob: -17.625
    4. ')`' → logprob: -17.75
    5. '')' → logprob: -18.125
    6. ')
' → logprob: -18.25
    7. '`)' → logprob: -19.5
    8. '#' → logprob: -20.75
    9. ')#' → logprob: -20.875
    10. ')**' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 39
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 34
Précision stricte (1ère position): 33.33%
Précision adaptée (1ère position): 38.46%
Précision (top 10): 87.18%
================================================================================
