================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:26:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Demander à l'utilisateur de saisir un nombre entier qui sera stocké dans la variable n
n = int(input())

# Demander à l'utilisateur de saisir une ligne d'entiers séparés par des espaces
# L'appel à input() lit cette ligne sous forme de chaîne de caractères
# split() découpe cette chaîne en une liste de sous-chaînes à chaque espace
# map(int, ...) applique la fonction int à chaque sous-chaîne, transformant chaque élément de la liste en entier
# list(...) convertit l'objet map en une liste réelle d'entiers, que l'on stocke dans la variable a
a = list(map(int, input().split()))

# Initialiser la variable ans à la valeur 'APPROVED'
# Cette variable servira à stocker le résultat final après traitement des valeurs de la liste a
ans = 'APPROVED'

# Parcourir (itérer) chaque entier x de la liste a
for x in a:
    # Vérifier si le nombre x est impair
    # L'opérateur % (modulo) donne le reste de la division de x par 2
    # Si ce reste est 1, le nombre est impair
    if x % 2 == 1:
        # L'instruction continue force la boucle à passer directement à l'itération suivante
        # Ainsi, on ne traite pas plus loin les nombres impairs
        continue
    # Si on arrive ici, c'est que x est pair (car sinon on aurait sauté cette partie avec continue)
    # On vérifie alors une condition supplémentaire :
    #   - x doit être à la fois pair, et divisible soit par 3, soit par 5
    #   - x % 2 == 0 vérifie que x est pair (ceci est déjà vrai ici)
    #   - (x % 3 == 0 or x % 5 == 0) vérifie que x est divisible par 3 ou par 5
    # Le mot-clé not inverse la condition logique : on entre dans le bloc si x n'est pas divisible par 3 ou 5
    if not (x % 2 == 0 and (x % 3 == 0 or x % 5 == 0)):
        # Si x ne remplit pas la condition, on considère que la règle n'est pas respectée
        # On change la valeur de ans en 'DENIED'
        ans = 'DENIED'
# Après la fin de la boucle (après avoir examiné tous les éléments de la liste a),
# on affiche (imprime à l'écran) la valeur finale de ans
print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Dem' (ID: 9458)
  → Token d'amorce (pas de prédiction)

Token 2: 'ander' (ID: 9330)
  → Token d'amorce (pas de prédiction)

Token 3: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1562509685754776
    2. ' à' → logprob: -2.6562509536743164
    3. ' =' → logprob: -3.7812509536743164
    4. ' a' → logprob: -5.031250953674316
    5. ' la' → logprob: -5.031250953674316
    6. '_' → logprob: -5.156250953674316
    7. ' de' → logprob: -5.281250953674316
    8. ' une' → logprob: -5.656250953674316
    9. ' un' → logprob: -5.781250953674316
    10. 'à' → logprob: -5.906250953674316

Token 4: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.1463419646024704
    2. 'util' → logprob: -2.1463420391082764
    3. 'user' → logprob: -4.646341800689697
    4. ' l' → logprob: -4.771341800689697
    5. 'input' → logprob: -7.521341800689697
    6. ' user' → logprob: -9.146342277526855
    7. 'un' → logprob: -9.271342277526855
    8. 'u' → logprob: -9.396342277526855
    9. 'la' → logprob: -9.771342277526855
    10. 'us' → logprob: -10.396342277526855

Token 5: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.5586159825325012
    2. 'util' → logprob: -1.1836159229278564
    3. ' utilisateur' → logprob: -2.3086159229278564
    4. '’utilisateur' → logprob: -4.0586161613464355
    5. 'a' → logprob: -6.4336161613464355
    6. 'u' → logprob: -6.9336161613464355
    7. 'Utilisateur' → logprob: -7.4336161613464355
    8. '_util' → logprob: -7.6836161613464355
    9. 'user' → logprob: -8.058615684509277
    10. ''' → logprob: -8.433615684509277

Token 6: ' de' (ID: 334)
  Prédit: 'nom'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nom' → logprob: -0.27199697494506836
    2. 's' → logprob: -2.6469969749450684
    3. 'input' → logprob: -3.5219969749450684
    4. 'n' → logprob: -3.6469969749450684
    5. 'name' → logprob: -4.021996974945068
    6. ' nom' → logprob: -4.021996974945068
    7. '#' → logprob: -4.271996974945068
    8. 'ent' → logprob: -5.396996974945068
    9. 'd' → logprob: -5.521996974945068
    10. ' ' → logprob: -5.521996974945068

Token 7: ' saisir' (ID: 152120)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03396458178758621
    2. ' saisir' → logprob: -4.03396463394165
    3. 'entr' → logprob: -4.53396463394165
    4. 'r' → logprob: -6.03396463394165
    5. '```' → logprob: -7.40896463394165
    6. 'contin' → logprob: -7.53396463394165
    7. '#' → logprob: -8.158964157104492
    8. ' entrer' → logprob: -8.533964157104492
    9. 'entrée' → logprob: -8.908964157104492
    10. 'input' → logprob: -9.033964157104492

Token 8: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.01590825617313385
    2. '_' → logprob: -4.765908241271973
    3. ' une' → logprob: -6.390908241271973
    4. ' ' → logprob: -6.390908241271973
    5. 's' → logprob: -7.015908241271973
    6. ' un' → logprob: -7.140908241271973
    7. 'u' → logprob: -7.515908241271973
    8. 'un' → logprob: -8.390908241271973
    9. 'r' → logprob: -8.640908241271973
    10. ''' → logprob: -8.765908241271973

Token 9: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.13495661318302155
    2. 'texte' → logprob: -2.5099565982818604
    3. ' nombre' → logprob: -3.8849565982818604
    4. 'nom' → logprob: -4.2599568367004395
    5. 'e' → logprob: -6.5099568367004395
    6. 'mot' → logprob: -6.8849568367004395
    7. 'string' → logprob: -7.0099568367004395
    8. 'message' → logprob: -7.1349568367004395
    9. 's' → logprob: -7.2599568367004395
    10. 'n' → logprob: -7.2599568367004395

Token 10: ' entier' (ID: 80473)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03432910516858101
    2. 'nombre' → logprob: -4.284328937530518
    3. '\n' → logprob: -4.784328937530518
    4. 'x' → logprob: -5.909328937530518
    5. '```' → logprob: -6.159328937530518
    6. 'input' → logprob: -6.159328937530518
    7. '`' → logprob: -6.909328937530518
    8. '\' → logprob: -7.159328937530518
    9. '_' → logprob: -7.409328937530518
    10. '#' → logprob: -7.534328937530518

Token 11: ' qui' (ID: 2780)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007936524227261543
    2. 'nombre' → logprob: -5.507936477661133
    3. 'x' → logprob: -6.382936477661133
    4. '\n' → logprob: -7.757936477661133
    5. '```' → logprob: -7.757936477661133
    6. 'input' → logprob: -8.007936477661133
    7. '`' → logprob: -8.132936477661133
    8. '\' → logprob: -8.882936477661133
    9. 'number' → logprob: -9.007936477661133
    10. '#' → logprob: -9.257936477661133

Token 12: ' sera' (ID: 15511)
  Prédit: ' sera'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sera' → logprob: -0.8782072067260742
    2. 's' → logprob: -2.128207206726074
    3. '_' → logprob: -2.628207206726074
    4. '```' → logprob: -3.253207206726074
    5. ' représente' → logprob: -3.253207206726074
    6. ' correspond' → logprob: -3.503207206726074
    7. '`' → logprob: -3.628207206726074
    8. 'n' → logprob: -3.628207206726074
    9. ' n' → logprob: -3.878207206726074
    10. ' ' → logprob: -4.003207206726074

Token 13: ' stock' (ID: 6546)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.690793514251709
    2. ' multip' → logprob: -0.940793514251709
    3. 'multip' → logprob: -3.940793514251709
    4. 's' → logprob: -4.815793514251709
    5. ' stock' → logprob: -4.815793514251709
    6. 'é' → logprob: -4.940793514251709
    7. 'mult' → logprob: -5.190793514251709
    8. 'util' → logprob: -5.565793514251709
    9. ' élevé' → logprob: -5.690793514251709
    10. ' traité' → logprob: -5.690793514251709

Token 14: 'é' (ID: 377)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004590092226862907
    2. ' ' → logprob: -5.754590034484863
    3. 'é' → logprob: -8.004590034484863
    4. ' _' → logprob: -8.379590034484863
    5. '_d' → logprob: -8.504590034484863
    6. ' =' → logprob: -9.379590034484863
    7. ' ' → logprob: -9.504590034484863
    8. ',' → logprob: -9.754590034484863
    9. '_space' → logprob: -9.879590034484863
    10. 'er' → logprob: -9.879590034484863

Token 15: ' dans' (ID: 2671)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.005015254020691
    2. '_' → logprob: -1.630015254020691
    3. ':' → logprob: -2.7550153732299805
    4. '=' → logprob: -3.0050153732299805
    5. '.' → logprob: -3.1300153732299805
    6. 'dans' → logprob: -3.3800153732299805
    7. 'num' → logprob: -3.5050153732299805
    8. ' ' → logprob: -3.6300153732299805
    9. 'a' → logprob: -3.8800153732299805
    10. '`' → logprob: -4.0050153732299805

Token 16: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.1167439222335815
    2. ' une' → logprob: -1.3667439222335815
    3. 'une' → logprob: -1.4917439222335815
    4. 'la' → logprob: -1.9917439222335815
    5. '`' → logprob: -4.491744041442871
    6. 'a' → logprob: -4.616744041442871
    7. 'le' → logprob: -4.616744041442871
    8. '```' → logprob: -5.116744041442871
    9. 'n' → logprob: -5.366744041442871
    10. 'l' → logprob: -5.616744041442871

Token 17: ' variable' (ID: 11076)
  Prédit: ' variable'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.7030077576637268
    2. 'variable' → logprob: -0.9530077576637268
    3. 'nombre' → logprob: -2.453007698059082
    4. ' nombre' → logprob: -3.953007698059082
    5. 'n' → logprob: -5.828007698059082
    6. ' input' → logprob: -6.328007698059082
    7. 'var' → logprob: -6.453007698059082
    8. ' ' → logprob: -6.703007698059082
    9. 'input' → logprob: -6.953007698059082
    10. 'x' → logprob: -7.078007698059082

Token 18: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8862369656562805
    2. 'nombre' → logprob: -1.1362369060516357
    3. ' entier' → logprob: -2.3862369060516357
    4. ' n' → logprob: -3.1362369060516357
    5. ' nombre' → logprob: -3.3862369060516357
    6. '`' → logprob: -3.5112369060516357
    7. 'ent' → logprob: -4.011237144470215
    8. 'x' → logprob: -4.386237144470215
    9. '_' → logprob: -4.761237144470215
    10. ' `' → logprob: -5.011237144470215

Token 19: '
' (ID: 198)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.621933451038785e-05
    2. '\n' → logprob: -10.125056266784668
    3. '```' → logprob: -11.500056266784668
    4. ' n' → logprob: -12.875056266784668
    5. ' ' → logprob: -14.250056266784668
    6. '\' → logprob: -14.250056266784668
    7. '#' → logprob: -14.625056266784668
    8. '`' → logprob: -14.875056266784668
    9. 'x' → logprob: -15.750056266784668
    10. ',' → logprob: -16.12505531311035

Token 20: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -6.511406809295295e-06
    2. '```' → logprob: -12.375006675720215
    3. '\n' → logprob: -13.375006675720215
    4. '\' → logprob: -15.500006675720215
    5. ' n' → logprob: -15.875006675720215
    6. 'print' → logprob: -15.875006675720215
    7. '`' → logprob: -16.0000057220459
    8. '#' → logprob: -16.7500057220459
    9. 'nombre' → logprob: -16.7500057220459
    10. ',' → logprob: -17.8750057220459

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009772143326699734
    2. '=' → logprob: -4.634772300720215
    3. ' ' → logprob: -11.509772300720215
    4. '=input' → logprob: -13.009772300720215
    5. 'space' → logprob: -13.884772300720215
    6. ' ' → logprob: -14.259772300720215
    7. '=int' → logprob: -14.259772300720215
    8. ',' → logprob: -14.884772300720215
    9. ' =
' → logprob: -15.134772300720215
    10. '_' → logprob: -15.259772300720215

Token 22: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16068316996097565
    2. 'int' → logprob: -1.9106831550598145
    3. ' input' → logprob: -7.9106831550598145
    4. 'input' → logprob: -9.535683631896973
    5. '=int' → logprob: -11.410683631896973
    6. ' ' → logprob: -12.035683631896973
    7. ' ' → logprob: -13.160683631896973
    8. '<int' → logprob: -15.535683631896973
    9. '0' → logprob: -15.660683631896973
    10. '(int' → logprob: -15.785683631896973

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4741453528404236
    2. '(' → logprob: -0.9741453528404236
    3. '()' → logprob: -10.34914493560791
    4. 'input' → logprob: -10.97414493560791
    5. ' (' → logprob: -12.09914493560791
    6. '(
' → logprob: -12.34914493560791
    7. '(

' → logprob: -12.97414493560791
    8. '(user' → logprob: -13.22414493560791
    9. '('' → logprob: -13.47414493560791
    10. '(raw' → logprob: -14.47414493560791

Token 24: '())

' (ID: 27654)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10264207422733307
    2. '('' → logprob: -2.977642059326172
    3. '()' → logprob: -3.477642059326172
    4. '("("' → logprob: -4.352642059326172
    5. '("")' → logprob: -6.977642059326172
    6. '(""))' → logprob: -7.352642059326172
    7. '("' → logprob: -7.477642059326172
    8. '())' → logprob: -7.852642059326172
    9. '(()' → logprob: -9.227642059326172
    10. '(">' → logprob: -9.352642059326172

Token 25: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35751619935035706
    2. '#' → logprob: -2.482516288757324
    3. '(' → logprob: -2.732516288757324
    4. '()' → logprob: -2.982516288757324
    5. ' ' → logprob: -3.107516288757324
    6. '+' → logprob: -4.232516288757324
    7. 'if' → logprob: -4.607516288757324
    8. ' )' → logprob: -5.482516288757324
    9. '(n' → logprob: -5.607516288757324
    10. '```' → logprob: -5.732516288757324

Token 26: ' Dem' (ID: 9458)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3192250728607178
    2. ' if' → logprob: -1.8192250728607178
    3. '#' → logprob: -2.5692250728607178
    4. 'factor' → logprob: -3.9442250728607178
    5. 'print' → logprob: -4.694225311279297
    6. ' #' → logprob: -6.194225311279297
    7. 's' → logprob: -6.819225311279297
    8. 'for' → logprob: -7.444225311279297
    9. ' factorial' → logprob: -7.819225311279297
    10. 'fact' → logprob: -7.944225311279297

Token 27: 'ander' (ID: 9330)
  Prédit: 'ander'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ander' → logprob: -0.00460255378857255
    2. 'andez' → logprob: -6.004602432250977
    3. 'and' → logprob: -6.379602432250977
    4. '#' → logprob: -9.129602432250977
    5. 'ande' → logprob: -9.129602432250977
    6. 'andr' → logprob: -9.754602432250977
    7. 'a' → logprob: -9.879602432250977
    8. 'ar' → logprob: -10.754602432250977
    9. 'arer' → logprob: -10.754602432250977
    10. 'andir' → logprob: -11.629602432250977

Token 28: ' à' (ID: 1221)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.9640657305717468
    2. '(' → logprob: -1.0890657901763916
    3. '()' → logprob: -1.7140657901763916
    4. ' à' → logprob: -2.4640657901763916
    5. '('' → logprob: -5.5890655517578125
    6. 'à' → logprob: -5.7140655517578125
    7. ')' → logprob: -5.9640655517578125
    8. ' ' → logprob: -6.3390655517578125
    9. 'au' → logprob: -7.0890655517578125
    10. '("")' → logprob: -7.0890655517578125

Token 29: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7065843939781189
    2. 'l' → logprob: -0.8315843939781189
    3. ' un' → logprob: -3.2065844535827637
    4. ' ' → logprob: -4.956584453582764
    5. ' une' → logprob: -4.956584453582764
    6. 'un' → logprob: -5.456584453582764
    7. ' user' → logprob: -5.831584453582764
    8. 'une' → logprob: -6.081584453582764
    9. 'user' → logprob: -6.331584453582764
    10. ' n' → logprob: -7.456584453582764

Token 30: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.1678006500005722
    2. '_' → logprob: -2.4178006649017334
    3. ' user' → logprob: -3.9178006649017334
    4. ''' → logprob: -4.167800426483154
    5. '’utilisateur' → logprob: -5.292800426483154
    6. ' ' → logprob: -5.542800426483154
    7. ' utilisateur' → logprob: -5.542800426483154
    8. 'a' → logprob: -5.792800426483154
    9. 'u' → logprob: -6.292800426483154
    10. 'user' → logprob: -6.417800426483154

Token 31: ' de' (ID: 334)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.11427474766969681
    2. ' de' → logprob: -3.239274740219116
    3. '(' → logprob: -4.489274978637695
    4. ' à' → logprob: -4.614274978637695
    5. ' d' → logprob: -4.864274978637695
    6. '("' → logprob: -4.989274978637695
    7. ')' → logprob: -5.114274978637695
    8. '#' → logprob: -5.239274978637695
    9. 'de' → logprob: -5.614274978637695
    10. ' une' → logprob: -5.989274978637695

Token 32: ' saisir' (ID: 152120)
  Prédit: ' saisir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' saisir' → logprob: -0.06208520755171776
    2. 's' → logprob: -3.4370851516723633
    3. ' continuer' → logprob: -4.062085151672363
    4. ' ' → logprob: -6.062085151672363
    5. ' n' → logprob: -6.437085151672363
    6. 'n' → logprob: -6.437085151672363
    7. ' l' → logprob: -7.437085151672363
    8. 'l' → logprob: -7.687085151672363
    9. 'contin' → logprob: -8.187085151672363
    10. '  ' → logprob: -8.187085151672363

Token 33: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.17767992615699768
    2. ' ' → logprob: -2.052680015563965
    3. '(' → logprob: -4.052680015563965
    4. '()' → logprob: -4.802680015563965
    5. 'un' → logprob: -6.302680015563965
    6. '  ' → logprob: -6.802680015563965
    7. ' une' → logprob: -6.927680015563965
    8. '("' → logprob: -7.177680015563965
    9. '_' → logprob: -7.302680015563965
    10. ' (' → logprob: -7.677680015563965

Token 34: ' ligne' (ID: 19583)
  Prédit: ' phrase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' phrase' → logprob: -0.9301550984382629
    2. ' chaîne' → logprob: -0.9301550984382629
    3. ' autre' → logprob: -2.305155038833618
    4. ' deuxième' → logprob: -3.430155038833618
    5. ' chaine' → logprob: -4.055155277252197
    6. ' ' → logprob: -4.430155277252197
    7. ' valeur' → logprob: -4.555155277252197
    8. ' espace' → logprob: -4.805155277252197
    9. 'chaine' → logprob: -4.805155277252197
    10. 'phrase' → logprob: -5.555155277252197

Token 35: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.027439096942543983
    2. '_' → logprob: -3.7774391174316406
    3. 's' → logprob: -6.652439117431641
    4. '_text' → logprob: -7.152439117431641
    5. '_s' → logprob: -7.527439117431641
    6. ')' → logprob: -8.40243911743164
    7. '(' → logprob: -8.52743911743164
    8. '("")' → logprob: -8.65243911743164
    9. ' ()' → logprob: -9.02743911743164
    10. '_input' → logprob: -9.15243911743164

Token 36: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5652692317962646
    2. 'texte' → logprob: -0.9402692317962646
    3. ' texte' → logprob: -3.9402692317962646
    4. 'a' → logprob: -5.315269470214844
    5. 'u' → logprob: -5.690269470214844
    6. 'entrée' → logprob: -6.065269470214844
    7. ''entrée' → logprob: -6.190269470214844
    8. 'es' → logprob: -6.440269470214844
    9. ' Texte' → logprob: -6.440269470214844
    10. '_' → logprob: -6.940269470214844

Token 37: 'iers' (ID: 11012)
  Prédit: 'rée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rée' → logprob: -0.002133728936314583
    2. 'r' → logprob: -6.877133846282959
    3. 'ée' → logprob: -7.502133846282959
    4. 'ree' → logprob: -8.2521333694458
    5. 'ré' → logprob: -8.8771333694458
    6. 'er' → logprob: -9.0021333694458
    7. 're' → logprob: -11.6271333694458
    8. 'rer' → logprob: -12.5021333694458
    9. 'rès' → logprob: -12.6271333694458
    10. 'tr' → logprob: -12.8771333694458

Token 38: ' sépar' (ID: 97160)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.15744589269161224
    2. '()' → logprob: -2.9074459075927734
    3. 'n' → logprob: -4.157445907592773
    4. 'numbers' → logprob: -4.282445907592773
    5. 'a' → logprob: -4.657445907592773
    6. 'input' → logprob: -4.782445907592773
    7. ' ' → logprob: -4.782445907592773
    8. ' n' → logprob: -5.532445907592773
    9. ' )' → logprob: -5.532445907592773
    10. ' ()' → logprob: -5.782445907592773

Token 39: 'és' (ID: 1756)
  Prédit: 'és'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'és' → logprob: -0.08815938234329224
    2. 'é' → logprob: -2.7131593227386475
    3. 'ée' → logprob: -4.088159561157227
    4. 'es' → logprob: -6.963159561157227
    5. 'ées' → logprob: -8.338159561157227
    6. 'e' → logprob: -10.463159561157227
    7. ' par' → logprob: -10.838159561157227
    8. 'ès' → logprob: -11.713159561157227
    9. 's' → logprob: -11.963159561157227
    10. '```' → logprob: -11.963159561157227

Token 40: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05859826132655144
    2. 'par' → logprob: -3.183598279953003
    3. 'es' → logprob: -4.933598041534424
    4. 's' → logprob: -5.933598041534424
    5. '  ' → logprob: -6.683598041534424
    6. ' ' → logprob: -6.683598041534424
    7. 'e' → logprob: -7.308598041534424
    8. ' espaces' → logprob: -7.933598041534424
    9. 'space' → logprob: -8.308598518371582
    10. '```' → logprob: -8.433598518371582

Token 41: ' des' (ID: 731)
  Prédit: ' des'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' des' → logprob: -0.4609867334365845
    2. ' espaces' → logprob: -2.085986614227295
    3. 'des' → logprob: -2.210986614227295
    4. 'spaces' → logprob: -3.085986614227295
    5. ''espace' → logprob: -4.210986614227295
    6. ' espace' → logprob: -4.335986614227295
    7. 'es' → logprob: -4.460986614227295
    8. ' un' → logprob: -4.460986614227295
    9. 'space' → logprob: -4.710986614227295
    10. ' ' → logprob: -4.835986614227295

Token 42: ' espaces' (ID: 98361)
  Prédit: ' espaces'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espaces' → logprob: -0.02660633623600006
    2. 'esp' → logprob: -4.401606559753418
    3. ' ' → logprob: -5.276606559753418
    4. ' espace' → logprob: -5.776606559753418
    5. 'es' → logprob: -6.026606559753418
    6. 'spaces' → logprob: -7.026606559753418
    7. '_' → logprob: -7.526606559753418
    8. ''esp' → logprob: -7.526606559753418
    9. ''espace' → logprob: -7.651606559753418
    10. 'space' → logprob: -8.526606559753418

Token 43: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.984321117401123
    2. 'l' → logprob: -1.609321117401123
    3. ' line' → logprob: -2.234321117401123
    4. 'ligne' → logprob: -2.359321117401123
    5. 'line' → logprob: -2.984321117401123
    6. ' l' → logprob: -3.984321117401123
    7. 'a' → logprob: -4.109321117401123
    8. ' ligne' → logprob: -4.109321117401123
    9. 'ent' → logprob: -4.109321117401123
    10. 'numbers' → logprob: -4.234321117401123

Token 44: '#' (ID: 2)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.6543533205986023
    2. ' l' → logprob: -2.654353380203247
    3. ' line' → logprob: -2.654353380203247
    4. 'line' → logprob: -2.779353380203247
    5. 'numbers' → logprob: -2.779353380203247
    6. 'ligne' → logprob: -3.154353380203247
    7. ' numbers' → logprob: -3.279353380203247
    8. 's' → logprob: -3.404353380203247
    9. 'ent' → logprob: -3.779353380203247
    10. 't' → logprob: -4.904353141784668

Token 45: ' L' (ID: 451)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.5104303956031799
    2. 'numbers' → logprob: -2.135430335998535
    3. 'line' → logprob: -3.135430335998535
    4. 's' → logprob: -3.510430335998535
    5. 'arr' → logprob: -3.760430335998535
    6. 'values' → logprob: -3.760430335998535
    7. 'lst' → logprob: -3.760430335998535
    8. ' numbers' → logprob: -4.010430335998535
    9. ' line' → logprob: -4.010430335998535
    10. 'ent' → logprob: -4.135430335998535

Token 46: ''appel' (ID: 172839)
  Prédit: 'iste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iste' → logprob: -1.4682137966156006
    2. 'ignes' → logprob: -1.5932137966156006
    3. 'igne' → logprob: -1.5932137966156006
    4. '#' → logprob: -1.9682137966156006
    5. 'ine' → logprob: -2.2182137966156006
    6. 'n' → logprob: -3.7182137966156006
    7. 'ines' → logprob: -4.21821403503418
    8. 'a' → logprob: -4.59321403503418
    9. ' =' → logprob: -4.71821403503418
    10. 'e' → logprob: -4.84321403503418

Token 47: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14835409820079803
    2. ' à' → logprob: -2.7733540534973145
    3. '=' → logprob: -3.3983540534973145
    4. ' ' → logprob: -4.5233540534973145
    5. ' a' → logprob: -5.2733540534973145
    6. ' input' → logprob: -5.7733540534973145
    7. ' des' → logprob: -5.7733540534973145
    8. ' to' → logprob: -6.0233540534973145
    9. ' au' → logprob: -6.1483540534973145
    10. 'input' → logprob: -6.2733540534973145

Token 48: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20234036445617676
    2. ' input' → logprob: -1.7023403644561768
    3. 'split' → logprob: -7.577340126037598
    4. 'l' → logprob: -9.077340126037598
    5. '=input' → logprob: -9.827340126037598
    6. ' l' → logprob: -10.077340126037598
    7. 'list' → logprob: -10.202340126037598
    8. ' la' → logprob: -10.577340126037598
    9. ' ' → logprob: -10.827340126037598
    10. '```' → logprob: -10.827340126037598

Token 49: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03862384334206581
    2. '())' → logprob: -3.538623809814453
    3. '().' → logprob: -5.288623809814453
    4. ')' → logprob: -5.663623809814453
    5. '()).' → logprob: -8.913623809814453
    6. '(' → logprob: -10.288623809814453
    7. '()

' → logprob: -10.663623809814453
    8. '(),' → logprob: -11.038623809814453
    9. '()
' → logprob: -11.288623809814453
    10. ' ()' → logprob: -11.413623809814453

Token 50: ' lit' (ID: 11980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7906516790390015
    2. '()' → logprob: -0.9156516790390015
    3. '().' → logprob: -2.415651798248291
    4. '.split' → logprob: -3.915651798248291
    5. '.' → logprob: -4.665651798248291
    6. 's' → logprob: -4.915651798248291
    7. ').' → logprob: -5.415651798248291
    8. ' )' → logprob: -5.415651798248291
    9. '())' → logprob: -6.040651798248291
    10. '(' → logprob: -6.415651798248291

Token 51: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05149267986416817
    2. 'une' → logprob: -4.301492691040039
    3. ' une' → logprob: -4.676492691040039
    4. ' la' → logprob: -4.676492691040039
    5. '(' → logprob: -5.176492691040039
    6. 'la' → logprob: -5.801492691040039
    7. 'l' → logprob: -6.176492691040039
    8. ')' → logprob: -6.301492691040039
    9. ' ' → logprob: -6.801492691040039
    10. 'a' → logprob: -7.051492691040039

Token 52: ' ligne' (ID: 19583)
  Prédit: ' ligne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ligne' → logprob: -0.10322464257478714
    2. ' ' → logprob: -3.103224754333496
    3. ' chaîne' → logprob: -4.103224754333496
    4. 'ligne' → logprob: -4.228224754333496
    5. ' line' → logprob: -5.478224754333496
    6. ' l' → logprob: -5.728224754333496
    7. 'l' → logprob: -6.478224754333496
    8. 'chaine' → logprob: -6.603224754333496
    9. 's' → logprob: -6.603224754333496
    10. ' chaine' → logprob: -6.603224754333496

Token 53: ' sous' (ID: 14487)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.902715802192688
    2. '().' → logprob: -2.0277156829833984
    3. 'n' → logprob: -2.2777156829833984
    4. 's' → logprob: -2.5277156829833984
    5. ')' → logprob: -2.5277156829833984
    6. '.split' → logprob: -2.7777156829833984
    7. ',' → logprob: -3.1527156829833984
    8. ' )' → logprob: -3.7777156829833984
    9. '.' → logprob: -4.652715682983398
    10. 'split' → logprob: -4.777715682983398

Token 54: ' forme' (ID: 27450)
  Prédit: ' forme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forme' → logprob: -0.019877033308148384
    2. 'forme' → logprob: -4.269876956939697
    3. 'form' → logprob: -6.144876956939697
    4. ' form' → logprob: -6.394876956939697
    5. ' la' → logprob: -7.519876956939697
    6. ' ' → logprob: -8.269877433776855
    7. 'forma' → logprob: -8.394877433776855
    8. 'la' → logprob: -8.644877433776855
    9. 'chaine' → logprob: -9.144877433776855
    10. 'ent' → logprob: -9.394877433776855

Token 55: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.018082983791828156
    2. 'd' → logprob: -4.268083095550537
    3. ' de' → logprob: -5.643083095550537
    4. '<|end|>' → logprob: -8.268082618713379
    5. 'de' → logprob: -9.518082618713379
    6. 's' → logprob: -11.018082618713379
    7. ')' → logprob: -12.268082618713379
    8. ' ' → logprob: -12.518082618713379
    9. ' ' → logprob: -13.018082618713379
    10. '<|end|>' → logprob: -13.393082618713379

Token 56: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.38666772842407227
    2. 'chaine' → logprob: -1.3866677284240723
    3. ' chaine' → logprob: -3.2616677284240723
    4. 'cha' → logprob: -4.011667728424072
    5. ' string' → logprob: -5.636667728424072
    6. ' chaînes' → logprob: -5.761667728424072
    7. 'string' → logprob: -6.636667728424072
    8. 'texte' → logprob: -6.636667728424072
    9. 's' → logprob: -6.886667728424072
    10. ' cha' → logprob: -6.886667728424072

Token 57: ' de' (ID: 334)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3713473975658417
    2. ' s' → logprob: -2.371347427368164
    3. ' de' → logprob: -2.746347427368164
    4. ' ,' → logprob: -2.746347427368164
    5. ' ' → logprob: -3.621347427368164
    6. 'de' → logprob: -4.496347427368164
    7. ',' → logprob: -4.746347427368164
    8. ' )' → logprob: -5.371347427368164
    9. 'n' → logprob: -5.496347427368164
    10. 'chaine' → logprob: -5.746347427368164

Token 58: ' caractères' (ID: 183106)
  Prédit: 'car'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'car' → logprob: -0.637438178062439
    2. ' caractères' → logprob: -0.762438178062439
    3. 'texte' → logprob: -5.7624382972717285
    4. ' caracteres' → logprob: -7.7624382972717285
    5. 'chars' → logprob: -8.38743782043457
    6. ' caract' → logprob: -8.38743782043457
    7. 'chaine' → logprob: -8.63743782043457
    8. 'str' → logprob: -8.76243782043457
    9. 'char' → logprob: -9.26243782043457
    10. ' caractère' → logprob: -9.38743782043457

Token 59: '
' (ID: 198)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9610493779182434
    2. 'ent' → logprob: -1.8360493183135986
    3. 'numbers' → logprob: -1.9610493183135986
    4. ' numbers' → logprob: -2.9610493183135986
    5. 'n' → logprob: -3.0860493183135986
    6. ' ent' → logprob: -3.4610493183135986
    7. 'liste' → logprob: -4.086049556732178
    8. 'ligne' → logprob: -4.086049556732178
    9. ' s' → logprob: -4.211049556732178
    10. ' integers' → logprob: -4.336049556732178

Token 60: '#' (ID: 2)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3433748185634613
    2. 'ent' → logprob: -2.593374729156494
    3. 'n' → logprob: -2.843374729156494
    4. 'l' → logprob: -2.968374729156494
    5. 'numbers' → logprob: -3.718374729156494
    6. 'tokens' → logprob: -4.218374729156494
    7. 'values' → logprob: -4.718374729156494
    8. 't' → logprob: -4.843374729156494
    9. 'ligne' → logprob: -4.843374729156494
    10. 'val' → logprob: -5.343374729156494

Token 61: ' split' (ID: 12648)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.64664626121521
    2. 'ent' → logprob: -1.89664626121521
    3. ' numbers' → logprob: -2.14664626121521
    4. 'values' → logprob: -3.39664626121521
    5. ' ent' → logprob: -3.52164626121521
    6. 'l' → logprob: -3.77164626121521
    7. 'val' → logprob: -4.396646499633789
    8. 'lst' → logprob: -4.396646499633789
    9. 'nums' → logprob: -4.646646499633789
    10. 'n' → logprob: -4.771646499633789

Token 62: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.006480169016867876
    2. '(' → logprob: -5.1314802169799805
    3. '('' → logprob: -7.6314802169799805
    4. '("' → logprob: -10.00648021697998
    5. ' ()' → logprob: -11.63148021697998
    6. '().' → logprob: -11.75648021697998
    7. '()]' → logprob: -14.13148021697998
    8. '())' → logprob: -14.25648021697998
    9. '（）' → logprob: -14.25648021697998
    10. '(),' → logprob: -14.38148021697998

Token 63: ' décou' (ID: 68302)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02219085581600666
    2. '(' → logprob: -3.897190809249878
    3. '('' → logprob: -6.897191047668457
    4. '().' → logprob: -8.272191047668457
    5. ' ()' → logprob: -8.272191047668457
    6. '("' → logprob: -9.647191047668457
    7. ' (' → logprob: -12.147191047668457
    8. '()

' → logprob: -12.272191047668457
    9. '()]' → logprob: -12.397191047668457
    10. '("")' → logprob: -12.522191047668457

Token 64: 'pe' (ID: 424)
  Prédit: 'pe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.02834450639784336
    2. 'p' → logprob: -3.6533443927764893
    3. 'page' → logprob: -7.153344631195068
    4. 'пе' → logprob: -8.40334415435791
    5. 'pé' → logprob: -8.52834415435791
    6. 'per' → logprob: -8.65334415435791
    7. 'pera' → logprob: -8.90334415435791
    8. '```' → logprob: -8.90334415435791
    9. 'п' → logprob: -9.65334415435791
    10. '#' → logprob: -10.40334415435791

Token 65: ' cette' (ID: 7696)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.024022284895181656
    2. '('' → logprob: -4.649022102355957
    3. '(' → logprob: -5.149022102355957
    4. ' ()' → logprob: -5.399022102355957
    5. ' la' → logprob: -5.899022102355957
    6. ' ' → logprob: -8.274022102355957
    7. ' (' → logprob: -8.399022102355957
    8. ' )' → logprob: -9.399022102355957
    9. 'la' → logprob: -9.399022102355957
    10. '<|end|>' → logprob: -9.649022102355957

Token 66: ' chaîne' (ID: 89288)
  Prédit: ' chaîne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaîne' → logprob: -0.11088279634714127
    2. '()' → logprob: -3.3608827590942383
    3. 's' → logprob: -4.110882759094238
    4. ' ' → logprob: -4.235882759094238
    5. ' ligne' → logprob: -4.610882759094238
    6. 'chaine' → logprob: -4.610882759094238
    7. ' chaine' → logprob: -4.860882759094238
    8. 'ligne' → logprob: -6.485882759094238
    9. ' string' → logprob: -6.610882759094238
    10. '('' → logprob: -6.735882759094238

Token 67: ' en' (ID: 469)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.002740089315921068
    2. '('' → logprob: -6.502739906311035
    3. '[' → logprob: -8.502739906311035
    4. 'au' → logprob: -8.877739906311035
    5. '[]' → logprob: -9.002739906311035
    6. '(' → logprob: -9.127739906311035
    7. ' ()' → logprob: -9.252739906311035
    8. '()[' → logprob: -9.627739906311035
    9. ')' → logprob: -9.752739906311035
    10. '("' → logprob: -10.127739906311035

Token 68: ' une' (ID: 2463)
  Prédit: ' une'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' une' → logprob: -0.020969707518815994
    2. 'une' → logprob: -4.020969867706299
    3. ''une' → logprob: -7.520969867706299
    4. ' liste' → logprob: -7.645969867706299
    5. ' espaces' → logprob: -7.895969867706299
    6. ' des' → logprob: -8.14596939086914
    7. 'liste' → logprob: -8.14596939086914
    8. 'la' → logprob: -9.02096939086914
    9. 's' → logprob: -9.14596939086914
    10. ' la' → logprob: -9.27096939086914

Token 69: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.025415103882551193
    2. 'liste' → logprob: -3.7754151821136475
    3. ' list' → logprob: -6.650414943695068
    4. 'list' → logprob: -7.525414943695068
    5. 's' → logprob: -8.900415420532227
    6. 'Liste' → logprob: -9.650415420532227
    7. ' listes' → logprob: -9.775415420532227
    8. ' Liste' → logprob: -9.900415420532227
    9. ' lista' → logprob: -11.400415420532227
    10. 'lista' → logprob: -12.900415420532227

Token 70: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2493566274642944
    2. 's' → logprob: -1.3743566274642944
    3. '[str' → logprob: -2.124356746673584
    4. '[]' → logprob: -2.374356746673584
    5. 'n' → logprob: -3.249356746673584
    6. '()' → logprob: -3.374356746673584
    7. ' de' → logprob: -3.749356746673584
    8. ' ' → logprob: -3.874356746673584
    9. 'tokens' → logprob: -3.874356746673584
    10. '[n' → logprob: -3.999356746673584

Token 71: ' sous' (ID: 14487)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.008271644823253155
    2. 'cha' → logprob: -6.25827169418335
    3. ' chain' → logprob: -6.25827169418335
    4. 'chain' → logprob: -6.88327169418335
    5. 'strings' → logprob: -7.13327169418335
    6. 'str' → logprob: -7.13327169418335
    7. ' strings' → logprob: -7.38327169418335
    8. 's' → logprob: -8.008271217346191
    9. ' chaîne' → logprob: -8.258271217346191
    10. 'chaine' → logprob: -9.008271217346191

Token 72: '-cha' (ID: 163177)
  Prédit: ' chaînes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaînes' → logprob: -0.5961892008781433
    2. 'cha' → logprob: -1.221189260482788
    3. 'chain' → logprob: -2.471189260482788
    4. '-cha' → logprob: -3.221189260482788
    5. '   ' → logprob: -4.721189022064209
    6. '_' → logprob: -5.471189022064209
    7. 'ch' → logprob: -5.971189022064209
    8. '-chain' → logprob: -6.346189022064209
    9. '_ch' → logprob: -6.471189022064209
    10. '```' → logprob: -6.596189022064209

Token 73: 'înes' (ID: 171517)
  Prédit: 'înes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'înes' → logprob: -0.07701698690652847
    2. 'î' → logprob: -2.702017068862915
    3. 'ines' → logprob: -6.077016830444336
    4. 'nes' → logprob: -6.827016830444336
    5. '   ' → logprob: -7.077016830444336
    6. 'Î' → logprob: -7.327016830444336
    7. '	' → logprob: -7.577016830444336
    8. '```' → logprob: -7.702016830444336
    9. 'ı' → logprob: -8.952016830444336
    10. ' nes' → logprob: -9.202016830444336

Token 74: ' à' (ID: 1221)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.9302278161048889
    2. 's' → logprob: -1.1802277565002441
    3. 'n' → logprob: -2.430227756500244
    4. ',' → logprob: -3.055227756500244
    5. '()' → logprob: -3.555227756500244
    6. '[' → logprob: -3.555227756500244
    7. ')' → logprob: -3.680227756500244
    8. ' =' → logprob: -4.680227756500244
    9. ' tokens' → logprob: -4.805227756500244
    10. '```' → logprob: -4.805227756500244

Token 75: ' chaque' (ID: 21194)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -0.6662548184394836
    2. ' partir' → logprob: -1.0412547588348389
    3. 'la' → logprob: -3.666254758834839
    4. 'l' → logprob: -4.416254997253418
    5. ' chaque' → logprob: -4.416254997253418
    6. 'u' → logprob: -4.541254997253418
    7. 'p' → logprob: -4.666254997253418
    8. '<|end|>' → logprob: -4.666254997253418
    9. '```' → logprob: -5.416254997253418
    10. 's' → logprob: -5.541254997253418

Token 76: ' espace' (ID: 66004)
  Prédit: ' espace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' espace' → logprob: -0.38377705216407776
    2. ''espace' → logprob: -1.3837770223617554
    3. ' espaces' → logprob: -4.008777141571045
    4. ' ' → logprob: -4.258777141571045
    5. ''' → logprob: -4.383777141571045
    6. ''esp' → logprob: -4.508777141571045
    7. 'es' → logprob: -5.758777141571045
    8. '’espace' → logprob: -5.758777141571045
    9. '  ' → logprob: -6.383777141571045
    10. ' '' → logprob: -6.508777141571045

Token 77: '
' (ID: 198)
  Prédit: 'tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tokens' → logprob: -0.23715777695178986
    2. 's' → logprob: -2.6121578216552734
    3. 'numbers' → logprob: -2.8621578216552734
    4. 'n' → logprob: -3.7371578216552734
    5. 'lst' → logprob: -4.612157821655273
    6. ',' → logprob: -5.112157821655273
    7. ' tokens' → logprob: -5.112157821655273
    8. ')' → logprob: -5.362157821655273
    9. 'l' → logprob: -5.362157821655273
    10. 't' → logprob: -6.112157821655273

Token 78: '#' (ID: 2)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.6798310875892639
    2. 'ent' → logprob: -1.4298310279846191
    3. 'n' → logprob: -2.554831027984619
    4. 'l' → logprob: -3.304831027984619
    5. 'lst' → logprob: -3.929831027984619
    6. 's' → logprob: -4.054831027984619
    7. 'values' → logprob: -4.304831027984619
    8. 'val' → logprob: -4.429831027984619
    9. 'a' → logprob: -4.679831027984619
    10. 'tokens' → logprob: -4.804831027984619

Token 79: ' map' (ID: 4014)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.4003618955612183
    2. 'lst' → logprob: -1.7753618955612183
    3. ' lst' → logprob: -2.025362014770508
    4. 'l' → logprob: -2.400362014770508
    5. ' numbers' → logprob: -2.400362014770508
    6. 'liste' → logprob: -3.275362014770508
    7. 'ent' → logprob: -3.525362014770508
    8. ' l' → logprob: -3.900362014770508
    9. 'a' → logprob: -3.900362014770508
    10. 'arr' → logprob: -4.275362014770508

Token 80: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00738063920289278
    2. '(int' → logprob: -5.007380485534668
    3. '(lambda' → logprob: -7.507380485534668
    4. '(
' → logprob: -9.257380485534668
    5. '(str' → logprob: -11.507380485534668
    6. '(

' → logprob: -12.132380485534668
    7. '(list' → logprob: -14.382380485534668
    8. '[int' → logprob: -14.382380485534668
    9. '(float' → logprob: -14.757380485534668
    10. '(f' → logprob: -14.882380485534668

Token 81: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04487060755491257
    2. ')' → logprob: -3.169870615005493
    3. ',input' → logprob: -7.419870376586914
    4. ',)' → logprob: -8.169870376586914
    5. ',n' → logprob: -8.169870376586914
    6. ' ,' → logprob: -8.419870376586914
    7. '(' → logprob: -8.544870376586914
    8. ',int' → logprob: -9.794870376586914
    9. '(n' → logprob: -10.169870376586914
    10. ',
' → logprob: -10.294870376586914

Token 82: ' ...)' (ID: 100545)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6227234601974487
    2. 'input' → logprob: -0.8727234601974487
    3. ')' → logprob: -3.2477235794067383
    4. ' )' → logprob: -5.372723579406738
    5. ' n' → logprob: -7.122723579406738
    6. '(input' → logprob: -7.622723579406738
    7. 'n' → logprob: -7.622723579406738
    8. ',input' → logprob: -9.497723579406738
    9. '<|end|>' → logprob: -9.997723579406738
    10. 'split' → logprob: -10.122723579406738

Token 83: ' applique' (ID: 180579)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6682341694831848
    2. '(' → logprob: -1.16823410987854
    3. '(input' → logprob: -2.29323410987854
    4. '(n' → logprob: -3.54323410987854
    5. '(int' → logprob: -4.168234348297119
    6. '(map' → logprob: -4.918234348297119
    7. '(list' → logprob: -5.043234348297119
    8. '(
' → logprob: -5.293234348297119
    9. '(split' → logprob: -5.918234348297119
    10. '(s' → logprob: -6.168234348297119

Token 84: ' la' (ID: 557)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4648880362510681
    2. '(int' → logprob: -1.464888095855713
    3. ' int' → logprob: -1.964888095855713
    4. '=int' → logprob: -9.089887619018555
    5. '<int' → logprob: -9.339887619018555
    6. '	int' → logprob: -9.714887619018555
    7. ')' → logprob: -9.714887619018555
    8. '(lambda' → logprob: -10.089887619018555
    9. '(' → logprob: -10.339887619018555
    10. ' la' → logprob: -10.464887619018555

Token 85: ' fonction' (ID: 17610)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4177496135234833
    2. ' int' → logprob: -1.1677496433258057
    3. 'fonction' → logprob: -4.042749404907227
    4. ' fonction' → logprob: -4.417749404907227
    5. ' conversion' → logprob: -7.667749404907227
    6. ' function' → logprob: -8.542749404907227
    7. ' ' → logprob: -10.792749404907227
    8. '(int' → logprob: -11.042749404907227
    9. 'function' → logprob: -11.167749404907227
    10. 'ent' → logprob: -11.542749404907227

Token 86: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.05946803092956543
    2. ' int' → logprob: -3.4344680309295654
    3. '(int' → logprob: -3.8094680309295654
    4. '<|end|>' → logprob: -6.0594682693481445
    5. '=int' → logprob: -7.8094682693481445
    6. '```' → logprob: -8.559468269348145
    7. '<int' → logprob: -8.684468269348145
    8. ']int' → logprob: -9.934468269348145
    9. '[int' → logprob: -10.059468269348145
    10. '	int' → logprob: -10.184468269348145

Token 87: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.38504308462142944
    2. '(' → logprob: -1.2600431442260742
    3. '()' → logprob: -4.135043144226074
    4. '(lambda' → logprob: -5.260043144226074
    5. ' à' → logprob: -5.385043144226074
    6. '(
' → logprob: -6.760043144226074
    7. 'sur' → logprob: -6.760043144226074
    8. 'à' → logprob: -6.760043144226074
    9. '```' → logprob: -6.885043144226074
    10. ' )' → logprob: -7.260043144226074

Token 88: ' chaque' (ID: 21194)
  Prédit: ' chaque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' chaque' → logprob: -0.34201961755752563
    2. ' chacune' → logprob: -1.7170195579528809
    3. ' each' → logprob: -2.592019557952881
    4. 'each' → logprob: -3.967019557952881
    5. 'cha' → logprob: -4.467019557952881
    6. 'ch' → logprob: -6.342019557952881
    7. ' chacun' → logprob: -7.342019557952881
    8. 'Chaque' → logprob: -7.717019557952881
    9. 'l' → logprob: -7.842019557952881
    10. ' l' → logprob: -8.342020034790039

Token 89: ' sous' (ID: 14487)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.016398433595895767
    2. ' élément' → logprob: -4.1413984298706055
    3. 's' → logprob: -9.141398429870605
    4. 'element' → logprob: -9.266398429870605
    5. ' sous' → logprob: -9.391398429870605
    6. ' element' → logprob: -10.766398429870605
    7. 'él' → logprob: -11.391398429870605
    8. ' éléments' → logprob: -11.891398429870605
    9. 'm' → logprob: -12.016398429870605
    10. ' ' → logprob: -12.141398429870605

Token 90: '-cha' (ID: 163177)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7081539630889893
    2. ')' → logprob: -0.8331539630889893
    3. '_' → logprob: -3.4581539630889893
    4. '()' → logprob: -4.58315372467041
    5. 'élé' → logprob: -4.83315372467041
    6. '-' → logprob: -4.83315372467041
    7. 's' → logprob: -5.95815372467041
    8. '_parent' → logprob: -6.58315372467041
    9. ',' → logprob: -6.83315372467041
    10. '(
' → logprob: -6.95815372467041

Token 91: 'îne' (ID: 55188)
  Prédit: 'î'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'î' → logprob: -0.050257399678230286
    2. 'îne' → logprob: -3.300257444381714
    3. 'â' → logprob: -5.550257205963135
    4. 'i' → logprob: -5.800257205963135
    5. ' î' → logprob: -6.675257205963135
    6. 'ï' → logprob: -7.175257205963135
    7. 'înes' → logprob: -7.925257205963135
    8. '   ' → logprob: -8.175257682800293
    9. 'ïne' → logprob: -8.300257682800293
    10. 'ı' → logprob: -8.425257682800293

Token 92: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6197936534881592
    2. ')' → logprob: -0.8697936534881592
    3. 's' → logprob: -3.994793653488159
    4. '(
' → logprob: -4.369793891906738
    5. ' )' → logprob: -5.869793891906738
    6. '(n' → logprob: -5.994793891906738
    7. 'n' → logprob: -5.994793891906738
    8. '()' → logprob: -6.869793891906738
    9. ')
' → logprob: -7.369793891906738
    10. 'a' → logprob: -8.369793891906738

Token 93: ' transform' (ID: 7118)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24091698229312897
    2. ' )' → logprob: -2.3659169673919678
    3. ' ' → logprob: -2.3659169673919678
    4. ' n' → logprob: -4.490917205810547
    5. ' list' → logprob: -5.240917205810547
    6. 'n' → logprob: -5.365917205810547
    7. 'list' → logprob: -6.865917205810547
    8. 's' → logprob: -7.615917205810547
    9. ' l' → logprob: -8.115917205810547
    10. '(' → logprob: -8.240917205810547

Token 94: 'ant' (ID: 493)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.07377259433269501
    2. ')' → logprob: -2.948772668838501
    3. 'a' → logprob: -4.198772430419922
    4. 'ant' → logprob: -6.448772430419922
    5. 'é' → logprob: -7.948772430419922
    6. 's' → logprob: -8.323772430419922
    7. 'r' → logprob: -8.323772430419922
    8. 'er' → logprob: -8.573772430419922
    9. 'u' → logprob: -8.823772430419922
    10. '(' → logprob: -8.823772430419922

Token 95: ' chaque' (ID: 21194)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2514645755290985
    2. '(' → logprob: -1.876464605331421
    3. ' )' → logprob: -3.376464605331421
    4. 's' → logprob: -3.626464605331421
    5. 'n' → logprob: -6.626464366912842
    6. ',' → logprob: -6.751464366912842
    7. ' ' → logprob: -6.751464366912842
    8. '(n' → logprob: -6.876464366912842
    9. ' la' → logprob: -7.376464366912842
    10. ' (' → logprob: -7.876464366912842

Token 96: ' élément' (ID: 99627)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.35647284984588623
    2. ')' → logprob: -1.3564728498458862
    3. ',' → logprob: -4.231472969055176
    4. ' )' → logprob: -4.981472969055176
    5. '(' → logprob: -5.106472969055176
    6. 'élé' → logprob: -5.231472969055176
    7. '_' → logprob: -6.356472969055176
    8. 'e' → logprob: -7.106472969055176
    9. ' ,' → logprob: -7.231472969055176
    10. ' (' → logprob: -7.356472969055176

Token 97: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.026550495997071266
    2. ')' → logprob: -4.02655029296875
    3. 's' → logprob: -5.02655029296875
    4. ',' → logprob: -6.90155029296875
    5. '(n' → logprob: -7.90155029296875
    6. '(
' → logprob: -9.02655029296875
    7. '(s' → logprob: -9.90155029296875
    8. ' )' → logprob: -10.02655029296875
    9. 'n' → logprob: -10.65155029296875
    10. ' (' → logprob: -10.77655029296875

Token 98: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.04396362230181694
    2. 'la' → logprob: -4.043963432312012
    3. 'l' → logprob: -4.418963432312012
    4. 's' → logprob: -5.543963432312012
    5. ' l' → logprob: -5.543963432312012
    6. ' ' → logprob: -6.168963432312012
    7. 'a' → logprob: -7.168963432312012
    8. ' liste' → logprob: -7.293963432312012
    9. ' a' → logprob: -8.293963432312012
    10. ' )' → logprob: -8.543963432312012

Token 99: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1609494984149933
    2. 'liste' → logprob: -2.160949468612671
    3. ' ' → logprob: -4.66094970703125
    4. 'l' → logprob: -4.66094970703125
    5. ')' → logprob: -5.53594970703125
    6. 's' → logprob: -5.91094970703125
    7. 'list' → logprob: -6.28594970703125
    8. ' ligne' → logprob: -6.53594970703125
    9. ' )' → logprob: -6.91094970703125
    10. ' list' → logprob: -7.41094970703125

Token 100: ' en' (ID: 469)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5538842082023621
    2. '(' → logprob: -0.9288842082023621
    3. 's' → logprob: -4.178884029388428
    4. ' )' → logprob: -4.803884029388428
    5. '(n' → logprob: -5.928884029388428
    6. '(
' → logprob: -6.803884029388428
    7. 'n' → logprob: -7.178884029388428
    8. '()' → logprob: -7.553884029388428
    9. ',' → logprob: -7.678884029388428
    10. ')n' → logprob: -8.928884506225586

Token 101: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8442807197570801
    2. ' la' → logprob: -1.34428071975708
    3. 's' → logprob: -2.46928071975708
    4. ' l' → logprob: -3.09428071975708
    5. 'l' → logprob: -3.34428071975708
    6. ' )' → logprob: -3.84428071975708
    7. ')' → logprob: -3.84428071975708
    8. 'n' → logprob: -4.09428071975708
    9. ' un' → logprob: -4.09428071975708
    10. ' une' → logprob: -4.46928071975708

Token 102: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28236091136932373
    2. 'n' → logprob: -1.9073609113693237
    3. 's' → logprob: -2.9073610305786133
    4. ' )' → logprob: -3.6573610305786133
    5. '(' → logprob: -5.282361030578613
    6. ' n' → logprob: -5.782361030578613
    7. 'a' → logprob: -6.657361030578613
    8. 'x' → logprob: -6.657361030578613
    9. 'r' → logprob: -6.782361030578613
    10. '[' → logprob: -7.407361030578613

Token 103: '#' (ID: 2)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10190027952194214
    2. 'a' → logprob: -3.101900339126587
    3. 's' → logprob: -4.351900100708008
    4. 'l' → logprob: -4.601900100708008
    5. 'r' → logprob: -5.351900100708008
    6. 'numbers' → logprob: -5.351900100708008
    7. 't' → logprob: -6.226900100708008
    8. ' n' → logprob: -6.226900100708008
    9. 'v' → logprob: -6.476900100708008
    10. 'arr' → logprob: -6.601900100708008

Token 104: ' list' (ID: 1562)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.2979921102523804
    2. ' numbers' → logprob: -1.6729921102523804
    3. 's' → logprob: -2.17299222946167
    4. 'l' → logprob: -2.17299222946167
    5. ' lst' → logprob: -2.92299222946167
    6. 'lst' → logprob: -3.04799222946167
    7. 'n' → logprob: -3.17299222946167
    8. 'arr' → logprob: -3.79799222946167
    9. ' l' → logprob: -4.04799222946167
    10. 'a' → logprob: -4.04799222946167

Token 105: '(...)' (ID: 96375)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0019313741941004992
    2. '()' → logprob: -6.751931190490723
    3. '(map' → logprob: -7.376931190490723
    4. '(...)' → logprob: -10.001931190490723
    5. '(convert' → logprob: -11.126931190490723
    6. '(
' → logprob: -11.376931190490723
    7. '([' → logprob: -11.751931190490723
    8. '([...' → logprob: -12.126931190490723
    9. '([]' → logprob: -12.251931190490723
    10. '(com' → logprob: -12.251931190490723

Token 106: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005559590179473162
    2. 's' → logprob: -5.88055944442749
    3. '(
' → logprob: -7.25555944442749
    4. '()' → logprob: -7.38055944442749
    5. '(s' → logprob: -7.88055944442749
    6. '(n' → logprob: -8.130559921264648
    7. '([' → logprob: -9.380559921264648
    8. ' (' → logprob: -9.380559921264648
    9. ')' → logprob: -9.630559921264648
    10. '(int' → logprob: -9.630559921264648

Token 107: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017923936247825623
    2. 'e' → logprob: -6.5017924308776855
    3. '(e' → logprob: -9.626791954040527
    4. 'er' → logprob: -9.751791954040527
    5. '(
' → logprob: -9.751791954040527
    6. 'é' → logprob: -10.376791954040527
    7. '()' → logprob: -11.251791954040527
    8. 'a' → logprob: -11.876791954040527
    9. 'u' → logprob: -11.876791954040527
    10. '(

' → logprob: -12.001791954040527

Token 108: ' l' (ID: 305)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2042025476694107
    2. '(map' → logprob: -1.7042025327682495
    3. 'map' → logprob: -6.204202651977539
    4. '(
' → logprob: -8.204202651977539
    5. '(m' → logprob: -9.704202651977539
    6. 'm' → logprob: -9.829202651977539
    7. ' (' → logprob: -10.204202651977539
    8. '(split' → logprob: -10.329202651977539
    9. '(int' → logprob: -10.454202651977539
    10. '(str' → logprob: -10.704202651977539

Token 109: ''objet' (ID: 124566)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19104298949241638
    2. 'a' → logprob: -1.9410430192947388
    3. 'es' → logprob: -3.941042900085449
    4. 'e' → logprob: -4.816042900085449
    5. ''' → logprob: -6.941042900085449
    6. '(a' → logprob: -8.06604290008545
    7. ''espace' → logprob: -8.06604290008545
    8. '(e' → logprob: -8.56604290008545
    9. '()' → logprob: -9.06604290008545
    10. '('' → logprob: -9.19104290008545

Token 110: ' map' (ID: 4014)
  Prédit: '(map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.2074057012796402
    2. 'map' → logprob: -2.5824058055877686
    3. ' map' → logprob: -2.5824058055877686
    4. '_map' → logprob: -4.0824055671691895
    5. '<|end|>' → logprob: -4.3324055671691895
    6. '(' → logprob: -6.7074055671691895
    7. 'm' → logprob: -6.7074055671691895
    8. ',map' → logprob: -7.3324055671691895
    9. '	map' → logprob: -7.8324055671691895
    10. ' ' → logprob: -8.707406044006348

Token 111: ' en' (ID: 469)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00024882311117835343
    2. '(
' → logprob: -9.500248908996582
    3. '[' → logprob: -9.625248908996582
    4. ')' → logprob: -10.125248908996582
    5. '()' → logprob: -11.500248908996582
    6. ' (' → logprob: -11.625248908996582
    7. '```' → logprob: -11.625248908996582
    8. '<|end|>' → logprob: -11.875248908996582
    9. '(

' → logprob: -12.625248908996582
    10. '>' → logprob: -12.875248908996582

Token 112: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6232898831367493
    2. ' une' → logprob: -0.8732898831367493
    3. ' liste' → logprob: -4.123290061950684
    4. ' []' → logprob: -4.498290061950684
    5. 'une' → logprob: -4.998290061950684
    6. '[' → logprob: -5.873290061950684
    7. ' un' → logprob: -6.373290061950684
    8. ' la' → logprob: -6.373290061950684
    9. ' list' → logprob: -6.748290061950684
    10. ' [' → logprob: -6.998290061950684

Token 113: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.04388046637177467
    2. 'liste' → logprob: -3.9188804626464844
    3. ' list' → logprob: -4.543880462646484
    4. ' ' → logprob: -5.418880462646484
    5. '[' → logprob: -5.543880462646484
    6. 'list' → logprob: -6.043880462646484
    7. ' [' → logprob: -7.543880462646484
    8. ' []' → logprob: -7.918880462646484
    9. ' espace' → logprob: -8.668880462646484
    10. '[]' → logprob: -8.918880462646484

Token 114: ' réelle' (ID: 136948)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2521125376224518
    2. 's' → logprob: -2.252112627029419
    3. 'numbers' → logprob: -4.00211238861084
    4. 'x' → logprob: -4.12711238861084
    5. 'a' → logprob: -4.50211238861084
    6. '(' → logprob: -4.50211238861084
    7. '[' → logprob: -4.87711238861084
    8. 'l' → logprob: -5.25211238861084
    9. '(numbers' → logprob: -5.50211238861084
    10. '(
' → logprob: -5.50211238861084

Token 115: ' d' (ID: 272)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.19638635218143463
    2. 's' → logprob: -2.5713863372802734
    3. '[' → logprob: -3.1963863372802734
    4. ',' → logprob: -4.571386337280273
    5. 'a' → logprob: -5.071386337280273
    6. ' n' → logprob: -5.071386337280273
    7. 'x' → logprob: -5.196386337280273
    8. '(' → logprob: -5.446386337280273
    9. ')' → logprob: -5.446386337280273
    10. 'l' → logprob: -6.321386337280273

Token 116: ''ent' (ID: 53422)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7611554861068726
    2. ''ent' → logprob: -1.2611554861068726
    3. ' ' → logprob: -2.886155605316162
    4. 'i' → logprob: -2.886155605316162
    5. ' e' → logprob: -3.636155605316162
    6. ' ent' → logprob: -3.886155605316162
    7. ''' → logprob: -3.886155605316162
    8. ''espace' → logprob: -4.511155605316162
    9. 'es' → logprob: -4.636155605316162
    10. 'ent' → logprob: -4.636155605316162

Token 117: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.010734505951404572
    2. 'i' → logprob: -4.635734558105469
    3. 'ières' → logprob: -7.010734558105469
    4. 'ier' → logprob: -10.635734558105469
    5. 'ière' → logprob: -11.510734558105469
    6. ' i' → logprob: -11.510734558105469
    7. 'ié' → logprob: -11.510734558105469
    8. '```' → logprob: -11.760734558105469
    9. 'ers' → logprob: -12.635734558105469
    10. '	i' → logprob: -13.010734558105469

Token 118: ',' (ID: 11)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2501622438430786
    2. 's' → logprob: -1.7501622438430786
    3. ' n' → logprob: -4.500162124633789
    4. 'a' → logprob: -4.625162124633789
    5. '[' → logprob: -5.250162124633789
    6. ' 
' → logprob: -5.250162124633789
    7. 'x' → logprob: -5.625162124633789
    8. 'i' → logprob: -6.375162124633789
    9. 't' → logprob: -6.500162124633789
    10. 'r' → logprob: -6.875162124633789

Token 119: ' que' (ID: 661)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.975740373134613
    2. ' ' → logprob: -0.975740373134613
    3. ')' → logprob: -2.475740432739258
    4. ' n' → logprob: -2.975740432739258
    5. 'n' → logprob: -3.225740432739258
    6. ' [' → logprob: -3.850740432739258
    7. 's' → logprob: -3.975740432739258
    8. ' )' → logprob: -4.725740432739258
    9. ' ]' → logprob: -5.600740432739258
    10. ']' → logprob: -5.725740432739258

Token 120: ' l' (ID: 305)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.27172693610191345
    2. 'n' → logprob: -2.2717268466949463
    3. ' on' → logprob: -2.7717268466949463
    4. ' l' → logprob: -3.7717268466949463
    5. ' ' → logprob: -4.646727085113525
    6. '<|end|>' → logprob: -4.771727085113525
    7. 'on' → logprob: -5.771727085113525
    8. 'b' → logprob: -6.021727085113525
    9. 's' → logprob: -6.146727085113525
    10. ' ' → logprob: -6.271727085113525

Token 121: ''on' (ID: 25812)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.249407559633255
    2. 'e' → logprob: -2.4994075298309326
    3. ''utilisateur' → logprob: -2.6244075298309326
    4. ''on' → logprob: -3.6244075298309326
    5. 'es' → logprob: -4.999407768249512
    6. ' on' → logprob: -5.249407768249512
    7. 's' → logprob: -5.249407768249512
    8. 'u' → logprob: -5.999407768249512
    9. '’utilisateur' → logprob: -5.999407768249512
    10. 'on' → logprob: -6.124407768249512

Token 122: ' stock' (ID: 6546)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.274497151374817
    2. ' peut' → logprob: -1.774497151374817
    3. '=' → logprob: -2.3994970321655273
    4. ' =' → logprob: -2.7744970321655273
    5. ' peux' → logprob: -2.7744970321655273
    6. ' continue' → logprob: -3.0244970321655273
    7. 's' → logprob: -3.0244970321655273
    8. '_' → logprob: -3.0244970321655273
    9. ' pourra' → logprob: -3.2744970321655273
    10. ' souhaite' → logprob: -3.5244970321655273

Token 123: 'e' (ID: 68)
  Prédit: 'é'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'é' → logprob: -0.3024669587612152
    2. '_' → logprob: -2.427466869354248
    3. 'ée' → logprob: -2.552466869354248
    4. 'e' → logprob: -3.177466869354248
    5. 'er' → logprob: -3.552466869354248
    6. '=' → logprob: -4.427466869354248
    7. ' =' → logprob: -4.552466869354248
    8. ' _' → logprob: -8.052467346191406
    9. 'u' → logprob: -8.177467346191406
    10. '[' → logprob: -8.177467346191406

Token 124: ' dans' (ID: 2671)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02570827677845955
    2. '_' → logprob: -4.025708198547363
    3. 's' → logprob: -5.525708198547363
    4. ' (' → logprob: -6.900708198547363
    5. '[' → logprob: -7.400708198547363
    6. '()' → logprob: -7.650708198547363
    7. ' ' → logprob: -8.150708198547363
    8. '(
' → logprob: -8.275708198547363
    9. ')' → logprob: -8.900708198547363
    10. ',' → logprob: -9.525708198547363

Token 125: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6295027136802673
    2. ' la' → logprob: -1.129502773284912
    3. ' l' → logprob: -2.879502773284912
    4. ' n' → logprob: -3.754502773284912
    5. ' a' → logprob: -4.129502773284912
    6. ' lst' → logprob: -4.504502773284912
    7. ' t' → logprob: -4.754502773284912
    8. ' une' → logprob: -5.504502773284912
    9. ' data' → logprob: -5.504502773284912
    10. ' ' → logprob: -5.629502773284912

Token 126: ' variable' (ID: 11076)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.9745056629180908
    2. ' tableau' → logprob: -1.9745056629180908
    3. ' ' → logprob: -2.224505662918091
    4. 'a' → logprob: -2.349505662918091
    5. 'liste' → logprob: -2.724505662918091
    6. 'table' → logprob: -2.724505662918091
    7. 'n' → logprob: -2.974505662918091
    8. ' liste' → logprob: -3.099505662918091
    9. 's' → logprob: -3.224505662918091
    10. 'tab' → logprob: -3.349505662918091

Token 127: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2119771242141724
    2. ' lst' → logprob: -1.8369771242141724
    3. ' l' → logprob: -2.086977005004883
    4. 'l' → logprob: -2.711977005004883
    5. 'ent' → logprob: -2.961977005004883
    6. 'a' → logprob: -2.961977005004883
    7. ' data' → logprob: -3.336977005004883
    8. ' numbers' → logprob: -3.711977005004883
    9. 's' → logprob: -3.711977005004883
    10. 'numbers' → logprob: -3.961977005004883

Token 128: '
' (ID: 198)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.01970522664487362
    2. '[' → logprob: -4.144705295562744
    3. '(' → logprob: -6.894705295562744
    4. ' a' → logprob: -7.144705295562744
    5. 's' → logprob: -7.269705295562744
    6. ' =' → logprob: -8.144704818725586
    7. ' ' → logprob: -8.644704818725586
    8. 'n' → logprob: -8.644704818725586
    9. '[a' → logprob: -9.144704818725586
    10. ' (' → logprob: -9.394704818725586

Token 129: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00041518008220009506
    2. ' a' → logprob: -7.875415325164795
    3. ' ' → logprob: -11.250414848327637
    4. 'n' → logprob: -11.500414848327637
    5. ' 
' → logprob: -12.125414848327637
    6. '[' → logprob: -13.375414848327637
    7. 's' → logprob: -13.875414848327637
    8. ',' → logprob: -14.625414848327637
    9. '_a' → logprob: -14.625414848327637
    10. '  
' → logprob: -14.750414848327637

Token 130: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02327110432088375
    2. '=' → logprob: -3.773271083831787
    3. ' ' → logprob: -11.648271560668945
    4. '[' → logprob: -12.148271560668945
    5. 's' → logprob: -13.273271560668945
    6. '.' → logprob: -13.398271560668945
    7. '_' → logprob: -13.398271560668945
    8. ' =[' → logprob: -13.648271560668945
    9. ' =
' → logprob: -13.773271560668945
    10. ',' → logprob: -14.023271560668945

Token 131: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.01815006136894226
    2. ' list' → logprob: -4.0181498527526855
    3. 'li' → logprob: -17.018150329589844
    4. 'List' → logprob: -17.893150329589844
    5. 'l' → logprob: -18.518150329589844
    6. 'lis' → logprob: -18.893150329589844
    7. 'int' → logprob: -19.018150329589844
    8. '=list' → logprob: -19.018150329589844
    9. '[list' → logprob: -19.768150329589844
    10. 'lst' → logprob: -19.768150329589844

Token 132: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04843394085764885
    2. '(map' → logprob: -3.298434019088745
    3. '(int' → logprob: -4.923433780670166
    4. '(input' → logprob: -5.798433780670166
    5. '(
' → logprob: -11.798434257507324
    6. '(split' → logprob: -12.173434257507324
    7. ' (' → logprob: -12.173434257507324
    8. '(s' → logprob: -12.423434257507324
    9. '(

' → logprob: -12.673434257507324
    10. '(in' → logprob: -13.548434257507324

Token 133: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.03372833877801895
    2. '(' → logprob: -3.4087283611297607
    3. '<int' → logprob: -9.78372859954834
    4. '(
' → logprob: -11.90872859954834
    5. 'int' → logprob: -12.40872859954834
    6. ' (' → logprob: -12.40872859954834
    7. '(input' → logprob: -12.65872859954834
    8. '[int' → logprob: -12.78372859954834
    9. ']int' → logprob: -13.78372859954834
    10. '(str' → logprob: -14.15872859954834

Token 134: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003908607643097639
    2. '(' → logprob: -6.003908634185791
    3. ',input' → logprob: -7.003908634185791
    4. 'input' → logprob: -7.878908634185791
    5. ',' → logprob: -9.128908157348633
    6. ' (' → logprob: -10.503908157348633
    7. '(
' → logprob: -12.753908157348633
    8. ' input' → logprob: -12.878908157348633
    9. '=input' → logprob: -14.003908157348633
    10. 's' → logprob: -14.628908157348633

Token 135: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005373560823500156
    2. ' input' → logprob: -5.255373477935791
    3. '(input' → logprob: -8.88037395477295
    4. ',input' → logprob: -15.50537395477295
    5. ' ' → logprob: -15.88037395477295
    6. '	input' → logprob: -16.255373001098633
    7. '=input' → logprob: -16.630373001098633
    8. '<input' → logprob: -16.880373001098633
    9. '_input' → logprob: -17.005373001098633
    10. '[input' → logprob: -17.380373001098633

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.6768665313720703
    2. '()' → logprob: -1.1768665313720703
    3. '()))' → logprob: -1.8018665313720703
    4. '())' → logprob: -4.05186653137207
    5. '())))' → logprob: -7.42686653137207
    6. '()));' → logprob: -8.05186653137207
    7. '()>' → logprob: -9.80186653137207
    8. '()).' → logprob: -10.17686653137207
    9. '(' → logprob: -10.67686653137207
    10. '())).' → logprob: -10.92686653137207

Token 137: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002647927321959287
    2. 'strip' → logprob: -8.250265121459961
    3. ')' → logprob: -13.375265121459961
    4. ' split' → logprob: -13.875265121459961
    5. 'rstrip' → logprob: -14.250265121459961
    6. 'spl' → logprob: -15.500265121459961
    7. '(split' → logprob: -15.750265121459961
    8. '()' → logprob: -17.37526512145996
    9. 'plit' → logprob: -18.12526512145996
    10. '())' → logprob: -18.37526512145996

Token 138: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.2955099940299988
    2. '()' → logprob: -1.5455100536346436
    3. '())' → logprob: -3.1705100536346436
    4. '(' → logprob: -8.045510292053223
    5. '())))' → logprob: -8.795510292053223
    6. '))' → logprob: -9.045510292053223
    7. '()));' → logprob: -10.670510292053223
    8. ')' → logprob: -10.920510292053223
    9. '()))
' → logprob: -11.420510292053223
    10. '())).' → logprob: -12.545510292053223

Token 139: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.9165192246437073
    2. '#' → logprob: -1.6665191650390625
    3. ' 
' → logprob: -1.6665191650390625
    4. '
' → logprob: -2.2915191650390625
    5. '  
' → logprob: -3.4165191650390625
    6. 'a' → logprob: -4.1665191650390625
    7. '\' → logprob: -4.9165191650390625
    8. 'for' → logprob: -4.9165191650390625
    9. '\n' → logprob: -5.1665191650390625
    10. ':' → logprob: -5.1665191650390625

Token 140: ' Initial' (ID: 9209)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7147784233093262
    2. 'i' → logprob: -0.8397784233093262
    3. 'a' → logprob: -4.339778423309326
    4. '#' → logprob: -4.589778423309326
    5. 'n' → logprob: -4.589778423309326
    6. 'for' → logprob: -4.589778423309326
    7. 's' → logprob: -4.714778423309326
    8. 'r' → logprob: -4.964778423309326
    9. 'if' → logprob: -5.464778423309326
    10. 'p' → logprob: -5.464778423309326

Token 141: 'iser' (ID: 7466)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15579506754875183
    2. 'is' → logprob: -2.655795097351074
    3. 'i' → logprob: -2.905795097351074
    4. 'isation' → logprob: -5.405795097351074
    5. 'a' → logprob: -5.905795097351074
    6. 'iser' → logprob: -6.155795097351074
    7. ' ' → logprob: -6.155795097351074
    8. '#' → logprob: -6.780795097351074
    9. 'al' → logprob: -6.905795097351074
    10. 'e' → logprob: -7.030795097351074

Token 142: ' la' (ID: 557)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2553594410419464
    2. '_' → logprob: -1.880359411239624
    3. '(' → logprob: -3.505359411239624
    4. '_sum' → logprob: -4.755359649658203
    5. ' sum' → logprob: -4.880359649658203
    6. ' somme' → logprob: -5.005359649658203
    7. 's' → logprob: -5.130359649658203
    8. 'a' → logprob: -5.630359649658203
    9. 'sum' → logprob: -6.005359649658203
    10. '(sum' → logprob: -6.630359649658203

Token 143: ' variable' (ID: 11076)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.010389013215899467
    2. ' somme' → logprob: -6.0103888511657715
    3. 'result' → logprob: -6.1353888511657715
    4. 'i' → logprob: -6.6353888511657715
    5. 'r' → logprob: -6.8853888511657715
    6. 'c' → logprob: -7.5103888511657715
    7. 'sum' → logprob: -7.6353888511657715
    8. 'som' → logprob: -7.7603888511657715
    9. 'max' → logprob: -8.01038932800293
    10. 'b' → logprob: -8.01038932800293

Token 144: ' ans' (ID: 3345)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7017791867256165
    2. ' s' → logprob: -1.2017791271209717
    3. ' sum' → logprob: -2.9517791271209717
    4. ' somme' → logprob: -3.0767791271209717
    5. ' result' → logprob: -3.5767791271209717
    6. ' total' → logprob: -4.201779365539551
    7. 'sum' → logprob: -4.201779365539551
    8. 'result' → logprob: -4.826779365539551
    9. ' i' → logprob: -4.951779365539551
    10. ' max' → logprob: -4.951779365539551

Token 145: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023607414215803146
    2. '=' → logprob: -3.7736074924468994
    3. ' ' → logprob: -8.02360725402832
    4. ',' → logprob: -11.89860725402832
    5. 'a' → logprob: -12.14860725402832
    6. 'ans' → logprob: -12.52360725402832
    7. 's' → logprob: -12.64860725402832
    8. ' ,' → logprob: -12.89860725402832
    9. '_' → logprob: -13.02360725402832
    10. '0' → logprob: -13.14860725402832

Token 146: ' la' (ID: 557)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.009976471774280071
    2. ' ' → logprob: -4.634976387023926
    3. 'n' → logprob: -9.384976387023926
    4. '-' → logprob: -9.884976387023926
    5. '1' → logprob: -11.134976387023926
    6. 'a' → logprob: -11.134976387023926
    7. ' n' → logprob: -11.384976387023926
    8. '[]' → logprob: -11.384976387023926
    9. 'float' → logprob: -11.884976387023926
    10. ' -' → logprob: -12.259976387023926

Token 147: ' valeur' (ID: 41664)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08000955730676651
    2. ' ' → logprob: -2.7050094604492188
    3. ' max' → logprob: -6.455009460449219
    4. '100' → logprob: -6.955009460449219
    5. 'max' → logprob: -6.955009460449219
    6. 'n' → logprob: -7.205009460449219
    7. '1' → logprob: -7.205009460449219
    8. 's' → logprob: -7.330009460449219
    9. ' maximum' → logprob: -7.455009460449219
    10. ' n' → logprob: -7.580009460449219

Token 148: ' '' (ID: 461)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04865095764398575
    2. ' ' → logprob: -3.0486509799957275
    3. 's' → logprob: -11.298650741577148
    4. 'a' → logprob: -11.548650741577148
    5. 'n' → logprob: -11.798650741577148
    6. 'max' → logprob: -12.048650741577148
    7. ' a' → logprob: -12.173650741577148
    8. ' n' → logprob: -12.173650741577148
    9. ' max' → logprob: -12.423650741577148
    10. '=' → logprob: -12.673650741577148

Token 149: 'APP' (ID: 13444)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00624669948592782
    2. ' ' → logprob: -6.256246566772461
    3. 'a' → logprob: -6.756246566772461
    4. '-' → logprob: -6.756246566772461
    5. 'max' → logprob: -7.631246566772461
    6. 'float' → logprob: -8.006246566772461
    7. 'n' → logprob: -8.131246566772461
    8. 'None' → logprob: -8.506246566772461
    9. '1' → logprob: -8.881246566772461
    10. 'abs' → logprob: -9.506246566772461

Token 150: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.042630635201931
    2. 'END' → logprob: -4.792630672454834
    3. 'R' → logprob: -5.292630672454834
    4. 'RE' → logprob: -5.292630672454834
    5. 'LE' → logprob: -5.917630672454834
    6. 'ARENT' → logprob: -5.917630672454834
    7. ''' → logprob: -6.042630672454834
    8. 'ROB' → logprob: -6.167630672454834
    9. 'LES' → logprob: -6.292630672454834
    10. 'LY' → logprob: -6.417630672454834

Token 151: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -1.1845945119857788
    2. 'X' → logprob: -1.3095945119857788
    3. 'RO' → logprob: -1.6845945119857788
    4. 'U' → logprob: -2.3095946311950684
    5. 'UV' → logprob: -2.6845946311950684
    6. 'OVED' → logprob: -3.4345946311950684
    7. 'VE' → logprob: -4.184594631195068
    8. 'R' → logprob: -5.434594631195068
    9. 'V' → logprob: -5.434594631195068
    10. 'VAL' → logprob: -5.684594631195068

Token 152: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004882907960563898
    2. '')' → logprob: -5.7548828125
    3. ' '' → logprob: -7.2548828125
    4. '"' → logprob: -7.3798828125
    5. ' =' → logprob: -8.2548828125
    6. ' ')' → logprob: -10.2548828125
    7. ')' → logprob: -10.8798828125
    8. ':' → logprob: -11.8798828125
    9. ''''' → logprob: -12.0048828125
    10. '")' → logprob: -12.0048828125

Token 153: '#' (ID: 2)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1126466765999794
    2. ' ans' → logprob: -2.3626465797424316
    3. ' =' → logprob: -4.862646579742432
    4. 'a' → logprob: -6.237646579742432
    5. '=' → logprob: -6.612646579742432
    6. ' ' → logprob: -7.612646579742432
    7. '	ans' → logprob: -7.987646579742432
    8. '"' → logprob: -9.23764705657959
    9. '(ans' → logprob: -9.23764705657959
    10. ''' → logprob: -9.48764705657959

Token 154: ' Cette' (ID: 27383)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4359261989593506
    2. ' =' → logprob: -1.0609261989593506
    3. '=' → logprob: -5.43592643737793
    4. ' ans' → logprob: -6.18592643737793
    5. 'ans' → logprob: -8.81092643737793
    6. ' a' → logprob: -9.31092643737793
    7. ' "' → logprob: -9.43592643737793
    8. '  ' → logprob: -9.81092643737793
    9. '<|end|>' → logprob: -9.93592643737793
    10. '_' → logprob: -10.06092643737793

Token 155: ' variable' (ID: 11076)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2948569059371948
    2. ' ans' → logprob: -2.4198570251464844
    3. ' variable' → logprob: -3.1698570251464844
    4. ' =' → logprob: -3.6698570251464844
    5. 'ans' → logprob: -4.044857025146484
    6. ' #' → logprob: -4.669857025146484
    7. 'variable' → logprob: -4.669857025146484
    8. '_' → logprob: -4.919857025146484
    9. ' is' → logprob: -5.044857025146484
    10. ' a' → logprob: -5.044857025146484

Token 156: ' serv' (ID: 2096)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25530046224594116
    2. ' ' → logprob: -1.505300521850586
    3. '=' → logprob: -5.755300521850586
    4. '_' → logprob: -9.755300521850586
    5. '<|end|>' → logprob: -10.630300521850586
    6. ',' → logprob: -11.005300521850586
    7. ' ='' → logprob: -11.005300521850586
    8. '  ' → logprob: -11.380300521850586
    9. ' ,' → logprob: -11.380300521850586
    10. ' is' → logprob: -11.505300521850586

Token 157: 'ira' (ID: 2633)
  Prédit: 'ira'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ira' → logprob: -0.008361025713384151
    2. 'ra' → logprob: -5.883360862731934
    3. 'a' → logprob: -6.008360862731934
    4. 'e' → logprob: -6.633360862731934
    5. 'ir' → logprob: -7.383360862731934
    6. 'i' → logprob: -7.758360862731934
    7. 'r' → logprob: -7.883360862731934
    8. 'irà' → logprob: -9.008360862731934
    9. '#' → logprob: -9.133360862731934
    10. 't' → logprob: -10.383360862731934

Token 158: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08382025361061096
    2. ' à' → logprob: -2.708820343017578
    3. ' as' → logprob: -5.583820343017578
    4. ' a' → logprob: -5.583820343017578
    5. '  ' → logprob: -5.708820343017578
    6. ' to' → logprob: -6.458820343017578
    7. ' =' → logprob: -7.583820343017578
    8. ' ' → logprob: -8.583820343017578
    9. ' au' → logprob: -9.083820343017578
    10. 's' → logprob: -9.208820343017578

Token 159: ' stock' (ID: 6546)
  Prédit: 'stock'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stock' → logprob: -0.5455858111381531
    2. ' stock' → logprob: -1.5455858707427979
    3. ''' → logprob: -2.420585870742798
    4. 'ind' → logprob: -3.295585870742798
    5. '"' → logprob: -3.545585870742798
    6. ' déterminer' → logprob: -4.295585632324219
    7. ' conserver' → logprob: -5.295585632324219
    8. ''acc' → logprob: -5.295585632324219
    9. ' vérifier' → logprob: -6.045585632324219
    10. 'val' → logprob: -6.295585632324219

Token 160: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.013919489458203316
    2. 'e' → logprob: -4.513919353485107
    3. 'u' → logprob: -6.513919353485107
    4. ' ' → logprob: -7.888919353485107
    5. 'ir' → logprob: -8.263919830322266
    6. 'i' → logprob: -8.263919830322266
    7. 'a' → logprob: -8.638919830322266
    8. 'r' → logprob: -9.388919830322266
    9. ' e' → logprob: -9.763919830322266
    10. ' a' → logprob: -10.263919830322266

Token 161: ' le' (ID: 505)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5066104531288147
    2. ' ' → logprob: -1.00661039352417
    3. '"' → logprob: -3.75661039352417
    4. ' '' → logprob: -5.25661039352417
    5. ' "' → logprob: -7.25661039352417
    6. ' le' → logprob: -7.50661039352417
    7. ' a' → logprob: -7.50661039352417
    8. ' l' → logprob: -8.131610870361328
    9. '<|end|>' → logprob: -8.131610870361328
    10. '  ' → logprob: -8.506610870361328

Token 162: ' résultat' (ID: 62556)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18442383408546448
    2. ' résultat' → logprob: -2.3094239234924316
    3. 'result' → logprob: -3.4344239234924316
    4. ' statut' → logprob: -4.809423923492432
    5. 'stat' → logprob: -5.434423923492432
    6. ' resultat' → logprob: -5.684423923492432
    7. 'status' → logprob: -5.809423923492432
    8. 'rés' → logprob: -5.934423923492432
    9. ' ' → logprob: -6.059423923492432
    10. ' result' → logprob: -6.059423923492432

Token 163: ' final' (ID: 1721)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.7289302349090576
    2. 'ans' → logprob: -1.2289302349090576
    3. '
' → logprob: -2.8539302349090576
    4. ' =' → logprob: -2.8539302349090576
    5. ' ' → logprob: -3.2289302349090576
    6. ' 
' → logprob: -3.6039302349090576
    7. '<|end|>' → logprob: -4.978930473327637
    8. '(ans' → logprob: -5.228930473327637
    9. '  
' → logprob: -5.353930473327637
    10. 'a' → logprob: -5.478930473327637

Token 164: ' après' (ID: 16460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5315660834312439
    2. ' =' → logprob: -1.5315661430358887
    3. ' 
' → logprob: -2.0315661430358887
    4. '=' → logprob: -3.6565661430358887
    5. ' ans' → logprob: -3.6565661430358887
    6. '  
' → logprob: -6.031566143035889
    7. ' 

' → logprob: -6.156566143035889
    8. 'ans' → logprob: -6.281566143035889
    9. 'a' → logprob: -6.531566143035889
    10. ''' → logprob: -7.156566143035889

Token 165: ' traitement' (ID: 42434)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.7053694128990173
    2. 'l' → logprob: -1.955369472503662
    3. ' la' → logprob: -1.955369472503662
    4. ' avoir' → logprob: -2.955369472503662
    5. 'v' → logprob: -3.955369472503662
    6. ' validation' → logprob: -4.205369472503662
    7. '<|end|>' → logprob: -4.330369472503662
    8. ' vér' → logprob: -4.455369472503662
    9. 'verification' → logprob: -4.580369472503662
    10. ' vérifier' → logprob: -4.830369472503662

Token 166: ' des' (ID: 731)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.42468205094337463
    2. ' ' → logprob: -1.4246820211410522
    3. ' 
' → logprob: -2.924682140350342
    4. 'ans' → logprob: -3.674682140350342
    5. ' =' → logprob: -4.299682140350342
    6. 'a' → logprob: -5.299682140350342
    7. '=' → logprob: -6.674682140350342
    8. ' a' → logprob: -6.674682140350342
    9. '  
' → logprob: -6.924682140350342
    10. '(ans' → logprob: -7.174682140350342

Token 167: ' valeurs' (ID: 73668)
  Prédit: ' éléments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' éléments' → logprob: -0.5824994444847107
    2. 'élé' → logprob: -1.3324995040893555
    3. ' a' → logprob: -2.5824995040893555
    4. 'a' → logprob: -3.3324995040893555
    5. ' conditions' → logprob: -3.8324995040893555
    6. ' elements' → logprob: -3.9574995040893555
    7. 'conditions' → logprob: -5.4574995040893555
    8. ' nombres' → logprob: -5.5824995040893555
    9. 'elements' → logprob: -5.8324995040893555
    10. 'é' → logprob: -6.2074995040893555

Token 168: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5407668948173523
    2. ' 
' → logprob: -1.540766954421997
    3. '  
' → logprob: -2.165766954421997
    4. ' 

' → logprob: -3.415766954421997
    5. '
' → logprob: -3.915766954421997
    6. 'a' → logprob: -4.915766716003418
    7. '<|end|>' → logprob: -4.915766716003418
    8. '  

' → logprob: -5.165766716003418
    9. '   
' → logprob: -5.665766716003418
    10. '_' → logprob: -6.165766716003418

Token 169: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1630067527294159
    2. 'a' → logprob: -1.9130067825317383
    3. ' ' → logprob: -5.913006782531738
    4. ' ' → logprob: -9.788006782531738
    5. '	a' → logprob: -12.288006782531738
    6. ' la' → logprob: -12.663006782531738
    7. ' the' → logprob: -13.413006782531738
    8. '  ' → logprob: -13.538006782531738
    9. ' `' → logprob: -13.663006782531738
    10. ' ‌' → logprob: -14.038006782531738

Token 170: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.16225041449069977
    2. ' a' → logprob: -1.9122503995895386
    3. ' ' → logprob: -6.287250518798828
    4. ' liste' → logprob: -10.287250518798828
    5. ' variable' → logprob: -10.412250518798828
    6. ' array' → logprob: -10.912250518798828
    7. 'liste' → logprob: -11.537250518798828
    8. ' list' → logprob: -11.787250518798828
    9. '	a' → logprob: -11.912250518798828
    10. ' 
' → logprob: -12.037250518798828

Token 171: ' a' (ID: 261)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.37970608472824097
    2. ' =' → logprob: -1.3797061443328857
    3. '=' → logprob: -3.5047061443328857
    4. ' ans' → logprob: -3.8797061443328857
    5. 'ans' → logprob: -5.254705905914307
    6. ''' → logprob: -6.004705905914307
    7. 'a' → logprob: -6.504705905914307
    8. ' 
' → logprob: -6.754705905914307
    9. '"' → logprob: -8.004706382751465
    10. '_' → logprob: -8.004706382751465

Token 172: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.656736433506012
    2. '
' → logprob: -1.5317363739013672
    3. ' ans' → logprob: -1.9067363739013672
    4. ' ' → logprob: -3.406736373901367
    5. 'ans' → logprob: -3.531736373901367
    6. 'a' → logprob: -3.906736373901367
    7. ' 

' → logprob: -4.406736373901367
    8. '  
' → logprob: -5.406736373901367
    9. 'n' → logprob: -5.781736373901367
    10. '(ans' → logprob: -6.156736373901367

Token 173: 'ans' (ID: 616)
  Prédit: 'ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1309443712234497
    2. ' 
' → logprob: -1.3809443712234497
    3. ' ans' → logprob: -1.6309443712234497
    4. '
' → logprob: -1.7559443712234497
    5. 'a' → logprob: -3.25594425201416
    6. '  
' → logprob: -5.25594425201416
    7. '(ans' → logprob: -5.88094425201416
    8. 'n' → logprob: -6.00594425201416
    9. '```' → logprob: -6.63094425201416
    10. '	ans' → logprob: -7.00594425201416

Token 174: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012648324482142925
    2. '=' → logprob: -4.387648105621338
    3. ' ' → logprob: -9.012648582458496
    4. ' ='' → logprob: -11.762648582458496
    5. ' ="' → logprob: -12.512648582458496
    6. ',' → logprob: -13.387648582458496
    7. ' ,' → logprob: -14.512648582458496
    8. '='' → logprob: -14.637648582458496
    9. '  ' → logprob: -15.137648582458496
    10. ')' → logprob: -15.137648582458496

Token 175: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.21150636672973633
    2. ' '' → logprob: -1.9615063667297363
    3. '"' → logprob: -3.0865063667297363
    4. ' "' → logprob: -5.461506366729736
    5. ''A' → logprob: -10.461505889892578
    6. ' ' → logprob: -10.711505889892578
    7. '`' → logprob: -12.086505889892578
    8. ''app' → logprob: -12.211505889892578
    9. '"A' → logprob: -12.961505889892578
    10. ''ap' → logprob: -13.211505889892578

Token 176: 'APP' (ID: 13444)
  Prédit: 'APP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'APP' → logprob: -0.0003986144147347659
    2. ' APPRO' → logprob: -8.000398635864258
    3. 'A' → logprob: -10.000398635864258
    4. '_APPRO' → logprob: -11.875398635864258
    5. 'Approved' → logprob: -12.250398635864258
    6. 'AP' → logprob: -12.625398635864258
    7. ''' → logprob: -14.250398635864258
    8. 'approved' → logprob: -14.250398635864258
    9. '.APP' → logprob: -15.125398635864258
    10. ' ' → logprob: -15.750398635864258

Token 177: 'RO' (ID: 2013)
  Prédit: 'RO'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RO' → logprob: -0.0006948007503524423
    2. 'R' → logprob: -7.375694751739502
    3. 'OVED' → logprob: -10.00069522857666
    4. 'ROY' → logprob: -11.62569522857666
    5. ' R' → logprob: -12.50069522857666
    6. ' RO' → logprob: -12.75069522857666
    7. 'РО' → logprob: -13.50069522857666
    8. '_RO' → logprob: -13.62569522857666
    9. '"' → logprob: -14.50069522857666
    10. '_' → logprob: -14.50069522857666

Token 178: 'VED' (ID: 85770)
  Prédit: 'VED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VED' → logprob: -1.5570885807392187e-05
    2. 'V' → logprob: -11.250015258789062
    3. 'ved' → logprob: -13.250015258789062
    4. 'VE' → logprob: -14.625015258789062
    5. 'OVED' → logprob: -16.000015258789062
    6. 'ED' → logprob: -16.500015258789062
    7. 'Ved' → logprob: -16.875015258789062
    8. 'D' → logprob: -17.000015258789062
    9. '\' → logprob: -17.625015258789062
    10. 'VES' → logprob: -17.625015258789062

Token 179: ''

' (ID: 7497)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2626355290412903
    2. '
' → logprob: -1.6376354694366455
    3. 'if' → logprob: -4.387635707855225
    4. '\n' → logprob: -4.887635707855225
    5. ' if' → logprob: -5.137635707855225
    6. '')' → logprob: -5.137635707855225
    7. ')' → logprob: -5.762635707855225
    8. ''
' → logprob: -7.387635707855225
    9. '

' → logprob: -8.387635231018066
    10. '
' → logprob: -8.512635231018066

Token 180: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0018225008388981223
    2. ' 
' → logprob: -7.251822471618652
    3. '\n' → logprob: -7.376822471618652
    4. '
' → logprob: -8.251822471618652
    5. '' → logprob: -9.501822471618652
    6. 'for' → logprob: -9.751822471618652
    7. '

' → logprob: -10.626822471618652
    8. '<|end|>' → logprob: -10.751822471618652
    9. '  
' → logprob: -11.251822471618652
    10. '\' → logprob: -11.376822471618652

Token 181: ' Parc' (ID: 68618)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2422415167093277
    2. 'for' → logprob: -1.6172415018081665
    3. ' for' → logprob: -4.117241382598877
    4. ' ​' → logprob: -9.117241859436035
    5. '_' → logprob: -9.992241859436035
    6. ' ‌' → logprob: -9.992241859436035
    7. '<|end|>' → logprob: -10.367241859436035
    8. ' ```' → logprob: -10.367241859436035
    9. 'n' → logprob: -10.867241859436035
    10. ' =' → logprob: -11.492241859436035

Token 182: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.09657353907823563
    2. 'orrer' → logprob: -3.7215735912323
    3. 'ours' → logprob: -4.096573352813721
    4. 'o' → logprob: -4.221573352813721
    5. 'or' → logprob: -4.221573352813721
    6. '#' → logprob: -4.721573352813721
    7. '```' → logprob: -6.096573352813721
    8. 'orer' → logprob: -6.221573352813721
    9. 'ó' → logprob: -6.596573352813721
    10. 'u' → logprob: -7.096573352813721

Token 183: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.7078530192375183
    2. 'er' → logprob: -0.8328530192375183
    3. 'e' → logprob: -3.707853078842163
    4. 'r' → logprob: -4.207852840423584
    5. 'u' → logprob: -4.457852840423584
    6. 'i' → logprob: -4.957852840423584
    7. 'our' → logprob: -5.332852840423584
    8. 's' → logprob: -5.582852840423584
    9. 'eur' → logprob: -6.582852840423584
    10. ' i' → logprob: -6.832852840423584

Token 184: ' (' (ID: 350)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.46742022037506104
    2. ' ' → logprob: -1.092420220375061
    3. ' n' → logprob: -4.0924201011657715
    4. ' (' → logprob: -4.7174201011657715
    5. ' la' → logprob: -5.8424201011657715
    6. ' the' → logprob: -5.8424201011657715
    7. ' for' → logprob: -6.3424201011657715
    8. 'a' → logprob: -6.8424201011657715
    9. '(' → logprob: -6.8424201011657715
    10. ' an' → logprob: -7.5924201011657715

Token 185: 'it' (ID: 278)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14525744318962097
    2. 'a' → logprob: -2.7702574729919434
    3. ' range' → logprob: -3.0202574729919434
    4. ' ' → logprob: -4.020257472991943
    5. ')' → logprob: -5.895257472991943
    6. 'range' → logprob: -7.145257472991943
    7. ' )' → logprob: -7.520257472991943
    8. ' i' → logprob: -8.270256996154785
    9. ' for' → logprob: -8.395256996154785
    10. ' n' → logprob: -8.395256996154785

Token 186: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.928100049495697
    2. 'er' → logprob: -1.3031001091003418
    3. 'u' → logprob: -2.678100109100342
    4. 'érateur' → logprob: -2.678100109100342
    5. 'éter' → logprob: -3.053100109100342
    6. 'ération' → logprob: -3.803100109100342
    7. 'érant' → logprob: -4.178100109100342
    8. 'érez' → logprob: -4.303100109100342
    9. 'é' → logprob: -4.678100109100342
    10. 'ur' → logprob: -4.678100109100342

Token 187: ')' (ID: 8)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.13819387555122375
    2. ')' → logprob: -2.6381938457489014
    3. '(' → logprob: -4.6381940841674805
    4. ' over' → logprob: -4.6381940841674805
    5. 'a' → logprob: -4.7631940841674805
    6. ' ' → logprob: -5.2631940841674805
    7. ' au' → logprob: -5.2631940841674805
    8. ' )' → logprob: -5.2631940841674805
    9. '(a' → logprob: -5.3881940841674805
    10. ' (' → logprob: -5.6381940841674805

Token 188: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6577001810073853
    2. ' a' → logprob: -0.7827001810073853
    3. ' la' → logprob: -5.032700061798096
    4. 'a' → logprob: -5.282700061798096
    5. ' n' → logprob: -5.657700061798096
    6. ' (' → logprob: -5.657700061798096
    7. ' over' → logprob: -6.657700061798096
    8. ' the' → logprob: -7.032700061798096
    9. '(' → logprob: -7.157700061798096
    10. '  ' → logprob: -7.532700061798096

Token 189: ' entier' (ID: 80473)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05405016988515854
    2. ' a' → logprob: -3.0540502071380615
    3. 'a' → logprob: -6.054049968719482
    4. '  ' → logprob: -6.179049968719482
    5. '_' → logprob: -8.17905044555664
    6. ' i' → logprob: -8.92905044555664
    7. ' element' → logprob: -9.17905044555664
    8. ' élément' → logprob: -9.17905044555664
    9. ' ‌' → logprob: -9.30405044555664
    10. ' _' → logprob: -9.30405044555664

Token 190: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0687689334154129
    2. ' i' → logprob: -3.1937689781188965
    3. ' a' → logprob: -4.1937689781188965
    4. ' e' → logprob: -5.5687689781188965
    5. ' in' → logprob: -5.6937689781188965
    6. ' de' → logprob: -6.3187689781188965
    7. '  ' → logprob: -8.193768501281738
    8. ' dans' → logprob: -8.943768501281738
    9. ' o' → logprob: -9.318768501281738
    10. ' ,' → logprob: -9.568768501281738

Token 191: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.36769506335258484
    2. ' ' → logprob: -1.2426950931549072
    3. 'in' → logprob: -4.992694854736328
    4. ' a' → logprob: -5.617694854736328
    5. ' :' → logprob: -6.492694854736328
    6. ' for' → logprob: -6.617694854736328
    7. ' dans' → logprob: -6.867694854736328
    8. ' i' → logprob: -6.992694854736328
    9. ' de' → logprob: -7.117694854736328
    10. ':' → logprob: -7.742694854736328

Token 192: ' la' (ID: 557)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.14268982410430908
    2. 'a' → logprob: -2.0176897048950195
    3. ' the' → logprob: -11.64268970489502
    4. ' la' → logprob: -13.01768970489502
    5. ' ' → logprob: -13.26768970489502
    6. '	a' → logprob: -14.64268970489502
    7. ' ' → logprob: -14.76768970489502
    8. ')a' → logprob: -15.14268970489502
    9. 'the' → logprob: -15.26768970489502
    10. ')' → logprob: -15.64268970489502

Token 193: ' liste' (ID: 31719)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.16022604703903198
    2. 'a' → logprob: -1.9102261066436768
    3. ' ' → logprob: -14.410225868225098
    4. ' liste' → logprob: -14.785225868225098
    5. ' list' → logprob: -15.035225868225098
    6. '	a' → logprob: -15.285225868225098
    7. '_a' → logprob: -15.910225868225098
    8. 'liste' → logprob: -16.410226821899414
    9. ' ' → logprob: -16.660226821899414
    10. 'list' → logprob: -17.285226821899414

Token 194: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.015172344632446766
    2. 'a' → logprob: -4.515172481536865
    3. ' ' → logprob: -5.515172481536865
    4. '  ' → logprob: -11.265172004699707
    5. ' ' → logprob: -11.265172004699707
    6. ' in' → logprob: -11.640172004699707
    7. 's' → logprob: -11.765172004699707
    8. ' ,' → logprob: -11.890172004699707
    9. ' )' → logprob: -12.140172004699707
    10. '_' → logprob: -12.390172004699707

Token 195: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0469682440161705
    2. ':
' → logprob: -3.6719682216644287
    3. ' for' → logprob: -4.796968460083008
    4. '
' → logprob: -5.421968460083008
    5. 'for' → logprob: -5.921968460083008
    6. ' 
' → logprob: -6.546968460083008
    7. ' :
' → logprob: -6.546968460083008
    8. ' :' → logprob: -7.171968460083008
    9. '  
' → logprob: -7.671968460083008
    10. ' ' → logprob: -7.921968460083008

Token 196: 'for' (ID: 1938)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5137202739715576
    2. ' for' → logprob: -1.6387202739715576
    3. 'for' → logprob: -1.6387202739715576
    4. ':
' → logprob: -4.888720512390137
    5. ' 
' → logprob: -6.263720512390137
    6. ' ' → logprob: -6.763720512390137
    7. '
' → logprob: -7.388720512390137
    8. '<|end|>' → logprob: -8.013720512390137
    9. 'n' → logprob: -8.263720512390137
    10. ' :' → logprob: -8.263720512390137

Token 197: ' x' (ID: 1215)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011111720465123653
    2. ' x' → logprob: -4.511111736297607
    3. '  ' → logprob: -10.51111125946045
    4. 'x' → logprob: -10.51111125946045
    5. ' ' → logprob: -11.88611125946045
    6. ' ‌' → logprob: -14.01111125946045
    7. ' i' → logprob: -14.76111125946045
    8. ' _' → logprob: -15.38611125946045
    9. '_' → logprob: -15.76111125946045
    10. ' a' → logprob: -15.88611125946045

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.15564407408237457
    2. 'in' → logprob: -2.030644178390503
    3. ' :' → logprob: -4.655643939971924
    4. ':' → logprob: -5.780643939971924
    5. ' ' → logprob: -8.655644416809082
    6. ' i' → logprob: -10.405644416809082
    7. ')' → logprob: -11.280644416809082
    8. ' ,' → logprob: -11.280644416809082
    9. ',' → logprob: -11.405644416809082
    10. ' ' → logprob: -11.780644416809082

Token 199: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3868761360645294
    2. 'a' → logprob: -1.136876106262207
    3. ' ' → logprob: -12.511876106262207
    4. '	a' → logprob: -14.011876106262207
    5. '_a' → logprob: -15.886876106262207
    6. 's' → logprob: -16.511877059936523
    7. ')a' → logprob: -16.511877059936523
    8. '(a' → logprob: -16.761877059936523
    9. ' range' → logprob: -16.761877059936523
    10. '  ' → logprob: -16.886877059936523

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0021188543178141117
    2. ':
' → logprob: -6.752119064331055
    3. ' :' → logprob: -7.002119064331055
    4. ' :
' → logprob: -10.377119064331055
    5. ':

' → logprob: -13.127119064331055
    6. ' if' → logprob: -13.752119064331055
    7. ',' → logprob: -13.877119064331055
    8. 'if' → logprob: -14.377119064331055
    9. ')' → logprob: -14.627119064331055
    10. '=' → logprob: -14.877119064331055

Token 201: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7017244100570679
    2. ' 
' → logprob: -1.4517244100570679
    3. '<|end|>' → logprob: -2.7017245292663574
    4. ' if' → logprob: -3.2017245292663574
    5. '
' → logprob: -3.3267245292663574
    6. ':
' → logprob: -3.5767245292663574
    7. ' ' → logprob: -3.7017245292663574
    8. '   ' → logprob: -3.9517245292663574
    9. 'if' → logprob: -3.9517245292663574
    10. ' :
' → logprob: -4.451724529266357

Token 202: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10045919567346573
    2. ' if' → logprob: -2.725459098815918
    3. 'if' → logprob: -3.975459098815918
    4. ':' → logprob: -5.725459098815918
    5. ' 
' → logprob: -5.725459098815918
    6. '<|end|>' → logprob: -6.225459098815918
    7. '   ' → logprob: -6.475459098815918
    8. '    ' → logprob: -8.475459098815918
    9. '  ' → logprob: -8.975459098815918
    10. ' :' → logprob: -8.975459098815918

Token 203: ' Vér' (ID: 159169)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8134908080101013
    2. ' if' → logprob: -0.9384908080101013
    3. ' ' → logprob: -1.813490867614746
    4. 'i' → logprob: -6.938490867614746
    5. ' i' → logprob: -7.313490867614746
    6. '<|end|>' → logprob: -8.688490867614746
    7. '   ' → logprob: -8.938490867614746
    8. '    ' → logprob: -9.688490867614746
    9. '_' → logprob: -9.813490867614746
    10. 'space' → logprob: -10.063490867614746

Token 204: 'ifier' (ID: 4550)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.617786705493927
    2. 'ifie' → logprob: -1.4927866458892822
    3. 'ifier' → logprob: -1.8677866458892822
    4. 'ify' → logprob: -3.7427866458892822
    5. '   ' → logprob: -3.8677866458892822
    6. 'i' → logprob: -4.242786884307861
    7. ' if' → logprob: -4.492786884307861
    8. 'ifiez' → logprob: -5.367786884307861
    9. 'ifi' → logprob: -6.492786884307861
    10. ' ' → logprob: -6.992786884307861

Token 205: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.030961541458964348
    2. ' ' → logprob: -3.655961513519287
    3. 'if' → logprob: -5.780961513519287
    4. ' x' → logprob: -7.405961513519287
    5. '   ' → logprob: -8.280961990356445
    6. ' i' → logprob: -8.905961990356445
    7. '<|end|>' → logprob: -8.905961990356445
    8. 'x' → logprob: -9.655961990356445
    9. ' not' → logprob: -9.780961990356445
    10. ' n' → logprob: -9.780961990356445

Token 206: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11341506987810135
    2. 'x' → logprob: -2.238415002822876
    3. ' n' → logprob: -7.988415241241455
    4. ' ' → logprob: -8.988414764404297
    5. 'n' → logprob: -9.363414764404297
    6. ' not' → logprob: -11.363414764404297
    7. 'abs' → logprob: -11.488414764404297
    8. ' abs' → logprob: -11.738414764404297
    9. ' ' → logprob: -12.863414764404297
    10. '   ' → logprob: -12.988414764404297

Token 207: ' nombre' (ID: 9733)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20191408693790436
    2. 'x' → logprob: -1.7019140720367432
    3. ' n' → logprob: -8.326913833618164
    4. 'n' → logprob: -8.576913833618164
    5. ' ' → logprob: -10.576913833618164
    6. ' not' → logprob: -11.076913833618164
    7. '   ' → logprob: -12.201913833618164
    8. 'abs' → logprob: -12.326913833618164
    9. '	x' → logprob: -12.451913833618164
    10. ' abs' → logprob: -12.951913833618164

Token 208: ' x' (ID: 1215)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.7525712251663208
    2. ' x' → logprob: -1.7525712251663208
    3. ' %' → logprob: -2.0025711059570312
    4. '%' → logprob: -2.6275711059570312
    5. ' >' → logprob: -2.6275711059570312
    6. ' ' → logprob: -3.8775711059570312
    7. '<' → logprob: -4.252571105957031
    8. ' <=' → logprob: -4.252571105957031
    9. ' ==' → logprob: -4.877571105957031
    10. ' !=' → logprob: -5.377571105957031

Token 209: ' est' (ID: 893)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.997959554195404
    2. ' %' → logprob: -0.997959554195404
    3. '%' → logprob: -1.9979596138000488
    4. ' <=' → logprob: -2.872959613800049
    5. ' >' → logprob: -3.747959613800049
    6. ' ==' → logprob: -3.997959613800049
    7. ' ' → logprob: -4.122959613800049
    8. ' >=' → logprob: -5.122959613800049
    9. '<' → logprob: -5.872959613800049
    10. '<=' → logprob: -6.997959613800049

Token 210: ' impair' (ID: 64113)
  Prédit: ' inférieur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' inférieur' → logprob: -0.696652889251709
    2. ' not' → logprob: -2.446652889251709
    3. ' divisible' → logprob: -2.821652889251709
    4. ' strictly' → logprob: -2.821652889251709
    5. 'strict' → logprob: -3.196652889251709
    6. ' negatif' → logprob: -3.446652889251709
    7. ' nég' → logprob: -3.446652889251709
    8. ' supérieur' → logprob: -3.821652889251709
    9. ' less' → logprob: -3.946652889251709
    10. '<|end|>' → logprob: -4.071652889251709

Token 211: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7755980491638184
    2. ' :' → logprob: -0.7755980491638184
    3. '   ' → logprob: -3.5255980491638184
    4. ' ' → logprob: -3.9005980491638184
    5. ' if' → logprob: -4.025598049163818
    6. ' :
' → logprob: -4.900598049163818
    7. 'if' → logprob: -6.650598049163818
    8. ':
' → logprob: -7.025598049163818
    9. ' ,' → logprob: -7.900598049163818
    10. '  ' → logprob: -8.400598526000977

Token 212: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7484700083732605
    2. ' ' → logprob: -1.2484700679779053
    3. ' :' → logprob: -2.6234700679779053
    4. '   ' → logprob: -2.7484700679779053
    5. ' if' → logprob: -2.8734700679779053
    6. 'if' → logprob: -4.498469829559326
    7. ' and' → logprob: -4.998469829559326
    8. ',' → logprob: -5.123469829559326
    9. '%' → logprob: -5.248469829559326
    10. 'and' → logprob: -5.498469829559326

Token 213: ' #' (ID: 1069)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5261120796203613
    2. ' if' → logprob: -1.4011120796203613
    3. 'if' → logprob: -2.4011120796203613
    4. '   ' → logprob: -3.1511120796203613
    5. ' 
' → logprob: -4.651112079620361
    6. '    ' → logprob: -4.901112079620361
    7. '    
' → logprob: -5.651112079620361
    8. '     
' → logprob: -6.026112079620361
    9. '   
' → logprob: -6.776112079620361
    10. ' :' → logprob: -6.901112079620361

Token 214: ' L' (ID: 451)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45366862416267395
    2. '   ' → logprob: -1.5786685943603516
    3. 'if' → logprob: -1.9536685943603516
    4. ' ' → logprob: -4.203668594360352
    5. ' i' → logprob: -7.203668594360352
    6. '  ' → logprob: -8.453668594360352
    7. '    
' → logprob: -8.703668594360352
    8. ' 
' → logprob: -8.703668594360352
    9. '    ' → logprob: -9.203668594360352
    10. 'i' → logprob: -9.328668594360352

Token 215: ''op' (ID: 70747)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5853885412216187
    2. 'f' → logprob: -1.3353885412216187
    3. '   ' → logprob: -2.335388660430908
    4. '%' → logprob: -3.585388660430908
    5. 'if' → logprob: -3.960388660430908
    6. 'e' → logprob: -4.210388660430908
    7. '  ' → logprob: -5.335388660430908
    8. ' if' → logprob: -5.585388660430908
    9. '```' → logprob: -6.210388660430908
    10. '=' → logprob: -6.460388660430908

Token 216: 'érateur' (ID: 108528)
  Prédit: 'érateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érateur' → logprob: -1.0063629150390625
    2. 'ération' → logprob: -1.5063629150390625
    3. '%' → logprob: -1.7563629150390625
    4. 'ér' → logprob: -2.6313629150390625
    5. 'x' → logprob: -3.3813629150390625
    6. 'é' → logprob: -3.3813629150390625
    7. 'er' → logprob: -3.3813629150390625
    8. '%x' → logprob: -3.5063629150390625
    9. '(x' → logprob: -3.8813629150390625
    10. 't' → logprob: -6.1313629150390625

Token 217: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.31419306993484497
    2. '%' → logprob: -1.3141930103302002
    3. ' x' → logprob: -7.564193248748779
    4. '%x' → logprob: -8.689192771911621
    5. 'x' → logprob: -9.189192771911621
    6. ' ' → logprob: -9.189192771911621
    7. ' ' → logprob: -11.064192771911621
    8. ' %
' → logprob: -12.439192771911621
    9. '%n' → logprob: -13.439192771911621
    10. ' modulo' → logprob: -13.439192771911621

Token 218: ' (' (ID: 350)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.054745741188526154
    2. '2' → logprob: -3.304745674133301
    3. '1' → logprob: -4.179745674133301
    4. ' %' → logprob: -7.804745674133301
    5. '%' → logprob: -7.929745674133301
    6. '<|end|>' → logprob: -8.4297456741333
    7. '```' → logprob: -10.0547456741333
    8. '  ' → logprob: -10.4297456741333
    9. ' ==' → logprob: -10.8047456741333
    10. '3' → logprob: -10.8047456741333

Token 219: 'mod' (ID: 4847)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6712809801101685
    2. ' ' → logprob: -0.7962809801101685
    3. ' )' → logprob: -3.921280860900879
    4. ')' → logprob: -4.171280860900879
    5. '%' → logprob: -6.296280860900879
    6. '1' → logprob: -8.546280860900879
    7. ')%' → logprob: -8.796280860900879
    8. ' x' → logprob: -8.921280860900879
    9. '%)' → logprob: -9.421280860900879
    10. ' %' → logprob: -9.546280860900879

Token 220: 'ulo' (ID: 5953)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9900173544883728
    2. ' ' → logprob: -0.9900173544883728
    3. ' )' → logprob: -2.8650174140930176
    4. ' %' → logprob: -2.8650174140930176
    5. '2' → logprob: -3.1150174140930176
    6. '1' → logprob: -3.2400174140930176
    7. '%' → logprob: -3.2400174140930176
    8. '   ' → logprob: -5.365017414093018
    9. ' %)' → logprob: -5.615017414093018
    10. '  ' → logprob: -6.490017414093018

Token 221: ')' (ID: 8)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.526620626449585
    2. ')' → logprob: -1.026620626449585
    3. ' ' → logprob: -3.151620626449585
    4. '1' → logprob: -5.776620864868164
    5. ' !=' → logprob: -6.151620864868164
    6. '2' → logprob: -6.651620864868164
    7. '%' → logprob: -7.401620864868164
    8. ' %' → logprob: -7.901620864868164
    9. ')%' → logprob: -8.776620864868164
    10. '!=' → logprob: -8.776620864868164

Token 222: ' donne' (ID: 30004)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.135560393333435
    2. '%' → logprob: -1.260560393333435
    3. ' %' → logprob: -1.510560393333435
    4. '!=' → logprob: -2.2605605125427246
    5. ' ==' → logprob: -3.6355605125427246
    6. ' ' → logprob: -3.7605605125427246
    7. '   ' → logprob: -4.885560512542725
    8. '==' → logprob: -5.385560512542725
    9. '=' → logprob: -5.885560512542725
    10. '1' → logprob: -7.010560512542725

Token 223: ' le' (ID: 505)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.25823938846588135
    2. 'x' → logprob: -2.508239269256592
    3. ' ' → logprob: -2.633239269256592
    4. '1' → logprob: -2.633239269256592
    5. '2' → logprob: -6.508239269256592
    6. '   ' → logprob: -8.25823974609375
    7. ' le' → logprob: -8.63323974609375
    8. '(x' → logprob: -9.13323974609375
    9. '0' → logprob: -9.25823974609375
    10. '```' → logprob: -10.00823974609375

Token 224: ' reste' (ID: 26769)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.13576561212539673
    2. ' ' → logprob: -2.260765552520752
    3. ' remainder' → logprob: -5.010765552520752
    4. '0' → logprob: -5.135765552520752
    5. '2' → logprob: -5.510765552520752
    6. 'rest' → logprob: -5.885765552520752
    7. ' reste' → logprob: -7.010765552520752
    8. 'reste' → logprob: -7.135765552520752
    9. ' rest' → logprob: -7.510765552520752
    10. '%' → logprob: -8.26076602935791

Token 225: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.40236616134643555
    2. '1' → logprob: -1.2773661613464355
    3. '   ' → logprob: -3.6523661613464355
    4. '2' → logprob: -3.9023661613464355
    5. ' !=' → logprob: -5.9023661613464355
    6. ' ==' → logprob: -7.0273661613464355
    7. ' de' → logprob: -7.5273661613464355
    8. '  ' → logprob: -8.027366638183594
    9. ' x' → logprob: -8.152366638183594
    10. '    ' → logprob: -8.152366638183594

Token 226: ' la' (ID: 557)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.298279732465744
    2. 'x' → logprob: -1.4232797622680664
    3. ' ' → logprob: -5.048279762268066
    4. ' la' → logprob: -5.423279762268066
    5. ' division' → logprob: -6.298279762268066
    6. '1' → logprob: -6.423279762268066
    7. '2' → logprob: -6.548279762268066
    8. 'division' → logprob: -7.298279762268066
    9. 'div' → logprob: -7.673279762268066
    10. 'la' → logprob: -10.298279762268066

Token 227: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.7227635979652405
    2. ' division' → logprob: -1.3477635383605957
    3. '2' → logprob: -2.2227635383605957
    4. 'x' → logprob: -2.4727635383605957
    5. ' x' → logprob: -3.3477635383605957
    6. ' ' → logprob: -4.222763538360596
    7. 'div' → logprob: -4.597763538360596
    8. '1' → logprob: -6.222763538360596
    9. 'de' → logprob: -9.722764015197754
    10. '```' → logprob: -10.347764015197754

Token 228: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.058476388454437256
    2. '   ' → logprob: -3.183476448059082
    3. ' x' → logprob: -4.933476448059082
    4. ' de' → logprob: -5.808476448059082
    5. 'x' → logprob: -6.683476448059082
    6. '  ' → logprob: -6.808476448059082
    7. ' by' → logprob: -7.308476448059082
    8. ' par' → logprob: -7.683476448059082
    9. '%' → logprob: -8.058476448059082
    10. '    ' → logprob: -8.683476448059082

Token 229: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.694891095161438
    2. ' x' → logprob: -0.694891095161438
    3. ' ' → logprob: -6.944890975952148
    4. '2' → logprob: -7.194890975952148
    5. '1' → logprob: -10.819890975952148
    6. '10' → logprob: -13.069890975952148
    7. '   ' → logprob: -14.194890975952148
    8. ' ' → logprob: -14.569890975952148
    9. '```' → logprob: -14.694890975952148
    10. '(x' → logprob: -14.819890975952148

Token 230: ' par' (ID: 686)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.8395161628723145
    2. '%' → logprob: -1.7145161628723145
    3. '   ' → logprob: -1.8395161628723145
    4. ' ' → logprob: -2.4645161628723145
    5. ' par' → logprob: -2.8395161628723145
    6. '1' → logprob: -3.4645161628723145
    7. ' x' → logprob: -3.8395161628723145
    8. '```' → logprob: -5.2145161628723145
    9. 'par' → logprob: -5.3395161628723145
    10. ' by' → logprob: -5.3395161628723145

Token 231: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12692904472351074
    2. ' ' → logprob: -2.1269290447235107
    3. '```' → logprob: -15.25192928314209
    4. ' ' → logprob: -15.50192928314209
    5. '   ' → logprob: -16.126928329467773
    6. '1' → logprob: -16.126928329467773
    7. '10' → logprob: -16.626928329467773
    8. '
' → logprob: -17.126928329467773
    9. ')' → logprob: -17.251928329467773
    10. '3' → logprob: -17.376928329467773

Token 232: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -17.37507438659668
    4. '
' → logprob: -19.50007438659668
    5. '   ' → logprob: -20.00007438659668
    6. '  ' → logprob: -20.12507438659668
    7. '1' → logprob: -20.25007438659668
    8. '3' → logprob: -20.75007438659668
    9. 'de' → logprob: -21.62507438659668
    10. '10' → logprob: -21.62507438659668

Token 233: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7115706205368042
    2. '   ' → logprob: -0.9615706205368042
    3. ' if' → logprob: -3.0865707397460938
    4. ' :' → logprob: -3.0865707397460938
    5. 'if' → logprob: -4.086570739746094
    6. ' ' → logprob: -4.961570739746094
    7. ' ==' → logprob: -5.211570739746094
    8. ' !=' → logprob: -5.836570739746094
    9. ',' → logprob: -7.711570739746094
    10. '>' → logprob: -7.836570739746094

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11666783690452576
    2. ' if' → logprob: -2.4916677474975586
    3. 'if' → logprob: -3.8666677474975586
    4. ' ' → logprob: -5.491667747497559
    5. ':' → logprob: -6.866667747497559
    6. ' :' → logprob: -7.491667747497559
    7. '    ' → logprob: -8.116667747497559
    8. '  ' → logprob: -8.866667747497559
    9. ' i' → logprob: -8.991667747497559
    10. '    
' → logprob: -9.991667747497559

Token 235: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7126025557518005
    2. ' if' → logprob: -0.8376025557518005
    3. 'if' → logprob: -2.5876026153564453
    4. ' ' → logprob: -6.587602615356445
    5. '    ' → logprob: -9.087602615356445
    6. '    
' → logprob: -9.712602615356445
    7. '  ' → logprob: -9.837602615356445
    8. '	if' → logprob: -11.087602615356445
    9. '   
' → logprob: -11.337602615356445
    10. ' i' → logprob: -11.337602615356445

Token 236: ' Si' (ID: 7832)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2588582932949066
    2. 'if' → logprob: -1.508858323097229
    3. ' ' → logprob: -5.1338582038879395
    4. ' x' → logprob: -7.3838582038879395
    5. '   ' → logprob: -8.133858680725098
    6. 'x' → logprob: -9.883858680725098
    7. ' i' → logprob: -11.758858680725098
    8. '  ' → logprob: -12.133858680725098
    9. '1' → logprob: -12.383858680725098
    10. 'If' → logprob: -12.383858680725098

Token 237: ' ce' (ID: 2357)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4740927219390869
    2. 'x' → logprob: -0.9740927219390869
    3. '(x' → logprob: -11.474092483520508
    4. ' ' → logprob: -12.974092483520508
    5. ' (' → logprob: -13.224092483520508
    6. '	x' → logprob: -14.474092483520508
    7. '   ' → logprob: -15.099092483520508
    8. ' ' → logprob: -15.349092483520508
    9. '(' → logprob: -16.599092483520508
    10. '%x' → logprob: -17.599092483520508

Token 238: ' reste' (ID: 26769)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.38523584604263306
    2. ' x' → logprob: -1.7602357864379883
    3. '%' → logprob: -2.3852357864379883
    4. ' ' → logprob: -3.0102357864379883
    5. 'x' → logprob: -5.385235786437988
    6. ' ' → logprob: -6.885235786437988
    7. ' ==' → logprob: -8.885235786437988
    8. ' n' → logprob: -9.135235786437988
    9. '%x' → logprob: -9.260235786437988
    10. ' #' → logprob: -9.510235786437988

Token 239: ' est' (ID: 893)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -1.032995581626892
    2. ' ==' → logprob: -1.157995581626892
    3. ' ' → logprob: -1.282995581626892
    4. '!=' → logprob: -4.032995700836182
    5. ' est' → logprob: -4.282995700836182
    6. '==' → logprob: -4.532995700836182
    7. ' n' → logprob: -6.282995700836182
    8. '=' → logprob: -6.407995700836182
    9. ' =' → logprob: -6.657995700836182
    10. ')' → logprob: -6.907995700836182

Token 240: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2849385440349579
    2. '1' → logprob: -1.4099385738372803
    3. ' !=' → logprob: -7.034938335418701
    4. ' not' → logprob: -7.159938335418701
    5. '0' → logprob: -7.659938335418701
    6. ' différent' → logprob: -7.659938335418701
    7. ' different' → logprob: -8.40993881225586
    8. ' non' → logprob: -8.40993881225586
    9. '!=' → logprob: -8.53493881225586
    10. 'not' → logprob: -9.03493881225586

Token 241: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01065078005194664
    2. ' ' → logprob: -5.385650634765625
    3. '!=' → logprob: -6.260650634765625
    4. ' différent' → logprob: -6.635650634765625
    5. 'different' → logprob: -7.510650634765625
    6. ' different' → logprob: -7.635650634765625
    7. 'diff' → logprob: -7.635650634765625
    8. '!' → logprob: -7.635650634765625
    9. '0' → logprob: -7.760650634765625
    10. ' !=' → logprob: -9.010650634765625

Token 242: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.049375019967556
    2. ' :' → logprob: -3.424375057220459
    3. ' !=' → logprob: -4.799375057220459
    4. ' ==' → logprob: -5.299375057220459
    5. '   ' → logprob: -7.549375057220459
    6. '!=' → logprob: -7.549375057220459
    7. '==' → logprob: -7.924375057220459
    8. ' ' → logprob: -8.1743745803833
    9. '=' → logprob: -8.7993745803833
    10. ',' → logprob: -8.7993745803833

Token 243: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.560194730758667
    2. ' ans' → logprob: -1.185194730758667
    3. ' x' → logprob: -3.185194730758667
    4. '   ' → logprob: -3.435194730758667
    5. ' if' → logprob: -3.810194730758667
    6. '    ' → logprob: -4.685194969177246
    7. ' )' → logprob: -5.185194969177246
    8. ' a' → logprob: -6.435194969177246
    9. '    
' → logprob: -6.560194969177246
    10. ' n' → logprob: -6.935194969177246

Token 244: ' nombre' (ID: 9733)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.14356249570846558
    2. 'x' → logprob: -2.0185625553131104
    3. ' ' → logprob: -7.893562316894531
    4. ' )' → logprob: -9.518562316894531
    5. 'n' → logprob: -9.768562316894531
    6. ' nombre' → logprob: -9.893562316894531
    7. ' n' → logprob: -10.018562316894531
    8. ' is' → logprob: -10.393562316894531
    9. ' if' → logprob: -10.768562316894531
    10. ' est' → logprob: -10.768562316894531

Token 245: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.10268166661262512
    2. ' ' → logprob: -2.9776816368103027
    3. '%' → logprob: -3.2276816368103027
    4. ' x' → logprob: -5.727681636810303
    5. ' est' → logprob: -6.227681636810303
    6. ' is' → logprob: -6.852681636810303
    7. ' )' → logprob: -8.852682113647461
    8. '<|end|>' → logprob: -8.977682113647461
    9. ' ==' → logprob: -9.352682113647461
    10. ' ' → logprob: -9.852682113647461

Token 246: ' impair' (ID: 64113)
  Prédit: ' impair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' impair' → logprob: -0.06765866279602051
    2. ' imp' → logprob: -2.9426586627960205
    3. 'imp' → logprob: -4.817658424377441
    4. ' impar' → logprob: -5.692658424377441
    5. ' odd' → logprob: -7.317658424377441
    6. 'im' → logprob: -7.817658424377441
    7. ' pair' → logprob: -9.442658424377441
    8. 'odd' → logprob: -9.817658424377441
    9. ' im' → logprob: -11.192658424377441
    10. ' ' → logprob: -11.442658424377441

Token 247: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12835340201854706
    2. ':' → logprob: -2.1283533573150635
    3. ' :' → logprob: -6.878353595733643
    4. ' if' → logprob: -8.378353118896484
    5. ':
' → logprob: -9.128353118896484
    6. ',' → logprob: -11.003353118896484
    7. 'if' → logprob: -11.128353118896484
    8. ' :
' → logprob: -11.503353118896484
    9. '    
' → logprob: -12.753353118896484
    10. '  ' → logprob: -13.128353118896484

Token 248: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004622472042683512
    2. ' if' → logprob: -8.125462532043457
    3. '    
' → logprob: -9.625462532043457
    4. ':' → logprob: -10.000462532043457
    5. 'if' → logprob: -10.375462532043457
    6. ' ' → logprob: -11.875462532043457
    7. ' 
' → logprob: -12.750462532043457
    8. ' :' → logprob: -12.750462532043457
    9. '  ' → logprob: -13.250462532043457
    10. '       ' → logprob: -13.375462532043457

Token 249: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7765743732452393
    2. 'if' (adapté à ' if') → logprob: -0.7765743732452393
    3. ' if' → logprob: -2.5265743732452393
    4. '    
' → logprob: -10.15157413482666
    5. ' ' → logprob: -10.27657413482666
    6. '  ' → logprob: -11.02657413482666
    7. '   
' → logprob: -12.15157413482666
    8. ' 
' → logprob: -12.40157413482666
    9. '    ' → logprob: -12.52657413482666
    10. '	if' → logprob: -12.77657413482666

Token 250: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.0004929834394715726
    2. 'x' → logprob: -7.625493049621582
    3. ' ' → logprob: -12.375493049621582
    4. ' ' → logprob: -14.750493049621582
    5. '(x' → logprob: -15.375493049621582
    6. ' (' → logprob: -16.000492095947266
    7. '	x' → logprob: -17.250492095947266
    8. ' n' → logprob: -20.250492095947266
    9. '(' → logprob: -20.750492095947266
    10. ' not' → logprob: -20.750492095947266

Token 251: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.001511408481746912
    2. '%' → logprob: -6.501511573791504
    3. ' ' → logprob: -11.626511573791504
    4. ' ' → logprob: -15.626511573791504
    5. ' %
' → logprob: -17.251510620117188
    6. ')' → logprob: -19.751510620117188
    7. ' %)' → logprob: -19.751510620117188
    8. '1' → logprob: -20.751510620117188
    9. '```' → logprob: -21.251510620117188
    10. ' )' → logprob: -21.626510620117188

Token 252: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5759419798851013
    2. '2' → logprob: -0.8259419798851013
    3. '1' → logprob: -13.075942039489746
    4. '```' → logprob: -15.700942039489746
    5. ' ' → logprob: -16.07594108581543
    6. '<|end|>' → logprob: -17.76344108581543
    7. ' 
' → logprob: -18.01344108581543
    8. '0' → logprob: -18.45094108581543
    9. '
' → logprob: -18.63844108581543
    10. '3' → logprob: -18.63844108581543

Token 253: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.547789674485102e-05
    2. ' ' → logprob: -10.250035285949707
    3. '```' → logprob: -18.125036239624023
    4. '   ' → logprob: -19.375036239624023
    5. '1' → logprob: -19.875036239624023
    6. '  ' → logprob: -20.000036239624023
    7. '۲' → logprob: -20.250036239624023
    8. '٢' → logprob: -20.875036239624023
    9. '２' → logprob: -21.062536239624023
    10. '
' → logprob: -21.312536239624023

Token 254: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.42789605259895325
    2. '!=' → logprob: -1.5528960227966309
    3. ' ==' → logprob: -2.427896022796631
    4. '==' → logprob: -3.052896022796631
    5. '=' → logprob: -7.802896022796631
    6. ':' → logprob: -8.052896499633789
    7. '1' → logprob: -8.802896499633789
    8. ' ' → logprob: -9.427896499633789
    9. ' :' → logprob: -10.552896499633789
    10. ')' → logprob: -10.802896499633789

Token 255: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14270243048667908
    2. ' ' → logprob: -2.017702341079712
    3. '0' → logprob: -10.517702102661133
    4. ' ' → logprob: -16.392702102661133
    5. '```' → logprob: -17.705202102661133
    6. '  ' → logprob: -18.392702102661133
    7. ')' → logprob: -18.580202102661133
    8. ' 
' → logprob: -18.892702102661133
    9. '' → logprob: -18.955202102661133
    10. '=' → logprob: -19.017702102661133

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026181264547631145
    2. ' ' → logprob: -8.375262260437012
    3. '0' → logprob: -10.375262260437012
    4. '!' → logprob: -17.437761306762695
    5. '' → logprob: -19.000261306762695
    6. '```' → logprob: -19.000261306762695
    7. ')' → logprob: -19.250261306762695
    8. ':' → logprob: -19.375261306762695
    9. '१' → logprob: -19.562761306762695
    10. '１' → logprob: -19.562761306762695

Token 257: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020150020718574524
    2. ':
' → logprob: -6.252015113830566
    3. '   ' → logprob: -10.002015113830566
    4. ' :' → logprob: -10.252015113830566
    5. ' and' → logprob: -13.127015113830566
    6. '):' → logprob: -13.627015113830566
    7. 'and' → logprob: -14.002015113830566
    8. ')' → logprob: -14.502015113830566
    9. ' or' → logprob: -15.127015113830566
    10. ' :
' → logprob: -15.127015113830566

Token 258: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0029661727603524923
    2. '       ' → logprob: -6.127966403961182
    3. '    
' → logprob: -7.377966403961182
    4. '\n' → logprob: -9.877965927124023
    5. '
' → logprob: -10.127965927124023
    6. '  ' → logprob: -10.502965927124023
    7. 'ans' → logprob: -11.877965927124023
    8. '        
' → logprob: -12.127965927124023
    9. '   
' → logprob: -12.377965927124023
    10. '	ans' → logprob: -12.377965927124023

Token 259: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06800531595945358
    2. 'ans' → logprob: -3.193005323410034
    3. '    
' → logprob: -4.068005084991455
    4. '
' → logprob: -5.818005084991455
    5. ' ans' → logprob: -5.943005084991455
    6. '	ans' → logprob: -7.193005084991455
    7. '\n' → logprob: -8.068005561828613
    8. '   
' → logprob: -8.443005561828613
    9. '  ' → logprob: -8.443005561828613
    10. '       ' → logprob: -8.943005561828613

Token 260: ' L' (ID: 451)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.10251286625862122
    2. ' ans' → logprob: -2.477512836456299
    3. '   ' → logprob: -4.352512836456299
    4. '	ans' → logprob: -7.852512836456299
    5. '    
' → logprob: -9.727513313293457
    6. '(ans' → logprob: -9.727513313293457
    7. ' ' → logprob: -10.102513313293457
    8. '  ' → logprob: -11.102513313293457
    9. '
' → logprob: -11.477513313293457
    10. '_ans' → logprob: -12.102513313293457

Token 261: ''in' (ID: 17942)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.12476424872875214
    2. '   ' → logprob: -2.4997642040252686
    3. ' ' → logprob: -4.749764442443848
    4. '    
' → logprob: -5.124764442443848
    5. ' ans' → logprob: -5.249764442443848
    6. '  ' → logprob: -5.874764442443848
    7. '   
' → logprob: -5.999764442443848
    8. '
' → logprob: -5.999764442443848
    9. '       ' → logprob: -6.499764442443848
    10. '	ans' → logprob: -6.999764442443848

Token 262: 'struction' (ID: 5316)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.08634435385465622
    2. '   ' → logprob: -2.7113442420959473
    3. '       ' → logprob: -5.461344242095947
    4. '  ' → logprob: -5.711344242095947
    5. ' ' → logprob: -6.211344242095947
    6. '```' → logprob: -6.586344242095947
    7. 'e' → logprob: -6.836344242095947
    8. '    ' → logprob: -7.586344242095947
    9. 's' → logprob: -7.586344242095947
    10. '           ' → logprob: -7.711344242095947

Token 263: ' continue' (ID: 4901)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0301741361618042
    2. ' ans' → logprob: -3.7801742553710938
    3. '   ' → logprob: -5.280174255371094
    4. '	ans' → logprob: -7.405174255371094
    5. ' ' → logprob: -7.530174255371094
    6. '    
' → logprob: -8.655174255371094
    7. '  ' → logprob: -8.780174255371094
    8. '(ans' → logprob: -9.405174255371094
    9. ':' → logprob: -10.155174255371094
    10. '   
' → logprob: -10.405174255371094

Token 264: ' force' (ID: 9578)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03426159918308258
    2. 'continue' → logprob: -4.784261703491211
    3. '       ' → logprob: -4.909261703491211
    4. '           ' → logprob: -5.159261703491211
    5. ' 
' → logprob: -5.659261703491211
    6. ' continue' → logprob: -6.284261703491211
    7. '  
' → logprob: -6.784261703491211
    8. '<|end|>' → logprob: -6.784261703491211
    9. '        
' → logprob: -6.909261703491211
    10. '
' → logprob: -7.284261703491211

Token 265: ' la' (ID: 557)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.568446159362793
    2. ' la' → logprob: -2.443446159362793
    3. 'r' → logprob: -2.568446159362793
    4. ' ' → logprob: -2.568446159362793
    5. 'nt' → logprob: -2.568446159362793
    6. '   ' → logprob: -2.943446159362793
    7. ' the' → logprob: -4.068446159362793
    8. 'n' → logprob: -4.568446159362793
    9. 'e' → logprob: -4.818446159362793
    10. ' a' → logprob: -5.568446159362793

Token 266: ' boucle' (ID: 174211)
  Prédit: ' boucle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' boucle' → logprob: -0.22516177594661713
    2. 'bou' → logprob: -1.8501617908477783
    3. 'loop' → logprob: -3.8501617908477783
    4. ' bou' → logprob: -5.350161552429199
    5. 'continue' → logprob: -5.475161552429199
    6. 'suite' → logprob: -5.475161552429199
    7. 'ans' → logprob: -6.100161552429199
    8. 'pass' → logprob: -6.225161552429199
    9. ' loop' → logprob: -6.850161552429199
    10. 'contin' → logprob: -6.975161552429199

Token 267: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4757464826107025
    2. ' to' → logprob: -1.100746512413025
    3. 'to' → logprob: -4.3507466316223145
    4. '   ' → logprob: -4.7257466316223145
    5. 's' → logprob: -4.9757466316223145
    6. 'à' → logprob: -5.1007466316223145
    7. ' a' → logprob: -5.3507466316223145
    8. ' ' → logprob: -6.3507466316223145
    9. 'a' → logprob: -7.1007466316223145
    10. 'contin' → logprob: -7.4757466316223145

Token 268: ' passer' (ID: 27727)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' → logprob: -0.1667332500219345
    2. 'p' → logprob: -2.1667332649230957
    3. 's' → logprob: -4.541733264923096
    4. 'contin' → logprob: -4.541733264923096
    5. ' passer' → logprob: -5.041733264923096
    6. 'aller' → logprob: -5.291733264923096
    7. ' pass' → logprob: -6.041733264923096
    8. ' poursuivre' → logprob: -6.666733264923096
    9. ' s' → logprob: -7.541733264923096
    10. 'skip' → logprob: -7.916733264923096

Token 269: ' directement' (ID: 52317)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.7884039878845215
    2. ' ' → logprob: -1.2884039878845215
    3. '<|end|>' → logprob: -2.4134039878845215
    4. ' to' → logprob: -3.0384039878845215
    5. '   ' → logprob: -3.0384039878845215
    6. ' au' → logprob: -3.4134039878845215
    7. '  ' → logprob: -4.5384039878845215
    8. ' la' → logprob: -5.2884039878845215
    9. 's' → logprob: -5.2884039878845215
    10. 'to' → logprob: -5.5384039878845215

Token 270: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.17539657652378082
    2. 'à' → logprob: -2.425396680831909
    3. 'au' → logprob: -3.175396680831909
    4. ' ' → logprob: -4.05039644241333
    5. ' au' → logprob: -4.42539644241333
    6. ' to' → logprob: -7.67539644241333
    7. 'to' → logprob: -8.300396919250488
    8. 'la' → logprob: -8.800396919250488
    9. ' ' → logprob: -9.425396919250488
    10. 'a' → logprob: -9.675396919250488

Token 271: ' l' (ID: 305)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.12093835324048996
    2. 'l' → logprob: -2.370938301086426
    3. ' la' → logprob: -4.620938301086426
    4. 'next' → logprob: -5.245938301086426
    5. 'the' → logprob: -5.495938301086426
    6. ' the' → logprob: -7.745938301086426
    7. 'n' → logprob: -8.745938301086426
    8. '```' → logprob: -9.370938301086426
    9. ' l' → logprob: -9.495938301086426
    10. 'su' → logprob: -9.495938301086426

Token 272: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.39498937129974365
    2. 'a' → logprob: -1.1449893712997437
    3. '```' → logprob: -6.394989490509033
    4. ' a' → logprob: -6.519989490509033
    5. ' prochaine' → logprob: -6.769989490509033
    6. '   ' → logprob: -7.269989490509033
    7. '#' → logprob: -7.394989490509033
    8. 'es' → logprob: -8.144989013671875
    9. ''' → logprob: -8.269989013671875
    10. ' it' → logprob: -8.394989013671875

Token 273: 'it' (ID: 278)
  Prédit: 'it'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.17747919261455536
    2. ' it' → logprob: -2.0524792671203613
    3. 'iteration' → logprob: -4.802479267120361
    4. 'next' → logprob: -5.177479267120361
    5. 'pro' → logprob: -5.677479267120361
    6. '```' → logprob: -5.802479267120361
    7. 'tour' → logprob: -6.177479267120361
    8. ' prochaine' → logprob: -6.177479267120361
    9. 'ite' → logprob: -6.677479267120361
    10. '#' → logprob: -6.802479267120361

Token 274: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.40704190731048584
    2. 'er' → logprob: -1.2820419073104858
    3. 'ration' → logprob: -3.6570420265197754
    4. 'érer' → logprob: -4.782042026519775
    5. 'ère' → logprob: -5.157042026519775
    6. 'ér' → logprob: -5.782042026519775
    7. 'continue' → logprob: -5.907042026519775
    8. 'éré' → logprob: -6.282042026519775
    9. 'next' → logprob: -6.407042026519775
    10. 'é' → logprob: -7.282042026519775

Token 275: ' suivante' (ID: 107439)
  Prédit: ' suivante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' suivante' → logprob: -0.060870617628097534
    2. 'su' → logprob: -2.93587064743042
    3. '   ' → logprob: -5.68587064743042
    4. ' ' → logprob: -7.31087064743042
    5. ' suivant' → logprob: -7.43587064743042
    6. 's' → logprob: -8.060870170593262
    7. ' siguiente' → logprob: -8.060870170593262
    8. ' suivantes' → logprob: -8.060870170593262
    9. 'au' → logprob: -9.435870170593262
    10. ' seguinte' → logprob: -10.185870170593262

Token 276: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013312460854649544
    2. ' continue' → logprob: -4.763312339782715
    3. 'continue' → logprob: -5.513312339782715
    4. '	' → logprob: -8.638312339782715
    5. '   ' → logprob: -8.763312339782715
    6. '        
' → logprob: -9.013312339782715
    7. '	continue' → logprob: -9.513312339782715
    8. ' ' → logprob: -10.763312339782715
    9. '           ' → logprob: -11.138312339782715
    10. ' ' → logprob: -11.263312339782715

Token 277: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005372133571654558
    2. ' continue' → logprob: -6.005372047424316
    3. 'continue' → logprob: -6.255372047424316
    4. '   ' → logprob: -7.630372047424316
    5. '	' → logprob: -8.380372047424316
    6. '	continue' → logprob: -9.255372047424316
    7. '           ' → logprob: -9.880372047424316
    8. ' ' → logprob: -10.505372047424316
    9. '        
' → logprob: -10.505372047424316
    10. '               ' → logprob: -12.005372047424316

Token 278: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.02506859600543976
    2. ' continue' → logprob: -3.775068521499634
    3. '       ' → logprob: -6.525068759918213
    4. '   ' → logprob: -8.275068283081055
    5. '	continue' → logprob: -9.650068283081055
    6. 'contin' → logprob: -10.900068283081055
    7. 'continu' → logprob: -11.650068283081055
    8. '           ' → logprob: -12.525068283081055
    9. '_continue' → logprob: -12.650068283081055
    10. ' continu' → logprob: -14.525068283081055

Token 279: ' Ainsi' (ID: 65093)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.03029453754425049
    2. ' continue' → logprob: -3.530294418334961
    3. '       ' → logprob: -8.405294418334961
    4. 'contin' → logprob: -8.905294418334961
    5. 'continu' → logprob: -9.030294418334961
    6. '	continue' → logprob: -10.530294418334961
    7. '   ' → logprob: -10.905294418334961
    8. '           ' → logprob: -11.780294418334961
    9. 'cont' → logprob: -12.405294418334961
    10. '_continue' → logprob: -12.780294418334961

Token 280: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11197864264249802
    2. ' continue' → logprob: -2.736978530883789
    3. 'continue' → logprob: -3.611978530883789
    4. '           ' → logprob: -4.986978530883789
    5. '   ' → logprob: -5.236978530883789
    6. ' ' → logprob: -7.611978530883789
    7. '        ' → logprob: -7.611978530883789
    8. 'contin' → logprob: -8.361978530883789
    9. '    ' → logprob: -8.736978530883789
    10. '  ' → logprob: -9.111978530883789

Token 281: ' on' (ID: 402)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.489871084690094
    2. ' continue' → logprob: -1.2398710250854492
    3. 'ans' → logprob: -3.239871025085449
    4. ' ans' → logprob: -3.614871025085449
    5. '   ' → logprob: -3.864871025085449
    6. 'pass' → logprob: -4.989871025085449
    7. ' pass' → logprob: -6.489871025085449
    8. '       ' → logprob: -6.864871025085449
    9. 'contin' → logprob: -7.864871025085449
    10. 'continu' → logprob: -7.989871025085449

Token 282: ' ne' (ID: 453)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.05855947732925415
    2. 'continue' → logprob: -3.0585594177246094
    3. '   ' → logprob: -5.433559417724609
    4. 'contin' → logprob: -6.308559417724609
    5. '       ' → logprob: -7.183559417724609
    6. '    ' → logprob: -7.183559417724609
    7. ' ' → logprob: -7.433559417724609
    8. ' cont' → logprob: -8.05855941772461
    9. ' continuer' → logprob: -8.30855941772461
    10. '	continue' → logprob: -8.30855941772461

Token 283: ' traite' (ID: 180696)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.44813671708106995
    2. 'continue' → logprob: -1.1981366872787476
    3. '       ' → logprob: -3.198136806488037
    4. '   ' → logprob: -5.073136806488037
    5. 'contin' → logprob: -5.323136806488037
    6. 'pas' → logprob: -6.323136806488037
    7. 'break' → logprob: -6.573136806488037
    8. 'change' → logprob: -7.698136806488037
    9. 's' → logprob: -7.823136806488037
    10. ' ' → logprob: -7.823136806488037

Token 284: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.6606501936912537
    2. ' pas' → logprob: -0.7856501936912537
    3. '       ' → logprob: -5.160650253295898
    4. ' ' → logprob: -5.910650253295898
    5. ' aucune' → logprob: -6.160650253295898
    6. ' the' → logprob: -6.285650253295898
    7. ' la' → logprob: -6.285650253295898
    8. '   ' → logprob: -6.410650253295898
    9. ' aucun' → logprob: -6.410650253295898
    10. ' rien' → logprob: -6.660650253295898

Token 285: ' plus' (ID: 2932)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.8910093307495117
    2. 'la' → logprob: -1.3910093307495117
    3. 'le' → logprob: -2.8910093307495117
    4. 'continue' → logprob: -3.0160093307495117
    5. 'pas' → logprob: -3.3910093307495117
    6. 'l' → logprob: -3.6410093307495117
    7. ' le' → logprob: -3.8910093307495117
    8. 'les' → logprob: -4.016009330749512
    9. '   ' → logprob: -4.016009330749512
    10. 'contin' → logprob: -4.141009330749512

Token 286: ' loin' (ID: 40875)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.058137059211731
    2. '       ' → logprob: -1.558137059211731
    3. ' ' → logprob: -2.0581369400024414
    4. '    ' → logprob: -2.4331369400024414
    5. '        
' → logprob: -3.0581369400024414
    6. '  ' → logprob: -3.1831369400024414
    7. '    
' → logprob: -3.4331369400024414
    8. 'continue' → logprob: -3.5581369400024414
    9. 'x' → logprob: -4.683136940002441
    10. '        ' → logprob: -4.808136940002441

Token 287: ' les' (ID: 1341)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08632587641477585
    2. '        
' → logprob: -3.3363258838653564
    3. ' continue' → logprob: -3.5863258838653564
    4. 'continue' → logprob: -4.836325645446777
    5. '   ' → logprob: -5.836325645446777
    6. ' 
' → logprob: -6.086325645446777
    7. '       
' → logprob: -6.336325645446777
    8. ' ' → logprob: -6.836325645446777
    9. '    
' → logprob: -6.961325645446777
    10. '   
' → logprob: -7.961325645446777

Token 288: ' nombres' (ID: 76205)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.4347805976867676
    2. ' nombres' → logprob: -1.5597805976867676
    3. 'n' → logprob: -1.6847805976867676
    4. 'élé' → logprob: -2.0597805976867676
    5. 'nombre' → logprob: -2.3097805976867676
    6. ' x' → logprob: -3.6847805976867676
    7. 'imp' → logprob: -4.184780597686768
    8. ' éléments' → logprob: -4.559780597686768
    9. ' nombre' → logprob: -4.934780597686768
    10. ' ' → logprob: -5.059780597686768

Token 289: ' imp' (ID: 3282)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.43934786319732666
    2. 'contin' → logprob: -2.189347743988037
    3. '       ' → logprob: -2.689347743988037
    4. '   ' → logprob: -3.064347743988037
    5. ' continue' → logprob: -3.189347743988037
    6. ' x' → logprob: -3.939347743988037
    7. ' pairs' → logprob: -4.564347743988037
    8. 'x' → logprob: -4.564347743988037
    9. 'pairs' → logprob: -4.689347743988037
    10. 'imp' → logprob: -5.189347743988037

Token 290: 'airs' (ID: 6498)
  Prédit: 'ort'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ort' → logprob: -0.040706802159547806
    2. 'orts' → logprob: -3.5407068729400635
    3. 'orted' → logprob: -5.415706634521484
    4. 'ord' → logprob: -6.290706634521484
    5. 'ar' → logprob: -7.040706634521484
    6. 'airs' → logprob: -7.540706634521484
    7. 'or' → logprob: -7.665706634521484
    8. 'r' → logprob: -8.040706634521484
    9. 'air' → logprob: -8.040706634521484
    10. 'ass' → logprob: -8.165706634521484

Token 291: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008568479679524899
    2. ' continue' → logprob: -4.883568286895752
    3. 'continue' → logprob: -7.758568286895752
    4. '   ' → logprob: -8.63356876373291
    5. '        
' → logprob: -8.75856876373291
    6. '	' → logprob: -9.50856876373291
    7. '	continue' → logprob: -9.75856876373291
    8. '
' → logprob: -11.13356876373291
    9. ' continues' → logprob: -11.75856876373291
    10. '           ' → logprob: -11.75856876373291

Token 292: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1726260930299759
    2. ' continue' → logprob: -2.17262601852417
    3. 'continue' → logprob: -3.17262601852417
    4. '	continue' → logprob: -6.92262601852417
    5. '   ' → logprob: -7.17262601852417
    6. '	' → logprob: -7.29762601852417
    7. '        
' → logprob: -9.672626495361328
    8. '_continue' → logprob: -9.922626495361328
    9. 'contin' → logprob: -10.047626495361328
    10. ' ' → logprob: -10.547626495361328

Token 293: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.05317169427871704
    2. ' continue' → logprob: -3.3031716346740723
    3. '       ' → logprob: -4.428171634674072
    4. '   ' → logprob: -5.928171634674072
    5. '	continue' → logprob: -8.17817211151123
    6. 'continu' → logprob: -9.67817211151123
    7. 'contin' → logprob: -9.92817211151123
    8. '_continue' → logprob: -12.17817211151123
    9. ' ' → logprob: -12.30317211151123
    10. ' continu' → logprob: -12.55317211151123

Token 294: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5540599226951599
    2. '    
' → logprob: -0.9290599226951599
    3. '   
' → logprob: -4.554059982299805
    4. ' 
' → logprob: -4.554059982299805
    5. ' ' → logprob: -5.554059982299805
    6. '  
' → logprob: -6.429059982299805
    7. '  ' → logprob: -6.554059982299805
    8. '
' → logprob: -7.179059982299805
    9. '     
' → logprob: -7.554059982299805
    10. '    ' → logprob: -7.929059982299805

Token 295: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.118050217628479
    2. '    
' → logprob: -2.3680500984191895
    3. 'if' → logprob: -4.9930500984191895
    4. ' if' → logprob: -5.2430500984191895
    5. ' 
' → logprob: -6.7430500984191895
    6. ' else' → logprob: -6.9930500984191895
    7. '   
' → logprob: -7.1180500984191895
    8. '     
' → logprob: -7.2430500984191895
    9. ' ' → logprob: -7.4930500984191895
    10. 'else' → logprob: -7.6180500984191895

Token 296: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46993279457092285
    2. '    
' → logprob: -1.5949327945709229
    3. 'if' → logprob: -2.469932794570923
    4. ' if' → logprob: -3.344932794570923
    5. 'else' → logprob: -3.969932794570923
    6. ' else' → logprob: -4.844932556152344
    7. ' 
' → logprob: -4.844932556152344
    8. '   
' → logprob: -5.469932556152344
    9. 'elif' → logprob: -5.719932556152344
    10. ' ' → logprob: -6.094932556152344

Token 297: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.19563396275043488
    2. 'ans' → logprob: -2.070633888244629
    3. 'else' → logprob: -3.195633888244629
    4. '#' → logprob: -5.445633888244629
    5. ' if' → logprob: -5.945633888244629
    6. 'elif' → logprob: -6.445633888244629
    7. '   ' → logprob: -6.945633888244629
    8. ' ans' → logprob: -7.445633888244629
    9. ' ' → logprob: -9.195633888244629
    10. ' else' → logprob: -9.445633888244629

Token 298: ' on' (ID: 402)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.024973949417471886
    2. 'x' → logprob: -3.7749738693237305
    3. ' ' → logprob: -6.7749738693237305
    4. ' n' → logprob: -8.14997386932373
    5. ' not' → logprob: -9.52497386932373
    6. ' ans' → logprob: -9.64997386932373
    7. 'n' → logprob: -9.77497386932373
    8. '   ' → logprob: -11.14997386932373
    9. '  ' → logprob: -11.27497386932373
    10. ' a' → logprob: -11.39997386932373

Token 299: ' arrive' (ID: 18338)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.0190280675888062
    2. ' n' → logprob: -1.0190280675888062
    3. ' x' → logprob: -1.5190280675888062
    4. ' trouve' → logprob: -4.894028186798096
    5. '   ' → logprob: -5.019028186798096
    6. ' ' → logprob: -5.019028186798096
    7. 'a' → logprob: -5.019028186798096
    8. ' else' → logprob: -5.144028186798096
    9. 'else' → logprob: -5.394028186798096
    10. 'x' → logprob: -5.394028186798096

Token 300: ' ici' (ID: 27994)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.2971506416797638
    2. ' ici' → logprob: -1.9221506118774414
    3. ' a' → logprob: -3.2971506118774414
    4. '   ' → logprob: -3.4221506118774414
    5. ' là' → logprob: -4.422150611877441
    6. ' ' → logprob: -4.922150611877441
    7. 'à' → logprob: -5.047150611877441
    8. ' here' → logprob: -5.797150611877441
    9. '  ' → logprob: -5.922150611877441
    10. ' to' → logprob: -6.422150611877441

Token 301: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02598813734948635
    2. ',' → logprob: -4.0259881019592285
    3. '   ' → logprob: -5.7759881019592285
    4. ' :' → logprob: -5.9009881019592285
    5. ':
' → logprob: -6.2759881019592285
    6. ' :
' → logprob: -10.150988578796387
    7. ' ,' → logprob: -11.275988578796387
    8. ',
' → logprob: -11.650988578796387
    9. '       ' → logprob: -12.150988578796387
    10. '    ' → logprob: -12.775988578796387

Token 302: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9274346828460693
    2. ' ans' → logprob: -1.0524346828460693
    3. 'ans' → logprob: -1.4274346828460693
    4. '#' → logprob: -4.427434921264648
    5. '	ans' → logprob: -6.927434921264648
    6. ' if' → logprob: -7.177434921264648
    7. ' ' → logprob: -7.802434921264648
    8. 'if' → logprob: -7.927434921264648
    9. ' #' → logprob: -8.052434921264648
    10. '(ans' → logprob: -8.427434921264648

Token 303: ''est' (ID: 6616)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3487303853034973
    2. ''est' → logprob: -2.7237303256988525
    3. 'e' → logprob: -3.0987303256988525
    4. 'a' → logprob: -3.0987303256988525
    5. ' n' → logprob: -3.4737303256988525
    6. ''' → logprob: -4.223730564117432
    7. 'n' → logprob: -4.223730564117432
    8. '       ' → logprob: -4.348730564117432
    9. 'est' → logprob: -4.723730564117432
    10. ' ' → logprob: -4.848730564117432

Token 304: ' que' (ID: 661)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.05227433517575264
    2. ' que' → logprob: -3.302274227142334
    3. 'qu' → logprob: -4.802274227142334
    4. '   ' → logprob: -6.052274227142334
    5. ' ' → logprob: -6.677274227142334
    6. 'par' → logprob: -6.677274227142334
    7. ' parce' → logprob: -7.677274227142334
    8. ' qu' → logprob: -8.802274703979492
    9. '  ' → logprob: -9.302274703979492
    10. 'car' → logprob: -10.052274703979492

Token 305: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.635546863079071
    2. ' x' → logprob: -0.760546863079071
    3. ' le' → logprob: -6.010546684265137
    4. 'le' → logprob: -8.385546684265137
    5. ' ' → logprob: -8.510546684265137
    6. ' la' → logprob: -11.635546684265137
    7. '   ' → logprob: -12.010546684265137
    8. 'n' → logprob: -12.135546684265137
    9. ' ' → logprob: -12.135546684265137
    10. 'l' → logprob: -12.260546684265137

Token 306: ' est' (ID: 893)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.027842169627547264
    2. '%' → logprob: -3.6528422832489014
    3. ' ' → logprob: -6.527842044830322
    4. ' est' → logprob: -10.27784252166748
    5. ' n' → logprob: -10.65284252166748
    6. ' is' → logprob: -11.15284252166748
    7. ' ' → logprob: -13.15284252166748
    8. ' a' → logprob: -13.52784252166748
    9. ' ==' → logprob: -14.65284252166748
    10. '   ' → logprob: -14.65284252166748

Token 307: ' pair' (ID: 10610)
  Prédit: 'pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pair' → logprob: -0.008690795861184597
    2. ' pair' → logprob: -5.50869083404541
    3. 'pa' → logprob: -5.63369083404541
    4. 'un' → logprob: -7.13369083404541
    5. 'even' → logprob: -10.13369083404541
    6. 'par' → logprob: -10.13369083404541
    7. 'pari' → logprob: -10.25869083404541
    8. ' paire' → logprob: -10.75869083404541
    9. ' un' → logprob: -11.00869083404541
    10. ' ' → logprob: -11.38369083404541

Token 308: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025635301135480404
    2. '    
' → logprob: -6.3775634765625
    3. ',' → logprob: -7.8775634765625
    4. ' if' → logprob: -9.0025634765625
    5. ':' → logprob: -9.3775634765625
    6. ' and' → logprob: -9.5025634765625
    7. '    ' → logprob: -10.0025634765625
    8. '       ' → logprob: -10.1275634765625
    9. '  ' → logprob: -10.8775634765625
    10. '   
' → logprob: -10.8775634765625

Token 309: 'car' (ID: 6830)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03863336145877838
    2. ' )' → logprob: -4.163633346557617
    3. ')' → logprob: -4.663633346557617
    4. ' if' → logprob: -5.038633346557617
    5. 'if' → logprob: -5.538633346557617
    6. '       ' → logprob: -7.788633346557617
    7. 'else' → logprob: -7.788633346557617
    8. ' else' → logprob: -8.538633346557617
    9. '    ' → logprob: -8.663633346557617
    10. ' ' → logprob: -8.663633346557617

Token 310: ' sinon' (ID: 52915)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.33393213152885437
    2. 'x' → logprob: -1.3339321613311768
    3. ' not' → logprob: -4.208931922912598
    4. 'not' → logprob: -5.833931922912598
    5. '%' → logprob: -7.083931922912598
    6. 'le' → logprob: -8.458931922912598
    7. ' le' → logprob: -8.458931922912598
    8. ' %' → logprob: -8.833931922912598
    9. ' ' → logprob: -8.958931922912598
    10. '   ' → logprob: -9.083931922912598

Token 311: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08683115243911743
    2. 'on' → logprob: -3.9618310928344727
    3. 'continue' → logprob: -4.336831092834473
    4. ' continue' → logprob: -4.461831092834473
    5. ' le' → logprob: -4.586831092834473
    6. ',' → logprob: -4.586831092834473
    7. ' la' → logprob: -5.211831092834473
    8. '   ' → logprob: -5.461831092834473
    9. ' nous' → logprob: -5.836831092834473
    10. 'le' → logprob: -6.336831092834473

Token 312: ' aurait' (ID: 48306)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.307138204574585
    2. 'a' → logprob: -2.182138204574585
    3. ' a' → logprob: -2.307138204574585
    4. ' aurait' → logprob: -2.432138204574585
    5. 'n' → logprob: -2.557138204574585
    6. ' would' → logprob: -2.932138204574585
    7. ' ne' → logprob: -3.057138204574585
    8. 'continue' → logprob: -3.307138204574585
    9. 'would' → logprob: -3.557138204574585
    10. 'est' → logprob: -3.557138204574585

Token 313: ' sauté' (ID: 175577)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.4386606812477112
    2. 'continue' → logprob: -1.6886606216430664
    3. 'continu' → logprob: -1.8136606216430664
    4. 'continued' → logprob: -6.188660621643066
    5. 'eu' → logprob: -6.313660621643066
    6. ' continu' → logprob: -6.563660621643066
    7. 'fait' → logprob: -7.438660621643066
    8. 'cont' → logprob: -8.313660621643066
    9. ' continue' → logprob: -8.313660621643066
    10. ' eu' → logprob: -9.063660621643066

Token 314: ' cette' (ID: 7696)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.7283093929290771
    2. 'l' → logprob: -1.1033093929290771
    3. ' la' → logprob: -2.478309392929077
    4. 'le' → logprob: -3.228309392929077
    5. '   ' → logprob: -4.478309631347656
    6. 'continue' → logprob: -4.728309631347656
    7. 'au' → logprob: -4.853309631347656
    8. ' l' → logprob: -5.103309631347656
    9. 'contin' → logprob: -5.228309631347656
    10. 'à' → logprob: -5.228309631347656

Token 315: ' partie' (ID: 22139)
  Prédit: 'it'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'it' → logprob: -0.4925267696380615
    2. ' it' → logprob: -1.4925267696380615
    3. 'iteration' → logprob: -2.2425267696380615
    4. ' boucle' → logprob: -3.4925267696380615
    5. ' iteration' → logprob: -4.367527008056641
    6. 'if' → logprob: -5.992527008056641
    7. 'ligne' → logprob: -6.117527008056641
    8. 'continue' → logprob: -6.242527008056641
    9. 'iter' → logprob: -6.617527008056641
    10. ' ligne' → logprob: -6.867527008056641

Token 316: ' avec' (ID: 3937)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40738528966903687
    2. ')' → logprob: -1.2823853492736816
    3. ':' → logprob: -3.1573853492736816
    4. '    
' → logprob: -5.282385349273682
    5. '       ' → logprob: -5.907385349273682
    6. ',' → logprob: -6.407385349273682
    7. ' )' → logprob: -6.657385349273682
    8. ')
' → logprob: -7.407385349273682
    9. '):' → logprob: -7.532385349273682
    10. '    ' → logprob: -7.657385349273682

Token 317: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.021985974162817
    2. ' continue' → logprob: -3.8969860076904297
    3. 'le' → logprob: -7.64698600769043
    4. 'la' → logprob: -7.77198600769043
    5. ' la' → logprob: -8.27198600769043
    6. '   ' → logprob: -9.39698600769043
    7. ' le' → logprob: -9.77198600769043
    8. 'contin' → logprob: -10.02198600769043
    9. 'l' → logprob: -10.14698600769043
    10. 'continu' → logprob: -10.89698600769043

Token 318: ')
' (ID: 446)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25642889738082886
    2. ')' → logprob: -1.8814289569854736
    3. ':' → logprob: -3.5064289569854736
    4. '    
' → logprob: -4.3814287185668945
    5. '       ' → logprob: -4.3814287185668945
    6. '):' → logprob: -5.1314287185668945
    7. '),' → logprob: -6.2564287185668945
    8. '):
' → logprob: -6.3814287185668945
    9. ',' → logprob: -6.6314287185668945
    10. '   
' → logprob: -6.6314287185668945

Token 319: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06669861823320389
    2. ' if' → logprob: -3.0666985511779785
    3. 'if' → logprob: -4.0666985511779785
    4. ' ans' → logprob: -8.066699028015137
    5. '    
' → logprob: -8.566699028015137
    6. 'ans' → logprob: -8.816699028015137
    7. '    ' → logprob: -10.441699028015137
    8. ' ' → logprob: -10.691699028015137
    9. '       ' → logprob: -10.816699028015137
    10. '  ' → logprob: -10.941699028015137

Token 320: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.0362902879714966
    2. ' ans' → logprob: -1.1612902879714966
    3. 'if' → logprob: -1.7862902879714966
    4. ' if' → logprob: -2.161290168762207
    5. '   ' → logprob: -3.036290168762207
    6. '	ans' → logprob: -7.911290168762207
    7. '(ans' → logprob: -7.911290168762207
    8. 'else' → logprob: -8.786290168762207
    9. ' ' → logprob: -8.786290168762207
    10. '#' (adapté à ' #') → logprob: -9.723790168762207

Token 321: ' On' (ID: 2160)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.6362566947937012
    2. 'if' → logprob: -0.7612566947937012
    3. ' if' → logprob: -6.386256694793701
    4. ' ans' → logprob: -6.886256694793701
    5. '   ' → logprob: -8.13625717163086
    6. 'pass' → logprob: -8.76125717163086
    7. 'else' → logprob: -8.76125717163086
    8. '#' → logprob: -9.26125717163086
    9. '```' → logprob: -10.01125717163086
    10. '(ans' → logprob: -10.51125717163086

Token 322: ' vér' (ID: 42524)
  Prédit: 'met'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'met' → logprob: -0.8777787685394287
    2. ' met' → logprob: -1.1277787685394287
    3. 's' → logprob: -3.0027787685394287
    4. 'v' → logprob: -3.5027787685394287
    5. '   ' → logprob: -3.8777787685394287
    6. 've' → logprob: -4.002779006958008
    7. 'a' → logprob: -4.002779006958008
    8. 'do' → logprob: -4.502779006958008
    9. 'set' → logprob: -4.502779006958008
    10. 'change' → logprob: -4.627779006958008

Token 323: 'ifie' (ID: 46409)
  Prédit: 'ifie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifie' → logprob: -0.22618094086647034
    2. 'f' → logprob: -1.851180911064148
    3. 'if' → logprob: -3.6011810302734375
    4. '   ' → logprob: -5.7261810302734375
    5. 'ifies' → logprob: -5.8511810302734375
    6. 'fi' → logprob: -5.9761810302734375
    7. 'ify' → logprob: -6.1011810302734375
    8. 'ifiez' → logprob: -6.3511810302734375
    9. 'fy' → logprob: -6.6011810302734375
    10. '#' → logprob: -7.2261810302734375

Token 324: ' alors' (ID: 17971)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5787020921707153
    2. ' ' → logprob: -1.0787020921707153
    3. '   ' → logprob: -3.328701972961426
    4. ' si' → logprob: -3.328701972961426
    5. 'if' → logprob: -3.828701972961426
    6. 'si' → logprob: -6.328701972961426
    7. '  ' → logprob: -6.703701972961426
    8. ' s' → logprob: -7.453701972961426
    9. '	if' → logprob: -7.953701972961426
    10. ' i' → logprob: -7.953701972961426

Token 325: ' une' (ID: 2463)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37664926052093506
    2. 'if' → logprob: -1.626649260520935
    3. '   ' → logprob: -2.6266493797302246
    4. ' ' → logprob: -3.7516493797302246
    5. ' si' → logprob: -4.001649379730225
    6. 'si' → logprob: -6.126649379730225
    7. '  ' → logprob: -8.251648902893066
    8. '    ' → logprob: -8.501648902893066
    9. '	if' → logprob: -9.126648902893066
    10. 'x' → logprob: -9.501648902893066

Token 326: ' condition' (ID: 7060)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7493266463279724
    2. ' if' → logprob: -1.1243267059326172
    3. ' condition' → logprob: -2.624326705932617
    4. 'condition' → logprob: -2.999326705932617
    5. ':' → logprob: -3.999326705932617
    6. 'n' → logprob: -4.999326705932617
    7. '   ' → logprob: -5.124326705932617
    8. ' ' → logprob: -5.249326705932617
    9. 's' → logprob: -5.624326705932617
    10. 'x' → logprob: -5.749326705932617

Token 327: ' supplémentaire' (ID: 111252)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06582805514335632
    2. ':' → logprob: -3.4408280849456787
    3. 'if' → logprob: -4.0658278465271
    4. ' :' → logprob: -4.9408278465271
    5. '   ' → logprob: -5.4408278465271
    6. ' ' → logprob: -6.4408278465271
    7. ' x' → logprob: -7.9408278465271
    8. '    ' → logprob: -9.065828323364258
    9. ' =' → logprob: -9.065828323364258
    10. ' i' → logprob: -9.440828323364258

Token 328: ' :
' (ID: 10039)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14401015639305115
    2. ':' → logprob: -2.269010066986084
    3. ' if' → logprob: -3.644010066986084
    4. '    ' → logprob: -6.519010066986084
    5. ' ' → logprob: -7.269010066986084
    6. ' :' → logprob: -7.644010066986084
    7. '       ' → logprob: -7.644010066986084
    8. '<|end|>' → logprob: -8.019010543823242
    9. 'if' → logprob: -8.269010543823242
    10. '  ' → logprob: -8.394010543823242

Token 329: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1481940746307373
    2. 'if' → logprob: -2.3981940746307373
    3. '   ' → logprob: -3.3981940746307373
    4. ' x' → logprob: -5.023194313049316
    5. ' ' → logprob: -5.898194313049316
    6. 'x' → logprob: -6.148194313049316
    7. '    ' → logprob: -6.773194313049316
    8. '    
' → logprob: -7.898194313049316
    9. ' 
' → logprob: -8.648194313049316
    10. '     
' → logprob: -9.648194313049316

Token 330: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4099166989326477
    2. ' if' → logprob: -1.159916639328003
    3. '   ' → logprob: -3.784916639328003
    4. 'ans' → logprob: -11.159916877746582
    5. ' ans' → logprob: -11.534916877746582
    6. ' ' → logprob: -11.659916877746582
    7. ' i' → logprob: -11.659916877746582
    8. 'i' → logprob: -12.034916877746582
    9. '    
' → logprob: -12.034916877746582
    10. '    ' → logprob: -12.534916877746582

Token 331: '  ' (ID: 256)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35108891129493713
    2. 'if' → logprob: -1.2260888814926147
    3. '   ' → logprob: -5.976089000701904
    4. ' ' → logprob: -9.976088523864746
    5. 'If' → logprob: -10.976088523864746
    6. '    ' → logprob: -11.976088523864746
    7. ' i' → logprob: -12.101088523864746
    8. '	if' → logprob: -12.101088523864746
    9. 'i' → logprob: -12.351088523864746
    10. '  ' → logprob: -12.851088523864746

Token 332: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0010410251561552286
    2. ' if' → logprob: -7.001040935516357
    3. '   ' → logprob: -9.126041412353516
    4. 'ans' → logprob: -12.126041412353516
    5. ' ' → logprob: -12.626041412353516
    6. 'If' → logprob: -13.001041412353516
    7. '       ' → logprob: -13.001041412353516
    8. 'elif' → logprob: -13.126041412353516
    9. 'si' → logprob: -13.501041412353516
    10. '  ' → logprob: -14.501041412353516

Token 333: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4994943141937256
    2. 'x' → logprob: -0.9994943141937256
    3. ' if' → logprob: -4.374494552612305
    4. ' x' → logprob: -4.999494552612305
    5. 'Si' → logprob: -6.374494552612305
    6. 'n' → logprob: -6.874494552612305
    7. 'If' → logprob: -6.874494552612305
    8. 'ans' → logprob: -7.249494552612305
    9. 'si' → logprob: -7.374494552612305
    10. 'abs' → logprob: -8.249494552612305

Token 334: ' doit' (ID: 21822)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6882866621017456
    2. ' >' → logprob: -1.5632866621017456
    3. ' <' → logprob: -2.188286781311035
    4. '%' → logprob: -2.563286781311035
    5. ' >=' → logprob: -3.188286781311035
    6. ' ==' → logprob: -4.188286781311035
    7. ' <=' → logprob: -4.313286781311035
    8. '>' → logprob: -4.938286781311035
    9. ' ' → logprob: -5.063286781311035
    10. ' !=' → logprob: -5.313286781311035

Token 335: ' être' (ID: 9104)
  Prédit: ' be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' be' → logprob: -1.4231383800506592
    2. ' %' → logprob: -1.4231383800506592
    3. ' not' → logprob: -1.5481383800506592
    4. '%' → logprob: -2.173138380050659
    5. ' ' → logprob: -2.923138380050659
    6. ' >=' → logprob: -3.173138380050659
    7. ' >' → logprob: -3.673138380050659
    8. '<|end|>' → logprob: -4.423138618469238
    9. ' <' → logprob: -4.673138618469238
    10. 'not' → logprob: -4.923138618469238

Token 336: ' à' (ID: 1221)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.24647855758667
    2. 'div' → logprob: -1.49647855758667
    3. ' divisible' → logprob: -1.62147855758667
    4. ' supérieur' → logprob: -2.24647855758667
    5. '>=' → logprob: -3.12147855758667
    6. 'n' → logprob: -3.62147855758667
    7. 'sup' → logprob: -3.87147855758667
    8. '>' → logprob: -4.24647855758667
    9. '<=' → logprob: -4.37147855758667
    10. ' inférieur' → logprob: -4.74647855758667

Token 337: ' la' (ID: 557)
  Prédit: 'au'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'au' → logprob: -0.8545270562171936
    2. 'l' → logprob: -2.104526996612549
    3. 'moins' → logprob: -2.479526996612549
    4. 'less' → logprob: -2.729526996612549
    5. '<|end|>' → logprob: -2.979526996612549
    6. 'strict' → logprob: -3.104526996612549
    7. ' ' → logprob: -3.479526996612549
    8. 'la' → logprob: -3.729526996612549
    9. 'div' → logprob: -3.854526996612549
    10. 'least' → logprob: -4.104526996612549

Token 338: ' fois' (ID: 14697)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -1.2110103368759155
    2. 'multip' → logprob: -1.3360103368759155
    3. 'au' → logprob: -1.8360103368759155
    4. 'strict' → logprob: -3.086010456085205
    5. ' ' → logprob: -3.461010456085205
    6. 'mo' → logprob: -3.711010456085205
    7. 'multiple' → logprob: -3.836010456085205
    8. '1' → logprob: -3.961010456085205
    9. '2' → logprob: -3.961010456085205
    10. '0' → logprob: -4.211010456085205

Token 339: ' pair' (ID: 10610)
  Prédit: 'strict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'strict' → logprob: -1.1956892013549805
    2. ' supérieur' → logprob: -1.3206892013549805
    3. ' divisible' → logprob: -1.4456892013549805
    4. 'sup' → logprob: -2.5706892013549805
    5. 'div' → logprob: -3.3206892013549805
    6. ' inférieur' → logprob: -4.3206892013549805
    7. ' strict' → logprob: -4.6956892013549805
    8. 'plus' → logprob: -4.6956892013549805
    9. ' plus' → logprob: -5.1956892013549805
    10. 'multiple' → logprob: -5.3206892013549805

Token 340: ',' (ID: 11)
  Prédit: ' et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.5656678080558777
    2. 'et' → logprob: -0.9406678080558777
    3. ' and' → logprob: -3.5656678676605225
    4. 'and' → logprob: -5.190667629241943
    5. ' ' → logprob: -5.315667629241943
    6. '#' → logprob: -7.190667629241943
    7. '   ' → logprob: -7.315667629241943
    8. 'e' → logprob: -7.940667629241943
    9. ',' → logprob: -8.190668106079102
    10. ' divisible' → logprob: -8.940668106079102

Token 341: ' et' (ID: 859)
  Prédit: ' et'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' et' → logprob: -0.9923754334449768
    2. ' and' → logprob: -1.242375373840332
    3. '   ' → logprob: -1.992375373840332
    4. 'et' → logprob: -2.742375373840332
    5. 'and' → logprob: -3.242375373840332
    6. ' x' → logprob: -3.492375373840332
    7. ' divisible' → logprob: -3.867375373840332
    8. 'x' → logprob: -4.117375373840332
    9. ' ' → logprob: -4.992375373840332
    10. ' n' → logprob: -5.367375373840332

Token 342: ' divisible' (ID: 167813)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1097277402877808
    2. ' x' → logprob: -1.2347277402877808
    3. ' divisible' → logprob: -1.6097277402877808
    4. 'strict' → logprob: -2.9847278594970703
    5. 'sup' → logprob: -3.9847278594970703
    6. 'n' → logprob: -3.9847278594970703
    7. ' supérieur' → logprob: -4.48472785949707
    8. ' strict' → logprob: -4.73472785949707
    9. 'div' → logprob: -4.73472785949707
    10. '   ' → logprob: -5.23472785949707

Token 343: ' soit' (ID: 17293)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.26976701617240906
    2. 'par' → logprob: -1.7697670459747314
    3. ' ' → logprob: -3.3947670459747314
    4. 'by' → logprob: -5.019766807556152
    5. '<|end|>' → logprob: -5.019766807556152
    6. ' by' → logprob: -5.394766807556152
    7. '   ' → logprob: -6.144766807556152
    8. '_par' → logprob: -6.519766807556152
    9. '	par' → logprob: -6.957266807556152
    10. 'div' → logprob: -7.207266807556152

Token 344: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.3914906978607178
    2. 'par' → logprob: -1.1414906978607178
    3. ' ' → logprob: -6.016490936279297
    4. 'by' → logprob: -8.141490936279297
    5. '<|end|>' → logprob: -8.141490936279297
    6. '  ' → logprob: -8.266490936279297
    7. '   ' → logprob: -8.641490936279297
    8. '(par' → logprob: -8.766490936279297
    9. '3' → logprob: -9.016490936279297
    10. '_par' → logprob: -9.641490936279297

Token 345: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1717652678489685
    2. ' ' → logprob: -2.0467653274536133
    3. '4' → logprob: -3.6717653274536133
    4. '5' → logprob: -6.546765327453613
    5. 'n' → logprob: -7.296765327453613
    6. ' n' → logprob: -7.421765327453613
    7. '2' → logprob: -9.046765327453613
    8. '7' → logprob: -9.296765327453613
    9. '6' → logprob: -9.609265327453613
    10. '10' → logprob: -10.359265327453613

Token 346: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.033335935324430466
    2. '4' → logprob: -3.6583359241485596
    3. ' ' → logprob: -5.283336162567139
    4. '5' → logprob: -6.658336162567139
    5. 'n' → logprob: -8.53333568572998
    6. '7' → logprob: -9.28333568572998
    7. '2' → logprob: -9.40833568572998
    8. '10' → logprob: -9.78333568572998
    9. '   ' → logprob: -10.28333568572998
    10. '6' → logprob: -10.34583568572998

Token 347: ',' (ID: 11)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.31515297293663025
    2. ' ou' → logprob: -1.6901530027389526
    3. ',' → logprob: -3.940152883529663
    4. '   ' → logprob: -4.065153121948242
    5. 'or' → logprob: -4.315153121948242
    6. ' and' → logprob: -4.565153121948242
    7. ' ' → logprob: -4.565153121948242
    8. ' et' → logprob: -5.565153121948242
    9. '  ' → logprob: -5.690153121948242
    10. ' soit' → logprob: -6.065153121948242

Token 348: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.657329797744751
    2. ' ' → logprob: -2.032329797744751
    3. '   ' → logprob: -2.532329797744751
    4. ' et' → logprob: -2.532329797744751
    5. ' ou' → logprob: -2.907329797744751
    6. '       ' → logprob: -3.657329797744751
    7. '#' → logprob: -4.032329559326172
    8. ' or' → logprob: -4.157329559326172
    9. ' and' → logprob: -4.282329559326172
    10. '2' → logprob: -4.532329559326172

Token 349: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.05275166407227516
    2. 'par' → logprob: -3.0527517795562744
    3. '7' → logprob: -6.302751541137695
    4. ' ' → logprob: -6.927751541137695
    5. '5' → logprob: -7.927751541137695
    6. '6' → logprob: -8.052751541137695
    7. '2' → logprob: -9.052751541137695
    8. 'by' → logprob: -9.302751541137695
    9. '4' → logprob: -9.552751541137695
    10. '9' → logprob: -9.927751541137695

Token 350: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.05633183941245079
    2. '7' → logprob: -3.8063318729400635
    3. ' ' → logprob: -3.8063318729400635
    4. '2' → logprob: -5.181331634521484
    5. '4' → logprob: -5.556331634521484
    6. '9' → logprob: -7.681331634521484
    7. '11' → logprob: -9.056331634521484
    8. '6' → logprob: -9.431331634521484
    9. '```' → logprob: -10.056331634521484
    10. '10' → logprob: -10.181331634521484

Token 351: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.036801643669605255
    2. '7' → logprob: -3.41180157661438
    3. '2' → logprob: -6.786801815032959
    4. '4' → logprob: -6.786801815032959
    5. ' ' → logprob: -7.286801815032959
    6. '9' → logprob: -9.4118013381958
    7. '10' → logprob: -9.7868013381958
    8. '11' → logprob: -10.2868013381958
    9. '```' → logprob: -11.1618013381958
    10. '6' → logprob: -11.2868013381958

Token 352: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0072981445118784904
    2. '       ' → logprob: -5.757297992706299
    3. ' if' → logprob: -6.382297992706299
    4. ':' → logprob: -7.007297992706299
    5. ',' → logprob: -7.507297992706299
    6. ' and' → logprob: -8.132298469543457
    7. '    
' → logprob: -8.507298469543457
    8. ' or' → logprob: -9.257298469543457
    9. '  ' → logprob: -9.507298469543457
    10. '    ' → logprob: -10.382298469543457

Token 353: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018353492487221956
    2. ' if' → logprob: -6.626835346221924
    3. '    
' → logprob: -8.001835823059082
    4. '
' → logprob: -9.751835823059082
    5. 'if' → logprob: -10.126835823059082
    6. ',' → logprob: -11.126835823059082
    7. '       ' → logprob: -11.251835823059082
    8. ':' → logprob: -11.501835823059082
    9. '<|end|>' → logprob: -12.001835823059082
    10. ' and' → logprob: -12.126835823059082

Token 354: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08044039458036423
    2. ' if' → logprob: -2.7054402828216553
    3. 'if' → logprob: -4.580440521240234
    4. ':' → logprob: -8.955440521240234
    5. '       ' → logprob: -9.955440521240234
    6. '	if' → logprob: -12.205440521240234
    7. '  ' → logprob: -12.580440521240234
    8. '    ' → logprob: -12.955440521240234
    9. ' :' → logprob: -12.955440521240234
    10. ' and' → logprob: -13.080440521240234

Token 355: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4076389968395233
    2. '   ' → logprob: -1.4076390266418457
    3. ' if' → logprob: -2.4076390266418457
    4. '       ' → logprob: -11.282638549804688
    5. ' ' → logprob: -11.907638549804688
    6. '  ' → logprob: -12.407638549804688
    7. 'elif' → logprob: -12.782638549804688
    8. '	if' → logprob: -13.157638549804688
    9. 'else' → logprob: -13.407638549804688
    10. '    
' → logprob: -13.907638549804688

Token 356: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010394792072474957
    2. ' if' → logprob: -4.88539457321167
    3. '   ' → logprob: -5.88539457321167
    4. ' ' → logprob: -13.260395050048828
    5. 'elif' → logprob: -13.510395050048828
    6. '  ' → logprob: -14.135395050048828
    7. '	if' → logprob: -14.635395050048828
    8. '    
' → logprob: -15.510395050048828
    9. '       ' → logprob: -16.135395050048828
    10. 'If' → logprob: -16.635395050048828

Token 357: ' x' (ID: 1215)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23244261741638184
    2. ' if' → logprob: -1.6074426174163818
    3. '   ' → logprob: -4.982442855834961
    4. ' ' → logprob: -9.982442855834961
    5. '       ' → logprob: -10.607442855834961
    6. '  ' → logprob: -10.607442855834961
    7. 'else' → logprob: -10.732442855834961
    8. 'elif' → logprob: -12.107442855834961
    9. '	if' → logprob: -12.232442855834961
    10. 'If' → logprob: -12.357442855834961

Token 358: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.02834230102598667
    2. '%' → logprob: -3.6533422470092773
    3. ' ' → logprob: -6.403342247009277
    4. '   ' → logprob: -8.778342247009277
    5. ' if' → logprob: -9.278342247009277
    6. 'if' → logprob: -10.278342247009277
    7. ' ==' → logprob: -10.778342247009277
    8. ' %=' → logprob: -10.778342247009277
    9. ' %
' → logprob: -11.653342247009277
    10. ' not' → logprob: -11.653342247009277

Token 359: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.06243424117565155
    2. ' ' → logprob: -2.812434196472168
    3. '2' → logprob: -7.812434196472168
    4. '6' → logprob: -10.937434196472168
    5. ' (' → logprob: -11.062434196472168
    6. '(' → logprob: -11.437434196472168
    7. '```' → logprob: -11.812434196472168
    8. '1' → logprob: -12.999934196472168
    9. '  ' → logprob: -13.312434196472168
    10. '==' → logprob: -13.874934196472168

Token 360: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005457649822346866
    2. '2' → logprob: -7.875545978546143
    3. '6' → logprob: -9.500545501708984
    4. ' ' → logprob: -9.750545501708984
    5. '15' → logprob: -11.000545501708984
    6. '```' → logprob: -11.875545501708984
    7. '1' → logprob: -13.000545501708984
    8. '``' → logprob: -13.500545501708984
    9. '
' → logprob: -14.313045501708984
    10. '30' → logprob: -14.375545501708984

Token 361: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6987696290016174
    2. ' ==' → logprob: -0.6987696290016174
    3. ' !=' → logprob: -5.573769569396973
    4. '!=' → logprob: -6.948769569396973
    5. ' in' → logprob: -7.948769569396973
    6. '0' → logprob: -8.698769569396973
    7. ' ' → logprob: -9.198769569396973
    8. '=' → logprob: -9.948769569396973
    9. 'in' → logprob: -10.073769569396973
    10. ' and' → logprob: -10.698769569396973

Token 362: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052392068319022655
    2. ' ' → logprob: -5.255239009857178
    3. '1' → logprob: -12.755239486694336
    4. '=' → logprob: -14.442739486694336
    5. '2' → logprob: -14.880239486694336
    6. '==' → logprob: -15.067739486694336
    7. '```' → logprob: -15.442739486694336
    8. ' ' → logprob: -15.567739486694336
    9. ')' → logprob: -15.692739486694336
    10. ' ==' → logprob: -16.380239486694336

Token 363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0009749477612785995
    2. ' ' → logprob: -7.000975131988525
    3. '1' → logprob: -9.750974655151367
    4. '=' → logprob: -13.438474655151367
    5. '2' → logprob: -14.188474655151367
    6. '==' → logprob: -14.688474655151367
    7. ')' → logprob: -14.875974655151367
    8. '```' → logprob: -15.313474655151367
    9. ' ==' → logprob: -15.438474655151367
    10. ' =' → logprob: -15.938474655151367

Token 364: ' vér' (ID: 42524)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.030812209472060204
    2. 'and' → logprob: -3.5308122634887695
    3. ' or' → logprob: -7.0308122634887695
    4. '   ' → logprob: -9.03081226348877
    5. ' ' → logprob: -10.15581226348877
    6. '    ' → logprob: -12.40581226348877
    7. '       ' → logprob: -12.78081226348877
    8. ':' → logprob: -12.90581226348877
    9. 'or' → logprob: -13.03081226348877
    10. '  ' → logprob: -13.28081226348877

Token 365: 'ifie' (ID: 46409)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.21050801873207092
    2. 'ifie' → logprob: -2.335508108139038
    3. 'f' → logprob: -2.960508108139038
    4. 'ifi' → logprob: -4.960507869720459
    5. 'a' → logprob: -4.960507869720459
    6. '   ' → logprob: -5.460507869720459
    7. 'er' → logprob: -5.710507869720459
    8. '#' → logprob: -5.835507869720459
    9. 'ify' → logprob: -5.835507869720459
    10. 'al' → logprob: -5.835507869720459

Token 366: ' que' (ID: 661)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2879713177680969
    2. ' ' → logprob: -1.7879712581634521
    3. 'and' → logprob: -3.037971258163452
    4. ' True' → logprob: -3.787971258163452
    5. '<|end|>' → logprob: -5.787971496582031
    6. ' the' → logprob: -6.287971496582031
    7. '    ' → logprob: -6.662971496582031
    8. '   ' → logprob: -7.037971496582031
    9. ' not' → logprob: -7.037971496582031
    10. '  ' → logprob: -7.162971496582031

Token 367: ' x' (ID: 1215)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.6070864796638489
    2. 'True' → logprob: -1.232086420059204
    3. 'x' → logprob: -2.357086420059204
    4. ' x' → logprob: -2.732086420059204
    5. 'False' → logprob: -6.232086658477783
    6. ' False' → logprob: -6.857086658477783
    7. '(True' → logprob: -7.732086658477783
    8. '0' → logprob: -9.982086181640625
    9. ' ' → logprob: -10.232086181640625
    10. ' (' → logprob: -10.607086181640625

Token 368: ' est' (ID: 893)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02909117005765438
    2. 'and' → logprob: -3.6540911197662354
    3. ' ' → logprob: -6.7790913581848145
    4. ' et' → logprob: -7.2790913581848145
    5. ' is' → logprob: -7.5290913581848145
    6. 'et' → logprob: -9.279090881347656
    7. ' continues' → logprob: -9.279090881347656
    8. ')' → logprob: -10.029090881347656
    9. '<|end|>' → logprob: -10.029090881347656
    10. ' )' → logprob: -10.654090881347656

Token 369: ' pair' (ID: 10610)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4770287573337555
    2. ' True' → logprob: -0.9770287275314331
    3. '0' → logprob: -6.102028846740723
    4. ' ' → logprob: -8.102028846740723
    5. '(True' → logprob: -8.602028846740723
    6. 'true' → logprob: -9.102028846740723
    7. ' true' → logprob: -10.727028846740723
    8. 'x' → logprob: -10.852028846740723
    9. ' x' → logprob: -11.477028846740723
    10. ' not' → logprob: -11.977028846740723

Token 370: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2819506824016571
    2. ' and' → logprob: -1.5319507122039795
    3. 'and' → logprob: -3.9069507122039795
    4. ' or' → logprob: -5.1569504737854
    5. '       ' → logprob: -6.2819504737854
    6. ' if' → logprob: -6.7819504737854
    7. ':' → logprob: -8.031950950622559
    8. '  ' → logprob: -9.281950950622559
    9. 'if' → logprob: -9.906950950622559
    10. ',' → logprob: -9.906950950622559

Token 371: 'ce' (ID: 400)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12066875398159027
    2. ')' → logprob: -2.495668649673462
    3. 'and' → logprob: -3.870668649673462
    4. ' )' → logprob: -4.620668888092041
    5. '   ' → logprob: -8.745668411254883
    6. ' ' → logprob: -9.370668411254883
    7. '),' → logprob: -9.495668411254883
    8. ' or' → logprob: -9.620668411254883
    9. ' ),' → logprob: -10.245668411254883
    10. '):' → logprob: -10.495668411254883

Token 372: 'ci' (ID: 2114)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3659425973892212
    2. ' ' → logprob: -2.2409424781799316
    3. ' not' → logprob: -2.4909424781799316
    4. ' )' → logprob: -2.8659424781799316
    5. '   ' → logprob: -4.365942478179932
    6. ' and' → logprob: -4.490942478179932
    7. ' #' → logprob: -5.115942478179932
    8. '#' → logprob: -5.365942478179932
    9. '  ' → logprob: -5.615942478179932
    10. ' is' → logprob: -5.615942478179932

Token 373: ' est' (ID: 893)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1011172533035278
    2. ' )' → logprob: -1.1011172533035278
    3. ' and' → logprob: -1.7261172533035278
    4. ' is' → logprob: -2.2261171340942383
    5. ' ' → logprob: -4.851117134094238
    6. 'and' → logprob: -4.976117134094238
    7. ' et' → logprob: -5.226117134094238
    8. ' est' → logprob: -5.351117134094238
    9. ' not' → logprob: -5.351117134094238
    10. ' continues' → logprob: -5.351117134094238

Token 374: ' déjà' (ID: 21229)
  Prédit: ' redundant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' redundant' → logprob: -0.058680783957242966
    2. ' red' → logprob: -4.058681011199951
    3. ' super' → logprob: -4.308681011199951
    4. ' inutile' → logprob: -4.808681011199951
    5. ' déjà' → logprob: -5.558681011199951
    6. ' redund' → logprob: -5.558681011199951
    7. 'red' → logprob: -5.808681011199951
    8. 'super' → logprob: -6.308681011199951
    9. ' vrai' → logprob: -7.308681011199951
    10. 'redu' → logprob: -7.433681011199951

Token 375: ' vrai' (ID: 42682)
  Prédit: ' vrai'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vrai' → logprob: -0.4505283832550049
    2. 'true' → logprob: -1.9505283832550049
    3. ' True' → logprob: -3.075528383255005
    4. 'v' → logprob: -3.325528383255005
    5. ' true' → logprob: -3.450528383255005
    6. 'True' → logprob: -3.575528383255005
    7. 'implicitly' → logprob: -4.200528144836426
    8. '```' → logprob: -5.200528144836426
    9. ' vér' → logprob: -5.325528144836426
    10. ' implicit' → logprob: -5.325528144836426

Token 376: ' ici' (ID: 27994)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.26055678725242615
    2. ')' → logprob: -2.010556697845459
    3. ' )' → logprob: -2.760556697845459
    4. '   ' → logprob: -4.385556697845459
    5. 'and' → logprob: -4.885556697845459
    6. ' et' → logprob: -5.885556697845459
    7. ' ' → logprob: -5.885556697845459
    8. ' ),' → logprob: -6.135556697845459
    9. ',' → logprob: -6.760556697845459
    10. '    ' → logprob: -6.885556697845459

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.502947986125946
    2. ' )' → logprob: -1.6279480457305908
    3. '   ' → logprob: -1.8779480457305908
    4. ' and' → logprob: -3.502948045730591
    5. ',' → logprob: -5.502947807312012
    6. ' ),' → logprob: -6.002947807312012
    7. ' or' → logprob: -6.127947807312012
    8. '),' → logprob: -6.252947807312012
    9. ' et' → logprob: -6.877947807312012
    10. ' ' → logprob: -7.002947807312012

Token 378: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026273127645254135
    2. ' and' → logprob: -4.026273250579834
    3. ' if' → logprob: -5.276273250579834
    4. 'and' → logprob: -6.276273250579834
    5. ' or' → logprob: -7.276273250579834
    6. 'if' → logprob: -7.901273250579834
    7. '  ' → logprob: -11.401272773742676
    8. '       ' → logprob: -11.526272773742676
    9. ' ' → logprob: -12.401272773742676
    10. '    ' → logprob: -12.526272773742676

Token 379: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03706025704741478
    2. 'if' → logprob: -3.787060260772705
    3. ' if' → logprob: -4.662060260772705
    4. 'and' → logprob: -5.787060260772705
    5. ' and' → logprob: -6.787060260772705
    6. '       ' → logprob: -10.162059783935547
    7. ' or' → logprob: -10.537059783935547
    8. 'or' → logprob: -12.287059783935547
    9. 'elif' → logprob: -13.162059783935547
    10. '  ' → logprob: -13.537059783935547

Token 380: '  ' (ID: 256)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7866029739379883
    2. '   ' → logprob: -1.0366029739379883
    3. ' if' → logprob: -1.6616029739379883
    4. ' ' → logprob: -9.411602973937988
    5. '       ' → logprob: -10.661602973937988
    6. '  ' → logprob: -12.036602973937988
    7. 'If' → logprob: -13.036602973937988
    8. '	if' → logprob: -13.536602973937988
    9. '   ' → logprob: -13.911602973937988
    10. '    ' → logprob: -14.286602973937988

Token 381: ' -' (ID: 533)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00914863683283329
    2. '   ' → logprob: -4.759148597717285
    3. ' if' → logprob: -7.634148597717285
    4. ' ' → logprob: -10.759148597717285
    5. 'elif' → logprob: -10.759148597717285
    6. '  ' → logprob: -12.759148597717285
    7. '       ' → logprob: -13.509148597717285
    8. 'and' → logprob: -13.509148597717285
    9. '```' → logprob: -14.134148597717285
    10. 'If' → logprob: -14.759148597717285

Token 382: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.007323950994759798
    2. ' (' → logprob: -5.132323741912842
    3. 'if' → logprob: -6.757323741912842
    4. ' if' → logprob: -8.88232421875
    5. '(' → logprob: -10.00732421875
    6. 'x' → logprob: -10.88232421875
    7. '   ' → logprob: -11.63232421875
    8. '((' → logprob: -12.13232421875
    9. ' x' → logprob: -12.25732421875
    10. ' ' → logprob: -12.63232421875

Token 383: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.310560941696167
    2. '(x' → logprob: -2.060560941696167
    3. ' x' → logprob: -2.060560941696167
    4. ' (' → logprob: -4.435561180114746
    5. '(' → logprob: -8.810561180114746
    6. '   ' → logprob: -9.185561180114746
    7. ' ' → logprob: -9.935561180114746
    8. '  ' → logprob: -11.498061180114746
    9. ')x' → logprob: -12.248061180114746
    10. '((' → logprob: -12.310561180114746

Token 384: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6326420903205872
    2. '%' → logprob: -0.7576420903205872
    3. ' ' → logprob: -10.632641792297363
    4. ')' → logprob: -11.257641792297363
    5. ')%' → logprob: -13.757641792297363
    6. ' ' → logprob: -13.882641792297363
    7. '<|end|>' → logprob: -14.382641792297363
    8. '%s' → logprob: -14.882641792297363
    9. '
' → logprob: -15.382641792297363
    10. ' %
' → logprob: -15.445141792297363

Token 385: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.16024017333984375
    2. ' ' → logprob: -1.9102401733398438
    3. '2' → logprob: -11.910240173339844
    4. '```' → logprob: -12.535240173339844
    5. ')' → logprob: -13.035240173339844
    6. '6' → logprob: -14.035240173339844
    7. ' ' → logprob: -14.160240173339844
    8. 'space' → logprob: -14.847740173339844
    9. '  ' → logprob: -15.035240173339844
    10. '1' → logprob: -15.410240173339844

Token 386: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.967624019831419e-05
    2. ' ' → logprob: -9.750060081481934
    3. '```' → logprob: -14.375060081481934
    4. '   ' → logprob: -16.187559127807617
    5. '  ' → logprob: -16.312559127807617
    6. ')' → logprob: -16.375059127807617
    7. '2' → logprob: -16.812559127807617
    8. '۳' → logprob: -17.000059127807617
    9. '==' → logprob: -17.625059127807617
    10. '３' → logprob: -17.687559127807617

Token 387: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06198471784591675
    2. '==' → logprob: -2.8119847774505615
    3. ')==' → logprob: -11.93698501586914
    4. ')' → logprob: -12.06198501586914
    5. '()==' → logprob: -13.06198501586914
    6. '=' → logprob: -13.93698501586914
    7. ' ' → logprob: -14.06198501586914
    8. '```' → logprob: -14.43698501586914
    9. ' =' → logprob: -16.18698501586914
    10. '0' → logprob: -16.31198501586914

Token 388: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018151583150029182
    2. ' ' → logprob: -4.018151760101318
    3. ')' → logprob: -14.76815128326416
    4. '=' → logprob: -15.01815128326416
    5. '```' → logprob: -15.14315128326416
    6. '==' → logprob: -15.26815128326416
    7. '  ' → logprob: -16.080652236938477
    8. ' ' → logprob: -16.268152236938477
    9. '۰' → logprob: -16.893152236938477
    10. '1' → logprob: -17.268152236938477

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.588793960167095e-05
    2. ' ' → logprob: -9.500076293945312
    3. '=' → logprob: -14.500076293945312
    4. '<|end|>' → logprob: -16.000076293945312
    5. '```' → logprob: -16.500076293945312
    6. '==' → logprob: -16.750076293945312
    7. '1' → logprob: -17.125076293945312
    8. '۰' → logprob: -17.625076293945312
    9. ')' → logprob: -17.750076293945312
    10. ' ' → logprob: -18.500076293945312

Token 390: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0021039829589426517
    2. 'or' → logprob: -6.502103805541992
    3. ')' → logprob: -7.502103805541992
    4. ' ' → logprob: -10.252103805541992
    5. ' )' → logprob: -11.377103805541992
    6. '    ' → logprob: -13.502103805541992
    7. '	or' → logprob: -14.377103805541992
    8. '   ' → logprob: -15.377103805541992
    9. ' или' → logprob: -16.002103805541992
    10. ' ' → logprob: -16.002103805541992

Token 391: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.00220461655408144
    2. 'x' → logprob: -6.127204418182373
    3. ' ' → logprob: -11.377204895019531
    4. ' ' → logprob: -12.127204895019531
    5. ' (' → logprob: -13.377204895019531
    6. '(x' → logprob: -15.127204895019531
    7. ')' → logprob: -15.252204895019531
    8. '	x' → logprob: -15.252204895019531
    9. '  ' → logprob: -16.25220489501953
    10. '    ' → logprob: -16.25220489501953

Token 392: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.2812379002571106
    2. ' %' → logprob: -1.4062378406524658
    3. ')' → logprob: -10.406237602233887
    4. ' ' → logprob: -11.156237602233887
    5. '==' → logprob: -11.406237602233887
    6. ' ==' → logprob: -11.906237602233887
    7. '```' → logprob: -12.031237602233887
    8. '[' → logprob: -12.281237602233887
    9. ' ' → logprob: -12.656237602233887
    10. 'x' → logprob: -13.281237602233887

Token 393: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.3869033455848694
    2. ' ' → logprob: -1.1369032859802246
    3. '  ' → logprob: -11.386903762817383
    4. '   ' → logprob: -11.636903762817383
    5. '```' → logprob: -12.636903762817383
    6. ' ' → logprob: -13.136903762817383
    7. '7' → logprob: -14.011903762817383
    8. '2' → logprob: -14.074403762817383
    9. '    ' → logprob: -14.261903762817383
    10. '1' → logprob: -14.324403762817383

Token 394: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003832445072475821
    2. ' ' → logprob: -7.875383377075195
    3. '  ' → logprob: -13.812883377075195
    4. '   ' → logprob: -14.062883377075195
    5. '```' → logprob: -14.812883377075195
    6. ' ' → logprob: -16.250383377075195
    7. '2' → logprob: -16.437883377075195
    8. '    ' → logprob: -16.937883377075195
    9. '(' → logprob: -17.000383377075195
    10. '५' → logprob: -17.062883377075195

Token 395: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.21179990470409393
    2. ' ==' → logprob: -1.7117998600006104
    3. ')' → logprob: -4.9618000984191895
    4. ')==' → logprob: -5.8368000984191895
    5. '()==' → logprob: -8.086799621582031
    6. '()' → logprob: -9.711799621582031
    7. ']==' → logprob: -11.086799621582031
    8. '=' → logprob: -11.711799621582031
    9. ' )' → logprob: -11.711799621582031
    10. '```' → logprob: -12.211799621582031

Token 396: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08894796669483185
    2. ' ' → logprob: -2.4639480113983154
    3. '==' → logprob: -13.213948249816895
    4. '   ' → logprob: -13.838948249816895
    5. ' ' → logprob: -13.838948249816895
    6. '```' → logprob: -13.838948249816895
    7. '  ' → logprob: -13.901448249816895
    8. '1' → logprob: -14.338948249816895
    9. '=' → logprob: -14.588948249816895
    10. ')' → logprob: -15.651448249816895

Token 397: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0019329203059896827
    2. ' ' → logprob: -6.2519330978393555
    3. '=' → logprob: -12.876933097839355
    4. '```' → logprob: -14.689433097839355
    5. '==' → logprob: -15.626933097839355
    6. '1' → logprob: -15.751933097839355
    7. '۰' → logprob: -16.25193214416504
    8. ')' → logprob: -16.31443214416504
    9. '5' → logprob: -16.50193214416504
    10. '   ' → logprob: -16.50193214416504

Token 398: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02697053924202919
    2. ')' → logprob: -3.901970624923706
    3. '):
' → logprob: -5.151970386505127
    4. ' ):' → logprob: -8.151970863342285
    5. ':' → logprob: -8.401970863342285
    6. '   ' → logprob: -9.901970863342285
    7. '       ' → logprob: -10.901970863342285
    8. ' )' → logprob: -11.151970863342285
    9. ')==' → logprob: -12.526970863342285
    10. ' ):
' → logprob: -12.651970863342285

Token 399: ' vér' (ID: 42524)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16150304675102234
    2. '   ' → logprob: -2.2865030765533447
    3. '       ' → logprob: -3.9115030765533447
    4. 'if' → logprob: -4.536502838134766
    5. '):' → logprob: -5.036502838134766
    6. ')' → logprob: -5.661502838134766
    7. ' if' → logprob: -5.911502838134766
    8. ':
' → logprob: -6.411502838134766
    9. ' and' → logprob: -6.786502838134766
    10. '==' → logprob: -8.411502838134766

Token 400: 'ifie' (ID: 46409)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34585893154144287
    2. '   ' → logprob: -2.5958590507507324
    3. '       ' → logprob: -3.2208590507507324
    4. 'ale' → logprob: -3.4708590507507324
    5. ')' → logprob: -3.8458590507507324
    6. 'ales' → logprob: -4.095859050750732
    7. 'à' → logprob: -4.220859050750732
    8. '==' → logprob: -4.720859050750732
    9. 'and' → logprob: -5.470859050750732
    10. '```' → logprob: -5.720859050750732

Token 401: ' que' (ID: 661)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01577460952103138
    2. '   ' → logprob: -5.015774726867676
    3. ':' → logprob: -5.390774726867676
    4. 'if' → logprob: -6.765774726867676
    5. ' que' → logprob: -6.890774726867676
    6. '    ' → logprob: -6.890774726867676
    7. '       ' → logprob: -7.890774726867676
    8. ' ' → logprob: -8.515774726867676
    9. '  ' → logprob: -8.890774726867676
    10. ' that' → logprob: -9.390774726867676

Token 402: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.35509005188941956
    2. '(x' → logprob: -2.1050901412963867
    3. ' (' → logprob: -2.3550901412963867
    4. 'x' → logprob: -2.6050901412963867
    5. ' True' → logprob: -5.480090141296387
    6. 'True' → logprob: -5.605090141296387
    7. '(' → logprob: -8.980090141296387
    8. '(True' → logprob: -9.355090141296387
    9. ' not' → logprob: -9.980090141296387
    10. ' ' → logprob: -10.105090141296387

Token 403: ' est' (ID: 893)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.32953011989593506
    2. '==' → logprob: -1.454530119895935
    3. ')' → logprob: -3.4545302391052246
    4. ':' → logprob: -5.704530239105225
    5. '):' → logprob: -5.954530239105225
    6. ' is' → logprob: -6.204530239105225
    7. ' ' → logprob: -6.329530239105225
    8. ' or' → logprob: -6.454530239105225
    9. ' )' → logprob: -6.829530239105225
    10. ' !=' → logprob: -7.079530239105225

Token 404: ' divisible' (ID: 167813)
  Prédit: ' True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.15997669100761414
    2. ' (' → logprob: -3.0349767208099365
    3. 'True' → logprob: -3.2849767208099365
    4. ' ' → logprob: -3.4099767208099365
    5. ' divisible' → logprob: -4.409976482391357
    6. ' true' → logprob: -5.034976482391357
    7. ' not' → logprob: -5.784976482391357
    8. '3' → logprob: -6.034976482391357
    9. '(True' → logprob: -6.659976482391357
    10. '(x' → logprob: -6.659976482391357

Token 405: ' par' (ID: 686)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -1.2888658046722412
    2. '   ' → logprob: -1.4138658046722412
    3. 'by' → logprob: -1.5388658046722412
    4. ' or' → logprob: -1.6638658046722412
    5. ')' → logprob: -3.663865804672241
    6. ' par' → logprob: -4.41386604309082
    7. '       ' → logprob: -4.78886604309082
    8. '    ' → logprob: -4.91386604309082
    9. 'par' → logprob: -5.41386604309082
    10. 'or' → logprob: -5.53886604309082

Token 406: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07889771461486816
    2. ' ' → logprob: -2.578897714614868
    3. '(' → logprob: -13.203897476196289
    4. '5' → logprob: -13.703897476196289
    5. ' ' → logprob: -13.703897476196289
    6. '1' → logprob: -14.078897476196289
    7. ' (' → logprob: -14.453897476196289
    8. ' either' → logprob: -14.453897476196289
    9. '15' → logprob: -14.578897476196289
    10. '   ' → logprob: -14.828897476196289

Token 407: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0004976287018507719
    2. ' ' → logprob: -7.625497817993164
    3. '(' → logprob: -12.625497817993164
    4. '2' → logprob: -13.125497817993164
    5. '1' → logprob: -13.625497817993164
    6. '15' → logprob: -14.125497817993164
    7. '6' → logprob: -14.875497817993164
    8. ' either' → logprob: -15.000497817993164
    9. 'either' → logprob: -15.125497817993164
    10. '5' → logprob: -15.250497817993164

Token 408: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5366774201393127
    2. '       ' → logprob: -1.036677360534668
    3. ' or' → logprob: -3.036677360534668
    4. ' and' → logprob: -5.036677360534668
    5. ':' → logprob: -6.036677360534668
    6. ')' → logprob: -6.411677360534668
    7. ' if' → logprob: -7.536677360534668
    8. '):' → logprob: -7.661677360534668
    9. 'or' → logprob: -7.786677360534668
    10. 'and' → logprob: -7.911677360534668

Token 409: ' par' (ID: 686)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02658834494650364
    2. '5' → logprob: -3.6515884399414062
    3. ' x' → logprob: -8.401588439941406
    4. 'x' → logprob: -10.776588439941406
    5. ' ' → logprob: -10.776588439941406
    6. '2' → logprob: -11.276588439941406
    7. '(x' → logprob: -12.526588439941406
    8. '1' → logprob: -12.776588439941406
    9. '  ' → logprob: -14.651588439941406
    10. ' (' → logprob: -14.901588439941406

Token 410: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5759528279304504
    2. ' ' → logprob: -0.8259528279304504
    3. '2' → logprob: -11.575952529907227
    4. '1' → logprob: -13.700952529907227
    5. ' ' → logprob: -13.700952529907227
    6. '   ' → logprob: -14.450952529907227
    7. '10' → logprob: -14.825952529907227
    8. '  ' → logprob: -15.575952529907227
    9. '0' → logprob: -16.200952529907227
    10. '15' → logprob: -16.450952529907227

Token 411: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.5863078832626343
    2. ' ' → logprob: -0.8363078832626343
    3. '2' → logprob: -4.586308002471924
    4. '1' → logprob: -9.836307525634766
    5. '7' → logprob: -10.711307525634766
    6. '15' → logprob: -11.711307525634766
    7. '   ' → logprob: -11.711307525634766
    8. '  ' → logprob: -12.086307525634766
    9. ' ' → logprob: -12.211307525634766
    10. '25' → logprob: -12.336307525634766

Token 412: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009982750052586198
    2. '       ' → logprob: -7.250998497009277
    3. ':' → logprob: -8.500998497009277
    4. 'if' → logprob: -10.000998497009277
    5. ' if' → logprob: -10.875998497009277
    6. ')' → logprob: -11.250998497009277
    7. '):' → logprob: -13.250998497009277
    8. ',' → logprob: -13.500998497009277
    9. '    
' → logprob: -14.250998497009277
    10. '  ' → logprob: -14.375998497009277

Token 413: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02159569039940834
    2. ':' → logprob: -4.271595478057861
    3. 'else' → logprob: -5.771595478057861
    4. 'if' → logprob: -6.396595478057861
    5. '       ' → logprob: -6.646595478057861
    6. ' if' → logprob: -7.146595478057861
    7. ' else' → logprob: -8.14659595489502
    8. ')' → logprob: -9.52159595489502
    9. ' :' → logprob: -9.64659595489502
    10. '):' → logprob: -10.64659595489502

Token 414: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28561341762542725
    2. ':' → logprob: -2.035613536834717
    3. '       ' → logprob: -2.160613536834717
    4. 'if' → logprob: -6.535613536834717
    5. ' if' → logprob: -7.035613536834717
    6. ' :' → logprob: -8.910613059997559
    7. '```' → logprob: -10.410613059997559
    8. ' and' → logprob: -10.910613059997559
    9. '    ' → logprob: -11.660613059997559
    10. ')' → logprob: -11.660613059997559

Token 415: ' Le' (ID: 2018)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.061518289148807526
    2. 'if' → logprob: -3.6865181922912598
    3. ' if' → logprob: -4.18651819229126
    4. 'else' → logprob: -4.68651819229126
    5. '       ' → logprob: -4.81151819229126
    6. ' else' → logprob: -6.68651819229126
    7. ':' → logprob: -7.31151819229126
    8. ')' → logprob: -10.311518669128418
    9. 'ans' → logprob: -10.811518669128418
    10. 'elif' → logprob: -11.061518669128418

Token 416: ' mot' (ID: 3598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3915529251098633
    2. ' if' → logprob: -1.8915529251098633
    3. '   ' → logprob: -2.0165529251098633
    4. 'else' → logprob: -3.8915529251098633
    5. ' ' → logprob: -5.266552925109863
    6. ':' → logprob: -5.516552925109863
    7. '       ' → logprob: -6.266552925109863
    8. ' else' → logprob: -6.266552925109863
    9. '#' → logprob: -6.391552925109863
    10. 'elif' → logprob: -6.516552925109863

Token 417: '-cl' (ID: 29640)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.995943546295166
    2. 'elif' → logprob: -1.995943546295166
    3. 'else' → logprob: -2.120943546295166
    4. 'break' → logprob: -2.370943546295166
    5. '=' → logprob: -2.495943546295166
    6. 's' → logprob: -2.870943546295166
    7. '   ' → logprob: -3.245943546295166
    8. ' ' → logprob: -3.620943546295166
    9. ' if' → logprob: -4.370943546295166
    10. '  ' → logprob: -4.620943546295166

Token 418: 'é' (ID: 377)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6321094036102295
    2. 'é' → logprob: -1.2571094036102295
    3. '#' → logprob: -3.1321094036102295
    4. 'ève' → logprob: -3.3821094036102295
    5. 'age' → logprob: -3.5071094036102295
    6. 'e' → logprob: -4.632109642028809
    7. 'continue' → logprob: -5.007109642028809
    8. 'à' → logprob: -5.132109642028809
    9. 'ivre' → logprob: -5.382109642028809
    10. 'ège' → logprob: -5.382109642028809

Token 419: ' not' (ID: 625)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.08191084861755371
    2. ' else' → logprob: -3.2069108486175537
    3. ' break' → logprob: -4.081911087036133
    4. 'break' → logprob: -4.331911087036133
    5. 'elif' → logprob: -5.831911087036133
    6. '   ' → logprob: -5.831911087036133
    7. 'if' → logprob: -6.331911087036133
    8. ' if' → logprob: -8.706911087036133
    9. ' elif' → logprob: -9.081911087036133
    10. ' ' → logprob: -10.206911087036133

Token 420: ' inverse' (ID: 53743)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.24477744102478027
    2. ' if' → logprob: -1.9947774410247803
    3. 'not' → logprob: -3.2447774410247803
    4. 'if' → logprob: -3.7447774410247803
    5. ' in' → logprob: -4.869777679443359
    6. ':' → logprob: -5.619777679443359
    7. ' ' → logprob: -6.119777679443359
    8. ' (' → logprob: -6.994777679443359
    9. ' )' → logprob: -7.619777679443359
    10. ' x' → logprob: -7.619777679443359

Token 421: ' la' (ID: 557)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.007927303202450275
    2. 'not' → logprob: -5.007927417755127
    3. ' (' → logprob: -7.007927417755127
    4. '(not' → logprob: -8.382926940917969
    5. '	not' → logprob: -10.632926940917969
    6. ' if' → logprob: -10.632926940917969
    7. ' ' → logprob: -11.257926940917969
    8. ' ' → logprob: -12.507926940917969
    9. '(' → logprob: -12.632926940917969
    10. ' no' → logprob: -12.632926940917969

Token 422: ' condition' (ID: 7060)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.41142624616622925
    2. 'not' → logprob: -2.036426305770874
    3. ' condition' → logprob: -2.411426305770874
    4. 'if' → logprob: -3.161426305770874
    5. 'condition' → logprob: -3.286426305770874
    6. ' if' → logprob: -3.786426305770874
    7. ' logique' → logprob: -5.661426067352295
    8. '(condition' → logprob: -5.911426067352295
    9. ' True' → logprob: -6.286426067352295
    10. '(not' → logprob: -6.661426067352295

Token 423: ' logique' (ID: 115350)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5876202583312988
    2. '   ' → logprob: -0.9626202583312988
    3. 'if' → logprob: -3.337620258331299
    4. ':' → logprob: -4.087620258331299
    5. ' not' → logprob: -4.962620258331299
    6. 'not' → logprob: -5.962620258331299
    7. ' :' → logprob: -8.08761978149414
    8. '       ' → logprob: -9.96261978149414
    9. '	if' → logprob: -10.46261978149414
    10. '  ' → logprob: -10.58761978149414

Token 424: ' :' (ID: 712)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39991292357444763
    2. ' if' → logprob: -1.52491295337677
    3. ' not' → logprob: -3.0249128341674805
    4. 'not' → logprob: -3.3999128341674805
    5. 'if' → logprob: -3.6499128341674805
    6. ':' → logprob: -5.7749128341674805
    7. '       ' → logprob: -7.7749128341674805
    8. '(not' → logprob: -8.64991283416748
    9. '	not' → logprob: -9.39991283416748
    10. ')' → logprob: -10.14991283416748

Token 425: ' on' (ID: 402)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7008265256881714
    2. 'if' → logprob: -1.2008265256881714
    3. '   ' → logprob: -1.8258265256881714
    4. ' not' → logprob: -3.700826644897461
    5. 'not' → logprob: -4.075826644897461
    6. '       ' → logprob: -9.325826644897461
    7. '  ' → logprob: -11.950826644897461
    8. ' ' → logprob: -12.325826644897461
    9. '    ' → logprob: -12.450826644897461
    10. '```' → logprob: -12.575826644897461

Token 426: ' entre' (ID: 3853)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.860265851020813
    2. 'if' → logprob: -1.110265851020813
    3. ' not' → logprob: -1.610265851020813
    4. 'not' → logprob: -3.3602657318115234
    5. '   ' → logprob: -4.860265731811523
    6. 'n' → logprob: -5.860265731811523
    7. ' continue' → logprob: -7.235265731811523
    8. ' n' → logprob: -7.860265731811523
    9. ':' → logprob: -8.610265731811523
    10. ' ' → logprob: -8.860265731811523

Token 427: ' dans' (ID: 2671)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07502634078264236
    2. 'not' → logprob: -2.700026273727417
    3. ' if' → logprob: -5.825026512145996
    4. ' in' → logprob: -6.575026512145996
    5. 'if' → logprob: -8.075026512145996
    6. '   ' → logprob: -8.200026512145996
    7. '	not' → logprob: -10.075026512145996
    8. 'in' → logprob: -10.450026512145996
    9. '(not' → logprob: -10.700026512145996
    10. ' into' → logprob: -10.950026512145996

Token 428: ' le' (ID: 505)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5779631733894348
    2. 'not' → logprob: -1.07796311378479
    3. ' if' → logprob: -2.95296311378479
    4. 'if' → logprob: -3.07796311378479
    5. '   ' → logprob: -8.577962875366211
    6. ' the' → logprob: -9.077962875366211
    7. ' la' → logprob: -9.827962875366211
    8. ' this' → logprob: -10.077962875366211
    9. ' ' → logprob: -11.952962875366211
    10. '(not' → logprob: -12.202962875366211

Token 429: ' bloc' (ID: 51218)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005462493747472763
    2. ' if' → logprob: -5.255462646484375
    3. 'not' → logprob: -8.880462646484375
    4. '   ' → logprob: -9.380462646484375
    5. ' not' → logprob: -12.880462646484375
    6. '       ' → logprob: -13.880462646484375
    7. '```' → logprob: -14.255462646484375
    8. ' ' → logprob: -15.505462646484375
    9. 'block' → logprob: -16.005462646484375
    10. '           ' → logprob: -16.005462646484375

Token 430: ' si' (ID: 1784)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4128616154193878
    2. ' if' → logprob: -1.4128615856170654
    3. '   ' → logprob: -3.0378615856170654
    4. 'not' → logprob: -3.4128615856170654
    5. 'if' → logprob: -4.2878618240356445
    6. '       ' → logprob: -9.787861824035645
    7. '	not' → logprob: -9.912861824035645
    8. '  ' → logprob: -10.787861824035645
    9. '(not' → logprob: -11.162861824035645
    10. '_not' → logprob: -12.287861824035645

Token 431: ' x' (ID: 1215)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2255324125289917
    2. 'not' → logprob: -1.6005324125289917
    3. '   ' → logprob: -10.100532531738281
    4. ' ' → logprob: -10.475532531738281
    5. '(not' → logprob: -10.600532531738281
    6. '	not' → logprob: -11.475532531738281
    7. ' ' → logprob: -12.225532531738281
    8. '    ' → logprob: -12.850532531738281
    9. 'n' → logprob: -13.600532531738281
    10. ' no' → logprob: -13.600532531738281

Token 432: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.004951358772814274
    2. 'not' → logprob: -5.379951477050781
    3. '   ' → logprob: -8.379951477050781
    4. '	not' → logprob: -10.254951477050781
    5. ')' → logprob: -11.129951477050781
    6. ' ' → logprob: -11.379951477050781
    7. ' n' → logprob: -11.504951477050781
    8. '_not' → logprob: -12.129951477050781
    9. ' in' → logprob: -12.254951477050781
    10. ' is' → logprob: -12.254951477050781

Token 433: ''est' (ID: 6616)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0019970352295786142
    2. ' not' → logprob: -7.001996994018555
    3. 'not' → logprob: -7.001996994018555
    4. 'o' → logprob: -8.751996994018555
    5. ' ot' → logprob: -11.876996994018555
    6. 't' → logprob: -12.751996994018555
    7. ' o' → logprob: -12.876996994018555
    8. 'ots' → logprob: -14.126996994018555
    9. 'от' → logprob: -14.376996994018555
    10. 'otif' → logprob: -14.751996994018555

Token 434: ' pas' (ID: 2173)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16055363416671753
    2. 'not' → logprob: -1.9105536937713623
    3. ' pas' → logprob: -8.535553932189941
    4. '<|end|>' → logprob: -10.160553932189941
    5. '	not' → logprob: -10.535553932189941
    6. ' ' → logprob: -10.535553932189941
    7. '(not' → logprob: -11.660553932189941
    8. ')' → logprob: -12.160553932189941
    9. 'ot' → logprob: -12.410553932189941
    10. 'pas' → logprob: -12.410553932189941

Token 435: ' divisible' (ID: 167813)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6458366513252258
    2. '(not' → logprob: -1.395836591720581
    3. ' (' → logprob: -1.770836591720581
    4. ' not' → logprob: -3.020836591720581
    5. '(' → logprob: -4.89583683013916
    6. ' divisible' → logprob: -7.02083683013916
    7. '(x' → logprob: -7.89583683013916
    8. '(n' → logprob: -8.77083683013916
    9. ' ' → logprob: -9.77083683013916
    10. '	not' → logprob: -9.77083683013916

Token 436: ' par' (ID: 686)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5659077763557434
    2. 'not' → logprob: -1.1909077167510986
    3. '   ' → logprob: -2.0659077167510986
    4. ' by' → logprob: -7.440907955169678
    5. '	not' → logprob: -8.06590747833252
    6. '(not' → logprob: -8.56590747833252
    7. '       ' → logprob: -8.81590747833252
    8. ')' → logprob: -9.69090747833252
    9. '  ' → logprob: -9.94090747833252
    10. 'by' → logprob: -10.31590747833252

Token 437: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.07042485475540161
    2. ' ' → logprob: -2.695424795150757
    3. ' (' → logprob: -7.945425033569336
    4. '(' → logprob: -9.445425033569336
    5. ' ' → logprob: -10.195425033569336
    6. ' either' → logprob: -12.320425033569336
    7. ' )' → logprob: -13.507925033569336
    8. '(
' → logprob: -13.757925033569336
    9. ')' → logprob: -13.820425033569336
    10. '  ' → logprob: -14.195425033569336

Token 438: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0009236076730303466
    2. ' ' → logprob: -7.0009236335754395
    3. '(' → logprob: -12.000923156738281
    4. ' (' → logprob: -12.625923156738281
    5. '```' → logprob: -14.875923156738281
    6. ' ' → logprob: -15.063423156738281
    7. '   ' → logprob: -15.500923156738281
    8. 'either' → logprob: -15.688423156738281
    9. '2' → logprob: -15.938423156738281
    10. '33' → logprob: -15.938423156738281

Token 439: ' ou' (ID: 2031)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40579864382743835
    2. ' and' → logprob: -1.5307986736297607
    3. ' or' → logprob: -2.7807986736297607
    4. 'and' → logprob: -3.2807986736297607
    5. ' ' → logprob: -4.905798435211182
    6. '  ' → logprob: -5.530798435211182
    7. '    ' → logprob: -6.405798435211182
    8. 'or' → logprob: -6.530798435211182
    9. ')' → logprob: -6.780798435211182
    10. '       ' → logprob: -6.905798435211182

Token 440: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.012232840061187744
    2. ' ' → logprob: -4.637232780456543
    3. 'or' → logprob: -6.512232780456543
    4. 'not' → logprob: -7.762232780456543
    5. ' not' → logprob: -8.762232780456543
    6. '#' → logprob: -8.762232780456543
    7. ' or' → logprob: -9.137232780456543
    8. 'and' → logprob: -9.887232780456543
    9. ' x' → logprob: -10.887232780456543
    10. '```' → logprob: -11.137232780456543

Token 441: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0011724866926670074
    2. ' ' → logprob: -6.8761725425720215
    3. 'or' → logprob: -9.001172065734863
    4. ' or' → logprob: -12.626172065734863
    5. 'not' → logprob: -12.626172065734863
    6. '```' → logprob: -12.626172065734863
    7. 'nor' → logprob: -13.876172065734863
    8. '#' → logprob: -14.126172065734863
    9. 'x' → logprob: -14.251172065734863
    10. 'and' → logprob: -14.251172065734863

Token 442: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003501596162095666
    2. ':' → logprob: -6.3785014152526855
    3. ' if' → logprob: -6.7535014152526855
    4. 'if' → logprob: -8.378501892089844
    5. ')' → logprob: -9.128501892089844
    6. 'not' → logprob: -9.253501892089844
    7. '):' → logprob: -9.753501892089844
    8. '       ' → logprob: -10.128501892089844
    9. ' and' → logprob: -10.253501892089844
    10. 'and' → logprob: -10.628501892089844

Token 443: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022457117214798927
    2. ' if' → logprob: -4.272457122802734
    3. ':' → logprob: -5.147457122802734
    4. 'if' → logprob: -6.897457122802734
    5. ' and' → logprob: -7.272457122802734
    6. '       ' → logprob: -8.772457122802734
    7. 'and' → logprob: -9.022457122802734
    8. ')' → logprob: -9.397457122802734
    9. ' or' → logprob: -9.397457122802734
    10. '):' → logprob: -9.397457122802734

Token 444: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0022206762805581093
    2. '   ' → logprob: -7.627220630645752
    3. ' :' → logprob: -7.627220630645752
    4. ':
' → logprob: -8.12722110748291
    5. '):' → logprob: -8.25222110748291
    6. 'not' → logprob: -8.62722110748291
    7. 'if' (adapté à ' if') → logprob: -8.75222110748291
    8. ' if' → logprob: -9.25222110748291
    9. ')' → logprob: -9.62722110748291
    10. ' and' → logprob: -10.00222110748291

Token 445: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.12707751989364624
    2. 'not' → logprob: -2.127077579498291
    3. '   ' → logprob: -9.127077102661133
    4. ' ' → logprob: -11.377077102661133
    5. ' ' → logprob: -11.502077102661133
    6. 'x' → logprob: -12.502077102661133
    7. '	not' → logprob: -12.502077102661133
    8. ' x' → logprob: -12.627077102661133
    9. 'n' → logprob: -12.752077102661133
    10. '    ' → logprob: -13.252077102661133

Token 446: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0011829655850306153
    2. ' (' → logprob: -6.751183032989502
    3. '(' → logprob: -11.751182556152344
    4. '((' → logprob: -12.251182556152344
    5. ' ((' → logprob: -17.626182556152344
    6. '(X' → logprob: -18.751182556152344
    7. '(n' → logprob: -18.876182556152344
    8. '(a' → logprob: -19.126182556152344
    9. ' ' → logprob: -19.251182556152344
    10. '(or' → logprob: -19.251182556152344

Token 447: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09166067838668823
    2. '(x' → logprob: -2.466660737991333
    3. ' x' → logprob: -5.966660499572754
    4. ' (' → logprob: -8.966660499572754
    5. '(' → logprob: -10.841660499572754
    6. '   ' → logprob: -12.466660499572754
    7. '3' → logprob: -13.966660499572754
    8. ' ' → logprob: -14.341660499572754
    9. '	x' → logprob: -14.341660499572754
    10. '((' → logprob: -14.591660499572754

Token 448: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.01604398898780346
    2. '%' → logprob: -4.1410441398620605
    3. ' ' → logprob: -11.641043663024902
    4. ')' → logprob: -14.891043663024902
    5. ' ' → logprob: -15.266043663024902
    6. ' %
' → logprob: -17.01604461669922
    7. '%s' → logprob: -17.51604461669922
    8. '[' → logprob: -17.57854461669922
    9. ' %)' → logprob: -17.64104461669922
    10. ' %=' → logprob: -17.89104461669922

Token 449: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0017024369444698095
    2. ' ' → logprob: -6.376702308654785
    3. '2' → logprob: -15.876702308654785
    4. '  ' → logprob: -17.2517032623291
    5. '   ' → logprob: -17.6267032623291
    6. '    ' → logprob: -18.7517032623291
    7. '۳' → logprob: -18.7517032623291
    8. '1' → logprob: -18.8767032623291
    9. '３' → logprob: -19.0017032623291
    10. '```' → logprob: -19.3767032623291

Token 450: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -16.75001335144043
    4. '   ' → logprob: -17.87501335144043
    5. '３' → logprob: -18.06251335144043
    6. '۳' → logprob: -18.37501335144043
    7. '  ' → logprob: -18.37501335144043
    8. '```' → logprob: -18.62501335144043
    9. '1' → logprob: -19.06251335144043
    10. '३' → logprob: -19.62501335144043

Token 451: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.11299756914377213
    2. ' ==' → logprob: -2.237997531890869
    3. '0' → logprob: -9.237998008728027
    4. '==
' → logprob: -9.987998008728027
    5. ')==' → logprob: -11.237998008728027
    6. '=' → logprob: -11.987998008728027
    7. ' ' → logprob: -12.362998008728027
    8. ']==' → logprob: -13.362998008728027
    9. ')' → logprob: -13.612998008728027
    10. '00' → logprob: -13.737998008728027

Token 452: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003188405418768525
    2. ' ' → logprob: -5.753188610076904
    3. '==' → logprob: -11.628188133239746
    4. ' ==' → logprob: -13.753188133239746
    5. '=' → logprob: -15.003188133239746
    6. '1' → logprob: -16.253189086914062
    7. '```' → logprob: -16.378189086914062
    8. '   ' → logprob: -16.753189086914062
    9. '2' → logprob: -16.878189086914062
    10. ')' → logprob: -17.253189086914062

Token 453: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00026264708139933646
    2. ' ' → logprob: -8.250262260437012
    3. '==' → logprob: -14.250262260437012
    4. '1' → logprob: -15.625262260437012
    5. ' ==' → logprob: -16.125263214111328
    6. '```' → logprob: -16.312763214111328
    7. '   ' → logprob: -16.437763214111328
    8. '2' → logprob: -17.375263214111328
    9. '00' → logprob: -17.437763214111328
    10. '  ' → logprob: -17.625263214111328

Token 454: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03805377334356308
    2. 'and' → logprob: -3.2880537509918213
    3. ' ' → logprob: -12.163053512573242
    4. '   ' → logprob: -12.663053512573242
    5. ')' → logprob: -13.038053512573242
    6. '    ' → logprob: -14.413053512573242
    7. '	and' → logprob: -14.913053512573242
    8. ' an' → logprob: -15.538053512573242
    9. '  ' → logprob: -15.788053512573242
    10. '     ' → logprob: -15.788053512573242

Token 455: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.4742034375667572
    2. ' (' → logprob: -0.9742034673690796
    3. '(' → logprob: -9.474203109741211
    4. '   ' → logprob: -10.224203109741211
    5. '  ' → logprob: -11.974203109741211
    6. '    ' → logprob: -12.724203109741211
    7. ' ' → logprob: -13.224203109741211
    8. ' ' → logprob: -14.599203109741211
    9. '     ' → logprob: -15.099203109741211
    10. '((' → logprob: -15.224203109741211

Token 456: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.008689153008162975
    2. '(x' → logprob: -5.008688926696777
    3. ' x' → logprob: -6.258688926696777
    4. ' (' → logprob: -9.883688926696777
    5. '3' → logprob: -12.758688926696777
    6. '(' → logprob: -13.258688926696777
    7. '   ' → logprob: -13.883688926696777
    8. ' ' → logprob: -14.758688926696777
    9. '	x' → logprob: -15.133688926696777
    10. '{x' → logprob: -16.008689880371094

Token 457: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.03367970138788223
    2. '%' → logprob: -3.408679723739624
    3. ' ' → logprob: -10.408679962158203
    4. ')' → logprob: -14.158679962158203
    5. '7' → logprob: -14.408679962158203
    6. ' ' → logprob: -14.533679962158203
    7. '[' → logprob: -14.658679962158203
    8. ' ==' → logprob: -15.033679962158203
    9. '<|end|>' → logprob: -15.908679962158203
    10. '3' → logprob: -16.096179962158203

Token 458: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.11282271891832352
    2. ' ' → logprob: -2.2378227710723877
    3. '```' → logprob: -15.987822532653809
    4. ' ' → logprob: -16.987823486328125
    5. ')' → logprob: -17.175323486328125
    6. '۳' → logprob: -17.425323486328125
    7. '  ' → logprob: -17.487823486328125
    8. '6' → logprob: -17.612823486328125
    9. '2' → logprob: -17.925323486328125
    10. '³' → logprob: -17.987823486328125

Token 459: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.935296834039036e-06
    2. ' ' → logprob: -12.75000286102295
    3. '```' → logprob: -18.625003814697266
    4. '  ' → logprob: -19.250003814697266
    5. '   ' → logprob: -19.500003814697266
    6. '۳' → logprob: -19.562503814697266
    7. '３' → logprob: -19.937503814697266
    8. '৩' → logprob: -20.000003814697266
    9. '३' → logprob: -20.625003814697266
    10. '' → logprob: -20.875003814697266

Token 460: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4291395843029022
    2. '==' → logprob: -1.0541396141052246
    3. ')==' → logprob: -8.804139137268066
    4. ')' → logprob: -9.179139137268066
    5. ' !=' → logprob: -9.429139137268066
    6. ' ' → logprob: -9.679139137268066
    7. '<|end|>' → logprob: -11.179139137268066
    8. '!=' → logprob: -11.679139137268066
    9. '()==' → logprob: -12.429139137268066
    10. '0' → logprob: -12.554139137268066

Token 461: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001033999491482973
    2. ' ' → logprob: -6.876033782958984
    3. '==' → logprob: -14.501033782958984
    4. '```' → logprob: -14.751033782958984
    5. '=' → logprob: -16.501033782958984
    6. '  ' → logprob: -16.876033782958984
    7. '``' → logprob: -17.501033782958984
    8. '   ' → logprob: -17.626033782958984
    9. ')' → logprob: -17.938533782958984
    10. '00' → logprob: -18.126033782958984

Token 462: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002622894535306841
    2. ' ' → logprob: -8.250262260437012
    3. '```' → logprob: -14.625262260437012
    4. '==' → logprob: -14.875262260437012
    5. '  ' → logprob: -17.062763214111328
    6. '=' → logprob: -17.312763214111328
    7. '``' → logprob: -17.312763214111328
    8. '   ' → logprob: -17.687763214111328
    9. '1' → logprob: -18.000263214111328
    10. '00' → logprob: -18.187763214111328

Token 463: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0005587508203461766
    2. 'or' → logprob: -7.500558853149414
    3. ' ' → logprob: -12.375558853149414
    4. '	or' → logprob: -13.750558853149414
    5. ')' → logprob: -15.500558853149414
    6. '<|end|>' → logprob: -16.375558853149414
    7. ' ' → logprob: -16.500558853149414
    8. '    ' → logprob: -17.625558853149414
    9. '  ' → logprob: -18.000558853149414
    10. '   ' → logprob: -18.000558853149414

Token 464: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.004621780011802912
    2. 'x' → logprob: -5.379621982574463
    3. ' ' → logprob: -14.004621505737305
    4. ' ' → logprob: -15.004621505737305
    5. '	x' → logprob: -15.629621505737305
    6. ' (' → logprob: -16.129621505737305
    7. '    ' → logprob: -17.129621505737305
    8. ')' → logprob: -17.254621505737305
    9. '```' → logprob: -17.629621505737305
    10. '   ' → logprob: -17.754621505737305

Token 465: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12272559851408005
    2. '5' → logprob: -2.747725486755371
    3. ' %' → logprob: -2.997725486755371
    4. ' ' → logprob: -6.497725486755371
    5. '   ' → logprob: -12.247725486755371
    6. '4' → logprob: -13.247725486755371
    7. 'x' → logprob: -13.747725486755371
    8. ' x' → logprob: -13.872725486755371
    9. '```' → logprob: -13.872725486755371
    10. '%x' → logprob: -14.247725486755371

Token 466: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005241106729954481
    2. ' ' → logprob: -5.2552409172058105
    3. '   ' → logprob: -12.755241394042969
    4. '  ' → logprob: -13.380241394042969
    5. '```' → logprob: -13.755241394042969
    6. '4' → logprob: -14.005241394042969
    7. '    ' → logprob: -15.317741394042969
    8. '1' → logprob: -16.00524139404297
    9. '2' → logprob: -16.25524139404297
    10. '0' → logprob: -16.88024139404297

Token 467: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.253713218029588e-05
    2. ' ' → logprob: -9.750062942504883
    3. '0' → logprob: -13.375062942504883
    4. '   ' → logprob: -13.500062942504883
    5. '```' → logprob: -14.875062942504883
    6. '  ' → logprob: -15.062562942504883
    7. '4' → logprob: -16.250062942504883
    8. '2' → logprob: -16.687562942504883
    9. '    ' → logprob: -16.750062942504883
    10. '1' → logprob: -16.937562942504883

Token 468: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16095802187919617
    2. ' ==' → logprob: -2.0359580516815186
    3. ')' → logprob: -5.0359578132629395
    4. '))' → logprob: -5.1609578132629395
    5. ')==' → logprob: -5.6609578132629395
    6. ')):' → logprob: -6.1609578132629395
    7. ')):
' → logprob: -9.285958290100098
    8. '0' → logprob: -9.410958290100098
    9. '!=' → logprob: -11.035958290100098
    10. ' !=' → logprob: -11.285958290100098

Token 469: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011743901995941997
    2. ' ' → logprob: -6.751174449920654
    3. '   ' → logprob: -13.626173973083496
    4. '```' → logprob: -14.063673973083496
    5. '1' → logprob: -15.063673973083496
    6. '  ' → logprob: -15.438673973083496
    7. '``' → logprob: -15.751173973083496
    8. '
' → logprob: -15.813673973083496
    9. ')' → logprob: -16.001174926757812
    10. '۰' → logprob: -16.001174926757812

Token 470: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.082895273109898e-05
    2. ' ' → logprob: -10.500030517578125
    3. '```' → logprob: -13.812530517578125
    4. '1' → logprob: -14.687530517578125
    5. '   ' → logprob: -15.000030517578125
    6. '
' → logprob: -15.125030517578125
    7. '``' → logprob: -15.625030517578125
    8. '۰' → logprob: -15.937530517578125
    9. '=' → logprob: -15.937530517578125
    10. '00' → logprob: -16.187530517578125

Token 471: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.5920968651771545
    2. ')):' → logprob: -1.4670968055725098
    3. '):
' → logprob: -1.9670968055725098
    4. '):' → logprob: -2.5920968055725098
    5. '))' → logprob: -6.96709680557251
    6. ')' → logprob: -8.342097282409668
    7. '   ' → logprob: -8.967097282409668
    8. ')):
' → logprob: -9.592097282409668
    9. '       ' → logprob: -9.717097282409668
    10. ':' → logprob: -10.092097282409668

Token 472: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08914589881896973
    2. '       ' → logprob: -2.4641458988189697
    3. ':' → logprob: -9.33914566040039
    4. '    
' → logprob: -10.33914566040039
    5. ':
' → logprob: -10.71414566040039
    6. '           ' → logprob: -11.08914566040039
    7. '\n' → logprob: -11.46414566040039
    8. '
' → logprob: -12.21414566040039
    9. ' ans' → logprob: -12.33914566040039
    10. '        
' → logprob: -12.33914566040039

Token 473: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0021671520080417395
    2. '   ' → logprob: -6.252167224884033
    3. ' ans' → logprob: -8.752166748046875
    4. '	ans' → logprob: -9.502166748046875
    5. '       ' → logprob: -12.502166748046875
    6. '           ' → logprob: -14.252166748046875
    7. '(ans' → logprob: -14.627166748046875
    8. ' ' → logprob: -15.252166748046875
    9. '```' → logprob: -15.252166748046875
    10. '_ans' → logprob: -16.002166748046875

Token 474: ' Si' (ID: 7832)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -1.1472419600977446e-06
    2. ' ans' → logprob: -13.875000953674316
    3. '	ans' → logprob: -17.000001907348633
    4. '   ' → logprob: -18.125001907348633
    5. '(ans' → logprob: -18.375001907348633
    6. '_ans' → logprob: -18.500001907348633
    7. '       ' → logprob: -18.750001907348633
    8. '
' → logprob: -19.500001907348633
    9. 'answer' → logprob: -20.250001907348633
    10. '           ' → logprob: -20.375001907348633

Token 475: ' x' (ID: 1215)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.008696827106177807
    2. ' ans' → logprob: -4.758697032928467
    3. '   ' → logprob: -10.008696556091309
    4. '	ans' → logprob: -10.508696556091309
    5. '_ans' → logprob: -12.383696556091309
    6. '(ans' → logprob: -12.633696556091309
    7. '       ' → logprob: -13.883696556091309
    8. 'answer' → logprob: -14.383696556091309
    9. ' ' → logprob: -14.883696556091309
    10. '
' → logprob: -15.758696556091309

Token 476: ' ne' (ID: 453)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11325286328792572
    2. ' =' → logprob: -2.238252878189087
    3. ' ' → logprob: -8.738252639770508
    4. 's' → logprob: -9.613252639770508
    5. '==' → logprob: -10.488252639770508
    6. '<|end|>' → logprob: -10.613252639770508
    7. '   ' → logprob: -10.863252639770508
    8. 'ans' → logprob: -11.113252639770508
    9. '+=' → logprob: -11.238252639770508
    10. '!=' → logprob: -11.238252639770508

Token 477: ' rem' (ID: 1662)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8486768007278442
    2. 'pas' → logprob: -2.2236766815185547
    3. 'ans' → logprob: -2.3486766815185547
    4. '%' → logprob: -2.3486766815185547
    5. '==' → logprob: -2.8486766815185547
    6. ' pas' → logprob: -2.8486766815185547
    7. '       ' → logprob: -3.0986766815185547
    8. 'print' → logprob: -3.0986766815185547
    9. '#' → logprob: -3.3486766815185547
    10. '=' → logprob: -3.4736766815185547

Token 478: 'plit' (ID: 4059)
  Prédit: 'place'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'place' → logprob: -0.2707356810569763
    2. 'plit' → logprob: -1.645735740661621
    3. 'pl' → logprob: -3.770735740661621
    4. 'p' → logprob: -4.645735740661621
    5. 'et' → logprob: -4.895735740661621
    6. 'placer' → logprob: -6.145735740661621
    7. 'placement' → logprob: -6.895735740661621
    8. 'plac' → logprob: -7.895735740661621
    9. 'pla' → logprob: -8.520735740661621
    10. 'ple' → logprob: -9.520735740661621

Token 479: ' pas' (ID: 2173)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.25586390495300293
    2. '       ' → logprob: -2.755863904953003
    3. ' ans' → logprob: -2.755863904953003
    4. '   ' → logprob: -3.005863904953003
    5. 'pas' → logprob: -5.130864143371582
    6. 'le' → logprob: -5.255864143371582
    7. 's' → logprob: -5.380864143371582
    8. '=' → logprob: -5.505864143371582
    9. '           ' → logprob: -5.630864143371582
    10. ' ' → logprob: -6.005864143371582

Token 480: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.5433086156845093
    2. 'les' → logprob: -2.418308734893799
    3. '   ' → logprob: -2.918308734893799
    4. ' ans' → logprob: -2.918308734893799
    5. '       ' → logprob: -3.168308734893799
    6. ' la' → logprob: -3.418308734893799
    7. 'la' → logprob: -3.668308734893799
    8. '=' → logprob: -3.668308734893799
    9. 'le' → logprob: -3.918308734893799
    10. ' les' → logprob: -4.168308734893799

Token 481: ' condition' (ID: 7060)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.001090447069145739
    2. 'cond' → logprob: -7.0010905265808105
    3. ' condition' → logprob: -9.376090049743652
    4. 'conditions' → logprob: -9.751090049743652
    5. '       ' → logprob: -11.626090049743652
    6. ' ' → logprob: -11.876090049743652
    7. '   ' → logprob: -11.876090049743652
    8. 'continue' → logprob: -12.751090049743652
    9. '条件' → logprob: -12.751090049743652
    10. 'crit' → logprob: -13.251090049743652

Token 482: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.9413317441940308
    2. '       ' → logprob: -1.4413317441940308
    3. '=' → logprob: -1.9413317441940308
    4. '   ' → logprob: -2.0663318634033203
    5. '           ' → logprob: -2.8163318634033203
    6. ':
' → logprob: -4.19133186340332
    7. 'ans' → logprob: -4.44133186340332
    8. ' =' → logprob: -4.56633186340332
    9. ' ans' → logprob: -5.94133186340332
    10. '):' → logprob: -7.31633186340332

Token 483: ' on' (ID: 402)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.06675772368907928
    2. '   ' → logprob: -3.4417576789855957
    3. ' ans' → logprob: -3.5667576789855957
    4. '       ' → logprob: -6.191757678985596
    5. '           ' → logprob: -6.441757678985596
    6. '	ans' → logprob: -7.441757678985596
    7. ' ' → logprob: -10.066758155822754
    8. '    ' → logprob: -11.441758155822754
    9. '(ans' → logprob: -11.441758155822754
    10. '  ' → logprob: -11.566758155822754

Token 484: ' considère' (ID: 176437)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9309426546096802
    2. '       ' → logprob: -1.1809426546096802
    3. 'ans' → logprob: -2.0559425354003906
    4. '#' → logprob: -3.0559425354003906
    5. 's' → logprob: -3.3059425354003906
    6. '        
' → logprob: -3.5559425354003906
    7. '   ' → logprob: -4.305942535400391
    8. '           ' → logprob: -5.430942535400391
    9. '    
' → logprob: -5.555942535400391
    10. '
' → logprob: -5.805942535400391

Token 485: ' que' (ID: 661)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24866266548633575
    2. 'ans' → logprob: -2.4986627101898193
    3. ' ans' → logprob: -2.4986627101898193
    4. '       ' → logprob: -3.6236627101898193
    5. ' that' → logprob: -4.99866247177124
    6. '           ' → logprob: -5.37366247177124
    7. '	ans' → logprob: -5.74866247177124
    8. '    
' → logprob: -5.87366247177124
    9. 's' → logprob: -6.37366247177124
    10. '  ' → logprob: -6.37366247177124

Token 486: ' la' (ID: 557)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.006778961978852749
    2. ' ans' → logprob: -5.006779193878174
    3. '	ans' → logprob: -10.256778717041016
    4. '   ' → logprob: -11.256778717041016
    5. '(ans' → logprob: -12.756778717041016
    6. ' ' → logprob: -12.881778717041016
    7. '
' → logprob: -13.131778717041016
    8. 'answer' → logprob: -13.506778717041016
    9. '_ans' → logprob: -13.506778717041016
    10. '           ' → logprob: -13.756778717041016

Token 487: ' règle' (ID: 115826)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0001129602751461789
    2. ' ans' → logprob: -9.750112533569336
    3. 'answer' → logprob: -10.250112533569336
    4. '   ' → logprob: -11.625112533569336
    5. '	ans' → logprob: -12.750112533569336
    6. ' ' → logprob: -13.000112533569336
    7. '_ans' → logprob: -13.250112533569336
    8. 's' → logprob: -14.250112533569336
    9. '
' → logprob: -14.375112533569336
    10. '#' → logprob: -14.875112533569336

Token 488: ' n' (ID: 297)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.025762541219592094
    2. ' =' → logprob: -4.025762557983398
    3. 'ans' → logprob: -5.400762557983398
    4. 's' → logprob: -6.025762557983398
    5. ' ans' → logprob: -8.900762557983398
    6. '=False' → logprob: -9.025762557983398
    7. '=
' → logprob: -9.400762557983398
    8. 'es' → logprob: -10.275762557983398
    9. 'n' → logprob: -10.525762557983398
    10. '<|end|>' → logprob: -10.525762557983398

Token 489: ''est' (ID: 6616)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.5800285935401917
    2. ''est' → logprob: -1.2050285339355469
    3. 'pas' → logprob: -2.080028533935547
    4. 'ans' → logprob: -5.330028533935547
    5. '’est' → logprob: -5.580028533935547
    6. '#' → logprob: -6.205028533935547
    7. 'es' → logprob: -7.080028533935547
    8. 'a' → logprob: -7.080028533935547
    9. 'e' → logprob: -7.455028533935547
    10. 'n' → logprob: -7.580028533935547

Token 490: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.022366777062416077
    2. 'not' → logprob: -5.647367000579834
    3. 'app' → logprob: -6.022367000579834
    4. '_pas' → logprob: -6.147367000579834
    5. ' pas' → logprob: -6.272367000579834
    6. 't' → logprob: -6.272367000579834
    7. 's' → logprob: -6.397367000579834
    8. ''est' → logprob: -6.522367000579834
    9. '```' → logprob: -7.147367000579834
    10. '#' → logprob: -7.397367000579834

Token 491: ' respect' (ID: 5618)
  Prédit: 'respect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'respect' → logprob: -0.2825065851211548
    2. ' respect' → logprob: -1.4075065851211548
    3. 'valid' → logprob: -7.532506465911865
    4. ' respected' → logprob: -8.282506942749023
    5. 's' → logprob: -8.657506942749023
    6. 'ans' → logprob: -9.157506942749023
    7. 'rem' → logprob: -9.782506942749023
    8. 'fulfilled' → logprob: -10.157506942749023
    9. 'pas' → logprob: -10.407506942749023
    10. ' respects' → logprob: -10.782506942749023

Token 492: 'ée' (ID: 2894)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10905315726995468
    2. 'e' → logprob: -2.859053134918213
    3. 'er' → logprob: -3.359053134918213
    4. 'u' → logprob: -5.734053134918213
    5. 'ent' → logprob: -6.234053134918213
    6. '   ' → logprob: -6.234053134918213
    7. 'ue' → logprob: -6.609053134918213
    8. '           ' → logprob: -7.484053134918213
    9. 'es' → logprob: -7.609053134918213
    10. 'if' → logprob: -8.484053611755371

Token 493: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.47807642817497253
    2. '   ' → logprob: -0.9780764579772949
    3. ' ans' → logprob: -6.728076457977295
    4. 'ans' → logprob: -6.728076457977295
    5. '           ' → logprob: -8.103075981140137
    6. '=' → logprob: -8.478075981140137
    7. '        
' → logprob: -8.728075981140137
    8. ',' → logprob: -9.103075981140137
    9. '<|end|>' → logprob: -9.103075981140137
    10. '	ans' → logprob: -9.228075981140137

Token 494: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4295789301395416
    2. '       ' → logprob: -1.0545789003372192
    3. ' ans' → logprob: -7.67957878112793
    4. 'ans' → logprob: -8.67957878112793
    5. '           ' → logprob: -9.42957878112793
    6. '	ans' → logprob: -9.67957878112793
    7. '        
' → logprob: -10.42957878112793
    8. '    
' → logprob: -10.92957878112793
    9. '     ' → logprob: -11.67957878112793
    10. '  ' → logprob: -11.80457878112793

Token 495: ' #' (ID: 1069)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.0010013706050813198
    2. ' ans' → logprob: -7.251001358032227
    3. '   ' → logprob: -8.251001358032227
    4. '	ans' → logprob: -10.501001358032227
    5. '_ans' → logprob: -13.626001358032227
    6. '(ans' → logprob: -13.876001358032227
    7. '       ' → logprob: -15.251001358032227
    8. '
' → logprob: -16.126001358032227
    9. 'Ans' → logprob: -16.376001358032227
    10. '```' → logprob: -16.501001358032227

Token 496: ' On' (ID: 2160)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6743181943893433
    2. 'ans' → logprob: -0.7993181943893433
    3. ' ans' → logprob: -3.299318313598633
    4. '       ' → logprob: -5.924318313598633
    5. '	ans' → logprob: -6.799318313598633
    6. '           ' → logprob: -9.799318313598633
    7. '(ans' → logprob: -10.174318313598633
    8. ' ' → logprob: -10.799318313598633
    9. '```' → logprob: -11.674318313598633
    10. '_ans' → logprob: -11.799318313598633

Token 497: ' change' (ID: 3343)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005177667480893433
    2. ' =' → logprob: -8.000517845153809
    3. 's' → logprob: -9.750517845153809
    4. 'ans' → logprob: -10.125517845153809
    5. '=
' → logprob: -10.750517845153809
    6. '```' → logprob: -11.125517845153809
    7. '       ' → logprob: -11.875517845153809
    8. '=s' → logprob: -12.000517845153809
    9. '   ' → logprob: -12.125517845153809
    10. '*=' → logprob: -12.625517845153809

Token 498: ' la' (ID: 557)
  Prédit: ' ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ans' → logprob: -0.062412627041339874
    2. 'ans' → logprob: -2.812412738800049
    3. '(ans' → logprob: -7.937412738800049
    4. '	ans' → logprob: -9.56241226196289
    5. '_ans' → logprob: -11.31241226196289
    6. ' ' → logprob: -13.06241226196289
    7. '   ' → logprob: -13.31241226196289
    8. 's' → logprob: -15.31241226196289
    9. 'space' → logprob: -15.68741226196289
    10. '
' → logprob: -16.06241226196289

Token 499: ' valeur' (ID: 41664)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.05516299977898598
    2. ' ans' → logprob: -2.9301629066467285
    3. 'space' → logprob: -8.930163383483887
    4. 'a' → logprob: -10.430163383483887
    5. ' 
' → logprob: -10.430163383483887
    6. '	ans' → logprob: -10.555163383483887
    7. '
' → logprob: -11.055163383483887
    8. '(ans' → logprob: -11.180163383483887
    9. 'answer' → logprob: -11.555163383483887
    10. 's' → logprob: -12.055163383483887

Token 500: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5609365701675415
    2. ' ans' → logprob: -1.5609365701675415
    3. 'de' → logprob: -2.435936450958252
    4. '=' → logprob: -2.560936450958252
    5. 'ans' → logprob: -3.310936450958252
    6. ' =' → logprob: -4.685936450958252
    7. ' ' → logprob: -5.560936450958252
    8. '_' → logprob: -6.935936450958252
    9. ' d' → logprob: -7.185936450958252
    10. '	ans' → logprob: -7.185936450958252

Token 501: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.004080897197127342
    2. ' ans' → logprob: -5.504080772399902
    3. '	ans' → logprob: -13.504080772399902
    4. '(ans' → logprob: -14.129080772399902
    5. 'answer' → logprob: -16.50408172607422
    6. '_ans' → logprob: -16.50408172607422
    7. '`' → logprob: -16.75408172607422
    8. 'ann' → logprob: -17.12908172607422
    9. 'a' → logprob: -17.25408172607422
    10. ' ' → logprob: -18.00408172607422

Token 502: ' en' (ID: 469)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17975299060344696
    2. ' =' → logprob: -1.8047529458999634
    3. '='' → logprob: -13.179753303527832
    4. '<|end|>' → logprob: -13.304753303527832
    5. '=
' → logprob: -13.804753303527832
    6. ' ='' → logprob: -13.929753303527832
    7. ' ' → logprob: -14.179753303527832
    8. '=False' → logprob: -15.429753303527832
    9. '=s' → logprob: -15.929753303527832
    10. 's' → logprob: -15.929753303527832

Token 503: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0011321206111460924
    2. 'RE' → logprob: -7.376132011413574
    3. ''Re' → logprob: -8.751132011413574
    4. '"' → logprob: -8.876132011413574
    5. ''D' → logprob: -9.001132011413574
    6. '`' → logprob: -10.126132011413574
    7. ''H' → logprob: -12.126132011413574
    8. ' '' → logprob: -12.251132011413574
    9. ''N' → logprob: -12.376132011413574
    10. ''S' → logprob: -12.376132011413574

Token 504: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -0.38798972964286804
    2. 'RE' → logprob: -1.1379897594451904
    3. 'NOT' → logprob: -7.887989521026611
    4. 'DECL' → logprob: -7.887989521026611
    5. 'DIS' → logprob: -8.63798999786377
    6. ''' → logprob: -9.01298999786377
    7. 'NO' → logprob: -10.88798999786377
    8. 'NA' → logprob: -11.38798999786377
    9. 'FAILED' → logprob: -11.76298999786377
    10. ' DEN' → logprob: -12.51298999786377

Token 505: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -8.387458365177736e-05
    2. 'I' → logprob: -9.500083923339844
    3. 'ED' → logprob: -12.625083923339844
    4. 'Y' → logprob: -13.000083923339844
    5. '```' → logprob: -13.750083923339844
    6. 'ied' → logprob: -14.000083923339844
    7. '``' → logprob: -14.875083923339844
    8. 'IN' → logprob: -15.625083923339844
    9. '   ' → logprob: -15.750083923339844
    10. 'A' → logprob: -16.000083923339844

Token 506: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6705365180969238
    2. ''' → logprob: -0.9205365180969238
    3. ''
' → logprob: -2.420536518096924
    4. '"' → logprob: -8.420536041259766
    5. '           ' → logprob: -8.420536041259766
    6. '
' → logprob: -8.545536041259766
    7. '   ' → logprob: -8.795536041259766
    8. ''
' → logprob: -8.795536041259766
    9. ')
' → logprob: -9.670536041259766
    10. '<|end|>' → logprob: -9.795536041259766

Token 507: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003973562270402908
    2. '   ' → logprob: -5.628973484039307
    3. ' ans' → logprob: -8.628973960876465
    4. '           ' → logprob: -9.753973960876465
    5. '        
' → logprob: -10.253973960876465
    6. 'ans' → logprob: -10.253973960876465
    7. '
' → logprob: -10.878973960876465
    8. '	ans' → logprob: -11.628973960876465
    9. '\n' → logprob: -11.753973960876465
    10. '(ans' → logprob: -12.378973960876465

Token 508: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' (adapté à ' ans') → logprob: -0.2340010702610016
    2. '       ' → logprob: -2.1090011596679688
    3. ' ans' → logprob: -2.4840011596679688
    4. '   ' → logprob: -5.734001159667969
    5. '	ans' → logprob: -7.859001159667969
    6. '           ' → logprob: -8.859001159667969
    7. '(ans' → logprob: -9.359001159667969
    8. '_ans' → logprob: -12.234001159667969
    9. '        
' → logprob: -12.734001159667969
    10. '
' → logprob: -12.984001159667969

Token 509: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788901224732399
    2. ' =' → logprob: -2.578890085220337
    3. ' ' → logprob: -16.453889846801758
    4. '='' → logprob: -16.828889846801758
    5. ' ='' → logprob: -16.828889846801758
    6. '=

' → logprob: -16.953889846801758
    7. '＝' → logprob: -17.578889846801758
    8. '=
' → logprob: -17.703889846801758
    9. ')' → logprob: -18.578889846801758
    10. ' =
' → logprob: -18.828889846801758

Token 510: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3352188169956207
    2. ' '' → logprob: -1.3352187871932983
    3. ''D' → logprob: -3.835218906402588
    4. '"' → logprob: -9.08521842956543
    5. ' "' → logprob: -12.58521842956543
    6. ' ' → logprob: -13.46021842956543
    7. ''S' → logprob: -13.58521842956543
    8. ' ' → logprob: -14.71021842956543
    9. '`' → logprob: -14.83521842956543
    10. ''d' → logprob: -15.33521842956543

Token 511: 'DEN' (ID: 109767)
  Prédit: 'DEN'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DEN' → logprob: -1.4736459888808895e-05
    2. ' DEN' → logprob: -11.375014305114746
    3. '_DEN' → logprob: -13.250014305114746
    4. ''D' → logprob: -13.625014305114746
    5. 'D' → logprob: -16.375015258789062
    6. 'Denied' → logprob: -16.500015258789062
    7. 'DE' → logprob: -17.625015258789062
    8. ''' → logprob: -18.125015258789062
    9. 'DN' → logprob: -18.500015258789062
    10. 'den' → logprob: -18.750015258789062

Token 512: 'IED' (ID: 17589)
  Prédit: 'IED'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'IED' → logprob: -0.0003382038848940283
    2. 'I' → logprob: -8.000338554382324
    3. '```' → logprob: -14.000338554382324
    4. 'IER' → logprob: -14.125338554382324
    5. 'IE' → logprob: -15.750338554382324
    6. 'ED' → logprob: -15.750338554382324
    7. '``' → logprob: -16.000337600708008
    8. ' I' → logprob: -16.250337600708008
    9. 'Y' → logprob: -16.375337600708008
    10. '   ' → logprob: -16.500337600708008

Token 513: ''
' (ID: 2207)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021147366613149643
    2. '<|end|>' → logprob: -3.8961472511291504
    3. '
' → logprob: -8.896147727966309
    4. ')' → logprob: -9.146147727966309
    5. '	' → logprob: -9.396147727966309
    6. '<|end|>' → logprob: -9.521147727966309
    7. '   ' → logprob: -10.396147727966309
    8. '	break' → logprob: -10.521147727966309
    9. '        
' → logprob: -10.646147727966309
    10. '               ' → logprob: -10.646147727966309

Token 514: '#' (ID: 2)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045736716128885746
    2. '<|end|>' → logprob: -8.250457763671875
    3. '	' → logprob: -9.250457763671875
    4. '   ' → logprob: -10.000457763671875
    5. '        
' → logprob: -11.125457763671875
    6. '      ' → logprob: -11.625457763671875
    7. '           ' → logprob: -12.375457763671875
    8. '\n' → logprob: -12.500457763671875
    9. '\' → logprob: -12.625457763671875
    10. '' → logprob: -13.125457763671875

Token 515: ' Après' (ID: 47562)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.1645917296409607
    2. 'print' → logprob: -2.1645917892456055
    3. ' break' → logprob: -3.4145917892456055
    4. '   ' → logprob: -5.7895917892456055
    5. ' print' → logprob: -7.2895917892456055
    6. '       ' → logprob: -8.164591789245605
    7. '	break' → logprob: -10.289591789245605
    8. '```' → logprob: -12.539591789245605
    9. '    ' → logprob: -13.164591789245605
    10. ' ' → logprob: -13.289591789245605

Token 516: ' la' (ID: 557)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001730391290038824
    2. 'break' → logprob: -7.126730442047119
    3. 'print' → logprob: -7.376730442047119
    4. '       ' → logprob: -9.001729965209961
    5. ' break' → logprob: -9.501729965209961
    6. '    ' → logprob: -10.001729965209961
    7. ' print' → logprob: -10.626729965209961
    8. '	break' → logprob: -11.876729965209961
    9. ' the' → logprob: -12.376729965209961
    10. '```' → logprob: -12.376729965209961

Token 517: ' fin' (ID: 2131)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.3804935812950134
    2. '   ' → logprob: -1.2554936408996582
    3. ' break' → logprob: -4.005493640899658
    4. 'for' → logprob: -4.505493640899658
    5. '       ' → logprob: -7.505493640899658
    6. ' ' → logprob: -7.755493640899658
    7. ' for' → logprob: -7.755493640899658
    8. '    ' → logprob: -8.0054931640625
    9. '	break' → logprob: -8.7554931640625
    10. '_break' → logprob: -8.8804931640625

Token 518: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.020792949944734573
    2. '
' → logprob: -4.0207929611206055
    3. '   ' → logprob: -6.2707929611206055
    4. '    
' → logprob: -7.6457929611206055
    5. ' print' → logprob: -9.520792961120605
    6. '#' → logprob: -10.270792961120605
    7. '\n' → logprob: -10.645792961120605
    8. '<|end|>' → logprob: -10.645792961120605
    9. '  
' → logprob: -10.895792961120605
    10. '```' → logprob: -11.270792961120605

Token 519: ' la' (ID: 557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38177692890167236
    2. ' la' → logprob: -1.7567769289016724
    3. ' for' → logprob: -2.131776809692383
    4. ' the' → logprob: -4.256776809692383
    5. 'the' → logprob: -5.131776809692383
    6. 'la' → logprob: -6.506776809692383
    7. ' ' → logprob: -6.506776809692383
    8. '   ' → logprob: -7.131776809692383
    9. 'l' → logprob: -7.381776809692383
    10. ' l' → logprob: -7.881776809692383

Token 520: ' boucle' (ID: 174211)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001461546402424574
    2. 'loop' → logprob: -7.251461505889893
    3. ' for' → logprob: -7.501461505889893
    4. 'bou' → logprob: -9.00146198272705
    5. ' loop' → logprob: -10.00146198272705
    6. ' boucle' → logprob: -10.62646198272705
    7. 'break' → logprob: -12.87646198272705
    8. 'b' → logprob: -13.00146198272705
    9. '   ' → logprob: -14.37646198272705
    10. ' ' → logprob: -15.12646198272705

Token 521: ' (' (ID: 350)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0038392639253288507
    2. '
' → logprob: -5.628839492797852
    3. ' print' → logprob: -8.878839492797852
    4. 'break' → logprob: -9.753839492797852
    5. '   ' → logprob: -11.503839492797852
    6. '    
' → logprob: -11.753839492797852
    7. '```' → logprob: -11.753839492797852
    8. '<|end|>' → logprob: -12.878839492797852
    9. '  
' → logprob: -13.128839492797852
    10. '(print' → logprob: -13.253839492797852

Token 522: 'ap' (ID: 403)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4844064712524414
    2. ')' → logprob: -1.1094064712524414
    3. '   ' → logprob: -3.2344064712524414
    4. 'print' → logprob: -5.109406471252441
    5. '\n' → logprob: -6.109406471252441
    6. '    
' → logprob: -6.484406471252441
    7. '<|end|>' → logprob: -6.609406471252441
    8. ')
' → logprob: -6.734406471252441
    9. 'break' → logprob: -7.234406471252441
    10. '```' → logprob: -7.984406471252441

Token 523: 'rès' (ID: 48817)
  Prédit: 'pend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pend' → logprob: -0.21859119832515717
    2. 'rès' → logprob: -2.4685912132263184
    3. 'ply' → logprob: -2.8435912132263184
    4. 'p' → logprob: -3.9685912132263184
    5. 'r' → logprob: -4.093591213226318
    6. 'print' → logprob: -4.718591213226318
    7. 'prent' → logprob: -5.718591213226318
    8. 'prendre' → logprob: -6.968591213226318
    9. 'prox' → logprob: -7.343591213226318
    10. '   ' → logprob: -7.468591213226318

Token 524: ' avoir' (ID: 16595)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023837687447667122
    2. ' la' → logprob: -5.148837566375732
    3. ' for' → logprob: -5.398837566375732
    4. ' the' → logprob: -5.648837566375732
    5. 'for' → logprob: -6.148837566375732
    6. ' break' → logprob: -6.398837566375732
    7. 'break' → logprob: -6.898837566375732
    8. ' le' → logprob: -6.898837566375732
    9. '```' → logprob: -7.398837566375732
    10. ')' → logprob: -7.523837566375732

Token 525: ' exam' (ID: 5846)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007287980988621712
    2. ' break' → logprob: -5.257287979125977
    3. 'break' → logprob: -6.382287979125977
    4. '   ' → logprob: -9.007287979125977
    5. '       ' → logprob: -9.132287979125977
    6. '	break' → logprob: -9.382287979125977
    7. ' ' → logprob: -11.507287979125977
    8. '  ' → logprob: -11.507287979125977
    9. '    ' → logprob: -11.757287979125977
    10. ' ' → logprob: -12.007287979125977

Token 526: 'iné' (ID: 59815)
  Prédit: 'iné'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iné' → logprob: -0.5701562166213989
    2. 't' → logprob: -0.9451562166213989
    3. 'in' → logprob: -3.5701560974121094
    4. 'd' → logprob: -4.320156097412109
    5. 'té' → logprob: -6.320156097412109
    6. 'ted' → logprob: -7.570156097412109
    7. 'née' → logprob: -8.07015609741211
    8. 'né' → logprob: -8.07015609741211
    9. 'te' → logprob: -8.44515609741211
    10. '#' → logprob: -8.44515609741211

Token 527: ' tous' (ID: 10688)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7205681204795837
    2. ')' → logprob: -0.8455681204795837
    3. 'break' → logprob: -3.0955681800842285
    4. ' break' → logprob: -4.0955681800842285
    5. ' ' → logprob: -4.5955681800842285
    6. '	break' → logprob: -5.8455681800842285
    7. ' the' → logprob: -5.9705681800842285
    8. '  ' → logprob: -6.7205681800842285
    9. 'print' → logprob: -6.9705681800842285
    10. '    ' → logprob: -7.2205681800842285

Token 528: ' les' (ID: 1341)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.3440585434436798
    2. ')' → logprob: -2.3440585136413574
    3. '   ' → logprob: -2.3440585136413574
    4. ' the' → logprob: -3.4690585136413574
    5. 'a' → logprob: -3.9690585136413574
    6. ' )' → logprob: -4.094058513641357
    7. ' x' → logprob: -4.844058513641357
    8. ' la' → logprob: -4.969058513641357
    9. ' for' → logprob: -5.469058513641357
    10. ' ' → logprob: -5.469058513641357

Token 529: ' éléments' (ID: 57375)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.24485936760902405
    2. ' x' → logprob: -2.369859457015991
    3. ' elements' → logprob: -3.244859457015991
    4. 'a' → logprob: -3.369859457015991
    5. 'elements' → logprob: -3.994859457015991
    6. ' a' → logprob: -4.369859218597412
    7. ' éléments' → logprob: -4.619859218597412
    8. ':' → logprob: -6.244859218597412
    9. 'élé' → logprob: -6.369859218597412
    10. ')' → logprob: -6.494859218597412

Token 530: ' de' (ID: 334)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08912878483533859
    2. '),' → logprob: -2.8391287326812744
    3. '   ' → logprob: -4.0891289710998535
    4. ')
' → logprob: -4.8391289710998535
    5. ',' → logprob: -7.4641289710998535
    6. '
' → logprob: -7.5891289710998535
    7. '):
' → logprob: -8.089128494262695
    8. 'print' → logprob: -8.089128494262695
    9. ' )' → logprob: -9.214128494262695
    10. '):' → logprob: -9.589128494262695

Token 531: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11430442333221436
    2. ' a' → logprob: -2.239304542541504
    3. ' la' → logprob: -6.989304542541504
    4. 'la' → logprob: -7.739304542541504
    5. 'for' → logprob: -10.114304542541504
    6. ' ' → logprob: -10.239304542541504
    7. 'l' → logprob: -11.114304542541504
    8. ' for' → logprob: -11.364304542541504
    9. ' the' → logprob: -12.114304542541504
    10. ')' → logprob: -12.239304542541504

Token 532: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7529743909835815
    2. 'for' → logprob: -0.7529743909835815
    3. ' for' → logprob: -3.377974510192871
    4. ' a' → logprob: -3.752974510192871
    5. ':' → logprob: -8.877974510192871
    6. 'list' → logprob: -9.002974510192871
    7. ' loop' → logprob: -9.752974510192871
    8. ' list' → logprob: -10.127974510192871
    9. ' boucle' → logprob: -10.252974510192871
    10. 'b' → logprob: -10.377974510192871

Token 533: ' a' (ID: 261)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35519444942474365
    2. ')
' → logprob: -1.2301944494247437
    3. '),' → logprob: -5.730194568634033
    4. ')

' → logprob: -6.605194568634033
    5. 'a' → logprob: -7.605194568634033
    6. '
' → logprob: -8.355194091796875
    7. '   ' → logprob: -8.480194091796875
    8. ':' → logprob: -8.480194091796875
    9. '):
' → logprob: -8.730194091796875
    10. '#' → logprob: -8.980194091796875

Token 534: '),
' (ID: 2313)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.05390084534883499
    2. '
' → logprob: -3.178900957107544
    3. ')' → logprob: -5.053900718688965
    4. ')
' → logprob: -5.553900718688965
    5. ' print' → logprob: -8.303900718688965
    6. '    
' → logprob: -9.428900718688965
    7. 'break' → logprob: -9.553900718688965
    8. '   ' → logprob: -9.803900718688965
    9. '#' → logprob: -10.803900718688965
    10. '\n' → logprob: -11.053900718688965

Token 535: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20296832919120789
    2. 'break' → logprob: -1.7029683589935303
    3. ' break' → logprob: -7.202968120574951
    4. '   ' → logprob: -7.327968120574951
    5. ' print' → logprob: -8.82796859741211
    6. '```' → logprob: -13.20296859741211
    7. '
' → logprob: -13.70296859741211
    8. '       ' → logprob: -13.82796859741211
    9. '    
' → logprob: -14.07796859741211
    10. '	break' → logprob: -14.57796859741211

Token 536: ' on' (ID: 402)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.16299904882907867
    2. ' break' → logprob: -2.662999153137207
    3. 'print' → logprob: -2.662999153137207
    4. '   ' → logprob: -4.787999153137207
    5. '       ' → logprob: -6.162999153137207
    6. ' print' → logprob: -7.662999153137207
    7. '	break' → logprob: -10.912999153137207
    8. '           ' → logprob: -12.537999153137207
    9. ' ' → logprob: -14.412999153137207
    10. '        
' → logprob: -14.537999153137207

Token 537: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2896652817726135
    2. ' print' → logprob: -1.7896652221679688
    3. 'break' → logprob: -2.7896652221679688
    4. ' break' → logprob: -3.9146652221679688
    5. '
' → logprob: -6.164665222167969
    6. '   ' → logprob: -7.914665222167969
    7. ' 
' → logprob: -8.164665222167969
    8. '    
' → logprob: -9.539665222167969
    9. ' ' → logprob: -10.039665222167969
    10. '	break' → logprob: -10.414665222167969

Token 538: ' (' (ID: 350)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0019367238273844123
    2. '(' → logprob: -6.251936912536621
    3. '()' → logprob: -12.251936912536621
    4. 'ans' → logprob: -13.251936912536621
    5. '(
' → logprob: -14.001936912536621
    6. '(answer' → logprob: -14.501936912536621
    7. '('' → logprob: -16.501935958862305
    8. ' ans' → logprob: -17.001935958862305
    9. '(f' → logprob: -17.626935958862305
    10. '(print' → logprob: -17.626935958862305

Token 539: 'im' (ID: 321)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.0012098762672394514
    2. 'ans' → logprob: -6.751209735870361
    3. '(' → logprob: -10.37621021270752
    4. ')' → logprob: -12.12621021270752
    5. '()' → logprob: -13.00121021270752
    6. ' ans' → logprob: -14.50121021270752
    7. '	ans' → logprob: -15.75121021270752
    8. '(
' → logprob: -15.87621021270752
    9. '(answer' → logprob: -16.626209259033203
    10. '(an' → logprob: -17.501209259033203

Token 540: 'prime' (ID: 46441)
  Prédit: 'prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.5602245330810547
    2. 'primer' → logprob: -1.4352245330810547
    3. 'print' → logprob: -2.3102245330810547
    4. 'pr' → logprob: -2.9352245330810547
    5. 'port' → logprob: -3.8102245330810547
    6. 'prim' → logprob: -5.060224533081055
    7. 'p' → logprob: -5.435224533081055
    8. 'primir' → logprob: -5.935224533081055
    9. 'press' → logprob: -6.685224533081055
    10. 'pression' → logprob: -7.060224533081055

Token 541: ' à' (ID: 1221)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001090447069145739
    2. '(' → logprob: -7.5010905265808105
    3. ')' → logprob: -8.126090049743652
    4. 'ans' → logprob: -8.376090049743652
    5. '(
' → logprob: -11.876090049743652
    6. '()' → logprob: -12.626090049743652
    7. '(

' → logprob: -15.376090049743652
    8. '	ans' → logprob: -15.501090049743652
    9. '(answer' → logprob: -15.626090049743652
    10. '(an' → logprob: -16.25109100341797

Token 542: ' l' (ID: 305)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5787716507911682
    2. '(ans' → logprob: -1.0787715911865234
    3. 'ans' → logprob: -2.3287715911865234
    4. 'la' → logprob: -6.578771591186523
    5. '()' → logprob: -8.078771591186523
    6. 'l' → logprob: -9.328771591186523
    7. ' ans' → logprob: -10.078771591186523
    8. '(' → logprob: -10.453771591186523
    9. '```' → logprob: -10.703771591186523
    10. ' la' → logprob: -10.828771591186523

Token 543: ''écran' (ID: 147901)
  Prédit: ''écran'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''écran' → logprob: -0.5031147003173828
    2. 'a' → logprob: -1.2531147003173828
    3. '’écran' → logprob: -3.003114700317383
    4. 'e' → logprob: -3.878114700317383
    5. 'screen' → logprob: -4.003114700317383
    6. 'é' → logprob: -4.503114700317383
    7. ' écran' → logprob: -6.128114700317383
    8. 'terminal' → logprob: -6.753114700317383
    9. 'érieur' → logprob: -6.878114700317383
    10. 'fin' → logprob: -7.503114700317383

Token 544: ')' (ID: 8)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.001097595551982522
    2. ')' → logprob: -7.501097679138184
    3. '(' → logprob: -7.751097679138184
    4. 'ans' → logprob: -9.126097679138184
    5. '()' → logprob: -13.001097679138184
    6. '(
' → logprob: -13.626097679138184
    7. '(answer' → logprob: -14.376097679138184
    8. 'print' → logprob: -14.501097679138184
    9. ')
' → logprob: -15.001097679138184
    10. '(print' → logprob: -15.751097679138184

Token 545: ' la' (ID: 557)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.002965696156024933
    2. 'ans' → logprob: -6.502965927124023
    3. '()' → logprob: -6.877965927124023
    4. 'print' → logprob: -8.627965927124023
    5. '(' → logprob: -8.877965927124023
    6. '()
' → logprob: -9.252965927124023
    7. '("\' → logprob: -12.127965927124023
    8. '(print' → logprob: -12.252965927124023
    9. '(
' → logprob: -12.627965927124023
    10. '('\' → logprob: -12.877965927124023

Token 546: ' valeur' (ID: 41664)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.12715867161750793
    2. 'ans' → logprob: -2.1271586418151855
    3. ' ans' → logprob: -9.002159118652344
    4. '(' → logprob: -9.502159118652344
    5. 'result' → logprob: -11.002159118652344
    6. 'final' → logprob: -12.252159118652344
    7. 'answer' → logprob: -12.252159118652344
    8. '()' → logprob: -12.877159118652344
    9. '(answer' → logprob: -13.627159118652344
    10. '	ans' → logprob: -14.502159118652344

Token 547: ' finale' (ID: 37759)
  Prédit: '(ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.004122687969356775
    2. '(' → logprob: -5.504122734069824
    3. 'ans' → logprob: -10.504122734069824
    4. '(print' → logprob: -11.754122734069824
    5. 'print' → logprob: -12.629122734069824
    6. '(
' → logprob: -12.879122734069824
    7. '()' → logprob: -13.004122734069824
    8. '(answer' → logprob: -14.629122734069824
    9. '('' → logprob: -15.379122734069824
    10. '(an' → logprob: -15.879122734069824

Token 548: ' de' (ID: 334)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0010001786286011338
    2. '(print' → logprob: -7.62600040435791
    3. '(' → logprob: -8.50100040435791
    4. '()
' → logprob: -8.75100040435791
    5. '()' → logprob: -9.25100040435791
    6. '
' → logprob: -10.87600040435791
    7. '(
' → logprob: -11.25100040435791
    8. ' print' → logprob: -11.37600040435791
    9. ')' → logprob: -11.87600040435791
    10. '```' → logprob: -13.50100040435791

Token 549: ' ans' (ID: 3345)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.015317685902118683
    2. ' ans' → logprob: -4.265317916870117
    3. '(ans' → logprob: -6.765317916870117
    4. '	ans' → logprob: -15.015317916870117
    5. '_ans' → logprob: -16.015317916870117
    6. 'answer' → logprob: -17.265317916870117
    7. 'ANS' → logprob: -17.515317916870117
    8. 'ann' → logprob: -18.015317916870117
    9. '(' → logprob: -18.265317916870117
    10. 'anst' → logprob: -18.515317916870117

Token 550: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.029929718002676964
    2. '
' → logprob: -3.5299296379089355
    3. ' print' → logprob: -9.154930114746094
    4. '
' → logprob: -10.154930114746094
    5. '```' → logprob: -11.154930114746094
    6. ')
' → logprob: -11.654930114746094
    7. '\n' → logprob: -12.404930114746094
    8. ' 
' → logprob: -12.654930114746094
    9. '.print' → logprob: -13.779930114746094
    10. '' → logprob: -14.404930114746094

Token 551: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0019625357817858458
    2. '
' → logprob: -6.251962661743164
    3. ' print' → logprob: -10.501962661743164
    4. '```' → logprob: -12.626962661743164
    5. '\n' → logprob: -13.751962661743164
    6. '
' → logprob: -13.876962661743164
    7. ' 
' → logprob: -14.251962661743164
    8. '  
' → logprob: -15.751962661743164
    9. ')
' → logprob: -15.876962661743164
    10. '    
' → logprob: -16.251962661743164

Token 552: '(ans' (ID: 70054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12731704115867615
    2. '(ans' → logprob: -2.127316951751709
    3. '('' → logprob: -7.877316951751709
    4. '(
' → logprob: -12.627317428588867
    5. ' (' → logprob: -13.127317428588867
    6. '("("' → logprob: -13.377317428588867
    7. '()' → logprob: -13.752317428588867
    8. '(answer' → logprob: -14.752317428588867
    9. '(

' → logprob: -14.877317428588867
    10. '("' → logprob: -15.377317428588867

Token 553: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0325924449716695e-05
    2. '())' → logprob: -12.00001049041748
    3. '()' → logprob: -12.50001049041748
    4. ' )' → logprob: -15.50001049041748
    5. ')`' → logprob: -16.125009536743164
    6. '))' → logprob: -16.750009536743164
    7. '')' → logprob: -18.375009536743164
    8. ')
' → logprob: -19.125009536743164
    9. '`)' → logprob: -19.500009536743164
    10. '(' → logprob: -19.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 551
Tokens correctement prédits (1ère position, stricte): 131
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 309
Précision stricte (1ère position): 23.77%
Précision adaptée (1ère position): 24.14%
Précision (top 10): 56.08%
================================================================================
