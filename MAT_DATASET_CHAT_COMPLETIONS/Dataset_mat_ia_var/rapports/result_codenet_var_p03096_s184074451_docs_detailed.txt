================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:05:48
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def main():
    """
    Reads input, processes the sequences, and computes the number of valid ways
    to traverse the sequence given the problem's constraints. The result is output modulo MOD.
    """
    MOD = 10 ** 9 + 7  # Define the large modulus as per competitive programming convention

    N = int(input())  # Read the length of the sequence

    clist = []  # Will store the input sequence
    for i in range(N):
        c = int(input())
        clist.append(c)
    # clist now contains the input values

    # Remove consecutive duplicates to create c2list
    c2list = clist[:1]  # Start with the first element
    for i in range(1, N):
        if clist[i] != c2list[-1]:  # Only append if not the same as the last in c2list
            c2list.append(clist[i])
    N2 = len(c2list)  # New length after removing consecutive duplicates

    # cdic keeps a mapping from each unique value to list of its positions in c2list
    cdic = {}
    for i in range(N2):
        c = c2list[i]
        if c not in cdic:
            cdic[c] = [i]
        else:
            cdic[c].append(i)

    # dp[i] stores the number of ways to traverse up to position i in c2list
    dp = [1] + [0] * (N2 - 1)  # Base case: one way to reach the first element

    for i in range(1, N2):
        c = c2list[i]
        dp[i] = dp[i - 1]  # Always can continue from the previous position

        # For current value, add valid jumps from previous occurrences of the same value
        if len(cdic[c]) < 5:
            # For few occurrences, just search in reverse for the most recent before i
            for j in reversed(cdic[c]):
                if j < i:
                    dp[i] += dp[j]
                    break
        else:
            # If there are many occurrences, use binary search to find the rightmost before i
            l, r = 0, len(cdic[c]) - 1
            while l <= r:
                mid = (l + r) // 2
                # Handle lookahead safely: cdic[c][mid+1] may not exist at r=len-1
                next_index = mid + 1
                if cdic[c][mid] < i and (next_index >= len(cdic[c]) or cdic[c][next_index] >= i):
                    dp[i] += dp[cdic[c][mid]]
                    break
                elif cdic[c][mid] >= i:
                    r = mid - 1
                else:
                    l = mid + 1

    print(dp[-1] % MOD)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' main' (ID: 2758)
  → Token d'amorce (pas de prédiction)

Token 2: '():
' (ID: 8595)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2743290662765503
    2. '\n' → logprob: -1.7743290662765503
    3. '   ' → logprob: -3.52432918548584
    4. '(' → logprob: -4.39932918548584
    5. ' 
' → logprob: -5.14932918548584
    6. '    
' → logprob: -5.27432918548584
    7. ' ' → logprob: -5.52432918548584
    8. ''' → logprob: -5.64932918548584
    9. '    ' → logprob: -6.39932918548584
    10. '```' → logprob: -6.39932918548584

Token 4: ' """
' (ID: 7037)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5992159247398376
    2. '   ' → logprob: -1.4742159843444824
    3. 'pass' → logprob: -2.0992159843444824
    4. 'return' → logprob: -2.8492159843444824
    5. '#' → logprob: -4.224215984344482
    6. 'p' → logprob: -5.224215984344482
    7. '```' → logprob: -5.724215984344482
    8. 'r' → logprob: -5.724215984344482
    9. 'a' → logprob: -5.974215984344482
    10. '\' → logprob: -5.974215984344482

Token 5: '   ' (ID: 271)
  Prédit: 'Calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Calculate' → logprob: -1.3367114067077637
    2. 'Initialize' → logprob: -1.9617114067077637
    3. 'This' → logprob: -2.0867114067077637
    4. 'Run' → logprob: -2.8367114067077637
    5. '"""' → logprob: -3.0867114067077637
    6. 'Main' → logprob: -3.0867114067077637
    7. 'Initial' → logprob: -3.3367114067077637
    8. 'Start' → logprob: -3.7117114067077637
    9. 'Returns' → logprob: -3.7117114067077637
    10. 'Runs' → logprob: -3.8367114067077637

Token 6: ' Reads' (ID: 88839)
  Prédit: 'This'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'This' → logprob: -1.4658902883529663
    2. 'Run' → logprob: -1.7158902883529663
    3. 'Calculate' → logprob: -1.9658902883529663
    4. '"""' → logprob: -2.715890407562256
    5. 'Initialize' → logprob: -2.965890407562256
    6. 'Main' → logprob: -3.215890407562256
    7. 'Process' → logprob: -3.340890407562256
    8. '   ' → logprob: -3.715890407562256
    9. 'Start' → logprob: -4.090890407562256
    10. 'Runs' → logprob: -4.090890407562256

Token 7: ' input' (ID: 3422)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6491580009460449
    2. ' the' → logprob: -1.399158000946045
    3. '   ' → logprob: -2.524158000946045
    4. ' ' → logprob: -3.274158000946045
    5. ' )' → logprob: -3.649158000946045
    6. ' input' → logprob: -3.649158000946045
    7. 'the' → logprob: -4.899158000946045
    8. 'input' → logprob: -4.899158000946045
    9. '```' → logprob: -5.024158000946045
    10. '()' → logprob: -5.399158000946045

Token 8: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.034373797476291656
    2. '```' → logprob: -4.784373760223389
    3. '(' → logprob: -5.284373760223389
    4. ' ' → logprob: -5.409373760223389
    5. '    ' → logprob: -6.284373760223389
    6. '       ' → logprob: -6.284373760223389
    7. ')' → logprob: -6.284373760223389
    8. '`' → logprob: -6.659373760223389
    9. '  ' → logprob: -6.784373760223389
    10. 's' → logprob: -6.784373760223389

Token 9: ' processes' (ID: 14340)
  Prédit: ' processes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' processes' → logprob: -0.08958893269300461
    2. '   ' → logprob: -3.0895888805389404
    3. ' and' → logprob: -4.5895891189575195
    4. ' process' → logprob: -4.7145891189575195
    5. 'process' → logprob: -4.8395891189575195
    6. ' parses' → logprob: -5.3395891189575195
    7. '    ' → logprob: -5.4645891189575195
    8. ' pass' → logprob: -7.0895891189575195
    9. ' ' → logprob: -7.8395891189575195
    10. ' passes' → logprob: -7.9645891189575195

Token 10: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5767379403114319
    2. ' and' → logprob: -1.451737880706787
    3. ',' → logprob: -2.326737880706787
    4. ' ,' → logprob: -3.951737880706787
    5. ' ' → logprob: -4.076737880706787
    6. '    ' → logprob: -4.201737880706787
    7. 'data' → logprob: -4.576737880706787
    8. ' data' → logprob: -4.576737880706787
    9. 's' → logprob: -4.826737880706787
    10. '_' → logprob: -5.451737880706787

Token 11: ' sequences' (ID: 45665)
  Prédit: ' data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.48197802901268005
    2. ' input' → logprob: -1.1069780588150024
    3. 'data' → logprob: -3.606977939605713
    4. 'input' → logprob: -4.356977939605713
    5. ' text' → logprob: -5.106977939605713
    6. ' user's' → logprob: -6.606977939605713
    7. ' given' → logprob: -7.231977939605713
    8. ' user' → logprob: -7.356977939605713
    9. ' string' → logprob: -7.606977939605713
    10. 'text' → logprob: -7.731977939605713

Token 12: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17529454827308655
    2. ',' → logprob: -2.0502946376800537
    3. '```' → logprob: -3.6752946376800537
    4. ' and' → logprob: -6.175294399261475
    5. '`' → logprob: -6.425294399261475
    6. '``' → logprob: -7.425294399261475
    7. '"""
' → logprob: -7.675294399261475
    8. '    ' → logprob: -7.925294399261475
    9. '       ' → logprob: -8.050294876098633
    10. ' ,' → logprob: -8.175294876098633

Token 13: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.17284835875034332
    2. '   ' → logprob: -1.9228483438491821
    3. 'and' → logprob: -4.672848224639893
    4. '    ' → logprob: -5.797848224639893
    5. '       ' → logprob: -10.54784870147705
    6. ' ' → logprob: -10.54784870147705
    7. '```' → logprob: -10.54784870147705
    8. ',' → logprob: -10.79784870147705
    9. '     ' → logprob: -11.29784870147705
    10. ' to' → logprob: -12.17284870147705

Token 14: ' computes' (ID: 144619)
  Prédit: ' returns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' returns' → logprob: -0.3475915789604187
    2. '   ' → logprob: -1.7225916385650635
    3. 'returns' → logprob: -2.2225916385650635
    4. ' outputs' → logprob: -6.097591400146484
    5. ' prints' → logprob: -6.472591400146484
    6. 'outputs' → logprob: -6.972591400146484
    7. ' calculates' → logprob: -7.097591400146484
    8. ' computes' → logprob: -8.097591400146484
    9. ' generates' → logprob: -8.847591400146484
    10. '    ' → logprob: -8.847591400146484

Token 15: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.017312707379460335
    2. ' their' → logprob: -4.517312526702881
    3. 'the' → logprob: -6.267312526702881
    4. '   ' → logprob: -6.267312526702881
    5. ' a' → logprob: -7.142312526702881
    6. ' results' → logprob: -8.142313003540039
    7. ' sequences' → logprob: -8.392313003540039
    8. ' ' → logprob: -8.892313003540039
    9. ' an' → logprob: -9.267313003540039
    10. ' and' → logprob: -9.267313003540039

Token 16: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.4825453758239746
    2. ' result' → logprob: -1.7325453758239746
    3. ' longest' → logprob: -2.1075453758239746
    4. ' maximum' → logprob: -2.3575453758239746
    5. ' next' → logprob: -2.7325453758239746
    6. ' ' → logprob: -2.8575453758239746
    7. '   ' → logprob: -3.2325453758239746
    8. ' best' → logprob: -3.4825453758239746
    9. ' minimal' → logprob: -4.482545375823975
    10. ' minimum' → logprob: -4.482545375823975

Token 17: ' of' (ID: 328)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42367851734161377
    2. '_' → logprob: -1.1736785173416138
    3. ' of' → logprob: -3.923678398132324
    4. '  ' → logprob: -5.673678398132324
    5. ''' → logprob: -5.798678398132324
    6. '(' → logprob: -6.548678398132324
    7. 's' → logprob: -6.673678398132324
    8. '"' → logprob: -7.173678398132324
    9. 'of' → logprob: -7.173678398132324
    10. '   ' → logprob: -7.173678398132324

Token 18: ' valid' (ID: 4529)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005637581925839186
    2. '_' → logprob: -6.2556376457214355
    3. ' unique' → logprob: -6.5056376457214355
    4. ' sequences' → logprob: -7.2556376457214355
    5. ' valid' → logprob: -7.3806376457214355
    6. ' space' → logprob: -9.130637168884277
    7. '  ' → logprob: -9.380637168884277
    8. ''' → logprob: -9.380637168884277
    9. ' ```' → logprob: -9.755637168884277
    10. ' distinct' → logprob: -10.005637168884277

Token 19: ' ways' (ID: 6984)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.42070505023002625
    2. '_' → logprob: -1.6707050800323486
    3. ' sequences' → logprob: -2.0457050800323486
    4. '_sequences' → logprob: -4.0457048416137695
    5. 's' → logprob: -6.4207048416137695
    6. '  ' → logprob: -6.6707048416137695
    7. '   ' → logprob: -6.9207048416137695
    8. '_s' → logprob: -7.5457048416137695
    9. ' valid' → logprob: -7.5457048416137695
    10. '_valid' → logprob: -7.6707048416137695

Token 20: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05351966246962547
    2. ' to' → logprob: -3.1785197257995605
    3. '(' → logprob: -5.5535197257995605
    4. '    ' → logprob: -6.0535197257995605
    5. ' ' → logprob: -6.3035197257995605
    6. '\' → logprob: -7.8035197257995605
    7. '_' → logprob: -7.9285197257995605
    8. 'to' → logprob: -8.053519248962402
    9. '    
' → logprob: -8.428519248962402
    10. '```' → logprob: -8.678519248962402

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8866636753082275
    2. ' to' → logprob: -1.1366636753082275
    3. ' ' → logprob: -1.3866636753082275
    4. 't' → logprob: -5.136663436889648
    5. ' t' → logprob: -5.761663436889648
    6. '    ' → logprob: -6.011663436889648
    7. 'to' → logprob: -6.386663436889648
    8. '  ' → logprob: -6.761663436889648
    9. '_' → logprob: -7.886663436889648
    10. ')' → logprob: -8.386663436889648

Token 22: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3286263942718506
    2. ' to' → logprob: -1.3286263942718506
    3. ' ' → logprob: -4.82862663269043
    4. 'to' (adapté à ' to') → logprob: -5.70362663269043
    5. '```' → logprob: -7.07862663269043
    6. 't' → logprob: -7.20362663269043
    7. '\' → logprob: -7.82862663269043
    8. '    ' → logprob: -7.82862663269043
    9. '"' → logprob: -8.20362663269043
    10. '"""' → logprob: -8.45362663269043

Token 23: ' traverse' (ID: 66957)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16125056147575378
    2. ' process' → logprob: -3.911250591278076
    3. ' arrange' → logprob: -4.286250591278076
    4. ' assemble' → logprob: -4.661250591278076
    5. ' combine' → logprob: -4.911250591278076
    6. ' c' → logprob: -5.036250591278076
    7. ' assign' → logprob: -5.286250591278076
    8. ' decode' → logprob: -5.286250591278076
    9. ' build' → logprob: -5.536250591278076
    10. ' space' → logprob: -5.536250591278076

Token 24: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.025975003838539124
    2. '   ' → logprob: -4.025975227355957
    3. ' a' → logprob: -6.150975227355957
    4. 'the' → logprob: -6.275975227355957
    5. '    ' → logprob: -6.650975227355957
    6. ' ' → logprob: -7.025975227355957
    7. ' through' → logprob: -7.525975227355957
    8. ' sequences' → logprob: -8.525975227355957
    9. ' to' → logprob: -9.400975227355957
    10. ' each' → logprob: -9.525975227355957

Token 25: ' sequence' (ID: 16281)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -1.0607167482376099
    2. ' sequences' → logprob: -1.3107167482376099
    3. ' sequence' → logprob: -2.0607166290283203
    4. ' graph' → logprob: -2.4357166290283203
    5. ' ' → logprob: -3.0607166290283203
    6. ' tree' → logprob: -3.4357166290283203
    7. ' array' → logprob: -3.6857166290283203
    8. ' space' → logprob: -4.06071662902832
    9. '_' → logprob: -4.06071662902832
    10. ' grid' → logprob: -5.81071662902832

Token 26: ' given' (ID: 4335)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010416148230433464
    2. '
' → logprob: -6.010416030883789
    3. '.' → logprob: -6.135416030883789
    4. ' ' → logprob: -6.760416030883789
    5. '```' → logprob: -7.135416030883789
    6. '    
' → logprob: -7.385416030883789
    7. '"' → logprob: -7.635416030883789
    8. ')' → logprob: -7.760416030883789
    9. '\n' → logprob: -7.760416030883789
    10. '\' → logprob: -8.010416030883789

Token 27: ' the' (ID: 290)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.42631953954696655
    2. ' a' → logprob: -2.4263195991516113
    3. ' the' → logprob: -3.0513195991516113
    4. ' ' → logprob: -3.5513195991516113
    5. ' constraints' → logprob: -3.5513195991516113
    6. '```' → logprob: -3.5513195991516113
    7. '    ' → logprob: -3.8013195991516113
    8. ')' → logprob: -4.426319599151611
    9. '<|end|>' → logprob: -4.551319599151611
    10. ' )' → logprob: -5.051319599151611

Token 28: ' problem' (ID: 4792)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.5712223649024963
    2. ' ' → logprob: -1.1962223052978516
    3. ' sequence' → logprob: -3.4462223052978516
    4. ' current' → logprob: -3.6962223052978516
    5. ' sequences' → logprob: -4.321222305297852
    6. ' remaining' → logprob: -4.571222305297852
    7. ' problem' → logprob: -4.571222305297852
    8. ' space' → logprob: -5.196222305297852
    9. ' input' → logprob: -5.571222305297852
    10. ' constraint' → logprob: -5.571222305297852

Token 29: ''s' (ID: 885)
  Prédit: ' constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.17542359232902527
    2. '   ' → logprob: -2.1754236221313477
    3. 'constraints' → logprob: -3.9254236221313477
    4. '.' → logprob: -4.550423622131348
    5. ' statement' → logprob: -4.800423622131348
    6. ' description' → logprob: -6.050423622131348
    7. ''s' → logprob: -6.675423622131348
    8. '_constraints' → logprob: -6.925423622131348
    9. 'def' → logprob: -7.550423622131348
    10. '    ' → logprob: -7.800423622131348

Token 30: ' constraints' (ID: 31060)
  Prédit: ' constraints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' constraints' → logprob: -0.07621271908283234
    2. ' ' → logprob: -2.7012126445770264
    3. 'constraints' → logprob: -5.3262128829956055
    4. ' conditions' → logprob: -7.7012128829956055
    5. ' description' → logprob: -8.076212882995605
    6. ' rules' → logprob: -8.326212882995605
    7. ' constraint' → logprob: -9.326212882995605
    8. ' space' → logprob: -9.826212882995605
    9. ' restrictions' → logprob: -10.701212882995605
    10. ' parameters' → logprob: -10.701212882995605

Token 31: '.' (ID: 13)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03288847580552101
    2. '
' → logprob: -4.407888412475586
    3. '    
' → logprob: -4.907888412475586
    4. '<|end|>' → logprob: -5.657888412475586
    5. '```' → logprob: -5.782888412475586
    6. '\n' → logprob: -6.407888412475586
    7. '' → logprob: -7.157888412475586
    8. '\' → logprob: -7.157888412475586
    9. '  ' → logprob: -7.657888412475586
    10. ' ' → logprob: -7.782888412475586

Token 32: ' The' (ID: 623)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04933904856443405
    2. '
' → logprob: -3.4243390560150146
    3. '    
' → logprob: -4.9243388175964355
    4. '"""' → logprob: -5.9243388175964355
    5. '\n' → logprob: -6.1743388175964355
    6. '```' → logprob: -6.5493388175964355
    7. '    ' → logprob: -7.2993388175964355
    8. '\' → logprob: -8.299339294433594
    9. '  
' → logprob: -8.674339294433594
    10. '' → logprob: -8.799339294433594

Token 33: ' result' (ID: 1534)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5491129755973816
    2. ' """' → logprob: -2.1741130352020264
    3. ' code' → logprob: -2.2991130352020264
    4. ' input' → logprob: -2.9241130352020264
    5. ' function' → logprob: -3.9241130352020264
    6. 'def' → logprob: -4.049112796783447
    7. ' """
' → logprob: -4.299112796783447
    8. '   ' → logprob: -4.299112796783447
    9. ' next' → logprob: -4.674112796783447
    10. ' "' → logprob: -4.799112796783447

Token 34: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4905303418636322
    2. ' ' → logprob: -1.8655303716659546
    3. '   ' → logprob: -1.8655303716659546
    4. '<|end|>' → logprob: -3.240530252456665
    5. ' =' → logprob: -4.615530490875244
    6. ' can' → logprob: -5.365530490875244
    7. '<|end|>' → logprob: -5.615530490875244
    8. '```' → logprob: -5.865530490875244
    9. '  ' → logprob: -5.990530490875244
    10. '_' → logprob: -6.240530490875244

Token 35: ' output' (ID: 4733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.020465156063437462
    2. ' computed' → logprob: -4.27046537399292
    3. ' calculated' → logprob: -6.27046537399292
    4. '"' → logprob: -6.89546537399292
    5. '<|end|>' → logprob: -7.52046537399292
    6. ' "' → logprob: -8.020464897155762
    7. ' None' → logprob: -8.145464897155762
    8. '    ' → logprob: -8.145464897155762
    9. ' a' → logprob: -8.395464897155762
    10. '```' → logprob: -8.395464897155762

Token 36: ' modulo' (ID: 112372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4688538610935211
    2. '.' → logprob: -1.7188538312911987
    3. ' ' → logprob: -1.9688538312911987
    4. '   ' → logprob: -4.468853950500488
    5. '"' → logprob: -4.718853950500488
    6. ')' → logprob: -5.343853950500488
    7. '  ' → logprob: -5.468853950500488
    8. 'ted' → logprob: -5.593853950500488
    9. '```' → logprob: -5.593853950500488
    10. ' to' → logprob: -5.843853950500488

Token 37: ' MOD' (ID: 32868)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.008156602270901203
    2. '32' → logprob: -6.133156776428223
    3. ' "' → logprob: -6.383156776428223
    4. ' ' → logprob: -7.133156776428223
    5. ' space' → logprob: -7.383156776428223
    6. '10' → logprob: -7.383156776428223
    7. ' '' → logprob: -7.633156776428223
    8. ' `' → logprob: -7.883156776428223
    9. '"' → logprob: -8.008156776428223
    10. '  ' → logprob: -8.258156776428223

Token 38: '.
' (ID: 558)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4415736794471741
    2. '
' → logprob: -1.8165736198425293
    3. '\' → logprob: -2.0665736198425293
    4. '```' → logprob: -3.6915736198425293
    5. '   ' → logprob: -3.9415736198425293
    6. '\n' → logprob: -4.441573619842529
    7. ':
' → logprob: -5.816573619842529
    8. '    
' → logprob: -6.066573619842529
    9. '' → logprob: -6.316573619842529
    10. '  
' → logprob: -7.441573619842529

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20397868752479553
    2. '"""' → logprob: -1.7039786577224731
    3. '```' → logprob: -6.703978538513184
    4. '"' → logprob: -7.453978538513184
    5. '"""
' → logprob: -7.453978538513184
    6. '""' → logprob: -9.203978538513184
    7. '    
' → logprob: -10.578978538513184
    8. '\n' → logprob: -11.328978538513184
    9. '
' → logprob: -11.453978538513184
    10. '`' → logprob: -11.953978538513184

Token 40: ' """
' (ID: 7037)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24113844335079193
    2. '"""' → logprob: -1.9911384582519531
    3. '```' → logprob: -3.491138458251953
    4. '\n' → logprob: -3.616138458251953
    5. '
' → logprob: -4.241138458251953
    6. '"""
' (adapté à ' """
') → logprob: -6.366138458251953
    7. '    
' → logprob: -6.616138458251953
    8. '"' → logprob: -6.991138458251953
    9. '\' → logprob: -7.366138458251953
    10. 'n' → logprob: -8.366138458251953

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6725431084632874
    2. 'n' → logprob: -1.0475430488586426
    3. '\n' → logprob: -2.7975430488586426
    4. '
' → logprob: -3.0475430488586426
    5. '\' → logprob: -4.922543048858643
    6. 'import' → logprob: -5.047543048858643
    7. 'newline' → logprob: -5.297543048858643
    8. '    
' → logprob: -5.547543048858643
    9. '```' → logprob: -5.547543048858643
    10. '    ' → logprob: -7.797543048858643

Token 42: ' MOD' (ID: 32868)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.25384682416915894
    2. '   ' → logprob: -1.7538468837738037
    3. 'import' → logprob: -4.253846645355225
    4. '#' → logprob: -4.503846645355225
    5. 'MOD' (adapté à ' MOD') → logprob: -4.628846645355225
    6. ' n' → logprob: -5.628846645355225
    7. 'N' → logprob: -6.003846645355225
    8. ' MOD' → logprob: -6.378846645355225
    9. '    
' → logprob: -6.878846645355225
    10. '\n' → logprob: -7.003846645355225

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014186188578605652
    2. '=' → logprob: -4.264186382293701
    3. ' ' → logprob: -11.014185905456543
    4. ' =
' → logprob: -12.389185905456543
    5. ' =)' → logprob: -13.639185905456543
    6. ')' → logprob: -15.139185905456543
    7. ',' → logprob: -16.01418685913086
    8. '   ' → logprob: -16.51418685913086
    9. '<|end|>' → logprob: -16.51418685913086
    10. '  ' → logprob: -17.01418685913086

Token 44: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.49797752499580383
    2. ' ' → logprob: -0.9979774951934814
    3. '100' → logprob: -3.7479774951934814
    4. '998' → logprob: -10.372977256774902
    5. '1' → logprob: -10.997977256774902
    6. '123' → logprob: -13.622977256774902
    7. ' ' → logprob: -14.372977256774902
    8. 'int' → logprob: -14.622977256774902
    9. '109' → logprob: -14.872977256774902
    10. '101' → logprob: -15.372977256774902

Token 45: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.025412194430828094
    2. '100' → logprob: -3.775412082672119
    3. '998' → logprob: -6.150412082672119
    4. '1' → logprob: -10.650412559509277
    5. '123' → logprob: -12.775412559509277
    6. 'int' → logprob: -14.025412559509277
    7. ' ' → logprob: -14.275412559509277
    8. '200' → logprob: -14.525412559509277
    9. '999' → logprob: -14.525412559509277
    10. '(' → logprob: -14.775412559509277

Token 46: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.22816231846809387
    2. '**' → logprob: -1.6031622886657715
    3. '7' → logprob: -6.2281622886657715
    4. '09' → logprob: -7.8531622886657715
    5. '000' → logprob: -8.35316276550293
    6. '```' → logprob: -9.72816276550293
    7. '6' → logprob: -10.10316276550293
    8. '00' → logprob: -10.72816276550293
    9. '8' → logprob: -12.22816276550293
    10. '^' → logprob: -12.35316276550293

Token 47: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.6240566083070007e-06
    2. '09' → logprob: -13.375001907348633
    3. '```' → logprob: -17.875001907348633
    4. ' ' → logprob: -18.375001907348633
    5. '   ' → logprob: -19.500001907348633
    6. '+' → logprob: -19.625001907348633
    7. '4' → logprob: -19.625001907348633
    8. '10' → logprob: -19.625001907348633
    9. '_' → logprob: -20.000001907348633
    10. '
' → logprob: -20.500001907348633

Token 48: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -2.45848218582978e-06
    2. '09' → logprob: -13.00000286102295
    3. '```' → logprob: -16.500001907348633
    4. ' ' → logprob: -17.750001907348633
    5. '   ' → logprob: -18.125001907348633
    6. '10' → logprob: -18.375001907348633
    7. '+' → logprob: -19.125001907348633
    8. '8' → logprob: -19.625001907348633
    9. '
' → logprob: -19.750001907348633
    10. '4' → logprob: -19.750001907348633

Token 49: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013739225687459111
    2. ' +' → logprob: -6.626373767852783
    3. '7' → logprob: -10.126374244689941
    4. '46' → logprob: -13.126374244689941
    5. '37' → logprob: -14.001374244689941
    6. ' ' → logprob: -14.376374244689941
    7. '```' → logprob: -14.376374244689941
    8. '+
' → logprob: -15.126374244689941
    9. '61' → logprob: -15.376374244689941
    10. '36' → logprob: -15.376374244689941

Token 50: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -3.128163257315464e-07
    2. '+' → logprob: -16.125
    3. ' ' → logprob: -16.375
    4. '9' → logprob: -17.375
    5. '```' → logprob: -17.875
    6. '   ' → logprob: -18.375
    7. '07' → logprob: -18.625
    8. '

' → logprob: -20.625
    9. '17' → logprob: -20.875
    10. '67' → logprob: -21.0

Token 51: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. '+' → logprob: -18.0
    3. '```' → logprob: -18.75
    4. '   ' → logprob: -19.5
    5. '07' → logprob: -20.25
    6. ' ' → logprob: -20.5
    7. '

' → logprob: -21.125
    8. '9' → logprob: -21.5
    9. '``' → logprob: -21.5
    10. ' ' → logprob: -21.875

Token 52: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022101067006587982
    2. '   ' → logprob: -4.897100925445557
    3. '\n' → logprob: -5.147100925445557
    4. '```' → logprob: -5.897100925445557
    5. '\' → logprob: -6.397100925445557
    6. '    
' → logprob: -6.397100925445557
    7. 'n' → logprob: -6.897100925445557
    8. 'newline' → logprob: -7.272100925445557
    9. '' → logprob: -8.772101402282715
    10. '<|end|>' → logprob: -9.147101402282715

Token 53: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02747493050992489
    2. '\n' → logprob: -4.402474880218506
    3. '   ' → logprob: -5.277474880218506
    4. 'n' → logprob: -5.277474880218506
    5. '    
' → logprob: -6.652474880218506
    6. '\' → logprob: -6.777474880218506
    7. '```' → logprob: -6.902474880218506
    8. 'newline' → logprob: -8.152475357055664
    9. '' → logprob: -8.277475357055664
    10. '
' → logprob: -8.527475357055664

Token 54: ' Define' (ID: 38966)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6938928365707397
    2. ' n' → logprob: -1.0688928365707397
    3. 'n' → logprob: -2.1938929557800293
    4. ' number' → logprob: -4.693892955780029
    5. ' dp' → logprob: -4.818892955780029
    6. '   ' → logprob: -6.068892955780029
    7. ' )' → logprob: -6.318892955780029
    8. ' max' → logprob: -6.318892955780029
    9. 'dp' → logprob: -6.318892955780029
    10. '    ' → logprob: -6.443892955780029

Token 55: ' the' (ID: 290)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0024203681387007236
    2. '<|end|>' → logprob: -6.502420425415039
    3. ' a' → logprob: -8.502420425415039
    4. ' )' → logprob: -8.752420425415039
    5. '_' → logprob: -9.127420425415039
    6. '    ' → logprob: -9.127420425415039
    7. ' n' → logprob: -9.752420425415039
    8. ' the' → logprob: -10.502420425415039
    9. '<|end|>' → logprob: -10.627420425415039
    10. ')' → logprob: -10.627420425415039

Token 56: ' large' (ID: 4410)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.665276825428009
    2. ' number' → logprob: -0.790276825428009
    3. 'n' → logprob: -4.415277004241943
    4. ' n' → logprob: -4.915277004241943
    5. ' space' → logprob: -5.790277004241943
    6. ' result' → logprob: -6.415277004241943
    7. ' input' → logprob: -6.915277004241943
    8. ' ways' → logprob: -7.040277004241943
    9. 'number' → logprob: -7.415277004241943
    10. ' next' → logprob: -7.540277004241943

Token 57: ' modulus' (ID: 149464)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' as' (ID: 472)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1782074272632599
    2. '   ' → logprob: -2.0532073974609375
    3. '\n' → logprob: -4.3032073974609375
    4. '    
' → logprob: -4.6782073974609375
    5. '```' → logprob: -5.8032073974609375
    6. 'n' → logprob: -6.1782073974609375
    7. '\' → logprob: -6.3032073974609375
    8. 'input' → logprob: -7.0532073974609375
    9. 'newline' → logprob: -7.0532073974609375
    10. 'def' → logprob: -7.3032073974609375

Token 59: ' per' (ID: 777)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.31305068731307983
    2. '100' → logprob: -1.6880507469177246
    3. ' ' → logprob: -2.8130507469177246
    4. ' a' → logprob: -4.063050746917725
    5. '1' → logprob: -5.813050746917725
    6. '```' → logprob: -6.563050746917725
    7. ' the' → logprob: -7.438050746917725
    8. 'int' → logprob: -7.813050746917725
    9. ' an' → logprob: -8.063050270080566
    10. 'a' → logprob: -8.063050270080566

Token 60: ' competitive' (ID: 18602)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.18945521116256714
    2. 'the' → logprob: -2.189455270767212
    3. ' problem' → logprob: -3.064455270767212
    4. 'problem' → logprob: -4.939455032348633
    5. ' Python' → logprob: -6.189455032348633
    6. ' standard' → logprob: -6.439455032348633
    7. ' common' → logprob: -7.064455032348633
    8. ' code' → logprob: -7.564455032348633
    9. ' typical' → logprob: -7.939455032348633
    10. ' competitive' → logprob: -8.189455032348633

Token 61: ' programming' (ID: 23238)
  Prédit: ' programming'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' programming' → logprob: -0.12753775715827942
    2. 'program' → logprob: -2.127537727355957
    3. '_program' → logprob: -8.377537727355957
    4. ' program' → logprob: -9.002537727355957
    5. 'Programming' → logprob: -9.752537727355957
    6. '<|end|>' → logprob: -9.877537727355957
    7. ' ' → logprob: -10.627537727355957
    8. '-program' → logprob: -10.877537727355957
    9. 'python' → logprob: -10.877537727355957
    10. ' programmers' → logprob: -11.127537727355957

Token 62: ' convention' (ID: 39395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30781152844429016
    2. '   ' → logprob: -2.0578114986419678
    3. '\n' → logprob: -3.0578114986419678
    4. '    
' → logprob: -3.3078114986419678
    5. '\' → logprob: -4.432811737060547
    6. '```' → logprob: -4.807811737060547
    7. 'input' → logprob: -5.182811737060547
    8. 'def' → logprob: -5.557811737060547
    9. '<|end|>' → logprob: -5.682811737060547
    10. 'newline' → logprob: -5.932811737060547

Token 63: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07666340470314026
    2. '   ' → logprob: -2.9516634941101074
    3. '    
' → logprob: -4.451663494110107
    4. '\n' → logprob: -5.701663494110107
    5. 'n' → logprob: -6.326663494110107
    6. '\' → logprob: -6.826663494110107
    7. '```' → logprob: -7.076663494110107
    8. 'input' → logprob: -7.326663494110107
    9. 'newline' → logprob: -7.951663494110107
    10. '  
' → logprob: -7.951663494110107

Token 64: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2968275249004364
    2. 'n' → logprob: -2.171827554702759
    3. '
' → logprob: -2.296827554702759
    4. '    
' → logprob: -3.671827554702759
    5. 'input' → logprob: -5.04682731628418
    6. '\n' → logprob: -5.67182731628418
    7. '```' → logprob: -6.04682731628418
    8. 'import' → logprob: -6.17182731628418
    9. 'newline' → logprob: -7.54682731628418
    10. '\' → logprob: -8.04682731628418

Token 65: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.030818453058600426
    2. ' n' → logprob: -4.155818462371826
    3. '   ' → logprob: -4.405818462371826
    4. 'N' (adapté à ' N') → logprob: -6.405818462371826
    5. 'import' → logprob: -7.405818462371826
    6. ' import' → logprob: -10.030817985534668
    7. 'from' → logprob: -10.155817985534668
    8. ' N' → logprob: -10.280817985534668
    9. '#' → logprob: -11.155817985534668
    10. '
' → logprob: -11.405817985534668

Token 66: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03916551172733307
    2. '=' → logprob: -3.414165496826172
    3. ',' → logprob: -5.289165496826172
    4. ' ' → logprob: -8.414165496826172
    5. ' ,' → logprob: -9.414165496826172
    6. '=int' → logprob: -9.414165496826172
    7. ')' → logprob: -10.414165496826172
    8. '=input' → logprob: -10.789165496826172
    9. ' =
' → logprob: -11.664165496826172
    10. '   ' → logprob: -12.664165496826172

Token 67: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.029756855219602585
    2. 'int' → logprob: -3.529756784439087
    3. ' ' → logprob: -12.404756546020508
    4. ' len' → logprob: -13.654756546020508
    5. ' input' → logprob: -15.154756546020508
    6. 'len' → logprob: -15.404756546020508
    7. '  ' → logprob: -15.904756546020508
    8. '=int' → logprob: -16.029756546020508
    9. '	int' → logprob: -16.279756546020508
    10. '<int' → logprob: -16.779756546020508

Token 68: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0487237386405468
    2. '(' → logprob: -3.0487236976623535
    3. 'input' → logprob: -8.923724174499512
    4. '()' → logprob: -13.673724174499512
    5. ' input' → logprob: -13.798724174499512
    6. '(
' → logprob: -14.798724174499512
    7. ' (' → logprob: -15.298724174499512
    8. '=input' → logprob: -15.798724174499512
    9. ',input' → logprob: -16.923723220825195
    10. '(

' → logprob: -16.923723220825195

Token 69: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04867582395672798
    2. '()' → logprob: -3.048675775527954
    3. ')' → logprob: -9.798675537109375
    4. '(' → logprob: -11.548675537109375
    5. ' ())' → logprob: -11.548675537109375
    6. '())
' → logprob: -12.423675537109375
    7. '()))' → logprob: -12.923675537109375
    8. '().' → logprob: -13.173675537109375
    9. '();)' → logprob: -14.048675537109375
    10. '()),' → logprob: -14.173675537109375

Token 70: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47038233280181885
    2. '   ' → logprob: -2.3453822135925293
    3. 'a' → logprob: -2.7203822135925293
    4. 's' → logprob: -3.0953822135925293
    5. '
' → logprob: -3.0953822135925293
    6. ' sequences' → logprob: -3.5953822135925293
    7. '<|end|>' → logprob: -3.5953822135925293
    8. 'data' → logprob: -4.970382213592529
    9. ' ' → logprob: -4.970382213592529
    10. 'sequence' → logprob: -5.095382213592529

Token 71: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16954880952835083
    2. '
' → logprob: -2.669548749923706
    3. '   ' → logprob: -3.544548749923706
    4. '<|end|>' → logprob: -3.794548749923706
    5. 's' → logprob: -5.294548988342285
    6. ' ' → logprob: -5.544548988342285
    7. '\n' → logprob: -5.794548988342285
    8. 'a' → logprob: -6.169548988342285
    9. 'data' → logprob: -6.169548988342285
    10. 'n' → logprob: -6.294548988342285

Token 72: ' Read' (ID: 5405)
  Prédit: ' sequences'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sequences' → logprob: -1.1965845823287964
    2. ' sequence' → logprob: -2.196584701538086
    3. 'sequence' → logprob: -2.321584701538086
    4. 's' → logprob: -2.571584701538086
    5. ' s' → logprob: -2.571584701538086
    6. ' seq' → logprob: -2.821584701538086
    7. ' A' → logprob: -2.946584701538086
    8. 'seq' → logprob: -3.071584701538086
    9. ' a' → logprob: -3.071584701538086
    10. 'arr' → logprob: -3.446584701538086

Token 73: ' the' (ID: 290)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00043794067460112274
    2. '())' → logprob: -9.25043773651123
    3. 'input' → logprob: -9.25043773651123
    4. '(' → logprob: -9.50043773651123
    5. 'the' → logprob: -10.00043773651123
    6. ' ()' → logprob: -10.37543773651123
    7. '()
' → logprob: -10.87543773651123
    8. '<|end|>' → logprob: -10.87543773651123
    9. ')' → logprob: -11.12543773651123
    10. ' input' → logprob: -12.00043773651123

Token 74: ' length' (ID: 5517)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39211729168891907
    2. ' number' → logprob: -2.3921172618865967
    3. '()' → logprob: -2.6421172618865967
    4. 'input' → logprob: -2.8921172618865967
    5. 'number' → logprob: -3.3921172618865967
    6. ' next' → logprob: -3.8921172618865967
    7. ' input' → logprob: -4.267117500305176
    8. '())' → logprob: -4.892117500305176
    9. ' )' → logprob: -5.267117500305176
    10. 'n' → logprob: -5.642117500305176

Token 75: ' of' (ID: 328)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33585718274116516
    2. '(' → logprob: -2.4608571529388428
    3. '()' → logprob: -2.5858571529388428
    4. '<|end|>' → logprob: -2.9608571529388428
    5. ' of' → logprob: -3.4608571529388428
    6. '   ' → logprob: -3.7108571529388428
    7. '<|end|>' → logprob: -4.835857391357422
    8. ' )' → logprob: -5.585857391357422
    9. '())' → logprob: -6.335857391357422
    10. 'of' → logprob: -7.585857391357422

Token 76: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.14675770699977875
    2. ' input' → logprob: -2.5217576026916504
    3. ' sequences' → logprob: -3.5217576026916504
    4. 'the' → logprob: -4.39675760269165
    5. 'input' → logprob: -5.77175760269165
    6. ')' → logprob: -5.89675760269165
    7. ' sequence' → logprob: -6.02175760269165
    8. ' ' → logprob: -6.14675760269165
    9. ' a' → logprob: -6.27175760269165
    10. ' )' → logprob: -6.64675760269165

Token 77: ' sequence' (ID: 16281)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -0.041652776300907135
    2. 'input' → logprob: -4.041652679443359
    3. ' sequence' → logprob: -4.041652679443359
    4. 'array' → logprob: -6.166652679443359
    5. 'string' → logprob: -7.416652679443359
    6. 'se' → logprob: -7.666652679443359
    7. ' input' → logprob: -7.666652679443359
    8. ' sequences' → logprob: -7.791652679443359
    9. ')' → logprob: -7.916652679443359
    10. 'list' → logprob: -8.41665267944336

Token 78: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6945740580558777
    2. '<|end|>' → logprob: -1.3195741176605225
    3. ')' → logprob: -2.0695741176605225
    4. '
' → logprob: -3.6945741176605225
    5. ' sequences' → logprob: -3.9445741176605225
    6. 's' → logprob: -4.444573879241943
    7. 'a' → logprob: -4.569573879241943
    8. 'sequence' → logprob: -4.694573879241943
    9. '<|end|>' → logprob: -4.944573879241943
    10. '    
' → logprob: -5.194573879241943

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7940486669540405
    2. '
' → logprob: -1.7940486669540405
    3. '    
' → logprob: -2.66904878616333
    4. 's' → logprob: -2.79404878616333
    5. ' sequences' → logprob: -2.91904878616333
    6. 'a' → logprob: -3.04404878616333
    7. 'A' → logprob: -3.16904878616333
    8. ' A' → logprob: -3.66904878616333
    9. 'sequence' → logprob: -3.79404878616333
    10. ')' → logprob: -4.91904878616333

Token 80: ' cl' (ID: 567)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8007819056510925
    2. 'a' → logprob: -1.9257819652557373
    3. 'S' → logprob: -2.0507819652557373
    4. 'arr' → logprob: -2.6757819652557373
    5. 'sequence' → logprob: -2.6757819652557373
    6. 'seq' → logprob: -2.9257819652557373
    7. 's' → logprob: -3.9257819652557373
    8. ' A' → logprob: -4.050781726837158
    9. ' sequence' → logprob: -4.675781726837158
    10. ' S' → logprob: -5.425781726837158

Token 81: 'ist' (ID: 421)
  Prédit: 'ass'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ass' → logprob: -1.875430703163147
    2. 'asses' → logprob: -1.875430703163147
    3. 'ues' → logprob: -2.0004305839538574
    4. 'a' → logprob: -2.2504305839538574
    5. ' =' → logprob: -2.6254305839538574
    6. 'ist' → logprob: -3.1254305839538574
    7. 's' → logprob: -3.3754305839538574
    8. 'ar' → logprob: -3.5004305839538574
    9. 'usters' → logprob: -3.6254305839538574
    10. 'e' → logprob: -4.000430583953857

Token 82: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896678894758224
    2. '=' → logprob: -2.5789668560028076
    3. 's' → logprob: -10.828967094421387
    4. '=[]' → logprob: -11.078967094421387
    5. ',' → logprob: -11.453967094421387
    6. '[' → logprob: -11.578967094421387
    7. '_' → logprob: -12.328967094421387
    8. '[]' → logprob: -12.328967094421387
    9. 'ist' → logprob: -12.453967094421387
    10. ')' → logprob: -13.203967094421387

Token 83: ' []' (ID: 6126)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.2040330320596695
    2. 'list' → logprob: -2.204033136367798
    3. ' [' → logprob: -2.829033136367798
    4. ' []' → logprob: -4.579032897949219
    5. '[list' → logprob: -6.204032897949219
    6. '[' → logprob: -6.454032897949219
    7. '[]' → logprob: -7.079032897949219
    8. '[input' → logprob: -8.579032897949219
    9. '[int' → logprob: -9.829032897949219
    10. ' input' → logprob: -9.829032897949219

Token 84: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16125279664993286
    2. ' for' → logprob: -2.786252737045288
    3. '<|end|>' → logprob: -2.911252737045288
    4. '   ' → logprob: -3.786252737045288
    5. '
' → logprob: -5.286252975463867
    6. ' ' → logprob: -6.786252975463867
    7. '    
' → logprob: -7.161252975463867
    8. '<|end|>' → logprob: -7.286252975463867
    9. '	for' → logprob: -7.661252975463867
    10. '[' → logprob: -8.036252975463867

Token 85: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.002618943341076374
    2. ' for' → logprob: -6.002618789672852
    3. '
' → logprob: -9.252618789672852
    4. '   ' → logprob: -11.252618789672852
    5. ')' → logprob: -12.002618789672852
    6. ' ' → logprob: -12.752618789672852
    7. '    
' → logprob: -12.752618789672852
    8. '=' → logprob: -13.127618789672852
    9. '' → logprob: -13.127618789672852
    10. '.' → logprob: -13.252618789672852

Token 86: ' Will' (ID: 6835)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08688262850046158
    2. ' for' → logprob: -2.5868825912475586
    3. '   ' → logprob: -6.086882591247559
    4. 'input' → logprob: -6.711882591247559
    5. ' ' → logprob: -7.336882591247559
    6. '
' → logprob: -7.836882591247559
    7. '<|end|>' → logprob: -8.086882591247559
    8. ' 
' → logprob: -8.336882591247559
    9. 'For' → logprob: -8.336882591247559
    10. '(' → logprob: -8.586882591247559

Token 87: ' store' (ID: 4897)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.1494829654693604
    2. '=' → logprob: -2.0244829654693604
    3. 'append' → logprob: -2.0244829654693604
    4. ' be' → logprob: -2.0244829654693604
    5. ' =' → logprob: -2.5244829654693604
    6. 'continue' → logprob: -2.7744829654693604
    7. ' continue' → logprob: -3.6494829654693604
    8. '=[]' → logprob: -3.6494829654693604
    9. 'input' → logprob: -3.7744829654693604
    10. '   ' → logprob: -4.149482727050781

Token 88: ' the' (ID: 290)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.2826237678527832
    2. ' list' → logprob: -3.157623767852783
    3. '()' → logprob: -3.407623767852783
    4. '(' → logprob: -3.407623767852783
    5. '[int' → logprob: -3.657623767852783
    6. '(int' → logprob: -3.782623767852783
    7. ' the' → logprob: -3.782623767852783
    8. 'the' → logprob: -4.282623767852783
    9. '   ' → logprob: -4.407623767852783
    10. 'int' → logprob: -4.532623767852783

Token 89: ' input' (ID: 3422)
  Prédit: 'sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sequence' → logprob: -1.626103401184082
    2. 'colors' → logprob: -1.751103401184082
    3. ' sequence' → logprob: -1.876103401184082
    4. 'color' → logprob: -2.376103401184082
    5. ' color' → logprob: -2.626103401184082
    6. ' colors' → logprob: -3.376103401184082
    7. ' sequences' → logprob: -3.751103401184082
    8. 'current' → logprob: -3.876103401184082
    9. ' next' → logprob: -4.126103401184082
    10. ' list' → logprob: -4.126103401184082

Token 90: ' sequence' (ID: 16281)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09393276274204254
    2. '(' → logprob: -2.468932867050171
    3. 's' → logprob: -6.218932628631592
    4. ' sequences' → logprob: -7.843932628631592
    5. '[' → logprob: -8.46893310546875
    6. '   ' → logprob: -8.59393310546875
    7. ' values' → logprob: -8.59393310546875
    8. '_' → logprob: -8.84393310546875
    9. 'for' → logprob: -8.96893310546875
    10. 'values' → logprob: -9.09393310546875

Token 91: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3752141296863556
    2. ' for' → logprob: -1.3752140998840332
    3. '<|end|>' → logprob: -3.875214099884033
    4. '
' → logprob: -4.000214099884033
    5. '   ' → logprob: -4.250214099884033
    6. '<|end|>' → logprob: -6.000214099884033
    7. ' ' → logprob: -6.625214099884033
    8. '    
' → logprob: -7.250214099884033
    9. '	for' → logprob: -7.875214099884033
    10. ' 
' → logprob: -8.500214576721191

Token 92: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08989328145980835
    2. ' for' → logprob: -2.714893341064453
    3. '   ' → logprob: -4.089893341064453
    4. '
' → logprob: -6.464893341064453
    5. '<|end|>' → logprob: -6.839893341064453
    6. '	for' → logprob: -8.464893341064453
    7. '<|end|>' → logprob: -9.589893341064453
    8. '    
' → logprob: -10.214893341064453
    9. ' ' → logprob: -10.839893341064453
    10. ')' → logprob: -11.839893341064453

Token 93: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6998230814933777
    2. 'for' (adapté à ' for') → logprob: -0.6998230814933777
    3. '
' → logprob: -5.324822902679443
    4. '<|end|>' → logprob: -7.449822902679443
    5. ' ' → logprob: -8.199823379516602
    6. ' 
' → logprob: -8.324823379516602
    7. '	for' → logprob: -8.324823379516602
    8. '\' → logprob: -9.199823379516602
    9. '   ' → logprob: -9.574823379516602
    10. '' → logprob: -9.949823379516602

Token 94: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.039697952568531036
    2. '_' → logprob: -3.2896978855133057
    3. ' ' → logprob: -7.039698123931885
    4. ' i' → logprob: -7.164698123931885
    5. '_i' → logprob: -13.039697647094727
    6. ' ' → logprob: -14.289697647094727
    7. ' ‌' → logprob: -14.289697647094727
    8. ' ▁' → logprob: -14.414697647094727
    9. '  ' → logprob: -15.039697647094727
    10. ' range' → logprob: -15.039697647094727

Token 95: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023463839665055275
    2. 'in' → logprob: -3.773463726043701
    3. ' ' → logprob: -8.64846420288086
    4. 'n' → logprob: -11.14846420288086
    5. '_' → logprob: -11.89846420288086
    6. '  ' → logprob: -12.39846420288086
    7. ' i' → logprob: -12.64846420288086
    8. '	in' → logprob: -12.64846420288086
    9. ' _' → logprob: -13.02346420288086
    10. 's' → logprob: -14.02346420288086

Token 96: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10021648555994034
    2. 'range' → logprob: -2.3502163887023926
    3. ' ' → logprob: -12.10021686553955
    4. '	range' → logprob: -12.97521686553955
    5. ' xrange' → logprob: -14.72521686553955
    6. '(range' → logprob: -14.85021686553955
    7. '  ' → logprob: -15.35021686553955
    8. 'rang' → logprob: -15.47521686553955
    9. 'ran' → logprob: -15.60021686553955
    10. '   ' → logprob: -16.350215911865234

Token 97: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.16024646162986755
    2. '(' → logprob: -1.91024649143219
    3. ' (' → logprob: -11.660246849060059
    4. '(
' → logprob: -12.035246849060059
    5. '(n' → logprob: -12.410246849060059
    6. 'N' → logprob: -13.660246849060059
    7. ' N' → logprob: -14.035246849060059
    8. '()' → logprob: -14.535246849060059
    9. '(

' → logprob: -14.660246849060059
    10. '(len' → logprob: -15.660246849060059

Token 98: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013183351838961244
    2. '):
' → logprob: -7.001318454742432
    3. ' ):' → logprob: -8.126317977905273
    4. ')' → logprob: -9.376317977905273
    5. ':' → logprob: -10.876317977905273
    6. '+' → logprob: -12.751317977905273
    7. '   ' → logprob: -13.501317977905273
    8. '):
' → logprob: -14.251317977905273
    9. ']:' → logprob: -14.751317977905273
    10. '}:' → logprob: -14.876317977905273

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02070794627070427
    2. ' ' → logprob: -4.395708084106445
    3. '<|end|>' → logprob: -5.770708084106445
    4. ' 
' → logprob: -6.395708084106445
    5. '   ' → logprob: -6.645708084106445
    6. '    ' → logprob: -7.145708084106445
    7. '        ' → logprob: -7.770708084106445
    8. '    
' → logprob: -8.520708084106445
    9. '        
' → logprob: -9.270708084106445
    10. ' input' → logprob: -9.520708084106445

Token 100: ' c' (ID: 274)
  Prédit: ' cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.6961588859558105
    2. ' x' → logprob: -1.0711588859558105
    3. ' c' → logprob: -2.8211588859558105
    4. ' val' → logprob: -3.8211588859558105
    5. ' s' → logprob: -4.0711588859558105
    6. ' n' → logprob: -4.5711588859558105
    7. '   ' → logprob: -4.6961588859558105
    8. 'x' → logprob: -4.8211588859558105
    9. '    ' → logprob: -4.9461588859558105
    10. ' a' → logprob: -5.4461588859558105

Token 101: ' =' (ID: 314)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.1620730310678482
    2. ' =' → logprob: -2.2870731353759766
    3. 'ist' → logprob: -3.7870731353759766
    4. '   ' → logprob: -4.537073135375977
    5. '_list' → logprob: -4.787073135375977
    6. '=' → logprob: -6.162073135375977
    7. 'line' → logprob: -6.412073135375977
    8. '=int' → logprob: -7.912073135375977
    9. 'int' → logprob: -8.162073135375977
    10. 'lst' → logprob: -8.287073135375977

Token 102: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.07033796608448029
    2. 'int' → logprob: -2.695338010787964
    3. ' input' → logprob: -7.945337772369385
    4. 'input' → logprob: -10.820338249206543
    5. '   ' → logprob: -11.820338249206543
    6. ' ' → logprob: -12.195338249206543
    7. ' list' → logprob: -12.320338249206543
    8. '(int' → logprob: -12.695338249206543
    9. '[int' → logprob: -13.445338249206543
    10. '    ' → logprob: -13.570338249206543

Token 103: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.792751032160595e-05
    2. '(' → logprob: -9.37508773803711
    3. 'input' → logprob: -13.00008773803711
    4. '()' → logprob: -14.75008773803711
    5. ' (' → logprob: -15.25008773803711
    6. ' input' → logprob: -16.75008773803711
    7. '=input' → logprob: -17.00008773803711
    8. '(
' → logprob: -17.50008773803711
    9. ',input' → logprob: -18.00008773803711
    10. '(stdin' → logprob: -18.25008773803711

Token 104: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007473047822713852
    2. '()' → logprob: -5.132472991943359
    3. ')' → logprob: -6.507472991943359
    4. '())
' → logprob: -10.75747299194336
    5. ' ())' → logprob: -10.75747299194336
    6. '(' → logprob: -12.88247299194336
    7. '()))' → logprob: -12.88247299194336
    8. '();)' → logprob: -14.00747299194336
    9. '())

' → logprob: -14.25747299194336
    10. '().' → logprob: -15.13247299194336

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003048297017812729
    2. '   ' → logprob: -6.128048419952393
    3. '
' → logprob: -7.378048419952393
    4. '<|end|>' → logprob: -9.878047943115234
    5. '	cl' → logprob: -10.003047943115234
    6. ')' → logprob: -10.003047943115234
    7. '        
' → logprob: -10.503047943115234
    8. 'cl' → logprob: -11.128047943115234
    9. '    
' → logprob: -11.253047943115234
    10. '           ' → logprob: -11.753047943115234

Token 106: ' cl' (ID: 567)
  Prédit: ' cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.004681814927607775
    2. 'cl' (adapté à ' cl') → logprob: -5.504681587219238
    3. '   ' → logprob: -7.754681587219238
    4. '	cl' → logprob: -8.754681587219238
    5. ' if' → logprob: -11.254681587219238
    6. '       ' → logprob: -13.254681587219238
    7. '_cl' → logprob: -14.254681587219238
    8. '
' → logprob: -14.879681587219238
    9. 'if' → logprob: -15.254681587219238
    10. '    ' → logprob: -15.504681587219238

Token 107: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -7.941850526549388e-06
    2. 'list' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.125007629394531
    4. '```' → logprob: -14.500007629394531
    5. 'is' → logprob: -15.875007629394531
    6. ' ist' → logprob: -16.12500762939453
    7. 'ист' → logprob: -16.37500762939453
    8. 'ists' → logprob: -16.75000762939453
    9. '_list' → logprob: -16.75000762939453
    10. ' ' → logprob: -17.12500762939453

Token 108: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00012868782505393028
    2. '.' → logprob: -9.000128746032715
    3. ' .' → logprob: -12.375128746032715
    4. '.app' → logprob: -14.500128746032715
    5. '.ap' → logprob: -15.750128746032715
    6. '.extend' → logprob: -15.750128746032715
    7. 'append' → logprob: -16.5001277923584
    8. '.setdefault' → logprob: -16.5001277923584
    9. '.Append' → logprob: -17.0001277923584
    10. '​.' → logprob: -18.6251277923584

Token 109: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0019286326132714748
    2. '(' → logprob: -6.251928806304932
    3. '(
' → logprob: -17.251928329467773
    4. '(cl' → logprob: -18.376928329467773
    5. '((' → logprob: -18.501928329467773
    6. ' (' → logprob: -18.501928329467773
    7. '(C' → logprob: -18.876928329467773
    8. ')c' → logprob: -19.001928329467773
    9. '(i' → logprob: -19.376928329467773
    10. '(x' → logprob: -19.626928329467773

Token 110: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3676733690081164e-05
    2. ')
' → logprob: -10.87502384185791
    3. ' )' → logprob: -12.37502384185791
    4. '))' → logprob: -15.25002384185791
    5. '   ' → logprob: -15.62502384185791
    6. ')c' → logprob: -16.875022888183594
    7. ')return' → logprob: -17.625022888183594
    8. ')

' → logprob: -17.625022888183594
    9. '
' → logprob: -18.000022888183594
    10. ')`' → logprob: -18.000022888183594

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4285532236099243
    2. '
' → logprob: -1.3035532236099243
    3. '    
' → logprob: -2.8035531044006348
    4. 'dp' → logprob: -4.428553104400635
    5. ')' → logprob: -6.803553104400635
    6. '

' → logprob: -7.428553104400635
    7. 'DP' → logprob: -8.053553581237793
    8. '```' → logprob: -8.053553581237793
    9. '    ' → logprob: -8.178553581237793
    10. '        
' → logprob: -8.303553581237793

Token 112: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9970386028289795
    2. '   ' → logprob: -1.2470386028289795
    3. '    
' → logprob: -1.8720386028289795
    4. '
' → logprob: -2.1220386028289795
    5. ' dp' → logprob: -2.8720386028289795
    6. ' 
' → logprob: -5.997038841247559
    7. 'ways' → logprob: -6.872038841247559
    8. ' ways' → logprob: -6.997038841247559
    9. 'DP' → logprob: -7.372038841247559
    10. '  
' → logprob: -7.372038841247559

Token 113: ' cl' (ID: 567)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1634126901626587
    2. ' dp' → logprob: -2.538412570953369
    3. '#' → logprob: -3.788412570953369
    4. 'from' → logprob: -4.538412570953369
    5. '   ' → logprob: -5.038412570953369
    6. ' from' → logprob: -5.413412570953369
    7. 'prev' → logprob: -5.663412570953369
    8. 'if' → logprob: -5.663412570953369
    9. 'ways' → logprob: -5.913412570953369
    10. ' #' → logprob: -6.163412570953369

Token 114: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.000523246475495398
    2. '   ' → logprob: -8.750523567199707
    3. 'ists' → logprob: -9.125523567199707
    4. 'list' → logprob: -9.875523567199707
    5. '#' → logprob: -10.000523567199707
    6. 'if' → logprob: -10.875523567199707
    7. '```' → logprob: -10.875523567199707
    8. ' =' → logprob: -11.250523567199707
    9. 'st' → logprob: -11.625523567199707
    10. ' ' → logprob: -11.625523567199707

Token 115: ' now' (ID: 1954)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8965016603469849
    2. '
' → logprob: -1.0215016603469849
    3. '<|end|>' → logprob: -2.7715015411376953
    4. '   ' → logprob: -3.1465015411376953
    5. ')' → logprob: -3.5215015411376953
    6. 'def' → logprob: -4.021501541137695
    7. 'dp' → logprob: -4.271501541137695
    8. '#' → logprob: -4.271501541137695
    9. ' =' → logprob: -4.896501541137695
    10. ' ' → logprob: -5.146501541137695

Token 116: ' contains' (ID: 8895)
  Prédit: ' contains'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' contains' → logprob: -0.5173478126525879
    2. ' represents' → logprob: -1.142347812652588
    3. ' stores' → logprob: -3.767347812652588
    4. ' is' → logprob: -4.142347812652588
    5. ' has' → logprob: -4.517347812652588
    6. 'contains' → logprob: -4.892347812652588
    7. ' =' → logprob: -5.017347812652588
    8. ' holds' → logprob: -5.142347812652588
    9. '.sort' → logprob: -5.517347812652588
    10. ' consists' → logprob: -6.642347812652588

Token 117: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.045768532902002335
    2. 'the' → logprob: -3.5457684993743896
    3. '[' → logprob: -5.420768737792969
    4. '<|end|>' → logprob: -5.545768737792969
    5. ' a' → logprob: -5.920768737792969
    6. ' ' → logprob: -6.045768737792969
    7. ' all' → logprob: -6.920768737792969
    8. '<|end|>' → logprob: -7.420768737792969
    9. ' [' → logprob: -8.545768737792969
    10. '[N' → logprob: -9.295768737792969

Token 118: ' input' (ID: 3422)
  Prédit: ' sequence'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sequence' → logprob: -1.4653658866882324
    2. 'sequence' → logprob: -1.4653658866882324
    3. ' entire' → logprob: -1.8403658866882324
    4. ' full' → logprob: -2.0903658866882324
    5. ' input' → logprob: -2.4653658866882324
    6. 'input' → logprob: -2.7153658866882324
    7. ' complete' → logprob: -3.0903658866882324
    8. 'complete' → logprob: -4.090365886688232
    9. 'initial' → logprob: -4.715365886688232
    10. 'full' → logprob: -5.090365886688232

Token 119: ' values' (ID: 4824)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 120: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.490458220243454
    2. 'dp' → logprob: -1.4904582500457764
    3. '   ' → logprob: -2.1154582500457764
    4. '    
' → logprob: -4.115458011627197
    5. ' dp' → logprob: -4.115458011627197
    6. 'DP' → logprob: -6.740458011627197
    7. '
    
' → logprob: -6.865458011627197
    8. '

' → logprob: -6.865458011627197
    9. ' 
' → logprob: -7.365458011627197
    10. '_dp' → logprob: -7.365458011627197

Token 121: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.3356255888938904
    2. '   ' → logprob: -1.7106256484985352
    3. ' dp' → logprob: -2.960625648498535
    4. '    
' → logprob: -3.585625648498535
    5. '
' → logprob: -4.585625648498535
    6. ' 
' → logprob: -6.335625648498535
    7. ' ways' → logprob: -6.460625648498535
    8. 'ways' → logprob: -6.585625648498535
    9. 'DP' → logprob: -7.085625648498535
    10. 'prev' → logprob: -7.085625648498535

Token 122: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.020175116136670113
    2. 'from' → logprob: -5.520174980163574
    3. 'ways' → logprob: -6.020174980163574
    4. '#' (adapté à ' #') → logprob: -6.020174980163574
    5. ' dp' → logprob: -6.270174980163574
    6. '   ' → logprob: -6.395174980163574
    7. 'prev' → logprob: -6.895174980163574
    8. 'if' → logprob: -7.395174980163574
    9. 'last' → logprob: -7.645174980163574
    10. 'ans' → logprob: -8.145174980163574

Token 123: ' Remove' (ID: 18141)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.13400103151798248
    2. ' dp' → logprob: -3.1340010166168213
    3. '#' → logprob: -3.6340010166168213
    4. 'from' → logprob: -3.6340010166168213
    5. 'prev' → logprob: -5.0090012550354
    6. ' from' → logprob: -5.2590012550354
    7. 'if' → logprob: -6.3840012550354
    8. 'ways' → logprob: -6.3840012550354
    9. ' #' → logprob: -6.5090012550354
    10. 'last' → logprob: -6.6965012550354

Token 124: ' consecutive' (ID: 40840)
  Prédit: ' duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.4338752031326294
    2. '_duplicates' → logprob: -1.1838752031326294
    3. 'duplicates' → logprob: -3.55887508392334
    4. '_' → logprob: -5.55887508392334
    5. ' consecutive' → logprob: -5.55887508392334
    6. '_duplicate' → logprob: -5.68387508392334
    7. ' duplicate' → logprob: -6.80887508392334
    8. 'd' → logprob: -7.30887508392334
    9. 's' → logprob: -7.43387508392334
    10. 'duplicate' → logprob: -7.68387508392334

Token 125: ' duplicates' (ID: 91135)
  Prédit: ' duplicates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' duplicates' → logprob: -0.1871839165687561
    2. 'duplicates' → logprob: -1.8121838569641113
    3. '_duplicates' → logprob: -5.187183856964111
    4. ' duplicate' → logprob: -7.187183856964111
    5. 'duplicate' → logprob: -7.312183856964111
    6. 'equal' → logprob: -9.56218433380127
    7. '_duplicate' → logprob: -9.56218433380127
    8. 'Duplicates' → logprob: -9.93718433380127
    9. '<|end|>' → logprob: -9.93718433380127
    10. ' identical' → logprob: -10.06218433380127

Token 126: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.028559204190969467
    2. '
' → logprob: -4.27855920791626
    3. 'i' → logprob: -6.15355920791626
    4. '    
' → logprob: -6.27855920791626
    5. ' for' → logprob: -6.40355920791626
    6. ' i' → logprob: -6.40355920791626
    7. 'new' → logprob: -6.52855920791626
    8. 'for' → logprob: -7.02855920791626
    9. ' new' → logprob: -7.15355920791626
    10. 'while' → logprob: -7.15355920791626

Token 127: ' create' (ID: 2501)
  Prédit: ' create'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' create' → logprob: -1.0258287191390991
    2. ' reduce' → logprob: -1.4008287191390991
    3. ' simplify' → logprob: -2.5258288383483887
    4. ')' → logprob: -3.0258288383483887
    5. ' get' → logprob: -3.2758288383483887
    6. ' ensure' → logprob: -3.6508288383483887
    7. ' keep' → logprob: -3.9008288383483887
    8. '[]' → logprob: -3.9008288383483887
    9. ' make' → logprob: -3.9008288383483887
    10. ' form' → logprob: -4.150828838348389

Token 128: ' c' (ID: 274)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3864445686340332
    2. 'filtered' → logprob: -1.5114445686340332
    3. 'compressed' → logprob: -2.011444568634033
    4. 'new' → logprob: -2.886444568634033
    5. 'clean' → logprob: -3.136444568634033
    6. 'arr' → logprob: -3.136444568634033
    7. 'cl' → logprob: -3.636444568634033
    8. 'b' → logprob: -3.761444568634033
    9. 'seq' → logprob: -4.136444568634033
    10. 'c' → logprob: -4.136444568634033

Token 129: '2' (ID: 17)
  Prédit: 'lean'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lean' → logprob: -0.4617023468017578
    2. 'omp' → logprob: -1.9617023468017578
    3. 'list' → logprob: -2.211702346801758
    4. 'compressed' → logprob: -3.336702346801758
    5. 'clean' → logprob: -3.836702346801758
    6. 'new' → logprob: -4.336702346801758
    7. 'l' → logprob: -4.836702346801758
    8. 'c' → logprob: -5.211702346801758
    9. 'on' → logprob: -5.461702346801758
    10. '_list' → logprob: -5.836702346801758

Token 130: 'list' (ID: 2641)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03175254538655281
    2. '   ' → logprob: -3.656752586364746
    3. '=' → logprob: -5.656752586364746
    4. 'c' → logprob: -6.531752586364746
    5. '=[]
' → logprob: -8.656752586364746
    6. 's' → logprob: -9.906752586364746
    7. '[' → logprob: -10.406752586364746
    8. ',' → logprob: -10.531752586364746
    9. '
' → logprob: -10.531752586364746
    10. ' ' → logprob: -10.781752586364746

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19366756081581116
    2. 'c' → logprob: -1.9436675310134888
    3. '
' → logprob: -3.5686676502227783
    4. '    
' → logprob: -5.443667411804199
    5. ' 
' → logprob: -9.3186674118042
    6. ' c' → logprob: -9.3186674118042
    7. ' =' → logprob: -9.9436674118042
    8. 'def' → logprob: -10.5686674118042
    9. '   
' → logprob: -11.1936674118042
    10. 'n' → logprob: -11.3186674118042

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43718090653419495
    2. '
' → logprob: -1.4371808767318726
    3. 'c' → logprob: -2.187180995941162
    4. '    
' → logprob: -5.562180995941162
    5. ' 
' → logprob: -8.437180519104004
    6. ' c' → logprob: -9.437180519104004
    7. '  
' → logprob: -9.937180519104004
    8. '   
' → logprob: -10.312180519104004
    9. 'def' → logprob: -11.062180519104004
    10. '
' → logprob: -11.062180519104004

Token 133: ' c' (ID: 274)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6412519812583923
    2. 'c' (adapté à ' c') → logprob: -0.7662519812583923
    3. ' c' → logprob: -4.766252040863037
    4. '    
' → logprob: -9.516251564025879
    5. ' 
' → logprob: -11.766251564025879
    6. '
' → logprob: -12.391251564025879
    7. ' ' → logprob: -12.391251564025879
    8. '	c' → logprob: -12.641251564025879
    9. '  ' → logprob: -13.016251564025879
    10. '    ' → logprob: -13.141251564025879

Token 134: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.41866585687967e-06
    2. ' =' → logprob: -12.500008583068848
    3. 'list' → logprob: -13.125008583068848
    4. '_' → logprob: -13.375008583068848
    5. '=' → logprob: -14.250008583068848
    6. '_list' → logprob: -15.625008583068848
    7. '1' → logprob: -16.75000762939453
    8. '```' → logprob: -16.75000762939453
    9. '₂' → logprob: -17.00000762939453
    10. ' ' → logprob: -17.37500762939453

Token 135: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.4855663721391466e-05
    2. 'ist' → logprob: -11.625015258789062
    3. ' =' → logprob: -12.500015258789062
    4. '_list' → logprob: -13.500015258789062
    5. '=' → logprob: -14.625015258789062
    6. 'lst' → logprob: -15.750015258789062
    7. '=list' → logprob: -16.875015258789062
    8. 'lists' → logprob: -17.250015258789062
    9. '2' → logprob: -17.500015258789062
    10. 'List' → logprob: -17.625015258789062

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03806031122803688
    2. '=' → logprob: -3.288060426712036
    3. '=[]' → logprob: -10.913060188293457
    4. '.' → logprob: -16.038061141967773
    5. ' ' → logprob: -16.038061141967773
    6. ',' → logprob: -16.413061141967773
    7. ' =[' → logprob: -16.538061141967773
    8. '=[]
' → logprob: -16.663061141967773
    9. '   ' → logprob: -16.913061141967773
    10. '.append' → logprob: -17.038061141967773

Token 137: ' cl' (ID: 567)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.023034296929836273
    2. '[]' → logprob: -4.27303409576416
    3. '[' → logprob: -4.89803409576416
    4. '[]
' → logprob: -7.27303409576416
    5. ' [' → logprob: -7.52303409576416
    6. ' []' → logprob: -10.52303409576416
    7. '[i' → logprob: -10.64803409576416
    8. '[ch' → logprob: -11.02303409576416
    9. '[class' → logprob: -11.39803409576416
    10. '[col' → logprob: -12.02303409576416

Token 138: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.00023250321100931615
    2. '[' → logprob: -8.750232696533203
    3. '[]' → logprob: -10.375232696533203
    4. '[c' → logprob: -11.875232696533203
    5. '=[]' → logprob: -12.125232696533203
    6. '[i' → logprob: -12.375232696533203
    7. '2' → logprob: -12.500232696533203
    8. '   ' → logprob: -12.625232696533203
    9. 'st' → logprob: -12.625232696533203
    10. '[]
' → logprob: -13.250232696533203

Token 139: '[:' (ID: 7808)
  Prédit: '[:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.03823311999440193
    2. '[' → logprob: -3.4132330417633057
    3. '.copy' → logprob: -6.163233280181885
    4. '[:]' → logprob: -6.163233280181885
    5. '[:-' → logprob: -8.663232803344727
    6. '[::-' → logprob: -10.163232803344727
    7. '+[' → logprob: -10.538232803344727
    8. 'if' → logprob: -10.663232803344727
    9. '=[' → logprob: -10.788232803344727
    10. ' if' → logprob: -10.788232803344727

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026622318546287715
    2. ']' → logprob: -8.250266075134277
    3. '0' → logprob: -12.875266075134277
    4. ']
' → logprob: -13.875266075134277
    5. ' ' → logprob: -14.375266075134277
    6. '-' → logprob: -15.000266075134277
    7. ')' → logprob: -15.750266075134277
    8. ']

' → logprob: -16.625267028808594
    9. '(' → logprob: -16.750267028808594
    10. '   ' → logprob: -16.750267028808594

Token 141: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20558765530586243
    2. ']
' → logprob: -1.70558762550354
    3. ']

' → logprob: -5.830587863922119
    4. ']+' → logprob: -7.205587863922119
    5. ']
' → logprob: -8.330587387084961
    6. '+' → logprob: -9.330587387084961
    7. '
' → logprob: -9.955587387084961
    8. ' ]' → logprob: -10.330587387084961
    9. '   ' → logprob: -10.955587387084961
    10. 'if' → logprob: -11.705587387084961

Token 142: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06501840800046921
    2. '   ' → logprob: -3.06501841545105
    3. 'for' → logprob: -4.440018177032471
    4. 'if' → logprob: -6.940018177032471
    5. '+' → logprob: -7.190018177032471
    6. '
' → logprob: -7.565018177032471
    7. '+
' → logprob: -7.690018177032471
    8. ' for' → logprob: -7.940018177032471
    9. '

' → logprob: -8.315018653869629
    10. '    
' → logprob: -8.440018653869629

Token 143: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.173855721950531
    2. '
' → logprob: -2.548855781555176
    3. '+' → logprob: -2.673855781555176
    4. '   ' → logprob: -5.173855781555176
    5. '+
' → logprob: -6.173855781555176
    6. ' +' → logprob: -6.673855781555176
    7. ' for' → logprob: -6.798855781555176
    8. 'if' → logprob: -6.798855781555176
    9. '+c' → logprob: -7.673855781555176
    10. '

' → logprob: -7.798855781555176

Token 144: ' Start' (ID: 7972)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03071621060371399
    2. ' for' → logprob: -3.6557161808013916
    3. '
' → logprob: -5.905716419219971
    4. '0' → logprob: -7.530716419219971
    5. '   ' → logprob: -7.905716419219971
    6. ' 
' → logprob: -8.780715942382812
    7. ' ' → logprob: -8.780715942382812
    8. 'For' → logprob: -9.280715942382812
    9. 'if' → logprob: -9.530715942382812
    10. 'c' → logprob: -9.905715942382812

Token 145: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.9344865679740906
    2. ' with' → logprob: -1.1844866275787354
    3. 'from' → logprob: -1.5594866275787354
    4. ' from' → logprob: -3.0594866275787354
    5. '   ' → logprob: -4.184486389160156
    6. '=' → logprob: -4.684486389160156
    7. 'c' → logprob: -5.184486389160156
    8. ' if' → logprob: -5.309486389160156
    9. 'if' → logprob: -5.809486389160156
    10. ' at' → logprob: -6.309486389160156

Token 146: ' the' (ID: 290)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.10898047685623169
    2. ' cl' → logprob: -2.483980417251587
    3. '[' → logprob: -3.983980417251587
    4. 'c' → logprob: -7.358980655670166
    5. ' [' → logprob: -7.608980655670166
    6. ' c' → logprob: -10.358980178833008
    7. '[c' → logprob: -10.733980178833008
    8. '	cl' → logprob: -11.358980178833008
    9. '   ' → logprob: -11.858980178833008
    10. ' the' → logprob: -12.108980178833008

Token 147: ' first' (ID: 1577)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.4536108076572418
    2. 'first' → logprob: -1.0786107778549194
    3. ' first' → logprob: -3.828610897064209
    4. 'c' → logprob: -6.328610897064209
    5. ' cl' → logprob: -6.953610897064209
    6. '   ' → logprob: -9.57861042022705
    7. '0' → logprob: -11.57861042022705
    8. '[' → logprob: -11.95361042022705
    9. ' ' → logprob: -12.07861042022705
    10. 'initial' → logprob: -12.20361042022705

Token 148: ' element' (ID: 3577)
  Prédit: 'element'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'element' → logprob: -0.3905121684074402
    2. ' element' → logprob: -1.140512228012085
    3. ' item' → logprob: -6.765511989593506
    4. 'item' → logprob: -7.015511989593506
    5. 'token' → logprob: -8.515512466430664
    6. ']' → logprob: -8.640512466430664
    7. 'c' → logprob: -8.640512466430664
    8. '_element' → logprob: -8.765512466430664
    9. '[' → logprob: -8.890512466430664
    10. 'value' → logprob: -9.015512466430664

Token 149: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1702471673488617
    2. 'for' → logprob: -2.4202470779418945
    3. '   ' → logprob: -2.7952470779418945
    4. ' for' → logprob: -5.5452470779418945
    5. 'if' → logprob: -6.6702470779418945
    6. '    
' → logprob: -8.045247077941895
    7. '

' → logprob: -8.045247077941895
    8. ' 
' → logprob: -8.545247077941895
    9. '
' → logprob: -9.045247077941895
    10. '  
' → logprob: -9.170247077941895

Token 150: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.38775163888931274
    2. '
' → logprob: -1.637751579284668
    3. '   ' → logprob: -2.387751579284668
    4. ' for' → logprob: -3.387751579284668
    5. 'if' → logprob: -6.887751579284668
    6. '    
' → logprob: -9.637751579284668
    7. ' 
' → logprob: -9.762751579284668
    8. '	for' → logprob: -9.887751579284668
    9. ' if' → logprob: -10.387751579284668
    10. '  
' → logprob: -10.637751579284668

Token 151: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08593903481960297
    2. '   ' → logprob: -2.5859389305114746
    3. ' for' → logprob: -4.960938930511475
    4. '
' → logprob: -11.085939407348633
    5. '    
' → logprob: -13.085939407348633
    6. '	for' → logprob: -15.085939407348633
    7. ' 
' → logprob: -15.335939407348633
    8. ' ' → logprob: -17.210939407348633
    9. '  
' → logprob: -17.835939407348633
    10. '```' → logprob: -17.835939407348633

Token 152: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.12625367939472198
    2. ' i' → logprob: -2.251253604888916
    3. 'x' → logprob: -5.001253604888916
    4. 'c' → logprob: -5.376253604888916
    5. ' c' → logprob: -6.876253604888916
    6. ' x' → logprob: -7.251253604888916
    7. 'val' → logprob: -9.751254081726074
    8. ' val' → logprob: -10.001254081726074
    9. 'idx' → logprob: -10.376254081726074
    10. ' idx' → logprob: -10.626254081726074

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007645083125680685
    2. 'in' → logprob: -4.882645130157471
    3. ' ' → logprob: -10.257644653320312
    4. '	in' → logprob: -13.507644653320312
    5. '   ' → logprob: -14.257644653320312
    6. '  ' → logprob: -14.382644653320312
    7. '    ' → logprob: -14.632644653320312
    8. ' i' → logprob: -15.382644653320312
    9. '1' → logprob: -15.632644653320312
    10. 'In' → logprob: -16.007644653320312

Token 154: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.12693272531032562
    2. 'range' → logprob: -2.1269326210021973
    3. ' ' → logprob: -12.501933097839355
    4. '   ' → logprob: -14.501933097839355
    5. '  ' → logprob: -14.876933097839355
    6. '	range' → logprob: -16.25193214416504
    7. '    ' → logprob: -16.75193214416504
    8. '     ' → logprob: -18.25193214416504
    9. '(range' → logprob: -18.87693214416504
    10. ' xrange' → logprob: -18.87693214416504

Token 155: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008636672981083393
    2. '1' → logprob: -4.758636474609375
    3. '   ' → logprob: -11.133636474609375
    4. ' ' → logprob: -12.008636474609375
    5. ' (' → logprob: -13.508636474609375
    6. '    ' → logprob: -16.383636474609375
    7. '(len' → logprob: -17.758636474609375
    8. '(
' → logprob: -18.133636474609375
    9. '  ' → logprob: -18.258636474609375
    10. 'len' → logprob: -18.633636474609375

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00013691288768313825
    2. ' ' → logprob: -9.125137329101562
    3. '   ' → logprob: -10.500137329101562
    4. '  ' → logprob: -15.500137329101562
    5. '    ' → logprob: -16.125137329101562
    6. 'len' → logprob: -16.625137329101562
    7. '(' → logprob: -17.500137329101562
    8. '     ' → logprob: -19.125137329101562
    9. '１' → logprob: -19.125137329101562
    10. '       ' → logprob: -19.125137329101562

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031714143697172403
    2. ',N' → logprob: -6.128171443939209
    3. ' ,' → logprob: -7.878171443939209
    4. '   ' → logprob: -8.25317096710205
    5. ',len' → logprob: -8.87817096710205
    6. 'N' → logprob: -8.87817096710205
    7. ' N' → logprob: -9.75317096710205
    8. 'len' → logprob: -13.00317096710205
    9. ' ' → logprob: -13.25317096710205
    10. ',n' → logprob: -13.62817096710205

Token 158: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0014517827657982707
    2. ' N' → logprob: -6.7514519691467285
    3. 'len' → logprob: -8.50145149230957
    4. '   ' → logprob: -9.50145149230957
    5. ' len' → logprob: -12.62645149230957
    6. ' ' → logprob: -15.62645149230957
    7. '	N' → logprob: -16.50145149230957
    8. '    ' → logprob: -16.87645149230957
    9. '  ' → logprob: -17.12645149230957
    10. 'n' → logprob: -17.37645149230957

Token 159: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1002306118607521
    2. '):' → logprob: -2.3502306938171387
    3. '):
' → logprob: -11.47523021697998
    4. ':' → logprob: -12.35023021697998
    5. '   ' → logprob: -12.35023021697998
    6. ':
' → logprob: -13.47523021697998
    7. ' ):
' → logprob: -13.60023021697998
    8. '():
' → logprob: -13.85023021697998
    9. '):

' → logprob: -14.10023021697998
    10. ')' → logprob: -15.97523021697998

Token 160: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0018579611787572503
    2. ' if' → logprob: -6.751857757568359
    3. '   ' → logprob: -8.00185775756836
    4. '<|end|>' → logprob: -8.87685775756836
    5. '    ' → logprob: -9.62685775756836
    6. ',' → logprob: -9.75185775756836
    7. ':' → logprob: -10.87685775756836
    8. ' ' → logprob: -11.37685775756836
    9. '	   ' → logprob: -11.37685775756836
    10. '<|end|>' → logprob: -11.87685775756836

Token 161: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11441149562597275
    2. '       ' → logprob: -2.2394115924835205
    3. 'if' (adapté à ' if') → logprob: -6.614411354064941
    4. '   ' → logprob: -8.489411354064941
    5. '    ' → logprob: -10.489411354064941
    6. '	if' → logprob: -12.489411354064941
    7. ' ' → logprob: -12.989411354064941
    8. ',' → logprob: -13.614411354064941
    9. '[' → logprob: -14.239411354064941
    10. '<|end|>' → logprob: -14.239411354064941

Token 162: ' cl' (ID: 567)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0024976562708616257
    2. ' cl' → logprob: -6.002497673034668
    3. 'c' → logprob: -10.752497673034668
    4. '   ' → logprob: -15.002497673034668
    5. '	cl' → logprob: -15.002497673034668
    6. ' c' → logprob: -17.62749671936035
    7. '    ' → logprob: -19.25249671936035
    8. '(cl' → logprob: -19.50249671936035
    9. ' ' → logprob: -19.75249671936035
    10. 'not' → logprob: -20.62749671936035

Token 163: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.5048530030981055e-06
    2. 'list' → logprob: -14.875001907348633
    3. '   ' → logprob: -15.000001907348633
    4. '```' → logprob: -15.125001907348633
    5. '2' → logprob: -15.875001907348633
    6. '[' → logprob: -16.750001907348633
    7. 'ист' → logprob: -16.875001907348633
    8. '...' → logprob: -17.125001907348633
    9. '       ' → logprob: -17.125001907348633
    10. 'is' → logprob: -17.250001907348633

Token 164: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.0280383548888494e-06
    2. '[' → logprob: -13.875000953674316
    3. '[N' → logprob: -17.250001907348633
    4. ' [' → logprob: -18.000001907348633
    5. 'i' → logprob: -18.375001907348633
    6. '[I' → logprob: -18.500001907348633
    7. '```' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.750001907348633
    9. '
' → logprob: -19.625001907348633
    10. '\[' → logprob: -20.375001907348633

Token 165: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1606474369764328
    2. ']!=' → logprob: -1.9106473922729492
    3. '!=' → logprob: -7.910647392272949
    4. ')!=' → logprob: -10.28564739227295
    5. ' ]' → logprob: -11.28564739227295
    6. ' !=' → logprob: -12.03564739227295
    7. ']!='' → logprob: -13.66064739227295
    8. ')' → logprob: -13.78564739227295
    9. '```' → logprob: -14.78564739227295
    10. '()!=' → logprob: -15.28564739227295

Token 166: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.03870917111635208
    2. ' !=' → logprob: -3.2887091636657715
    3. ']!=' → logprob: -7.9137091636657715
    4. ')!=' → logprob: -8.16370964050293
    5. '()!=' → logprob: -11.66370964050293
    6. '!==' → logprob: -12.16370964050293
    7. ']' → logprob: -14.03870964050293
    8. ')' → logprob: -14.16370964050293
    9. '```' → logprob: -14.53870964050293
    10. ' ' → logprob: -15.28870964050293

Token 167: ' c' (ID: 274)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.0021415743976831436
    2. 'c' → logprob: -6.50214147567749
    3. ' cl' → logprob: -7.37714147567749
    4. '   ' → logprob: -12.002141952514648
    5. ' c' → logprob: -12.627141952514648
    6. '	cl' → logprob: -12.752141952514648
    7. ' ' → logprob: -14.752141952514648
    8. '  ' → logprob: -15.627141952514648
    9. '	c' → logprob: -15.877141952514648
    10. 'cline' → logprob: -16.25214195251465

Token 168: '2' (ID: 17)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.002987567102536559
    2. '2' → logprob: -5.877987384796143
    3. 'ist' → logprob: -8.6279878616333
    4. '_list' → logprob: -13.5029878616333
    5. 'c' → logprob: -14.6279878616333
    6. 'olist' → logprob: -15.2529878616333
    7. 'ilist' → logprob: -15.3779878616333
    8. 'cl' → logprob: -15.3779878616333
    9. 'lst' → logprob: -15.5029878616333
    10. '```' → logprob: -15.6279878616333

Token 169: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -1.1472419600977446e-06
    2. '2' → logprob: -14.000000953674316
    3. '_list' → logprob: -15.750000953674316
    4. ' list' → logprob: -17.500001907348633
    5. '   ' → logprob: -17.500001907348633
    6. 'c' → logprob: -17.750001907348633
    7. ' ' → logprob: -18.125001907348633
    8. '1' → logprob: -18.500001907348633
    9. '```' → logprob: -18.750001907348633
    10. 'List' → logprob: -18.875001907348633

Token 170: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.125
    3. '[' → logprob: -17.875
    4. '   ' → logprob: -18.0
    5. ' [-' → logprob: -19.125
    6. '
' → logprob: -19.125
    7. '```' → logprob: -19.625
    8. '][-' → logprob: -20.25
    9. '[
' → logprob: -20.75
    10. '[len' → logprob: -20.75

Token 171: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -15.875001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '```' → logprob: -17.187501907348633
    6. ']' → logprob: -17.437501907348633
    7. '  ' → logprob: -18.437501907348633
    8. 'len' → logprob: -18.750001907348633
    9. '
' → logprob: -18.812501907348633
    10. 'i' → logprob: -18.875001907348633

Token 172: ']:' (ID: 12433)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6026635766029358
    2. ']:' → logprob: -0.8526635766029358
    3. ':' → logprob: -4.602663516998291
    4. '):
' → logprob: -4.727663516998291
    5. ']:
' → logprob: -5.852663516998291
    6. ']):' → logprob: -5.852663516998291
    7. ']' → logprob: -7.352663516998291
    8. '       ' → logprob: -8.10266399383545
    9. '   ' → logprob: -8.35266399383545
    10. ')' → logprob: -8.60266399383545

Token 173: ' ' (ID: 220)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.35294052958488464
    2. '           ' → logprob: -1.227940559387207
    3. '       ' → logprob: -5.602940559387207
    4. 'c' → logprob: -7.977940559387207
    5. '   ' → logprob: -9.477940559387207
    6. '
' → logprob: -9.477940559387207
    7. '	       ' → logprob: -9.477940559387207
    8. ' ' → logprob: -9.852940559387207
    9. '            
' → logprob: -10.602940559387207
    10. '               ' → logprob: -10.727940559387207

Token 174: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11560200899839401
    2. ' c' → logprob: -2.9906020164489746
    3. 'c' → logprob: -3.2406020164489746
    4. '       ' → logprob: -3.9906020164489746
    5. '   ' → logprob: -7.490602016448975
    6. 'cl' → logprob: -7.490602016448975
    7. '
' → logprob: -9.990601539611816
    8. '	       ' → logprob: -10.115601539611816
    9. '               ' → logprob: -10.740601539611816
    10. '          ' → logprob: -11.115601539611816

Token 175: ' Only' (ID: 12817)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.4740246534347534
    2. '           ' → logprob: -1.7240246534347534
    3. 'c' → logprob: -1.8490246534347534
    4. '       ' → logprob: -3.599024772644043
    5. '   ' → logprob: -4.349024772644043
    6. 'cl' → logprob: -7.849024772644043
    7. '
' → logprob: -8.474024772644043
    8. '	c' → logprob: -8.474024772644043
    9. ' ' → logprob: -8.974024772644043
    10. '               ' → logprob: -9.599024772644043

Token 176: ' append' (ID: 17147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.4901469051837921
    2. ' append' → logprob: -0.9901468753814697
    3. 'c' → logprob: -4.490147113800049
    4. ' c' → logprob: -6.365147113800049
    5. '   ' → logprob: -6.490147113800049
    6. 'if' → logprob: -7.740147113800049
    7. '       ' → logprob: -7.865147113800049
    8. 'cl' → logprob: -8.86514663696289
    9. '           ' → logprob: -8.99014663696289
    10. ' add' → logprob: -9.24014663696289

Token 177: ' if' (ID: 538)
  Prédit: ' cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.034444745630025864
    2. 'cl' → logprob: -3.409444808959961
    3. '(cl' → logprob: -7.659444808959961
    4. ' c' → logprob: -9.159444808959961
    5. ' if' → logprob: -9.534444808959961
    6. '	cl' → logprob: -10.034444808959961
    7. 'c' → logprob: -10.409444808959961
    8. ')' → logprob: -11.284444808959961
    9. 'if' → logprob: -11.409444808959961
    10. '   ' → logprob: -11.409444808959961

Token 178: ' not' (ID: 625)
  Prédit: ' cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.31328949332237244
    2. 'cl' → logprob: -1.3132895231246948
    3. 'c' → logprob: -11.938289642333984
    4. ' the' → logprob: -11.938289642333984
    5. '	cl' → logprob: -12.313289642333984
    6. 'different' → logprob: -12.313289642333984
    7. ' different' → logprob: -12.938289642333984
    8. 'the' → logprob: -13.563289642333984
    9. '(cl' → logprob: -14.938289642333984
    10. ' not' → logprob: -15.313289642333984

Token 179: ' the' (ID: 290)
  Prédit: ' equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' equal' → logprob: -0.5636655688285828
    2. 'equal' → logprob: -1.0636656284332275
    3. ' the' → logprob: -2.9386656284332275
    4. 'the' → logprob: -4.438665390014648
    5. 'cl' → logprob: -4.813665390014648
    6. ' a' → logprob: -5.813665390014648
    7. 'con' → logprob: -5.938665390014648
    8. 'c' → logprob: -6.188665390014648
    9. 'same' → logprob: -6.438665390014648
    10. ' same' → logprob: -6.813665390014648

Token 180: ' same' (ID: 2684)
  Prédit: 'same'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'same' → logprob: -0.026488047093153
    2. ' same' → logprob: -3.6514880657196045
    3. 'previous' → logprob: -9.026488304138184
    4. 'last' → logprob: -10.526488304138184
    5. 'duplicate' → logprob: -11.151488304138184
    6. ' ' → logprob: -11.776488304138184
    7. ' previous' → logprob: -12.401488304138184
    8. '   ' → logprob: -12.651488304138184
    9. 'con' → logprob: -13.026488304138184
    10. ' last' → logprob: -13.276488304138184

Token 181: ' as' (ID: 472)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09633917361497879
    2. '   ' → logprob: -3.096339225769043
    3. 'cl' → logprob: -4.221339225769043
    4. 'c' → logprob: -4.596339225769043
    5. ' ' → logprob: -4.971339225769043
    6. '       ' → logprob: -5.096339225769043
    7. ':
' → logprob: -5.346339225769043
    8. '  ' → logprob: -7.346339225769043
    9. '):' → logprob: -7.346339225769043
    10. ' c' → logprob: -7.596339225769043

Token 182: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4262619614601135
    2. 'cl' → logprob: -1.8012619018554688
    3. ' c' → logprob: -2.1762619018554688
    4. ' the' → logprob: -3.5512619018554688
    5. 'the' → logprob: -3.9262619018554688
    6. 'previous' → logprob: -4.551261901855469
    7. ' cl' → logprob: -5.426261901855469
    8. ' previous' → logprob: -5.551261901855469
    9. 'last' → logprob: -7.051261901855469
    10. ' last' → logprob: -8.426261901855469

Token 183: ' last' (ID: 2174)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.3284592032432556
    2. ' previous' → logprob: -1.7034592628479004
    3. 'last' → logprob: -2.5784592628479004
    4. ' last' → logprob: -3.8284592628479004
    5. 'preced' → logprob: -9.203458786010742
    6. 'c' → logprob: -9.703458786010742
    7. 'cl' → logprob: -10.078458786010742
    8. 'im' → logprob: -10.578458786010742
    9. ' c' → logprob: -11.328458786010742
    10. ' immediately' → logprob: -11.453458786010742

Token 184: ' in' (ID: 306)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5146521329879761
    2. ' element' → logprob: -1.389652132987976
    3. 'cl' → logprob: -2.6396522521972656
    4. 'element' → logprob: -2.8896522521972656
    5. ' c' → logprob: -4.139652252197266
    6. ')' → logprob: -5.514652252197266
    7. 'token' → logprob: -6.264652252197266
    8. ' ' → logprob: -7.514652252197266
    9. 'value' → logprob: -7.514652252197266
    10. ' token' → logprob: -7.764652252197266

Token 185: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006719759665429592
    2. ' c' → logprob: -5.006719589233398
    3. 'cl' → logprob: -13.256719589233398
    4. '   ' → logprob: -13.381719589233398
    5. ' ' → logprob: -14.881719589233398
    6. '	c' → logprob: -14.881719589233398
    7. ')c' → logprob: -15.756719589233398
    8. '  ' → logprob: -16.5067195892334
    9. '
' → logprob: -16.8817195892334
    10. '    ' → logprob: -17.6317195892334

Token 186: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5213274309644476e-05
    2. 'list' → logprob: -11.125015258789062
    3. 'c' → logprob: -15.125015258789062
    4. '```' → logprob: -16.125015258789062
    5. ' ' → logprob: -17.625015258789062
    6. '   ' → logprob: -17.875015258789062
    7. '２' → logprob: -18.500015258789062
    8. '  ' → logprob: -19.000015258789062
    9. '

' → logprob: -19.125015258789062
    10. '_list' → logprob: -19.125015258789062

Token 187: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -7.896309739408025e-07
    2. '2' → logprob: -14.875000953674316
    3. 'ist' → logprob: -15.125000953674316
    4. '_list' → logprob: -17.875
    5. '   ' → logprob: -18.125
    6. 'List' → logprob: -18.25
    7. ' list' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. ' ' → logprob: -19.375
    10. '1' → logprob: -19.625

Token 188: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14056158065795898
    2. '       ' → logprob: -2.890561580657959
    3. ':
' → logprob: -3.015561580657959
    4. '):' → logprob: -4.515561580657959
    5. '           ' → logprob: -4.640561580657959
    6. '   ' → logprob: -5.890561580657959
    7. '):
' → logprob: -6.390561580657959
    8. ')' → logprob: -7.140561580657959
    9. ',' → logprob: -8.765562057495117
    10. '.' → logprob: -9.015562057495117

Token 189: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13198767602443695
    2. '           ' → logprob: -2.2569875717163086
    3. ' c' → logprob: -4.131987571716309
    4. '   ' → logprob: -6.381987571716309
    5. 'c' → logprob: -7.631987571716309
    6. '	   ' → logprob: -8.881987571716309
    7. '	       ' → logprob: -9.256987571716309
    8. 'cl' → logprob: -9.631987571716309
    9. ' ' → logprob: -9.631987571716309
    10. '	c' → logprob: -10.131987571716309

Token 190: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.355842649936676
    2. ' c' → logprob: -1.2308425903320312
    3. '               ' → logprob: -5.355842590332031
    4. '   ' → logprob: -6.605842590332031
    5. 'cl' → logprob: -7.355842590332031
    6. '           ' → logprob: -7.980842590332031
    7. '       ' → logprob: -8.355842590332031
    8. '	c' → logprob: -10.105842590332031
    9. ' ' → logprob: -10.855842590332031
    10. '  ' → logprob: -12.480842590332031

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.935296834039036e-06
    2. 'list' → logprob: -12.87500286102295
    3. 'olist' → logprob: -16.625003814697266
    4. '```' → logprob: -17.250003814697266
    5. ' ' → logprob: -17.750003814697266
    6. '₂' → logprob: -18.000003814697266
    7. '２' → logprob: -18.125003814697266
    8. 'c' → logprob: -18.562503814697266
    9. '   ' → logprob: -18.625003814697266
    10. 'tolist' → logprob: -18.812503814697266

Token 192: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -16.5
    3. 'ist' → logprob: -16.5
    4. 'olist' → logprob: -19.0
    5. '_list' → logprob: -19.25
    6. 'alist' → logprob: -19.5
    7. 'ilist' → logprob: -19.625
    8. 'lists' → logprob: -19.875
    9. ' list' → logprob: -19.875
    10. 'lis' → logprob: -20.125

Token 193: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.5776860184123507e-06
    2. '.' → logprob: -13.12500286102295
    3. '.app' → logprob: -15.00000286102295
    4. '.extend' → logprob: -16.500001907348633
    5. 'append' → logprob: -17.125001907348633
    6. ').' → logprob: -17.875001907348633
    7. ' .' → logprob: -18.000001907348633
    8. '.ap' → logprob: -18.250001907348633
    9. '.Append' → logprob: -18.750001907348633
    10. '.setdefault' → logprob: -18.875001907348633

Token 194: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -8.895480277715251e-06
    2. 'cl' → logprob: -12.000008583068848
    3. '(' → logprob: -13.375008583068848
    4. '(c' → logprob: -13.750008583068848
    5. ' cl' → logprob: -18.500009536743164
    6. '	cl' → logprob: -19.250009536743164
    7. ' (' → logprob: -20.125009536743164
    8. '(
' → logprob: -20.875009536743164
    9. '(ch' → logprob: -21.375009536743164
    10. 'c' → logprob: -22.625009536743164

Token 195: 'ist' (ID: 421)
  Prédit: 'ist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -1.1160349458805285e-05
    2. '2' → logprob: -12.875011444091797
    3. 'st' → logprob: -13.125011444091797
    4. 'ист' → logprob: -13.250011444091797
    5. '   ' → logprob: -14.000011444091797
    6. '[' → logprob: -14.250011444091797
    7. '```' → logprob: -14.375011444091797
    8. 'list' → logprob: -14.500011444091797
    9. 'i' → logprob: -15.125011444091797
    10. '       ' → logprob: -15.500011444091797

Token 196: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.704273118884885e-07
    2. ')' → logprob: -15.500000953674316
    3. ')[' → logprob: -15.500000953674316
    4. '[' → logprob: -16.125
    5. 'i' → logprob: -16.875
    6. '   ' → logprob: -17.625
    7. ')i' → logprob: -18.0
    8. '```' → logprob: -18.125
    9. ' [' → logprob: -18.5
    10. '[
' → logprob: -18.875

Token 197: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028594397008419037
    2. '])' → logprob: -5.877859592437744
    3. ' )' → logprob: -10.377859115600586
    4. ')
' → logprob: -11.877859115600586
    5. '))' → logprob: -12.127859115600586
    6. ')]' → logprob: -12.502859115600586
    7. ')])' → logprob: -13.252859115600586
    8. ']' → logprob: -13.377859115600586
    9. '       ' → logprob: -14.002859115600586
    10. '})' → logprob: -14.002859115600586

Token 198: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7714603543281555
    2. '   ' → logprob: -1.0214602947235107
    3. 'dp' → logprob: -2.0214602947235107
    4. '    
' → logprob: -3.8964602947235107
    5. '

' → logprob: -4.52146053314209
    6. ' dp' → logprob: -6.02146053314209
    7. '\n' → logprob: -6.27146053314209
    8. '  
' → logprob: -6.39646053314209
    9. 'DP' → logprob: -7.02146053314209
    10. '   
' → logprob: -7.14646053314209

Token 199: ' N' (ID: 478)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8027755618095398
    2. '
' → logprob: -1.0527756214141846
    3. '   ' → logprob: -1.9277756214141846
    4. ' dp' → logprob: -3.3027756214141846
    5. '    
' → logprob: -4.5527753829956055
    6. 'n' → logprob: -6.3027753829956055
    7. 'DP' → logprob: -6.8027753829956055
    8. '

' → logprob: -7.1777753829956055
    9. '\n' → logprob: -7.3027753829956055
    10. ' 
' → logprob: -7.5527753829956055

Token 200: '2' (ID: 17)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09129036217927933
    2. '2' → logprob: -2.9662904739379883
    3. '=' → logprob: -3.3412904739379883
    4. '_' → logprob: -9.091290473937988
    5. ' ' → logprob: -9.341290473937988
    6. 'c' → logprob: -9.466290473937988
    7. '=len' → logprob: -9.966290473937988
    8. '   ' → logprob: -11.341290473937988
    9. '_c' → logprob: -11.841290473937988
    10. '=c' → logprob: -12.591290473937988

Token 201: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.062012720853090286
    2. '=' → logprob: -2.8120126724243164
    3. '=len' → logprob: -10.062012672424316
    4. ' ' → logprob: -14.687012672424316
    5. 'len' → logprob: -14.812012672424316
    6. '   ' → logprob: -15.187012672424316
    7. ')' → logprob: -15.187012672424316
    8. ' -=' → logprob: -15.687012672424316
    9. '```' → logprob: -15.812012672424316
    10. '    ' → logprob: -16.187013626098633

Token 202: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.011048054322600365
    2. ' len' → logprob: -4.511047840118408
    3. '   ' → logprob: -16.01104736328125
    4. '(len' → logprob: -16.01104736328125
    5. '	len' → logprob: -19.13604736328125
    6. '[len' → logprob: -19.88604736328125
    7. '    ' → logprob: -20.76104736328125
    8. '=len' → logprob: -21.01104736328125
    9. 'length' → logprob: -22.38604736328125
    10. ' ' → logprob: -22.38604736328125

Token 203: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0013321444857865572
    2. '(' → logprob: -6.6263322830200195
    3. '(cl' → logprob: -12.62633228302002
    4. 'c' → logprob: -13.37633228302002
    5. '(
' → logprob: -14.25133228302002
    6. ' (' → logprob: -14.62633228302002
    7. ')c' → logprob: -17.001331329345703
    8. '(N' → logprob: -17.251331329345703
    9. ' c' → logprob: -17.626331329345703
    10. '(code' → logprob: -17.876331329345703

Token 204: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.273621405242011e-05
    2. '(c' → logprob: -10.875032424926758
    3. 'c' → logprob: -11.250032424926758
    4. ')c' → logprob: -14.875032424926758
    5. ')' → logprob: -15.375032424926758
    6. 'list' → logprob: -16.125032424926758
    7. '(' → logprob: -17.375032424926758
    8. ' c' → logprob: -17.500032424926758
    9. ' ' → logprob: -18.625032424926758
    10. '[c' → logprob: -18.750032424926758

Token 205: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -4.723352049040841e-06
    2. 'c' → logprob: -12.625004768371582
    3. ')' → logprob: -14.500004768371582
    4. 'ist' → logprob: -15.250004768371582
    5. '_list' → logprob: -15.750004768371582
    6. ' list' → logprob: -16.375003814697266
    7. 'l' → logprob: -16.875003814697266
    8. 'cl' → logprob: -16.875003814697266
    9. 'lst' → logprob: -16.875003814697266
    10. '```' → logprob: -17.125003814697266

Token 206: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.7252845029579476e-05
    2. ')
' → logprob: -11.500027656555176
    3. ' )' → logprob: -11.625027656555176
    4. '   ' → logprob: -11.875027656555176
    5. '#' → logprob: -15.750027656555176
    6. '<|end|>' → logprob: -15.750027656555176
    7. ')#' → logprob: -16.00002670288086
    8. '))' → logprob: -16.12502670288086
    9. '),' → logprob: -16.87502670288086
    10. '```' → logprob: -17.00002670288086

Token 207: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.811810314655304
    2. 'dp' → logprob: -1.3118102550506592
    3. '
' → logprob: -1.4368102550506592
    4. '    
' → logprob: -3.561810255050659
    5. ' dp' → logprob: -4.436810493469238
    6. 'DP' → logprob: -6.686810493469238
    7. '_dp' → logprob: -6.686810493469238
    8. '  
' → logprob: -7.186810493469238
    9. ' 
' → logprob: -7.186810493469238
    10. '```' → logprob: -7.311810493469238

Token 208: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7099062204360962
    2. 'dp' → logprob: -0.7099062204360962
    3. '   ' → logprob: -5.084906101226807
    4. '

' → logprob: -5.709906101226807
    5. '    
' → logprob: -6.084906101226807
    6. 'DP' → logprob: -6.709906101226807
    7. '#' → logprob: -6.709906101226807
    8. ' dp' → logprob: -7.209906101226807
    9. '
' → logprob: -8.459906578063965
    10. '_dp' → logprob: -8.584906578063965

Token 209: ' New' (ID: 2036)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.967832624912262
    2. ' dp' → logprob: -1.5928325653076172
    3. ' #' → logprob: -1.7178325653076172
    4. 'dp' → logprob: -1.8428325653076172
    5. ' from' → logprob: -4.342832565307617
    6. 'Initialize' → logprob: -5.217832565307617
    7. 'Calculate' → logprob: -5.217832565307617
    8. '   ' → logprob: -5.342832565307617
    9. '
' → logprob: -5.592832565307617
    10. 'Define' → logprob: -5.717832565307617

Token 210: ' length' (ID: 5517)
  Prédit: ' variable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' variable' → logprob: -0.8905361294746399
    2. ' line' → logprob: -2.140536069869995
    3. ' N' → logprob: -2.640536069869995
    4. ' token' → logprob: -3.015536069869995
    5. ' space' → logprob: -3.265536069869995
    6. 'N' → logprob: -3.265536069869995
    7. ' ' → logprob: -3.265536069869995
    8. ')' → logprob: -3.390536069869995
    9. ' =' → logprob: -3.390536069869995
    10. ' length' → logprob: -3.515536069869995

Token 211: ' after' (ID: 1934)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5609520673751831
    2. '
' → logprob: -0.9359520673751831
    3. '<|end|>' → logprob: -4.560952186584473
    4. '    
' → logprob: -5.060952186584473
    5. '

' → logprob: -5.185952186584473
    6. 'dp' → logprob: -5.310952186584473
    7. ')' → logprob: -6.060952186584473
    8. ',' → logprob: -6.685952186584473
    9. '\n' → logprob: -7.435952186584473
    10. ' 
' → logprob: -7.560952186584473

Token 212: ' removing' (ID: 28559)
  Prédit: 'rem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rem' → logprob: -0.3349429666996002
    2. 'compression' → logprob: -2.2099430561065674
    3. ' removing' → logprob: -2.8349430561065674
    4. ' compression' → logprob: -3.4599430561065674
    5. ' ded' → logprob: -3.5849430561065674
    6. 'compress' → logprob: -3.9599430561065674
    7. 'redu' → logprob: -4.584942817687988
    8. 'con' → logprob: -5.084942817687988
    9. ' compress' → logprob: -5.584942817687988
    10. ' preprocessing' → logprob: -5.834942817687988

Token 213: ' consecutive' (ID: 40840)
  Prédit: 'con'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'con' → logprob: -0.0654546320438385
    2. ' consecutive' → logprob: -3.0654547214508057
    3. ' duplicates' → logprob: -4.565454483032227
    4. 'duplicates' → logprob: -5.065454483032227
    5. '_duplicates' → logprob: -12.190454483032227
    6. '_con' → logprob: -14.065454483032227
    7. ' duplicate' → logprob: -14.065454483032227
    8. 'duplicate' → logprob: -14.190454483032227
    9. 'c' → logprob: -14.190454483032227
    10. ' ' → logprob: -14.940454483032227

Token 214: ' duplicates' (ID: 91135)
  Prédit: 'duplicates'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'duplicates' → logprob: -0.25198328495025635
    2. ' duplicates' → logprob: -1.5019832849502563
    3. '_duplicates' → logprob: -9.876983642578125
    4. 'Duplicates' → logprob: -13.376983642578125
    5. 'd' → logprob: -14.376983642578125
    6. 'duplicate' → logprob: -15.001983642578125
    7. 'duplic' → logprob: -16.251983642578125
    8. 'dup' → logprob: -16.501983642578125
    9. ' duplicate' → logprob: -16.501983642578125
    10. ' ' → logprob: -16.751983642578125

Token 215: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4180043041706085
    2. '
' → logprob: -1.4180042743682861
    3. '   ' → logprob: -2.543004274368286
    4. ' dp' → logprob: -4.418004512786865
    5. '    
' → logprob: -5.918004512786865
    6. 'DP' → logprob: -6.418004512786865
    7. '

' → logprob: -6.668004512786865
    8. '_dp' → logprob: -7.543004512786865
    9. ')' → logprob: -8.168004035949707
    10. 'def' → logprob: -8.293004035949707

Token 216: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.48945364356040955
    2. '   ' → logprob: -1.364453673362732
    3. '
' → logprob: -2.6144535541534424
    4. ' dp' → logprob: -3.2394535541534424
    5. '    
' → logprob: -4.3644537925720215
    6. 'DP' → logprob: -6.3644537925720215
    7. '_dp' → logprob: -6.8644537925720215
    8. ' DP' → logprob: -7.8644537925720215
    9. '  
' → logprob: -7.9894537925720215
    10. '	dp' → logprob: -7.9894537925720215

Token 217: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014315227046608925
    2. 'from' → logprob: -5.139315128326416
    3. ' dp' → logprob: -6.139315128326416
    4. '#' (adapté à ' #') → logprob: -6.639315128326416
    5. 'prev' → logprob: -6.889315128326416
    6. 'pos' → logprob: -6.889315128326416
    7. 'last' → logprob: -7.264315128326416
    8. '   ' → logprob: -7.639315128326416
    9. 'ways' → logprob: -7.639315128326416
    10. '
' → logprob: -8.514315605163574

Token 218: ' cd' (ID: 24852)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.16363579034805298
    2. 'from' → logprob: -2.288635730743408
    3. ' dp' → logprob: -4.413635730743408
    4. '#' → logprob: -4.413635730743408
    5. ' from' → logprob: -4.913635730743408
    6. 'prev' → logprob: -5.413635730743408
    7. 'pos' → logprob: -5.413635730743408
    8. 'last' → logprob: -5.913635730743408
    9. 'import' → logprob: -6.038635730743408
    10. 'if' → logprob: -7.288635730743408

Token 219: 'ic' (ID: 291)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7226930260658264
    2. 'ount' → logprob: -2.4726929664611816
    3. 'nt' → logprob: -2.4726929664611816
    4. 'ict' → logprob: -2.4726929664611816
    5. 'count' → logprob: -2.8476929664611816
    6. ' =' → logprob: -3.3476929664611816
    7. 'last' → logprob: -3.5976929664611816
    8. 'list' → logprob: -4.222692966461182
    9. 'dict' → logprob: -4.472692966461182
    10. 'prev' → logprob: -4.472692966461182

Token 220: ' keeps' (ID: 18295)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740784466266632
    2. '=' → logprob: -0.9740784168243408
    3. ' ' → logprob: -14.349078178405762
    4. '={}' → logprob: -15.099078178405762
    5. ',' → logprob: -16.349079132080078
    6. '   ' → logprob: -16.349079132080078
    7. '={}
' → logprob: -16.599079132080078
    8. '＝' → logprob: -17.099079132080078
    9. 'from' → logprob: -17.224079132080078
    10. 's' → logprob: -17.224079132080078

Token 221: ' a' (ID: 261)
  Prédit: 'track'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'track' → logprob: -0.07369076460599899
    2. ' track' → logprob: -2.82369065284729
    3. 'count' → logprob: -5.323690891265869
    4. 'a' → logprob: -5.573690891265869
    5. 'counts' → logprob: -7.323690891265869
    6. 'tracks' → logprob: -7.573690891265869
    7. 'cd' → logprob: -7.823690891265869
    8. 'last' → logprob: -8.198690414428711
    9. 'indices' → logprob: -8.448690414428711
    10. 'the' → logprob: -8.698690414428711

Token 222: ' mapping' (ID: 22573)
  Prédit: 'dictionary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dictionary' → logprob: -0.17082463204860687
    2. 'default' → logprob: -2.4208245277404785
    3. ' dictionary' → logprob: -3.4208245277404785
    4. 'ictionary' → logprob: -3.5458245277404785
    5. ' defaultdict' → logprob: -5.4208245277404785
    6. 'mapping' → logprob: -6.9208245277404785
    7. 'dict' → logprob: -7.4208245277404785
    8. 'map' → logprob: -9.045825004577637
    9. '{}' → logprob: -9.295825004577637
    10. '{' → logprob: -9.545825004577637

Token 223: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04446817934513092
    2. '{' → logprob: -3.6694681644439697
    3. ' from' → logprob: -4.544468402862549
    4. 'of' → logprob: -5.669468402862549
    5. ' of' → logprob: -5.794468402862549
    6. '=' → logprob: -8.16946792602539
    7. 'for' → logprob: -8.79446792602539
    8. ' =' → logprob: -8.91946792602539
    9. ':' → logprob: -9.79446792602539
    10. 'c' → logprob: -9.91946792602539

Token 224: ' each' (ID: 2454)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.5563099980354309
    2. 'element' → logprob: -1.6813099384307861
    3. '{}' → logprob: -3.056309938430786
    4. 'values' → logprob: -3.181309938430786
    5. ' value' → logprob: -3.431309938430786
    6. 'number' → logprob: -3.556309938430786
    7. ' element' → logprob: -3.806309938430786
    8. 'color' → logprob: -4.056310176849365
    9. 'c' → logprob: -4.181310176849365
    10. 'elements' → logprob: -4.681310176849365

Token 225: ' unique' (ID: 5746)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.3914687931537628
    2. 'value' → logprob: -1.6414687633514404
    3. 'number' → logprob: -2.2664687633514404
    4. ' color' → logprob: -4.7664690017700195
    5. 'element' → logprob: -4.8914690017700195
    6. ' value' → logprob: -5.2664690017700195
    7. ' number' → logprob: -5.6414690017700195
    8. 'num' → logprob: -7.8914690017700195
    9. ' element' → logprob: -8.39146900177002
    10. 'c' → logprob: -8.51646900177002

Token 226: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -1.0747860670089722
    2. 'color' → logprob: -1.0747860670089722
    3. ' value' → logprob: -2.1997861862182617
    4. ' color' → logprob: -2.3247861862182617
    5. ' number' → logprob: -3.0747861862182617
    6. 'number' → logprob: -3.3247861862182617
    7. 'element' → logprob: -4.449786186218262
    8. ' element' → logprob: -4.574786186218262
    9. 'code' → logprob: -6.824786186218262
    10. 'c' → logprob: -6.949786186218262

Token 227: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1602388471364975
    2. 'to' → logprob: -1.9102388620376587
    3. ' of' → logprob: -12.285239219665527
    4. ' ' → logprob: -13.410239219665527
    5. ' in' → logprob: -13.535239219665527
    6. 'value' → logprob: -13.660239219665527
    7. ' last' → logprob: -14.160239219665527
    8. ':' → logprob: -14.160239219665527
    9. ' value' → logprob: -14.535239219665527
    10. '   ' → logprob: -14.660239219665527

Token 228: ' list' (ID: 1562)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.217807650566101
    2. 'its' → logprob: -1.467807650566101
    3. '[]' → logprob: -1.592807650566101
    4. 'a' → logprob: -2.0928077697753906
    5. ' its' → logprob: -2.5928077697753906
    6. ' the' → logprob: -3.4678077697753906
    7. ' a' → logprob: -4.217807769775391
    8. 'their' → logprob: -4.842807769775391
    9. 'indices' → logprob: -4.967807769775391
    10. 'list' → logprob: -5.467807769775391

Token 229: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3522936999797821
    2. 'of' → logprob: -1.2272937297821045
    3. '   ' → logprob: -6.102293491363525
    4. '	of' → logprob: -7.102293491363525
    5. '[' → logprob: -7.727293491363525
    6. 'indices' → logprob: -9.352293968200684
    7. '<|end|>' → logprob: -9.477293968200684
    8. '    ' → logprob: -10.352293968200684
    9. '<|end|>' → logprob: -10.727293968200684
    10. '#' → logprob: -10.852293968200684

Token 230: ' its' (ID: 1617)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.024188924580812454
    2. 'positions' → logprob: -4.274188995361328
    3. ' indices' → logprob: -5.149188995361328
    4. 'indexes' → logprob: -6.024188995361328
    5. 'its' → logprob: -7.399188995361328
    6. 'their' → logprob: -7.649188995361328
    7. 'occ' → logprob: -8.774188995361328
    8. ' its' → logprob: -9.024188995361328
    9. ' positions' → logprob: -9.274188995361328
    10. 'previous' → logprob: -9.774188995361328

Token 231: ' positions' (ID: 15897)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.04231472685933113
    2. 'positions' → logprob: -3.6673147678375244
    3. 'occ' → logprob: -4.667314529418945
    4. 'indexes' → logprob: -5.792314529418945
    5. ' indices' → logprob: -5.917314529418945
    6. 'occur' → logprob: -8.292314529418945
    7. 'previous' → logprob: -9.042314529418945
    8. ' positions' → logprob: -9.417314529418945
    9. 'appearance' → logprob: -10.167314529418945
    10. 'last' → logprob: -10.167314529418945

Token 232: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2902354896068573
    2. '{' → logprob: -2.2902355194091797
    3. 'in' → logprob: -2.5402355194091797
    4. ',' → logprob: -4.29023551940918
    5. ' =' → logprob: -4.29023551940918
    6. 'positions' → logprob: -4.29023551940918
    7. '   ' → logprob: -4.79023551940918
    8. 'indices' → logprob: -5.16523551940918
    9. ':' → logprob: -5.79023551940918
    10. ' positions' → logprob: -5.91523551940918

Token 233: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01487149577587843
    2. 'the' → logprob: -4.389871597290039
    3. ' c' → logprob: -6.389871597290039
    4. ' the' → logprob: -7.389871597290039
    5. '   ' → logprob: -10.264871597290039
    6. 'cl' → logprob: -11.389871597290039
    7. 'code' → logprob: -12.264871597290039
    8. 'N' → logprob: -13.264871597290039
    9. ' ' → logprob: -13.264871597290039
    10. 'a' → logprob: -13.514871597290039

Token 234: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0022244835272431374
    2. 'c' → logprob: -6.627224445343018
    3. 'list' → logprob: -7.377224445343018
    4. 'dic' → logprob: -9.252224922180176
    5. 'cl' → logprob: -10.127224922180176
    6. 'dict' → logprob: -10.252224922180176
    7. 'd' → logprob: -11.314724922180176
    8. 'cd' → logprob: -11.689724922180176
    9. '[c' → logprob: -11.814724922180176
    10. 'olist' → logprob: -12.127224922180176

Token 235: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00021855637896806002
    2. 'dict' → logprob: -9.625218391418457
    3. '2' → logprob: -10.000218391418457
    4. 'c' → logprob: -11.000218391418457
    5. 'dic' → logprob: -11.000218391418457
    6. 'ist' → logprob: -11.375218391418457
    7. '_list' → logprob: -11.625218391418457
    8. ' list' → logprob: -11.750218391418457
    9. '   ' → logprob: -12.000218391418457
    10. 'ic' → logprob: -12.375218391418457

Token 236: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35643360018730164
    2. 'cd' → logprob: -1.231433629989624
    3. ' cd' → logprob: -5.981433391571045
    4. '
' → logprob: -5.981433391571045
    5. ' =' → logprob: -7.606433391571045
    6. ',' → logprob: -7.856433391571045
    7. '_cd' → logprob: -8.106433868408203
    8. '{' → logprob: -8.481433868408203
    9. '	cd' → logprob: -8.481433868408203
    10. '{
' → logprob: -8.606433868408203

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025007784366607666
    2. 'cd' → logprob: -3.900007724761963
    3. '
' → logprob: -5.650007724761963
    4. '    
' → logprob: -7.900007724761963
    5. ' cd' → logprob: -8.025008201599121
    6. '	cd' → logprob: -9.150008201599121
    7. '_cd' → logprob: -10.400008201599121
    8. '  
' → logprob: -10.650008201599121
    9. '(cd' → logprob: -11.025008201599121
    10. '{
' → logprob: -11.400008201599121

Token 238: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' (adapté à ' cd') → logprob: -0.02420766092836857
    2. ' cd' → logprob: -4.524207592010498
    3. 'from' → logprob: -4.524207592010498
    4. '   ' → logprob: -6.399207592010498
    5. ' from' → logprob: -7.649207592010498
    6. 'import' → logprob: -10.774208068847656
    7. '	cd' → logprob: -10.774208068847656
    8. '
' → logprob: -11.774208068847656
    9. 'cdn' → logprob: -12.024208068847656
    10. ' ' → logprob: -12.149208068847656

Token 239: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -8.180258191714529e-06
    2. 'ictionary' → logprob: -13.125008583068848
    3. 'i' → logprob: -13.250008583068848
    4. 'dic' → logprob: -13.500008583068848
    5. 'ics' → logprob: -14.750008583068848
    6. '
' → logprob: -15.062508583068848
    7. '   ' → logprob: -15.562508583068848
    8. '_dic' → logprob: -15.687508583068848
    9. '```' → logprob: -15.875008583068848
    10. ' =' → logprob: -15.875008583068848

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04860564321279526
    2. ' =' → logprob: -3.0486056804656982
    3. '={}' → logprob: -11.048605918884277
    4. '={' → logprob: -13.673605918884277
    5. ' ={' → logprob: -14.673605918884277
    6. '＝' → logprob: -15.673605918884277
    7. '{' → logprob: -16.17360496520996
    8. '={}
' → logprob: -16.17360496520996
    9. '[' → logprob: -16.29860496520996
    10. '.setdefault' → logprob: -16.54860496520996

Token 241: ' {}
' (ID: 11421)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -5.676981345459353e-06
    2. 'dict' → logprob: -12.750005722045898
    3. ' {}' → logprob: -13.000005722045898
    4. '{}
' → logprob: -15.000005722045898
    5. 'default' → logprob: -16.2500057220459
    6. '{}

' → logprob: -16.7500057220459
    7. '{' → logprob: -17.0000057220459
    8. '{})' → logprob: -17.2500057220459
    9. '{},' → logprob: -18.7500057220459
    10. ' dict' → logprob: -18.8750057220459

Token 242: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18009474873542786
    2. 'for' → logprob: -2.0550947189331055
    3. ' for' → logprob: -3.3050947189331055
    4. '	for' → logprob: -11.055094718933105
    5. '<|end|>' → logprob: -11.930094718933105
    6. '    
' → logprob: -13.055094718933105
    7. 'from' → logprob: -13.180094718933105
    8. '
' → logprob: -13.180094718933105
    9. 'def' → logprob: -13.680094718933105
    10. 'token' → logprob: -14.055094718933105

Token 243: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0028433911502361298
    2. ' for' → logprob: -6.252843379974365
    3. '   ' → logprob: -7.002843379974365
    4. 'from' → logprob: -12.252843856811523
    5. '	for' → logprob: -15.377843856811523
    6. '
' → logprob: -16.127843856811523
    7. 'import' → logprob: -17.252843856811523
    8. ' ' → logprob: -17.752843856811523
    9. '```' → logprob: -18.502843856811523
    10. '    
' → logprob: -19.002843856811523

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04503139108419418
    2. 'idx' → logprob: -3.7950313091278076
    3. ' i' → logprob: -4.420031547546387
    4. 'v' → logprob: -5.795031547546387
    5. ' idx' → logprob: -5.920031547546387
    6. 'val' → logprob: -6.295031547546387
    7. 'x' → logprob: -6.920031547546387
    8. 'num' → logprob: -8.045031547546387
    9. 'index' → logprob: -8.295031547546387
    10. 'value' → logprob: -8.920031547546387

Token 245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16265647113323212
    2. 'in' → logprob: -1.9126564264297485
    3. ',' → logprob: -6.037656307220459
    4. ' ' → logprob: -10.662656784057617
    5. ' ,' → logprob: -11.162656784057617
    6. '   ' → logprob: -13.537656784057617
    7. '  ' → logprob: -14.662656784057617
    8. '```' → logprob: -14.787656784057617
    9. '	in' → logprob: -14.912656784057617
    10. 'range' → logprob: -15.162656784057617

Token 246: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008617646060883999
    2. ' range' → logprob: -4.758617877960205
    3. '   ' → logprob: -13.258617401123047
    4. ' ' → logprob: -14.758617401123047
    5. '  ' → logprob: -15.258617401123047
    6. '(range' → logprob: -16.133617401123047
    7. '0' → logprob: -16.133617401123047
    8. 'c' → logprob: -16.383617401123047
    9. '    ' → logprob: -16.633617401123047
    10. 'r' → logprob: -16.758617401123047

Token 247: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.4758412837982178
    2. 'N' → logprob: -0.9758412837982178
    3. '(' → logprob: -7.225841522216797
    4. '   ' → logprob: -7.975841522216797
    5. 'len' → logprob: -8.350841522216797
    6. '(len' → logprob: -8.850841522216797
    7. ' N' → logprob: -9.225841522216797
    8. '1' → logprob: -9.600841522216797
    9. ' ' → logprob: -9.725841522216797
    10. '	N' → logprob: -11.600841522216797

Token 248: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.501009464263916
    2. '):
' → logprob: -1.626009464263916
    3. '):' → logprob: -1.626009464263916
    4. ')' → logprob: -8.126008987426758
    5. '   ' → logprob: -8.876008987426758
    6. '=' → logprob: -10.501008987426758
    7. '+' → logprob: -10.751008987426758
    8. ':' → logprob: -11.001008987426758
    9. ',' → logprob: -11.251008987426758
    10. '(' → logprob: -11.376008987426758

Token 249: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020652716979384422
    2. '):' → logprob: -3.8956527709960938
    3. '   ' → logprob: -9.645652770996094
    4. '):
' → logprob: -10.395652770996094
    5. ':
' → logprob: -11.645652770996094
    6. ':' → logprob: -12.770652770996094
    7. ' ):
' → logprob: -13.520652770996094
    8. '       ' → logprob: -14.145652770996094
    9. '):

' → logprob: -14.520652770996094
    10. ',' → logprob: -14.520652770996094

Token 250: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059732310473918915
    2. '   ' → logprob: -5.1309733390808105
    3. ' if' → logprob: -11.630972862243652
    4. '```' → logprob: -11.630972862243652
    5. '	   ' → logprob: -12.255972862243652
    6. ' c' → logprob: -12.255972862243652
    7. '    ' → logprob: -13.005972862243652
    8. ' value' → logprob: -13.130972862243652
    9. '     ' → logprob: -13.630972862243652
    10. 'c' → logprob: -13.630972862243652

Token 251: ' c' (ID: 274)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.6154203414916992
    2. 'v' → logprob: -1.2404203414916992
    3. 'x' → logprob: -1.9904203414916992
    4. '   ' → logprob: -4.490420341491699
    5. 'c' (adapté à ' c') → logprob: -4.615420341491699
    6. 'if' → logprob: -4.990420341491699
    7. ' val' → logprob: -5.990420341491699
    8. 'value' → logprob: -6.240420341491699
    9. 'key' → logprob: -8.1154203414917
    10. ' x' → logprob: -8.2404203414917

Token 252: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6200903058052063
    2. '=' → logprob: -1.4950902462005615
    3. 'val' → logprob: -1.6200902462005615
    4. 'value' → logprob: -3.8700902462005615
    5. 'v' → logprob: -4.995090484619141
    6. '_val' → logprob: -5.245090484619141
    7. 'c' → logprob: -5.495090484619141
    8. ' val' → logprob: -6.995090484619141
    9. '   ' → logprob: -7.120090484619141
    10. '=c' → logprob: -7.495090484619141

Token 253: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.020546678453683853
    2. ' c' → logprob: -3.8955466747283936
    3. '   ' → logprob: -12.395546913146973
    4. '	c' → logprob: -15.520546913146973
    5. 'cl' → logprob: -15.895546913146973
    6. ' ' → logprob: -16.270545959472656
    7. ')c' → logprob: -16.520545959472656
    8. '_c' → logprob: -17.208045959472656
    9. '```' → logprob: -17.895545959472656
    10. '  ' → logprob: -17.958045959472656

Token 254: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.856408536899835e-05
    2. 'c' → logprob: -10.625028610229492
    3. '=c' → logprob: -13.500028610229492
    4. ':c' → logprob: -13.625028610229492
    5. '[c' → logprob: -14.375028610229492
    6. ':' → logprob: -15.125028610229492
    7. '=' → logprob: -15.500028610229492
    8. ' c' → logprob: -16.125028610229492
    9. '```' → logprob: -16.125028610229492
    10. '   ' → logprob: -16.375028610229492

Token 255: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00023274161503650248
    2. '2' → logprob: -8.500232696533203
    3. 'c' → logprob: -10.500232696533203
    4. 'ist' → logprob: -13.750232696533203
    5. 'cl' → logprob: -15.375232696533203
    6. 'olist' → logprob: -16.125232696533203
    7. 'alist' → logprob: -17.125232696533203
    8. '   ' → logprob: -17.250232696533203
    9. '```' → logprob: -17.250232696533203
    10. '[c' → logprob: -17.250232696533203

Token 256: '[i' (ID: 1768)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8992433547973633
    2. '       ' → logprob: -1.2742433547973633
    3. ' =' → logprob: -2.2742433547973633
    4. ':
' → logprob: -2.3992433547973633
    5. '[i' → logprob: -3.3992433547973633
    6. '=' → logprob: -3.6492433547973633
    7. ':' → logprob: -3.7742433547973633
    8. '
' → logprob: -4.399243354797363
    9. '.setdefault' → logprob: -4.649243354797363
    10. '):
' → logprob: -5.274243354797363

Token 257: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.03297797963023186
    2. ']
' → logprob: -4.157978057861328
    3. ')' → logprob: -4.282978057861328
    4. ']' → logprob: -5.907978057861328
    5. '])
' → logprob: -9.032978057861328
    6. '   ' → logprob: -9.657978057861328
    7. '       ' → logprob: -10.282978057861328
    8. ' )
' → logprob: -10.782978057861328
    9. '])' → logprob: -11.407978057861328
    10. ')
' → logprob: -11.532978057861328

Token 258: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011723674833774567
    2. ' if' → logprob: -7.1261725425720215
    3. '   ' → logprob: -8.001172065734863
    4. '<|end|>' → logprob: -11.501172065734863
    5. '```' → logprob: -11.751172065734863
    6. 'if' → logprob: -11.876172065734863
    7. '        
' → logprob: -13.251172065734863
    8. ')' → logprob: -13.376172065734863
    9. '	if' → logprob: -14.001172065734863
    10. '           ' → logprob: -14.501172065734863

Token 259: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.024881621822714806
    2. ' if' → logprob: -3.774881601333618
    3. '   ' → logprob: -6.774881839752197
    4. 'cd' → logprob: -8.149881362915039
    5. '       ' → logprob: -8.524881362915039
    6. ' cd' → logprob: -12.774881362915039
    7. '	if' → logprob: -13.149881362915039
    8. '  ' → logprob: -15.899881362915039
    9. '    ' → logprob: -16.02488136291504
    10. '
' → logprob: -16.14988136291504

Token 260: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.3484543561935425
    2. 'c' → logprob: -1.2234543561935425
    3. '	c' → logprob: -12.723454475402832
    4. '   ' → logprob: -12.973454475402832
    5. ' not' → logprob: -13.598454475402832
    6. 'not' → logprob: -13.973454475402832
    7. ' ' → logprob: -14.535954475402832
    8. ' ' → logprob: -14.723454475402832
    9. ')c' → logprob: -15.160954475402832
    10. '_c' → logprob: -15.410954475402832

Token 261: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.2027399092912674
    2. 'not' → logprob: -1.702739953994751
    3. 'in' → logprob: -6.827739715576172
    4. ' in' → logprob: -8.452739715576172
    5. ']' → logprob: -10.702739715576172
    6. ')' → logprob: -12.202739715576172
    7. '	not' → logprob: -14.327739715576172
    8. ':not' → logprob: -15.202739715576172
    9. '```' → logprob: -16.202739715576172
    10. '   ' → logprob: -16.327739715576172

Token 262: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009832354262471199
    2. 'in' → logprob: -4.634832382202148
    3. 'c' → logprob: -10.134832382202148
    4. 'cd' → logprob: -11.009832382202148
    5. '   ' → logprob: -12.259832382202148
    6. ' c' → logprob: -13.259832382202148
    7. ' cd' → logprob: -13.509832382202148
    8. ' not' → logprob: -13.634832382202148
    9. ')' → logprob: -13.759832382202148
    10. 'd' → logprob: -13.884832382202148

Token 263: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.009759632870554924
    2. ' cd' → logprob: -4.634759426116943
    3. '	cd' → logprob: -13.384759902954102
    4. 'cdn' → logprob: -14.259759902954102
    5. '(cd' → logprob: -14.509759902954102
    6. '_cd' → logprob: -15.259759902954102
    7. '   ' → logprob: -15.384759902954102
    8. ' ' → logprob: -16.5097599029541
    9. 'c' → logprob: -16.5097599029541
    10. 'cl' → logprob: -16.6347599029541

Token 264: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -9.088346359931165e-07
    2. 'dic' → logprob: -14.125000953674316
    3. 'c' → logprob: -16.0
    4. '   ' → logprob: -19.875
    5. '
' → logprob: -21.125
    6. '(dic' → logprob: -21.125
    7. 'i' → logprob: -21.25
    8. 'ictionary' → logprob: -21.625
    9. 'sic' → logprob: -21.75
    10. '_dic' → logprob: -21.75

Token 265: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2254326045513153
    2. ':
' → logprob: -1.6004326343536377
    3. ']:
' → logprob: -12.225432395935059
    4. ']:' → logprob: -12.350432395935059
    5. ':
' → logprob: -12.975432395935059
    6. ':c' → logprob: -13.475432395935059
    7. '):
' → logprob: -13.725432395935059
    8. ':

' → logprob: -13.975432395935059
    9. '   ' → logprob: -14.100432395935059
    10. '():
' → logprob: -14.225432395935059

Token 266: '           ' (ID: 352)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.4784190058708191
    2. '       ' → logprob: -1.3534190654754639
    3. ' cd' → logprob: -2.603419065475464
    4. '           ' → logprob: -3.478419065475464
    5. '	cd' → logprob: -4.728418827056885
    6. '   ' → logprob: -4.978418827056885
    7. '	c' → logprob: -8.228419303894043
    8. '(cd' → logprob: -8.728419303894043
    9. '```' → logprob: -9.228419303894043
    10. '{
' → logprob: -9.478419303894043

Token 267: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' (adapté à ' cd') → logprob: -0.20145495235919952
    2. ' cd' → logprob: -1.701454997062683
    3. '           ' → logprob: -10.701455116271973
    4. '	cd' → logprob: -11.326455116271973
    5. '(cd' → logprob: -13.201455116271973
    6. '   ' → logprob: -13.451455116271973
    7. '_cd' → logprob: -13.576455116271973
    8. ' cds' → logprob: -14.201455116271973
    9. 'cdn' → logprob: -14.826455116271973
    10. '               ' → logprob: -15.076455116271973

Token 268: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -4.320199877838604e-07
    2. 'dic' → logprob: -15.125
    3. 'c' → logprob: -16.0
    4. '   ' → logprob: -18.75
    5. '[c' → logprob: -20.375
    6. '_dic' → logprob: -20.625
    7. '(dic' → logprob: -20.75
    8. '  ' → logprob: -21.25
    9. '     ' → logprob: -21.75
    10. '    ' → logprob: -21.75

Token 269: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. ' =' → logprob: -14.750001907348633
    4. '=' → logprob: -15.625001907348633
    5. 'c' → logprob: -17.125001907348633
    6. '=c' → logprob: -18.625001907348633
    7. ']' → logprob: -19.125001907348633
    8. 'cd' → logprob: -20.500001907348633
    9. '	c' → logprob: -20.500001907348633
    10. ' c' → logprob: -20.750001907348633

Token 270: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015278366627171636
    2. ']=' → logprob: -6.501527786254883
    3. ' =' → logprob: -11.501527786254883
    4. '=' → logprob: -11.501527786254883
    5. ' ]' → logprob: -12.626527786254883
    6. '=[]' → logprob: -14.751527786254883
    7. '"]' → logprob: -14.876527786254883
    8. ')' → logprob: -15.501527786254883
    9. '']' → logprob: -15.626527786254883
    10. ']={' → logprob: -15.751527786254883

Token 271: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520025670528412
    2. ' =' → logprob: -1.5020025968551636
    3. '=[]' → logprob: -10.127002716064453
    4. ']' → logprob: -10.502002716064453
    5. ']=' → logprob: -12.877002716064453
    6. '=[' → logprob: -13.002002716064453
    7. '=[]
' → logprob: -14.752002716064453
    8. '=create' → logprob: -16.377002716064453
    9. '[' → logprob: -16.502002716064453
    10. ')' → logprob: -16.752002716064453

Token 272: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.00027849749312736094
    2. '[' → logprob: -8.25027847290039
    3. '[]
' → logprob: -11.25027847290039
    4. '[]}' → logprob: -13.37527847290039
    5. '[i' → logprob: -13.75027847290039
    6. ' []' → logprob: -14.25027847290039
    7. '[]

' → logprob: -14.37527847290039
    8. '[])' → logprob: -16.00027847290039
    9. '[]>' → logprob: -16.12527847290039
    10. '[],' → logprob: -16.37527847290039

Token 273: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14334996044635773
    2. ']' → logprob: -2.0183498859405518
    3. ']
' → logprob: -7.768350124359131
    4. '-' → logprob: -9.268349647521973
    5. ']

' → logprob: -10.018349647521973
    6. ' i' → logprob: -10.268349647521973
    7. ' ]' → logprob: -10.393349647521973
    8. '   ' → logprob: -11.768349647521973
    9. '0' → logprob: -12.143349647521973
    10. '-i' → logprob: -12.393349647521973

Token 274: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24670200049877167
    2. '       ' → logprob: -1.996701955795288
    3. ']
' → logprob: -2.496701955795288
    4. ',' → logprob: -9.246702194213867
    5. '<|end|>' → logprob: -9.246702194213867
    6. ' ]' → logprob: -9.621702194213867
    7. '   ' → logprob: -9.746702194213867
    8. 'else' → logprob: -9.746702194213867
    9. ']()
' → logprob: -10.496702194213867
    10. ']
' → logprob: -10.871702194213867

Token 275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022172313183546066
    2. ' else' → logprob: -4.397172451019287
    3. 'else' → logprob: -4.647172451019287
    4. '<|end|>' → logprob: -11.522171974182129
    5. '   ' → logprob: -11.772171974182129
    6. '```' → logprob: -12.397171974182129
    7. ',' → logprob: -13.772171974182129
    8. '	else' → logprob: -14.147171974182129
    9. '           ' → logprob: -14.272171974182129
    10. '	' → logprob: -14.272171974182129

Token 276: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7208655476570129
    2. ' else' → logprob: -1.0958654880523682
    3. 'else' (adapté à ' else') → logprob: -1.7208654880523682
    4. '   ' → logprob: -7.720865726470947
    5. '	else' → logprob: -11.095865249633789
    6. 'elif' → logprob: -11.720865249633789
    7. '```' → logprob: -11.845865249633789
    8. ' elif' → logprob: -11.970865249633789
    9. '	' → logprob: -11.970865249633789
    10. '<|end|>' → logprob: -12.470865249633789

Token 277: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0016641122056171298
    2. 'cd' → logprob: -6.876664161682129
    3. ' cd' → logprob: -8.126664161682129
    4. '.append' → logprob: -8.626664161682129
    5. '.' → logprob: -10.251664161682129
    6. '(cd' → logprob: -10.501664161682129
    7. '		' → logprob: -11.501664161682129
    8. '          ' → logprob: -11.501664161682129
    9. '	cd' → logprob: -11.626664161682129
    10. '	       ' → logprob: -11.751664161682129

Token 278: '           ' (ID: 352)
  Prédit: ' cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -0.11767137795686722
    2. 'cd' → logprob: -2.367671489715576
    3. '           ' → logprob: -4.117671489715576
    4. '	cd' → logprob: -7.117671489715576
    5. '(cd' → logprob: -9.242671012878418
    6. ' cds' → logprob: -10.367671012878418
    7. ' ' → logprob: -10.742671012878418
    8. '	c' → logprob: -11.242671012878418
    9. '   ' → logprob: -11.242671012878418
    10. '_cd' → logprob: -11.367671012878418

Token 279: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' (adapté à ' cd') → logprob: -0.0015071245143190026
    2. ' cd' → logprob: -6.50150728225708
    3. '	cd' → logprob: -12.626506805419922
    4. '           ' → logprob: -13.626506805419922
    5. '(cd' → logprob: -16.126506805419922
    6. 'cdn' → logprob: -16.251506805419922
    7. '_cd' → logprob: -16.376506805419922
    8. '.cd' → logprob: -18.001506805419922
    9. 'cad' → logprob: -18.126506805419922
    10. 'c' → logprob: -18.376506805419922

Token 280: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.014727961272001266
    2. 'c' → logprob: -4.38972806930542
    3. '[c' → logprob: -6.13972806930542
    4. 'dic' → logprob: -10.389727592468262
    5. '[' → logprob: -10.639727592468262
    6. '   ' → logprob: -13.764727592468262
    7. 'sic' → logprob: -13.764727592468262
    8. '
' → logprob: -13.889727592468262
    9. '         ' → logprob: -15.014727592468262
    10. 'bic' → logprob: -15.389727592468262

Token 281: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: 0.0
    2. 'c' → logprob: -19.375
    3. '[' → logprob: -20.375
    4. '
' → logprob: -22.25
    5. '```' → logprob: -23.25
    6. '	c' → logprob: -23.375
    7. '(c' → logprob: -23.75
    8. '[
' → logprob: -24.0
    9. '[ch' → logprob: -24.375
    10. '=c' → logprob: -24.375

Token 282: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.018167849630117416
    2. '.append' → logprob: -4.018167972564697
    3. '.' → logprob: -11.518167495727539
    4. ' ].' → logprob: -12.643167495727539
    5. ']' → logprob: -13.268167495727539
    6. ').' → logprob: -13.768167495727539
    7. '.app' → logprob: -14.393167495727539
    8. 'append' → logprob: -14.893167495727539
    9. ' .' → logprob: -15.393167495727539
    10. '   ' → logprob: -15.518167495727539

Token 283: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. ' append' → logprob: -13.250001907348633
    3. 'app' → logprob: -16.250001907348633
    4. '.append' → logprob: -17.875001907348633
    5. '_append' → logprob: -18.875001907348633
    6. 'Append' → logprob: -20.125001907348633
    7. 'appen' → logprob: -20.375001907348633
    8. '	append' → logprob: -20.625001907348633
    9. 'add' → logprob: -20.750001907348633
    10. 'push' → logprob: -23.250001907348633

Token 284: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0325924449716695e-05
    2. 'i' → logprob: -11.50001049041748
    3. '(' → logprob: -15.75001049041748
    4. '(
' → logprob: -19.000009536743164
    5. ' i' → logprob: -20.750009536743164
    6. ' (' → logprob: -21.250009536743164
    7. ',i' → logprob: -22.875009536743164
    8. '	i' → logprob: -23.125009536743164
    9. '[i' → logprob: -24.000009536743164
    10. '(I' → logprob: -24.625009536743164

Token 285: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ' )' → logprob: -13.375003814697266
    3. ')
' → logprob: -13.750003814697266
    4. '<|end|>' → logprob: -14.375003814697266
    5. '   ' → logprob: -15.125003814697266
    6. ')return' → logprob: -17.250003814697266
    7. ')#' → logprob: -17.250003814697266
    8. ')}' → logprob: -17.375003814697266
    9. ']' → logprob: -17.375003814697266
    10. '),' → logprob: -17.375003814697266

Token 286: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18189260363578796
    2. 'dp' → logprob: -1.9318926334381104
    3. '    
' → logprob: -4.556892395019531
    4. '
' → logprob: -4.681892395019531
    5. ' dp' → logprob: -7.056892395019531
    6. 'DP' → logprob: -8.181892395019531
    7. 'ways' → logprob: -9.056892395019531
    8. '```' → logprob: -9.431892395019531
    9. '  
' → logprob: -10.056892395019531
    10. '        
' → logprob: -10.181892395019531

Token 287: ' #' (ID: 1069)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.005736440885812044
    2. '   ' → logprob: -6.380736351013184
    3. 'from' → logprob: -6.880736351013184
    4. '#' (adapté à ' #') → logprob: -7.005736351013184
    5. 'ans' → logprob: -7.755736351013184
    6. 'ways' → logprob: -8.005736351013184
    7. 'DP' → logprob: -8.255736351013184
    8. 'import' → logprob: -8.880736351013184
    9. 'f' → logprob: -9.255736351013184
    10. '
' → logprob: -9.630736351013184

Token 288: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.02631528116762638
    2. 'from' → logprob: -4.526315212249756
    3. 'import' → logprob: -5.276315212249756
    4. 'ans' → logprob: -6.026315212249756
    5. '#' → logprob: -6.401315212249756
    6. 'prev' → logprob: -7.276315212249756
    7. 'stack' → logprob: -7.901315212249756
    8. 'left' → logprob: -8.151315689086914
    9. 'f' → logprob: -8.151315689086914
    10. 'max' → logprob: -8.401315689086914

Token 289: '[i' (ID: 1768)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005939105991274118
    2. '=' → logprob: -5.13093900680542
    3. 'dp' → logprob: -11.880939483642578
    4. ' ' → logprob: -14.380939483642578
    5. '_' → logprob: -14.755939483642578
    6. '0' → logprob: -14.880939483642578
    7. ',' → logprob: -15.130939483642578
    8. '=[' → logprob: -15.255939483642578
    9. '[' → logprob: -15.630939483642578
    10. '2' → logprob: -15.630939483642578

Token 290: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0013310716021806002
    2. ' =' → logprob: -7.376330852508545
    3. ' ]' → logprob: -8.126331329345703
    4. '][' → logprob: -8.751331329345703
    5. ']=' → logprob: -8.751331329345703
    6. '=' → logprob: -10.876331329345703
    7. '[' → logprob: -11.626331329345703
    8. '[i' → logprob: -11.626331329345703
    9. '   ' → logprob: -11.751331329345703
    10. 's' → logprob: -12.376331329345703

Token 291: ' stores' (ID: 14604)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34845152497291565
    2. '=' → logprob: -1.2234514951705933
    3. '=[' → logprob: -13.223451614379883
    4. ',' → logprob: -13.848451614379883
    5. ' =[' → logprob: -14.098451614379883
    6. ']' → logprob: -14.223451614379883
    7. '[' → logprob: -14.348451614379883
    8. ' ' → logprob: -14.723451614379883
    9. ')' → logprob: -14.848451614379883
    10. '0' → logprob: -14.973451614379883

Token 292: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5635741949081421
    2. 'the' → logprob: -1.438574194908142
    3. '0' → logprob: -1.688574194908142
    4. ' ' → logprob: -4.938574314117432
    5. 'dp' → logprob: -7.563574314117432
    6. ' number' → logprob: -7.938574314117432
    7. 'number' → logprob: -8.563573837280273
    8. '1' → logprob: -8.563573837280273
    9. ' ways' → logprob: -9.688573837280273
    10. ' a' → logprob: -10.188573837280273

Token 293: ' number' (ID: 2086)
  Prédit: 'number'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'number' → logprob: -0.007406315300613642
    2. ' number' → logprob: -5.132406234741211
    3. '0' → logprob: -6.632406234741211
    4. 'dp' → logprob: -9.882406234741211
    5. 'count' → logprob: -10.257406234741211
    6. '#' → logprob: -10.632406234741211
    7. 'total' → logprob: -11.007406234741211
    8. 'ways' → logprob: -11.132406234741211
    9. 'num' → logprob: -12.257406234741211
    10. '
' → logprob: -12.757406234741211

Token 294: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.5293395519256592
    2. 'of' → logprob: -1.2793395519256592
    3. '_of' → logprob: -2.154339551925659
    4. '   ' → logprob: -5.279339790344238
    5. '[' → logprob: -5.654339790344238
    6. '=' → logprob: -6.404339790344238
    7. '_tokens' → logprob: -6.529339790344238
    8. 's' → logprob: -6.904339790344238
    9. ' =' → logprob: -7.404339790344238
    10. '	of' → logprob: -7.654339790344238

Token 295: ' ways' (ID: 6984)
  Prédit: ' ways'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.25664371252059937
    2. 'ways' → logprob: -1.5066437721252441
    3. ' valid' → logprob: -6.006643772125244
    4. 'valid' → logprob: -6.131643772125244
    5. '_' → logprob: -11.006643295288086
    6. '_valid' → logprob: -11.506643295288086
    7. ' ' → logprob: -11.631643295288086
    8. '0' → logprob: -12.256643295288086
    9. 'dp' → logprob: -12.256643295288086
    10. 'possible' → logprob: -12.631643295288086

Token 296: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.031373582780361176
    2. 'to' → logprob: -3.5313735008239746
    3. '   ' → logprob: -6.781373500823975
    4. 'dp' → logprob: -8.656373977661133
    5. '[i' → logprob: -9.156373977661133
    6. ' =' → logprob: -10.031373977661133
    7. ' ' → logprob: -10.281373977661133
    8. '<|end|>' → logprob: -10.531373977661133
    9. ' dp' → logprob: -10.531373977661133
    10. '_dp' → logprob: -11.531373977661133

Token 297: ' traverse' (ID: 66957)
  Prédit: ' reach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reach' → logprob: -1.0953394174575806
    2. 'reach' → logprob: -2.470339298248291
    3. ' compute' → logprob: -2.470339298248291
    4. 'arr' → logprob: -2.720339298248291
    5. ' ' → logprob: -2.970339298248291
    6. ' traverse' → logprob: -3.095339298248291
    7. 'compute' → logprob: -3.220339298248291
    8. '0' → logprob: -3.220339298248291
    9. ' complete' → logprob: -3.345339298248291
    10. ' i' → logprob: -3.470339298248291

Token 298: ' up' (ID: 869)
  Prédit: ' up'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' up' → logprob: -0.5457959771156311
    2. ' to' → logprob: -2.0457959175109863
    3. ' the' → logprob: -2.2957959175109863
    4. 'dp' → logprob: -2.7957959175109863
    5. ' i' → logprob: -3.4207959175109863
    6. 'up' → logprob: -4.295795917510986
    7. ' dp' → logprob: -4.295795917510986
    8. 'the' → logprob: -4.545795917510986
    9. '[i' → logprob: -4.670795917510986
    10. '   ' → logprob: -4.670795917510986

Token 299: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.0052650682628154755
    2. '   ' → logprob: -5.380265235900879
    3. ' to' → logprob: -8.005265235900879
    4. '_to' → logprob: -9.005265235900879
    5. 'o' → logprob: -9.630265235900879
    6. 'dp' → logprob: -9.755265235900879
    7. '[i' → logprob: -10.880265235900879
    8. 'i' → logprob: -11.380265235900879
    9. 'To' → logprob: -11.880265235900879
    10. '[to' → logprob: -12.255265235900879

Token 300: ' position' (ID: 4010)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.28607049584388733
    2. 'index' → logprob: -1.536070466041565
    3. ' i' → logprob: -4.286070346832275
    4. ' index' → logprob: -4.661070346832275
    5. 'position' → logprob: -4.911070346832275
    6. 'c' → logprob: -6.536070346832275
    7. ' position' → logprob: -7.161070346832275
    8. 'the' → logprob: -7.661070346832275
    9. ' the' → logprob: -9.661070823669434
    10. ' c' → logprob: -9.786070823669434

Token 301: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.33237871527671814
    2. '[i' → logprob: -1.9573787450790405
    3. ' i' → logprob: -2.082378625869751
    4. ' in' → logprob: -4.95737886428833
    5. '   ' → logprob: -5.70737886428833
    6. 'in' → logprob: -5.83237886428833
    7. '_i' → logprob: -7.33237886428833
    8. '(i' → logprob: -7.70737886428833
    9. 's' → logprob: -7.83237886428833
    10. '[' → logprob: -7.83237886428833

Token 302: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09832023829221725
    2. '   ' → logprob: -3.098320245742798
    3. 'dp' → logprob: -3.473320245742798
    4. '=' → logprob: -4.848320007324219
    5. ' dp' → logprob: -4.848320007324219
    6. '
' → logprob: -7.348320007324219
    7. ' in' → logprob: -7.723320007324219
    8. '(dp' → logprob: -8.473320007324219
    9. '_dp' → logprob: -8.473320007324219
    10. ',' → logprob: -8.848320007324219

Token 303: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1368398219347
    2. ' c' → logprob: -2.1368398666381836
    3. '   ' → logprob: -5.761839866638184
    4. 'N' → logprob: -5.761839866638184
    5. 'dp' → logprob: -6.886839866638184
    6. ' the' → logprob: -6.886839866638184
    7. 'the' → logprob: -7.011839866638184
    8. ' N' → logprob: -7.886839866638184
    9. '```' → logprob: -9.636839866638184
    10. ' dp' → logprob: -10.136839866638184

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20757535099983215
    2. 'dp' → logprob: -1.7075753211975098
    3. 'list' → logprob: -5.70757532119751
    4. 'p' → logprob: -6.45757532119751
    5. 'c' → logprob: -7.70757532119751
    6. '_dp' → logprob: -8.207575798034668
    7. '_list' → logprob: -8.832575798034668
    8. ' dp' → logprob: -9.457575798034668
    9. 'd' → logprob: -9.707575798034668
    10. 'plist' → logprob: -9.832575798034668

Token 305: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.012010134756565094
    2. '2' → logprob: -4.637010097503662
    3. 'dp' → logprob: -6.512010097503662
    4. 'c' → logprob: -8.38701057434082
    5. '_list' → logprob: -8.38701057434082
    6. 'p' → logprob: -8.51201057434082
    7. 'lst' → logprob: -10.63701057434082
    8. 'ist' → logprob: -10.88701057434082
    9. '   ' → logprob: -11.26201057434082
    10. '```' → logprob: -12.01201057434082

Token 306: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7489354610443115
    2. ' =' → logprob: -1.1239354610443115
    3. 'dp' → logprob: -1.7489354610443115
    4. ' dp' → logprob: -4.248935699462891
    5. '
' → logprob: -4.873935699462891
    6. '=' → logprob: -5.498935699462891
    7. '	dp' → logprob: -7.623935699462891
    8. '_dp' → logprob: -7.873935699462891
    9. '(dp' → logprob: -8.12393569946289
    10. ',' → logprob: -8.12393569946289

Token 307: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06055864319205284
    2. 'dp' → logprob: -2.935558557510376
    3. ' dp' → logprob: -5.685558795928955
    4. ' =' → logprob: -6.560558795928955
    5. '
' → logprob: -8.185558319091797
    6. '(dp' → logprob: -8.810558319091797
    7. '[' → logprob: -9.060558319091797
    8. '	dp' → logprob: -9.185558319091797
    9. '=' → logprob: -9.560558319091797
    10. '_dp' → logprob: -10.310558319091797

Token 308: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.07704325020313263
    2. '   ' → logprob: -3.077043294906616
    3. ' dp' → logprob: -3.577043294906616
    4. '	dp' → logprob: -9.952043533325195
    5. '
' → logprob: -10.577043533325195
    6. '_dp' → logprob: -11.577043533325195
    7. '```' → logprob: -12.202043533325195
    8. '[' → logprob: -12.702043533325195
    9. '    
' → logprob: -13.077043533325195
    10. '(dp' → logprob: -13.452043533325195

Token 309: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01841083914041519
    2. '=' → logprob: -4.018410682678223
    3. '[' → logprob: -8.518410682678223
    4. '=[' → logprob: -9.893410682678223
    5. ' =[' → logprob: -12.143410682678223
    6. '=[]' → logprob: -14.143410682678223
    7. '   ' → logprob: -14.143410682678223
    8. ')' → logprob: -14.393410682678223
    9. '```' → logprob: -14.518410682678223
    10. ',' → logprob: -14.518410682678223

Token 310: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.02975558675825596
    2. ' [' → logprob: -3.5297555923461914
    3. '[N' → logprob: -12.279755592346191
    4. '   ' → logprob: -15.404755592346191
    5. '[i' → logprob: -15.904755592346191
    6. '[n' → logprob: -17.404754638671875
    7. '[-' → logprob: -17.779754638671875
    8. '[int' → logprob: -17.904754638671875
    9. ' ' → logprob: -18.029754638671875
    10. '[len' → logprob: -18.029754638671875

Token 311: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015860427811276168
    2. '1' → logprob: -8.750158309936523
    3. ' ' → logprob: -16.625158309936523
    4. ']' → logprob: -18.375158309936523
    5. '[' → logprob: -18.375158309936523
    6. '-' → logprob: -18.625158309936523
    7. '۰' → logprob: -18.875158309936523
    8. '```' → logprob: -18.875158309936523
    9. '
' → logprob: -20.062658309936523
    10. 'None' → logprob: -20.250158309936523

Token 312: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010330495424568653
    2. ']+' → logprob: -7.001032829284668
    3. ']*' → logprob: -9.751032829284668
    4. ']*(' → logprob: -10.126032829284668
    5. ' ]' → logprob: -11.001032829284668
    6. ',' → logprob: -12.751032829284668
    7. ' for' → logprob: -12.876032829284668
    8. ')' → logprob: -14.626032829284668
    9. 'for' → logprob: -15.376032829284668
    10. '   ' → logprob: -16.251033782958984

Token 313: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.564763605594635
    2. ' +' → logprob: -1.4397635459899902
    3. '<|end|>' → logprob: -1.8147635459899902
    4. ']' → logprob: -4.31476354598999
    5. '[' → logprob: -5.68976354598999
    6. ' ' → logprob: -5.81476354598999
    7. ',' → logprob: -6.06476354598999
    8. ')' → logprob: -6.56476354598999
    9. '*' → logprob: -6.68976354598999
    10. ' for' → logprob: -6.81476354598999

Token 314: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0009118211455643177
    2. ' [' → logprob: -7.000911712646484
    3. '[N' → logprob: -15.750911712646484
    4. '[-' → logprob: -16.125911712646484
    5. '0' → logprob: -17.250911712646484
    6. '([' → logprob: -17.625911712646484
    7. '[i' → logprob: -19.250911712646484
    8. '   ' → logprob: -19.375911712646484
    9. '[len' → logprob: -19.375911712646484
    10. ' ' → logprob: -19.750911712646484

Token 315: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -17.875003814697266
    4. '1' → logprob: -18.062503814697266
    5. ']' → logprob: -18.312503814697266
    6. '   ' → logprob: -18.375003814697266
    7. '-' → logprob: -18.500003814697266
    8. 'None' → logprob: -18.687503814697266
    9. '۰' → logprob: -18.812503814697266
    10. '```' → logprob: -19.187503814697266

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0077333273366093636
    2. ']*(' → logprob: -5.007733345031738
    3. ']*' → logprob: -7.007733345031738
    4. ' for' → logprob: -9.132733345031738
    5. 'for' → logprob: -13.507733345031738
    6. '*' → logprob: -14.007733345031738
    7. ')' → logprob: -14.257733345031738
    8. ' ]' → logprob: -14.632733345031738
    9. ' *' → logprob: -14.632733345031738
    10. '   ' → logprob: -14.757733345031738

Token 317: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.55660080909729
    2. '*' → logprob: -1.05660080909729
    3. '*(' → logprob: -3.05660080909729
    4. ' for' → logprob: -4.306600570678711
    5. '*[' → logprob: -5.306600570678711
    6. '[' → logprob: -5.556600570678711
    7. 'for' → logprob: -5.681600570678711
    8. ']' → logprob: -6.556600570678711
    9. ']*(' → logprob: -6.681600570678711
    10. '[N' → logprob: -7.306600570678711

Token 318: ' (' (ID: 350)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.00038145645521581173
    2. '   ' → logprob: -8.625381469726562
    3. '(n' → logprob: -9.375381469726562
    4. ' (' → logprob: -9.875381469726562
    5. '(' → logprob: -9.875381469726562
    6. 'N' → logprob: -12.875381469726562
    7. '       ' → logprob: -12.875381469726562
    8. '
' → logprob: -13.250381469726562
    9. '((' → logprob: -14.125381469726562
    10. '  ' → logprob: -14.250381469726562

Token 319: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.08001440018415451
    2. '(N' → logprob: -2.58001446723938
    3. '   ' → logprob: -6.955014228820801
    4. ' N' → logprob: -9.3300142288208
    5. ' (' → logprob: -9.8300142288208
    6. '	N' → logprob: -12.2050142288208
    7. '(' → logprob: -12.3300142288208
    8. ' ' → logprob: -12.5800142288208
    9. '  ' → logprob: -12.7050142288208
    10. '    ' → logprob: -13.2050142288208

Token 320: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -12.750004768371582
    3. ' ' → logprob: -14.625004768371582
    4. '   ' → logprob: -15.375004768371582
    5. '₂' → logprob: -15.812504768371582
    6. '۲' → logprob: -16.000003814697266
    7. '
' → logprob: -16.187503814697266
    8. ' -' → logprob: -16.437503814697266
    9. '_' → logprob: -16.500003814697266
    10. '```' → logprob: -16.562503814697266

Token 321: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.005267549771815538
    2. ' -' → logprob: -5.25526762008667
    3. ')' → logprob: -11.005267143249512
    4. '2' → logprob: -11.505267143249512
    5. '   ' → logprob: -12.755267143249512
    6. '1' → logprob: -13.505267143249512
    7. '```' → logprob: -13.505267143249512
    8. '-)' → logprob: -14.630267143249512
    9. ' ' → logprob: -15.130267143249512
    10. '-
' → logprob: -15.380267143249512

Token 322: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -16.187501907348633
    4. '2' → logprob: -16.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '۱' → logprob: -17.750001907348633
    7. '0' → logprob: -17.875001907348633
    8. '１' → logprob: -18.250001907348633
    9. '  ' → logprob: -18.312501907348633
    10. ')' → logprob: -18.437501907348633

Token 323: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.5
    3. '   ' → logprob: -17.125
    4. '2' → logprob: -17.125
    5. '0' → logprob: -17.75
    6. '```' → logprob: -17.8125
    7. '１' → logprob: -18.375
    8. '
' → logprob: -18.8125
    9. ')' → logprob: -18.9375
    10. '۱' → logprob: -19.5

Token 324: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.1008713702030946e-06
    2. ')
' → logprob: -13.500001907348633
    3. '   ' → logprob: -14.625001907348633
    4. ' )' → logprob: -15.625001907348633
    5. '),' → logprob: -18.000001907348633
    6. '<|end|>' → logprob: -18.500001907348633
    7. ')

' → logprob: -18.625001907348633
    8. ')}' → logprob: -18.625001907348633
    9. ')...' → logprob: -18.875001907348633
    10. ')]' → logprob: -18.875001907348633

Token 325: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.45499521493911743
    2. '   ' → logprob: -1.5799951553344727
    3. ' for' → logprob: -2.3299951553344727
    4. '
' → logprob: -2.8299951553344727
    5. ')' → logprob: -6.329995155334473
    6. '    
' → logprob: -7.329995155334473
    7. '	for' → logprob: -8.329995155334473
    8. '  
' → logprob: -8.579995155334473
    9. '<|end|>' → logprob: -8.954995155334473
    10. ' 
' → logprob: -9.954995155334473

Token 326: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0931495800614357
    2. 'for' → logprob: -3.2181496620178223
    3. ' for' → logprob: -3.7181496620178223
    4. '   ' → logprob: -3.8431496620178223
    5. '    
' → logprob: -6.468149662017822
    6. '  
' → logprob: -7.468149662017822
    7. ' 
' → logprob: -7.968149662017822
    8. '	for' → logprob: -8.968149185180664
    9. ')' → logprob: -9.218149185180664
    10. '<|end|>' → logprob: -9.218149185180664

Token 327: ' Base' (ID: 8729)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.44353142380714417
    2. ' for' → logprob: -1.0685313940048218
    3. ')' → logprob: -4.318531513214111
    4. '
' → logprob: -7.568531513214111
    5. '   ' → logprob: -7.943531513214111
    6. ' ' → logprob: -8.943531036376953
    7. ' 
' → logprob: -9.318531036376953
    8. 'dp' → logprob: -9.693531036376953
    9. ' )' → logprob: -10.193531036376953
    10. '	for' → logprob: -10.443531036376953

Token 328: ' case' (ID: 1890)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5534211993217468
    2. '<|end|>' → logprob: -1.3034212589263916
    3. 'dp' → logprob: -2.4284212589263916
    4. '   ' → logprob: -3.4284212589263916
    5. ')' → logprob: -4.5534210205078125
    6. 'd' → logprob: -5.6784210205078125
    7. ' ' → logprob: -5.6784210205078125
    8. '0' → logprob: -5.8034210205078125
    9. '    ' → logprob: -6.1784210205078125
    10. '[
' → logprob: -6.3034210205078125

Token 329: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1020432710647583
    2. '
' → logprob: -1.3520432710647583
    3. '   ' → logprob: -1.6020432710647583
    4. 'for' → logprob: -1.7270432710647583
    5. '<|end|>' → logprob: -3.9770431518554688
    6. '    
' → logprob: -5.602043151855469
    7. ')' → logprob: -5.977043151855469
    8. '  
' → logprob: -6.602043151855469
    9. ' 
' → logprob: -7.352043151855469
    10. ' ' → logprob: -7.477043151855469

Token 330: ' one' (ID: 1001)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9507145285606384
    2. 'for' → logprob: -1.3257145881652832
    3. 'dp' → logprob: -1.8257145881652832
    4. ')' → logprob: -2.575714588165283
    5. '0' → logprob: -2.825714588165283
    6. ' dp' → logprob: -4.200714588165283
    7. '<|end|>' → logprob: -4.200714588165283
    8. ' ' → logprob: -4.950714588165283
    9. '[' → logprob: -5.575714588165283
    10. '1' → logprob: -6.325714588165283

Token 331: ' way' (ID: 2006)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11518976837396622
    2. 'way' → logprob: -3.740189790725708
    3. 'def' → logprob: -4.115189552307129
    4. '<|end|>' → logprob: -4.240189552307129
    5. ' for' → logprob: -4.365189552307129
    6. 'ways' → logprob: -4.490189552307129
    7. 'for' → logprob: -4.990189552307129
    8. ' dp' → logprob: -5.490189552307129
    9. ' ways' → logprob: -5.615189552307129
    10. '
' → logprob: -5.615189552307129

Token 332: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10395026952028275
    2. ' for' → logprob: -2.853950262069702
    3. '<|end|>' → logprob: -3.353950262069702
    4. 'for' → logprob: -5.353950500488281
    5. ')' → logprob: -7.353950500488281
    6. '	for' → logprob: -8.103950500488281
    7. '<|end|>' → logprob: -8.603950500488281
    8. '
' → logprob: -9.228950500488281
    9. '    
' → logprob: -9.478950500488281
    10. ' ' → logprob: -10.353950500488281

Token 333: ' reach' (ID: 7627)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -1.1881169080734253
    2. 'reach' → logprob: -1.3131169080734253
    3. 'stay' → logprob: -1.6881169080734253
    4. 'be' → logprob: -2.063117027282715
    5. 'stand' → logprob: -2.688117027282715
    6. ' stand' → logprob: -4.938117027282715
    7. ' be' → logprob: -5.188117027282715
    8. ' reach' → logprob: -5.313117027282715
    9. ' stay' → logprob: -5.313117027282715
    10. '0' → logprob: -5.313117027282715

Token 334: ' the' (ID: 290)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.1895432025194168
    2. ' position' → logprob: -2.8145432472229004
    3. 'the' → logprob: -2.9395432472229004
    4. '0' → logprob: -3.6895432472229004
    5. 'index' → logprob: -3.6895432472229004
    6. ' the' → logprob: -5.5645432472229
    7. 'dp' → logprob: -5.9395432472229
    8. ' index' → logprob: -6.6895432472229
    9. ' ' → logprob: -7.3145432472229
    10. 'pos' → logprob: -7.4395432472229

Token 335: ' first' (ID: 1577)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4813288152217865
    2. 'first' → logprob: -0.9813288450241089
    3. 'start' → logprob: -5.481328964233398
    4. ' first' → logprob: -6.231328964233398
    5. ' ' → logprob: -7.731328964233398
    6. 'starting' → logprob: -7.856328964233398
    7. 'position' → logprob: -8.731328964233398
    8. '[' → logprob: -10.731328964233398
    9. 'initial' → logprob: -10.856328964233398
    10. 'last' → logprob: -11.856328964233398

Token 336: ' element' (ID: 3577)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'position' → logprob: -0.21682821214199066
    2. 'element' → logprob: -1.8418282270431519
    3. ' position' → logprob: -3.8418281078338623
    4. ' element' → logprob: -4.841828346252441
    5. 'index' → logprob: -5.716828346252441
    6. 'token' → logprob: -5.841828346252441
    7. 'dp' → logprob: -7.841828346252441
    8. 'point' → logprob: -8.841828346252441
    9. 'pos' → logprob: -9.216828346252441
    10. '0' → logprob: -9.716828346252441

Token 337: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3444889783859253
    2. ' for' → logprob: -1.5944889783859253
    3. 'for' → logprob: -2.969489097595215
    4. '
' → logprob: -3.469489097595215
    5. '    
' → logprob: -6.719489097595215
    6. '<|end|>' → logprob: -6.719489097595215
    7. ')' → logprob: -6.844489097595215
    8. '	for' → logprob: -6.969489097595215
    9. ' ' → logprob: -7.594489097595215
    10. '  
' → logprob: -8.219489097595215

Token 338: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5507481098175049
    2. 'for' → logprob: -1.1757481098175049
    3. ' for' → logprob: -2.175748109817505
    4. '
' → logprob: -6.925747871398926
    5. '	for' → logprob: -8.675747871398926
    6. '    
' → logprob: -9.175747871398926
    7. '[' → logprob: -10.925747871398926
    8. ',' → logprob: -11.425747871398926
    9. ')' → logprob: -11.425747871398926
    10. '```' → logprob: -11.425747871398926

Token 339: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.001019590417854488
    2. 'from' → logprob: -7.751019477844238
    3. ' for' → logprob: -8.501019477844238
    4. 'prev' → logprob: -8.501019477844238
    5. '   ' → logprob: -10.001019477844238
    6. 'last' → logprob: -10.251019477844238
    7. 'dp' → logprob: -10.751019477844238
    8. 'prefix' → logprob: -10.751019477844238
    9. 'acc' → logprob: -11.501019477844238
    10. 'pre' → logprob: -12.126019477844238

Token 340: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.020618263632059097
    2. ' i' → logprob: -3.895618200302124
    3. '   ' → logprob: -11.395618438720703
    4. 'j' → logprob: -11.395618438720703
    5. 'pos' → logprob: -11.645618438720703
    6. ' ' → logprob: -12.020618438720703
    7. 'idx' → logprob: -12.145618438720703
    8. 'x' → logprob: -12.270618438720703
    9. '	i' → logprob: -12.520618438720703
    10. 'k' → logprob: -12.520618438720703

Token 341: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806157782673836
    2. 'in' → logprob: -3.2880616188049316
    3. ' ' → logprob: -11.288061141967773
    4. '	in' → logprob: -12.913061141967773
    5. '1' → logprob: -13.288061141967773
    6. ',' → logprob: -14.663061141967773
    7. 'n' → logprob: -14.788061141967773
    8. 's' → logprob: -15.163061141967773
    9. 'i' → logprob: -15.288061141967773
    10. 'In' → logprob: -15.413061141967773

Token 342: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005241583567112684
    2. ' range' → logprob: -5.255241394042969
    3. 'in' → logprob: -12.880241394042969
    4. '   ' → logprob: -13.005241394042969
    5. ' ' → logprob: -13.380241394042969
    6. '(range' → logprob: -15.130241394042969
    7. ' in' → logprob: -15.380241394042969
    8. '  ' → logprob: -15.380241394042969
    9. 'c' → logprob: -15.880241394042969
    10. 'r' → logprob: -16.13024139404297

Token 343: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1292477697134018
    2. '1' → logprob: -2.1292476654052734
    3. 'range' → logprob: -7.129247665405273
    4. '(N' → logprob: -7.504247665405273
    5. ' ' → logprob: -7.879247665405273
    6. ' range' → logprob: -8.754247665405273
    7. 'in' → logprob: -9.004247665405273
    8. '2' → logprob: -9.379247665405273
    9. ' (' → logprob: -9.629247665405273
    10. 'N' → logprob: -9.629247665405273

Token 344: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002255410421639681
    2. 'N' → logprob: -6.127255439758301
    3. 'range' → logprob: -9.7522554397583
    4. ' ' → logprob: -12.2522554397583
    5. '   ' → logprob: -12.5022554397583
    6. '2' → logprob: -13.8772554397583
    7. '(' → logprob: -14.3772554397583
    8. '0' → logprob: -14.7522554397583
    9. ' N' → logprob: -15.2522554397583
    10. '
' → logprob: -15.2522554397583

Token 345: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.955703818472102e-05
    2. ' ,' → logprob: -10.125059127807617
    3. ',N' → logprob: -10.875059127807617
    4. '(N' → logprob: -15.375059127807617
    5. 'N' → logprob: -16.000059127807617
    6. '   ' → logprob: -16.250059127807617
    7. ',
' → logprob: -17.000059127807617
    8. ',len' → logprob: -17.375059127807617
    9. '(' → logprob: -18.000059127807617
    10. ' ' → logprob: -18.250059127807617

Token 346: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -4.6087021473795176e-05
    2. ' N' → logprob: -10.000045776367188
    3. '   ' → logprob: -14.250045776367188
    4. 'len' → logprob: -17.875045776367188
    5. '	N' → logprob: -19.625045776367188
    6. '       ' → logprob: -20.250045776367188
    7. ' ' → logprob: -20.500045776367188
    8. ')' → logprob: -20.625045776367188
    9. '(N' → logprob: -21.125045776367188
    10. '```' → logprob: -21.125045776367188

Token 347: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00015633940347470343
    2. '):' → logprob: -9.12515640258789
    3. '):
' → logprob: -10.25015640258789
    4. '₂' → logprob: -12.37515640258789
    5. ')' → logprob: -12.75015640258789
    6. '```' → logprob: -13.25015640258789
    7. '²' → logprob: -14.00015640258789
    8. '+' → logprob: -14.25015640258789
    9. '   ' → logprob: -14.37515640258789
    10. '۲' → logprob: -15.37515640258789

Token 348: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.575985312461853
    2. '):
' → logprob: -0.825985312461853
    3. ':' → logprob: -10.325984954833984
    4. '   ' → logprob: -12.825984954833984
    5. '+' → logprob: -12.825984954833984
    6. '):
' → logprob: -12.950984954833984
    7. ':
' → logprob: -13.200984954833984
    8. ')' → logprob: -13.950984954833984
    9. '):

' → logprob: -14.575984954833984
    10. ' ):' → logprob: -14.575984954833984

Token 349: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3274688720703125
    2. 'dp' → logprob: -1.7024688720703125
    3. ' dp' → logprob: -2.9524688720703125
    4. '       ' → logprob: -3.9524688720703125
    5. ' if' → logprob: -4.2024688720703125
    6. 'if' → logprob: -5.8274688720703125
    7. ' s' → logprob: -6.9524688720703125
    8. 'c' → logprob: -7.0774688720703125
    9. '    ' → logprob: -7.0774688720703125
    10. ' c' → logprob: -7.2024688720703125

Token 350: ' c' (ID: 274)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.008605947718024254
    2. 'if' → logprob: -4.88360595703125
    3. 'prev' → logprob: -8.25860595703125
    4. 'c' (adapté à ' c') → logprob: -8.25860595703125
    5. '   ' → logprob: -8.88360595703125
    6. 'j' → logprob: -9.63360595703125
    7. 'val' → logprob: -10.13360595703125
    8. 'for' → logprob: -10.13360595703125
    9. 'v' → logprob: -10.50860595703125
    10. '#' → logprob: -10.50860595703125

Token 351: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28297683596611023
    2. ' =' → logprob: -1.4079768657684326
    3. 'c' → logprob: -7.0329766273498535
    4. '2' → logprob: -8.282977104187012
    5. 'dp' → logprob: -8.532977104187012
    6. '=c' → logprob: -9.407977104187012
    7. 'i' → logprob: -9.532977104187012
    8. '   ' → logprob: -9.657977104187012
    9. '=i' → logprob: -9.782977104187012
    10. 'curr' → logprob: -10.032977104187012

Token 352: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0005538671393878758
    2. ' c' → logprob: -7.500554084777832
    3. '   ' → logprob: -14.125554084777832
    4. '	c' → logprob: -16.125553131103516
    5. 'cl' → logprob: -17.625553131103516
    6. '_c' → logprob: -18.500553131103516
    7. ')c' → logprob: -18.625553131103516
    8. 'cd' → logprob: -19.125553131103516
    9. ' ' → logprob: -19.625553131103516
    10. '$c' → logprob: -20.125553131103516

Token 353: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005574395763687789
    2. ' =' → logprob: -8.000557899475098
    3. '=' → logprob: -8.875557899475098
    4. 'c' → logprob: -9.875557899475098
    5. '=c' → logprob: -10.875557899475098
    6. 'list' → logprob: -12.250557899475098
    7. '
' → logprob: -13.500557899475098
    8. '   ' → logprob: -13.500557899475098
    9. ' ' → logprob: -13.875557899475098
    10. '```' → logprob: -14.938057899475098

Token 354: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.001054007327184081
    2. 'c' → logprob: -6.876053810119629
    3. '2' → logprob: -10.876053810119629
    4. 'cl' → logprob: -13.876053810119629
    5. '[c' → logprob: -14.126053810119629
    6. ' c' → logprob: -16.251054763793945
    7. '_list' → logprob: -16.751054763793945
    8. '```' → logprob: -16.751054763793945
    9. '...' → logprob: -17.001054763793945
    10. '_c' → logprob: -17.001054763793945

Token 355: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001331667648628354
    2. 'i' → logprob: -6.876331806182861
    3. 'c' → logprob: -9.126331329345703
    4. ' =' → logprob: -9.751331329345703
    5. '_i' → logprob: -10.251331329345703
    6. '=' → logprob: -10.876331329345703
    7. '[c' → logprob: -11.001331329345703
    8. '
' → logprob: -11.126331329345703
    9. '   ' → logprob: -11.376331329345703
    10. '=i' → logprob: -11.751331329345703

Token 356: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16240325570106506
    2. ')' → logprob: -2.0374033451080322
    3. ']
' → logprob: -4.287403106689453
    4. ']' → logprob: -5.412403106689453
    5. '       ' → logprob: -7.162403106689453
    6. '   ' → logprob: -8.912403106689453
    7. ')
' → logprob: -8.912403106689453
    8. '])' → logprob: -9.287403106689453
    9. '])
' → logprob: -9.537403106689453
    10. ')]' → logprob: -9.912403106689453

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05741892382502556
    2. 'dp' → logprob: -3.5574188232421875
    3. ' dp' → logprob: -3.9324188232421875
    4. '   ' → logprob: -5.9324188232421875
    5. ' if' → logprob: -6.4324188232421875
    6. '        
' → logprob: -6.8074188232421875
    7. ',' → logprob: -7.8074188232421875
    8. '	dp' → logprob: -8.182418823242188
    9. '
' → logprob: -8.557418823242188
    10. 'if' → logprob: -8.682418823242188

Token 358: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.2081315666437149
    2. 'prev' → logprob: -2.0831315517425537
    3. 'j' → logprob: -3.8331315517425537
    4. 'idx' → logprob: -3.9581315517425537
    5. 'if' → logprob: -4.958131790161133
    6. 'pos' → logprob: -5.208131790161133
    7. 'for' → logprob: -5.958131790161133
    8. '#' → logprob: -6.708131790161133
    9. '   ' → logprob: -7.208131790161133
    10. 'total' → logprob: -7.208131790161133

Token 359: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1994775377388578e-05
    2. '[' → logprob: -11.500012397766113
    3. '[j' → logprob: -15.125012397766113
    4. '[-' → logprob: -15.125012397766113
    5. 'i' → logprob: -15.625012397766113
    6. '\[' → logprob: -15.625012397766113
    7. ' [' → logprob: -16.000011444091797
    8. 'dp' → logprob: -16.000011444091797
    9. '
' → logprob: -16.000011444091797
    10. '```' → logprob: -16.125011444091797

Token 360: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5110186338424683
    2. '=' → logprob: -1.0110186338424683
    3. ' =' → logprob: -3.511018753051758
    4. ']=' → logprob: -6.136018753051758
    5. ']+=' → logprob: -6.136018753051758
    6. ' +=' → logprob: -7.136018753051758
    7. ' ]' → logprob: -7.261018753051758
    8. '+=' → logprob: -7.636018753051758
    9. ')' → logprob: -9.511018753051758
    10. ' ' → logprob: -11.886018753051758

Token 361: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006435637827962637
    2. '+=' → logprob: -5.631435871124268
    3. ' =' → logprob: -5.881435871124268
    4. ' +=' → logprob: -10.13143539428711
    5. '=
' → logprob: -15.25643539428711
    6. '=

' → logprob: -15.38143539428711
    7. '%=' → logprob: -15.50643539428711
    8. '.=' → logprob: -16.13143539428711
    9. '=(' → logprob: -16.75643539428711
    10. '   ' → logprob: -16.75643539428711

Token 362: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1318773627281189
    2. '(dp' → logprob: -2.1318774223327637
    3. '(' → logprob: -5.756877422332764
    4. 'sum' → logprob: -7.256877422332764
    5. '0' → logprob: -7.631877422332764
    6. '1' → logprob: -8.006876945495605
    7. ' dp' → logprob: -9.381876945495605
    8. '(sum' → logprob: -10.131876945495605
    9. '(
' → logprob: -10.756876945495605
    10. ' (' → logprob: -10.881876945495605

Token 363: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.128163257315464e-07
    2. '[' → logprob: -15.875
    3. '[-' → logprob: -17.0
    4. 'i' → logprob: -17.75
    5. '[c' → logprob: -18.5
    6. 'dp' → logprob: -18.625
    7. '[I' → logprob: -19.375
    8. '[j' → logprob: -19.5
    9. '(i' → logprob: -20.125
    10. '[s' → logprob: -20.25

Token 364: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00017445837147533894
    2. ' -' → logprob: -9.000174522399902
    3. '[i' → logprob: -10.375174522399902
    4. ']' → logprob: -11.000174522399902
    5. '[-' → logprob: -13.875174522399902
    6. '   ' → logprob: -14.125174522399902
    7. 'i' → logprob: -14.125174522399902
    8. '1' → logprob: -16.000173568725586
    9. ' ' → logprob: -16.000173568725586
    10. '```' → logprob: -16.000173568725586

Token 365: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.500011444091797
    3. '```' → logprob: -15.312511444091797
    4. '   ' → logprob: -15.437511444091797
    5. ']' → logprob: -16.187511444091797
    6. '
' → logprob: -16.187511444091797
    7. '2' → logprob: -16.562511444091797
    8. '...' → logprob: -16.875011444091797
    9. '0' → logprob: -16.937511444091797
    10. ')' → logprob: -17.062511444091797

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.750001907348633
    3. '```' → logprob: -16.125001907348633
    4. '0' → logprob: -16.375001907348633
    5. '   ' → logprob: -16.625001907348633
    6. '2' → logprob: -16.750001907348633
    7. '
' → logprob: -16.937501907348633
    8. ']' → logprob: -17.687501907348633
    9. '۱' → logprob: -17.750001907348633
    10. 'i' → logprob: -17.750001907348633

Token 367: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.03634985536336899
    2. ']%' → logprob: -3.6613497734069824
    3. ' ]' → logprob: -5.661349773406982
    4. ')' → logprob: -5.661349773406982
    5. '%' → logprob: -6.036349773406982
    6. ']+' → logprob: -8.91135025024414
    7. '])' → logprob: -9.03635025024414
    8. ')%' → logprob: -9.16135025024414
    9. '+' → logprob: -9.66135025024414
    10. '<|end|>' → logprob: -9.78635025024414

Token 368: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.32122722268104553
    2. '+' → logprob: -1.8212271928787231
    3. '%' → logprob: -2.3212273120880127
    4. ' +' → logprob: -4.696227073669434
    5. ' %' → logprob: -5.946227073669434
    6. '       ' → logprob: -7.321227073669434
    7. '+
' → logprob: -7.821227073669434
    8. 'if' → logprob: -7.946227073669434
    9. ' if' → logprob: -7.946227073669434
    10. '<|end|>' → logprob: -8.696227073669434

Token 369: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5052595138549805
    2. '+' → logprob: -1.0052595138549805
    3. ' +' → logprob: -3.6302595138549805
    4. '       ' → logprob: -6.1302595138549805
    5. '+
' → logprob: -7.3802595138549805
    6. '
' → logprob: -7.8802595138549805
    7. '%' → logprob: -8.13025951385498
    8. ' if' → logprob: -8.50525951385498
    9. 'if' → logprob: -8.50525951385498
    10. ' 
' → logprob: -9.50525951385498

Token 370: ' Always' (ID: 30141)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8455823063850403
    2. '
' → logprob: -1.5955822467803955
    3. ' if' → logprob: -2.0955822467803955
    4. '+' → logprob: -2.2205822467803955
    5. 'for' → logprob: -2.5955822467803955
    6. ' +' → logprob: -3.9705822467803955
    7. ' 
' → logprob: -4.345582485198975
    8. ' for' → logprob: -4.720582485198975
    9. 'prev' → logprob: -5.595582485198975
    10. 'dp' → logprob: -5.595582485198975

Token 371: ' can' (ID: 665)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031932227313518524
    2. ' +' → logprob: -3.7819321155548096
    3. ' +=' → logprob: -5.781932353973389
    4. '+=' → logprob: -5.906932353973389
    5. '<|end|>' → logprob: -7.531932353973389
    6. ')' → logprob: -7.656932353973389
    7. ' ' → logprob: -8.03193187713623
    8. '*' → logprob: -8.40693187713623
    9. '=' → logprob: -8.65693187713623
    10. ']+=' → logprob: -9.03193187713623

Token 372: ' continue' (ID: 4901)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8789554834365845
    2. 'move' → logprob: -2.253955364227295
    3. 'continue' → logprob: -2.503955364227295
    4. 'go' → logprob: -2.878955364227295
    5. 'advance' → logprob: -3.003955364227295
    6. 'pass' → logprob: -3.128955364227295
    7. 'reach' → logprob: -3.128955364227295
    8. 'add' → logprob: -3.503955364227295
    9. ' dp' → logprob: -3.503955364227295
    10. 'take' → logprob: -3.503955364227295

Token 373: ' from' (ID: 591)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5179525017738342
    2. '       ' → logprob: -1.2679524421691895
    3. ' +' → logprob: -2.7679524421691895
    4. '+' → logprob: -3.7679524421691895
    5. '<|end|>' → logprob: -4.3929524421691895
    6. '        
' → logprob: -4.7679524421691895
    7. ' if' → logprob: -5.6429524421691895
    8. ' 
' → logprob: -5.8929524421691895
    9. '        ' → logprob: -6.0179524421691895
    10. '+
' → logprob: -6.6429524421691895

Token 374: ' the' (ID: 290)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.9595663547515869
    2. 'i' → logprob: -1.459566354751587
    3. 'previous' → logprob: -2.209566354751587
    4. 'the' → logprob: -2.209566354751587
    5. ' the' → logprob: -2.709566354751587
    6. ' dp' → logprob: -3.084566354751587
    7. ' previous' → logprob: -3.709566354751587
    8. ' i' → logprob: -3.709566354751587
    9. '[i' → logprob: -5.959566116333008
    10. 'prev' → logprob: -6.834566116333008

Token 375: ' previous' (ID: 5880)
  Prédit: 'previous'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'previous' → logprob: -0.17692629992961884
    2. ' previous' → logprob: -1.9269262552261353
    3. 'i' → logprob: -4.176926136016846
    4. '[i' → logprob: -7.426926136016846
    5. ' i' → logprob: -8.051926612854004
    6. 'prev' → logprob: -8.551926612854004
    7. 'dp' → logprob: -9.926926612854004
    8. 'im' → logprob: -11.051926612854004
    9. 'last' → logprob: -11.926926612854004
    10. '(i' → logprob: -11.926926612854004

Token 376: ' position' (ID: 4010)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.9234992861747742
    2. 'token' → logprob: -1.673499345779419
    3. 'dp' → logprob: -2.048499345779419
    4. '+' → logprob: -3.298499345779419
    5. '[' → logprob: -3.298499345779419
    6. ' token' → logprob: -3.423499345779419
    7. 'i' → logprob: -3.423499345779419
    8. 'position' → logprob: -3.423499345779419
    9. ')' → logprob: -3.423499345779419
    10. ' dp' → logprob: -4.17349910736084

Token 377: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1461568921804428
    2. ' if' → logprob: -2.6461567878723145
    3. 'if' → logprob: -3.8961567878723145
    4. '
' → logprob: -4.2711567878723145
    5. '        
' → logprob: -4.3961567878723145
    6. '<|end|>' → logprob: -5.2711567878723145
    7. 'prev' → logprob: -5.8961567878723145
    8. '   ' → logprob: -6.0211567878723145
    9. ' for' → logprob: -6.8961567878723145
    10. 'for' → logprob: -7.2711567878723145

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7724623084068298
    2. ' if' → logprob: -2.0224623680114746
    3. '
' → logprob: -2.1474623680114746
    4. '+' → logprob: -2.6474623680114746
    5. '<|end|>' → logprob: -2.6474623680114746
    6. 'if' → logprob: -3.0224623680114746
    7. '   ' → logprob: -3.6474623680114746
    8. ' +' → logprob: -3.7724623680114746
    9. 'for' → logprob: -4.647462368011475
    10. '        
' → logprob: -4.647462368011475

Token 379: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13841769099235535
    2. 'if' → logprob: -2.1384177207946777
    3. 'prev' → logprob: -5.263417720794678
    4. 'last' → logprob: -6.013417720794678
    5. 'positions' → logprob: -6.763417720794678
    6. '       ' → logprob: -6.888417720794678
    7. ' for' → logprob: -8.01341724395752
    8. 'pos' → logprob: -8.01341724395752
    9. 'indices' → logprob: -8.51341724395752
    10. 'lst' → logprob: -8.51341724395752

Token 380: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20273426175117493
    2. 'if' → logprob: -1.9527342319488525
    3. 'prev' → logprob: -3.3277342319488525
    4. 'positions' → logprob: -5.827734470367432
    5. 'last' → logprob: -6.452734470367432
    6. 'pos' → logprob: -8.077733993530273
    7. '       ' → logprob: -8.327733993530273
    8. 'indices' → logprob: -8.452733993530273
    9. 'idx' → logprob: -8.952733993530273
    10. 'lst' → logprob: -9.952733993530273

Token 381: ' current' (ID: 2208)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.47543591260910034
    2. ' pos' → logprob: -1.7254359722137451
    3. 'prev' → logprob: -2.475435972213745
    4. ' prev' → logprob: -3.475435972213745
    5. 'c' → logprob: -3.850435972213745
    6. ' c' → logprob: -4.100435733795166
    7. 'p' → logprob: -4.475435733795166
    8. 'j' → logprob: -4.475435733795166
    9. ' j' → logprob: -4.850435733795166
    10. ' p' → logprob: -5.475435733795166

Token 382: ' value' (ID: 1432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.47646957635879517
    2. ' c' → logprob: -0.9764695763587952
    3. 'i' → logprob: -7.72646951675415
    4. 'token' → logprob: -8.351469993591309
    5. 'value' → logprob: -8.601469993591309
    6. '_c' → logprob: -8.976469993591309
    7. '```' → logprob: -8.976469993591309
    8. ' i' → logprob: -9.101469993591309
    9. ' =' → logprob: -9.101469993591309
    10. '=' → logprob: -9.101469993591309

Token 383: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1065418720245361
    2. ' c' → logprob: -1.4815418720245361
    3. ',' → logprob: -2.106541872024536
    4. 'c' → logprob: -2.106541872024536
    5. 'if' → logprob: -2.731541872024536
    6. ' if' → logprob: -3.231541872024536
    7. ' =' → logprob: -3.856541872024536
    8. 'prev' → logprob: -4.106541633605957
    9. 'in' → logprob: -4.231541633605957
    10. 'positions' → logprob: -4.731541633605957

Token 384: ' add' (ID: 1147)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06310564279556274
    2. ' for' → logprob: -3.438105583190918
    3. 'positions' → logprob: -4.063105583190918
    4. '       ' → logprob: -5.313105583190918
    5. 'prev' → logprob: -5.938105583190918
    6. 'if' → logprob: -6.438105583190918
    7. 'indices' → logprob: -6.938105583190918
    8. ' positions' → logprob: -6.938105583190918
    9. 'pos' → logprob: -8.063105583190918
    10. 'idx' → logprob: -9.563105583190918

Token 385: ' valid' (ID: 4529)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.7764137387275696
    2. ' dp' → logprob: -0.7764137387275696
    3. 'sum' → logprob: -2.901413679122925
    4. '(dp' → logprob: -4.401413917541504
    5. ' sum' → logprob: -4.651413917541504
    6. ' (' → logprob: -7.151413917541504
    7. '       ' → logprob: -8.026413917541504
    8. ')' → logprob: -8.401413917541504
    9. '_dp' → logprob: -8.401413917541504
    10. '(sum' → logprob: -8.776413917541504

Token 386: ' jumps' (ID: 65613)
  Prédit: ' ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ways' → logprob: -0.7718685269355774
    2. 'ways' → logprob: -1.5218684673309326
    3. 'dp' → logprob: -1.8968684673309326
    4. ' dp' → logprob: -2.2718684673309326
    5. ' previous' → logprob: -4.271868705749512
    6. 'previous' → logprob: -4.521868705749512
    7. 'indices' → logprob: -4.771868705749512
    8. 'positions' → logprob: -5.021868705749512
    9. 'prev' → logprob: -5.771868705749512
    10. 'j' → logprob: -6.146868705749512

Token 387: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6923680901527405
    2. '       ' → logprob: -1.8173680305480957
    3. ' from' → logprob: -1.9423680305480957
    4. 'dp' → logprob: -2.8173680305480957
    5. ' +' → logprob: -3.4423680305480957
    6. '+' → logprob: -3.4423680305480957
    7. '=' → logprob: -4.192368030548096
    8. ' dp' → logprob: -4.567368030548096
    9. 'for' → logprob: -5.192368030548096
    10. '-' → logprob: -5.317368030548096

Token 388: ' previous' (ID: 5880)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.6182816028594971
    2. ' cd' → logprob: -1.368281602859497
    3. 'previous' → logprob: -2.618281602859497
    4. ' previous' → logprob: -3.243281602859497
    5. 'all' → logprob: -3.618281602859497
    6. ' all' → logprob: -3.618281602859497
    7. 'prev' → logprob: -4.868281364440918
    8. 'positions' → logprob: -4.868281364440918
    9. 'each' → logprob: -5.243281364440918
    10. ' positions' → logprob: -5.368281364440918

Token 389: ' occurrences' (ID: 108073)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.30317211151123047
    2. 'indices' → logprob: -2.0531721115112305
    3. 'occ' → logprob: -2.5531721115112305
    4. ' positions' → logprob: -3.5531721115112305
    5. ' occurrences' → logprob: -4.1781721115112305
    6. 'indexes' → logprob: -5.1781721115112305
    7. ' indices' → logprob: -5.4281721115112305
    8. 'occur' → logprob: -7.9281721115112305
    9. ' indexes' → logprob: -8.80317211151123
    10. 'c' → logprob: -8.92817211151123

Token 390: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02289961464703083
    2. ' of' → logprob: -4.522899627685547
    3. 'for' → logprob: -5.522899627685547
    4. 'of' → logprob: -6.147899627685547
    5. ' for' → logprob: -6.147899627685547
    6. '[c' → logprob: -7.147899627685547
    7. '[' → logprob: -7.397899627685547
    8. 'dp' → logprob: -7.772899627685547
    9. ' if' → logprob: -8.522899627685547
    10. ',' → logprob: -8.522899627685547

Token 391: ' the' (ID: 290)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0184848103672266
    2. ' c' → logprob: -4.018484592437744
    3. ' the' → logprob: -8.893485069274902
    4. 'the' → logprob: -8.893485069274902
    5. '       ' → logprob: -10.643485069274902
    6. '   ' → logprob: -11.393485069274902
    7. '```' → logprob: -11.893485069274902
    8. '           ' → logprob: -12.268485069274902
    9. 'this' → logprob: -12.518485069274902
    10. '
' → logprob: -13.143485069274902

Token 392: ' same' (ID: 2684)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.002382664941251278
    2. ' c' → logprob: -6.752382755279541
    3. 'same' → logprob: -6.877382755279541
    4. ' same' → logprob: -9.002382278442383
    5. 'token' → logprob: -10.877382278442383
    6. 'value' → logprob: -11.502382278442383
    7. 'current' → logprob: -12.002382278442383
    8. '```' → logprob: -12.127382278442383
    9. '       ' → logprob: -12.252382278442383
    10. '   ' → logprob: -12.752382278442383

Token 393: ' value' (ID: 1432)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009758212603628635
    2. 'value' → logprob: -4.884757995605469
    3. ' c' → logprob: -6.384757995605469
    4. ' value' → logprob: -8.009757995605469
    5. 'token' → logprob: -9.634757995605469
    6. '   ' → logprob: -10.759757995605469
    7. '
' → logprob: -11.509757995605469
    8. '```' → logprob: -12.134757995605469
    9. '\t' → logprob: -12.384757995605469
    10. 'line' → logprob: -12.634757995605469

Token 394: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010963166132569313
    2. ' for' → logprob: -5.635962963104248
    3. ',' → logprob: -6.010962963104248
    4. '
' → logprob: -7.010962963104248
    5. '[' → logprob: -7.260962963104248
    6. '        
' → logprob: -7.385962963104248
    7. 'for' → logprob: -7.510962963104248
    8. ':' → logprob: -7.885962963104248
    9. '   ' → logprob: -7.885962963104248
    10. ' if' → logprob: -8.510963439941406

Token 395: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002019643783569336
    2. ' for' → logprob: -6.627019882202148
    3. 'for' → logprob: -8.002019882202148
    4. '        
' → logprob: -8.877019882202148
    5. 'prev' → logprob: -9.752019882202148
    6. '
' → logprob: -10.127019882202148
    7. '	' → logprob: -10.627019882202148
    8. ',' → logprob: -11.127019882202148
    9. '   ' → logprob: -11.377019882202148
    10. ' previous' → logprob: -11.377019882202148

Token 396: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23281492292881012
    2. ' for' → logprob: -1.607814908027649
    3. '       ' → logprob: -5.107814788818359
    4. 'prev' → logprob: -6.982814788818359
    5. 'positions' → logprob: -9.48281478881836
    6. ' prev' → logprob: -9.60781478881836
    7. ' positions' → logprob: -10.23281478881836
    8. 'idx' → logprob: -10.35781478881836
    9. 'pos' → logprob: -10.73281478881836
    10. 'if' (adapté à ' if') → logprob: -10.73281478881836

Token 397: ' len' (ID: 4631)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.05054984986782074
    2. ' c' → logprob: -3.3005497455596924
    3. 'len' → logprob: -4.5505499839782715
    4. ' len' → logprob: -6.9255499839782715
    5. 'i' → logprob: -7.8005499839782715
    6. 'cd' → logprob: -8.425549507141113
    7. '   ' → logprob: -9.675549507141113
    8. ' i' → logprob: -10.238049507141113
    9. ' ' → logprob: -10.363049507141113
    10. 'dp' → logprob: -10.488049507141113

Token 398: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00013619766104966402
    2. '(d' → logprob: -9.000136375427246
    3. '(' → logprob: -11.500136375427246
    4. ' (' → logprob: -14.125136375427246
    5. 'c' → logprob: -14.375136375427246
    6. '[c' → logprob: -14.625136375427246
    7. '(cd' → logprob: -16.12513542175293
    8. '(
' → logprob: -16.25013542175293
    9. '(s' → logprob: -16.37513542175293
    10. '   ' → logprob: -16.62513542175293

Token 399: 'dic' (ID: 62630)
  Prédit: 'dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dic' → logprob: -0.04700508713722229
    2. '[c' → logprob: -3.2970051765441895
    3. 'ic' → logprob: -4.9220051765441895
    4. '[d' → logprob: -6.7970051765441895
    5. 'cd' → logprob: -8.422004699707031
    6. '[' → logprob: -8.922004699707031
    7. 'sic' → logprob: -9.672004699707031
    8. '(dic' → logprob: -10.297004699707031
    9. '_dic' → logprob: -11.297004699707031
    10. 'oric' → logprob: -11.672004699707031

Token 400: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.2200749754119897e-06
    2. 'c' → logprob: -13.625001907348633
    3. ')' → logprob: -14.625001907348633
    4. '[' → logprob: -15.250001907348633
    5. ' [' → logprob: -16.375001907348633
    6. ')c' → logprob: -16.375001907348633
    7. '[
' → logprob: -17.500001907348633
    8. ')>' → logprob: -17.625001907348633
    9. ')[' → logprob: -17.750001907348633
    10. '
' → logprob: -18.000001907348633

Token 401: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.07898463308811188
    2. '[c' → logprob: -2.5789847373962402
    3. '[' → logprob: -10.578984260559082
    4. 'c' → logprob: -10.703984260559082
    5. ')' → logprob: -10.953984260559082
    6. ']' → logprob: -12.078984260559082
    7. '[i' → logprob: -12.328984260559082
    8. '   ' → logprob: -12.828984260559082
    9. ' c' → logprob: -12.828984260559082
    10. ' ])' → logprob: -12.953984260559082

Token 402: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3234781324863434
    2. ' >' → logprob: -1.448478102684021
    3. ' >=' → logprob: -3.5734782218933105
    4. '>=' → logprob: -4.4484782218933105
    5. ')' → logprob: -6.9484782218933105
    6. ')>' → logprob: -7.8234782218933105
    7. ')>=' → logprob: -9.198477745056152
    8. ' and' → logprob: -9.698477745056152
    9. '   ' → logprob: -10.198477745056152
    10. '[' → logprob: -10.448477745056152

Token 403: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.004985997453331947
    2. '=' → logprob: -5.629985809326172
    3. ' ' → logprob: -7.254985809326172
    4. '3' → logprob: -7.379985809326172
    5. '>' → logprob: -10.629985809326172
    6. '1' → logprob: -11.629985809326172
    7. '100' → logprob: -12.254985809326172
    8. '
' → logprob: -12.879985809326172
    9. '>=' → logprob: -13.129985809326172
    10. ')' → logprob: -13.129985809326172

Token 404: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.21009504795074463
    2. '3' → logprob: -1.7100950479507446
    3. '=' → logprob: -4.835094928741455
    4. '100' → logprob: -7.960094928741455
    5. ' ' → logprob: -8.460095405578613
    6. '10' → logprob: -10.210095405578613
    7. '4' → logprob: -10.710095405578613
    8. '300' → logprob: -11.085095405578613
    9. '20' → logprob: -11.835095405578613
    10. '1' → logprob: -11.960095405578613

Token 405: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04093819856643677
    2. ':
' → logprob: -3.415938138961792
    3. ' and' → logprob: -5.415938377380371
    4. '           ' → logprob: -6.665938377380371
    5. '       ' → logprob: -6.915938377380371
    6. '):' → logprob: -8.415938377380371
    7. '   ' → logprob: -9.915938377380371
    8. '):
' → logprob: -10.040938377380371
    9. ' :' → logprob: -10.165938377380371
    10. 'and' → logprob: -10.165938377380371

Token 406: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022812459617853165
    2. ':' → logprob: -4.647812366485596
    3. ' for' → logprob: -5.272812366485596
    4. '       ' → logprob: -5.522812366485596
    5. 'for' → logprob: -6.897812366485596
    6. ':
' → logprob: -7.147812366485596
    7. '<|end|>' → logprob: -7.397812366485596
    8. 'continue' → logprob: -8.147812843322754
    9. ' continue' → logprob: -8.397812843322754
    10. '
' → logprob: -9.397812843322754

Token 407: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008787225931882858
    2. 'prev' → logprob: -6.008787155151367
    3. ' for' → logprob: -6.133787155151367
    4. '       ' → logprob: -6.258787155151367
    5. '           ' → logprob: -7.383787155151367
    6. 'idx' → logprob: -7.508787155151367
    7. 'indices' → logprob: -8.008787155151367
    8. 'dp' → logprob: -8.258787155151367
    9. 'pos' → logprob: -9.633787155151367
    10. 'j' → logprob: -9.633787155151367

Token 408: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07743752002716064
    2. 'prev' → logprob: -3.327437400817871
    3. ' for' → logprob: -3.827437400817871
    4. 'idx' → logprob: -5.452437400817871
    5. '       ' → logprob: -5.827437400817871
    6. 'indices' → logprob: -6.202437400817871
    7. '           ' → logprob: -6.577437400817871
    8. 'j' → logprob: -6.702437400817871
    9. 'last' → logprob: -6.827437400817871
    10. ' prev' → logprob: -7.577437400817871

Token 409: ' few' (ID: 3120)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.37288060784339905
    2. 'j' → logprob: -1.8728805780410767
    3. 'prev' → logprob: -2.747880697250366
    4. 'idx' → logprob: -2.997880697250366
    5. ' pos' → logprob: -4.247880458831787
    6. ' j' → logprob: -4.622880458831787
    7. 'p' → logprob: -5.122880458831787
    8. ' idx' → logprob: -5.372880458831787
    9. ' prev' → logprob: -5.872880458831787
    10. 'x' → logprob: -6.122880458831787

Token 410: ' occurrences' (ID: 108073)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.594150185585022
    2. ' j' → logprob: -1.969150185585022
    3. 'j' → logprob: -2.0941500663757324
    4. ' pos' → logprob: -2.8441500663757324
    5. 'prev' → logprob: -3.3441500663757324
    6. ' idx' → logprob: -4.094150066375732
    7. 'idx' → logprob: -4.094150066375732
    8. 'positions' → logprob: -4.219150066375732
    9. ' positions' → logprob: -4.969150066375732
    10. ' prev' → logprob: -5.094150066375732

Token 411: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7729929685592651
    2. ',' → logprob: -1.5229929685592651
    3. ':
' → logprob: -1.6479929685592651
    4. '           ' → logprob: -2.6479930877685547
    5. '               ' → logprob: -3.3979930877685547
    6. ' for' → logprob: -4.897993087768555
    7. '       ' → logprob: -5.147993087768555
    8. 'for' → logprob: -5.397993087768555
    9. ' in' → logprob: -6.397993087768555
    10. ',
' → logprob: -7.522993087768555

Token 412: ' just' (ID: 1327)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6937063336372375
    2. 'for' → logprob: -0.6937063336372375
    3. '               ' → logprob: -8.068706512451172
    4. '           ' → logprob: -8.693706512451172
    5. 'prev' → logprob: -10.443706512451172
    6. '   ' → logprob: -11.318706512451172
    7. '	for' → logprob: -12.193706512451172
    8. 'indices' → logprob: -12.318706512451172
    9. ' indices' → logprob: -12.693706512451172
    10. ' prev' → logprob: -12.818706512451172

Token 413: ' search' (ID: 3684)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006879595573991537
    2. ' for' → logprob: -5.256879806518555
    3. '           ' → logprob: -6.881879806518555
    4. 'iterate' → logprob: -8.631879806518555
    5. '               ' → logprob: -9.006879806518555
    6. '       ' → logprob: -9.131879806518555
    7. '   ' → logprob: -9.381879806518555
    8. 'continue' → logprob: -9.881879806518555
    9. 'pass' → logprob: -10.881879806518555
    10. ' iterate' → logprob: -11.631879806518555

Token 414: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4387710690498352
    2. 'through' → logprob: -2.0637710094451904
    3. 'back' → logprob: -2.6887710094451904
    4. ' through' → logprob: -2.9387710094451904
    5. ' for' → logprob: -3.5637710094451904
    6. 'in' → logprob: -3.9387710094451904
    7. 'cd' → logprob: -4.1887712478637695
    8. 'the' → logprob: -4.3137712478637695
    9. '       ' → logprob: -5.1887712478637695
    10. 'all' → logprob: -5.4387712478637695

Token 415: ' reverse' (ID: 18199)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.02476557157933712
    2. ' cd' → logprob: -4.774765491485596
    3. 'the' → logprob: -5.149765491485596
    4. 'reverse' → logprob: -5.524765491485596
    5. 'range' → logprob: -5.524765491485596
    6. 're' → logprob: -7.649765491485596
    7. 'for' → logprob: -7.899765491485596
    8. ' the' → logprob: -8.149765968322754
    9. ' range' → logprob: -8.274765968322754
    10. '   ' → logprob: -8.524765968322754

Token 416: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.2031863927841187
    2. ':' → logprob: -1.3281863927841187
    3. '           ' → logprob: -1.3281863927841187
    4. '       ' → logprob: -2.453186511993408
    5. 'for' → logprob: -3.578186511993408
    6. '               ' → logprob: -4.203186511993408
    7. ':
' → logprob: -4.328186511993408
    8. '[::-' → logprob: -5.453186511993408
    9. '(c' → logprob: -5.578186511993408
    10. ',' → logprob: -5.703186511993408

Token 417: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.3808718919754028
    2. ' the' → logprob: -1.6308718919754028
    3. 'previous' → logprob: -2.0058717727661133
    4. 'cd' → logprob: -2.2558717727661133
    5. ' cd' → logprob: -3.1308717727661133
    6. ' previous' → logprob: -3.1308717727661133
    7. 'positions' → logprob: -3.5058717727661133
    8. 'c' → logprob: -3.6308717727661133
    9. 'prev' → logprob: -3.8808717727661133
    10. 'idx' → logprob: -4.130871772766113

Token 418: ' most' (ID: 1645)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'last' → logprob: -1.2019505500793457
    2. ' last' → logprob: -1.4519505500793457
    3. 'positions' → logprob: -1.8269505500793457
    4. 'previous' → logprob: -2.0769505500793457
    5. ' positions' → logprob: -2.9519505500793457
    6. ' previous' → logprob: -3.5769505500793457
    7. 'indices' → logprob: -3.5769505500793457
    8. 'cd' → logprob: -3.7019505500793457
    9. ' indices' → logprob: -4.826950550079346
    10. 'index' → logprob: -5.076950550079346

Token 419: ' recent' (ID: 7178)
  Prédit: ' recent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' recent' → logprob: -0.6328642964363098
    2. 'recent' → logprob: -0.7578642964363098
    3. '_recent' → logprob: -8.757863998413086
    4. ' ' → logprob: -10.132863998413086
    5. '
' → logprob: -11.007863998413086
    6. ' recently' → logprob: -11.632863998413086
    7. '```' → logprob: -11.757863998413086
    8. '   ' → logprob: -12.007863998413086
    9. 'Recent' → logprob: -12.757863998413086
    10. 'last' → logprob: -12.882863998413086

Token 420: ' before' (ID: 2254)
  Prédit: 'occ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'occ' → logprob: -1.272516131401062
    2. 'index' → logprob: -1.522516131401062
    3. 'positions' → logprob: -1.647516131401062
    4. 'indices' → logprob: -2.1475162506103516
    5. 'position' → logprob: -3.0225162506103516
    6. ' occurrence' → logprob: -3.1475162506103516
    7. ' positions' → logprob: -4.147516250610352
    8. ' index' → logprob: -4.272516250610352
    9. 'occur' → logprob: -4.522516250610352
    10. ' indices' → logprob: -4.647516250610352

Token 421: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11847428232431412
    2. ' i' → logprob: -2.618474245071411
    3. '       ' → logprob: -3.493474245071411
    4. ' the' → logprob: -6.24347448348999
    5. 'the' → logprob: -6.49347448348999
    6. '           ' → logprob: -6.61847448348999
    7. 'index' → logprob: -7.11847448348999
    8. ' index' → logprob: -7.24347448348999
    9. '   ' → logprob: -7.61847448348999
    10. '```' → logprob: -8.368474006652832

Token 422: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1682615876197815
    2. ' for' → logprob: -2.7932615280151367
    3. '               ' → logprob: -3.1682615280151367
    4. 'for' → logprob: -4.418261528015137
    5. ' and' → logprob: -4.668261528015137
    6. ':' → logprob: -5.168261528015137
    7. '       ' → logprob: -5.418261528015137
    8. 'idx' → logprob: -5.418261528015137
    9. ':
' → logprob: -5.543261528015137
    10. ',' → logprob: -6.543261528015137

Token 423: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.38640740513801575
    2. '       ' → logprob: -1.5114073753356934
    3. ' for' → logprob: -2.8864073753356934
    4. ':' → logprob: -3.7614073753356934
    5. '               ' → logprob: -4.636407375335693
    6. 'for' → logprob: -5.886407375335693
    7. ' and' → logprob: -5.886407375335693
    8. ':
' → logprob: -7.011407375335693
    9. ',' → logprob: -7.386407375335693
    10. '   ' → logprob: -7.511407375335693

Token 424: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3188776969909668
    2. ' for' → logprob: -1.6938776969909668
    3. 'j' → logprob: -3.443877696990967
    4. 'idx' → logprob: -3.693877696990967
    5. 'pos' → logprob: -4.693877696990967
    6. '           ' → logprob: -4.693877696990967
    7. 'prev' → logprob: -5.193877696990967
    8. ' j' → logprob: -5.568877696990967
    9. ' idx' → logprob: -6.193877696990967
    10. '       ' → logprob: -7.068877696990967

Token 425: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.5680975317955017
    2. 'pos' → logprob: -1.0680975914001465
    3. 'idx' → logprob: -3.4430975914001465
    4. ' j' → logprob: -3.8180975914001465
    5. 'prev' → logprob: -4.3180975914001465
    6. ' pos' → logprob: -4.8180975914001465
    7. 'x' → logprob: -5.1930975914001465
    8. 'p' → logprob: -5.6930975914001465
    9. 'k' → logprob: -6.0680975914001465
    10. ' idx' → logprob: -6.6930975914001465

Token 426: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04862279072403908
    2. 'in' → logprob: -3.0486228466033936
    3. '	in' → logprob: -10.798623085021973
    4. '_in' → logprob: -12.798623085021973
    5. ' ' → logprob: -12.923623085021973
    6. '   ' → logprob: -13.673623085021973
    7. '=' → logprob: -14.048623085021973
    8. '    ' → logprob: -14.048623085021973
    9. ' =' → logprob: -14.173623085021973
    10. ' i' → logprob: -14.423623085021973

Token 427: ' reversed' (ID: 57184)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.31089478731155396
    2. 'cd' → logprob: -1.8108947277069092
    3. 're' → logprob: -2.435894727706909
    4. ' range' → logprob: -4.310894966125488
    5. ' cd' → logprob: -6.435894966125488
    6. ' reversed' → logprob: -7.310894966125488
    7. 'sorted' → logprob: -9.560894966125488
    8. '   ' → logprob: -9.685894966125488
    9. 'c' → logprob: -10.060894966125488
    10. '[::-' → logprob: -10.185894966125488

Token 428: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001048646867275238
    2. '(range' → logprob: -7.251048564910889
    3. '(' → logprob: -8.376049041748047
    4. 'range' → logprob: -9.251049041748047
    5. '(d' → logprob: -13.126049041748047
    6. '((' → logprob: -13.126049041748047
    7. 'c' → logprob: -13.251049041748047
    8. '   ' → logprob: -13.751049041748047
    9. '([' → logprob: -13.876049041748047
    10. ' (' → logprob: -14.001049041748047

Token 429: 'dic' (ID: 62630)
  Prédit: 'dic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dic' → logprob: -0.0013080945936962962
    2. '(dic' → logprob: -7.376307964324951
    3. 'd' → logprob: -9.25130844116211
    4. '_dic' → logprob: -9.37630844116211
    5. '[' → logprob: -9.62630844116211
    6. '(d' → logprob: -9.75130844116211
    7. '[d' → logprob: -9.75130844116211
    8. ')' → logprob: -9.87630844116211
    9. 'ic' → logprob: -10.00130844116211
    10. '[c' → logprob: -10.25130844116211

Token 430: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -2.522638169466518e-05
    2. 'c' → logprob: -11.375024795532227
    3. '[' → logprob: -12.250024795532227
    4. ' [' → logprob: -12.875024795532227
    5. '[
' → logprob: -13.500024795532227
    6. ')[' → logprob: -14.250024795532227
    7. ')' → logprob: -14.375024795532227
    8. '
' → logprob: -14.625024795532227
    9. ')c' → logprob: -14.625024795532227
    10. '(c' → logprob: -14.875024795532227

Token 431: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.1792939454317093
    2. '[c' → logprob: -2.1792938709259033
    3. ']):' → logprob: -3.1792938709259033
    4. '):
' → logprob: -5.429294109344482
    5. '[i' → logprob: -6.054294109344482
    6. '[' → logprob: -7.054294109344482
    7. '[:-' → logprob: -7.929294109344482
    8. '       ' → logprob: -8.054293632507324
    9. '   ' → logprob: -9.179293632507324
    10. '']):
' → logprob: -9.179293632507324

Token 432: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09503886103630066
    2. '           ' → logprob: -2.720038890838623
    3. '       ' → logprob: -4.845038890838623
    4. ':' → logprob: -5.470038890838623
    5. ' if' → logprob: -5.595038890838623
    6. '<|end|>' → logprob: -5.595038890838623
    7. ':
' → logprob: -6.345038890838623
    8. ' :' → logprob: -7.095038890838623
    9. '<|end|>' → logprob: -7.595038890838623
    10. ',' → logprob: -7.845038890838623

Token 433: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.18800745904445648
    2. ' if' → logprob: -2.063007354736328
    3. '                   ' → logprob: -3.938007354736328
    4. 'if' (adapté à ' if') → logprob: -4.188007354736328
    5. '<|end|>' → logprob: -5.188007354736328
    6. ' ' → logprob: -7.188007354736328
    7. '           ' → logprob: -7.688007354736328
    8. '       ' → logprob: -7.813007354736328
    9. '[' → logprob: -7.813007354736328
    10. '                ' → logprob: -7.938007354736328

Token 434: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.2014213353395462
    2. ' j' → logprob: -1.7014213800430298
    3. '                   ' → logprob: -12.701421737670898
    4. '	j' → logprob: -13.326421737670898
    5. '   ' → logprob: -13.701421737670898
    6. '               ' → logprob: -13.951421737670898
    7. '    ' → logprob: -15.201421737670898
    8. ' ' → logprob: -15.576421737670898
    9. '                ' → logprob: -15.701421737670898
    10. '$j' → logprob: -15.951421737670898

Token 435: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.055010125041007996
    2. '<' → logprob: -3.3050100803375244
    3. '<|end|>' → logprob: -4.6800103187561035
    4. '[' → logprob: -6.1800103187561035
    5. ')' → logprob: -6.1800103187561035
    6. ' ' → logprob: -6.4300103187561035
    7. ' ' → logprob: -7.5550103187561035
    8. '<i' → logprob: -8.930009841918945
    9. '<|end|>' → logprob: -8.930009841918945
    10. ' >=' → logprob: -9.180009841918945

Token 436: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06196891888976097
    2. ' i' → logprob: -2.8119688034057617
    3. '	i' → logprob: -14.311968803405762
    4. '               ' → logprob: -15.936968803405762
    5. '           ' → logprob: -15.936968803405762
    6. '   ' → logprob: -16.311969757080078
    7. '[i' → logprob: -16.811969757080078
    8. ')i' → logprob: -16.811969757080078
    9. '                   ' → logprob: -16.936969757080078
    10. ')' → logprob: -16.936969757080078

Token 437: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.271624356508255
    2. ':' → logprob: -1.6466243267059326
    3. '):
' → logprob: -3.2716243267059326
    4. '):' → logprob: -6.146624565124512
    5. '                   ' → logprob: -6.521624565124512
    6. ' and' → logprob: -6.521624565124512
    7. '():
' → logprob: -7.021624565124512
    8. '               ' → logprob: -7.146624565124512
    9. ' :
' → logprob: -9.271624565124512
    10. ':

' → logprob: -9.521624565124512

Token 438: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004843173082917929
    2. ':' → logprob: -6.129843235015869
    3. ':
' → logprob: -7.004843235015869
    4. '               ' → logprob: -7.004843235015869
    5. '           ' → logprob: -8.129842758178711
    6. '                       ' → logprob: -8.254842758178711
    7. '                           ' → logprob: -9.629842758178711
    8. '                    ' → logprob: -10.004842758178711
    9. ' :' → logprob: -10.129842758178711
    10. '                    
' → logprob: -10.129842758178711

Token 439: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.01876036450266838
    2. 'dp' (adapté à ' dp') → logprob: -4.0187602043151855
    3. '                   ' → logprob: -7.8937602043151855
    4. '	dp' → logprob: -9.268760681152344
    5. '                       ' → logprob: -9.518760681152344
    6. '(dp' → logprob: -10.518760681152344
    7. '_dp' → logprob: -11.518760681152344
    8. '                    ' → logprob: -12.643760681152344
    9. '+' → logprob: -12.768760681152344
    10. '                    
' → logprob: -12.893760681152344

Token 440: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.939851037808694e-05
    2. '[j' → logprob: -10.875029563903809
    3. '[' → logprob: -11.500029563903809
    4. '```' → logprob: -16.250028610229492
    5. '[I' → logprob: -17.000028610229492
    6. 'i' → logprob: -17.125028610229492
    7. '[idx' → logprob: -17.625028610229492
    8. '[
' → logprob: -17.750028610229492
    9. '[index' → logprob: -18.000028610229492
    10. '][' → logprob: -18.125028610229492

Token 441: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6596025228500366
    2. '=' → logprob: -1.5346025228500366
    3. ']' → logprob: -1.9096025228500366
    4. ' +=' → logprob: -2.659602642059326
    5. ']+=' → logprob: -3.284602642059326
    6. ' =' → logprob: -4.534602642059326
    7. ']=' → logprob: -8.034602165222168
    8. '   ' → logprob: -8.409602165222168
    9. ')' → logprob: -9.159602165222168
    10. '+' → logprob: -9.284602165222168

Token 442: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.10622772574424744
    2. '=' → logprob: -2.3562276363372803
    3. ' +=' → logprob: -5.231227874755859
    4. ' =' → logprob: -7.481227874755859
    5. '=(' → logprob: -10.23122787475586
    6. '   ' → logprob: -10.73122787475586
    7. ']+=' → logprob: -11.48122787475586
    8. '+' → logprob: -12.48122787475586
    9. '+=(' → logprob: -12.48122787475586
    10. '       ' → logprob: -12.60622787475586

Token 443: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.11283071339130402
    2. ' dp' → logprob: -2.237830638885498
    3. '(dp' → logprob: -12.362831115722656
    4. '	dp' → logprob: -12.737831115722656
    5. '_dp' → logprob: -14.987831115722656
    6. '
' → logprob: -15.737831115722656
    7. '   ' → logprob: -15.737831115722656
    8. 'd' → logprob: -15.737831115722656
    9. '.dp' → logprob: -16.237831115722656
    10. '                   ' → logprob: -16.487831115722656

Token 444: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.111979357432574e-05
    2. 'j' → logprob: -9.62507152557373
    3. '[' → logprob: -12.37507152557373
    4. '[
' → logprob: -14.50007152557373
    5. '[i' → logprob: -16.125070571899414
    6. '[js' → logprob: -17.000070571899414
    7. '(j' → logprob: -17.375070571899414
    8. '	j' → logprob: -17.750070571899414
    9. ' [' → logprob: -17.875070571899414
    10. ' j' → logprob: -18.250070571899414

Token 445: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0047525265254080296
    2. ']
' → logprob: -6.2547526359558105
    3. ']%' → logprob: -6.3797526359558105
    4. ' ]' → logprob: -6.8797526359558105
    5. ')' → logprob: -9.754752159118652
    6. ' ]
' → logprob: -11.379752159118652
    7. ']

' → logprob: -11.379752159118652
    8. '])' → logprob: -12.754752159118652
    9. '                   ' → logprob: -13.004752159118652
    10. ']+' → logprob: -13.879752159118652

Token 446: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.014976363629102707
    2. '           ' → logprob: -5.014976501464844
    3. '               ' → logprob: -5.139976501464844
    4. '<|end|>' → logprob: -7.389976501464844
    5. '                           ' → logprob: -7.889976501464844
    6. '                       ' → logprob: -8.389976501464844
    7. '                    
' → logprob: -8.389976501464844
    8. '       ' → logprob: -8.389976501464844
    9. '                    ' → logprob: -9.514976501464844
    10. '   ' → logprob: -9.514976501464844

Token 447: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.37737175822257996
    2. ' dp' → logprob: -2.3773717880249023
    3. '1' → logprob: -2.8773717880249023
    4. ' break' → logprob: -3.0023717880249023
    5. ' (' → logprob: -3.5023717880249023
    6. 'break' (adapté à ' break') → logprob: -4.252371788024902
    7. 'dp' → logprob: -4.752371788024902
    8. ' 
' → logprob: -4.877371788024902
    9. '
' → logprob: -5.002371788024902
    10. '(' → logprob: -5.002371788024902

Token 448: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18864232301712036
    2. '               ' → logprob: -2.0636422634124756
    3. '<|end|>' → logprob: -3.5636422634124756
    4. ')' → logprob: -4.688642501831055
    5. '           ' → logprob: -5.938642501831055
    6. 'else' → logprob: -7.188642501831055
    7. ' else' → logprob: -7.188642501831055
    8. '   ' → logprob: -7.563642501831055
    9. '                   ' → logprob: -7.813642501831055
    10. ',' → logprob: -8.063642501831055

Token 449: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39061421155929565
    2. '<|end|>' → logprob: -1.3906142711639404
    3. '               ' → logprob: -4.015614032745361
    4. '           ' → logprob: -4.265614032745361
    5. '```' → logprob: -4.265614032745361
    6. ')' → logprob: -4.890614032745361
    7. '                   ' → logprob: -5.640614032745361
    8. '
' → logprob: -6.015614032745361
    9. '[' → logprob: -6.140614032745361
    10. '<|end|>' → logprob: -6.140614032745361

Token 450: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.4694346785545349
    2. '       ' → logprob: -1.5944347381591797
    3. 'else' (adapté à ' else') → logprob: -1.8444347381591797
    4. '<|end|>' → logprob: -5.09443473815918
    5. '
' → logprob: -5.21943473815918
    6. '           ' → logprob: -8.09443473815918
    7. '	else' → logprob: -8.21943473815918
    8. '   ' → logprob: -8.59443473815918
    9. '[' → logprob: -8.59443473815918
    10. ' ' → logprob: -8.71943473815918

Token 451: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6379367113113403
    2. ':
' → logprob: -0.7629367113113403
    3. '       ' → logprob: -5.887936592102051
    4. '           ' → logprob: -6.887936592102051
    5. '{' → logprob: -7.012936592102051
    6. '[' → logprob: -8.76293659210205
    7. ' :
' → logprob: -9.13793659210205
    8. '<|end|>' → logprob: -9.26293659210205
    9. '{
' → logprob: -10.01293659210205
    10. ':

' → logprob: -10.13793659210205

Token 452: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8044087290763855
    2. '       ' → logprob: -1.6794087886810303
    3. 'for' → logprob: -2.4294087886810303
    4. '           ' → logprob: -2.6794087886810303
    5. ' #' → logprob: -2.9294087886810303
    6. ' prev' → logprob: -3.0544087886810303
    7. 'prev' → logprob: -3.4294087886810303
    8. '#' → logprob: -3.6794087886810303
    9. 'dp' → logprob: -5.554408550262451
    10. ' dp' → logprob: -5.679408550262451

Token 453: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.2957121133804321
    2. 'from' → logprob: -1.6707121133804321
    3. 'dp' → logprob: -1.6707121133804321
    4. '#' (adapté à ' #') → logprob: -2.1707119941711426
    5. 'left' → logprob: -2.4207119941711426
    6. 'l' → logprob: -3.4207119941711426
    7. 'idx' → logprob: -3.5457119941711426
    8. 'low' → logprob: -4.295711994171143
    9. 'for' → logprob: -4.295711994171143
    10. 'pos' → logprob: -4.920711994171143

Token 454: ' If' (ID: 1843)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.5183205604553223
    2. 'import' → logprob: -1.7683205604553223
    3. 'dp' → logprob: -1.8933205604553223
    4. 'left' → logprob: -2.1433205604553223
    5. 'idx' → logprob: -2.8933205604553223
    6. '#' → logprob: -2.8933205604553223
    7. 'prev' → logprob: -3.0183205604553223
    8. 'l' → logprob: -3.1433205604553223
    9. 'pos' → logprob: -4.393320560455322
    10. '           ' → logprob: -4.768320560455322

Token 455: ' there' (ID: 1354)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.0255677700042725
    2. 'cd' → logprob: -1.0255677700042725
    3. ' cd' → logprob: -3.0255677700042725
    4. 'c' → logprob: -3.1505677700042725
    5. 'dp' → logprob: -3.2755677700042725
    6. ' c' → logprob: -3.7755677700042725
    7. 'i' → logprob: -3.7755677700042725
    8. ' len' → logprob: -4.025568008422852
    9. '#' → logprob: -4.650568008422852
    10. 'j' → logprob: -4.650568008422852

Token 456: ' are' (ID: 553)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7305687069892883
    2. ' are' → logprob: -1.8555686473846436
    3. 'are' → logprob: -1.9805686473846436
    4. 'is' → logprob: -2.4805686473846436
    5. ''s' → logprob: -3.1055686473846436
    6. ' exists' → logprob: -3.4805686473846436
    7. 'exists' → logprob: -3.7305686473846436
    8. ' was' → logprob: -4.355568885803223
    9. 's' → logprob: -5.230568885803223
    10. ' has' → logprob: -5.355568885803223

Token 457: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.5519323945045471
    2. 'multiple' → logprob: -1.6769323348999023
    3. 'more' → logprob: -1.9269323348999023
    4. ' multiple' → logprob: -3.8019323348999023
    5. ' many' → logprob: -4.051932334899902
    6. 'too' → logprob: -4.676932334899902
    7. ' more' → logprob: -4.801932334899902
    8. 'len' → logprob: -5.051932334899902
    9. 'dp' → logprob: -5.426932334899902
    10. 'se' → logprob: -6.051932334899902

Token 458: ' occurrences' (ID: 108073)
  Prédit: ' occurrences'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' occurrences' → logprob: -0.7465994358062744
    2. 'occ' → logprob: -0.9965994358062744
    3. 'positions' → logprob: -3.2465994358062744
    4. 'c' → logprob: -3.6215994358062744
    5. ' positions' → logprob: -3.9965994358062744
    6. ' previous' → logprob: -4.121599197387695
    7. 'indices' → logprob: -4.496599197387695
    8. 'previous' → logprob: -4.996599197387695
    9. 'cd' → logprob: -5.371599197387695
    10. ' c' → logprob: -5.371599197387695

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07388375699520111
    2. '           ' → logprob: -3.3238837718963623
    3. ':' → logprob: -4.448883533477783
    4. ' of' → logprob: -5.073883533477783
    5. '               ' → logprob: -5.198883533477783
    6. ' in' → logprob: -6.073883533477783
    7. '                   ' → logprob: -6.698883533477783
    8. 'in' → logprob: -6.823883533477783
    9. '#' → logprob: -6.823883533477783
    10. 'of' → logprob: -7.073883533477783

Token 460: ' use' (ID: 1199)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4068897068500519
    2. 'from' → logprob: -2.0318896770477295
    3. '#' → logprob: -2.5318896770477295
    4. 'left' → logprob: -3.4068896770477295
    5. '           ' → logprob: -4.281889915466309
    6. ' import' → logprob: -4.406889915466309
    7. 'idx' → logprob: -4.406889915466309
    8. ' from' → logprob: -4.531889915466309
    9. 'dp' → logprob: -4.531889915466309
    10. 'l' → logprob: -4.906889915466309

Token 461: ' binary' (ID: 15600)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7065441012382507
    2. 'from' → logprob: -1.4565441608428955
    3. 'bis' → logprob: -2.5815441608428955
    4. 'binary' → logprob: -2.7065441608428955
    5. 'dp' → logprob: -2.8315441608428955
    6. ' bis' → logprob: -4.081543922424316
    7. ' from' → logprob: -4.206543922424316
    8. ' binary' → logprob: -4.581543922424316
    9. 'cd' → logprob: -4.831543922424316
    10. 'prefix' → logprob: -5.581543922424316

Token 462: ' search' (ID: 3684)
  Prédit: 'search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -0.26295971870422363
    2. ' search' → logprob: -1.5129597187042236
    3. '_search' → logprob: -4.5129594802856445
    4. '_' → logprob: -14.012959480285645
    5. '	search' → logprob: -14.012959480285645
    6. '```' → logprob: -14.387959480285645
    7. '
' → logprob: -14.512959480285645
    8. '-search' → logprob: -14.887959480285645
    9. '   ' → logprob: -15.262959480285645
    10. 'se' → logprob: -15.637959480285645

Token 463: ' to' (ID: 316)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.21365214884281158
    2. '           ' → logprob: -1.9636521339416504
    3. ' to' → logprob: -3.9636521339416504
    4. '```' → logprob: -5.08865213394165
    5. 'from' → logprob: -5.08865213394165
    6. ' from' → logprob: -5.21365213394165
    7. ' import' → logprob: -5.46365213394165
    8. ' on' → logprob: -6.21365213394165
    9. '   ' → logprob: -6.21365213394165
    10. 'to' → logprob: -6.58865213394165

Token 464: ' find' (ID: 1646)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0015774748753756285
    2. 'from' → logprob: -6.626577377319336
    3. ' import' → logprob: -8.751577377319336
    4. '```' → logprob: -10.376577377319336
    5. ' from' → logprob: -11.126577377319336
    6. 'bis' → logprob: -11.251577377319336
    7. '           ' → logprob: -11.376577377319336
    8. 'find' → logprob: -11.501577377319336
    9. '
' → logprob: -12.126577377319336
    10. '   ' → logprob: -13.501577377319336

Token 465: ' the' (ID: 290)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.2985321879386902
    2. ' the' → logprob: -1.673532247543335
    3. ' import' → logprob: -3.298532247543335
    4. 'the' → logprob: -3.923532247543335
    5. 'left' → logprob: -5.298532009124756
    6. ' left' → logprob: -5.298532009124756
    7. 'from' → logprob: -6.798532009124756
    8. 'index' → logprob: -7.423532009124756
    9. ' index' → logprob: -8.048532485961914
    10. ' from' → logprob: -8.173532485961914

Token 466: ' right' (ID: 1849)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.005867878440767527
    2. 'index' → logprob: -6.005867958068848
    3. 'from' → logprob: -6.255867958068848
    4. ' import' → logprob: -7.630867958068848
    5. 'position' → logprob: -7.755867958068848
    6. 'idx' → logprob: -8.630867958068848
    7. 'pos' → logprob: -9.005867958068848
    8. '```' → logprob: -10.255867958068848
    9. 'previous' → logprob: -10.380867958068848
    10. 'right' → logprob: -10.630867958068848

Token 467: 'most' (ID: 5309)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.626785397529602
    2. 'index' → logprob: -0.876785397529602
    3. 'position' → logprob: -3.2517852783203125
    4. 'idx' → logprob: -5.0017852783203125
    5. 'pos' → logprob: -5.6267852783203125
    6. 'from' → logprob: -8.376785278320312
    7. ' index' → logprob: -9.126785278320312
    8. ' import' → logprob: -9.251785278320312
    9. 'insert' → logprob: -10.376785278320312
    10. '   ' → logprob: -11.001785278320312

Token 468: ' before' (ID: 2254)
  Prédit: 'position'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'position' → logprob: -1.2326689958572388
    2. 'index' → logprob: -1.3576689958572388
    3. 'occ' → logprob: -1.9826689958572388
    4. 'import' → logprob: -2.357668876647949
    5. ' occurrence' → logprob: -2.357668876647949
    6. ' position' → logprob: -3.107668876647949
    7. ' index' → logprob: -3.357668876647949
    8. 'cd' → logprob: -3.607668876647949
    9. 'j' → logprob: -5.482668876647949
    10. 'pos' → logprob: -5.982668876647949

Token 469: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03855570778250694
    2. ' i' → logprob: -3.28855562210083
    3. 'the' → logprob: -8.788556098937988
    4. '   ' → logprob: -8.788556098937988
    5. ' the' → logprob: -9.413556098937988
    6. 'index' → logprob: -10.288556098937988
    7. 'c' → logprob: -11.038556098937988
    8. 'position' → logprob: -11.538556098937988
    9. '       ' → logprob: -11.663556098937988
    10. ' index' → logprob: -11.788556098937988

Token 470: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5312157869338989
    2. '           ' → logprob: -1.281215786933899
    3. '               ' → logprob: -2.4062156677246094
    4. ' import' → logprob: -4.906215667724609
    5. 'from' → logprob: -5.406215667724609
    6. ' from' → logprob: -5.656215667724609
    7. '                   ' → logprob: -5.781215667724609
    8. '   ' → logprob: -5.781215667724609
    9. '       ' → logprob: -5.781215667724609
    10. ',' → logprob: -6.031215667724609

Token 471: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13669353723526
    2. 'import' → logprob: -2.8866934776306152
    3. '       ' → logprob: -3.0116934776306152
    4. '[' → logprob: -5.136693477630615
    5. '               ' → logprob: -5.511693477630615
    6. '```' → logprob: -5.886693477630615
    7. '   ' → logprob: -6.136693477630615
    8. 'from' → logprob: -6.386693477630615
    9. ',' → logprob: -6.761693477630615
    10. '[
' → logprob: -7.261693477630615

Token 472: ' l' (ID: 305)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.06569946557283401
    2. 'from' → logprob: -3.315699577331543
    3. ' import' → logprob: -4.440699577331543
    4. ' from' → logprob: -4.565699577331543
    5. ' lo' → logprob: -5.940699577331543
    6. 'l' (adapté à ' l') → logprob: -7.565699577331543
    7. '           ' → logprob: -7.565699577331543
    8. 'lo' → logprob: -8.315699577331543
    9. 'left' → logprob: -8.315699577331543
    10. ' l' → logprob: -8.565699577331543

Token 473: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18208132684230804
    2. '=' → logprob: -2.6820812225341797
    3. 'eft' → logprob: -3.0570812225341797
    4. ' =' → logprob: -3.1820812225341797
    5. 'ow' → logprob: -5.55708122253418
    6. ',b' → logprob: -6.18208122253418
    7. 'import' → logprob: -6.68208122253418
    8. ',r' → logprob: -7.43208122253418
    9. 'ower' → logprob: -7.55708122253418
    10. 'o' → logprob: -7.93208122253418

Token 474: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0002613358374219388
    2. ' r' → logprob: -8.250261306762695
    3. 'u' → logprob: -17.750261306762695
    4. 'h' → logprob: -18.250261306762695
    5. '	r' → logprob: -19.625261306762695
    6. '   ' → logprob: -20.000261306762695
    7. '0' → logprob: -20.000261306762695
    8. ' =' → logprob: -20.875261306762695
    9. '
' → logprob: -21.250261306762695
    10. '=' → logprob: -21.250261306762695

Token 475: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.029751762747764587
    2. ' =' → logprob: -3.529751777648926
    3. ',' → logprob: -14.154751777648926
    4. '=l' → logprob: -15.154751777648926
    5. '0' → logprob: -15.529751777648926
    6. ' ' → logprob: -16.77975082397461
    7. '=len' → logprob: -17.15475082397461
    8. ')' → logprob: -18.15475082397461
    9. '=int' → logprob: -18.40475082397461
    10. '＝' → logprob: -18.65475082397461

Token 476: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.170270353322849e-05
    2. ' ' → logprob: -10.250061988830566
    3. '-' → logprob: -10.625061988830566
    4. '           ' → logprob: -14.375061988830566
    5. ' -' → logprob: -14.625061988830566
    6. '   ' → logprob: -14.625061988830566
    7. '
' → logprob: -16.75006103515625
    8. '1' → logprob: -17.00006103515625
    9. '=' → logprob: -17.00006103515625
    10. '       ' → logprob: -17.18756103515625

Token 477: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4868770196917467e-05
    2. ' ' → logprob: -11.125024795532227
    3. '-' → logprob: -11.625024795532227
    4. '   ' → logprob: -15.125024795532227
    5. '           ' → logprob: -15.250024795532227
    6. '1' → logprob: -15.625024795532227
    7. ' -' → logprob: -16.312524795532227
    8. '[' → logprob: -16.937524795532227
    9. '
' → logprob: -17.187524795532227
    10. '(' → logprob: -17.250024795532227

Token 478: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024003656581044197
    2. ',len' → logprob: -3.774003744125366
    3. ' ,' → logprob: -7.274003505706787
    4. 'len' → logprob: -10.024003982543945
    5. ',l' → logprob: -11.524003982543945
    6. ',r' → logprob: -12.899003982543945
    7. ',
' → logprob: -12.899003982543945
    8. ',length' → logprob: -13.774003982543945
    9. ',b' → logprob: -14.524003982543945
    10. '           ' → logprob: -14.524003982543945

Token 479: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -6.704273118884885e-07
    2. ' len' → logprob: -14.625000953674316
    3. '   ' → logprob: -16.375
    4. '           ' → logprob: -16.75
    5. '(len' → logprob: -17.75
    6. '       ' → logprob: -19.125
    7. '[len' → logprob: -19.75
    8. '	len' → logprob: -20.0
    9. '=len' → logprob: -20.5
    10. '
' → logprob: -21.0

Token 480: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -2.816093228830141e-06
    2. 'c' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.87500286102295
    4. '(
' → logprob: -15.12500286102295
    5. ')' → logprob: -15.62500286102295
    6. '(' → logprob: -15.75000286102295
    7. ' ' → logprob: -16.000001907348633
    8. '	c' → logprob: -16.125001907348633
    9. 'cd' → logprob: -16.125001907348633
    10. '[c' → logprob: -16.250001907348633

Token 481: 'dic' (ID: 62630)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.7125157117843628
    2. 'dic' → logprob: -0.7125157117843628
    3. '[c' → logprob: -4.087515830993652
    4. ')' → logprob: -7.587515830993652
    5. '{' → logprob: -7.837515830993652
    6. '(c' → logprob: -8.212515830993652
    7. '(dic' → logprob: -8.462515830993652
    8. 'c' → logprob: -8.587515830993652
    9. '[' → logprob: -8.587515830993652
    10. '   ' → logprob: -8.837515830993652

Token 482: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -6.392202976712724e-06
    2. 'c' → logprob: -12.500006675720215
    3. ')' → logprob: -13.250006675720215
    4. ')c' → logprob: -14.750006675720215
    5. '[' → logprob: -15.750006675720215
    6. '{' → logprob: -16.3750057220459
    7. ')+' → logprob: -16.8750057220459
    8. ' [' → logprob: -17.0000057220459
    9. '(c' → logprob: -17.1250057220459
    10. '   ' → logprob: -17.5000057220459

Token 483: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07550973445177078
    2. ')-' → logprob: -3.200509786605835
    3. '[c' → logprob: -3.450509786605835
    4. ')c' → logprob: -9.325510025024414
    5. 'c' → logprob: -9.950510025024414
    6. ')
' → logprob: -10.200510025024414
    7. ')]' → logprob: -11.200510025024414
    8. '[' → logprob: -11.450510025024414
    9. ']' → logprob: -11.450510025024414
    10. '])' → logprob: -12.075510025024414

Token 484: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1295050084590912
    2. ' -' → logprob: -2.129504919052124
    3. '<|end|>' → logprob: -6.129505157470703
    4. '
' → logprob: -8.129505157470703
    5. '       ' → logprob: -11.004505157470703
    6. '[' → logprob: -11.004505157470703
    7. '   ' → logprob: -11.254505157470703
    8. '           ' → logprob: -11.504505157470703
    9. '<|end|>' → logprob: -11.629505157470703
    10. ')' → logprob: -12.129505157470703

Token 485: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.750004768371582
    3. '2' → logprob: -13.625004768371582
    4. '   ' → logprob: -16.937503814697266
    5. '```' → logprob: -17.437503814697266
    6. '-' → logprob: -17.687503814697266
    7. '１' → logprob: -18.062503814697266
    8. '       ' → logprob: -18.562503814697266
    9. '           ' → logprob: -18.625003814697266
    10. '۱' → logprob: -18.750003814697266

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -12.87500286102295
    3. '2' → logprob: -14.87500286102295
    4. '```' → logprob: -17.937503814697266
    5. '0' → logprob: -18.062503814697266
    6. '   ' → logprob: -18.312503814697266
    7. '
' → logprob: -18.500003814697266
    8. '１' → logprob: -18.937503814697266
    9. '-' → logprob: -19.250003814697266
    10. '۱' → logprob: -19.312503814697266

Token 487: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7563570141792297
    2. '<|end|>' → logprob: -1.131356954574585
    3. '   ' → logprob: -2.881356954574585
    4. ' while' → logprob: -3.006356954574585
    5. 'while' → logprob: -3.256356954574585
    6. '       ' → logprob: -4.506357192993164
    7. ' ' → logprob: -4.631357192993164
    8. ' 
' → logprob: -4.631357192993164
    9. '  
' → logprob: -4.881357192993164
    10. '```' → logprob: -5.631357192993164

Token 488: '           ' (ID: 352)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2288171350955963
    2. '   ' → logprob: -2.9788172245025635
    3. 'while' → logprob: -3.1038172245025635
    4. '       ' → logprob: -3.2288172245025635
    5. '	while' → logprob: -3.4788172245025635
    6. '<|end|>' → logprob: -4.228816986083984
    7. '
' → logprob: -4.353816986083984
    8. ' 
' → logprob: -5.853816986083984
    9. 'While' → logprob: -6.228816986083984
    10. ' ' → logprob: -6.603816986083984

Token 489: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1678924709558487
    2. ' mid' → logprob: -2.2928924560546875
    3. 'while' (adapté à ' while') → logprob: -3.4178924560546875
    4. 'mid' → logprob: -4.2928924560546875
    5. '       ' → logprob: -5.9178924560546875
    6. ' ' → logprob: -6.6678924560546875
    7. ' m' → logprob: -7.1678924560546875
    8. '   ' → logprob: -7.4178924560546875
    9. 'm' → logprob: -8.167892456054688
    10. '[mid' → logprob: -8.167892456054688

Token 490: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0008260641479864717
    2. ' l' → logprob: -7.125825881958008
    3. 'r' → logprob: -10.875825881958008
    4. '   ' → logprob: -13.250825881958008
    5. '	l' → logprob: -14.125825881958008
    6. ' ' → logprob: -15.875825881958008
    7. '(l' → logprob: -16.750825881958008
    8. ' r' → logprob: -17.125825881958008
    9. '  ' → logprob: -18.000825881958008
    10. '    ' → logprob: -18.250825881958008

Token 491: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.024000179022550583
    2. '<' → logprob: -4.27400016784668
    3. ' <=' → logprob: -4.64900016784668
    4. ' <' → logprob: -8.89900016784668
    5. '<len' → logprob: -11.52400016784668
    6. '+' → logprob: -11.64900016784668
    7. '```' → logprob: -11.64900016784668
    8. '<int' → logprob: -11.89900016784668
    9. '=' → logprob: -12.02400016784668
    10. '<|end|>' → logprob: -12.39900016784668

Token 492: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -4.842555426876061e-06
    2. ' r' → logprob: -12.250004768371582
    3. ' ' → logprob: -20.6250057220459
    4. '	r' → logprob: -21.1250057220459
    5. '   ' → logprob: -21.8750057220459
    6. '_r' → logprob: -22.2500057220459
    7. '
' → logprob: -23.7500057220459
    8. '```' → logprob: -24.0000057220459
    9. '(r' → logprob: -24.1250057220459
    10. '  ' → logprob: -24.5000057220459

Token 493: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.21792283654212952
    2. ':' → logprob: -1.7179228067398071
    3. '<|end|>' → logprob: -5.342922687530518
    4. '               ' → logprob: -5.592922687530518
    5. '           ' → logprob: -5.842922687530518
    6. '):
' → logprob: -6.967922687530518
    7. '   ' → logprob: -7.217922687530518
    8. ' :
' → logprob: -7.342922687530518
    9. ',' → logprob: -7.592922687530518
    10. '       ' → logprob: -7.717922687530518

Token 494: '               ' (ID: 506)
  Prédit: ' mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mid' → logprob: -0.5548412203788757
    2. ' m' → logprob: -1.3048412799835205
    3. '               ' → logprob: -2.0548412799835205
    4. '           ' → logprob: -4.929841041564941
    5. 'mid' → logprob: -5.554841041564941
    6. '   ' → logprob: -5.679841041564941
    7. '[mid' → logprob: -6.179841041564941
    8. ' ' → logprob: -6.304841041564941
    9. 'm' → logprob: -6.429841041564941
    10. '	           ' → logprob: -7.054841041564941

Token 495: ' mid' (ID: 6959)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.42800095677375793
    2. ' m' → logprob: -1.6780009269714355
    3. ' mid' → logprob: -2.3030009269714355
    4. 'mid' (adapté à ' mid') → logprob: -2.8030009269714355
    5. '	m' → logprob: -7.8030009269714355
    6. '   ' → logprob: -8.303001403808594
    7. '               ' → logprob: -9.678001403808594
    8. ' ' → logprob: -9.803001403808594
    9. '                   ' → logprob: -10.428001403808594
    10. '[mid' → logprob: -11.428001403808594

Token 496: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020865457132458687
    2. '=' → logprob: -3.8958654403686523
    3. '=l' → logprob: -8.270865440368652
    4. '```' → logprob: -10.895865440368652
    5. '=int' → logprob: -11.020865440368652
    6. ')' → logprob: -11.770865440368652
    7. '<|end|>' → logprob: -12.145865440368652
    8. '=center' → logprob: -13.145865440368652
    9. '               ' → logprob: -13.395865440368652
    10. '=k' → logprob: -13.645865440368652

Token 497: ' (' (ID: 350)
  Prédit: '(l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.0046737417578697205
    2. ' (' → logprob: -5.379673957824707
    3. '(r' → logprob: -9.879673957824707
    4. 'l' → logprob: -13.754673957824707
    5. '   ' → logprob: -15.004673957824707
    6. '(' → logprob: -15.004673957824707
    7. '(L' → logprob: -15.879673957824707
    8. '(ls' → logprob: -16.12967300415039
    9. 'r' → logprob: -16.50467300415039
    10. '[l' → logprob: -16.87967300415039

Token 498: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -3.190178904333152e-05
    2. ' l' → logprob: -10.375031471252441
    3. '(l' → logprob: -15.375031471252441
    4. '   ' → logprob: -15.875031471252441
    5. '	l' → logprob: -16.375032424926758
    6. '```' → logprob: -17.125032424926758
    7. '_l' → logprob: -17.375032424926758
    8. 'r' → logprob: -18.375032424926758
    9. '           ' → logprob: -18.750032424926758
    10. '[l' → logprob: -18.875032424926758

Token 499: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3299037218093872
    2. ' +' → logprob: -1.3299037218093872
    3. '+l' → logprob: -4.329903602600098
    4. '+r' → logprob: -5.704903602600098
    5. '+k' → logprob: -13.204903602600098
    6. '+m' → logprob: -14.204903602600098
    7. ' ' → logprob: -14.704903602600098
    8. '+w' → logprob: -15.079903602600098
    9. '＋' → logprob: -15.079903602600098
    10. '+b' → logprob: -15.079903602600098

Token 500: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.00043102685594931245
    2. ' r' → logprob: -7.750431060791016
    3. '(r' → logprob: -16.000431060791016
    4. '   ' → logprob: -16.625431060791016
    5. ')' → logprob: -16.875431060791016
    6. '+r' → logprob: -17.000431060791016
    7. '[r' → logprob: -17.750431060791016
    8. '	r' → logprob: -17.750431060791016
    9. '_r' → logprob: -17.750431060791016
    10. ' ' → logprob: -18.875431060791016

Token 501: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015309321461245418
    2. ')//' → logprob: -6.50153112411499
    3. ')>>' → logprob: -10.501530647277832
    4. ' )' → logprob: -14.001530647277832
    5. '）' → logprob: -15.876530647277832
    6. ')
' → logprob: -16.00153160095215
    7. '```' → logprob: -18.75153160095215
    8. '_)' → logprob: -18.75153160095215
    9. '//' → logprob: -19.12653160095215
    10. '0' → logprob: -19.25153160095215

Token 502: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26210716366767883
    2. ' //' → logprob: -2.0121071338653564
    3. '//' → logprob: -2.6371071338653564
    4. '>>' → logprob: -3.8871071338653564
    5. ')//' → logprob: -6.3871073722839355
    6. '```' → logprob: -6.7621073722839355
    7. ' >>' → logprob: -6.8871073722839355
    8. ')>>' → logprob: -7.5121073722839355
    9. ' )' → logprob: -9.512106895446777
    10. '   ' → logprob: -9.762106895446777

Token 503: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.750024795532227
    4. '```' → logprob: -19.125024795532227
    5. '۲' → logprob: -19.750024795532227
    6. '1' → logprob: -20.375024795532227
    7. '  ' → logprob: -20.750024795532227
    8. '3' → logprob: -21.375024795532227
    9. '２' → logprob: -21.625024795532227
    10. '     ' → logprob: -21.812524795532227

Token 504: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '   ' → logprob: -18.0000057220459
    4. '1' → logprob: -18.7500057220459
    5. '```' → logprob: -19.6250057220459
    6. '3' → logprob: -19.8750057220459
    7. '
' → logprob: -20.1250057220459
    8. '5' → logprob: -20.8125057220459
    9. '۲' → logprob: -20.8750057220459
    10. '  ' → logprob: -20.9375057220459

Token 505: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1427217572927475
    2. '<|end|>' → logprob: -2.142721652984619
    3. ')' → logprob: -5.017721652984619
    4. ' if' → logprob: -6.267721652984619
    5. '
' → logprob: -6.517721652984619
    6. '           ' → logprob: -7.017721652984619
    7. '<|end|>' → logprob: -7.017721652984619
    8. '                   ' → logprob: -7.017721652984619
    9. '                ' → logprob: -7.767721652984619
    10. '                
' → logprob: -7.892721652984619

Token 506: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.055208802223205566
    2. '<|end|>' → logprob: -3.555208683013916
    3. ' if' → logprob: -3.930208683013916
    4. '
' → logprob: -5.930208683013916
    5. '<|end|>' → logprob: -7.430208683013916
    6. '                
' → logprob: -7.805208683013916
    7. '                   ' → logprob: -8.055209159851074
    8. '                ' → logprob: -8.305209159851074
    9. ')' → logprob: -8.555209159851074
    10. '           ' → logprob: -8.555209159851074

Token 507: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.241237074136734
    2. ' if' → logprob: -1.6162370443344116
    3. '               ' → logprob: -4.241237163543701
    4. 'pos' → logprob: -6.866237163543701
    5. 'mid' → logprob: -9.241236686706543
    6. '                   ' → logprob: -10.116236686706543
    7. '	if' → logprob: -10.116236686706543
    8. 'position' → logprob: -10.616236686706543
    9. '                ' → logprob: -11.241236686706543
    10. ' pos' → logprob: -11.366236686706543

Token 508: ' Handle' (ID: 25041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02528783120214939
    2. 'pos' → logprob: -4.150287628173828
    3. ' if' → logprob: -4.900287628173828
    4. '               ' → logprob: -6.525287628173828
    5. 'position' → logprob: -9.150287628173828
    6. 'idx' → logprob: -9.900287628173828
    7. '                   ' → logprob: -10.025287628173828
    8. 'index' → logprob: -10.900287628173828
    9. ' pos' → logprob: -11.025287628173828
    10. 'positions' → logprob: -11.150287628173828

Token 509: ' look' (ID: 1631)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6646887063980103
    2. 'cd' → logprob: -1.2896887063980103
    3. ' if' → logprob: -1.6646887063980103
    4. ' cd' → logprob: -4.039688587188721
    5. '               ' → logprob: -6.539688587188721
    6. '                   ' → logprob: -8.414689064025879
    7. 'c' → logprob: -8.414689064025879
    8. 'positions' → logprob: -8.664689064025879
    9. ' positions' → logprob: -8.914689064025879
    10. ' c' → logprob: -8.914689064025879

Token 510: 'ahead' (ID: 96810)
  Prédit: 'up'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'up' → logprob: -0.7658505439758301
    2. 'ing' → logprob: -0.8908505439758301
    3. 'left' → logprob: -3.14085054397583
    4. 'ups' → logprob: -3.39085054397583
    5. '   ' → logprob: -4.51585054397583
    6. 'back' → logprob: -4.64085054397583
    7. 'ahead' → logprob: -5.39085054397583
    8. '```' → logprob: -5.51585054397583
    9. '-up' → logprob: -5.89085054397583
    10. '           ' → logprob: -6.01585054397583

Token 511: ' safely' (ID: 29018)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13438712060451508
    2. 'if' → logprob: -2.8843870162963867
    3. '               ' → logprob: -3.0093870162963867
    4. '                   ' → logprob: -5.134387016296387
    5. '           ' → logprob: -5.384387016296387
    6. ' and' → logprob: -5.884387016296387
    7. ' =' → logprob: -6.759387016296387
    8. '       ' → logprob: -7.009387016296387
    9. ' for' → logprob: -7.259387016296387
    10. '                ' → logprob: -7.384387016296387

Token 512: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3039320707321167
    2. '               ' → logprob: -1.4289320707321167
    3. 'if' → logprob: -4.803932189941406
    4. '                
' → logprob: -5.803932189941406
    5. '<|end|>' → logprob: -6.178932189941406
    6. ' with' → logprob: -6.428932189941406
    7. '                ' → logprob: -6.678932189941406
    8. ' and' → logprob: -6.678932189941406
    9. '
' → logprob: -6.928932189941406
    10. ',' → logprob: -7.053932189941406

Token 513: ' cd' (ID: 24852)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2514984905719757
    2. 'if' → logprob: -1.6264984607696533
    3. 'pos' → logprob: -4.376498699188232
    4. ' pos' → logprob: -4.751498699188232
    5. '               ' → logprob: -7.001498699188232
    6. '                   ' → logprob: -7.126498699188232
    7. ' val' → logprob: -7.626498699188232
    8. ' mid' → logprob: -7.876498699188232
    9. 'import' → logprob: -8.001498222351074
    10. 'mid' → logprob: -8.626498222351074

Token 514: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.4391956685576588e-05
    2. 'dic' → logprob: -11.000024795532227
    3. 'c' → logprob: -12.625024795532227
    4. 'ics' → logprob: -14.375024795532227
    5. '```' → logprob: -14.500024795532227
    6. 'i' → logprob: -14.750024795532227
    7. '   ' → logprob: -15.000024795532227
    8. '[c' → logprob: -15.000024795532227
    9. 'list' → logprob: -15.125024795532227
    10. '[' → logprob: -15.250024795532227

Token 515: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0005020392127335072
    2. 'c' → logprob: -8.37550163269043
    3. '<|end|>' → logprob: -10.50050163269043
    4. '```' → logprob: -10.50050163269043
    5. '[' → logprob: -10.62550163269043
    6. 's' → logprob: -10.75050163269043
    7. ' [' → logprob: -11.12550163269043
    8. '][' → logprob: -11.12550163269043
    9. '[
' → logprob: -11.25050163269043
    10. '
' → logprob: -11.37550163269043

Token 516: '][' (ID: 2696)
  Prédit: '[mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.11337260901927948
    2. '][' → logprob: -2.238372564315796
    3. '[' → logprob: -8.738372802734375
    4. ']' → logprob: -9.113372802734375
    5. '[m' → logprob: -9.238372802734375
    6. ')[' → logprob: -10.363372802734375
    7. 'mid' → logprob: -10.988372802734375
    8. '
' → logprob: -11.238372802734375
    9. '"][' → logprob: -11.488372802734375
    10. '[mem' → logprob: -11.488372802734375

Token 517: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0013089290587231517
    2. '[mid' → logprob: -6.751308917999268
    3. ' mid' → logprob: -9.376309394836426
    4. '(mid' → logprob: -10.001309394836426
    5. '
' → logprob: -12.251309394836426
    6. '_mid' → logprob: -14.126309394836426
    7. ']' → logprob: -14.376309394836426
    8. '][' → logprob: -14.501309394836426
    9. 'min' → logprob: -15.001309394836426
    10. '```' → logprob: -15.501309394836426

Token 518: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0215134359896183
    2. ']<' → logprob: -4.14651346206665
    3. '<' → logprob: -6.02151346206665
    4. ' ]' → logprob: -6.89651346206665
    5. ']<=' → logprob: -7.14651346206665
    6. ' <' → logprob: -7.39651346206665
    7. 'if' → logprob: -8.896512985229492
    8. '<=' → logprob: -9.396512985229492
    9. ')' → logprob: -9.771512985229492
    10. '<|end|>' → logprob: -9.771512985229492

Token 519: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002075933152809739
    2. ' ' → logprob: -9.375207901000977
    3. ']' → logprob: -9.500207901000977
    4. '+' → logprob: -10.750207901000977
    5. '0' → logprob: -11.375207901000977
    6. '```' → logprob: -11.875207901000977
    7. '
' → logprob: -12.875207901000977
    8. '   ' → logprob: -13.125207901000977
    9. 'mid' → logprob: -14.750207901000977
    10. ']+' → logprob: -14.875207901000977

Token 520: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008316571824252605
    2. '][' → logprob: -6.133316516876221
    3. ']<' → logprob: -6.258316516876221
    4. ']<=' → logprob: -6.383316516876221
    5. ' ]' → logprob: -7.133316516876221
    6. 'if' → logprob: -7.633316516876221
    7. ']>' → logprob: -8.258316993713379
    8. ' if' → logprob: -8.758316993713379
    9. ']>=' → logprob: -9.008316993713379
    10. '[' → logprob: -9.133316993713379

Token 521: ' may' (ID: 1340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.32317572832107544
    2. 'if' → logprob: -2.3231756687164307
    3. ' <=' → logprob: -2.4481756687164307
    4. ' <' → logprob: -3.3231756687164307
    5. ']' → logprob: -4.07317590713501
    6. '<=' → logprob: -4.32317590713501
    7. ' >' → logprob: -4.94817590713501
    8. '>' → logprob: -5.44817590713501
    9. ' >=' → logprob: -5.94817590713501
    10. ' and' → logprob: -5.94817590713501

Token 522: ' not' (ID: 625)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -1.3235710859298706
    2. 'if' → logprob: -1.3235710859298706
    3. '<=' → logprob: -1.9485710859298706
    4. ' if' → logprob: -2.44857120513916
    5. ' be' → logprob: -2.57357120513916
    6. 'Index' → logprob: -2.82357120513916
    7. ']' → logprob: -3.82357120513916
    8. ' not' → logprob: -4.07357120513916
    9. '==' → logprob: -4.57357120513916
    10. ' <=' → logprob: -4.82357120513916

Token 523: ' exist' (ID: 4310)
  Prédit: ' exist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exist' → logprob: -0.15719562768936157
    2. 'exist' → logprob: -2.032195568084717
    3. ' be' → logprob: -4.407195568084717
    4. '<' → logprob: -7.407195568084717
    5. '_exist' → logprob: -7.532195568084717
    6. 'be' → logprob: -8.032196044921875
    7. '<=' → logprob: -8.407196044921875
    8. ']' → logprob: -9.157196044921875
    9. '```' → logprob: -9.282196044921875
    10. '<|end|>' → logprob: -9.407196044921875

Token 524: ' at' (ID: 540)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.45021191239356995
    2. '               ' → logprob: -1.5752118825912476
    3. ' and' → logprob: -2.325212001800537
    4. 'if' → logprob: -4.075212001800537
    5. '
' → logprob: -4.450212001800537
    6. '<|end|>' → logprob: -4.825212001800537
    7. ' or' → logprob: -4.950212001800537
    8. ',' → logprob: -5.700212001800537
    9. 'and' → logprob: -5.825212001800537
    10. '                   ' → logprob: -6.325212001800537

Token 525: ' r' (ID: 428)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.009845804423093796
    2. ' mid' → logprob: -4.884845733642578
    3. 'all' → logprob: -6.384845733642578
    4. ' all' → logprob: -8.509845733642578
    5. 'index' → logprob: -9.634845733642578
    6. 'l' → logprob: -9.634845733642578
    7. 'if' → logprob: -9.759845733642578
    8. '(mid' → logprob: -10.134845733642578
    9. '+' → logprob: -10.384845733642578
    10. 'r' → logprob: -10.884845733642578

Token 526: '=len' (ID: 114011)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.050879716873169
    2. '               ' → logprob: -1.550879716873169
    3. ')' → logprob: -2.675879716873169
    4. ' if' → logprob: -2.800879716873169
    5. ' or' → logprob: -2.800879716873169
    6. ']' → logprob: -3.175879716873169
    7. ':
' → logprob: -3.300879716873169
    8. '                   ' → logprob: -3.425879716873169
    9. '<|end|>' → logprob: -3.800879716873169
    10. '+' → logprob: -3.800879716873169

Token 527: '-' (ID: 12)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.21264614164829254
    2. ')' → logprob: -3.087646245956421
    3. '-' → logprob: -3.087646245956421
    4. '+' → logprob: -3.712646245956421
    5. ']' → logprob: -4.087646007537842
    6. '(cd' → logprob: -4.337646007537842
    7. 'cd' → logprob: -4.587646007537842
    8. ' -' → logprob: -4.712646007537842
    9. '           ' → logprob: -5.337646007537842
    10. 'c' → logprob: -5.587646007537842

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3544536530971527
    2. 'cd' → logprob: -1.479453682899475
    3. '-' → logprob: -3.6044535636901855
    4. '(cd' → logprob: -4.2294535636901855
    5. 'c' → logprob: -4.8544535636901855
    6. ' cd' → logprob: -5.1044535636901855
    7. ' ' → logprob: -5.6044535636901855
    8. '(c' → logprob: -5.6044535636901855
    9. ')' → logprob: -6.6044535636901855
    10. ' -' → logprob: -6.7294535636901855

Token 529: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2807074189186096
    2. '<|end|>' → logprob: -2.030707359313965
    3. ' if' → logprob: -3.405707359313965
    4. ')' → logprob: -3.530707359313965
    5. ':
' → logprob: -4.280707359313965
    6. ',' → logprob: -4.655707359313965
    7. '):
' → logprob: -4.905707359313965
    8. ' and' → logprob: -5.405707359313965
    9. '                   ' → logprob: -5.405707359313965
    10. ':' → logprob: -6.030707359313965

Token 530: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03246193006634712
    2. ' if' → logprob: -4.282462120056152
    3. '
' → logprob: -4.657462120056152
    4. '<|end|>' → logprob: -5.907462120056152
    5. '                   ' → logprob: -6.407462120056152
    6. ' and' → logprob: -7.282462120056152
    7. '           ' → logprob: -7.407462120056152
    8. '                ' → logprob: -7.782462120056152
    9. ' 
' → logprob: -7.907462120056152
    10. '       ' → logprob: -8.032462120056152

Token 531: ' next' (ID: 2613)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11104485392570496
    2. 'if' → logprob: -2.3610448837280273
    3. '               ' → logprob: -4.611044883728027
    4. ')' → logprob: -8.486044883728027
    5. 'mid' → logprob: -8.611044883728027
    6. ' mid' → logprob: -9.736044883728027
    7. '
' → logprob: -10.111044883728027
    8. '                ' → logprob: -10.361044883728027
    9. '                
' → logprob: -10.486044883728027
    10. ' and' → logprob: -10.486044883728027

Token 532: '_index' (ID: 7748)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.7047854065895081
    2. '_idx' → logprob: -1.3297853469848633
    3. '_index' → logprob: -2.0797853469848633
    4. '_mid' → logprob: -3.4547853469848633
    5. '_val' → logprob: -3.5797853469848633
    6. 'pos' → logprob: -3.8297853469848633
    7. 'idx' → logprob: -5.079785346984863
    8. '_' → logprob: -5.204785346984863
    9. '_occ' → logprob: -5.329785346984863
    10. '_c' → logprob: -5.329785346984863

Token 533: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42886289954185486
    2. '=' → logprob: -1.0538629293441772
    3. '>' → logprob: -9.803862571716309
    4. ']' → logprob: -10.053862571716309
    5. ' ' → logprob: -11.303862571716309
    6. '   ' → logprob: -11.678862571716309
    7. ')' → logprob: -11.803862571716309
    8. ' >' → logprob: -11.928862571716309
    9. 's' → logprob: -12.928862571716309
    10. '=index' → logprob: -13.053862571716309

Token 534: ' mid' (ID: 6959)
  Prédit: ' cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -0.4794699251651764
    2. 'cd' → logprob: -0.979469895362854
    3. ' mid' → logprob: -6.3544697761535645
    4. 'mid' → logprob: -6.8544697761535645
    5. '(cd' → logprob: -7.2294697761535645
    6. 'c' → logprob: -7.6044697761535645
    7. '(c' → logprob: -7.7294697761535645
    8. '0' → logprob: -8.354470252990723
    9. ' None' → logprob: -8.979470252990723
    10. ' c' → logprob: -9.229470252990723

Token 535: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2595321238040924
    2. ' +' → logprob: -1.75953209400177
    3. ']+' → logprob: -3.5095322132110596
    4. ']' → logprob: -3.6345322132110596
    5. '+c' → logprob: -10.75953197479248
    6. '<|end|>' → logprob: -10.88453197479248
    7. ')+' → logprob: -11.00953197479248
    8. '[' → logprob: -11.63453197479248
    9. 's' → logprob: -11.63453197479248
    10. '   ' → logprob: -12.13453197479248

Token 536: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018006093159783632
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -16.000179290771484
    4. '0' → logprob: -16.125179290771484
    5. '2' → logprob: -16.250179290771484
    6. '
' → logprob: -16.625179290771484
    7. '+' → logprob: -17.125179290771484
    8. '```' → logprob: -17.375179290771484
    9. '  ' → logprob: -18.500179290771484
    10. '[' → logprob: -19.187679290771484

Token 537: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9385402993066236e-05
    2. ' ' → logprob: -10.875019073486328
    3. '2' → logprob: -15.500019073486328
    4. '   ' → logprob: -16.750019073486328
    5. '+' → logprob: -17.625019073486328
    6. '
' → logprob: -18.000019073486328
    7. '```' → logprob: -18.000019073486328
    8. '  ' → logprob: -18.125019073486328
    9. '0' → logprob: -18.500019073486328
    10. '[' → logprob: -19.937519073486328

Token 538: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5250502824783325
    2. '               ' → logprob: -1.5250502824783325
    3. '<|end|>' → logprob: -1.9000502824783325
    4. '
' → logprob: -4.275050163269043
    5. '           ' → logprob: -4.650050163269043
    6. 'if' → logprob: -4.775050163269043
    7. '                   ' → logprob: -5.400050163269043
    8. '       ' → logprob: -6.900050163269043
    9. ',' → logprob: -7.275050163269043
    10. ' ' → logprob: -7.900050163269043

Token 539: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008222105912864208
    2. '<|end|>' → logprob: -5.0082221031188965
    3. ' if' → logprob: -6.7582221031188965
    4. ',' → logprob: -9.383222579956055
    5. '<|end|>' → logprob: -10.008222579956055
    6. '           ' → logprob: -10.133222579956055
    7. '                ' → logprob: -10.258222579956055
    8. '                
' → logprob: -10.258222579956055
    9. ' and' → logprob: -11.008222579956055
    10. '              ' → logprob: -11.133222579956055

Token 540: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03275685012340546
    2. 'if' (adapté à ' if') → logprob: -4.032756805419922
    3. '               ' → logprob: -4.282756805419922
    4. ' while' → logprob: -8.157756805419922
    5. '           ' → logprob: -9.032756805419922
    6. '                   ' → logprob: -9.782756805419922
    7. 'while' → logprob: -10.032756805419922
    8. '<|end|>' → logprob: -10.157756805419922
    9. ' and' → logprob: -10.532756805419922
    10. ',' → logprob: -11.032756805419922

Token 541: ' cd' (ID: 24852)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5804346203804016
    2. ' next' → logprob: -0.8304346203804016
    3. 'r' → logprob: -6.080434799194336
    4. 'cd' → logprob: -6.955434799194336
    5. ' cd' → logprob: -7.455434799194336
    6. ' r' → logprob: -7.705434799194336
    7. '(next' → logprob: -9.830434799194336
    8. '   ' → logprob: -10.705434799194336
    9. 'c' → logprob: -10.955434799194336
    10. 'mid' → logprob: -11.080434799194336

Token 542: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -2.1008713702030946e-06
    2. 'c' → logprob: -14.000001907348633
    3. 'dic' → logprob: -15.125001907348633
    4. 'next' → logprob: -15.375001907348633
    5. '[c' → logprob: -16.125001907348633
    6. '   ' → logprob: -16.375001907348633
    7. '  ' → logprob: -17.250001907348633
    8. ' ' → logprob: -17.375001907348633
    9. '_ic' → logprob: -17.500001907348633
    10. 'sic' → logprob: -17.500001907348633

Token 543: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -7.703443770878948e-06
    2. 'c' → logprob: -12.000007629394531
    3. '<|end|>' → logprob: -14.750007629394531
    4. ' [' → logprob: -14.875007629394531
    5. '```' → logprob: -15.875007629394531
    6. ')c' → logprob: -15.875007629394531
    7. '[' → logprob: -16.25000762939453
    8. 's' → logprob: -16.37500762939453
    9. ')' → logprob: -16.75000762939453
    10. '=c' → logprob: -17.25000762939453

Token 544: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.03720969706773758
    2. '][' → logprob: -3.5372097492218018
    3. '[' → logprob: -6.162209510803223
    4. '[next' → logprob: -6.287209510803223
    5. 'c' → logprob: -6.537209510803223
    6. '[mid' → logprob: -6.787209510803223
    7. '[l' → logprob: -9.037209510803223
    8. ']' → logprob: -9.037209510803223
    9. '[
' → logprob: -9.537209510803223
    10. '   ' → logprob: -9.849709510803223

Token 545: 'mid' (ID: 23430)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.09363862127065659
    2. 'mid' → logprob: -2.9686386585235596
    3. 'next' → logprob: -3.3436386585235596
    4. '[mid' → logprob: -6.9686384201049805
    5. '[c' → logprob: -7.3436384201049805
    6. '[next' → logprob: -7.4686384201049805
    7. ' c' → logprob: -8.46863842010498
    8. ' next' → logprob: -8.84363842010498
    9. ' mid' → logprob: -9.71863842010498
    10. '   ' → logprob: -10.71863842010498

Token 546: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16540490090847015
    2. '[next' → logprob: -2.790404796600342
    3. ']<' → logprob: -3.165404796600342
    4. '<' → logprob: -3.665404796600342
    5. ' <' → logprob: -4.290404796600342
    6. '[' → logprob: -5.790404796600342
    7. '[mid' → logprob: -5.915404796600342
    8. ' ]' → logprob: -6.665404796600342
    9. ']<=' → logprob: -7.290404796600342
    10. '[l' → logprob: -7.790404796600342

Token 547: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.14331184327602386
    2. ' <' → logprob: -2.0183117389678955
    3. '>=' → logprob: -8.268311500549316
    4. '<n' → logprob: -9.893311500549316
    5. ' >=' → logprob: -10.268311500549316
    6. '==' → logprob: -10.268311500549316
    7. '<th' → logprob: -10.393311500549316
    8. '<=' → logprob: -10.518311500549316
    9. '[' → logprob: -10.643311500549316
    10. ')' → logprob: -10.643311500549316

Token 548: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0007104054093360901
    2. ' i' → logprob: -7.250710487365723
    3. '   ' → logprob: -15.625710487365723
    4. '	i' → logprob: -15.875710487365723
    5. '
' → logprob: -16.875709533691406
    6. '           ' → logprob: -17.500709533691406
    7. '                   ' → logprob: -18.250709533691406
    8. ' ' → logprob: -18.875709533691406
    9. '       ' → logprob: -19.000709533691406
    10. '_i' → logprob: -19.500709533691406

Token 549: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3581209182739258
    2. ':
' → logprob: -1.3581209182739258
    3. 'and' → logprob: -3.858120918273926
    4. ':' → logprob: -4.108120918273926
    5. '           ' → logprob: -5.608120918273926
    6. '                   ' → logprob: -6.608120918273926
    7. '               ' → logprob: -7.108120918273926
    8. ' :
' → logprob: -8.608120918273926
    9. '):
' → logprob: -9.108120918273926
    10. '                       ' → logprob: -10.483120918273926

Token 550: ' (' (ID: 350)
  Prédit: ' cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cd' → logprob: -1.1192872524261475
    2. 'cd' → logprob: -1.3692872524261475
    3. ' next' → logprob: -1.8692872524261475
    4. 'next' → logprob: -1.9942872524261475
    5. ' (' → logprob: -2.8692872524261475
    6. '(next' → logprob: -3.7442872524261475
    7. '(cd' → logprob: -3.8692872524261475
    8. ' l' → logprob: -4.744287490844727
    9. '(l' → logprob: -5.244287490844727
    10. 'l' → logprob: -5.369287490844727

Token 551: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.5893228650093079
    2. '(next' → logprob: -0.8393228650093079
    3. ' next' → logprob: -5.339323043823242
    4. ' (' → logprob: -5.589323043823242
    5. 'cd' → logprob: -6.464323043823242
    6. '(cd' → logprob: -6.589323043823242
    7. '(c' → logprob: -7.839323043823242
    8. 'mid' → logprob: -8.339323043823242
    9. '(' → logprob: -8.339323043823242
    10. 'not' → logprob: -8.839323043823242

Token 552: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00028088156250305474
    2. 'index' → logprob: -8.37528133392334
    3. 'Index' → logprob: -11.50028133392334
    4. '_token' → logprob: -12.25028133392334
    5. ')' → logprob: -12.37528133392334
    6. '   ' → logprob: -12.37528133392334
    7. '
' → logprob: -12.87528133392334
    8. '<' → logprob: -12.87528133392334
    9. '==' → logprob: -13.00028133392334
    10. '_INDEX' → logprob: -13.50028133392334

Token 553: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.31066545844078064
    2. ' >=' → logprob: -1.935665488243103
    3. '==' → logprob: -2.8106653690338135
    4. '<' → logprob: -3.5606653690338135
    5. ' <' → logprob: -4.435665607452393
    6. '>' → logprob: -4.560665607452393
    7. ' ==' → logprob: -4.935665607452393
    8. '<len' → logprob: -5.810665607452393
    9. ' >' → logprob: -6.935665607452393
    10. '<=' → logprob: -9.185665130615234

Token 554: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00044044392416253686
    2. ' len' → logprob: -7.75044059753418
    3. '0' → logprob: -12.12544059753418
    4. '(len' → logprob: -13.25044059753418
    5. 'r' → logprob: -14.37544059753418
    6. '   ' → logprob: -14.50044059753418
    7. '=len' → logprob: -14.87544059753418
    8. '<len' → logprob: -15.62544059753418
    9. ' ' → logprob: -15.87544059753418
    10. '[len' → logprob: -15.87544059753418

Token 555: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0005541055579669774
    2. 'cd' → logprob: -7.875554084777832
    3. ')' → logprob: -9.750554084777832
    4. '```' → logprob: -10.500554084777832
    5. 'c' → logprob: -10.625554084777832
    6. '   ' → logprob: -11.000554084777832
    7. '
' → logprob: -11.875554084777832
    8. '  ' → logprob: -12.000554084777832
    9. '	c' → logprob: -12.625554084777832
    10. '(' → logprob: -12.625554084777832

Token 556: 'dic' (ID: 62630)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.1566949188709259
    2. '[c' → logprob: -2.0316948890686035
    3. '[' → logprob: -5.1566948890686035
    4. '(c' → logprob: -5.6566948890686035
    5. 'c' → logprob: -6.2816948890686035
    6. ')' → logprob: -6.9066948890686035
    7. '(cd' → logprob: -7.9066948890686035
    8. 'dic' → logprob: -8.406695365905762
    9. 'ic' → logprob: -8.531695365905762
    10. ']' → logprob: -8.531695365905762

Token 557: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -9.376848902320489e-05
    2. 'c' → logprob: -9.875093460083008
    3. ')' → logprob: -10.500093460083008
    4. '[' → logprob: -13.000093460083008
    5. ')c' → logprob: -13.250093460083008
    6. '
' → logprob: -13.250093460083008
    7. '   ' → logprob: -13.500093460083008
    8. ' [' → logprob: -14.250093460083008
    9. ' ' → logprob: -14.375093460083008
    10. '{' → logprob: -14.500093460083008

Token 558: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25998395681381226
    2. '[c' → logprob: -2.259984016418457
    3. ' or' → logprob: -2.884984016418457
    4. ']' → logprob: -2.884984016418457
    5. 'or' → logprob: -4.509984016418457
    6. 'c' → logprob: -7.259984016418457
    7. '])' → logprob: -7.634984016418457
    8. ' )' → logprob: -8.134984016418457
    9. '[' → logprob: -9.509984016418457
    10. ')]' → logprob: -9.509984016418457

Token 559: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.029764147475361824
    2. 'or' → logprob: -3.529764175415039
    3. '	or' → logprob: -11.904764175415039
    4. '           ' → logprob: -12.654764175415039
    5. ' ' → logprob: -14.404764175415039
    6. ')' → logprob: -14.654764175415039
    7. '        ' → logprob: -14.779764175415039
    8. '    ' → logprob: -15.029764175415039
    9. '               ' → logprob: -15.154764175415039
    10. '       ' → logprob: -15.154764175415039

Token 560: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.006753259804099798
    2. ' cd' → logprob: -5.006753444671631
    3. '                   ' → logprob: -11.631752967834473
    4. 'cdn' → logprob: -11.881752967834473
    5. '   ' → logprob: -12.256752967834473
    6. '	cd' → logprob: -12.756752967834473
    7. '(cd' → logprob: -12.881752967834473
    8. '               ' → logprob: -13.131752967834473
    9. ' ' → logprob: -13.631752967834473
    10. ')' → logprob: -13.756752967834473

Token 561: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0002659847668837756
    2. 'dic' → logprob: -9.000266075134277
    3. '[c' → logprob: -9.500266075134277
    4. 'c' → logprob: -10.000266075134277
    5. '[' → logprob: -11.625266075134277
    6. '   ' → logprob: -13.625266075134277
    7. '(dic' → logprob: -13.625266075134277
    8. '
' → logprob: -13.750266075134277
    9. '{' → logprob: -14.000266075134277
    10. '```' → logprob: -14.125266075134277

Token 562: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.320199877838604e-07
    2. 'c' → logprob: -14.875
    3. ')c' → logprob: -17.875
    4. '[' → logprob: -19.0
    5. '```' → logprob: -19.25
    6. ' [' → logprob: -19.875
    7. ')[' → logprob: -20.125
    8. '	c' → logprob: -20.5
    9. '
' → logprob: -20.5
    10. '[
' → logprob: -20.625

Token 563: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.00019364648323971778
    2. '][' → logprob: -8.87519359588623
    3. 'c' → logprob: -10.00019359588623
    4. '[' → logprob: -12.37519359588623
    5. '[
' → logprob: -13.62519359588623
    6. '```' → logprob: -14.50019359588623
    7. ']' → logprob: -14.62519359588623
    8. '
' → logprob: -15.12519359588623
    9. ' [' → logprob: -15.50019359588623
    10. '[s' → logprob: -15.75019359588623

Token 564: 'next' (ID: 7311)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17981234192848206
    2. '[c' → logprob: -1.8048123121261597
    3. ' c' → logprob: -10.67981243133545
    4. '[' → logprob: -10.80481243133545
    5. ')c' → logprob: -12.05481243133545
    6. '
' → logprob: -12.80481243133545
    7. '	c' → logprob: -13.05481243133545
    8. '[next' → logprob: -13.17981243133545
    9. '```' → logprob: -13.17981243133545
    10. '[
' → logprob: -13.30481243133545

Token 565: '_index' (ID: 7748)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.010874135419726372
    2. 'c' → logprob: -4.635874271392822
    3. '[mid' → logprob: -8.385873794555664
    4. 'mid' → logprob: -8.760873794555664
    5. '[' → logprob: -9.010873794555664
    6. '][' → logprob: -9.260873794555664
    7. '```' → logprob: -9.385873794555664
    8. '_index' → logprob: -9.510873794555664
    9. '
' → logprob: -10.135873794555664
    10. '   ' → logprob: -10.135873794555664

Token 566: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3681159019470215
    2. '[mid' → logprob: -1.4931159019470215
    3. ' >' → logprob: -3.4931159019470215
    4. '>=' → logprob: -4.1181159019470215
    5. '[' → logprob: -4.3681159019470215
    6. ')' → logprob: -4.3681159019470215
    7. ']' → logprob: -5.4931159019470215
    8. ')>' → logprob: -6.6181159019470215
    9. '>[' → logprob: -6.8681159019470215
    10. ']>' → logprob: -7.1181159019470215

Token 567: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4700019955635071
    2. ' >' → logprob: -1.8450019359588623
    3. '>=' → logprob: -2.7200019359588623
    4. '<' → logprob: -2.9700019359588623
    5. ' <' → logprob: -3.2200019359588623
    6. '[mid' → logprob: -3.3450019359588623
    7. ' >=' → logprob: -4.220002174377441
    8. '<=' → logprob: -5.470002174377441
    9. '[' → logprob: -6.220002174377441
    10. ')' → logprob: -6.345002174377441

Token 568: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.001731106429360807
    2. ' i' → logprob: -6.376730918884277
    3. '   ' → logprob: -10.626730918884277
    4. ' ' → logprob: -13.001730918884277
    5. '  ' → logprob: -14.251730918884277
    6. '       ' → logprob: -14.626730918884277
    7. '
' → logprob: -15.501730918884277
    8. ')' → logprob: -15.501730918884277
    9. '    ' → logprob: -15.626730918884277
    10. '           ' → logprob: -15.751730918884277

Token 569: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0020125024020671844
    2. '):' → logprob: -6.502012729644775
    3. ' ):
' → logprob: -8.127012252807617
    4. '               ' → logprob: -8.877012252807617
    5. '                   ' → logprob: -10.127012252807617
    6. ':
' → logprob: -11.377012252807617
    7. '           ' → logprob: -12.127012252807617
    8. '):
' → logprob: -12.127012252807617
    9. ')' → logprob: -12.502012252807617
    10. '):

' → logprob: -12.627012252807617

Token 570: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6290602087974548
    2. '                   ' → logprob: -0.8790602087974548
    3. ':
' → logprob: -3.6290602684020996
    4. ':' → logprob: -5.2540602684021
    5. '):
' → logprob: -5.2540602684021
    6. ' r' → logprob: -5.7540602684021
    7. ' l' → logprob: -6.1290602684021
    8. 'r' → logprob: -6.5040602684021
    9. ')' → logprob: -6.5040602684021
    10. '<|end|>' → logprob: -6.5040602684021

Token 571: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.1085057184100151
    2. 'l' → logprob: -2.6085057258605957
    3. 'r' → logprob: -4.233505725860596
    4. ' dp' → logprob: -5.108505725860596
    5. '                   ' → logprob: -5.858505725860596
    6. 'break' → logprob: -6.233505725860596
    7. '               ' → logprob: -6.358505725860596
    8. '           ' → logprob: -6.858505725860596
    9. ' l' → logprob: -7.608505725860596
    10. 'return' → logprob: -9.483505249023438

Token 572: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.173704271830502e-06
    2. '[' → logprob: -12.87500286102295
    3. 'i' → logprob: -15.00000286102295
    4. '[I' → logprob: -15.12500286102295
    5. '[index' → logprob: -17.750003814697266
    6. 'import' → logprob: -18.000003814697266
    7. '[j' → logprob: -18.000003814697266
    8. '[in' → logprob: -18.500003814697266
    9. '[idx' → logprob: -18.875003814697266
    10. '```' → logprob: -19.125003814697266

Token 573: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.41121917963027954
    2. ']+=' → logprob: -1.2862191200256348
    3. ' +=' → logprob: -3.0362191200256348
    4. ']' → logprob: -4.411219120025635
    5. '=' → logprob: -8.036219596862793
    6. ')' → logprob: -8.286219596862793
    7. ']+' → logprob: -10.786219596862793
    8. '+' → logprob: -11.161219596862793
    9. '           ' → logprob: -11.786219596862793
    10. '   ' → logprob: -11.911219596862793

Token 574: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0013184542767703533
    2. ' +=' → logprob: -6.751318454742432
    3. '=' → logprob: -9.126317977905273
    4. '%=' → logprob: -10.751317977905273
    5. ']+=' → logprob: -11.001317977905273
    6. '+=(' → logprob: -14.251317977905273
    7. '+' → logprob: -15.376317977905273
    8. '   ' → logprob: -16.626317977905273
    9. '           ' → logprob: -16.751317977905273
    10. '%' → logprob: -16.751317977905273

Token 575: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -1.3306015716807451e-05
    2. ' dp' → logprob: -11.25001335144043
    3. '	dp' → logprob: -16.00001335144043
    4. '   ' → logprob: -16.75001335144043
    5. '                   ' → logprob: -16.75001335144043
    6. '(dp' → logprob: -18.00001335144043
    7. '           ' → logprob: -18.12501335144043
    8. '
' → logprob: -18.75001335144043
    9. '               ' → logprob: -19.00001335144043
    10. 'd' → logprob: -19.00001335144043

Token 576: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.778209353797138e-05
    2. '[c' → logprob: -10.000067710876465
    3. 'cd' → logprob: -11.500067710876465
    4. '[
' → logprob: -11.875067710876465
    5. '[(' → logprob: -12.875067710876465
    6. '(c' → logprob: -13.375067710876465
    7. '
' → logprob: -15.375067710876465
    8. '(cd' → logprob: -15.500067710876465
    9. '   ' → logprob: -15.750067710876465
    10. '(' → logprob: -15.875067710876465

Token 577: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -1.5094070477061905e-05
    2. ' cd' → logprob: -11.250015258789062
    3. '(cd' → logprob: -14.250015258789062
    4. '[' → logprob: -14.625015258789062
    5. '   ' → logprob: -14.625015258789062
    6. 'cdn' → logprob: -16.375015258789062
    7. 'c' → logprob: -16.500015258789062
    8. '  ' → logprob: -16.625015258789062
    9. '(' → logprob: -17.125015258789062
    10. ' ' → logprob: -17.375015258789062

Token 578: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.020222777500748634
    2. '[c' → logprob: -4.1452226638793945
    3. '[' → logprob: -6.0202226638793945
    4. 'dic' → logprob: -7.0202226638793945
    5. 'c' → logprob: -7.5202226638793945
    6. '[j' → logprob: -8.645222663879395
    7. '[i' → logprob: -10.020222663879395
    8. '   ' → logprob: -10.770222663879395
    9. '{' → logprob: -12.020222663879395
    10. '
' → logprob: -12.145222663879395

Token 579: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.656383680412546e-05
    2. 'c' → logprob: -10.000046730041504
    3. '[' → logprob: -14.125046730041504
    4. '```' → logprob: -15.750046730041504
    5. '[
' → logprob: -15.875046730041504
    6. '][' → logprob: -17.375045776367188
    7. '(c' → logprob: -18.125045776367188
    8. '[user' → logprob: -18.125045776367188
    9. '\[' → logprob: -18.125045776367188
    10. '[s' → logprob: -18.625045776367188

Token 580: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -8.745069499127567e-05
    2. 'c' → logprob: -9.37508773803711
    3. '[' → logprob: -13.37508773803711
    4. '[
' → logprob: -14.75008773803711
    5. '][' → logprob: -15.37508773803711
    6. '```' → logprob: -16.25008773803711
    7. ']' → logprob: -16.50008773803711
    8. '[s' → logprob: -16.75008773803711
    9. 's' → logprob: -16.75008773803711
    10. '(c' → logprob: -17.37508773803711

Token 581: 'mid' (ID: 23430)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.11364749073982239
    2. '[c' → logprob: -2.2386474609375
    3. '[mid' → logprob: -8.6136474609375
    4. '[' → logprob: -8.7386474609375
    5. ' c' → logprob: -8.8636474609375
    6. 'mid' → logprob: -9.3636474609375
    7. 'i' → logprob: -9.7386474609375
    8. '[i' → logprob: -9.8636474609375
    9. '[m' → logprob: -10.6136474609375
    10. '   ' → logprob: -10.8636474609375

Token 582: ']]
' (ID: 29446)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.024068137630820274
    2. ']]
' → logprob: -3.8990681171417236
    3. ']' → logprob: -6.399068355560303
    4. '[i' → logprob: -6.774068355560303
    5. '[' → logprob: -8.149067878723145
    6. ']]

' → logprob: -9.149067878723145
    7. '[c' → logprob: -10.149067878723145
    8. ']])' → logprob: -10.149067878723145
    9. ' ]]' → logprob: -10.399067878723145
    10. '])' → logprob: -10.399067878723145

Token 583: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00037740718107670546
    2. '               ' → logprob: -8.250377655029297
    3. '           ' → logprob: -9.625377655029297
    4. '       ' → logprob: -10.875377655029297
    5. '                       ' → logprob: -11.125377655029297
    6. '                  ' → logprob: -13.250377655029297
    7. '   ' → logprob: -13.375377655029297
    8. '
' → logprob: -13.375377655029297
    9. '                    ' → logprob: -13.375377655029297
    10. ',' → logprob: -13.500377655029297

Token 584: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02190771885216236
    2. 'break' (adapté à ' break') → logprob: -4.396907806396484
    3. ' break' → logprob: -4.896907806396484
    4. 'r' → logprob: -7.646907806396484
    5. '               ' → logprob: -7.896907806396484
    6. 'return' → logprob: -8.021907806396484
    7. '           ' → logprob: -8.521907806396484
    8. ' r' → logprob: -8.771907806396484
    9. ' return' → logprob: -9.396907806396484
    10. '                       ' → logprob: -9.521907806396484

Token 585: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002951793372631073
    2. '                   ' → logprob: -6.752951622009277
    3. 'l' → logprob: -7.002951622009277
    4. ' l' → logprob: -8.377951622009277
    5. '```' → logprob: -8.627951622009277
    6. '           ' → logprob: -9.127951622009277
    7. 'elif' → logprob: -9.252951622009277
    8. 'r' → logprob: -9.752951622009277
    9. 'else' → logprob: -10.002951622009277
    10. '       ' → logprob: -10.002951622009277

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018253617454320192
    2. '       ' → logprob: -7.501825332641602
    3. 'else' → logprob: -7.876825332641602
    4. '           ' → logprob: -8.001825332641602
    5. '                   ' → logprob: -8.501825332641602
    6. ' else' → logprob: -8.626825332641602
    7. '.' → logprob: -10.376825332641602
    8. '```' → logprob: -10.751825332641602
    9. '   ' → logprob: -11.126825332641602
    10. ',' → logprob: -11.251825332641602

Token 587: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04734328016638756
    2. ' l' → logprob: -4.0473432540893555
    3. ' elif' → logprob: -4.1723432540893555
    4. ' if' → logprob: -5.6723432540893555
    5. ' else' → logprob: -5.9223432540893555
    6. 'elif' (adapté à ' elif') → logprob: -6.1723432540893555
    7. ' ' → logprob: -6.9223432540893555
    8. 'l' → logprob: -7.0473432540893555
    9. ' r' → logprob: -7.1723432540893555
    10. ')' → logprob: -7.5473432540893555

Token 588: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.22773903608322144
    2. ' cd' → logprob: -1.6027390956878662
    3. 'r' → logprob: -6.477738857269287
    4. 'l' → logprob: -8.102739334106445
    5. ' r' → logprob: -8.852739334106445
    6. 'next' → logprob: -9.727739334106445
    7. '	cd' → logprob: -9.852739334106445
    8. ' next' → logprob: -10.227739334106445
    9. 'c' → logprob: -10.352739334106445
    10. ' l' → logprob: -10.477739334106445

Token 589: 'ic' (ID: 291)
  Prédit: 'ic'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ic' → logprob: -0.0015984143828973174
    2. 'l' → logprob: -6.876598358154297
    3. 'c' → logprob: -8.126598358154297
    4. 'r' → logprob: -8.501598358154297
    5. 'dic' → logprob: -11.001598358154297
    6. '[c' → logprob: -11.501598358154297
    7. 'icl' → logprob: -12.376598358154297
    8. 'right' → logprob: -12.751598358154297
    9. 'left' → logprob: -12.876598358154297
    10. '[l' → logprob: -13.001598358154297

Token 590: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -4.4849443838757e-06
    2. 'c' → logprob: -12.375004768371582
    3. '[' → logprob: -16.250003814697266
    4. '```' → logprob: -16.500003814697266
    5. 's' → logprob: -19.000003814697266
    6. '[s' → logprob: -19.000003814697266
    7. '{' → logprob: -19.000003814697266
    8. '[user' → logprob: -19.250003814697266
    9. '<c' → logprob: -19.625003814697266
    10. '[
' → logprob: -19.750003814697266

Token 591: '][' (ID: 2696)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.0007441143970936537
    2. '[' → logprob: -7.500744342803955
    3. '[mid' → logprob: -9.250743865966797
    4. 'c' → logprob: -10.125743865966797
    5. '][' → logprob: -11.000743865966797
    6. '[r' → logprob: -11.625743865966797
    7. '[m' → logprob: -11.750743865966797
    8. '[
' → logprob: -12.625743865966797
    9. '[l' → logprob: -12.875743865966797
    10. '[s' → logprob: -12.875743865966797

Token 592: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.6811420917510986
    2. 'c' → logprob: -0.8061420917510986
    3. '[mid' → logprob: -3.1811420917510986
    4. '[c' → logprob: -5.1811418533325195
    5. ' mid' → logprob: -10.05614185333252
    6. '[' → logprob: -10.05614185333252
    7. '   ' → logprob: -10.43114185333252
    8. ' ' → logprob: -10.68114185333252
    9. ' c' → logprob: -10.80614185333252
    10. '(mid' → logprob: -11.80614185333252

Token 593: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04712802916765213
    2. ']<' → logprob: -3.2971279621124268
    3. '<' → logprob: -4.922128200531006
    4. ' <' → logprob: -6.797128200531006
    5. '[' → logprob: -7.797128200531006
    6. ']>' → logprob: -9.797127723693848
    7. '[mid' → logprob: -10.172127723693848
    8. '>' → logprob: -10.297127723693848
    9. '[c' → logprob: -10.922127723693848
    10. '[r' → logprob: -10.922127723693848

Token 594: ' >=' (ID: 5064)
  Prédit: '[mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[mid' → logprob: -0.004757511429488659
    2. '<' → logprob: -6.004757404327393
    3. '[' → logprob: -6.504757404327393
    4. ' <' → logprob: -7.254757404327393
    5. '[r' → logprob: -10.37975788116455
    6. '[l' → logprob: -11.75475788116455
    7. ']' → logprob: -12.00475788116455
    8. ']<' → logprob: -12.12975788116455
    9. '<m' → logprob: -12.50475788116455
    10. '[m' → logprob: -12.75475788116455

Token 595: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00103686039801687
    2. ' i' → logprob: -6.876036643981934
    3. '   ' → logprob: -12.501036643981934
    4. ' ' → logprob: -16.62603759765625
    5. '       ' → logprob: -16.87603759765625
    6. '	i' → logprob: -17.12603759765625
    7. '           ' → logprob: -17.37603759765625
    8. '```' → logprob: -17.62603759765625
    9. '                   ' → logprob: -18.00103759765625
    10. '     ' → logprob: -18.25103759765625

Token 596: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2828834056854248
    2. ':' → logprob: -1.4078834056854248
    3. '           ' → logprob: -7.282883644104004
    4. '               ' → logprob: -8.157883644104004
    5. '                   ' → logprob: -8.657883644104004
    6. 'r' → logprob: -9.032883644104004
    7. ' and' → logprob: -9.157883644104004
    8. ':r' → logprob: -9.532883644104004
    9. ' r' → logprob: -9.782883644104004
    10. '       ' → logprob: -9.782883644104004

Token 597: '                   ' (ID: 699)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.4378732442855835
    2. '                   ' → logprob: -1.0628732442855835
    3. '               ' → logprob: -5.312873363494873
    4. 'r' → logprob: -5.562873363494873
    5. '                       ' → logprob: -9.312872886657715
    6. '```' → logprob: -9.687872886657715
    7. '           ' → logprob: -9.812872886657715
    8. '   ' → logprob: -10.562872886657715
    9. ' ' → logprob: -10.687872886657715
    10. ' l' → logprob: -10.937872886657715

Token 598: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' (adapté à ' r') → logprob: -2.7610454708337784e-05
    2. ' r' → logprob: -10.500027656555176
    3. '	r' → logprob: -18.37502670288086
    4. '   ' → logprob: -18.75002670288086
    5. '           ' → logprob: -21.62502670288086
    6. '       ' → logprob: -22.00002670288086
    7. '_r' → logprob: -22.25002670288086
    8. '                   ' → logprob: -22.37502670288086
    9. '```' → logprob: -22.75002670288086
    10. '               ' → logprob: -22.87502670288086

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01423285249620676
    2. ' =' → logprob: -4.264232635498047
    3. 'mid' → logprob: -9.889232635498047
    4. ' mid' → logprob: -11.014232635498047
    5. '[mid' → logprob: -13.264232635498047
    6. '```' → logprob: -15.639232635498047
    7. '           ' → logprob: -17.014232635498047
    8. '(mid' → logprob: -17.139232635498047
    9. '_mid' → logprob: -17.389232635498047
    10. '   ' → logprob: -17.514232635498047

Token 600: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.0040785204619169235
    2. ' mid' → logprob: -5.504078388214111
    3. '[mid' → logprob: -16.379077911376953
    4. '   ' → logprob: -17.129077911376953
    5. 'middle' → logprob: -18.254077911376953
    6. '(mid' → logprob: -18.379077911376953
    7. '_mid' → logprob: -18.879077911376953
    8. 'midd' → logprob: -19.129077911376953
    9. 'm' → logprob: -19.629077911376953
    10. '```' → logprob: -19.879077911376953

Token 601: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.023250021040439606
    2. '-' → logprob: -3.773250102996826
    3. '                   ' → logprob: -13.148249626159668
    4. '               ' → logprob: -13.398249626159668
    5. '           ' → logprob: -15.648249626159668
    6. ' ' → logprob: -16.023250579833984
    7. ' –' → logprob: -16.023250579833984
    8. '-l' → logprob: -16.523250579833984
    9. '–' → logprob: -16.523250579833984
    10. '                       ' → logprob: -16.898250579833984

Token 602: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -16.750009536743164
    4. '
' → logprob: -18.000009536743164
    5. '   ' → logprob: -19.750009536743164
    6. '<|end|>' → logprob: -20.375009536743164
    7. '                   ' → logprob: -21.250009536743164
    8. '           ' → logprob: -21.812509536743164
    9. '0' → logprob: -21.937509536743164
    10. '2' → logprob: -22.000009536743164

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -17.125
    4. '
' → logprob: -19.125
    5. '<|end|>' → logprob: -20.375
    6. '   ' → logprob: -21.0
    7. '2' → logprob: -22.375
    8. '0' → logprob: -23.25
    9. '``' → logprob: -23.3125
    10. '=' → logprob: -23.375

Token 604: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015075001865625381
    2. ' else' → logprob: -4.265075206756592
    3. 'else' → logprob: -7.390075206756592
    4. '```' → logprob: -8.890074729919434
    5. ' l' → logprob: -9.390074729919434
    6. ' elif' → logprob: -11.140074729919434
    7. '       ' → logprob: -11.390074729919434
    8. '                ' → logprob: -11.515074729919434
    9. '                   ' → logprob: -11.640074729919434
    10. '           ' → logprob: -11.765074729919434

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013081294484436512
    2. ' else' → logprob: -4.763081073760986
    3. 'else' → logprob: -6.138081073760986
    4. '```' → logprob: -6.388081073760986
    5. ' l' → logprob: -7.638081073760986
    6. '                   ' → logprob: -10.263081550598145
    7. '           ' → logprob: -10.388081550598145
    8. '       ' → logprob: -10.638081550598145
    9. '                ' → logprob: -11.638081550598145
    10. 'elif' → logprob: -11.763081550598145

Token 606: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45816540718078613
    2. '               ' → logprob: -1.4581654071807861
    3. ' else' → logprob: -2.083165407180786
    4. '```' → logprob: -4.583165168762207
    5. '	else' → logprob: -10.458165168762207
    6. ' l' → logprob: -10.708165168762207
    7. 'l' → logprob: -10.958165168762207
    8. '       ' → logprob: -11.208165168762207
    9. '           ' → logprob: -11.333165168762207
    10. 'elif' → logprob: -11.833165168762207

Token 607: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.05556295067071915
    2. ' l' → logprob: -3.055562973022461
    3. 'l' → logprob: -6.055562973022461
    4. '               ' → logprob: -6.555562973022461
    5. '   ' → logprob: -6.805562973022461
    6. '           ' → logprob: -7.430562973022461
    7. '                       ' → logprob: -7.680562973022461
    8. '```' → logprob: -7.930562973022461
    9. '       ' → logprob: -8.305562973022461
    10. '                    ' → logprob: -8.680562973022461

Token 608: '                   ' (ID: 699)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.013727491721510887
    2. '                   ' → logprob: -4.51372766494751
    3. 'l' → logprob: -6.13872766494751
    4. '   ' → logprob: -8.263727188110352
    5. '```' → logprob: -9.138727188110352
    6. '               ' → logprob: -9.388727188110352
    7. '       ' → logprob: -10.638727188110352
    8. '           ' → logprob: -11.138727188110352
    9. '                       ' → logprob: -11.388727188110352
    10. '	l' → logprob: -12.013727188110352

Token 609: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' (adapté à ' l') → logprob: -0.0003464289184194058
    2. ' l' → logprob: -8.000346183776855
    3. '                   ' → logprob: -11.875346183776855
    4. '   ' → logprob: -13.500346183776855
    5. '	l' → logprob: -13.625346183776855
    6. '       ' → logprob: -14.250346183776855
    7. '           ' → logprob: -15.125346183776855
    8. '               ' → logprob: -15.750346183776855
    9. '                       ' → logprob: -16.125347137451172
    10. '```' → logprob: -16.375347137451172

Token 610: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '   ' → logprob: -20.10020637512207
    4. '    ' → logprob: -20.35020637512207
    5. ' ' → logprob: -20.35020637512207
    6. '```' → logprob: -21.10020637512207
    7. '＝' → logprob: -21.10020637512207
    8. '=
' → logprob: -21.22520637512207
    9. '	' → logprob: -21.60020637512207
    10. '.=' → logprob: -21.85020637512207

Token 611: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.06196914613246918
    2. ' mid' → logprob: -2.811969041824341
    3. '(mid' → logprob: -14.186968803405762
    4. '[mid' → logprob: -14.436968803405762
    5. ' midpoint' → logprob: -16.436969757080078
    6. ' ' → logprob: -16.686969757080078
    7. 'middle' → logprob: -17.811969757080078
    8. '_mid' → logprob: -17.811969757080078
    9. '    ' → logprob: -18.061969757080078
    10. '   ' → logprob: -18.311969757080078

Token 612: ' +' (ID: 659)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.5824298858642578
    2. ' mid' → logprob: -0.8324298858642578
    3. '+' → logprob: -5.957429885864258
    4. '[mid' → logprob: -5.957429885864258
    5. '(mid' → logprob: -6.707429885864258
    6. ' +' → logprob: -9.957429885864258
    7. '_mid' → logprob: -10.707429885864258
    8. '.mid' → logprob: -13.957429885864258
    9. ' =' → logprob: -14.332429885864258
    10. ' midpoint' → logprob: -14.457429885864258

Token 613: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -15.875027656555176
    4. '0' → logprob: -16.875028610229492
    5. '<|end|>' → logprob: -17.500028610229492
    6. '   ' → logprob: -18.125028610229492
    7. '+' → logprob: -18.375028610229492
    8. '=' → logprob: -18.875028610229492
    9. 'token' → logprob: -19.937528610229492
    10. 'space' → logprob: -20.312528610229492

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '0' → logprob: -15.12501049041748
    4. '```' → logprob: -17.375009536743164
    5. '   ' → logprob: -18.125009536743164
    6. '+' → logprob: -19.687509536743164
    7. '2' → logprob: -19.937509536743164
    8. '  ' → logprob: -20.000009536743164
    9. '3' → logprob: -20.375009536743164
    10. '``' → logprob: -20.687509536743164

Token 615: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003791411640122533
    2. '   ' → logprob: -6.628791332244873
    3. '<|end|>' → logprob: -7.253791332244873
    4. '
' → logprob: -7.628791332244873
    5. '```' → logprob: -8.128791809082031
    6. ')' → logprob: -8.503791809082031
    7. '[' → logprob: -8.753791809082031
    8. '        
' → logprob: -9.128791809082031
    9. '           ' → logprob: -9.128791809082031
    10. '\n' → logprob: -9.628791809082031

Token 616: '   ' (ID: 271)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026719510555267334
    2. '
' → logprob: -3.776719570159912
    3. 'dp' → logprob: -6.401719570159912
    4. '   ' → logprob: -6.901719570159912
    5. '        
' → logprob: -8.276719093322754
    6. '	dp' → logprob: -8.651719093322754
    7. ' dp' → logprob: -8.776719093322754
    8. '```' → logprob: -10.026719093322754
    9. '    
' → logprob: -10.651719093322754
    10. '_dp' → logprob: -10.651719093322754

Token 617: ' print' (ID: 2123)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3518087863922119
    2. '   ' → logprob: -1.351808786392212
    3. '```' → logprob: -3.851808786392212
    4. ' for' → logprob: -4.976808547973633
    5. 'dp' → logprob: -5.476808547973633
    6. 'for' → logprob: -5.851808547973633
    7. '
' → logprob: -7.351808547973633
    8. '[' → logprob: -7.476808547973633
    9. ' dp' → logprob: -8.226808547973633
    10. '``' → logprob: -8.351808547973633

Token 618: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.39811551570892334
    2. '(' → logprob: -1.1481155157089233
    3. '(sum' → logprob: -4.523115634918213
    4. '()' → logprob: -8.648115158081055
    5. '((' → logprob: -9.773115158081055
    6. ' (' → logprob: -10.148115158081055
    7. '(len' → logprob: -11.398115158081055
    8. '('' → logprob: -11.648115158081055
    9. '("("' → logprob: -11.898115158081055
    10. '("' → logprob: -12.023115158081055

Token 619: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0021956947166472673
    2. '[i' → logprob: -6.627195835113525
    3. '[N' → logprob: -7.377195835113525
    4. ')' → logprob: -8.627195358276367
    5. '[len' → logprob: -10.627195358276367
    6. '[' → logprob: -10.627195358276367
    7. '-' → logprob: -12.002195358276367
    8. '   ' → logprob: -12.627195358276367
    9. '][-' → logprob: -12.877195358276367
    10. '[end' → logprob: -13.877195358276367

Token 620: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.0
    3. '])' → logprob: -18.625
    4. ']' → logprob: -19.125
    5. '   ' → logprob: -19.125
    6. '```' → logprob: -19.25
    7. ')' → logprob: -19.625
    8. '0' → logprob: -20.0
    9. '  ' → logprob: -20.0
    10. '
' → logprob: -20.875

Token 621: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.000513952283654362
    2. ']%' → logprob: -8.000514030456543
    3. '%' → logprob: -9.000514030456543
    4. '])' → logprob: -10.000514030456543
    5. ')' → logprob: -11.750514030456543
    6. ' %' → logprob: -13.625514030456543
    7. ' ]' → logprob: -14.500514030456543
    8. '])
' → logprob: -16.250513076782227
    9. '```' → logprob: -16.625513076782227
    10. ' ' → logprob: -17.125513076782227

Token 622: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03204941004514694
    2. '%' → logprob: -3.5320494174957275
    3. ' %' → logprob: -6.407049179077148
    4. ')%' → logprob: -7.407049179077148
    5. ' )' → logprob: -11.032049179077148
    6. '   ' → logprob: -12.032049179077148
    7. '%)' → logprob: -12.157049179077148
    8. ' ' → logprob: -12.282049179077148
    9. ')
' → logprob: -13.657049179077148
    10. ' ' → logprob: -13.907049179077148

Token 623: ' MOD' (ID: 32868)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.005237075500190258
    2. ' MOD' → logprob: -5.255237102508545
    3. '(M' → logprob: -13.380236625671387
    4. '   ' → logprob: -14.880236625671387
    5. '```' → logprob: -15.005236625671387
    6. '(' → logprob: -15.130236625671387
    7. ' ' → logprob: -15.630236625671387
    8. '_MOD' → logprob: -15.755236625671387
    9. '`' → logprob: -16.130237579345703
    10. '.MOD' → logprob: -16.130237579345703

Token 624: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.3458322731312364e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.875007629394531
    4. '())' → logprob: -15.500007629394531
    5. '`)' → logprob: -15.750007629394531
    6. ')`' → logprob: -16.12500762939453
    7. '```' → logprob: -16.25000762939453
    8. '))' → logprob: -16.62500762939453
    9. '   ' → logprob: -16.87500762939453
    10. '()' → logprob: -17.37500762939453

Token 625: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 626: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.4741530120372772
    2. '__' → logprob: -0.9741530418395996
    3. 'name' → logprob: -10.474152565002441
    4. '_' → logprob: -11.099152565002441
    5. ' ' → logprob: -11.599152565002441
    6. '_name' → logprob: -12.099152565002441
    7. ' ' → logprob: -12.224152565002441
    8. '___' → logprob: -12.224152565002441
    9. 'Name' → logprob: -12.849152565002441
    10. '  ' → logprob: -13.599152565002441

Token 627: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12359596788883209
    2. ' ==' → logprob: -2.248595952987671
    3. '==' → logprob: -4.74859619140625
    4. ' __' → logprob: -6.62359619140625
    5. '.__' → logprob: -8.62359619140625
    6. '__.__' → logprob: -8.87359619140625
    7. '=="' → logprob: -9.24859619140625
    8. '__.' → logprob: -9.49859619140625
    9. '_' → logprob: -9.99859619140625
    10. '=='' → logprob: -10.74859619140625

Token 628: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.981667537620524e-06
    2. '==' → logprob: -13.875001907348633
    3. '__.__' → logprob: -14.125001907348633
    4. '___' → logprob: -16.250001907348633
    5. '____' → logprob: -16.625001907348633
    6. '=="' → logprob: -17.375001907348633
    7. '__('' → logprob: -17.625001907348633
    8. '__
' → logprob: -18.250001907348633
    9. '__["' → logprob: -19.125001907348633
    10. '__("' → logprob: -19.250001907348633

Token 629: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.012418292462825775
    2. ' ==' → logprob: -4.887418270111084
    3. '==' → logprob: -5.387418270111084
    4. '=="' → logprob: -8.512418746948242
    5. '__.__' → logprob: -11.387418746948242
    6. '__":
' → logprob: -12.012418746948242
    7. '=='' → logprob: -13.137418746948242
    8. '__["' → logprob: -13.762418746948242
    9. '___' → logprob: -14.012418746948242
    10. '__("' → logprob: -14.262418746948242

Token 630: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.008625447750091553
    2. ''' → logprob: -4.758625507354736
    3. '__' → logprob: -12.133625030517578
    4. ' "__' → logprob: -12.133625030517578
    5. '   ' → logprob: -16.633625030517578
    6. ' '__' → logprob: -16.883625030517578
    7. '("__' → logprob: -17.508625030517578
    8. '"name' → logprob: -17.508625030517578
    9. '"user' → logprob: -18.133625030517578
    10. '"_' → logprob: -18.133625030517578

Token 631: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008759701740927994
    2. '__' → logprob: -7.125875949859619
    3. 'name' → logprob: -9.625876426696777
    4. '"' → logprob: -12.250876426696777
    5. 'built' → logprob: -15.000876426696777
    6. ''' → logprob: -16.50087547302246
    7. '__":
' → logprob: -16.62587547302246
    8. '_main' → logprob: -16.75087547302246
    9. ' main' → logprob: -17.00087547302246
    10. 'm' → logprob: -17.12587547302246

Token 632: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.00525510311126709
    2. '__' → logprob: -5.255255222320557
    3. '__':
' → logprob: -10.755254745483398
    4. '__["' → logprob: -18.7552547454834
    5. '```' → logprob: -19.6302547454834
    6. '_' → logprob: -20.1302547454834
    7. '__("' → logprob: -20.6302547454834
    8. '__",' → logprob: -20.8802547454834
    9. '__.' → logprob: -21.1302547454834
    10. '__:' → logprob: -21.2552547454834

Token 633: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0769340991973877
    2. '	main' → logprob: -3.0769340991973877
    3. 'main' → logprob: -4.451933860778809
    4. ' main' → logprob: -4.576933860778809
    5. '(main' → logprob: -5.951933860778809
    6. '```' → logprob: -6.576933860778809
    7. '    
' → logprob: -7.201933860778809
    8. '_main' → logprob: -7.701933860778809
    9. ':
' → logprob: -8.701933860778809
    10. ':' → logprob: -8.951933860778809

Token 634: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -5.512236498361744e-07
    2. ' main' → logprob: -14.500000953674316
    3. '	main' → logprob: -19.125
    4. '   ' → logprob: -21.375
    5. 'import' → logprob: -22.75
    6. '(main' → logprob: -23.375
    7. '_main' → logprob: -24.0
    8. '.main' → logprob: -24.375
    9. '```' → logprob: -25.5
    10. 'Main' → logprob: -26.75

Token 635: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 633
Tokens correctement prédits (1ère position, stricte): 233
Tokens correctement prédits (1ère position, avec adaptation): 249
Tokens correctement prédits (top 10): 484
Précision stricte (1ère position): 36.81%
Précision adaptée (1ère position): 39.34%
Précision (top 10): 76.46%
================================================================================
