================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:40
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def rUn(_0, _A):
    __ = sorted(_A)
    return __[-1] - __[0]

readInput = lambda: (int(input()), list(map(int, input().split())))

def EntryPoint():
    q, w = readInput()
    print(rUn(q, w))

if '__main__' == __name__:
    EntryPoint()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' r' (ID: 428)
  → Token d'amorce (pas de prédiction)

Token 2: 'Un' (ID: 2265)
  → Token d'amorce (pas de prédiction)

Token 3: '(_' (ID: 4963)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002438789699226618
    2. '_' → logprob: -7.127439022064209
    3. '():' → logprob: -8.00243854522705
    4. ' (' → logprob: -8.12743854522705
    5. '(:' → logprob: -8.75243854522705
    6. '```' → logprob: -9.12743854522705
    7. 'f' → logprob: -9.25243854522705
    8. '(_' → logprob: -9.50243854522705
    9. 's' → logprob: -9.50243854522705
    10. ')' → logprob: -10.00243854522705

Token 4: '0' (ID: 15)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5923140048980713
    2. 'n' → logprob: -1.7173140048980713
    3. 's' → logprob: -1.9673140048980713
    4. 'x' → logprob: -2.2173140048980713
    5. '):' → logprob: -2.2173140048980713
    6. 'r' → logprob: -2.7173140048980713
    7. 'arg' → logprob: -4.092313766479492
    8. 'a' → logprob: -4.092313766479492
    9. 'name' → logprob: -4.217313766479492
    10. 'u' → logprob: -4.342313766479492

Token 5: ',' (ID: 11)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.34899863600730896
    2. 'n' → logprob: -2.223998546600342
    3. '_' → logprob: -2.598998546600342
    4. ')' → logprob: -3.223998546600342
    5. 'a' → logprob: -3.973998546600342
    6. ':' → logprob: -5.223998546600342
    7. '):' → logprob: -5.223998546600342
    8. 'w' → logprob: -5.348998546600342
    9. 's' → logprob: -5.348998546600342
    10. ',' → logprob: -5.598998546600342

Token 6: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.015222366899251938
    2. ' _' → logprob: -4.265222549438477
    3. '0' → logprob: -8.015222549438477
    4. '):' → logprob: -8.265222549438477
    5. ')' → logprob: -8.890222549438477
    6. '__' → logprob: -9.390222549438477
    7. ' ' → logprob: -9.765222549438477
    8. '   ' → logprob: -10.140222549438477
    9. 'a' → logprob: -10.265222549438477
    10. '`' → logprob: -11.140222549438477

Token 7: 'A' (ID: 32)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5962845683097839
    2. '1' → logprob: -0.8462845683097839
    3. '_' → logprob: -4.59628438949585
    4. 'O' → logprob: -6.09628438949585
    5. '):' → logprob: -6.22128438949585
    6. ',' → logprob: -6.59628438949585
    7. 'a' → logprob: -6.84628438949585
    8. ')' → logprob: -7.09628438949585
    9. 'n' → logprob: -7.47128438949585
    10. 'x' → logprob: -7.59628438949585

Token 8: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.30417218804359436
    2. ')' → logprob: -1.429172158241272
    3. '_' → logprob: -4.179172039031982
    4. ',' → logprob: -5.304172039031982
    5. 'u' → logprob: -7.304172039031982
    6. ''):' → logprob: -8.30417251586914
    7. '0' → logprob: -8.67917251586914
    8. 'a' → logprob: -8.92917251586914
    9. 's' → logprob: -9.30417251586914
    10. '[' → logprob: -9.55417251586914

Token 9: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09906990826129913
    2. ':' → logprob: -2.474069833755493
    3. '```' → logprob: -5.974070072174072
    4. ' ' → logprob: -6.224070072174072
    5. '(' → logprob: -6.474070072174072
    6. ''' → logprob: -6.974070072174072
    7. '    ' → logprob: -7.099070072174072
    8. ':return' → logprob: -8.224069595336914
    9. ' :' → logprob: -8.349069595336914
    10. '\t' → logprob: -8.849069595336914

Token 10: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6005550622940063
    2. '_' → logprob: -1.3505550622940063
    3. '   ' → logprob: -2.100554943084717
    4. 'i' → logprob: -3.725554943084717
    5. 'r' → logprob: -3.850554943084717
    6. '(' → logprob: -4.975554943084717
    7. '    ' → logprob: -5.225554943084717
    8. ':' → logprob: -6.475554943084717
    9. '  ' → logprob: -6.475554943084717
    10. ''' → logprob: -6.725554943084717

Token 11: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.344901978969574
    2. '_' → logprob: -1.8449020385742188
    3. ' =' → logprob: -2.7199020385742188
    4. '=' → logprob: -3.5949020385742188
    5. '0' → logprob: -4.594902038574219
    6. ' _' → logprob: -4.969902038574219
    7. 'i' → logprob: -5.844902038574219
    8. 'n' → logprob: -5.969902038574219
    9. 'r' → logprob: -5.969902038574219
    10. ')' → logprob: -6.344902038574219

Token 12: ' sorted' (ID: 20099)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7614434957504272
    2. '_' → logprob: -0.8864434957504272
    3. '[]' → logprob: -3.386443614959717
    4. ' ' → logprob: -3.636443614959717
    5. '0' → logprob: -3.886443614959717
    6. ' []' → logprob: -3.886443614959717
    7. '_A' → logprob: -4.386443614959717
    8. '{}' → logprob: -5.761443614959717
    9. ' {}' → logprob: -6.011443614959717
    10. '   ' → logprob: -8.386443138122559

Token 13: '(_' (ID: 4963)
  Prédit: '(_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(_' → logprob: -0.20597948133945465
    2. '(' → logprob: -1.7059794664382935
    3. '((' → logprob: -6.205979347229004
    4. '(__' → logprob: -6.580979347229004
    5. '((_' → logprob: -7.580979347229004
    6. '(_)' → logprob: -7.830979347229004
    7. '([' → logprob: -9.955979347229004
    8. '(lambda' → logprob: -10.205979347229004
    9. '(
' → logprob: -10.455979347229004
    10. '(!_' → logprob: -11.080979347229004

Token 14: 'A' (ID: 32)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015186689561232924
    2. '_' → logprob: -6.751518726348877
    3. 'A' → logprob: -8.251518249511719
    4. '_A' → logprob: -10.501518249511719
    5. '(' → logprob: -10.626518249511719
    6. '(A' → logprob: -11.251518249511719
    7. '(_' → logprob: -11.251518249511719
    8. ')' → logprob: -12.251518249511719
    9. ' ' → logprob: -14.126518249511719
    10. '00' → logprob: -14.626518249511719

Token 15: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20323462784290314
    2. ')' → logprob: -1.7032346725463867
    3. ',key' → logprob: -7.328234672546387
    4. '(' → logprob: -7.828234672546387
    5. ' ,' → logprob: -8.578234672546387
    6. '[' → logprob: -8.953234672546387
    7. '   ' → logprob: -9.453234672546387
    8. ' ' → logprob: -9.828234672546387
    9. ',_' → logprob: -10.578234672546387
    10. '))' → logprob: -10.703234672546387

Token 16: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1687052696943283
    2. '(' → logprob: -2.5437052249908447
    3. '_' → logprob: -3.9187052249908447
    4. '[:]' → logprob: -4.293705463409424
    5. '.' → logprob: -4.543705463409424
    6. ')' → logprob: -4.543705463409424
    7. ',' → logprob: -4.543705463409424
    8. ':' → logprob: -5.418705463409424
    9. '[::-' → logprob: -6.918705463409424
    10. '__' → logprob: -7.043705463409424

Token 17: ' return' (ID: 622)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.8967083096504211
    2. ':' → logprob: -1.0217082500457764
    3. '(' → logprob: -1.8967082500457764
    4. '_' → logprob: -3.5217082500457764
    5. ',' → logprob: -4.5217084884643555
    6. '[:]' → logprob: -4.7717084884643555
    7. ' ' → logprob: -5.0217084884643555
    8. '.' → logprob: -5.3967084884643555
    9. ':
' → logprob: -5.6467084884643555
    10. ')' → logprob: -5.7717084884643555

Token 18: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4522983133792877
    2. ' __' → logprob: -1.0772982835769653
    3. '[' → logprob: -4.577298164367676
    4. '(' → logprob: -5.577298164367676
    5. '(__' → logprob: -5.577298164367676
    6. '__[' → logprob: -6.452298164367676
    7. '_' → logprob: -6.952298164367676
    8. '___' → logprob: -6.952298164367676
    9. '[]' → logprob: -7.702298164367676
    10. '__(' → logprob: -8.327298164367676

Token 19: '[-' (ID: 17503)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.011805270798504353
    2. '.' → logprob: -4.886805057525635
    3. '<|end|>' → logprob: -7.136805057525635
    4. '_' → logprob: -7.261805057525635
    5. '[_' → logprob: -7.761805057525635
    6. '[
' → logprob: -7.886805057525635
    7. '.__' → logprob: -8.136805534362793
    8. '[len' → logprob: -8.511805534362793
    9. '(' → logprob: -8.761805534362793
    10. '[:]' → logprob: -9.261805534362793

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004701146390289068
    2. '2' → logprob: -7.750470161437988
    3. ' ' → logprob: -10.875470161437988
    4. '3' → logprob: -12.000470161437988
    5. '10' → logprob: -12.437970161437988
    6. '5' → logprob: -13.187970161437988
    7. '-' → logprob: -13.750470161437988
    8. '0' → logprob: -13.812970161437988
    9. '4' → logprob: -14.000470161437988
    10. '100' → logprob: -14.187970161437988

Token 21: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00495337788015604
    2. '])' → logprob: -5.629953384399414
    3. ' ]' → logprob: -7.004953384399414
    4. ')' → logprob: -8.004953384399414
    5. ')]' → logprob: -10.379953384399414
    6. '][' → logprob: -11.254953384399414
    7. '[' → logprob: -11.379953384399414
    8. ']
' → logprob: -11.879953384399414
    9. ' ])' → logprob: -12.129953384399414
    10. '.' → logprob: -12.254953384399414

Token 22: ' -' (ID: 533)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5542722344398499
    2. '<|end|>' → logprob: -0.9292722344398499
    3. '.' → logprob: -4.554272174835205
    4. ')' → logprob: -5.054272174835205
    5. '(' → logprob: -5.554272174835205
    6. ']' → logprob: -6.054272174835205
    7. '_' → logprob: -6.554272174835205
    8. ' ' → logprob: -6.929272174835205
    9. '```' → logprob: -6.929272174835205
    10. '<|end|>' → logprob: -6.929272174835205

Token 23: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.055977851152420044
    2. ' __' → logprob: -2.9309778213500977
    3. '_' → logprob: -7.930977821350098
    4. '__[' → logprob: -8.305977821350098
    5. '__)' → logprob: -8.430977821350098
    6. '__.' → logprob: -8.930977821350098
    7. '___' → logprob: -10.180977821350098
    8. '__.__' → logprob: -10.430977821350098
    9. '__(' → logprob: -10.680977821350098
    10. ' _' → logprob: -11.930977821350098

Token 24: '[' (ID: 58)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08974868059158325
    2. '0' → logprob: -2.7147486209869385
    3. '[' → logprob: -4.339748859405518
    4. '1' → logprob: -5.464748859405518
    5. '[-' → logprob: -6.214748859405518
    6. '-' → logprob: -8.58974838256836
    7. '```' → logprob: -9.96474838256836
    8. ' ' → logprob: -10.46474838256836
    9. 'len' → logprob: -10.58974838256836
    10. '_' → logprob: -12.08974838256836

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4484421908855438
    2. '1' → logprob: -1.4484422206878662
    3. '-' → logprob: -2.073442220687866
    4. '2' → logprob: -7.448441982269287
    5. ' -' → logprob: -10.198442459106445
    6. ' ' → logprob: -10.823442459106445
    7. 'len' → logprob: -11.448442459106445
    8. '```' → logprob: -11.948442459106445
    9. '-_' → logprob: -12.448442459106445
    10. ']' → logprob: -12.448442459106445

Token 26: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -4.143808109802194e-05
    2. '])' → logprob: -11.125041007995605
    3. ')' → logprob: -11.375041007995605
    4. ' ]' → logprob: -11.625041007995605
    5. ']
' → logprob: -12.625041007995605
    6. ')]' → logprob: -13.625041007995605
    7. '']' → logprob: -13.875041007995605
    8. ']

' → logprob: -15.125041007995605
    9. '}' → logprob: -15.875041007995605
    10. '`]' → logprob: -16.625041961669922

Token 27: 'read' (ID: 1293)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1269530057907104
    2. ')' → logprob: -1.1269530057907104
    3. '<|end|>' → logprob: -1.6269530057907104
    4. '
' → logprob: -2.751953125
    5. ' ' → logprob: -3.376953125
    6. '#' → logprob: -4.251953125
    7. '```' → logprob: -4.501953125
    8. '\n' → logprob: -4.751953125
    9. '[' → logprob: -5.501953125
    10. ':' → logprob: -5.751953125

Token 28: 'Input' (ID: 3275)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1332518607378006
    2. '()' → logprob: -2.133251905441284
    3. 'line' → logprob: -5.383251667022705
    4. '('' → logprob: -8.133252143859863
    5. 'r' → logprob: -8.258252143859863
    6. '_' → logprob: -8.383252143859863
    7. 's' → logprob: -8.883252143859863
    8. '_line' → logprob: -9.258252143859863
    9. '_input' → logprob: -9.758252143859863
    10. 'Line' → logprob: -9.758252143859863

Token 29: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.47458145022392273
    2. '()' → logprob: -0.9745814800262451
    3. ')' → logprob: -9.099581718444824
    4. '('' → logprob: -10.099581718444824
    5. 'Line' → logprob: -10.099581718444824
    6. 'line' → logprob: -10.349581718444824
    7. 's' → logprob: -10.474581718444824
    8. '(
' → logprob: -11.099581718444824
    9. '_line' → logprob: -11.099581718444824
    10. '()]' → logprob: -11.349581718444824

Token 30: ' lambda' (ID: 27871)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.21064209938049316
    2. ' lambda' → logprob: -2.085642099380493
    3. 'input' → logprob: -2.835642099380493
    4. 'lambda' → logprob: -5.335641860961914
    5. ' list' → logprob: -7.460641860961914
    6. ' open' → logprob: -7.585641860961914
    7. ' ' → logprob: -7.835641860961914
    8. ' int' → logprob: -8.210641860961914
    9. 'int' → logprob: -9.085641860961914
    10. 'open' → logprob: -9.585641860961914

Token 31: ':' (ID: 25)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.039154622703790665
    2. 'input' → logprob: -3.414154529571533
    3. ' ' → logprob: -5.414154529571533
    4. ' lambda' → logprob: -7.664154529571533
    5. 'lambda' → logprob: -9.414155006408691
    6. '  ' → logprob: -9.914155006408691
    7. ':' → logprob: -9.914155006408691
    8. ' _' → logprob: -10.164155006408691
    9. '(input' → logprob: -10.414155006408691
    10. ' f' → logprob: -10.789155006408691

Token 32: ' (' (ID: 350)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.6673647165298462
    2. 'int' → logprob: -1.1673647165298462
    3. ' list' → logprob: -2.5423645973205566
    4. ' input' → logprob: -3.1673645973205566
    5. 'input' → logprob: -4.042364597320557
    6. 'list' → logprob: -4.042364597320557
    7. '[int' → logprob: -4.917364597320557
    8. ' map' → logprob: -5.042364597320557
    9. '[' → logprob: -6.417364597320557
    10. ' [' → logprob: -6.542364597320557

Token 33: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.1892157942056656
    2. '[int' → logprob: -2.814215898513794
    3. 'map' → logprob: -2.814215898513794
    4. 'list' → logprob: -3.439215898513794
    5. ' map' → logprob: -4.939215660095215
    6. ' int' → logprob: -5.064215660095215
    7. '[' → logprob: -6.189215660095215
    8. 'input' → logprob: -6.564215660095215
    9. 'tuple' → logprob: -6.939215660095215
    10. ' list' → logprob: -7.189215660095215

Token 34: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.010066879913210869
    2. '(' → logprob: -4.635066986083984
    3. 'input' → logprob: -8.260066986083984
    4. ')' → logprob: -10.885066986083984
    5. '(
' → logprob: -12.010066986083984
    6. ' input' → logprob: -12.260066986083984
    7. '()' → logprob: -12.385066986083984
    8. ' (' → logprob: -13.010066986083984
    9. '(

' → logprob: -13.010066986083984
    10. '(raw' → logprob: -13.135066986083984

Token 35: '()),' (ID: 24379)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05086895078420639
    2. '()))' → logprob: -3.0508689880371094
    3. '()),' → logprob: -6.425868988037109
    4. '()' → logprob: -7.425868988037109
    5. '(' → logprob: -11.17586898803711
    6. '(),' → logprob: -11.80086898803711
    7. '())))' → logprob: -11.80086898803711
    8. '().' → logprob: -11.92586898803711
    9. '()));' → logprob: -12.05086898803711
    10. ' ())' → logprob: -12.05086898803711

Token 36: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.7919847965240479
    2. 'list' → logprob: -1.1669847965240479
    3. ' [' → logprob: -2.041984796524048
    4. '[input' → logprob: -3.541984796524048
    5. '[int' → logprob: -3.666984796524048
    6. '[' → logprob: -3.791984796524048
    7. '[list' → logprob: -3.916984796524048
    8. 'input' → logprob: -5.666984558105469
    9. ' input' → logprob: -5.791984558105469
    10. 'int' → logprob: -7.791984558105469

Token 37: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.00018244501552544534
    2. '(' → logprob: -8.625182151794434
    3. '(int' → logprob: -13.250182151794434
    4. '(range' → logprob: -14.875182151794434
    5. '(input' → logprob: -15.625182151794434
    6. '(eval' → logprob: -15.875182151794434
    7. '(
' → logprob: -16.00018310546875
    8. '()' → logprob: -16.37518310546875
    9. '())' → logprob: -17.12518310546875
    10. '(

' → logprob: -17.12518310546875

Token 38: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0012454704847186804
    2. '(' → logprob: -6.751245498657227
    3. '(
' → logprob: -10.626245498657227
    4. '<int' → logprob: -10.876245498657227
    5. ')' → logprob: -11.376245498657227
    6. ',int' → logprob: -11.501245498657227
    7. '(str' → logprob: -13.251245498657227
    8. '(lambda' → logprob: -13.501245498657227
    9. ' (' → logprob: -13.626245498657227
    10. 'int' → logprob: -13.751245498657227

Token 39: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.6510181427001953
    2. '(input' → logprob: -0.9010181427001953
    3. ',' → logprob: -2.6510181427001953
    4. '(' → logprob: -7.151018142700195
    5. ' ,' → logprob: -7.651018142700195
    6. ' (' → logprob: -8.276018142700195
    7. 'input' → logprob: -9.526018142700195
    8. ' input' → logprob: -9.651018142700195
    9. ',(' → logprob: -9.776018142700195
    10. ',int' → logprob: -11.526018142700195

Token 40: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.009807087481021881
    2. ' input' → logprob: -4.634807109832764
    3. ',input' → logprob: -10.884806632995605
    4. '(input' → logprob: -11.009806632995605
    5. 'lambda' → logprob: -12.134806632995605
    6. '<input' → logprob: -12.634806632995605
    7. 'str' → logprob: -13.134806632995605
    8. ' ' → logprob: -13.759806632995605
    9. 'list' → logprob: -14.009806632995605
    10. '	input' → logprob: -14.134806632995605

Token 41: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0001375089050270617
    2. '()' → logprob: -9.250137329101562
    3. '()))' → logprob: -11.000137329101562
    4. '())))' → logprob: -11.000137329101562
    5. ' ().' → logprob: -12.875137329101562
    6. '())' → logprob: -14.000137329101562
    7. '(' → logprob: -14.000137329101562
    8. '.' → logprob: -14.375137329101562
    9. '()));' → logprob: -14.500137329101562
    10. ')))' → logprob: -14.625137329101562

Token 42: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.955703818472102e-05
    2. 'strip' → logprob: -9.750059127807617
    3. 'rstrip' → logprob: -14.750059127807617
    4. ' split' → logprob: -14.875059127807617
    5. '(split' → logprob: -15.000059127807617
    6. 'spl' → logprob: -15.625059127807617
    7. 's' → logprob: -18.625059127807617
    8. '.split' → logprob: -19.500059127807617
    9. 'read' → logprob: -19.500059127807617
    10. ')' → logprob: -19.750059127807617

Token 43: '()))' (ID: 16829)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.01078734453767538
    2. '))' → logprob: -5.135787487030029
    3. ')' → logprob: -5.635787487030029
    4. '())))' → logprob: -6.885787487030029
    5. '))))' → logprob: -9.510787010192871
    6. '(' → logprob: -9.635787010192871
    7. '()))' → logprob: -9.760787010192871
    8. '()' → logprob: -10.510787010192871
    9. '')))' → logprob: -11.385787010192871
    10. '())' → logprob: -11.760787010192871

Token 44: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12693913280963898
    2. '))' → logprob: -2.126939058303833
    3. ')))' → logprob: -11.876938819885254
    4. ')
' → logprob: -13.626938819885254
    5. '()' → logprob: -14.501938819885254
    6. '`)' → logprob: -14.626938819885254
    7. ' )' → logprob: -14.876938819885254
    8. '))
' → logprob: -15.126938819885254
    9. '())' → logprob: -15.126938819885254
    10. '),' → logprob: -15.251938819885254

Token 45: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.46051159501075745
    2. 'n' → logprob: -1.585511565208435
    3. '_' → logprob: -2.4605116844177246
    4. 'r' → logprob: -4.335511684417725
    5. 'a' → logprob: -4.585511684417725
    6. 'print' → logprob: -4.835511684417725
    7. '\n' → logprob: -4.960511684417725
    8. '(' → logprob: -5.210511684417725
    9. '(n' → logprob: -5.460511684417725
    10. 'x' → logprob: -5.460511684417725

Token 46: ' Entry' (ID: 28122)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.07414988428354263
    2. ' main' → logprob: -2.6991498470306396
    3. ' ' → logprob: -6.449150085449219
    4. 'r' → logprob: -7.074150085449219
    5. ' run' → logprob: -7.574150085449219
    6. '_' → logprob: -7.949150085449219
    7. ' _' → logprob: -8.574150085449219
    8. ' space' → logprob: -8.949150085449219
    9. ' test' → logprob: -9.074150085449219
    10. ' solution' → logprob: -9.699150085449219

Token 47: 'Point' (ID: 4219)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0665496215224266
    2. 'Point' → logprob: -2.94154953956604
    3. '(' → logprob: -5.316549777984619
    4. ':' → logprob: -6.566549777984619
    5. 'P' → logprob: -6.691549777984619
    6. '_Point' → logprob: -6.816549777984619
    7. '()' → logprob: -6.941549777984619
    8. '):' → logprob: -7.316549777984619
    9. '_point' → logprob: -8.066549301147461
    10. 'point' → logprob: -8.816549301147461

Token 48: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00027349460287950933
    2. ' ():' → logprob: -8.875273704528809
    3. '(' → logprob: -9.250273704528809
    4. '()' → logprob: -11.000273704528809
    5. ':' → logprob: -11.125273704528809
    6. '(:' → logprob: -12.625273704528809
    7. '():
' → logprob: -14.000273704528809
    8. ' ()' → logprob: -15.125273704528809
    9. '(**' → logprob: -15.375273704528809
    10. '```' → logprob: -15.750273704528809

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04152664169669151
    2. '    
' → logprob: -4.416526794433594
    3. '_' → logprob: -5.416526794433594
    4. '(' → logprob: -5.791526794433594
    5. ' ' → logprob: -5.791526794433594
    6. 'input' → logprob: -6.291526794433594
    7. '    ' → logprob: -6.791526794433594
    8. '
' → logprob: -6.791526794433594
    9. '<|end|>' → logprob: -6.916526794433594
    10. 'a' → logprob: -7.041526794433594

Token 50: ' q' (ID: 2335)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.017984401434659958
    2. '   ' → logprob: -5.267984390258789
    3. 'a' → logprob: -5.767984390258789
    4. 'for' → logprob: -5.892984390258789
    5. '_a' → logprob: -6.767984390258789
    6. ' _' → logprob: -6.892984390258789
    7. 'r' → logprob: -7.392984390258789
    8. '_t' → logprob: -7.517984390258789
    9. 'n' → logprob: -7.517984390258789
    10. '_i' → logprob: -7.642984390258789

Token 51: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03645733371376991
    2. 'u' → logprob: -3.9114573001861572
    3. '=' → logprob: -4.536457538604736
    4. ' ' → logprob: -6.911457538604736
    5. 'ue' → logprob: -7.036457538604736
    6. 'uer' → logprob: -7.411457538604736
    7. '_' → logprob: -7.411457538604736
    8. 'ual' → logprob: -7.536457538604736
    9. 'uries' → logprob: -8.286457061767578
    10. ',' → logprob: -8.536457061767578

Token 52: ' w' (ID: 286)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.2735259532928467
    2. '_A' → logprob: -1.5235259532928467
    3. '_' → logprob: -1.7735259532928467
    4. ' A' → logprob: -2.1485259532928467
    5. 'a' → logprob: -3.0235259532928467
    6. ' _' → logprob: -3.1485259532928467
    7. '_a' → logprob: -3.7735259532928467
    8. ' lst' → logprob: -3.8985259532928467
    9. 'lst' → logprob: -4.148526191711426
    10. 'arr' → logprob: -4.398526191711426

Token 53: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1002885028719902
    2. '=' → logprob: -2.3502883911132812
    3. ',' → logprob: -9.975288391113281
    4. ' ' → logprob: -11.600288391113281
    5. '_' → logprob: -11.725288391113281
    6. 'e' → logprob: -12.725288391113281
    7. '   ' → logprob: -12.725288391113281
    8. ')' → logprob: -13.850288391113281
    9. 'hat' → logprob: -14.100288391113281
    10. 'hen' → logprob: -14.225288391113281

Token 54: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.029752222821116447
    2. ' read' → logprob: -3.529752254486084
    3. '   ' → logprob: -13.779751777648926
    4. '	read' → logprob: -15.279751777648926
    5. '  ' → logprob: -15.529751777648926
    6. ' ' → logprob: -15.904751777648926
    7. '(read' → logprob: -17.154752731323242
    8. 're' → logprob: -17.529752731323242
    9. 'r' → logprob: -17.654752731323242
    10. '_read' → logprob: -18.779752731323242

Token 55: 'Input' (ID: 3275)
  Prédit: 'Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.6240566083070007e-06
    2. 'I' → logprob: -14.125001907348633
    3. 'In' → logprob: -14.625001907348633
    4. ' Input' → logprob: -16.125001907348633
    5. 'input' → logprob: -16.500001907348633
    6. '(Input' → logprob: -16.750001907348633
    7. '	Input' → logprob: -16.875001907348633
    8. 'Inp' → logprob: -16.875001907348633
    9. '_input' → logprob: -17.250001907348633
    10. '(' → logprob: -18.125001907348633

Token 56: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25272759795188904
    2. '()
' → logprob: -1.5027276277542114
    3. ')' → logprob: -8.377727508544922
    4. '();' → logprob: -9.127727508544922
    5. '()

' → logprob: -9.252727508544922
    6. '()\' → logprob: -9.627727508544922
    7. '<|end|>' → logprob: -9.752727508544922
    8. '()
' → logprob: -10.127727508544922
    9. '())' → logprob: -10.377727508544922
    10. '   ' → logprob: -10.377727508544922

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8913562893867493
    2. '<|end|>' → logprob: -1.2663562297821045
    3. '
' → logprob: -1.3913562297821045
    4. ' for' → logprob: -3.6413562297821045
    5. '    
' → logprob: -4.641356468200684
    6. 'for' → logprob: -5.266356468200684
    7. '	for' → logprob: -5.391356468200684
    8. ')' → logprob: -6.016356468200684
    9. '<|end|>' → logprob: -6.266356468200684
    10. '	return' → logprob: -6.641356468200684

Token 58: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10681123286485672
    2. ' print' → logprob: -3.106811285018921
    3. '   ' → logprob: -3.856811285018921
    4. 'r' → logprob: -4.481811046600342
    5. ' for' → logprob: -5.231811046600342
    6. 'for' → logprob: -5.356811046600342
    7. 'result' → logprob: -5.356811046600342
    8. ' r' → logprob: -5.356811046600342
    9. ' result' → logprob: -6.731811046600342
    10. 'return' → logprob: -7.106811046600342

Token 59: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.023257127031683922
    2. '(' → logprob: -3.77325701713562
    3. '(f' → logprob: -12.6482572555542
    4. '('' → logprob: -12.8982572555542
    5. '("' → logprob: -13.6482572555542
    6. '(q' → logprob: -13.8982572555542
    7. '(
' → logprob: -14.1482572555542
    8. '(_' → logprob: -14.1482572555542
    9. '(w' → logprob: -14.7732572555542
    10. '((' → logprob: -14.8982572555542

Token 60: 'Un' (ID: 2265)
  Prédit: 'Un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Un' → logprob: -0.0016835130518302321
    2. 'U' → logprob: -6.626683712005615
    3. 'un' → logprob: -9.001683235168457
    4. '(Un' → logprob: -10.001683235168457
    5. '_un' → logprob: -10.126683235168457
    6. 'UN' → logprob: -10.751683235168457
    7. '_Un' → logprob: -10.876683235168457
    8. '(' → logprob: -10.876683235168457
    9. 'u' → logprob: -11.001683235168457
    10. '_' → logprob: -11.501683235168457

Token 61: '(q' (ID: 21479)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14696674048900604
    2. '(q' → logprob: -2.1469666957855225
    3. '(w' → logprob: -4.021966934204102
    4. ' (' → logprob: -6.521966934204102
    5. '(_,' → logprob: -8.771966934204102
    6. ')(' → logprob: -9.521966934204102
    7. '(
' → logprob: -9.646966934204102
    8. '((' → logprob: -10.021966934204102
    9. ')' → logprob: -10.021966934204102
    10. '(_' → logprob: -10.396966934204102

Token 62: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001586389378644526
    2. ' ,' → logprob: -6.876586437225342
    3. ',w' → logprob: -7.501586437225342
    4. 'w' → logprob: -15.001585960388184
    5. ',
' → logprob: -15.376585960388184
    6. ' ' → logprob: -15.501585960388184
    7. ')' → logprob: -15.501585960388184
    8. ' w' → logprob: -16.0015869140625
    9. ',q' → logprob: -17.1265869140625
    10. '),' → logprob: -17.3765869140625

Token 63: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3132631778717041
    2. ' w' → logprob: -1.313263177871704
    3. ')' → logprob: -14.688262939453125
    4. ' ' → logprob: -15.063262939453125
    5. ' ' → logprob: -15.438262939453125
    6. '	w' → logprob: -15.813262939453125
    7. '    ' → logprob: -16.438262939453125
    8. '_w' → logprob: -16.688262939453125
    9. '   ' → logprob: -16.813262939453125
    10. '<w' → logprob: -17.375762939453125

Token 64: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00013905855303164572
    2. ')' → logprob: -9.000139236450195
    3. '))
' → logprob: -11.125139236450195
    4. ' ))' → logprob: -14.875139236450195
    5. ')))' → logprob: -15.000139236450195
    6. '))

' → logprob: -15.500139236450195
    7. '()))' → logprob: -17.375139236450195
    8. '),' → logprob: -17.750139236450195
    9. ')
' → logprob: -18.000139236450195
    10. ''))' → logprob: -18.000139236450195

Token 65: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.13945205509662628
    2. '
' → logprob: -2.2644519805908203
    3. '\n' → logprob: -4.51445198059082
    4. '_' → logprob: -5.13945198059082
    5. '<|end|>' → logprob: -6.01445198059082
    6. 'i' → logprob: -6.51445198059082
    7. '\' → logprob: -6.76445198059082
    8. ' if' → logprob: -7.13945198059082
    9. '```' → logprob: -7.13945198059082
    10. '#' → logprob: -7.51445198059082

Token 66: ' '__' (ID: 28278)
  Prédit: ' __'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.00029828163678757846
    2. '__' → logprob: -8.125298500061035
    3. ' ' → logprob: -13.750298500061035
    4. ' ' → logprob: -14.375298500061035
    5. '_' → logprob: -15.125298500061035
    6. ' ___' → logprob: -15.500298500061035
    7. ' _' → logprob: -16.75029754638672
    8. '_name' → logprob: -18.50029754638672
    9. '___' → logprob: -18.50029754638672
    10. ' ____' → logprob: -18.75029754638672

Token 67: 'main' (ID: 7731)
  Prédit: 'name'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'name' → logprob: -0.0019351851660758257
    2. 'main' → logprob: -6.251935005187988
    3. 'nam' → logprob: -12.376935005187988
    4. 'na' → logprob: -13.001935005187988
    5. 'n' → logprob: -16.376935958862305
    6. '_main' → logprob: -18.876935958862305
    7. ' name' → logprob: -19.376935958862305
    8. ''name' → logprob: -19.626935958862305
    9. ' ' → logprob: -20.626935958862305
    10. ' main' → logprob: -20.626935958862305

Token 68: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -8.180258191714529e-06
    2. ''' → logprob: -11.875008583068848
    3. '__':
' → logprob: -14.500008583068848
    4. '_'' → logprob: -14.750008583068848
    5. '___' → logprob: -16.37500762939453
    6. '_' → logprob: -16.75000762939453
    7. ' __' → logprob: -16.75000762939453
    8. '__

' → logprob: -17.37500762939453
    9. '__
' → logprob: -17.87500762939453
    10. '____' → logprob: -18.00000762939453

Token 69: ''' (ID: 6)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5759992599487305
    2. ''' → logprob: -0.8259992599487305
    3. '_'' → logprob: -10.57599925994873
    4. '_' → logprob: -11.07599925994873
    5. '=='' → logprob: -11.45099925994873
    6. '__':
' → logprob: -12.82599925994873
    7. '___' → logprob: -13.32599925994873
    8. ' __' → logprob: -14.07599925994873
    9. '```' → logprob: -14.20099925994873
    10. ' '' → logprob: -14.32599925994873

Token 70: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11379580199718475
    2. '==' → logprob: -2.238795757293701
    3. '__' → logprob: -7.363795757293701
    4. '=' → logprob: -8.23879623413086
    5. ' =' → logprob: -10.23879623413086
    6. '=='' → logprob: -11.61379623413086
    7. ' ' → logprob: -12.11379623413086
    8. '_' → logprob: -12.73879623413086
    9. 'if' → logprob: -12.86379623413086
    10. ':' → logprob: -12.98879623413086

Token 71: ' __' (ID: 2516)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5108927488327026
    2. '"' → logprob: -1.7608927488327026
    3. ' __' → logprob: -2.510892868041992
    4. '__' → logprob: -2.635892868041992
    5. ' '__' → logprob: -2.885892868041992
    6. ' "__' → logprob: -4.260892868041992
    7. ' ' → logprob: -5.510892868041992
    8. ' '' → logprob: -7.010892868041992
    9. ' "' → logprob: -7.885892868041992
    10. '   ' → logprob: -10.760892868041992

Token 72: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8139268159866333
    2. '<|end|>' → logprob: -1.4389268159866333
    3. '_' → logprob: -1.9389268159866333
    4. '.' → logprob: -2.6889266967773438
    5. '==' → logprob: -3.9389266967773438
    6. 'm' → logprob: -4.313926696777344
    7. ' ' → logprob: -4.313926696777344
    8. ' ==' → logprob: -4.813926696777344
    9. '[' → logprob: -4.813926696777344
    10. ':' → logprob: -5.438926696777344

Token 73: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01507981214672327
    2. '__:' → logprob: -4.265079975128174
    3. ':' → logprob: -7.015079975128174
    4. '_' → logprob: -11.890079498291016
    5. '__.' → logprob: -13.265079498291016
    6. '__[' → logprob: -13.765079498291016
    7. '__,' → logprob: -13.890079498291016
    8. '___' → logprob: -14.015079498291016
    9. '__
' → logprob: -14.140079498291016
    10. '__;' → logprob: -14.390079498291016

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006077215657569468
    2. ' :' → logprob: -7.500607490539551
    3. ':
' → logprob: -10.62560749053955
    4. ':**' → logprob: -11.00060749053955
    5. '__:' → logprob: -12.87560749053955
    6. '):' → logprob: -13.00060749053955
    7. '<|end|>' → logprob: -13.37560749053955
    8. ':

' → logprob: -13.37560749053955
    9. '：' → logprob: -14.00060749053955
    10. '':' → logprob: -14.37560749053955

Token 75: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01182565838098526
    2. '   ' → logprob: -4.6368255615234375
    3. ' :' → logprob: -7.0118255615234375
    4. '<|end|>' → logprob: -7.5118255615234375
    5. '):' → logprob: -8.761825561523438
    6. ':
' → logprob: -8.886825561523438
    7. ')' → logprob: -9.761825561523438
    8. '    ' → logprob: -10.011825561523438
    9. '  ' → logprob: -10.511825561523438
    10. ' ' → logprob: -10.636825561523438

Token 76: ' Entry' (ID: 28122)
  Prédit: ' Entry'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Entry' → logprob: -0.05633633956313133
    2. 'Entry' (adapté à ' Entry') → logprob: -2.9313364028930664
    3. '   ' → logprob: -6.556336402893066
    4. '<Entry' → logprob: -11.431336402893066
    5. ' Entr' → logprob: -12.181336402893066
    6. ' Enter' → logprob: -12.431336402893066
    7. ' entry' → logprob: -12.931336402893066
    8. '    
' → logprob: -13.181336402893066
    9. '.Entry' → logprob: -13.306336402893066
    10. '   ' → logprob: -13.806336402893066

Token 77: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.3795937522663735e-05
    2. 'P' → logprob: -10.87502384185791
    3. 'Poi' → logprob: -13.12502384185791
    4. 'Po' → logprob: -13.50002384185791
    5. 'Pont' → logprob: -14.37502384185791
    6. 'Port' → logprob: -15.37502384185791
    7. '_Point' → logprob: -16.000022888183594
    8. '(Point' → logprob: -16.375022888183594
    9. '.Point' → logprob: -16.500022888183594
    10. ' Point' → logprob: -16.500022888183594

Token 78: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0003519086167216301
    2. '(' → logprob: -8.000351905822754
    3. '()
' → logprob: -11.500351905822754
    4. ' ()' → logprob: -12.875351905822754
    5. '()

' → logprob: -14.000351905822754
    6. '()`' → logprob: -14.375351905822754
    7. '```' → logprob: -15.000351905822754
    8. '();' → logprob: -15.250351905822754
    9. '(
' → logprob: -15.250351905822754
    10. '()<' → logprob: -15.625351905822754


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 76
Tokens correctement prédits (1ère position, stricte): 26
Tokens correctement prédits (1ère position, avec adaptation): 27
Tokens correctement prédits (top 10): 55
Précision stricte (1ère position): 34.21%
Précision adaptée (1ère position): 35.53%
Précision (top 10): 72.37%
================================================================================
