================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

N = int(input())
S = input()

ans = reduce(
    add,
    (
        int(all(map(lambda t: t[1] == c, zip(range(3), substring))))
        for substring in (S[i:i+3] for i in range(N-2))
        for c in ['A', 'B', 'C']
        if tuple(substring) == tuple('ABC')
    ),
    0
)

print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3026095926761627
    2. 'partial' → logprob: -1.8026095628738403
    3. 'reduce' → logprob: -2.55260968208313
    4. 'l' → logprob: -4.677609443664551
    5. ' wraps' → logprob: -4.802609443664551
    6. 'cached' → logprob: -8.05260944366455
    7. 'cache' → logprob: -8.55260944366455
    8. 'cmp' → logprob: -9.05260944366455
    9. ' partial' → logprob: -9.42760944366455
    10. ' l' → logprob: -9.80260944366455

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020487118512392044
    2. '(lambda' → logprob: -4.645487308502197
    3. '.' → logprob: -5.270487308502197
    4. ',' → logprob: -5.895487308502197
    5. '\' → logprob: -7.145487308502197
    6. ' (' → logprob: -7.520487308502197
    7. '```' → logprob: -8.020486831665039
    8. 'def' → logprob: -8.645486831665039
    9. 'lambda' → logprob: -8.895486831665039
    10. '`' → logprob: -8.895486831665039

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02829861268401146
    2. 'def' → logprob: -4.653298377990723
    3. ' ' → logprob: -4.778298377990723
    4. '\' → logprob: -5.153298377990723
    5. '(
' → logprob: -7.153298377990723
    6. ',' → logprob: -7.403298377990723
    7. '```' → logprob: -7.528298377990723
    8. ' (' → logprob: -8.153298377990723
    9. 'r' → logprob: -8.653298377990723
    10. 'd' → logprob: -8.778298377990723

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.2411840558052063
    2. ' itertools' → logprob: -2.1161839962005615
    3. ' math' → logprob: -2.7411839962005615
    4. ' collections' → logprob: -3.8661839962005615
    5. 'operator' → logprob: -4.991184234619141
    6. ' os' → logprob: -7.116184234619141
    7. 'math' → logprob: -7.991184234619141
    8. ' typing' → logprob: -8.49118423461914
    9. 'collections' → logprob: -8.99118423461914
    10. ' ' → logprob: -10.49118423461914

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.30121177434921265
    2. ' import' → logprob: -1.8012118339538574
    3. ' mul' → logprob: -3.0512118339538574
    4. 'add' → logprob: -3.8012118339538574
    5. ' ' → logprob: -4.051211833953857
    6. 'import' → logprob: -5.426211833953857
    7. 'mul' → logprob: -6.301211833953857
    8. ' item' → logprob: -7.051211833953857
    9. ' icon' → logprob: -8.4262113571167
    10. '```' → logprob: -9.3012113571167

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05437842011451721
    2. '(
' → logprob: -4.054378509521484
    3. ',' → logprob: -4.429378509521484
    4. '\n' → logprob: -4.679378509521484
    5. '\' → logprob: -4.804378509521484
    6. '#' → logprob: -6.679378509521484
    7. '`' → logprob: -6.679378509521484
    8. '
' → logprob: -7.679378509521484
    9. ' ' → logprob: -7.804378509521484
    10. '()' → logprob: -7.804378509521484

Token 10: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03062465414404869
    2. '(
' → logprob: -3.9056246280670166
    3. '#' → logprob: -5.530624866485596
    4. 'def' → logprob: -6.655624866485596
    5. 'a' → logprob: -6.780624866485596
    6. '\' → logprob: -6.905624866485596
    7. 'result' → logprob: -7.405624866485596
    8. ',' → logprob: -7.530624866485596
    9. '(

' → logprob: -8.655624389648438
    10. '(a' → logprob: -8.905624389648438

Token 11: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7208135724067688
    2. '=' → logprob: -1.095813512802124
    3. '_' → logprob: -2.095813512802124
    4. ' ' → logprob: -3.220813512802124
    5. ',' → logprob: -5.095813751220703
    6. 'um' → logprob: -6.095813751220703
    7. 'umber' → logprob: -6.470813751220703
    8. '  ' → logprob: -6.595813751220703
    9. '   ' → logprob: -6.845813751220703
    10. 'u' → logprob: -7.095813751220703

Token 12: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03955793008208275
    2. '10' → logprob: -3.414557933807373
    3. '100' → logprob: -5.914557933807373
    4. '5' → logprob: -6.789557933807373
    5. '0' → logprob: -6.914557933807373
    6. '20' → logprob: -7.789557933807373
    7. 'int' → logprob: -8.789557456970215
    8. ' [' → logprob: -9.164557456970215
    9. '1' → logprob: -9.414557456970215
    10. '50' → logprob: -9.414557456970215

Token 13: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00015812745550647378
    2. '(N' → logprob: -9.750158309936523
    3. ' (' → logprob: -10.375158309936523
    4. '(`' → logprob: -11.500158309936523
    5. '(input' → logprob: -11.500158309936523
    6. '()' → logprob: -11.750158309936523
    7. '```' → logprob: -11.750158309936523
    8. '('' → logprob: -11.875158309936523
    9. '(
' → logprob: -12.125158309936523
    10. '`' → logprob: -13.000158309936523

Token 14: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.02402554079890251
    2. ')' → logprob: -4.0240254402160645
    3. '()' → logprob: -5.2740254402160645
    4. '())' → logprob: -8.149025917053223
    5. '('' → logprob: -8.649025917053223
    6. '(
' → logprob: -8.774025917053223
    7. '(

' → logprob: -10.274025917053223
    8. '("("' → logprob: -11.149025917053223
    9. '(()' → logprob: -11.274025917053223
    10. '(`' → logprob: -11.399025917053223

Token 15: 'S' (ID: 50)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8949906229972839
    2. 'numbers' → logprob: -1.1449906826019287
    3. 'lst' → logprob: -2.3949906826019287
    4. 'arr' → logprob: -2.6449906826019287
    5. 'total' → logprob: -2.8949906826019287
    6. 'data' → logprob: -3.8949906826019287
    7. 'nums' → logprob: -4.26999044418335
    8. 'values' → logprob: -4.64499044418335
    9. 's' → logprob: -5.51999044418335
    10. 'elements' → logprob: -6.39499044418335

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3333417475223541
    2. '_' → logprob: -2.4583418369293213
    3. '[' → logprob: -2.8333418369293213
    4. '.' → logprob: -2.9583418369293213
    5. '=' → logprob: -3.0833418369293213
    6. ' ' → logprob: -4.458341598510742
    7. 'um' → logprob: -4.458341598510742
    8. '[:]' → logprob: -4.708341598510742
    9. ')' → logprob: -6.208341598510742
    10. 's' → logprob: -6.833341598510742

Token 17: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0920574963092804
    2. 'list' → logprob: -2.967057466506958
    3. '[input' → logprob: -4.092057704925537
    4. ' input' → logprob: -5.217057704925537
    5. 'reduce' → logprob: -5.217057704925537
    6. '[' → logprob: -5.592057704925537
    7. '[]' → logprob: -6.092057704925537
    8. ''' → logprob: -7.467057704925537
    9. 'sum' → logprob: -7.842057704925537
    10. '''' → logprob: -8.092057228088379

Token 18: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03823081776499748
    2. '()' → logprob: -3.2882308959960938
    3. '('' → logprob: -10.038230895996094
    4. ')' → logprob: -10.538230895996094
    5. '(
' → logprob: -10.788230895996094
    6. '```' → logprob: -10.788230895996094
    7. ' (' → logprob: -11.288230895996094
    8. '.' → logprob: -11.413230895996094
    9. '(

' → logprob: -11.913230895996094
    10. '(`' → logprob: -11.913230895996094

Token 19: 'ans' (ID: 616)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.15177124738693237
    2. 'count' → logprob: -2.526771306991577
    3. 'counts' → logprob: -3.651771306991577
    4. 'words' → logprob: -4.901771068572998
    5. 'res' → logprob: -5.526771068572998
    6. 'answer' → logprob: -5.776771068572998
    7. 'chars' → logprob: -6.026771068572998
    8. 'if' → logprob: -6.151771068572998
    9. 'lst' → logprob: -6.526771068572998
    10. 'total' → logprob: -6.651771068572998

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028003191575407982
    2. '=' → logprob: -3.653003215789795
    3. '_' → logprob: -6.403003215789795
    4. ' ' → logprob: -10.903002738952637
    5. ' +=' → logprob: -11.278002738952637
    6. '[' → logprob: -12.903002738952637
    7. '.' → logprob: -13.153002738952637
    8. '[:]' → logprob: -13.403002738952637
    9. '_=' → logprob: -13.903002738952637
    10. 's' → logprob: -13.903002738952637

Token 21: ' reduce' (ID: 10389)
  Prédit: 'reduce'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reduce' → logprob: -0.7646809220314026
    2. '0' → logprob: -0.8896809220314026
    3. ' reduce' → logprob: -2.889680862426758
    4. 'sum' → logprob: -3.514680862426758
    5. ' ' → logprob: -3.889680862426758
    6. ' sum' → logprob: -4.889680862426758
    7. ''' → logprob: -6.264680862426758
    8. 'S' → logprob: -6.639680862426758
    9. 'len' → logprob: -6.764680862426758
    10. ' S' → logprob: -7.264680862426758

Token 22: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25787413120269775
    2. '(add' → logprob: -1.5078741312026978
    3. '(lambda' → logprob: -5.132874011993408
    4. '(operator' → logprob: -10.882874488830566
    5. 'add' → logprob: -13.132874488830566
    6. '(
' → logprob: -13.382874488830566
    7. '((' → logprob: -13.882874488830566
    8. '(re' → logprob: -14.007874488830566
    9. '(s' → logprob: -15.132874488830566
    10. '(Add' → logprob: -15.257874488830566

Token 23: '   ' (ID: 271)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.062077704817056656
    2. ' add' → logprob: -2.812077760696411
    3. '(add' → logprob: -9.687077522277832
    4. '   ' → logprob: -10.812077522277832
    5. 'lambda' → logprob: -11.187077522277832
    6. ')add' → logprob: -11.937077522277832
    7. '	add' → logprob: -13.187077522277832
    8. ' lambda' → logprob: -13.562077522277832
    9. ' ' → logprob: -13.687077522277832
    10. ')' → logprob: -13.937077522277832

Token 24: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' (adapté à ' add') → logprob: -0.03917822986841202
    2. ' add' → logprob: -3.2891781330108643
    3. 'lambda' → logprob: -7.289178371429443
    4. '   ' → logprob: -8.789177894592285
    5. '(add' → logprob: -8.789177894592285
    6. ' lambda' → logprob: -10.039177894592285
    7. ')add' → logprob: -10.289177894592285
    8. ')' → logprob: -10.414177894592285
    9. '(lambda' → logprob: -10.914177894592285
    10. ' ' → logprob: -11.914177894592285

Token 25: ',
' (ID: 412)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003342997981235385
    2. ',int' → logprob: -7.128343105316162
    3. ',[' → logprob: -7.503343105316162
    4. ',S' → logprob: -7.753343105316162
    5. ',
' → logprob: -8.128342628479004
    6. ' ,' → logprob: -8.128342628479004
    7. ',map' → logprob: -8.378342628479004
    8. ',"' → logprob: -9.128342628479004
    9. ',(' → logprob: -9.628342628479004
    10. ')' → logprob: -9.753342628479004

Token 26: '   ' (ID: 271)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.091815710067749
    2. '[int' → logprob: -1.466815710067749
    3. '[' → logprob: -1.591815710067749
    4. 'S' → logprob: -3.091815710067749
    5. 'map' → logprob: -3.466815710067749
    6. '[S' → logprob: -3.466815710067749
    7. '[len' → logprob: -3.591815710067749
    8. 'list' → logprob: -3.966815710067749
    9. '[str' → logprob: -4.341815948486328
    10. '[s' → logprob: -4.341815948486328

Token 27: ' (
' (ID: 4112)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3097028732299805
    2. 'map' → logprob: -1.5597028732299805
    3. '[i' → logprob: -1.8097028732299805
    4. '[int' → logprob: -1.8097028732299805
    5. '[len' → logprob: -3.0597028732299805
    6. '(map' → logprob: -3.5597028732299805
    7. 'S' → logprob: -3.6847028732299805
    8. '[S' → logprob: -3.8097028732299805
    9. 'list' → logprob: -4.5597028732299805
    10. '[s' → logprob: -5.3097028732299805

Token 28: '       ' (ID: 309)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.41341444849967957
    2. 'int' → logprob: -1.413414478302002
    3. '(int' → logprob: -4.413414478302002
    4. '[' → logprob: -4.663414478302002
    5. '   ' → logprob: -4.663414478302002
    6. 'S' → logprob: -4.788414478302002
    7. '(' → logprob: -4.913414478302002
    8. '0' → logprob: -5.038414478302002
    9. 'ord' → logprob: -5.163414478302002
    10. 's' → logprob: -5.163414478302002

Token 29: ' int' (ID: 677)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.530604362487793
    2. 'int' (adapté à ' int') → logprob: -1.280604362487793
    3. 'ord' → logprob: -3.530604362487793
    4. 'S' → logprob: -4.155604362487793
    5. '(' → logprob: -4.655604362487793
    6. '(int' → logprob: -4.655604362487793
    7. '(ord' → logprob: -4.655604362487793
    8. '   ' → logprob: -4.780604362487793
    9. 'len' → logprob: -5.030604362487793
    10. '0' → logprob: -5.280604362487793

Token 30: '(all' (ID: 34727)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.8432886600494385
    2. '(c' → logprob: -1.2182886600494385
    3. '(ch' → logprob: -2.5932886600494385
    4. '(s' → logprob: -2.5932886600494385
    5. '(x' → logprob: -3.0932886600494385
    6. '(char' → logprob: -3.0932886600494385
    7. '(d' → logprob: -4.093288421630859
    8. '(' → logprob: -5.343288421630859
    9. '(i' → logprob: -5.343288421630859
    10. '(a' → logprob: -5.968288421630859

Token 31: '(map' (ID: 16946)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.2305121272802353
    2. '(c' → logprob: -2.7305121421813965
    3. '(ord' → logprob: -3.4805121421813965
    4. '(' → logprob: -3.7305121421813965
    5. '([' → logprob: -3.9805121421813965
    6. '(s' → logprob: -3.9805121421813965
    7. '(int' → logprob: -4.4805121421813965
    8. '((' → logprob: -4.6055121421813965
    9. '(x' → logprob: -5.3555121421813965
    10. '(a' → logprob: -5.4805121421813965

Token 32: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.014584880322217941
    2. '(str' → logprob: -4.639585018157959
    3. '(' → logprob: -6.014585018157959
    4. '(int' → logprob: -6.389585018157959
    5. '(bool' → logprob: -8.6395845413208
    6. '(
' → logprob: -8.8895845413208
    7. '((' → logprob: -9.0145845413208
    8. '(ord' → logprob: -9.7645845413208
    9. ')' → logprob: -10.1395845413208
    10. 'lambda' → logprob: -10.2645845413208

Token 33: ' t' (ID: 260)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.42940694093704224
    2. ' lambda' → logprob: -1.6794068813323975
    3. '(lambda' → logprob: -1.9294068813323975
    4. 'c' → logprob: -5.304407119750977
    5. '=lambda' → logprob: -5.679407119750977
    6. 's' → logprob: -6.054407119750977
    7. ')' → logprob: -6.679407119750977
    8. 'S' → logprob: -7.179407119750977
    9. ':' → logprob: -7.429407119750977
    10. ' ' → logprob: -7.679407119750977

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07704534381628036
    2. 'lambda' → logprob: -2.952045440673828
    3. '(lambda' → logprob: -4.577045440673828
    4. '=lambda' → logprob: -5.702045440673828
    5. ' lambda' → logprob: -5.827045440673828
    6. 'ambda' → logprob: -6.077045440673828
    7. 't' → logprob: -7.327045440673828
    8. ' :' → logprob: -7.827045440673828
    9. 'a' → logprob: -8.327045440673828
    10. ':int' → logprob: -8.452045440673828

Token 35: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46897420287132263
    2. 'S' → logprob: -1.468974232673645
    3. ' t' → logprob: -2.9689741134643555
    4. 'lambda' → logprob: -3.4689741134643555
    5. 's' → logprob: -4.7189741134643555
    6. ' S' → logprob: -4.9689741134643555
    7. '(t' → logprob: -4.9689741134643555
    8. ' lambda' → logprob: -5.2189741134643555
    9. 'int' → logprob: -5.4689741134643555
    10. '(ord' → logprob: -5.5939741134643555

Token 36: '[' (ID: 58)
  Prédit: '.count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -0.7626058459281921
    2. '[' → logprob: -2.137605905532837
    3. '==' → logprob: -2.137605905532837
    4. '.startswith' → logprob: -2.512605905532837
    5. ' in' → logprob: -2.637605905532837
    6. ' ==' → logprob: -3.012605905532837
    7. 't' → logprob: -4.387605667114258
    8. ':' → logprob: -4.512605667114258
    9. ')' → logprob: -4.512605667114258
    10. '[i' → logprob: -5.137605667114258

Token 37: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5960360765457153
    2. '1' → logprob: -1.8460360765457153
    3. 'i' → logprob: -2.096035957336426
    4. 't' → logprob: -2.346035957336426
    5. 'S' → logprob: -3.971035957336426
    6. 'int' → logprob: -4.596035957336426
    7. 's' → logprob: -4.846035957336426
    8. ':' → logprob: -5.221035957336426
    9. '<=' → logprob: -5.846035957336426
    10. '<' → logprob: -6.533535957336426

Token 38: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.29177603125572205
    2. ']==' → logprob: -2.791775941848755
    3. ']>=' → logprob: -3.041775941848755
    4. '][' → logprob: -3.916775941848755
    5. '[' → logprob: -3.916775941848755
    6. '>=' → logprob: -4.041776180267334
    7. '==' → logprob: -4.166776180267334
    8. '[i' → logprob: -4.791776180267334
    9. ']!=' → logprob: -4.916776180267334
    10. '>' → logprob: -5.041776180267334

Token 39: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.13650643825531
    2. '>=' → logprob: -1.76150643825531
    3. ' >=' → logprob: -2.3865065574645996
    4. '[' → logprob: -2.6365065574645996
    5. '!=' → logprob: -2.6365065574645996
    6. ' ==' → logprob: -2.6365065574645996
    7. ' !=' → logprob: -3.2615065574645996
    8. ' in' → logprob: -3.8865065574645996
    9. '<=' → logprob: -3.8865065574645996
    10. '   ' → logprob: -4.2615065574646

Token 40: ' c' (ID: 274)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.6041560769081116
    2. 'S' → logprob: -2.104156017303467
    3. ''' → logprob: -2.354156017303467
    4. 's' → logprob: -2.854156017303467
    5. 'c' → logprob: -3.354156017303467
    6. ''S' → logprob: -3.604156017303467
    7. ''t' → logprob: -3.729156017303467
    8. ''s' → logprob: -4.354156017303467
    9. ''a' → logprob: -4.854156017303467
    10. ''i' → logprob: -4.979156017303467

Token 41: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2957344949245453
    2. 'for' → logprob: -1.9207345247268677
    3. ' for' → logprob: -2.545734405517578
    4. ' or' → logprob: -4.295734405517578
    5. ' ,' → logprob: -4.920734405517578
    6. ' and' → logprob: -6.170734405517578
    7. '   ' → logprob: -6.170734405517578
    8. '[' → logprob: -6.545734405517578
    9. 'or' → logprob: -6.920734405517578
    10. '  ' → logprob: -7.170734405517578

Token 42: ' zip' (ID: 16216)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.0450139045715332
    2. 'zip' → logprob: -1.2950139045715332
    3. ' zip' → logprob: -1.5450139045715332
    4. ' enumerate' → logprob: -1.9200139045715332
    5. 'S' → logprob: -5.045013904571533
    6. ' S' → logprob: -5.670013904571533
    7. 't' → logprob: -7.170013904571533
    8. '[(' → logprob: -7.170013904571533
    9. ' ' → logprob: -7.857513904571533
    10. 's' → logprob: -7.982513904571533

Token 43: '(range' (ID: 50017)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.01727685146033764
    2. '(' → logprob: -5.017276763916016
    3. '(range' → logprob: -5.017276763916016
    4. '((' → logprob: -5.892276763916016
    5. '(
' → logprob: -7.767276763916016
    6. '(s' → logprob: -7.892276763916016
    7. '([' → logprob: -9.017276763916016
    8. '(sorted' → logprob: -10.392276763916016
    9. '(list' → logprob: -10.517276763916016
    10. '   ' → logprob: -10.767276763916016

Token 44: '(' (ID: 7)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.47981351613998413
    2. '(N' → logprob: -0.9798135161399841
    3. '(' → logprob: -5.229813575744629
    4. '(n' → logprob: -9.104813575744629
    5. 'len' → logprob: -9.354813575744629
    6. '(
' → logprob: -9.979813575744629
    7. '(-' → logprob: -10.854813575744629
    8. '(L' → logprob: -10.979813575744629
    9. ')' → logprob: -11.354813575744629
    10. '((' → logprob: -11.479813575744629

Token 45: '3' (ID: 18)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.46871981024742126
    2. '(N' → logprob: -1.8437198400497437
    3. 'len' → logprob: -1.9687198400497437
    4. '(len' → logprob: -2.593719720840454
    5. '(' → logprob: -7.343719959259033
    6. '(n' → logprob: -8.718719482421875
    7. '1' → logprob: -9.093719482421875
    8. '   ' → logprob: -9.218719482421875
    9. 'ans' → logprob: -9.343719482421875
    10. ' N' → logprob: -9.718719482421875

Token 46: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.39779698848724365
    2. '-' → logprob: -1.6477969884872437
    3. ',' → logprob: -2.272797107696533
    4. ' -' → logprob: -4.522797107696533
    5. 'N' → logprob: -5.647797107696533
    6. '-N' → logprob: -5.647797107696533
    7. 'len' → logprob: -6.147797107696533
    8. '-n' → logprob: -6.147797107696533
    9. '3' → logprob: -6.272797107696533
    10. '+' → logprob: -6.647797107696533

Token 47: ' substring' (ID: 89494)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.5323095917701721
    2. 'S' → logprob: -0.9073095917701721
    3. '   ' → logprob: -6.032309532165527
    4. ' ' → logprob: -6.657309532165527
    5. ' [' → logprob: -6.782309532165527
    6. '[S' → logprob: -6.907309532165527
    7. '[' → logprob: -7.282309532165527
    8. '  ' → logprob: -7.282309532165527
    9. ' list' → logprob: -7.844809532165527
    10. '"S' → logprob: -8.407309532165527

Token 48: '))))
' (ID: 55084)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.715572714805603
    2. ')))' → logprob: -0.840572714805603
    3. '))' → logprob: -4.215572834014893
    4. ')))
' → logprob: -4.215572834014893
    5. '(' → logprob: -4.465572834014893
    6. '(N' → logprob: -4.715572834014893
    7. '(i' → logprob: -5.090572834014893
    8. '(s' → logprob: -5.590572834014893
    9. ')' → logprob: -5.715572834014893
    10. '(S' → logprob: -5.715572834014893

Token 49: '       ' (ID: 309)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.19438080489635468
    2. '))
' → logprob: -1.944380760192871
    3. '   ' → logprob: -4.819380760192871
    4. 'for' → logprob: -5.319380760192871
    5. ' for' → logprob: -5.569380760192871
    6. '[' → logprob: -5.694380760192871
    7. '[:' → logprob: -5.819380760192871
    8. ')))' → logprob: -6.194380760192871
    9. '[-' → logprob: -6.819380760192871
    10. 's' → logprob: -6.944380760192871

Token 50: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4038980007171631
    2. 'for' (adapté à ' for') → logprob: -1.903898000717163
    3. '))' → logprob: -2.403898000717163
    4. ' for' → logprob: -2.778898000717163
    5. '   ' → logprob: -4.778898239135742
    6. ')
' → logprob: -5.028898239135742
    7. '))
' → logprob: -5.153898239135742
    8. '[i' → logprob: -6.028898239135742
    9. 's' → logprob: -6.653898239135742
    10. ' ' → logprob: -6.778898239135742

Token 51: ' substring' (ID: 89494)
  Prédit: ' substring'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' substring' → logprob: -0.7095048427581787
    2. 'c' → logprob: -1.7095048427581787
    3. ' c' → logprob: -1.7095048427581787
    4. 'substring' → logprob: -2.0845048427581787
    5. '_' → logprob: -4.959505081176758
    6. ' ' → logprob: -5.084505081176758
    7. ' i' → logprob: -6.209505081176758
    8. ' _' → logprob: -6.584505081176758
    9. 'i' → logprob: -6.959505081176758
    10. '   ' → logprob: -7.334505081176758

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06281203776597977
    2. 'in' → logprob: -2.812812089920044
    3. 's' → logprob: -7.437811851501465
    4. '<|end|>' → logprob: -8.687811851501465
    5. ')' → logprob: -9.812811851501465
    6. '<|end|>' → logprob: -11.437811851501465
    7. ' ' → logprob: -11.812811851501465
    8. '  ' → logprob: -13.625311851501465
    9. 'In' → logprob: -13.875311851501465
    10. ' s' → logprob: -13.937811851501465

Token 53: ' (' (ID: 350)
  Prédit: '(S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(S' → logprob: -0.4822676181793213
    2. '(zip' → logprob: -1.3572676181793213
    3. '(s' → logprob: -3.2322676181793213
    4. ' zip' → logprob: -4.357267379760742
    5. 'S' → logprob: -4.607267379760742
    6. '(c' → logprob: -4.732267379760742
    7. ' (' → logprob: -4.857267379760742
    8. '(' → logprob: -4.857267379760742
    9. '[S' → logprob: -4.982267379760742
    10. 'zip' → logprob: -5.107267379760742

Token 54: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.002166794380173087
    2. '   ' → logprob: -7.127166748046875
    3. ' S' → logprob: -7.252166748046875
    4. '(S' → logprob: -8.627166748046875
    5. ' ' → logprob: -8.877166748046875
    6. '[S' → logprob: -9.627166748046875
    7. '  ' → logprob: -10.127166748046875
    8. '[' → logprob: -10.252166748046875
    9. 'c' → logprob: -10.252166748046875
    10. '[
' → logprob: -10.627166748046875

Token 55: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.511406809295295e-06
    2. '[n' → logprob: -12.875006675720215
    3. '[j' → logprob: -13.625006675720215
    4. '[start' → logprob: -14.250006675720215
    5. '[' → logprob: -14.375006675720215
    6. '[index' → logprob: -14.625006675720215
    7. '[x' → logprob: -15.750006675720215
    8. '[idx' → logprob: -16.0000057220459
    9. '[pos' → logprob: -16.0000057220459
    10. '[c' → logprob: -16.2500057220459

Token 56: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.04058421403169632
    2. ':' → logprob: -3.4155843257904053
    3. ' :' → logprob: -5.040584087371826
    4. '   ' → logprob: -8.165584564208984
    5. ' ' → logprob: -9.665584564208984
    6. '-' → logprob: -10.165584564208984
    7. '  ' → logprob: -11.290584564208984
    8. '+' → logprob: -12.040584564208984
    9. '[i' → logprob: -12.165584564208984
    10. ' i' → logprob: -12.290584564208984

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02118459902703762
    2. ' +' → logprob: -3.8961846828460693
    3. '3' → logprob: -7.52118444442749
    4. '   ' → logprob: -9.896184921264648
    5. ' ' → logprob: -10.271184921264648
    6. '-' → logprob: -12.896184921264648
    7. '  ' → logprob: -13.083684921264648
    8. '+i' → logprob: -13.271184921264648
    9. '＋' → logprob: -13.646184921264648
    10. '```' → logprob: -13.646184921264648

Token 58: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0012280851369723678
    2. ' ' → logprob: -7.001227855682373
    3. '4' → logprob: -8.126228332519531
    4. '   ' → logprob: -12.376228332519531
    5. '2' → logprob: -12.813728332519531
    6. '  ' → logprob: -13.251228332519531
    7. ')' → logprob: -13.313728332519531
    8. '1' → logprob: -13.751228332519531
    9. 'len' → logprob: -14.063728332519531
    10. '6' → logprob: -14.376228332519531

Token 59: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7519751787185669
    2. '])' → logprob: -0.7519751787185669
    3. ')' → logprob: -2.8769750595092773
    4. ']))' → logprob: -8.876975059509277
    5. ')]' → logprob: -9.001975059509277
    6. ' ' → logprob: -9.251975059509277
    7. '   ' → logprob: -9.251975059509277
    8. '],' → logprob: -9.751975059509277
    9. ' ])' → logprob: -10.501975059509277
    10. '+' → logprob: -10.501975059509277

Token 60: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35550960898399353
    2. ' for' → logprob: -1.855509638786316
    3. 'for' → logprob: -1.980509638786316
    4. '   ' → logprob: -6.1055097579956055
    5. ' ' → logprob: -6.8555097579956055
    6. ']' → logprob: -7.1055097579956055
    7. '  ' → logprob: -9.230509757995605
    8. '```' → logprob: -9.230509757995605
    9. ' )' → logprob: -9.355509757995605
    10. '    ' → logprob: -9.355509757995605

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25484561920166016
    2. 'i' → logprob: -1.5048456192016602
    3. ' range' → logprob: -6.00484561920166
    4. 'range' → logprob: -7.75484561920166
    5. '	i' → logprob: -11.75484561920166
    6. ' ' → logprob: -12.12984561920166
    7. '  ' → logprob: -13.12984561920166
    8. '   ' → logprob: -14.50484561920166
    9. ')i' → logprob: -15.25484561920166
    10. ' in' → logprob: -15.37984561920166

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02087351307272911
    2. 'in' → logprob: -3.895873546600342
    3. ' range' → logprob: -8.645873069763184
    4. 'range' → logprob: -9.520873069763184
    5. ' ' → logprob: -9.895873069763184
    6. '  ' → logprob: -11.145873069763184
    7. ' i' → logprob: -11.645873069763184
    8. '<|end|>' → logprob: -12.770873069763184
    9. '   ' → logprob: -13.270873069763184
    10. ' xrange' → logprob: -13.770873069763184

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.693167507648468
    2. 'range' → logprob: -0.693167507648468
    3. ' ' → logprob: -11.318167686462402
    4. '	range' → logprob: -12.943167686462402
    5. ' xrange' → logprob: -13.193167686462402
    6. '  ' → logprob: -13.568167686462402
    7. '(range' → logprob: -13.568167686462402
    8. '   ' → logprob: -14.443167686462402
    9. ')' → logprob: -15.193167686462402
    10. '3' → logprob: -16.568166732788086

Token 64: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.039599984884262085
    2. '(' → logprob: -3.289599895477295
    3. '(len' → logprob: -6.539599895477295
    4. '(
' → logprob: -9.664600372314453
    5. '(n' → logprob: -10.414600372314453
    6. ' (' → logprob: -11.539600372314453
    7. '(

' → logprob: -13.039600372314453
    8. ' N' → logprob: -13.414600372314453
    9. '((' → logprob: -13.539600372314453
    10. ')' → logprob: -13.789600372314453

Token 65: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.38709431886672974
    2. ' -' → logprob: -1.137094259262085
    3. ' ' → logprob: -8.762094497680664
    4. '3' → logprob: -10.887094497680664
    5. ')' → logprob: -11.262094497680664
    6. '))' → logprob: -11.512094497680664
    7. '   ' → logprob: -11.637094497680664
    8. '  ' → logprob: -12.137094497680664
    9. ' ' → logprob: -13.262094497680664
    10. '1' → logprob: -13.512094497680664

Token 66: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001302374730585143
    2. ' ' → logprob: -9.000130653381348
    3. '3' → logprob: -12.875130653381348
    4. '```' → logprob: -13.000130653381348
    5. '   ' → logprob: -14.750130653381348
    6. '1' → logprob: -14.937630653381348
    7. '  ' → logprob: -15.437630653381348
    8. '4' → logprob: -16.43762969970703
    9. '２' → logprob: -16.43762969970703
    10. '    ' → logprob: -16.81262969970703

Token 67: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.031062085181474686
    2. '))
' → logprob: -4.156062126159668
    3. ')))' → logprob: -4.406062126159668
    4. ')' → logprob: -6.156062126159668
    5. '))
' → logprob: -8.906062126159668
    6. '))))' → logprob: -9.281062126159668
    7. ' ))' → logprob: -9.531062126159668
    8. ')),' → logprob: -9.781062126159668
    9. ')))
' → logprob: -9.906062126159668
    10. ' ' → logprob: -9.906062126159668

Token 68: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09732992202043533
    2. '))' → logprob: -2.84732985496521
    3. ')
' → logprob: -4.097330093383789
    4. '   ' → logprob: -4.097330093383789
    5. ')))' → logprob: -6.847330093383789
    6. '       ' → logprob: -8.972330093383789
    7. '))
' → logprob: -8.972330093383789
    8. '),' → logprob: -9.472330093383789
    9. '),
' → logprob: -10.597330093383789
    10. ')
' → logprob: -11.222330093383789

Token 69: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37858325242996216
    2. ')
' → logprob: -1.5035831928253174
    3. '   ' → logprob: -2.7535831928253174
    4. '))' → logprob: -3.6285831928253174
    5. ')))' → logprob: -7.2535834312438965
    6. '       ' → logprob: -7.5035834312438965
    7. '),
' → logprob: -7.7535834312438965
    8. '),' → logprob: -8.128582954406738
    9. ')
' → logprob: -8.253582954406738
    10. '))
' → logprob: -9.253582954406738

Token 70: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.22767579555511475
    2. 'c' → logprob: -1.6026757955551147
    3. ' t' → logprob: -7.727675914764404
    4. ' substring' → logprob: -8.102675437927246
    5. ' ' → logprob: -8.290175437927246
    6. ' S' → logprob: -8.915175437927246
    7. ' i' → logprob: -9.227675437927246
    8. 't' → logprob: -9.352675437927246
    9. 'S' → logprob: -9.415175437927246
    10. 'substring' → logprob: -9.415175437927246

Token 71: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07973475009202957
    2. 'in' → logprob: -2.5797348022460938
    3. ' ' → logprob: -8.454734802246094
    4. '  ' → logprob: -9.079734802246094
    5. 's' → logprob: -9.329734802246094
    6. ')' → logprob: -9.454734802246094
    7. ' '' → logprob: -10.079734802246094
    8. '<|end|>' → logprob: -10.204734802246094
    9. '"' → logprob: -10.517234802246094
    10. '	in' → logprob: -10.829734802246094

Token 72: ' ['' (ID: 5140)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.8352669477462769
    2. '"' → logprob: -1.2102669477462769
    3. ' '' → logprob: -2.3352670669555664
    4. ' "' → logprob: -3.2102670669555664
    5. ''S' → logprob: -3.7102670669555664
    6. ''s' → logprob: -3.9602670669555664
    7. '['' → logprob: -4.210267066955566
    8. '('' → logprob: -4.460267066955566
    9. '"S' → logprob: -4.710267066955566
    10. '{'' → logprob: -4.835267066955566

Token 73: 'A' (ID: 32)
  Prédit: 'RGB'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RGB' → logprob: -0.8553040027618408
    2. 'ABC' → logprob: -1.4803040027618408
    3. 'R' → logprob: -1.7303040027618408
    4. 'abc' → logprob: -2.730304002761841
    5. 'A' → logprob: -3.605304002761841
    6. 'AC' → logprob: -3.980304002761841
    7. 'a' → logprob: -4.855303764343262
    8. 'RY' → logprob: -5.105303764343262
    9. 'rgb' → logprob: -5.730303764343262
    10. 'AG' → logprob: -5.730303764343262

Token 74: '',' (ID: 787)
  Prédit: 'BC'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BC' → logprob: -0.08221987634897232
    2. 'B' → logprob: -2.7072198390960693
    3. 'BG' → logprob: -4.832220077514648
    4. '',' → logprob: -6.582220077514648
    5. 'CG' → logprob: -7.082220077514648
    6. '','' → logprob: -7.207220077514648
    7. 'BCD' → logprob: -7.832220077514648
    8. 'C' → logprob: -8.457220077514648
    9. 'G' → logprob: -8.707220077514648
    10. ''' → logprob: -9.207220077514648

Token 75: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18208381533622742
    2. ' '' → logprob: -1.8070838451385498
    3. 'B' → logprob: -7.557083606719971
    4. ''T' → logprob: -7.682083606719971
    5. ''S' → logprob: -7.932083606719971
    6. ''A' → logprob: -8.307084083557129
    7. ' B' → logprob: -8.682084083557129
    8. ''C' → logprob: -8.682084083557129
    9. '"B' → logprob: -9.182084083557129
    10. ' ' → logprob: -9.432084083557129

Token 76: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.458473801612854
    2. 'C' → logprob: -1.833473801612854
    3. 'G' → logprob: -1.833473801612854
    4. 'T' → logprob: -3.0834736824035645
    5. ''' → logprob: -6.4584736824035645
    6. ''C' → logprob: -9.208474159240723
    7. 'N' → logprob: -9.770974159240723
    8. ' B' → logprob: -9.958474159240723
    9. 'Z' → logprob: -10.020974159240723
    10. 'R' → logprob: -10.083474159240723

Token 77: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.43040189146995544
    2. ''C' → logprob: -1.3054019212722778
    3. ',' → logprob: -3.0554018020629883
    4. 'C' → logprob: -3.6804018020629883
    5. '','' → logprob: -5.680401802062988
    6. ''' → logprob: -6.430401802062988
    7. ','' → logprob: -7.180401802062988
    8. ',C' → logprob: -7.805401802062988
    9. ' ,' → logprob: -9.555401802062988
    10. ' '' → logprob: -11.055401802062988

Token 78: ' '' (ID: 461)
  Prédit: ''C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''C' → logprob: -0.2549360692501068
    2. ' '' → logprob: -1.8799360990524292
    3. ''' → logprob: -2.6299359798431396
    4. ''S' → logprob: -9.129936218261719
    5. 'C' → logprob: -9.754936218261719
    6. ' C' → logprob: -10.004936218261719
    7. ''A' → logprob: -10.629936218261719
    8. '"C' → logprob: -10.879936218261719
    9. ' ' → logprob: -11.504936218261719
    10. '<|end|>' → logprob: -11.629936218261719

Token 79: 'C' (ID: 34)
  Prédit: 'C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.20179951190948486
    2. ''C' → logprob: -1.7017995119094849
    3. ''' → logprob: -8.201799392700195
    4. ' C' → logprob: -10.826799392700195
    5. '"C' → logprob: -11.201799392700195
    6. '`' → logprob: -11.451799392700195
    7. ' '' → logprob: -11.764299392700195
    8. '')' → logprob: -12.014299392700195
    9. '```' → logprob: -12.201799392700195
    10. '['' → logprob: -12.451799392700195

Token 80: '']
' (ID: 9756)
  Prédit: ''])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''])' → logprob: -0.36613714694976807
    2. '']' → logprob: -1.741137146949768
    3. '']))' → logprob: -2.1161370277404785
    4. ''])
' → logprob: -5.6161370277404785
    5. '])' → logprob: -6.2411370277404785
    6. '',' → logprob: -6.3661370277404785
    7. ''' → logprob: -6.4911370277404785
    8. ']))' → logprob: -7.4911370277404785
    9. '']))
' → logprob: -8.366137504577637
    10. ']' → logprob: -8.866137504577637

Token 81: '       ' (ID: 309)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1652841567993164
    2. ')
' → logprob: -2.4152841567993164
    3. '   ' → logprob: -3.1652841567993164
    4. '))' → logprob: -3.9152841567993164
    5. ')))' → logprob: -7.665284156799316
    6. '       ' → logprob: -9.040284156799316
    7. '),' → logprob: -9.415284156799316
    8. '),
' → logprob: -9.540284156799316
    9. '))
' → logprob: -9.790284156799316
    10. ')
' → logprob: -10.790284156799316

Token 82: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1437501162290573
    2. ')
' → logprob: -2.0187501907348633
    3. '))' → logprob: -7.018750190734863
    4. '   ' → logprob: -8.893750190734863
    5. ')
' → logprob: -11.268750190734863
    6. ')))' → logprob: -11.518750190734863
    7. '),' → logprob: -11.768750190734863
    8. ')

' → logprob: -12.393750190734863
    9. '),
' → logprob: -13.018750190734863
    10. ' )' → logprob: -13.518750190734863

Token 83: ' tuple' (ID: 31311)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.5578336715698242
    2. ' c' → logprob: -1.6828336715698242
    3. ' substring' → logprob: -1.8078336715698242
    4. ' len' → logprob: -1.9328336715698242
    5. 'substring' → logprob: -2.557833671569824
    6. 'c' → logprob: -2.682833671569824
    7. ' any' → logprob: -2.807833671569824
    8. 'len' → logprob: -3.932833671569824
    9. ' not' → logprob: -4.057833671569824
    10. 'all' → logprob: -4.682833671569824

Token 84: '(sub' (ID: 19764)
  Prédit: '(sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sub' → logprob: -0.005197943653911352
    2. '(S' → logprob: -6.130198001861572
    3. '(map' → logprob: -7.005198001861572
    4. '(zip' → logprob: -7.880198001861572
    5. '(sorted' → logprob: -8.130197525024414
    6. '(set' → logprob: -8.255197525024414
    7. '((' → logprob: -8.255197525024414
    8. '(tuple' → logprob: -8.630197525024414
    9. 'substring' → logprob: -8.880197525024414
    10. '(' → logprob: -9.130197525024414

Token 85: 'string' (ID: 1655)
  Prédit: 'string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'string' → logprob: -5.228561349213123e-05
    2. 'tring' → logprob: -9.875052452087402
    3. 'ring' → logprob: -15.125052452087402
    4. 'str' → logprob: -15.625052452087402
    5. '(string' → logprob: -15.625052452087402
    6. 'range' → logprob: -16.750051498413086
    7. '(' → logprob: -17.125051498413086
    8. ' string' → logprob: -17.625051498413086
    9. 'String' → logprob: -18.000051498413086
    10. 't' → logprob: -18.625051498413086

Token 86: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05547656863927841
    2. ')==' → logprob: -3.430476665496826
    3. ').' → logprob: -4.555476665496826
    4. ')[' → logprob: -5.180476665496826
    5. '   ' → logprob: -6.680476665496826
    6. '==' → logprob: -7.180476665496826
    7. ')!=' → logprob: -7.305476665496826
    8. ' )' → logprob: -7.430476665496826
    9. '[:' → logprob: -7.430476665496826
    10. '[i' → logprob: -7.680476665496826

Token 87: ' ==' (ID: 951)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08138316869735718
    2. '==' → logprob: -3.206383228302002
    3. '!=' → logprob: -3.831383228302002
    4. '),' → logprob: -5.456383228302002
    5. ' !=' → logprob: -6.456383228302002
    6. '[' → logprob: -6.456383228302002
    7. ')==' → logprob: -6.581383228302002
    8. '):' → logprob: -6.706383228302002
    9. '<|end|>' → logprob: -6.706383228302002
    10. ')!=' → logprob: -7.081383228302002

Token 88: ' tuple' (ID: 31311)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.3292835056781769
    2. '(tuple' → logprob: -2.0792834758758545
    3. ' (' → logprob: -2.4542834758758545
    4. 'tuple' → logprob: -3.4542834758758545
    5. '(t' → logprob: -4.079283714294434
    6. '('' → logprob: -5.079283714294434
    7. ' tuple' → logprob: -5.454283714294434
    8. '   ' → logprob: -5.579283714294434
    9. '(' → logprob: -5.954283714294434
    10. '('',' → logprob: -6.204283714294434

Token 89: '('' (ID: 706)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.13423119485378265
    2. '([' → logprob: -2.6342310905456543
    3. '((' → logprob: -4.134231090545654
    4. '(['' → logprob: -4.259231090545654
    5. '(' → logprob: -4.884231090545654
    6. '(sub' → logprob: -5.009231090545654
    7. '(s' → logprob: -6.009231090545654
    8. '('' → logprob: -6.009231090545654
    9. '(('' → logprob: -6.509231090545654
    10. ' (' → logprob: -7.509231090545654

Token 90: 'ABC' (ID: 44197)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.39806950092315674
    2. 'CCC' → logprob: -2.523069381713867
    3. 'ccc' → logprob: -2.648069381713867
    4. '[c' → logprob: -3.023069381713867
    5. '(c' → logprob: -3.273069381713867
    6. 'ABC' → logprob: -3.523069381713867
    7. 'AAA' → logprob: -4.148069381713867
    8. ')' → logprob: -4.648069381713867
    9. 'abc' → logprob: -5.523069381713867
    10. 'A' → logprob: -5.648069381713867

Token 91: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.06686822324991226
    2. ''))' → logprob: -2.941868305206299
    3. '')))' → logprob: -5.441868305206299
    4. ')' → logprob: -5.566868305206299
    5. ''' → logprob: -6.566868305206299
    6. '')
' → logprob: -6.816868305206299
    7. ''))
' → logprob: -8.44186782836914
    8. '))' → logprob: -8.69186782836914
    9. ')))' → logprob: -8.81686782836914
    10. '')))
' → logprob: -9.31686782836914

Token 92: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011800799518823624
    2. '   ' → logprob: -4.761800765991211
    3. '))' → logprob: -6.261800765991211
    4. ')
' → logprob: -7.261800765991211
    5. ')))' → logprob: -8.011800765991211
    6. '       ' → logprob: -8.886800765991211
    7. '),' → logprob: -9.761800765991211
    8. ' )' → logprob: -11.261800765991211
    9. '))))' → logprob: -12.011800765991211
    10. '           ' → logprob: -12.886800765991211

Token 93: ' ),
' (ID: 4954)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.057288020849227905
    2. ')
' → logprob: -3.3072879314422607
    3. '))' → logprob: -4.05728816986084
    4. '   ' → logprob: -6.55728816986084
    5. ')))' → logprob: -8.55728816986084
    6. '),' → logprob: -9.30728816986084
    7. '),
' (adapté à ' ),
') → logprob: -10.80728816986084
    8. '       ' → logprob: -11.05728816986084
    9. ' ' → logprob: -11.93228816986084
    10. '))
' → logprob: -12.43228816986084

Token 94: '   ' (ID: 271)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0030883513391017914
    2. ')' → logprob: -6.003088474273682
    3. '   ' → logprob: -8.253087997436523
    4. ' ' → logprob: -8.378087997436523
    5. '1' → logprob: -10.003087997436523
    6. 'default' → logprob: -10.878087997436523
    7. ')
' → logprob: -11.128087997436523
    8. '2' → logprob: -12.003087997436523
    9. '),' → logprob: -12.128087997436523
    10. 'initial' → logprob: -12.378087997436523

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.375014305114746
    3. '   ' → logprob: -13.000014305114746
    4. '1' → logprob: -16.37501335144043
    5. ')' → logprob: -17.50001335144043
    6. '  ' → logprob: -17.50001335144043
    7. '2' → logprob: -19.37501335144043
    8. '000' → logprob: -19.37501335144043
    9. '00' → logprob: -19.43751335144043
    10. '3' → logprob: -19.50001335144043

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0008340472122654319
    2. ')' → logprob: -7.750833988189697
    3. ' ' → logprob: -7.875833988189697
    4. '   ' → logprob: -11.000834465026855
    5. ')
' → logprob: -12.625834465026855
    6. '  ' → logprob: -14.625834465026855
    7. '),' → logprob: -14.625834465026855
    8. '1' → logprob: -14.750834465026855
    9. ' )' → logprob: -15.375834465026855
    10. '       ' → logprob: -15.375834465026855

Token 97: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018113377154804766
    2. ')
' → logprob: -8.625181198120117
    3. '
' → logprob: -14.875181198120117
    4. ')

' → logprob: -15.375181198120117
    5. ')`' → logprob: -15.625181198120117
    6. '```' → logprob: -15.625181198120117
    7. '))' → logprob: -15.875181198120117
    8. ' )' → logprob: -15.875181198120117
    9. '#' → logprob: -16.500181198120117
    10. '0' → logprob: -16.625181198120117

Token 98: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00016098834748845547
    2. ')
' → logprob: -8.750161170959473
    3. '
' → logprob: -13.875161170959473
    4. ' )' → logprob: -14.500161170959473
    5. '```' → logprob: -15.250161170959473
    6. ')

' → logprob: -15.375161170959473
    7. ')`' → logprob: -15.625161170959473
    8. '))' → logprob: -16.750160217285156
    9. '#' → logprob: -17.000160217285156
    10. '),' → logprob: -17.625160217285156

Token 99: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017352772876620293
    2. '0' → logprob: -4.39235258102417
    3. '<|end|>' → logprob: -6.51735258102417
    4. '1' → logprob: -6.76735258102417
    5. ' ' → logprob: -7.39235258102417
    6. '+' → logprob: -8.017353057861328
    7. '(' → logprob: -8.267353057861328
    8. ')
' → logprob: -9.017353057861328
    9. '[' → logprob: -9.017353057861328
    10. '
' → logprob: -9.142353057861328

Token 100: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -0.038076501339673996
    2. '(' → logprob: -3.288076400756836
    3. '(
' → logprob: -11.413076400756836
    4. '()' → logprob: -11.788076400756836
    5. '(len' → logprob: -11.913076400756836
    6. 'ans' → logprob: -12.663076400756836
    7. '('' → logprob: -13.788076400756836
    8. '(answer' → logprob: -13.788076400756836
    9. '(sum' → logprob: -14.163076400756836
    10. '(`' → logprob: -14.413076400756836

Token 101: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ')
' → logprob: -13.125006675720215
    3. ' )' → logprob: -13.250006675720215
    4. '))' → logprob: -13.500006675720215
    5. ')`' → logprob: -14.375006675720215
    6. '`)' → logprob: -15.500006675720215
    7. '+' → logprob: -15.875006675720215
    8. '()' → logprob: -16.1250057220459
    9. '')' → logprob: -16.2500057220459
    10. '）' → logprob: -17.0000057220459


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 99
Tokens correctement prédits (1ère position, stricte): 36
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 71
Précision stricte (1ère position): 36.36%
Précision adaptée (1ère position): 37.37%
Précision (top 10): 71.72%
================================================================================
