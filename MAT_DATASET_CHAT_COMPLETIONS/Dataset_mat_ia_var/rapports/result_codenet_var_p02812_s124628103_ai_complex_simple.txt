================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:31:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from functools import reduce
from operator import add

_, s = map(str, [input(), input()])
indices = range(len(s)-2)
cnt = reduce(add, map(lambda i: (lambda x: x=="ABC")(s[i:i+3]), indices))
print(cnt)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' functools' (ID: 142636)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' reduce' (ID: 10389)
  Prédit: 'wrap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'wrap' → logprob: -0.3606022894382477
    2. 'partial' → logprob: -1.3606022596359253
    3. 'reduce' → logprob: -3.610602378845215
    4. ' wraps' → logprob: -4.110602378845215
    5. 'l' → logprob: -6.735602378845215
    6. ' partial' → logprob: -7.610602378845215
    7. 'cached' → logprob: -7.985602378845215
    8. 'cmp' → logprob: -8.235602378845215
    9. 'cache' → logprob: -8.485602378845215
    10. '```' → logprob: -8.985602378845215

Token 4: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.020179791375994682
    2. '(lambda' → logprob: -4.270179748535156
    3. '.' → logprob: -5.270179748535156
    4. ',' → logprob: -8.020179748535156
    5. ' (' → logprob: -8.395179748535156
    6. '```' → logprob: -9.520179748535156
    7. '(
' → logprob: -10.145179748535156
    8. '\(' → logprob: -10.270179748535156
    9. '\' → logprob: -10.395179748535156
    10. 'lambda' → logprob: -11.020179748535156

Token 5: 'from' (ID: 2845)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042372774332761765
    2. 'def' → logprob: -3.667372703552246
    3. '\' → logprob: -4.542372703552246
    4. ',' → logprob: -6.417372703552246
    5. '(
' → logprob: -7.292372703552246
    6. '```' → logprob: -7.542372703552246
    7. '(lambda' → logprob: -7.667372703552246
    8. '\(' → logprob: -7.917372703552246
    9. ' ' → logprob: -8.792372703552246
    10. '\n' → logprob: -8.792372703552246

Token 6: ' operator' (ID: 11019)
  Prédit: ' operator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' operator' → logprob: -0.8141523599624634
    2. ' math' → logprob: -0.9391523599624634
    3. 'operator' → logprob: -2.814152240753174
    4. ' itertools' → logprob: -2.814152240753174
    5. 'math' → logprob: -3.689152240753174
    6. ' collections' → logprob: -4.064152240753174
    7. 'collections' → logprob: -6.064152240753174
    8. ' os' → logprob: -6.814152240753174
    9. 'os' → logprob: -8.439152717590332
    10. 'it' → logprob: -9.439152717590332

Token 7: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.022899029776453972
    2. 'import' → logprob: -3.8978989124298096
    3. ' ' → logprob: -6.397899150848389
    4. '.' → logprob: -7.522899150848389
    5. ' .' → logprob: -9.14789867401123
    6. '.import' → logprob: -10.64789867401123
    7. '	import' → logprob: -11.77289867401123
    8. '<|end|>' → logprob: -13.02289867401123
    9. '_import' → logprob: -13.39789867401123
    10. ' ' → logprob: -13.52289867401123

Token 8: ' add' (ID: 1147)
  Prédit: ' add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' add' → logprob: -0.1571701467037201
    2. ' import' → logprob: -2.282170057296753
    3. 'add' → logprob: -3.907170057296753
    4. ' mul' → logprob: -4.282170295715332
    5. ' ' → logprob: -5.532170295715332
    6. 'import' → logprob: -5.657170295715332
    7. 'mul' → logprob: -6.907170295715332
    8. ' item' → logprob: -7.407170295715332
    9. ' icon' → logprob: -9.157170295715332
    10. 'item' → logprob: -9.532170295715332

Token 9: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011845800094306469
    2. '\' → logprob: -5.511845588684082
    3. '(
' → logprob: -5.511845588684082
    4. '\n' → logprob: -6.386845588684082
    5. '\(' → logprob: -7.261845588684082
    6. ',' → logprob: -7.386845588684082
    7. '```' → logprob: -8.761845588684082
    8. '`' → logprob: -9.386845588684082
    9. '(

' → logprob: -9.636845588684082
    10. '#' → logprob: -9.761845588684082

Token 10: '_,' (ID: 14152)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21053332090377808
    2. '#' → logprob: -3.085533380508423
    3. '(' → logprob: -3.710533380508423
    4. 'sum' → logprob: -3.960533380508423
    5. 'def' → logprob: -4.335533142089844
    6. 'total' → logprob: -4.460533142089844
    7. '\' → logprob: -4.460533142089844
    8. 'a' → logprob: -4.960533142089844
    9. 'res' → logprob: -5.085533142089844
    10. 's' → logprob: -5.085533142089844

Token 11: ' s' (ID: 265)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.6259914040565491
    2. ' _' → logprob: -1.5009913444519043
    3. '_' → logprob: -2.1259913444519043
    4. ' ' → logprob: -2.8759913444519043
    5. '*' → logprob: -4.625991344451904
    6. '=' → logprob: -4.875991344451904
    7. ' result' → logprob: -5.000991344451904
    8. '_=' → logprob: -5.125991344451904
    9. ' x' → logprob: -5.375991344451904
    10. 'result' → logprob: -5.750991344451904

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0012941661989316344
    2. ' =' → logprob: -7.376294136047363
    3. ',' → logprob: -7.501294136047363
    4. ')' → logprob: -10.251294136047363
    5. '_' → logprob: -10.251294136047363
    6. ' ' → logprob: -10.501294136047363
    7. '.' → logprob: -12.876294136047363
    8. 'um' → logprob: -12.876294136047363
    9. 's' → logprob: -13.001294136047363
    10. '=}' → logprob: -13.376294136047363

Token 13: ' map' (ID: 4014)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.49522891640663147
    2. 'map' → logprob: -1.370228886604309
    3. ' input' → logprob: -2.4952290058135986
    4. ' map' → logprob: -3.8702290058135986
    5. '"' → logprob: -4.7452287673950195
    6. 'div' → logprob: -5.7452287673950195
    7. ''' → logprob: -6.1202287673950195
    8. '0' → logprob: -6.1202287673950195
    9. '[' → logprob: -6.1202287673950195
    10. 'range' → logprob: -6.1202287673950195

Token 14: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15704850852489471
    2. '(lambda' → logprob: -2.157048463821411
    3. '(str' → logprob: -4.03204870223999
    4. '(int' → logprob: -4.53204870223999
    5. '(list' → logprob: -8.157048225402832
    6. '(range' → logprob: -8.407048225402832
    7. '(
' → logprob: -9.657048225402832
    8. '(eval' → logprob: -9.657048225402832
    9. '<|end|>' → logprob: -9.657048225402832
    10. '(operator' → logprob: -9.782048225402832

Token 15: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02911745198071003
    2. ',int' → logprob: -3.9041173458099365
    3. ',input' → logprob: -4.904117584228516
    4. ',line' → logprob: -8.154117584228516
    5. ')' → logprob: -8.904117584228516
    6. ',str' → logprob: -9.529117584228516
    7. ' ,' → logprob: -9.779117584228516
    8. 'input' → logprob: -9.779117584228516
    9. '(' → logprob: -9.904117584228516
    10. ',bool' → logprob: -9.904117584228516

Token 16: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.05359887331724167
    2. ' input' → logprob: -3.4285988807678223
    3. 'range' → logprob: -4.553598880767822
    4. 'open' → logprob: -5.803598880767822
    5. '[' → logprob: -6.553598880767822
    6. 'iter' → logprob: -6.803598880767822
    7. ' range' → logprob: -7.178598880767822
    8. '['' → logprob: -7.428598880767822
    9. 'map' → logprob: -8.303598403930664
    10. 'str' → logprob: -8.303598403930664

Token 17: 'input' (ID: 2586)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5394925475120544
    2. '0' → logprob: -2.414492607116699
    3. ''' → logprob: -2.664492607116699
    4. 'range' → logprob: -2.789492607116699
    5. '3' → logprob: -3.539492607116699
    6. '10' → logprob: -3.914492607116699
    7. '5' → logprob: -4.039492607116699
    8. '"' → logprob: -4.039492607116699
    9. '2' → logprob: -4.039492607116699
    10. 'input' → logprob: -4.414492607116699

Token 18: '(),' (ID: 2547)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.12956826388835907
    2. '(),' → logprob: -3.379568338394165
    3. '())' → logprob: -3.629568338394165
    4. '(' → logprob: -3.629568338394165
    5. '()]' → logprob: -3.879568338394165
    6. ')])' → logprob: -4.879568099975586
    7. '])' → logprob: -5.879568099975586
    8. ',' → logprob: -7.379568099975586
    9. '('' → logprob: -7.879568099975586
    10. '()],' → logprob: -8.254568099975586

Token 19: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07171701639890671
    2. ' input' → logprob: -2.6967170238494873
    3. 'int' → logprob: -6.946716785430908
    4. '(input' → logprob: -8.571717262268066
    5. ' int' → logprob: -9.571717262268066
    6. 'sum' → logprob: -9.696717262268066
    7. 'reduce' → logprob: -9.696717262268066
    8. '[input' → logprob: -9.821717262268066
    9. ' ' → logprob: -10.196717262268066
    10. '*' → logprob: -10.321717262268066

Token 20: '()])
' (ID: 141457)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06280084699392319
    2. '())' → logprob: -3.062800884246826
    3. '()]' → logprob: -4.687800884246826
    4. ')])' → logprob: -5.437800884246826
    5. '])' → logprob: -7.812800884246826
    6. '()])
' → logprob: -10.062800407409668
    7. ')' → logprob: -10.437800407409668
    8. '()],' → logprob: -10.937800407409668
    9. '(),' → logprob: -11.687800407409668
    10. '()][' → logprob: -11.812800407409668

Token 21: 'indices' (ID: 30992)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4815142750740051
    2. '
' → logprob: -1.6065142154693604
    3. '.split' → logprob: -2.7315142154693604
    4. 's' → logprob: -3.3565142154693604
    5. ')
' → logprob: -3.7315142154693604
    6. '[' → logprob: -4.4815144538879395
    7. 'print' → logprob: -4.9815144538879395
    8. '.replace' → logprob: -5.2315144538879395
    9. '[::-' → logprob: -5.3565144538879395
    10. 'split' → logprob: -5.8565144538879395

Token 22: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7341071367263794
    2. ' =' → logprob: -1.1091071367263794
    3. '.' → logprob: -2.23410701751709
    4. '[' → logprob: -3.10910701751709
    5. ')' → logprob: -4.10910701751709
    6. '(' → logprob: -4.85910701751709
    7. '_' → logprob: -5.10910701751709
    8. ',' → logprob: -5.85910701751709
    9. '[:]' → logprob: -6.85910701751709
    10. ']' → logprob: -7.23410701751709

Token 23: ' range' (ID: 3352)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.8848459720611572
    2. 'list' → logprob: -1.1348459720611572
    3. '[' → logprob: -1.8848459720611572
    4. ' list' → logprob: -3.1348459720611572
    5. ' []' → logprob: -3.8848459720611572
    6. '[s' → logprob: -4.384845733642578
    7. '[list' → logprob: -4.384845733642578
    8. ' [' → logprob: -4.884845733642578
    9. 'map' → logprob: -5.259845733642578
    10. '[int' → logprob: -5.884845733642578

Token 24: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.11302738636732101
    2. '(' → logprob: -2.238027334213257
    3. '(s' → logprob: -8.988027572631836
    4. '(int' → logprob: -10.238027572631836
    5. '(-' → logprob: -11.113027572631836
    6. '((' → logprob: -11.988027572631836
    7. '(length' → logprob: -12.363027572631836
    8. 'len' → logprob: -12.488027572631836
    9. '(max' → logprob: -12.738027572631836
    10. '(
' → logprob: -13.113027572631836

Token 25: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0003183041699230671
    2. '(' → logprob: -8.62531852722168
    3. 's' → logprob: -9.00031852722168
    4. '(_' → logprob: -11.87531852722168
    5. '(_)' → logprob: -12.75031852722168
    6. '(_,' → logprob: -13.00031852722168
    7. '_' → logprob: -14.25031852722168
    8. ' (' → logprob: -14.62531852722168
    9. '(indices' → logprob: -14.75031852722168
    10. '(a' → logprob: -15.25031852722168

Token 26: ')-' (ID: 14080)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0003461905289441347
    2. ')' → logprob: -8.125346183776855
    3. ')))' → logprob: -10.750346183776855
    4. ' ))' → logprob: -11.250346183776855
    5. '),' → logprob: -12.000346183776855
    6. '))
' → logprob: -12.125346183776855
    7. '+' → logprob: -14.125346183776855
    8. '[' → logprob: -14.625346183776855
    9. ' ' → logprob: -14.875346183776855
    10. '))

' → logprob: -15.000346183776855

Token 27: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021295640617609024
    2. '2' → logprob: -6.877129554748535
    3. ' ' → logprob: -6.877129554748535
    4. '3' → logprob: -10.252129554748535
    5. '4' → logprob: -11.627129554748535
    6. '5' → logprob: -12.252129554748535
    7. '-' → logprob: -12.377129554748535
    8. '6' → logprob: -13.689629554748535
    9. '_' → logprob: -13.752129554748535
    10. '0' → logprob: -13.877129554748535

Token 28: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0010176869109272957
    2. ' )' → logprob: -7.1260175704956055
    3. ',' → logprob: -9.376017570495605
    4. '+' → logprob: -9.501017570495605
    5. '))' → logprob: -11.001017570495605
    6. ')
' → logprob: -11.376017570495605
    7. ',)' → logprob: -12.126017570495605
    8. '+)' → logprob: -12.876017570495605
    9. '),' → logprob: -13.376017570495605
    10. ']' → logprob: -13.751017570495605

Token 29: 'cnt' (ID: 33160)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2870008647441864
    2. ' ' → logprob: -3.162000894546509
    3. 'for' → logprob: -3.162000894546509
    4. '
' → logprob: -3.412000894546509
    5. 'if' → logprob: -4.03700065612793
    6. ' for' → logprob: -4.16200065612793
    7. '[' → logprob: -4.16200065612793
    8. ':' → logprob: -4.66200065612793
    9. ' if' → logprob: -4.66200065612793
    10. ',' → logprob: -4.66200065612793

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16062834858894348
    2. '=' → logprob: -1.910628318786621
    3. ' ' → logprob: -8.535628318786621
    4. ',' → logprob: -9.535628318786621
    5. '_' → logprob: -9.535628318786621
    6. 's' → logprob: -10.160628318786621
    7. ' +=' → logprob: -12.035628318786621
    8. '  ' → logprob: -12.410628318786621
    9. '.' → logprob: -12.910628318786621
    10. '[' → logprob: -13.410628318786621

Token 31: ' reduce' (ID: 10389)
  Prédit: ' sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.7013700008392334
    2. ' reduce' → logprob: -1.8263700008392334
    3. 'reduce' → logprob: -1.9513700008392334
    4. 'sum' → logprob: -2.0763700008392334
    5. '0' → logprob: -3.2013700008392334
    6. ' ' → logprob: -3.4513700008392334
    7. '[' → logprob: -7.3263702392578125
    8. ' [' → logprob: -7.7013702392578125
    9. ' list' → logprob: -8.326370239257812
    10. 'list' → logprob: -8.701370239257812

Token 32: '(add' (ID: 40159)
  Prédit: '(add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(add' → logprob: -0.6692870259284973
    2. '(lambda' → logprob: -0.9192870259284973
    3. '(' → logprob: -2.4192869663238525
    4. '(operator' → logprob: -9.294286727905273
    5. 'add' → logprob: -10.794286727905273
    6. '(+' → logprob: -12.294286727905273
    7. '(
' → logprob: -12.544286727905273
    8. ' (' → logprob: -12.544286727905273
    9. '((' → logprob: -12.919286727905273
    10. '(int' → logprob: -13.044286727905273

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043138445471413434
    2. ' ,' → logprob: -8.875431060791016
    3. ',(' → logprob: -9.250431060791016
    4. ',[' → logprob: -9.250431060791016
    5. '(' → logprob: -9.875431060791016
    6. '_,' → logprob: -11.000431060791016
    7. ' (' → logprob: -11.875431060791016
    8. ',map' → logprob: -12.000431060791016
    9. ',int' → logprob: -12.375431060791016
    10. ',
' → logprob: -12.625431060791016

Token 34: ' map' (ID: 4014)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19001010060310364
    2. '[i' → logprob: -2.8150100708007812
    3. '(' → logprob: -3.4400100708007812
    4. '[int' → logprob: -3.5650100708007812
    5. '[(' → logprob: -4.565010070800781
    6. '(i' → logprob: -4.940010070800781
    7. ' [' → logprob: -5.315010070800781
    8. '[
' → logprob: -5.440010070800781
    9. '[s' → logprob: -5.440010070800781
    10. '(s' → logprob: -5.565010070800781

Token 35: '(lambda' (ID: 43341)
  Prédit: '(lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.0032151418272405863
    2. '(' → logprob: -6.378215312957764
    3. '(int' → logprob: -6.628215312957764
    4. '(len' → logprob: -9.503214836120605
    5. '((' → logprob: -9.878214836120605
    6. '(str' → logprob: -10.003214836120605
    7. '(bool' → logprob: -12.128214836120605
    8. '(s' → logprob: -12.378214836120605
    9. ' (' → logprob: -12.628214836120605
    10. '(
' → logprob: -13.753214836120605

Token 36: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8223130702972412
    2. ' lambda' → logprob: -1.4473130702972412
    3. ' s' → logprob: -1.8223130702972412
    4. 'lambda' → logprob: -2.822313070297241
    5. '<|end|>' → logprob: -2.947313070297241
    6. '(lambda' → logprob: -3.572313070297241
    7. ' i' → logprob: -4.44731330871582
    8. 'index' → logprob: -6.32231330871582
    9. ' x' → logprob: -6.32231330871582
    10. 'x' → logprob: -6.69731330871582

Token 37: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.013016926124691963
    2. ' :' → logprob: -5.138016700744629
    3. 's' → logprob: -5.638016700744629
    4. ' s' → logprob: -6.388016700744629
    5. ':s' → logprob: -6.513016700744629
    6. ',' → logprob: -8.763016700744629
    7. ':int' → logprob: -10.513016700744629
    8. '[' → logprob: -10.763016700744629
    9. ',s' → logprob: -10.888016700744629
    10. ':i' → logprob: -11.013016700744629

Token 38: ' (' (ID: 350)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7630842924118042
    2. 's' → logprob: -1.3880842924118042
    3. '1' → logprob: -2.6380844116210938
    4. ' int' → logprob: -2.6380844116210938
    5. 'int' → logprob: -2.7630844116210938
    6. '(s' → logprob: -3.2630844116210938
    7. ' ' → logprob: -3.6380844116210938
    8. ' (' → logprob: -5.388084411621094
    9. ' i' → logprob: -6.638084411621094
    10. '(' → logprob: -6.638084411621094

Token 39: 'lambda' (ID: 35280)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4134945571422577
    2. '1' → logprob: -1.41349458694458
    3. ' s' → logprob: -2.91349458694458
    4. 'int' → logprob: -3.91349458694458
    5. ' ' → logprob: -4.66349458694458
    6. '(s' → logprob: -5.28849458694458
    7. ' int' → logprob: -6.16349458694458
    8. '0' → logprob: -6.78849458694458
    9. 'ord' → logprob: -7.91349458694458
    10. '[s' → logprob: -8.163494110107422

Token 40: ' x' (ID: 1215)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6625943779945374
    2. '1' → logprob: -1.4125943183898926
    3. ' s' → logprob: -2.0375943183898926
    4. ' ' → logprob: -3.4125943183898926
    5. 'int' → logprob: -3.4125943183898926
    6. ' int' → logprob: -4.412594318389893
    7. '0' → logprob: -4.912594318389893
    8. '(s' → logprob: -4.912594318389893
    9. '[int' → logprob: -5.912594318389893
    10. '[s' → logprob: -6.037594318389893

Token 41: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06327148526906967
    2. 's' → logprob: -3.4382715225219727
    3. 'x' → logprob: -4.563271522521973
    4. ' s' → logprob: -5.438271522521973
    5. '1' → logprob: -6.188271522521973
    6. ' x' → logprob: -6.313271522521973
    7. 'int' → logprob: -6.438271522521973
    8. ':int' → logprob: -6.438271522521973
    9. ' :' → logprob: -6.813271522521973
    10. '[' → logprob: -7.063271522521973

Token 42: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7957491874694824
    2. ' x' → logprob: -1.5457491874694824
    3. '1' → logprob: -1.9207491874694824
    4. 's' → logprob: -2.6707491874694824
    5. ' s' → logprob: -3.2957491874694824
    6. ' ' → logprob: -3.4207491874694824
    7. 'int' → logprob: -3.9207491874694824
    8. ' int' → logprob: -4.545749187469482
    9. '[x' → logprob: -5.295749187469482
    10. '(x' → logprob: -5.920749187469482

Token 43: '=="' (ID: 24027)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5208871960639954
    2. '.count' → logprob: -1.6458871364593506
    3. ' ==' → logprob: -2.6458871364593506
    4. '[i' → logprob: -2.8958871364593506
    5. '[' → logprob: -3.6458871364593506
    6. '(s' → logprob: -4.14588737487793
    7. '(x' → logprob: -5.52088737487793
    8. '>' → logprob: -5.52088737487793
    9. ' if' → logprob: -5.64588737487793
    10. '+' → logprob: -5.64588737487793

Token 44: 'ABC' (ID: 44197)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6692603826522827
    2. 'A' → logprob: -2.9192605018615723
    3. '7' → logprob: -3.1692605018615723
    4. '"' → logprob: -3.1692605018615723
    5. '1' → logprob: -3.1692605018615723
    6. ')' → logprob: -3.6692605018615723
    7. 'C' → logprob: -4.044260501861572
    8. '0' → logprob: -4.169260501861572
    9. 'b' → logprob: -4.169260501861572
    10. 'p' → logprob: -4.544260501861572

Token 45: '")(' (ID: 83617)
  Prédit: '")('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")(' → logprob: -1.057884931564331
    2. '"),' → logprob: -1.432884931564331
    3. '"' → logprob: -1.557884931564331
    4. '")' → logprob: -1.932884931564331
    5. '")[' → logprob: -3.557884931564331
    6. '",' → logprob: -4.05788516998291
    7. '"[' → logprob: -5.43288516998291
    8. '"))' → logprob: -6.68288516998291
    9. 'C' → logprob: -7.18288516998291
    10. 'ABC' → logprob: -7.18288516998291

Token 46: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07084594666957855
    2. ' s' → logprob: -2.69584584236145
    3. ' ' → logprob: -8.195845603942871
    4. '(s' → logprob: -8.570845603942871
    5. '  ' → logprob: -9.195845603942871
    6. '   ' → logprob: -9.570845603942871
    7. '[s' → logprob: -9.820845603942871
    8. ')' → logprob: -9.945845603942871
    9. ',' → logprob: -10.695845603942871
    10. '	s' → logprob: -11.258345603942871

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.166338137816638e-05
    2. '[' → logprob: -10.625031471252441
    3. 'i' → logprob: -12.250031471252441
    4. ')' → logprob: -14.375031471252441
    5. '[
' → logprob: -14.875031471252441
    6. ' i' → logprob: -14.875031471252441
    7. ',i' → logprob: -15.125031471252441
    8. '```' → logprob: -15.125031471252441
    9. ' [' → logprob: -16.000032424926758
    10. ' ' → logprob: -16.125032424926758

Token 48: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.002422033343464136
    2. ':' → logprob: -6.127421855926514
    3. ' :' → logprob: -8.627422332763672
    4. ' ' → logprob: -11.127422332763672
    5. '+' → logprob: -11.377422332763672
    6. 'i' → logprob: -11.377422332763672
    7. ',i' → logprob: -12.502422332763672
    8. '])' → logprob: -13.002422332763672
    9. '   ' → logprob: -13.252422332763672
    10. ']),' → logprob: -13.377422332763672

Token 49: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5233402252197266
    2. '3' → logprob: -0.8983402252197266
    3. ' +' → logprob: -8.898340225219727
    4. '4' → logprob: -10.273340225219727
    5. ' ' → logprob: -10.773340225219727
    6. '+i' → logprob: -11.273340225219727
    7. '```' → logprob: -13.273340225219727
    8. '   ' → logprob: -13.398340225219727
    9. '  ' → logprob: -13.523340225219727
    10. 'i' → logprob: -13.648340225219727

Token 50: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.25001335144043
    3. '```' → logprob: -15.50001335144043
    4. '  ' → logprob: -15.62501335144043
    5. '   ' → logprob: -16.62501335144043
    6. '...' → logprob: -17.06251335144043
    7. ')' → logprob: -18.12501335144043
    8. ']' → logprob: -18.93751335144043
    9. '' → logprob: -19.12501335144043
    10. '+' → logprob: -19.43751335144043

Token 51: ']),' (ID: 19560)
  Prédit: ']),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']),' → logprob: -0.5241586565971375
    2. '])' → logprob: -0.8991586565971375
    3. '])),' → logprob: -8.024158477783203
    4. ']' → logprob: -8.524158477783203
    5. ']))' → logprob: -8.774158477783203
    6. ')' → logprob: -8.899158477783203
    7. ' ' → logprob: -10.274158477783203
    8. '])
' → logprob: -10.399158477783203
    9. ']),
' → logprob: -10.399158477783203
    10. '),' → logprob: -10.649158477783203

Token 52: ' indices' (ID: 30378)
  Prédit: 'indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'indices' → logprob: -0.11286075413227081
    2. ' indices' → logprob: -2.237860679626465
    3. '(indices' → logprob: -11.362860679626465
    4. ' ' → logprob: -11.987860679626465
    5. '"indices' → logprob: -12.237860679626465
    6. '.indices' → logprob: -12.237860679626465
    7. 'indexes' → logprob: -12.362860679626465
    8. '   ' → logprob: -13.737860679626465
    9. '_indices' → logprob: -13.862860679626465
    10. 'index' → logprob: -13.987860679626465

Token 53: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.1283702701330185
    2. '),' → logprob: -2.1283702850341797
    3. ')' → logprob: -6.87837028503418
    4. '))
' → logprob: -8.75337028503418
    5. ')))' → logprob: -8.87837028503418
    6. '))+' → logprob: -10.00337028503418
    7. ' ))' → logprob: -11.00337028503418
    8. ')),' → logprob: -11.12837028503418
    9. ')+' → logprob: -11.37837028503418
    10. '+' → logprob: -11.87837028503418

Token 54: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12259811162948608
    2. '+' → logprob: -2.247598171234131
    3. '<|end|>' → logprob: -5.497598171234131
    4. ' ' → logprob: -6.372598171234131
    5. '(' → logprob: -6.747598171234131
    6. '**' → logprob: -7.747598171234131
    7. '+
' → logprob: -7.747598171234131
    8. '#' → logprob: -7.747598171234131
    9. ')
' → logprob: -7.997598171234131
    10. '
' → logprob: -8.122597694396973

Token 55: '(cnt' (ID: 102125)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20167382061481476
    2. '(cnt' → logprob: -1.7016738653182983
    3. '("("' → logprob: -9.82667350769043
    4. '(s' → logprob: -10.32667350769043
    5. '(len' → logprob: -10.32667350769043
    6. ' (' → logprob: -10.45167350769043
    7. '(count' → logprob: -11.07667350769043
    8. 's' → logprob: -11.20167350769043
    9. '((' → logprob: -11.32667350769043
    10. '(`' → logprob: -11.32667350769043

Token 56: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000516217143740505
    2. '))' → logprob: -7.625516414642334
    3. ' )' → logprob: -10.625515937805176
    4. '+' → logprob: -13.375515937805176
    5. ')))' → logprob: -14.250515937805176
    6. ')
' → logprob: -14.875515937805176
    7. ')`' → logprob: -14.875515937805176
    8. '-)' → logprob: -15.375515937805176
    9. '`)' → logprob: -15.750515937805176
    10. '-' → logprob: -15.750515937805176


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 54
Tokens correctement prédits (1ère position, stricte): 20
Tokens correctement prédits (1ère position, avec adaptation): 20
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 37.04%
Précision adaptée (1ère position): 37.04%
Précision (top 10): 68.52%
================================================================================
