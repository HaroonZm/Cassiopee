================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:03:34
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Importation de la fonction 'ceil' depuis le module 'math'.
# 'ceil' (pour "ceiling") permet d'arrondir un nombre à l'entier supérieur le plus proche.
from math import ceil

# Création d'une liste nommée 'a' qui contiendra 5 entiers.
# Pour cela, on utilise une compréhension de liste, un mécanisme qui permet de créer une nouvelle liste à partir d'une expression.
# 'int(input())' : à chaque itération, on appelle 'input()' pour demander à l'utilisateur d'entrer une valeur au clavier (de type chaîne de caractères).
# Ensuite, 'int()' convertit cette chaîne de caractères en entier.
# 'for _ in range(5)' : ceci signifie que cette opération est répétée 5 fois.
# La variable '_' est utilisée quand on n'a pas besoin de la valeur de boucle elle-même.
a = [int(input()) for _ in range(5)]

# Création d'une deuxième liste 'b' à partir de la liste 'a'.
# Chaque élément 'i' de 'a' est utilisé ici.
# 'i / 10' : on divise l'entier 'i' par 10, ce qui donne un nombre flottant.
# 'ceil(i / 10)' : on applique la fonction 'ceil' pour arrondir 'i / 10' à l'entier supérieur le plus proche.
# 'ceil(i / 10) * 10' : on multiplie le résultat par 10 pour obtenir le multiple de 10 immédiatement supérieur (sauf si 'i' est déjà un multiple de 10).
# Ceci sert donc à arrondir chaque valeur de 'a' au multiple de 10 supérieur (ou égal).
# Par exemple, pour i=23, ceil(23/10)=3 donc 3*10=30.
b = [ceil(i / 10) * 10 for i in a]

# Création d'une troisième liste 'c' basée sur les listes précédentes.
# Cette liste va contenir 5 éléments, un pour chaque index 'i' de 0 à 4.
# Pour chaque 'i', on procède comme suit :

# - '[a[i]]' : on commence par créer une liste contenant l'élément de 'a' à l'index 'i'.
# - '[b[j] for j in range(5) if i != j]' : c'est une compréhension de liste qui collecte les éléments 'b[j]' pour chaque index 'j' allant de 0 à 4, à l'exception de 'i' (on exclut 'i' pour éviter la redondance).
# - '[a[i]] + [b[j] for j in range(5) if i != j]' : on combine la liste contenant l'élément 'a[i]' et la liste formée par les autres éléments 'b[j]' où j différent de i, utilisant l'opérateur '+', qui concatène les listes en Python.

# - 'sum([...])' : on fait ensuite la somme de tous les éléments de la liste obtenue à l'étape précédente.
# Cela revient donc, pour chaque index 'i', à ajouter :
#      - l'élément correspondant de 'a' (non arrondi) pour l'index 'i'
#      - les éléments arrondis au multiple de 10 pour tous les autres indexes

# On répète la chose pour les 5 valeurs possibles de 'i', ce qui donne une liste de 5 sommes possibles.
c = [sum([a[i]] + [b[j] for j in range(5) if i != j]) for i in range(5)]

# 'min(c)' : on trouve la valeur minimale parmi les 5 éléments de la liste 'c'.
# Cette valeur est ensuite affichée à l'écran avec 'print'.
print(min(c))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Import' (ID: 19998)
  → Token d'amorce (pas de prédiction)

Token 2: 'ation' (ID: 387)
  → Token d'amorce (pas de prédiction)

Token 3: ' de' (ID: 334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07076609879732132
    2. 'import' → logprob: -3.6957662105560303
    3. '```' → logprob: -3.8207662105560303
    4. '_' → logprob: -4.195765972137451
    5. '`' → logprob: -6.570765972137451
    6. '.' → logprob: -6.695765972137451
    7. ' ' → logprob: -6.695765972137451
    8. '#' → logprob: -7.695765972137451
    9. ',' → logprob: -7.820765972137451
    10. '=' → logprob: -8.19576644897461

Token 4: ' la' (ID: 557)
  Prédit: ' pandas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pandas' → logprob: -0.03687840700149536
    2. ' ' → logprob: -4.66187858581543
    3. ' la' → logprob: -4.78687858581543
    4. ' numpy' → logprob: -4.91187858581543
    5. ' os' → logprob: -5.03687858581543
    6. ' des' → logprob: -7.28687858581543
    7. 'p' → logprob: -7.41187858581543
    8. ' ' → logprob: -7.66187858581543
    9. 'os' → logprob: -8.03687858581543
    10. ' flask' → logprob: -8.16187858581543

Token 5: ' fonction' (ID: 17610)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9524495005607605
    2. 'bibli' → logprob: -1.4524495601654053
    3. ' bibliothèque' → logprob: -1.8274495601654053
    4. ' pandas' → logprob: -2.4524495601654053
    5. ' os' → logprob: -3.2024495601654053
    6. ' bibli' → logprob: -3.3274495601654053
    7. ' libra' → logprob: -4.327449321746826
    8. 'os' → logprob: -5.077449321746826
    9. ' sys' → logprob: -5.452449321746826
    10. ' numpy' → logprob: -5.702449321746826

Token 6: ' '' (ID: 461)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.12070436775684357
    2. 's' → logprob: -3.245704412460327
    3. ' ' → logprob: -4.120704174041748
    4. 'from' → logprob: -4.245704174041748
    5. '```' → logprob: -4.870704174041748
    6. '`' → logprob: -5.120704174041748
    7. 'import' → logprob: -5.620704174041748
    8. '_from' → logprob: -5.745704174041748
    9. ':' → logprob: -6.120704174041748
    10. '_space' → logprob: -6.120704174041748

Token 7: 'ceil' (ID: 43552)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5855341553688049
    2. 'random' → logprob: -1.9605340957641602
    3. 'def' → logprob: -2.58553409576416
    4. 'numpy' → logprob: -3.46053409576416
    5. 'from' → logprob: -3.96053409576416
    6. ' pandas' → logprob: -4.08553409576416
    7. 'math' → logprob: -4.21053409576416
    8. 'rand' → logprob: -4.21053409576416
    9. 'os' → logprob: -4.33553409576416
    10. 'p' → logprob: -4.46053409576416

Token 8: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6537226438522339
    2. '(' → logprob: -1.0287226438522339
    3. '('' → logprob: -2.9037227630615234
    4. ')' → logprob: -3.6537227630615234
    5. 'from' → logprob: -4.028722763061523
    6. 'import' → logprob: -4.778722763061523
    7. ''''' → logprob: -5.528722763061523
    8. ')'' → logprob: -6.028722763061523
    9. ' from' → logprob: -6.403722763061523
    10. ',' → logprob: -6.903722763061523

Token 9: ' depuis' (ID: 16277)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34457987546920776
    2. 'from' → logprob: -1.3445799350738525
    3. '```' → logprob: -3.7195799350738525
    4. 'import' → logprob: -5.969579696655273
    5. ' from' → logprob: -6.469579696655273
    6. '()' → logprob: -7.594579696655273
    7. ',' → logprob: -7.594579696655273
    8. '.' → logprob: -7.719579696655273
    9. '`' → logprob: -8.094579696655273
    10. ' (' → logprob: -8.719579696655273

Token 10: ' le' (ID: 505)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.28441181778907776
    2. ' math' → logprob: -1.4094117879867554
    3. ' ' → logprob: -6.159411907196045
    4. ' la' → logprob: -7.284411907196045
    5. 'la' → logprob: -8.909411430358887
    6. 'mat' → logprob: -9.534411430358887
    7. ' ' → logprob: -9.909411430358887
    8. '```' → logprob: -9.909411430358887
    9. '_math' → logprob: -10.034411430358887
    10. '(math' → logprob: -10.659411430358887

Token 11: ' module' (ID: 8827)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2290792167186737
    2. 'math' → logprob: -1.604079246520996
    3. ' ' → logprob: -6.354079246520996
    4. ' module' → logprob: -6.979079246520996
    5. 'module' → logprob: -7.479079246520996
    6. 'm' → logprob: -8.604079246520996
    7. ' m' → logprob: -9.604079246520996
    8. '```' → logprob: -9.604079246520996
    9. ' ' → logprob: -10.354079246520996
    10. 'cmath' → logprob: -10.979079246520996

Token 12: ' '' (ID: 461)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.05529249832034111
    2. 'math' → logprob: -2.9302926063537598
    3. ' ' → logprob: -9.055292129516602
    4. '```' → logprob: -9.180292129516602
    5. '`' → logprob: -9.805292129516602
    6. ' `' → logprob: -9.930292129516602
    7. ' ' → logprob: -11.055292129516602
    8. ' numpy' → logprob: -11.305292129516602
    9. '(math' → logprob: -11.555292129516602
    10. ' space' → logprob: -11.805292129516602

Token 13: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -5.621933451038785e-05
    2. ' math' → logprob: -9.875056266784668
    3. 'mat' → logprob: -12.625056266784668
    4. 'import' → logprob: -14.375056266784668
    5. '```' → logprob: -14.875056266784668
    6. 'cmath' → logprob: -15.250056266784668
    7. '(math' → logprob: -16.50005531311035
    8. '.math' → logprob: -16.75005531311035
    9. '_math' → logprob: -17.12505531311035
    10. ' ' → logprob: -17.62505531311035

Token 14: ''.
' (ID: 49980)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.29720211029052734
    2. ''' → logprob: -2.0472021102905273
    3. 'import' → logprob: -2.7972021102905273
    4. '```' → logprob: -3.5472021102905273
    5. ')' → logprob: -4.297202110290527
    6. '.import' → logprob: -4.797202110290527
    7. '`' → logprob: -5.797202110290527
    8. ' import' → logprob: -5.797202110290527
    9. ''''' → logprob: -6.047202110290527
    10. ',' → logprob: -6.172202110290527

Token 15: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.09934798628091812
    2. 'import' → logprob: -2.8493480682373047
    3. '```' → logprob: -3.8493480682373047
    4. ' from' → logprob: -4.349348068237305
    5. '\' → logprob: -6.724348068237305
    6. ',' → logprob: -8.099348068237305
    7. '.' → logprob: -8.474348068237305
    8. 'fr' → logprob: -8.599348068237305
    9. '\n' → logprob: -8.974348068237305
    10. 'f' → logprob: -9.474348068237305

Token 16: ' '' (ID: 461)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.03855398669838905
    2. ' from' → logprob: -3.7885539531707764
    3. 'import' → logprob: -4.2885541915893555
    4. 'f' → logprob: -7.9135541915893555
    5. '```' → logprob: -7.9135541915893555
    6. ' import' → logprob: -8.288554191589355
    7. '\' → logprob: -9.288554191589355
    8. ' ' → logprob: -9.413554191589355
    9. ' ```' → logprob: -9.538554191589355
    10. '#' → logprob: -9.538554191589355

Token 17: 'ceil' (ID: 43552)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.04105731472373009
    2. 'import' → logprob: -3.4160573482513428
    3. ' from' → logprob: -5.041057109832764
    4. 'math' → logprob: -7.916057109832764
    5. ' import' → logprob: -8.166057586669922
    6. 'ceil' → logprob: -8.541057586669922
    7. ' math' → logprob: -10.041057586669922
    8. ' ceil' → logprob: -11.416057586669922
    9. '```' → logprob: -12.666057586669922
    10. ' ' → logprob: -13.166057586669922

Token 18: ''' (ID: 6)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.5465717315673828
    2. ''' → logprob: -0.9215717315673828
    3. ')'' → logprob: -4.046571731567383
    4. '(' → logprob: -5.671571731567383
    5. ')' → logprob: -6.421571731567383
    6. ' '' → logprob: -8.296571731567383
    7. '()' → logprob: -8.796571731567383
    8. ''s' → logprob: -10.546571731567383
    9. '(',' → logprob: -10.796571731567383
    10. ''''' → logprob: -11.171571731567383

Token 19: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002061522798612714
    2. ' (' → logprob: -6.377061367034912
    3. '('' → logprob: -9.00206184387207
    4. '()' → logprob: -9.62706184387207
    5. '(
' → logprob: -9.75206184387207
    6. ')' → logprob: -10.50206184387207
    7. 'import' → logprob: -10.62706184387207
    8. ',' → logprob: -11.12706184387207
    9. 'def' → logprob: -11.37706184387207
    10. ' ' → logprob: -12.37706184387207

Token 20: 'pour' (ID: 52723)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011797383427619934
    2. ' )' → logprob: -4.7617974281311035
    3. 'x' → logprob: -6.1367974281311035
    4. 'import' → logprob: -8.886796951293945
    5. ' ' → logprob: -9.386796951293945
    6. 'ceil' → logprob: -9.386796951293945
    7. ' ' → logprob: -9.761796951293945
    8. 'math' → logprob: -9.761796951293945
    9. '')' → logprob: -10.011796951293945
    10. ' x' → logprob: -10.136796951293945

Token 21: ' "' (ID: 392)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.7272008061408997
    2. 'ce' → logprob: -1.6022007465362549
    3. '"' → logprob: -2.102200746536255
    4. 'ceil' → logprob: -2.352200746536255
    5. ' ceiling' → logprob: -3.727200746536255
    6. 'l' → logprob: -4.352200984954834
    7. ' arr' → logprob: -4.352200984954834
    8. ''arr' → logprob: -5.352200984954834
    9. 'le' → logprob: -5.602200984954834
    10. ')' → logprob: -5.602200984954834

Token 22: 'ce' (ID: 400)
  Prédit: 'pl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.33128297328948975
    2. 'ce' → logprob: -1.8312829732894897
    3. 'ceil' → logprob: -2.7062830924987793
    4. 'arr' → logprob: -3.8312830924987793
    5. ' plafond' → logprob: -4.206283092498779
    6. ' ceiling' → logprob: -4.456283092498779
    7. 'up' → logprob: -6.456283092498779
    8. 'plus' → logprob: -7.081283092498779
    9. ' pl' → logprob: -7.456283092498779
    10. 'c' → logprob: -7.956283092498779

Token 23: 'iling' (ID: 10741)
  Prédit: 'iling'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iling' → logprob: -0.10104069113731384
    2. 'il' → logprob: -2.4760406017303467
    3. 'ling' → logprob: -4.726040840148926
    4. 'li' → logprob: -6.976040840148926
    5. 'l' → logprob: -7.101040840148926
    6. 'illing' → logprob: -7.476040840148926
    7. '```' → logprob: -8.476040840148926
    8. 'n' → logprob: -9.726040840148926
    9. 'i' → logprob: -9.976040840148926
    10. 'r' → logprob: -10.101040840148926

Token 24: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.00016420685278717428
    2. '"' → logprob: -9.625164031982422
    3. ' ")' → logprob: -10.000164031982422
    4. ')")' → logprob: -10.625164031982422
    5. ')' → logprob: -11.250164031982422
    6. '()' → logprob: -12.250164031982422
    7. ' ' → logprob: -13.750164031982422
    8. '')' → logprob: -13.875164031982422
    9. '("' → logprob: -13.875164031982422
    10. 'd' → logprob: -14.250164031982422

Token 25: ' permet' (ID: 11798)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9309760928153992
    2. ' ' → logprob: -1.305976152420044
    3. ' )' → logprob: -1.430976152420044
    4. '(' → logprob: -3.430976152420044
    5. 'from' → logprob: -4.055975914001465
    6. ' from' → logprob: -4.305975914001465
    7. ' (' → logprob: -4.680975914001465
    8. ',' → logprob: -5.180975914001465
    9. '()' → logprob: -5.430975914001465
    10. 'def' → logprob: -5.930975914001465

Token 26: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.7149640321731567
    2. ' de' → logprob: -1.0899640321731567
    3. 'd' → logprob: -1.9649640321731567
    4. 'de' → logprob: -3.964963912963867
    5. ' ' → logprob: -4.839963912963867
    6. 't' → logprob: -5.089963912963867
    7. ' ' → logprob: -8.464963912963867
    8. '	d' → logprob: -8.589963912963867
    9. '	' → logprob: -9.464963912963867
    10. '  ' → logprob: -9.589963912963867

Token 27: ''arr' (ID: 49695)
  Prédit: ''obtenir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''obtenir' → logprob: -0.27999040484428406
    2. ''arr' → logprob: -1.9049904346466064
    3. 'é' → logprob: -3.5299904346466064
    4. ''effect' → logprob: -3.6549904346466064
    5. 'e' → logprob: -4.029990196228027
    6. ''é' → logprob: -5.654990196228027
    7. ''aller' → logprob: -5.904990196228027
    8. 'arr' → logprob: -6.029990196228027
    9. '’obtenir' → logprob: -6.029990196228027
    10. ' obtenir' → logprob: -6.404990196228027

Token 28: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.13210248947143555
    2. 'on' → logprob: -2.2571024894714355
    3. 'ondi' → logprob: -4.0071024894714355
    4. 'o' → logprob: -7.1321024894714355
    5. 'onder' → logprob: -11.007102966308594
    6. 'i' → logprob: -11.257102966308594
    7. 'onter' → logprob: -11.507102966308594
    8. '

' → logprob: -11.757102966308594
    9. ' on' → logprob: -11.882102966308594
    10. 'ondissement' → logprob: -12.257102966308594

Token 29: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.47636672854423523
    2. 'i' → logprob: -0.9763667583465576
    3. 'e' → logprob: -7.7263665199279785
    4. 'er' → logprob: -8.101366996765137
    5. '	i' → logprob: -8.101366996765137
    6. '   ' → logprob: -8.976366996765137
    7. '#' → logprob: -9.351366996765137
    8. '-' → logprob: -9.601366996765137
    9. ' i' → logprob: -9.601366996765137
    10. 'ie' → logprob: -9.601366996765137

Token 30: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7084447145462036
    2. ' vers' → logprob: -1.3334447145462036
    3. '(' → logprob: -1.4584447145462036
    4. ')' → logprob: -5.958444595336914
    5. ' au' → logprob: -6.583444595336914
    6. ' à' → logprob: -6.708444595336914
    7. ' (' → logprob: -6.708444595336914
    8. ' un' → logprob: -7.583444595336914
    9. ' up' → logprob: -7.833444595336914
    10. 's' → logprob: -7.958444595336914

Token 31: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.1818164885044098
    2. ' ' → logprob: -2.431816577911377
    3. 'nombre' → logprob: -2.556816577911377
    4. ' nombres' → logprob: -8.431816101074219
    5. '_nombre' → logprob: -8.556816101074219
    6. 'Nombre' → logprob: -9.681816101074219
    7. '  ' → logprob: -9.806816101074219
    8. ' Nombre' → logprob: -10.056816101074219
    9. 'n' → logprob: -10.556816101074219
    10. ')' → logprob: -10.681816101074219

Token 32: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.842976450920105
    2. ' à' → logprob: -0.842976450920105
    3. ' vers' → logprob: -2.0929765701293945
    4. 'à' → logprob: -4.9679765701293945
    5. ' supérieur' → logprob: -5.9679765701293945
    6. ' au' → logprob: -6.0929765701293945
    7. ' )' → logprob: -6.9679765701293945
    8. ')' → logprob: -7.4679765701293945
    9. 's' → logprob: -8.092976570129395
    10. '  ' → logprob: -8.342976570129395

Token 33: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.13335472345352173
    2. 'l' → logprob: -2.258354663848877
    3. ' ' → logprob: -5.133354663848877
    4. '	l' → logprob: -5.633354663848877
    5. 'au' → logprob: -5.633354663848877
    6. 's' → logprob: -6.758354663848877
    7. 'sup' → logprob: -6.883354663848877
    8. '   ' → logprob: -7.133354663848877
    9. '  ' → logprob: -7.258354663848877
    10. 'u' → logprob: -7.508354663848877

Token 34: ''ent' (ID: 53422)
  Prédit: ''ent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ent' → logprob: -0.9713141322135925
    2. 'a' → logprob: -1.0963141918182373
    3. 'u' → logprob: -1.9713141918182373
    4. 'e' → logprob: -2.4713141918182373
    5. ''' → logprob: -3.0963141918182373
    6. ''a' → logprob: -4.346313953399658
    7. ''u' → logprob: -6.596313953399658
    8. ''un' → logprob: -6.846313953399658
    9. ''à' → logprob: -7.471313953399658
    10. ''au' → logprob: -7.596313953399658

Token 35: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.004129453562200069
    2. 'ié' → logprob: -5.879129409790039
    3. 'ier' → logprob: -7.629129409790039
    4. 'î' → logprob: -7.629129409790039
    5. 'ière' → logprob: -8.754129409790039
    6. 'é' → logprob: -9.754129409790039
    7. 'í' → logprob: -10.379129409790039
    8. 'ı' → logprob: -11.129129409790039
    9. 'ï' → logprob: -11.254129409790039
    10. 'e' → logprob: -11.254129409790039

Token 36: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.02345755137503147
    2. ' le' → logprob: -4.0234575271606445
    3. ' sup' → logprob: -6.3984575271606445
    4. ' inférieur' → logprob: -7.1484575271606445
    5. ' ' → logprob: -7.2734575271606445
    6. ' suivant' → logprob: -7.6484575271606445
    7. ' supérieure' → logprob: -7.6484575271606445
    8. ' superior' → logprob: -8.398457527160645
    9. '_' → logprob: -8.523457527160645
    10. ' vers' → logprob: -8.523457527160645

Token 37: ' le' (ID: 505)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.391382098197937
    2. ',' → logprob: -2.2663822174072266
    3. ')' → logprob: -2.7663822174072266
    4. '```' → logprob: -2.7663822174072266
    5. '\' → logprob: -3.3913822174072266
    6. 'import' → logprob: -3.7663822174072266
    7. 'from' → logprob: -4.891382217407227
    8. 'e' → logprob: -5.016382217407227
    9. '
' → logprob: -5.141382217407227
    10. '#' → logprob: -6.016382217407227

Token 38: ' plus' (ID: 2932)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6873388886451721
    2. ''' → logprob: -1.0623388290405273
    3. 'e' → logprob: -3.6873388290405273
    4. 'a' → logprob: -4.062338829040527
    5. 's' → logprob: -4.312338829040527
    6. '.' → logprob: -4.312338829040527
    7. '+' → logprob: -4.437338829040527
    8. 'n' → logprob: -4.562338829040527
    9. ')' → logprob: -4.812338829040527
    10. '')' → logprob: -4.812338829040527

Token 39: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.3693374693393707
    2. ' proche' → logprob: -1.3693374395370483
    3. '```' → logprob: -3.619337558746338
    4. '  ' → logprob: -4.994337558746338
    5. ' ' → logprob: -5.369337558746338
    6. ' prochain' → logprob: -5.744337558746338
    7. ' pro' → logprob: -5.994337558746338
    8. 'près' → logprob: -5.994337558746338
    9. ' proches' → logprob: -6.494337558746338
    10. '_pro' → logprob: -6.869337558746338

Token 40: '.
' (ID: 558)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5407861471176147
    2. '```' → logprob: -1.6657861471176147
    3. '.' → logprob: -3.1657862663269043
    4. ',' → logprob: -3.2907862663269043
    5. 'import' → logprob: -3.2907862663269043
    6. '
' → logprob: -3.7907862663269043
    7. '\' → logprob: -3.9157862663269043
    8. '\n' → logprob: -3.9157862663269043
    9. 'f' → logprob: -4.415786266326904
    10. ' from' → logprob: -4.415786266326904

Token 41: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06956420838832855
    2. 'import' → logprob: -3.6945641040802
    3. '```' → logprob: -3.6945641040802
    4. 'f' → logprob: -5.194564342498779
    5. '\' → logprob: -5.319564342498779
    6. ' from' → logprob: -5.569564342498779
    7. 'fr' → logprob: -6.444564342498779
    8. '\n' → logprob: -7.444564342498779
    9. ',' → logprob: -8.569563865661621
    10. '' → logprob: -8.694563865661621

Token 42: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.1798892319202423
    2. ' ' → logprob: -1.80488920211792
    3. ' ' → logprob: -9.429889678955078
    4. ' space' → logprob: -10.304889678955078
    5. ' ﻿' → logprob: -10.929889678955078
    6. ' maths' → logprob: -12.804889678955078
    7. ' ‌' → logprob: -13.179889678955078
    8. ' import' → logprob: -13.679889678955078
    9. ' ​' → logprob: -13.929889678955078
    10. ' Math' → logprob: -14.054889678955078

Token 43: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.056365180760622025
    2. ' ' → logprob: -2.9313652515411377
    3. 'import' → logprob: -6.931365013122559
    4. '.' → logprob: -7.806365013122559
    5. ' .' → logprob: -10.306365013122559
    6. ' im' → logprob: -10.806365013122559
    7. '	import' → logprob: -11.056365013122559
    8. '.import' → logprob: -11.681365013122559
    9. ' impor' → logprob: -12.181365013122559
    10. ' ' → logprob: -12.556365013122559

Token 44: ' ceil' (ID: 35964)
  Prédit: ' ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.0037363029550760984
    2. 'ceil' → logprob: -5.87873649597168
    3. ' ' → logprob: -7.00373649597168
    4. ' ' → logprob: -11.12873649597168
    5. ' ciel' → logprob: -12.75373649597168
    6. '.ceil' → logprob: -13.25373649597168
    7. 'cel' → logprob: -13.87873649597168
    8. ' ceiling' → logprob: -14.62873649597168
    9. ' space' → logprob: -14.87873649597168
    10. ' c' → logprob: -14.87873649597168

Token 45: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7038930654525757
    2. '(' → logprob: -1.2038930654525757
    3. '

' → logprob: -1.8288930654525757
    4. ' 

' → logprob: -4.328893184661865
    5. '' → logprob: -4.953893184661865
    6. '\' → logprob: -5.203893184661865
    7. ' ' → logprob: -5.328893184661865
    8. '\n' → logprob: -6.078893184661865
    9. 'def' → logprob: -6.203893184661865
    10. '<|end|>' → logprob: -6.203893184661865

Token 46: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6001742482185364
    2. '(' → logprob: -1.7251741886138916
    3. '#' → logprob: -2.6001741886138916
    4. '\' → logprob: -2.7251741886138916
    5. '
' → logprob: -3.1001741886138916
    6. 'd' → logprob: -3.4751741886138916
    7. '\n' → logprob: -4.600174427032471
    8. '' → logprob: -4.850174427032471
    9. '(
' → logprob: -4.850174427032471
    10. 'n' → logprob: -5.100174427032471

Token 47: ' Cré' (ID: 109203)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7220545411109924
    2. ' ' → logprob: -1.4720544815063477
    3. 'def' → logprob: -1.5970544815063477
    4. 'n' → logprob: -3.4720544815063477
    5. ' #' → logprob: -3.8470544815063477
    6. ' def' → logprob: -4.347054481506348
    7. '\' → logprob: -5.597054481506348
    8. ' 

' → logprob: -5.847054481506348
    9. ' 
' → logprob: -5.972054481506348
    10. 'd' → logprob: -6.722054481506348

Token 48: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.017552033066749573
    2. 'er' → logprob: -4.142551898956299
    3. 'a' → logprob: -6.642551898956299
    4. 'at' → logprob: -9.392552375793457
    5. 'ate' → logprob: -9.767552375793457
    6. ' at' → logprob: -10.642552375793457
    7. '#' → logprob: -11.267552375793457
    8. 'ating' → logprob: -11.267552375793457
    9. 'd' → logprob: -12.392552375793457
    10. '```' → logprob: -12.392552375793457

Token 49: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03088480234146118
    2. '(' → logprob: -3.9058847427368164
    3. ' (' → logprob: -4.655884742736816
    4. '  ' → logprob: -8.780884742736816
    5. ' d' → logprob: -8.905884742736816
    6. ' de' → logprob: -8.905884742736816
    7. ' des' → logprob: -9.780884742736816
    8. ' of' → logprob: -9.905884742736816
    9. '(space' → logprob: -9.905884742736816
    10. '(s' → logprob: -10.155884742736816

Token 50: ''une' (ID: 13337)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.002776466542854905
    2. '  ' → logprob: -7.377776622772217
    3. ' d' → logprob: -7.627776622772217
    4. 'e' → logprob: -7.877776622772217
    5. ' un' → logprob: -8.127776145935059
    6. ' a' → logprob: -8.377776145935059
    7. 'a' → logprob: -8.377776145935059
    8. 's' → logprob: -9.002776145935059
    9. ' une' → logprob: -9.127776145935059
    10. ' ' → logprob: -10.127776145935059

Token 51: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.024891281500458717
    2. 'liste' → logprob: -4.524891376495361
    3. ' ' → logprob: -5.149891376495361
    4. ' chaîne' → logprob: -5.899891376495361
    5. ' valeur' → logprob: -6.649891376495361
    6. ' phrase' → logprob: -7.399891376495361
    7. ' list' → logprob: -7.649891376495361
    8. 's' → logprob: -8.524890899658203
    9. 'list' → logprob: -8.524890899658203
    10. 'l' → logprob: -8.899890899658203

Token 52: ' nom' (ID: 8080)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.35054007172584534
    2. ' ' → logprob: -2.6005401611328125
    3. '_' → logprob: -2.8505401611328125
    4. '[' → logprob: -2.8505401611328125
    5. 's' → logprob: -2.8505401611328125
    6. ' (' → logprob: -3.8505401611328125
    7. 'a' → logprob: -4.7255401611328125
    8. 'des' → logprob: -5.6005401611328125
    9. 'd' → logprob: -6.3505401611328125
    10. ' des' → logprob: -6.4755401611328125

Token 53: 'm' (ID: 76)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3513578772544861
    2. 'é' → logprob: -1.6013579368591309
    3. 'm' → logprob: -2.976357936859131
    4. 'e' → logprob: -3.351357936859131
    5. '=' → logprob: -6.101357936859131
    6. 'mé' → logprob: -6.726357936859131
    7. ' =' → logprob: -7.476357936859131
    8. '_' → logprob: -7.476357936859131
    9. 'me' → logprob: -7.476357936859131
    10. 'bre' → logprob: -7.851357936859131

Token 54: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.3870640993118286
    2. 'é' → logprob: -1.1370640993118286
    3. 'e' → logprob: -8.887063980102539
    4. 'm' → logprob: -10.137063980102539
    5. 'lée' → logprob: -12.137063980102539
    6. 'uée' → logprob: -13.137063980102539
    7. 'ė' → logprob: -13.637063980102539
    8. 'née' → logprob: -14.137063980102539
    9. 'ées' → logprob: -14.387063980102539
    10. 'rée' → logprob: -14.512063980102539

Token 55: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04956856742501259
    2. '(' → logprob: -4.9245686531066895
    3. ' des' → logprob: -4.9245686531066895
    4. 's' → logprob: -5.0495686531066895
    5. '[' → logprob: -5.0495686531066895
    6. '_' → logprob: -5.2995686531066895
    7. ' [' → logprob: -6.4245686531066895
    8. ' (' → logprob: -6.6745686531066895
    9. ' "' → logprob: -6.9245686531066895
    10. 'a' → logprob: -7.0495686531066895

Token 56: 'a' (ID: 64)
  Prédit: 'notes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'notes' → logprob: -1.0455572605133057
    2. 'n' → logprob: -1.4205572605133057
    3. 'numbers' → logprob: -2.1705572605133057
    4. 'data' → logprob: -3.2955572605133057
    5. ' nombres' → logprob: -3.5455572605133057
    6. 'nombre' → logprob: -3.6705572605133057
    7. 'items' → logprob: -3.7955572605133057
    8. ' notes' → logprob: -3.7955572605133057
    9. 'scores' → logprob: -4.045557022094727
    10. 'liste' → logprob: -4.295557022094727

Token 57: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1322404146194458
    2. 'a' → logprob: -2.0072402954101562
    3. '_a' → logprob: -2.3822402954101562
    4. '_' → logprob: -2.5072402954101562
    5. ' '' → logprob: -2.7572402954101562
    6. '_'' → logprob: -3.0072402954101562
    7. '_elements' → logprob: -3.1322402954101562
    8. 'rray' → logprob: -3.6322402954101562
    9. 'pp' → logprob: -3.7572402954101562
    10. '_p' → logprob: -4.382240295410156

Token 58: ' qui' (ID: 2780)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.521711528301239
    2. 'a' → logprob: -1.0217115879058838
    3. '[' → logprob: -3.896711587905884
    4. '=' → logprob: -5.021711349487305
    5. ' ' → logprob: -5.021711349487305
    6. ' a' → logprob: -6.396711349487305
    7. '_a' → logprob: -6.396711349487305
    8. ',' → logprob: -6.521711349487305
    9. ' =[' → logprob: -6.646711349487305
    10. '=[' → logprob: -6.771711349487305

Token 59: ' cont' (ID: 836)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.036413319408893585
    2. ' ' → logprob: -3.9114134311676025
    3. '=' → logprob: -4.286413192749023
    4. 's' → logprob: -7.786413192749023
    5. ' contient' → logprob: -8.411413192749023
    6. ' =[' → logprob: -8.661413192749023
    7. 'a' → logprob: -8.911413192749023
    8. '[' → logprob: -9.286413192749023
    9. ' s' → logprob: -9.286413192749023
    10. 'n' → logprob: -9.536413192749023

Token 60: 'i' (ID: 72)
  Prédit: 'ient'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ient' → logprob: -0.006341822445392609
    2. 'i' → logprob: -5.756341934204102
    3. 'iend' → logprob: -6.756341934204102
    4. 'ien' → logprob: -7.256341934204102
    5. 'ie' → logprob: -8.006341934204102
    6. 'iennent' → logprob: -8.256341934204102
    7. 'ent' → logprob: -8.506341934204102
    8. 'iens' → logprob: -8.506341934204102
    9. 'e' → logprob: -9.631341934204102
    10. 'inue' → logprob: -10.006341934204102

Token 61: 'endra' (ID: 32364)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.7315375208854675
    2. 'ent' → logprob: -0.7315375208854675
    3. 'e' → logprob: -4.231537342071533
    4. 'nent' → logprob: -4.356537342071533
    5. 'endra' → logprob: -6.481537342071533
    6. 'nt' → logprob: -6.481537342071533
    7. 'en' → logprob: -6.606537342071533
    8. 't' → logprob: -6.606537342071533
    9. 'enue' → logprob: -7.106537342071533
    10. 'ents' → logprob: -7.731537342071533

Token 62: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0909087061882019
    2. '[' → logprob: -3.3409087657928467
    3. '[]' → logprob: -3.9659087657928467
    4. ' []' → logprob: -4.215908527374268
    5. ' [' → logprob: -4.840908527374268
    6. '  ' → logprob: -6.465908527374268
    7. ' =' → logprob: -6.590908527374268
    8. 'a' → logprob: -6.715908527374268
    9. 'le' → logprob: -7.465908527374268
    10. ',' → logprob: -7.590908527374268

Token 63: '5' (ID: 20)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.9691327214241028
    2. ' des' → logprob: -1.719132661819458
    3. '[' → logprob: -1.969132661819458
    4. ' []' → logprob: -2.094132661819458
    5. '[]' → logprob: -2.219132661819458
    6. 'des' → logprob: -3.094132661819458
    7. ' les' → logprob: -5.594132900238037
    8. '['' → logprob: -5.719132900238037
    9. '[int' → logprob: -5.719132900238037
    10. 'les' → logprob: -5.844132900238037

Token 64: ' ent' (ID: 1121)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1907333135604858
    2. ' éléments' → logprob: -1.3157333135604858
    3. ' espaces' → logprob: -1.5657333135604858
    4. 'élé' → logprob: -1.8157333135604858
    5. '_' → logprob: -3.8157334327697754
    6. ' nombres' → logprob: -4.940733432769775
    7. ' valeurs' → logprob: -5.440733432769775
    8. ' ,' → logprob: -5.940733432769775
    9. ' elements' → logprob: -6.065733432769775
    10. ' espace' → logprob: -6.190733432769775

Token 65: 'iers' (ID: 11012)
  Prédit: 'iers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iers' → logprob: -0.062391795217990875
    2. 'i' → logprob: -2.812391757965088
    3. 'ières' → logprob: -8.187392234802246
    4. '   ' → logprob: -10.187392234802246
    5. 'ier' → logprob: -10.187392234802246
    6. '```' → logprob: -10.687392234802246
    7. '#' → logprob: -11.312392234802246
    8. 'ié' → logprob: -11.687392234802246
    9. ' i' → logprob: -12.437392234802246
    10. '[i' → logprob: -13.187392234802246

Token 66: '.
' (ID: 558)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.016903281211853
    2. '[' → logprob: -1.141903281211853
    3. ' ' → logprob: -1.766903281211853
    4. ',' → logprob: -3.5169034004211426
    5. '[]' → logprob: -3.5169034004211426
    6. '(' → logprob: -4.141903400421143
    7. '[int' → logprob: -4.516903400421143
    8. '[a' → logprob: -4.641903400421143
    9. '.' → logprob: -4.766903400421143
    10. ':' → logprob: -5.141903400421143

Token 67: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0005580356228165329
    2. ' a' → logprob: -7.500557899475098
    3. '_a' → logprob: -13.000557899475098
    4. ' =' → logprob: -13.625557899475098
    5. ' ' → logprob: -14.625557899475098
    6. ',' → logprob: -15.625557899475098
    7. '_' → logprob: -16.125558853149414
    8. '=' → logprob: -16.125558853149414
    9. '[' → logprob: -16.375558853149414
    10. ']' → logprob: -16.625558853149414

Token 68: ' Pour' (ID: 13931)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07899961620569229
    2. ' a' → logprob: -2.5789995193481445
    3. ' ' → logprob: -9.328999519348145
    4. ' ' → logprob: -11.453999519348145
    5. '_a' → logprob: -13.328999519348145
    6. ' 
' → logprob: -13.953999519348145
    7. '  ' → logprob: -13.953999519348145
    8. 'space' → logprob: -14.078999519348145
    9. '	a' → logprob: -14.391499519348145
    10. '  
' → logprob: -14.453999519348145

Token 69: ' cela' (ID: 17542)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22576051950454712
    2. ' ' → logprob: -1.6007604598999023
    3. ' _' → logprob: -8.600760459899902
    4. 'i' → logprob: -9.225760459899902
    5. ' l' → logprob: -10.850760459899902
    6. '  ' → logprob: -11.475760459899902
    7. ' n' → logprob: -11.725760459899902
    8. '	i' → logprob: -12.600760459899902
    9. ' x' → logprob: -12.725760459899902
    10. ' ' → logprob: -12.975760459899902

Token 70: ',' (ID: 11)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1018567085266113
    2. ',' → logprob: -1.4768567085266113
    3. ' ,' → logprob: -1.4768567085266113
    4. ' in' → logprob: -1.8518567085266113
    5. ' a' → logprob: -3.4768567085266113
    6. ' i' → logprob: -4.226856708526611
    7. ' en' → logprob: -6.101856708526611
    8. 'a' → logprob: -6.351856708526611
    9. ' dans' → logprob: -6.976856708526611
    10. ' on' → logprob: -7.101856708526611

Token 71: ' on' (ID: 402)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.2880050837993622
    2. ' ' → logprob: -1.9130051136016846
    3. 'a' → logprob: -2.5380051136016846
    4. ' [' → logprob: -4.4130048751831055
    5. ' range' → logprob: -5.2880048751831055
    6. '[' → logprob: -6.0380048751831055
    7. 'range' → logprob: -6.0380048751831055
    8. ' [
' → logprob: -7.2880048751831055
    9. '[a' → logprob: -8.538004875183105
    10. ' for' → logprob: -9.038004875183105

Token 72: ' utilise' (ID: 70283)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04685290902853012
    2. ' range' → logprob: -3.4218528270721436
    3. ' a' → logprob: -4.796853065490723
    4. ' for' → logprob: -6.921853065490723
    5. 'range' → logprob: -6.921853065490723
    6. '[' → logprob: -7.171853065490723
    7. ' i' → logprob: -7.671853065490723
    8. '_' → logprob: -8.171853065490723
    9. ' [' → logprob: -8.421853065490723
    10. 'a' → logprob: -8.921853065490723

Token 73: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.3430226147174835
    2. ' range' → logprob: -2.468022584915161
    3. ' ' → logprob: -2.593022584915161
    4. ' list' → logprob: -3.468022584915161
    5. '[' → logprob: -3.593022584915161
    6. ' a' → logprob: -3.843022584915161
    7. 'range' → logprob: -4.09302282333374
    8. ' une' → logprob: -4.71802282333374
    9. 'a' → logprob: -4.96802282333374
    10. ' la' → logprob: -5.09302282333374

Token 74: ' compréhension' (ID: 142333)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.7768802642822266
    2. ' list' → logprob: -1.6518802642822266
    3. ' ' → logprob: -2.0268802642822266
    4. ' liste' → logprob: -2.2768802642822266
    5. ' comprehension' → logprob: -3.6518802642822266
    6. ' [' → logprob: -3.7768802642822266
    7. ' compréhension' → logprob: -3.9018802642822266
    8. 'range' → logprob: -3.9018802642822266
    9. ' for' → logprob: -5.401880264282227
    10. '[' → logprob: -5.401880264282227

Token 75: ' de' (ID: 334)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.43826234340667725
    2. ' de' → logprob: -1.4382623434066772
    3. ' [' → logprob: -2.938262462615967
    4. ' ' → logprob: -4.188262462615967
    5. ' a' → logprob: -4.813262462615967
    6. '[
' → logprob: -4.938262462615967
    7. ' d' → logprob: -5.188262462615967
    8. 'n' → logprob: -5.563262462615967
    9. '[n' → logprob: -5.563262462615967
    10. 'a' → logprob: -5.813262462615967

Token 76: ' liste' (ID: 31719)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3913938105106354
    2. ' liste' → logprob: -1.391393780708313
    3. ' la' → logprob: -3.6413938999176025
    4. 's' → logprob: -4.141393661499023
    5. 'a' → logprob: -4.391393661499023
    6. ' list' → logprob: -5.391393661499023
    7. '[' → logprob: -5.391393661499023
    8. ' l' → logprob: -5.391393661499023
    9. ' [' → logprob: -6.516393661499023
    10. ' a' → logprob: -6.516393661499023

Token 77: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.19360540807247162
    2. ' [' → logprob: -2.318605422973633
    3. 'a' → logprob: -3.193605422973633
    4. '[a' → logprob: -3.568605422973633
    5. '[
' → logprob: -5.818605422973633
    6. ' a' → logprob: -5.818605422973633
    7. ' [
' → logprob: -6.943605422973633
    8. '[int' → logprob: -7.568605422973633
    9. '[:]' → logprob: -8.943605422973633
    10. ':' → logprob: -9.193605422973633

Token 78: ' un' (ID: 537)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.20303040742874146
    2. '[' → logprob: -2.2030303478240967
    3. ' ' → logprob: -3.4530303478240967
    4. ' [
' → logprob: -4.328030586242676
    5. '[a' → logprob: -5.078030586242676
    6. 'a' → logprob: -5.203030586242676
    7. '[
' → logprob: -5.328030586242676
    8. ' a' → logprob: -5.828030586242676
    9. '[i' → logprob: -6.328030586242676
    10. 'range' → logprob: -6.703030586242676

Token 79: ' mécan' (ID: 83513)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.015020881779491901
    2. 'a' → logprob: -4.890020847320557
    3. ' e' → logprob: -5.515020847320557
    4. ' range' → logprob: -6.890020847320557
    5. ' a' → logprob: -7.390020847320557
    6. ' espace' → logprob: -7.890020847320557
    7. 'es' → logprob: -8.265021324157715
    8. '[' → logprob: -8.765021324157715
    9. '[]' → logprob: -9.577521324157715
    10. 'range' → logprob: -9.702521324157715

Token 80: 'isme' (ID: 15305)
  Prédit: 'isme'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'isme' → logprob: -0.021279238164424896
    2. 'is' → logprob: -4.396279335021973
    3. 'i' → logprob: -5.271279335021973
    4. ' is' → logprob: -6.646279335021973
    5. 'ique' → logprob: -7.396279335021973
    6. '```' → logprob: -7.521279335021973
    7. 'ism' → logprob: -8.396279335021973
    8. 'ise' → logprob: -8.646279335021973
    9. 'ïs' → logprob: -8.771279335021973
    10. 'ismes' → logprob: -9.146279335021973

Token 81: ' qui' (ID: 2780)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0103826522827148
    2. ' ' → logprob: -2.135382652282715
    3. ' [' → logprob: -2.135382652282715
    4. ' permettant' → logprob: -2.260382652282715
    5. ' qui' → logprob: -2.510382652282715
    6. ' d' → logprob: -2.635382652282715
    7. ' de' → logprob: -2.885382652282715
    8. ' range' → logprob: -3.885382652282715
    9. 'range' → logprob: -4.510382652282715
    10. ' [
' → logprob: -4.635382652282715

Token 82: ' permet' (ID: 11798)
  Prédit: ' gén'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gén' → logprob: -0.2584727704524994
    2. ' crée' → logprob: -2.3834726810455322
    3. ' permet' → logprob: -3.1334726810455322
    4. ' génér' → logprob: -3.7584726810455322
    5. ' ' → logprob: -4.133472919464111
    6. 'g' → logprob: -4.133472919464111
    7. ' genere' → logprob: -5.633472919464111
    8. ' g' → logprob: -5.633472919464111
    9. ' range' → logprob: -5.883472919464111
    10. ' it' → logprob: -6.133472919464111

Token 83: ' de' (ID: 334)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.09057828038930893
    2. ' de' → logprob: -3.090578317642212
    3. ' ' → logprob: -3.715578317642212
    4. 'd' → logprob: -4.465578079223633
    5. 'de' → logprob: -6.840578079223633
    6. '  ' → logprob: -7.215578079223633
    7. ' à' → logprob: -7.215578079223633
    8. '    ' → logprob: -7.215578079223633
    9. '   ' → logprob: -7.465578079223633
    10. ' a' → logprob: -7.715578079223633

Token 84: ' créer' (ID: 40938)
  Prédit: ' créer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' créer' → logprob: -0.148434579372406
    2. ' génér' → logprob: -2.273434638977051
    3. '[' → logprob: -4.773434638977051
    4. ' [' → logprob: -5.273434638977051
    5. 'g' → logprob: -5.398434638977051
    6. ' crée' → logprob: -5.523434638977051
    7. 'cr' → logprob: -6.148434638977051
    8. ' construire' → logprob: -6.398434638977051
    9. 'a' → logprob: -6.648434638977051
    10. 'gener' → logprob: -6.898434638977051

Token 85: ' une' (ID: 2463)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.33189713954925537
    2. ' une' → logprob: -1.7068971395492554
    3. '[' → logprob: -2.956897258758545
    4. ' [' → logprob: -4.081897258758545
    5. ' a' → logprob: -5.081897258758545
    6. 'a' → logprob: -5.331897258758545
    7. ' un' → logprob: -5.331897258758545
    8. 's' → logprob: -5.706897258758545
    9. '[]' → logprob: -5.956897258758545
    10. ' des' → logprob: -6.206897258758545

Token 86: ' nouvelle' (ID: 24562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48604199290275574
    2. ' liste' → logprob: -1.7360420227050781
    3. '[' → logprob: -2.986042022705078
    4. 'liste' → logprob: -2.986042022705078
    5. 'range' → logprob: -3.736042022705078
    6. 'a' → logprob: -4.111042022705078
    7. ' range' → logprob: -4.236042022705078
    8. ' [' → logprob: -4.361042022705078
    9. 's' → logprob: -4.611042022705078
    10. 'l' → logprob: -5.611042022705078

Token 87: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.49983060359954834
    2. ' ' → logprob: -1.1248306035995483
    3. 's' → logprob: -3.749830722808838
    4. '[' → logprob: -4.249830722808838
    5. 'liste' → logprob: -4.249830722808838
    6. ' [' → logprob: -5.124830722808838
    7. 'a' → logprob: -6.124830722808838
    8. 'l' → logprob: -6.999830722808838
    9. ' espace' → logprob: -7.374830722808838
    10. 'm' → logprob: -7.874830722808838

Token 88: ' à' (ID: 1221)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12673667073249817
    2. ' [' → logprob: -3.501736640930176
    3. ' à' → logprob: -3.751736640930176
    4. ' ' → logprob: -3.876736640930176
    5. '[a' → logprob: -4.626736640930176
    6. '[
' → logprob: -5.001736640930176
    7. ' en' → logprob: -5.126736640930176
    8. '```' → logprob: -5.501736640930176
    9. ' a' → logprob: -5.626736640930176
    10. 'a' → logprob: -5.626736640930176

Token 89: ' partir' (ID: 12100)
  Prédit: ' partir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' partir' → logprob: -9.579495235811919e-05
    2. 'part' → logprob: -9.62509536743164
    3. ' partire' → logprob: -11.25009536743164
    4. 'a' → logprob: -12.37509536743164
    5. ' part' → logprob: -12.75009536743164
    6. 'p' → logprob: -13.25009536743164
    7. 'l' → logprob: -13.37509536743164
    8. ' chaque' → logprob: -13.50009536743164
    9. ' base' → logprob: -13.50009536743164
    10. ' l' → logprob: -13.87509536743164

Token 90: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.06237644702196121
    2. ' de' → logprob: -3.0623764991760254
    3. 'd' → logprob: -4.937376499176025
    4. ' ' → logprob: -6.312376499176025
    5. ' range' → logprob: -7.062376499176025
    6. '[' → logprob: -7.562376499176025
    7. 'range' → logprob: -7.562376499176025
    8. ' of' → logprob: -7.812376499176025
    9. 's' → logprob: -8.187376022338867
    10. '  ' → logprob: -8.187376022338867

Token 91: ''une' (ID: 13337)
  Prédit: ''un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''un' → logprob: -0.7818421721458435
    2. ''une' → logprob: -0.9068421721458435
    3. ''' → logprob: -2.2818422317504883
    4. 'e' → logprob: -3.6568422317504883
    5. 'a' → logprob: -5.781842231750488
    6. 'u' → logprob: -5.906842231750488
    7. ''u' → logprob: -6.031842231750488
    8. 'une' → logprob: -7.906842231750488
    9. '’une' → logprob: -8.281842231750488
    10. ''i' → logprob: -8.406842231750488

Token 92: ' expression' (ID: 12973)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.8449946045875549
    2. ' expression' → logprob: -1.4699945449829102
    3. 'range' → logprob: -1.9699945449829102
    4. ' liste' → logprob: -2.84499454498291
    5. ' plage' → logprob: -3.46999454498291
    6. ' sequence' → logprob: -3.84499454498291
    7. 'expression' → logprob: -3.84499454498291
    8. ' gamme' → logprob: -4.46999454498291
    9. ' ' → logprob: -4.71999454498291
    10. ' iterable' → logprob: -4.96999454498291

Token 93: '.
' (ID: 558)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12562210857868195
    2. ' ' → logprob: -2.750622034072876
    3. ' [' → logprob: -3.125622034072876
    4. '[
' → logprob: -6.750622272491455
    5. '[]' → logprob: -6.875622272491455
    6. '[a' → logprob: -7.000622272491455
    7. '[n' → logprob: -7.000622272491455
    8. 'a' → logprob: -7.250622272491455
    9. ' a' → logprob: -7.250622272491455
    10. ',' → logprob: -7.250622272491455

Token 94: '#' (ID: 2)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08146701753139496
    2. ' [' → logprob: -3.4564669132232666
    3. '[a' → logprob: -3.4564669132232666
    4. 'a' → logprob: -4.831467151641846
    5. '[
' → logprob: -5.206467151641846
    6. ' [
' → logprob: -7.456467151641846
    7. '[int' → logprob: -7.456467151641846
    8. '[i' → logprob: -8.706466674804688
    9. ' a' → logprob: -9.081466674804688
    10. '[n' → logprob: -9.581466674804688

Token 95: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19621090590953827
    2. '[' → logprob: -2.5712108612060547
    3. ' [' → logprob: -2.9462108612060547
    4. '[a' → logprob: -3.4462108612060547
    5. ' a' → logprob: -4.696210861206055
    6. '[
' → logprob: -5.071210861206055
    7. ' [
' → logprob: -7.196210861206055
    8. 'range' → logprob: -8.071210861206055
    9. '[i' → logprob: -8.071210861206055
    10. '[int' → logprob: -8.196210861206055

Token 96: 'int' (ID: 491)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.549759030342102
    2. ' i' → logprob: -1.299759030342102
    3. 'range' → logprob: -2.9247589111328125
    4. ' range' → logprob: -3.7997589111328125
    5. 'a' → logprob: -4.0497589111328125
    6. 'ceil' → logprob: -4.0497589111328125
    7. ' ceil' → logprob: -4.4247589111328125
    8. 'len' → logprob: -5.4247589111328125
    9. '[i' → logprob: -5.6747589111328125
    10. 'x' → logprob: -5.7997589111328125

Token 97: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6788741946220398
    2. '(input' → logprob: -0.8038741946220398
    3. '(i' → logprob: -3.4288742542266846
    4. '(x' → logprob: -4.9288740158081055
    5. '('' → logprob: -5.9288740158081055
    6. '((' → logprob: -6.9288740158081055
    7. ''' → logprob: -7.8038740158081055
    8. '(s' → logprob: -8.553874015808105
    9. '(str' → logprob: -8.678874015808105
    10. '(float' → logprob: -8.803874015808105

Token 98: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.8099021911621094
    2. '("' → logprob: -1.1849021911621094
    3. '('' → logprob: -1.9349021911621094
    4. '()' → logprob: -2.6849021911621094
    5. '(' → logprob: -3.6849021911621094
    6. '()))' → logprob: -4.934902191162109
    7. '(f' → logprob: -6.309902191162109
    8. '()"' → logprob: -7.059902191162109
    9. '("("' → logprob: -7.934902191162109
    10. '(""))' → logprob: -8.43490219116211

Token 99: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06488669663667679
    2. '()' → logprob: -3.1898868083953857
    3. '())' → logprob: -5.314886569976807
    4. ' for' → logprob: -5.439886569976807
    5. '))' → logprob: -5.564886569976807
    6. ' )' → logprob: -5.939886569976807
    7. 'for' → logprob: -6.064886569976807
    8. ')'' → logprob: -6.314886569976807
    9. ' ' → logprob: -7.689886569976807
    10. ')`' → logprob: -7.814886569976807

Token 100: ' :' (ID: 712)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.24124427139759064
    2. ' for' → logprob: -1.9912443161010742
    3. ' ' → logprob: -3.241244316101074
    4. 'for' → logprob: -4.366244316101074
    5. '(' → logprob: -4.491244316101074
    6. ' ()' → logprob: -5.241244316101074
    7. ')' → logprob: -5.241244316101074
    8. ' )' → logprob: -6.116244316101074
    9. ',' → logprob: -7.241244316101074
    10. ' pour' → logprob: -8.241244316101074

Token 101: ' à' (ID: 1221)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6890404224395752
    2. ' int' → logprob: -0.8140404224395752
    3. 'int' → logprob: -3.689040422439575
    4. ' )' → logprob: -4.939040184020996
    5. ' input' → logprob: -5.564040184020996
    6. ' a' → logprob: -5.689040184020996
    7. ' []' → logprob: -5.814040184020996
    8. ')' → logprob: -6.189040184020996
    9. '  ' → logprob: -6.439040184020996
    10. '[int' → logprob: -6.689040184020996

Token 102: ' chaque' (ID: 21194)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5340635180473328
    2. ' chaque' → logprob: -1.0340635776519775
    3. ' l' → logprob: -4.409063339233398
    4. '  ' → logprob: -4.534063339233398
    5. ' la' → logprob: -5.034063339233398
    6. 'u' → logprob: -5.159063339233398
    7. ' f' → logprob: -5.909063339233398
    8. ' partir' → logprob: -5.909063339233398
    9. 'n' → logprob: -6.409063339233398
    10. ' a' → logprob: -6.659063339233398

Token 103: ' it' (ID: 480)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03946545720100403
    2. ' it' → logprob: -4.289465427398682
    3. ' iteration' → logprob: -4.914465427398682
    4. '  ' → logprob: -5.289465427398682
    5. ' valeur' → logprob: -5.539465427398682
    6. ' élément' → logprob: -5.914465427398682
    7. ' i' → logprob: -6.539465427398682
    8. 'élé' → logprob: -7.664465427398682
    9. ' ligne' → logprob: -7.789465427398682
    10. ' iter' → logprob: -8.03946590423584

Token 104: 'ération' (ID: 24977)
  Prédit: 'ération'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -0.0625711977481842
    2. 'é' → logprob: -3.5625712871551514
    3. 'er' → logprob: -3.9375712871551514
    4. 'ér' → logprob: -4.562571048736572
    5. 'érer' → logprob: -7.062571048736572
    6. 'éré' → logprob: -7.562571048736572
    7. 'éra' → logprob: -8.18757152557373
    8. 'érations' → logprob: -8.56257152557373
    9. 'érateur' → logprob: -9.31257152557373
    10. 'érant' → logprob: -9.68757152557373

Token 105: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6097255349159241
    2. ' ' → logprob: -1.3597254753112793
    3. ' )' → logprob: -1.9847254753112793
    4. ',' → logprob: -3.8597254753112793
    5. '()' → logprob: -3.9847254753112793
    6. '(' → logprob: -4.859725475311279
    7. ' ,' → logprob: -5.234725475311279
    8. ' (' → logprob: -5.734725475311279
    9. ' for' → logprob: -6.859725475311279
    10. '  ' → logprob: -7.109725475311279

Token 106: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.24032911658287048
    2. ' int' → logprob: -2.3653290271759033
    3. ' on' → logprob: -2.4903290271759033
    4. 'int' → logprob: -4.740329265594482
    5. ' l' → logprob: -5.115329265594482
    6. ' input' → logprob: -5.365329265594482
    7. ' )' → logprob: -5.865329265594482
    8. ' a' → logprob: -5.990329265594482
    9. 'a' → logprob: -5.990329265594482
    10. '  ' → logprob: -6.490329265594482

Token 107: ' appelle' (ID: 111796)
  Prédit: ' appelle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' appelle' → logprob: -1.255197525024414
    2. ' demande' → logprob: -1.380197525024414
    3. ' récup' → logprob: -1.630197525024414
    4. ' ' → logprob: -2.005197525024414
    5. ' sais' → logprob: -3.755197525024414
    6. ' prend' → logprob: -4.505197525024414
    7. ' lit' → logprob: -4.505197525024414
    8. ' entre' → logprob: -4.630197525024414
    9. ' int' → logprob: -4.755197525024414
    10. ' collecte' → logprob: -5.005197525024414

Token 108: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.000869631767273
    2. ' ' → logprob: -1.125869631767273
    3. '()' → logprob: -2.0008697509765625
    4. ' ()' → logprob: -2.1258697509765625
    5. ' (' → logprob: -3.1258697509765625
    6. '('' → logprob: -6.3758697509765625
    7. ' )' → logprob: -6.6258697509765625
    8. '  ' → logprob: -6.7508697509765625
    9. ' un' → logprob: -7.0008697509765625
    10. ' l' → logprob: -7.1258697509765625

Token 109: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.4909895956516266
    2. 'input' → logprob: -0.9909895658493042
    3. ' int' → logprob: -4.740989685058594
    4. ' input' → logprob: -4.865989685058594
    5. '(input' → logprob: -9.240989685058594
    6. '(int' → logprob: -9.490989685058594
    7. 'l' → logprob: -9.990989685058594
    8. ' ' → logprob: -10.615989685058594
    9. 'a' → logprob: -11.490989685058594
    10. ')' → logprob: -11.490989685058594

Token 110: '()' (ID: 416)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.47445327043533325
    2. '()' → logprob: -0.9744532704353333
    3. '(' → logprob: -9.59945297241211
    4. '()),' → logprob: -9.84945297241211
    5. '())
' → logprob: -9.97445297241211
    6. '()
' → logprob: -10.09945297241211
    7. '()))' → logprob: -10.34945297241211
    8. '(),' → logprob: -10.84945297241211
    9. '()`' → logprob: -10.84945297241211
    10. ' ())' → logprob: -10.84945297241211

Token 111: ''' (ID: 6)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -1.0191413164138794
    2. ')' → logprob: -1.1441413164138794
    3. '()' → logprob: -1.3941413164138794
    4. ' )' → logprob: -2.76914119720459
    5. '(' → logprob: -5.89414119720459
    6. ' ' → logprob: -6.39414119720459
    7. '))' → logprob: -6.51914119720459
    8. '),' → logprob: -7.39414119720459
    9. '()),' → logprob: -7.51914119720459
    10. '()))' → logprob: -7.76914119720459

Token 112: ' pour' (ID: 1930)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7838062047958374
    2. ')' → logprob: -1.0338062047958374
    3. '(' → logprob: -2.658806324005127
    4. ' )' → logprob: -2.783806324005127
    5. ' ' → logprob: -3.783806324005127
    6. ',' → logprob: -4.033806324005127
    7. ' ()' → logprob: -5.408806324005127
    8. ' (' → logprob: -5.783806324005127
    9. '())' → logprob: -5.783806324005127
    10. '+' → logprob: -6.408806324005127

Token 113: ' demander' (ID: 60771)
  Prédit: ' récupérer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' récupérer' → logprob: -0.288898766040802
    2. ' saisir' → logprob: -2.2888987064361572
    3. ' lire' → logprob: -2.4138987064361572
    4. ' int' → logprob: -4.663898944854736
    5. 'r' → logprob: -4.913898944854736
    6. ' convertir' → logprob: -5.038898944854736
    7. ' ' → logprob: -5.413898944854736
    8. ' obtenir' → logprob: -5.538898944854736
    9. ' recevoir' → logprob: -5.663898944854736
    10. ' l' → logprob: -5.663898944854736

Token 114: ' à' (ID: 1221)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.9515182971954346
    2. ' ' → logprob: -0.9515182971954346
    3. '()' → logprob: -2.5765182971954346
    4. ' un' → logprob: -2.5765182971954346
    5. ' (' → logprob: -3.3265182971954346
    6. ',' → logprob: -4.7015180587768555
    7. ' a' → logprob: -5.4515180587768555
    8. ' une' → logprob: -5.4515180587768555
    9. ' ()' → logprob: -5.7015180587768555
    10. '  ' → logprob: -6.0765180587768555

Token 115: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3603038489818573
    2. 'l' → logprob: -1.2353038787841797
    3. ' ' → logprob: -4.86030387878418
    4. '	l' → logprob: -5.86030387878418
    5. ' user' → logprob: -8.11030387878418
    6. ' utilisateur' → logprob: -8.73530387878418
    7. 'user' → logprob: -9.11030387878418
    8. '  ' → logprob: -9.61030387878418
    9. ' lâ' → logprob: -9.86030387878418
    10. '   ' → logprob: -9.98530387878418

Token 116: ''utilisateur' (ID: 140803)
  Prédit: ''utilisateur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''utilisateur' → logprob: -0.06715584546327591
    2. ''' → logprob: -3.0671558380126953
    3. 'a' → logprob: -4.942155838012695
    4. 'u' → logprob: -5.442155838012695
    5. ''us' → logprob: -6.192155838012695
    6. ''util' → logprob: -6.442155838012695
    7. '’utilisateur' → logprob: -7.067155838012695
    8. ''u' → logprob: -7.317155838012695
    9. ''user' → logprob: -7.567155838012695
    10. ''a' → logprob: -7.817155838012695

Token 117: ' d' (ID: 272)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0425419844686985
    2. ',' → logprob: -4.542541980743408
    3. ' de' → logprob: -4.792541980743408
    4. '(' → logprob: -5.167541980743408
    5. '(),' → logprob: -5.292541980743408
    6. ' ()' → logprob: -5.417541980743408
    7. ' d' → logprob: -5.917541980743408
    8. ' ' → logprob: -7.042541980743408
    9. '())' → logprob: -7.292541980743408
    10. ' ,' → logprob: -7.292541980743408

Token 118: ''' (ID: 6)
  Prédit: ''entrée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''entrée' → logprob: -1.039986491203308
    2. ''' → logprob: -1.164986491203308
    3. 'e' → logprob: -1.664986491203308
    4. ''ent' → logprob: -3.9149866104125977
    5. ' entrer' → logprob: -4.164986610412598
    6. ''é' → logprob: -4.164986610412598
    7. 'é' → logprob: -4.289986610412598
    8. '')' → logprob: -4.664986610412598
    9. 'onner' → logprob: -4.664986610412598
    10. ' saisir' → logprob: -4.789986610412598

Token 119: 'entr' (ID: 12792)
  Prédit: 'entr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entr' → logprob: -0.0865812748670578
    2. ''' → logprob: -3.711581230163574
    3. 'e' → logprob: -3.836581230163574
    4. 'entrée' → logprob: -4.586581230163574
    5. 's' → logprob: -5.086581230163574
    6. 'ent' → logprob: -5.086581230163574
    7. 'é' → logprob: -5.836581230163574
    8. ' entrer' → logprob: -6.211581230163574
    9. ''entrée' → logprob: -6.336581230163574
    10. ' saisir' → logprob: -6.336581230163574

Token 120: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.0007981925155036151
    2. 'erer' → logprob: -7.250798225402832
    3. 'rer' → logprob: -10.500798225402832
    4. 'érer' → logprob: -11.375798225402832
    5. 'éer' → logprob: -11.375798225402832
    6. ' er' → logprob: -11.875798225402832
    7. 'eer' → logprob: -12.000798225402832
    8. 'e' → logprob: -12.125798225402832
    9. ''er' → logprob: -13.500798225402832
    10. '

' → logprob: -13.625798225402832

Token 121: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.2432259321212769
    2. '(' → logprob: -1.3682259321212769
    3. '()' → logprob: -1.4932259321212769
    4. ' ' → logprob: -1.7432259321212769
    5. ' ()' → logprob: -3.8682260513305664
    6. ' (' → logprob: -4.368226051330566
    7. 'a' → logprob: -5.618226051330566
    8. ',' → logprob: -5.868226051330566
    9. ' une' → logprob: -5.993226051330566
    10. '   ' → logprob: -5.993226051330566

Token 122: ' valeur' (ID: 41664)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0690600872039795
    2. ' nombre' → logprob: -1.1940600872039795
    3. ' valeur' → logprob: -1.9440600872039795
    4. 'nombre' → logprob: -2.6940600872039795
    5. ' entier' → logprob: -2.8190600872039795
    6. 'n' → logprob: -3.5690600872039795
    7. 'ent' → logprob: -3.8190600872039795
    8. 'val' → logprob: -4.444060325622559
    9. 'entrée' → logprob: -5.569060325622559
    10. ' ent' → logprob: -6.069060325622559

Token 123: ' au' (ID: 2791)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.46699056029319763
    2. ')' → logprob: -1.59199059009552
    3. '()' → logprob: -2.8419904708862305
    4. ' )' → logprob: -3.3419904708862305
    5. ' ' → logprob: -3.4669904708862305
    6. '(' → logprob: -4.5919904708862305
    7. ' ,' → logprob: -4.7169904708862305
    8. '   ' → logprob: -5.0919904708862305
    9. '*' → logprob: -5.5919904708862305
    10. '+' → logprob: -6.5919904708862305

Token 124: ' clavier' (ID: 187878)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5136803388595581
    2. 't' → logprob: -2.0136804580688477
    3. 'tour' → logprob: -2.5136804580688477
    4. 'près' → logprob: -3.0136804580688477
    5. 'pt' → logprob: -4.513680458068848
    6. 'ns' → logprob: -4.513680458068848
    7. 'nt' → logprob: -4.763680458068848
    8. 'sc' → logprob: -4.763680458068848
    9. 'r' → logprob: -4.888680458068848
    10. 'l' → logprob: -4.888680458068848

Token 125: ' (' (ID: 350)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052715472877025604
    2. ',' → logprob: -3.177715539932251
    3. ' )' → logprob: -5.552715301513672
    4. '),' → logprob: -6.177715301513672
    5. '()' → logprob: -7.052715301513672
    6. ')
' → logprob: -7.802715301513672
    7. ' ' → logprob: -7.802715301513672
    8. ',
' → logprob: -7.802715301513672
    9. ' ,' → logprob: -8.052715301513672
    10. 'a' → logprob: -8.427715301513672

Token 126: 'de' (ID: 613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2204902023077011
    2. ' )' → logprob: -1.8454902172088623
    3. '),' → logprob: -3.8454902172088623
    4. ' ),' → logprob: -5.095489978790283
    5. '')' → logprob: -5.470489978790283
    6. ' ' → logprob: -6.095489978790283
    7. '   ' → logprob: -6.970489978790283
    8. '))' → logprob: -7.095489978790283
    9. ')
' → logprob: -7.220489978790283
    10. ',' → logprob: -7.470489978790283

Token 127: ' type' (ID: 1490)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -2.27597975730896
    2. 'int' → logprob: -2.27597975730896
    3. ' int' → logprob: -2.40097975730896
    4. 'r' → logprob: -2.52597975730896
    5. '   ' → logprob: -2.77597975730896
    6. ' saisir' → logprob: -2.77597975730896
    7. ' convertir' → logprob: -3.15097975730896
    8. ' nombre' → logprob: -3.15097975730896
    9. ' ' → logprob: -3.65097975730896
    10. 'près' → logprob: -4.025979995727539

Token 128: ' chaîne' (ID: 89288)
  Prédit: ' entier'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' entier' → logprob: -0.7167052626609802
    2. ' int' → logprob: -1.341705322265625
    3. ' ' → logprob: -2.466705322265625
    4. ' integer' → logprob: -3.216705322265625
    5. 'int' → logprob: -3.466705322265625
    6. 'ent' → logprob: -3.841705322265625
    7. ' ent' → logprob: -3.841705322265625
    8. ' un' → logprob: -4.466705322265625
    9. ' entière' → logprob: -4.591705322265625
    10. ' )' → logprob: -4.841705322265625

Token 129: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.752193808555603
    2. ')' → logprob: -1.377193808555603
    3. ' )' → logprob: -2.2521939277648926
    4. 'de' → logprob: -2.3771939277648926
    5. ' ' → logprob: -3.1271939277648926
    6. ',' → logprob: -4.627193927764893
    7. '   ' → logprob: -5.002193927764893
    8. '  ' → logprob: -5.877193927764893
    9. '    ' → logprob: -6.127193927764893
    10. '')' → logprob: -6.377193927764893

Token 130: ' caractères' (ID: 183106)
  Prédit: ' caractères'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' caractères' → logprob: -0.20808637142181396
    2. 'car' → logprob: -1.708086371421814
    3. ' caracteres' → logprob: -5.4580864906311035
    4. ' caract' → logprob: -6.3330864906311035
    5. ' caractère' → logprob: -7.4580864906311035
    6. ' car' → logprob: -10.958086013793945
    7. 'texte' → logprob: -12.458086013793945
    8. 'c' → logprob: -12.958086013793945
    9. 'chars' → logprob: -13.083086013793945
    10. 'char' → logprob: -13.458086013793945

Token 131: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10377538949251175
    2. '),' → logprob: -2.6037755012512207
    3. ')
' → logprob: -4.728775501251221
    4. ').' → logprob: -5.478775501251221
    5. '')' → logprob: -5.728775501251221
    6. ',' → logprob: -5.978775501251221
    7. ' )' → logprob: -5.978775501251221
    8. '))' → logprob: -6.478775501251221
    9. ' ),' → logprob: -8.353775024414062
    10. ''),' → logprob: -8.728775024414062

Token 132: '#' (ID: 2)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.272946834564209
    2. 'a' → logprob: -1.522946834564209
    3. '[' → logprob: -1.522946834564209
    4. ')' → logprob: -2.397946834564209
    5. ' ' → logprob: -2.897946834564209
    6. ',
' → logprob: -4.022946834564209
    7. ' 
' → logprob: -4.147946834564209
    8. '  
' → logprob: -4.272946834564209
    9. '[
' → logprob: -4.272946834564209
    10. ' ,' → logprob: -4.772946834564209

Token 133: ' Ensuite' (ID: 113884)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0790563821792603
    2. ' a' → logprob: -1.2040563821792603
    3. 'a' → logprob: -1.3290563821792603
    4. ' int' → logprob: -3.7040562629699707
    5. ')' → logprob: -4.079056262969971
    6. 'int' → logprob: -4.204056262969971
    7. ' )' → logprob: -5.329056262969971
    8. ',' → logprob: -5.454056262969971
    9. '  
' → logprob: -5.579056262969971
    10. '()' → logprob: -5.704056262969971

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.06343160569667816
    2. ' ,' → logprob: -3.06343150138855
    3. ')' → logprob: -4.688431739807129
    4. ' on' → logprob: -6.188431739807129
    5. ' ' → logprob: -6.813431739807129
    6. '<|end|>' → logprob: -6.813431739807129
    7. '),' → logprob: -7.813431739807129
    8. ' )' → logprob: -8.563431739807129
    9. ' la' → logprob: -9.063431739807129
    10. '    ' → logprob: -9.563431739807129

Token 135: ' '' (ID: 461)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.5218545794487
    2. ' int' → logprob: -2.0218546390533447
    3. ' la' → logprob: -2.1468546390533447
    4. ' cette' → logprob: -3.0218546390533447
    5. 'int' → logprob: -3.2718546390533447
    6. 'a' → logprob: -3.5218546390533447
    7. ')' → logprob: -4.896854400634766
    8. ' a' → logprob: -5.021854400634766
    9. ' l' → logprob: -5.021854400634766
    10. ' ' → logprob: -5.396854400634766

Token 136: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0020017961505800486
    2. ' int' → logprob: -6.252001762390137
    3. 'ceil' → logprob: -10.002001762390137
    4. 'intval' → logprob: -12.127001762390137
    5. '=int' → logprob: -12.752001762390137
    6. '[int' → logprob: -13.127001762390137
    7. '<int' → logprob: -13.377001762390137
    8. '(int' → logprob: -13.564501762390137
    9. ')' → logprob: -13.627001762390137
    10. '```' → logprob: -13.689501762390137

Token 137: '()' (ID: 416)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.6626477241516113
    2. '(' → logprob: -0.7876477241516113
    3. '()' → logprob: -4.037647724151611
    4. '(
' → logprob: -5.162647724151611
    5. '('' → logprob: -5.912647724151611
    6. '(...)' → logprob: -6.912647724151611
    7. '<|end|>' → logprob: -6.912647724151611
    8. '(convert' → logprob: -7.162647724151611
    9. ' ' → logprob: -9.412647247314453
    10. '(

' → logprob: -9.537647247314453

Token 138: ''' (ID: 6)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05656246468424797
    2. ')' → logprob: -3.4315624237060547
    3. '(convert' → logprob: -4.056562423706055
    4. '(input' → logprob: -5.681562423706055
    5. '(
' → logprob: -7.681562423706055
    6. 'convert' → logprob: -8.431562423706055
    7. '('' → logprob: -8.431562423706055
    8. '()' → logprob: -8.806562423706055
    9. ' converts' → logprob: -9.181562423706055
    10. '(

' → logprob: -9.306562423706055

Token 139: ' convert' (ID: 8452)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0351472832262516
    2. '(convert' → logprob: -4.160147190093994
    3. ')' → logprob: -5.160147190093994
    4. 'convert' → logprob: -5.410147190093994
    5. ' transforme' → logprob: -5.910147190093994
    6. '(
' → logprob: -6.535147190093994
    7. '<|end|>' → logprob: -6.785147190093994
    8. '()' → logprob: -6.785147190093994
    9. ' convert' → logprob: -7.160147190093994
    10. ' converts' → logprob: -7.285147190093994

Token 140: 'it' (ID: 278)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15773345530033112
    2. 'e' → logprob: -3.03273344039917
    3. ' (' → logprob: -3.28273344039917
    4. 'i' → logprob: -3.40773344039917
    5. 'u' → logprob: -5.15773344039917
    6. ')' → logprob: -5.15773344039917
    7. 'it' → logprob: -6.65773344039917
    8. 'er' → logprob: -6.78273344039917
    9. 's' → logprob: -6.90773344039917
    10. 't' → logprob: -6.90773344039917

Token 141: ' cette' (ID: 7696)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.54611736536026
    2. '(input' → logprob: -0.92111736536026
    3. ' ' → logprob: -4.921117305755615
    4. '<|end|>' → logprob: -5.421117305755615
    5. ' (' → logprob: -5.671117305755615
    6. '(s' → logprob: -6.171117305755615
    7. '(
' → logprob: -6.921117305755615
    8. 'l' → logprob: -7.296117305755615
    9. ' cette' → logprob: -7.546117305755615
    10. ' la' → logprob: -7.546117305755615

Token 142: ' chaîne' (ID: 89288)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3223424255847931
    2. ' chaîne' → logprob: -2.1973423957824707
    3. ' valeur' → logprob: -2.1973423957824707
    4. ' string' → logprob: -4.947342395782471
    5. ' input' → logprob: -5.072342395782471
    6. ' entrée' → logprob: -5.322342395782471
    7. ' )' → logprob: -5.572342395782471
    8. ' espace' → logprob: -5.822342395782471
    9. ' value' → logprob: -5.822342395782471
    10. '  ' → logprob: -6.197342395782471

Token 143: ' de' (ID: 334)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06109895929694176
    2. ' ' → logprob: -3.936099052429199
    3. '(input' → logprob: -4.186099052429199
    4. '()' → logprob: -4.936099052429199
    5. ' en' → logprob: -5.561099052429199
    6. ' (' → logprob: -6.311099052429199
    7. '  ' → logprob: -6.686099052429199
    8. '(convert' → logprob: -6.811099052429199
    9. '(
' → logprob: -6.936099052429199
    10. '(val' → logprob: -7.061099052429199

Token 144: ' caractères' (ID: 183106)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -1.5430409908294678
    2. ' l' → logprob: -1.5430409908294678
    3. ' la' → logprob: -2.1680409908294678
    4. 'la' → logprob: -2.2930409908294678
    5. ' type' → logprob: -2.5430409908294678
    6. 'chaine' → logprob: -2.6680409908294678
    7. ' input' → logprob: -2.9180409908294678
    8. ' en' → logprob: -3.9180409908294678
    9. ' cette' → logprob: -3.9180409908294678
    10. ' ' → logprob: -3.9180409908294678

Token 145: ' en' (ID: 469)
  Prédit: ' en'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' en' → logprob: -0.13975781202316284
    2. ' ' → logprob: -2.8897578716278076
    3. ')' → logprob: -3.5147578716278076
    4. '(' → logprob: -3.7647578716278076
    5. ' )' → logprob: -5.3897576332092285
    6. ',' → logprob: -5.3897576332092285
    7. '(convert' → logprob: -6.2647576332092285
    8. '(input' → logprob: -6.3897576332092285
    9. ' (' → logprob: -6.7647576332092285
    10. ' a' → logprob: -7.0147576332092285

Token 146: ' entier' (ID: 80473)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.001035191467963159
    2. ' entier' → logprob: -8.0010347366333
    3. ' int' → logprob: -8.5010347366333
    4. 'un' → logprob: -8.5010347366333
    5. ' ' → logprob: -8.8760347366333
    6. ' integer' → logprob: -9.8760347366333
    7. 'ent' → logprob: -10.7510347366333
    8. ' nombre' → logprob: -10.7510347366333
    9. 'int' → logprob: -11.2510347366333
    10. ' une' → logprob: -11.3760347366333

Token 147: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07260040938854218
    2. ',' → logprob: -3.3226003646850586
    3. ' )' → logprob: -4.572600364685059
    4. ']' → logprob: -4.697600364685059
    5. '[' → logprob: -5.572600364685059
    6. '   ' → logprob: -6.322600364685059
    7. ' ' → logprob: -6.572600364685059
    8. 'a' → logprob: -6.697600364685059
    9. '.' → logprob: -6.947600364685059
    10. '(' → logprob: -7.072600364685059

Token 148: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007219807710498571
    2. ' a' → logprob: -5.3822197914123535
    3. '[' → logprob: -6.8822197914123535
    4. ',' → logprob: -7.8822197914123535
    5. '[a' → logprob: -7.8822197914123535
    6. ']' → logprob: -8.007220268249512
    7. '[
' → logprob: -8.507220268249512
    8. '
' → logprob: -10.007220268249512
    9. ',a' → logprob: -10.257220268249512
    10. ',
' → logprob: -10.382220268249512

Token 149: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03369192034006119
    2. ' a' → logprob: -3.408691883087158
    3. '[' → logprob: -11.033692359924316
    4. '[a' → logprob: -11.658692359924316
    5. ']' → logprob: -12.283692359924316
    6. ' ' → logprob: -12.783692359924316
    7. ' 
' → logprob: -12.783692359924316
    8. ' ]' → logprob: -13.158692359924316
    9. '[
' → logprob: -13.158692359924316
    10. 'for' → logprob: -13.658692359924316

Token 150: 'for' (ID: 1938)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.02513485588133335
    2. '[int' → logprob: -4.775135040283203
    3. '[a' → logprob: -5.400135040283203
    4. '[' → logprob: -5.900135040283203
    5. 'for' → logprob: -5.900135040283203
    6. 'int' → logprob: -6.025135040283203
    7. ' a' → logprob: -6.150135040283203
    8. 'range' → logprob: -7.275135040283203
    9. '_' → logprob: -8.525135040283203
    10. ' [' → logprob: -8.650135040283203

Token 151: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.5825989842414856
    2. '_' → logprob: -1.2075989246368408
    3. ' i' → logprob: -1.9575989246368408
    4. ' ' → logprob: -6.95759916305542
    5. 'i' → logprob: -7.70759916305542
    6. ' ' → logprob: -10.582598686218262
    7. '_i' → logprob: -11.832598686218262
    8. ' in' → logprob: -12.207598686218262
    9. ' _
' → logprob: -12.957598686218262
    10. '  ' → logprob: -14.707598686218262

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003416770603507757
    2. 'in' → logprob: -5.753416538238525
    3. ' ' → logprob: -8.503417015075684
    4. '_' → logprob: -10.878417015075684
    5. ' i' → logprob: -12.378417015075684
    6. ' _' → logprob: -12.503417015075684
    7. 'range' → logprob: -12.878417015075684
    8. 'i' → logprob: -13.628417015075684
    9. 'n' → logprob: -13.753417015075684
    10. '  ' → logprob: -14.315917015075684

Token 153: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.386913925409317
    2. 'range' → logprob: -1.1369138956069946
    3. ' ' → logprob: -10.511914253234863
    4. ' rang' → logprob: -12.386914253234863
    5. 'rang' → logprob: -12.886914253234863
    6. ' in' → logprob: -13.261914253234863
    7. 'ran' → logprob: -13.761914253234863
    8. '	range' → logprob: -13.886914253234863
    9. ' ran' → logprob: -14.136914253234863
    10. 'ra' → logprob: -14.261914253234863

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.034592388459714e-06
    2. ' (' → logprob: -12.250005722045898
    3. '5' → logprob: -13.750005722045898
    4. '(
' → logprob: -16.2500057220459
    5. ' ' → logprob: -18.8750057220459
    6. ')' → logprob: -20.6250057220459
    7. '6' → logprob: -21.0000057220459
    8. '4' → logprob: -21.2500057220459
    9. '
' → logprob: -21.2500057220459
    10. '1' → logprob: -21.7500057220459

Token 155: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00024524700711481273
    2. ' ' → logprob: -8.375245094299316
    3. '(' → logprob: -11.375245094299316
    4. ')' → logprob: -13.000245094299316
    5. '   ' → logprob: -15.375245094299316
    6. '1' → logprob: -15.500245094299316
    7. '  ' → logprob: -16.250246047973633
    8. ' )' → logprob: -16.750246047973633
    9. '```' → logprob: -16.937746047973633
    10. '' → logprob: -17.375246047973633

Token 156: ')'' (ID: 45517)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.532877504825592
    2. ')' → logprob: -0.907877504825592
    3. '))' → logprob: -4.782877445220947
    4. ')):' → logprob: -7.032877445220947
    5. '()' → logprob: -9.032877922058105
    6. ')'' → logprob: -9.282877922058105
    7. '())' → logprob: -10.032877922058105
    8. '):
' → logprob: -10.032877922058105
    9. ')))' → logprob: -10.532877922058105
    10. '():' → logprob: -10.657877922058105

Token 157: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.036942508071660995
    2. ' :' → logprob: -3.411942481994629
    3. ']' → logprob: -6.411942481994629
    4. '[' → logprob: -7.036942481994629
    5. '[:]' → logprob: -8.411942481994629
    6. ')' → logprob: -8.536942481994629
    7. ':
' → logprob: -9.411942481994629
    8. 'a' → logprob: -9.786942481994629
    9. ',' → logprob: -10.286942481994629
    10. ' ' → logprob: -10.411942481994629

Token 158: ' ceci' (ID: 98542)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.26514381170272827
    2. '_' → logprob: -2.140143871307373
    3. ' a' → logprob: -2.515143871307373
    4. ' ' → logprob: -3.515143871307373
    5. '    ' → logprob: -6.140143871307373
    6. ' range' → logprob: -7.140143871307373
    7. '_a' → logprob: -7.140143871307373
    8. 'a' → logprob: -7.515143871307373
    9. ' ' → logprob: -8.765143394470215
    10. '   ' → logprob: -10.140143394470215

Token 159: ' signifie' (ID: 81149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15338221192359924
    2. ' :' → logprob: -2.2783823013305664
    3. ' in' → logprob: -4.778382301330566
    4. ':' → logprob: -4.778382301330566
    5. ' crée' → logprob: -5.528382301330566
    6. ' ,' → logprob: -6.028382301330566
    7. ' indique' → logprob: -6.028382301330566
    8. '  ' → logprob: -6.278382301330566
    9. ' range' → logprob: -6.528382301330566
    10. ' signifie' → logprob: -6.528382301330566

Token 160: ' que' (ID: 661)
  Prédit: ' que'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' que' → logprob: -0.6306828260421753
    2. ' ' → logprob: -1.2556828260421753
    3. ' qu' → logprob: -1.8806828260421753
    4. ' that' → logprob: -3.755682945251465
    5. ' for' → logprob: -6.505682945251465
    6. '_' → logprob: -6.755682945251465
    7. ' ' → logprob: -7.005682945251465
    8. ' "' → logprob: -7.755682945251465
    9. 'que' → logprob: -7.880682945251465
    10. ' _' → logprob: -8.130682945251465

Token 161: ' cette' (ID: 7696)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9182569980621338
    2. ' _' → logprob: -1.0432569980621338
    3. '_' → logprob: -1.4182569980621338
    4. ' a' → logprob: -5.918256759643555
    5. 'a' → logprob: -6.293256759643555
    6. ' on' → logprob: -7.668256759643555
    7. ' range' → logprob: -8.418256759643555
    8. '    ' → logprob: -8.543256759643555
    9. ' i' → logprob: -8.668256759643555
    10. '  ' → logprob: -9.293256759643555

Token 162: ' opération' (ID: 86023)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2079617977142334
    2. '_' → logprob: -1.5829617977142334
    3. ' liste' → logprob: -1.5829617977142334
    4. ' boucle' → logprob: -2.0829617977142334
    5. ' code' → logprob: -3.9579617977142334
    6. ' comprehension' → logprob: -4.0829620361328125
    7. ' _' → logprob: -4.2079620361328125
    8. 'liste' → logprob: -4.4579620361328125
    9. ' compréhension' → logprob: -4.4579620361328125
    10. '[' → logprob: -4.5829620361328125

Token 163: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06009279936552048
    2. ' s' → logprob: -3.5600926876068115
    3. ' se' → logprob: -3.9350926876068115
    4. 's' → logprob: -5.685092926025391
    5. '  ' → logprob: -6.310092926025391
    6. ' est' → logprob: -6.685092926025391
    7. 'se' → logprob: -6.810092926025391
    8. '_' → logprob: -7.310092926025391
    9. ' sera' → logprob: -7.560092926025391
    10. ' va' → logprob: -7.810092926025391

Token 164: ' répét' (ID: 156936)
  Prédit: ' répét'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' répét' → logprob: -0.2977028787136078
    2. 'ré' → logprob: -1.7977029085159302
    3. ' rép' → logprob: -3.4227027893066406
    4. ' effectu' → logprob: -3.5477027893066406
    5. ' réalisée' → logprob: -4.047702789306641
    6. ' ' → logprob: -5.047702789306641
    7. ' exécut' → logprob: -5.547702789306641
    8. 'repeat' → logprob: -7.797702789306641
    9. ' repeated' → logprob: -8.04770278930664
    10. 're' → logprob: -8.17270278930664

Token 165: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.07062681764364243
    2. 'é' → logprob: -2.695626735687256
    3. 'ées' → logprob: -8.320627212524414
    4. 'érée' → logprob: -9.070627212524414
    5. 'e' → logprob: -9.570627212524414
    6. 'éer' → logprob: -9.820627212524414
    7. 'ér' → logprob: -10.070627212524414
    8. 'ee' → logprob: -10.570627212524414
    9. 'rée' → logprob: -10.695627212524414
    10. 'er' → logprob: -10.945627212524414

Token 166: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4303964376449585
    2. '5' → logprob: -1.0553964376449585
    3. ' cinq' → logprob: -6.430396556854248
    4. '  ' → logprob: -10.55539608001709
    5. ' five' → logprob: -11.30539608001709
    6. '(' → logprob: -11.30539608001709
    7. ' cinco' → logprob: -11.55539608001709
    8. '    ' → logprob: -12.18039608001709
    9. '_' → logprob: -12.80539608001709
    10. ' (' → logprob: -12.93039608001709

Token 167: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.005934486165642738
    2. ' ' → logprob: -5.130934715270996
    3. 'c' → logprob: -12.380934715270996
    4. ' cinq' → logprob: -14.380934715270996
    5. '  ' → logprob: -15.255934715270996
    6. 'cin' → logprob: -16.00593376159668
    7. 'C' → logprob: -16.25593376159668
    8. ' C' → logprob: -16.38093376159668
    9. '1' → logprob: -16.63093376159668
    10. ' c' → logprob: -16.88093376159668

Token 168: ' fois' (ID: 14697)
  Prédit: ' fois'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' fois' → logprob: -0.40962734818458557
    2. ' ' → logprob: -1.1596273183822632
    3. 'fois' → logprob: -4.034627437591553
    4. ' times' → logprob: -5.534627437591553
    5. ' )' → logprob: -8.409626960754395
    6. 'times' → logprob: -8.784626960754395
    7. ' veces' → logprob: -9.409626960754395
    8. ')' → logprob: -9.659626960754395
    9. ' espaces' → logprob: -10.034626960754395
    10. ' vezes' → logprob: -10.159626960754395

Token 169: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007324297912418842
    2. 'a' → logprob: -5.88232421875
    3. ':' → logprob: -6.13232421875
    4. ',' → logprob: -6.63232421875
    5. ' ]' → logprob: -7.75732421875
    6. ')' → logprob: -8.13232421875
    7. '.' → logprob: -9.50732421875
    8. '[' → logprob: -10.13232421875
    9. ':]' → logprob: -10.75732421875
    10. '])' → logprob: -10.88232421875

Token 170: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00032366468803957105
    2. '[' → logprob: -8.750323295593262
    3. '[
' → logprob: -9.500323295593262
    4. '[a' → logprob: -9.750323295593262
    5. ' a' → logprob: -10.500323295593262
    6. ']' → logprob: -13.000323295593262
    7. '_a' → logprob: -14.500323295593262
    8. ':' → logprob: -14.875323295593262
    9. '['' → logprob: -14.875323295593262
    10. ''a' → logprob: -15.625323295593262

Token 171: ' La' (ID: 3038)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0011743901995941997
    2. ' a' → logprob: -6.751174449920654
    3. '[' → logprob: -12.876173973083496
    4. '[a' → logprob: -14.251173973083496
    5. '[
' → logprob: -14.751173973083496
    6. ']' → logprob: -16.251174926757812
    7. ' [' → logprob: -16.751174926757812
    8. '#' → logprob: -16.751174926757812
    9. ' ' → logprob: -16.751174926757812
    10. '['' → logprob: -16.876174926757812

Token 172: ' variable' (ID: 11076)
  Prédit: ' liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.8633437156677246
    2. 'a' → logprob: -0.9883437156677246
    3. ' a' → logprob: -2.7383437156677246
    4. 'liste' → logprob: -2.8633437156677246
    5. '[' → logprob: -3.9883437156677246
    6. ' syntax' → logprob: -4.363343715667725
    7. ' result' → logprob: -4.863343715667725
    8. 'result' → logprob: -5.238343715667725
    9. ' [' → logprob: -5.238343715667725
    10. ' code' → logprob: -5.363343715667725

Token 173: ' '_'' (ID: 86115)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0700145736336708
    2. '_' → logprob: -2.695014476776123
    3. ' ' → logprob: -9.570014953613281
    4. ' a' → logprob: -12.945014953613281
    5. ' ' → logprob: -13.070014953613281
    6. ' _
' → logprob: -13.945014953613281
    7. ' ▁' → logprob: -14.070014953613281
    8. ' '' → logprob: -15.070014953613281
    9. ' '_'' → logprob: -15.445014953613281
    10. ' _)' → logprob: -15.570014953613281

Token 174: ' est' (ID: 893)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.48378750681877136
    2. '_' → logprob: -1.7337875366210938
    3. ' in' → logprob: -2.2337875366210938
    4. ' n' → logprob: -3.8587875366210938
    5. 'n' → logprob: -4.108787536621094
    6. 'in' → logprob: -4.233787536621094
    7. ' est' → logprob: -4.358787536621094
    8. '<|end|>' → logprob: -5.233787536621094
    9. ',' → logprob: -5.358787536621094
    10. ' _' → logprob: -5.608787536621094

Token 175: ' utilisée' (ID: 106548)
  Prédit: ' utilisée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' utilisée' → logprob: -0.07394654303789139
    2. 'trad' → logprob: -3.573946475982666
    3. ' traditionnel' → logprob: -4.573946475982666
    4. ' utilisé' → logprob: -4.823946475982666
    5. ' souvent' → logprob: -5.198946475982666
    6. ' un' → logprob: -5.323946475982666
    7. ' une' → logprob: -5.448946475982666
    8. 'util' → logprob: -5.823946475982666
    9. ' convention' → logprob: -6.573946475982666
    10. '_' → logprob: -7.073946475982666

Token 176: ' quand' (ID: 18026)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.33477792143821716
    2. ' ' → logprob: -2.70977783203125
    3. ' par' → logprob: -2.83477783203125
    4. ' ici' → logprob: -3.45977783203125
    5. 'par' → logprob: -4.08477783203125
    6. ' simplement' → logprob: -4.08477783203125
    7. ' _' → logprob: -4.20977783203125
    8. ' en' → logprob: -4.20977783203125
    9. ' souvent' → logprob: -4.58477783203125
    10. ' as' → logprob: -4.83477783203125

Token 177: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.3943568468093872
    2. 'on' → logprob: -1.1443568468093872
    3. 'l' → logprob: -5.769356727600098
    4. ' la' → logprob: -6.769356727600098
    5. ' l' → logprob: -7.144356727600098
    6. ''on' → logprob: -7.519356727600098
    7. 'auc' → logprob: -7.644356727600098
    8. 'la' → logprob: -7.644356727600098
    9. '_' → logprob: -8.394356727600098
    10. '_on' → logprob: -8.769356727600098

Token 178: ' n' (ID: 297)
  Prédit: 'ne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ne' → logprob: -0.9312950372695923
    2. 'n' → logprob: -1.0562950372695923
    3. ' ne' → logprob: -1.4312950372695923
    4. ' n' → logprob: -4.556294918060303
    5. ' souhaite' → logprob: -5.931294918060303
    6. 've' → logprob: -6.056294918060303
    7. 'a' → logprob: -6.181294918060303
    8. 'n't' → logprob: -8.306295394897461
    9. ' veut' → logprob: -8.806295394897461
    10. 'ignore' → logprob: -8.931295394897461

Token 179: ''a' (ID: 10443)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.2713203430175781
    2. ''a' → logprob: -1.2713203430175781
    3. ''' → logprob: -1.6463203430175781
    4. ''util' → logprob: -2.521320343017578
    5. ''aime' → logprob: -3.146320343017578
    6. 'e' → logprob: -3.396320343017578
    7. 'n' → logprob: -4.396320343017578
    8. 'pas' → logprob: -4.396320343017578
    9. 'on' → logprob: -4.646320343017578
    10. ''ai' → logprob: -4.771320343017578

Token 180: ' pas' (ID: 2173)
  Prédit: 'pas'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pas' → logprob: -0.22648438811302185
    2. ' pas' → logprob: -1.6014844179153442
    3. ' ' → logprob: -7.976484298706055
    4. 'auc' → logprob: -8.976484298706055
    5. ' aucune' → logprob: -9.226484298706055
    6. ' aucun' → logprob: -9.476484298706055
    7. 'plus' → logprob: -9.726484298706055
    8. '```' → logprob: -10.476484298706055
    9. '_pas' → logprob: -10.726484298706055
    10. ' rien' → logprob: -10.726484298706055

Token 181: ' besoin' (ID: 27703)
  Prédit: 'bes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bes' → logprob: -0.3530171811580658
    2. ' besoin' → logprob: -1.2280172109603882
    3. 'b' → logprob: -6.853017330169678
    4. ' ' → logprob: -6.853017330169678
    5. 'pas' → logprob: -7.853017330169678
    6. 'Bes' → logprob: -7.978017330169678
    7. '_b' → logprob: -8.35301685333252
    8. 'l' → logprob: -8.60301685333252
    9. 'v' → logprob: -8.72801685333252
    10. ' vraiment' → logprob: -8.85301685333252

Token 182: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.570172905921936
    2. ' d' → logprob: -0.945172905921936
    3. 'de' → logprob: -4.3201727867126465
    4. 'd' → logprob: -4.3201727867126465
    5. '_' → logprob: -4.8201727867126465
    6. ' for' → logprob: -5.5701727867126465
    7. ' ' → logprob: -6.0701727867126465
    8. 'for' → logprob: -6.0701727867126465
    9. ' of' → logprob: -6.5701727867126465
    10. '_de' → logprob: -7.3201727867126465

Token 183: ' la' (ID: 557)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.259042888879776
    2. 'util' → logprob: -2.384042978286743
    3. 'r' → logprob: -3.009042978286743
    4. 'l' → logprob: -3.384042978286743
    5. 'ré' → logprob: -4.009042739868164
    6. 'nom' → logprob: -4.134042739868164
    7. ' la' → logprob: -5.009042739868164
    8. ' récupérer' → logprob: -5.759042739868164
    9. 'val' → logprob: -6.009042739868164
    10. 'con' → logprob: -6.134042739868164

Token 184: ' valeur' (ID: 41664)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.12926830351352692
    2. 'nom' → logprob: -3.1292684078216553
    3. ' valeur' → logprob: -3.1292684078216553
    4. 'variable' → logprob: -3.8792684078216553
    5. 'util' → logprob: -5.379268169403076
    6. ' variable' → logprob: -5.754268169403076
    7. 'var' → logprob: -6.879268169403076
    8. 's' → logprob: -7.129268169403076
    9. ' val' → logprob: -7.754268169403076
    10. 'v' → logprob: -7.754268169403076

Token 185: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24085253477096558
    2. ' d' → logprob: -2.3658525943756104
    3. ' des' → logprob: -3.2408525943756104
    4. 'de' → logprob: -3.3658525943756104
    5. '_' → logprob: -3.9908525943756104
    6. ' ' → logprob: -3.9908525943756104
    7. ' _' → logprob: -5.365852355957031
    8. 'des' → logprob: -7.490852355957031
    9. ' for' → logprob: -7.615852355957031
    10. 'd' → logprob: -7.740852355957031

Token 186: ' boucle' (ID: 174211)
  Prédit: 'la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'la' → logprob: -0.5880702137947083
    2. 'l' → logprob: -0.9630702137947083
    3. ' la' → logprob: -3.4630701541900635
    4. ' boucle' → logprob: -4.338070392608643
    5. ' l' → logprob: -5.463070392608643
    6. 'iteration' → logprob: -5.838070392608643
    7. 'it' → logprob: -5.963070392608643
    8. 'i' → logprob: -6.463070392608643
    9. 'comp' → logprob: -6.463070392608643
    10. ' iteration' → logprob: -6.963070392608643

Token 187: ' elle' (ID: 11451)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2806626558303833
    2. ']' → logprob: -2.6556625366210938
    3. ' ' → logprob: -2.6556625366210938
    4. '_' → logprob: -3.2806625366210938
    5. ',' → logprob: -3.9056625366210938
    6. ':' → logprob: -4.655662536621094
    7. 'a' → logprob: -5.030662536621094
    8. ' )' → logprob: -5.280662536621094
    9. '.' → logprob: -5.905662536621094
    10. '[' → logprob: -5.905662536621094

Token 188: '-même' (ID: 41085)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.45176881551742554
    2. '-même' → logprob: -1.4517688751220703
    3. '_' → logprob: -2.5767688751220703
    4. 'n' → logprob: -3.3267688751220703
    5. '_m' → logprob: -4.95176887512207
    6. '-' → logprob: -6.32676887512207
    7. 'mé' → logprob: -6.57676887512207
    8. '_
' → logprob: -6.95176887512207
    9. '```' → logprob: -7.32676887512207
    10. ' même' → logprob: -7.32676887512207

Token 189: '.
' (ID: 558)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.11863172799348831
    2. ':' → logprob: -2.3686318397521973
    3. ',' → logprob: -4.993631839752197
    4. 'a' → logprob: -5.243631839752197
    5. ')' → logprob: -5.868631839752197
    6. ':
' → logprob: -6.618631839752197
    7. ']
' → logprob: -6.993631839752197
    8. '])' → logprob: -8.243631362915039
    9. ' ]' → logprob: -8.743631362915039
    10. ' :' → logprob: -8.868631362915039

Token 190: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.0722858102526516e-05
    2. '[
' → logprob: -11.000041007995605
    3. '[' → logprob: -11.625041007995605
    4. ']' → logprob: -12.375041007995605
    5. ' a' → logprob: -12.375041007995605
    6. '```' → logprob: -13.500041007995605
    7. '
' → logprob: -13.625041007995605
    8. '[a' → logprob: -13.625041007995605
    9. ']
' → logprob: -14.125041007995605
    10. '#' → logprob: -14.750041007995605

Token 191: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026357198134064674
    2. '=' → logprob: -3.6513571739196777
    3. ' =[' → logprob: -10.401357650756836
    4. '=[' → logprob: -11.401357650756836
    5. '[' → logprob: -12.151357650756836
    6. ' =
' → logprob: -12.526357650756836
    7. '=[]' → logprob: -13.151357650756836
    8. 'a' → logprob: -13.901357650756836
    9. ' ' → logprob: -13.901357650756836
    10. '=[]
' → logprob: -14.901357650756836

Token 192: ' [' (ID: 723)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.00029959288076497614
    2. ' [' → logprob: -8.250299453735352
    3. '[' → logprob: -10.250299453735352
    4. '[Int' → logprob: -12.750299453735352
    5. '[i' → logprob: -17.37529945373535
    6. '[
' → logprob: -17.87529945373535
    7. '[input' → logprob: -18.62529945373535
    8. '[in' → logprob: -19.00029945373535
    9. ' ' → logprob: -19.00029945373535
    10. '[a' → logprob: -19.62529945373535

Token 193: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.572941179503687e-05
    2. ' int' → logprob: -10.000045776367188
    3. '   ' → logprob: -16.250045776367188
    4. '(int' → logprob: -17.375045776367188
    5. '<int' → logprob: -17.375045776367188
    6. '[int' → logprob: -17.625045776367188
    7. '	int' → logprob: -18.125045776367188
    8. 'ints' → logprob: -18.500045776367188
    9. '  ' → logprob: -18.625045776367188
    10. ' ' → logprob: -18.625045776367188

Token 194: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.006718809716403484
    2. '(' → logprob: -5.006718635559082
    3. '(
' → logprob: -13.006718635559082
    4. ' (' → logprob: -14.381718635559082
    5. 'input' → logprob: -14.881718635559082
    6. '(in' → logprob: -16.0067195892334
    7. '(

' → logprob: -16.1317195892334
    8. '(inp' → logprob: -16.6317195892334
    9. ',input' → logprob: -17.3817195892334
    10. '(i' → logprob: -17.8817195892334

Token 195: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -8.637786231702194e-05
    2. '()' → logprob: -9.625086784362793
    3. '()))' → logprob: -11.625086784362793
    4. ' ())' → logprob: -12.000086784362793
    5. '())
' → logprob: -12.875086784362793
    6. '()]' → logprob: -13.625086784362793
    7. '(' → logprob: -14.875086784362793
    8. ')' → logprob: -15.125086784362793
    9. '()),' → logprob: -15.250086784362793
    10. '());' → logprob: -15.875086784362793

Token 196: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08891242742538452
    2. 'for' → logprob: -3.2139124870300293
    3. ' for' → logprob: -3.3389124870300293
    4. '()' → logprob: -4.713912487030029
    5. ']' → logprob: -8.588912010192871
    6. ' ' → logprob: -8.963912010192871
    7. ' )' → logprob: -9.838912010192871
    8. ')]' → logprob: -10.088912010192871
    9. '	for' → logprob: -11.713912010192871
    10. '   ' → logprob: -12.713912010192871

Token 197: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.004835703410208225
    2. '_' → logprob: -5.379835605621338
    3. ' ' → logprob: -8.629836082458496
    4. ' range' → logprob: -10.254836082458496
    5. 'range' → logprob: -14.129836082458496
    6. ' ' → logprob: -14.129836082458496
    7. '_range' → logprob: -17.25483512878418
    8. ' _)' → logprob: -17.37983512878418
    9. ' _
' → logprob: -17.62983512878418
    10. '  ' → logprob: -17.87983512878418

Token 198: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11284541338682175
    2. 'in' → logprob: -2.2378454208374023
    3. ' ' → logprob: -10.987845420837402
    4. 'import' → logprob: -12.987845420837402
    5. 'range' → logprob: -13.362845420837402
    6. ' i' → logprob: -13.737845420837402
    7. 'i' → logprob: -14.862845420837402
    8. ')' → logprob: -15.487845420837402
    9. 'a' → logprob: -15.987845420837402
    10. ' range' → logprob: -16.237844467163086

Token 199: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3132641315460205
    2. ' range' → logprob: -1.3132641315460205
    3. '(range' → logprob: -13.563263893127441
    4. ' ' → logprob: -14.438263893127441
    5. '	range' → logprob: -14.938263893127441
    6. 'rang' → logprob: -16.063264846801758
    7. ' xrange' → logprob: -17.188264846801758
    8. ' rang' → logprob: -17.438264846801758
    9. 'ran' → logprob: -17.438264846801758
    10. '(' → logprob: -17.688264846801758

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: 0.0
    2. '5' → logprob: -17.125
    3. ' (' → logprob: -17.875
    4. '(
' → logprob: -19.125
    5. '(

' → logprob: -23.0
    6. '](' → logprob: -23.125
    7. '((' → logprob: -23.75
    8. '6' → logprob: -23.875
    9. ')(' → logprob: -24.125
    10. ']' → logprob: -24.125

Token 201: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -5.080963092041202e-06
    2. ' ' → logprob: -12.250004768371582
    3. '(' → logprob: -16.0000057220459
    4. ')' → logprob: -16.2500057220459
    5. '   ' → logprob: -17.2500057220459
    6. '1' → logprob: -19.1250057220459
    7. '0' → logprob: -19.8750057220459
    8. '```' → logprob: -20.3750057220459
    9. ')]' → logprob: -20.7500057220459
    10. '
' → logprob: -21.1250057220459

Token 202: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.97155623533763e-05
    2. ')' → logprob: -9.375089645385742
    3. ']' → logprob: -12.500089645385742
    4. '):' → logprob: -14.750089645385742
    5. '))' → logprob: -14.875089645385742
    6. ')])' → logprob: -15.875089645385742
    7. ')}' → logprob: -16.625089645385742
    8. ' )' → logprob: -16.625089645385742
    9. ')]
' → logprob: -17.500089645385742
    10. ')].' → logprob: -17.625089645385742

Token 203: '#' (ID: 2)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -1.0660674571990967
    2. 's' → logprob: -1.6910674571990967
    3. 'sum' → logprob: -1.8160674571990967
    4. '#' → logprob: -2.3160674571990967
    5. 'm' → logprob: -2.3160674571990967
    6. 'n' → logprob: -2.6910674571990967
    7. 'mean' → logprob: -3.9410674571990967
    8. 'average' → logprob: -4.691067695617676
    9. 'print' → logprob: -5.316067695617676
    10. 'avg' → logprob: -5.566067695617676

Token 204: ' Cré' (ID: 109203)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.7881312966346741
    2. 'm' → logprob: -1.0381312370300293
    3. 's' → logprob: -2.4131312370300293
    4. 'n' → logprob: -3.1631312370300293
    5. 'mean' → logprob: -3.4131312370300293
    6. 'sum' → logprob: -4.288131237030029
    7. '#' → logprob: -5.288131237030029
    8. 'average' → logprob: -6.288131237030029
    9. 'avg' → logprob: -6.663131237030029
    10. 'result' → logprob: -6.913131237030029

Token 205: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.06589146703481674
    2. 'er' → logprob: -3.0658915042877197
    3. '#' → logprob: -4.815891265869141
    4. 'ate' → logprob: -6.690891265869141
    5. 'at' → logprob: -6.815891265869141
    6. 'ating' → logprob: -6.940891265869141
    7. 'tion' → logprob: -7.565891265869141
    8. 'p' → logprob: -7.690891265869141
    9. 'ment' → logprob: -7.815891265869141
    10. 'd' → logprob: -7.940891265869141

Token 206: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.6405177712440491
    2. '(' → logprob: -1.2655177116394043
    3. 'd' → logprob: -2.2655177116394043
    4. '#' → logprob: -3.2655177116394043
    5. 'a' → logprob: -3.8905177116394043
    6. 's' → logprob: -4.640517711639404
    7. ' de' → logprob: -4.640517711639404
    8. 'b' → logprob: -5.765517711639404
    9. ' a' → logprob: -6.890517711639404
    10. '(
' → logprob: -7.265517711639404

Token 207: ''une' (ID: 13337)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6059702634811401
    2. 'e' → logprob: -1.8559702634811401
    3. ''' → logprob: -2.1059703826904297
    4. ''une' → logprob: -2.6059703826904297
    5. ''un' → logprob: -3.1059703826904297
    6. '_' → logprob: -3.6059703826904297
    7. ' a' → logprob: -4.98097038269043
    8. ' e' → logprob: -5.73097038269043
    9. ' la' → logprob: -5.85597038269043
    10. 'une' → logprob: -5.85597038269043

Token 208: ' deuxième' (ID: 51664)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.9072638750076294
    2. 'm' → logprob: -1.2822638750076294
    3. ' moyenne' → logprob: -2.28226375579834
    4. 'variable' → logprob: -3.15726375579834
    5. 'liste' → logprob: -3.15726375579834
    6. 'note' → logprob: -4.15726375579834
    7. ' b' → logprob: -4.53226375579834
    8. 'val' → logprob: -4.53226375579834
    9. 's' → logprob: -4.65726375579834
    10. 'a' → logprob: -4.78226375579834

Token 209: ' liste' (ID: 31719)
  Prédit: ' liste'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' liste' → logprob: -0.1916588842868805
    2. 'liste' → logprob: -2.0666589736938477
    3. '_' → logprob: -3.9416589736938477
    4. 'a' → logprob: -4.441658973693848
    5. ' a' → logprob: -4.566658973693848
    6. ' ' → logprob: -5.816658973693848
    7. ' list' → logprob: -7.316658973693848
    8. '_list' → logprob: -7.691658973693848
    9. 'list' → logprob: -7.691658973693848
    10. 's' → logprob: -8.191658973693848

Token 210: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00987106841057539
    2. ' b' → logprob: -5.134871006011963
    3. ',' → logprob: -6.384871006011963
    4. 'a' → logprob: -7.509871006011963
    5. '_b' → logprob: -7.509871006011963
    6. 's' → logprob: -8.009871482849121
    7. '(' → logprob: -8.134871482849121
    8. '[' → logprob: -9.009871482849121
    9. ' (' → logprob: -9.634871482849121
    10. '<|end|>' → logprob: -9.759871482849121

Token 211: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.034959323704242706
    2. 'a' → logprob: -3.409959316253662
    3. ' b' → logprob: -7.284959316253662
    4. 's' → logprob: -9.28495979309082
    5. ' a' → logprob: -9.90995979309082
    6. '[' → logprob: -10.03495979309082
    7. 'ceil' → logprob: -10.03495979309082
    8. 't' → logprob: -10.28495979309082
    9. 'm' → logprob: -10.28495979309082
    10. 'result' → logprob: -10.40995979309082

Token 212: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3641170859336853
    2. '=' → logprob: -1.23911714553833
    3. ']' → logprob: -4.23911714553833
    4. 'a' → logprob: -7.48911714553833
    5. '=[]' → logprob: -8.614116668701172
    6. '=[' → logprob: -8.989116668701172
    7. ' ' → logprob: -9.239116668701172
    8. 'b' → logprob: -9.989116668701172
    9. ']=' → logprob: -11.114116668701172
    10. ',' → logprob: -11.114116668701172

Token 213: ' à' (ID: 1221)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4747181832790375
    2. '=' → logprob: -0.9747182130813599
    3. '=[' → logprob: -7.97471809387207
    4. 'b' → logprob: -9.09971809387207
    5. '=[]' → logprob: -9.09971809387207
    6. ' =[' → logprob: -10.47471809387207
    7. '[' → logprob: -10.72471809387207
    8. 'a' → logprob: -11.47471809387207
    9. 's' → logprob: -12.97471809387207
    10. '=b' → logprob: -12.97471809387207

Token 214: ' partir' (ID: 12100)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5602179169654846
    2. '[a' → logprob: -0.9352179169654846
    3. '[int' → logprob: -4.18521785736084
    4. ' [' → logprob: -4.56021785736084
    5. '[]' → logprob: -5.68521785736084
    6. '[i' → logprob: -6.18521785736084
    7. '[len' → logprob: -6.31021785736084
    8. 'a' → logprob: -6.81021785736084
    9. '[b' → logprob: -7.43521785736084
    10. '[length' → logprob: -7.68521785736084

Token 215: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20377589762210846
    2. '[' → logprob: -2.8287758827209473
    3. ' a' → logprob: -2.8287758827209473
    4. '[a' → logprob: -2.9537758827209473
    5. '[int' → logprob: -4.828775882720947
    6. '(a' → logprob: -6.953775882720947
    7. '#' → logprob: -7.078775882720947
    8. ' [' → logprob: -7.203775882720947
    9. '[i' → logprob: -7.578775882720947
    10. '#a' → logprob: -7.703775882720947

Token 216: ' la' (ID: 557)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2531439960002899
    2. ' a' → logprob: -1.7531440258026123
    3. '[' → logprob: -4.253143787384033
    4. '[a' → logprob: -4.378143787384033
    5. ' [' → logprob: -4.378143787384033
    6. '[i' → logprob: -5.128143787384033
    7. '[int' → logprob: -5.878143787384033
    8. '[(' → logprob: -6.628143787384033
    9. ' la' → logprob: -8.753144264221191
    10. '[
' → logprob: -8.878144264221191

Token 217: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06153947860002518
    2. ' a' → logprob: -3.5615394115448
    3. '[' → logprob: -3.8115394115448
    4. '[a' → logprob: -5.561539649963379
    5. '[i' → logprob: -6.686539649963379
    6. '#' → logprob: -6.686539649963379
    7. ' [' → logprob: -7.936539649963379
    8. 'b' → logprob: -8.061539649963379
    9. '[
' → logprob: -8.061539649963379
    10. 'liste' → logprob: -8.311539649963379

Token 218: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003914307337254286
    2. ' a' → logprob: -5.6289143562316895
    3. '(a' → logprob: -9.128913879394531
    4. ''a' → logprob: -9.503913879394531
    5. '('' → logprob: -9.753913879394531
    6. '(' → logprob: -10.753913879394531
    7. '#' → logprob: -11.253913879394531
    8. ' '' → logprob: -11.628913879394531
    9. '`' → logprob: -12.253913879394531
    10. '[a' → logprob: -12.503913879394531

Token 219: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0002342912630410865
    2. ' a' → logprob: -8.375234603881836
    3. ''a' → logprob: -13.625234603881836
    4. '[a' → logprob: -13.875234603881836
    5. '(a' → logprob: -15.000234603881836
    6. '`' → logprob: -15.375234603881836
    7. ')' → logprob: -15.875234603881836
    8. '['' → logprob: -16.375234603881836
    9. '
' → logprob: -16.375234603881836
    10. '```' → logprob: -16.500234603881836

Token 220: ''.
' (ID: 49980)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14342132210731506
    2. ',' → logprob: -2.1434214115142822
    3. '[' → logprob: -4.768421173095703
    4. ']
' → logprob: -5.518421173095703
    5. ' ,' → logprob: -6.768421173095703
    6. 'a' → logprob: -7.393421173095703
    7. ' ]' → logprob: -8.143421173095703
    8. '[:-' → logprob: -8.143421173095703
    9. '[:' → logprob: -8.393421173095703
    10. '#' → logprob: -8.518421173095703

Token 221: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0877031534910202
    2. '[' → logprob: -2.837703227996826
    3. ' [' → logprob: -4.337703227996826
    4. ' b' → logprob: -4.837703227996826
    5. '[b' → logprob: -5.712703227996826
    6. '[i' → logprob: -7.712703227996826
    7. '[(' → logprob: -8.712702751159668
    8. '[
' → logprob: -9.212702751159668
    9. '[int' → logprob: -9.212702751159668
    10. '[a' → logprob: -9.462702751159668

Token 222: ' Chaque' (ID: 94758)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008538239635527134
    2. ' b' → logprob: -7.125854015350342
    3. 'for' → logprob: -10.750853538513184
    4. '[' → logprob: -11.250853538513184
    5. '#' → logprob: -12.250853538513184
    6. '[b' → logprob: -12.375853538513184
    7. ' [' → logprob: -13.625853538513184
    8. ' for' → logprob: -13.750853538513184
    9. 'a' → logprob: -13.875853538513184
    10. 'import' → logprob: -14.000853538513184

Token 223: ' élément' (ID: 99627)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.77740079164505
    2. 'x' → logprob: -1.0274007320404053
    3. '_' → logprob: -2.5274007320404053
    4. ' ' → logprob: -3.2774007320404053
    5. ' élément' → logprob: -4.902400970458984
    6. 'n' → logprob: -5.152400970458984
    7. ' i' → logprob: -5.277400970458984
    8. 'b' → logprob: -5.277400970458984
    9. ' element' → logprob: -5.402400970458984
    10. ' nombre' → logprob: -5.402400970458984

Token 224: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9954349398612976
    2. ' de' → logprob: -0.9954349398612976
    3. '_' → logprob: -2.3704349994659424
    4. ' in' → logprob: -3.3704349994659424
    5. ' a' → logprob: -3.9954349994659424
    6. ')' → logprob: -4.120434761047363
    7. ' =' → logprob: -4.120434761047363
    8. ' i' → logprob: -4.495434761047363
    9. ' ceil' → logprob: -4.745434761047363
    10. ' est' → logprob: -4.995434761047363

Token 225: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07179557532072067
    2. ' x' → logprob: -3.6967954635620117
    3. 'i' → logprob: -4.071795463562012
    4. 'a' → logprob: -4.071795463562012
    5. 'b' → logprob: -5.446795463562012
    6. 'elem' → logprob: -6.571795463562012
    7. ' i' → logprob: -6.696795463562012
    8. 'n' → logprob: -6.946795463562012
    9. ' a' → logprob: -7.196795463562012
    10. 'element' → logprob: -7.821795463562012

Token 226: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23642155528068542
    2. ''' → logprob: -1.7364215850830078
    3. 'in' → logprob: -4.611421585083008
    4. '+' → logprob: -5.361421585083008
    5. '**' → logprob: -5.361421585083008
    6. '*' → logprob: -5.736421585083008
    7. ' for' → logprob: -6.111421585083008
    8. ' en' → logprob: -6.111421585083008
    9. ' dans' → logprob: -6.236421585083008
    10. 'dans' → logprob: -7.236421585083008

Token 227: ' de' (ID: 334)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.21516717970371246
    2. ' de' → logprob: -2.215167284011841
    3. 'in' → logprob: -3.215167284011841
    4. ' for' → logprob: -3.965167284011841
    5. 'for' → logprob: -4.840167045593262
    6. ' dans' → logprob: -5.090167045593262
    7. 'de' → logprob: -5.590167045593262
    8. ' est' → logprob: -6.465167045593262
    9. 'dans' → logprob: -7.215167045593262
    10. ',' → logprob: -7.340167045593262

Token 228: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.20141655206680298
    2. ' a' → logprob: -1.7014164924621582
    3. ' ' → logprob: -13.576416969299316
    4. 'b' → logprob: -13.701416969299316
    5. '	a' → logprob: -15.701416969299316
    6. ''a' → logprob: -15.826416969299316
    7. ' b' → logprob: -15.951416969299316
    8. '_a' → logprob: -16.451416015625
    9. ' ' → logprob: -16.701416015625
    10. '[a' → logprob: -16.826416015625

Token 229: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.009756323881447315
    2. ' a' → logprob: -4.634756088256836
    3. ' ' → logprob: -16.259756088256836
    4. ''a' → logprob: -16.259756088256836
    5. '	a' → logprob: -17.259756088256836
    6. '_a' → logprob: -17.259756088256836
    7. '#a' → logprob: -18.009756088256836
    8. 'b' → logprob: -18.134756088256836
    9. ')a' → logprob: -18.259756088256836
    10. ' ' → logprob: -18.509756088256836

Token 230: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.027284711599349976
    2. ' in' → logprob: -4.652284622192383
    3. ' '' → logprob: -5.777284622192383
    4. ']' → logprob: -5.902284622192383
    5. ' est' → logprob: -6.027284622192383
    6. ']'' → logprob: -6.152284622192383
    7. ' for' → logprob: -7.027284622192383
    8. '**' → logprob: -7.027284622192383
    9. 'b' → logprob: -7.152284622192383
    10. ')' → logprob: -7.277284622192383

Token 231: ' est' (ID: 893)
  Prédit: ' est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' est' → logprob: -0.3095757067203522
    2. ',' → logprob: -2.9345757961273193
    3. ' sera' → logprob: -2.9345757961273193
    4. 'b' → logprob: -3.3095757961273193
    5. ' b' → logprob: -3.8095757961273193
    6. ' for' → logprob: -3.9345757961273193
    7. ']' → logprob: -4.18457555770874
    8. 'for' → logprob: -4.43457555770874
    9. ' in' → logprob: -4.80957555770874
    10. ')' → logprob: -5.43457555770874

Token 232: ' utilisé' (ID: 53138)
  Prédit: 'transform'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'transform' → logprob: -0.28091418743133545
    2. 'arr' → logprob: -2.780914306640625
    3. ' transform' → logprob: -2.905914306640625
    4. 'ceil' → logprob: -3.030914306640625
    5. ' multip' → logprob: -3.155914306640625
    6. 'multip' → logprob: -4.530914306640625
    7. ' arr' → logprob: -5.030914306640625
    8. 'div' → logprob: -5.155914306640625
    9. 'trans' → logprob: -5.280914306640625
    10. ' ceil' → logprob: -6.155914306640625

Token 233: ' ici' (ID: 27994)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.785467803478241
    2. ' dans' → logprob: -1.7854678630828857
    3. 'for' → logprob: -2.4104678630828857
    4. ' in' → logprob: -2.7854678630828857
    5. ' for' → logprob: -2.9104678630828857
    6. ' a' → logprob: -3.4104678630828857
    7. 'a' → logprob: -3.6604678630828857
    8. ' i' → logprob: -3.7854678630828857
    9. 'pour' → logprob: -3.9104678630828857
    10. ',' → logprob: -4.160467624664307

Token 234: '.
' (ID: 558)
  Prédit: ' pour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pour' → logprob: -0.4697217345237732
    2. 'pour' → logprob: -1.594721794128418
    3. 'for' → logprob: -2.969721794128418
    4. ' to' → logprob: -3.094721794128418
    5. ' for' → logprob: -3.719721794128418
    6. ' dans' → logprob: -4.469721794128418
    7. ' ' → logprob: -4.719721794128418
    8. ',' → logprob: -4.969721794128418
    9. 'dans' → logprob: -5.469721794128418
    10. 'to' → logprob: -5.594721794128418

Token 235: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.020813968032598495
    2. ' b' → logprob: -3.8958139419555664
    3. '[' → logprob: -8.645813941955566
    4. ' [' → logprob: -10.145813941955566
    5. '[i' → logprob: -10.395813941955566
    6. '[b' → logprob: -11.520813941955566
    7. '[
' → logprob: -12.645813941955566
    8. 'a' → logprob: -12.770813941955566
    9. 'i' → logprob: -13.020813941955566
    10. '#' → logprob: -13.020813941955566

Token 236: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.018215499818325043
    2. ' b' → logprob: -4.018215656280518
    3. '[' → logprob: -11.26821517944336
    4. 'a' → logprob: -11.51821517944336
    5. ' [' → logprob: -11.64321517944336
    6. '[i' → logprob: -11.89321517944336
    7. ' ' → logprob: -11.89321517944336
    8. 'i' → logprob: -12.14321517944336
    9. 'ceil' → logprob: -12.51821517944336
    10. ' i' → logprob: -13.14321517944336

Token 237: 'i' (ID: 72)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.016948968172073364
    2. 'b' → logprob: -4.26694917678833
    3. 'i' → logprob: -7.01694917678833
    4. 'a' → logprob: -7.76694917678833
    5. ' ceil' → logprob: -8.016948699951172
    6. '[i' → logprob: -8.016948699951172
    7. '(' → logprob: -8.391948699951172
    8. '[' → logprob: -8.516948699951172
    9. '(i' → logprob: -8.766948699951172
    10. 'float' → logprob: -10.641948699951172

Token 238: ' /' (ID: 820)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -1.015228509902954
    2. '*' → logprob: -1.890228509902954
    3. '**' → logprob: -2.015228509902954
    4. '+' → logprob: -2.265228509902954
    5. ' *' → logprob: -2.890228509902954
    6. ' for' → logprob: -3.015228509902954
    7. ' /' → logprob: -3.515228509902954
    8. ' +' → logprob: -3.515228509902954
    9. '//' → logprob: -3.890228509902954
    10. 'for' → logprob: -4.640228271484375

Token 239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.08022312819957733
    2. '3' → logprob: -3.0802230834960938
    3. ' ' → logprob: -3.5802230834960938
    4. '4' → logprob: -6.580223083496094
    5. '10' → logprob: -7.205223083496094
    6. '5' → logprob: -7.455223083496094
    7. '1' → logprob: -8.830223083496094
    8. '7' → logprob: -9.455223083496094
    9. '6' → logprob: -9.580223083496094
    10. '100' → logprob: -10.080223083496094

Token 240: '10' (ID: 702)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1029975488781929
    2. '3' → logprob: -2.4779975414276123
    3. '4' → logprob: -5.102997779846191
    4. ' ' → logprob: -5.727997779846191
    5. '5' → logprob: -6.227997779846191
    6. '10' → logprob: -6.977997779846191
    7. '7' → logprob: -7.727997779846191
    8. '6' → logprob: -8.102997779846191
    9. '1' → logprob: -8.227997779846191
    10. '8' → logprob: -8.852997779846191

Token 241: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13921654224395752
    2. ')'' → logprob: -3.514216423034668
    3. ' for' → logprob: -3.764216423034668
    4. '))' → logprob: -3.764216423034668
    5. ')]' → logprob: -4.514216423034668
    6. 'for' → logprob: -4.639216423034668
    7. '),' → logprob: -4.889216423034668
    8. ''' → logprob: -5.014216423034668
    9. ' )' → logprob: -5.139216423034668
    10. ')])' → logprob: -5.389216423034668

Token 242: ' :' (ID: 712)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9507898688316345
    2. 'for' → logprob: -1.2007899284362793
    3. ' for' → logprob: -1.2007899284362793
    4. '),' → logprob: -5.950789928436279
    5. ']' → logprob: -6.325789928436279
    6. ',' → logprob: -6.325789928436279
    7. ' pour' → logprob: -6.575789928436279
    8. ' ' → logprob: -6.950789928436279
    9. ' )' → logprob: -6.950789928436279
    10. '])' → logprob: -7.700789928436279

Token 243: ' on' (ID: 402)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.7816262245178223
    2. ' i' → logprob: -1.2816262245178223
    3. 'ceil' → logprob: -1.5316262245178223
    4. 'i' → logprob: -4.531626224517822
    5. ' [' → logprob: -4.531626224517822
    6. ' ' → logprob: -4.656626224517822
    7. '[i' → logprob: -4.781626224517822
    8. '[' → logprob: -6.406626224517822
    9. ' ' → logprob: -6.406626224517822
    10. ' a' → logprob: -6.781626224517822

Token 244: ' div' (ID: 4223)
  Prédit: 'div'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'div' → logprob: -0.6625204682350159
    2. ' div' → logprob: -0.7875204682350159
    3. ' ' → logprob: -4.787520408630371
    4. ' a' → logprob: -5.787520408630371
    5. ' calc' → logprob: -5.912520408630371
    6. ' divide' → logprob: -6.412520408630371
    7. ' ceil' → logprob: -6.537520408630371
    8. 'a' → logprob: -6.662520408630371
    9. 'ceil' → logprob: -6.662520408630371
    10. ' transforme' → logprob: -7.287520408630371

Token 245: 'ise' (ID: 1096)
  Prédit: 'ise'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ise' → logprob: -0.009092297405004501
    2. 'ide' → logprob: -4.759092330932617
    3. 'i' → logprob: -8.259092330932617
    4. 'isé' → logprob: -8.884092330932617
    5. 'ize' → logprob: -11.009092330932617
    6. 'iser' → logprob: -11.134092330932617
    7. ' i' → logprob: -11.509092330932617
    8. ')' → logprob: -11.759092330932617
    9. 'e' → logprob: -12.634092330932617
    10. 'de' → logprob: -12.884092330932617

Token 246: ' l' (ID: 305)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07889749854803085
    2. 'i' → logprob: -2.578897476196289
    3. ' ' → logprob: -12.328897476196289
    4. '(i' → logprob: -13.328897476196289
    5. '	i' → logprob: -14.828897476196289
    6. '[i' → logprob: -15.203897476196289
    7. ' ' → logprob: -15.703897476196289
    8. ' chaque' → logprob: -15.953897476196289
    9. 'a' → logprob: -16.45389747619629
    10. ')i' → logprob: -16.45389747619629

Token 247: ''ent' (ID: 53422)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5809680819511414
    2. 'i' → logprob: -0.8309680819511414
    3. ''i' → logprob: -5.955967903137207
    4. 'a' → logprob: -6.205967903137207
    5. ' ' → logprob: -8.830967903137207
    6. 'élé' → logprob: -9.205967903137207
    7. ''' → logprob: -10.330967903137207
    8. ' a' → logprob: -10.455967903137207
    9. '[i' → logprob: -10.705967903137207
    10. ' chaque' → logprob: -11.580967903137207

Token 248: 'ier' (ID: 905)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8380986452102661
    2. 'ier' → logprob: -1.0880986452102661
    3. ' i' → logprob: -2.0880985260009766
    4. 'ière' → logprob: -3.2130985260009766
    5. 'rée' → logprob: -3.9630985260009766
    6. 'a' → logprob: -4.338098526000977
    7. 't' → logprob: -4.588098526000977
    8. 'er' → logprob: -4.713098526000977
    9. 'range' → logprob: -5.963098526000977
    10. 'iers' → logprob: -6.213098526000977

Token 249: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.04710892587900162
    2. 'i' → logprob: -3.1721088886260986
    3. ' ' → logprob: -6.172109127044678
    4. '(i' → logprob: -7.047109127044678
    5. ' par' → logprob: -7.297109127044678
    6. 'a' → logprob: -8.17210865020752
    7. ' a' → logprob: -9.17210865020752
    8. 'par' → logprob: -10.92210865020752
    9. '[i' → logprob: -11.29710865020752
    10. '  ' → logprob: -11.54710865020752

Token 250: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858805239200592
    2. ' i' → logprob: -3.0485880374908447
    3. ' ' → logprob: -15.173587799072266
    4. 'a' → logprob: -15.423587799072266
    5. '	i' → logprob: -16.798587799072266
    6. '(i' → logprob: -16.798587799072266
    7. ''i' → logprob: -17.423587799072266
    8. '<|end|>' → logprob: -18.173587799072266
    9. '_i' → logprob: -18.798587799072266
    10. 'I' → logprob: -19.048587799072266

Token 251: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25068145990371704
    2. ' par' → logprob: -1.7506814002990723
    3. ' ' → logprob: -4.375681400299072
    4. ' )' → logprob: -4.750681400299072
    5. ' by' → logprob: -5.000681400299072
    6. ',' → logprob: -5.375681400299072
    7. ' pour' → logprob: -5.875681400299072
    8. ' i' → logprob: -6.000681400299072
    9. 'par' → logprob: -6.125681400299072
    10. ' for' → logprob: -6.750681400299072

Token 252: ' par' (ID: 686)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.422002911567688
    2. ' par' → logprob: -1.422002911567688
    3. 'for' → logprob: -1.422002911567688
    4. ')' → logprob: -1.797002911567688
    5. ' by' → logprob: -3.5470027923583984
    6. 'par' → logprob: -3.7970027923583984
    7. ' pour' → logprob: -3.7970027923583984
    8. ',' → logprob: -4.422002792358398
    9. ' ' → logprob: -4.797002792358398
    10. 'pour' → logprob: -5.297002792358398

Token 253: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.03804333135485649
    2. ' ' → logprob: -3.288043260574341
    3. '1' → logprob: -13.413043022155762
    4. ' ' → logprob: -15.413043022155762
    5. '```' → logprob: -16.788043975830078
    6. '
' → logprob: -17.038043975830078
    7. 'd' → logprob: -17.163043975830078
    8. '<|end|>' → logprob: -18.663043975830078
    9. '  ' → logprob: -18.788043975830078
    10. ' 
' → logprob: -18.913043975830078

Token 254: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00038038729690015316
    2. ' ' → logprob: -7.875380516052246
    3. '1' → logprob: -15.250380516052246
    4. 'd' → logprob: -18.87537956237793
    5. '```' → logprob: -19.37537956237793
    6. ' ' → logprob: -19.50037956237793
    7. '  ' → logprob: -19.75037956237793
    8. 'l' → logprob: -19.87537956237793
    9. '۱۰' → logprob: -20.87537956237793
    10. '   ' → logprob: -21.12537956237793

Token 255: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5701373219490051
    2. 'for' → logprob: -1.1951372623443604
    3. ' for' → logprob: -2.1951372623443604
    4. ',' → logprob: -4.8201375007629395
    5. ']' → logprob: -5.0701375007629395
    6. '),' → logprob: -6.6951375007629395
    7. ' ' → logprob: -6.6951375007629395
    8. ' pour' → logprob: -7.0701375007629395
    9. '])' → logprob: -7.4451375007629395
    10. '   ' → logprob: -7.5701375007629395

Token 256: ' ce' (ID: 2357)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.2573487758636475
    2. ' ' → logprob: -1.6323487758636475
    3. 'ceil' → logprob: -1.6323487758636475
    4. ' ceil' → logprob: -2.1323487758636475
    5. 'end' → logprob: -3.0073487758636475
    6. '0' → logprob: -3.6323487758636475
    7. ' end' → logprob: -4.007349014282227
    8. '1' → logprob: -4.132349014282227
    9. ')' → logprob: -4.507349014282227
    10. 'ce' → logprob: -4.757349014282227

Token 257: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.2999308109283447
    2. 'qui' → logprob: -1.7999308109283447
    3. 'space' → logprob: -3.4249308109283447
    4. '#' → logprob: -4.299930572509766
    5. ' espace' → logprob: -4.674930572509766
    6. ' space' → logprob: -4.674930572509766
    7. ''' → logprob: -5.174930572509766
    8. ')' → logprob: -5.674930572509766
    9. ' ' → logprob: -5.924930572509766
    10. ''espace' → logprob: -5.924930572509766

Token 258: ' donne' (ID: 30004)
  Prédit: ' donne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donne' → logprob: -0.9521336555480957
    2. ' est' → logprob: -1.4521336555480957
    3. ' crée' → logprob: -1.9521336555480957
    4. ')' → logprob: -3.0771336555480957
    5. ' revient' → logprob: -3.2021336555480957
    6. ',' → logprob: -3.3271336555480957
    7. ' ren' → logprob: -3.5771336555480957
    8. ' )' → logprob: -4.077133655548096
    9. ' signifie' → logprob: -4.577133655548096
    10. ' permet' → logprob: -5.077133655548096

Token 259: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.03998422250151634
    2. 'un' → logprob: -3.4149842262268066
    3. ' une' → logprob: -5.289984226226807
    4. 'a' → logprob: -6.914984226226807
    5. 'une' → logprob: -8.539983749389648
    6. ' a' → logprob: -10.414983749389648
    7. ''un' → logprob: -10.789983749389648
    8. 'f' → logprob: -11.914983749389648
    9. '	un' → logprob: -12.414983749389648
    10. ' ' → logprob: -12.539983749389648

Token 260: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.5133973360061646
    2. ' nombre' → logprob: -1.3883973360061646
    3. 'float' → logprob: -2.763397216796875
    4. ' float' → logprob: -3.013397216796875
    5. ' flott' → logprob: -3.263397216796875
    6. 'fl' → logprob: -7.513397216796875
    7. 'n' → logprob: -8.763397216796875
    8. 'e' → logprob: -8.888397216796875
    9. ' nombres' → logprob: -9.388397216796875
    10. 'a' → logprob: -9.513397216796875

Token 261: ' flott' (ID: 108700)
  Prédit: ' flott'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flott' → logprob: -0.04713713005185127
    2. ' à' → logprob: -3.5471370220184326
    3. ' float' → logprob: -5.047137260437012
    4. '.' → logprob: -5.922137260437012
    5. ' a' → logprob: -5.922137260437012
    6. 'a' → logprob: -6.797137260437012
    7. 'fl' → logprob: -7.172137260437012
    8. 'float' → logprob: -7.297137260437012
    9. 'à' → logprob: -7.547137260437012
    10. ' réel' → logprob: -7.797137260437012

Token 262: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.0006130746915005147
    2. 'ante' → logprob: -8.37561321258545
    3. 'é' → logprob: -9.50061321258545
    4. 'uant' → logprob: -9.62561321258545
    5. 'point' → logprob: -10.00061321258545
    6. 'antt' → logprob: -10.00061321258545
    7. '-point' → logprob: -10.62561321258545
    8. 'ants' → logprob: -10.62561321258545
    9. 'nant' → logprob: -10.87561321258545
    10. 'issant' → logprob: -11.12561321258545

Token 263: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4136393666267395
    2. ' for' → logprob: -2.4136393070220947
    3. 'b' → logprob: -2.7886393070220947
    4. 'for' → logprob: -2.7886393070220947
    5. 'a' → logprob: -3.2886393070220947
    6. ']' → logprob: -4.163639545440674
    7. ' ,' → logprob: -4.288639545440674
    8. ' b' → logprob: -4.538639545440674
    9. '   ' → logprob: -4.538639545440674
    10. '[' → logprob: -4.788639545440674

Token 264: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03206753730773926
    2. ' b' → logprob: -3.5320675373077393
    3. '[' → logprob: -6.78206729888916
    4. ' [' → logprob: -7.40706729888916
    5. ',' → logprob: -8.15706729888916
    6. '   ' → logprob: -9.78206729888916
    7. ']' → logprob: -10.15706729888916
    8. 'a' → logprob: -10.40706729888916
    9. ' ,' → logprob: -10.40706729888916
    10. ' for' → logprob: -10.78206729888916

Token 265: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.16167181730270386
    2. ' b' → logprob: -1.9116718769073486
    3. '[' → logprob: -7.1616716384887695
    4. ' [' → logprob: -8.28667163848877
    5. 'ceil' → logprob: -8.66167163848877
    6. ' ' → logprob: -9.91167163848877
    7. '[b' → logprob: -9.91167163848877
    8. ' ceil' → logprob: -10.53667163848877
    9. 'a' → logprob: -10.78667163848877
    10. '#' → logprob: -10.78667163848877

Token 266: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.0006528667290695012
    2. ' ceil' → logprob: -7.50065279006958
    3. '[' → logprob: -9.375653266906738
    4. 'b' → logprob: -12.125653266906738
    5. 'a' → logprob: -12.750653266906738
    6. '[i' → logprob: -13.500653266906738
    7. 'int' → logprob: -13.625653266906738
    8. '[]' → logprob: -14.375653266906738
    9. '.ceil' → logprob: -14.500653266906738
    10. '   ' → logprob: -14.875653266906738

Token 267: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03157515823841095
    2. '(' → logprob: -3.5315752029418945
    3. '('' → logprob: -6.4065752029418945
    4. '()' → logprob: -9.531575202941895
    5. ''' → logprob: -10.031575202941895
    6. '((' → logprob: -10.406575202941895
    7. ')'' → logprob: -12.406575202941895
    8. ' (' → logprob: -12.781575202941895
    9. '(x' → logprob: -13.156575202941895
    10. '(',' → logprob: -13.281575202941895

Token 268: ' /' (ID: 820)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.7322849035263062
    2. '(' → logprob: -1.2322849035263062
    3. '/' → logprob: -1.9822849035263062
    4. ' /' → logprob: -2.8572850227355957
    5. ')' → logprob: -3.4822850227355957
    6. ' (' → logprob: -7.732285022735596
    7. '/i' → logprob: -7.857285022735596
    8. ' ' → logprob: -8.107284545898438
    9. ' )' → logprob: -9.107284545898438
    10. '(/' → logprob: -9.232284545898438

Token 269: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013273799559101462
    2. ' ' → logprob: -6.6263275146484375
    3. ')' → logprob: -13.751327514648438
    4. '  ' → logprob: -16.126327514648438
    5. '
' → logprob: -16.251327514648438
    6. '```' → logprob: -16.501327514648438
    7. '1' → logprob: -16.876327514648438
    8. '   ' → logprob: -17.376327514648438
    9. ' ' → logprob: -17.688827514648438
    10. '  
' → logprob: -18.313827514648438

Token 270: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.176947600673884e-05
    2. ' ' → logprob: -10.750021934509277
    3. '1' → logprob: -17.37502098083496
    4. ')' → logprob: -17.50002098083496
    5. '```' → logprob: -17.50002098083496
    6. '  ' → logprob: -17.62502098083496
    7. '۱۰' → logprob: -18.25002098083496
    8. '
' → logprob: -19.00002098083496
    9. '   ' → logprob: -19.06252098083496
    10. '' → logprob: -19.12502098083496

Token 271: ')'' (ID: 45517)
  Prédit: ')''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')'' → logprob: -0.2324427217245102
    2. ')' → logprob: -1.7324427366256714
    3. '))' → logprob: -3.857442617416382
    4. ')]' → logprob: -5.107442855834961
    5. '())' → logprob: -6.232442855834961
    6. ' )' → logprob: -7.607442855834961
    7. ')`' → logprob: -7.857442855834961
    8. '()' → logprob: -9.232442855834961
    9. ')}' → logprob: -9.232442855834961
    10. '')' → logprob: -10.107442855834961

Token 272: ' :' (ID: 712)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.43775323033332825
    2. 'for' → logprob: -1.0627532005310059
    3. ')' → logprob: -4.937753200531006
    4. ' pour' → logprob: -6.937753200531006
    5. ']' → logprob: -8.062753677368164
    6. ' ' → logprob: -8.312753677368164
    7. 'pour' → logprob: -8.937753677368164
    8. ':' → logprob: -10.062753677368164
    9. '])' → logprob: -10.312753677368164
    10. ' )' → logprob: -10.812753677368164

Token 273: ' on' (ID: 402)
  Prédit: ' ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceil' → logprob: -0.11422540992498398
    2. 'ceil' → logprob: -2.239225387573242
    3. ' ' → logprob: -7.739225387573242
    4. ' on' → logprob: -7.739225387573242
    5. ' ce' → logprob: -8.989225387573242
    6. ' ' → logprob: -9.739225387573242
    7. ' a' → logprob: -9.864225387573242
    8. ' b' → logprob: -10.114225387573242
    9. ' int' → logprob: -10.239225387573242
    10. 'b' → logprob: -10.739225387573242

Token 274: ' applique' (ID: 180579)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.807634711265564
    2. ' applique' → logprob: -1.307634711265564
    3. ' transforme' → logprob: -2.9326348304748535
    4. ' ceil' → logprob: -3.1826348304748535
    5. ' arr' → logprob: -3.3076348304748535
    6. ')' → logprob: -3.4326348304748535
    7. 'arr' → logprob: -3.6826348304748535
    8. ' utilise' → logprob: -4.1826348304748535
    9. 'app' → logprob: -4.3076348304748535
    10. 'ap' → logprob: -4.4326348304748535

Token 275: ' la' (ID: 557)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.5221930146217346
    2. '(' → logprob: -1.5221929550170898
    3. ' ceil' → logprob: -2.14719295501709
    4. 'la' → logprob: -3.27219295501709
    5. ' la' → logprob: -3.52219295501709
    6. ' ' → logprob: -6.77219295501709
    7. ')' → logprob: -7.14719295501709
    8. 'ce' → logprob: -7.39719295501709
    9. 'l' → logprob: -7.77219295501709
    10. 'cel' → logprob: -8.02219295501709

Token 276: ' fonction' (ID: 17610)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.335397332906723
    2. ' ceil' → logprob: -1.5853973627090454
    3. ' fonction' → logprob: -2.835397243499756
    4. 'fonction' → logprob: -4.085397243499756
    5. ' function' → logprob: -5.585397243499756
    6. ' ceiling' → logprob: -8.710397720336914
    7. 'function' → logprob: -8.710397720336914
    8. '.ceil' → logprob: -9.460397720336914
    9. 'ce' → logprob: -9.835397720336914
    10. ' ' → logprob: -10.085397720336914

Token 277: ' '' (ID: 461)
  Prédit: 'ceil'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.02212403528392315
    2. ' ceil' → logprob: -3.8971240520477295
    3. '(' → logprob: -6.52212381362915
    4. '.ceil' → logprob: -10.022124290466309
    5. '`' → logprob: -11.147124290466309
    6. 'cel' → logprob: -11.272124290466309
    7. 'ce' → logprob: -12.022124290466309
    8. '()' → logprob: -12.647124290466309
    9. ''' → logprob: -12.709624290466309
    10. ' ' → logprob: -12.834624290466309

Token 278: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -0.001931970240548253
    2. ' ceil' → logprob: -6.251932144165039
    3. 'cel' → logprob: -13.251932144165039
    4. '.ceil' → logprob: -13.876932144165039
    5. ')' → logprob: -15.376932144165039
    6. 'cei' → logprob: -16.37693214416504
    7. 'ce' → logprob: -16.50193214416504
    8. ' ' → logprob: -16.87693214416504
    9. ' ' → logprob: -17.25193214416504
    10. '`' → logprob: -17.75193214416504

Token 279: ''' (ID: 6)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.5701599717140198
    2. ')' → logprob: -1.445159912109375
    3. ')'' → logprob: -1.820159912109375
    4. '(' → logprob: -3.945159912109375
    5. '()' → logprob: -4.695159912109375
    6. ''' → logprob: -5.445159912109375
    7. ' )' → logprob: -6.570159912109375
    8. '('' → logprob: -7.445159912109375
    9. '())' → logprob: -7.445159912109375
    10. '')' → logprob: -7.570159912109375

Token 280: ' pour' (ID: 1930)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7126039862632751
    2. '(i' → logprob: -0.7126039862632751
    3. ' pour' → logprob: -4.46260404586792
    4. ' à' → logprob: -5.83760404586792
    5. ')' → logprob: -6.83760404586792
    6. '()' → logprob: -7.58760404586792
    7. ' (' → logprob: -7.71260404586792
    8. 'pour' → logprob: -7.71260404586792
    9. '(
' → logprob: -7.96260404586792
    10. ' afin' → logprob: -8.087603569030762

Token 281: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.18455079197883606
    2. ' arr' → logprob: -1.8095507621765137
    3. ' obtenir' → logprob: -5.559550762176514
    4. 'ob' → logprob: -7.059550762176514
    5. 'obt' → logprob: -11.559551239013672
    6. ' ' → logprob: -11.934551239013672
    7. 'arro' → logprob: -11.934551239013672
    8. 'arra' → logprob: -12.184551239013672
    9. 'avoir' → logprob: -12.184551239013672
    10. ' chaque' → logprob: -12.309551239013672

Token 282: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -2.45848218582978e-06
    2. 'ondi' → logprob: -13.50000286102295
    3. 'on' → logprob: -14.25000286102295
    4. 'onder' → logprob: -15.87500286102295
    5. 'ondissement' → logprob: -16.250001907348633
    6. 'онд' → logprob: -17.000001907348633
    7. 'o' → logprob: -18.500001907348633
    8. '

' → logprob: -18.750001907348633
    9. ' ond' → logprob: -19.750001907348633
    10. '>' → logprob: -20.375001907348633

Token 283: 'ir' (ID: 380)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.013313638977706432
    2. 'er' → logprob: -4.6383137702941895
    3. 'ir' → logprob: -5.8883137702941895
    4. '(' → logprob: -7.5133137702941895
    5. 'ond' → logprob: -9.013313293457031
    6. '(-' → logprob: -11.388313293457031
    7. 'u' → logprob: -11.513313293457031
    8. 'r' → logprob: -11.763313293457031
    9. 'd' → logprob: -11.763313293457031
    10. 's' → logprob: -12.138313293457031

Token 284: ' '' (ID: 461)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.40552109479904175
    2. '(i' → logprob: -1.1555211544036865
    3. ' (' → logprob: -5.030520915985107
    4. ' à' → logprob: -5.405520915985107
    5. ' le' → logprob: -5.905520915985107
    6. ' ce' → logprob: -7.280520915985107
    7. 'à' → logprob: -7.530520915985107
    8. ' au' → logprob: -7.780520915985107
    9. 'ce' → logprob: -7.905520915985107
    10. 'le' → logprob: -8.030521392822266

Token 285: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.03111940436065197
    2. '(' → logprob: -3.7811193466186523
    3. 'ceil' → logprob: -6.031119346618652
    4. ' (' → logprob: -6.156119346618652
    5. 'i' → logprob: -6.781119346618652
    6. ' i' → logprob: -7.281119346618652
    7. ' ceil' → logprob: -7.531119346618652
    8. ' ' → logprob: -8.156119346618652
    9. ')' → logprob: -8.406119346618652
    10. 'l' → logprob: -9.531119346618652

Token 286: ' /' (ID: 820)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.32947343587875366
    2. ' /' → logprob: -1.7044734954833984
    3. '/' → logprob: -2.5794734954833984
    4. '(' → logprob: -3.8294734954833984
    5. ')' → logprob: -7.579473495483398
    6. ' (' → logprob: -8.454473495483398
    7. '/i' → logprob: -8.579473495483398
    8. ' ' → logprob: -9.454473495483398
    9. '   ' → logprob: -10.454473495483398
    10. '[i' → logprob: -10.579473495483398

Token 287: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.05488431453704834
    2. ' ' → logprob: -2.929884433746338
    3. ')' → logprob: -13.42988395690918
    4. '1' → logprob: -15.55488395690918
    5. ' )' → logprob: -15.67988395690918
    6. '')' → logprob: -17.42988395690918
    7. ' ' → logprob: -17.42988395690918
    8. '  ' → logprob: -17.80488395690918
    9. '(' → logprob: -17.86738395690918
    10. '
' → logprob: -18.17988395690918

Token 288: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021859495900571346
    2. ' ' → logprob: -6.127185821533203
    3. '1' → logprob: -14.752185821533203
    4. ')' → logprob: -15.002185821533203
    5. '```' → logprob: -16.752185821533203
    6. '
' → logprob: -16.877185821533203
    7. ' )' → logprob: -17.627185821533203
    8. '   ' → logprob: -17.877185821533203
    9. '  ' → logprob: -18.377185821533203
    10. '100' → logprob: -18.627185821533203

Token 289: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00542964693158865
    2. ' )' → logprob: -5.505429744720459
    3. '))' → logprob: -7.505429744720459
    4. ')]' → logprob: -7.630429744720459
    5. ')`' → logprob: -9.3804292678833
    6. ')}' → logprob: -9.6304292678833
    7. ')'' → logprob: -10.1304292678833
    8. ')+' → logprob: -10.5054292678833
    9. '),' → logprob: -10.6304292678833
    10. ')**' → logprob: -11.2554292678833

Token 290: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08571507781744003
    2. ' for' → logprob: -2.7107150554656982
    3. 'for' → logprob: -4.960715293884277
    4. ')]' → logprob: -5.460715293884277
    5. ']' → logprob: -6.585715293884277
    6. ' )' → logprob: -7.335715293884277
    7. '   ' → logprob: -7.335715293884277
    8. '])' → logprob: -7.585715293884277
    9. ',' → logprob: -8.210715293884277
    10. '),' → logprob: -8.710715293884277

Token 291: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.1751183569431305
    2. 'l' → logprob: -1.925118327140808
    3. ')' → logprob: -4.425118446350098
    4. ' )' → logprob: -7.175118446350098
    5. '<|end|>' → logprob: -7.300118446350098
    6. ' ' → logprob: -7.675118446350098
    7. ' la' → logprob: -7.925118446350098
    8. 's' → logprob: -9.175118446350098
    9. 'sup' → logprob: -10.050118446350098
    10. '>' → logprob: -10.050118446350098

Token 292: ''ent' (ID: 53422)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.32786574959754944
    2. ''ent' → logprob: -1.827865719795227
    3. ''' → logprob: -3.0778658390045166
    4. 'l' → logprob: -3.2028658390045166
    5. ' ' → logprob: -4.7028656005859375
    6. ''un' → logprob: -5.0778656005859375
    7. '  ' → logprob: -5.8278656005859375
    8. '   ' → logprob: -5.8278656005859375
    9. ''l' → logprob: -6.3278656005859375
    10. 'e' → logprob: -6.9528656005859375

Token 293: 'ier' (ID: 905)
  Prédit: 'ier'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ier' → logprob: -2.5941604690160602e-05
    2. 'er' → logprob: -11.000025749206543
    3. '#' → logprob: -12.750025749206543
    4. '   ' → logprob: -13.250025749206543
    5. '  ' → logprob: -14.250025749206543
    6. ' ier' → logprob: -14.250025749206543
    7. 'i' → logprob: -14.500025749206543
    8. 'érieur' → logprob: -14.875025749206543
    9. '1' → logprob: -15.000025749206543
    10. ' ' → logprob: -15.375025749206543

Token 294: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.046789657324552536
    2. ')' → logprob: -3.9217896461486816
    3. 'sup' → logprob: -4.046789646148682
    4. ' sup' → logprob: -5.046789646148682
    5. ' )' → logprob: -7.546789646148682
    6. ' super' → logprob: -7.671789646148682
    7. 'super' → logprob: -7.921789646148682
    8. ' supérieure' → logprob: -8.42179012298584
    9. '_sup' → logprob: -8.67179012298584
    10. ' superior' → logprob: -9.67179012298584

Token 295: ' le' (ID: 505)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24463734030723572
    2. '()' → logprob: -2.4946372509002686
    3. ')]' → logprob: -2.6196372509002686
    4. '(i' → logprob: -3.9946372509002686
    5. '()]' → logprob: -4.369637489318848
    6. '(' → logprob: -4.494637489318848
    7. '())' → logprob: -4.869637489318848
    8. ' )' → logprob: -5.369637489318848
    9. ']' → logprob: -6.119637489318848
    10. '   ' → logprob: -6.869637489318848

Token 296: ' plus' (ID: 2932)
  Prédit: 'plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'plus' → logprob: -0.0627477765083313
    2. ' plus' → logprob: -2.8127477169036865
    3. '+' → logprob: -8.187747955322266
    4. 'pro' → logprob: -8.562747955322266
    5. '_plus' → logprob: -9.187747955322266
    6. 'pl' → logprob: -9.187747955322266
    7. '```' → logprob: -10.687747955322266
    8. 'près' → logprob: -11.187747955322266
    9. '.plus' → logprob: -11.937747955322266
    10. 'most' → logprob: -12.187747955322266

Token 297: ' proche' (ID: 61089)
  Prédit: 'pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pro' → logprob: -0.0009317061631008983
    2. 'prox' → logprob: -7.375931739807129
    3. 'près' → logprob: -8.500931739807129
    4. '```' → logprob: -9.875931739807129
    5. ' proche' → logprob: -10.875931739807129
    6. 'proc' → logprob: -11.125931739807129
    7. 'plus' → logprob: -11.750931739807129
    8. 'pr' → logprob: -13.000931739807129
    9. ')' → logprob: -13.875931739807129
    10. 'Pro' → logprob: -14.000931739807129

Token 298: '.
' (ID: 558)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47797322273254395
    2. 'for' → logprob: -1.852973222732544
    3. ']' → logprob: -2.102973222732544
    4. ')' → logprob: -2.602973222732544
    5. '   ' → logprob: -3.852973222732544
    6. ')]' → logprob: -6.102972984313965
    7. ',' → logprob: -6.352972984313965
    8. ' ]' → logprob: -7.352972984313965
    9. '])' → logprob: -7.852972984313965
    10. ' ' → logprob: -8.602972984313965

Token 299: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -7.896309739408025e-07
    2. ' b' → logprob: -14.125000953674316
    3. ']
' → logprob: -18.0
    4. ']' → logprob: -19.25
    5. '
' → logprob: -20.125
    6. ')b' → logprob: -22.125
    7. '#' → logprob: -22.875
    8. ',' → logprob: -23.5
    9. ')
' → logprob: -23.625
    10. ']

' → logprob: -23.875

Token 300: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.935296834039036e-06
    2. ' b' → logprob: -12.75000286102295
    3. ')b' → logprob: -18.500003814697266
    4. '
' → logprob: -19.500003814697266
    5. '```' → logprob: -19.625003814697266
    6. '#' → logprob: -19.625003814697266
    7. ' ' → logprob: -20.250003814697266
    8. '  
' → logprob: -20.375003814697266
    9. ')' → logprob: -20.500003814697266
    10. ']' → logprob: -20.625003814697266

Token 301: 'ceil' (ID: 43552)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10802687704563141
    2. 'ceil' → logprob: -2.3580269813537598
    3. ' b' → logprob: -6.35802698135376
    4. '[i' → logprob: -6.73302698135376
    5. '[' → logprob: -6.73302698135376
    6. 'int' → logprob: -6.98302698135376
    7. ' ceil' → logprob: -6.98302698135376
    8. 'i' → logprob: -7.73302698135376
    9. '[b' → logprob: -7.85802698135376
    10. '[int' → logprob: -8.358026504516602

Token 302: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.00032259183353744447
    2. '(' → logprob: -8.125322341918945
    3. '((' → logprob: -11.750322341918945
    4. ' (' → logprob: -12.500322341918945
    5. ')' → logprob: -13.000322341918945
    6. '(a' → logprob: -13.500322341918945
    7. ']' → logprob: -13.750322341918945
    8. '(x' → logprob: -13.875322341918945
    9. '(
' → logprob: -13.875322341918945
    10. 's' → logprob: -14.250322341918945

Token 303: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.09164555370807648
    2. '/' → logprob: -2.4666454792022705
    3. ')' → logprob: -5.96664571762085
    4. ' ' → logprob: -9.841645240783691
    5. ' )' → logprob: -10.216645240783691
    6. '(i' → logprob: -11.341645240783691
    7. '(' → logprob: -11.591645240783691
    8. ')/' → logprob: -11.716645240783691
    9. ' /
' → logprob: -12.216645240783691
    10. ' ' → logprob: -13.091645240783691

Token 304: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.005237668287009001
    2. ' ' → logprob: -5.255237579345703
    3. ')' → logprob: -13.005237579345703
    4. 'b' → logprob: -14.880237579345703
    5. '```' → logprob: -15.755237579345703
    6. '   ' → logprob: -15.880237579345703
    7. '  ' → logprob: -15.942737579345703
    8. ' b' → logprob: -16.192737579345703
    9. '1' → logprob: -16.255237579345703
    10. 'i' → logprob: -16.380237579345703

Token 305: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.3213025744771585e-05
    2. ' ' → logprob: -10.375033378601074
    3. ')' → logprob: -13.750033378601074
    4. '```' → logprob: -15.937533378601074
    5. '1' → logprob: -16.000032424926758
    6. '
' → logprob: -16.562532424926758
    7. '۱۰' → logprob: -17.062532424926758
    8. '  ' → logprob: -17.187532424926758
    9. 'a' → logprob: -17.312532424926758
    10. '   ' → logprob: -17.375032424926758

Token 306: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015598179015796632
    2. ')]' → logprob: -9.00015640258789
    3. ')'' → logprob: -11.87515640258789
    4. ' )' → logprob: -11.87515640258789
    5. ')+' → logprob: -12.12515640258789
    6. '))' → logprob: -12.50015640258789
    7. ')
' → logprob: -13.12515640258789
    8. 'for' → logprob: -13.37515640258789
    9. ')`' → logprob: -13.50015640258789
    10. ']' → logprob: -14.00015640258789

Token 307: ' *' (ID: 425)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6330496668815613
    2. ' for' → logprob: -0.7580496668815613
    3. ' ' → logprob: -8.508049964904785
    4. ')' → logprob: -9.508049964904785
    5. ' pour' → logprob: -9.758049964904785
    6. ' f' → logprob: -10.508049964904785
    7. '+' → logprob: -10.758049964904785
    8. '*' → logprob: -11.258049964904785
    9. 'pour' → logprob: -11.258049964904785
    10. ']' → logprob: -11.383049964904785

Token 308: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.04862460866570473
    2. ' ' → logprob: -3.0486245155334473
    3. '100' → logprob: -11.173624992370605
    4. '1' → logprob: -11.548624992370605
    5. '5' → logprob: -12.298624992370605
    6. '20' → logprob: -12.798624992370605
    7. '2' → logprob: -13.236124992370605
    8. '15' → logprob: -14.173624992370605
    9. '12' → logprob: -14.548624992370605
    10. '3' → logprob: -15.048624992370605

Token 309: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -8.542423165636137e-05
    2. ' ' → logprob: -9.875085830688477
    3. '100' → logprob: -11.250085830688477
    4. '1' → logprob: -11.625085830688477
    5. '5' → logprob: -13.000085830688477
    6. '20' → logprob: -13.437585830688477
    7. '2' → logprob: -13.625085830688477
    8. '3' → logprob: -14.062585830688477
    9. '30' → logprob: -14.437585830688477
    10. '15' → logprob: -14.437585830688477

Token 310: ''' (ID: 6)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.28678253293037415
    2. 'for' → logprob: -1.4117825031280518
    3. ']' → logprob: -5.411782741546631
    4. ')' → logprob: -6.911782741546631
    5. ',' → logprob: -10.411782264709473
    6. '])' → logprob: -10.661782264709473
    7. ' ' → logprob: -10.661782264709473
    8. ' ]' → logprob: -10.661782264709473
    9. ' pour' → logprob: -10.786782264709473
    10. ')]' → logprob: -11.536782264709473

Token 311: ' :' (ID: 712)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5232342481613159
    2. 'for' → logprob: -0.8982342481613159
    3. ' ' → logprob: -10.523234367370605
    4. ']' → logprob: -10.523234367370605
    5. ' pour' → logprob: -10.648234367370605
    6. ',' → logprob: -11.148234367370605
    7. '[' → logprob: -12.648234367370605
    8. '   ' → logprob: -12.773234367370605
    9. ')' → logprob: -12.773234367370605
    10. 'a' → logprob: -13.148234367370605

Token 312: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.022100254893302917
    2. ' a' → logprob: -5.397100448608398
    3. 'on' → logprob: -5.897100448608398
    4. 'On' → logprob: -5.897100448608398
    5. ' b' → logprob: -6.022100448608398
    6. ' On' → logprob: -6.272100448608398
    7. ' ' → logprob: -6.397100448608398
    8. ' for' → logprob: -6.397100448608398
    9. ' i' → logprob: -7.022100448608398
    10. ' [' → logprob: -7.147100448608398

Token 313: ' multipl' (ID: 44269)
  Prédit: ' multipl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' multipl' → logprob: -0.23431479930877686
    2. ' crée' → logprob: -3.2343149185180664
    3. ' permet' → logprob: -3.4843149185180664
    4. ' rem' → logprob: -3.6093149185180664
    5. ' revient' → logprob: -3.7343149185180664
    6. ' arr' → logprob: -4.109314918518066
    7. ' retourne' → logprob: -4.484314918518066
    8. ' transforme' → logprob: -4.484314918518066
    9. 'mult' → logprob: -4.734314918518066
    10. ' calc' → logprob: -5.234314918518066

Token 314: 'ie' (ID: 396)
  Prédit: 'lique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lique' → logprob: -0.48805350065231323
    2. 'lié' → logprob: -1.988053560256958
    3. 'l' → logprob: -2.113053560256958
    4. 'li' → logprob: -2.738053560256958
    5. 'lication' → logprob: -3.238053560256958
    6. 'lie' → logprob: -4.488053321838379
    7. '*' → logprob: -5.488053321838379
    8. 'lic' → logprob: -5.738053321838379
    9. 'lica' → logprob: -6.863053321838379
    10. ')' → logprob: -7.363053321838379

Token 315: ' le' (ID: 505)
  Prédit: ' par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4191895127296448
    2. ' ce' → logprob: -1.794189453125
    3. ' chaque' → logprob: -2.294189453125
    4. ' le' → logprob: -3.544189453125
    5. 'par' → logprob: -3.919189453125
    6. ' ceil' → logprob: -4.919189453125
    7. ' ' → logprob: -5.419189453125
    8. 'ceil' → logprob: -5.544189453125
    9. 'le' → logprob: -6.044189453125
    10. 'ce' → logprob: -6.419189453125

Token 316: ' résultat' (ID: 62556)
  Prédit: ' résultat'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' résultat' → logprob: -0.8972486257553101
    2. 'result' → logprob: -1.14724862575531
    3. 'rés' → logprob: -2.1472487449645996
    4. 'ceil' → logprob: -2.7722487449645996
    5. ')' → logprob: -2.8972487449645996
    6. ' result' → logprob: -4.1472487449646
    7. ' ceil' → logprob: -4.8972487449646
    8. ' )' → logprob: -5.0222487449646
    9. ' ' → logprob: -6.1472487449646
    10. ' resultat' → logprob: -6.1472487449646

Token 317: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.006006890442222357
    2. ' i' → logprob: -6.631006717681885
    3. '(i' → logprob: -6.881006717681885
    4. 'par' → logprob: -7.006006717681885
    5. ' ' → logprob: -7.131006717681885
    6. ' by' → logprob: -7.881006717681885
    7. ')' → logprob: -8.006007194519043
    8. ' pour' → logprob: -8.756007194519043
    9. '<|end|>' → logprob: -8.756007194519043
    10. ' de' → logprob: -9.131007194519043

Token 318: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2519320547580719
    2. '10' → logprob: -1.5019320249557495
    3. ' ' → logprob: -12.751932144165039
    4. '1' → logprob: -16.25193214416504
    5. ' ' → logprob: -18.25193214416504
    6. ' dix' → logprob: -18.25193214416504
    7. '```' → logprob: -18.75193214416504
    8. 'l' → logprob: -19.12693214416504
    9. '  ' → logprob: -19.62693214416504
    10. 'd' → logprob: -20.25193214416504

Token 319: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.011047814972698689
    2. ' ' → logprob: -4.511047840118408
    3. ' ' → logprob: -18.63604736328125
    4. '1' → logprob: -20.26104736328125
    5. '```' → logprob: -22.26104736328125
    6. 'l' → logprob: -22.63604736328125
    7. ' dix' → logprob: -22.76104736328125
    8. ' diez' → logprob: -22.76104736328125
    9. ''' → logprob: -23.01104736328125
    10. 'd' → logprob: -23.13604736328125

Token 320: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3139679729938507
    2. 'for' → logprob: -1.3139679431915283
    3. ']' → logprob: -7.813968181610107
    4. ' pour' → logprob: -9.31396770477295
    5. 'b' → logprob: -9.68896770477295
    6. ' ' → logprob: -9.81396770477295
    7. ' b' → logprob: -10.43896770477295
    8. '   ' → logprob: -11.06396770477295
    9. '[' → logprob: -11.18896770477295
    10. ',' → logprob: -11.56396770477295

Token 321: ' obtenir' (ID: 54423)
  Prédit: ' obtenir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' obtenir' → logprob: -0.05144501477479935
    2. ' arr' → logprob: -3.5514450073242188
    3. 'arr' → logprob: -4.551445007324219
    4. ' créer' → logprob: -5.301445007324219
    5. 'ob' → logprob: -6.301445007324219
    6. '#' → logprob: -6.426445007324219
    7. ' avoir' → logprob: -7.551445007324219
    8. ' donner' → logprob: -8.926445007324219
    9. ' form' → logprob: -9.051445007324219
    10. ' rappro' → logprob: -9.051445007324219

Token 322: ' le' (ID: 505)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.49995484948158264
    2. ' l' → logprob: -1.7499548196792603
    3. ' le' → logprob: -2.37495493888855
    4. ' une' → logprob: -2.74995493888855
    5. ' la' → logprob: -3.37495493888855
    6. ' des' → logprob: -4.749954700469971
    7. '10' → logprob: -5.499954700469971
    8. 'le' → logprob: -5.499954700469971
    9. 'l' → logprob: -5.999954700469971
    10. 'a' → logprob: -6.124954700469971

Token 323: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.1804465502500534
    2. ' multiple' → logprob: -2.0554466247558594
    3. 'nombre' → logprob: -3.8054466247558594
    4. ' prochain' → logprob: -5.055446624755859
    5. 'plus' → logprob: -5.930446624755859
    6. 'prem' → logprob: -6.305446624755859
    7. 'multip' → logprob: -6.680446624755859
    8. 'pro' → logprob: -7.180446624755859
    9. ' nombre' → logprob: -7.680446624755859
    10. '10' → logprob: -8.55544662475586

Token 324: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.06674355268478394
    2. 'de' → logprob: -3.1917436122894287
    3. ' ' → logprob: -5.44174337387085
    4. '10' → logprob: -5.56674337387085
    5. '_' → logprob: -5.81674337387085
    6. ' suivant' → logprob: -5.81674337387085
    7. ' supérieur' → logprob: -6.31674337387085
    8. 's' → logprob: -6.56674337387085
    9. ' d' → logprob: -6.81674337387085
    10. 'd' → logprob: -6.94174337387085

Token 325: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10020947456359863
    2. ' ' → logprob: -2.3502094745635986
    3. ' ' → logprob: -13.85020923614502
    4. ' dix' → logprob: -14.35020923614502
    5. 'd' → logprob: -14.85020923614502
    6. ' l' → logprob: -15.35020923614502
    7. 'space' → logprob: -15.60020923614502
    8. 'l' → logprob: -16.225210189819336
    9. '1' → logprob: -16.350210189819336
    10. ' diez' → logprob: -16.850210189819336

Token 326: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0019335162360221148
    2. ' ' → logprob: -6.251933574676514
    3. ' dix' → logprob: -12.751933097839355
    4. 'd' → logprob: -13.251933097839355
    5. ' diez' → logprob: -16.001934051513672
    6. 'l' → logprob: -16.126934051513672
    7. '1' → logprob: -16.501934051513672
    8. ' ' → logprob: -17.876934051513672
    9. 'ten' → logprob: -18.001934051513672
    10. '۱۰' → logprob: -18.751934051513672

Token 327: ' immédiatement' (ID: 100743)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6304875016212463
    2. ' for' → logprob: -0.8804875016212463
    3. ' pour' → logprob: -3.8804874420166016
    4. ']' → logprob: -4.005487442016602
    5. 'pour' → logprob: -5.380487442016602
    6. '   ' → logprob: -5.880487442016602
    7. ')' → logprob: -6.005487442016602
    8. ',' → logprob: -6.380487442016602
    9. ' ' → logprob: -6.755487442016602
    10. '[i' → logprob: -7.255487442016602

Token 328: ' supérieur' (ID: 98491)
  Prédit: ' supérieur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' supérieur' → logprob: -0.31483370065689087
    2. 'sup' → logprob: -1.314833641052246
    3. 'su' → logprob: -6.939833641052246
    4. 'super' → logprob: -7.939833641052246
    5. ' suivant' → logprob: -9.189833641052246
    6. ' supérieure' → logprob: -9.814833641052246
    7. 'au' → logprob: -10.814833641052246
    8. ' sup' → logprob: -10.939833641052246
    9. '_sup' → logprob: -10.939833641052246
    10. 'égal' → logprob: -11.189833641052246

Token 329: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14766722917556763
    2. ' for' → logprob: -2.147667169570923
    3. 'pour' → logprob: -5.022667407989502
    4. ' pour' → logprob: -5.397667407989502
    5. ']' → logprob: -5.522667407989502
    6. '   ' → logprob: -6.272667407989502
    7. ' ' → logprob: -6.522667407989502
    8. '[i' → logprob: -7.397667407989502
    9. ',' → logprob: -7.397667407989502
    10. ')' → logprob: -7.397667407989502

Token 330: 's' (ID: 82)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.024910693988204002
    2. ' )' → logprob: -3.8999106884002686
    3. 'for' → logprob: -7.399910926818848
    4. ' for' → logprob: -7.399910926818848
    5. ' à' → logprob: -7.524910926818848
    6. ' pour' → logprob: -7.524910926818848
    7. ' ' → logprob: -8.024910926818848
    8. '   ' → logprob: -8.274910926818848
    9. ' i' → logprob: -8.524910926818848
    10. ')
' → logprob: -8.524910926818848

Token 331: 'auf' (ID: 7483)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24958619475364685
    2. 'ur' → logprob: -1.7495862245559692
    3. 'i' → logprob: -3.9995861053466797
    4. ' )' → logprob: -4.62458610534668
    5. 'a' → logprob: -5.87458610534668
    6. 'e' → logprob: -5.99958610534668
    7. '   ' → logprob: -6.24958610534668
    8. ']' → logprob: -6.74958610534668
    9. ' à' → logprob: -6.74958610534668
    10. 'u' → logprob: -6.87458610534668

Token 332: ' si' (ID: 1784)
  Prédit: ' si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' si' → logprob: -0.48924654722213745
    2. 'si' → logprob: -1.8642466068267822
    3. 's' → logprob: -2.2392466068267822
    4. ' s' → logprob: -3.3642466068267822
    5. ' dans' → logprob: -3.8642466068267822
    6. ' égal' → logprob: -4.239246368408203
    7. ' pour' → logprob: -4.364246368408203
    8. ' if' → logprob: -4.864246368408203
    9. 'dans' → logprob: -4.864246368408203
    10. ' for' → logprob: -5.739246368408203

Token 333: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.38854190707206726
    2. 'i' → logprob: -1.1385419368743896
    3. ')' → logprob: -6.8885416984558105
    4. ' )' → logprob: -8.888542175292969
    5. ')i' → logprob: -9.388542175292969
    6. '  ' → logprob: -10.013542175292969
    7. 'l' → logprob: -10.138542175292969
    8. 'a' → logprob: -10.263542175292969
    9. ' ' → logprob: -10.388542175292969
    10. ''i' → logprob: -10.513542175292969

Token 334: 'i' (ID: 72)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22594428062438965
    2. 'i' → logprob: -1.6009442806243896
    3. ')' → logprob: -8.725944519042969
    4. ' ' → logprob: -9.225944519042969
    5. 'a' → logprob: -9.600944519042969
    6. '   ' → logprob: -9.975944519042969
    7. '  ' → logprob: -10.225944519042969
    8. ' a' → logprob: -10.725944519042969
    9. '	i' → logprob: -10.975944519042969
    10. ' )' → logprob: -11.225944519042969

Token 335: ''' (ID: 6)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.5833368301391602
    2. '%' → logprob: -1.8333368301391602
    3. ''' → logprob: -1.8333368301391602
    4. ' <=' → logprob: -2.08333683013916
    5. '==' → logprob: -2.70833683013916
    6. '')' → logprob: -3.08333683013916
    7. ' %' → logprob: -3.33333683013916
    8. '<=' → logprob: -3.33333683013916
    9. ' '' → logprob: -3.58333683013916
    10. ' <' → logprob: -3.70833683013916

Token 336: ' est' (ID: 893)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.041634365916252136
    2. 'est' → logprob: -3.7916343212127686
    3. ' %' → logprob: -4.666634559631348
    4. ' est' → logprob: -5.541634559631348
    5. ')' → logprob: -7.041634559631348
    6. 's' → logprob: -7.416634559631348
    7. '%i' → logprob: -7.541634559631348
    8. '%d' → logprob: -7.916634559631348
    9. '%s' → logprob: -8.041634559631348
    10. ' ' → logprob: -8.166634559631348

Token 337: ' déjà' (ID: 21229)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.33043158054351807
    2. ' déjà' → logprob: -1.330431580543518
    3. ' ' → logprob: -5.3304314613342285
    4. ' dé' → logprob: -5.5804314613342285
    5. 'd' → logprob: -5.5804314613342285
    6. 'égal' → logprob: -6.3304314613342285
    7. 'exact' → logprob: -6.9554314613342285
    8. ' exactement' → logprob: -7.7054314613342285
    9. ' égal' → logprob: -8.455431938171387
    10. ' exact' → logprob: -8.580431938171387

Token 338: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.18358097970485687
    2. ' divisible' → logprob: -2.1835808753967285
    3. 'égal' → logprob: -4.5585808753967285
    4. ')' → logprob: -4.5585808753967285
    5. 'div' → logprob: -5.0585808753967285
    6. ' a' → logprob: -5.1835808753967285
    7. ' multiple' → logprob: -5.5585808753967285
    8. 'un' → logprob: -5.6835808753967285
    9. ' )' → logprob: -5.9335808753967285
    10. ' ' → logprob: -6.0585808753967285

Token 339: ' multiple' (ID: 7598)
  Prédit: 'multiple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'multiple' → logprob: -0.11336133629083633
    2. ' multiple' → logprob: -2.238361358642578
    3. 'multip' → logprob: -7.738361358642578
    4. ' múlt' → logprob: -10.863361358642578
    5. '```' → logprob: -10.988361358642578
    6. '10' → logprob: -10.988361358642578
    7. 'mult' → logprob: -11.113361358642578
    8. 'ultiple' → logprob: -11.488361358642578
    9. 'm' → logprob: -12.238361358642578
    10. ' ' → logprob: -12.613361358642578

Token 340: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.24031710624694824
    2. 'de' → logprob: -2.1153171062469482
    3. ')' → logprob: -2.4903171062469482
    4. '')' → logprob: -5.115317344665527
    5. '   ' → logprob: -6.740317344665527
    6. '10' → logprob: -6.990317344665527
    7. ' )' → logprob: -8.365317344665527
    8. ' of' → logprob: -8.740317344665527
    9. ',' → logprob: -8.865317344665527
    10. 'of' → logprob: -8.865317344665527

Token 341: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5759590864181519
    2. ' ' → logprob: -0.8259590864181519
    3. ' ' → logprob: -11.200959205627441
    4. 'd' → logprob: -13.575959205627441
    5. '  ' → logprob: -13.950959205627441
    6. '1' → logprob: -14.075959205627441
    7. '   ' → logprob: -14.575959205627441
    8. ')' → logprob: -14.700959205627441
    9. ' )' → logprob: -14.700959205627441
    10. ' dix' → logprob: -14.825959205627441

Token 342: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.016037767753005028
    2. ' ' → logprob: -4.141037940979004
    3. ')' → logprob: -14.016037940979004
    4. '   ' → logprob: -14.266037940979004
    5. ' ' → logprob: -14.516037940979004
    6. '```' → logprob: -15.453537940979004
    7. ' 
' → logprob: -15.766037940979004
    8. '1' → logprob: -15.828537940979004
    9. '  ' → logprob: -15.828537940979004
    10. ' )' → logprob: -15.891037940979004

Token 343: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5767586827278137
    2. ')'' → logprob: -1.076758623123169
    3. ')'
' → logprob: -3.576758623123169
    4. ' )' → logprob: -4.326758861541748
    5. ')')
' → logprob: -4.326758861541748
    6. ']'' → logprob: -4.701758861541748
    7. ')]' → logprob: -4.951758861541748
    8. '])' → logprob: -4.951758861541748
    9. '')' → logprob: -5.326758861541748
    10. ']' → logprob: -5.326758861541748

Token 344: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -9.088346359931165e-07
    2. ']
' → logprob: -15.000000953674316
    3. ']' → logprob: -15.125000953674316
    4. ' b' → logprob: -15.500000953674316
    5. '```' → logprob: -17.25
    6. '
' → logprob: -17.5
    7. ')b' → logprob: -18.625
    8. '#' → logprob: -18.75
    9. ')
' → logprob: -20.375
    10. ']

' → logprob: -20.375

Token 345: ' Ceci' (ID: 144699)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.128163257315464e-07
    2. ' b' → logprob: -15.25
    3. ']' → logprob: -18.0
    4. '#' → logprob: -19.875
    5. ')b' → logprob: -19.875
    6. '
' → logprob: -20.125
    7. '```' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. ']
' → logprob: -21.25
    10. '10' → logprob: -22.25

Token 346: ' sert' (ID: 52405)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.32452887296676636
    2. 'for' → logprob: -1.5745289325714111
    3. ' pour' → logprob: -3.449528932571411
    4. ']' → logprob: -3.574528932571411
    5. 'pour' → logprob: -5.699528694152832
    6. ')' → logprob: -6.324528694152832
    7. ' ]' → logprob: -6.449528694152832
    8. ' ' → logprob: -7.199528694152832
    9. ' a' → logprob: -7.574528694152832
    10. ' b' → logprob: -8.324528694152832

Token 347: ' donc' (ID: 14206)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.12463627010583878
    2. 'à' → logprob: -2.249636173248291
    3. '#' → logprob: -4.749636173248291
    4. ' ' → logprob: -6.499636173248291
    5. ' #' → logprob: -7.624636173248291
    6. ')' → logprob: -7.749636173248291
    7. ''à' → logprob: -8.87463665008545
    8. 'a' → logprob: -9.24963665008545
    9. 'au' → logprob: -9.74963665008545
    10. ']' → logprob: -9.74963665008545

Token 348: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.16962628066539764
    2. 'à' → logprob: -1.919626235961914
    3. '#' → logprob: -4.794626235961914
    4. ' ' → logprob: -7.919626235961914
    5. 'a' → logprob: -8.794626235961914
    6. ' #' → logprob: -8.919626235961914
    7. ')' → logprob: -9.169626235961914
    8. ''à' → logprob: -9.169626235961914
    9. ' ' → logprob: -9.794626235961914
    10. ' a' → logprob: -10.669626235961914

Token 349: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.0924014300107956
    2. ' arr' → logprob: -3.0924015045166016
    3. '#' → logprob: -3.8424015045166016
    4. 'b' → logprob: -4.467401504516602
    5. ' créer' → logprob: -5.467401504516602
    6. 'cr' → logprob: -5.842401504516602
    7. 'a' → logprob: -6.717401504516602
    8. 'transform' → logprob: -8.092401504516602
    9. 'aj' → logprob: -8.342401504516602
    10. 'r' → logprob: -8.467401504516602

Token 350: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.00011868205183418468
    2. 'onder' → logprob: -10.250118255615234
    3. 'ondi' → logprob: -10.750118255615234
    4. 'on' → logprob: -10.750118255615234
    5. 'o' → logprob: -11.625118255615234
    6. 'ondissement' → logprob: -12.250118255615234
    7. 'od' → logprob: -12.500118255615234
    8. '"' → logprob: -12.875118255615234
    9. '

' → logprob: -13.000118255615234
    10. '</' → logprob: -13.125118255615234

Token 351: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.020701995119452477
    2. 'i' → logprob: -5.145701885223389
    3. 'r' → logprob: -5.145701885223389
    4. 'rir' → logprob: -5.770701885223389
    5. 'ond' → logprob: -6.020701885223389
    6. '(i' → logprob: -6.145701885223389
    7. '(' → logprob: -8.145702362060547
    8. '[i' → logprob: -8.770702362060547
    9. 'dir' → logprob: -8.770702362060547
    10. 'er' → logprob: -9.270702362060547

Token 352: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6324882507324219
    2. ' i' → logprob: -1.8824882507324219
    3. ' chaque' → logprob: -1.8824882507324219
    4. ' les' → logprob: -3.382488250732422
    5. '[i' → logprob: -3.757488250732422
    6. 'les' → logprob: -3.757488250732422
    7. '(i' → logprob: -4.382488250732422
    8. 'b' → logprob: -4.507488250732422
    9. 'l' → logprob: -4.507488250732422
    10. ' à' → logprob: -4.632488250732422

Token 353: ' valeur' (ID: 41664)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.047816939651966095
    2. ' i' → logprob: -3.1728169918060303
    3. 'élé' → logprob: -5.672816753387451
    4. ' élément' → logprob: -7.547816753387451
    5. 'nombre' → logprob: -7.922816753387451
    6. ' nombre' → logprob: -8.42281723022461
    7. 'element' → logprob: -9.29781723022461
    8. ' ' → logprob: -9.79781723022461
    9. ' element' → logprob: -9.79781723022461
    10. 'elem' → logprob: -11.29781723022461

Token 354: ' de' (ID: 334)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.608210563659668
    2. '[i' → logprob: -1.233210563659668
    3. 'i' → logprob: -2.983210563659668
    4. '(' → logprob: -3.358210563659668
    5. 'a' → logprob: -4.358210563659668
    6. 'de' → logprob: -4.483210563659668
    7. ' de' → logprob: -4.483210563659668
    8. '[' → logprob: -4.608210563659668
    9. ' à' → logprob: -4.983210563659668
    10. 'd' → logprob: -5.108210563659668

Token 355: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.030518874526023865
    2. ' a' → logprob: -3.7805187702178955
    3. 'b' → logprob: -5.155519008636475
    4. ' b' → logprob: -7.155519008636475
    5. ' la' → logprob: -7.905519008636475
    6. 'la' → logprob: -9.030518531799316
    7. 'i' → logprob: -9.030518531799316
    8. '10' → logprob: -10.530518531799316
    9. ' i' → logprob: -10.655518531799316
    10. ' ' → logprob: -10.655518531799316

Token 356: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.013096003793179989
    2. ' a' → logprob: -4.763095855712891
    3. 'i' → logprob: -5.513095855712891
    4. ' i' → logprob: -8.63809585571289
    5. 'b' → logprob: -8.76309585571289
    6. ')' → logprob: -10.76309585571289
    7. '10' → logprob: -10.76309585571289
    8. ' ' → logprob: -10.76309585571289
    9. ' b' → logprob: -11.51309585571289
    10. ']' → logprob: -12.26309585571289

Token 357: ''' (ID: 6)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.4344184994697571
    2. ']' → logprob: -2.1844184398651123
    3. ' a' → logprob: -2.8094184398651123
    4. ' ' → logprob: -3.1844184398651123
    5. 'à' → logprob: -3.5594184398651123
    6. 'a' → logprob: -3.5594184398651123
    7. ' vers' → logprob: -3.9344184398651123
    8. ')' → logprob: -4.059418678283691
    9. ' au' → logprob: -4.434418678283691
    10. '[i' → logprob: -4.809418678283691

Token 358: ' au' (ID: 2791)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0008033146150410175
    2. ']' → logprob: -8.250802993774414
    3. ' =' → logprob: -8.625802993774414
    4. ' b' → logprob: -8.875802993774414
    5. 'a' → logprob: -9.750802993774414
    6. '=' → logprob: -10.000802993774414
    7. ',' → logprob: -10.250802993774414
    8. 'for' → logprob: -10.375802993774414
    9. '   ' → logprob: -11.375802993774414
    10. ' for' → logprob: -11.625802993774414

Token 359: ' multiple' (ID: 7598)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.1560603678226471
    2. ']' → logprob: -3.2810604572296143
    3. ' ' → logprob: -3.4060604572296143
    4. ' multiple' → logprob: -3.6560604572296143
    5. 'd' → logprob: -4.531060218811035
    6. 'multiple' → logprob: -4.781060218811035
    7. '[' → logprob: -5.406060218811035
    8. ' dix' → logprob: -5.531060218811035
    9. '_' → logprob: -5.906060218811035
    10. ')' → logprob: -6.031060218811035

Token 360: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.17509415745735168
    2. 'de' → logprob: -1.9250941276550293
    3. '_' → logprob: -4.925094127655029
    4. '(' → logprob: -6.300094127655029
    5. '[' → logprob: -6.800094127655029
    6. '10' → logprob: -7.300094127655029
    7. '   ' → logprob: -7.425094127655029
    8. 's' → logprob: -7.550094127655029
    9. ' ' → logprob: -7.800094127655029
    10. ']' → logprob: -8.050094604492188

Token 361: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.34849488735198975
    2. ' ' → logprob: -1.2234948873519897
    3. '_' → logprob: -10.598494529724121
    4. ' dix' → logprob: -11.348494529724121
    5. ' l' → logprob: -12.723494529724121
    6. 'd' → logprob: -13.348494529724121
    7. ' diez' → logprob: -13.348494529724121
    8. ' ' → logprob: -13.848494529724121
    9. ' _' → logprob: -13.848494529724121
    10. ' d' → logprob: -14.098494529724121

Token 362: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.009760456159710884
    2. ' ' → logprob: -4.63476037979126
    3. 'd' → logprob: -13.259760856628418
    4. '1' → logprob: -13.634760856628418
    5. '_' → logprob: -14.509760856628418
    6. ' dix' → logprob: -15.509760856628418
    7. ',' → logprob: -15.634760856628418
    8. ''' → logprob: -16.2597599029541
    9. '  ' → logprob: -16.2597599029541
    10. '```' → logprob: -16.3847599029541

Token 363: ' supérieur' (ID: 98491)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7782160043716431
    2. ']' → logprob: -0.9032160043716431
    3. 'for' → logprob: -2.6532158851623535
    4. ' b' → logprob: -3.6532158851623535
    5. ',' → logprob: -4.5282158851623535
    6. '[i' → logprob: -5.6532158851623535
    7. '[' → logprob: -5.9032158851623535
    8. ' for' → logprob: -6.0282158851623535
    9. '[b' → logprob: -6.1532158851623535
    10. 'pour' → logprob: -6.1532158851623535

Token 364: ' (' (ID: 350)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0003065030323341489
    2. ']' → logprob: -8.125306129455566
    3. ' b' → logprob: -12.125306129455566
    4. ']
' → logprob: -12.750306129455566
    5. ',' → logprob: -13.250306129455566
    6. 'for' → logprob: -16.125307083129883
    7. ')b' → logprob: -16.125307083129883
    8. ',b' → logprob: -17.500307083129883
    9. '10' → logprob: -17.625307083129883
    10. ')' → logprob: -17.750307083129883

Token 365: 'ou' (ID: 283)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030230697244405746
    2. ').' → logprob: -4.280230522155762
    3. ']' → logprob: -4.780230522155762
    4. ')]' → logprob: -5.655230522155762
    5. '])' → logprob: -6.155230522155762
    6. ' )' → logprob: -6.655230522155762
    7. ')
' → logprob: -9.280230522155762
    8. ')])' → logprob: -9.655230522155762
    9. 'pour' → logprob: -9.780230522155762
    10. 'a' → logprob: -9.780230522155762

Token 366: ' égal' (ID: 15059)
  Prédit: ' égal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' égal' → logprob: -0.27564114332199097
    2. ' ég' → logprob: -1.6506412029266357
    3. 'égal' → logprob: -3.5256412029266357
    4. ' eg' → logprob: -6.150640964508057
    5. ' equal' → logprob: -6.400640964508057
    6. 'a' → logprob: -6.400640964508057
    7. ' à' → logprob: -6.525640964508057
    8. ')' → logprob: -6.650640964508057
    9. 'equal' → logprob: -6.775640964508057
    10. ' ' → logprob: -6.775640964508057

Token 367: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009501893073320389
    2. 'à' → logprob: -5.509501934051514
    3. ' à' → logprob: -6.009501934051514
    4. ').' → logprob: -6.009501934051514
    5. ' )' → logprob: -9.009501457214355
    6. ' ' → logprob: -9.384501457214355
    7. '):' → logprob: -10.009501457214355
    8. '   ' → logprob: -10.134501457214355
    9. 'a' → logprob: -10.259501457214355
    10. 'au' → logprob: -10.384501457214355

Token 368: '#' (ID: 2)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00021569548698607832
    2. ']' → logprob: -9.375215530395508
    3. ']
' → logprob: -9.500215530395508
    4. ' b' → logprob: -9.875215530395508
    5. ')b' → logprob: -13.500215530395508
    6. ',' → logprob: -13.750215530395508
    7. ']

' → logprob: -15.000215530395508
    8. '
' → logprob: -15.375215530395508
    9. ']=' → logprob: -15.750215530395508
    10. '],' → logprob: -15.875215530395508

Token 369: ' Par' (ID: 3371)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ' b' → logprob: -17.625
    3. '```' → logprob: -19.625
    4. ')b' → logprob: -20.75
    5. ']' → logprob: -20.875
    6. '
' → logprob: -22.375
    7. '#' → logprob: -22.75
    8. ']
' → logprob: -23.25
    9. ')' → logprob: -23.375
    10. 'a' → logprob: -24.375

Token 370: ' exemple' (ID: 26320)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.35415956377983093
    2. ' b' → logprob: -1.2291595935821533
    3. 'a' → logprob: -5.604159355163574
    4. ']' → logprob: -7.479159355163574
    5. ')' → logprob: -7.729159355163574
    6. ' a' → logprob: -8.229159355163574
    7. ')b' → logprob: -8.354159355163574
    8. 'i' → logprob: -8.979159355163574
    9. ' i' → logprob: -9.854159355163574
    10. '10' → logprob: -10.104159355163574

Token 371: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009598593227565289
    2. ' b' → logprob: -5.009598731994629
    3. ',' → logprob: -6.384598731994629
    4. '[' → logprob: -8.134598731994629
    5. 'a' → logprob: -8.759598731994629
    6. '[b' → logprob: -8.884598731994629
    7. '[
' → logprob: -9.134598731994629
    8. ']' → logprob: -9.634598731994629
    9. '
' → logprob: -9.884598731994629
    10. ' ,' → logprob: -10.009598731994629

Token 372: ' pour' (ID: 1930)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.3458772301673889
    2. '#' → logprob: -1.4708771705627441
    3. '[' → logprob: -3.720877170562744
    4. ' b' → logprob: -3.720877170562744
    5. 'a' → logprob: -4.595877170562744
    6. ' [' → logprob: -6.095877170562744
    7. ' #' → logprob: -7.345877170562744
    8. ' a' → logprob: -7.595877170562744
    9. '10' → logprob: -8.220877647399902
    10. '#a' → logprob: -9.345877647399902

Token 373: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2843148410320282
    2. ' i' → logprob: -1.4093148708343506
    3. 'a' → logprob: -6.7843146324157715
    4. '10' → logprob: -6.9093146324157715
    5. ' ' → logprob: -7.5343146324157715
    6. ' a' → logprob: -8.15931510925293
    7. '100' → logprob: -9.40931510925293
    8. 'x' → logprob: -10.65931510925293
    9. '[' → logprob: -11.15931510925293
    10. '#' → logprob: -11.15931510925293

Token 374: '=' (ID: 28)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026241084560751915
    2. 'in' → logprob: -3.7762410640716553
    3. ' i' → logprob: -6.776241302490234
    4. 'a' → logprob: -7.651241302490234
    5. ' ' → logprob: -8.151241302490234
    6. 'i' → logprob: -8.151241302490234
    7. ')' → logprob: -8.776241302490234
    8. '  ' → logprob: -8.776241302490234
    9. ' a' → logprob: -9.151241302490234
    10. ',' → logprob: -9.401241302490234

Token 375: '23' (ID: 1860)
  Prédit: '15'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '15' → logprob: -1.2703510522842407
    2. '23' → logprob: -1.5203510522842407
    3. '17' → logprob: -2.020350933074951
    4. '12' → logprob: -2.645350933074951
    5. '7' → logprob: -2.770350933074951
    6. '27' → logprob: -3.145350933074951
    7. '14' → logprob: -3.270350933074951
    8. '13' → logprob: -3.270350933074951
    9. '25' → logprob: -3.395350933074951
    10. '9' → logprob: -4.770350933074951

Token 376: ',' (ID: 11)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.04901379346847534
    2. ',' → logprob: -3.29901385307312
    3. ':' → logprob: -5.674013614654541
    4. ')' → logprob: -6.049013614654541
    5. ']' → logprob: -6.424013614654541
    6. ' b' → logprob: -6.924013614654541
    7. ')b' → logprob: -7.299013614654541
    8. ':
' → logprob: -7.799013614654541
    9. ',b' → logprob: -7.799013614654541
    10. ':b' → logprob: -8.7990140914917

Token 377: ' ceil' (ID: 35964)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.34891724586486816
    2. ' b' → logprob: -1.2239172458648682
    3. '20' → logprob: -8.973917007446289
    4. '10' → logprob: -8.973917007446289
    5. ' ' → logprob: -9.973917007446289
    6. '23' → logprob: -10.223917007446289
    7. '24' → logprob: -10.723917007446289
    8. ' [' → logprob: -10.723917007446289
    9. '30' → logprob: -10.848917007446289
    10. '#' → logprob: -10.973917007446289

Token 378: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.039172153919935226
    2. '(i' → logprob: -3.4141721725463867
    3. '(a' → logprob: -6.039172172546387
    4. 'a' → logprob: -6.289172172546387
    5. 'b' → logprob: -7.289172172546387
    6. 's' → logprob: -8.664172172546387
    7. '(b' → logprob: -9.664172172546387
    8. '((' → logprob: -9.789172172546387
    9. 'ceil' → logprob: -9.789172172546387
    10. '_a' → logprob: -10.164172172546387

Token 379: '23' (ID: 1860)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10574427247047424
    2. '23' → logprob: -2.6057443618774414
    3. ' i' → logprob: -3.8557443618774414
    4. '(i' → logprob: -5.480744361877441
    5. ' ' → logprob: -7.605744361877441
    6. '(' → logprob: -7.855744361877441
    7. ' (' → logprob: -8.980744361877441
    8. ')' → logprob: -10.230744361877441
    9. '   ' → logprob: -11.105744361877441
    10. '24' → logprob: -11.105744361877441

Token 380: '/' (ID: 14)
  Prédit: '/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.49785149097442627
    2. ' /' → logprob: -0.9978514909744263
    3. '(i' → logprob: -3.9978513717651367
    4. '(' → logprob: -5.372851371765137
    5. '/i' → logprob: -8.997851371765137
    6. ')' → logprob: -9.247851371765137
    7. ' (' → logprob: -9.497851371765137
    8. ' ' → logprob: -9.622851371765137
    9. 's' → logprob: -10.747851371765137
    10. 'div' → logprob: -10.997851371765137

Token 381: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00023083435371518135
    2. ' ' → logprob: -8.37523078918457
    3. ')' → logprob: -16.00023078918457
    4. '```' → logprob: -17.00023078918457
    5. '  ' → logprob: -18.00023078918457
    6. '
' → logprob: -18.00023078918457
    7. '   ' → logprob: -18.50023078918457
    8. '30' → logprob: -19.87523078918457
    9. ' ' → logprob: -20.00023078918457
    10. '１０' → logprob: -20.00023078918457

Token 382: ')=' (ID: 25987)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00042567000491544604
    2. ')*' → logprob: -8.000425338745117
    3. ' )' → logprob: -9.625425338745117
    4. ')+' → logprob: -11.750425338745117
    5. ')
' → logprob: -12.125425338745117
    6. ')`' → logprob: -12.500425338745117
    7. '))' → logprob: -12.625425338745117
    8. ')**' → logprob: -13.250425338745117
    9. ')#' → logprob: -14.875425338745117
    10. '')' → logprob: -15.625425338745117

Token 383: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.868328920158092e-05
    2. ' ' → logprob: -10.500028610229492
    3. '   ' → logprob: -15.375028610229492
    4. '(' → logprob: -15.500028610229492
    5. '
' → logprob: -16.250028610229492
    6. '```' → logprob: -16.687528610229492
    7. '{"' → logprob: -16.812528610229492
    8. '{' → logprob: -16.875028610229492
    9. '`' → logprob: -16.937528610229492
    10. '  ' → logprob: -17.000028610229492

Token 384: ' donc' (ID: 14206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7865359783172607
    2. ']' → logprob: -1.7865359783172607
    3. 'b' → logprob: -1.9115359783172607
    4. '])' → logprob: -2.6615359783172607
    5. ')*' → logprob: -3.0365359783172607
    6. ',' → logprob: -3.2865359783172607
    7. ']*' → logprob: -3.4115359783172607
    8. ' b' → logprob: -4.41153621673584
    9. 'a' → logprob: -4.91153621673584
    10. '*' → logprob: -5.28653621673584

Token 385: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.005475532729178667
    2. '3' → logprob: -5.6304755210876465
    3. ' ' → logprob: -6.7554755210876465
    4. 'ceil' → logprob: -8.630475997924805
    5. 'b' → logprob: -8.755475997924805
    6. 'i' → logprob: -8.755475997924805
    7. 'a' → logprob: -8.880475997924805
    8. '40' → logprob: -11.630475997924805
    9. '   ' → logprob: -11.630475997924805
    10. '  ' → logprob: -11.755475997924805

Token 386: '3' (ID: 18)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.023590877652168274
    2. '3' → logprob: -3.8985908031463623
    3. 'b' → logprob: -5.898591041564941
    4. ' ' → logprob: -9.023591041564941
    5. 'ceil' → logprob: -9.523591041564941
    6. 'a' → logprob: -10.398591041564941
    7. 'i' → logprob: -10.648591041564941
    8. '40' → logprob: -10.648591041564941
    9. '   ' → logprob: -12.023591041564941
    10. ' b' → logprob: -12.398591041564941

Token 387: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5814682841300964
    2. ' *' → logprob: -1.2064683437347412
    3. '0' → logprob: -1.9564683437347412
    4. ')' → logprob: -9.20646858215332
    5. ',' → logprob: -9.83146858215332
    6. '   ' → logprob: -9.95646858215332
    7. ' ' → logprob: -10.58146858215332
    8. '```' → logprob: -11.20646858215332
    9. ')*' → logprob: -11.83146858215332
    10. '[' → logprob: -11.83146858215332

Token 388: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '```' → logprob: -17.250335693359375
    4. '20' → logprob: -18.000335693359375
    5. '0' → logprob: -19.125335693359375
    6. '۱۰' → logprob: -19.500335693359375
    7. '  ' → logprob: -19.625335693359375
    8. '1' → logprob: -19.875335693359375
    9. ' ' → logprob: -20.125335693359375
    10. '' → logprob: -20.250335693359375

Token 389: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2029154896736145
    2. ']' → logprob: -2.0779154300689697
    3. ')' → logprob: -4.077915668487549
    4. 'for' → logprob: -4.202915668487549
    5. ' for' → logprob: -4.702915668487549
    6. 'b' → logprob: -4.702915668487549
    7. '],' → logprob: -5.827915668487549
    8. '])' → logprob: -5.952915668487549
    9. '),' → logprob: -7.077915668487549
    10. ' ,' → logprob: -7.952915668487549

Token 390: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.1517960956552997e-05
    2. ' ' → logprob: -11.375011444091797
    3. '۳۰' → logprob: -18.750011444091797
    4. '３０' → logprob: -19.000011444091797
    5. '३०' → logprob: -20.250011444091797
    6. '৩০' → logprob: -20.625011444091797
    7. '3' → logprob: -20.750011444091797
    8. '40' → logprob: -21.250011444091797
    9. ' trente' → logprob: -22.125011444091797
    10. '300' → logprob: -22.125011444091797

Token 391: '.
' (ID: 558)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026884309947490692
    2. ']
' → logprob: -3.7768843173980713
    3. ']' → logprob: -5.651884078979492
    4. ' b' → logprob: -10.026884078979492
    5. '
' → logprob: -11.026884078979492
    6. ')b' → logprob: -11.151884078979492
    7. ']
' → logprob: -11.276884078979492
    8. ')
' → logprob: -11.276884078979492
    9. ']

' → logprob: -11.901884078979492
    10. '])
' → logprob: -13.026884078979492

Token 392: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -5.776898251497187e-05
    2. ']' → logprob: -10.0000581741333
    3. ' b' → logprob: -11.6250581741333
    4. ']
' → logprob: -12.7500581741333
    5. ')b' → logprob: -15.7500581741333
    6. ')' → logprob: -16.500057220458984
    7. '```' → logprob: -16.625057220458984
    8. ']

' → logprob: -17.000057220458984
    9. '#' → logprob: -17.375057220458984
    10. '
' → logprob: -17.750057220458984

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142756402492523
    2. ' =' → logprob: -1.7014275789260864
    3. '=[' → logprob: -11.451427459716797
    4. ' =[' → logprob: -12.826427459716797
    5. 'b' → logprob: -15.201427459716797
    6. '=[]' → logprob: -15.576427459716797
    7. ']' → logprob: -16.201427459716797
    8. '=b' → logprob: -16.326427459716797
    9. '＝' → logprob: -16.576427459716797
    10. '[' → logprob: -16.826427459716797

Token 394: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001171056181192398
    2. ' [' → logprob: -6.751171112060547
    3. '[int' → logprob: -14.376171112060547
    4. '[(' → logprob: -17.626171112060547
    5. '[c' → logprob: -17.626171112060547
    6. '[
' → logprob: -17.751171112060547
    7. ' ' → logprob: -18.001171112060547
    8. 'ceil' → logprob: -18.126171112060547
    9. '[b' → logprob: -18.126171112060547
    10. '[List' → logprob: -18.251171112060547

Token 395: 'ceil' (ID: 43552)
  Prédit: 'ceil'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ceil' → logprob: -9.253090865968261e-06
    2. ' ceil' → logprob: -11.625009536743164
    3. '   ' → logprob: -15.875009536743164
    4. '.ceil' → logprob: -17.250009536743164
    5. 'cel' → logprob: -17.500009536743164
    6. '(' → logprob: -18.625009536743164
    7. '  ' → logprob: -18.625009536743164
    8. 'ce' → logprob: -18.875009536743164
    9. ' ' → logprob: -18.875009536743164
    10. '```' → logprob: -19.750009536743164

Token 396: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.685467764735222e-05
    2. '(' → logprob: -9.375086784362793
    3. ' (' → logprob: -13.250086784362793
    4. '(a' → logprob: -16.62508773803711
    5. '(
' → logprob: -16.75008773803711
    6. '((' → logprob: -17.00008773803711
    7. '(I' → logprob: -18.12508773803711
    8. '(ii' → logprob: -18.12508773803711
    9. '(int' → logprob: -18.87508773803711
    10. '(x' → logprob: -19.00008773803711

Token 397: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.1618524193763733
    2. '/' → logprob: -1.9118523597717285
    3. '(i' → logprob: -6.6618523597717285
    4. '(' → logprob: -8.286852836608887
    5. ' (' → logprob: -9.911852836608887
    6. ' ' → logprob: -11.036852836608887
    7. ' /
' → logprob: -11.786852836608887
    8. ')' → logprob: -11.911852836608887
    9. '/i' → logprob: -11.911852836608887
    10. '   ' → logprob: -12.411852836608887

Token 398: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '1' → logprob: -20.6250057220459
    4. ')' → logprob: -20.6250057220459
    5. '۱۰' → logprob: -20.6250057220459
    6. '   ' → logprob: -21.2500057220459
    7. '```' → logprob: -21.3750057220459
    8. '  ' → logprob: -21.6250057220459
    9. '１０' → logprob: -21.7500057220459
    10. '
' → logprob: -22.1250057220459

Token 399: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '   ' → logprob: -20.250001907348633
    4. '```' → logprob: -20.500001907348633
    5. '۱۰' → logprob: -20.875001907348633
    6. '1' → logprob: -20.875001907348633
    7. '  ' → logprob: -21.125001907348633
    8. ')' → logprob: -21.125001907348633
    9. '
' → logprob: -21.250001907348633
    10. '１０' → logprob: -21.625001907348633

Token 400: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006324975984171033
    2. ')*' → logprob: -7.375632286071777
    3. ' )' → logprob: -12.625632286071777
    4. '*' → logprob: -13.000632286071777
    5. ')
' → logprob: -16.250633239746094
    6. ' ' → logprob: -16.875633239746094
    7. ']' → logprob: -17.125633239746094
    8. '0' → logprob: -17.250633239746094
    9. '   ' → logprob: -17.375633239746094
    10. ' *' → logprob: -17.375633239746094

Token 401: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6953097581863403
    2. ' *' → logprob: -0.6953097581863403
    3. ')' → logprob: -6.195309638977051
    4. ')*' → logprob: -9.19530963897705
    5. ' ' → logprob: -11.57030963897705
    6. ' )' → logprob: -12.19530963897705
    7. ']' → logprob: -12.82030963897705
    8. '   ' → logprob: -14.57030963897705
    9. ' ' → logprob: -14.69530963897705
    10. ']*' → logprob: -15.32030963897705

Token 402: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '۱۰' → logprob: -19.126325607299805
    4. ' ' → logprob: -19.876325607299805
    5. '```' → logprob: -20.751325607299805
    6. '１０' → logprob: -20.876325607299805
    7. '1' → logprob: -21.001325607299805
    8. '' → logprob: -21.251325607299805
    9. '   ' → logprob: -21.626325607299805
    10. '  ' → logprob: -21.688825607299805

Token 403: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '```' → logprob: -20.25
    4. '۱۰' → logprob: -21.0
    5. '1' → logprob: -22.125
    6. '' → logprob: -22.25
    7. '１０' → logprob: -22.625
    8. '`' → logprob: -22.875
    9. '   ' → logprob: -23.25
    10. '१०' → logprob: -23.375

Token 404: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3869260847568512
    2. 'for' → logprob: -1.1369260549545288
    3. ')' → logprob: -9.88692569732666
    4. '	for' → logprob: -12.76192569732666
    5. ']' → logprob: -14.38692569732666
    6. ' ' → logprob: -14.63692569732666
    7. '   ' → logprob: -14.88692569732666
    8. ' ' → logprob: -18.261926651000977
    9. '}' → logprob: -19.011926651000977
    10. '  ' → logprob: -19.386926651000977

Token 405: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014719270169734955
    2. ' i' → logprob: -4.264719486236572
    3. 'a' → logprob: -7.514719486236572
    4. ' a' → logprob: -11.514719009399414
    5. ' ' → logprob: -14.514719009399414
    6. '	i' → logprob: -17.139719009399414
    7. '   ' → logprob: -17.639719009399414
    8. '  ' → logprob: -17.764719009399414
    9. ')' → logprob: -17.889719009399414
    10. ' in' → logprob: -18.514719009399414

Token 406: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759603381156921
    2. 'in' → logprob: -0.8259603381156921
    3. 'a' → logprob: -10.950960159301758
    4. 'ins' → logprob: -14.325960159301758
    5. 'i' → logprob: -14.450960159301758
    6. 's' → logprob: -14.450960159301758
    7. ' ' → logprob: -14.575960159301758
    8. 'import' → logprob: -15.075960159301758
    9. ' a' → logprob: -15.700960159301758
    10. ' i' → logprob: -16.200960159301758

Token 407: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009115827269852161
    2. ' a' → logprob: -7.000911712646484
    3. ' ' → logprob: -17.000911712646484
    4. ']' → logprob: -18.375911712646484
    5. '	a' → logprob: -18.500911712646484
    6. 'а' → logprob: -18.625911712646484
    7. ')' → logprob: -18.813411712646484
    8. ')a' → logprob: -19.063411712646484
    9. '(a' → logprob: -19.250911712646484
    10. '   ' → logprob: -19.813411712646484

Token 408: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.034592388459714e-06
    2. ' ]' → logprob: -12.125005722045898
    3. ']
' → logprob: -14.500005722045898
    4. ')]' → logprob: -17.1250057220459
    5. ']
' → logprob: -17.3750057220459
    6. ']

' → logprob: -17.8750057220459
    7. ')' → logprob: -18.1250057220459
    8. '']' → logprob: -19.3750057220459
    9. '()]' → logprob: -20.2500057220459
    10. '}' → logprob: -20.5000057220459

Token 409: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.292907877039397e-06
    2. 'for' → logprob: -12.87500286102295
    3. '#' → logprob: -14.62500286102295
    4. '#print' → logprob: -15.37500286102295
    5. ' print' → logprob: -16.750003814697266
    6. 'b' → logprob: -18.750003814697266
    7. '<|end|>' → logprob: -18.875003814697266
    8. 'pr' → logprob: -19.250003814697266
    9. '```' → logprob: -19.375003814697266
    10. 'prin' → logprob: -19.500003814697266

Token 410: ' Cré' (ID: 109203)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0013364320620894432
    2. 'for' → logprob: -6.626336574554443
    3. 'c' → logprob: -11.876336097717285
    4. 'b' → logprob: -13.876336097717285
    5. 'sum' → logprob: -13.876336097717285
    6. 'total' → logprob: -14.126336097717285
    7. '#' → logprob: -15.376336097717285
    8. ' print' → logprob: -15.626336097717285
    9. 'result' → logprob: -16.2513370513916
    10. 's' → logprob: -16.3763370513916

Token 411: 'ation' (ID: 387)
  Prédit: 'ation'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.0031603723764419556
    2. '#' → logprob: -5.87816047668457
    3. 'tion' → logprob: -9.00316047668457
    4. 'print' → logprob: -9.00316047668457
    5. 'er' → logprob: -9.50316047668457
    6. 'a' → logprob: -12.25316047668457
    7. 'action' → logprob: -12.62816047668457
    8. '```' → logprob: -12.62816047668457
    9. 'lation' → logprob: -12.75316047668457
    10. 'ature' → logprob: -13.00316047668457

Token 412: ' d' (ID: 272)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07961651682853699
    2. 'c' → logprob: -2.7046165466308594
    3. '#' → logprob: -5.454616546630859
    4. 'for' → logprob: -5.829616546630859
    5. 'd' → logprob: -6.579616546630859
    6. 's' → logprob: -7.829616546630859
    7. 'sum' → logprob: -9.32961654663086
    8. 'de' → logprob: -9.57961654663086
    9. ' print' → logprob: -9.70461654663086
    10. '=' → logprob: -9.82961654663086

Token 413: ''une' (ID: 13337)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.44366079568862915
    2. 'a' → logprob: -1.5686607360839844
    3. 'print' → logprob: -2.4436607360839844
    4. ''une' → logprob: -3.5686607360839844
    5. 'une' → logprob: -4.193660736083984
    6. 'e' → logprob: -5.193660736083984
    7. 'for' → logprob: -5.818660736083984
    8. ''un' → logprob: -5.943660736083984
    9. 'b' → logprob: -6.068660736083984
    10. '_' → logprob: -6.318660736083984

Token 414: ' troisième' (ID: 75373)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6581730842590332
    2. 'print' → logprob: -1.0331730842590332
    3. 'for' → logprob: -2.658173084259033
    4. 'liste' → logprob: -3.283173084259033
    5. '#' → logprob: -4.283173084259033
    6. 'ligne' → logprob: -6.533173084259033
    7. 's' → logprob: -7.283173084259033
    8. 'nou' → logprob: -7.408173084259033
    9. 'range' → logprob: -7.908173084259033
    10. 'b' → logprob: -8.033172607421875

Token 415: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.4437592327594757
    2. 'c' → logprob: -1.4437592029571533
    3. '#' → logprob: -2.3187592029571533
    4. 'ligne' → logprob: -4.818759441375732
    5. ' liste' → logprob: -5.193759441375732
    6. 'print' → logprob: -5.568759441375732
    7. 'list' → logprob: -5.693759441375732
    8. ' c' → logprob: -6.818759441375732
    9. 's' → logprob: -7.568759441375732
    10. '_' → logprob: -7.943759441375732

Token 416: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.012598655186593533
    2. ' c' → logprob: -5.387598514556885
    3. '#' → logprob: -5.637598514556885
    4. ' =' → logprob: -6.012598514556885
    5. ',' → logprob: -7.762598514556885
    6. 'print' → logprob: -8.012598991394043
    7. '[' → logprob: -8.012598991394043
    8. '=' → logprob: -8.012598991394043
    9. 's' → logprob: -8.387598991394043
    10. '_c' → logprob: -9.512598991394043

Token 417: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.006629281677305698
    2. 'a' → logprob: -5.881629467010498
    3. 'b' → logprob: -6.381629467010498
    4. 'print' → logprob: -7.006629467010498
    5. 'diff' → logprob: -7.756629467010498
    6. 'for' → logprob: -8.25662899017334
    7. 'result' → logprob: -8.75662899017334
    8. 'abs' → logprob: -9.63162899017334
    9. 'difference' → logprob: -9.88162899017334
    10. 'range' → logprob: -10.25662899017334

Token 418: ''' (ID: 6)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1606014370918274
    2. '=' → logprob: -1.9106013774871826
    3. 'c' → logprob: -8.660601615905762
    4. '=[' → logprob: -9.660601615905762
    5. ' =[' → logprob: -10.160601615905762
    6. 'a' → logprob: -10.785601615905762
    7. 'b' → logprob: -10.785601615905762
    8. ']' → logprob: -11.035601615905762
    9. '[' → logprob: -11.285601615905762
    10. ' c' → logprob: -12.535601615905762

Token 419: ' basée' (ID: 153941)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.050666455179452896
    2. ' =' → logprob: -3.175666570663452
    3. 'c' → logprob: -4.925666332244873
    4. '=[' → logprob: -8.425666809082031
    5. '#' → logprob: -9.675666809082031
    6. '=[]' → logprob: -10.675666809082031
    7. 's' → logprob: -11.175666809082031
    8. '=[]
' → logprob: -11.425666809082031
    9. ' c' → logprob: -11.550666809082031
    10. '=c' → logprob: -11.675666809082031

Token 420: ' sur' (ID: 1512)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.3678915798664093
    2. 'b' → logprob: -1.992891550064087
    3. '#' → logprob: -2.367891550064087
    4. 'on' → logprob: -3.492891550064087
    5. ' sur' → logprob: -3.992891550064087
    6. 'c' → logprob: -4.492891788482666
    7. '[i' → logprob: -4.867891788482666
    8. '=' → logprob: -5.492891788482666
    9. '[' → logprob: -6.492891788482666
    10. 'a' → logprob: -7.367891788482666

Token 421: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.009222117252647877
    2. 'a' → logprob: -5.509222030639648
    3. ' b' → logprob: -5.509222030639648
    4. '[i' → logprob: -7.259222030639648
    5. '[' → logprob: -9.259222030639648
    6. 'i' → logprob: -9.384222030639648
    7. ' a' → logprob: -10.009222030639648
    8. '[a' → logprob: -10.259222030639648
    9. '[b' → logprob: -10.384222030639648
    10. ' i' → logprob: -10.884222030639648

Token 422: ' listes' (ID: 179198)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.003738683182746172
    2. '[i' → logprob: -6.503738880157471
    3. 'a' → logprob: -6.753738880157471
    4. 'i' → logprob: -7.628738880157471
    5. ' b' → logprob: -8.128738403320312
    6. 'zip' → logprob: -9.003738403320312
    7. '#' → logprob: -10.503738403320312
    8. '[' → logprob: -10.503738403320312
    9. 'range' → logprob: -10.503738403320312
    10. '[b' → logprob: -11.003738403320312

Token 423: ' précéd' (ID: 55435)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.032519519329071045
    2. 'b' → logprob: -4.032519340515137
    3. 'c' → logprob: -5.032519340515137
    4. ' a' → logprob: -5.157519340515137
    5. '[a' → logprob: -7.282519340515137
    6. '#' → logprob: -7.532519340515137
    7. ' c' → logprob: -8.532519340515137
    8. ' b' → logprob: -8.782519340515137
    9. '[' → logprob: -9.157519340515137
    10. '=' → logprob: -9.407519340515137

Token 424: 'entes' (ID: 5651)
  Prédit: 'entes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'entes' → logprob: -0.00012523093027994037
    2. '#' → logprob: -10.00012493133545
    3. 'ents' → logprob: -10.12512493133545
    4. 'ente' → logprob: -10.50012493133545
    5. 'ent' → logprob: -11.62512493133545
    6. '`' → logprob: -14.50012493133545
    7. 'a' → logprob: -14.62512493133545
    8. 'ENTES' → logprob: -14.87512493133545
    9. 'c' → logprob: -15.00012493133545
    10. 'e' → logprob: -15.12512493133545

Token 425: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.003352378262206912
    2. ' =' → logprob: -6.628352165222168
    3. ' c' → logprob: -7.503352165222168
    4. '=' → logprob: -7.628352165222168
    5. '#' → logprob: -8.003352165222168
    6. ',' → logprob: -8.378352165222168
    7. 'for' → logprob: -9.003352165222168
    8. '[' → logprob: -9.628352165222168
    9. '=[' → logprob: -9.878352165222168
    10. '[i' → logprob: -10.128352165222168

Token 426: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007245833403430879
    2. ' c' → logprob: -7.625724792480469
    3. '#' → logprob: -8.875724792480469
    4. '[' → logprob: -9.750724792480469
    5. '[
' → logprob: -11.125724792480469
    6. '[c' → logprob: -11.875724792480469
    7. '
' → logprob: -12.000724792480469
    8. '[i' → logprob: -13.125724792480469
    9. 'for' → logprob: -13.750724792480469
    10. '[#' → logprob: -14.000724792480469

Token 427: ' Cette' (ID: 27383)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00018494461255613714
    2. ' c' → logprob: -9.000185012817383
    3. '#' → logprob: -10.375185012817383
    4. '[' → logprob: -11.375185012817383
    5. 'for' → logprob: -11.750185012817383
    6. '[
' → logprob: -13.000185012817383
    7. '[i' → logprob: -13.375185012817383
    8. '[c' → logprob: -13.500185012817383
    9. 'sum' → logprob: -13.750185012817383
    10. '[(' → logprob: -13.875185012817383

Token 428: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0010462664067745209
    2. '#' → logprob: -7.501046180725098
    3. ' c' → logprob: -8.126046180725098
    4. '=' → logprob: -9.126046180725098
    5. ' =' → logprob: -10.126046180725098
    6. 'for' → logprob: -10.751046180725098
    7. '
' → logprob: -12.376046180725098
    8. 's' → logprob: -12.626046180725098
    9. 'a' → logprob: -12.876046180725098
    10. '[' → logprob: -13.376046180725098

Token 429: ' va' (ID: 3423)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5240020155906677
    2. '=' → logprob: -0.8990020155906677
    3. 'c' → logprob: -7.1490020751953125
    4. '=[' → logprob: -10.774002075195312
    5. 's' → logprob: -10.899002075195312
    6. 'a' → logprob: -11.774002075195312
    7. '#' → logprob: -11.899002075195312
    8. ' =[' → logprob: -11.899002075195312
    9. ' c' → logprob: -12.024002075195312
    10. 'b' → logprob: -12.524002075195312

Token 430: ' conten' (ID: 23523)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.15255355834960938
    2. '[i' → logprob: -2.1525535583496094
    3. '[' → logprob: -4.402553558349609
    4. ' c' → logprob: -4.652553558349609
    5. '[
' → logprob: -6.402553558349609
    6. ' [' → logprob: -7.777553558349609
    7. '#' → logprob: -8.15255355834961
    8. '[len' → logprob: -8.27755355834961
    9. '[]
' → logprob: -9.15255355834961
    10. '[(' → logprob: -9.27755355834961

Token 431: 'ir' (ID: 380)
  Prédit: 'ir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ir' → logprob: -0.00036216014996171
    2. 'er' → logprob: -8.000362396240234
    3. 'r' → logprob: -11.500362396240234
    4. '#' → logprob: -12.750362396240234
    5. 'u' → logprob: -12.750362396240234
    6. '[' → logprob: -12.875362396240234
    7. 'eur' → logprob: -12.875362396240234
    8. 't' → logprob: -13.000362396240234
    9. 'enir' → logprob: -14.125362396240234
    10. 'uer' → logprob: -14.375362396240234

Token 432: ' ' (ID: 220)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02951718494296074
    2. 'b' → logprob: -4.40451717376709
    3. '[b' → logprob: -4.90451717376709
    4. '[' → logprob: -5.02951717376709
    5. '[j' → logprob: -6.90451717376709
    6. '[a' → logprob: -7.52951717376709
    7. '[int' → logprob: -8.27951717376709
    8. '[(' → logprob: -8.40451717376709
    9. '[str' → logprob: -8.52951717376709
    10. 'abs' → logprob: -8.90451717376709

Token 433: '5' (ID: 20)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.17787951231002808
    2. 'b' → logprob: -1.9278795719146729
    3. '[b' → logprob: -5.052879333496094
    4. '[' → logprob: -5.677879333496094
    5. 'i' → logprob: -6.177879333496094
    6. 'abs' → logprob: -6.302879333496094
    7. '[j' → logprob: -6.427879333496094
    8. '[a' → logprob: -6.927879333496094
    9. 'a' → logprob: -7.177879333496094
    10. '[(' → logprob: -9.552879333496094

Token 434: ' éléments' (ID: 57375)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2165341079235077
    2. '[' → logprob: -2.71653413772583
    3. 'elements' → logprob: -3.34153413772583
    4. 'c' → logprob: -3.84153413772583
    5. ' éléments' → logprob: -3.96653413772583
    6. '[
' → logprob: -5.09153413772583
    7. 'i' → logprob: -5.21653413772583
    8. 'for' → logprob: -5.21653413772583
    9. 'a' → logprob: -5.34153413772583
    10. ' elements' → logprob: -5.46653413772583

Token 435: ',' (ID: 11)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.13815920054912567
    2. 'for' → logprob: -2.8881592750549316
    3. ' =' → logprob: -3.5131592750549316
    4. '=' → logprob: -4.013159275054932
    5. ',' → logprob: -4.763159275054932
    6. '#' → logprob: -4.888159275054932
    7. '[i' → logprob: -5.888159275054932
    8. ' for' → logprob: -6.013159275054932
    9. ' c' → logprob: -6.138159275054932
    10. ']' → logprob: -7.888159275054932

Token 436: ' un' (ID: 537)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.628714919090271
    2. '#' → logprob: -1.753714919090271
    3. '[' → logprob: -1.753714919090271
    4. 'c' → logprob: -2.3787150382995605
    5. '[
' → logprob: -4.8787150382995605
    6. '[(' → logprob: -5.1287150382995605
    7. '[]' → logprob: -6.0037150382995605
    8. '[c' → logprob: -6.1287150382995605
    9. '[j' → logprob: -6.6287150382995605
    10. '[]
' → logprob: -6.7537150382995605

Token 437: ' pour' (ID: 1930)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.9138903021812439
    2. 'for' → logprob: -1.2888903617858887
    3. ' par' → logprob: -2.2888903617858887
    4. 'pour' → logprob: -2.7888903617858887
    5. 'à' → logprob: -3.2888903617858887
    6. ' for' → logprob: -3.7888903617858887
    7. 'c' → logprob: -4.163890361785889
    8. 'a' → logprob: -4.413890361785889
    9. ' à' → logprob: -4.413890361785889
    10. 'e' → logprob: -4.538890361785889

Token 438: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03680267930030823
    2. '_' → logprob: -4.411802768707275
    3. 'range' → logprob: -4.536802768707275
    4. ' i' → logprob: -5.536802768707275
    5. 'a' → logprob: -5.661802768707275
    6. 'j' → logprob: -5.786802768707275
    7. ' range' → logprob: -7.161802768707275
    8. '_i' → logprob: -7.536802768707275
    9. ' j' → logprob: -7.911802768707275
    10. 'x' → logprob: -7.911802768707275

Token 439: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16568635404109955
    2. ' i' → logprob: -2.5406863689422607
    3. '_' → logprob: -3.5406863689422607
    4. 'j' → logprob: -4.540686130523682
    5. 'indice' → logprob: -4.790686130523682
    6. 'index' → logprob: -5.290686130523682
    7. 'range' → logprob: -6.165686130523682
    8. ' j' → logprob: -6.165686130523682
    9. '_i' → logprob: -6.290686130523682
    10. 'élé' → logprob: -6.290686130523682

Token 440: ' '' (ID: 461)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0202888250350952
    2. 'for' → logprob: -1.7702888250350952
    3. ' range' → logprob: -2.0202889442443848
    4. 'range' → logprob: -2.2702889442443848
    5. ' i' → logprob: -2.5202889442443848
    6. 'i' → logprob: -2.6452889442443848
    7. ' in' → logprob: -2.7702889442443848
    8. '_' → logprob: -5.270288944244385
    9. ',' → logprob: -5.520288944244385
    10. 'in' → logprob: -5.895288944244385

Token 441: 'i' (ID: 72)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6452125310897827
    2. 'i' → logprob: -0.7702125310897827
    3. ' i' → logprob: -4.645212650299072
    4. ' _' → logprob: -6.145212650299072
    5. 'range' → logprob: -8.145212173461914
    6. ' range' → logprob: -8.895212173461914
    7. ' in' → logprob: -9.645212173461914
    8. 'idx' → logprob: -9.770212173461914
    9. '_i' → logprob: -10.145212173461914
    10. 'x' → logprob: -10.395212173461914

Token 442: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05804859474301338
    2. 'in' → logprob: -2.9330484867095947
    3. ' for' → logprob: -7.058048725128174
    4. ',' → logprob: -7.433048725128174
    5. 'for' → logprob: -7.683048725128174
    6. 'range' → logprob: -7.808048725128174
    7. ' range' → logprob: -8.308048248291016
    8. ' en' → logprob: -9.058048248291016
    9. ' dans' → logprob: -9.058048248291016
    10. ')' → logprob: -9.433048248291016

Token 443: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05786353349685669
    2. ' for' → logprob: -3.057863473892212
    3. 'range' → logprob: -5.432863712310791
    4. '
' → logprob: -5.682863712310791
    5. '[' → logprob: -7.807863712310791
    6. 'c' → logprob: -7.932863712310791
    7. ' range' → logprob: -8.807863235473633
    8. ' in' → logprob: -9.057863235473633
    9. 'in' → logprob: -9.182863235473633
    10. 'b' → logprob: -9.682863235473633

Token 444: ' ' (ID: 220)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067154900170862675
    2. ' range' → logprob: -5.006715297698975
    3. '	range' → logprob: -17.381715774536133
    4. '(range' → logprob: -17.881715774536133
    5. ' ' → logprob: -18.256715774536133
    6. 'r' → logprob: -18.756715774536133
    7. 'a' → logprob: -18.881715774536133
    8. 'rang' → logprob: -18.881715774536133
    9. 'b' → logprob: -19.006715774536133
    10. '0' → logprob: -19.006715774536133

Token 445: '0' (ID: 15)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0004306692280806601
    2. ' range' → logprob: -7.750430583953857
    3. '(range' → logprob: -19.000431060791016
    4. '0' → logprob: -19.250431060791016
    5. '	range' → logprob: -19.250431060791016
    6. '

' → logprob: -19.250431060791016
    7. '5' → logprob: -19.500431060791016
    8. '
' → logprob: -19.625431060791016
    9. '   ' → logprob: -19.875431060791016
    10. 'a' → logprob: -19.875431060791016

Token 446: ' à' (ID: 1221)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.1598060131072998
    2. ' à' → logprob: -1.1598060131072998
    3. ',' → logprob: -1.6598060131072998
    4. ' for' → logprob: -2.5348060131073
    5. '
' → logprob: -3.2848060131073
    6. ' ' → logprob: -4.409806251525879
    7. 'for' → logprob: -4.409806251525879
    8. 'à' → logprob: -5.159806251525879
    9. 'range' → logprob: -5.159806251525879
    10. ' range' → logprob: -5.284806251525879

Token 447: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.005937686190009117
    2. ' ' → logprob: -5.130937576293945
    3. '5' → logprob: -11.880937576293945
    4. ' range' → logprob: -13.755937576293945
    5. 'range' → logprob: -14.005937576293945
    6. '   ' → logprob: -15.505937576293945
    7. '
' → logprob: -17.005937576293945
    8. 'len' → logprob: -17.255937576293945
    9. ' four' → logprob: -17.380937576293945
    10. ' len' → logprob: -17.505937576293945

Token 448: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0017157548572868109
    2. '5' → logprob: -7.001715660095215
    3. ' ' → logprob: -7.126715660095215
    4. 'len' → logprob: -15.626715660095215
    5. ' four' → logprob: -16.12671661376953
    6. 'range' → logprob: -16.18921661376953
    7. '   ' → logprob: -16.50171661376953
    8. ' len' → logprob: -16.68921661376953
    9. ' range' → logprob: -17.56421661376953
    10. '
' → logprob: -17.87671661376953

Token 449: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6436544060707092
    2. 'for' → logprob: -1.0186543464660645
    3. ' for' → logprob: -3.0186543464660645
    4. '[' → logprob: -3.7686543464660645
    5. 'range' → logprob: -4.0186543464660645
    6. '
' → logprob: -4.3936543464660645
    7. ' c' → logprob: -5.8936543464660645
    8. '[i' → logprob: -6.2686543464660645
    9. 'i' → logprob: -7.3936543464660645
    10. ' range' → logprob: -7.5186543464660645

Token 450: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0073205092921853065
    2. ' c' → logprob: -5.882320404052734
    3. 'for' → logprob: -6.632320404052734
    4. '[' → logprob: -6.882320404052734
    5. ' for' → logprob: -7.382320404052734
    6. '#' → logprob: -7.632320404052734
    7. '[i' → logprob: -8.132320404052734
    8. '[
' → logprob: -8.132320404052734
    9. '[c' → logprob: -9.007320404052734
    10. '
' → logprob: -9.007320404052734

Token 451: ' Pour' (ID: 13931)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.010055788792669773
    2. ' c' → logprob: -4.760056018829346
    3. '[' → logprob: -7.260056018829346
    4. '[
' → logprob: -7.885056018829346
    5. 'for' → logprob: -9.135055541992188
    6. '[c' → logprob: -9.385055541992188
    7. '[i' → logprob: -9.760055541992188
    8. ' [' → logprob: -9.760055541992188
    9. ' for' → logprob: -10.760055541992188
    10. ' [
' → logprob: -11.885055541992188

Token 452: ' chaque' (ID: 21194)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.20141518115997314
    2. 'i' → logprob: -1.7014151811599731
    3. '_i' → logprob: -14.451415061950684
    4. ' ' → logprob: -15.201415061950684
    5. '_' → logprob: -15.201415061950684
    6. '	i' → logprob: -15.326415061950684
    7. ' range' → logprob: -15.576415061950684
    8. ' ' → logprob: -15.826415061950684
    9. ' in' → logprob: -16.326416015625
    10. '[i' → logprob: -16.701416015625

Token 453: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759798288345337
    2. 'i' → logprob: -0.8259798288345337
    3. ' range' → logprob: -10.700980186462402
    4. 'range' → logprob: -11.325980186462402
    5. ' ' → logprob: -13.450980186462402
    6. ' in' → logprob: -13.575980186462402
    7. '	i' → logprob: -14.200980186462402
    8. '
' → logprob: -14.325980186462402
    9. ' ' → logprob: -14.700980186462402
    10. '[i' → logprob: -15.450980186462402

Token 454: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00023178798437584192
    2. ' i' → logprob: -8.375231742858887
    3. 'range' → logprob: -13.875231742858887
    4. ' range' → logprob: -15.875231742858887
    5. 'a' → logprob: -16.625232696533203
    6. '
' → logprob: -17.375232696533203
    7. ' ' → logprob: -17.625232696533203
    8. '_i' → logprob: -17.750232696533203
    9. '	i' → logprob: -18.125232696533203
    10. '_' → logprob: -18.625232696533203

Token 455: '',' (ID: 787)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09351009130477905
    2. 'in' → logprob: -2.468510150909424
    3. ',' → logprob: -5.468510150909424
    4. '),' → logprob: -9.468509674072266
    5. ' ,' → logprob: -9.843509674072266
    6. ')' → logprob: -10.468509674072266
    7. ']' → logprob: -10.718509674072266
    8. ':' → logprob: -10.718509674072266
    9. ' ' → logprob: -10.968509674072266
    10. '
' → logprob: -10.968509674072266

Token 456: ' on' (ID: 402)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.0653514564037323
    2. 'c' → logprob: -2.8153514862060547
    3. ' b' → logprob: -6.940351486206055
    4. ' a' → logprob: -7.190351486206055
    5. 'a' → logprob: -7.690351486206055
    6. 'b' → logprob: -7.815351486206055
    7. ' ' → logprob: -8.440351486206055
    8. 'abs' → logprob: -8.565351486206055
    9. ' abs' → logprob: -8.815351486206055
    10. ' ' → logprob: -9.940351486206055

Token 457: ' proc' (ID: 14550)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.06015655770897865
    2. ' range' → logprob: -3.5601565837860107
    3. 'c' → logprob: -4.435156345367432
    4. ' for' → logprob: -5.310156345367432
    5. 'range' → logprob: -5.810156345367432
    6. 'for' → logprob: -6.060156345367432
    7. ' b' → logprob: -6.310156345367432
    8. 'b' → logprob: -6.935156345367432
    9. ' i' → logprob: -7.185156345367432
    10. ' a' → logprob: -7.310156345367432

Token 458: 'ède' (ID: 48404)
  Prédit: 'ède'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ède' → logprob: -0.00014299227041192353
    2. 'c' → logprob: -9.750143051147461
    3. 'd' → logprob: -10.500143051147461
    4. '#' → logprob: -11.125143051147461
    5. 'de' → logprob: -11.250143051147461
    6. 'é' → logprob: -12.000143051147461
    7. 'l' → logprob: -12.000143051147461
    8. 'ede' → logprob: -13.250143051147461
    9. 'éder' → logprob: -13.625143051147461
    10. 'édé' → logprob: -13.625143051147461

Token 459: ' comme' (ID: 7971)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.13953272998332977
    2. ' a' → logprob: -2.6395328044891357
    3. 'a' → logprob: -4.389532566070557
    4. 'range' → logprob: -4.514532566070557
    5. 'b' → logprob: -4.639532566070557
    6. ' b' → logprob: -5.389532566070557
    7. ' range' → logprob: -5.514532566070557
    8. ' to' → logprob: -5.889532566070557
    9. '[' → logprob: -6.014532566070557
    10. ' i' → logprob: -6.139532566070557

Token 460: ' suit' (ID: 15170)
  Prédit: ' ceci'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ceci' → logprob: -0.6093838214874268
    2. 's' → logprob: -1.6093838214874268
    3. 'su' → logprob: -2.2343838214874268
    4. 'cela' → logprob: -2.6093838214874268
    5. ' suit' → logprob: -3.9843838214874268
    6. 'range' → logprob: -4.484383583068848
    7. 'c' → logprob: -4.609383583068848
    8. 'cel' → logprob: -5.234383583068848
    9. 'ce' → logprob: -5.234383583068848
    10. ' cela' → logprob: -5.609383583068848

Token 461: ' :

' (ID: 11287)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0297342538833618
    2. 'b' → logprob: -1.6547342538833618
    3. ' c' → logprob: -2.0297341346740723
    4. ':
' → logprob: -2.2797341346740723
    5. ' :' → logprob: -3.2797341346740723
    6. ' b' → logprob: -3.2797341346740723
    7. 'c' → logprob: -3.4047341346740723
    8. ' :
' → logprob: -3.7797341346740723
    9. 'a' → logprob: -4.029734134674072
    10. ',' → logprob: -4.279734134674072

Token 462: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0028679966926574707
    2. ' c' → logprob: -5.877868175506592
    3. 'for' → logprob: -10.877867698669434
    4. '[' → logprob: -11.377867698669434
    5. '[i' → logprob: -11.377867698669434
    6. 'i' → logprob: -11.877867698669434
    7. '[
' → logprob: -12.502867698669434
    8. '[c' → logprob: -13.127867698669434
    9. ' for' → logprob: -13.502867698669434
    10. ' ' → logprob: -13.752867698669434

Token 463: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004260511603206396
    2. ' c' → logprob: -5.754260540008545
    3. 'for' → logprob: -7.254260540008545
    4. '[' → logprob: -8.754260063171387
    5. ' for' → logprob: -9.254260063171387
    6. '[
' → logprob: -9.504260063171387
    7. '[c' → logprob: -11.004260063171387
    8. '[i' → logprob: -11.129260063171387
    9. ' [' → logprob: -12.129260063171387
    10. 'i' → logprob: -12.754260063171387

Token 464: ' '[' (ID: 40660)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.45742419362068176
    2. ' c' → logprob: -1.0824241638183594
    3. ' for' → logprob: -5.082424163818359
    4. 'for' → logprob: -5.457424163818359
    5. 'b' → logprob: -5.707424163818359
    6. 'i' → logprob: -5.832424163818359
    7. ' i' → logprob: -6.082424163818359
    8. 'a' → logprob: -6.207424163818359
    9. ' ' → logprob: -7.082424163818359
    10. ' b' → logprob: -7.082424163818359

Token 465: 'a' (ID: 64)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.47530555725097656
    2. 'a' → logprob: -1.1003055572509766
    3. 'abs' → logprob: -3.9753055572509766
    4. 'i' → logprob: -4.100305557250977
    5. ' b' → logprob: -5.600305557250977
    6. ' a' → logprob: -6.600305557250977
    7. '(' → logprob: -7.100305557250977
    8. '0' → logprob: -7.225305557250977
    9. 'j' → logprob: -7.725305557250977
    10. ' abs' → logprob: -7.725305557250977

Token 466: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0008788274135440588
    2. 'i' → logprob: -7.125878810882568
    3. '[' → logprob: -10.625879287719727
    4. 'a' → logprob: -11.250879287719727
    5. '
' → logprob: -11.875879287719727
    6. '[j' → logprob: -12.375879287719727
    7. ']' → logprob: -12.625879287719727
    8. ' i' → logprob: -12.625879287719727
    9. '][' → logprob: -12.625879287719727
    10. 'b' → logprob: -12.875879287719727

Token 467: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.016863171011209488
    2. ']+' → logprob: -4.7668633460998535
    3. '],' → logprob: -5.8918633460998535
    4. ']'' → logprob: -6.1418633460998535
    5. ' ]' → logprob: -7.3918633460998535
    6. ',' → logprob: -7.6418633460998535
    7. 'b' → logprob: -7.7668633460998535
    8. ']>' → logprob: -8.391862869262695
    9. ']-' → logprob: -8.516862869262695
    10. '[i' → logprob: -8.766862869262695

Token 468: ''' (ID: 6)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5226655006408691
    2. ' +' → logprob: -1.5226655006408691
    3. ',' → logprob: -2.022665500640869
    4. '[' → logprob: -3.647665500640869
    5. '+b' → logprob: -4.772665500640869
    6. '*' → logprob: -5.647665500640869
    7. ' if' → logprob: -5.897665500640869
    8. '-' → logprob: -6.022665500640869
    9. ' ,' → logprob: -6.147665500640869
    10. 'for' → logprob: -6.272665500640869

Token 469: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4824610948562622
    2. '+' → logprob: -0.9824610948562622
    3. '+[' → logprob: -5.357460975646973
    4. '<|end|>' → logprob: -6.857460975646973
    5. '+b' → logprob: -7.107460975646973
    6. '[' → logprob: -7.107460975646973
    7. ' if' → logprob: -8.732460975646973
    8. ' *' → logprob: -8.732460975646973
    9. '*' → logprob: -8.857460975646973
    10. 'b' → logprob: -9.107460975646973

Token 470: ' on' (ID: 402)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -1.0392179489135742
    2. 'b' → logprob: -1.6642179489135742
    3. '[' → logprob: -1.9142179489135742
    4. ' [' → logprob: -2.539217948913574
    5. ' b' → logprob: -2.789217948913574
    6. 'a' → logprob: -2.914217948913574
    7. ' a' → logprob: -3.289217948913574
    8. '+' → logprob: -3.289217948913574
    9. '[]' → logprob: -4.789217948913574
    10. ' ' → logprob: -5.164217948913574

Token 471: ' commence' (ID: 44755)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.979420006275177
    2. '[' → logprob: -1.7294199466705322
    3. ' +' → logprob: -1.7294199466705322
    4. ' a' → logprob: -2.1044199466705322
    5. ' [' → logprob: -2.8544199466705322
    6. 'a' → logprob: -2.9794199466705322
    7. '[i' → logprob: -4.104420185089111
    8. '[a' → logprob: -4.979420185089111
    9. '+a' → logprob: -5.604420185089111
    10. '[]' → logprob: -6.104420185089111

Token 472: ' par' (ID: 686)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07494517415761948
    2. '+' → logprob: -2.6999452114105225
    3. '[' → logprob: -5.574944972991943
    4. ' par' → logprob: -8.074945449829102
    5. '+[' → logprob: -8.199945449829102
    6. ' *' → logprob: -9.074945449829102
    7. 'a' → logprob: -9.199945449829102
    8. ',' → logprob: -9.574945449829102
    9. '*' → logprob: -9.699945449829102
    10. ' a' → logprob: -9.699945449829102

Token 473: ' créer' (ID: 40938)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.8638685941696167
    2. '[' → logprob: -1.4888685941696167
    3. '[a' → logprob: -2.2388687133789062
    4. 'b' → logprob: -2.3638687133789062
    5. '[b' → logprob: -2.9888687133789062
    6. 'a' → logprob: -3.1138687133789062
    7. ' b' → logprob: -3.2388687133789062
    8. ' a' → logprob: -4.613868713378906
    9. '[]' → logprob: -5.863868713378906
    10. '[i' → logprob: -5.988868713378906

Token 474: ' une' (ID: 2463)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.722709596157074
    2. ' a' → logprob: -1.9727096557617188
    3. 'a' → logprob: -2.0977096557617188
    4. '[' → logprob: -2.0977096557617188
    5. ' b' → logprob: -2.9727096557617188
    6. 'b' → logprob: -2.9727096557617188
    7. '[a' → logprob: -3.9727096557617188
    8. ' ' → logprob: -5.972709655761719
    9. '[b' → logprob: -6.472709655761719
    10. ' []' → logprob: -6.597709655761719

Token 475: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.45812273025512695
    2. ' [' → logprob: -1.083122730255127
    3. 'a' → logprob: -4.208122730255127
    4. '[a' → logprob: -5.333122730255127
    5. ' a' → logprob: -5.708122730255127
    6. 'b' → logprob: -6.958122730255127
    7. ' liste' → logprob: -7.208122730255127
    8. 'list' → logprob: -7.333122730255127
    9. 'liste' → logprob: -7.583122730255127
    10. ' list' → logprob: -7.708122730255127

Token 476: ' contenant' (ID: 131049)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2624930441379547
    2. '+' → logprob: -2.012493133544922
    3. '[' → logprob: -2.762493133544922
    4. 'a' → logprob: -4.512493133544922
    5. '([' → logprob: -4.887493133544922
    6. '(' → logprob: -5.012493133544922
    7. '[a' → logprob: -6.262493133544922
    8. '(a' → logprob: -6.637493133544922
    9. '+a' → logprob: -6.637493133544922
    10. ' [' → logprob: -7.012493133544922

Token 477: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1467001587152481
    2. 'l' → logprob: -2.646700143814087
    3. ' l' → logprob: -3.146700143814087
    4. ' a' → logprob: -4.271700382232666
    5. 'b' → logprob: -5.146700382232666
    6. 'le' → logprob: -7.271700382232666
    7. 'la' → logprob: -7.646700382232666
    8. ' b' → logprob: -7.771700382232666
    9. ' la' → logprob: -8.021699905395508
    10. '[' → logprob: -8.146699905395508

Token 478: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0024078846909105778
    2. ' a' → logprob: -6.627408027648926
    3. ''a' → logprob: -7.252408027648926
    4. 'e' → logprob: -8.752408027648926
    5. ''' → logprob: -9.127408027648926
    6. '[a' → logprob: -10.627408027648926
    7. 'i' → logprob: -11.127408027648926
    8. '[' → logprob: -11.377408027648926
    9. 'élé' → logprob: -11.377408027648926
    10. 'unique' → logprob: -12.002408027648926

Token 479: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.012593117542564869
    2. 'élé' → logprob: -4.8875932693481445
    3. ' a' → logprob: -5.6375932693481445
    4. ' élément' → logprob: -7.1375932693481445
    5. 'element' → logprob: -7.8875932693481445
    6. ''a' → logprob: -9.637593269348145
    7. 'ent' → logprob: -10.387593269348145
    8. 'unique' → logprob: -10.387593269348145
    9. ''' → logprob: -10.637593269348145
    10. 'b' → logprob: -10.762593269348145

Token 480: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.11301300674676895
    2. 'ément' → logprob: -2.3630130290985107
    3. 'ement' → logprob: -4.488012790679932
    4. 'élé' → logprob: -7.363012790679932
    5. 'lement' → logprob: -8.11301326751709
    6. 'é' → logprob: -8.98801326751709
    7. 'mé' → logprob: -8.98801326751709
    8. 'ém' → logprob: -9.86301326751709
    9. 'm' → logprob: -10.36301326751709
    10. '[' → logprob: -10.36301326751709

Token 481: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0035592082422226667
    2. ' a' → logprob: -5.878559112548828
    3. 'b' → logprob: -7.503559112548828
    4. '[' → logprob: -9.003559112548828
    5. '(' → logprob: -10.753559112548828
    6. ',' → logprob: -11.128559112548828
    7. 'i' → logprob: -11.628559112548828
    8. ' (' → logprob: -12.378559112548828
    9. ')' → logprob: -12.628559112548828
    10. ' b' → logprob: -12.753559112548828

Token 482: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0068058413453400135
    2. ' a' → logprob: -5.006805896759033
    3. 'b' → logprob: -10.131805419921875
    4. ''a' → logprob: -10.381805419921875
    5. ' ' → logprob: -12.131805419921875
    6. 'i' → logprob: -12.256805419921875
    7. ' b' → logprob: -13.006805419921875
    8. 'la' → logprob: -13.256805419921875
    9. ' i' → logprob: -13.881805419921875
    10. '  ' → logprob: -14.006805419921875

Token 483: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -4.9186317482963204e-05
    2. ''a' → logprob: -10.500049591064453
    3. 'b' → logprob: -11.375049591064453
    4. ' a' → logprob: -11.750049591064453
    5. ''' → logprob: -14.375049591064453
    6. '#' → logprob: -15.250049591064453
    7. '#a' → logprob: -15.250049591064453
    8. '```' → logprob: -15.750049591064453
    9. 'la' → logprob: -15.875049591064453
    10. '	a' → logprob: -16.250049591064453

Token 484: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0002692032721824944
    2. 'a' → logprob: -8.875268936157227
    3. '[' → logprob: -10.250268936157227
    4. ' à' → logprob: -10.375268936157227
    5. 'i' → logprob: -10.875268936157227
    6. 'b' → logprob: -11.000268936157227
    7. 'à' → logprob: -11.625268936157227
    8. ' [' → logprob: -12.625268936157227
    9. '[a' → logprob: -13.500268936157227
    10. '#' → logprob: -13.625268936157227

Token 485: ' à' (ID: 1221)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8585341572761536
    2. ',' → logprob: -1.4835340976715088
    3. '[' → logprob: -1.6085340976715088
    4. '+' → logprob: -2.358534097671509
    5. ' +' → logprob: -3.483534097671509
    6. 'a' → logprob: -4.608534336090088
    7. ' ,' → logprob: -5.608534336090088
    8. '[a' → logprob: -5.733534336090088
    9. ')' → logprob: -6.108534336090088
    10. '+[' → logprob: -6.983534336090088

Token 486: ' l' (ID: 305)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0032744447235018015
    2. ' i' → logprob: -6.253274440765381
    3. '[i' → logprob: -6.878274440765381
    4. 'index' → logprob: -8.878274917602539
    5. 'indice' → logprob: -9.378274917602539
    6. 'l' → logprob: -9.878274917602539
    7. 'position' → logprob: -11.128274917602539
    8. 'a' → logprob: -11.378274917602539
    9. 'la' → logprob: -12.378274917602539
    10. ' index' → logprob: -12.503274917602539

Token 487: ''' (ID: 6)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.4806901216506958
    2. 'indice' → logprob: -1.4806901216506958
    3. 'i' → logprob: -1.9806901216506958
    4. ''' → logprob: -5.105690002441406
    5. ''ind' → logprob: -5.480690002441406
    6. '[i' → logprob: -5.730690002441406
    7. ''i' → logprob: -6.480690002441406
    8. '[index' → logprob: -8.355690002441406
    9. 'a' → logprob: -8.480690002441406
    10. '_index' → logprob: -9.105690002441406

Token 488: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11118385940790176
    2. 'index' → logprob: -2.7361838817596436
    3. 'indice' → logprob: -3.2361838817596436
    4. ' i' → logprob: -7.7361836433410645
    5. 'position' → logprob: -7.8611836433410645
    6. '[i' → logprob: -8.486184120178223
    7. ' index' → logprob: -10.986184120178223
    8. 'indices' → logprob: -11.111184120178223
    9. '[' → logprob: -11.736184120178223
    10. '```' → logprob: -12.111184120178223

Token 489: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11434843391180038
    2. ' i' → logprob: -2.4893484115600586
    3. '[i' → logprob: -3.7393484115600586
    4. '(i' → logprob: -7.239348411560059
    5. '[' → logprob: -8.364348411560059
    6. ' [' → logprob: -8.864348411560059
    7. '0' → logprob: -9.864348411560059
    8. '[
' → logprob: -10.114348411560059
    9. ' (' → logprob: -10.364348411560059
    10. '
' → logprob: -10.864348411560059

Token 490: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015034328680485487
    2. ' i' → logprob: -6.5015034675598145
    3. '[i' → logprob: -13.876502990722656
    4. '	i' → logprob: -16.251502990722656
    5. '{i' → logprob: -17.751502990722656
    6. '_i' → logprob: -19.126502990722656
    7. '```' → logprob: -19.251502990722656
    8. ' ' → logprob: -19.251502990722656
    9. 'a' → logprob: -19.501502990722656
    10. '0' → logprob: -19.626502990722656

Token 491: ''.
' (ID: 49980)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.28353673219680786
    2. '+' → logprob: -1.908536672592163
    3. ']' → logprob: -2.908536672592163
    4. ',' → logprob: -4.033536911010742
    5. '[' → logprob: -4.533536911010742
    6. ')' → logprob: -4.783536911010742
    7. '+[' → logprob: -6.783536911010742
    8. ' +
' → logprob: -7.158536911010742
    9. 'a' → logprob: -7.283536911010742
    10. ' ,' → logprob: -7.408536911010742

Token 492: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.607823371887207
    2. ' +' → logprob: -1.107823371887207
    3. '[' → logprob: -2.232823371887207
    4. 'b' → logprob: -4.857823371887207
    5. 'a' → logprob: -5.982823371887207
    6. ' [' → logprob: -6.232823371887207
    7. 'c' → logprob: -6.482823371887207
    8. '+[' → logprob: -6.857823371887207
    9. ' b' → logprob: -7.607823371887207
    10. '[a' → logprob: -7.857823371887207

Token 493: ' -' (ID: 533)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.2914211750030518
    2. '[' → logprob: -1.5414211750030518
    3. ' b' → logprob: -1.6664211750030518
    4. 'b' → logprob: -1.7914211750030518
    5. ' +' → logprob: -2.1664211750030518
    6. 'a' → logprob: -4.291420936584473
    7. '+' → logprob: -4.416420936584473
    8. ' a' → logprob: -4.916420936584473
    9. ' c' → logprob: -6.791420936584473
    10. ' ['' → logprob: -7.166420936584473

Token 494: ' '[' (ID: 40660)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.5098113417625427
    2. '[b' → logprob: -1.8848114013671875
    3. '[' → logprob: -2.3848114013671875
    4. '[a' → logprob: -2.8848114013671875
    5. ' b' → logprob: -3.1348114013671875
    6. 'b' → logprob: -3.1348114013671875
    7. '['' → logprob: -5.5098114013671875
    8. 'a' → logprob: -6.2598114013671875
    9. ' ['' → logprob: -6.6348114013671875
    10. ' '' → logprob: -7.0098114013671875

Token 495: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002395748160779476
    2. 'a' → logprob: -6.5023956298828125
    3. 'ceil' → logprob: -7.3773956298828125
    4. 'i' → logprob: -9.377395629882812
    5. ' b' → logprob: -9.377395629882812
    6. '(b' → logprob: -11.252395629882812
    7. '(' → logprob: -11.252395629882812
    8. 'c' → logprob: -11.502395629882812
    9. 'int' → logprob: -11.627395629882812
    10. '(i' → logprob: -11.752395629882812

Token 496: '[j' (ID: 7895)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1279553291387856e-05
    2. '[j' → logprob: -11.625011444091797
    3. ' [' → logprob: -13.875011444091797
    4. '[' → logprob: -14.000011444091797
    5. '(i' → logprob: -15.750011444091797
    6. 'i' → logprob: -15.875011444091797
    7. '[
' → logprob: -16.250011444091797
    8. '[I' → logprob: -17.250011444091797
    9. ']' → logprob: -17.500011444091797
    10. '
' → logprob: -17.750011444091797

Token 497: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0067084976471960545
    2. ']'' → logprob: -5.38170862197876
    3. 'for' → logprob: -6.75670862197876
    4. ' for' → logprob: -7.88170862197876
    5. ']]' → logprob: -8.131708145141602
    6. 'j' → logprob: -9.756708145141602
    7. '-' → logprob: -10.381708145141602
    8. '[j' → logprob: -10.381708145141602
    9. ' ]' → logprob: -10.881708145141602
    10. ']-' → logprob: -11.006708145141602

Token 498: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4742174446582794
    2. 'for' → logprob: -0.974217414855957
    3. ']' → logprob: -9.599217414855957
    4. ' ' → logprob: -11.224217414855957
    5. ' j' → logprob: -11.349217414855957
    6. 'j' → logprob: -11.724217414855957
    7. '-' → logprob: -11.974217414855957
    8. '[j' → logprob: -12.099217414855957
    9. '
' → logprob: -12.349217414855957
    10. ''' → logprob: -12.724217414855957

Token 499: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0006279678200371563
    2. ' j' → logprob: -7.3756279945373535
    3. '	j' → logprob: -14.000627517700195
    4. '
' → logprob: -15.375627517700195
    5. ',j' → logprob: -16.625627517700195
    6. '_j' → logprob: -17.000627517700195
    7. ' ' → logprob: -17.000627517700195
    8. ' ' → logprob: -17.250627517700195
    9. '$j' → logprob: -17.625627517700195
    10. '
' → logprob: -17.750627517700195

Token 500: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1798834502696991
    2. 'in' → logprob: -1.8048834800720215
    3. 'range' → logprob: -10.554883003234863
    4. ' i' → logprob: -10.929883003234863
    5. '  ' → logprob: -11.179883003234863
    6. 'i' → logprob: -11.304883003234863
    7. ' ' → logprob: -11.554883003234863
    8. '	in' → logprob: -11.679883003234863
    9. 'n' → logprob: -12.367383003234863
    10. 'import' → logprob: -12.492383003234863

Token 501: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.023266326636075974
    2. ' range' → logprob: -3.773266315460205
    3. '[' → logprob: -11.023266792297363
    4. 'a' → logprob: -13.273266792297363
    5. 'b' → logprob: -14.148266792297363
    6. ' ' → logprob: -14.773266792297363
    7. '(range' → logprob: -15.023266792297363
    8. 'r' → logprob: -15.273266792297363
    9. '	range' → logprob: -15.398266792297363
    10. ']' → logprob: -15.773266792297363

Token 502: '(' (ID: 7)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.01450394093990326
    2. '(' → logprob: -4.2645039558410645
    3. '(len' → logprob: -8.639503479003906
    4. '(a' → logprob: -9.264503479003906
    5. 'i' → logprob: -10.014503479003906
    6. ' (' → logprob: -11.639503479003906
    7. 'a' → logprob: -12.389503479003906
    8. ' i' → logprob: -13.014503479003906
    9. 'len' → logprob: -13.514503479003906
    10. '5' → logprob: -13.514503479003906

Token 503: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.585985541343689
    2. 'i' → logprob: -0.835985541343689
    3. ' i' → logprob: -5.4609856605529785
    4. '(i' → logprob: -6.4609856605529785
    5. '(' → logprob: -6.5859856605529785
    6. ' ' → logprob: -6.9609856605529785
    7. '0' → logprob: -7.5859856605529785
    8. 'len' → logprob: -7.5859856605529785
    9. '1' → logprob: -8.46098518371582
    10. '3' → logprob: -8.58598518371582

Token 504: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4513477683067322
    2. ')]' → logprob: -1.076347827911377
    3. ' if' → logprob: -4.326347827911377
    4. 'if' → logprob: -4.826347827911377
    5. ']' → logprob: -7.701347827911377
    6. ' )' → logprob: -8.576347351074219
    7. '()' → logprob: -8.701347351074219
    8. ')][' → logprob: -8.826347351074219
    9. '   ' → logprob: -9.951347351074219
    10. ')])' → logprob: -10.451347351074219

Token 505: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01605384051799774
    2. 'if' → logprob: -4.141053676605225
    3. ']' → logprob: -11.516054153442383
    4. ' ' → logprob: -12.766054153442383
    5. '()' → logprob: -13.391054153442383
    6. '   ' → logprob: -13.391054153442383
    7. '    ' → logprob: -14.016054153442383
    8. ' ]' → logprob: -14.266054153442383
    9. '  ' → logprob: -14.391054153442383
    10. ' si' → logprob: -14.641054153442383

Token 506: ' i' (ID: 575)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.23487859964370728
    2. 'a' → logprob: -2.4848785400390625
    3. ' b' → logprob: -2.7348785400390625
    4. 'j' → logprob: -3.3598785400390625
    5. 'i' → logprob: -5.1098785400390625
    6. ' a' → logprob: -5.2348785400390625
    7. ' j' → logprob: -5.2348785400390625
    8. 'abs' → logprob: -5.7348785400390625
    9. '(b' → logprob: -6.6098785400390625
    10. '(a' → logprob: -6.8598785400390625

Token 507: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.7379357814788818
    2. '!=' → logprob: -0.7379357814788818
    3. '==' → logprob: -3.612935781478882
    4. ' ==' → logprob: -4.112936019897461
    5. ' in' → logprob: -9.612936019897461
    6. '>' → logprob: -9.862936019897461
    7. ' not' → logprob: -10.362936019897461
    8. ' >' → logprob: -10.362936019897461
    9. '<=' → logprob: -10.362936019897461
    10. '>=' → logprob: -10.487936019897461

Token 508: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.029769811779260635
    2. ' j' → logprob: -3.5297698974609375
    3. '	j' → logprob: -11.154769897460938
    4. ' ' → logprob: -12.654769897460938
    5. '   ' → logprob: -14.779769897460938
    6. 'i' → logprob: -14.779769897460938
    7. '  ' → logprob: -15.529769897460938
    8. '    ' → logprob: -15.779769897460938
    9. '_j' → logprob: -15.779769897460938
    10. '<|end|>' → logprob: -16.029769897460938

Token 509: ']'' (ID: 75642)
  Prédit: ']''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']'' → logprob: -0.003136366605758667
    2. ']' → logprob: -6.128136157989502
    3. ' and' → logprob: -7.628136157989502
    4. ' ]' → logprob: -7.878136157989502
    5. 'and' → logprob: -10.50313663482666
    6. ']',' → logprob: -10.87813663482666
    7. ']'
' → logprob: -10.87813663482666
    8. ''' → logprob: -12.25313663482666
    9. ']"' → logprob: -13.00313663482666
    10. '']' → logprob: -13.12813663482666

Token 510: ' :' (ID: 712)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.38656795024871826
    2. ']' → logprob: -1.7615679502487183
    3. '+' → logprob: -2.386568069458008
    4. ' c' → logprob: -4.636568069458008
    5. ':' → logprob: -4.761568069458008
    6. ' :' → logprob: -4.886568069458008
    7. ' if' → logprob: -5.261568069458008
    8. '[' → logprob: -5.636568069458008
    9. 'c' → logprob: -5.886568069458008
    10. ' ]' → logprob: -6.011568069458008

Token 511: ' c' (ID: 274)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.5813621878623962
    2. ' [' → logprob: -0.8313621878623962
    3. '[' → logprob: -5.331362247467041
    4. 'b' → logprob: -8.206361770629883
    5. ' b' → logprob: -9.331361770629883
    6. '[
' → logprob: -9.706361770629883
    7. '[j' → logprob: -9.956361770629883
    8. '[i' → logprob: -9.956361770629883
    9. '[a' → logprob: -10.331361770629883
    10. ' [
' → logprob: -12.081361770629883

Token 512: ''est' (ID: 6616)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08017076551914215
    2. ':' → logprob: -4.580170631408691
    3. '#' → logprob: -4.705170631408691
    4. '=' → logprob: -4.830170631408691
    5. ' =' → logprob: -5.080170631408691
    6. 'ont' → logprob: -5.080170631408691
    7. ' [' → logprob: -5.080170631408691
    8. '+' → logprob: -5.705170631408691
    9. 'om' → logprob: -5.705170631408691
    10. ',' → logprob: -6.205170631408691

Token 513: ' une' (ID: 2463)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.27363911271095276
    2. '[' → logprob: -1.7736390829086304
    3. ' [' → logprob: -2.89863920211792
    4. ' une' → logprob: -5.14863920211792
    5. '[a' → logprob: -5.89863920211792
    6. '[j' → logprob: -6.27363920211792
    7. 'une' → logprob: -6.27363920211792
    8. '[i' → logprob: -7.39863920211792
    9. '[l' → logprob: -7.89863920211792
    10. '[n' → logprob: -9.148638725280762

Token 514: ' compréhension' (ID: 142333)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.696776270866394
    2. 'liste' → logprob: -0.821776270866394
    3. ' liste' → logprob: -4.196776390075684
    4. '[
' → logprob: -4.321776390075684
    5. '[l' → logprob: -4.696776390075684
    6. '[i' → logprob: -5.196776390075684
    7. '[j' → logprob: -5.446776390075684
    8. 'list' → logprob: -5.446776390075684
    9. '[n' → logprob: -5.821776390075684
    10. '[list' → logprob: -6.196776390075684

Token 515: ' de' (ID: 334)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.39819759130477905
    2. ' de' → logprob: -1.1481976509094238
    3. '[' → logprob: -4.523197650909424
    4. '[j' → logprob: -8.523197174072266
    5. 'liste' → logprob: -9.023197174072266
    6. '_de' → logprob: -11.273197174072266
    7. ' liste' → logprob: -11.898197174072266
    8. '[i' → logprob: -12.023197174072266
    9. '[list' → logprob: -12.023197174072266
    10. ' ' → logprob: -12.023197174072266

Token 516: ' liste' (ID: 31719)
  Prédit: 'liste'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'liste' → logprob: -0.03877706825733185
    2. 'list' → logprob: -3.2887771129608154
    3. ' liste' → logprob: -7.288776874542236
    4. 'lista' → logprob: -11.163777351379395
    5. 'la' → logprob: -11.538777351379395
    6. ' list' → logprob: -11.538777351379395
    7. 'lis' → logprob: -11.788777351379395
    8. '[' → logprob: -12.288777351379395
    9. 'l' → logprob: -12.913777351379395
    10. 'b' → logprob: -13.538777351379395

Token 517: ' qui' (ID: 2780)
  Prédit: ' qui'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' qui' → logprob: -0.24436409771442413
    2. ' pour' → logprob: -2.494364023208618
    3. '[b' → logprob: -2.994364023208618
    4. 'qui' → logprob: -4.244364261627197
    5. '[' → logprob: -4.619364261627197
    6. ' [' → logprob: -4.869364261627197
    7. ' b' → logprob: -4.869364261627197
    8. ' permettant' → logprob: -4.994364261627197
    9. ' avec' → logprob: -5.119364261627197
    10. ' ' → logprob: -5.244364261627197

Token 518: ' collecte' (ID: 164733)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.20076069235801697
    2. ' récup' → logprob: -1.9507607221603394
    3. 'aj' → logprob: -5.075760841369629
    4. ' collecte' → logprob: -5.075760841369629
    5. ' retourne' → logprob: -5.575760841369629
    6. '[' → logprob: -5.575760841369629
    7. ' raj' → logprob: -5.825760841369629
    8. ' crée' → logprob: -6.075760841369629
    9. ' permet' → logprob: -6.075760841369629
    10. ' fournit' → logprob: -6.950760841369629

Token 519: ' les' (ID: 1341)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4390719532966614
    2. '[b' → logprob: -1.3140718936920166
    3. ' b' → logprob: -2.5640718936920166
    4. ' les' → logprob: -5.064072132110596
    5. '[' → logprob: -6.189072132110596
    6. 'les' → logprob: -7.689072132110596
    7. ' [' → logprob: -8.439071655273438
    8. '[j' → logprob: -8.689071655273438
    9. ' tous' → logprob: -8.939071655273438
    10. ' ' → logprob: -9.314071655273438

Token 520: ' éléments' (ID: 57375)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.027137605473399162
    2. ' b' → logprob: -3.652137517929077
    3. '[b' → logprob: -8.152137756347656
    4. 'elements' → logprob: -8.777137756347656
    5. 'élé' → logprob: -9.152137756347656
    6. 'val' → logprob: -9.402137756347656
    7. ' elements' → logprob: -9.652137756347656
    8. ' éléments' → logprob: -10.277137756347656
    9. '10' → logprob: -10.527137756347656
    10. ' ' → logprob: -11.027137756347656

Token 521: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.677254319190979
    2. ' de' → logprob: -1.052254319190979
    3. 'de' → logprob: -2.4272541999816895
    4. ' b' → logprob: -2.9272541999816895
    5. ' of' → logprob: -8.302254676818848
    6. ' ' → logprob: -8.427254676818848
    7. 'from' → logprob: -8.802254676818848
    8. 'd' → logprob: -9.177254676818848
    9. 'c' → logprob: -9.927254676818848
    10. '[b' → logprob: -10.302254676818848

Token 522: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0012199865886941552
    2. ' b' → logprob: -6.751219749450684
    3. ' de' → logprob: -10.501219749450684
    4. 'de' → logprob: -11.501219749450684
    5. 'a' → logprob: -11.751219749450684
    6. 'bj' → logprob: -14.126219749450684
    7. ' ' → logprob: -14.376219749450684
    8. ' of' → logprob: -14.501219749450684
    9. '[b' → logprob: -15.126219749450684
    10. '	b' → logprob: -15.251219749450684

Token 523: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.5073531866073608
    2. '[i' → logprob: -1.8823531866073608
    3. '[k' → logprob: -2.3823533058166504
    4. '[' → logprob: -2.6323533058166504
    5. ' de' → logprob: -3.1323533058166504
    6. ']' → logprob: -4.25735330581665
    7. ''' → logprob: -5.25735330581665
    8. 'indices' → logprob: -5.38235330581665
    9. '```' → logprob: -5.63235330581665
    10. ' à' → logprob: -5.63235330581665

Token 524: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7472761869430542
    2. ']'' → logprob: -0.7472761869430542
    3. ' for' → logprob: -3.8722763061523438
    4. 'for' → logprob: -4.247276306152344
    5. ''' → logprob: -4.497276306152344
    6. ' ]' → logprob: -5.497276306152344
    7. 'pour' → logprob: -6.497276306152344
    8. ' pour' → logprob: -7.497276306152344
    9. ']'
' → logprob: -9.747276306152344
    10. '']' → logprob: -9.997276306152344

Token 525: ' pour' (ID: 1930)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8168197274208069
    2. ' pour' → logprob: -1.941819667816162
    3. 'for' → logprob: -2.066819667816162
    4. ',' → logprob: -2.191819667816162
    5. ' de' → logprob: -3.066819667816162
    6. 'pour' → logprob: -3.316819667816162
    7. ' qui' → logprob: -3.816819667816162
    8. '<|end|>' → logprob: -4.316819667816162
    9. ' ' → logprob: -4.691819667816162
    10. 'où' → logprob: -5.316819667816162

Token 526: ' chaque' (ID: 21194)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.02414284273982048
    2. ' j' → logprob: -3.7741427421569824
    3. ' toutes' → logprob: -8.39914321899414
    4. ' ' → logprob: -8.77414321899414
    5. ' tous' → logprob: -9.14914321899414
    6. 'all' → logprob: -9.27414321899414
    7. ',j' → logprob: -9.77414321899414
    8. '```' → logprob: -9.89914321899414
    9. '<|end|>' → logprob: -10.14914321899414
    10. ' all' → logprob: -10.27414321899414

Token 527: ' index' (ID: 3472)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.038062259554862976
    2. ' j' → logprob: -3.288062334060669
    3. ' ' → logprob: -11.78806209564209
    4. '
' → logprob: -12.28806209564209
    5. 'i' → logprob: -13.28806209564209
    6. '	j' → logprob: -13.28806209564209
    7. ' ' → logprob: -13.66306209564209
    8. 'index' → logprob: -14.28806209564209
    9. 'indice' → logprob: -14.91306209564209
    10. 'range' → logprob: -15.03806209564209

Token 528: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.534850537776947
    2. ' j' → logprob: -0.909850537776947
    3. ' in' → logprob: -5.159850597381592
    4. ' de' → logprob: -6.409850597381592
    5. ' ' → logprob: -6.659850597381592
    6. ' i' → logprob: -6.909850597381592
    7. 'i' → logprob: -7.659850597381592
    8. 'in' → logprob: -8.409850120544434
    9. ' (' → logprob: -8.534850120544434
    10. 'de' → logprob: -8.659850120544434

Token 529: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002798103028908372
    2. ' j' → logprob: -6.002798080444336
    3. 'range' → logprob: -8.877798080444336
    4. '5' → logprob: -9.627798080444336
    5. '```' → logprob: -10.752798080444336
    6. '0' → logprob: -11.127798080444336
    7. ' range' → logprob: -11.377798080444336
    8. ' ' → logprob: -11.377798080444336
    9. ')' → logprob: -11.377798080444336
    10. 'i' → logprob: -11.502798080444336

Token 530: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005930693820118904
    2. 'in' → logprob: -6.1309309005737305
    3. ' dans' → logprob: -6.8809309005737305
    4. ' if' → logprob: -7.3809309005737305
    5. ' de' → logprob: -7.3809309005737305
    6. ' différent' → logprob: -8.13093090057373
    7. ' !=' → logprob: -8.25593090057373
    8. ' en' → logprob: -8.75593090057373
    9. ' not' → logprob: -8.88093090057373
    10. ''' → logprob: -9.38093090057373

Token 531: ' allant' (ID: 122150)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5203666090965271
    2. ' de' → logprob: -1.6453666687011719
    3. ' for' → logprob: -3.145366668701172
    4. ' en' → logprob: -3.270366668701172
    5. 'in' → logprob: -3.395366668701172
    6. ' dans' → logprob: -4.520366668701172
    7. 'for' → logprob: -4.520366668701172
    8. 'où' → logprob: -4.520366668701172
    9. ',' → logprob: -4.645366668701172
    10. 'en' → logprob: -4.895366668701172

Token 532: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.4828825294971466
    2. 'from' → logprob: -1.4828824996948242
    3. 'de' → logprob: -2.232882499694824
    4. ' from' → logprob: -3.732882499694824
    5. 'range' → logprob: -4.107882499694824
    6. ' range' → logprob: -5.357882499694824
    7. ' in' → logprob: -5.857882499694824
    8. 'in' → logprob: -8.482882499694824
    9. ')' → logprob: -9.232882499694824
    10. ' dans' → logprob: -9.607882499694824

Token 533: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004359383136034012
    2. ' ' → logprob: -6.004359245300293
    3. '1' → logprob: -6.379359245300293
    4. 'range' → logprob: -8.879359245300293
    5. ' range' → logprob: -10.129359245300293
    6. '5' → logprob: -12.129359245300293
    7. '```' → logprob: -14.879359245300293
    8. '   ' → logprob: -15.816859245300293
    9. '  ' → logprob: -16.69186019897461
    10. '
' → logprob: -17.00436019897461

Token 534: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.47757811343763e-05
    2. '1' → logprob: -10.750044822692871
    3. ' ' → logprob: -11.250044822692871
    4. 'range' → logprob: -12.000044822692871
    5. '5' → logprob: -12.625044822692871
    6. ' range' → logprob: -15.250044822692871
    7. '```' → logprob: -16.062543869018555
    8. 'i' → logprob: -16.437543869018555
    9. 'j' → logprob: -16.750043869018555
    10. '
' → logprob: -17.000043869018555

Token 535: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.40418580174446106
    2. 'à' → logprob: -1.1541857719421387
    3. '5' → logprob: -4.154185771942139
    4. ',' → logprob: -7.029185771942139
    5. 'to' → logprob: -8.779186248779297
    6. ''à' → logprob: -8.904186248779297
    7. '1' → logprob: -9.404186248779297
    8. '```' → logprob: -9.904186248779297
    9. ')' → logprob: -10.654186248779297
    10. ' to' → logprob: -10.779186248779297

Token 536: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.012535199522972107
    2. '5' → logprob: -4.637535095214844
    3. ' ' → logprob: -5.887535095214844
    4. '```' → logprob: -14.887535095214844
    5. '' → logprob: -15.450035095214844
    6. ' four' → logprob: -15.512535095214844
    7. 'range' → logprob: -16.387535095214844
    8. ',' → logprob: -16.387535095214844
    9. '
' → logprob: -16.637535095214844
    10. '   ' → logprob: -16.700035095214844

Token 537: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.3870002329349518
    2. '5' → logprob: -1.1370002031326294
    3. ' ' → logprob: -9.01200008392334
    4. '```' → logprob: -12.38700008392334
    5. '
' → logprob: -14.63700008392334
    6. ',' → logprob: -15.32450008392334
    7. '``' → logprob: -15.44950008392334
    8. '   ' → logprob: -15.57450008392334
    9. '1' → logprob: -15.63700008392334
    10. '' → logprob: -15.69950008392334

Token 538: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08813176304101944
    2. ',' → logprob: -3.7131316661834717
    3. '#' → logprob: -3.8381316661834717
    4. ' #' → logprob: -4.338131904602051
    5. 'if' → logprob: -4.838131904602051
    6. ' ,' → logprob: -4.838131904602051
    7. ' ' → logprob: -5.463131904602051
    8. '   ' → logprob: -7.088131904602051
    9. ' si' → logprob: -7.588131904602051
    10. ']' → logprob: -7.713131904602051

Token 539: ' à' (ID: 1221)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2695238590240479
    2. ' mais' → logprob: -1.7695238590240479
    3. ' #' → logprob: -1.8945238590240479
    4. ' sauf' → logprob: -2.144523859024048
    5. ' en' → logprob: -2.769523859024048
    6. ' ' → logprob: -2.769523859024048
    7. ' avec' → logprob: -3.144523859024048
    8. ' except' → logprob: -3.769523859024048
    9. ' j' → logprob: -4.019523620605469
    10. '   ' → logprob: -4.269523620605469

Token 540: ' l' (ID: 305)
  Prédit: 'condition'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'condition' → logprob: -0.03296933323144913
    2. 'l' → logprob: -4.0329694747924805
    3. ' condition' → logprob: -4.6579694747924805
    4. 'except' → logprob: -6.5329694747924805
    5. 'part' → logprob: -6.7829694747924805
    6. 'if' → logprob: -7.1579694747924805
    7. '```' → logprob: -8.03296947479248
    8. ' l' → logprob: -8.28296947479248
    9. 'excluding' → logprob: -8.28296947479248
    10. '#' → logprob: -8.53296947479248

Token 541: ''' (ID: 6)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7170429825782776
    2. 'except' → logprob: -1.5920429229736328
    3. 'ex' → logprob: -2.467042922973633
    4. 'not' → logprob: -3.092042922973633
    5. 'condition' → logprob: -3.092042922973633
    6. ''ex' → logprob: -3.217042922973633
    7. 'exception' → logprob: -4.092042922973633
    8. ' condition' → logprob: -4.342042922973633
    9. 'excluding' → logprob: -4.342042922973633
    10. 'range' → logprob: -4.842042922973633

Token 542: 'exception' (ID: 18081)
  Prédit: 'part'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'part' → logprob: -1.0304944515228271
    2. 'except' → logprob: -1.6554944515228271
    3. 'condition' → logprob: -1.7804944515228271
    4. 'ex' → logprob: -2.155494451522827
    5. 'if' → logprob: -2.530494451522827
    6. 'exception' → logprob: -3.155494451522827
    7. 'exclude' → logprob: -4.280494689941406
    8. ''ex' → logprob: -4.530494689941406
    9. 'excluding' → logprob: -5.030494689941406
    10. '```' → logprob: -5.530494689941406

Token 543: ' de' (ID: 334)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.807636022567749
    2. ' de' → logprob: -0.932636022567749
    3. ' que' → logprob: -2.807636022567749
    4. 'de' → logprob: -2.807636022567749
    5. 'j' → logprob: -3.932636022567749
    6. ' ' → logprob: -4.432636260986328
    7. ' des' → logprob: -6.182636260986328
    8. '<|end|>' → logprob: -6.182636260986328
    9. 'que' → logprob: -6.932636260986328
    10. 'i' → logprob: -7.432636260986328

Token 544: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.016221702098846436
    2. ' i' → logprob: -4.141221523284912
    3. 'j' → logprob: -8.89122200012207
    4. ' ' → logprob: -10.51622200012207
    5. ' j' → logprob: -11.64122200012207
    6. ' celui' → logprob: -12.26622200012207
    7. '	i' → logprob: -12.76622200012207
    8. 'l' → logprob: -13.89122200012207
    9. ' ' → logprob: -13.89122200012207
    10. '```' → logprob: -14.26622200012207

Token 545: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003982823807746172
    2. 'j' → logprob: -5.878983020782471
    3. ' i' → logprob: -6.753983020782471
    4. ' j' → logprob: -12.253982543945312
    5. 'a' → logprob: -13.128982543945312
    6. ''i' → logprob: -13.753982543945312
    7. '<|end|>' → logprob: -13.878982543945312
    8. 'l' → logprob: -15.003982543945312
    9. '```' → logprob: -15.003982543945312
    10. ')i' → logprob: -15.003982543945312

Token 546: ''' (ID: 6)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8359904289245605
    2. ']'' → logprob: -0.8359904289245605
    3. ']'
' → logprob: -2.5859904289245605
    4. ' if' → logprob: -3.8359904289245605
    5. 'if' → logprob: -3.8359904289245605
    6. ']',' → logprob: -4.9609904289245605
    7. ' ]' → logprob: -6.0859904289245605
    8. '])' → logprob: -6.9609904289245605
    9. '']' → logprob: -6.9609904289245605
    10. ']')
' → logprob: -7.3359904289245605

Token 547: ' (' (ID: 350)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.015988614410161972
    2. 'c' → logprob: -4.765988826751709
    3. ']
' → logprob: -5.890988826751709
    4. ',' → logprob: -6.390988826751709
    5. ' ]' → logprob: -7.140988826751709
    6. ' c' → logprob: -7.265988826751709
    7. '.' → logprob: -8.14098834991455
    8. '   ' → logprob: -8.51598834991455
    9. '].' → logprob: -8.76598834991455
    10. '#' → logprob: -8.89098834991455

Token 548: 'on' (ID: 263)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07506847381591797
    2. ' ]' → logprob: -4.075068473815918
    3. ']'' → logprob: -4.075068473815918
    4. ')]' → logprob: -4.450068473815918
    5. 'j' → logprob: -5.325068473815918
    6. ')' → logprob: -5.450068473815918
    7. '])' → logprob: -5.700068473815918
    8. ' j' → logprob: -6.075068473815918
    9. '].' → logprob: -6.200068473815918
    10. 'if' → logprob: -6.700068473815918

Token 549: ' excl' (ID: 57282)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.9878193736076355
    2. '!=' → logprob: -0.9878193736076355
    3. 'if' → logprob: -2.3628194332122803
    4. ']' → logprob: -2.7378194332122803
    5. ' if' → logprob: -3.7378194332122803
    6. ']!=' → logprob: -4.737819194793701
    7. ' j' → logprob: -4.862819194793701
    8. ' ' → logprob: -4.862819194793701
    9. 'n' → logprob: -4.987819194793701
    10. ' in' → logprob: -5.237819194793701

Token 550: 'ut' (ID: 339)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.6052514314651489
    2. 'uant' → logprob: -0.8552514314651489
    3. 'ude' → logprob: -4.605251312255859
    4. 'ut' → logprob: -5.105251312255859
    5. 'uent' → logprob: -5.230251312255859
    6. 'udent' → logprob: -5.980251312255859
    7. 'lude' → logprob: -7.355251312255859
    8. 'ant' → logprob: -7.480251312255859
    9. 'ure' → logprob: -7.480251312255859
    10. 'ent' → logprob: -7.730251312255859

Token 551: ' '' (ID: 461)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.47493690252304077
    2. 'i' → logprob: -1.8499369621276855
    3. ' j' → logprob: -2.0999369621276855
    4. ' i' → logprob: -2.9749369621276855
    5. 'l' → logprob: -3.8499369621276855
    6. 'le' → logprob: -4.5999369621276855
    7. ' ' → logprob: -5.7249369621276855
    8. ' la' → logprob: -5.8499369621276855
    9. ')' → logprob: -6.0999369621276855
    10. ' l' → logprob: -6.2249369621276855

Token 552: 'i' (ID: 72)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.45525825023651123
    2. 'i' → logprob: -1.0802582502365112
    3. ' i' → logprob: -4.330258369445801
    4. ' j' → logprob: -4.705258369445801
    5. 'le' → logprob: -6.955258369445801
    6. ')' → logprob: -7.330258369445801
    7. ' celui' → logprob: -7.705258369445801
    8. 'l' → logprob: -7.830258369445801
    9. '<|end|>' → logprob: -8.0802583694458
    10. ' ' → logprob: -8.5802583694458

Token 553: ''' (ID: 6)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.39062535762786865
    2. ')').' → logprob: -2.015625476837158
    3. ']').' → logprob: -2.890625476837158
    4. ')]' → logprob: -3.265625476837158
    5. ')'' → logprob: -3.640625476837158
    6. ')].' → logprob: -4.140625476837158
    7. ').' → logprob: -4.515625476837158
    8. '')' → logprob: -4.515625476837158
    9. ']' → logprob: -5.015625476837158
    10. ')',' → logprob: -5.515625476837158

Token 554: ' pour' (ID: 1930)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.178963303565979
    2. ')]' → logprob: -1.553963303565979
    3. ')'' → logprob: -1.678963303565979
    4. ']'' → logprob: -2.3039631843566895
    5. ']' → logprob: -2.8039631843566895
    6. ')'
' → logprob: -3.3039631843566895
    7. ']'
' → logprob: -3.9289631843566895
    8. ']').' → logprob: -4.3039631843566895
    9. '])' → logprob: -4.3039631843566895
    10. ')].' → logprob: -4.4289631843566895

Token 555: ' éviter' (ID: 64013)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.06399063020944595
    2. ' j' → logprob: -3.063990592956543
    3. ')' → logprob: -4.938990592956543
    4. ' éviter' → logprob: -4.938990592956543
    5. ']' → logprob: -8.813990592956543
    6. 'not' → logprob: -9.188990592956543
    7. 'év' → logprob: -9.313990592956543
    8. 'i' → logprob: -9.563990592956543
    9. 'b' → logprob: -9.688990592956543
    10. ' )' → logprob: -9.938990592956543

Token 556: ' la' (ID: 557)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.2564761638641357
    2. 'j' → logprob: -2.1314761638641357
    3. ' que' → logprob: -2.3814761638641357
    4. ' une' → logprob: -2.3814761638641357
    5. 'd' → logprob: -2.5064761638641357
    6. ' la' → logprob: -3.0064761638641357
    7. 'le' → logprob: -3.1314761638641357
    8. ' d' → logprob: -3.2564761638641357
    9. 'la' → logprob: -3.3814761638641357
    10. 'l' → logprob: -3.5064761638641357

Token 557: ' red' (ID: 3592)
  Prédit: ' duplication'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' duplication' → logprob: -0.7384750247001648
    2. 'dup' → logprob: -1.3634750843048096
    3. 'self' → logprob: -2.1134750843048096
    4. 'division' → logprob: -3.4884750843048096
    5. 'double' → logprob: -4.3634748458862305
    6. 'duplic' → logprob: -4.4884748458862305
    7. 'div' → logprob: -4.6134748458862305
    8. ' self' → logprob: -4.7384748458862305
    9. 'duplicate' → logprob: -4.7384748458862305
    10. 'dou' → logprob: -4.7384748458862305

Token 558: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.038252752274274826
    2. 'uplic' → logprob: -4.288252830505371
    3. 'und' → logprob: -4.663252830505371
    4. 'undance' → logprob: -5.663252830505371
    5. 'uplicate' → logprob: -5.788252830505371
    6. 'up' → logprob: -6.413252830505371
    7. 'onde' → logprob: -6.663252830505371
    8. 'é' → logprob: -7.038252830505371
    9. 'undant' → logprob: -7.413252830505371
    10. 'onder' → logprob: -7.663252830505371

Token 559: 'ance' (ID: 766)
  Prédit: 'ance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ance' → logprob: -0.00020854694594163448
    2. 'é' → logprob: -9.375208854675293
    3. 'ancy' → logprob: -10.125208854675293
    4. 'érance' → logprob: -11.000208854675293
    5. 'ancé' → logprob: -11.375208854675293
    6. ')' → logprob: -11.625208854675293
    7. 'ancer' → logprob: -11.750208854675293
    8. 'ância' → logprob: -12.250208854675293
    9. '#' → logprob: -12.500208854675293
    10. 'nance' → logprob: -12.500208854675293

Token 560: ').
' (ID: 6294)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2662353515625
    2. ')' → logprob: -2.6412353515625
    3. ')]' → logprob: -2.8912353515625
    4. '])' → logprob: -4.0162353515625
    5. ']'
' → logprob: -4.0162353515625
    6. ']'' → logprob: -4.1412353515625
    7. ']')
' → logprob: -4.6412353515625
    8. ']
' → logprob: -4.8912353515625
    9. ').' → logprob: -5.2662353515625
    10. ']').' → logprob: -5.5162353515625

Token 561: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.23266887664794922
    2. ' c' → logprob: -1.7326688766479492
    3. '[' → logprob: -4.357668876647949
    4. '[
' → logprob: -4.732668876647949
    5. 'result' → logprob: -6.107668876647949
    6. ' [' → logprob: -6.232668876647949
    7. '[c' → logprob: -7.107668876647949
    8. ' [
' → logprob: -8.10766887664795
    9. '[i' → logprob: -8.10766887664795
    10. ',' → logprob: -8.48266887664795

Token 562: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00790743064135313
    2. ' c' → logprob: -5.007907390594482
    3. '[
' → logprob: -7.757907390594482
    4. '[' → logprob: -8.25790786743164
    5. 'result' → logprob: -8.25790786743164
    6. 'for' → logprob: -10.13290786743164
    7. 'combined' → logprob: -10.50790786743164
    8. '[c' → logprob: -10.75790786743164
    9. '[]
' → logprob: -10.75790786743164
    10. '#' → logprob: -10.88290786743164

Token 563: ' '[' (ID: 40660)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.603331983089447
    2. ' c' → logprob: -1.1033320426940918
    3. '[a' → logprob: -2.978332042694092
    4. ' [' → logprob: -3.853332042694092
    5. 'result' → logprob: -4.103332042694092
    6. ' result' → logprob: -4.853332042694092
    7. 'a' → logprob: -4.978332042694092
    8. '[' → logprob: -5.478332042694092
    9. ' a' → logprob: -6.228332042694092
    10. '[c' → logprob: -6.603332042694092

Token 564: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06524492055177689
    2. 'b' → logprob: -2.9402449131011963
    3. 'c' → logprob: -5.315245151519775
    4. 'i' → logprob: -6.440245151519775
    5. 'abs' → logprob: -6.440245151519775
    6. 'max' → logprob: -7.690245151519775
    7. 'sum' → logprob: -7.815245151519775
    8. '(a' → logprob: -8.440244674682617
    9. 'j' → logprob: -8.565244674682617
    10. 'ceil' → logprob: -8.940244674682617

Token 565: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.012579347006976604
    2. '[j' → logprob: -4.387579441070557
    3. 'i' → logprob: -10.637578964233398
    4. ']' → logprob: -11.137578964233398
    5. '[k' → logprob: -11.637578964233398
    6. '[' → logprob: -12.262578964233398
    7. '(i' → logprob: -13.012578964233398
    8. '[a' → logprob: -13.012578964233398
    9. '[
' → logprob: -13.262578964233398
    10. 'a' → logprob: -13.512578964233398

Token 566: ']]' (ID: 8928)
  Prédit: ']]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3285403251647949
    2. ']' → logprob: -1.453540325164795
    3. ']'' → logprob: -3.453540325164795
    4. '],' → logprob: -4.703540325164795
    5. '+' → logprob: -6.453540325164795
    6. ']+' → logprob: -7.328540325164795
    7. '],'' → logprob: -7.578540325164795
    8. ',' → logprob: -7.578540325164795
    9. '']]' → logprob: -7.703540325164795
    10. ']*' → logprob: -8.078540802001953

Token 567: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5313276052474976
    2. ' +' → logprob: -0.9063276052474976
    3. '+b' → logprob: -5.781327724456787
    4. ']' → logprob: -5.781327724456787
    5. ',' → logprob: -7.781327724456787
    6. '+
' → logprob: -7.906327724456787
    7. '+[' → logprob: -7.906327724456787
    8. '+c' → logprob: -8.281327247619629
    9. ' +
' → logprob: -9.031327247619629
    10. '+a' → logprob: -9.031327247619629

Token 568: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0015059324214234948
    2. ' [' → logprob: -7.0015058517456055
    3. '[' → logprob: -7.8765058517456055
    4. '[j' → logprob: -8.751505851745605
    5. 'b' → logprob: -10.126505851745605
    6. '([' → logprob: -12.251505851745605
    7. '[x' → logprob: -12.876505851745605
    8. '[a' → logprob: -13.001505851745605
    9. '[i' → logprob: -13.126505851745605
    10. '[k' → logprob: -13.751505851745605

Token 569: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -2.4391956685576588e-05
    2. ' b' → logprob: -10.625024795532227
    3. 'bj' → logprob: -17.125024795532227
    4. '   ' → logprob: -18.625024795532227
    5. 'j' → logprob: -18.750024795532227
    6. '    ' → logprob: -19.375024795532227
    7. '...' → logprob: -19.625024795532227
    8. '(b' → logprob: -19.625024795532227
    9. ')b' → logprob: -19.875024795532227
    10. '	b' → logprob: -19.875024795532227

Token 570: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -8.2994620242971e-06
    2. 'j' → logprob: -11.750008583068848
    3. '[' → logprob: -15.125008583068848
    4. ' [' → logprob: -16.75000762939453
    5. '
' → logprob: -17.75000762939453
    6. '[
' → logprob: -17.87500762939453
    7. '[b' → logprob: -19.37500762939453
    8. '(j' → logprob: -19.50000762939453
    9. '[i' → logprob: -20.00000762939453
    10. '```' → logprob: -20.50000762939453

Token 571: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20144052803516388
    2. 'for' → logprob: -1.7014405727386475
    3. ']' → logprob: -10.701440811157227
    4. '	for' → logprob: -12.826440811157227
    5. ' ' → logprob: -13.576440811157227
    6. '
' → logprob: -14.451440811157227
    7. '
' → logprob: -16.951440811157227
    8. ')' → logprob: -16.951440811157227
    9. 'or' → logprob: -17.076440811157227
    10. ' ' → logprob: -17.201440811157227

Token 572: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759437680244446
    2. ' for' → logprob: -0.8259437680244446
    3. ']' → logprob: -12.950943946838379
    4. ' ' → logprob: -14.700943946838379
    5. ' j' → logprob: -14.825943946838379
    6. '	for' → logprob: -14.950943946838379
    7. '
' → logprob: -15.075943946838379
    8. '[j' → logprob: -15.200943946838379
    9. ')' → logprob: -15.575943946838379
    10. '
' → logprob: -17.075942993164062

Token 573: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.12693114578723907
    2. ' j' → logprob: -2.1269311904907227
    3. '	j' → logprob: -13.501931190490723
    4. ' ' → logprob: -14.251931190490723
    5. ' ' → logprob: -14.376931190490723
    6. '[j' → logprob: -15.876931190490723
    7. '(j' → logprob: -16.626930236816406
    8. ',j' → logprob: -17.001930236816406
    9. '
' → logprob: -17.126930236816406
    10. '$j' → logprob: -17.626930236816406

Token 574: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602393537759781
    2. 'in' → logprob: -1.910239338874817
    3. 'j' → logprob: -12.035239219665527
    4. ' j' → logprob: -12.035239219665527
    5. ' ' → logprob: -13.035239219665527
    6. 'n' → logprob: -14.785239219665527
    7. 'not' → logprob: -15.410239219665527
    8. 'import' → logprob: -15.535239219665527
    9. '
' → logprob: -15.785239219665527
    10. ' not' → logprob: -16.785240173339844

Token 575: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009130131802521646
    2. ' range' → logprob: -7.000913143157959
    3. '(range' → logprob: -14.3759126663208
    4. '(' → logprob: -15.1259126663208
    5. 'rang' → logprob: -15.2509126663208
    6. '	range' → logprob: -16.125913619995117
    7. ' ' → logprob: -16.250913619995117
    8. '
' → logprob: -16.375913619995117
    9. 'r' → logprob: -16.625913619995117
    10. '[' → logprob: -17.750913619995117

Token 576: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0010344763286411762
    2. '5' → logprob: -6.876034259796143
    3. ' (' → logprob: -14.0010347366333
    4. '(i' → logprob: -14.7510347366333
    5. ']' → logprob: -16.126033782958984
    6. ' ' → logprob: -16.376033782958984
    7. '   ' → logprob: -16.376033782958984
    8. '(
' → logprob: -16.501033782958984
    9. '
' → logprob: -16.876033782958984
    10. '1' → logprob: -17.126033782958984

Token 577: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001985021401196718
    2. '(' → logprob: -6.8769850730896
    3. '1' → logprob: -7.3769850730896
    4. 'i' → logprob: -9.126984596252441
    5. '(i' → logprob: -9.126984596252441
    6. ' ' → logprob: -10.126984596252441
    7. '0' → logprob: -10.501984596252441
    8. '   ' → logprob: -11.251984596252441
    9. '
' → logprob: -11.814484596252441
    10. 'a' → logprob: -12.939484596252441

Token 578: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0077629080042243
    2. 'if' → logprob: -5.007762908935547
    3. ' if' → logprob: -6.882762908935547
    4. ' )' → logprob: -11.382762908935547
    5. ')]' → logprob: -12.132762908935547
    6. ' ' → logprob: -13.507762908935547
    7. '   ' → logprob: -13.882762908935547
    8. ']' → logprob: -14.382762908935547
    9. ')
' → logprob: -14.757762908935547
    10. 'j' → logprob: -14.882762908935547

Token 579: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.061986736953258514
    2. 'if' → logprob: -2.8119866847991943
    3. ']' → logprob: -11.186986923217773
    4. ' ' → logprob: -13.186986923217773
    5. ' j' → logprob: -13.436986923217773
    6. '])' → logprob: -14.186986923217773
    7. '   ' → logprob: -14.186986923217773
    8. ')' → logprob: -15.436986923217773
    9. ')]' → logprob: -16.311986923217773
    10. ' ' → logprob: -17.061986923217773

Token 580: ' i' (ID: 575)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.400049090385437
    2. ' j' → logprob: -1.150049090385437
    3. 'i' → logprob: -4.650049209594727
    4. ' i' → logprob: -5.650049209594727
    5. ' ' → logprob: -12.400049209594727
    6. '	j' → logprob: -12.525049209594727
    7. '
' → logprob: -13.275049209594727
    8. ' ' → logprob: -14.150049209594727
    9. '```' → logprob: -14.150049209594727
    10. '   ' → logprob: -14.275049209594727

Token 581: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.4741937816143036
    2. ' !=' → logprob: -0.974193811416626
    3. ']!=' → logprob: -9.599193572998047
    4. ']' → logprob: -11.349193572998047
    5. ' ' → logprob: -11.849193572998047
    6. ' ' → logprob: -12.349193572998047
    7. ' j' → logprob: -12.474193572998047
    8. '()!=' → logprob: -12.474193572998047
    9. '!=(' → logprob: -12.724193572998047
    10. '!' → logprob: -12.724193572998047

Token 582: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.493430894101039e-05
    2. ' j' → logprob: -9.500075340270996
    3. 'i' → logprob: -16.87507438659668
    4. '	j' → logprob: -17.75007438659668
    5. '```' → logprob: -18.12507438659668
    6. ')' → logprob: -18.25007438659668
    7. ']' → logprob: -18.37507438659668
    8. '
' → logprob: -18.62507438659668
    9. '_j' → logprob: -19.12507438659668
    10. '   ' → logprob: -19.25007438659668

Token 583: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026158396154642105
    2. ']'' → logprob: -4.151158332824707
    3. '])' → logprob: -4.651158332824707
    4. '])]' → logprob: -8.526158332824707
    5. ']]' → logprob: -8.776158332824707
    6. ']))' → logprob: -10.026158332824707
    7. ']
' → logprob: -10.401158332824707
    8. ')]' → logprob: -10.401158332824707
    9. ']"' → logprob: -11.276158332824707
    10. ']'
' → logprob: -11.401158332824707

Token 584: ' :' (ID: 712)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3279368281364441
    2. 'for' → logprob: -1.4529368877410889
    3. ')' → logprob: -4.20293664932251
    4. ' for' → logprob: -4.45293664932251
    5. ' c' → logprob: -5.07793664932251
    6. ']' → logprob: -5.20293664932251
    7. '
' → logprob: -5.82793664932251
    8. ')c' → logprob: -6.32793664932251
    9. ')
' → logprob: -7.07793664932251
    10. ' =' → logprob: -7.95293664932251

Token 585: ' on' (ID: 402)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.257868230342865
    2. '[a' → logprob: -1.7578682899475098
    3. '[' → logprob: -3.7578682899475098
    4. ' a' → logprob: -4.13286828994751
    5. 'a' → logprob: -5.50786828994751
    6. ' [
' → logprob: -5.75786828994751
    7. ' c' → logprob: -6.00786828994751
    8. 'c' → logprob: -6.38286828994751
    9. '[
' → logprob: -6.75786828994751
    10. ' []' → logprob: -7.25786828994751

Token 586: ' combine' (ID: 21700)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.15262837707996368
    2. ' combine' → logprob: -2.6526284217834473
    3. 'combine' → logprob: -4.152628421783447
    4. ' create' → logprob: -5.152628421783447
    5. ' concaten' → logprob: -5.402628421783447
    6. ' complète' → logprob: -5.527628421783447
    7. ' assemble' → logprob: -5.652628421783447
    8. ']' → logprob: -5.777628421783447
    9. 'concat' → logprob: -5.902628421783447
    10. 'c' → logprob: -6.152628421783447

Token 587: ' la' (ID: 557)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.37445008754730225
    2. ' ces' → logprob: -2.249450206756592
    3. ' these' → logprob: -2.374450206756592
    4. 'les' → logprob: -3.249450206756592
    5. '[' → logprob: -4.124450206756592
    6. 'ces' → logprob: -4.374450206756592
    7. '[a' → logprob: -4.374450206756592
    8. ' la' → logprob: -5.124450206756592
    9. 'a' → logprob: -5.374450206756592
    10. '<|end|>' → logprob: -5.499450206756592

Token 588: ' liste' (ID: 31719)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6486902832984924
    2. '[' → logprob: -1.3986902236938477
    3. '[a' → logprob: -2.0236902236938477
    4. 's' → logprob: -3.0236902236938477
    5. '[
' → logprob: -4.023690223693848
    6. 'de' → logprob: -4.648690223693848
    7. '[]' → logprob: -5.398690223693848
    8. 'liste' → logprob: -5.773690223693848
    9. ' deux' → logprob: -6.273690223693848
    10. ' liste' → logprob: -6.773690223693848

Token 589: ' contenant' (ID: 131049)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.663979709148407
    2. '[a' → logprob: -0.788979709148407
    3. ' a' → logprob: -3.9139797687530518
    4. '[' → logprob: -4.788979530334473
    5. '(a' → logprob: -7.163979530334473
    6. ' [' → logprob: -7.663979530334473
    7. 'des' → logprob: -8.538979530334473
    8. '_a' → logprob: -8.663979530334473
    9. '[]' → logprob: -9.288979530334473
    10. '([' → logprob: -9.288979530334473

Token 590: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06800086051225662
    2. ' a' → logprob: -2.8180007934570312
    3. 'l' → logprob: -5.568000793457031
    4. ' l' → logprob: -6.443000793457031
    5. '[a' → logprob: -7.568000793457031
    6. ' ' → logprob: -10.568000793457031
    7. 'la' → logprob: -11.318000793457031
    8. '[' → logprob: -11.443000793457031
    9. '(a' → logprob: -11.443000793457031
    10. ' [' → logprob: -11.818000793457031

Token 591: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.005869539920240641
    2. ' a' → logprob: -5.255869388580322
    3. 'élé' → logprob: -8.00586986541748
    4. '[a' → logprob: -9.38086986541748
    5. 'element' → logprob: -9.63086986541748
    6. 'e' → logprob: -10.13086986541748
    7. ' élément' → logprob: -10.38086986541748
    8. ''a' → logprob: -11.13086986541748
    9. '_a' → logprob: -11.50586986541748
    10. ']' → logprob: -12.00586986541748

Token 592: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004480442963540554
    2. 'élé' → logprob: -5.504480361938477
    3. ' a' → logprob: -8.129480361938477
    4. 'element' → logprob: -9.254480361938477
    5. ' élément' → logprob: -11.879480361938477
    6. 'i' → logprob: -14.004480361938477
    7. '[a' → logprob: -14.129480361938477
    8. 'elem' → logprob: -14.504480361938477
    9. '```' → logprob: -14.504480361938477
    10. ' ' → logprob: -15.129480361938477

Token 593: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.0017080175457522273
    2. 'ments' → logprob: -6.376708030700684
    3. ']' → logprob: -14.126708030700684
    4. 'me' → logprob: -14.376708030700684
    5. 'men' → logprob: -14.376708030700684
    6. 'ement' → logprob: -14.501708030700684
    7. 'm' → logprob: -14.626708030700684
    8. '[' → logprob: -15.001708030700684
    9. 'mentation' → logprob: -15.001708030700684
    10. '_' → logprob: -15.376708030700684

Token 594: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.003192685777321458
    2. 'de' → logprob: -6.253192901611328
    3. ' a' → logprob: -7.503192901611328
    4. ' de' → logprob: -7.503192901611328
    5. '[a' → logprob: -9.003192901611328
    6. '(a' → logprob: -10.878192901611328
    7. 'd' → logprob: -11.503192901611328
    8. '[' → logprob: -12.628192901611328
    9. '_a' → logprob: -14.003192901611328
    10. '(' → logprob: -14.003192901611328

Token 595: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00020544764993246645
    2. ' a' → logprob: -8.500205039978027
    3. ''a' → logprob: -14.875205039978027
    4. ' ' → logprob: -15.250205039978027
    5. '   ' → logprob: -15.250205039978027
    6. 'b' → logprob: -15.500205039978027
    7. 'i' → logprob: -15.625205039978027
    8. ''' → logprob: -16.375205993652344
    9. ']' → logprob: -16.375205993652344
    10. '  ' → logprob: -16.500205993652344

Token 596: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -5.200166469876422e-06
    2. ']' → logprob: -12.375004768371582
    3. '[j' → logprob: -15.000004768371582
    4. '[' → logprob: -15.000004768371582
    5. 'i' → logprob: -15.500004768371582
    6. '(i' → logprob: -16.1250057220459
    7. '[a' → logprob: -17.5000057220459
    8. '   ' → logprob: -18.2500057220459
    9. 'a' → logprob: -18.3750057220459
    10. '][' → logprob: -18.7500057220459

Token 597: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005317062605172396
    2. '']' → logprob: -8.375532150268555
    3. ']'' → logprob: -9.125532150268555
    4. ']]' → logprob: -9.250532150268555
    5. ')]' → logprob: -9.375532150268555
    6. ' ]' → logprob: -12.125532150268555
    7. ']+' → logprob: -13.375532150268555
    8. '()]' → logprob: -13.625532150268555
    9. 'i' → logprob: -14.250532150268555
    10. '])' → logprob: -14.750532150268555

Token 598: ' et' (ID: 859)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3898947238922119
    2. '+' → logprob: -1.139894723892212
    3. ')' → logprob: -6.389894485473633
    4. ']' → logprob: -7.139894485473633
    5. '[' → logprob: -9.264894485473633
    6. 'for' → logprob: -9.389894485473633
    7. ' +
' → logprob: -9.889894485473633
    8. '+[' → logprob: -10.014894485473633
    9. '+b' → logprob: -10.014894485473633
    10. '```' → logprob: -10.264894485473633

Token 599: ' la' (ID: 557)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7032936215400696
    2. '[b' → logprob: -1.2032935619354248
    3. 'les' → logprob: -2.578293561935425
    4. 'la' → logprob: -2.703293561935425
    5. ' [' → logprob: -3.453293561935425
    6. ' la' → logprob: -4.453293800354004
    7. 'b' → logprob: -4.703293800354004
    8. ' les' → logprob: -5.453293800354004
    9. 'l' → logprob: -6.453293800354004
    10. '[l' → logprob: -6.703293800354004

Token 600: ' liste' (ID: 31719)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0394017696380615
    2. 'liste' → logprob: -1.5394017696380615
    3. 'b' → logprob: -1.9144017696380615
    4. '[
' → logprob: -2.2894017696380615
    5. '[b' → logprob: -2.7894017696380615
    6. 's' → logprob: -3.1644017696380615
    7. ' liste' → logprob: -3.6644017696380615
    8. '```' → logprob: -4.039402008056641
    9. 'list' → logprob: -5.289402008056641
    10. '
' → logprob: -5.664402008056641

Token 601: ' form' (ID: 1625)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -1.026782751083374
    2. 'compr' → logprob: -1.526782751083374
    3. 'com' → logprob: -1.901782751083374
    4. 'cont' → logprob: -2.401782751083374
    5. '([' → logprob: -3.276782751083374
    6. '[b' → logprob: -3.901782751083374
    7. '(' → logprob: -4.026782989501953
    8. ' des' → logprob: -4.151782989501953
    9. 'con' → logprob: -4.401782989501953
    10. '(
' → logprob: -4.401782989501953

Token 602: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.16538105905056
    2. 'ant' → logprob: -1.9153810739517212
    3. '[' → logprob: -5.915380954742432
    4. 'é' → logprob: -7.665380954742432
    5. 'att' → logprob: -8.29038143157959
    6. 'ee' → logprob: -8.41538143157959
    7. 'ent' → logprob: -8.54038143157959
    8. 'ed' → logprob: -8.54038143157959
    9. 'ées' → logprob: -8.91538143157959
    10. 'at' → logprob: -9.16538143157959

Token 603: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.8038720488548279
    2. '   ' → logprob: -1.8038721084594727
    3. 'de' → logprob: -2.0538721084594727
    4. ' de' → logprob: -2.1788721084594727
    5. 'e' → logprob: -3.3038721084594727
    6. '[j' → logprob: -3.4288721084594727
    7. 'par' → logprob: -3.9288721084594727
    8. '[' → logprob: -4.553872108459473
    9. ' des' → logprob: -4.678872108459473
    10. ' ' → logprob: -5.178872108459473

Token 604: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.7576633095741272
    2. 'b' → logprob: -1.1326632499694824
    3. '[b' → logprob: -1.6326632499694824
    4. '[' → logprob: -5.507663249969482
    5. ' les' → logprob: -5.757663249969482
    6. '[j' → logprob: -6.132663249969482
    7. 'la' → logprob: -6.382663249969482
    8. 'l' → logprob: -6.507663249969482
    9. 'ces' → logprob: -8.63266372680664
    10. '(b' → logprob: -8.88266372680664

Token 605: ' autres' (ID: 18701)
  Prédit: 'élé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'élé' → logprob: -0.16789519786834717
    2. 'b' → logprob: -2.0428953170776367
    3. 'elements' → logprob: -3.9178953170776367
    4. ' éléments' → logprob: -6.042895317077637
    5. '[b' → logprob: -7.167895317077637
    6. 'él' → logprob: -7.667895317077637
    7. '[' → logprob: -7.917895317077637
    8. 'val' → logprob: -8.292895317077637
    9. '[j' → logprob: -8.417895317077637
    10. '```' → logprob: -8.917895317077637

Token 606: ' éléments' (ID: 57375)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.2816116511821747
    2. ' b' → logprob: -2.281611680984497
    3. 'élé' → logprob: -2.656611680984497
    4. ' éléments' → logprob: -2.906611680984497
    5. 'elements' → logprob: -4.531611442565918
    6. ']' → logprob: -5.906611442565918
    7. ' elements' → logprob: -6.031611442565918
    8. 'indices' → logprob: -7.281611442565918
    9. '[b' → logprob: -7.781611442565918
    10. '[' → logprob: -8.656611442565918

Token 607: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.33955469727516174
    2. ' de' → logprob: -1.8395546674728394
    3. ' b' → logprob: -2.339554786682129
    4. 'de' → logprob: -3.589554786682129
    5. '   ' → logprob: -6.339554786682129
    6. '[b' → logprob: -6.964554786682129
    7. ' of' → logprob: -7.214554786682129
    8. ' ' → logprob: -8.089554786682129
    9. '    ' → logprob: -8.964554786682129
    10. '  ' → logprob: -9.089554786682129

Token 608: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0015746140852570534
    2. ' b' → logprob: -6.751574516296387
    3. 'a' → logprob: -8.001574516296387
    4. 'j' → logprob: -11.251574516296387
    5. 'c' → logprob: -12.126574516296387
    6. ' ' → logprob: -12.189074516296387
    7. ']' → logprob: -12.376574516296387
    8. 'i' → logprob: -12.439074516296387
    9. ''b' → logprob: -12.564074516296387
    10. 's' → logprob: -12.876574516296387

Token 609: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008771154098212719
    2. ']' → logprob: -4.758770942687988
    3. '[k' → logprob: -9.133770942687988
    4. '[:' → logprob: -11.383770942687988
    5. '[' → logprob: -11.508770942687988
    6. 'j' → logprob: -11.883770942687988
    7. '
' → logprob: -12.008770942687988
    8. '[i' → logprob: -12.133770942687988
    9. '])' → logprob: -13.133770942687988
    10. ']
' → logprob: -13.758770942687988

Token 610: ']'' (ID: 75642)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6964564323425293
    2. ']'' → logprob: -0.6964564323425293
    3. 'for' → logprob: -6.571456432342529
    4. ' for' → logprob: -7.196456432342529
    5. ' ]' → logprob: -7.321456432342529
    6. '])' → logprob: -8.821456909179688
    7. '']' → logprob: -9.321456909179688
    8. '[j' → logprob: -9.571456909179688
    9. ']]' → logprob: -9.821456909179688
    10. ')]' → logprob: -10.446456909179688

Token 611: ' où' (ID: 15113)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8269666433334351
    2. ' for' → logprob: -1.201966643333435
    3. ']' → logprob: -1.451966643333435
    4. ')' → logprob: -4.076966762542725
    5. '   ' → logprob: -5.076966762542725
    6. 'c' → logprob: -5.826966762542725
    7. '[i' → logprob: -6.826966762542725
    8. ' ' → logprob: -8.951966285705566
    9. ' c' → logprob: -9.451966285705566
    10. '])' → logprob: -9.576966285705566

Token 612: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.048622675240039825
    2. ' j' → logprob: -3.0486226081848145
    3. 'i' → logprob: -10.923623085021973
    4. '```' → logprob: -11.673623085021973
    5. ' i' → logprob: -12.798623085021973
    6. ' ' → logprob: -12.798623085021973
    7. '	j' → logprob: -13.173623085021973
    8. ' ' → logprob: -14.923623085021973
    9. '
' → logprob: -15.673623085021973
    10. 'not' → logprob: -16.423622131347656

Token 613: ' différent' (ID: 114823)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.2545356750488281
    2. ' !=' → logprob: -1.5045356750488281
    3. ']!=' → logprob: -6.379535675048828
    4. ']' → logprob: -7.129535675048828
    5. '```' → logprob: -10.379535675048828
    6. 'j' → logprob: -11.004535675048828
    7. '[j' → logprob: -11.629535675048828
    8. '!=(' → logprob: -11.879535675048828
    9. '!='' → logprob: -12.004535675048828
    10. ')!=' → logprob: -12.004535675048828

Token 614: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.014182545244693756
    2. 'de' → logprob: -4.2641825675964355
    3. '_de' → logprob: -12.264182090759277
    4. 's' → logprob: -12.389182090759277
    5. 'ent' → logprob: -12.514182090759277
    6. ' ' → logprob: -13.139182090759277
    7. 'e' → logprob: -13.514182090759277
    8. 'from' → logprob: -13.764182090759277
    9. ']' → logprob: -14.639182090759277
    10. ')' → logprob: -14.889182090759277

Token 615: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03804493322968483
    2. ' i' → logprob: -3.2880449295043945
    3. ' ' → logprob: -12.913044929504395
    4. ' ' → logprob: -14.663044929504395
    5. 'a' → logprob: -15.038044929504395
    6. '	i' → logprob: -15.913044929504395
    7. ''i' → logprob: -16.53804588317871
    8. '
' → logprob: -17.28804588317871
    9. ' a' → logprob: -17.41304588317871
    10. '  ' → logprob: -17.66304588317871

Token 616: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6928857564926147
    2. 'for' → logprob: -1.4428857564926147
    3. 'c' → logprob: -2.3178858757019043
    4. ' for' → logprob: -2.4428858757019043
    5. '   ' → logprob: -3.3178858757019043
    6. ')' → logprob: -3.5678858757019043
    7. ' c' → logprob: -5.442885875701904
    8. '	c' → logprob: -5.692885875701904
    9. '[i' → logprob: -6.692885875701904
    10. ' ' → logprob: -7.067885875701904

Token 617: ' utilisant' (ID: 92474)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5655067563056946
    2. ']' → logprob: -0.9405067563056946
    3. '   ' → logprob: -3.94050669670105
    4. ' ' → logprob: -5.690506935119629
    5. ')
' → logprob: -5.940506935119629
    6. '[' → logprob: -6.190506935119629
    7. '<|end|>' → logprob: -6.190506935119629
    8. ']
' → logprob: -6.315506935119629
    9. '
' → logprob: -7.065506935119629
    10. ':' → logprob: -7.065506935119629

Token 618: ' l' (ID: 305)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10838517546653748
    2. 'l' → logprob: -3.2333850860595703
    3. ' l' → logprob: -3.6083850860595703
    4. 'le' → logprob: -4.73338508605957
    5. ' +' → logprob: -4.85838508605957
    6. 'la' → logprob: -5.23338508605957
    7. '+l' → logprob: -5.35838508605957
    8. ' la' → logprob: -5.60838508605957
    9. ''' → logprob: -6.48338508605957
    10. ' le' → logprob: -7.23338508605957

Token 619: ''op' (ID: 70747)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.19954510033130646
    2. ''op' → logprob: -2.57454514503479
    3. 'e' → logprob: -2.69954514503479
    4. '+' → logprob: -4.074544906616211
    5. 'es' → logprob: -5.074544906616211
    6. ''' → logprob: -5.074544906616211
    7. 'iste' → logprob: -5.199544906616211
    8. ''+' → logprob: -6.949544906616211
    9. '’op' → logprob: -7.949544906616211
    10. 'ist' → logprob: -7.949544906616211

Token 620: 'érateur' (ID: 108528)
  Prédit: 'ération'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ération' → logprob: -1.022059679031372
    2. '+' → logprob: -1.272059679031372
    3. 'érateur' → logprob: -1.272059679031372
    4. 'er' → logprob: -3.147059679031372
    5. 'ér' → logprob: -4.147059440612793
    6. '+)' → logprob: -4.897059440612793
    7. 'é' → logprob: -5.022059440612793
    8. '```' → logprob: -6.147059440612793
    9. '[' → logprob: -7.022059440612793
    10. ')' → logprob: -7.272059440612793

Token 621: ' '+' (ID: 30120)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024788661394268274
    2. ' +' → logprob: -6.002479076385498
    3. '+l' → logprob: -14.25247859954834
    4. '+
' → logprob: -14.37747859954834
    5. '[' → logprob: -14.75247859954834
    6. ' plus' → logprob: -15.37747859954834
    7. ''' → logprob: -15.75247859954834
    8. ' +
' → logprob: -16.002479553222656
    9. '"+"' → logprob: -16.127479553222656
    10. '=' → logprob: -16.127479553222656

Token 622: '',' (ID: 787)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0053644259460270405
    2. ')' → logprob: -5.755364418029785
    3. '']' → logprob: -7.005364418029785
    4. '.' → logprob: -7.130364418029785
    5. ' ]' → logprob: -9.005364418029785
    6. ',' → logprob: -9.755364418029785
    7. '#' → logprob: -10.005364418029785
    8. '].' → logprob: -10.130364418029785
    9. '[' → logprob: -10.255364418029785
    10. '])' → logprob: -10.630364418029785

Token 623: ' qui' (ID: 2780)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9536129236221313
    2. 'c' → logprob: -1.0786129236221313
    3. ')' → logprob: -2.078612804412842
    4. ']' → logprob: -2.328612804412842
    5. 'for' → logprob: -3.953612804412842
    6. ' c' → logprob: -5.078612804412842
    7. '[' → logprob: -5.328612804412842
    8. '[
' → logprob: -5.953612804412842
    9. ' for' → logprob: -6.078612804412842
    10. ' ' → logprob: -6.328612804412842

Token 624: ' concat' (ID: 73950)
  Prédit: ' crée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' crée' → logprob: -0.07912375777959824
    2. ' permet' → logprob: -3.7041237354278564
    3. 'concat' → logprob: -3.7041237354278564
    4. ' concat' → logprob: -4.2041239738464355
    5. 'cr' → logprob: -5.3291239738464355
    6. ' concaten' → logprob: -6.5791239738464355
    7. ' créé' → logprob: -6.9541239738464355
    8. 'con' → logprob: -7.2041239738464355
    9. ' combine' → logprob: -7.3291239738464355
    10. 'combine' → logprob: -7.4541239738464355

Token 625: 'ène' (ID: 22902)
  Prédit: 'ène'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ène' → logprob: -0.0008302362984977663
    2. 'é' → logprob: -7.250830173492432
    3. 'éné' → logprob: -10.37583065032959
    4. 'én' → logprob: -11.12583065032959
    5. 'è' → logprob: -11.37583065032959
    6. 'èn' → logprob: -11.50083065032959
    7. '\' → logprob: -11.62583065032959
    8. 'ene' → logprob: -11.75083065032959
    9. 'ènes' → logprob: -11.75083065032959
    10. 'énez' → logprob: -12.00083065032959

Token 626: ' les' (ID: 1341)
  Prédit: ' les'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' les' → logprob: -0.1478005200624466
    2. 'les' → logprob: -2.8978004455566406
    3. 'ces' → logprob: -3.3978004455566406
    4. ' ces' → logprob: -3.3978004455566406
    5. ' deux' → logprob: -4.647800445556641
    6. ' des' → logprob: -6.522800445556641
    7. ' these' → logprob: -7.147800445556641
    8. ' lists' → logprob: -7.522800445556641
    9. '[' → logprob: -7.647800445556641
    10. 'lists' → logprob: -8.14780044555664

Token 627: ' listes' (ID: 179198)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.1767178475856781
    2. 'list' → logprob: -2.051717758178711
    3. 'lists' → logprob: -4.301717758178711
    4. ' deux' → logprob: -4.551717758178711
    5. ' listes' → logprob: -5.051717758178711
    6. '2' → logprob: -7.426717758178711
    7. 'liste' → logprob: -7.426717758178711
    8. '```' → logprob: -7.426717758178711
    9. 'l' → logprob: -8.051717758178711
    10. 'listas' → logprob: -8.426717758178711

Token 628: ' en' (ID: 469)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5688163638114929
    2. 'for' → logprob: -1.3188164234161377
    3. ']' → logprob: -2.5688164234161377
    4. ' for' → logprob: -3.4438164234161377
    5. '.' → logprob: -3.8188164234161377
    6. ')' → logprob: -4.443816184997559
    7. '[' → logprob: -4.943816184997559
    8. ' c' → logprob: -5.818816184997559
    9. '[c' → logprob: -6.068816184997559
    10. '[:]' → logprob: -6.068816184997559

Token 629: ' Python' (ID: 26534)
  Prédit: 'une'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'une' → logprob: -0.1266225129365921
    2. ' une' → logprob: -3.126622438430786
    3. '```' → logprob: -3.876622438430786
    4. 'cré' → logprob: -4.126622676849365
    5. 'python' → logprob: -4.376622676849365
    6. 'liste' → logprob: -4.501622676849365
    7. 'list' → logprob: -5.376622676849365
    8. 'lists' → logprob: -5.876622676849365
    9. 'cre' → logprob: -7.001622676849365
    10. 'un' → logprob: -7.001622676849365

Token 630: '.

' (ID: 364)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014330857433378696
    2. 'for' → logprob: -4.389330863952637
    3. ']' → logprob: -7.639330863952637
    4. ' c' → logprob: -7.764330863952637
    5. ' for' → logprob: -8.639330863952637
    6. ')' → logprob: -8.889330863952637
    7. '
' → logprob: -9.014330863952637
    8. ']
' → logprob: -9.514330863952637
    9. ',
' → logprob: -9.764330863952637
    10. ')
' → logprob: -9.764330863952637

Token 631: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -6.749814019713085e-06
    2. '
' → logprob: -12.750006675720215
    3. ' c' → logprob: -13.500006675720215
    4. '```' → logprob: -14.500006675720215
    5. ']
' → logprob: -14.625006675720215
    6. '[c' → logprob: -14.750006675720215
    7. ']' → logprob: -14.875006675720215
    8. 'for' → logprob: -15.125006675720215
    9. ')
' → logprob: -15.875006675720215
    10. '#' → logprob: -16.37500762939453

Token 632: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.318681188422488e-05
    2. ' c' → logprob: -12.12501335144043
    3. '#' → logprob: -12.37501335144043
    4. '
' → logprob: -13.00001335144043
    5. 'for' → logprob: -14.50001335144043
    6. '[c' → logprob: -15.75001335144043
    7. 'import' → logprob: -16.12501335144043
    8. ' 
' → logprob: -16.50001335144043
    9. ')' → logprob: -16.62501335144043
    10. ')
' → logprob: -16.87501335144043

Token 633: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3141535520553589
    2. 'result' → logprob: -2.6891536712646484
    3. 'sum' → logprob: -3.0641536712646484
    4. 's' → logprob: -3.1891536712646484
    5. ' c' → logprob: -3.6891536712646484
    6. 'for' → logprob: -4.064153671264648
    7. 'print' → logprob: -4.064153671264648
    8. 'max' → logprob: -4.814153671264648
    9. 'results' → logprob: -5.189153671264648
    10. '#' → logprob: -5.314153671264648

Token 634: 'sum' (ID: 12298)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.039489299058914185
    2. 'sum' → logprob: -3.914489269256592
    3. '[c' → logprob: -4.914489269256592
    4. '[' → logprob: -5.914489269256592
    5. 'sorted' → logprob: -5.914489269256592
    6. 'max' → logprob: -6.914489269256592
    7. '[i' → logprob: -7.289489269256592
    8. '[[' → logprob: -7.414489269256592
    9. '[max' → logprob: -7.539489269256592
    10. '[a' → logprob: -7.664489269256592

Token 635: '([...' (ID: 149262)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.11030763387680054
    2. '(c' → logprob: -2.3603076934814453
    3. '(' → logprob: -5.235307693481445
    4. '('' → logprob: -6.110307693481445
    5. '(['' → logprob: -7.360307693481445
    6. '((' → logprob: -7.485307693481445
    7. '(([' → logprob: -7.610307693481445
    8. '()' → logprob: -8.860307693481445
    9. '(...)' → logprob: -8.860307693481445
    10. '([...' → logprob: -8.860307693481445

Token 636: '])' (ID: 4636)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.28757721185684204
    2. '([...' → logprob: -2.1625771522521973
    3. '(...' → logprob: -2.6625771522521973
    4. '(a' → logprob: -3.6625771522521973
    5. '])' → logprob: -4.287577152252197
    6. '(...)' → logprob: -4.662577152252197
    7. ')' → logprob: -5.537577152252197
    8. ']' → logprob: -5.662577152252197
    9. '(' → logprob: -5.662577152252197
    10. '(c' → logprob: -7.037577152252197

Token 637: ''' (ID: 6)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.4945795238018036
    2. '(c' → logprob: -1.119579553604126
    3. ')' → logprob: -3.619579553604126
    4. '(sum' → logprob: -4.494579315185547
    5. '(...)' → logprob: -5.119579315185547
    6. '([...' → logprob: -5.244579315185547
    7. '(a' → logprob: -5.744579315185547
    8. '(' → logprob: -5.869579315185547
    9. '(...' → logprob: -6.619579315185547
    10. '[c' → logprob: -6.619579315185547

Token 638: ' :' (ID: 712)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.49526697397232056
    2. '(' → logprob: -1.2452669143676758
    3. '(sum' → logprob: -2.620266914367676
    4. '(c' → logprob: -4.620266914367676
    5. '([...' → logprob: -4.995266914367676
    6. ')' → logprob: -5.620266914367676
    7. '(
' → logprob: -6.120266914367676
    8. 'sum' → logprob: -6.245266914367676
    9. '(...)' → logprob: -6.745266914367676
    10. 'c' → logprob: -6.745266914367676

Token 639: ' on' (ID: 402)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.027372168377041817
    2. ' sum' → logprob: -3.652372121810913
    3. ' on' → logprob: -7.402372360229492
    4. 'on' → logprob: -8.777372360229492
    5. 'cal' → logprob: -8.777372360229492
    6. 'calcul' → logprob: -9.652372360229492
    7. '(sum' → logprob: -10.652372360229492
    8. ' somme' → logprob: -11.027372360229492
    9. 'calc' → logprob: -11.277372360229492
    10. ' calc' → logprob: -11.902372360229492

Token 640: ' fait' (ID: 7473)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.22361095249652863
    2. 'cal' → logprob: -2.4736108779907227
    3. 'calc' → logprob: -2.8486108779907227
    4. ' calc' → logprob: -3.3486108779907227
    5. ' sum' → logprob: -4.598610877990723
    6. 'calcul' → logprob: -5.223610877990723
    7. 'calculate' → logprob: -5.473610877990723
    8. ' somme' → logprob: -6.848610877990723
    9. ')' → logprob: -7.098610877990723
    10. ' calculates' → logprob: -7.973610877990723

Token 641: ' ensuite' (ID: 39713)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.021452298387885094
    2. 'la' → logprob: -3.8964521884918213
    3. ' sum' → logprob: -8.146451950073242
    4. ')' → logprob: -8.396451950073242
    5. '(sum' → logprob: -8.646451950073242
    6. ' la' → logprob: -9.146451950073242
    7. 'l' → logprob: -10.771451950073242
    8. 'som' → logprob: -11.396451950073242
    9. '=sum' → logprob: -11.396451950073242
    10. 'une' → logprob: -11.646451950073242

Token 642: ' la' (ID: 557)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3178021013736725
    2. 'la' → logprob: -1.31780207157135
    3. ' la' → logprob: -5.6928019523620605
    4. ' sum' → logprob: -7.8178019523620605
    5. ')' → logprob: -7.9428019523620605
    6. '(sum' → logprob: -9.067802429199219
    7. 'l' → logprob: -9.192802429199219
    8. 'calcul' → logprob: -9.567802429199219
    9. 'som' → logprob: -10.692802429199219
    10. 'le' → logprob: -10.817802429199219

Token 643: ' somme' (ID: 64484)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.0014322625938802958
    2. 's' → logprob: -7.001432418823242
    3. 'som' → logprob: -8.126432418823242
    4. ' somme' → logprob: -8.501432418823242
    5. ' sum' → logprob: -11.126432418823242
    6. 'summ' → logprob: -12.376432418823242
    7. 'calcul' → logprob: -14.251432418823242
    8. '(sum' → logprob: -14.626432418823242
    9. 'summer' → logprob: -15.126432418823242
    10. '=sum' → logprob: -15.251432418823242

Token 644: ' de' (ID: 334)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.9998667240142822
    2. '([...' → logprob: -1.1248667240142822
    3. '(...)' → logprob: -1.7498667240142822
    4. '(' → logprob: -2.1248667240142822
    5. '(sum' → logprob: -5.249866485595703
    6. '(...' → logprob: -5.249866485595703
    7. '(
' → logprob: -6.249866485595703
    8. '[...]' → logprob: -7.749866485595703
    9. 'sum' → logprob: -8.124866485595703
    10. '()' → logprob: -8.874866485595703

Token 645: ' tous' (ID: 10688)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.06931377202272415
    2. '[' → logprob: -2.8193137645721436
    3. ' [' → logprob: -5.444314002990723
    4. '([' → logprob: -6.069314002990723
    5. '[...]' → logprob: -8.194314002990723
    6. '...' → logprob: -8.694314002990723
    7. 'a' → logprob: -9.069314002990723
    8. ')' → logprob: -10.694314002990723
    9. '[
' → logprob: -10.819314002990723
    10. ' a' → logprob: -11.569314002990723

Token 646: ' les' (ID: 1341)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6859918832778931
    2. '([' → logprob: -1.060991883277893
    3. '(' → logprob: -2.6859917640686035
    4. '[a' → logprob: -3.5609917640686035
    5. '([...' → logprob: -3.5609917640686035
    6. ')' → logprob: -4.3109917640686035
    7. '[...]' → logprob: -5.5609917640686035
    8. '(...)' → logprob: -6.1859917640686035
    9. ' [' → logprob: -6.9359917640686035
    10. '...' → logprob: -7.0609917640686035

Token 647: ' éléments' (ID: 57375)
  Prédit: '[...]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[...]' → logprob: -0.9527631998062134
    2. 'élé' → logprob: -1.3277631998062134
    3. '[' → logprob: -1.7027631998062134
    4. ' éléments' → logprob: -2.577763080596924
    5. '[a' → logprob: -3.452763080596924
    6. '...' → logprob: -3.577763080596924
    7. ')' → logprob: -5.077763080596924
    8. 'elements' → logprob: -5.077763080596924
    9. '[
' → logprob: -5.202763080596924
    10. ']' → logprob: -5.702763080596924

Token 648: ' de' (ID: 334)
  Prédit: '(...)'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(...)' → logprob: -0.8905479907989502
    2. '([...' → logprob: -1.3905479907989502
    3. '([' → logprob: -2.01554799079895
    4. '(' → logprob: -2.26554799079895
    5. '(...' → logprob: -3.01554799079895
    6. '(
' → logprob: -4.015547752380371
    7. '(sum' → logprob: -4.765547752380371
    8. '()' → logprob: -5.015547752380371
    9. ']' → logprob: -5.015547752380371
    10. ')' → logprob: -5.265547752380371

Token 649: ' la' (ID: 557)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.010781100019812584
    2. '([' → logprob: -5.260781288146973
    3. '[' → logprob: -5.385781288146973
    4. ' [' → logprob: -7.885781288146973
    5. 'a' → logprob: -8.260781288146973
    6. '[...]' → logprob: -8.760781288146973
    7. '...' → logprob: -9.260781288146973
    8. '```' → logprob: -11.260781288146973
    9. '...[' → logprob: -11.760781288146973
    10. '([...' → logprob: -12.260781288146973

Token 650: ' liste' (ID: 31719)
  Prédit: '[a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.03987231105566025
    2. '[' → logprob: -3.539872407913208
    3. '[...]' → logprob: -5.414872169494629
    4. 'a' → logprob: -6.164872169494629
    5. '...' → logprob: -6.414872169494629
    6. '([' → logprob: -6.789872169494629
    7. '([...' → logprob: -8.289872169494629
    8. '...[' → logprob: -8.914872169494629
    9. 'sum' → logprob: -9.289872169494629
    10. '[[' → logprob: -9.664872169494629

Token 651: ' obten' (ID: 28150)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.32073578238487244
    2. '([...' → logprob: -2.1957356929779053
    3. '[a' → logprob: -2.4457356929779053
    4. '[' → logprob: -3.4457356929779053
    5. '[...]' → logprob: -3.9457356929779053
    6. '(...)' → logprob: -5.195735931396484
    7. 'sum' → logprob: -5.445735931396484
    8. '(a' → logprob: -6.070735931396484
    9. '(...' → logprob: -6.195735931396484
    10. '(' → logprob: -6.195735931396484

Token 652: 'ue' (ID: 466)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24214109778404236
    2. ')' → logprob: -2.367141008377075
    3. '])' → logprob: -3.367141008377075
    4. '   ' → logprob: -3.492141008377075
    5. '[' → logprob: -3.867141008377075
    6. 'e' → logprob: -4.367141246795654
    7. '[]' → logprob: -5.492141246795654
    8. '()' → logprob: -5.617141246795654
    9. '([' → logprob: -5.992141246795654
    10. 'ée' → logprob: -6.867141246795654

Token 653: ' à' (ID: 1221)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.30421388149261475
    2. '([' → logprob: -2.1792140007019043
    3. '(' → logprob: -3.1792140007019043
    4. '(...)' → logprob: -3.4292140007019043
    5. '(sum' → logprob: -3.6792140007019043
    6. '(
' → logprob: -4.179214000701904
    7. '([...' → logprob: -4.304214000701904
    8. '[' → logprob: -5.179214000701904
    9. '   ' → logprob: -5.679214000701904
    10. '[...]' → logprob: -5.929214000701904

Token 654: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.06560469418764114
    2. 'la' → logprob: -3.8156046867370605
    3. '[' → logprob: -4.3156046867370605
    4. ')' → logprob: -5.0656046867370605
    5. '#' → logprob: -5.3156046867370605
    6. ']' → logprob: -5.4406046867370605
    7. '1' → logprob: -5.9406046867370605
    8. '[l' → logprob: -6.3156046867370605
    9. 'c' → logprob: -6.4406046867370605
    10. 'sum' → logprob: -6.5656046867370605

Token 655: ''ét' (ID: 23771)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.5428153276443481
    2. 'a' → logprob: -1.6678153276443481
    3. '[' → logprob: -2.1678152084350586
    4. 'i' → logprob: -2.9178152084350586
    5. 'index' → logprob: -2.9178152084350586
    6. 'l' → logprob: -3.0428152084350586
    7. ']' → logprob: -3.1678152084350586
    8. '[-' → logprob: -3.2928152084350586
    9. ''intérieur' → logprob: -3.6678152084350586
    10. 'sum' → logprob: -3.7928152084350586

Token 656: 'ape' (ID: 2480)
  Prédit: 'ête'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ête' → logprob: -0.15780949592590332
    2. 'ete' → logprob: -2.4078094959259033
    3. 'ète' → logprob: -4.157809257507324
    4. 'ière' → logprob: -4.532809257507324
    5. '#' → logprob: -5.032809257507324
    6. 'êt' → logprob: -5.532809257507324
    7. 'eté' → logprob: -5.782809257507324
    8. 'êtes' → logprob: -5.907809257507324
    9. 'e' → logprob: -6.157809257507324
    10. 'é' → logprob: -6.407809257507324

Token 657: ' précédente' (ID: 177319)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.3885425329208374
    2. ']' → logprob: -1.5135425329208374
    3. '0' → logprob: -2.638542652130127
    4. ' précédente' → logprob: -3.013542652130127
    5. '1' → logprob: -3.263542652130127
    6. ')' → logprob: -3.263542652130127
    7. '-' → logprob: -3.263542652130127
    8. 'preced' → logprob: -3.388542652130127
    9. 'avant' → logprob: -3.638542652130127
    10. '#' → logprob: -3.763542652130127

Token 658: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3806768655776978
    2. ')' → logprob: -1.5056768655776978
    3. 'c' → logprob: -1.6306768655776978
    4. 'sum' → logprob: -2.005676746368408
    5. ' c' → logprob: -2.880676746368408
    6. ')
' → logprob: -3.255676746368408
    7. '
' → logprob: -3.755676746368408
    8. ',' → logprob: -4.380676746368408
    9. '[' → logprob: -4.380676746368408
    10. 'for' → logprob: -4.505676746368408

Token 659: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001090447069145739
    2. 'for' → logprob: -6.8760905265808105
    3. ' c' → logprob: -10.501090049743652
    4. '```' → logprob: -11.376090049743652
    5. '
' → logprob: -11.751090049743652
    6. '#' → logprob: -12.001090049743652
    7. ' for' → logprob: -12.751090049743652
    8. 'с' → logprob: -15.251090049743652
    9. '``' → logprob: -15.251090049743652
    10. '[c' → logprob: -15.501090049743652

Token 660: ' Cela' (ID: 44403)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00015431294741574675
    2. '#' → logprob: -9.250154495239258
    3. ' c' → logprob: -10.375154495239258
    4. '
' → logprob: -11.125154495239258
    5. 'sum' → logprob: -13.000154495239258
    6. 'с' → logprob: -13.500154495239258
    7. 'd' → logprob: -13.500154495239258
    8. 's' → logprob: -13.750154495239258
    9. 'import' → logprob: -13.750154495239258
    10. '```' → logprob: -14.000154495239258

Token 661: ' revient' (ID: 95900)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8434920310974121
    2. '#' → logprob: -1.468492031097412
    3. ' =' → logprob: -1.968492031097412
    4. 'result' → logprob: -2.593492031097412
    5. 's' → logprob: -3.218492031097412
    6. 'don' → logprob: -4.218492031097412
    7. ' permet' → logprob: -4.593492031097412
    8. ' s' → logprob: -5.093492031097412
    9. '
' → logprob: -5.218492031097412
    10. ' donne' → logprob: -5.218492031097412

Token 662: ' donc' (ID: 14206)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.020827390253543854
    2. 'à' → logprob: -3.895827293395996
    3. ' a' → logprob: -9.270827293395996
    4. 'a' → logprob: -9.770827293395996
    5. ' donc' → logprob: -10.770827293395996
    6. '#' → logprob: -10.770827293395996
    7. 'au' → logprob: -10.895827293395996
    8. ' ' → logprob: -11.020827293395996
    9. ')' → logprob: -11.520827293395996
    10. ''à' → logprob: -11.645827293395996

Token 663: ',' (ID: 11)
  Prédit: ' à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.22627735137939453
    2. 'à' → logprob: -1.6012773513793945
    3. 'a' → logprob: -7.8512773513793945
    4. ' a' → logprob: -8.976277351379395
    5. ' ' → logprob: -9.101277351379395
    6. 'au' → logprob: -9.851277351379395
    7. ''à' → logprob: -9.976277351379395
    8. ' ' → logprob: -10.476277351379395
    9. ')' → logprob: -10.726277351379395
    10. '#' → logprob: -10.726277351379395

Token 664: ' pour' (ID: 1930)
  Prédit: 'à'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'à' → logprob: -1.0300743579864502
    2. 'pour' → logprob: -1.5300743579864502
    3. ' à' → logprob: -1.9050743579864502
    4. ' pour' → logprob: -2.78007435798645
    5. '#' → logprob: -2.78007435798645
    6. 'for' → logprob: -3.53007435798645
    7. 'au' → logprob: -4.155074119567871
    8. 'sum' → logprob: -4.405074119567871
    9. 'som' → logprob: -4.655074119567871
    10. 'en' → logprob: -4.780074119567871

Token 665: ' chaque' (ID: 21194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.18977633118629456
    2. ' chaque' → logprob: -2.1897764205932617
    3. ' i' → logprob: -2.8147764205932617
    4. 'cha' → logprob: -8.189776420593262
    5. ' each' → logprob: -8.314776420593262
    6. 'each' → logprob: -8.689776420593262
    7. '#' → logprob: -9.314776420593262
    8. 'ch' → logprob: -9.564776420593262
    9. ' chacun' → logprob: -10.939776420593262
    10. ' chacune' → logprob: -10.939776420593262

Token 666: ' index' (ID: 3472)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.006780149880796671
    2. ' i' → logprob: -5.00678014755249
    3. 'indice' → logprob: -10.756780624389648
    4. 'index' → logprob: -11.381780624389648
    5. 'range' → logprob: -12.006780624389648
    6. '
' → logprob: -12.131780624389648
    7. 'élé' → logprob: -12.381780624389648
    8. ' range' → logprob: -13.131780624389648
    9. '0' → logprob: -13.131780624389648
    10. 'a' → logprob: -13.381780624389648

Token 667: ' '' (ID: 461)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1631040722131729
    2. 'i' → logprob: -2.1631040573120117
    3. ' in' → logprob: -3.6631040573120117
    4. ' de' → logprob: -6.288104057312012
    5. ' en' → logprob: -6.538104057312012
    6. ',' → logprob: -6.538104057312012
    7. ')' → logprob: -7.038104057312012
    8. '[i' → logprob: -7.163104057312012
    9. ' for' → logprob: -7.288104057312012
    10. ' ' → logprob: -7.788104057312012

Token 668: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00033903829171322286
    2. ' i' → logprob: -8.00033950805664
    3. ')' → logprob: -13.25033950805664
    4. '```' → logprob: -14.37533950805664
    5. 'a' → logprob: -15.12533950805664
    6. ' in' → logprob: -15.37533950805664
    7. ']' → logprob: -15.50033950805664
    8. '0' → logprob: -15.75033950805664
    9. '`' → logprob: -16.75033950805664
    10. '')' → logprob: -16.87533950805664

Token 669: '',' (ID: 787)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1788475513458252
    2. ']' → logprob: -1.6788475513458252
    3. '],' → logprob: -1.8038475513458252
    4. ' in' → logprob: -2.428847551345825
    5. '),' → logprob: -2.928847551345825
    6. ',' → logprob: -3.053847551345825
    7. 'in' → logprob: -3.053847551345825
    8. ']',' → logprob: -3.428847551345825
    9. ''' → logprob: -4.303847312927246
    10. '',' → logprob: -4.428847312927246

Token 670: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.533364474773407
    2. ' de' → logprob: -1.0333645343780518
    3. ' d' → logprob: -3.4083645343780518
    4. 'à' → logprob: -4.533364295959473
    5. ' a' → logprob: -5.283364295959473
    6. ' ' → logprob: -5.908364295959473
    7. ' sum' → logprob: -6.783364295959473
    8. 'a' → logprob: -7.033364295959473
    9. ' to' → logprob: -7.158364295959473
    10. 'd' → logprob: -7.283364295959473

Token 671: ' ajouter' (ID: 78457)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.4874812960624695
    2. 'calcul' → logprob: -0.9874812960624695
    3. 'som' → logprob: -4.987481117248535
    4. ' calcul' → logprob: -5.862481117248535
    5. 's' → logprob: -7.362481117248535
    6. ' sum' → logprob: -7.487481117248535
    7. 'a' → logprob: -7.487481117248535
    8. ' sommer' → logprob: -7.612481117248535
    9. 'faire' → logprob: -7.862481117248535
    10. 'cal' → logprob: -8.362481117248535

Token 672: ' :
' (ID: 10039)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12769189476966858
    2. ' a' → logprob: -2.1276919841766357
    3. '[a' → logprob: -7.627691745758057
    4. '1' → logprob: -9.252692222595215
    5. '(a' → logprob: -9.752692222595215
    6. ' ' → logprob: -10.002692222595215
    7. 'l' → logprob: -11.127692222595215
    8. '	a' → logprob: -11.627692222595215
    9. 'sum' → logprob: -12.002692222595215
    10. ' à' → logprob: -12.377692222595215

Token 673: '#' (ID: 2)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3492432236671448
    2. ' a' → logprob: -1.2242431640625
    3. '[a' → logprob: -7.4742431640625
    4. ' [' → logprob: -9.8492431640625
    5. '(a' → logprob: -10.4742431640625
    6. 'sum' → logprob: -10.5992431640625
    7. 'c' → logprob: -10.8492431640625
    8. ' sum' → logprob: -10.9742431640625
    9. ' c' → logprob: -10.9742431640625
    10. '   ' → logprob: -10.9742431640625

Token 674: '     ' (ID: 530)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5761189460754395
    2. ' a' → logprob: -0.8261189460754395
    3. '[a' → logprob: -10.076118469238281
    4. 'sum' → logprob: -10.576118469238281
    5. ' ' → logprob: -10.701118469238281
    6. '(a' → logprob: -10.951118469238281
    7. ' sum' → logprob: -11.326118469238281
    8. ' [' → logprob: -11.576118469238281
    9. 'b' → logprob: -11.826118469238281
    10. '[' → logprob: -11.826118469238281

Token 675: ' -' (ID: 533)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.049183476716279984
    2. ' a' → logprob: -3.0491833686828613
    3. '[a' → logprob: -8.54918384552002
    4. 'b' → logprob: -8.92418384552002
    5. 'c' → logprob: -9.42418384552002
    6. ' b' → logprob: -10.29918384552002
    7. '(a' → logprob: -10.42418384552002
    8. '[' → logprob: -10.67418384552002
    9. ' c' → logprob: -10.79918384552002
    10. ' [' → logprob: -11.04918384552002

Token 676: ' l' (ID: 305)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.11323945224285126
    2. ' a' → logprob: -2.2382395267486572
    3. 'l' → logprob: -8.488239288330078
    4. ' ' → logprob: -9.988239288330078
    5. 'c' → logprob: -10.488239288330078
    6. '#a' → logprob: -10.488239288330078
    7. ' l' → logprob: -10.863239288330078
    8. '(a' → logprob: -11.363239288330078
    9. '#' → logprob: -11.488239288330078
    10. 'la' → logprob: -11.988239288330078

Token 677: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.03289378434419632
    2. 'e' → logprob: -4.657893657684326
    3. ''ensemble' → logprob: -5.032893657684326
    4. ''a' → logprob: -5.532893657684326
    5. ' a' → logprob: -5.657893657684326
    6. ''' → logprob: -6.282893657684326
    7. '[a' → logprob: -6.657893657684326
    8. 'élé' → logprob: -7.157893657684326
    9. ' somme' → logprob: -7.282893657684326
    10. ']' → logprob: -7.532893657684326

Token 678: 'élé' (ID: 15228)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009194392478093505
    2. ' a' → logprob: -7.250919342041016
    3. 'élé' → logprob: -9.375919342041016
    4. 'element' → logprob: -9.875919342041016
    5. ''a' → logprob: -10.125919342041016
    6. 'value' → logprob: -11.875919342041016
    7. 'elem' → logprob: -12.000919342041016
    8. ''' → logprob: -12.750919342041016
    9. '[a' → logprob: -12.875919342041016
    10. ' élément' → logprob: -13.125919342041016

Token 679: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -0.08877401053905487
    2. 'ement' → logprob: -2.9637739658355713
    3. 'ments' → logprob: -4.08877420425415
    4. 'ément' → logprob: -5.33877420425415
    5. 'em' → logprob: -5.58877420425415
    6. 'ements' → logprob: -5.71377420425415
    7. '```' → logprob: -6.83877420425415
    8. 'm' → logprob: -6.83877420425415
    9. '#' → logprob: -7.33877420425415
    10. '[' → logprob: -7.83877420425415

Token 680: ' correspondant' (ID: 146058)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7071717977523804
    2. ' a' → logprob: -0.7071717977523804
    3. ' de' → logprob: -4.33217191696167
    4. ' à' → logprob: -8.457171440124512
    5. ' ' → logprob: -8.957171440124512
    6. ' ' → logprob: -9.332171440124512
    7. ']' → logprob: -9.582171440124512
    8. '_a' → logprob: -9.957171440124512
    9. ' ]' → logprob: -10.207171440124512
    10. 'de' → logprob: -10.457171440124512

Token 681: ' de' (ID: 334)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.14634083211421967
    2. ' a' → logprob: -2.396340847015381
    3. ' de' → logprob: -3.271340847015381
    4. ' à' → logprob: -5.396340847015381
    5. 'de' → logprob: -6.646340847015381
    6. 'à' → logprob: -7.771340847015381
    7. '   ' → logprob: -8.521340370178223
    8. '[a' → logprob: -8.521340370178223
    9. ' ' → logprob: -9.146340370178223
    10. ',' → logprob: -9.396340370178223

Token 682: ' '' (ID: 461)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004623322281986475
    2. ' a' → logprob: -5.3796234130859375
    3. ''a' → logprob: -12.879623413085938
    4. '#a' → logprob: -15.629623413085938
    5. 'la' → logprob: -16.504623413085938
    6. ' la' → logprob: -16.629623413085938
    7. ' ' → logprob: -17.379623413085938
    8. '	a' → logprob: -17.379623413085938
    9. '_a' → logprob: -17.879623413085938
    10. ')a' → logprob: -17.879623413085938

Token 683: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.00018232580623589456
    2. ' a' → logprob: -8.625182151794434
    3. 'b' → logprob: -13.625182151794434
    4. ''a' → logprob: -13.750182151794434
    5. 'c' → logprob: -15.000182151794434
    6. ''' → logprob: -17.00018310546875
    7. ']' → logprob: -17.12518310546875
    8. '#a' → logprob: -17.25018310546875
    9. ')a' → logprob: -17.25018310546875
    10. '_a' → logprob: -17.62518310546875

Token 684: ''' (ID: 6)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.0629870858974755e-05
    2. ']' → logprob: -9.87506103515625
    3. '[' → logprob: -12.62506103515625
    4. '[j' → logprob: -13.62506103515625
    5. '
' → logprob: -14.00006103515625
    6. '][' → logprob: -14.25006103515625
    7. '   ' → logprob: -14.50006103515625
    8. 'i' → logprob: -14.87506103515625
    9. 'a' → logprob: -15.00006103515625
    10. '(i' → logprob: -15.25006103515625

Token 685: ' (' (ID: 350)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.25597596168518066
    2. '+' → logprob: -2.5059759616851807
    3. ' +' → logprob: -2.5059759616851807
    4. ')' → logprob: -3.3809759616851807
    5. '+
' → logprob: -4.755975723266602
    6. '[' → logprob: -4.880975723266602
    7. ' +
' → logprob: -5.505975723266602
    8. '
' → logprob: -5.630975723266602
    9. '   ' → logprob: -7.005975723266602
    10. ',' → logprob: -7.505975723266602

Token 686: 'non' (ID: 11741)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5198069214820862
    2. ')' → logprob: -1.2698068618774414
    3. ']' → logprob: -2.3948068618774414
    4. '])' → logprob: -4.144806861877441
    5. ' a' → logprob: -4.894806861877441
    6. 'i' → logprob: -6.644806861877441
    7. 'c' → logprob: -7.144806861877441
    8. '),' → logprob: -7.269806861877441
    9. ')]' → logprob: -7.269806861877441
    10. ' )' → logprob: -7.394806861877441

Token 687: ' arr' (ID: 1724)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.7675457000732422
    2. 'b' → logprob: -1.7675457000732422
    3. ')' → logprob: -2.392545700073242
    4. ']' → logprob: -2.642545700073242
    5. 'i' → logprob: -2.892545700073242
    6. '])' → logprob: -4.017545700073242
    7. '[]' → logprob: -4.517545700073242
    8. ' seulement' → logprob: -4.517545700073242
    9. '[' → logprob: -4.892545700073242
    10. ',' → logprob: -5.142545700073242

Token 688: 'ondi' (ID: 117409)
  Prédit: 'ondi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ondi' → logprob: -0.014532019384205341
    2. 'ond' → logprob: -4.264532089233398
    3. '[i' → logprob: -8.889532089233398
    4. 'angé' → logprob: -9.139532089233398
    5. 'êt' → logprob: -10.264532089233398
    6. 'ivé' → logprob: -10.889532089233398
    7. ']' → logprob: -11.264532089233398
    8. 'r' → logprob: -11.514532089233398
    9. 'a' → logprob: -11.514532089233398
    10. 'ondissement' → logprob: -11.764532089233398

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02792205661535263
    2. ']' → logprob: -4.0279221534729
    3. '])' → logprob: -6.1529221534729
    4. ')
' → logprob: -6.4029221534729
    5. ' )' → logprob: -6.5279221534729
    6. ')]' → logprob: -6.6529221534729
    7. ')+' → logprob: -7.0279221534729
    8. '[i' → logprob: -7.0279221534729
    9. '   ' → logprob: -8.277921676635742
    10. ']+' → logprob: -9.027921676635742

Token 690: ' pour' (ID: 1930)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12274974584579468
    2. 'for' → logprob: -2.7477498054504395
    3. '#' → logprob: -3.9977498054504395
    4. '+' → logprob: -4.4977498054504395
    5. '+
' → logprob: -5.2477498054504395
    6. ' c' → logprob: -5.7477498054504395
    7. ')' → logprob: -5.7477498054504395
    8. ' +' → logprob: -5.9977498054504395
    9. ',' → logprob: -6.1227498054504395
    10. ' for' → logprob: -6.2477498054504395

Token 691: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.7431609034538269
    2. 'i' → logprob: -1.7431609630584717
    3. 'c' → logprob: -2.2431609630584717
    4. ' l' → logprob: -2.7431609630584717
    5. 'a' → logprob: -2.8681609630584717
    6. ' cet' → logprob: -3.6181609630584717
    7. 'la' → logprob: -4.118160724639893
    8. 'index' → logprob: -4.243160724639893
    9. 'cet' → logprob: -4.493160724639893
    10. ' i' → logprob: -4.618160724639893

Token 692: ''' (ID: 6)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.5024740099906921
    2. 'a' → logprob: -1.752474069595337
    3. ''' → logprob: -3.127474069595337
    4. ''ind' → logprob: -3.127474069595337
    5. ''instant' → logprob: -3.252474069595337
    6. ''i' → logprob: -3.502474069595337
    7. 'indice' → logprob: -4.002473831176758
    8. 'i' → logprob: -4.002473831176758
    9. ' index' → logprob: -4.752473831176758
    10. '#index' → logprob: -5.752473831176758

Token 693: 'index' (ID: 2257)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04924372583627701
    2. 'index' → logprob: -3.299243688583374
    3. 'indice' → logprob: -5.299243927001953
    4. ' i' → logprob: -5.424243927001953
    5. ')' → logprob: -8.049243927001953
    6. ''i' → logprob: -8.424243927001953
    7. ' index' → logprob: -8.549243927001953
    8. 'a' → logprob: -8.674243927001953
    9. ']' → logprob: -8.924243927001953
    10. '[i' → logprob: -9.049243927001953

Token 694: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08353453874588013
    2. ' i' → logprob: -3.2085344791412354
    3. ']' → logprob: -4.7085347175598145
    4. ')' → logprob: -4.8335347175598145
    5. '[i' → logprob: -5.0835347175598145
    6. ',' → logprob: -5.3335347175598145
    7. '
' → logprob: -5.9585347175598145
    8. 'a' → logprob: -6.5835347175598145
    9. ',
' → logprob: -6.8335347175598145
    10. 'for' → logprob: -7.5835347175598145

Token 695: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0029957664664834738
    2. ' i' → logprob: -7.00299596786499
    3. ']' → logprob: -7.12799596786499
    4. ')' → logprob: -7.75299596786499
    5. 'a' → logprob: -7.75299596786499
    6. '])' → logprob: -9.377995491027832
    7. '5' → logprob: -9.752995491027832
    8. ':' → logprob: -10.377995491027832
    9. '],' → logprob: -10.377995491027832
    10. ')i' → logprob: -10.377995491027832

Token 696: ''
' (ID: 2207)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37707170844078064
    2. '+' → logprob: -2.0020716190338135
    3. ' +' → logprob: -2.8770716190338135
    4. ')+' → logprob: -3.3770716190338135
    5. ']' → logprob: -3.8770716190338135
    6. '#' → logprob: -4.002071857452393
    7. 'c' → logprob: -4.502071857452393
    8. 'for' → logprob: -4.877071857452393
    9. '+
' → logprob: -4.877071857452393
    10. ')
' → logprob: -5.377071857452393

Token 697: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8179465532302856
    2. '#' → logprob: -1.6929465532302856
    3. '+' → logprob: -1.8179465532302856
    4. ' for' → logprob: -2.817946434020996
    5. ' +' → logprob: -2.817946434020996
    6. 'c' → logprob: -3.442946434020996
    7. '+
' → logprob: -3.942946434020996
    8. '+c' → logprob: -4.192946434020996
    9. ' c' → logprob: -4.567946434020996
    10. ')' → logprob: -5.817946434020996

Token 698: '     ' (ID: 530)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004939023870974779
    2. '#' → logprob: -5.754939079284668
    3. ' c' → logprob: -7.379939079284668
    4. 'for' → logprob: -7.754939079284668
    5. ')' → logprob: -8.379939079284668
    6. ',' → logprob: -9.379939079284668
    7. '+' → logprob: -9.504939079284668
    8. '
' → logprob: -9.629939079284668
    9. ')
' → logprob: -10.379939079284668
    10. ']' → logprob: -10.504939079284668

Token 699: ' -' (ID: 533)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9221745729446411
    2. 'for' → logprob: -1.4221745729446411
    3. '#' → logprob: -1.7971745729446411
    4. '+' → logprob: -2.5471744537353516
    5. ')' → logprob: -2.7971744537353516
    6. ' for' → logprob: -4.547174453735352
    7. '   ' → logprob: -4.672174453735352
    8. ' c' → logprob: -4.922174453735352
    9. '
' → logprob: -5.672174453735352
    10. ')
' → logprob: -5.922174453735352

Token 700: ' les' (ID: 1341)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.21043480932712555
    2. ' sum' → logprob: -1.8354347944259644
    3. 'b' → logprob: -3.960434913635254
    4. ' b' → logprob: -5.085434913635254
    5. '   ' → logprob: -6.585434913635254
    6. ' ' → logprob: -7.210434913635254
    7. '     ' → logprob: -7.585434913635254
    8. '    ' → logprob: -8.085434913635254
    9. '  ' → logprob: -8.085434913635254
    10. '(sum' → logprob: -8.460434913635254

Token 701: ' éléments' (ID: 57375)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.21230509877204895
    2. ' b' → logprob: -1.7123050689697266
    3. ' autres' → logprob: -5.712305068969727
    4. ' éléments' → logprob: -6.337305068969727
    5. 'sum' → logprob: -6.587305068969727
    6. ' sum' → logprob: -6.962305068969727
    7. 'élé' → logprob: -7.712305068969727
    8. ' elements' → logprob: -7.712305068969727
    9. 's' → logprob: -7.837305068969727
    10. 'elements' → logprob: -7.962305068969727

Token 702: ' arr' (ID: 1724)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19623930752277374
    2. ' b' → logprob: -2.4462392330169678
    3. ' de' → logprob: -2.9462392330169678
    4. 'de' → logprob: -3.4462392330169678
    5. ' ' → logprob: -5.821239471435547
    6. '  ' → logprob: -7.071239471435547
    7. '[b' → logprob: -7.196239471435547
    8. ' rest' → logprob: -8.071239471435547
    9. '[j' → logprob: -8.321239471435547
    10. '```' → logprob: -8.321239471435547

Token 703: 'ond' (ID: 1415)
  Prédit: 'ond'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ond' → logprob: -0.029117567464709282
    2. 'ondi' → logprob: -3.7791175842285156
    3. '[b' → logprob: -5.904117584228516
    4. '[i' → logprob: -6.654117584228516
    5. '[c' → logprob: -7.904117584228516
    6. 'a' → logprob: -8.404117584228516
    7. '(b' → logprob: -8.529117584228516
    8. '[' → logprob: -8.529117584228516
    9. '[a' → logprob: -8.654117584228516
    10. 'b' → logprob: -9.029117584228516

Token 704: 'is' (ID: 276)
  Prédit: 'is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.05807165801525116
    2. 'ond' → logprob: -3.8080716133117676
    3. '(b' → logprob: -5.183071613311768
    4. '(i' → logprob: -5.183071613311768
    5. '[i' → logprob: -5.433071613311768
    6. 'onn' → logprob: -5.558071613311768
    7. 'i' → logprob: -5.933071613311768
    8. 'és' → logprob: -5.933071613311768
    9. '[b' → logprob: -6.058071613311768
    10. '(' → logprob: -6.308071613311768

Token 705: ' au' (ID: 2791)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.8189188241958618
    2. 'b' → logprob: -0.9439188241958618
    3. ' de' → logprob: -2.8189187049865723
    4. 'rest' → logprob: -3.1939187049865723
    5. '(b' → logprob: -4.693918704986572
    6. '   ' → logprob: -4.693918704986572
    7. ' rest' → logprob: -4.693918704986572
    8. ' b' → logprob: -4.943918704986572
    9. 'from' → logprob: -5.193918704986572
    10. 'c' → logprob: -5.318918704986572

Token 706: ' multiple' (ID: 7598)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.7881328463554382
    2. 'j' → logprob: -1.663132905960083
    3. 'multiple' → logprob: -2.038132905960083
    4. 'multip' → logprob: -2.413132905960083
    5. '10' → logprob: -3.163132905960083
    6. 'i' → logprob: -3.413132905960083
    7. 'index' → logprob: -4.788132667541504
    8. 'indices' → logprob: -5.038132667541504
    9. '```' → logprob: -5.163132667541504
    10. 's' → logprob: -5.913132667541504

Token 707: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.44291311502456665
    2. 'de' → logprob: -1.3179130554199219
    3. '   ' → logprob: -3.442913055419922
    4. '    ' → logprob: -4.067913055419922
    5. ' ' → logprob: -4.567913055419922
    6. ' of' → logprob: -4.567913055419922
    7. 'of' → logprob: -5.192913055419922
    8. '  ' → logprob: -5.692913055419922
    9. ']' → logprob: -6.317913055419922
    10. ')' → logprob: -6.817913055419922

Token 708: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -9.865583706414327e-05
    2. ' ' → logprob: -9.25009822845459
    3. ' dix' → logprob: -13.62509822845459
    4. 'd' → logprob: -14.00009822845459
    5. '```' → logprob: -15.37509822845459
    6. '...' → logprob: -17.000099182128906
    7. '  ' → logprob: -17.625099182128906
    8. '100' → logprob: -17.625099182128906
    9. ' ' → logprob: -18.250099182128906
    10. '#' → logprob: -18.250099182128906

Token 709: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -3.2378600735682994e-05
    2. ' ' → logprob: -10.625032424926758
    3. '```' → logprob: -12.500032424926758
    4. 'b' → logprob: -13.625032424926758
    5. '5' → logprob: -14.625032424926758
    6. '  ' → logprob: -14.750032424926758
    7. '   ' → logprob: -15.250032424926758
    8. 'i' → logprob: -15.500032424926758
    9. '[' → logprob: -15.625032424926758
    10. 'd' → logprob: -15.750032424926758

Token 710: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9842444062232971
    2. ']' → logprob: -2.3592443466186523
    3. 'b' → logprob: -2.3592443466186523
    4. 'rest' → logprob: -2.7342443466186523
    5. 's' → logprob: -2.9842443466186523
    6. ' rest' → logprob: -2.9842443466186523
    7. 'pour' → logprob: -3.1092443466186523
    8. 'de' → logprob: -3.2342443466186523
    9. ' for' → logprob: -3.3592443466186523
    10. 'except' → logprob: -3.9842443466186523

Token 711: ' tous' (ID: 10688)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5038625597953796
    2. 'j' → logprob: -1.1288626194000244
    3. 'l' → logprob: -4.003862380981445
    4. 'les' → logprob: -4.003862380981445
    5. 'tout' → logprob: -4.378862380981445
    6. ' tous' → logprob: -4.753862380981445
    7. ' j' → logprob: -4.878862380981445
    8. 'b' → logprob: -6.378862380981445
    9. 'le' → logprob: -6.878862380981445
    10. 'all' → logprob: -7.253862380981445

Token 712: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.014578061178326607
    2. ' les' → logprob: -4.389577865600586
    3. 'j' → logprob: -7.014577865600586
    4. 'i' → logprob: -7.514577865600586
    5. 'indices' → logprob: -8.764577865600586
    6. 'l' → logprob: -9.514577865600586
    7. '<|end|>' → logprob: -9.639577865600586
    8. 'indexes' → logprob: -9.889577865600586
    9. 'le' → logprob: -10.139577865600586
    10. '```' → logprob: -10.389577865600586

Token 713: ' autres' (ID: 18701)
  Prédit: 'aut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aut' → logprob: -0.6372123956680298
    2. 'indices' → logprob: -1.6372123956680298
    3. 'i' → logprob: -1.8872123956680298
    4. ' autres' → logprob: -2.5122122764587402
    5. 'j' → logprob: -3.5122122764587402
    6. 'index' → logprob: -4.88721227645874
    7. 'indexes' → logprob: -6.01221227645874
    8. 'other' → logprob: -6.38721227645874
    9. ' indices' → logprob: -7.01221227645874
    10. ''autres' → logprob: -7.26221227645874

Token 714: ' indexes' (ID: 50739)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2743159532546997
    2. 'indices' → logprob: -2.02431583404541
    3. ']' → logprob: -3.27431583404541
    4. 'range' → logprob: -4.14931583404541
    5. 'for' → logprob: -4.52431583404541
    6. ' i' → logprob: -4.64931583404541
    7. 'elements' → logprob: -4.64931583404541
    8. ' indices' → logprob: -5.02431583404541
    9. 'a' → logprob: -5.02431583404541
    10. 'b' → logprob: -6.02431583404541

Token 715: '

' (ID: 279)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00014251544780563563
    2. '#' → logprob: -9.125142097473145
    3. '
' → logprob: -11.125142097473145
    4. ' c' → logprob: -12.250142097473145
    5. '.
' → logprob: -13.250142097473145
    6. 'for' → logprob: -13.250142097473145
    7. '```' → logprob: -13.250142097473145
    8. ',' → logprob: -13.750142097473145
    9. ' =' → logprob: -14.125142097473145
    10. '`
' → logprob: -14.250142097473145

Token 716: '#' (ID: 2)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.79811754100956e-05
    2. '
' → logprob: -10.375038146972656
    3. ' c' → logprob: -12.625038146972656
    4. '#' → logprob: -12.750038146972656
    5. '```' → logprob: -15.625038146972656
    6. 'd' → logprob: -15.750038146972656
    7. 'for' → logprob: -15.875038146972656
    8. '

' → logprob: -17.125038146972656
    9. '
' → logprob: -17.750038146972656
    10. 'с' → logprob: -18.125038146972656

Token 717: ' On' (ID: 2160)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.5048530030981055e-06
    2. '#' → logprob: -14.375001907348633
    3. 'for' → logprob: -15.000001907348633
    4. '
' → logprob: -15.375001907348633
    5. ' c' → logprob: -15.750001907348633
    6. 'd' → logprob: -16.375001907348633
    7. '```' → logprob: -17.375001907348633
    8. 'print' → logprob: -18.500001907348633
    9. 'import' → logprob: -18.875001907348633
    10. '  
' → logprob: -19.750001907348633

Token 718: ' rép' (ID: 64372)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6063206791877747
    2. '=' → logprob: -1.1063206195831299
    3. ' =' → logprob: -2.23132061958313
    4. 'for' → logprob: -5.106320858001709
    5. ' c' → logprob: -5.731320858001709
    6. 's' → logprob: -5.981320858001709
    7. '=c' → logprob: -6.481320858001709
    8. '_c' → logprob: -7.231320858001709
    9. '#' → logprob: -7.731320858001709
    10. '=
' → logprob: -8.23132038116455

Token 719: 'ète' (ID: 28789)
  Prédit: 'ète'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ète' → logprob: -0.009708642028272152
    2. 'ete' → logprob: -4.884708404541016
    3. 'r' → logprob: -7.009708404541016
    4. 'é' → logprob: -8.009708404541016
    5. 'e' → logprob: -8.134708404541016
    6. 'ête' → logprob: -8.884708404541016
    7. '#' → logprob: -9.509708404541016
    8. 'd' → logprob: -9.884708404541016
    9. '[' → logprob: -9.884708404541016
    10. 'ètes' → logprob: -10.259708404541016

Token 720: ' la' (ID: 557)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '5' → logprob: -0.6244242787361145
    2. '[' → logprob: -0.9994242787361145
    3. 'range' → logprob: -2.7494242191314697
    4. 'for' → logprob: -4.124424457550049
    5. '[i' → logprob: -5.499424457550049
    6. '_' → logprob: -5.874424457550049
    7. ' ' → logprob: -6.499424457550049
    8. ' range' → logprob: -6.499424457550049
    9. 'i' → logprob: -6.874424457550049
    10. ' for' → logprob: -6.874424457550049

Token 721: ' chose' (ID: 15505)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.061292052268981934
    2. ' range' → logprob: -3.5612921714782715
    3. '5' → logprob: -3.6862921714782715
    4. 'i' → logprob: -5.1862921714782715
    5. 'for' → logprob: -8.561291694641113
    6. ' i' → logprob: -9.186291694641113
    7. '_' → logprob: -10.186291694641113
    8. ' ' → logprob: -11.311291694641113
    9. ' for' → logprob: -11.436291694641113
    10. '[i' → logprob: -11.686291694641113

Token 722: ' pour' (ID: 1930)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5543530583381653
    2. ' for' → logprob: -1.5543529987335205
    3. '5' → logprob: -2.6793529987335205
    4. 'e' → logprob: -2.9293529987335205
    5. '[' → logprob: -3.4293529987335205
    6. ' pour' → logprob: -4.5543532371521
    7. 'range' → logprob: -4.8043532371521
    8. '4' → logprob: -4.9293532371521
    9. ' ' → logprob: -5.3043532371521
    10. ' en' → logprob: -5.6793532371521

Token 723: ' les' (ID: 1341)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.11305645108222961
    2. ' i' → logprob: -2.2380564212799072
    3. ' range' → logprob: -8.738056182861328
    4. 'range' → logprob: -9.863056182861328
    5. '_' → logprob: -11.738056182861328
    6. ' ' → logprob: -11.988056182861328
    7. '5' → logprob: -12.363056182861328
    8. '_i' → logprob: -12.988056182861328
    9. ' _' → logprob: -15.488056182861328
    10. ' ' → logprob: -16.363056182861328

Token 724: ' ' (ID: 220)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6988557577133179
    2. ' range' → logprob: -0.9488557577133179
    3. 'range' → logprob: -2.5738558769226074
    4. ' i' → logprob: -3.3238558769226074
    5. '5' → logprob: -6.323855876922607
    6. ' ' → logprob: -6.573855876922607
    7. '0' → logprob: -9.32385540008545
    8. '_' → logprob: -9.44885540008545
    9. '4' → logprob: -11.32385540008545
    10. 'ange' → logprob: -11.44885540008545

Token 725: '5' (ID: 20)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003361412324011326
    2. 'i' → logprob: -5.753361225128174
    3. ' range' → logprob: -8.628361701965332
    4. '5' → logprob: -12.753361701965332
    5. '_' → logprob: -13.753361701965332
    6. '0' → logprob: -15.753361701965332
    7. ' i' → logprob: -16.003360748291016
    8. 'rang' → logprob: -16.503360748291016
    9. '```' → logprob: -16.503360748291016
    10. '(range' → logprob: -16.503360748291016

Token 726: ' valeurs' (ID: 73668)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1986713856458664
    2. ' i' → logprob: -2.198671340942383
    3. ']' → logprob: -3.823671340942383
    4. 'indices' → logprob: -3.948671340942383
    5. 'for' → logprob: -4.698671340942383
    6. '[i' → logprob: -5.323671340942383
    7. ' indices' → logprob: -5.323671340942383
    8. ')' → logprob: -5.573671340942383
    9. 'range' → logprob: -6.323671340942383
    10. ' range' → logprob: -7.448671340942383

Token 727: ' possibles' (ID: 97753)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.009714663028717041
    2. 'for' → logprob: -5.259714603424072
    3. 'range' → logprob: -6.009714603424072
    4. ']' → logprob: -7.009714603424072
    5. ']
' → logprob: -8.25971508026123
    6. ',' → logprob: -8.75971508026123
    7. ' c' → logprob: -9.00971508026123
    8. '=' → logprob: -9.25971508026123
    9. '
' → logprob: -9.38471508026123
    10. 'i' → logprob: -9.38471508026123

Token 728: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07056683301925659
    2. 'range' → logprob: -3.5705668926239014
    3. 'i' → logprob: -3.8205668926239014
    4. 'for' → logprob: -4.570566654205322
    5. '
' → logprob: -5.945566654205322
    6. ' range' → logprob: -6.695566654205322
    7. ']
' → logprob: -7.070566654205322
    8. ']' → logprob: -7.320566654205322
    9. '[i' → logprob: -7.570566654205322
    10. ' c' → logprob: -7.695566654205322

Token 729: ' '' (ID: 461)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09984975308179855
    2. 'range' → logprob: -2.5998497009277344
    3. ' i' → logprob: -4.224849700927734
    4. ' range' → logprob: -5.099849700927734
    5. '```' → logprob: -12.724849700927734
    6. ' la' → logprob: -13.099849700927734
    7. ' ' → logprob: -13.349849700927734
    8. 'l' → logprob: -13.599849700927734
    9. 'a' → logprob: -13.849849700927734
    10. '`' → logprob: -13.974849700927734

Token 730: 'i' (ID: 72)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16899564862251282
    2. 'i' → logprob: -1.9189956188201904
    3. ' range' → logprob: -4.7939958572387695
    4. ' i' → logprob: -8.41899585723877
    5. 'c' → logprob: -8.91899585723877
    6. 'a' → logprob: -10.16899585723877
    7. '(range' → logprob: -11.66899585723877
    8. '`' → logprob: -11.79399585723877
    9. '```' → logprob: -11.79399585723877
    10. 'r' → logprob: -11.91899585723877

Token 731: '',' (ID: 787)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004824549425393343
    2. ']
' → logprob: -6.379824638366699
    3. 'for' → logprob: -6.754824638366699
    4. ')
' → logprob: -7.504824638366699
    5. ')' → logprob: -8.0048246383667
    6. ']' → logprob: -8.1298246383667
    7. ')c' → logprob: -8.3798246383667
    8. ':
' → logprob: -9.1298246383667
    9. 'range' → logprob: -9.1298246383667
    10. '.
' → logprob: -9.2548246383667

Token 732: ' ce' (ID: 2357)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0004338877333793789
    2. ' c' → logprob: -7.875433921813965
    3. '#' → logprob: -10.125433921813965
    4. '
' → logprob: -12.125433921813965
    5. 'd' → logprob: -13.625433921813965
    6. '   ' → logprob: -13.875433921813965
    7. 'for' → logprob: -14.000433921813965
    8. ')' → logprob: -14.125433921813965
    9. 'sum' → logprob: -14.125433921813965
    10. 'result' → logprob: -14.250433921813965

Token 733: ' qui' (ID: 2780)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4978485703468323
    2. 'for' → logprob: -2.2478485107421875
    3. ' qui' → logprob: -2.6228485107421875
    4. ' for' → logprob: -2.8728485107421875
    5. ' =' → logprob: -2.8728485107421875
    6. '=' → logprob: -3.1228485107421875
    7. 'qui' → logprob: -4.3728485107421875
    8. ')' → logprob: -4.6228485107421875
    9. 'a' → logprob: -4.7478485107421875
    10. '#' → logprob: -5.3728485107421875

Token 734: ' donne' (ID: 30004)
  Prédit: ' donne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' donne' → logprob: -0.672575831413269
    2. ' donnera' → logprob: -1.422575831413269
    3. 'produ' → logprob: -3.1725759506225586
    4. ' =' → logprob: -3.2975759506225586
    5. '=' → logprob: -3.5475759506225586
    6. ' crée' → logprob: -3.7975759506225586
    7. ' produce' → logprob: -4.172575950622559
    8. ' produces' → logprob: -4.422575950622559
    9. ' permet' → logprob: -4.422575950622559
    10. ' va' → logprob: -4.422575950622559

Token 735: ' une' (ID: 2463)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.007168909069150686
    2. '[' → logprob: -5.257168769836426
    3. ' c' → logprob: -6.882168769836426
    4. '[c' → logprob: -7.257168769836426
    5. '[
' → logprob: -8.757168769836426
    6. ' [' → logprob: -10.632168769836426
    7. '[i' → logprob: -11.257168769836426
    8. '[s' → logprob: -13.507168769836426
    9. '```' → logprob: -13.882168769836426
    10. '[(' → logprob: -14.007168769836426

Token 736: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.004968562629073858
    2. ' c' → logprob: -5.754968643188477
    3. '[' → logprob: -7.629968643188477
    4. 'result' → logprob: -7.754968643188477
    5. '[
' → logprob: -8.004968643188477
    6. 'liste' → logprob: -8.754968643188477
    7. 'range' → logprob: -9.004968643188477
    8. 's' → logprob: -9.379968643188477
    9. 'd' → logprob: -10.254968643188477
    10. 'sum' → logprob: -11.379968643188477

Token 737: ' de' (ID: 334)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.011590953916311264
    2. 'result' → logprob: -5.761590957641602
    3. 'd' → logprob: -5.886590957641602
    4. ' =' → logprob: -6.386590957641602
    5. ' c' → logprob: -6.886590957641602
    6. 'sum' → logprob: -7.511590957641602
    7. '=' → logprob: -7.636590957641602
    8. 's' → logprob: -7.761590957641602
    9. '[' → logprob: -7.761590957641602
    10. 'res' → logprob: -8.011590957641602

Token 738: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20444424450397491
    2. '5' → logprob: -1.9544442892074585
    3. '[int' → logprob: -3.829444169998169
    4. '[s' → logprob: -4.704444408416748
    5. 'sum' → logprob: -4.829444408416748
    6. '[
' → logprob: -5.704444408416748
    7. ' [' → logprob: -7.204444408416748
    8. ' ' → logprob: -9.57944393157959
    9. '[len' → logprob: -10.07944393157959
    10. 's' → logprob: -10.07944393157959

Token 739: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.599597692489624
    2. '[s' → logprob: -1.724597692489624
    3. '5' → logprob: -1.849597692489624
    4. '[int' → logprob: -2.599597692489624
    5. '[
' → logprob: -4.099597930908203
    6. 'sum' → logprob: -4.349597930908203
    7. 'c' → logprob: -5.474597930908203
    8. '[c' → logprob: -6.224597930908203
    9. '[i' → logprob: -6.974597930908203
    10. '[result' → logprob: -6.974597930908203

Token 740: ' sommes' (ID: 32024)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2338272333145142
    2. 'val' → logprob: -2.1088271141052246
    3. '[' → logprob: -2.3588271141052246
    4. 'c' → logprob: -2.4838271141052246
    5. 'elements' → logprob: -2.4838271141052246
    6. 'result' → logprob: -2.7338271141052246
    7. '=' → logprob: -2.9838271141052246
    8. ' =' → logprob: -3.6088271141052246
    9. '[
' → logprob: -3.6088271141052246
    10. 'élé' → logprob: -3.6088271141052246

Token 741: ' possibles' (ID: 97753)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00019364648323971778
    2. '
' → logprob: -9.25019359588623
    3. '#' → logprob: -9.87519359588623
    4. '=' → logprob: -11.12519359588623
    5. ' =' → logprob: -11.25019359588623
    6. ' c' → logprob: -12.12519359588623
    7. ',' → logprob: -13.00019359588623
    8. '=
' → logprob: -13.12519359588623
    9. '.
' → logprob: -13.37519359588623
    10. '=c' → logprob: -13.87519359588623

Token 742: '.
' (ID: 558)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00012487331696320325
    2. '#' → logprob: -9.75012493133545
    3. '
' → logprob: -10.00012493133545
    4. ' c' → logprob: -11.87512493133545
    5. ',' → logprob: -12.37512493133545
    6. '.
' → logprob: -13.50012493133545
    7. ' =' → logprob: -13.50012493133545
    8. 'd' → logprob: -14.00012493133545
    9. ')
' → logprob: -14.25012493133545
    10. '=' → logprob: -14.50012493133545

Token 743: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.5577775128767826e-06
    2. ' c' → logprob: -12.875005722045898
    3. 'd' → logprob: -13.125005722045898
    4. '
' → logprob: -14.625005722045898
    5. '#' → logprob: -15.750005722045898
    6. 'sum' → logprob: -16.2500057220459
    7. '```' → logprob: -16.3750057220459
    8. 'с' → logprob: -17.2500057220459
    9. 'result' → logprob: -17.3750057220459
    10. 'print' → logprob: -18.1250057220459

Token 744: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931551694869995
    2. ' =' → logprob: -0.6931551694869995
    3. '=[' → logprob: -12.318155288696289
    4. ' =[' → logprob: -12.818155288696289
    5. '=c' → logprob: -15.443155288696289
    6. '[' → logprob: -15.568155288696289
    7. '=[]' → logprob: -15.818155288696289
    8. 'c' → logprob: -16.81815528869629
    9. ' ' → logprob: -17.19315528869629
    10. '＝' → logprob: -17.56815528869629

Token 745: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.173704271830502e-06
    2. '[int' → logprob: -13.50000286102295
    3. ' [' → logprob: -13.75000286102295
    4. '[
' → logprob: -14.87500286102295
    5. '[s' → logprob: -15.25000286102295
    6. '[a' → logprob: -18.500003814697266
    7. '[len' → logprob: -18.500003814697266
    8. 'sum' → logprob: -18.750003814697266
    9. '[array' → logprob: -20.250003814697266
    10. '[list' → logprob: -20.750003814697266

Token 746: 'sum' (ID: 12298)
  Prédit: 'sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: 0.0
    2. ' sum' → logprob: -16.75
    3. '(sum' → logprob: -18.75
    4. '   ' → logprob: -21.75
    5. '
' → logprob: -23.75
    6. '	sum' → logprob: -24.0
    7. '  ' → logprob: -24.75
    8. '=sum' → logprob: -24.75
    9. 'summ' → logprob: -25.375
    10. ' ' → logprob: -25.375

Token 747: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0008947860915213823
    2. '(' → logprob: -7.125895023345947
    3. '(
' → logprob: -9.500894546508789
    4. '(([' → logprob: -11.250894546508789
    5. ' ([' → logprob: -14.250894546508789
    6. '([[' → logprob: -14.375894546508789
    7. '([
' → logprob: -14.625894546508789
    8. '((' → logprob: -15.000894546508789
    9. '(

' → logprob: -15.875894546508789
    10. '[' → logprob: -16.12589454650879

Token 748: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0004925066023133695
    2. '[a' → logprob: -7.625492572784424
    3. ' a' → logprob: -12.625492095947266
    4. '   ' → logprob: -14.250492095947266
    5. ' [' → logprob: -15.250492095947266
    6. ' ' → logprob: -15.750492095947266
    7. '(a' → logprob: -16.125492095947266
    8. '	a' → logprob: -17.125492095947266
    9. '  ' → logprob: -17.250492095947266
    10. '([' → logprob: -18.625492095947266

Token 749: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -12.000008583068848
    3. ' [' → logprob: -13.500008583068848
    4. 'i' → logprob: -14.875008583068848
    5. '[
' → logprob: -15.375008583068848
    6. '[I' → logprob: -16.37500762939453
    7. ' ' → logprob: -17.37500762939453
    8. '(i' → logprob: -18.12500762939453
    9. '[int' → logprob: -18.12500762939453
    10. ' i' → logprob: -18.25000762939453

Token 750: ']]' (ID: 8928)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0026880137156695127
    2. ']]' → logprob: -6.502687931060791
    3. ']+' → logprob: -6.752687931060791
    4. ']
' → logprob: -12.00268840789795
    5. ' ]' → logprob: -12.37768840789795
    6. '])' → logprob: -13.12768840789795
    7. ']])' → logprob: -13.75268840789795
    8. '']' → logprob: -13.87768840789795
    9. ')]' → logprob: -14.12768840789795
    10. '],' → logprob: -14.75268840789795

Token 751: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.38790541887283325
    2. ' +' → logprob: -1.1379053592681885
    3. '+[' → logprob: -6.887905597686768
    4. '+b' → logprob: -12.13790512084961
    5. '+
' → logprob: -12.38790512084961
    6. ')' → logprob: -13.26290512084961
    7. ' +
' → logprob: -14.38790512084961
    8. '+B' → logprob: -14.76290512084961
    9. ')+' → logprob: -15.13790512084961
    10. '+)' → logprob: -15.26290512084961

Token 752: ' [' (ID: 723)
  Prédit: '[b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.0017225458286702633
    2. ' [' → logprob: -6.37672233581543
    3. 'b' → logprob: -10.87672233581543
    4. ' b' → logprob: -14.00172233581543
    5. '[' → logprob: -15.25172233581543
    6. '(b' → logprob: -16.62672233581543
    7. ' ' → logprob: -16.62672233581543
    8. '   ' → logprob: -16.75172233581543
    9. '[
' → logprob: -16.87672233581543
    10. '	b' → logprob: -18.12672233581543

Token 753: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.320199877838604e-07
    2. ' b' → logprob: -14.75
    3. ')b' → logprob: -20.25
    4. '	b' → logprob: -21.125
    5. '(b' → logprob: -22.375
    6. '   ' → logprob: -22.5
    7. '>b' → logprob: -22.5
    8. '[b' → logprob: -23.625
    9. ''b' → logprob: -23.75
    10. '*b' → logprob: -23.875

Token 754: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. 'j' → logprob: -15.625
    4. ' [' → logprob: -19.125
    5. '(j' → logprob: -20.125
    6. '[b' → logprob: -20.375
    7. '[i' → logprob: -20.5
    8. '   ' → logprob: -21.5
    9. '[
' → logprob: -21.875
    10. '```' → logprob: -21.875

Token 755: ']' (ID: 60)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.049320437014102936
    2. ' for' → logprob: -3.0493204593658447
    3. ']' → logprob: -7.424320220947266
    4. ')' → logprob: -8.924320220947266
    5. '	for' → logprob: -13.549320220947266
    6. '
' → logprob: -14.174320220947266
    7. ' ' → logprob: -15.674320220947266
    8. 'or' → logprob: -15.924320220947266
    9. '
' → logprob: -16.174320220947266
    10. '}' → logprob: -16.299320220947266

Token 756: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07889044284820557
    2. ' for' → logprob: -2.578890323638916
    3. ')' → logprob: -14.578890800476074
    4. '	for' → logprob: -15.828890800476074
    5. ' ' → logprob: -16.328889846801758
    6. '
' → logprob: -17.703889846801758
    7. 'or' → logprob: -18.328889846801758
    8. '﻿' → logprob: -19.453889846801758
    9. '   ' → logprob: -19.953889846801758
    10. '[' → logprob: -20.078889846801758

Token 757: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.20144160091876984
    2. ' j' → logprob: -1.7014416456222534
    3. 'range' → logprob: -10.701441764831543
    4. ' in' → logprob: -12.826441764831543
    5. ' range' → logprob: -13.076441764831543
    6. '	j' → logprob: -15.076441764831543
    7. 'in' → logprob: -15.076441764831543
    8. ' ' → logprob: -16.451440811157227
    9. '[j' → logprob: -16.826440811157227
    10. ',j' → logprob: -17.076440811157227

Token 758: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3132895827293396
    2. 'in' → logprob: -1.3132896423339844
    3. 'range' → logprob: -11.313289642333984
    4. 'n' → logprob: -11.688289642333984
    5. ' j' → logprob: -12.688289642333984
    6. 'j' → logprob: -13.688289642333984
    7. ' ' → logprob: -14.063289642333984
    8. 'i' → logprob: -14.563289642333984
    9. ' i' → logprob: -14.688289642333984
    10. '	in' → logprob: -15.563289642333984

Token 759: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. '(range' → logprob: -16.125261306762695
    4. 'rang' → logprob: -16.125261306762695
    5. '	range' → logprob: -17.375261306762695
    6. ' ' → logprob: -17.875261306762695
    7. 'r' → logprob: -18.000261306762695
    8. '
' → logprob: -18.625261306762695
    9. '   ' → logprob: -18.750261306762695
    10. 'ran' → logprob: -19.250261306762695

Token 760: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.542423165636137e-05
    2. 'range' → logprob: -9.750085830688477
    3. '5' → logprob: -10.875085830688477
    4. '(range' → logprob: -12.000085830688477
    5. ' (' → logprob: -14.000085830688477
    6. ' range' → logprob: -14.125085830688477
    7. '(
' → logprob: -15.125085830688477
    8. '((' → logprob: -16.250085830688477
    9. '4' → logprob: -17.500085830688477
    10. '
' → logprob: -17.625085830688477

Token 761: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.001818097778595984
    2. 'range' → logprob: -6.3768181800842285
    3. '(' → logprob: -9.12681770324707
    4. ' ' → logprob: -12.75181770324707
    5. ' range' → logprob: -12.87681770324707
    6. '   ' → logprob: -14.12681770324707
    7. '(range' → logprob: -15.12681770324707
    8. '
' → logprob: -15.37681770324707
    9. '```' → logprob: -16.37681770324707
    10. '0' → logprob: -16.68931770324707

Token 762: ')' (ID: 8)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.03483809530735016
    2. 'if' → logprob: -3.5348381996154785
    3. ')' → logprob: -5.2848381996154785
    4. ' j' → logprob: -13.28483772277832
    5. '])' → logprob: -13.40983772277832
    6. ')])' → logprob: -13.90983772277832
    7. '	if' → logprob: -14.03483772277832
    8. ' )' → logprob: -14.40983772277832
    9. ']' → logprob: -14.90983772277832
    10. ')]' → logprob: -15.03483772277832

Token 763: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.16022473573684692
    2. 'if' → logprob: -1.9102246761322021
    3. ' j' → logprob: -15.285224914550781
    4. '	if' → logprob: -16.16022491455078
    5. ' ' → logprob: -16.41022491455078
    6. 'j' → logprob: -16.53522491455078
    7. ' for' → logprob: -18.03522491455078
    8. '   ' → logprob: -18.16022491455078
    9. ')' → logprob: -18.28522491455078
    10. ',' → logprob: -18.28522491455078

Token 764: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.010484689846634865
    2. ' i' → logprob: -4.63548469543457
    3. 'j' → logprob: -7.26048469543457
    4. ' j' → logprob: -10.63548469543457
    5. '	i' → logprob: -14.26048469543457
    6. '   ' → logprob: -14.63548469543457
    7. '(i' → logprob: -15.63548469543457
    8. ' ' → logprob: -15.88548469543457
    9. ')i' → logprob: -16.63548469543457
    10. '  ' → logprob: -17.01048469543457

Token 765: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.3133455216884613
    2. ' !=' → logprob: -1.3133455514907837
    3. '!' → logprob: -9.813345909118652
    4. ']!=' → logprob: -11.688345909118652
    5. '!=(' → logprob: -12.438345909118652
    6. ')!=' → logprob: -12.563345909118652
    7. '()!=' → logprob: -12.688345909118652
    8. '!='' → logprob: -12.813345909118652
    9. '!="' → logprob: -13.188345909118652
    10. '!==' → logprob: -13.563345909118652

Token 766: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -7.505351095460355e-05
    2. ' j' → logprob: -9.500075340270996
    3. '	j' → logprob: -15.875075340270996
    4. 'i' → logprob: -17.50007438659668
    5. '$j' → logprob: -18.50007438659668
    6. '   ' → logprob: -18.75007438659668
    7. '```' → logprob: -19.12507438659668
    8. '_j' → logprob: -19.62507438659668
    9. '[j' → logprob: -20.12507438659668
    10. '=j' → logprob: -20.37507438659668

Token 767: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.00193458900321275
    2. ')' → logprob: -7.25193452835083
    3. ')]' → logprob: -7.75193452835083
    4. '])]' → logprob: -7.87693452835083
    5. ')])' → logprob: -7.87693452835083
    6. '])
' → logprob: -10.626935005187988
    7. ' ])' → logprob: -12.626935005187988
    8. ']' → logprob: -12.876935005187988
    9. '))' → logprob: -13.001935005187988
    10. '])]
' → logprob: -13.751935005187988

Token 768: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03805813565850258
    2. 'for' → logprob: -3.288058042526245
    3. ')' → logprob: -11.663058280944824
    4. ']' → logprob: -12.788058280944824
    5. '   ' → logprob: -12.788058280944824
    6. '	for' → logprob: -13.038058280944824
    7. ' ' → logprob: -15.288058280944824
    8. ' ]' → logprob: -17.538057327270508
    9. '    ' → logprob: -17.788057327270508
    10. '  ' → logprob: -18.038057327270508

Token 769: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.1269284337759018
    2. ' i' → logprob: -2.1269283294677734
    3. '	i' → logprob: -15.126928329467773
    4. '_i' → logprob: -17.876928329467773
    5. ' ' → logprob: -18.001928329467773
    6. ')i' → logprob: -19.251928329467773
    7. ' ' → logprob: -19.626928329467773
    8. 'I' → logprob: -19.876928329467773
    9. ''i' → logprob: -20.001928329467773
    10. 'a' → logprob: -20.001928329467773

Token 770: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014351636171341
    2. 'in' → logprob: -1.7014352083206177
    3. ' ' → logprob: -11.076435089111328
    4. '	in' → logprob: -13.701435089111328
    5. 'range' → logprob: -14.201435089111328
    6. ')' → logprob: -14.451435089111328
    7. ' i' → logprob: -14.451435089111328
    8. 'import' → logprob: -14.576435089111328
    9. '  ' → logprob: -14.576435089111328
    10. '<|end|>' → logprob: -14.701435089111328

Token 771: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '(range' → logprob: -17.125911712646484
    4. '5' → logprob: -19.250911712646484
    5. '	range' → logprob: -19.375911712646484
    6. 'rang' → logprob: -19.500911712646484
    7. 'ran' → logprob: -19.875911712646484
    8. 'Range' → logprob: -20.125911712646484
    9. ' ' → logprob: -20.250911712646484
    10. 'r' → logprob: -20.500911712646484

Token 772: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.1424973713001236e-05
    2. '5' → logprob: -10.375031471252441
    3. '(
' → logprob: -16.375030517578125
    4. ' (' → logprob: -18.625030517578125
    5. '(

' → logprob: -21.500030517578125
    6. ')' → logprob: -22.500030517578125
    7. '0' → logprob: -23.750030517578125
    8. '()' → logprob: -23.875030517578125
    9. '(len' → logprob: -23.875030517578125
    10. ' ' → logprob: -24.000030517578125

Token 773: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '(' → logprob: -20.875
    4. '```' → logprob: -21.875
    5. '   ' → logprob: -22.75
    6. ')' → logprob: -22.875
    7. '0' → logprob: -23.375
    8. '５' → logprob: -24.625
    9. '۵' → logprob: -24.75
    10. '٥' → logprob: -24.75

Token 774: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -2.7133641196996905e-05
    2. ']' → logprob: -11.25002670288086
    3. ')' → logprob: -11.62502670288086
    4. '])]' → logprob: -12.87502670288086
    5. '])' → logprob: -13.75002670288086
    6. ')])' → logprob: -14.00002670288086
    7. ')]
' → logprob: -15.62502670288086
    8. ' )' → logprob: -15.75002670288086
    9. '))' → logprob: -15.87502670288086
    10. '+' → logprob: -16.62502670288086

Token 775: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028400951996445656
    2. 'result' → logprob: -4.028400897979736
    3. 'max' → logprob: -5.278400897979736
    4. '#' → logprob: -6.528400897979736
    5. 'answer' → logprob: -6.653400897979736
    6. 'c' → logprob: -6.903400897979736
    7. 'd' → logprob: -6.903400897979736
    8. 'm' → logprob: -9.528401374816895
    9. 'ans' → logprob: -10.153401374816895
    10. 'best' → logprob: -10.278401374816895

Token 776: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003886086633428931
    2. 'result' → logprob: -8.875388145446777
    3. 'for' → logprob: -9.125388145446777
    4. 'm' → logprob: -10.000388145446777
    5. 'max' → logprob: -10.000388145446777
    6. 'd' → logprob: -11.000388145446777
    7. 'answer' → logprob: -11.625388145446777
    8. 'c' → logprob: -12.000388145446777
    9. 'min' → logprob: -12.375388145446777
    10. 'prin' → logprob: -12.750388145446777

Token 777: 'min' (ID: 1493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.976922744186595e-05
    2. 'max' → logprob: -11.500040054321289
    3. 'result' → logprob: -11.750040054321289
    4. 'prin' → logprob: -11.750040054321289
    5. ' print' → logprob: -12.750040054321289
    6. 'pr' → logprob: -13.125040054321289
    7. 'c' → logprob: -13.375040054321289
    8. '#' → logprob: -13.500040054321289
    9. 'min' → logprob: -14.500040054321289
    10. 'answer' → logprob: -14.500040054321289

Token 778: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0837181881070137
    2. '(' → logprob: -3.2087182998657227
    3. '_value' → logprob: -4.083718299865723
    4. '_val' → logprob: -4.208718299865723
    5. '_c' → logprob: -5.083718299865723
    6. '_' → logprob: -6.458718299865723
    7. 'c' → logprob: -8.583718299865723
    8. '()' → logprob: -9.333718299865723
    9. '_result' → logprob: -10.458718299865723
    10. 'val' → logprob: -10.958718299865723

Token 779: ')'' (ID: 45517)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.13028943538665771
    2. ')' → logprob: -2.1302895545959473
    3. '()' → logprob: -6.005289554595947
    4. ')]' → logprob: -7.755289554595947
    5. ')])' → logprob: -8.630289077758789
    6. '()]' → logprob: -8.755289077758789
    7. '])' → logprob: -9.505289077758789
    8. '(' → logprob: -10.630289077758789
    9. ' ())' → logprob: -11.880289077758789
    10. ' )' → logprob: -12.005289077758789

Token 780: ' :' (ID: 712)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00028421927709132433
    2. '(' → logprob: -8.500284194946289
    3. '(min' → logprob: -10.125284194946289
    4. '()
' → logprob: -10.875284194946289
    5. '())' → logprob: -11.500284194946289
    6. '()]' → logprob: -12.875284194946289
    7. '()

' → logprob: -13.500284194946289
    8. 'min' → logprob: -13.625284194946289
    9. ')' → logprob: -13.625284194946289
    10. '(max' → logprob: -13.875284194946289

Token 781: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.13981708884239197
    2. 'min' → logprob: -2.514816999435425
    3. 'result' → logprob: -3.389816999435425
    4. ' print' → logprob: -5.014817237854004
    5. ' min' → logprob: -5.264817237854004
    6. ' result' → logprob: -6.139817237854004
    7. 'minimum' → logprob: -6.639817237854004
    8. 'res' → logprob: -8.639817237854004
    9. ' minimum' → logprob: -8.889817237854004
    10. 'answer' → logprob: -8.889817237854004

Token 782: ' trouve' (ID: 30913)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06301867216825485
    2. '=' → logprob: -3.063018560409546
    3. ' =' → logprob: -4.313018798828125
    4. '#' → logprob: -8.688018798828125
    5. 'result' → logprob: -9.063018798828125
    6. ')' → logprob: -9.188018798828125
    7. ' print' → logprob: -9.313018798828125
    8. '_print' → logprob: -9.438018798828125
    9. '.' → logprob: -9.563018798828125
    10. 'prin' → logprob: -9.688018798828125

Token 783: ' la' (ID: 557)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14366452395915985
    2. '(min' → logprob: -2.018664598464966
    3. '(c' → logprob: -7.643664360046387
    4. '(l' → logprob: -9.268664360046387
    5. 'min' → logprob: -9.393664360046387
    6. '(max' → logprob: -9.518664360046387
    7. '(
' → logprob: -9.768664360046387
    8. ')' → logprob: -10.018664360046387
    9. '()' → logprob: -10.018664360046387
    10. 'the' → logprob: -10.393664360046387

Token 784: ' valeur' (ID: 41664)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7237097024917603
    2. 'minimum' → logprob: -0.8487097024917603
    3. ' minimum' → logprob: -2.4737095832824707
    4. ' min' → logprob: -6.223709583282471
    5. '(min' → logprob: -7.473709583282471
    6. ' minimal' → logprob: -9.598710060119629
    7. ' minimale' → logprob: -9.723710060119629
    8. 'minimal' → logprob: -10.098710060119629
    9. ')' → logprob: -10.348710060119629
    10. 'm' → logprob: -11.473710060119629

Token 785: ' minimale' (ID: 143217)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.4557638466358185
    2. '(' → logprob: -1.330763816833496
    3. 'min' → logprob: -2.830763816833496
    4. '(c' → logprob: -3.330763816833496
    5. '(
' → logprob: -5.205763816833496
    6. '_min' → logprob: -7.205763816833496
    7. 'minimum' → logprob: -7.955763816833496
    8. 'c' → logprob: -8.455763816833496
    9. ' minimale' → logprob: -9.330763816833496
    10. ' (' → logprob: -11.080763816833496

Token 786: ' parmi' (ID: 51713)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.6455230116844177
    2. '(' → logprob: -2.0205230712890625
    3. '(min' → logprob: -2.3955230712890625
    4. 'result' → logprob: -2.5205230712890625
    5. 'min' → logprob: -3.0205230712890625
    6. 'c' → logprob: -3.1455230712890625
    7. 'print' → logprob: -3.2705230712890625
    8. '_min' → logprob: -4.2705230712890625
    9. '_c' → logprob: -5.0205230712890625
    10. '_result' → logprob: -5.1455230712890625

Token 787: ' les' (ID: 1341)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000985412043519318
    2. ' c' → logprob: -7.125985622406006
    3. '(c' → logprob: -8.625985145568848
    4. ')c' → logprob: -14.125985145568848
    5. 'la' → logprob: -14.375985145568848
    6. '(' → logprob: -16.250986099243164
    7. ' la' → logprob: -16.875986099243164
    8. ')' → logprob: -17.000986099243164
    9. 'min' → logprob: -17.375986099243164
    10. 'l' → logprob: -17.375986099243164

Token 788: ' ' (ID: 220)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.3856492842023727e-06
    2. 'val' → logprob: -14.375000953674316
    3. ' c' → logprob: -14.500000953674316
    4. 'values' → logprob: -16.250001907348633
    5. ')c' → logprob: -17.125001907348633
    6. 'с' → logprob: -17.500001907348633
    7. 'cé' → logprob: -17.875001907348633
    8. 'élé' → logprob: -18.875001907348633
    9. ' valeurs' → logprob: -19.000001907348633
    10. '	c' → logprob: -19.500001907348633

Token 789: '5' (ID: 20)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.6312321753939614e-05
    2. 'val' → logprob: -10.375036239624023
    3. 'élé' → logprob: -13.125036239624023
    4. ' c' → logprob: -13.750036239624023
    5. 'values' → logprob: -14.125036239624023
    6. ')c' → logprob: -14.750036239624023
    7. ')' → logprob: -15.875036239624023
    8. 's' → logprob: -16.125036239624023
    9. 'cé' → logprob: -16.500036239624023
    10. 'с' → logprob: -16.625036239624023

Token 790: ' éléments' (ID: 57375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09278817474842072
    2. 'c' → logprob: -3.3427882194519043
    3. 'val' → logprob: -3.5927882194519043
    4. '(c' → logprob: -4.342788219451904
    5. ')c' → logprob: -5.342788219451904
    6. '(' → logprob: -5.717788219451904
    7. 'print' → logprob: -6.342788219451904
    8. 's' → logprob: -7.592788219451904
    9. '(min' → logprob: -7.592788219451904
    10. 'min' → logprob: -7.967788219451904

Token 791: ' de' (ID: 334)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.29627525806427
    2. 'print' → logprob: -1.67127525806427
    3. '(' → logprob: -3.4212751388549805
    4. '()' → logprob: -4.2962751388549805
    5. '(c' → logprob: -4.6712751388549805
    6. 'min' → logprob: -4.6712751388549805
    7. 'c' → logprob: -7.1712751388549805
    8. '(
' → logprob: -7.1712751388549805
    9. '(print' → logprob: -7.5462751388549805
    10. ')' → logprob: -7.6712751388549805

Token 792: ' la' (ID: 557)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.0206720617134124e-05
    2. ' c' → logprob: -11.50001049041748
    3. '(c' → logprob: -19.875009536743164
    4. ')c' → logprob: -21.500009536743164
    5. '	c' → logprob: -21.875009536743164
    6. '
' → logprob: -24.875009536743164
    7. ')' → logprob: -25.125009536743164
    8. '_c' → logprob: -25.500009536743164
    9. 'с' → logprob: -25.500009536743164
    10. '```' → logprob: -25.750009536743164

Token 793: ' liste' (ID: 31719)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0006428572814911604
    2. 'liste' → logprob: -7.375642776489258
    3. ' c' → logprob: -11.375642776489258
    4. ' liste' → logprob: -12.875642776489258
    5. 'list' → logprob: -13.125642776489258
    6. 'Liste' → logprob: -16.125642776489258
    7. 'lista' → logprob: -16.750642776489258
    8. '```' → logprob: -17.875642776489258
    9. ')c' → logprob: -17.875642776489258
    10. 'cé' → logprob: -18.000642776489258

Token 794: ' '' (ID: 461)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.07991106808185577
    2. '(c' → logprob: -2.57991099357605
    3. '(' → logprob: -8.079911231994629
    4. ')c' → logprob: -8.079911231994629
    5. ')' → logprob: -8.329911231994629
    6. 'min' → logprob: -9.829911231994629
    7. '(min' → logprob: -10.079911231994629
    8. ' c' → logprob: -10.079911231994629
    9. 'print' → logprob: -11.579911231994629
    10. '_c' → logprob: -12.579911231994629

Token 795: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.246537173457909e-06
    2. ' c' → logprob: -12.625003814697266
    3. '(c' → logprob: -14.125003814697266
    4. ')c' → logprob: -16.000003814697266
    5. '	c' → logprob: -19.375003814697266
    6. '_c' → logprob: -20.125003814697266
    7. '(' → logprob: -20.250003814697266
    8. 'с' → logprob: -20.750003814697266
    9. ')' → logprob: -21.000003814697266
    10. '.c' → logprob: -22.125003814697266

Token 796: ''.
' (ID: 49980)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0055943261831998825
    2. 'print' → logprob: -5.880594253540039
    3. '()' → logprob: -6.130594253540039
    4. ')
' → logprob: -8.130594253540039
    5. ' )' → logprob: -8.380594253540039
    6. '())' → logprob: -10.505594253540039
    7. '))' → logprob: -11.630594253540039
    8. '()
' → logprob: -12.005594253540039
    9. ').' → logprob: -12.005594253540039
    10. ')c' → logprob: -12.005594253540039

Token 797: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0006901554297655821
    2. 'result' → logprob: -7.50068998336792
    3. 'min' → logprob: -9.000690460205078
    4. 'minimum' → logprob: -12.250690460205078
    5. 'prin' → logprob: -12.500690460205078
    6. 'pr' → logprob: -13.000690460205078
    7. ' print' → logprob: -13.750690460205078
    8. 'pri' → logprob: -14.625690460205078
    9. 'm' → logprob: -14.875690460205078
    10. 'answer' → logprob: -15.250690460205078

Token 798: ' Cette' (ID: 27383)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006771380081772804
    2. 'result' → logprob: -5.006771564483643
    3. 'answer' → logprob: -10.756771087646484
    4. 'min' → logprob: -11.006771087646484
    5. ' print' → logprob: -11.506771087646484
    6. 'minimum' → logprob: -12.631771087646484
    7. 'prin' → logprob: -13.756771087646484
    8. 'ans' → logprob: -13.881771087646484
    9. 'pr' → logprob: -14.381771087646484
    10. 'r' → logprob: -14.506771087646484

Token 799: ' valeur' (ID: 41664)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.9741547107696533
    2. 'result' → logprob: -1.7241547107696533
    3. ' =' → logprob: -1.8491547107696533
    4. '=' → logprob: -1.9741547107696533
    5. '_result' → logprob: -2.9741547107696533
    6. 'final' → logprob: -3.5991547107696533
    7. '_' → logprob: -3.5991547107696533
    8. '_min' → logprob: -4.849154472351074
    9. '_print' → logprob: -5.474154472351074
    10. 'minimum' → logprob: -5.599154472351074

Token 800: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31505006551742554
    2. '=' → logprob: -1.8150501251220703
    3. '_min' → logprob: -3.1900501251220703
    4. '_final' → logprob: -3.6900501251220703
    5. '_' → logprob: -4.06505012512207
    6. '_result' → logprob: -4.81505012512207
    7. 'final' → logprob: -5.31505012512207
    8. '_est' → logprob: -6.06505012512207
    9. 'est' → logprob: -6.44005012512207
    10. 'print' → logprob: -6.56505012512207

Token 801: ' ensuite' (ID: 39713)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07948319613933563
    2. 'min' → logprob: -2.5794832706451416
    3. '(min' → logprob: -8.079483032226562
    4. ' print' → logprob: -9.079483032226562
    5. 'prin' → logprob: -9.329483032226562
    6. 'printed' → logprob: -9.954483032226562
    7. ' min' → logprob: -12.079483032226562
    8. 'minimum' → logprob: -12.204483032226562
    9. '(print' → logprob: -12.329483032226562
    10. 'im' → logprob: -12.704483032226562

Token 802: ' affich' (ID: 90179)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.7432603272027336e-06
    2. 'printed' → logprob: -14.250001907348633
    3. 'prin' → logprob: -14.625001907348633
    4. 'im' → logprob: -15.375001907348633
    5. 'pr' → logprob: -16.000001907348633
    6. ' print' → logprob: -16.125001907348633
    7. ')' → logprob: -16.625001907348633
    8. '(print' → logprob: -17.625001907348633
    9. 'min' → logprob: -18.250001907348633
    10. '#print' → logprob: -18.500001907348633

Token 803: 'ée' (ID: 2894)
  Prédit: 'ée'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.002660077763721347
    2. 'é' → logprob: -6.127660274505615
    3. ')' → logprob: -8.502659797668457
    4. '#' → logprob: -9.252659797668457
    5. 'er' → logprob: -10.002659797668457
    6. '()' → logprob: -10.127659797668457
    7. 'ee' → logprob: -10.627659797668457
    8. 'e' → logprob: -10.627659797668457
    9. 'è' → logprob: -11.627659797668457
    10. 'print' → logprob: -11.877659797668457

Token 804: ' à' (ID: 1221)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001537169300718233
    2. '()
' → logprob: -9.125153541564941
    3. '(
' → logprob: -11.250153541564941
    4. '
' → logprob: -11.375153541564941
    5. '(print' → logprob: -11.375153541564941
    6. '(min' → logprob: -12.875153541564941
    7. ')
' → logprob: -13.000153541564941
    8. 'min' → logprob: -13.625153541564941
    9. '()' → logprob: -14.000153541564941
    10. '(' → logprob: -14.125153541564941

Token 805: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.570785641670227
    2. 'print' → logprob: -0.945785641670227
    3. 'la' → logprob: -3.0707855224609375
    4. ' l' → logprob: -9.320785522460938
    5. '#' → logprob: -11.445785522460938
    6. '#print' → logprob: -11.445785522460938
    7. 'lac' → logprob: -11.945785522460938
    8. 'im' → logprob: -12.320785522460938
    9. 'p' → logprob: -12.695785522460938
    10. 'aff' → logprob: -12.820785522460938

Token 806: ''écran' (ID: 147901)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.028691032901406288
    2. ''écran' → logprob: -4.278690814971924
    3. 'a' → logprob: -4.528690814971924
    4. 'é' → logprob: -6.778690814971924
    5. '#' → logprob: -7.653690814971924
    6. ''aide' → logprob: -8.278691291809082
    7. '#print' → logprob: -8.278691291809082
    8. ''impression' → logprob: -8.528691291809082
    9. 'e' → logprob: -8.653691291809082
    10. '’écran' → logprob: -8.778691291809082

Token 807: ' avec' (ID: 3937)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -9.77022064034827e-05
    2. '
' → logprob: -9.250097274780273
    3. ')
' → logprob: -13.875097274780273
    4. ' print' → logprob: -15.375097274780273
    5. '`
' → logprob: -15.625097274780273
    6. ',
' → logprob: -16.875097274780273
    7. 'min' → logprob: -17.375097274780273
    8. '```' → logprob: -17.750097274780273
    9. '
' → logprob: -17.875097274780273
    10. ')' → logprob: -18.250097274780273

Token 808: ' '' (ID: 461)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.1472419600977446e-06
    2. '(print' → logprob: -14.000000953674316
    3. ' print' → logprob: -15.125000953674316
    4. 'pr' → logprob: -17.625001907348633
    5. '```' → logprob: -17.875001907348633
    6. 'prin' → logprob: -18.000001907348633
    7. 'min' → logprob: -18.250001907348633
    8. '(' → logprob: -19.750001907348633
    9. '#print' → logprob: -19.875001907348633
    10. '
' → logprob: -20.375001907348633

Token 809: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -17.0
    3. 'pr' → logprob: -22.75
    4. 'prin' → logprob: -23.25
    5. 'min' → logprob: -23.625
    6. '```' → logprob: -24.625
    7. '
' → logprob: -25.75
    8. ')' → logprob: -26.125
    9. 'printf' → logprob: -26.375
    10. '(print' → logprob: -26.375

Token 810: ''.
' (ID: 49980)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.3611375093460083
    2. ')' → logprob: -1.7361375093460083
    3. '()' → logprob: -2.8611373901367188
    4. '(' → logprob: -2.9861373901367188
    5. '(print' → logprob: -3.9861373901367188
    6. 'min' → logprob: -7.986137390136719
    7. '())' → logprob: -9.486137390136719
    8. '(c' → logprob: -9.736137390136719
    9. 'print' → logprob: -10.111137390136719
    10. '('' → logprob: -10.736137390136719

Token 811: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: 0.0
    2. ' print' → logprob: -19.125
    3. '```' → logprob: -20.375
    4. 'pr' → logprob: -20.625
    5. '(print' → logprob: -21.5
    6. 'prin' → logprob: -22.0
    7. '
' → logprob: -22.0
    8. '.print' → logprob: -22.875
    9. 'pri' → logprob: -24.375
    10. 'println' → logprob: -24.5

Token 812: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.00317783304490149
    2. '(' → logprob: -5.753177642822266
    3. 'min' → logprob: -16.878177642822266
    4. '(m' → logprob: -17.003177642822266
    5. '(
' → logprob: -17.378177642822266
    6. '(max' → logprob: -17.628177642822266
    7. ' (' → logprob: -17.878177642822266
    8. '(print' → logprob: -18.628177642822266
    9. '()' → logprob: -18.878177642822266
    10. '(M' → logprob: -18.878177642822266

Token 813: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.001705771079286933
    2. '(' → logprob: -6.376705646514893
    3. ')' → logprob: -13.50170612335205
    4. ')c' → logprob: -13.62670612335205
    5. '(min' → logprob: -15.00170612335205
    6. '(
' → logprob: -15.62670612335205
    7. ' (' → logprob: -15.62670612335205
    8. '(C' → logprob: -16.001705169677734
    9. ')(' → logprob: -16.751705169677734
    10. 'c' → logprob: -17.501705169677734

Token 814: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0024792237672954798
    2. ')' → logprob: -6.002479076385498
    3. '()))' → logprob: -13.002479553222656
    4. ')))' → logprob: -14.252479553222656
    5. '())' → logprob: -14.877479553222656
    6. '))
' → logprob: -15.752479553222656
    7. ' ))' → logprob: -16.377479553222656
    8. '()' → logprob: -17.002479553222656
    9. '])' → logprob: -17.377479553222656
    10. '(' → logprob: -18.252479553222656


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 812
Tokens correctement prédits (1ère position, stricte): 218
Tokens correctement prédits (1ère position, avec adaptation): 218
Tokens correctement prédits (top 10): 486
Précision stricte (1ère position): 26.85%
Précision adaptée (1ère position): 26.85%
Précision (top 10): 59.85%
================================================================================
