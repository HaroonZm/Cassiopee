================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:34:56
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def get_input():
    return input()

def split_input(inp):
    return inp.split()

def convert_to_int(str_list):
    return list(map(int, str_list))

def assign_values(int_list):
    return int_list[0], int_list[1], int_list[2]

def sum_values(a, b, c):
    return a + b + c

def is_bust(total):
    return total >= 22

def print_bust():
    print('bust')

def print_win():
    print('win')

def main():
    inp = get_input()
    splitted = split_input(inp)
    int_list = convert_to_int(splitted)
    a, b, c = assign_values(int_list)
    total = sum_values(a, b, c)
    if is_bust(total):
        print_bust()
    else:
        print_win()

main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' get' (ID: 717)
  → Token d'amorce (pas de prédiction)

Token 2: '_input' (ID: 12507)
  → Token d'amorce (pas de prédiction)

Token 3: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012392755597829819
    2. '_' → logprob: -6.75123929977417
    3. ' (' → logprob: -11.251238822937012
    4. '()' → logprob: -11.376238822937012
    5. '```' → logprob: -11.751238822937012
    6. '():' → logprob: -11.876238822937012
    7. '(:' → logprob: -12.376238822937012
    8. '("("' → logprob: -12.751238822937012
    9. '(_' → logprob: -13.126238822937012
    10. '_parent' → logprob: -13.251238822937012

Token 4: '   ' (ID: 271)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.12195135653018951
    2. '\' → logprob: -3.1219513416290283
    3. '   ' → logprob: -3.8719513416290283
    4. '\n' → logprob: -4.371951580047607
    5. '``' → logprob: -4.871951580047607
    6. '(' → logprob: -5.496951580047607
    7. '    
' → logprob: -5.621951580047607
    8. '`' → logprob: -5.621951580047607
    9. ':' → logprob: -5.746951580047607
    10. '():' → logprob: -5.996951580047607

Token 5: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3084721863269806
    2. 'i' → logprob: -2.058472156524658
    3. 'input' → logprob: -2.808472156524658
    4. 'user' → logprob: -3.808472156524658
    5. 'r' → logprob: -4.058472156524658
    6. 'x' → logprob: -4.433472156524658
    7. '   ' → logprob: -4.558472156524658
    8. ' ' → logprob: -5.558472156524658
    9. '```' → logprob: -6.058472156524658
    10. 'n' → logprob: -6.058472156524658

Token 6: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3835088610649109
    2. ' ' → logprob: -1.3835089206695557
    3. 'input' → logprob: -2.7585089206695557
    4. '"' → logprob: -6.008508682250977
    5. ''' → logprob: -7.133508682250977
    6. ' "' → logprob: -8.008508682250977
    7. '  ' → logprob: -8.258508682250977
    8. ' '' → logprob: -8.508508682250977
    9. ' None' → logprob: -9.133508682250977
    10. '(input' → logprob: -9.258508682250977

Token 7: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005985465249978006
    2. '()' → logprob: -8.000598907470703
    3. '('' → logprob: -9.375598907470703
    4. ' (' → logprob: -9.625598907470703
    5. '("("' → logprob: -10.375598907470703
    6. '(
' → logprob: -10.750598907470703
    7. '```' → logprob: -11.375598907470703
    8. '.' → logprob: -11.625598907470703
    9. '(

' → logprob: -12.000598907470703
    10. ' ' → logprob: -12.250598907470703

Token 8: 'def' (ID: 1314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38942375779151917
    2. 'def' → logprob: -2.2644238471984863
    3. '\n' → logprob: -3.2644238471984863
    4. '.' → logprob: -3.2644238471984863
    5. '()' → logprob: -3.5144238471984863
    6. '#' → logprob: -3.6394238471984863
    7. ')' → logprob: -4.139423847198486
    8. '(
' → logprob: -4.389423847198486
    9. '\' → logprob: -4.639423847198486
    10. '```' → logprob: -4.764423847198486

Token 9: ' split' (ID: 12648)
  Prédit: ' get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' get' → logprob: -0.7357314825057983
    2. ' calculate' → logprob: -1.1107314825057983
    3. ' process' → logprob: -2.985731601715088
    4. ' user' → logprob: -3.235731601715088
    5. ' main' → logprob: -4.110731601715088
    6. ' print' → logprob: -4.110731601715088
    7. ' add' → logprob: -4.360731601715088
    8. ' space' → logprob: -4.985731601715088
    9. '_' → logprob: -4.985731601715088
    10. ' check' → logprob: -5.235731601715088

Token 10: '_input' (ID: 12507)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.055169202387332916
    2. '(' → logprob: -3.180169105529785
    3. '_text' → logprob: -5.305169105529785
    4. '_string' → logprob: -6.430169105529785
    5. '_line' → logprob: -6.930169105529785
    6. '_words' → logprob: -7.430169105529785
    7. '('_' → logprob: -7.680169105529785
    8. '_word' → logprob: -7.805169105529785
    9. '_s' → logprob: -7.930169105529785
    10. '_input' → logprob: -8.180169105529785

Token 11: '(inp' (ID: 141645)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012317382730543613
    2. '_' → logprob: -5.262317180633545
    3. '('_' → logprob: -5.512317180633545
    4. '("("' → logprob: -7.012317180633545
    5. '("_' → logprob: -7.762317180633545
    6. '('' → logprob: -8.387317657470703
    7. '(_)' → logprob: -8.387317657470703
    8. '```' → logprob: -8.512317657470703
    9. '_text' → logprob: -9.012317657470703
    10. '(_' → logprob: -9.137317657470703

Token 12: '):
' (ID: 1883)
  Prédit: 'ut'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ut' → logprob: -0.001994896912947297
    2. 'u' → logprob: -7.001995086669922
    3. ')' → logprob: -7.376995086669922
    4. '):' → logprob: -8.876995086669922
    5. ' ut' → logprob: -9.126995086669922
    6. '_ut' → logprob: -9.626995086669922
    7. '):
' → logprob: -10.001995086669922
    8. '.ut' → logprob: -11.126995086669922
    9. 'ут' → logprob: -11.251995086669922
    10. '):

' → logprob: -11.251995086669922

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43225914239883423
    2. ' inp' → logprob: -1.9322590827941895
    3. 'inp' → logprob: -2.4322590827941895
    4. ' return' → logprob: -2.8072590827941895
    5. '(inp' → logprob: -3.4322590827941895
    6. '(' → logprob: -4.0572590827941895
    7. 'return' → logprob: -5.4322590827941895
    8. '_' → logprob: -6.8072590827941895
    9. '    ' → logprob: -7.6822590827941895
    10. ' (' → logprob: -7.8072590827941895

Token 14: ' return' (ID: 622)
  Prédit: ' inp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.1477356255054474
    2. 'inp' → logprob: -2.147735595703125
    3. ' return' → logprob: -4.022735595703125
    4. '   ' → logprob: -6.647735595703125
    5. 'return' (adapté à ' return') → logprob: -6.647735595703125
    6. '(inp' → logprob: -10.022735595703125
    7. ' split' → logprob: -11.772735595703125
    8. ' in' → logprob: -12.022735595703125
    9. '[in' → logprob: -12.147735595703125
    10. ' ' → logprob: -12.960235595703125

Token 15: ' inp' (ID: 64450)
  Prédit: ' inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' inp' → logprob: -0.0019448186503723264
    2. 'inp' → logprob: -6.2519450187683105
    3. '(inp' → logprob: -11.251944541931152
    4. ' in' → logprob: -13.751944541931152
    5. ' ' → logprob: -14.126944541931152
    6. ' input' → logprob: -15.251944541931152
    7. ' ing' → logprob: -15.501944541931152
    8. ' ' → logprob: -16.06444549560547
    9. ' inu' → logprob: -16.25194549560547
    10. ' insp' → logprob: -16.43944549560547

Token 16: '.split' (ID: 10347)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3138323724269867
    2. '.split' → logprob: -1.313832402229309
    3. '.strip' → logprob: -7.5638322830200195
    4. ' .' → logprob: -10.06383228302002
    5. 'split' → logprob: -12.56383228302002
    6. '.replace' → logprob: -13.56383228302002
    7. '().' → logprob: -13.68883228302002
    8. '.rstrip' → logprob: -14.56383228302002
    9. '.lower' → logprob: -14.81383228302002
    10. '.trim' → logprob: -14.81383228302002

Token 17: '()

' (ID: 5874)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.1216859295964241
    2. '(' → logprob: -2.2466859817504883
    3. '("("' → logprob: -4.746685981750488
    4. ''' → logprob: -9.996685981750488
    5. '('.')' → logprob: -10.121685981750488
    6. '()' → logprob: -10.246685981750488
    7. '(`' → logprob: -11.871685981750488
    8. '("' → logprob: -12.371685981750488
    9. '(',' → logprob: -12.621685981750488
    10. '(('' → logprob: -13.246685981750488

Token 18: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007502748165279627
    2. 'd' → logprob: -5.007502555847168
    3. '#' → logprob: -8.632502555847168
    4. '```' → logprob: -8.632502555847168
    5. 'de' → logprob: -8.757502555847168
    6. '\' → logprob: -9.007502555847168
    7. '<|end|>' → logprob: -10.507502555847168
    8. '[' → logprob: -10.757502555847168
    9. '
' → logprob: -11.382502555847168
    10. '`' → logprob: -11.632502555847168

Token 19: ' convert' (ID: 8452)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.2830667495727539
    2. ' process' → logprob: -2.033066749572754
    3. ' join' → logprob: -3.533066749572754
    4. 'main' → logprob: -3.908066749572754
    5. ' get' → logprob: -4.158066749572754
    6. ' calculate' → logprob: -4.158066749572754
    7. 'process' → logprob: -4.283066749572754
    8. ' parse' → logprob: -5.908066749572754
    9. 'calculate' → logprob: -5.908066749572754
    10. ' convert' → logprob: -6.158066749572754

Token 20: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.3209317624568939
    2. '_' → logprob: -1.3209317922592163
    3. '_token' → logprob: -5.695931911468506
    4. '_tokens' → logprob: -6.570931911468506
    5. '_input' → logprob: -7.445931911468506
    6. '(' → logprob: -7.445931911468506
    7. '_value' → logprob: -8.195931434631348
    8. '(_' → logprob: -8.570931434631348
    9. '_string' → logprob: -8.570931434631348
    10. '_str' → logprob: -8.695931434631348

Token 21: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.009812168776988983
    2. 'int' → logprob: -4.634812355041504
    3. '_float' → logprob: -10.884812355041504
    4. '_' → logprob: -12.009812355041504
    5. '_list' → logprob: -12.134812355041504
    6. '_integer' → logprob: -12.384812355041504
    7. '_tokens' → logprob: -12.384812355041504
    8. '_in' → logprob: -12.509812355041504
    9. '_numbers' → logprob: -12.509812355041504
    10. 'Int' → logprob: -12.884812355041504

Token 22: '(str' (ID: 7946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08847345411777496
    2. 's' → logprob: -2.5884735584259033
    3. '(s' → logprob: -4.713473320007324
    4. ' (' → logprob: -8.838473320007324
    5. '(token' → logprob: -8.963473320007324
    6. '("("' → logprob: -8.963473320007324
    7. '(x' → logprob: -11.213473320007324
    8. '(n' → logprob: -11.213473320007324
    9. '_' → logprob: -11.338473320007324
    10. '(tokens' → logprob: -11.463473320007324

Token 23: '_list' (ID: 4162)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.5581914782524109
    2. ')' → logprob: -1.5581915378570557
    3. 's' → logprob: -1.5581915378570557
    4. 'ings' → logprob: -6.558191299438477
    5. ')s' → logprob: -6.558191299438477
    6. '):' → logprob: -7.058191299438477
    7. '(s' → logprob: -7.308191299438477
    8. '_ing' → logprob: -7.558191299438477
    9. '_val' → logprob: -7.808191299438477
    10. '_)' → logprob: -8.183191299438477

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004341579508036375
    2. ')' → logprob: -5.5043416023254395
    3. '):
' → logprob: -9.004341125488281
    4. ' ):' → logprob: -10.129341125488281
    5. '[]):' → logprob: -10.504341125488281
    6. ',' → logprob: -11.129341125488281
    7. 's' → logprob: -11.379341125488281
    8. '[' → logprob: -11.504341125488281
    9. '(' → logprob: -11.504341125488281
    10. '):

' → logprob: -12.004341125488281

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02196766808629036
    2. '[int' → logprob: -4.646967887878418
    3. ' return' → logprob: -5.271967887878418
    4. '[' → logprob: -5.521967887878418
    5. 'return' → logprob: -5.896967887878418
    6. ' [' → logprob: -9.146967887878418
    7. 'int' → logprob: -10.146967887878418
    8. '[
' → logprob: -10.146967887878418
    9. '	return' → logprob: -11.521967887878418
    10. '  ' → logprob: -11.646967887878418

Token 26: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.8782950639724731
    2. '   ' → logprob: -1.1282950639724731
    3. 'return' (adapté à ' return') → logprob: -1.5032950639724731
    4. '[int' → logprob: -3.5032949447631836
    5. '[' → logprob: -4.878294944763184
    6. ' [' → logprob: -7.628294944763184
    7. '[
' → logprob: -8.753294944763184
    8. '[str' → logprob: -10.003294944763184
    9. '[i' → logprob: -10.253294944763184
    10. ' ' → logprob: -11.003294944763184

Token 27: ' list' (ID: 1562)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.1280544251203537
    2. ' list' → logprob: -2.12805438041687
    3. '[' → logprob: -7.628054618835449
    4. '[list' → logprob: -7.878054618835449
    5. '[int' → logprob: -8.37805461883545
    6. 'list' → logprob: -10.62805461883545
    7. '[List' → logprob: -13.37805461883545
    8. ' ' → logprob: -13.50305461883545
    9. ' map' → logprob: -14.25305461883545
    10. ' int' → logprob: -14.75305461883545

Token 28: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.3869889974594116
    2. '(' → logprob: -1.1369889974594116
    3. '(int' → logprob: -10.386988639831543
    4. '(
' → logprob: -10.636988639831543
    5. '_map' → logprob: -10.886988639831543
    6. '(str' → logprob: -11.011988639831543
    7. 'map' → logprob: -11.636988639831543
    8. ' map' → logprob: -12.136988639831543
    9. '(

' → logprob: -12.636988639831543
    10. '.map' → logprob: -13.011988639831543

Token 29: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.001760744140483439
    2. ' int' → logprob: -7.126760959625244
    3. 'int' → logprob: -7.626760959625244
    4. '(' → logprob: -8.126760482788086
    5. '   ' → logprob: -9.376760482788086
    6. ',int' → logprob: -10.126760482788086
    7. ')' → logprob: -11.001760482788086
    8. ' (' → logprob: -11.626760482788086
    9. '=int' → logprob: -11.626760482788086
    10. '<int' → logprob: -12.001760482788086

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015039068646728992
    2. ',str' → logprob: -4.765038967132568
    3. '(str' → logprob: -5.265038967132568
    4. '(' → logprob: -7.140038967132568
    5. ' ,' → logprob: -8.515039443969727
    6. ')' → logprob: -8.640039443969727
    7. ' ' → logprob: -11.015039443969727
    8. '))' → logprob: -11.390039443969727
    9. ' str' → logprob: -11.890039443969727
    10. '   ' → logprob: -12.015039443969727

Token 31: ' str' (ID: 989)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.251930832862854
    2. ' str' → logprob: -1.501930832862854
    3. '	str' → logprob: -14.751931190490723
    4. '(str' → logprob: -14.751931190490723
    5. '   ' → logprob: -15.126931190490723
    6. ' ' → logprob: -15.626931190490723
    7. ')' → logprob: -16.251930236816406
    8. '_str' → logprob: -16.501930236816406
    9. 'stri' → logprob: -16.751930236816406
    10. ',str' → logprob: -17.001930236816406

Token 32: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.12500286102295
    3. ')_' → logprob: -14.62500286102295
    4. '_l' → logprob: -16.000001907348633
    5. '_lst' → logprob: -16.375001907348633
    6. ')' → logprob: -16.875001907348633
    7. ' _' → logprob: -17.750001907348633
    8. '_li' → logprob: -17.750001907348633
    9. '_)' → logprob: -18.000001907348633
    10. '_lists' → logprob: -18.125001907348633

Token 33: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00020091790065634996
    2. ')))' → logprob: -8.875201225280762
    3. ')' → logprob: -9.750201225280762
    4. '))
' → logprob: -13.500201225280762
    5. ' ))' → logprob: -13.875201225280762
    6. '   ' → logprob: -15.500201225280762
    7. '()))' → logprob: -16.125200271606445
    8. ' ' → logprob: -17.125200271606445
    9. '))))' → logprob: -17.125200271606445
    10. '))

' → logprob: -17.875200271606445

Token 34: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.0564331205387134e-05
    2. '```' → logprob: -12.37501049041748
    3. '\' → logprob: -13.12501049041748
    4. '#' → logprob: -13.25001049041748
    5. 'if' → logprob: -14.00001049041748
    6. '<|end|>' → logprob: -14.75001049041748
    7. ' def' → logprob: -15.12501049041748
    8. '<|end|>' → logprob: -15.62501049041748
    9. 'for' → logprob: -15.87501049041748
    10. 'data' → logprob: -15.87501049041748

Token 35: ' assign' (ID: 14975)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.044359974563121796
    2. ' calculate' → logprob: -4.044360160827637
    3. ' find' → logprob: -5.044360160827637
    4. ' process' → logprob: -5.169360160827637
    5. ' solve' → logprob: -5.544360160827637
    6. ' sum' → logprob: -5.669360160827637
    7. 'main' → logprob: -6.169360160827637
    8. ' compute' → logprob: -6.794360160827637
    9. 'calculate' → logprob: -7.419360160827637
    10. ' factorial' → logprob: -7.669360160827637

Token 36: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.14725340902805328
    2. '_variables' → logprob: -2.1472535133361816
    3. '_' → logprob: -4.647253513336182
    4. '_names' → logprob: -6.397253513336182
    5. '_vars' → logprob: -6.522253513336182
    6. '_to' → logprob: -7.147253513336182
    7. '_ids' → logprob: -7.397253513336182
    8. '_parameters' → logprob: -7.397253513336182
    9. '_tokens' → logprob: -7.772253513336182
    10. '_inputs' → logprob: -7.897253513336182

Token 37: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05089941993355751
    2. '():' → logprob: -3.4258995056152344
    3. '()' → logprob: -5.300899505615234
    4. '(values' → logprob: -5.800899505615234
    5. '(args' → logprob: -6.050899505615234
    6. '(input' → logprob: -6.925899505615234
    7. '(user' → logprob: -7.050899505615234
    8. '(inputs' → logprob: -7.550899505615234
    9. '(params' → logprob: -7.675899505615234
    10. ' (' → logprob: -7.800899505615234

Token 38: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.11388664692640305
    2. 's' → logprob: -2.613886594772339
    3. '_values' → logprob: -3.488886594772339
    4. '_lists' → logprob: -6.113886833190918
    5. '_array' → logprob: -7.988886833190918
    6. '_s' → logprob: -8.738886833190918
    7. '_lst' → logprob: -8.863886833190918
    8. ')' → logprob: -8.988886833190918
    9. ')_' → logprob: -9.113886833190918
    10. '_vals' → logprob: -9.113886833190918

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028148628771305084
    2. ',' → logprob: -6.002814769744873
    3. ')' → logprob: -8.502815246582031
    4. ' ):' → logprob: -9.127815246582031
    5. '   ' → logprob: -11.252815246582031
    6. '):
' → logprob: -11.502815246582031
    7. ':' → logprob: -14.127815246582031
    8. ' ,' → logprob: -14.502815246582031
    9. ')):' → logprob: -14.752815246582031
    10. '    ' → logprob: -15.002815246582031

Token 40: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09526311606168747
    2. 'a' → logprob: -2.4702630043029785
    3. ' a' → logprob: -5.0952630043029785
    4. 'x' → logprob: -9.845263481140137
    5. 'A' → logprob: -10.720263481140137
    6. '   ' → logprob: -10.720263481140137
    7. '(a' → logprob: -10.845263481140137
    8. '	a' → logprob: -11.345263481140137
    9. '```' → logprob: -11.845263481140137
    10. ' x' → logprob: -12.095263481140137

Token 41: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8293870687484741
    2. ' a' → logprob: -1.2043870687484741
    3. 'a' → logprob: -1.4543870687484741
    4. ' return' → logprob: -3.7043871879577637
    5. 'return' (adapté à ' return') → logprob: -6.079387187957764
    6. '```' → logprob: -7.204387187957764
    7. ' length' → logprob: -7.954387187957764
    8. ' n' → logprob: -7.954387187957764
    9. 'n' → logprob: -8.079386711120605
    10. ' x' → logprob: -8.079386711120605

Token 42: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.3503301739692688
    2. 'int' → logprob: -1.225330114364624
    3. '(int' → logprob: -6.850330352783203
    4. ' tuple' → logprob: -7.975330352783203
    5. 'tuple' → logprob: -8.225330352783203
    6. '   ' → logprob: -9.225330352783203
    7. ' (' → logprob: -10.100330352783203
    8. '[int' → logprob: -10.100330352783203
    9. ' ' → logprob: -11.975330352783203
    10. ' [' → logprob: -12.350330352783203

Token 43: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -6.265633419388905e-05
    2. '_' → logprob: -10.000062942504883
    3. '(' → logprob: -12.000062942504883
    4. 's' → logprob: -12.500062942504883
    5. 'list' → logprob: -13.250062942504883
    6. 'List' → logprob: -13.750062942504883
    7. ' _' → logprob: -14.000062942504883
    8. 'int' → logprob: -14.125062942504883
    9. '(int' → logprob: -14.625062942504883
    10. '(_' → logprob: -14.875062942504883

Token 44: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.52919222577475e-05
    2. ':' → logprob: -9.625075340270996
    3. ' ' → logprob: -11.875075340270996
    4. ' :' → logprob: -14.125075340270996
    5. ':]' → logprob: -14.125075340270996
    6. ']' → logprob: -15.625075340270996
    7. '-' → logprob: -15.937575340270996
    8. '1' → logprob: -16.06257438659668
    9. '00' → logprob: -16.81257438659668
    10. '   ' → logprob: -17.25007438659668

Token 46: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12466490268707275
    2. '],' → logprob: -2.249664783477783
    3. ' ]' → logprob: -4.624664783477783
    4. ' ],' → logprob: -6.374664783477783
    5. '],
' → logprob: -8.624665260314941
    6. '])' → logprob: -11.124665260314941
    7. ']
' → logprob: -11.124665260314941
    8. ',' → logprob: -11.249665260314941
    9. ' ],
' → logprob: -11.749665260314941
    10. ':' → logprob: -11.874665260314941

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.014165629632771015
    2. 'int' → logprob: -4.26416540145874
    3. ' ' → logprob: -14.764165878295898
    4. '[int' → logprob: -15.264165878295898
    5. '(int' → logprob: -15.389165878295898
    6. '<int' → logprob: -15.389165878295898
    7. ':int' → logprob: -15.514165878295898
    8. '	int' → logprob: -15.889165878295898
    9. '  ' → logprob: -16.0141658782959
    10. '=int' → logprob: -16.3891658782959

Token 48: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -7.584239938296378e-06
    2. 'list' → logprob: -12.375007629394531
    3. 'List' → logprob: -12.750007629394531
    4. '_lists' → logprob: -15.875007629394531
    5. '_' → logprob: -16.50000762939453
    6. '_LIST' → logprob: -17.12500762939453
    7. '-list' → logprob: -17.25000762939453
    8. '[' → logprob: -17.50000762939453
    9. '<|end|>' → logprob: -17.62500762939453
    10. '_List' → logprob: -17.75000762939453

Token 49: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.052248530089855194
    2. '<|end|>' → logprob: -3.052248477935791
    3. '[:]' → logprob: -5.927248477935791
    4. '0' → logprob: -8.42724895477295
    5. '[:' → logprob: -8.42724895477295
    6. '<|end|>' → logprob: -8.67724895477295
    7. '```' → logprob: -9.30224895477295
    8. '[-' → logprob: -9.67724895477295
    9. '[]' → logprob: -10.05224895477295
    10. '[:-' → logprob: -10.17724895477295

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002417276380583644
    2. '2' → logprob: -6.377417087554932
    3. '0' → logprob: -7.252417087554932
    4. '-' → logprob: -12.37741756439209
    5. ' ' → logprob: -13.75241756439209
    6. ']' → logprob: -15.00241756439209
    7. '])' → logprob: -15.37741756439209
    8. '   ' → logprob: -15.75241756439209
    9. '  ' → logprob: -16.002416610717773
    10. '```' → logprob: -16.752416610717773

Token 51: '],' (ID: 2155)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.007938535884022713
    2. ')' → logprob: -4.882938385009766
    3. ' ]' → logprob: -8.382938385009766
    4. ')]' → logprob: -10.382938385009766
    5. '])' → logprob: -11.132938385009766
    6. ':]' → logprob: -11.382938385009766
    7. '}' → logprob: -11.382938385009766
    8. '],' → logprob: -11.632938385009766
    9. '<|end|>' → logprob: -12.007938385009766
    10. ',' → logprob: -12.382938385009766

Token 52: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.25197651982307434
    2. 'int' → logprob: -1.501976490020752
    3. ',int' → logprob: -10.87697696685791
    4. '<int' → logprob: -11.50197696685791
    5. '=int' → logprob: -12.37697696685791
    6. ':int' → logprob: -12.75197696685791
    7. ' ' → logprob: -12.75197696685791
    8. '[int' → logprob: -12.87697696685791
    9. '(int' → logprob: -13.00197696685791
    10. '	int' → logprob: -14.12697696685791

Token 53: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.13388703338569e-06
    2. 'list' → logprob: -11.625009536743164
    3. 'List' → logprob: -16.500009536743164
    4. '_' → logprob: -19.875009536743164
    5. '_lists' → logprob: -20.000009536743164
    6. '_LIST' → logprob: -20.125009536743164
    7. '_l' → logprob: -20.750009536743164
    8. '_List' → logprob: -21.000009536743164
    9. 'alist' → logprob: -21.500009536743164
    10. '-list' → logprob: -21.625009536743164

Token 54: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006439318414777517
    2. '0' → logprob: -5.631439208984375
    3. '```' → logprob: -6.756439208984375
    4. '2' → logprob: -7.631439208984375
    5. '[]' → logprob: -7.631439208984375
    6. '[-' → logprob: -9.256439208984375
    7. '<|end|>' → logprob: -9.256439208984375
    8. '1' → logprob: -9.506439208984375
    9. '[:]' → logprob: -9.506439208984375
    10. '.' → logprob: -9.756439208984375

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.23993924260139465
    2. '0' → logprob: -1.7399392127990723
    3. '])' → logprob: -3.4899392127990723
    4. ']' → logprob: -5.489939212799072
    5. '1' → logprob: -5.989939212799072
    6. ')' → logprob: -7.989939212799072
    7. '-' → logprob: -8.48993968963623
    8. ':' → logprob: -9.23993968963623
    9. ' ' → logprob: -12.86493968963623
    10. '3' → logprob: -12.86493968963623

Token 56: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009305141866207123
    2. ']' → logprob: -7.000930309295654
    3. '])' → logprob: -11.750930786132812
    4. ')]' → logprob: -13.125930786132812
    5. '[' → logprob: -13.250930786132812
    6. ' )' → logprob: -13.250930786132812
    7. ')])' → logprob: -13.500930786132812
    8. '}' → logprob: -13.875930786132812
    9. '）' → logprob: -14.250930786132812
    10. '   ' → logprob: -14.500930786132812

Token 57: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00025406808708794415
    2. '```' → logprob: -8.875253677368164
    3. '\' → logprob: -9.875253677368164
    4. '#' → logprob: -11.250253677368164
    5. '<|end|>' → logprob: -12.000253677368164
    6. 'n' → logprob: -12.000253677368164
    7. '

' → logprob: -12.250253677368164
    8. '\n' → logprob: -12.375253677368164
    9. ' def' → logprob: -12.625253677368164
    10. '
' → logprob: -12.750253677368164

Token 58: ' sum' (ID: 4215)
  Prédit: ' calculate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calculate' → logprob: -0.6443476676940918
    2. ' main' → logprob: -0.8943476676940918
    3. ' compute' → logprob: -3.394347667694092
    4. ' solve' → logprob: -3.644347667694092
    5. ' process' → logprob: -5.644347667694092
    6. ' find' → logprob: -7.394347667694092
    7. ' multiply' → logprob: -7.894347667694092
    8. 'calculate' → logprob: -7.894347667694092
    9. ' check' → logprob: -8.64434814453125
    10. ' add' → logprob: -8.64434814453125

Token 59: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.07275471091270447
    2. '_' → logprob: -2.9477546215057373
    3. '_three' → logprob: -4.947754859924316
    4. '(' → logprob: -5.447754859924316
    5. '_numbers' → logprob: -5.822754859924316
    6. '_vals' → logprob: -6.572754859924316
    7. '_(' → logprob: -7.447754859924316
    8. '_elements' → logprob: -8.072754859924316
    9. '(a' → logprob: -8.322754859924316
    10. '_of' → logprob: -9.322754859924316

Token 60: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0005327790859155357
    2. '(a' → logprob: -7.875532627105713
    3. '(def' → logprob: -9.625533103942871
    4. '()' → logprob: -10.875533103942871
    5. ' (' → logprob: -11.250533103942871
    6. '(n' → logprob: -12.000533103942871
    7. '(user' → logprob: -12.125533103942871
    8. '(*' → logprob: -12.250533103942871
    9. '(sum' → logprob: -12.625533103942871
    10. 'def' → logprob: -13.000533103942871

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009476647828705609
    2. ',b' → logprob: -7.00094747543335
    3. ' ,' → logprob: -10.250947952270508
    4. ',a' → logprob: -14.625947952270508
    5. ')' → logprob: -15.625947952270508
    6. '_,' → logprob: -16.375947952270508
    7. ',
' → logprob: -16.625947952270508
    8. ',s' → logprob: -17.250947952270508
    9. ',c' → logprob: -17.250947952270508
    10. ',)' → logprob: -17.250947952270508

Token 62: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.31326186656951904
    2. ' b' → logprob: -1.313261866569519
    3. ' ' → logprob: -16.438261032104492
    4. ',b' → logprob: -17.813261032104492
    5. '	b' → logprob: -18.438261032104492
    6. ' ' → logprob: -18.688261032104492
    7. ' б' → logprob: -19.563261032104492
    8. 'a' → logprob: -19.688261032104492
    9. ',' → logprob: -19.688261032104492
    10. ')b' → logprob: -20.313261032104492

Token 63: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5716304410016164e-05
    2. ' ,' → logprob: -10.625035285949707
    3. ',c' → logprob: -12.250035285949707
    4. '):' → logprob: -12.500035285949707
    5. ')' → logprob: -13.000035285949707
    6. ',
' → logprob: -16.000036239624023
    7. ',b' → logprob: -16.250036239624023
    8. '),' → logprob: -16.375036239624023
    9. 'c' → logprob: -16.750036239624023
    10. '‌,' → logprob: -16.750036239624023

Token 64: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.34844738245010376
    2. ' c' → logprob: -1.223447322845459
    3. ' ' → logprob: -13.723447799682617
    4. ')c' → logprob: -14.723447799682617
    5. ' ' → logprob: -14.973447799682617
    6. '	c' → logprob: -15.098447799682617
    7. ' and' → logprob: -15.348447799682617
    8. 'and' → logprob: -16.348447799682617
    9. ')' → logprob: -16.410947799682617
    10. '   ' → logprob: -16.723447799682617

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00018625585653353482
    2. ')' → logprob: -8.6251859664917
    3. '):
' → logprob: -12.2501859664917
    4. ' ):' → logprob: -14.0001859664917
    5. ':' → logprob: -14.3751859664917
    6. '）：' → logprob: -16.875186920166016
    7. ')：' → logprob: -17.000186920166016
    8. '   ' → logprob: -17.125186920166016
    9. ',' → logprob: -17.250186920166016
    10. ''):' → logprob: -17.375186920166016

Token 66: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10662072896957397
    2. ' return' → logprob: -2.3566207885742188
    3. 'return' → logprob: -5.231620788574219
    4. ' a' → logprob: -7.231620788574219
    5. 'a' → logprob: -8.106620788574219
    6. '    ' → logprob: -11.106620788574219
    7. '    
' → logprob: -12.231620788574219
    8. '
' → logprob: -13.856620788574219
    9. ' ' → logprob: -14.106620788574219
    10. '   ' → logprob: -14.356620788574219

Token 67: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.14408127963542938
    2. '   ' → logprob: -2.1440813541412354
    3. 'return' (adapté à ' return') → logprob: -4.769081115722656
    4. ' a' → logprob: -4.894081115722656
    5. 'a' → logprob: -6.894081115722656
    6. '    ' → logprob: -12.144081115722656
    7. ' ' → logprob: -13.019081115722656
    8. '	return' → logprob: -13.144081115722656
    9. ' ' → logprob: -13.519081115722656
    10. '    
' → logprob: -14.144081115722656

Token 68: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.47407984733581543
    2. 'a' → logprob: -0.9740798473358154
    3. ' ' → logprob: -13.599080085754395
    4. ' ' → logprob: -14.474080085754395
    5. '(a' → logprob: -14.849080085754395
    6. '	a' → logprob: -15.349080085754395
    7. '_a' → logprob: -16.474079132080078
    8. '   ' → logprob: -16.599079132080078
    9. ' (' → logprob: -16.974079132080078
    10. '(' → logprob: -16.974079132080078

Token 69: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0789034515619278
    2. '+' → logprob: -2.5789034366607666
    3. '+b' → logprob: -11.703903198242188
    4. ' ' → logprob: -13.328903198242188
    5. ' +
' → logprob: -13.703903198242188
    6. ' ,' → logprob: -14.078903198242188
    7. ' ' → logprob: -14.203903198242188
    8. '_' → logprob: -15.203903198242188
    9. ' plus' → logprob: -15.703903198242188
    10. ',' → logprob: -15.703903198242188

Token 70: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.47407761216163635
    2. 'b' → logprob: -0.974077582359314
    3. ' ' → logprob: -15.224077224731445
    4. ' ' → logprob: -15.474077224731445
    5. '	b' → logprob: -15.974077224731445
    6. 'c' → logprob: -17.349077224731445
    7. ' б' → logprob: -18.099077224731445
    8. '   ' → logprob: -18.474077224731445
    9. ' c' → logprob: -18.599077224731445
    10. '<|end|>' → logprob: -18.599077224731445

Token 71: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.062126100063323975
    2. '+' → logprob: -2.8121261596679688
    3. '+c' → logprob: -8.937126159667969
    4. ' ' → logprob: -10.937126159667969
    5. 'c' → logprob: -11.937126159667969
    6. ' c' → logprob: -13.812126159667969
    7. ' +
' → logprob: -14.812126159667969
    8. ' ' → logprob: -15.437126159667969
    9. '`' → logprob: -15.562126159667969
    10. '```' → logprob: -15.687126159667969

Token 72: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47407761216163635
    2. 'c' → logprob: -0.974077582359314
    3. '	c' → logprob: -15.474077224731445
    4. ' ' → logprob: -15.724077224731445
    5. ' ' → logprob: -15.849077224731445
    6. ')c' → logprob: -16.224077224731445
    7. '   ' → logprob: -17.849077224731445
    8. '(c' → logprob: -18.099077224731445
    9. '+c' → logprob: -18.099077224731445
    10. '_c' → logprob: -18.099077224731445

Token 73: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.032941415905952454
    2. '

' → logprob: -4.6579413414001465
    3. '
' → logprob: -4.9079413414001465
    4. '<|end|>' → logprob: -4.9079413414001465
    5. '```' → logprob: -5.2829413414001465
    6. '\' → logprob: -6.7829413414001465
    7. '\n' → logprob: -6.9079413414001465
    8. '<|end|>' → logprob: -8.282941818237305
    9. '#' → logprob: -8.907941818237305
    10. '()' → logprob: -9.407941818237305

Token 74: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005515960976481438
    2. 'a' → logprob: -6.380516052246094
    3. '\' → logprob: -7.005516052246094
    4. 'if' → logprob: -7.130516052246094
    5. '\n' → logprob: -7.130516052246094
    6. '#' → logprob: -7.630516052246094
    7. 'n' → logprob: -8.255516052246094
    8. 'print' → logprob: -9.130516052246094
    9. 'inp' → logprob: -9.130516052246094
    10. 'input' → logprob: -9.380516052246094

Token 75: ' is' (ID: 382)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.00011832444579340518
    2. ' calculate' → logprob: -9.500118255615234
    3. 'main' → logprob: -10.250118255615234
    4. ' print' → logprob: -13.000118255615234
    5. ' compute' → logprob: -13.125118255615234
    6. ' check' → logprob: -13.750118255615234
    7. ' output' → logprob: -14.000118255615234
    8. ' process' → logprob: -14.875118255615234
    9. ' get' → logprob: -15.250118255615234
    10. ' is' → logprob: -15.625118255615234

Token 76: '_b' (ID: 1535)
  Prédit: '_even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_even' → logprob: -0.6143338680267334
    2. '_sum' → logprob: -1.6143338680267334
    3. '_prime' → logprob: -1.8643338680267334
    4. '_' → logprob: -3.3643338680267334
    5. '_div' → logprob: -3.4893338680267334
    6. '_multiple' → logprob: -4.4893341064453125
    7. '_positive' → logprob: -4.4893341064453125
    8. '_pal' → logprob: -5.2393341064453125
    9. '_equal' → logprob: -5.4893341064453125
    10. '_valid' → logprob: -6.2393341064453125

Token 77: 'ust' (ID: 570)
  Prédit: 'etween'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'etween' → logprob: -0.3524971008300781
    2. 'igger' → logprob: -2.477497100830078
    3. '_' → logprob: -2.727497100830078
    4. '_less' → logprob: -3.602497100830078
    5. 'ig' → logprob: -3.977497100830078
    6. '_even' → logprob: -4.102497100830078
    7. '_prime' → logprob: -4.227497100830078
    8. 'et' → logprob: -4.227497100830078
    9. '_div' → logprob: -4.602497100830078
    10. 'roken' → logprob: -5.352497100830078

Token 78: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15166440606117249
    2. '(a' → logprob: -2.1516644954681396
    3. '(amount' → logprob: -4.7766642570495605
    4. '(b' → logprob: -5.5266642570495605
    5. '(value' → logprob: -5.6516642570495605
    6. '(_' → logprob: -6.2766642570495605
    7. '(score' → logprob: -6.2766642570495605
    8. '(s' → logprob: -7.1516642570495605
    9. '(sum' → logprob: -7.5266642570495605
    10. '((' → logprob: -7.6516642570495605

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01581392250955105
    2. '):
' → logprob: -4.890813827514648
    3. 'total' → logprob: -6.015813827514648
    4. ',' → logprob: -6.390813827514648
    5. ')' → logprob: -6.640813827514648
    6. '(total' → logprob: -6.765813827514648
    7. ' ):' → logprob: -7.015813827514648
    8. ',total' → logprob: -8.765813827514648
    9. '   ' → logprob: -9.515813827514648
    10. '_total' → logprob: -9.765813827514648

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5040842294692993
    2. ' total' → logprob: -1.5040842294692993
    3. ' return' → logprob: -1.7540842294692993
    4. 'total' → logprob: -8.004084587097168
    5. 'return' → logprob: -8.379084587097168
    6. '    ' → logprob: -10.129084587097168
    7. '   ' → logprob: -10.879084587097168
    8. '	return' → logprob: -11.879084587097168
    9. '	total' → logprob: -11.879084587097168
    10. '(total' → logprob: -12.254084587097168

Token 81: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.3308676779270172
    2. 'return' (adapté à ' return') → logprob: -1.5808676481246948
    3. '   ' → logprob: -2.5808677673339844
    4. ' total' → logprob: -8.830867767333984
    5. 'total' → logprob: -10.205867767333984
    6. '	return' → logprob: -12.330867767333984
    7. ' if' → logprob: -12.955867767333984
    8. '    ' → logprob: -13.205867767333984
    9. ' ' → logprob: -13.455867767333984
    10. 'if' → logprob: -13.955867767333984

Token 82: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.018152287229895592
    2. 'total' → logprob: -4.018152236938477
    3. '(total' → logprob: -13.018152236938477
    4. '	total' → logprob: -16.393152236938477
    5. ' ' → logprob: -16.518152236938477
    6. '   ' → logprob: -17.893152236938477
    7. '>' → logprob: -18.393152236938477
    8. ' ' → logprob: -18.393152236938477
    9. '$total' → logprob: -18.893152236938477
    10. ' (' → logprob: -18.893152236938477

Token 83: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.12700675427913666
    2. ' >' → logprob: -2.127006769180298
    3. '>=' → logprob: -9.877006530761719
    4. '()>' → logprob: -11.502006530761719
    5. ' >=' → logprob: -11.877006530761719
    6. ' ' → logprob: -12.127006530761719
    7. ' ' → logprob: -14.252006530761719
    8. '">' → logprob: -14.377006530761719
    9. '<' → logprob: -15.002006530761719
    10. '1' → logprob: -15.127006530761719

Token 84: ' ' (ID: 220)
  Prédit: '22'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.0004284043679945171
    2. ' ' → logprob: -8.625428199768066
    3. '100' → logprob: -9.000428199768066
    4. '2' → logprob: -10.250428199768066
    5. '21' → logprob: -10.250428199768066
    6. '1' → logprob: -12.000428199768066
    7. '122' → logprob: -12.125428199768066
    8. 's' → logprob: -12.250428199768066
    9. '101' → logprob: -12.625428199768066
    10. '30' → logprob: -12.875428199768066

Token 85: '22' (ID: 1709)
  Prédit: '22'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '22' → logprob: -0.0002135534887202084
    2. '100' → logprob: -9.375213623046875
    3. '21' → logprob: -9.750213623046875
    4. '2' → logprob: -11.125213623046875
    5. 's' → logprob: -12.125213623046875
    6. ' ' → logprob: -12.250213623046875
    7. '101' → logprob: -12.375213623046875
    8. '122' → logprob: -12.500213623046875
    9. '10' → logprob: -12.750213623046875
    10. '50' → logprob: -13.000213623046875

Token 86: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011253300122916698
    2. '```' → logprob: -5.636253356933594
    3. '<|end|>' → logprob: -5.636253356933594
    4. '

' → logprob: -5.761253356933594
    5. '<|end|>' → logprob: -8.136253356933594
    6. '\' → logprob: -9.011253356933594
    7. '
' → logprob: -9.011253356933594
    8. 'print' → logprob: -9.761253356933594
    9. '#' → logprob: -10.011253356933594
    10. '\n' → logprob: -10.511253356933594

Token 87: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008602463640272617
    2. 'print' → logprob: -8.375860214233398
    3. 'if' → logprob: -8.500860214233398
    4. '```' → logprob: -8.625860214233398
    5. '<|end|>' → logprob: -9.500860214233398
    6. 'a' → logprob: -10.125860214233398
    7. 'for' → logprob: -10.125860214233398
    8. '#' → logprob: -10.250860214233398
    9. '\' → logprob: -11.375860214233398
    10. 'n' → logprob: -11.750860214233398

Token 88: ' print' (ID: 2123)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.27555787563323975
    2. 'main' → logprob: -1.5255578756332397
    3. ' blackjack' → logprob: -4.650557994842529
    4. 'def' → logprob: -6.275557994842529
    5. ' check' → logprob: -6.525557994842529
    6. ' is' → logprob: -6.650557994842529
    7. ' calculate' → logprob: -6.900557994842529
    8. 'calculate' → logprob: -7.025557994842529
    9. 'det' → logprob: -7.150557994842529
    10. 'black' → logprob: -7.150557994842529

Token 89: '_b' (ID: 1535)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.08273591846227646
    2. '_result' → logprob: -3.332736015319824
    3. '_' → logprob: -3.957736015319824
    4. '_total' → logprob: -3.957736015319824
    5. '_results' → logprob: -6.957736015319824
    6. '_b' → logprob: -7.082736015319824
    7. '_final' → logprob: -7.582736015319824
    8. '()' → logprob: -7.707736015319824
    9. '_output' → logprob: -7.957736015319824
    10. '_value' → logprob: -8.457736015319824

Token 90: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.00011200665176147595
    2. 'usted' → logprob: -9.50011157989502
    3. 'us' → logprob: -11.25011157989502
    4. 'urst' → logprob: -11.75011157989502
    5. '_' → logprob: -12.75011157989502
    6. 'usting' → logprob: -12.87511157989502
    7. 'est' → logprob: -13.12511157989502
    8. 'u' → logprob: -13.25011157989502
    9. '`' → logprob: -14.50011157989502
    10. 'b' → logprob: -14.62511157989502

Token 91: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7430050373077393
    2. '()' → logprob: -0.8680050373077393
    3. '_status' → logprob: -2.8680050373077393
    4. '_' → logprob: -4.24300479888916
    5. '_message' → logprob: -5.11800479888916
    6. '(_' → logprob: -5.11800479888916
    7. '():' → logprob: -5.24300479888916
    8. '()(' → logprob: -5.86800479888916
    9. '_result' → logprob: -6.11800479888916
    10. '_(' → logprob: -6.36800479888916

Token 92: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003667413955554366
    2. 'print' → logprob: -5.75366735458374
    3. ' print' → logprob: -7.62866735458374
    4. '```' → logprob: -13.378667831420898
    5. '   ' → logprob: -14.253667831420898
    6. '(' → logprob: -15.128667831420898
    7. '	print' → logprob: -15.128667831420898
    8. '`' → logprob: -15.878667831420898
    9. '  ' → logprob: -16.1286678314209
    10. '    ' → logprob: -16.1286678314209

Token 93: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03000549040734768
    2. '   ' → logprob: -3.53000545501709
    3. ' print' → logprob: -8.28000545501709
    4. '```' → logprob: -13.78000545501709
    5. '	print' → logprob: -15.78000545501709
    6. ' ' → logprob: -16.030006408691406
    7. '  ' → logprob: -16.405006408691406
    8. 'pass' → logprob: -17.155006408691406
    9. 'return' → logprob: -18.155006408691406
    10. '`' → logprob: -18.530006408691406

Token 94: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.10133728384971619
    2. '(' → logprob: -2.351337194442749
    3. '('' → logprob: -7.101337432861328
    4. '("("' → logprob: -8.226337432861328
    5. '("")' → logprob: -11.226337432861328
    6. '()' → logprob: -11.976337432861328
    7. '("(' → logprob: -12.101337432861328
    8. '(":' → logprob: -12.851337432861328
    9. '("*' → logprob: -13.226337432861328
    10. '("***' → logprob: -13.726337432861328

Token 95: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.15443216264247894
    2. 'Bust' → logprob: -2.1544320583343506
    3. 'B' → logprob: -3.6544320583343506
    4. 'バ' → logprob: -7.40443229675293
    5. 'BUR' → logprob: -8.40443229675293
    6. 'Б' → logprob: -9.40443229675293
    7. 'Burst' → logprob: -9.90443229675293
    8. 'BUS' → logprob: -10.02943229675293
    9. 'BU' → logprob: -10.40443229675293
    10. ' bust' → logprob: -10.52943229675293

Token 96: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -0.015701744705438614
    2. 'u' → logprob: -4.265701770782471
    3. 'us' → logprob: -6.640701770782471
    4. 'usted' → logprob: -8.890701293945312
    5. 'urst' → logprob: -10.640701293945312
    6. 'usta' → logprob: -12.140701293945312
    7. 'UST' → logprob: -12.390701293945312
    8. '

' → logprob: -12.515701293945312
    9. '
' → logprob: -12.515701293945312
    10. 'U' → logprob: -12.515701293945312

Token 97: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00037490393151529133
    2. '!' → logprob: -8.000374794006348
    3. ')' → logprob: -10.750374794006348
    4. '")' → logprob: -11.750374794006348
    5. '')
' → logprob: -11.750374794006348
    6. 'b' → logprob: -14.375374794006348
    7. '')

' → logprob: -14.500374794006348
    8. '')
' → logprob: -15.250374794006348
    9. ''' → logprob: -15.500374794006348
    10. '}')' → logprob: -16.000375747680664

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.002246961696073413
    2. 'a' → logprob: -6.252246856689453
    3. 'n' → logprob: -9.127246856689453
    4. 'N' → logprob: -9.877246856689453
    5. 'input' → logprob: -10.502246856689453
    6. 'if' → logprob: -10.752246856689453
    7. 'x' → logprob: -11.127246856689453
    8. 'Code' → logprob: -11.377246856689453
    9. '#' → logprob: -11.502246856689453
    10. '```' → logprob: -11.627246856689453

Token 99: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3441867232322693
    2. 'main' → logprob: -1.969186782836914
    3. ' main' → logprob: -2.219186782836914
    4. ' print' → logprob: -3.469186782836914
    5. 'not' → logprob: -5.719186782836914
    6. 'def' → logprob: -6.219186782836914
    7. 'check' → logprob: -6.594186782836914
    8. 'process' → logprob: -6.844186782836914
    9. 'run' → logprob: -6.969186782836914
    10. ' not' → logprob: -7.219186782836914

Token 100: '_win' (ID: 63099)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.25431931018829346
    2. '('_' → logprob: -1.8793193101882935
    3. '(' → logprob: -3.629319190979004
    4. '_' → logprob: -3.754319190979004
    5. '()' → logprob: -4.129319190979004
    6. '(total' → logprob: -6.004319190979004
    7. '_total' → logprob: -6.379319190979004
    8. 'total' → logprob: -7.879319190979004
    9. '(_' → logprob: -8.129319190979004
    10. '_(' → logprob: -8.754319190979004

Token 101: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.029047397896647453
    2. '()' → logprob: -4.02904748916626
    3. '():
' → logprob: -4.52904748916626
    4. ' ():' → logprob: -10.279047012329102
    5. ' ()' → logprob: -12.529047012329102
    6. '():

' → logprob: -12.654047012329102
    7. '():
' → logprob: -12.779047012329102
    8. '(' → logprob: -13.154047012329102
    9. '('' → logprob: -14.904047012329102
    10. '()">' → logprob: -15.654047012329102

Token 102: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004177171736955643
    2. '   ' → logprob: -5.504177093505859
    3. ' print' → logprob: -9.25417709350586
    4. '('' → logprob: -13.25417709350586
    5. '	print' → logprob: -14.00417709350586
    6. '(print' → logprob: -15.50417709350586
    7. ' ' → logprob: -16.12917709350586
    8. '(' → logprob: -17.37917709350586
    9. '.print' → logprob: -17.62917709350586
    10. '  ' → logprob: -17.62917709350586

Token 103: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000467730569653213
    2. ' print' → logprob: -7.750467777252197
    3. '   ' → logprob: -11.125467300415039
    4. 'win' → logprob: -11.375467300415039
    5. ' ' → logprob: -13.125467300415039
    6. 'b' → logprob: -13.500467300415039
    7. '	print' → logprob: -13.625467300415039
    8. '```' → logprob: -14.125467300415039
    9. '  ' → logprob: -14.250467300415039
    10. 'pass' → logprob: -14.437967300415039

Token 104: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.003628931473940611
    2. '(' → logprob: -5.628628730773926
    3. '("' → logprob: -10.753628730773926
    4. ''' → logprob: -13.253628730773926
    5. '('(' → logprob: -13.253628730773926
    6. ' ('' → logprob: -13.378628730773926
    7. '()' → logprob: -13.503628730773926
    8. ''s' → logprob: -15.128628730773926
    9. '(('' → logprob: -15.628628730773926
    10. '('_' → logprob: -16.003629684448242

Token 105: 'win' (ID: 11668)
  Prédit: 'win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'win' → logprob: -0.07385830581188202
    2. ''' → logprob: -2.6988582611083984
    3. ''s' → logprob: -7.573858261108398
    4. '')' → logprob: -7.698858261108398
    5. 'black' → logprob: -8.073858261108398
    6. ''y' → logprob: -8.323858261108398
    7. ''w' → logprob: -8.448858261108398
    8. 'b' → logprob: -8.698858261108398
    9. '']' → logprob: -8.823858261108398
    10. ''t' → logprob: -9.073858261108398

Token 106: '')

' (ID: 9735)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0001427538663847372
    2. '()' → logprob: -9.125143051147461
    3. '')
' → logprob: -10.750143051147461
    4. ')' → logprob: -11.875143051147461
    5. '')

' → logprob: -12.750143051147461
    6. '")' → logprob: -13.250143051147461
    7. '('' → logprob: -15.125143051147461
    8. ''' → logprob: -15.250143051147461
    9. 'def' → logprob: -16.62514305114746
    10. '!' → logprob: -16.75014305114746

Token 107: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.001303926226682961
    2. 'if' → logprob: -6.7513041496276855
    3. 'a' → logprob: -9.001303672790527
    4. 'inp' → logprob: -11.751303672790527
    5. 'for' → logprob: -14.251303672790527
    6. 'input' → logprob: -14.501303672790527
    7. 'n' → logprob: -14.501303672790527
    8. '```' → logprob: -15.376303672790527
    9. 'user' → logprob: -15.751303672790527
    10. ' def' → logprob: -16.126304626464844

Token 108: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.016548873856663704
    2. 'main' → logprob: -4.266549110412598
    3. ' def' → logprob: -7.141549110412598
    4. 'def' → logprob: -7.391549110412598
    5. ' run' → logprob: -7.891549110412598
    6. '_main' → logprob: -8.266549110412598
    7. ' check' → logprob: -9.266549110412598
    8. ' process' → logprob: -9.516549110412598
    9. ' get' → logprob: -9.641549110412598
    10. ' solve' → logprob: -11.391549110412598

Token 109: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00048060089466162026
    2. '()' → logprob: -7.750480651855469
    3. '(' → logprob: -10.125480651855469
    4. '():
' → logprob: -12.125480651855469
    5. ' ():' → logprob: -12.625480651855469
    6. '_' → logprob: -14.750480651855469
    7. ':' → logprob: -15.125480651855469
    8. '(:' → logprob: -15.625480651855469
    9. '()>' → logprob: -16.00048065185547
    10. '()(' → logprob: -16.50048065185547

Token 110: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008927843533456326
    2. ' inp' → logprob: -5.258927822113037
    3. 'inp' → logprob: -5.633927822113037
    4. 'input' → logprob: -9.758928298950195
    5. ' input' → logprob: -10.758928298950195
    6. 'user' → logprob: -11.758928298950195
    7. ' user' → logprob: -11.883928298950195
    8. '   ' → logprob: -12.508928298950195
    9. 'inputs' → logprob: -13.133928298950195
    10. ' inputs' → logprob: -13.133928298950195

Token 111: ' inp' (ID: 64450)
  Prédit: 'inp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inp' (adapté à ' inp') → logprob: -0.02800261229276657
    2. ' inp' → logprob: -4.153002738952637
    3. 'user' → logprob: -4.903002738952637
    4. '   ' → logprob: -5.778002738952637
    5. 'input' → logprob: -7.653002738952637
    6. 'raw' → logprob: -8.153002738952637
    7. ' user' → logprob: -8.153002738952637
    8. 'inputs' → logprob: -8.653002738952637
    9. ' raw' → logprob: -10.528002738952637
    10. '    
' → logprob: -10.528002738952637

Token 112: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16497904062271118
    2. 'ut' → logprob: -2.1649789810180664
    3. '=' → logprob: -3.2899789810180664
    4. '_' → logprob: -10.164978981018066
    5. '_=' → logprob: -11.289978981018066
    6. '   ' → logprob: -12.039978981018066
    7. '_ut' → logprob: -12.039978981018066
    8. 'u' → logprob: -12.414978981018066
    9. '=_' → logprob: -12.914978981018066
    10. '=input' → logprob: -13.039978981018066

Token 113: ' get' (ID: 717)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'get' → logprob: -0.0024764856789261103
    2. ' get' → logprob: -6.002476692199707
    3. '(get' → logprob: -14.127476692199707
    4. '	get' → logprob: -16.00247573852539
    5. 'input' → logprob: -16.87747573852539
    6. ' ' → logprob: -18.37747573852539
    7. '   ' → logprob: -18.37747573852539
    8. '_get' → logprob: -19.00247573852539
    9. '=get' → logprob: -19.12747573852539
    10. '.get' → logprob: -19.37747573852539

Token 114: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -3.531315314830863e-06
    2. '_' → logprob: -12.875003814697266
    3. '_output' → logprob: -14.875003814697266
    4. ' _' → logprob: -16.125003814697266
    5. '_line' → logprob: -16.750003814697266
    6. 'input' → logprob: -16.875003814697266
    7. '_in' → logprob: -17.000003814697266
    8. '_inputs' → logprob: -17.250003814697266
    9. ')_' → logprob: -17.500003814697266
    10. '()' → logprob: -17.875003814697266

Token 115: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -3.054500666621607e-06
    2. '()
' → logprob: -13.37500286102295
    3. '(' → logprob: -14.25000286102295
    4. '()

' → logprob: -14.87500286102295
    5. '()`' → logprob: -15.75000286102295
    6. '().' → logprob: -16.125003814697266
    7. ' ()' → logprob: -16.125003814697266
    8. '(),' → logprob: -17.250003814697266
    9. '();' → logprob: -17.750003814697266
    10. '()"' → logprob: -17.875003814697266

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036964450031518936
    2. 'tokens' → logprob: -4.161964416503906
    3. ' parts' → logprob: -4.411964416503906
    4. ' tokens' → logprob: -6.411964416503906
    5. 'parts' → logprob: -6.661964416503906
    6. 'split' → logprob: -6.786964416503906
    7. ' splitted' → logprob: -6.786964416503906
    8. 'spl' → logprob: -7.161964416503906
    9. 'str' → logprob: -7.536964416503906
    10. '    
' → logprob: -7.786964416503906

Token 117: ' splitted' (ID: 183889)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -1.0560870170593262
    2. ' str' → logprob: -1.8060870170593262
    3. ' parts' → logprob: -1.8060870170593262
    4. '   ' → logprob: -2.806087017059326
    5. 'split' → logprob: -3.056087017059326
    6. 'tokens' → logprob: -3.556087017059326
    7. ' splitted' → logprob: -3.556087017059326
    8. 'parts' → logprob: -3.681087017059326
    9. ' tokens' → logprob: -3.806087017059326
    10. 'spl' → logprob: -3.931087017059326

Token 118: ' =' (ID: 314)
  Prédit: '_input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.17176015675067902
    2. '=' → logprob: -2.671760082244873
    3. '_' → logprob: -3.171760082244873
    4. '_in' → logprob: -3.421760082244873
    5. ' =' → logprob: -4.296760082244873
    6. '_output' → logprob: -9.546760559082031
    7. 'inp' → logprob: -9.671760559082031
    8. '_inputs' → logprob: -10.296760559082031
    9. '=_' → logprob: -10.296760559082031
    10. '_=' → logprob: -10.421760559082031

Token 119: ' split' (ID: 12648)
  Prédit: ' split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' split' → logprob: -0.1269364058971405
    2. 'split' → logprob: -2.126936435699463
    3. '(split' → logprob: -12.126935958862305
    4. 'spl' → logprob: -12.876935958862305
    5. '.split' → logprob: -16.251935958862305
    6. '_split' → logprob: -16.376935958862305
    7. ' spl' → logprob: -16.501935958862305
    8. 'plit' → logprob: -17.126935958862305
    9. ' splitted' → logprob: -17.251935958862305
    10. 'inp' → logprob: -17.751935958862305

Token 120: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.500000953674316
    3. '_output' → logprob: -16.125
    4. '_in' → logprob: -16.5
    5. 'inp' → logprob: -16.75
    6. 'input' → logprob: -16.875
    7. 's' → logprob: -17.375
    8. '(inp' → logprob: -17.75
    9. '_INPUT' → logprob: -18.25
    10. '_Input' → logprob: -18.375

Token 121: '(inp' (ID: 141645)
  Prédit: '(inp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(inp' → logprob: -0.03409075364470482
    2. '(' → logprob: -3.409090757369995
    3. '_input' → logprob: -8.534090995788574
    4. '(input' → logprob: -8.784090995788574
    5. '(s' → logprob: -9.909090995788574
    6. '_' → logprob: -11.534090995788574
    7. '_(' → logprob: -11.909090995788574
    8. '(inv' → logprob: -11.909090995788574
    9. 'inp' → logprob: -12.409090995788574
    10. '(_' → logprob: -13.034090995788574

Token 122: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000805341056548059
    2. ')
' → logprob: -7.125805377960205
    3. '()' → logprob: -15.250804901123047
    4. '   ' → logprob: -15.750804901123047
    5. '())' → logprob: -16.125804901123047
    6. ' )' → logprob: -16.375804901123047
    7. ')

' → logprob: -16.500804901123047
    8. ')
' → logprob: -16.500804901123047
    9. ' ' → logprob: -17.750804901123047
    10. '))' → logprob: -19.000804901123047

Token 123: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013991545885801315
    2. 'int' → logprob: -4.638991355895996
    3. 'converted' → logprob: -6.138991355895996
    4. ' int' → logprob: -6.763991355895996
    5. ' converted' → logprob: -7.763991355895996
    6. 'ints' → logprob: -8.388991355895996
    7. '    
' → logprob: -8.888991355895996
    8. ' ints' → logprob: -10.638991355895996
    9. '<int' → logprob: -11.013991355895996
    10. '	int' → logprob: -11.263991355895996

Token 124: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' (adapté à ' int') → logprob: -0.08199519664049149
    2. 'ints' → logprob: -2.8319952487945557
    3. 'converted' → logprob: -4.581995010375977
    4. ' int' → logprob: -5.081995010375977
    5. ' converted' → logprob: -6.456995010375977
    6. ' ints' → logprob: -7.456995010375977
    7. '   ' → logprob: -7.706995010375977
    8. 'nums' → logprob: -8.331995010375977
    9. 'inte' → logprob: -8.956995010375977
    10. 'numbers' → logprob: -9.206995010375977

Token 125: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00018863992590922862
    2. 's' → logprob: -9.750188827514648
    3. '_lst' → logprob: -9.875188827514648
    4. '_values' → logprob: -10.250188827514648
    5. '_s' → logprob: -11.250188827514648
    6. 'ed' → logprob: -11.500188827514648
    7. '_' → logprob: -11.500188827514648
    8. 'List' → logprob: -12.875188827514648
    9. '_lists' → logprob: -13.500188827514648
    10. '   ' → logprob: -13.875188827514648

Token 126: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141343772411346
    2. '=' → logprob: -1.7014133930206299
    3. ')' → logprob: -16.326414108276367
    4. '(' → logprob: -17.576414108276367
    5. '＝' → logprob: -17.576414108276367
    6. ' =)' → logprob: -17.951414108276367
    7. '=create' → logprob: -18.576414108276367
    8. ' =
' → logprob: -18.576414108276367
    9. 's' → logprob: -18.701414108276367
    10. ',' → logprob: -18.826414108276367

Token 127: ' convert' (ID: 8452)
  Prédit: ' convert'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' convert' → logprob: -0.07888978719711304
    2. 'convert' → logprob: -2.578889846801758
    3. '(convert' → logprob: -16.578889846801758
    4. '_convert' → logprob: -17.953889846801758
    5. '.convert' → logprob: -17.953889846801758
    6. ' ' → logprob: -22.078889846801758
    7. ' convertir' → logprob: -22.203889846801758
    8. ' ' → logprob: -22.453889846801758
    9. ' conversion' → logprob: -22.578889846801758
    10. '   ' → logprob: -23.203889846801758

Token 128: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. '_' → logprob: -17.375
    3. 'to' → logprob: -18.75
    4. '_into' → logprob: -19.0
    5. 'To' → logprob: -19.5
    6. '_of' → logprob: -19.5
    7. '##_' → logprob: -19.5
    8. '```' → logprob: -19.625
    9. '_t' → logprob: -19.75
    10. '_for' → logprob: -20.25

Token 129: '_int' (ID: 12285)
  Prédit: '_int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.47451192140579224
    2. 'int' → logprob: -0.9745119214057922
    3. 'nt' → logprob: -8.099512100219727
    4. 't' → logprob: -8.974512100219727
    5. '_list' → logprob: -13.099512100219727
    6. ' int' → logprob: -14.224512100219727
    7. 'Int' → logprob: -14.474512100219727
    8. 'list' → logprob: -14.974512100219727
    9. 'ints' → logprob: -15.349512100219727
    10. '<int' → logprob: -15.724512100219727

Token 130: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0031817557755857706
    2. '(' → logprob: -5.7531819343566895
    3. ' (' → logprob: -13.003181457519531
    4. '(split' → logprob: -14.503181457519531
    5. '(sp' → logprob: -15.503181457519531
    6. '(
' → logprob: -15.753181457519531
    7. '(n' → logprob: -16.25318145751953
    8. '(saved' → logprob: -16.87818145751953
    9. '(S' → logprob: -16.87818145751953
    10. '(m' → logprob: -17.00318145751953

Token 131: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.0001438266917830333
    2. 'tr' → logprob: -9.000144004821777
    3. 'plt' → logprob: -11.250144004821777
    4. 'plit' → logprob: -12.625144004821777
    5. '(pl' → logprob: -12.750144004821777
    6. ' pl' → logprob: -14.750144004821777
    7. 'ql' → logprob: -15.750144004821777
    8. 'p' → logprob: -16.25014305114746
    9. '[' → logprob: -16.25014305114746
    10. 'pli' → logprob: -16.37514305114746

Token 132: 'itted' (ID: 5478)
  Prédit: 'itted'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itted' → logprob: -0.32376304268836975
    2. 'it' → logprob: -1.3237630128860474
    3. 'ited' → logprob: -4.573762893676758
    4. '[' → logprob: -10.323762893676758
    5. 'itt' → logprob: -10.823762893676758
    6. ')' → logprob: -11.073762893676758
    7. '(' → logprob: -11.323762893676758
    8. '```' → logprob: -12.073762893676758
    9. 'int' → logprob: -12.448762893676758
    10. '_list' → logprob: -12.448762893676758

Token 133: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018157435581088066
    2. ')
' → logprob: -4.018157482147217
    3. '   ' → logprob: -12.643157005310059
    4. '()' → logprob: -13.018157005310059
    5. ')
' → logprob: -14.518157005310059
    6. ')

' → logprob: -14.643157005310059
    7. '()
' → logprob: -15.143157005310059
    8. '())' → logprob: -15.143157005310059
    9. ' )' → logprob: -15.393157005310059
    10. ' ' → logprob: -16.268157958984375

Token 134: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.47872069478034973
    2. '   ' → logprob: -1.3537206649780273
    3. ' a' → logprob: -2.1037206649780273
    4. '    
' → logprob: -9.728720664978027
    5. ' ' → logprob: -10.853720664978027
    6. '	a' → logprob: -10.853720664978027
    7. '(a' → logprob: -10.978720664978027
    8. '  ' → logprob: -11.728720664978027
    9. '    ' → logprob: -11.853720664978027
    10. ',a' → logprob: -12.353720664978027

Token 135: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.005234713666141033
    2. ' a' → logprob: -5.255234718322754
    3. '	a' → logprob: -15.130234718322754
    4. '   ' → logprob: -15.505234718322754
    5. '(a' → logprob: -16.005233764648438
    6. ' ' → logprob: -16.380233764648438
    7. '  ' → logprob: -16.880233764648438
    8. '_a' → logprob: -17.130233764648438
    9. 'values' → logprob: -17.255233764648438
    10. 'A' → logprob: -17.380233764648438

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.598092684522271e-05
    2. ',b' → logprob: -9.875056266784668
    3. ' ,' → logprob: -12.375056266784668
    4. 'b' → logprob: -16.37505531311035
    5. '_,' → logprob: -17.25005531311035
    6. 's' → logprob: -18.12505531311035
    7. ',s' → logprob: -18.75005531311035
    8. ',
' → logprob: -18.87505531311035
    9. ',a' → logprob: -19.00005531311035
    10. '‌,' → logprob: -19.12505531311035

Token 137: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.048589076846838
    2. 'b' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.673588752746582
    4. ' ' → logprob: -14.673588752746582
    5. '    ' → logprob: -16.9235897064209
    6. '_b' → logprob: -17.0485897064209
    7. 'space' → logprob: -17.5485897064209
    8. '	b' → logprob: -17.5485897064209
    9. ',b' → logprob: -17.9235897064209
    10. '_' → logprob: -18.1735897064209

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.990154047845863e-05
    2. ' ,' → logprob: -10.375049591064453
    3. ',c' → logprob: -11.250049591064453
    4. 'c' → logprob: -12.250049591064453
    5. '=' → logprob: -14.875049591064453
    6. ' =' → logprob: -14.875049591064453
    7. '_,' → logprob: -16.625049591064453
    8. '<|end|>' → logprob: -18.250049591064453
    9. '‌,' → logprob: -18.250049591064453
    10. ' c' → logprob: -18.375049591064453

Token 139: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06196768581867218
    2. ' c' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.936967849731445
    4. '	c' → logprob: -18.936967849731445
    5. '_c' → logprob: -19.686967849731445
    6. ' ' → logprob: -21.311967849731445
    7. '  ' → logprob: -21.811967849731445
    8. '   ' → logprob: -22.186967849731445
    9. '$c' → logprob: -23.061967849731445
    10. ' =' → logprob: -23.061967849731445

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141372084617615
    2. '=' → logprob: -1.7014137506484985
    3. ',' → logprob: -15.326414108276367
    4. ')' → logprob: -16.826414108276367
    5. ' ' → logprob: -16.951414108276367
    6. '<|end|>' → logprob: -17.826414108276367
    7. ' =)' → logprob: -18.201414108276367
    8. '   ' → logprob: -18.576414108276367
    9. '＝' → logprob: -18.576414108276367
    10. '```' → logprob: -18.701414108276367

Token 141: ' assign' (ID: 14975)
  Prédit: 'assign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'assign' → logprob: -0.03804194927215576
    2. ' assign' → logprob: -3.2880420684814453
    3. '(assign' → logprob: -15.038042068481445
    4. '	assign' → logprob: -16.038042068481445
    5. '   ' → logprob: -17.163042068481445
    6. '_assign' → logprob: -18.288042068481445
    7. '.assign' → logprob: -18.413042068481445
    8. 'assigned' → logprob: -18.538042068481445
    9. 'assignment' → logprob: -18.663042068481445
    10. ' assignment' → logprob: -20.038042068481445

Token 142: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -5.512236498361744e-07
    2. 'values' → logprob: -14.625000953674316
    3. 'Values' → logprob: -16.875
    4. '_VALUES' → logprob: -17.625
    5. 's' → logprob: -19.25
    6. '_value' → logprob: -19.375
    7. '_vals' → logprob: -19.375
    8. '_' → logprob: -19.875
    9. 'a' → logprob: -19.875
    10. ' values' → logprob: -20.75

Token 143: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -11.750008583068848
    3. ' (' → logprob: -15.000008583068848
    4. '(intent' → logprob: -16.75000762939453
    5. '(Int' → logprob: -18.00000762939453
    6. ',int' → logprob: -18.50000762939453
    7. '(float' → logprob: -18.87500762939453
    8. '(in' → logprob: -19.37500762939453
    9. '(integer' → logprob: -19.37500762939453
    10. '(INT' → logprob: -19.62500762939453

Token 144: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -9.491498531133402e-06
    2. 'list' → logprob: -11.625009536743164
    3. 'List' → logprob: -14.625009536743164
    4. '_' → logprob: -17.875009536743164
    5. '_lists' → logprob: -18.125009536743164
    6. ')' → logprob: -18.250009536743164
    7. '_LIST' → logprob: -18.625009536743164
    8. '```' → logprob: -19.375009536743164
    9. ')_' → logprob: -19.625009536743164
    10. '_l' → logprob: -19.750009536743164

Token 145: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.700132997939363e-05
    2. ')
' → logprob: -11.375017166137695
    3. '   ' → logprob: -12.375017166137695
    4. '<|end|>' → logprob: -14.750017166137695
    5. ' )' → logprob: -14.875017166137695
    6. ' ' → logprob: -16.625017166137695
    7. ')

' → logprob: -16.750017166137695
    8. ')return' → logprob: -16.875017166137695
    9. '<|end|>' → logprob: -16.875017166137695
    10. ')#' → logprob: -16.875017166137695

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11635909229516983
    2. 'total' → logprob: -2.491358995437622
    3. ' total' → logprob: -3.616358995437622
    4. '	total' → logprob: -9.241358757019043
    5. 't' → logprob: -10.491358757019043
    6. '    
' → logprob: -11.116358757019043
    7. ' ' → logprob: -12.116358757019043
    8. '
' → logprob: -12.241358757019043
    9. '_total' → logprob: -12.866358757019043
    10. '```' → logprob: -13.116358757019043

Token 147: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.00040219054790213704
    2. ' total' → logprob: -7.875401973724365
    3. 'result' → logprob: -11.500402450561523
    4. 's' → logprob: -11.875402450561523
    5. '   ' → logprob: -13.125402450561523
    6. 'sum' → logprob: -13.375402450561523
    7. 't' → logprob: -14.875402450561523
    8. '
' → logprob: -15.375402450561523
    9. '_total' → logprob: -15.375402450561523
    10. '	total' → logprob: -15.625402450561523

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011048408225178719
    2. '=' → logprob: -4.511048316955566
    3. '_' → logprob: -15.011048316955566
    4. ' ' → logprob: -16.136049270629883
    5. ' ' → logprob: -16.386049270629883
    6. ')' → logprob: -16.761049270629883
    7. ' =)' → logprob: -17.511049270629883
    8. ' =
' → logprob: -18.011049270629883
    9. ',' → logprob: -19.261049270629883
    10. 's' → logprob: -19.761049270629883

Token 149: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.12692810595035553
    2. 'sum' → logprob: -2.1269280910491943
    3. 'a' → logprob: -18.126928329467773
    4. ' a' → logprob: -19.126928329467773
    5. '	sum' → logprob: -19.501928329467773
    6. '(sum' → logprob: -19.626928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '   ' → logprob: -20.626928329467773
    9. ' suma' → logprob: -21.251928329467773
    10. '=sum' → logprob: -21.876928329467773

Token 150: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -2.816093228830141e-06
    2. '_' → logprob: -13.00000286102295
    3. '_value' → logprob: -14.87500286102295
    4. '_total' → logprob: -16.625001907348633
    5. '(_' → logprob: -17.750001907348633
    6. '_VALUES' → logprob: -18.000001907348633
    7. ' _' → logprob: -18.375001907348633
    8. '_val' → logprob: -18.625001907348633
    9. '_vals' → logprob: -19.000001907348633
    10. '(a' → logprob: -19.750001907348633

Token 151: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0004309076175559312
    2. '(' → logprob: -7.750431060791016
    3. ' (' → logprob: -15.125431060791016
    4. '(
' → logprob: -17.625431060791016
    5. '(

' → logprob: -20.750431060791016
    6. '(A' → logprob: -20.875431060791016
    7. '(b' → logprob: -21.375431060791016
    8. '()' → logprob: -21.625431060791016
    9. '(i' → logprob: -21.750431060791016
    10. 'a' → logprob: -21.875431060791016

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.817902173381299e-05
    2. ',b' → logprob: -9.62509822845459
    3. ' ,' → logprob: -10.37509822845459
    4. 'b' → logprob: -14.75009822845459
    5. ')' → logprob: -16.000097274780273
    6. ',
' → logprob: -16.000097274780273
    7. ',

' → logprob: -16.875097274780273
    8. ' ' → logprob: -17.375097274780273
    9. ' b' → logprob: -17.750097274780273
    10. ',
' → logprob: -18.500097274780273

Token 153: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.575939953327179
    2. 'b' → logprob: -0.825939953327179
    3. 'c' → logprob: -15.200940132141113
    4. ' ' → logprob: -15.575940132141113
    5. ' c' → logprob: -16.200939178466797
    6. '   ' → logprob: -18.700939178466797
    7. ')b' → logprob: -18.950939178466797
    8. '	b' → logprob: -19.325939178466797
    9. ',b' → logprob: -19.575939178466797
    10. ')' → logprob: -19.950939178466797

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.9504606825648807e-05
    2. ' ,' → logprob: -11.000019073486328
    3. ',c' → logprob: -13.750019073486328
    4. ',b' → logprob: -14.625019073486328
    5. 'c' → logprob: -15.000019073486328
    6. ',
' → logprob: -15.000019073486328
    7. 'b' → logprob: -15.250019073486328
    8. ')' → logprob: -16.750019073486328
    9. ',

' → logprob: -17.375019073486328
    10. '),' → logprob: -17.375019073486328

Token 155: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.12692883610725403
    2. ' c' → logprob: -2.1269288063049316
    3. ')c' → logprob: -14.87692928314209
    4. ' ' → logprob: -15.87692928314209
    5. '   ' → logprob: -16.501928329467773
    6. '	c' → logprob: -16.626928329467773
    7. ')' → logprob: -17.126928329467773
    8. '  ' → logprob: -18.626928329467773
    9. '_c' → logprob: -19.376928329467773
    10. '(c' → logprob: -19.626928329467773

Token 156: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003190905088558793
    2. ')
' → logprob: -5.753190994262695
    3. '   ' → logprob: -11.628190994262695
    4. ' )' → logprob: -12.628190994262695
    5. ')

' → logprob: -14.503190994262695
    6. ' ' → logprob: -15.878190994262695
    7. ')
' → logprob: -16.003190994262695
    8. 'if' → logprob: -17.253190994262695
    9. ' )
' → logprob: -17.378190994262695
    10. ')`' → logprob: -17.503190994262695

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03762952238321304
    2. ' if' → logprob: -3.4126296043395996
    3. 'if' → logprob: -5.5376296043396
    4. '
' → logprob: -11.037629127502441
    5. '<|end|>' → logprob: -11.537629127502441
    6. '	if' → logprob: -12.162629127502441
    7. '    
' → logprob: -12.412629127502441
    8. '    ' → logprob: -13.037629127502441
    9. '```' → logprob: -14.287629127502441
    10. '   ' → logprob: -14.412629127502441

Token 158: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00044103997061029077
    2. ' if' → logprob: -7.750441074371338
    3. '   ' → logprob: -11.50044059753418
    4. '
' → logprob: -16.00044059753418
    5. '	if' → logprob: -16.37544059753418
    6. 'If' → logprob: -17.00044059753418
    7. ' ' → logprob: -17.62544059753418
    8. '    
' → logprob: -19.00044059753418
    9. '```' → logprob: -19.00044059753418
    10. ';if' → logprob: -19.75044059753418

Token 159: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.004079828038811684
    2. 'is' → logprob: -5.504079818725586
    3. ' not' → logprob: -13.754079818725586
    4. '(is' → logprob: -15.004079818725586
    5. 'not' → logprob: -16.254079818725586
    6. '   ' → logprob: -17.504079818725586
    7. '_is' → logprob: -17.754079818725586
    8. ' ' → logprob: -18.004079818725586
    9. ' (' → logprob: -18.004079818725586
    10. '	is' → logprob: -18.629079818725586

Token 160: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -1.2664456789934775e-06
    2. 'b' → logprob: -13.750000953674316
    3. '_' → logprob: -15.750000953674316
    4. 'Bust' → logprob: -20.375001907348633
    5. '_a' → logprob: -20.750001907348633
    6. '(b' → logprob: -21.375001907348633
    7. '	b' → logprob: -21.500001907348633
    8. ' bust' → logprob: -21.500001907348633
    9. '__' → logprob: -21.625001907348633
    10. '_B' → logprob: -22.000001907348633

Token 161: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -16.125
    3. 'u' → logprob: -16.5
    4. 'b' → logprob: -16.75
    5. '[' → logprob: -17.0
    6. '_' → logprob: -17.125
    7. 'уст' → logprob: -17.5
    8. '<' → logprob: -18.125
    9. 'st' → logprob: -18.5
    10. '`' → logprob: -18.75

Token 162: '(total' (ID: 39744)
  Prédit: '(total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0007682943833060563
    2. '(' → logprob: -7.250768184661865
    3. ' (' → logprob: -9.750768661499023
    4. 'total' → logprob: -17.000768661499023
    5. ' total' → logprob: -17.250768661499023
    6. ',total' → logprob: -18.875768661499023
    7. ' ' → logprob: -19.000768661499023
    8. '(
' → logprob: -19.000768661499023
    9. '(t' → logprob: -19.125768661499023
    10. '	total' → logprob: -19.375768661499023

Token 163: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015002528380136937
    2. ':' → logprob: -9.875149726867676
    3. ' ):' → logprob: -9.875149726867676
    4. '):
' → logprob: -10.250149726867676
    5. ')' → logprob: -12.000149726867676
    6. '():' → logprob: -12.125149726867676
    7. '   ' → logprob: -17.125150680541992
    8. '):

' → logprob: -17.500150680541992
    9. '}:' → logprob: -17.750150680541992
    10. '=' → logprob: -17.875150680541992

Token 164: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6918019652366638
    2. '   ' → logprob: -0.9418019652366638
    3. 'print' → logprob: -2.3168020248413086
    4. ' print' → logprob: -5.066802024841309
    5. '
' → logprob: -5.816802024841309
    6. '(print' → logprob: -8.191802024841309
    7. '    
' → logprob: -8.191802024841309
    8. '	print' → logprob: -8.441802024841309
    9. '()' → logprob: -8.566802024841309
    10. '        
' → logprob: -9.191802024841309

Token 165: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.038659512996673584
    2. ' print' → logprob: -3.2886595726013184
    3. '   ' → logprob: -7.538659572601318
    4. '       ' → logprob: -9.91365909576416
    5. '	print' → logprob: -11.41365909576416
    6. '(print' → logprob: -11.78865909576416
    7. '    
' → logprob: -11.91365909576416
    8. '
' → logprob: -12.28865909576416
    9. '        
' → logprob: -13.28865909576416
    10. ' 
' → logprob: -13.53865909576416

Token 166: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -3.9292415749514475e-05
    2. '('_' → logprob: -10.500039100646973
    3. '_' → logprob: -11.625039100646973
    4. 'b' → logprob: -14.375039100646973
    5. '(_' → logprob: -14.375039100646973
    6. '(b' → logprob: -14.750039100646973
    7. ''_' → logprob: -15.250039100646973
    8. '```' → logprob: -15.250039100646973
    9. '("_' → logprob: -15.625039100646973
    10. '(' → logprob: -16.00004005432129

Token 167: 'ust' (ID: 570)
  Prédit: 'ust'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ust' → logprob: -2.2200749754119897e-06
    2. 'b' → logprob: -14.000001907348633
    3. '_' → logprob: -15.000001907348633
    4. '`' → logprob: -15.125001907348633
    5. ''' → logprob: -15.625001907348633
    6. 'st' → logprob: -15.875001907348633
    7. 'u' → logprob: -16.375001907348633
    8. 'urst' → logprob: -16.375001907348633
    9. '_b' → logprob: -16.625001907348633
    10. '"' → logprob: -17.125001907348633

Token 168: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6550878286361694
    2. '()
' → logprob: -1.2800878286361694
    3. '()' → logprob: -1.6550878286361694
    4. 'else' → logprob: -4.905087947845459
    5. ' else' → logprob: -5.530087947845459
    6. '
' → logprob: -9.6550874710083
    7. '	else' → logprob: -11.0300874710083
    8. ' ' → logprob: -11.0300874710083
    9. '    
' → logprob: -11.5300874710083
    10. '```' → logprob: -12.2800874710083

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.012542495504021645
    2. 'else' → logprob: -4.637542724609375
    3. ' else' → logprob: -5.887542724609375
    4. '	else' → logprob: -12.387542724609375
    5. '<|end|>' → logprob: -12.762542724609375
    6. '    
' → logprob: -14.512542724609375
    7. ' ' → logprob: -14.887542724609375
    8. '```' → logprob: -15.512542724609375
    9. '  ' → logprob: -16.012542724609375
    10. 'elif' → logprob: -16.012542724609375

Token 170: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.45601457357406616
    2. '   ' → logprob: -1.206014633178711
    3. ' else' → logprob: -2.706014633178711
    4. '	else' → logprob: -12.956014633178711
    5. ' ' → logprob: -13.206014633178711
    6. '  ' → logprob: -15.331014633178711
    7. 'elif' → logprob: -16.08101463317871
    8. '```' → logprob: -16.70601463317871
    9. '_else' → logprob: -16.70601463317871
    10. '
' → logprob: -17.33101463317871

Token 171: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04987448826432228
    2. ':
' → logprob: -3.0498745441436768
    3. '       ' → logprob: -6.674874305725098
    4. '   ' → logprob: -11.049874305725098
    5. ' :
' → logprob: -12.799874305725098
    6. ':

' → logprob: -13.549874305725098
    7. ' :' → logprob: -13.549874305725098
    8. '():
' → logprob: -14.674874305725098
    9. ':
' → logprob: -15.174874305725098
    10. 'print' → logprob: -15.299874305725098

Token 172: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007299214135855436
    2. 'print' → logprob: -5.132299423217773
    3. ' print' → logprob: -6.632299423217773
    4. '   ' → logprob: -10.007299423217773
    5. '(print' → logprob: -12.382299423217773
    6. '	print' → logprob: -13.757299423217773
    7. '```' → logprob: -14.757299423217773
    8. '      ' → logprob: -14.882299423217773
    9. '           ' → logprob: -14.882299423217773
    10. '.print' → logprob: -15.257299423217773

Token 173: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029752571135759354
    2. ' print' → logprob: -3.529752492904663
    3. '       ' → logprob: -13.404752731323242
    4. '   ' → logprob: -14.404752731323242
    5. ' ' → logprob: -17.404752731323242
    6. '	print' → logprob: -17.404752731323242
    7. '.print' → logprob: -17.904752731323242
    8. '(print' → logprob: -18.279752731323242
    9. '           ' → logprob: -19.154752731323242
    10. '  ' → logprob: -19.904752731323242

Token 174: '_win' (ID: 63099)
  Prédit: '_win'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_win' → logprob: -5.431207682704553e-05
    2. '('_' → logprob: -10.250054359436035
    3. '_' → logprob: -11.375054359436035
    4. '_w' → logprob: -13.125054359436035
    5. '("_' → logprob: -13.750054359436035
    6. ''_' → logprob: -13.875054359436035
    7. 'win' → logprob: -14.375054359436035
    8. '_finish' → logprob: -14.500054359436035
    9. '_wrap' → logprob: -15.000054359436035
    10. '(win' → logprob: -15.250054359436035

Token 175: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009189624106511474
    2. '()
' → logprob: -7.000918865203857
    3. '()

' → logprob: -12.375919342041016
    4. '(' → logprob: -13.500919342041016
    5. '()\' → logprob: -14.000919342041016
    6. '()`' → logprob: -14.375919342041016
    7. ' ()' → logprob: -15.625919342041016
    8. '(
' → logprob: -16.250919342041016
    9. '()"' → logprob: -16.500919342041016
    10. '()
' → logprob: -16.750919342041016

Token 176: 'main' (ID: 7731)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10021615028381348
    2. 'main' → logprob: -2.3502161502838135
    3. '#' → logprob: -12.725215911865234
    4. ' if' → logprob: -13.100215911865234
    5. ' main' → logprob: -13.475215911865234
    6. '(main' → logprob: -14.350215911865234
    7. '```' → logprob: -14.475215911865234
    8. '\' → logprob: -14.475215911865234
    9. '\n' → logprob: -14.600215911865234
    10. '
' → logprob: -14.725215911865234

Token 177: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.020557070150971413
    2. '(' → logprob: -3.895557165145874
    3. '();' → logprob: -12.770557403564453
    4. ' ()' → logprob: -12.895557403564453
    5. '()`' → logprob: -13.270557403564453
    6. '()
' → logprob: -13.770557403564453
    7. '(
' → logprob: -13.770557403564453
    8. '().' → logprob: -14.020557403564453
    9. '()

' → logprob: -14.395557403564453
    10. '()">' → logprob: -14.395557403564453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 175
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 107
Tokens correctement prédits (top 10): 157
Précision stricte (1ère position): 54.86%
Précision adaptée (1ère position): 61.14%
Précision (top 10): 89.71%
================================================================================
