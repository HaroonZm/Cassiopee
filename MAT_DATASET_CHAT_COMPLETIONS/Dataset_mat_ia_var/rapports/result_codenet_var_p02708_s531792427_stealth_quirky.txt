================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Variables in ALL_CAPS except loop vars, skipped underscores, and strange 1-based variable names.
getPair=lambda:map(int,input().split())
N,K=getPair()
MODULUS=10**9+7

LOW=HIGH=TOT=0
for STEP in range(1,N+2):
    LOW+=STEP-1
    HIGH+=N-STEP+1
    if STEP>=K:
        TOT+=(HIGH-LOW+1)%MODULUS
        TOT%=MODULUS

print(TOT)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Variables' (ID: 46975)
  → Token d'amorce (pas de prédiction)

Token 2: ' in' (ID: 306)
  → Token d'amorce (pas de prédiction)

Token 3: ' ALL' (ID: 19465)
  Prédit: 'Python'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Python' → logprob: -0.21499259769916534
    2. 'python' → logprob: -1.964992642402649
    3. ' Python' → logprob: -3.0899925231933594
    4. ' python' → logprob: -5.589992523193359
    5. '#' → logprob: -6.714992523193359
    6. ' code' → logprob: -7.589992523193359
    7. ' programming' → logprob: -7.714992523193359
    8. 'a' → logprob: -7.839992523193359
    9. 'code' → logprob: -7.964992523193359
    10. 'the' → logprob: -7.964992523193359

Token 4: '_CAP' (ID: 49219)
  Prédit: '_CAP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_CAP' → logprob: -0.47446754574775696
    2. 'CAP' → logprob: -0.9744675159454346
    3. '```' → logprob: -9.224467277526855
    4. '_caps' → logprob: -9.474467277526855
    5. '_UP' → logprob: -9.599467277526855
    6. 'caps' → logprob: -9.724467277526855
    7. 'Caps' → logprob: -10.349467277526855
    8. '_C' → logprob: -10.724467277526855
    9. 'UP' → logprob: -10.724467277526855
    10. ' CAPS' → logprob: -11.974467277526855

Token 5: 'S' (ID: 50)
  Prédit: 'MY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.35624146461486816
    2. '```' → logprob: -2.231241464614868
    3. 'VARIABLE' → logprob: -2.856241464614868
    4. 'VAR' → logprob: -3.481241464614868
    5. 'S' → logprob: -3.731241464614868
    6. 'USER' → logprob: -4.731241226196289
    7. 'my' → logprob: -5.231241226196289
    8. '``' → logprob: -5.356241226196289
    9. '`' → logprob: -5.356241226196289
    10. '_MY' → logprob: -5.481241226196289

Token 6: ' except' (ID: 6384)
  Prédit: 'MY'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'MY' → logprob: -0.291068971157074
    2. 'S' → logprob: -3.1660690307617188
    3. 'VARIABLE' → logprob: -3.2910690307617188
    4. '_' → logprob: -3.6660690307617188
    5. 'VAR' → logprob: -3.7910690307617188
    6. 'my' → logprob: -4.416069030761719
    7. '```' → logprob: -4.416069030761719
    8. 'variable' → logprob: -4.541069030761719
    9. 'M' → logprob: -4.666069030761719
    10. 'USER' → logprob: -4.791069030761719

Token 7: ' loop' (ID: 11453)
  Prédit: 'snake'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'snake' → logprob: -1.550916075706482
    2. '#' → logprob: -1.675916075706482
    3. 'for' → logprob: -1.800916075706482
    4. '```' → logprob: -2.4259161949157715
    5. 'function' → logprob: -2.8009161949157715
    6. 'reserved' → logprob: -2.8009161949157715
    7. 'words' → logprob: -3.3009161949157715
    8. 'lower' → logprob: -3.3009161949157715
    9. 'def' → logprob: -3.9259161949157715
    10. 'class' → logprob: -3.9259161949157715

Token 8: ' vars' (ID: 36194)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7967667579650879
    2. 'for' → logprob: -1.171766757965088
    3. '_' → logprob: -2.171766757965088
    4. 'f' → logprob: -3.296766757965088
    5. ' for' → logprob: -4.296766757965088
    6. 'n' → logprob: -4.421766757965088
    7. ':' → logprob: -4.546766757965088
    8. '```' → logprob: -4.671766757965088
    9. '=' → logprob: -5.171766757965088
    10. 'a' → logprob: -5.421766757965088

Token 9: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9579286575317383
    2. '_' → logprob: -1.2079286575317383
    3. 'for' → logprob: -1.7079286575317383
    4. 'f' → logprob: -2.4579286575317383
    5. '=' → logprob: -4.832928657531738
    6. 'a' → logprob: -5.207928657531738
    7. 'n' → logprob: -5.207928657531738
    8. 'c' → logprob: -5.332928657531738
    9. ':' → logprob: -5.582928657531738
    10. ' for' → logprob: -5.832928657531738

Token 10: ' skipped' (ID: 72521)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.061232089996338
    2. 'i' → logprob: -1.311232089996338
    3. '#' → logprob: -2.811232089996338
    4. ',' → logprob: -3.311232089996338
    5. 'for' → logprob: -3.311232089996338
    6. '.' → logprob: -3.436232089996338
    7. 'n' → logprob: -3.686232089996338
    8. ':' → logprob: -3.686232089996338
    9. ' for' → logprob: -3.811232089996338
    10. ' and' → logprob: -3.936232089996338

Token 11: ' underscores' (ID: 168008)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.742856502532959
    2. ':' → logprob: -1.367856502532959
    3. '_' → logprob: -1.867856502532959
    4. 'for' → logprob: -3.117856502532959
    5. ' =' → logprob: -4.117856502532959
    6. '#' → logprob: -4.617856502532959
    7. 'i' → logprob: -4.742856502532959
    8. ',' → logprob: -4.742856502532959
    9. '.' → logprob: -4.867856502532959
    10. ')' → logprob: -5.867856502532959

Token 12: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.295911192893982
    2. 'i' → logprob: -1.795911192893982
    3. 'v' → logprob: -2.1709113121032715
    4. '_' → logprob: -2.7959113121032715
    5. 'm' → logprob: -3.0459113121032715
    6. 't' → logprob: -3.1709113121032715
    7. 'c' → logprob: -3.2959113121032715
    8. '=' → logprob: -3.4209113121032715
    9. ':' → logprob: -3.6709113121032715
    10. 'n' → logprob: -3.6709113121032715

Token 13: ' and' (ID: 326)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.1442654132843018
    2. 'i' → logprob: -1.6442654132843018
    3. '=' → logprob: -2.0192654132843018
    4. '#' → logprob: -2.6442654132843018
    5. 'n' → logprob: -2.6442654132843018
    6. 'v' → logprob: -3.0192654132843018
    7. 'for' → logprob: -3.6442654132843018
    8. 's' → logprob: -4.144265174865723
    9. '.' → logprob: -4.394265174865723
    10. 'e' → logprob: -4.519265174865723

Token 14: ' strange' (ID: 26197)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5830219388008118
    2. 'lower' → logprob: -2.458021879196167
    3. '__' → logprob: -2.708021879196167
    4. '.' → logprob: -3.333021879196167
    5. 'numbers' → logprob: -3.958021879196167
    6. 'reserved' → logprob: -4.083022117614746
    7. '_' → logprob: -4.333022117614746
    8. 'camel' → logprob: -4.458022117614746
    9. 'letters' → logprob: -4.583022117614746
    10. 'd' → logprob: -4.583022117614746

Token 15: ' ' (ID: 220)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.594462513923645
    2. '=' → logprob: -2.2194623947143555
    3. 'a' → logprob: -2.4694623947143555
    4. ':' → logprob: -3.2194623947143555
    5. 'n' → logprob: -3.2194623947143555
    6. 's' → logprob: -3.5944623947143555
    7. 'i' → logprob: -3.7194623947143555
    8. '```' → logprob: -3.8444623947143555
    9. '#' → logprob: -3.9694623947143555
    10. 'v' → logprob: -4.0944623947143555

Token 16: '1' (ID: 16)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.24654130637645721
    2. '=' → logprob: -2.8715412616729736
    3. 'n' → logprob: -2.8715412616729736
    4. 'v' → logprob: -3.6215412616729736
    5. 'a' → logprob: -3.8715412616729736
    6. 's' → logprob: -4.496541500091553
    7. '#' → logprob: -4.496541500091553
    8. 'c' → logprob: -5.371541500091553
    9. 'i' → logprob: -5.621541500091553
    10. ':' → logprob: -5.746541500091553

Token 17: '-based' (ID: 8235)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6066248416900635
    2. '_' → logprob: -1.2316248416900635
    3. ' =' → logprob: -3.1066248416900635
    4. 's' → logprob: -3.9816248416900635
    5. ':' → logprob: -3.9816248416900635
    6. '#' → logprob: -4.231624603271484
    7. 'a' → logprob: -4.481624603271484
    8. '```' → logprob: -4.856624603271484
    9. ')' → logprob: -4.981624603271484
    10. ',' → logprob: -5.106624603271484

Token 18: ' variable' (ID: 11076)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1313849538564682
    2. '=' → logprob: -3.25638484954834
    3. '#' → logprob: -3.50638484954834
    4. ':' → logprob: -3.63138484954834
    5. 'a' → logprob: -5.88138484954834
    6. ',' → logprob: -6.00638484954834
    7. 's' → logprob: -6.00638484954834
    8. ')' → logprob: -6.00638484954834
    9. 'd' → logprob: -6.13138484954834
    10. 'n' → logprob: -6.25638484954834

Token 19: ' names' (ID: 8747)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7128333449363708
    2. '=' → logprob: -1.2128334045410156
    3. 'v' → logprob: -3.5878334045410156
    4. 'a' → logprob: -3.7128334045410156
    5. ' =' → logprob: -3.7128334045410156
    6. 's' → logprob: -4.087833404541016
    7. 'i' → logprob: -4.087833404541016
    8. ')' → logprob: -4.212833404541016
    9. '#' → logprob: -4.337833404541016
    10. 'n' → logprob: -4.462833404541016

Token 20: '.
' (ID: 558)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4291907250881195
    2. '#' → logprob: -2.3041906356811523
    3. ':' → logprob: -2.5541906356811523
    4. '=' → logprob: -2.9291906356811523
    5. '```' → logprob: -3.1791906356811523
    6. 'a' → logprob: -3.9291906356811523
    7. ')' → logprob: -4.804190635681152
    8. 'v' → logprob: -5.304190635681152
    9. 'n' → logprob: -5.429190635681152
    10. 'd' → logprob: -5.554190635681152

Token 21: 'get' (ID: 522)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.07208476960659027
    2. ':' → logprob: -4.572084903717041
    3. '=' → logprob: -4.572084903717041
    4. '#' → logprob: -4.697084903717041
    5. '.' → logprob: -5.072084903717041
    6. '```' → logprob: -5.197084903717041
    7. 'a' → logprob: -5.322084903717041
    8. ',' → logprob: -5.322084903717041
    9. 'i' → logprob: -5.947084903717041
    10. 'd' → logprob: -6.072084903717041

Token 22: 'Pair' (ID: 15573)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47064363956451416
    2. 'attr' → logprob: -2.2206435203552246
    3. '_item' → logprob: -2.5956435203552246
    4. '_user' → logprob: -2.9706435203552246
    5. '_value' → logprob: -3.5956435203552246
    6. '_data' → logprob: -3.8456435203552246
    7. '_input' → logprob: -4.470643520355225
    8. '_items' → logprob: -4.720643520355225
    9. '_variable' → logprob: -4.845643520355225
    10. 'item' → logprob: -5.095643520355225

Token 23: '=lambda' (ID: 64865)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009044683538377285
    2. 's' → logprob: -4.884044647216797
    3. '()' → logprob: -7.384044647216797
    4. '(
' → logprob: -8.134044647216797
    5. '[' → logprob: -8.759044647216797
    6. ')' → logprob: -9.384044647216797
    7. '('' → logprob: -9.884044647216797
    8. ' (' → logprob: -10.009044647216797
    9. 'S' → logprob: -10.509044647216797
    10. 'A' → logprob: -11.259044647216797

Token 24: ':' (ID: 25)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.4141245484352112
    2. 'x' → logprob: -1.6641244888305664
    3. ' s' → logprob: -2.7891244888305664
    4. ' a' → logprob: -3.4141244888305664
    5. 's' → logprob: -4.289124488830566
    6. 'a' → logprob: -4.664124488830566
    7. ' pair' → logprob: -4.664124488830566
    8. ' p' → logprob: -6.039124488830566
    9. 'pair' → logprob: -6.289124488830566
    10. ' pairs' → logprob: -6.414124488830566

Token 25: 'map' (ID: 3726)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.47793957591056824
    2. ' input' → logprob: -2.2279396057128906
    3. 'int' → logprob: -3.1029396057128906
    4. 'pair' → logprob: -3.6029396057128906
    5. '(int' → logprob: -3.7279396057128906
    6. '(' → logprob: -3.9779396057128906
    7. '(input' → logprob: -3.9779396057128906
    8. ' int' → logprob: -4.352939605712891
    9. '[]' → logprob: -4.477939605712891
    10. ' (' → logprob: -4.602939605712891

Token 26: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07658038288354874
    2. '(lambda' → logprob: -3.201580286026001
    3. '(int' → logprob: -3.451580286026001
    4. '<|end|>' → logprob: -7.70158052444458
    5. '(str' → logprob: -7.95158052444458
    6. '(
' → logprob: -9.076580047607422
    7. '(list' → logprob: -9.451580047607422
    8. '(eval' → logprob: -10.076580047607422
    9. '(get' → logprob: -10.951580047607422
    10. '<int' → logprob: -11.076580047607422

Token 27: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.03214764967560768
    2. 'input' → logprob: -3.6571476459503174
    3. '(' → logprob: -5.7821478843688965
    4. ',input' → logprob: -6.2821478843688965
    5. ')' → logprob: -7.6571478843688965
    6. ' input' → logprob: -8.157147407531738
    7. ',' → logprob: -10.532147407531738
    8. '(sys' → logprob: -10.907147407531738
    9. '(stdin' → logprob: -10.907147407531738
    10. '=input' → logprob: -11.282147407531738

Token 28: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.019948670640587807
    2. '()' → logprob: -4.144948482513428
    3. '())' → logprob: -5.769948482513428
    4. '(' → logprob: -7.394948482513428
    5. '('' → logprob: -9.769948959350586
    6. ')' → logprob: -10.144948959350586
    7. '()))' → logprob: -11.019948959350586
    8. '()[' → logprob: -11.269948959350586
    9. '().'' → logprob: -11.519948959350586
    10. '()['' → logprob: -12.019948959350586

Token 29: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.008724482730031013
    2. 'strip' → logprob: -4.758724689483643
    3. 'read' → logprob: -9.383724212646484
    4. ' split' → logprob: -11.258724212646484
    5. 'rstrip' → logprob: -11.633724212646484
    6. 's' → logprob: -13.258724212646484
    7. 'spl' → logprob: -14.383724212646484
    8. ')' → logprob: -14.383724212646484
    9. '(split' → logprob: -14.758724212646484
    10. 'replace' → logprob: -15.383724212646484

Token 30: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004602434113621712
    2. '()' → logprob: -5.879602432250977
    3. '()))' → logprob: -6.379602432250977
    4. ')' → logprob: -10.004602432250977
    5. '(' → logprob: -10.379602432250977
    6. '()),' → logprob: -11.879602432250977
    7. ' ())' → logprob: -12.254602432250977
    8. '))' → logprob: -13.129602432250977
    9. '();)' → logprob: -13.129602432250977
    10. '()]' → logprob: -13.879602432250977

Token 31: 'N' (ID: 45)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.11997032910585403
    2. '\n' → logprob: -3.9949703216552734
    3. '(n' → logprob: -3.9949703216552734
    4. 'for' → logprob: -4.119970321655273
    5. 'def' → logprob: -4.244970321655273
    6. 'a' → logprob: -4.244970321655273
    7. 's' → logprob: -4.869970321655273
    8. '' → logprob: -5.619970321655273
    9. 't' → logprob: -5.619970321655273
    10. '
' → logprob: -6.744970321655273

Token 32: ',K' (ID: 107147)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7911099791526794
    2. ' =' → logprob: -0.9161099791526794
    3. '=' → logprob: -2.041110038757324
    4. '=int' → logprob: -4.916110038757324
    5. '=input' → logprob: -5.416110038757324
    6. ' ,' → logprob: -5.916110038757324
    7. ',input' → logprob: -7.291110038757324
    8. ')' → logprob: -7.791110038757324
    9. ' ' → logprob: -8.041110038757324
    10. ',int' → logprob: -8.666110038757324

Token 33: '=get' (ID: 49687)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006916418671607971
    2. ' =' → logprob: -5.131916522979736
    3. '=input' → logprob: -7.131916522979736
    4. '=int' → logprob: -8.756916046142578
    5. '=get' → logprob: -11.256916046142578
    6. ',' → logprob: -11.631916046142578
    7. '=N' → logprob: -12.881916046142578
    8. '=

' → logprob: -13.256916046142578
    9. ',N' → logprob: -14.131916046142578
    10. '=
' → logprob: -14.256916046142578

Token 34: 'Pair' (ID: 15573)
  Prédit: 'Pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Pair' → logprob: -4.429896944202483e-05
    2. 'Pairs' → logprob: -10.875043869018555
    3. ' Pair' → logprob: -11.000043869018555
    4. 'Pa' → logprob: -12.125043869018555
    5. 'P' → logprob: -14.125043869018555
    6. 'pair' → logprob: -14.375043869018555
    7. 'PAIR' → logprob: -14.500043869018555
    8. '.Pair' → logprob: -14.500043869018555
    9. '<Pair' → logprob: -14.750043869018555
    10. '_pair' → logprob: -15.375043869018555

Token 35: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.4034345187828876e-05
    2. ' ()' → logprob: -11.50002384185791
    3. '()
' → logprob: -12.62502384185791
    4. '(' → logprob: -13.00002384185791
    5. '()

' → logprob: -13.37502384185791
    6. '()]' → logprob: -13.37502384185791
    7. '()(' → logprob: -13.62502384185791
    8. '()`' → logprob: -14.00002384185791
    9. '().' → logprob: -14.87502384185791
    10. '()"' → logprob: -14.87502384185791

Token 36: 'MOD' (ID: 52135)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10362698137760162
    2. '<|end|>' → logprob: -2.7286269664764404
    3. 'for' → logprob: -3.7286269664764404
    4. '#' → logprob: -6.3536272048950195
    5. ' for' → logprob: -6.6036272048950195
    6. 'while' → logprob: -6.9786272048950195
    7. '
' → logprob: -6.9786272048950195
    8. '\n' → logprob: -6.9786272048950195
    9. '' → logprob: -7.1036272048950195
    10. '```' → logprob: -7.9786272048950195

Token 37: 'UL' (ID: 1949)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5774566531181335
    2. '=' → logprob: -0.8274566531181335
    3. ' ' → logprob: -7.452456474304199
    4. '<|end|>' → logprob: -7.702456474304199
    5. '_' → logprob: -8.0774564743042
    6. ')' → logprob: -10.0774564743042
    7. ',' → logprob: -10.7024564743042
    8. ' =)' → logprob: -11.0774564743042
    9. ' )' → logprob: -11.5774564743042
    10. ' ,' → logprob: -11.7024564743042

Token 38: 'US' (ID: 3042)
  Prédit: 'US'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'US' → logprob: -0.4793502688407898
    2. 'AR' → logprob: -0.9793502688407898
    3. 'O' → logprob: -5.7293500900268555
    4. 'E' → logprob: -7.8543500900268555
    5. '_' → logprob: -7.8543500900268555
    6. 'OS' → logprob: -8.229350090026855
    7. '=' → logprob: -8.479350090026855
    8. 'A' → logprob: -8.979350090026855
    9. 'U' → logprob: -9.104350090026855
    10. '```' → logprob: -9.604350090026855

Token 39: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1062689945101738
    2. ' =' → logprob: -2.481268882751465
    3. '_' → logprob: -4.106268882751465
    4. '_=' → logprob: -8.356268882751465
    5. ' ' → logprob: -8.606268882751465
    6. '_MOD' → logprob: -8.731268882751465
    7. '=_' → logprob: -10.356268882751465
    8. '=int' → logprob: -10.981268882751465
    9. ' _' → logprob: -11.231268882751465
    10. 'MOD' → logprob: -11.356268882751465

Token 40: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.021388467401266098
    2. '100' → logprob: -3.896388530731201
    3. ' ' → logprob: -7.146388530731201
    4. '1' → logprob: -9.896388053894043
    5. '998' → logprob: -12.021388053894043
    6. 'int' → logprob: -13.521388053894043
    7. '101' → logprob: -15.521388053894043
    8. '109' → logprob: -16.02138900756836
    9. '(' → logprob: -16.27138900756836
    10. '2' → logprob: -16.39638900756836

Token 41: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.005877125076949596
    2. '0' → logprob: -5.5058770179748535
    3. '00' → logprob: -7.1308770179748535
    4. '^' → logprob: -8.005877494812012
    5. ' **' → logprob: -8.005877494812012
    6. '000' → logprob: -8.630877494812012
    7. '9' → logprob: -9.130877494812012
    8. '*' → logprob: -10.880877494812012
    9. '```' → logprob: -12.130877494812012
    10. '%' → logprob: -12.255877494812012

Token 42: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -1.0564331205387134e-05
    2. '09' → logprob: -11.62501049041748
    3. '+' → logprob: -14.00001049041748
    4. '```' → logprob: -16.125011444091797
    5. '10' → logprob: -16.750011444091797
    6. '18' → logprob: -17.312511444091797
    7. '**' → logprob: -17.437511444091797
    8. ' ' → logprob: -17.562511444091797
    9. '8' → logprob: -17.687511444091797
    10. '009' → logprob: -17.687511444091797

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.542423165636137e-05
    2. ' +' → logprob: -9.750085830688477
    3. '+
' → logprob: -11.125085830688477
    4. '7' → logprob: -11.875085830688477
    5. '+

' → logprob: -13.125085830688477
    6. '+</' → logprob: -13.250085830688477
    7. '<|end|>' → logprob: -14.750085830688477
    8. '＋' → logprob: -15.500085830688477
    9. ' +
' → logprob: -16.125085830688477
    10. ' ' → logprob: -16.250085830688477

Token 44: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -4.60414821645827e-06
    2. '+' → logprob: -12.375004768371582
    3. ' ' → logprob: -15.875004768371582
    4. '07' → logprob: -16.500003814697266
    5. '```' → logprob: -16.625003814697266
    6. '87' → logprob: -17.125003814697266
    7. '9' → logprob: -17.875003814697266
    8. '007' → logprob: -18.500003814697266
    9. '   ' → logprob: -18.812503814697266
    10. '77' → logprob: -19.125003814697266

Token 45: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 46: 'LOW' (ID: 16839)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.17734481394290924
    2. 'result' → logprob: -2.802344799041748
    3. 'DP' → logprob: -3.552344799041748
    4. 'def' → logprob: -4.427344799041748
    5. 's' → logprob: -5.052344799041748
    6. 'count' → logprob: -5.177344799041748
    7. 'res' → logprob: -5.427344799041748
    8. 'a' → logprob: -5.427344799041748
    9. 'factor' → logprob: -5.427344799041748
    10. 'n' → logprob: -5.677344799041748

Token 47: '=' (ID: 28)
  Prédit: 'ER'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ER' → logprob: -0.0010038702748715878
    2. '=' → logprob: -8.001004219055176
    3. 'ERING' → logprob: -9.251004219055176
    4. 'E' → logprob: -9.376004219055176
    5. '_BIT' → logprob: -9.751004219055176
    6. '_BOUND' → logprob: -9.876004219055176
    7. '_' → logprob: -10.001004219055176
    8. 'ERR' → logprob: -10.251004219055176
    9. '_LIMIT' → logprob: -10.376004219055176
    10. 'EST' → logprob: -10.501004219055176

Token 48: 'HIGH' (ID: 166090)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6389357447624207
    2. 'K' → logprob: -1.3889358043670654
    3. '0' → logprob: -2.2639358043670654
    4. 'N' → logprob: -3.2639358043670654
    5. 'max' → logprob: -3.6389358043670654
    6. '2' → logprob: -3.6389358043670654
    7. '10' → logprob: -4.013935565948486
    8. 'min' → logprob: -6.513935565948486
    9. ' K' → logprob: -6.638935565948486
    10. ' ' → logprob: -6.638935565948486

Token 49: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028391558676958084
    2. '=N' → logprob: -4.153391361236572
    3. ' =' → logprob: -5.403391361236572
    4. ',' → logprob: -5.903391361236572
    5. ',N' → logprob: -5.903391361236572
    6. '+' → logprob: -7.653391361236572
    7. ',K' → logprob: -7.778391361236572
    8. '=_' → logprob: -8.02839183807373
    9. '_=' → logprob: -8.65339183807373
    10. '0' → logprob: -8.90339183807373

Token 50: 'TOT' (ID: 156359)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.44546493887901306
    2. 'N' → logprob: -1.4454649686813354
    3. '0' → logprob: -2.195464849472046
    4. 'K' → logprob: -4.445465087890625
    5. '10' → logprob: -7.820465087890625
    6. '2' → logprob: -9.695465087890625
    7. ' N' → logprob: -9.820465087890625
    8. ' ' → logprob: -9.820465087890625
    9. '100' → logprob: -10.195465087890625
    10. 'None' → logprob: -10.195465087890625

Token 51: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.29490795731544495
    2. '0' → logprob: -1.5449079275131226
    3. 'N' → logprob: -3.669908046722412
    4. '=N' → logprob: -4.669908046722412
    5. '1' → logprob: -5.169908046722412
    6. ' ' → logprob: -7.794908046722412
    7. 'L' → logprob: -8.919907569885254
    8. 'al' → logprob: -9.419907569885254
    9. ' =' → logprob: -9.669907569885254
    10. '-' → logprob: -9.794907569885254

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2822480797767639
    2. '1' → logprob: -1.4072480201721191
    3. 'N' → logprob: -6.907248020172119
    4. ' ' → logprob: -9.657248497009277
    5. 'K' → logprob: -11.782248497009277
    6. '-' → logprob: -12.407248497009277
    7. '[' → logprob: -13.282248497009277
    8. '2' → logprob: -13.407248497009277
    9. '10' → logprob: -13.532248497009277
    10. '<N' → logprob: -13.719748497009277

Token 53: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8212438821792603
    2. '<|end|>' → logprob: -1.4462438821792603
    3. ' ' → logprob: -2.1962437629699707
    4. ' 
' → logprob: -2.3212437629699707
    5. 'for' → logprob: -2.8212437629699707
    6. ' for' → logprob: -3.1962437629699707
    7. '\n' → logprob: -5.071243762969971
    8. '' → logprob: -6.321243762969971
    9. ' 

' → logprob: -6.446243762969971
    10. '\' → logprob: -7.071243762969971

Token 54: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03742893785238266
    2. ' for' → logprob: -3.662428855895996
    3. '
' → logprob: -4.912428855895996
    4. '<|end|>' → logprob: -6.412428855895996
    5. ':' → logprob: -8.037428855895996
    6. '\n' → logprob: -8.162428855895996
    7. 'n' → logprob: -8.662428855895996
    8. ';' → logprob: -8.787428855895996
    9. ' ' → logprob: -8.787428855895996
    10. 'x' → logprob: -8.912428855895996

Token 55: ' STEP' (ID: 95913)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05893165245652199
    2. ' i' → logprob: -2.933931589126587
    3. ' ' → logprob: -6.058931827545166
    4. '_' → logprob: -6.433931827545166
    5. 'i' → logprob: -9.933931350708008
    6. '_i' → logprob: -11.183931350708008
    7. ' x' → logprob: -11.433931350708008
    8. ' K' → logprob: -11.683931350708008
    9. ' _
' → logprob: -12.933931350708008
    10. ' ' → logprob: -13.183931350708008

Token 56: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16068285703659058
    2. 'in' → logprob: -1.9106829166412354
    3. ' ' → logprob: -8.285682678222656
    4. ',' → logprob: -9.035682678222656
    5. ',in' → logprob: -11.098182678222656
    6. '1' → logprob: -11.535682678222656
    7. 's' → logprob: -11.660682678222656
    8. '_in' → logprob: -11.973182678222656
    9. '	in' → logprob: -12.285682678222656
    10. ' ,' → logprob: -12.285682678222656

Token 57: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04860054701566696
    2. ' range' → logprob: -3.048600435256958
    3. '	range' → logprob: -11.798600196838379
    4. ' ' → logprob: -13.173600196838379
    5. 'rang' → logprob: -13.298600196838379
    6. '(range' → logprob: -14.548600196838379
    7. '  ' → logprob: -14.798600196838379
    8. ' xrange' → logprob: -15.548600196838379
    9. 'r' → logprob: -15.798600196838379
    10. '   ' → logprob: -16.173601150512695

Token 58: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.17777641117572784
    2. '(K' → logprob: -1.9277764558792114
    3. '(N' → logprob: -4.052776336669922
    4. '(
' → logprob: -12.177776336669922
    5. '1' → logprob: -12.177776336669922
    6. '(S' → logprob: -12.427776336669922
    7. '(L' → logprob: -13.052776336669922
    8. '(M' → logprob: -14.052776336669922
    9. '((' → logprob: -14.177776336669922
    10. '(int' → logprob: -14.427776336669922

Token 59: '1' (ID: 16)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.6851089596748352
    2. 'N' → logprob: -1.0601089000701904
    3. '1' → logprob: -1.9351089000701904
    4. ' K' → logprob: -6.1851091384887695
    5. '(' → logprob: -6.6851091384887695
    6. ' N' → logprob: -7.1851091384887695
    7. ' ' → logprob: -7.5601091384887695
    8. '(N' → logprob: -9.18510913848877
    9. '(K' → logprob: -9.18510913848877
    10. '0' → logprob: -9.31010913848877

Token 60: ',N' (ID: 49539)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4038875699043274
    2. ',K' → logprob: -1.1538875102996826
    3. ',N' → logprob: -4.153887748718262
    4. ' ,' → logprob: -6.778887748718262
    5. ',
' → logprob: -12.403887748718262
    6. 'K' → logprob: -12.528887748718262
    7. ',n' → logprob: -12.528887748718262
    8. ' K' → logprob: -12.903887748718262
    9. ',len' → logprob: -13.028887748718262
    10. '   ' → logprob: -13.028887748718262

Token 61: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007105246186256409
    2. ' +' → logprob: -7.250710487365723
    3. '):' → logprob: -15.875710487365723
    4. ')+' → logprob: -16.37571144104004
    5. '+
' → logprob: -16.75071144104004
    6. '1' → logprob: -17.25071144104004
    7. ',+' → logprob: -17.75071144104004
    8. ',' → logprob: -17.87571144104004
    9. ')' → logprob: -17.87571144104004
    10. '```' → logprob: -17.87571144104004

Token 62: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020497082732617855
    2. ' ' → logprob: -8.500205039978027
    3. ')' → logprob: -14.500205039978027
    4. '   ' → logprob: -15.375205039978027
    5. '```' → logprob: -16.06270408630371
    6. '2' → logprob: -16.37520408630371
    7. '  ' → logprob: -16.56270408630371
    8. '

' → logprob: -17.00020408630371
    9. '11' → logprob: -17.18770408630371
    10. ',' → logprob: -17.31270408630371

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002083762548863888
    2. ' ):' → logprob: -6.627083778381348
    3. ')' → logprob: -7.627083778381348
    4. ':' → logprob: -8.502083778381348
    5. '):
' → logprob: -10.377083778381348
    6. ',' → logprob: -10.502083778381348
    7. '+' → logprob: -13.502083778381348
    8. ' )' → logprob: -13.877083778381348
    9. ']:' → logprob: -14.127083778381348
    10. ' :' → logprob: -14.127083778381348

Token 64: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6424157619476318
    2. '   ' → logprob: -1.6424157619476318
    3. '<|end|>' → logprob: -1.6424157619476318
    4. '    ' → logprob: -3.392415761947632
    5. ':' → logprob: -3.392415761947632
    6. '  ' → logprob: -6.017416000366211
    7. '<|end|>' → logprob: -6.017416000366211
    8. ' :' → logprob: -6.017416000366211
    9. '_' → logprob: -6.267416000366211
    10. ',' → logprob: -6.767416000366211

Token 65: ' LOW' (ID: 82429)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.5379081964492798
    2. ' ' → logprob: -1.7879081964492798
    3. '    ' → logprob: -2.0379080772399902
    4. ' LOW' → logprob: -2.2879080772399902
    5. ' pass' → logprob: -2.5379080772399902
    6. '   ' → logprob: -2.5379080772399902
    7. ' HIGH' → logprob: -2.6629080772399902
    8. 'LOW' (adapté à ' LOW') → logprob: -4.03790807723999
    9. ' TOT' → logprob: -4.22540807723999
    10. 'TOT' → logprob: -4.41290807723999

Token 66: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.13129714131355286
    2. '=' → logprob: -2.7562971115112305
    3. ',' → logprob: -3.1312971115112305
    4. ' +=' → logprob: -4.6312971115112305
    5. '-=' → logprob: -7.3812971115112305
    6. ' =' → logprob: -7.3812971115112305
    7. ',new' → logprob: -7.5062971115112305
    8. '+=(' → logprob: -7.6312971115112305
    9. ',max' → logprob: -7.7562971115112305
    10. '*=' → logprob: -7.8812971115112305

Token 67: 'STEP' (ID: 91410)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.7905012965202332
    2. 'STEP' → logprob: -0.7905012965202332
    3. '1' → logprob: -3.165501356124878
    4. '(K' → logprob: -3.790501356124878
    5. '(' → logprob: -4.665501117706299
    6. 'TOT' → logprob: -5.540501117706299
    7. 'LOW' → logprob: -5.665501117706299
    8. 'pow' → logprob: -6.165501117706299
    9. 'MOD' → logprob: -6.165501117706299
    10. '2' → logprob: -7.040501117706299

Token 68: '-' (ID: 12)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00224113161675632
    2. '2' → logprob: -6.127241134643555
    3. 'K' → logprob: -10.502241134643555
    4. '<|end|>' → logprob: -11.377241134643555
    5. ' ' → logprob: -12.502241134643555
    6. '-' → logprob: -13.189741134643555
    7. '```' → logprob: -13.564741134643555
    8. '0' → logprob: -14.064741134643555
    9. '(' → logprob: -14.189741134643555
    10. '(K' → logprob: -14.314741134643555

Token 70: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 71: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 72: ' HIGH' (ID: 64120)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -1.4892704486846924
    2. '<|end|>' → logprob: -1.4892704486846924
    3. '+' → logprob: -1.6142704486846924
    4. 'HIGH' (adapté à ' HIGH') → logprob: -2.1142704486846924
    5. ')' → logprob: -2.3642704486846924
    6. ' HIGH' → logprob: -2.8642704486846924
    7. ' ' → logprob: -4.239270210266113
    8. '_HIGH' → logprob: -4.614270210266113
    9. '>' → logprob: -4.739270210266113
    10. '   ' → logprob: -5.114270210266113

Token 73: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0005240809405222535
    2. '+' → logprob: -8.375524520874023
    3. '=' → logprob: -8.875524520874023
    4. '+=(' → logprob: -9.500524520874023
    5. ']+=' → logprob: -10.625524520874023
    6. ' +=' → logprob: -10.625524520874023
    7. '+='' → logprob: -11.250524520874023
    8. '+="' → logprob: -12.125524520874023
    9. '>=' → logprob: -12.875524520874023
    10. '++' → logprob: -13.375524520874023

Token 74: 'N' (ID: 45)
  Prédit: 'STEP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'STEP' → logprob: -0.10071231424808502
    2. 'K' → logprob: -2.850712299346924
    3. 'N' → logprob: -3.850712299346924
    4. ' STEP' → logprob: -5.350712299346924
    5. 'STE' → logprob: -6.100712299346924
    6. 'step' → logprob: -6.225712299346924
    7. '(' → logprob: -6.725712299346924
    8. 'Step' → logprob: -6.850712299346924
    9. 'ST' → logprob: -6.850712299346924
    10. 'TOT' → logprob: -7.100712299346924

Token 75: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3054289221763611
    2. '<|end|>' → logprob: -2.055428981781006
    3. '*' → logprob: -2.555428981781006
    4. '-step' → logprob: -3.430428981781006
    5. '-' → logprob: -3.930428981781006
    6. ' +' → logprob: -6.430428981781006
    7. '<|end|>' → logprob: -6.805428981781006
    8. '
' → logprob: -7.805428981781006
    9. '-Step' → logprob: -7.805428981781006
    10. '*(' → logprob: -7.930428981781006

Token 76: 'STEP' (ID: 91410)
  Prédit: 'STEP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'STEP' → logprob: -0.01142102386802435
    2. '(ST' → logprob: -4.761421203613281
    3. 'ST' → logprob: -6.261421203613281
    4. '(' → logprob: -7.761421203613281
    5. '1' → logprob: -9.011421203613281
    6. '(S' → logprob: -9.386421203613281
    7. 'STE' → logprob: -9.386421203613281
    8. '_STEP' → logprob: -10.011421203613281
    9. '(step' → logprob: -10.136421203613281
    10. ' STEP' → logprob: -10.511421203613281

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0010930694406852126
    2. '<|end|>' → logprob: -7.376092910766602
    3. '+
' → logprob: -8.626092910766602
    4. ' +' → logprob: -8.876092910766602
    5. '   ' → logprob: -10.501092910766602
    6. '1' → logprob: -10.626092910766602
    7. ')' → logprob: -10.626092910766602
    8. '-' → logprob: -11.001092910766602
    9. '```' → logprob: -11.751092910766602
    10. '*' → logprob: -11.751092910766602

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004109507892280817
    2. '2' → logprob: -5.5041093826293945
    3. '0' → logprob: -11.379109382629395
    4. '<|end|>' → logprob: -12.004109382629395
    5. ' ' → logprob: -12.129109382629395
    6. '+' → logprob: -13.066609382629395
    7. '```' → logprob: -13.941609382629395
    8. '...' → logprob: -14.316609382629395
    9. '   ' → logprob: -14.629109382629395
    10. '>' → logprob: -14.879109382629395

Token 79: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36799880862236023
    2. '<|end|>' → logprob: -1.8679988384246826
    3. '+' → logprob: -2.4929988384246826
    4. '
' → logprob: -3.3679988384246826
    5. ' ' → logprob: -3.9929988384246826
    6. ')' → logprob: -5.2429986000061035
    7. '  ' → logprob: -5.4929986000061035
    8. '<|end|>' → logprob: -6.4929986000061035
    9. '```' → logprob: -6.6179986000061035
    10. '#' → logprob: -7.2429986000061035

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8584346175193787
    2. '<|end|>' → logprob: -1.2334346771240234
    3. '+' → logprob: -2.2334346771240234
    4. '
' → logprob: -2.4834346771240234
    5. ' ' → logprob: -2.7334346771240234
    6. '  ' → logprob: -4.983434677124023
    7. ')' → logprob: -5.108434677124023
    8. '<|end|>' → logprob: -5.358434677124023
    9. '```' → logprob: -5.983434677124023
    10. '    ' → logprob: -6.358434677124023

Token 81: ' if' (ID: 538)
  Prédit: 'TOT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TOT' → logprob: -0.1987433135509491
    2. ')' → logprob: -3.0737433433532715
    3. 'if' (adapté à ' if') → logprob: -3.0737433433532715
    4. '   ' → logprob: -3.9487433433532715
    5. ' if' → logprob: -4.1987433433532715
    6. '#' → logprob: -4.8237433433532715
    7. 'T' → logprob: -5.0737433433532715
    8. '[' → logprob: -5.5737433433532715
    9. '<|end|>' → logprob: -5.5737433433532715
    10. '+' → logprob: -5.5737433433532715

Token 82: ' STEP' (ID: 95913)
  Prédit: ' K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' K' → logprob: -0.3132888078689575
    2. ' STEP' → logprob: -2.063288688659668
    3. 'K' → logprob: -2.813288688659668
    4. ' LOW' → logprob: -2.938288688659668
    5. 'STEP' → logprob: -4.563288688659668
    6. 'LOW' → logprob: -5.313288688659668
    7. ' HIGH' → logprob: -5.313288688659668
    8. ' (' → logprob: -6.313288688659668
    9. 'HIGH' → logprob: -6.313288688659668
    10. ' ' → logprob: -6.688288688659668

Token 83: '>=' (ID: 20974)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -1.2067015171051025
    2. '==' → logprob: -1.5817015171051025
    3. ' <=' → logprob: -1.7067015171051025
    4. ' ==' → logprob: -1.8317015171051025
    5. '*' → logprob: -2.5817015171051025
    6. '%' → logprob: -3.7067015171051025
    7. ' *' → logprob: -4.206701278686523
    8. '>=' → logprob: -4.331701278686523
    9. ' >=' → logprob: -4.956701278686523
    10. '>' → logprob: -5.206701278686523

Token 84: 'K' (ID: 42)
  Prédit: 'K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'K' → logprob: -0.004750507418066263
    2. ' K' → logprob: -5.754750728607178
    3. 'N' → logprob: -7.129750728607178
    4. '1' → logprob: -7.879750728607178
    5. ' ' → logprob: -8.75475025177002
    6. '2' → logprob: -9.37975025177002
    7. '>K' → logprob: -10.25475025177002
    8. '3' → logprob: -10.87975025177002
    9. '<|end|>' → logprob: -11.25475025177002
    10. 'max' → logprob: -11.25475025177002

Token 85: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014573836699128151
    2. ':
' → logprob: -5.13957405090332
    3. '-' → logprob: -5.51457405090332
    4. ' and' → logprob: -5.88957405090332
    5. '   ' → logprob: -7.13957405090332
    6. ' :' → logprob: -8.13957405090332
    7. 'and' → logprob: -8.63957405090332
    8. '):' → logprob: -8.63957405090332
    9. '+' → logprob: -9.26457405090332
    10. '       ' → logprob: -9.76457405090332

Token 86: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00653868867084384
    2. '<|end|>' → logprob: -6.3815388679504395
    3. '   ' → logprob: -6.7565388679504395
    4. ' ' → logprob: -6.7565388679504395
    5. ' ' → logprob: -7.6315388679504395
    6. ',' → logprob: -7.8815388679504395
    7. ':' → logprob: -8.006538391113281
    8. '<|end|>' → logprob: -8.256538391113281
    9. '    ' → logprob: -9.256538391113281
    10. ')' → logprob: -9.506538391113281

Token 87: ' TOT' (ID: 197726)
  Prédit: 'TOT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'TOT' (adapté à ' TOT') → logprob: -0.05897548049688339
    2. ' TOT' → logprob: -3.0589754581451416
    3. '       ' → logprob: -4.933975696563721
    4. '   ' → logprob: -6.933975696563721
    5. '           ' → logprob: -7.683975696563721
    6. ' tot' → logprob: -8.746475219726562
    7. 'T' → logprob: -9.246475219726562
    8. ' ' → logprob: -9.308975219726562
    9. '        ' → logprob: -9.308975219726562
    10. 'TOD' → logprob: -9.371475219726562

Token 88: '+=(' (ID: 151033)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1606309860944748
    2. '+=(' → logprob: -1.9106309413909912
    3. ' +=' → logprob: -8.53563117980957
    4. '=(' → logprob: -9.28563117980957
    5. '+' → logprob: -9.91063117980957
    6. '+(' → logprob: -10.53563117980957
    7. ']+=' → logprob: -10.66063117980957
    8. '=' → logprob: -12.03563117980957
    9. '(' → logprob: -12.78563117980957
    10. '+='' → logprob: -13.03563117980957

Token 89: 'HIGH' (ID: 166090)
  Prédit: 'HIGH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HIGH' → logprob: -0.3466459810733795
    2. 'LOW' → logprob: -1.7216459512710571
    3. 'STEP' → logprob: -2.4716460704803467
    4. '(' → logprob: -3.9716460704803467
    5. 'pow' → logprob: -5.971645832061768
    6. '1' → logprob: -6.846645832061768
    7. '   ' → logprob: -7.096645832061768
    8. ' HIGH' → logprob: -7.346645832061768
    9. '(high' → logprob: -7.346645832061768
    10. '(N' → logprob: -7.721645832061768

Token 90: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.04964230954647064
    2. ' -' → logprob: -3.049642324447632
    3. '*' → logprob: -7.924642086029053
    4. '-L' → logprob: -8.424642562866211
    5. '-T' → logprob: -9.424642562866211
    6. '   ' → logprob: -9.424642562866211
    7. '-LAST' → logprob: -9.549642562866211
    8. '-)' → logprob: -10.049642562866211
    9. ')' → logprob: -10.174642562866211
    10. '-
' → logprob: -10.424642562866211

Token 91: 'LOW' (ID: 16839)
  Prédit: 'LOW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LOW' → logprob: -7.803360495017841e-05
    2. ' LOW' → logprob: -9.750078201293945
    3. '   ' → logprob: -11.375078201293945
    4. '(' → logprob: -12.250078201293945
    5. 'LO' → logprob: -14.125078201293945
    6. ' ' → logprob: -14.500078201293945
    7. '  ' → logprob: -15.000078201293945
    8. '    ' → logprob: -15.125078201293945
    9. 'HIGH' → logprob: -15.250078201293945
    10. '_LOW' → logprob: -15.250078201293945

Token 92: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.038611799478530884
    2. ')' → logprob: -3.538611888885498
    3. ' +' → logprob: -5.663611888885498
    4. ')*' → logprob: -5.663611888885498
    5. ')**' → logprob: -7.413611888885498
    6. ' )' → logprob: -7.788611888885498
    7. ')+' → logprob: -8.78861141204834
    8. '*' → logprob: -8.91361141204834
    9. '+)' → logprob: -9.03861141204834
    10. ')%' → logprob: -9.28861141204834

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -12.000015258789062
    3. '<|end|>' → logprob: -12.000015258789062
    4. '2' → logprob: -13.375015258789062
    5. ')' → logprob: -14.125015258789062
    6. '<|end|>' → logprob: -16.000015258789062
    7. '7' → logprob: -17.125015258789062
    8. '
' → logprob: -17.125015258789062
    9. '0' → logprob: -17.125015258789062
    10. '```' → logprob: -17.125015258789062

Token 94: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16123929619789124
    2. ')*' → logprob: -2.2862393856048584
    3. ' )' → logprob: -3.6612393856048584
    4. ')%' → logprob: -3.9112393856048584
    5. '*' → logprob: -7.786239147186279
    6. ')*(' → logprob: -8.161239624023438
    7. ')**' → logprob: -8.161239624023438
    8. ')
' → logprob: -9.161239624023438
    9. ' ' → logprob: -9.411239624023438
    10. '+' → logprob: -9.536239624023438

Token 95: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.0005538671393878758
    2. ' MOD' → logprob: -7.500554084777832
    3. '.MOD' → logprob: -14.750554084777832
    4. '_MOD' → logprob: -15.500554084777832
    5. ' ' → logprob: -15.750554084777832
    6. '(M' → logprob: -17.125553131103516
    7. 'MO' → logprob: -17.625553131103516
    8. '```' → logprob: -17.875553131103516
    9. '(' → logprob: -18.000553131103516
    10. 'Mod' → logprob: -18.625553131103516

Token 96: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.00037836082628928125
    2. 'OL' → logprob: -9.125378608703613
    3. 'ULO' → logprob: -9.625378608703613
    4. 'MOD' → logprob: -9.750378608703613
    5. 'L' → logprob: -9.750378608703613
    6. 'US' → logprob: -10.625378608703613
    7. 'ulus' → logprob: -11.375378608703613
    8. 'U' → logprob: -11.750378608703613
    9. 'ULE' → logprob: -12.125378608703613
    10. '   ' → logprob: -12.625378608703613

Token 97: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.8193366486229934e-05
    2. '   ' → logprob: -11.875018119812012
    3. 'US' → logprob: -12.000018119812012
    4. ' S' → logprob: -12.875018119812012
    5. '```' → logprob: -14.625018119812012
    6. '...' → logprob: -15.625018119812012
    7. '  ' → logprob: -16.125019073486328
    8. '	S' → logprob: -16.125019073486328
    9. '(S' → logprob: -16.125019073486328
    10. '[S' → logprob: -16.250019073486328

Token 98: '
' (ID: 198)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.538031280040741
    2. '<|end|>' → logprob: -1.2880313396453857
    3. ')' → logprob: -2.2880313396453857
    4. '<|end|>' → logprob: -4.288031101226807
    5. ')%' → logprob: -4.788031101226807
    6. '
' → logprob: -4.913031101226807
    7. ' %' → logprob: -5.788031101226807
    8. '   ' → logprob: -6.038031101226807
    9. ' ' → logprob: -7.538031101226807
    10. '%A' → logprob: -7.538031101226807

Token 99: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.36046597361564636
    2. '<|end|>' → logprob: -2.2354660034179688
    3. '%' → logprob: -2.3604660034179688
    4. ')' → logprob: -3.2354660034179688
    5. 'print' → logprob: -3.7354660034179688
    6. '\n' → logprob: -3.8604660034179688
    7. '+' → logprob: -5.360466003417969
    8. '```' → logprob: -5.985466003417969
    9. '*' → logprob: -6.235466003417969
    10. ' ' → logprob: -6.610466003417969

Token 100: ' TOT' (ID: 197726)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '%=' (ID: 83893)
  Prédit: '%='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.0391884371638298
    2. '%' → logprob: -3.2891883850097656
    3. ' %=' → logprob: -6.789188385009766
    4. ')%' → logprob: -11.539188385009766
    5. ' %' → logprob: -12.414188385009766
    6. '=' → logprob: -13.039188385009766
    7. '+=' → logprob: -13.414188385009766
    8. '%\' → logprob: -14.164188385009766
    9. '```' → logprob: -14.289188385009766
    10. ')' → logprob: -14.414188385009766

Token 102: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -1.9361264946837764e-07
    2. ' MOD' → logprob: -16.0
    3. 'MO' → logprob: -19.875
    4. '10' → logprob: -21.0
    5. '.MOD' → logprob: -21.5
    6. '```' → logprob: -21.75
    7. '100' → logprob: -22.25
    8. '_MOD' → logprob: -22.375
    9. '999' → logprob: -23.375
    10. '   ' → logprob: -23.625

Token 103: 'UL' (ID: 1949)
  Prédit: 'UL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UL' → logprob: -0.050274625420570374
    2. 'US' → logprob: -3.050274610519409
    3. 'L' → logprob: -6.550274848937988
    4. 'ULE' → logprob: -9.175274848937988
    5. 'OL' → logprob: -10.175274848937988
    6. 'U' → logprob: -10.550274848937988
    7. '```' → logprob: -11.300274848937988
    8. 'ulus' → logprob: -11.550274848937988
    9. 'MOD' → logprob: -11.675274848937988
    10. 'S' → logprob: -12.175274848937988

Token 104: 'US' (ID: 3042)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.0015149809187278152
    2. 'US' → logprob: -6.501514911651611
    3. 'SU' → logprob: -13.00151538848877
    4. 'L' → logprob: -13.12651538848877
    5. 'E' → logprob: -13.50151538848877
    6. 'R' → logprob: -13.62651538848877
    7. 'SUR' → logprob: -14.00151538848877
    8. 'SUM' → logprob: -14.25151538848877
    9. 'BUS' → logprob: -14.37651538848877
    10. 'ES' → logprob: -14.50151538848877

Token 105: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0025018174201250076
    2. ')' → logprob: -6.377501964569092
    3. '<|end|>' → logprob: -7.627501964569092
    4. ' print' → logprob: -9.127501487731934
    5. '
' → logprob: -9.127501487731934
    6. '#' → logprob: -10.002501487731934
    7. '```' → logprob: -11.627501487731934
    8. '#print' → logprob: -11.752501487731934
    9. 'return' → logprob: -11.877501487731934
    10. '\n' → logprob: -12.002501487731934

Token 106: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02574092708528042
    2. ')' → logprob: -3.9007408618927
    3. '<|end|>' → logprob: -6.025741100311279
    4. '#' → logprob: -6.650741100311279
    5. ' print' → logprob: -7.525741100311279
    6. ' ' → logprob: -8.275740623474121
    7. '
' → logprob: -8.900740623474121
    8. '```' → logprob: -9.150740623474121
    9. '#print' → logprob: -9.525740623474121
    10. '(print' → logprob: -10.150740623474121

Token 107: '(T' (ID: 7014)
  Prédit: '(T'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(T' → logprob: -0.16033105552196503
    2. '(' → logprob: -1.9103310108184814
    3. '()' → logprob: -9.535330772399902
    4. '((' → logprob: -10.535330772399902
    5. '(t' → logprob: -13.160330772399902
    6. ' (' → logprob: -13.660330772399902
    7. '('' → logprob: -13.660330772399902
    8. '(`' → logprob: -13.785330772399902
    9. '(
' → logprob: -13.910330772399902
    10. '("("' → logprob: -14.660330772399902

Token 108: 'OT' (ID: 2824)
  Prédit: 'OT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'OT' → logprob: -2.165027217415627e-05
    2. 'O' → logprob: -10.750021934509277
    3. 'OTAL' → logprob: -16.00002098083496
    4. ' OT' → logprob: -17.12502098083496
    5. ')' → logprob: -17.75002098083496
    6. '0' → logprob: -17.87502098083496
    7. 'О' → logprob: -18.62502098083496
    8. 'Ot' → logprob: -18.62502098083496
    9. 'OTS' → logprob: -19.37502098083496
    10. 'OL' → logprob: -19.50002098083496

Token 109: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. '))' → logprob: -16.5
    3. ' )' → logprob: -16.5
    4. ')`' → logprob: -16.75
    5. ')}' → logprob: -17.125
    6. ')
' → logprob: -17.75
    7. '),' → logprob: -18.75
    8. ').' → logprob: -20.0
    9. '')' → logprob: -20.0
    10. ')**' → logprob: -20.125


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 107
Tokens correctement prédits (1ère position, stricte): 42
Tokens correctement prédits (1ère position, avec adaptation): 43
Tokens correctement prédits (top 10): 70
Précision stricte (1ère position): 39.25%
Précision adaptée (1ère position): 40.19%
Précision (top 10): 65.42%
================================================================================
