================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:37
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
s = list(input())

max_count = 0
for i in range(n + 2):
    left = s[0:i]
    right = s[i:n+1]
    common = []
    for letter in left:
        if letter in right and letter not in common:
            common.append(letter)
    if len(common) >= max_count:
        max_count = len(common)
print(max_count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000444850797066465
    2. ''' → logprob: -8.500444412231445
    3. '('' → logprob: -9.375444412231445
    4. '(n' → logprob: -10.000444412231445
    5. '```' → logprob: -10.375444412231445
    6. '`' → logprob: -10.750444412231445
    7. '("("' → logprob: -11.125444412231445
    8. '(
' → logprob: -11.125444412231445
    9. ')' → logprob: -11.875444412231445
    10. '()' → logprob: -12.250444412231445

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.485151469707489
    2. ')' → logprob: -0.985151469707489
    3. '()' → logprob: -4.735151290893555
    4. '())' → logprob: -6.485151290893555
    5. '(
' → logprob: -8.485151290893555
    6. '```' → logprob: -9.735151290893555
    7. '")' → logprob: -9.985151290893555
    8. '[' → logprob: -9.985151290893555
    9. '(

' → logprob: -10.235151290893555
    10. '')' → logprob: -10.360151290893555

Token 5: 's' (ID: 82)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7043631672859192
    2. 'if' → logprob: -1.4543631076812744
    3. 'for' → logprob: -2.3293631076812744
    4. 's' → logprob: -2.4543631076812744
    5. 'f' → logprob: -4.3293633460998535
    6. ' ' → logprob: -4.4543633460998535
    7. 'x' → logprob: -4.8293633460998535
    8. ')' → logprob: -4.9543633460998535
    9. 'a' → logprob: -4.9543633460998535
    10. ''' → logprob: -5.0793633460998535

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7856029868125916
    2. '.' → logprob: -1.4106030464172363
    3. 'um' → logprob: -2.1606030464172363
    4. ' =' → logprob: -2.6606030464172363
    5. 'u' → logprob: -4.035603046417236
    6. '=' → logprob: -4.160603046417236
    7. 't' → logprob: -4.285603046417236
    8. 'tr' → logprob: -4.410603046417236
    9. '[i' → logprob: -4.910603046417236
    10. '+' → logprob: -5.035603046417236

Token 7: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2994360029697418
    2. '""' → logprob: -2.049436092376709
    3. ' input' → logprob: -2.549436092376709
    4. '''' → logprob: -3.424436092376709
    5. '"' → logprob: -5.049436092376709
    6. ''' → logprob: -5.299436092376709
    7. '0' → logprob: -6.049436092376709
    8. ' ""' → logprob: -6.299436092376709
    9. ' ''' → logprob: -6.299436092376709
    10. ' ' → logprob: -7.424436092376709

Token 8: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002647927321959287
    2. '(s' → logprob: -8.875265121459961
    3. '(
' → logprob: -10.750265121459961
    4. 's' → logprob: -10.875265121459961
    5. '("("' → logprob: -11.000265121459961
    6. '('' → logprob: -11.250265121459961
    7. '(range' → logprob: -11.250265121459961
    8. '()' → logprob: -11.500265121459961
    9. '(input' → logprob: -11.875265121459961
    10. ' (' → logprob: -12.250265121459961

Token 9: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.1635715365409851
    2. '()' → logprob: -1.9135715961456299
    3. '(' → logprob: -6.038571357727051
    4. ')' → logprob: -7.538571357727051
    5. '()))' → logprob: -8.03857135772705
    6. ' ())' → logprob: -10.28857135772705
    7. '('' → logprob: -10.41357135772705
    8. '().' → logprob: -11.66357135772705
    9. '();)' → logprob: -11.78857135772705
    10. '());' → logprob: -12.91357135772705

Token 10: 'max' (ID: 3228)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.02814575843513012
    2. 'i' → logprob: -4.028145790100098
    3. ' for' → logprob: -6.403145790100098
    4. 's' → logprob: -6.653145790100098
    5. 'if' → logprob: -6.778145790100098
    6. 'f' → logprob: -6.778145790100098
    7. '#' → logprob: -6.778145790100098
    8. '=' → logprob: -7.028145790100098
    9. ')' → logprob: -7.528145790100098
    10. '[' → logprob: -7.653145790100098

Token 11: '_count' (ID: 7536)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0024216759484261274
    2. '_len' → logprob: -6.752421855926514
    3. '(' → logprob: -7.377421855926514
    4. '_s' → logprob: -8.502421379089355
    5. '_count' → logprob: -8.627421379089355
    6. '_length' → logprob: -8.877421379089355
    7. ' _' → logprob: -11.127421379089355
    8. '(_)' → logprob: -11.252421379089355
    9. '_)' → logprob: -11.627421379089355
    10. 's' → logprob: -12.002421379089355

Token 12: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.018493587151169777
    2. '=' → logprob: -4.14349365234375
    3. '(' → logprob: -6.64349365234375
    4. ' =' → logprob: -7.14349365234375
    5. 's' → logprob: -8.89349365234375
    6. '_=' → logprob: -9.01849365234375
    7. '_space' → logprob: -10.39349365234375
    8. ' ' → logprob: -10.39349365234375
    9. ')' → logprob: -11.64349365234375
    10. ' _' → logprob: -12.01849365234375

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20162518322467804
    2. ' ' → logprob: -1.7016252279281616
    3. 's' → logprob: -9.701624870300293
    4. ' s' → logprob: -9.826624870300293
    5. ' max' → logprob: -10.951624870300293
    6. '1' → logprob: -11.076624870300293
    7. 'len' → logprob: -11.076624870300293
    8. ' n' → logprob: -11.201624870300293
    9. 'max' → logprob: -11.451624870300293
    10. 'n' → logprob: -11.701624870300293

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011664145858958364
    2. '1' → logprob: -7.876166343688965
    3. ' ' → logprob: -8.251166343688965
    4. 's' → logprob: -8.626166343688965
    5. '-' → logprob: -8.876166343688965
    6. 'max' → logprob: -9.001166343688965
    7. '[' → logprob: -10.251166343688965
    8. 'len' → logprob: -11.001166343688965
    9. 'n' → logprob: -11.126166343688965
    10. '{}' → logprob: -12.501166343688965

Token 15: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15347005426883698
    2. ' 
' → logprob: -3.278470039367676
    3. '<|end|>' → logprob: -3.278470039367676
    4. '_' → logprob: -3.653470039367676
    5. 'for' → logprob: -4.028470039367676
    6. ' for' → logprob: -4.153470039367676
    7. ',' → logprob: -6.028470039367676
    8. 'i' → logprob: -7.278470039367676
    9. 's' → logprob: -7.278470039367676
    10. 'n' → logprob: -7.653470039367676

Token 16: 'for' (ID: 1938)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7372057437896729
    2. 'c' → logprob: -1.7372057437896729
    3. 'count' → logprob: -1.7372057437896729
    4. 'for' → logprob: -2.237205743789673
    5. ' for' → logprob: -3.737205743789673
    6. 'max' → logprob: -4.362205505371094
    7. ' current' → logprob: -4.987205505371094
    8. '_' → logprob: -5.862205505371094
    9. 'cur' → logprob: -6.112205505371094
    10. 'i' → logprob: -6.237205505371094

Token 17: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.09007859975099564
    2. ' i' → logprob: -2.465078592300415
    3. '_' → logprob: -7.715078830718994
    4. 'i' → logprob: -7.840078830718994
    5. ' _' → logprob: -8.465078353881836
    6. '  ' → logprob: -9.715078353881836
    7. ' c' → logprob: -12.090078353881836
    8. ' ‌' → logprob: -12.090078353881836
    9. ' s' → logprob: -13.340078353881836
    10. ')' → logprob: -13.340078353881836

Token 18: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12697650492191315
    2. 'in' → logprob: -2.501976490020752
    3. 'n' → logprob: -3.376976490020752
    4. ' ' → logprob: -6.001976490020752
    5. ' n' → logprob: -7.501976490020752
    6. 'range' → logprob: -10.50197696685791
    7. '  ' → logprob: -10.50197696685791
    8. '	in' → logprob: -10.87697696685791
    9. ')' → logprob: -11.50197696685791
    10. '<|end|>' → logprob: -11.62697696685791

Token 19: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2811663746833801
    2. 'range' → logprob: -1.4061663150787354
    3. '	range' → logprob: -12.406166076660156
    4. 's' → logprob: -12.906166076660156
    5. ' ' → logprob: -12.906166076660156
    6. '(range' → logprob: -13.156166076660156
    7. ' s' → logprob: -13.406166076660156
    8. '```' → logprob: -13.781166076660156
    9. ' xrange' → logprob: -14.406166076660156
    10. ')' → logprob: -15.031166076660156

Token 20: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12929731607437134
    2. '(' → logprob: -2.1292972564697266
    3. '(len' → logprob: -6.129297256469727
    4. ' (' → logprob: -8.879297256469727
    5. '(range' → logprob: -10.129297256469727
    6. '(max' → logprob: -13.254297256469727
    7. '(length' → logprob: -13.254297256469727
    8. ' ' → logprob: -13.504297256469727
    9. ' n' → logprob: -14.004297256469727
    10. 'n' → logprob: -14.004297256469727

Token 21: ' +' (ID: 659)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.009601308964192867
    2. ' ):' → logprob: -4.88460111618042
    3. ')' → logprob: -6.75960111618042
    4. '):
' → logprob: -8.009601593017578
    5. '-' → logprob: -8.509601593017578
    6. '+' → logprob: -8.509601593017578
    7. ' -' → logprob: -10.259601593017578
    8. ' )' → logprob: -10.759601593017578
    9. ' ' → logprob: -11.134601593017578
    10. ' +' → logprob: -11.634601593017578

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014523148536682
    2. ' ' → logprob: -1.7014522552490234
    3. '  ' → logprob: -11.326452255249023
    4. '   ' → logprob: -11.826452255249023
    5. '2' → logprob: -12.076452255249023
    6. ' n' → logprob: -12.451452255249023
    7. 'n' → logprob: -13.638952255249023
    8. '7' → logprob: -13.701452255249023
    9. '-' → logprob: -13.826452255249023
    10. '+' → logprob: -13.888952255249023

Token 23: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.925185440806672e-05
    2. ' ' → logprob: -9.250099182128906
    3. '2' → logprob: -13.500099182128906
    4. '0' → logprob: -14.500099182128906
    5. '   ' → logprob: -15.125099182128906
    6. 'i' → logprob: -15.375099182128906
    7. '  ' → logprob: -15.500099182128906
    8. '-' → logprob: -15.750099182128906
    9. '7' → logprob: -16.750099182128906
    10. ')' → logprob: -17.250099182128906

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03413154184818268
    2. ' ):' → logprob: -3.4091315269470215
    3. ')' → logprob: -8.15913200378418
    4. '):
' → logprob: -8.65913200378418
    5. ' )' → logprob: -11.53413200378418
    6. ' ' → logprob: -12.15913200378418
    7. ' ):
' → logprob: -12.53413200378418
    8. '-' → logprob: -13.03413200378418
    9. ':' → logprob: -13.40913200378418
    10. ' -' → logprob: -14.15913200378418

Token 25: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13467305898666382
    2. '    ' → logprob: -2.5096731185913086
    3. '   ' → logprob: -3.2596731185913086
    4. '  ' → logprob: -6.134673118591309
    5. '<|end|>' → logprob: -6.634673118591309
    6. ' if' → logprob: -7.384673118591309
    7. ' for' → logprob: -7.634673118591309
    8. '_' → logprob: -8.009673118591309
    9. 's' → logprob: -8.634673118591309
    10. ' 
' → logprob: -8.884673118591309

Token 26: ' left' (ID: 3561)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14259327948093414
    2. '    ' → logprob: -3.0175933837890625
    3. ' for' → logprob: -3.2675933837890625
    4. ' if' → logprob: -4.0175933837890625
    5. '   ' → logprob: -4.6425933837890625
    6. 'for' → logprob: -5.0175933837890625
    7. '  ' → logprob: -5.6425933837890625
    8. ' s' → logprob: -6.5175933837890625
    9. ' max' → logprob: -6.5175933837890625
    10. '<|end|>' → logprob: -6.7675933837890625

Token 27: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.025692010298371315
    2. '_count' → logprob: -3.9006919860839844
    3. ' _' → logprob: -5.650691986083984
    4. '_counts' → logprob: -7.525691986083984
    5. ' =' → logprob: -7.900691986083984
    6. '_space' → logprob: -8.525691986083984
    7. '_max' → logprob: -9.275691986083984
    8. ')' → logprob: -9.400691986083984
    9. '_s' → logprob: -10.025691986083984
    10. '_length' → logprob: -10.400691986083984

Token 28: ' s' (ID: 265)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -1.0329076051712036
    2. 'i' → logprob: -1.5329076051712036
    3. ' max' → logprob: -2.032907485961914
    4. '0' → logprob: -2.282907485961914
    5. ' ' → logprob: -2.657907485961914
    6. 'max' → logprob: -2.657907485961914
    7. ' s' → logprob: -3.532907485961914
    8. 's' → logprob: -4.282907485961914
    9. ' min' → logprob: -5.532907485961914
    10. 'min' → logprob: -6.282907485961914

Token 29: '[' (ID: 58)
  Prédit: '[:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[:' → logprob: -0.015560208819806576
    2. '[i' → logprob: -4.390560150146484
    3. '[max' → logprob: -6.015560150146484
    4. '[:]' → logprob: -7.765560150146484
    5. '[' → logprob: -8.890560150146484
    6. '[:-' → logprob: -11.390560150146484
    7. 'max' → logprob: -11.515560150146484
    8. ' [:' → logprob: -12.140560150146484
    9. '[::-' → logprob: -12.140560150146484
    10. '.copy' → logprob: -12.890560150146484

Token 30: '0' (ID: 15)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.06517478823661804
    2. 'max' → logprob: -3.4401748180389404
    3. ' i' → logprob: -4.315174579620361
    4. ' max' → logprob: -4.315174579620361
    5. '[max' → logprob: -6.815174579620361
    6. ':' → logprob: -7.440174579620361
    7. '0' → logprob: -7.690174579620361
    8. ':max' → logprob: -7.815174579620361
    9. '(max' → logprob: -7.940174579620361
    10. ':i' → logprob: -8.06517505645752

Token 31: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.00044056313345208764
    2. ':' → logprob: -7.87544059753418
    3. ' :' → logprob: -10.50044059753418
    4. 'i' → logprob: -10.87544059753418
    5. ']' → logprob: -11.62544059753418
    6. '   ' → logprob: -13.75044059753418
    7. ' ' → logprob: -14.00044059753418
    8. ' i' → logprob: -14.12544059753418
    9. ',i' → logprob: -14.62544059753418
    10. ':]' → logprob: -14.62544059753418

Token 32: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01335680391639471
    2. '])' → logprob: -4.513356685638428
    3. '].' → logprob: -6.638356685638428
    4. ' ]' → logprob: -7.638356685638428
    5. '+' → logprob: -8.263357162475586
    6. ']
' → logprob: -8.888357162475586
    7. ')' → logprob: -11.013357162475586
    8. ']+' → logprob: -11.013357162475586
    9. '-' → logprob: -11.388357162475586
    10. '   ' → logprob: -11.388357162475586

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3350459933280945
    2. 'right' → logprob: -1.8350460529327393
    3. 's' → logprob: -2.3350460529327393
    4. ' right' → logprob: -4.71004581451416
    5. 'i' → logprob: -4.96004581451416
    6. '  ' → logprob: -6.71004581451416
    7. 'r' → logprob: -6.83504581451416
    8. ' ' → logprob: -7.21004581451416
    9. '    ' → logprob: -7.21004581451416
    10. '+' → logprob: -7.21004581451416

Token 34: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.27329251170158386
    2. ' right' → logprob: -1.5232925415039062
    3. 's' → logprob: -4.023292541503906
    4. ' s' → logprob: -5.898292541503906
    5. 'middle' → logprob: -9.273292541503906
    6. ' i' → logprob: -9.773292541503906
    7. '   ' → logprob: -9.898292541503906
    8. 'i' → logprob: -9.898292541503906
    9. '_right' → logprob: -10.148292541503906
    10. '[right' → logprob: -10.398292541503906

Token 35: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995110958814621
    2. '=' → logprob: -2.694951057434082
    3. '[' → logprob: -11.944951057434082
    4. 's' → logprob: -12.194951057434082
    5. '=s' → logprob: -13.569951057434082
    6. ' ' → logprob: -14.194951057434082
    7. '[i' → logprob: -14.944951057434082
    8. ' =[' → logprob: -15.569951057434082
    9. ')' → logprob: -15.694951057434082
    10. ']' → logprob: -16.0699520111084

Token 36: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.043029215186834335
    2. ' s' → logprob: -3.168029308319092
    3. '[' → logprob: -11.543028831481934
    4. ' ' → logprob: -11.668028831481934
    5. '   ' → logprob: -12.543028831481934
    6. '  ' → logprob: -13.293028831481934
    7. '[]' → logprob: -13.418028831481934
    8. ' [' → logprob: -13.543028831481934
    9. '[s' → logprob: -14.043028831481934
    10. '`s' → logprob: -14.668028831481934

Token 37: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.625000953674316
    3. '[I' → logprob: -15.250000953674316
    4. 'i' → logprob: -15.625000953674316
    5. '```' → logprob: -16.500001907348633
    6. '[-' → logprob: -17.125001907348633
    7. '[:' → logprob: -17.625001907348633
    8. '[s' → logprob: -17.750001907348633
    9. '[j' → logprob: -18.125001907348633
    10. '[n' → logprob: -18.250001907348633

Token 38: ':n' (ID: 20109)
  Prédit: ':]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':]' → logprob: -0.018117515370249748
    2. ':' → logprob: -4.393117427825928
    3. ']' → logprob: -5.518117427825928
    4. '+' → logprob: -6.518117427825928
    5. ':n' → logprob: -9.893117904663086
    6. ' :]' → logprob: -11.018117904663086
    7. ':]
' → logprob: -12.018117904663086
    8. ']+' → logprob: -12.393117904663086
    9. ':i' → logprob: -12.768117904663086
    10. '+n' → logprob: -12.768117904663086

Token 39: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006922461092472076
    2. '+' → logprob: -5.131922245025635
    3. '])' → logprob: -7.006922245025635
    4. ']+' → logprob: -10.756922721862793
    5. ' ]' → logprob: -11.006922721862793
    6. '+]' → logprob: -11.131922721862793
    7. '+i' → logprob: -12.131922721862793
    8. ']))' → logprob: -12.256922721862793
    9. ' +' → logprob: -12.506922721862793
    10. '-' → logprob: -12.756922721862793

Token 40: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.11690224707126617
    2. ']' → logprob: -2.8669023513793945
    3. '1' → logprob: -2.9919023513793945
    4. ' ' → logprob: -6.3669023513793945
    5. '0' → logprob: -7.7419023513793945
    6. 'i' → logprob: -7.8669023513793945
    7. '])' → logprob: -7.9919023513793945
    8. '+' → logprob: -9.491902351379395
    9. '<|end|>' → logprob: -10.241902351379395
    10. '<|end|>' → logprob: -10.366902351379395

Token 41: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039373442996293306
    2. '+' → logprob: -8.250393867492676
    3. ' ]' → logprob: -9.500393867492676
    4. ':]' → logprob: -10.625393867492676
    5. '+]' → logprob: -12.125393867492676
    6. ')' → logprob: -12.250393867492676
    7. '])' → logprob: -12.375393867492676
    8. '-' → logprob: -12.625393867492676
    9. '   ' → logprob: -13.250393867492676
    10. '+i' → logprob: -13.250393867492676

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6527454853057861
    2. ' ' → logprob: -1.0277454853057861
    3. '<|end|>' → logprob: -3.027745485305786
    4. '  ' → logprob: -4.527745246887207
    5. ' if' → logprob: -4.652745246887207
    6. ')' → logprob: -5.027745246887207
    7. '    
' → logprob: -5.027745246887207
    8. '    ' → logprob: -5.277745246887207
    9. ' 
' → logprob: -5.277745246887207
    10. '[' → logprob: -5.277745246887207

Token 43: ' common' (ID: 5355)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6370953321456909
    2. '   ' → logprob: -1.762095332145691
    3. ' if' → logprob: -2.6370954513549805
    4. ' ' → logprob: -3.0120954513549805
    5. ' count' → logprob: -3.1370954513549805
    6. 'max' → logprob: -3.5120954513549805
    7. 'if' → logprob: -3.8870954513549805
    8. ' for' → logprob: -4.0120954513549805
    9. 'for' → logprob: -4.0120954513549805
    10. ')' → logprob: -4.7620954513549805

Token 44: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10911836475133896
    2. '_count' → logprob: -2.3591184616088867
    3. ' =' → logprob: -5.734118461608887
    4. '_length' → logprob: -6.234118461608887
    5. '=' → logprob: -6.484118461608887
    6. '_prefix' → logprob: -7.359118461608887
    7. '_counts' → logprob: -7.484118461608887
    8. '_len' → logprob: -7.859118461608887
    9. '_set' → logprob: -8.734118461608887
    10. '_chars' → logprob: -9.234118461608887

Token 45: ' []
' (ID: 8911)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10686212033033371
    2. '0' → logprob: -2.9818620681762695
    3. 'len' → logprob: -3.1068620681762695
    4. ' set' → logprob: -5.9818620681762695
    5. '[' → logprob: -6.8568620681762695
    6. 'sum' → logprob: -7.1068620681762695
    7. 'left' → logprob: -7.8568620681762695
    8. ' len' → logprob: -8.48186206817627
    9. 'list' → logprob: -8.60686206817627
    10. '[len' → logprob: -8.73186206817627

Token 46: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5965990424156189
    2. ' for' → logprob: -0.9715990424156189
    3. '   ' → logprob: -2.8465991020202637
    4. ' ' → logprob: -4.721599102020264
    5. ' 
' → logprob: -6.721599102020264
    6. '    
' → logprob: -7.096599102020264
    7. '    ' → logprob: -7.346599102020264
    8. '	for' → logprob: -7.721599102020264
    9. '  ' → logprob: -8.721598625183105
    10. '  
' → logprob: -9.221598625183105

Token 47: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0414687804877758
    2. ' for' → logprob: -3.291468858718872
    3. 'j' → logprob: -6.166468620300293
    4. '   ' → logprob: -6.791468620300293
    5. ' ' → logprob: -9.041468620300293
    6. 'k' → logprob: -10.791468620300293
    7. ' j' → logprob: -11.416468620300293
    8. '  ' → logprob: -11.791468620300293
    9. '	for' → logprob: -11.916468620300293
    10. '_' → logprob: -11.916468620300293

Token 48: ' letter' (ID: 10263)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7919968962669373
    2. 'c' → logprob: -1.291996955871582
    3. 'x' → logprob: -1.541996955871582
    4. 'ch' → logprob: -4.291996955871582
    5. 'l' → logprob: -4.541996955871582
    6. 'a' → logprob: -4.666996955871582
    7. ' j' → logprob: -4.666996955871582
    8. ' c' → logprob: -4.916996955871582
    9. ' x' → logprob: -5.916996955871582
    10. 'k' → logprob: -5.916996955871582

Token 49: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04926722124218941
    2. 'in' → logprob: -3.049267292022705
    3. ' ' → logprob: -8.299266815185547
    4. '  ' → logprob: -8.549266815185547
    5. '   ' → logprob: -9.299266815185547
    6. 's' → logprob: -9.674266815185547
    7. '    ' → logprob: -10.174266815185547
    8. ' i' → logprob: -11.549266815185547
    9. 'i' → logprob: -12.049266815185547
    10. '<|end|>' → logprob: -12.299266815185547

Token 50: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.043233033269643784
    2. 'set' → logprob: -4.0432329177856445
    3. 'right' → logprob: -4.1682329177856445
    4. ' left' → logprob: -4.7932329177856445
    5. ' set' → logprob: -7.1682329177856445
    6. ' right' → logprob: -9.293232917785645
    7. ' ' → logprob: -10.168232917785645
    8. 'lef' → logprob: -10.168232917785645
    9. '   ' → logprob: -10.543232917785645
    10. 'range' → logprob: -11.543232917785645

Token 51: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0034292428754270077
    2. ':
' → logprob: -6.378429412841797
    3. ' if' → logprob: -7.378429412841797
    4. '<|end|>' → logprob: -8.003429412841797
    5. ' :' → logprob: -8.753429412841797
    6. '   ' → logprob: -8.878429412841797
    7. '[::-' → logprob: -9.253429412841797
    8. '<|end|>' → logprob: -9.878429412841797
    9. ''s' → logprob: -10.128429412841797
    10. '):' → logprob: -10.128429412841797

Token 52: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7519882917404175
    2. '       ' → logprob: -1.0019882917404175
    3. '    ' → logprob: -2.376988410949707
    4. ' if' → logprob: -3.001988410949707
    5. '<|end|>' → logprob: -4.501988410949707
    6. '        ' → logprob: -5.876988410949707
    7. '   ' → logprob: -6.251988410949707
    8. 'if' → logprob: -7.251988410949707
    9. ' 
' → logprob: -7.376988410949707
    10. '<|end|>' → logprob: -8.751988410949707

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.00759384548291564
    2. 'if' (adapté à ' if') → logprob: -5.757593631744385
    3. '    ' → logprob: -5.882593631744385
    4. ' ' → logprob: -7.382593631744385
    5. '       ' → logprob: -7.507593631744385
    6. ' common' → logprob: -8.257594108581543
    7. '   ' → logprob: -9.257594108581543
    8. '        ' → logprob: -11.007594108581543
    9. ' 
' → logprob: -11.257594108581543
    10. '	if' → logprob: -11.507594108581543

Token 54: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.3869648873806
    2. 'letter' → logprob: -1.1369649171829224
    3. ' right' → logprob: -10.886964797973633
    4. '(letter' → logprob: -11.386964797973633
    5. ' ' → logprob: -11.511964797973633
    6. 'right' → logprob: -11.886964797973633
    7. '   ' → logprob: -11.886964797973633
    8. ' left' → logprob: -12.074464797973633
    9. ' lettre' → logprob: -12.074464797973633
    10. 'left' → logprob: -12.261964797973633

Token 55: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001307617872953415
    2. 'in' → logprob: -6.751307487487793
    3. ' ' → logprob: -9.001307487487793
    4. ' not' → logprob: -11.626307487487793
    5. ' i' → logprob: -13.751307487487793
    6. '<|end|>' → logprob: -13.876307487487793
    7. 's' → logprob: -14.251307487487793
    8. 'n' → logprob: -14.751307487487793
    9. '<|end|>' → logprob: -14.876307487487793
    10. 'not' → logprob: -15.001307487487793

Token 56: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.14268310368061066
    2. ' right' → logprob: -2.0176830291748047
    3. '   ' → logprob: -12.517683029174805
    4. ' ' → logprob: -13.642683029174805
    5. 'r' → logprob: -14.142683029174805
    6. '	right' → logprob: -14.392683029174805
    7. '  ' → logprob: -14.642683029174805
    8. '[right' → logprob: -14.892683029174805
    9. 'rights' → logprob: -15.392683029174805
    10. 'rig' → logprob: -15.642683029174805

Token 57: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.28785473108291626
    2. ':' → logprob: -1.4128546714782715
    3. ':
' → logprob: -5.5378546714782715
    4. 'and' → logprob: -6.5378546714782715
    5. '           ' → logprob: -7.0378546714782715
    6. '       ' → logprob: -8.66285514831543
    7. ' :' → logprob: -9.16285514831543
    8. '   ' → logprob: -10.78785514831543
    9. '        ' → logprob: -10.91285514831543
    10. '):' → logprob: -11.03785514831543

Token 58: ' letter' (ID: 10263)
  Prédit: ' letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' letter' → logprob: -0.06674367189407349
    2. 'letter' → logprob: -2.9417436122894287
    3. ' not' → logprob: -4.566743850708008
    4. 'not' → logprob: -7.066743850708008
    5. '(letter' → logprob: -8.316743850708008
    6. ' common' → logprob: -9.691743850708008
    7. '   ' → logprob: -9.816743850708008
    8. '    ' → logprob: -9.941743850708008
    9. ' right' → logprob: -10.629243850708008
    10. ' ' → logprob: -11.066743850708008

Token 59: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0034596563782542944
    2. 'not' → logprob: -5.753459453582764
    3. '   ' → logprob: -10.378459930419922
    4. ' in' → logprob: -10.378459930419922
    5. ':' → logprob: -10.503459930419922
    6. ' and' → logprob: -10.753459930419922
    7. ' ' → logprob: -10.753459930419922
    8. 's' → logprob: -11.003459930419922
    9. ' !=' → logprob: -11.253459930419922
    10. ')' → logprob: -11.253459930419922

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10032517462968826
    2. 'in' → logprob: -2.350325107574463
    3. '<|end|>' → logprob: -9.475325584411621
    4. ' ' → logprob: -10.850325584411621
    5. '<|end|>' → logprob: -11.975325584411621
    6. ' common' → logprob: -12.475325584411621
    7. '  ' → logprob: -12.975325584411621
    8. '	in' → logprob: -12.975325584411621
    9. 'common' → logprob: -13.475325584411621
    10. '   ' → logprob: -14.100325584411621

Token 61: ' common' (ID: 5355)
  Prédit: 'common'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'common' → logprob: -0.003179855877533555
    2. ' common' → logprob: -5.753180027008057
    3. '	common' → logprob: -13.503179550170898
    4. '(common' → logprob: -14.753179550170898
    5. '   ' → logprob: -16.7531795501709
    6. '_common' → logprob: -17.0031795501709
    7. ' ' → logprob: -17.2531795501709
    8. ')' → logprob: -17.3781795501709
    9. '```' → logprob: -17.3781795501709
    10. '<|end|>' → logprob: -17.3781795501709

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001966104842722416
    2. ':
' → logprob: -6.2519659996032715
    3. ' and' → logprob: -11.37696647644043
    4. ' :' → logprob: -11.87696647644043
    5. '):' → logprob: -12.00196647644043
    6. '   ' → logprob: -12.87696647644043
    7. '=' → logprob: -13.00196647644043
    8. '):
' → logprob: -13.12696647644043
    9. ',' → logprob: -14.00196647644043
    10. '       ' → logprob: -14.37696647644043

Token 63: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6634231805801392
    2. '       ' → logprob: -0.9134231805801392
    3. 'common' → logprob: -3.1634230613708496
    4. ' common' → logprob: -3.6634230613708496
    5. ':' → logprob: -5.03842306137085
    6. '	common' → logprob: -6.28842306137085
    7. '(common' → logprob: -6.78842306137085
    8. '        
' → logprob: -6.78842306137085
    9. '   ' → logprob: -7.03842306137085
    10. ',' → logprob: -7.03842306137085

Token 64: ' common' (ID: 5355)
  Prédit: ' common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' common' → logprob: -0.07079874724149704
    2. 'common' (adapté à ' common') → logprob: -2.820798635482788
    3. '               ' → logprob: -5.320798873901367
    4. '           ' → logprob: -5.695798873901367
    5. '	common' → logprob: -7.820798873901367
    6. '       ' → logprob: -9.445798873901367
    7. '(common' → logprob: -10.445798873901367
    8. '   ' → logprob: -11.695798873901367
    9. '_common' → logprob: -12.195798873901367
    10. '.common' → logprob: -12.820798873901367

Token 65: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.038095541298389435
    2. '.' → logprob: -3.288095474243164
    3. '.add' → logprob: -10.288095474243164
    4. '.app' → logprob: -11.538095474243164
    5. '.setdefault' → logprob: -12.913095474243164
    6. '.extend' → logprob: -13.163095474243164
    7. '.push' → logprob: -13.663095474243164
    8. '.ap' → logprob: -13.663095474243164
    9. ' .' → logprob: -13.788095474243164
    10. '.Append' → logprob: -14.538095474243164

Token 66: '(letter' (ID: 142899)
  Prédit: '(letter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(letter' → logprob: -0.003178544342517853
    2. '(' → logprob: -5.753178596496582
    3. '(let' → logprob: -14.503178596496582
    4. '(l' → logprob: -16.003177642822266
    5. '(word' → logprob: -17.128177642822266
    6. ' (' → logprob: -17.128177642822266
    7. '(
' → logprob: -17.253177642822266
    8. '(left' → logprob: -17.253177642822266
    9. '(le' → logprob: -17.378177642822266
    10. 'letter' → logprob: -17.628177642822266

Token 67: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.24179228907451e-05
    2. ')
' → logprob: -10.125061988830566
    3. '   ' → logprob: -11.750061988830566
    4. '<|end|>' → logprob: -12.000061988830566
    5. '       ' → logprob: -12.625061988830566
    6. '<|end|>' → logprob: -14.125061988830566
    7. '           ' → logprob: -14.375061988830566
    8. '```' → logprob: -14.500061988830566
    9. ')return' → logprob: -14.875061988830566
    10. ' )' → logprob: -15.000061988830566

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1284157782793045
    2. '
' → logprob: -2.378415822982788
    3. '    
' → logprob: -4.378415584564209
    4. 'max' → logprob: -5.253415584564209
    5. '<|end|>' → logprob: -6.128415584564209
    6. ')' → logprob: -6.753415584564209
    7. ' ' → logprob: -7.003415584564209
    8. '  
' → logprob: -7.128415584564209
    9. ',' → logprob: -7.378415584564209
    10. '   
' → logprob: -7.628415584564209

Token 69: ' if' (ID: 538)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13305246829986572
    2. '   ' → logprob: -2.258052349090576
    3. 'if' (adapté à ' if') → logprob: -4.758052349090576
    4. '
' → logprob: -5.133052349090576
    5. ' max' → logprob: -6.008052349090576
    6. ' if' → logprob: -7.133052349090576
    7. ' ' → logprob: -7.258052349090576
    8. '    
' → logprob: -7.258052349090576
    9. '	max' → logprob: -8.258052825927734
    10. '  ' → logprob: -8.633052825927734

Token 70: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.008996007032692432
    2. 'len' → logprob: -4.75899600982666
    3. ' max' → logprob: -7.88399600982666
    4. 'max' → logprob: -12.38399600982666
    5. '(len' → logprob: -15.00899600982666
    6. '   ' → logprob: -16.133995056152344
    7. '	len' → logprob: -17.383995056152344
    8. ' ' → logprob: -19.633995056152344
    9. '=len' → logprob: -19.633995056152344
    10. '[len' → logprob: -20.633995056152344

Token 71: '(common' (ID: 114383)
  Prédit: '(common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(common' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.62501049041748
    3. 'common' → logprob: -13.62501049041748
    4. ' (' → logprob: -16.750009536743164
    5. ' common' → logprob: -17.000009536743164
    6. '	common' → logprob: -17.000009536743164
    7. '(max' → logprob: -17.625009536743164
    8. '(com' → logprob: -18.000009536743164
    9. '(comm' → logprob: -18.625009536743164
    10. '(Common' → logprob: -19.375009536743164

Token 72: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9408942461013794
    2. '>' → logprob: -1.1908942461013794
    3. ' >' → logprob: -1.1908942461013794
    4. ')>' → logprob: -6.56589412689209
    5. ' ' → logprob: -8.31589412689209
    6. ' )' → logprob: -8.81589412689209
    7. '">' → logprob: -12.31589412689209
    8. '<|end|>' → logprob: -12.69089412689209
    9. ' ' → logprob: -12.81589412689209
    10. '   ' → logprob: -12.81589412689209

Token 73: ' >=' (ID: 5064)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6932087540626526
    2. ' >' → logprob: -0.6932087540626526
    3. ' ' → logprob: -9.943208694458008
    4. ')' → logprob: -12.818208694458008
    5. ' ' → logprob: -13.193208694458008
    6. '<|end|>' → logprob: -13.193208694458008
    7. '">' → logprob: -13.693208694458008
    8. '()>' → logprob: -14.193208694458008
    9. ')>' → logprob: -14.443208694458008
    10. '   ' → logprob: -14.693208694458008

Token 74: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16128140687942505
    2. ' max' → logprob: -1.9112813472747803
    3. ' ' → logprob: -7.536281585693359
    4. '   ' → logprob: -8.41128158569336
    5. '1' → logprob: -9.03628158569336
    6. '2' → logprob: -9.28628158569336
    7. '3' → logprob: -10.41128158569336
    8. '	max' → logprob: -10.78628158569336
    9. '  ' → logprob: -11.53628158569336
    10. '4' → logprob: -11.91128158569336

Token 75: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.4285862057004124e-05
    2. '_' → logprob: -11.25003433227539
    3. ' _' → logprob: -11.25003433227539
    4. '_counts' → logprob: -13.12503433227539
    5. '_co' → logprob: -13.75003433227539
    6. '```' → logprob: -14.00003433227539
    7. '_counter' → logprob: -14.37503433227539
    8. '_c' → logprob: -14.62503433227539
    9. '_max' → logprob: -14.75003433227539
    10. '_length' → logprob: -14.87503433227539

Token 76: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0039601437747478485
    2. ':
' → logprob: -5.628960132598877
    3. '       ' → logprob: -8.878960609436035
    4. '   ' → logprob: -9.253960609436035
    5. ' :' → logprob: -9.878960609436035
    6. '):' → logprob: -10.503960609436035
    7. '=' → logprob: -11.003960609436035
    8. '):
' → logprob: -12.128960609436035
    9. ':max' → logprob: -12.253960609436035
    10. 'max' → logprob: -12.503960609436035

Token 77: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0021046982146799564
    2. ' max' → logprob: -6.877104759216309
    3. 'max' → logprob: -7.502104759216309
    4. '   ' → logprob: -7.752104759216309
    5. '           ' → logprob: -10.877104759216309
    6. '```' → logprob: -11.502104759216309
    7. '      ' → logprob: -11.627104759216309
    8. '(max' → logprob: -11.752104759216309
    9. '    ' → logprob: -11.877104759216309
    10. ' ' → logprob: -11.877104759216309

Token 78: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6874240636825562
    2. '       ' → logprob: -1.1874240636825562
    3. 'max' (adapté à ' max') → logprob: -1.8124240636825562
    4. '   ' → logprob: -3.5624241828918457
    5. '           ' → logprob: -8.312423706054688
    6. '```' → logprob: -9.312423706054688
    7. '	max' → logprob: -9.812423706054688
    8. ' ' → logprob: -10.312423706054688
    9. '    ' → logprob: -11.062423706054688
    10. '[max' → logprob: -11.562423706054688

Token 79: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00011868205183418468
    2. '_' → logprob: -9.625118255615234
    3. ' _' → logprob: -10.000118255615234
    4. '_c' → logprob: -12.750118255615234
    5. '```' → logprob: -14.125118255615234
    6. '_co' → logprob: -14.375118255615234
    7. '_counts' → logprob: -14.750118255615234
    8. '\' → logprob: -15.250118255615234
    9. '_counter' → logprob: -15.375118255615234
    10. '_code' → logprob: -15.375118255615234

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861456897109747
    2. '=' → logprob: -4.758614540100098
    3. ' ' → logprob: -16.758615493774414
    4. '=len' → logprob: -16.758615493774414
    5. ' +=' → logprob: -19.633615493774414
    6. ' =)' → logprob: -20.008615493774414
    7. '＝' → logprob: -20.133615493774414
    8. ' =
' → logprob: -20.758615493774414
    9. ',' → logprob: -20.883615493774414
    10. '=int' → logprob: -21.383615493774414

Token 81: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.38687264919281006
    2. 'len' → logprob: -1.13687264919281
    3. '(len' → logprob: -14.011872291564941
    4. '	len' → logprob: -14.886872291564941
    5. '[len' → logprob: -15.011872291564941
    6. '=len' → logprob: -16.136873245239258
    7. ' ' → logprob: -17.136873245239258
    8. '<len' → logprob: -17.636873245239258
    9. ',len' → logprob: -18.511873245239258
    10. 'leni' → logprob: -18.636873245239258

Token 82: '(common' (ID: 114383)
  Prédit: '(common'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(common' → logprob: -0.00039647609810344875
    2. '(' → logprob: -8.125396728515625
    3. 'common' → logprob: -9.250396728515625
    4. '(com' → logprob: -12.875396728515625
    5. '(comm' → logprob: -13.875396728515625
    6. ' common' → logprob: -15.000396728515625
    7. '	common' → logprob: -15.625396728515625
    8. '(Common' → logprob: -16.875396728515625
    9. '(comment' → logprob: -17.500396728515625
    10. '(c' → logprob: -17.500396728515625

Token 83: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006776464288122952
    2. ')
' → logprob: -8.125678062438965
    3. '<|end|>' → logprob: -8.125678062438965
    4. ')return' → logprob: -10.000678062438965
    5. '<|end|>' → logprob: -11.250678062438965
    6. '
' → logprob: -12.000678062438965
    7. '   ' → logprob: -12.250678062438965
    8. '```' → logprob: -12.250678062438965
    9. ' )' → logprob: -12.625678062438965
    10. ')

' → logprob: -13.875678062438965

Token 84: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -6.968934758333489e-05
    2. ' print' → logprob: -10.500069618225098
    3. '
' → logprob: -11.125069618225098
    4. 'max' → logprob: -11.625069618225098
    5. ')' → logprob: -12.375069618225098
    6. '```' → logprob: -12.500069618225098
    7. '#' → logprob: -13.125069618225098
    8. 'p' → logprob: -13.250069618225098
    9. 'pr' → logprob: -13.500069618225098
    10. 'return' → logprob: -13.625069618225098

Token 85: '(max' (ID: 17178)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31328070163726807
    2. '(max' → logprob: -1.313280701637268
    3. '('' → logprob: -11.688281059265137
    4. '("("' → logprob: -12.063281059265137
    5. '()' → logprob: -13.438281059265137
    6. 'max' → logprob: -13.688281059265137
    7. '(common' → logprob: -14.438281059265137
    8. '(
' → logprob: -14.938281059265137
    9. ' (' → logprob: -15.313281059265137
    10. '(len' → logprob: -15.313281059265137

Token 86: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.292907877039397e-06
    2. '_' → logprob: -13.12500286102295
    3. 'count' → logprob: -14.12500286102295
    4. 'ount' → logprob: -15.62500286102295
    5. '_c' → logprob: -16.250003814697266
    6. ' _' → logprob: -16.625003814697266
    7. '_co' → logprob: -17.125003814697266
    8. '_counts' → logprob: -17.625003814697266
    9. '_counter' → logprob: -18.000003814697266
    10. '_cont' → logprob: -18.250003814697266

Token 87: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.054500666621607e-06
    2. ' )' → logprob: -12.75000286102295
    3. '))' → logprob: -16.750003814697266
    4. ')
' → logprob: -17.000003814697266
    5. ')`' → logprob: -18.000003814697266
    6. ')#' → logprob: -19.000003814697266
    7. '')' → logprob: -19.125003814697266
    8. '）' → logprob: -19.125003814697266
    9. ')}' → logprob: -19.250003814697266
    10. '),' → logprob: -20.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 85
Tokens correctement prédits (1ère position, stricte): 35
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 73
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 43.53%
Précision (top 10): 85.88%
================================================================================
