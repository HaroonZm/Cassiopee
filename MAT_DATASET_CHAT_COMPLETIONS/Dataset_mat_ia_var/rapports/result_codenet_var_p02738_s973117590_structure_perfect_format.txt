================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:22:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from numpy import *
n, M = map(int, input().split())
l = n * 3 + 1
d = zeros((l, n * 5), int64)
d[0][0] = 1
for i in range(1, l):
    j, k = i - 1, i - 2
    d[i] = (d[i - 3] * k * j + roll(d[k], -1) * j + roll(d[j], 1)) % M
print(sum(d[-1][:l]) % M)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' numpy' (ID: 19529)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' *
' (ID: 2099)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.43176841735839844
    2. ' array' → logprob: -1.0567684173583984
    3. 'random' → logprob: -6.556768417358398
    4. ' as' → logprob: -7.181768417358398
    5. ' random' → logprob: -7.431768417358398
    6. ' ndarray' → logprob: -9.556768417358398
    7. 'empty' → logprob: -9.681768417358398
    8. 'as' → logprob: -10.181768417358398
    9. ' numpy' → logprob: -10.306768417358398
    10. 'numpy' → logprob: -10.431768417358398

Token 4: 'n' (ID: 77)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.22894610464572906
    2. '.' → logprob: -2.6039462089538574
    3. '(' → logprob: -3.3539462089538574
    4. 'array' → logprob: -3.4789462089538574
    5. 'random' → logprob: -4.228946208953857
    6. 'import' → logprob: -4.478946208953857
    7. 'as' → logprob: -4.978946208953857
    8. 'l' → logprob: -5.103946208953857
    9. 'ar' → logprob: -5.728946208953857
    10. '`' → logprob: -5.853946208953857

Token 5: ',' (ID: 11)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28099188208580017
    2. 'umpy' → logprob: -2.280991792678833
    3. 'u' → logprob: -3.030991792678833
    4. 'um' → logprob: -3.155991792678833
    5. 'd' → logprob: -4.280992031097412
    6. 'ump' → logprob: -4.405992031097412
    7. 'ew' → logprob: -4.655992031097412
    8. 'e' → logprob: -5.530992031097412
    9. 'a' → logprob: -5.530992031097412
    10. 'par' → logprob: -5.780992031097412

Token 6: ' M' (ID: 391)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.35977816581726074
    2. 'm' → logprob: -1.4847781658172607
    3. ' p' → logprob: -2.9847781658172607
    4. ' k' → logprob: -4.73477840423584
    5. 'p' → logprob: -4.85977840423584
    6. 'k' → logprob: -5.23477840423584
    7. '=' → logprob: -7.48477840423584
    8. 'array' → logprob: -7.60977840423584
    9. ' array' → logprob: -8.35977840423584
    10. ' n' → logprob: -8.35977840423584

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6333423256874084
    2. ' =' → logprob: -0.7583423256874084
    3. ',' → logprob: -7.383342266082764
    4. ' ' → logprob: -9.508342742919922
    5. ')' → logprob: -10.883342742919922
    6. ' ,' → logprob: -11.383342742919922
    7. '.' → logprob: -12.883342742919922
    8. '=

' → logprob: -12.883342742919922
    9. '[' → logprob: -13.133342742919922
    10. '  ' → logprob: -13.258342742919922

Token 8: ' map' (ID: 4014)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6899199485778809
    2. '100' → logprob: -1.4399199485778809
    3. ' ' → logprob: -1.9399199485778809
    4. '5' → logprob: -3.689919948577881
    5. 'array' → logprob: -3.814919948577881
    6. '50' → logprob: -4.314919948577881
    7. '20' → logprob: -4.439919948577881
    8. 'int' → logprob: -4.689919948577881
    9. ' array' → logprob: -4.939919948577881
    10. ' int' → logprob: -5.439919948577881

Token 9: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.22788502275943756
    2. '(' → logprob: -1.6028850078582764
    3. '(str' → logprob: -6.6028852462768555
    4. '(input' → logprob: -7.7278852462768555
    5. '(lambda' → logprob: -7.8528852462768555
    6. 'int' → logprob: -8.727885246276855
    7. '<int' → logprob: -10.352885246276855
    8. '[int' → logprob: -10.727885246276855
    9. '(eval' → logprob: -11.102885246276855
    10. '(
' → logprob: -11.727885246276855

Token 10: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.04997485131025314
    2. ')' → logprob: -3.6749749183654785
    3. 'input' → logprob: -4.2999749183654785
    4. '(' → logprob: -4.9249749183654785
    5. ',input' → logprob: -6.9249749183654785
    6. ',' → logprob: -7.9249749183654785
    7. ' input' → logprob: -8.54997444152832
    8. '```' → logprob: -8.54997444152832
    9. '`' → logprob: -8.79997444152832
    10. '('' → logprob: -8.92497444152832

Token 11: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023351110517978668
    2. ' input' → logprob: -3.7733511924743652
    3. '(input' → logprob: -9.398350715637207
    4. 'raw' → logprob: -11.398350715637207
    5. ')' → logprob: -11.898350715637207
    6. ' ' → logprob: -13.523350715637207
    7. '=input' → logprob: -13.773350715637207
    8. ',input' → logprob: -14.648350715637207
    9. '	input' → logprob: -14.773350715637207
    10. ' raw' → logprob: -14.898350715637207

Token 12: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6678884625434875
    2. '('' → logprob: -1.4178884029388428
    3. '()' → logprob: -2.2928884029388428
    4. ')' → logprob: -2.9178884029388428
    5. '())' → logprob: -3.1678884029388428
    6. '().' → logprob: -4.167888641357422
    7. '("("' → logprob: -4.167888641357422
    8. '("' → logprob: -5.792888641357422
    9. '(""))' → logprob: -5.917888641357422
    10. '(()' → logprob: -6.167888641357422

Token 13: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0019401769386604428
    2. 'strip' → logprob: -6.2519402503967285
    3. 'rstrip' → logprob: -11.87693977355957
    4. ' split' → logprob: -12.62693977355957
    5. ')' → logprob: -14.50193977355957
    6. 'read' → logprob: -14.62693977355957
    7. '(split' → logprob: -15.37693977355957
    8. ' strip' → logprob: -18.25193977355957
    9. ' ' → logprob: -18.25193977355957
    10. 'spl' → logprob: -18.37693977355957

Token 14: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14400944113731384
    2. '))' → logprob: -2.0190093517303467
    3. '())' → logprob: -6.769009590148926
    4. '()' → logprob: -9.644009590148926
    5. '')' → logprob: -10.269009590148926
    6. '()))' → logprob: -10.769009590148926
    7. '`)' → logprob: -11.269009590148926
    8. ''))' → logprob: -11.519009590148926
    9. '(' → logprob: -11.644009590148926
    10. ')))' → logprob: -12.019009590148926

Token 15: 'l' (ID: 75)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.08490780740976334
    2. 'arr' → logprob: -3.9599077701568604
    3. 'x' → logprob: -4.0849080085754395
    4. 'array' → logprob: -4.0849080085754395
    5. 'A' → logprob: -4.9599080085754395
    6. 'data' → logprob: -5.7099080085754395
    7. '[' → logprob: -6.0849080085754395
    8. '
' → logprob: -6.0849080085754395
    9. 'matrix' → logprob: -6.2099080085754395
    10. 's' → logprob: -6.7099080085754395

Token 16: ' =' (ID: 314)
  Prédit: 'ist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ist' → logprob: -0.42704930901527405
    2. 'i' → logprob: -1.5520492792129517
    3. ' =' → logprob: -2.552049398422241
    4. '=' → logprob: -4.302049160003662
    5. 'ine' → logprob: -4.552049160003662
    6. 'e' → logprob: -5.302049160003662
    7. '=[]' → logprob: -5.427049160003662
    8. 'is' → logprob: -5.427049160003662
    9. 'ines' → logprob: -5.802049160003662
    10. 'en' → logprob: -6.052049160003662

Token 17: ' n' (ID: 297)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.9198558330535889
    2. '[' → logprob: -1.0448558330535889
    3. '[]' → logprob: -1.7948558330535889
    4. '[list' → logprob: -3.419855833053589
    5. '[int' → logprob: -4.044856071472168
    6. 'range' → logprob: -5.169856071472168
    7. ' [' → logprob: -5.169856071472168
    8. '[input' → logprob: -5.294856071472168
    9. ' list' → logprob: -5.419856071472168
    10. 'ist' → logprob: -5.794856071472168

Token 18: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0469194650650024
    2. ')' → logprob: -2.046919345855713
    3. '-' → logprob: -2.171919345855713
    4. ' ' → logprob: -2.171919345855713
    5. '**' → logprob: -2.296919345855713
    6. '*' → logprob: -3.171919345855713
    7. '>' → logprob: -3.296919345855713
    8. '[' → logprob: -3.796919345855713
    9. '%' → logprob: -4.046919345855713
    10. '.' → logprob: -4.546919345855713

Token 19: ' ' (ID: 220)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.8395476937294006
    2. 'ones' → logprob: -1.5895476341247559
    3. ' M' → logprob: -1.9645476341247559
    4. ' ones' → logprob: -2.589547634124756
    5. 'ar' → logprob: -3.089547634124756
    6. ' ar' → logprob: -3.589547634124756
    7. 'n' → logprob: -4.089547634124756
    8. 'array' → logprob: -4.464547634124756
    9. 'm' → logprob: -5.339547634124756
    10. '1' → logprob: -5.464547634124756

Token 20: '3' (ID: 18)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.40042561292648315
    2. 'ones' → logprob: -1.900425672531128
    3. 'array' → logprob: -3.150425672531128
    4. 'ar' → logprob: -3.275425672531128
    5. 'n' → logprob: -3.775425672531128
    6. 'log' → logprob: -4.150425434112549
    7. 'eye' → logprob: -4.400425434112549
    8. 'identity' → logprob: -4.525425434112549
    9. 'random' → logprob: -5.275425434112549
    10. '[' → logprob: -5.400425434112549

Token 21: ' +' (ID: 659)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1571587473154068
    2. '**' → logprob: -3.282158851623535
    3. '+' → logprob: -3.407158851623535
    4. '<|end|>' → logprob: -3.907158851623535
    5. ')' → logprob: -4.657158851623535
    6. ' ' → logprob: -4.782158851623535
    7. '```' → logprob: -5.032158851623535
    8. '.' → logprob: -5.407158851623535
    9. ',' → logprob: -5.532158851623535
    10. '
' → logprob: -5.782158851623535

Token 22: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38476020097732544
    2. '2' → logprob: -2.1347601413726807
    3. ' ' → logprob: -2.2597601413726807
    4. '4' → logprob: -3.3847601413726807
    5. '3' → logprob: -3.8847601413726807
    6. '7' → logprob: -4.25976037979126
    7. '5' → logprob: -4.50976037979126
    8. '6' → logprob: -5.25976037979126
    9. '10' → logprob: -6.13476037979126
    10. '9' → logprob: -6.25976037979126

Token 23: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.32379603385925293
    2. '2' → logprob: -2.198796033859253
    3. 'M' → logprob: -2.323796033859253
    4. '3' → logprob: -3.448796033859253
    5. '4' → logprob: -4.698796272277832
    6. '6' → logprob: -4.823796272277832
    7. ' M' → logprob: -4.823796272277832
    8. '5' → logprob: -5.823796272277832
    9. '7' → logprob: -5.948796272277832
    10. ' ' → logprob: -6.073796272277832

Token 24: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4663376808166504
    2. ' ' → logprob: -1.4663376808166504
    3. ')' → logprob: -1.7163376808166504
    4. ',' → logprob: -2.5913376808166504
    5. '`' → logprob: -2.5913376808166504
    6. '*' → logprob: -3.2163376808166504
    7. ' 
' → logprob: -3.3413376808166504
    8. '
' → logprob: -4.46633768081665
    9. '```' → logprob: -4.46633768081665
    10. '\' → logprob: -4.59133768081665

Token 25: 'd' (ID: 67)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2038535624742508
    2. 'x' → logprob: -3.2038536071777344
    3. 'v' → logprob: -3.9538536071777344
    4. '\n' → logprob: -4.203853607177734
    5. 'data' → logprob: -4.453853607177734
    6. 's' → logprob: -4.828853607177734
    7. 'd' → logprob: -4.828853607177734
    8. '`' → logprob: -4.953853607177734
    9. 'arr' → logprob: -4.953853607177734
    10. 'b' → logprob: -5.078853607177734

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4395093619823456
    2. '=' → logprob: -2.064509391784668
    3. 'ef' → logprob: -2.689509391784668
    4. 'ot' → logprob: -3.189509391784668
    5. 'array' → logprob: -3.564509391784668
    6. 'e' → logprob: -4.314509391784668
    7. '[' → logprob: -4.689509391784668
    8. 'i' → logprob: -5.064509391784668
    9. 'p' → logprob: -5.439509391784668
    10. 'o' → logprob: -5.439509391784668

Token 27: ' zeros' (ID: 42274)
  Prédit: ' zeros'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zeros' → logprob: -0.5223416090011597
    2. ' array' → logprob: -1.6473416090011597
    3. ' empty' → logprob: -2.522341728210449
    4. 'array' → logprob: -2.897341728210449
    5. 'empty' → logprob: -3.147341728210449
    6. 'zeros' → logprob: -4.272341728210449
    7. ' ones' → logprob: -5.397341728210449
    8. ' random' → logprob: -5.897341728210449
    9. ' diag' → logprob: -5.897341728210449
    10. ' randint' → logprob: -6.397341728210449

Token 28: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.31403326988220215
    2. '((' → logprob: -1.5640332698822021
    3. '(l' → logprob: -2.814033269882202
    4. '([' → logprob: -9.314033508300781
    5. '(d' → logprob: -9.939033508300781
    6. '(shape' → logprob: -10.564033508300781
    7. '(n' → logprob: -10.689033508300781
    8. ' (' → logprob: -10.689033508300781
    9. '(
' → logprob: -12.064033508300781
    10. '(int' → logprob: -12.189033508300781

Token 29: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0047795879654586315
    2. ' l' → logprob: -6.504779815673828
    3. 'M' → logprob: -6.629779815673828
    4. 'n' → logprob: -7.004779815673828
    5. ',' → logprob: -7.629779815673828
    6. '(l' → logprob: -9.129779815673828
    7. ')' → logprob: -9.379779815673828
    8. '(' → logprob: -9.504779815673828
    9. '2' → logprob: -9.629779815673828
    10. '3' → logprob: -10.004779815673828

Token 30: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024728013668209314
    2. '))' → logprob: -6.377472877502441
    3. ')' → logprob: -8.252472877502441
    4. ',l' → logprob: -8.377472877502441
    5. '),' → logprob: -9.377472877502441
    6. ' ,' → logprob: -9.627472877502441
    7. ',d' → logprob: -9.752472877502441
    8. ',)' → logprob: -10.002472877502441
    9. ',),' → logprob: -11.502472877502441
    10. ',
' → logprob: -12.627472877502441

Token 31: ' n' (ID: 297)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.035451196134090424
    2. 'M' → logprob: -4.160451412200928
    3. '3' → logprob: -4.660451412200928
    4. 'n' → logprob: -5.910451412200928
    5. ' l' → logprob: -6.285451412200928
    6. '2' → logprob: -6.660451412200928
    7. '4' → logprob: -6.910451412200928
    8. '6' → logprob: -7.535451412200928
    9. '5' → logprob: -7.910451412200928
    10. '7' → logprob: -8.16045093536377

Token 32: ' *' (ID: 425)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25615644454956055
    2. ',' → logprob: -2.1311564445495605
    3. '),' → logprob: -2.2561564445495605
    4. ' ,' → logprob: -7.3811564445495605
    5. ')' → logprob: -7.5061564445495605
    6. '+' → logprob: -8.131156921386719
    7. ' ))' → logprob: -8.131156921386719
    8. '*' → logprob: -8.256156921386719
    9. ')),' → logprob: -9.506156921386719
    10. ' ),' → logprob: -9.631156921386719

Token 33: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.09052285552024841
    2. ' ' → logprob: -3.4655227661132812
    3. '2' → logprob: -4.215522766113281
    4. '))' → logprob: -4.215522766113281
    5. '4' → logprob: -4.465522766113281
    6. '6' → logprob: -5.090522766113281
    7. '*' → logprob: -6.090522766113281
    8. ',' → logprob: -6.465522766113281
    9. 'l' → logprob: -7.465522766113281
    10. ' *' → logprob: -7.590522766113281

Token 34: '5' (ID: 20)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.1306326985359192
    2. '2' → logprob: -2.3806326389312744
    3. '4' → logprob: -4.2556328773498535
    4. '6' → logprob: -5.3806328773498535
    5. 'l' → logprob: -5.6306328773498535
    6. '))' → logprob: -6.1306328773498535
    7. 'M' → logprob: -6.2556328773498535
    8. 'n' → logprob: -7.0056328773498535
    9. ' ' → logprob: -7.3806328773498535
    10. '5' → logprob: -7.6306328773498535

Token 35: '),' (ID: 936)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.052783094346523285
    2. '),' → logprob: -3.1777830123901367
    3. '+' → logprob: -5.052783012390137
    4. ')' → logprob: -6.677783012390137
    5. ' +' → logprob: -6.802783012390137
    6. ' ))' → logprob: -7.802783012390137
    7. ',' → logprob: -8.677783012390137
    8. ')),' → logprob: -9.052783012390137
    9. ')))' → logprob: -9.427783012390137
    10. ' ),' → logprob: -10.177783012390137

Token 36: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.31296586990356445
    2. 'float' → logprob: -2.1879658699035645
    3. ' dtype' → logprob: -2.5629658699035645
    4. 'dtype' → logprob: -3.4379658699035645
    5. ' int' → logprob: -4.0629658699035645
    6. 'int' → logprob: -4.1879658699035645
    7. ')' → logprob: -4.3129658699035645
    8. ' bool' → logprob: -7.8129658699035645
    9. 'bool' → logprob: -7.9379658699035645
    10. ' )' → logprob: -8.687965393066406

Token 37: '64' (ID: 2220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008640097454190254
    2. '))' → logprob: -4.758640289306641
    3. '),' → logprob: -11.13364028930664
    4. ' )' → logprob: -12.38364028930664
    5. ')))' → logprob: -13.13364028930664
    6. ')
' → logprob: -13.75864028930664
    7. ',' → logprob: -14.38364028930664
    8. ')`' → logprob: -14.63364028930664
    9. '`)' → logprob: -14.75864028930664
    10. '')' → logprob: -15.00864028930664

Token 38: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0040915776044130325
    2. '))' → logprob: -5.504091739654541
    3. '),' → logprob: -11.879091262817383
    4. ' )' → logprob: -13.004091262817383
    5. ')))' → logprob: -13.504091262817383
    6. ')
' → logprob: -14.629091262817383
    7. ',' → logprob: -14.754091262817383
    8. ')`' → logprob: -15.129091262817383
    9. '`)' → logprob: -15.504091262817383
    10. '()' → logprob: -15.754091262817383

Token 39: 'd' (ID: 67)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4879513680934906
    2. ')' → logprob: -1.112951397895813
    3. '[' → logprob: -3.6129512786865234
    4. ' for' → logprob: -4.112951278686523
    5. 'd' → logprob: -5.362951278686523
    6. '[
' → logprob: -5.987951278686523
    7. ' ' → logprob: -6.862951278686523
    8. '
' → logprob: -6.987951278686523
    9. ',' → logprob: -7.362951278686523
    10. ')
' → logprob: -7.487951278686523

Token 40: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03462808206677437
    2. '.' → logprob: -3.65962815284729
    3. '<|end|>' → logprob: -5.659627914428711
    4. ')' → logprob: -5.784627914428711
    5. 'd' → logprob: -7.784627914428711
    6. '#' → logprob: -8.534627914428711
    7. '[
' → logprob: -8.909627914428711
    8. ' ' → logprob: -8.909627914428711
    9. '[]' → logprob: -8.909627914428711
    10. '[d' → logprob: -9.284627914428711

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0803413912653923
    2. ',' → logprob: -2.955341339111328
    3. ' ' → logprob: -3.955341339111328
    4. '[' → logprob: -5.705341339111328
    5. ' ,' → logprob: -6.455341339111328
    6. '1' → logprob: -7.455341339111328
    7. '-' → logprob: -9.330341339111328
    8. ']' → logprob: -9.955341339111328
    9. ' [' → logprob: -10.205341339111328
    10. ',l' → logprob: -10.392841339111328

Token 42: '][' (ID: 2696)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03198752552270889
    2. '][' → logprob: -3.656987428665161
    3. ']' → logprob: -5.53198766708374
    4. ' ,' → logprob: -6.90698766708374
    5. '[' → logprob: -8.031987190246582
    6. ' ' → logprob: -9.156987190246582
    7. ' ][' → logprob: -9.906987190246582
    8. ',[' → logprob: -10.031987190246582
    9. '][:' → logprob: -10.656987190246582
    10. '0' → logprob: -10.656987190246582

Token 43: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003797703655436635
    2. '-' → logprob: -6.75379753112793
    3. ':' → logprob: -7.00379753112793
    4. 'n' → logprob: -7.62879753112793
    5. ' ' → logprob: -7.75379753112793
    6. '1' → logprob: -8.50379753112793
    7. 'l' → logprob: -8.62879753112793
    8. 'M' → logprob: -9.25379753112793
    9. ' :' → logprob: -9.75379753112793
    10. ']' → logprob: -10.00379753112793

Token 44: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002420129720121622
    2. ']=' → logprob: -6.627419948577881
    3. ' ]' → logprob: -7.377419948577881
    4. ')' → logprob: -8.377420425415039
    5. ')]' → logprob: -9.877420425415039
    6. '=' → logprob: -10.002420425415039
    7. ']+=' → logprob: -10.127420425415039
    8. ',' → logprob: -10.502420425415039
    9. '+' → logprob: -10.502420425415039
    10. '])' → logprob: -11.252420425415039

Token 45: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06220328062772751
    2. ' =' → logprob: -2.8122031688690186
    3. '0' → logprob: -9.187203407287598
    4. ' ' → logprob: -9.937203407287598
    5. '+' → logprob: -10.687203407287598
    6. '+=' → logprob: -10.937203407287598
    7. ' +=' → logprob: -11.062203407287598
    8. '<|end|>' → logprob: -11.812203407287598
    9. 'd' → logprob: -12.687203407287598
    10. ',' → logprob: -12.937203407287598

Token 46: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0069991666823625565
    2. '0' → logprob: -5.0069990158081055
    3. ' ' → logprob: -9.256999015808105
    4. '-' → logprob: -9.381999015808105
    5. '100' → logprob: -10.381999015808105
    6. 'int' → logprob: -11.131999015808105
    7. '10' → logprob: -11.381999015808105
    8. 'd' → logprob: -11.631999015808105
    9. '2' → logprob: -11.631999015808105
    10. '3' → logprob: -11.756999015808105

Token 47: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0014948610914871097
    2. '0' → logprob: -6.626494884490967
    3. '-' → logprob: -9.501494407653809
    4. 'd' → logprob: -10.751494407653809
    5. ' ' → logprob: -11.126494407653809
    6. '100' → logprob: -11.376494407653809
    7. '2' → logprob: -11.751494407653809
    8. 'int' → logprob: -12.001494407653809
    9. '10' → logprob: -12.251494407653809
    10. 'M' → logprob: -12.376494407653809

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0078024864196777
    2. 'd' → logprob: -1.2578024864196777
    3. '<|end|>' → logprob: -1.8828024864196777
    4. ' ' → logprob: -3.2578024864196777
    5. '+' → logprob: -3.5078024864196777
    6. '[' → logprob: -3.8828024864196777
    7. '#' → logprob: -3.8828024864196777
    8. '0' → logprob: -4.007802486419678
    9. '\n' → logprob: -4.007802486419678
    10. 'for' → logprob: -4.632802486419678

Token 49: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2780826091766357
    2. 'd' → logprob: -1.5280826091766357
    3. '#' → logprob: -2.4030826091766357
    4. '
' → logprob: -2.5280826091766357
    5. '[' → logprob: -2.5280826091766357
    6. '<|end|>' → logprob: -2.7780826091766357
    7. '0' → logprob: -3.2780826091766357
    8. '\n' → logprob: -3.7780826091766357
    9. '.' → logprob: -3.7780826091766357
    10. ')' → logprob: -4.028082847595215

Token 50: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22955256700515747
    2. ' ' → logprob: -1.6045525074005127
    3. 'i' → logprob: -6.354552745819092
    4. ' _' → logprob: -6.479552745819092
    5. '_' → logprob: -7.229552745819092
    6. ' ' → logprob: -9.854552268981934
    7. '  ' → logprob: -11.104552268981934
    8. ' j' → logprob: -11.104552268981934
    9. '_i' → logprob: -11.479552268981934
    10. ' (' → logprob: -12.479552268981934

Token 51: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04871170222759247
    2. 'in' → logprob: -3.2987117767333984
    3. ' ' → logprob: -4.548711776733398
    4. ' i' → logprob: -11.923711776733398
    5. '  ' → logprob: -12.423711776733398
    6. '	in' → logprob: -12.423711776733398
    7. 'range' → logprob: -12.423711776733398
    8. ',' → logprob: -12.923711776733398
    9. ' range' → logprob: -13.298711776733398
    10. '+' → logprob: -13.923711776733398

Token 52: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.38697806000709534
    2. 'range' → logprob: -1.136978030204773
    3. ' ' → logprob: -9.636978149414062
    4. ' in' → logprob: -10.886978149414062
    5. ' xrange' → logprob: -11.761978149414062
    6. '	range' → logprob: -12.386978149414062
    7. 'in' → logprob: -13.261978149414062
    8. '  ' → logprob: -13.386978149414062
    9. ')' → logprob: -13.386978149414062
    10. '(range' → logprob: -13.511978149414062

Token 53: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.005634977947920561
    2. '(n' → logprob: -5.255634784698486
    3. '(l' → logprob: -7.880634784698486
    4. ' (' → logprob: -10.755635261535645
    5. '(
' → logprob: -14.505635261535645
    6. '(i' → logprob: -15.380635261535645
    7. '1' → logprob: -15.505635261535645
    8. '(s' → logprob: -15.880635261535645
    9. '(d' → logprob: -16.005634307861328
    10. '()' → logprob: -16.255634307861328

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04922398179769516
    2. 'l' → logprob: -3.7992238998413086
    3. 'n' → logprob: -3.9242238998413086
    4. ' ' → logprob: -5.799223899841309
    5. '0' → logprob: -6.674223899841309
    6. ' n' → logprob: -7.549223899841309
    7. '2' → logprob: -7.924223899841309
    8. ' l' → logprob: -8.049223899841309
    9. '3' → logprob: -8.549223899841309
    10. 'd' → logprob: -9.549223899841309

Token 55: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008917083963751793
    2. ' ,' → logprob: -4.758916854858398
    3. ',n' → logprob: -8.383916854858398
    4. ',l' → logprob: -9.633916854858398
    5. ',
' → logprob: -12.133916854858398
    6. ')' → logprob: -14.258916854858398
    7. ',len' → logprob: -14.883916854858398
    8. '‌,' → logprob: -15.008916854858398
    9. '+,' → logprob: -15.258916854858398
    10. ' )' → logprob: -15.508916854858398

Token 56: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.04691501706838608
    2. ' l' → logprob: -3.421915054321289
    3. 'n' → logprob: -4.421915054321289
    4. ' n' → logprob: -6.796915054321289
    5. 'M' → logprob: -11.296915054321289
    6. 'd' → logprob: -11.921915054321289
    7. ')' → logprob: -12.046915054321289
    8. '3' → logprob: -12.171915054321289
    9. ' M' → logprob: -12.296915054321289
    10. 'len' → logprob: -12.296915054321289

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018421327695250511
    2. '):
' → logprob: -6.751842021942139
    3. ':' → logprob: -7.501842021942139
    4. '+' → logprob: -9.376842498779297
    5. ')' → logprob: -10.751842498779297
    6. ',' → logprob: -12.626842498779297
    7. ' ):' → logprob: -12.626842498779297
    8. '-' → logprob: -13.501842498779297
    9. '}:' → logprob: -13.876842498779297
    10. '():' → logprob: -14.126842498779297

Token 58: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19899560511112213
    2. ' d' → logprob: -3.198995590209961
    3. '<|end|>' → logprob: -3.198995590209961
    4. ' for' → logprob: -3.323995590209961
    5. '    ' → logprob: -3.573995590209961
    6. 'd' → logprob: -3.948995590209961
    7. '   ' → logprob: -5.073995590209961
    8. '	for' → logprob: -6.198995590209961
    9. '	d' → logprob: -6.698995590209961
    10. '	' → logprob: -6.698995590209961

Token 59: ' j' (ID: 441)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.19664618372917175
    2. 'for' → logprob: -2.321646213531494
    3. ' d' → logprob: -2.946646213531494
    4. 'd' → logprob: -4.321646213531494
    5. ' ' → logprob: -4.696646213531494
    6. '   ' → logprob: -6.071646213531494
    7. '    ' → logprob: -7.071646213531494
    8. ' if' → logprob: -7.446646213531494
    9. ' j' → logprob: -7.946646213531494
    10. 's' → logprob: -8.196645736694336

Token 60: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7133669853210449
    2. ' =' → logprob: -0.7133669853210449
    3. ' in' → logprob: -4.713366985321045
    4. ')' → logprob: -6.088366985321045
    5. 'for' → logprob: -6.213366985321045
    6. 'in' → logprob: -6.463366985321045
    7. ' ' → logprob: -7.213366985321045
    8. 'nt' → logprob: -7.213366985321045
    9. ' for' → logprob: -7.213366985321045
    10. ',' → logprob: -7.838366985321045

Token 61: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.14486795663833618
    2. ' k' → logprob: -2.1448678970336914
    3. '=' → logprob: -5.519867897033691
    4. '0' → logprob: -5.644867897033691
    5. ' =' → logprob: -5.769867897033691
    6. 'd' → logprob: -6.519867897033691
    7. ' ' → logprob: -7.269867897033691
    8. 'j' → logprob: -7.519867897033691
    9. ' d' → logprob: -7.644867897033691
    10. '_' → logprob: -7.644867897033691

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3267744779586792
    2. '=' → logprob: -1.3267744779586792
    3. ',' → logprob: -4.326774597167969
    4. ' ' → logprob: -9.576774597167969
    5. '   ' → logprob: -10.076774597167969
    6. '    ' → logprob: -10.326774597167969
    7. ' ,' → logprob: -11.701774597167969
    8. ')' → logprob: -12.201774597167969
    9. ' for' → logprob: -12.201774597167969
    10. '=int' → logprob: -12.201774597167969

Token 63: ' i' (ID: 575)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.15742643177509308
    2. 'map' → logprob: -2.657426357269287
    3. '0' → logprob: -3.407426357269287
    4. ' ' → logprob: -4.282426357269287
    5. ' i' → logprob: -4.907426357269287
    6. 'div' → logprob: -4.907426357269287
    7. ' div' → logprob: -5.282426357269287
    8. ' d' → logprob: -6.032426357269287
    9. 'i' → logprob: -6.532426357269287
    10. ' input' → logprob: -6.532426357269287

Token 64: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.22600151598453522
    2. ' -' → logprob: -2.476001501083374
    3. ',' → logprob: -2.851001501083374
    4. ' ' → logprob: -3.601001501083374
    5. ' *' → logprob: -4.851001739501953
    6. '*' → logprob: -5.226001739501953
    7. ' //' → logprob: -5.476001739501953
    8. '%' → logprob: -5.601001739501953
    9. '//' → logprob: -5.601001739501953
    10. ' %' → logprob: -5.976001739501953

Token 65: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00035095500061288476
    2. ' ' → logprob: -8.250350952148438
    3. '2' → logprob: -9.625350952148438
    4. '3' → logprob: -11.750350952148438
    5. '   ' → logprob: -12.000350952148438
    6. '-' → logprob: -12.500350952148438
    7. '```' → logprob: -13.875350952148438
    8. 'k' → logprob: -14.562850952148438
    9. '  ' → logprob: -14.750350952148438
    10. 'j' → logprob: -14.750350952148438

Token 66: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012821101699955761
    2. ' ' → logprob: -9.625127792358398
    3. '2' → logprob: -10.375127792358398
    4. '3' → logprob: -10.875127792358398
    5. 'k' → logprob: -12.937627792358398
    6. 'l' → logprob: -13.250127792358398
    7. '   ' → logprob: -13.375127792358398
    8. 'j' → logprob: -13.625127792358398
    9. '-' → logprob: -14.000127792358398
    10. '(' → logprob: -14.500127792358398

Token 67: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16052082180976868
    2. '   ' → logprob: -2.6605207920074463
    3. '+' → logprob: -4.160521030426025
    4. ']' → logprob: -4.535521030426025
    5. ')' → logprob: -4.660521030426025
    6. ' ' → logprob: -5.160521030426025
    7. 'd' → logprob: -5.285521030426025
    8. '[' → logprob: -5.535521030426025
    9. ' +' → logprob: -5.660521030426025
    10. '-' → logprob: -5.785521030426025

Token 68: ' i' (ID: 575)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4866959750652313
    2. 'i' → logprob: -1.7366960048675537
    3. ' ' → logprob: -2.4866960048675537
    4. ' i' → logprob: -2.6116960048675537
    5. 'j' → logprob: -4.111695766448975
    6. 'M' → logprob: -4.986695766448975
    7. 'k' → logprob: -5.236695766448975
    8. ' j' → logprob: -5.486695766448975
    9. ' M' → logprob: -5.486695766448975
    10. 'd' → logprob: -5.861695766448975

Token 69: ' -' (ID: 533)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3236781358718872
    2. 'd' → logprob: -1.6986781358718872
    3. '   ' → logprob: -1.9486781358718872
    4. '[' → logprob: -2.0736780166625977
    5. '-' → logprob: -2.3236780166625977
    6. '    ' → logprob: -3.8236780166625977
    7. ')' → logprob: -3.8236780166625977
    8. '+' → logprob: -4.073678016662598
    9. 'for' → logprob: -4.198678016662598
    10. ']' → logprob: -4.448678016662598

Token 70: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025807028636336327
    2. '2' → logprob: -4.150806903839111
    3. '3' → logprob: -4.775806903839111
    4. ' ' → logprob: -6.900806903839111
    5. 'k' → logprob: -9.15080738067627
    6. 'j' → logprob: -9.52580738067627
    7. '4' → logprob: -10.27580738067627
    8. '5' → logprob: -11.27580738067627
    9. ' k' → logprob: -11.77580738067627
    10. ' j' → logprob: -12.02580738067627

Token 71: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.14708642661571503
    2. '3' → logprob: -2.2720863819122314
    3. '2' → logprob: -3.3970863819122314
    4. '4' → logprob: -9.147086143493652
    5. ' ' → logprob: -10.272086143493652
    6. 'k' → logprob: -10.897086143493652
    7. '5' → logprob: -11.397086143493652
    8. '0' → logprob: -11.522086143493652
    9. '6' → logprob: -11.647086143493652
    10. 'j' → logprob: -11.897086143493652

Token 72: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6574190855026245
    2. '   ' → logprob: -1.9074190855026245
    3. ' ' → logprob: -2.157419204711914
    4. ' +' → logprob: -3.282419204711914
    5. ' if' → logprob: -3.282419204711914
    6. '<|end|>' → logprob: -3.407419204711914
    7. '    ' → logprob: -3.782419204711914
    8. ' 
' → logprob: -3.782419204711914
    9. '
' → logprob: -4.407419204711914
    10. '    
' → logprob: -5.032419204711914

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4952291250228882
    2. ' 
' → logprob: -1.4952291250228882
    3. ' ' → logprob: -1.6202291250228882
    4. '```' → logprob: -2.3702292442321777
    5. '<|end|>' → logprob: -2.6202292442321777
    6. ' if' → logprob: -3.6202292442321777
    7. '    ' → logprob: -3.7452292442321777
    8. '    
' → logprob: -3.9952292442321777
    9. '     
' → logprob: -3.9952292442321777
    10. ')' → logprob: -4.245229244232178

Token 74: ' d' (ID: 272)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.612557590007782
    2. '   ' → logprob: -1.7375576496124268
    3. '+' → logprob: -1.8625576496124268
    4. ' if' → logprob: -3.6125576496124268
    5. '    ' → logprob: -3.8625576496124268
    6. ']' → logprob: -4.112557411193848
    7. ' 
' → logprob: -4.737557411193848
    8. ',' → logprob: -4.862557411193848
    9. 'if' → logprob: -5.487557411193848
    10. '[' → logprob: -5.612557411193848

Token 75: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.18553043901920319
    2. '[j' → logprob: -2.060530424118042
    3. '[i' → logprob: -3.185530424118042
    4. '[:,' → logprob: -9.060530662536621
    5. ' [' → logprob: -9.935530662536621
    6. '[d' → logprob: -10.560530662536621
    7. '[n' → logprob: -10.685530662536621
    8. '[I' → logprob: -10.810530662536621
    9. '[...]' → logprob: -10.810530662536621
    10. ']' → logprob: -10.935530662536621

Token 76: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.3160422444343567
    2. ']' → logprob: -1.441042184829712
    3. '-' → logprob: -3.941042184829712
    4. '][:' → logprob: -4.691042423248291
    5. '][]' → logprob: -6.691042423248291
    6. ']=' → logprob: -6.816042423248291
    7. ']+=' → logprob: -6.816042423248291
    8. '[' → logprob: -7.566042423248291
    9. ' ][' → logprob: -7.816042423248291
    10. '][-' → logprob: -7.941042423248291

Token 77: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.46263018250465393
    2. '[:]' → logprob: -1.9626301527023315
    3. '[' → logprob: -2.462630271911621
    4. '+=' → logprob: -3.087630271911621
    5. '|' → logprob: -3.462630271911621
    6. '^' → logprob: -3.587630271911621
    7. ' =' → logprob: -3.712630271911621
    8. ' ^=' → logprob: -5.587630271911621
    9. ' +=' → logprob: -6.087630271911621
    10. '[j' → logprob: -6.087630271911621

Token 78: ' (' (ID: 350)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5248987078666687
    2. 'd' → logprob: -0.8998987078666687
    3. ' (' → logprob: -7.399898529052734
    4. '(d' → logprob: -7.649898529052734
    5. '(' → logprob: -7.899898529052734
    6. ' ' → logprob: -9.274898529052734
    7. '2' → logprob: -10.899898529052734
    8. '   ' → logprob: -11.149898529052734
    9. '	d' → logprob: -11.149898529052734
    10. '+d' → logprob: -11.274898529052734

Token 79: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3164732754230499
    2. ' d' → logprob: -1.3164732456207275
    3. ')' → logprob: -7.316473484039307
    4. '2' → logprob: -7.691473484039307
    5. ' ' → logprob: -7.816473484039307
    6. '-d' → logprob: -7.941473484039307
    7. '(d' → logprob: -8.191473007202148
    8. '4' → logprob: -8.816473007202148
    9. ' (' → logprob: -8.816473007202148
    10. '3' → logprob: -8.941473007202148

Token 80: '[i' (ID: 1768)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.6329688429832458
    2. '[i' → logprob: -0.7579688429832458
    3. '[' → logprob: -8.75796890258789
    4. ')[' → logprob: -9.13296890258789
    5. '-' → logprob: -10.75796890258789
    6. ' [' → logprob: -11.25796890258789
    7. ')' → logprob: -11.25796890258789
    8. 'j' → logprob: -11.25796890258789
    9. 'i' → logprob: -11.75796890258789
    10. '[k' → logprob: -11.88296890258789

Token 81: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.390606552362442
    2. ']' → logprob: -1.2656065225601196
    3. ']+' → logprob: -3.640606641769409
    4. ' -' → logprob: -4.51560640335083
    5. ']*' → logprob: -6.39060640335083
    6. '[j' → logprob: -7.01560640335083
    7. ' ]' → logprob: -7.89060640335083
    8. ']-' → logprob: -8.015606880187988
    9. '][' → logprob: -8.640606880187988
    10. 'j' → logprob: -8.765606880187988

Token 82: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0027912072837352753
    2. ' ' → logprob: -6.252791404724121
    3. '2' → logprob: -7.377791404724121
    4. '3' → logprob: -9.627791404724121
    5. '-' → logprob: -10.002791404724121
    6. ']' → logprob: -10.440291404724121
    7. '   ' → logprob: -11.002791404724121
    8. '```' → logprob: -11.127791404724121
    9. ')' → logprob: -11.877791404724121
    10. '])' → logprob: -12.190291404724121

Token 83: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001598175847902894
    2. '2' → logprob: -6.501598358154297
    3. '3' → logprob: -9.626598358154297
    4. ' ' → logprob: -10.751598358154297
    5. '5' → logprob: -13.439098358154297
    6. '4' → logprob: -13.501598358154297
    7. 'j' → logprob: -13.876598358154297
    8. '   ' → logprob: -14.564098358154297
    9. '```' → logprob: -14.626598358154297
    10. ']' → logprob: -14.689098358154297

Token 84: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021754572167992592
    2. ']+' → logprob: -4.146754741668701
    3. ']*' → logprob: -5.896754741668701
    4. '])' → logprob: -6.521754741668701
    5. ' ]' → logprob: -7.771754741668701
    6. ']<<' → logprob: -7.896754741668701
    7. '+' → logprob: -8.896754264831543
    8. '-' → logprob: -9.646754264831543
    9. ']-' → logprob: -10.021754264831543
    10. ')' → logprob: -10.021754264831543

Token 85: ' *' (ID: 425)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5777544975280762
    2. ' +' → logprob: -0.8277544975280762
    3. ' *' → logprob: -7.577754497528076
    4. '*' → logprob: -7.577754497528076
    5. ')' → logprob: -8.327754974365234
    6. '-' → logprob: -9.452754974365234
    7. ' +
' → logprob: -9.452754974365234
    8. ' -' → logprob: -9.452754974365234
    9. '+d' → logprob: -9.827754974365234
    10. ' ' → logprob: -10.077754974365234

Token 86: ' k' (ID: 372)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.615749716758728
    2. '2' → logprob: -1.490749716758728
    3. 'M' → logprob: -2.1157498359680176
    4. ' ' → logprob: -3.2407498359680176
    5. '4' → logprob: -4.365749835968018
    6. 'j' → logprob: -4.490749835968018
    7. ' M' → logprob: -4.490749835968018
    8. '6' → logprob: -4.865749835968018
    9. 'k' → logprob: -5.240749835968018
    10. '5' → logprob: -5.365749835968018

Token 87: ' *' (ID: 425)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6441634297370911
    2. '+' → logprob: -0.7691634297370911
    3. ' -' → logprob: -5.394163608551025
    4. ')' → logprob: -5.769163608551025
    5. '+d' → logprob: -6.769163608551025
    6. '-' → logprob: -6.894163608551025
    7. '+j' → logprob: -7.769163608551025
    8. '+k' → logprob: -8.269163131713867
    9. ' +
' → logprob: -8.644163131713867
    10. '[' → logprob: -8.769163131713867

Token 88: ' j' (ID: 441)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.6338646411895752
    2. 'k' → logprob: -1.8838646411895752
    3. 'M' → logprob: -2.008864641189575
    4. ' +' → logprob: -2.133864641189575
    5. 'd' → logprob: -2.383864641189575
    6. '(' → logprob: -3.258864641189575
    7. ' (' → logprob: -3.508864641189575
    8. ')' → logprob: -3.633864641189575
    9. ' M' → logprob: -3.633864641189575
    10. ' d' → logprob: -3.758864641189575

Token 89: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6025518774986267
    2. ' +' → logprob: -1.1025519371032715
    3. ' -' → logprob: -2.6025519371032715
    4. '-' → logprob: -3.7275519371032715
    5. ')' → logprob: -3.9775519371032715
    6. '+d' → logprob: -7.1025519371032715
    7. '+k' → logprob: -7.7275519371032715
    8. ' +
' → logprob: -8.227551460266113
    9. ' )' → logprob: -8.227551460266113
    10. '+
' → logprob: -8.477551460266113

Token 90: ' roll' (ID: 8465)
  Prédit: ' d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07197663187980652
    2. 'd' → logprob: -2.696976661682129
    3. ' M' → logprob: -7.446976661682129
    4. ' ' → logprob: -7.946976661682129
    5. ' (' → logprob: -8.071976661682129
    6. 'M' → logprob: -8.571976661682129
    7. '(d' → logprob: -9.196976661682129
    8. '(' → logprob: -9.696976661682129
    9. ' ' → logprob: -9.759476661682129
    10. '...' → logprob: -9.821976661682129

Token 91: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.02060880698263645
    2. '(' → logprob: -3.895608901977539
    3. 'd' → logprob: -10.520608901977539
    4. '(
' → logprob: -11.145608901977539
    5. ' (' → logprob: -11.895608901977539
    6. ')' → logprob: -12.520608901977539
    7. '(s' → logprob: -12.520608901977539
    8. '(

' → logprob: -13.520608901977539
    9. ',d' → logprob: -13.645608901977539
    10. 's' → logprob: -13.645608901977539

Token 92: '[k' (ID: 14298)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0003566767554730177
    2. '[' → logprob: -8.500356674194336
    3. ',i' → logprob: -9.500356674194336
    4. ',' → logprob: -10.125356674194336
    5. '[
' → logprob: -11.500356674194336
    6. ')' → logprob: -11.875356674194336
    7. ' [' → logprob: -13.000356674194336
    8. '[(' → logprob: -13.000356674194336
    9. ',[' → logprob: -13.000356674194336
    10. '[I' → logprob: -13.000356674194336

Token 93: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.013007622212171555
    2. ']' → logprob: -4.888007640838623
    3. ',' → logprob: -5.763007640838623
    4. ' ],' → logprob: -7.263007640838623
    5. '],[' → logprob: -7.638007640838623
    6. '-' → logprob: -7.888007640838623
    7. ' -' → logprob: -8.888007164001465
    8. ' ,' → logprob: -9.513007164001465
    9. ',j' → logprob: -9.513007164001465
    10. ',-' → logprob: -9.513007164001465

Token 94: ' -' (ID: 533)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.37015300989151
    2. 'j' → logprob: -2.3701529502868652
    3. ' ' → logprob: -2.6201529502868652
    4. ' i' → logprob: -2.8701529502868652
    5. '1' → logprob: -3.3701529502868652
    6. ' -' → logprob: -3.8701529502868652
    7. ' (' → logprob: -5.120152950286865
    8. 'i' → logprob: -5.245152950286865
    9. ')' → logprob: -5.370152950286865
    10. ' k' → logprob: -5.870152950286865

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011200487613677979
    2. '2' → logprob: -5.011200428009033
    3. 'j' → logprob: -6.511200428009033
    4. ' ' → logprob: -7.011200428009033
    5. '3' → logprob: -7.261200428009033
    6. '5' → logprob: -7.761200428009033
    7. 'k' → logprob: -8.261200904846191
    8. '4' → logprob: -8.886200904846191
    9. 'M' → logprob: -8.886200904846191
    10. '(' → logprob: -9.511200904846191

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0589195191860199
    2. '))' → logprob: -3.5589194297790527
    3. ',' → logprob: -4.058919429779053
    4. ')*' → logprob: -5.433919429779053
    5. ' )' → logprob: -5.433919429779053
    6. ' ,' → logprob: -6.808919429779053
    7. ' ' → logprob: -8.058919906616211
    8. ')))' → logprob: -8.433919906616211
    9. '))*' → logprob: -8.433919906616211
    10. ' ))' → logprob: -8.683919906616211

Token 97: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3286166191101074
    2. '*' → logprob: -1.5786166191101074
    3. ')' → logprob: -2.8286166191101074
    4. '*d' → logprob: -5.078616619110107
    5. ' )' → logprob: -5.953616619110107
    6. '*k' → logprob: -6.703616619110107
    7. ' +' → logprob: -7.078616619110107
    8. ' -' → logprob: -7.203616619110107
    9. ')*' → logprob: -7.328616619110107
    10. '+' → logprob: -7.328616619110107

Token 98: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.5965590476989746
    2. 'k' → logprob: -1.7215590476989746
    3. '(k' → logprob: -2.3465590476989746
    4. 'i' → logprob: -2.4715590476989746
    5. ' j' → logprob: -2.4715590476989746
    6. 'M' → logprob: -2.7215590476989746
    7. '(i' → logprob: -2.8465590476989746
    8. '(j' → logprob: -2.9715590476989746
    9. ' k' → logprob: -3.0965590476989746
    10. '(M' → logprob: -3.3465590476989746

Token 99: ' +' (ID: 659)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.9146661162376404
    2. ' -' → logprob: -1.1646661758422852
    3. '+' → logprob: -1.6646661758422852
    4. ')' → logprob: -2.789666175842285
    5. ' +' → logprob: -3.414666175842285
    6. ' )' → logprob: -6.414666175842285
    7. '*' → logprob: -7.039666175842285
    8. ' *' → logprob: -8.539666175842285
    9. ')-' → logprob: -8.539666175842285
    10. ' ' → logprob: -9.414666175842285

Token 100: ' roll' (ID: 8465)
  Prédit: ' roll'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' roll' → logprob: -0.38679006695747375
    2. ' d' → logprob: -1.7617900371551514
    3. 'roll' → logprob: -2.1367900371551514
    4. 'd' → logprob: -3.5117900371551514
    5. ' ' → logprob: -7.7617902755737305
    6. ' (' → logprob: -9.13679027557373
    7. '(d' → logprob: -9.69929027557373
    8. '   ' → logprob: -9.88679027557373
    9. '  ' → logprob: -10.01179027557373
    10. ' rollover' → logprob: -10.13679027557373

Token 101: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -6.992775888647884e-05
    2. '(' → logprob: -9.625069618225098
    3. 'd' → logprob: -13.625069618225098
    4. ' (' → logprob: -14.000069618225098
    5. '(l' → logprob: -14.375069618225098
    6. '((' → logprob: -14.875069618225098
    7. '(
' → logprob: -15.250069618225098
    8. '```' → logprob: -16.625070571899414
    9. ')' → logprob: -16.750070571899414
    10. '(D' → logprob: -17.125070571899414

Token 102: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.04033120349049568
    2. '[k' → logprob: -3.2903311252593994
    3. '[i' → logprob: -6.1653313636779785
    4. '[' → logprob: -8.91533088684082
    5. 'j' → logprob: -11.29033088684082
    6. '[
' → logprob: -12.16533088684082
    7. ' [' → logprob: -12.29033088684082
    8. '```' → logprob: -12.29033088684082
    9. '[l' → logprob: -12.41533088684082
    10. '   ' → logprob: -12.66533088684082

Token 103: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02346361055970192
    2. '-' → logprob: -3.898463726043701
    3. ' ,' → logprob: -6.773463726043701
    4. ',k' → logprob: -7.398463726043701
    5. ',-' → logprob: -7.898463726043701
    6. ',j' → logprob: -8.273463249206543
    7. ' -' → logprob: -8.398463249206543
    8. '],' → logprob: -9.648463249206543
    9. ',i' → logprob: -10.148463249206543
    10. ')' → logprob: -10.523463249206543

Token 104: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07514400035142899
    2. '1' → logprob: -3.075144052505493
    3. ' -' → logprob: -3.825144052505493
    4. ' ' → logprob: -5.575143814086914
    5. '2' → logprob: -8.450143814086914
    6. '+' → logprob: -9.450143814086914
    7. '-k' → logprob: -9.450143814086914
    8. 'k' → logprob: -9.700143814086914
    9. ' k' → logprob: -10.325143814086914
    10. '0' → logprob: -10.950143814086914

Token 105: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.26349660754203796
    2. '-' → logprob: -1.5134966373443604
    3. '2' → logprob: -5.013496398925781
    4. ' ' → logprob: -5.638496398925781
    5. ' -' → logprob: -7.763496398925781
    6. '0' → logprob: -7.888496398925781
    7. '3' → logprob: -8.638496398925781
    8. ')' → logprob: -9.638496398925781
    9. '+' → logprob: -9.763496398925781
    10. 'k' → logprob: -9.888496398925781

Token 106: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008573911152780056
    2. '))' → logprob: -5.00857400894165
    3. ' )' → logprob: -6.88357400894165
    4. ')*' → logprob: -7.75857400894165
    5. ' ' → logprob: -9.008573532104492
    6. ')))' → logprob: -10.008573532104492
    7. '-' → logprob: -10.133573532104492
    8. '   ' → logprob: -10.508573532104492
    9. '),' → logprob: -11.008573532104492
    10. '*' → logprob: -11.133573532104492

Token 107: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5326822400093079
    2. ' %' → logprob: -1.032682180404663
    3. '<|end|>' → logprob: -3.782682180404663
    4. ' ' → logprob: -4.407682418823242
    5. ')' → logprob: -4.657682418823242
    6. ' *' → logprob: -5.532682418823242
    7. ' //' → logprob: -6.657682418823242
    8. '*' → logprob: -6.907682418823242
    9. '
' → logprob: -6.907682418823242
    10. '%n' → logprob: -7.657682418823242

Token 108: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0004958406207151711
    2. ' M' → logprob: -7.625495910644531
    3. ' ' → logprob: -12.625495910644531
    4. '100' → logprob: -13.500495910644531
    5. '   ' → logprob: -13.750495910644531
    6. 'm' → logprob: -14.625495910644531
    7. '10' → logprob: -15.500495910644531
    8. '(' → logprob: -15.875495910644531
    9. '(M' → logprob: -16.12549591064453
    10. '998' → logprob: -16.25049591064453

Token 109: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7150936126708984
    2. '<|end|>' → logprob: -0.9650936126708984
    3. '
' → logprob: -3.0900936126708984
    4. ')' → logprob: -3.2150936126708984
    5. '```' → logprob: -4.090093612670898
    6. '[' → logprob: -4.215093612670898
    7. '(' → logprob: -6.340093612670898
    8. 'newline' → logprob: -6.465093612670898
    9. ' ' → logprob: -6.590093612670898
    10. '<|end|>' → logprob: -7.465093612670898

Token 110: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 111: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6959707736968994
    2. '(d' → logprob: -0.6959707736968994
    3. '(*' → logprob: -6.19597053527832
    4. '(len' → logprob: -8.44597053527832
    5. '(sum' → logprob: -8.57097053527832
    6. '(
' → logprob: -9.07097053527832
    7. '()' → logprob: -9.57097053527832
    8. '(max' → logprob: -10.19597053527832
    9. '(np' → logprob: -10.32097053527832
    10. '('' → logprob: -10.69597053527832

Token 112: '(d' (ID: 2572)
  Prédit: '(d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.0008291634730994701
    2. '(' → logprob: -7.125829219818115
    3. ')' → logprob: -11.250828742980957
    4. ' (' → logprob: -12.375828742980957
    5. '()' → logprob: -12.625828742980957
    6. 'd' → logprob: -13.250828742980957
    7. '(
' → logprob: -14.375828742980957
    8. '((' → logprob: -14.500828742980957
    9. '(`' → logprob: -15.750828742980957
    10. '(D' → logprob: -15.750828742980957

Token 113: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0003055493871215731
    2. '[l' → logprob: -8.50030517578125
    3. '[' → logprob: -10.25030517578125
    4. '[n' → logprob: -11.00030517578125
    5. '[:,' → logprob: -11.00030517578125
    6. ')' → logprob: -11.50030517578125
    7. ' [-' → logprob: -12.00030517578125
    8. '[:' → logprob: -12.62530517578125
    9. '[len' → logprob: -12.75030517578125
    10. '[d' → logprob: -13.00030517578125

Token 114: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2113979209971149e-05
    2. '-' → logprob: -11.500012397766113
    3. ' ' → logprob: -14.000012397766113
    4. '[' → logprob: -14.750012397766113
    5. '])' → logprob: -15.375012397766113
    6. '１' → logprob: -15.500012397766113
    7. '```' → logprob: -16.562511444091797
    8. ']' → logprob: -16.812511444091797
    9. ' -' → logprob: -16.875011444091797
    10. '[-' → logprob: -16.937511444091797

Token 115: '][:' (ID: 63357)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26764699816703796
    2. '])' → logprob: -1.5176470279693604
    3. ')%' → logprob: -5.267646789550781
    4. '))' → logprob: -5.642646789550781
    5. ']' → logprob: -5.767646789550781
    6. ']))' → logprob: -6.642646789550781
    7. ']%' → logprob: -7.517646789550781
    8. '%' → logprob: -8.017646789550781
    9. '%)' → logprob: -8.267646789550781
    10. '）' → logprob: -8.267646789550781

Token 116: 'l' (ID: 75)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007947287522256374
    2. 'l' → logprob: -5.8829474449157715
    3. '])' → logprob: -6.2579474449157715
    4. '3' → logprob: -6.6329474449157715
    5. ':n' → logprob: -7.6329474449157715
    6. ':' → logprob: -7.8829474449157715
    7. '5' → logprob: -8.632946968078613
    8. '-n' → logprob: -9.007946968078613
    9. ' n' → logprob: -9.007946968078613
    10. '2' → logprob: -9.257946968078613

Token 117: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.020634382963180542
    2. ')' → logprob: -4.145634174346924
    3. ']))' → logprob: -5.645634174346924
    4. ']' → logprob: -7.520634174346924
    5. ')%' → logprob: -8.645634651184082
    6. '))' → logprob: -9.520634651184082
    7. ']%' → logprob: -9.520634651184082
    8. ' ])' → logprob: -9.645634651184082
    9. ')])' → logprob: -9.895634651184082
    10. '%' → logprob: -10.645634651184082

Token 118: ' %' (ID: 1851)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4378848391061183e-05
    2. '))' → logprob: -12.000014305114746
    3. ' )' → logprob: -13.125014305114746
    4. '`)' → logprob: -13.375014305114746
    5. ')`' → logprob: -13.375014305114746
    6. ')
' → logprob: -13.875014305114746
    7. '%' → logprob: -14.500014305114746
    8. '```' → logprob: -15.375014305114746
    9. '+' → logprob: -15.625014305114746
    10. '%)' → logprob: -15.750014305114746

Token 119: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005234002135694027
    2. ' M' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.255233764648438
    4. ')' → logprob: -18.505233764648438
    5. '	M' → logprob: -18.755233764648438
    6. ' ' → logprob: -19.005233764648438
    7. '  ' → logprob: -19.005233764648438
    8. '   ' → logprob: -19.255233764648438
    9. '(M' → logprob: -19.880233764648438
    10. 'М' → logprob: -20.380233764648438

Token 120: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. '))' → logprob: -13.250003814697266
    3. ')
' → logprob: -13.750003814697266
    4. ' )' → logprob: -14.750003814697266
    5. '`)' → logprob: -15.000003814697266
    6. ')`' → logprob: -15.750003814697266
    7. '')' → logprob: -16.625003814697266
    8. '```' → logprob: -17.500003814697266
    9. '）' → logprob: -18.250003814697266
    10. '")' → logprob: -18.250003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 118
Tokens correctement prédits (1ère position, stricte): 39
Tokens correctement prédits (1ère position, avec adaptation): 39
Tokens correctement prédits (top 10): 92
Précision stricte (1ère position): 33.05%
Précision adaptée (1ère position): 33.05%
Précision (top 10): 77.97%
================================================================================
