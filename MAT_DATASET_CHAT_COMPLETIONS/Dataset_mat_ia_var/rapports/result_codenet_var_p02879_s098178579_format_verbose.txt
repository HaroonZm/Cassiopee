================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:40:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def calculate_product_of_single_digit_integers():
    first_integer, second_integer = map(int, input().split())
    
    if 1 <= first_integer <= 9 and 1 <= second_integer <= 9:
        return first_integer * second_integer
    else:
        return -1

if __name__ == '__main__':
    print(calculate_product_of_single_digit_integers())
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' calculate' (ID: 17950)
  → Token d'amorce (pas de prédiction)

Token 2: '_product' (ID: 21247)
  → Token d'amorce (pas de prédiction)

Token 3: '_of' (ID: 8023)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006998451426625252
    2. '_' → logprob: -5.006998538970947
    3. ' (' → logprob: -9.256998062133789
    4. '```' → logprob: -9.506998062133789
    5. '_parent' → logprob: -11.131998062133789
    6. '(_' → logprob: -11.631998062133789
    7. '_token' → logprob: -12.131998062133789
    8. '\(' → logprob: -12.256998062133789
    9. '("("' → logprob: -12.381998062133789
    10. '_(' → logprob: -12.381998062133789

Token 4: '_single' (ID: 46053)
  Prédit: '_two'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_two' → logprob: -0.6511897444725037
    2. '_numbers' → logprob: -1.1511898040771484
    3. '_list' → logprob: -2.0261898040771484
    4. '_elements' → logprob: -4.901189804077148
    5. '_' → logprob: -5.026189804077148
    6. '_array' → logprob: -5.651189804077148
    7. '_three' → logprob: -5.776189804077148
    8. '_lists' → logprob: -6.151189804077148
    9. '_values' → logprob: -6.276189804077148
    10. '_words' → logprob: -6.401189804077148

Token 5: '_digit' (ID: 119592)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08881818503141403
    2. '_word' → logprob: -3.463818073272705
    3. '_character' → logprob: -4.588818073272705
    4. '_digit' → logprob: -4.588818073272705
    5. '_letter' → logprob: -5.088818073272705
    6. '_char' → logprob: -5.338818073272705
    7. '_variable' → logprob: -5.838818073272705
    8. '_number' → logprob: -6.213818073272705
    9. '_words' → logprob: -6.338818073272705
    10. '_letters' → logprob: -6.463818073272705

Token 6: '_in' (ID: 2267)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.059303008019924164
    2. '_s' → logprob: -3.309303045272827
    3. '_' → logprob: -4.684302806854248
    4. '(' → logprob: -4.684302806854248
    5. '```' → logprob: -7.059302806854248
    6. '_:' → logprob: -7.934302806854248
    7. '():' → logprob: -8.184303283691406
    8. '(s' → logprob: -8.309303283691406
    9. '_numbers' → logprob: -8.809303283691406
    10. '(_:' → logprob: -8.809303283691406

Token 7: 'te' (ID: 411)
  Prédit: 'put'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'put' → logprob: -0.4051629602909088
    2. 'te' → logprob: -1.4051629304885864
    3. 'teger' → logprob: -2.905163049697876
    4. 't' → logprob: -4.405162811279297
    5. 's' → logprob: -5.155162811279297
    6. '_number' → logprob: -5.280162811279297
    7. 'puts' → logprob: -6.280162811279297
    8. '```' → logprob: -6.280162811279297
    9. '_string' → logprob: -6.780162811279297
    10. '_numbers' → logprob: -7.030162811279297

Token 8: 'gers' (ID: 13027)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.675822913646698
    2. 'gers' → logprob: -0.800822913646698
    3. 'r' → logprob: -3.6758229732513428
    4. 'gr' → logprob: -4.675822734832764
    5. '```' → logprob: -5.050822734832764
    6. 'ger' → logprob: -6.925822734832764
    7. '``' → logprob: -9.675823211669922
    8. 'rs' → logprob: -10.050823211669922
    9. '`' → logprob: -10.175823211669922
    10. 'ers' → logprob: -10.550823211669922

Token 9: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21965977549552917
    2. '():' → logprob: -1.8446598052978516
    3. '(:' → logprob: -3.7196598052978516
    4. ':' → logprob: -4.844659805297852
    5. '(_:' → logprob: -5.594659805297852
    6. '```' → logprob: -6.219659805297852
    7. '_:' → logprob: -8.344659805297852
    8. '(a' → logprob: -8.469659805297852
    9. '(":' → logprob: -8.719659805297852
    10. '(_' → logprob: -8.844659805297852

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33592602610588074
    2. '\' → logprob: -2.335926055908203
    3. ':' → logprob: -2.585926055908203
    4. '```' → logprob: -2.585926055908203
    5. '\n' → logprob: -3.710926055908203
    6. '    
' → logprob: -5.460926055908203
    7. ':\' → logprob: -6.585926055908203
    8. ':
' → logprob: -6.960926055908203
    9. '(' → logprob: -6.960926055908203
    10. '``' → logprob: -6.960926055908203

Token 11: ' first' (ID: 1577)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '    ' → logprob: -1.3280906677246094
    2. '```' → logprob: -1.7030906677246094
    3. '\' → logprob: -1.8280906677246094
    4. ' ' → logprob: -1.9530906677246094
    5. '   ' → logprob: -2.9530906677246094
    6. 'a' → logprob: -3.0780906677246094
    7. '\n' → logprob: -3.4530906677246094
    8. '`' → logprob: -3.9530906677246094
    9. ' 
' → logprob: -4.203090667724609
    10. ' \' → logprob: -4.203090667724609

Token 12: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.033024806529283524
    2. '_space' → logprob: -3.658024787902832
    3. ' _' → logprob: -5.658024787902832
    4. ' ' → logprob: -6.783024787902832
    5. ' =' → logprob: -7.783024787902832
    6. '_digit' → logprob: -7.783024787902832
    7. 'space' → logprob: -8.283024787902832
    8. '_token' → logprob: -8.408024787902832
    9. '_s' → logprob: -9.158024787902832
    10. '_number' → logprob: -9.283024787902832

Token 13: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.19331440329551697
    2. ' =' → logprob: -1.9433144330978394
    3. ' _' → logprob: -4.318314552307129
    4. '_space' → logprob: -4.693314552307129
    5. '=' → logprob: -5.068314552307129
    6. ' ' → logprob: -6.068314552307129
    7. 's' → logprob: -8.318314552307129
    8. ')' → logprob: -8.568314552307129
    9. '[' → logprob: -8.943314552307129
    10. '_s' → logprob: -9.068314552307129

Token 14: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.27007853984832764
    2. 'second' → logprob: -1.5200785398483276
    3. ' ' → logprob: -4.645078659057617
    4. ' =' → logprob: -5.520078659057617
    5. '=' → logprob: -6.020078659057617
    6. '    ' → logprob: -7.895078659057617
    7. '_' → logprob: -7.895078659057617
    8. '_second' → logprob: -8.270078659057617
    9. ' _' → logprob: -8.895078659057617
    10. '	second' → logprob: -8.895078659057617

Token 15: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01500056404620409
    2. '_integer' → logprob: -4.265000343322754
    3. '_=' → logprob: -8.515000343322754
    4. '_,' → logprob: -8.640000343322754
    5. '=' → logprob: -9.015000343322754
    6. ' _' → logprob: -9.390000343322754
    7. '_int' → logprob: -10.265000343322754
    8. '_in' → logprob: -10.515000343322754
    9. ' =' → logprob: -10.515000343322754
    10. ',' → logprob: -10.765000343322754

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11477471888065338
    2. '=' → logprob: -2.239774703979492
    3. ',' → logprob: -6.489774703979492
    4. '<|end|>' → logprob: -8.614774703979492
    5. ')' → logprob: -9.239774703979492
    6. ' ' → logprob: -9.864774703979492
    7. '   ' → logprob: -10.489774703979492
    8. '_' → logprob: -10.739774703979492
    9. '```' → logprob: -11.364774703979492
    10. ' =
' → logprob: -11.364774703979492

Token 17: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19534780085086823
    2. '0' → logprob: -1.820347785949707
    3. '1' → logprob: -4.945347785949707
    4. ' map' → logprob: -5.445347785949707
    5. ' input' → logprob: -6.445347785949707
    6. 'input' → logprob: -6.570347785949707
    7. 'map' → logprob: -7.570347785949707
    8. ' randint' → logprob: -9.195347785949707
    9. ' (' → logprob: -9.320347785949707
    10. '2' → logprob: -9.445347785949707

Token 18: '(int' (ID: 2742)
  Prédit: '(lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lambda' → logprob: -0.6950498223304749
    2. '<|end|>' → logprob: -1.07004976272583
    3. '(int' → logprob: -2.57004976272583
    4. '(' → logprob: -2.82004976272583
    5. '(str' → logprob: -4.57004976272583
    6. '<|end|>' → logprob: -5.69504976272583
    7. '```' → logprob: -5.82004976272583
    8. '(range' → logprob: -7.69504976272583
    9. '(token' → logprob: -7.82004976272583
    10. 'int' → logprob: -7.82004976272583

Token 19: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8540945053100586
    2. ')' → logprob: -0.9790945053100586
    3. '<|end|>' → logprob: -1.9790945053100586
    4. '```' → logprob: -3.7290945053100586
    5. '<|end|>' → logprob: -4.729094505310059
    6. '(input' → logprob: -4.854094505310059
    7. '(range' → logprob: -4.979094505310059
    8. '(token' → logprob: -5.979094505310059
    9. '('' → logprob: -6.229094505310059
    10. '(user' → logprob: -6.229094505310059

Token 20: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4296037554740906
    2. 'input' → logprob: -1.0546038150787354
    3. ')' → logprob: -7.179603576660156
    4. ' )' → logprob: -9.679603576660156
    5. '(input' → logprob: -9.804603576660156
    6. ' ' → logprob: -12.429603576660156
    7. ',input' → logprob: -12.554603576660156
    8. '	input' → logprob: -13.054603576660156
    9. '[input' → logprob: -13.179603576660156
    10. 'str' → logprob: -13.429603576660156

Token 21: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.581505537033081
    2. '()' → logprob: -1.581505537033081
    3. '(' → logprob: -2.081505537033081
    4. ')' → logprob: -2.706505537033081
    5. '().' → logprob: -3.956505537033081
    6. '('' → logprob: -4.08150577545166
    7. '(""))' → logprob: -6.08150577545166
    8. '(()' → logprob: -7.08150577545166
    9. '<|end|>' → logprob: -7.70650577545166
    10. '<|end|>' → logprob: -7.70650577545166

Token 22: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001242772996192798
    2. 'strip' → logprob: -9.000123977661133
    3. 'rstrip' → logprob: -14.625123977661133
    4. ' split' → logprob: -15.125123977661133
    5. '(split' → logprob: -16.375123977661133
    6. 'spl' → logprob: -16.375123977661133
    7. 's' → logprob: -17.625123977661133
    8. 'replace' → logprob: -18.250123977661133
    9. ')' → logprob: -18.375123977661133
    10. 'read' → logprob: -18.500123977661133

Token 23: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.11765410751104355
    2. '()))' → logprob: -2.4926540851593018
    3. ')' → logprob: -4.117654323577881
    4. '))' → logprob: -4.742654323577881
    5. '()' → logprob: -5.742654323577881
    6. '(' → logprob: -9.992653846740723
    7. '()),' → logprob: -11.242653846740723
    8. ' ())' → logprob: -12.117653846740723
    9. '())
' → logprob: -12.367653846740723
    10. '()))
' → logprob: -12.492653846740723

Token 24: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.293270468711853
    2. '\n' → logprob: -2.7932705879211426
    3. '    
' → logprob: -2.7932705879211426
    4. '*' → logprob: -3.9182705879211426
    5. ')' → logprob: -4.293270587921143
    6. '  
' → logprob: -4.418270587921143
    7. ' ' → logprob: -4.418270587921143
    8. '
' → logprob: -4.543270587921143
    9. '\' → logprob: -4.793270587921143
    10. '```' → logprob: -5.168270587921143

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0467933416366577
    2. ' product' → logprob: -1.6717933416366577
    3. ' result' → logprob: -1.6717933416366577
    4. 'result' → logprob: -1.7967933416366577
    5. 'product' → logprob: -2.2967934608459473
    6. ' return' → logprob: -5.546793460845947
    7. 'return' → logprob: -6.546793460845947
    8. ' p' → logprob: -8.046792984008789
    9. 'p' → logprob: -8.421792984008789
    10. ' prod' → logprob: -8.921792984008789

Token 26: ' if' (ID: 538)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.39560139179229736
    2. 'result' → logprob: -1.5206013917922974
    3. 'return' → logprob: -2.395601272583008
    4. 'p' → logprob: -4.645601272583008
    5. 'r' → logprob: -5.520601272583008
    6. ' product' → logprob: -6.270601272583008
    7. ' return' → logprob: -7.520601272583008
    8. ' result' → logprob: -7.895601272583008
    9. '   ' → logprob: -8.770601272583008
    10. 'first' → logprob: -8.770601272583008

Token 27: ' ' (ID: 220)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.05203840881586075
    2. ' ' → logprob: -3.3020384311676025
    3. 'first' → logprob: -4.677038192749023
    4. ' (' → logprob: -5.927038192749023
    5. ' not' → logprob: -6.427038192749023
    6. '(first' → logprob: -9.177038192749023
    7. ' abs' → logprob: -9.552038192749023
    8. '0' → logprob: -9.677038192749023
    9. '  ' → logprob: -10.302038192749023
    10. ' second' → logprob: -11.677038192749023

Token 28: '1' (ID: 16)
  Prédit: ' first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.09203998744487762
    2. 'first' → logprob: -2.4670400619506836
    3. ' (' → logprob: -6.717040061950684
    4. ' ' → logprob: -7.467040061950684
    5. ' abs' → logprob: -7.467040061950684
    6. '(first' → logprob: -7.967040061950684
    7. '0' → logprob: -8.842040061950684
    8. 'abs' → logprob: -9.217040061950684
    9. ' not' → logprob: -9.717040061950684
    10. '(' → logprob: -10.342040061950684

Token 29: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7215426564216614
    2. '0' → logprob: -1.3465425968170166
    3. ' ' → logprob: -1.7215425968170166
    4. ' <' → logprob: -2.7215425968170166
    5. '<=' → logprob: -6.596542835235596
    6. '2' → logprob: -6.846542835235596
    7. ' ==' → logprob: -6.846542835235596
    8. '<' → logprob: -6.971542835235596
    9. '  ' → logprob: -7.346542835235596
    10. ' and' → logprob: -7.471542835235596

Token 30: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.47408831119537354
    2. ' first' → logprob: -0.9740883111953735
    3. ' ' → logprob: -11.849088668823242
    4. 'second' → logprob: -13.099088668823242
    5. '   ' → logprob: -14.724088668823242
    6. ' second' → logprob: -15.099088668823242
    7. '	first' → logprob: -15.099088668823242
    8. 'third' → logprob: -15.474088668823242
    9. '  ' → logprob: -15.474088668823242
    10. 'f' → logprob: -16.099088668823242

Token 31: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.3068161904811859
    2. ' _' → logprob: -1.8068162202835083
    3. '_' → logprob: -2.3068161010742188
    4. ' ' → logprob: -8.431816101074219
    5. '_in' → logprob: -9.556816101074219
    6. '_digit' → logprob: -9.931816101074219
    7. '   ' → logprob: -10.431816101074219
    8. '_second' → logprob: -10.931816101074219
    9. '_Integer' → logprob: -11.181816101074219
    10. '  ' → logprob: -11.306816101074219

Token 32: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.16512823104858398
    2. ' and' → logprob: -2.040128231048584
    3. 'and' → logprob: -4.290128231048584
    4. ' ' → logprob: -4.915128231048584
    5. '<=' → logprob: -6.915128231048584
    6. ' <' → logprob: -9.165128707885742
    7. '<|end|>' → logprob: -10.790128707885742
    8. ' ≤' → logprob: -11.415128707885742
    9. '1' → logprob: -11.915128707885742
    10. '    ' → logprob: -12.165128707885742

Token 33: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.023248974233865738
    2. ' ' → logprob: -3.7732489109039307
    3. '  ' → logprob: -14.273248672485352
    4. '   ' → logprob: -14.335748672485352
    5. '10' → logprob: -14.585748672485352
    6. '1' → logprob: -14.898248672485352
    7. '```' → logprob: -15.335748672485352
    8. '99' → logprob: -15.773248672485352
    9. '3' → logprob: -16.02324867248535
    10. '  
' → logprob: -16.39824867248535

Token 34: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -6.790129555156454e-05
    2. ' ' → logprob: -9.625067710876465
    3. '1' → logprob: -14.750067710876465
    4. '10' → logprob: -15.125067710876465
    5. '99' → logprob: -15.312567710876465
    6. '999' → logprob: -15.812567710876465
    7. '   ' → logprob: -16.12506866455078
    8. '3' → logprob: -16.18756866455078
    9. '```' → logprob: -16.25006866455078
    10. '0' → logprob: -16.31256866455078

Token 35: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023389199748635292
    2. 'and' → logprob: -3.7733891010284424
    3. ' ' → logprob: -9.148388862609863
    4. '    ' → logprob: -10.773388862609863
    5. ':' → logprob: -11.648388862609863
    6. '   ' → logprob: -12.648388862609863
    7. ' ' → logprob: -13.523388862609863
    8. '  ' → logprob: -13.898388862609863
    9. '<|end|>' → logprob: -15.023388862609863
    10. '	and' → logprob: -15.023388862609863

Token 36: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0011083055287599564
    2. '1' → logprob: -7.376108169555664
    3. ' second' → logprob: -8.376108169555664
    4. '    ' → logprob: -8.751108169555664
    5. ' first' → logprob: -10.501108169555664
    6. ' (' → logprob: -11.501108169555664
    7. '0' → logprob: -11.626108169555664
    8. '<|end|>' → logprob: -11.626108169555664
    9. ' and' → logprob: -11.751108169555664
    10. '  ' → logprob: -11.876108169555664

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2613433599472046
    2. ' second' → logprob: -1.2613433599472046
    3. 'second' → logprob: -1.2613433599472046
    4. ' ' → logprob: -2.011343479156494
    5. '9' → logprob: -4.511343479156494
    6. '   ' → logprob: -5.511343479156494
    7. '2' → logprob: -6.886343479156494
    8. '    ' → logprob: -9.261343002319336
    9. '  ' → logprob: -9.511343002319336
    10. '	second' → logprob: -10.636343002319336

Token 38: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0007681751740165055
    2. '<=' → logprob: -7.500768184661865
    3. '<|end|>' → logprob: -9.250767707824707
    4. ' ' → logprob: -10.000767707824707
    5. ' and' → logprob: -10.000767707824707
    6. ' ≤' → logprob: -11.500767707824707
    7. 'and' → logprob: -12.250767707824707
    8. ' <' → logprob: -12.625767707824707
    9. ' <<=' → logprob: -13.125767707824707
    10. '<|end|>' → logprob: -13.375767707824707

Token 39: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.006719759665429592
    2. 'second' → logprob: -5.006719589233398
    3. ' ' → logprob: -12.506719589233398
    4. '	second' → logprob: -14.881719589233398
    5. ' ' → logprob: -15.506719589233398
    6. '(second' → logprob: -16.8817195892334
    7. ' third' → logprob: -17.3817195892334
    8. ' first' → logprob: -17.5067195892334
    9. '_second' → logprob: -18.1317195892334
    10. '.second' → logprob: -18.8817195892334

Token 40: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -0.0027070348151028156
    2. '_' → logprob: -6.502707004547119
    3. ' _' → logprob: -6.752707004547119
    4. '_in' → logprob: -11.627707481384277
    5. '_Integer' → logprob: -11.627707481384277
    6. '_INTEGER' → logprob: -12.002707481384277
    7. '_int' → logprob: -13.127707481384277
    8. ' ' → logprob: -13.377707481384277
    9. '_second' → logprob: -13.502707481384277
    10. '   ' → logprob: -14.002707481384277

Token 41: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.014246482402086258
    2. '<=' → logprob: -4.264246463775635
    3. ' ' → logprob: -9.514246940612793
    4. ' <' → logprob: -13.014246940612793
    5. '  ' → logprob: -13.389246940612793
    6. '```' → logprob: -13.764246940612793
    7. '<|end|>' → logprob: -13.889246940612793
    8. ')<=' → logprob: -14.139246940612793
    9. ' ' → logprob: -14.264246940612793
    10. ' <=",' → logprob: -15.014246940612793

Token 42: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.10020806640386581
    2. ' ' → logprob: -2.350208044052124
    3. '  ' → logprob: -15.162708282470703
    4. '<|end|>' → logprob: -15.475208282470703
    5. '   ' → logprob: -15.537708282470703
    6. '1' → logprob: -15.850208282470703
    7. '```' → logprob: -15.912708282470703
    8. '10' → logprob: -15.975208282470703
    9. '۹' → logprob: -16.662708282470703
    10. ' ' → logprob: -16.850208282470703

Token 43: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -17.43757438659668
    4. '９' → logprob: -17.62507438659668
    5. '```' → logprob: -17.62507438659668
    6. '۹' → logprob: -17.93757438659668
    7. '  ' → logprob: -18.25007438659668
    8. '९' → logprob: -18.43757438659668
    9. '1' → logprob: -18.68757438659668
    10. '৯' → logprob: -19.56257438659668

Token 44: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018804390856530517
    2. '):' → logprob: -8.750187873840332
    3. ' :' → logprob: -11.875187873840332
    4. ' and' → logprob: -12.000187873840332
    5. ':**' → logprob: -12.000187873840332
    6. ':
' → logprob: -12.375187873840332
    7. ':return' → logprob: -13.000187873840332
    8. '>:' → logprob: -13.750187873840332
    9. 'and' → logprob: -14.000187873840332
    10. '   ' → logprob: -14.000187873840332

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03376441448926926
    2. ':' → logprob: -3.408764362335205
    3. ':
' → logprob: -10.533764839172363
    4. ':return' → logprob: -10.908764839172363
    5. ' return' → logprob: -11.158764839172363
    6. '   ' → logprob: -11.158764839172363
    7. ',' → logprob: -11.658764839172363
    8. ' :' → logprob: -12.033764839172363
    9. '):' → logprob: -12.158764839172363
    10. 'return' → logprob: -12.533764839172363

Token 46: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7262210845947266
    2. 'return' (adapté à ' return') → logprob: -1.2262210845947266
    3. '           ' → logprob: -1.9762210845947266
    4. ' return' → logprob: -2.4762210845947266
    5. '   ' → logprob: -9.601221084594727
    6. 'result' → logprob: -9.726221084594727
    7. 'n' → logprob: -11.226221084594727
    8. '```' → logprob: -11.351221084594727
    9. 'product' → logprob: -12.101221084594727
    10. '_return' → logprob: -12.226221084594727

Token 47: ' first' (ID: 1577)
  Prédit: ' first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' first' → logprob: -0.10021961480379105
    2. 'first' → logprob: -2.3502197265625
    3. ' ' → logprob: -12.6002197265625
    4. 'f' → logprob: -12.8502197265625
    5. '   ' → logprob: -13.3502197265625
    6. '(first' → logprob: -13.6002197265625
    7. '	first' → logprob: -13.8502197265625
    8. ' ' → logprob: -14.1002197265625
    9. '1' → logprob: -14.7252197265625
    10. '[first' → logprob: -14.7252197265625

Token 48: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6943033933639526
    2. '_integer' → logprob: -0.6943033933639526
    3. ' _' → logprob: -7.444303512573242
    4. '_second' → logprob: -9.319303512573242
    5. '_character' → logprob: -9.694303512573242
    6. '_string' → logprob: -10.069303512573242
    7. '_under' → logprob: -10.069303512573242
    8. '__' → logprob: -10.319303512573242
    9. '_in' → logprob: -10.444303512573242
    10. '_\' → logprob: -10.694303512573242

Token 49: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31345194578170776
    2. '*' → logprob: -1.3134520053863525
    3. ' ' → logprob: -9.563451766967773
    4. '`' → logprob: -10.563451766967773
    5. '**' → logprob: -11.063451766967773
    6. '   ' → logprob: -11.063451766967773
    7. '    ' → logprob: -11.438451766967773
    8. ' **' → logprob: -11.563451766967773
    9. '  ' → logprob: -11.688451766967773
    10. '```' → logprob: -11.813451766967773

Token 50: ' second' (ID: 3099)
  Prédit: ' second'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' second' → logprob: -0.054896384477615356
    2. 'second' → logprob: -2.929896354675293
    3. ' ' → logprob: -12.179896354675293
    4. ' ' → logprob: -12.304896354675293
    5. '(second' → logprob: -13.304896354675293
    6. ' first' → logprob: -13.429896354675293
    7. '	second' → logprob: -14.054896354675293
    8. '_second' → logprob: -16.17989730834961
    9. '.second' → logprob: -16.42989730834961
    10. '```' → logprob: -16.42989730834961

Token 51: '_integer' (ID: 82911)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.47558897733688354
    2. '_integer' → logprob: -0.9755889773368835
    3. '_token' → logprob: -7.725588798522949
    4. ' _' → logprob: -7.975588798522949
    5. '_int' → logprob: -7.975588798522949
    6. '_variable' → logprob: -9.97558879852295
    7. '_i' → logprob: -9.97558879852295
    8. '_in' → logprob: -10.10058879852295
    9. '_under' → logprob: -10.22558879852295
    10. '_character' → logprob: -10.35058879852295

Token 52: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31843864917755127
    2. '
' → logprob: -1.5684386491775513
    3. '<|end|>' → logprob: -2.9434385299682617
    4. '\' → logprob: -5.568438529968262
    5. '```' → logprob: -5.943438529968262
    6. '    
' → logprob: -6.568438529968262
    7. '   ' → logprob: -7.068438529968262
    8. '  
' → logprob: -7.318438529968262
    9. 'else' → logprob: -7.443438529968262
    10. '' → logprob: -7.818438529968262

Token 53: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31848904490470886
    2. '   ' → logprob: -1.5684890747070312
    3. '
' → logprob: -4.068489074707031
    4. '    
' → logprob: -4.318489074707031
    5. '<|end|>' → logprob: -4.318489074707031
    6. '\' → logprob: -4.693489074707031
    7. 'else' → logprob: -5.318489074707031
    8. '```' → logprob: -5.818489074707031
    9. '  
' → logprob: -6.693489074707031
    10. ' else' → logprob: -7.443489074707031

Token 54: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1522819995880127
    2. 'else' (adapté à ' else') → logprob: -2.7772819995880127
    3. '\n' → logprob: -2.9022819995880127
    4. '    
' → logprob: -4.527281761169434
    5. ' else' → logprob: -5.277281761169434
    6. '<|end|>' → logprob: -5.652281761169434
    7. '
' → logprob: -6.277281761169434
    8. '  
' → logprob: -7.402281761169434
    9. ' ' → logprob: -7.402281761169434
    10. '```' → logprob: -7.777281761169434

Token 55: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041696816333569586
    2. ' :' → logprob: -8.50041675567627
    3. '       ' → logprob: -9.25041675567627
    4. ':
' → logprob: -9.75041675567627
    5. ':return' → logprob: -10.25041675567627
    6. '   ' → logprob: -11.62541675567627
    7. '    ' → logprob: -12.12541675567627
    8. '():' → logprob: -12.87541675567627
    9. '):' → logprob: -13.25041675567627
    10. '        ' → logprob: -14.12541675567627

Token 56: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.3061271607875824
    2. '   ' → logprob: -1.8061271905899048
    3. '       ' → logprob: -3.1811270713806152
    4. ' None' → logprob: -4.181127071380615
    5. '     
' → logprob: -4.681127071380615
    6. ' ' → logprob: -4.681127071380615
    7. '"' → logprob: -5.181127071380615
    8. '    
' → logprob: -5.306127071380615
    9. ' 
' → logprob: -5.556127071380615
    10. ' raise' → logprob: -5.931127071380615

Token 57: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5078385472297668
    2. ' None' → logprob: -1.632838487625122
    3. '    ' → logprob: -2.632838487625122
    4. ' return' → logprob: -2.882838487625122
    5. ' raise' → logprob: -3.632838487625122
    6. '       ' → logprob: -4.382838726043701
    7. 'None' → logprob: -4.507838726043701
    8. 'return' (adapté à ' return') → logprob: -4.507838726043701
    9. 'raise' → logprob: -5.132838726043701
    10. ' ' → logprob: -6.132838726043701

Token 58: ' -' (ID: 533)
  Prédit: ' None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.10210060328245163
    2. 'None' → logprob: -2.3521006107330322
    3. '0' → logprob: -6.477100372314453
    4. ' ' → logprob: -7.977100372314453
    5. '"' → logprob: -12.102100372314453
    6. ' False' → logprob: -13.602100372314453
    7. 'False' → logprob: -13.602100372314453
    8. '_None' → logprob: -13.977100372314453
    9. ' "' → logprob: -14.227100372314453
    10. '(None' → logprob: -14.602100372314453

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '2' → logprob: -16.500001907348633
    4. '10' → logprob: -17.250001907348633
    5. 'abs' → logprob: -18.625001907348633
    6. '100' → logprob: -18.625001907348633
    7. '0' → logprob: -18.625001907348633
    8. '9' → logprob: -19.250001907348633
    9. '１' → logprob: -19.250001907348633
    10. '   ' → logprob: -19.312501907348633

Token 60: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: 'if' (ID: 366)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.880134642124176
    2. '<|end|>' → logprob: -1.3801345825195312
    3. '
' → logprob: -1.6301345825195312
    4. '#' → logprob: -2.7551345825195312
    5. '\' → logprob: -3.5051345825195312
    6. '```' → logprob: -3.6301345825195312
    7. '' → logprob: -5.380134582519531
    8. 'newline' → logprob: -5.380134582519531
    9. ')' → logprob: -6.505134582519531
    10. '<|end|>' → logprob: -6.630134582519531

Token 62: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0028849986847490072
    2. '__' → logprob: -6.627884864807129
    3. ' ' → logprob: -7.002884864807129
    4. ' ' → logprob: -7.377884864807129
    5. '_' → logprob: -11.127884864807129
    6. ' True' → logprob: -13.002884864807129
    7. '  ' → logprob: -13.877884864807129
    8. ' first' → logprob: -14.002884864807129
    9. ' _' → logprob: -14.127884864807129
    10. ' ‌' → logprob: -14.127884864807129

Token 63: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.005991247948259115
    2. ' __' → logprob: -6.255991458892822
    3. ' ==' → logprob: -6.380991458892822
    4. '.' → logprob: -7.255991458892822
    5. '.__' → logprob: -7.755991458892822
    6. 'name' → logprob: -8.255990982055664
    7. '__.__' → logprob: -8.255990982055664
    8. '_' → logprob: -8.755990982055664
    9. ' .' → logprob: -9.005990982055664
    10. '[' → logprob: -9.130990982055664

Token 64: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.45848218582978e-06
    2. '__.__' → logprob: -13.37500286102295
    3. '__.' → logprob: -15.25000286102295
    4. '____' → logprob: -15.25000286102295
    5. '_' → logprob: -16.000001907348633
    6. '___' → logprob: -16.250001907348633
    7. '==' → logprob: -16.750001907348633
    8. '__
' → logprob: -17.625001907348633
    9. '__

' → logprob: -17.750001907348633
    10. '```' → logprob: -18.000001907348633

Token 65: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.06547852605581284
    2. '==' → logprob: -2.940478563308716
    3. '__' → logprob: -4.815478324890137
    4. '=="' → logprob: -6.690478324890137
    5. '[' → logprob: -7.690478324890137
    6. '"' → logprob: -8.690478324890137
    7. '.' → logprob: -8.940478324890137
    8. '=='' → logprob: -9.190478324890137
    9. '['' → logprob: -10.065478324890137
    10. '["' → logprob: -10.315478324890137

Token 66: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.04881717637181282
    2. ''' → logprob: -3.0488171577453613
    3. ' "' → logprob: -8.92381763458252
    4. ' "__' → logprob: -9.29881763458252
    5. ' '__' → logprob: -13.42381763458252
    6. ' '' → logprob: -13.42381763458252
    7. '__' → logprob: -13.79881763458252
    8. '"user' → logprob: -14.29881763458252
    9. ' ' → logprob: -16.048816680908203
    10. ' ' → logprob: -16.798816680908203

Token 67: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.31625670194625854
    2. 'name' → logprob: -1.3162567615509033
    3. '__' → logprob: -5.941256523132324
    4. '_main' → logprob: -8.566256523132324
    5. '__.' → logprob: -9.316256523132324
    6. '_name' → logprob: -10.566256523132324
    7. 'm' → logprob: -11.441256523132324
    8. '__':
' → logprob: -11.941256523132324
    9. ' '__' → logprob: -12.066256523132324
    10. 'py' → logprob: -12.191256523132324

Token 68: '__':
' (ID: 39314)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0465402714908123
    2. '__':
' → logprob: -3.1715402603149414
    3. '__:' → logprob: -5.796540260314941
    4. '_' → logprob: -7.671540260314941
    5. '__('' → logprob: -11.296540260314941
    6. '':' → logprob: -12.046540260314941
    7. '__.' → logprob: -12.796540260314941
    8. '__":
' → logprob: -12.921540260314941
    9. '('__' → logprob: -13.171540260314941
    10. ':' → logprob: -13.921540260314941

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06822491437196732
    2. '    
' → logprob: -3.0682249069213867
    3. 'print' → logprob: -5.568224906921387
    4. ' print' → logprob: -5.568224906921387
    5. '
' → logprob: -5.693224906921387
    6. '```' → logprob: -5.818224906921387
    7. '<|end|>' → logprob: -6.443224906921387
    8. ' input' → logprob: -7.193224906921387
    9. '\n' → logprob: -7.568224906921387
    10. 'input' → logprob: -7.693224906921387

Token 70: ' print' (ID: 2123)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.550730288028717
    2. 'print' (adapté à ' print') → logprob: -1.3007302284240723
    3. ' result' → logprob: -2.0507302284240723
    4. ' print' → logprob: -3.8007302284240723
    5. '   ' → logprob: -9.55073070526123
    6. 'product' → logprob: -9.92573070526123
    7. ' product' → logprob: -10.92573070526123
    8. '```' → logprob: -13.30073070526123
    9. 'output' → logprob: -14.42573070526123
    10. '    
' → logprob: -14.42573070526123

Token 71: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03809691593050957
    2. '(c' → logprob: -3.2880969047546387
    3. '('' → logprob: -10.663097381591797
    4. '(calc' → logprob: -10.788097381591797
    5. ' (' → logprob: -12.913097381591797
    6. '()' → logprob: -13.163097381591797
    7. '(
' → logprob: -13.413097381591797
    8. '(cal' → logprob: -13.538097381591797
    9. '(

' → logprob: -13.538097381591797
    10. 'calculate' → logprob: -14.288097381591797

Token 72: 'alculate' (ID: 80190)
  Prédit: 'alculate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alculate' → logprob: -6.742448022123426e-05
    2. 'calculate' → logprob: -10.000067710876465
    3. 'alc' → logprob: -11.375067710876465
    4. 'al' → logprob: -11.500067710876465
    5. 'aculate' → logprob: -15.250067710876465
    6. 'alu' → logprob: -16.87506675720215
    7. 'alk' → logprob: -17.25006675720215
    8. 'culate' → logprob: -17.62506675720215
    9. 'ulate' → logprob: -17.62506675720215
    10. ')' → logprob: -17.75006675720215

Token 73: '_product' (ID: 21247)
  Prédit: '_product'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_product' → logprob: -5.633853652398102e-05
    2. '_' → logprob: -10.250056266784668
    3. ')_' → logprob: -11.375056266784668
    4. '_products' → logprob: -12.250056266784668
    5. ')' → logprob: -13.250056266784668
    6. '_Product' → logprob: -14.000056266784668
    7. '_pro' → logprob: -14.500056266784668
    8. '_p' → logprob: -14.750056266784668
    9. '_prod' → logprob: -15.250056266784668
    10. ' _' → logprob: -15.250056266784668

Token 74: '_of' (ID: 8023)
  Prédit: '_of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_of' → logprob: -1.664371848164592e-05
    2. '_' → logprob: -12.125016212463379
    3. ')_' → logprob: -12.125016212463379
    4. ')' → logprob: -13.125016212463379
    5. '_or' → logprob: -14.000016212463379
    6. '_o' → logprob: -14.125016212463379
    7. '_for' → logprob: -14.500016212463379
    8. '_)' → logprob: -14.750016212463379
    9. '_OF' → logprob: -15.500016212463379
    10. ' _' → logprob: -15.500016212463379

Token 75: '_single' (ID: 46053)
  Prédit: '_single'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_single' → logprob: -0.0001342903997283429
    2. '_s' → logprob: -9.375134468078613
    3. '_' → logprob: -10.125134468078613
    4. ' _' → logprob: -12.000134468078613
    5. 'single' → logprob: -14.125134468078613
    6. '_sn' → logprob: -14.875134468078613
    7. ')_' → logprob: -15.125134468078613
    8. '_first' → logprob: -15.125134468078613
    9. '_sign' → logprob: -15.375134468078613
    10. ' ' → logprob: -15.500134468078613

Token 76: '_digit' (ID: 119592)
  Prédit: '_digit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_digit' → logprob: -0.4423472285270691
    2. '_' → logprob: -1.0673472881317139
    3. '_-' → logprob: -5.442347049713135
    4. '_digits' → logprob: -5.942347049713135
    5. '_integer' → logprob: -6.192347049713135
    6. '-digit' → logprob: -6.692347049713135
    7. '-_' → logprob: -7.067347049713135
    8. '-' → logprob: -7.192347049713135
    9. ' _' → logprob: -7.192347049713135
    10. '_token' → logprob: -7.692347049713135

Token 77: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.0008336895843967795
    2. '_' → logprob: -7.125833511352539
    3. '_integer' → logprob: -10.875833511352539
    4. '_int' → logprob: -12.625833511352539
    5. ' _' → logprob: -13.125833511352539
    6. '_In' → logprob: -13.750833511352539
    7. '_IN' → logprob: -14.500833511352539
    8. '_inches' → logprob: -14.500833511352539
    9. ')_' → logprob: -14.625833511352539
    10. '_)' → logprob: -14.875833511352539

Token 78: 'te' (ID: 411)
  Prédit: 'te'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'te' → logprob: -0.01530689187347889
    2. 'eg' → logprob: -4.6403069496154785
    3. '_' → logprob: -5.8903069496154785
    4. '```' → logprob: -6.7653069496154785
    5. 't' → logprob: -7.3903069496154785
    6. '_te' → logprob: -8.14030647277832
    7. 'e' → logprob: -8.76530647277832
    8. 'gers' → logprob: -9.01530647277832
    9. 'teg' → logprob: -9.01530647277832
    10. '_t' → logprob: -9.64030647277832

Token 79: 'gers' (ID: 13027)
  Prédit: 'gers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gers' → logprob: -0.007672756444662809
    2. 'g' → logprob: -4.8826727867126465
    3. 'ger' → logprob: -9.882672309875488
    4. 'gr' → logprob: -11.507672309875488
    5. '_g' → logprob: -13.132672309875488
    6. '```' → logprob: -13.382672309875488
    7. '_' → logprob: -14.507672309875488
    8. '``' → logprob: -15.507672309875488
    9. 'gres' → logprob: -15.632672309875488
    10. '   ' → logprob: -15.632672309875488

Token 80: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4795118272304535
    2. '()' → logprob: -0.9795118570327759
    3. ')' → logprob: -5.229511737823486
    4. '(' → logprob: -10.729512214660645
    5. ' ())' → logprob: -10.979512214660645
    6. '())
' → logprob: -11.604512214660645
    7. '()))' → logprob: -12.354512214660645
    8. '()
' → logprob: -12.479512214660645
    9. '()]' → logprob: -13.354512214660645
    10. '`()' → logprob: -13.854512214660645


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 78
Tokens correctement prédits (1ère position, stricte): 37
Tokens correctement prédits (1ère position, avec adaptation): 37
Tokens correctement prédits (top 10): 65
Précision stricte (1ère position): 47.44%
Précision adaptée (1ère position): 47.44%
Précision (top 10): 83.33%
================================================================================
