================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:37:59
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
M = int(input())
d_sum = 0
c_sum = 0
for i in range(M):
    d, c = [int(_) for _ in input().split()]
    d_sum += d * c
    c_sum += c
print(c_sum - 1 + (d_sum - 1) // 9)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'M' (ID: 44)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002267539966851473
    2. '(M' → logprob: -6.502267360687256
    3. 'M' → logprob: -8.127267837524414
    4. '```' → logprob: -8.752267837524414
    5. ''' → logprob: -9.002267837524414
    6. '('' → logprob: -9.627267837524414
    7. '()' → logprob: -10.627267837524414
    8. ')' → logprob: -10.877267837524414
    9. '(
' → logprob: -11.002267837524414
    10. '`' → logprob: -11.127267837524414

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014320163987576962
    2. ')' → logprob: -4.889320373535156
    3. '()' → logprob: -5.139320373535156
    4. '())' → logprob: -8.514320373535156
    5. '(
' → logprob: -8.514320373535156
    6. '('' → logprob: -9.139320373535156
    7. '("("' → logprob: -9.514320373535156
    8. '(()' → logprob: -10.264320373535156
    9. '(

' → logprob: -10.389320373535156
    10. ''' → logprob: -10.639320373535156

Token 5: 'd' (ID: 67)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.493788719177246
    2. 'for' → logprob: -1.493788719177246
    3. ''' → logprob: -2.493788719177246
    4. 's' → logprob: -2.743788719177246
    5. '\n' → logprob: -2.743788719177246
    6. 'i' → logprob: -2.868788719177246
    7. 'n' → logprob: -2.993788719177246
    8. '[' → logprob: -3.243788719177246
    9. '*' → logprob: -3.368788719177246
    10. ' ' → logprob: -3.743788719177246

Token 6: '_sum' (ID: 29859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.0575437545776367
    2. ' =' → logprob: -1.1825437545776367
    3. '[' → logprob: -1.8075437545776367
    4. 'e' → logprob: -2.0575437545776367
    5. 'a' → logprob: -4.182543754577637
    6. 'i' → logprob: -4.557543754577637
    7. ' ' → logprob: -5.057543754577637
    8. '[i' → logprob: -5.307543754577637
    9. '[:]' → logprob: -6.432543754577637
    10. '.' → logprob: -6.432543754577637

Token 7: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5481736063957214
    2. '(' → logprob: -1.4231736660003662
    3. '_' → logprob: -2.048173666000366
    4. '=' → logprob: -3.423173666000366
    5. ')' → logprob: -5.173173427581787
    6. ' =' → logprob: -5.923173427581787
    7. '()' → logprob: -6.173173427581787
    8. '+' → logprob: -6.298173427581787
    9. ' +=' → logprob: -6.298173427581787
    10. 's' → logprob: -6.673173427581787

Token 8: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0892939567565918
    2. ' ' → logprob: -2.464293956756592
    3. ' M' → logprob: -8.21429443359375
    4. 'M' → logprob: -10.33929443359375
    5. 'int' → logprob: -11.33929443359375
    6. ' int' → logprob: -11.46429443359375
    7. 'd' → logprob: -11.83929443359375
    8. ' d' → logprob: -12.08929443359375
    9. 'input' → logprob: -12.71429443359375
    10. ' input' → logprob: -12.96429443359375

Token 9: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006818148540332913
    2. 'M' → logprob: -7.7506818771362305
    3. ' ' → logprob: -8.50068187713623
    4. 'sum' → logprob: -11.12568187713623
    5. 'int' → logprob: -11.75068187713623
    6. ''' → logprob: -12.00068187713623
    7. 'input' → logprob: -12.25068187713623
    8. ' M' → logprob: -12.37568187713623
    9. 'd' → logprob: -13.50068187713623
    10. '[' → logprob: -13.87568187713623

Token 10: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04708266258239746
    2. '
' → logprob: -3.2970826625823975
    3. ' for' → logprob: -5.297082901000977
    4. '\n' → logprob: -5.797082901000977
    5. '```' → logprob: -7.672082901000977
    6. 'd' → logprob: -9.422082901000977
    7. '' → logprob: -9.422082901000977
    8. 'i' → logprob: -9.672082901000977
    9. ' 
' → logprob: -10.297082901000977
    10. '\' → logprob: -10.422082901000977

Token 11: 'c' (ID: 66)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002453662164043635
    2. '
' → logprob: -8.875245094299316
    3. 'f' → logprob: -10.250245094299316
    4. ' for' → logprob: -10.500245094299316
    5. '```' → logprob: -11.000245094299316
    6. '\n' → logprob: -11.125245094299316
    7. 'd' → logprob: -12.750245094299316
    8. 'i' → logprob: -12.750245094299316
    9. '' → logprob: -13.250245094299316
    10. '`' → logprob: -14.125245094299316

Token 12: '_sum' (ID: 29859)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.34656161069869995
    2. 'u' → logprob: -2.0965616703033447
    3. ' =' → logprob: -2.9715616703033447
    4. 'ount' → logprob: -2.9715616703033447
    5. 'ounter' → logprob: -3.7215616703033447
    6. 'urrent' → logprob: -3.8465616703033447
    7. '=' → logprob: -4.471561431884766
    8. 'i' → logprob: -6.096561431884766
    9. '_' → logprob: -6.096561431884766
    10. ' ' → logprob: -6.721561431884766

Token 13: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012637023814022541
    2. '=' → logprob: -4.512637138366699
    3. ' +=' → logprob: -6.637637138366699
    4. ' ' → logprob: -8.5126371383667
    5. '_' → logprob: -10.5126371383667
    6. '<|end|>' → logprob: -11.1376371383667
    7. '+=' → logprob: -11.8876371383667
    8. ' |=' → logprob: -12.1376371383667
    9. ',' → logprob: -12.8876371383667
    10. '[' → logprob: -13.0126371383667

Token 14: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6931559443473816
    2. ' ' → logprob: -0.6931559443473816
    3. 'd' → logprob: -13.005656242370605
    4. ' ' → logprob: -13.443156242370605
    5. '  ' → logprob: -14.443156242370605
    6. '1' → logprob: -14.443156242370605
    7. '+' → logprob: -14.630656242370605
    8. ' d' → logprob: -14.693156242370605
    9. ')' → logprob: -14.755656242370605
    10. ' M' → logprob: -15.193156242370605

Token 15: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004082793369889259
    2. ' ' → logprob: -5.504082679748535
    3. 'd' → logprob: -13.004082679748535
    4. '+' → logprob: -14.504082679748535
    5. 'M' → logprob: -14.629082679748535
    6. 'int' → logprob: -14.879082679748535
    7. ' M' → logprob: -15.629082679748535
    8. '1' → logprob: -16.06658363342285
    9. ')' → logprob: -16.56658363342285
    10. ' d' → logprob: -16.69158363342285

Token 16: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00833087507635355
    2. '
' → logprob: -4.883330821990967
    3. ' for' → logprob: -8.008331298828125
    4. '```' → logprob: -9.008331298828125
    5. '\n' → logprob: -9.133331298828125
    6. 'i' → logprob: -9.883331298828125
    7. 'n' → logprob: -10.508331298828125
    8. 'd' → logprob: -10.508331298828125
    9. 'f' → logprob: -10.633331298828125
    10. '' → logprob: -11.883331298828125

Token 17: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03531898558139801
    2. ' for' → logprob: -3.9103190898895264
    3. '
' → logprob: -4.285318851470947
    4. '```' → logprob: -7.785318851470947
    5. '\n' → logprob: -8.160319328308105
    6. 'i' → logprob: -9.285319328308105
    7. 'n' → logprob: -10.035319328308105
    8. ' 
' → logprob: -11.160319328308105
    9. '' → logprob: -12.160319328308105
    10. 'd' → logprob: -12.285319328308105

Token 18: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08014038950204849
    2. ' i' → logprob: -2.5801403522491455
    3. '  ' → logprob: -6.830140590667725
    4. ' M' → logprob: -10.330140113830566
    5. ' ' → logprob: -10.580140113830566
    6. ' ‌' → logprob: -10.580140113830566
    7. 'i' → logprob: -10.830140113830566
    8. ' )' → logprob: -11.455140113830566
    9. ' range' → logprob: -11.580140113830566
    10. ' _' → logprob: -11.955140113830566

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02992265298962593
    2. 'in' → logprob: -3.5299227237701416
    3. ' ' → logprob: -8.904922485351562
    4. 'n' → logprob: -11.529922485351562
    5. '```' → logprob: -12.154922485351562
    6. '  ' → logprob: -12.279922485351562
    7. 'range' → logprob: -13.154922485351562
    8. 's' → logprob: -13.279922485351562
    9. ' i' → logprob: -13.404922485351562
    10. ')' → logprob: -13.404922485351562

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3511858880519867
    2. 'range' → logprob: -1.226185917854309
    3. ' ' → logprob: -6.3511857986450195
    4. ' in' → logprob: -7.1011857986450195
    5. 'in' → logprob: -9.72618579864502
    6. '(range' → logprob: -10.47618579864502
    7. '	range' → logprob: -10.97618579864502
    8. 'n' → logprob: -11.47618579864502
    9. ' n' → logprob: -11.72618579864502
    10. 'space' → logprob: -11.72618579864502

Token 21: '(M' (ID: 6103)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0017336098244413733
    2. '(M' → logprob: -6.376733779907227
    3. '(i' → logprob: -11.376733779907227
    4. ' (' → logprob: -11.376733779907227
    5. '(len' → logprob: -12.501733779907227
    6. '(`' → logprob: -13.501733779907227
    7. '(range' → logprob: -14.251733779907227
    8. '(n' → logprob: -14.376733779907227
    9. '(
' → logprob: -14.751733779907227
    10. '('' → logprob: -14.876733779907227

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012808280065655708
    2. ')' → logprob: -5.012808322906494
    3. '+' → logprob: -5.137808322906494
    4. ':' → logprob: -9.387807846069336
    5. '):
' → logprob: -9.762807846069336
    6. ' ):' → logprob: -10.887807846069336
    7. '+:' → logprob: -11.012807846069336
    8. ' +' → logprob: -11.762807846069336
    9. ')+' → logprob: -12.387807846069336
    10. ',' → logprob: -12.887807846069336

Token 23: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6593252420425415
    2. '    ' → logprob: -1.1593252420425415
    3. '   ' → logprob: -1.9093252420425415
    4. '     
' → logprob: -4.909325122833252
    5. '<|end|>' → logprob: -5.659325122833252
    6. '    
' → logprob: -6.034325122833252
    7. ' 
' → logprob: -6.284325122833252
    8. '  ' → logprob: -6.659325122833252
    9. ' i' → logprob: -7.534325122833252
    10. '```' → logprob: -7.659325122833252

Token 24: ' d' (ID: 272)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -1.1262637376785278
    2. '   ' → logprob: -1.3762637376785278
    3. ' ' → logprob: -1.5012637376785278
    4. '    ' → logprob: -2.1262636184692383
    5. ' input' → logprob: -4.376263618469238
    6. ' n' → logprob: -5.001263618469238
    7. ' s' → logprob: -5.001263618469238
    8. ' i' → logprob: -5.126263618469238
    9. 's' → logprob: -5.626263618469238
    10. ' data' → logprob: -5.876263618469238

Token 25: ',' (ID: 11)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0009298062650486827
    2. '_sum' → logprob: -7.625929832458496
    3. ' _' → logprob: -9.250929832458496
    4. 'i' → logprob: -10.125929832458496
    5. 'a' → logprob: -10.250929832458496
    6. '_s' → logprob: -10.250929832458496
    7. '[' → logprob: -10.500929832458496
    8. 'e' → logprob: -10.875929832458496
    9. '_i' → logprob: -10.875929832458496
    10. '_)' → logprob: -11.000929832458496

Token 26: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3327261209487915
    2. '<|end|>' → logprob: -1.8327261209487915
    3. ' ' → logprob: -3.082726001739502
    4. ' c' → logprob: -3.457726001739502
    5. 'space' → logprob: -3.582726001739502
    6. '<|end|>' → logprob: -4.957726001739502
    7. 's' → logprob: -5.582726001739502
    8. '"' → logprob: -5.832726001739502
    9. '  ' → logprob: -6.957726001739502
    10. '_c' → logprob: -7.457726001739502

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14282108843326569
    2. '=' → logprob: -2.0178210735321045
    3. ',' → logprob: -8.892821311950684
    4. ')' → logprob: -12.517821311950684
    5. ' ' → logprob: -13.267821311950684
    6. '<|end|>' → logprob: -13.767821311950684
    7. 's' → logprob: -15.142821311950684
    8. ' =
' → logprob: -15.517821311950684
    9. '=input' → logprob: -15.642821311950684
    10. '=int' → logprob: -15.642821311950684

Token 28: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.03530103713274002
    2. 'map' → logprob: -3.5353009700775146
    3. ' input' → logprob: -5.410301208496094
    4. 'input' → logprob: -7.035301208496094
    5. ' list' → logprob: -9.410301208496094
    6. ' [' → logprob: -10.535301208496094
    7. '[' → logprob: -10.660301208496094
    8. ' ' → logprob: -10.660301208496094
    9. ' ' → logprob: -11.285301208496094
    10. 'list' → logprob: -12.035301208496094

Token 29: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -7.465036105713807e-06
    2. ' int' → logprob: -12.250007629394531
    3. 'map' → logprob: -13.625007629394531
    4. '*' → logprob: -14.750007629394531
    5. ']int' → logprob: -14.875007629394531
    6. 'float' → logprob: -15.250007629394531
    7. '0' → logprob: -15.375007629394531
    8. '(int' → logprob: -16.62500762939453
    9. '[int' → logprob: -16.87500762939453
    10. '```' → logprob: -17.00000762939453

Token 30: '(_)' (ID: 108255)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.002154307207092643
    2. '(i' → logprob: -6.502154350280762
    3. '(' → logprob: -8.002154350280762
    4. '(input' → logprob: -8.252154350280762
    5. '(s' → logprob: -10.502154350280762
    6. '(token' → logprob: -12.002154350280762
    7. ']' → logprob: -12.127154350280762
    8. '()]' → logprob: -12.377154350280762
    9. '(item' → logprob: -13.252154350280762
    10. '(_)' → logprob: -13.377154350280762

Token 31: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.2770878076553345
    2. 'input' → logprob: -1.2770878076553345
    3. ')' → logprob: -1.7770878076553345
    4. ' for' → logprob: -2.402087688446045
    5. '(input' → logprob: -2.527087688446045
    6. '(x' → logprob: -2.652087688446045
    7. 'x' → logprob: -4.527087688446045
    8. ']' → logprob: -5.027087688446045
    9. '(' → logprob: -5.277087688446045
    10. ' input' → logprob: -5.652087688446045

Token 32: ' _' (ID: 1175)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.00883473176509142
    2. 'input' → logprob: -4.7588348388671875
    3. '_' → logprob: -9.008834838867188
    4. ' in' → logprob: -9.758834838867188
    5. ' ' → logprob: -10.758834838867188
    6. ' range' → logprob: -12.008834838867188
    7. '_input' → logprob: -12.633834838867188
    8. '(input' → logprob: -13.133834838867188
    9. '<|end|>' → logprob: -13.258834838867188
    10. ' _' → logprob: -13.383834838867188

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0051991320215165615
    2. 'in' → logprob: -5.380198955535889
    3. 'input' → logprob: -7.630198955535889
    4. ' input' → logprob: -9.630199432373047
    5. '<|end|>' → logprob: -11.005199432373047
    6. ' ' → logprob: -12.380199432373047
    7. 'range' → logprob: -13.755199432373047
    8. '(input' → logprob: -13.755199432373047
    9. '<|end|>' → logprob: -13.880199432373047
    10. '=input' → logprob: -14.755199432373047

Token 34: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.1602400690317154
    2. ' input' → logprob: -1.9102400541305542
    3. 'range' → logprob: -12.160240173339844
    4. '(input' → logprob: -12.410240173339844
    5. ' ' → logprob: -13.410240173339844
    6. 'in' → logprob: -13.910240173339844
    7. ' range' → logprob: -14.160240173339844
    8. '<input' → logprob: -14.535240173339844
    9. '=input' → logprob: -14.660240173339844
    10. '```' → logprob: -14.785240173339844

Token 35: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01298032607883215
    2. '()' → logprob: -4.5129804611206055
    3. '()]' → logprob: -6.2629804611206055
    4. '()].' → logprob: -11.512980461120605
    5. '())' → logprob: -11.637980461120605
    6. '()
' → logprob: -13.012980461120605
    7. '()][' → logprob: -14.137980461120605
    8. '(' → logprob: -14.512980461120605
    9. '()`' → logprob: -14.762980461120605
    10. '()<' → logprob: -15.012980461120605

Token 36: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011344537138938904
    2. 'strip' → logprob: -4.5113444328308105
    3. 'rstrip' → logprob: -8.136344909667969
    4. ' split' → logprob: -12.886344909667969
    5. 'spl' → logprob: -14.386344909667969
    6. ')' → logprob: -14.636344909667969
    7. '(split' → logprob: -15.511344909667969
    8. 'sp' → logprob: -16.38634490966797
    9. ' ' → logprob: -16.51134490966797
    10. ' strip' → logprob: -16.88634490966797

Token 37: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.0010756803676486015
    2. '()' → logprob: -7.001075744628906
    3. '())' → logprob: -9.126075744628906
    4. '(' → logprob: -10.001075744628906
    5. '('' → logprob: -12.251075744628906
    6. '()]
' → logprob: -12.626075744628906
    7. ']' → logprob: -14.626075744628906
    8. ')]' → logprob: -15.001075744628906
    9. '("' → logprob: -15.376075744628906
    10. '()],' → logprob: -15.376075744628906

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14323602616786957
    2. '<|end|>' → logprob: -2.518235921859741
    3. '
' → logprob: -3.393235921859741
    4. ' ' → logprob: -5.14323616027832
    5. '    
' → logprob: -5.39323616027832
    6. 'd' → logprob: -5.76823616027832
    7. ' 
' → logprob: -6.26823616027832
    8. '  ' → logprob: -6.89323616027832
    9. '  
' → logprob: -7.01823616027832
    10. ')' → logprob: -7.76823616027832

Token 39: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.01069016195833683
    2. ' ' → logprob: -5.885690212249756
    3. ' d' → logprob: -6.010690212249756
    4. '   ' → logprob: -6.135690212249756
    5. 'c' → logprob: -6.385690212249756
    6. '<|end|>' → logprob: -7.260690212249756
    7. '    ' → logprob: -7.885690212249756
    8. ' 
' → logprob: -8.510689735412598
    9. '    
' → logprob: -9.760689735412598
    10. '  ' → logprob: -9.885689735412598

Token 40: '_sum' (ID: 29859)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.5341755747795105
    2. '*' → logprob: -0.9091755747795105
    3. '_' → logprob: -5.409175395965576
    4. ' ' → logprob: -6.534175395965576
    5. '+' → logprob: -7.034175395965576
    6. '>' → logprob: -7.159175395965576
    7. '_sum' → logprob: -7.284175395965576
    8. '-' → logprob: -7.409175395965576
    9. ' *=' → logprob: -7.534175395965576
    10. ' >' → logprob: -7.909175395965576

Token 41: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.042047422379255295
    2. '+=' → logprob: -3.6670475006103516
    3. '+' → logprob: -4.167047500610352
    4. ' +' → logprob: -9.167047500610352
    5. '<|end|>' → logprob: -12.292047500610352
    6. '+='' → logprob: -12.417047500610352
    7. ']+=' → logprob: -12.542047500610352
    8. '+=(' → logprob: -12.792047500610352
    9. ' -=' → logprob: -13.167047500610352
    10. '+="' → logprob: -13.917047500610352

Token 42: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.07890069484710693
    2. 'd' → logprob: -2.5789008140563965
    3. ' c' → logprob: -12.453900337219238
    4. ' ' → logprob: -12.703900337219238
    5. 'c' → logprob: -12.828900337219238
    6. ' ' → logprob: -14.703900337219238
    7. '	d' → logprob: -14.828900337219238
    8. '_d' → logprob: -16.203901290893555
    9. '(d' → logprob: -16.703901290893555
    10. '```' → logprob: -16.891401290893555

Token 43: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7621679902076721
    2. '+' → logprob: -1.2621679306030273
    3. '<|end|>' → logprob: -2.1371679306030273
    4. ' ' → logprob: -2.5121679306030273
    5. '    
' → logprob: -4.137167930603027
    6. '    ' → logprob: -4.887167930603027
    7. '  ' → logprob: -5.137167930603027
    8. ' 
' → logprob: -5.387167930603027
    9. '
' → logprob: -5.762167930603027
    10. '  
' → logprob: -5.887167930603027

Token 44: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.055907730013132095
    2. ' c' → logprob: -2.930907726287842
    3. '100' → logprob: -7.930907726287842
    4. ' ' → logprob: -7.930907726287842
    5. '10' → logprob: -9.555908203125
    6. '2' → logprob: -10.305908203125
    7. '1' → logprob: -10.430908203125
    8. '7' → logprob: -11.180908203125
    9. '500' → logprob: -11.430908203125
    10. '3' → logprob: -11.680908203125

Token 45: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.538150429725647
    2. '   ' → logprob: -1.538150429725647
    3. ' ' → logprob: -2.5381503105163574
    4. '    
' → logprob: -3.5381503105163574
    5. '
' → logprob: -4.038150310516357
    6. ' 
' → logprob: -4.038150310516357
    7. '+
' → logprob: -4.038150310516357
    8. '<|end|>' → logprob: -4.538150310516357
    9. '  
' → logprob: -5.538150310516357
    10. '    ' → logprob: -5.663150310516357

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16711077094078064
    2. ' ' → logprob: -3.2921106815338135
    3. '    
' → logprob: -3.2921106815338135
    4. ' 
' → logprob: -3.5421106815338135
    5. '
' → logprob: -4.042110919952393
    6. '  
' → logprob: -4.417110919952393
    7. '<|end|>' → logprob: -5.542110919952393
    8. '   
' → logprob: -5.917110919952393
    9. 'c' → logprob: -6.292110919952393
    10. '\n' → logprob: -6.292110919952393

Token 47: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.04195654019713402
    2. 'if' → logprob: -4.291956424713135
    3. '   ' → logprob: -4.541956424713135
    4. ' c' → logprob: -5.041956424713135
    5. ' if' → logprob: -5.916956424713135
    6. 'print' → logprob: -6.291956424713135
    7. 'd' → logprob: -6.416956424713135
    8. '+' → logprob: -7.041956424713135
    9. ' ' → logprob: -7.166956424713135
    10. '    
' → logprob: -7.541956424713135

Token 48: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.015920693054795265
    2. '_' → logprob: -4.890920639038086
    3. ' _' → logprob: -4.890920639038086
    4. '_s' → logprob: -7.265920639038086
    5. ''_' → logprob: -11.015920639038086
    6. '+' → logprob: -11.890920639038086
    7. ')_' → logprob: -12.515920639038086
    8. '_add' → logprob: -12.640920639038086
    9. '_total' → logprob: -12.890920639038086
    10. '"_' → logprob: -13.015920639038086

Token 49: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.003365931333974004
    2. '+=' → logprob: -6.003365993499756
    3. '+' → logprob: -7.253365993499756
    4. ' +' → logprob: -8.628365516662598
    5. '+='' → logprob: -14.378365516662598
    6. '<|end|>' → logprob: -14.503365516662598
    7. ']+=' → logprob: -15.128365516662598
    8. ' -=' → logprob: -15.378365516662598
    9. ' ' → logprob: -15.378365516662598
    10. '  ' → logprob: -15.503365516662598

Token 50: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.17975030839443207
    2. ' c' → logprob: -1.8047503232955933
    3. ' ' → logprob: -13.304750442504883
    4. '   ' → logprob: -13.554750442504883
    5. '1' → logprob: -13.929750442504883
    6. '	c' → logprob: -14.054750442504883
    7. ' ' → logprob: -15.429750442504883
    8. 'd' → logprob: -15.804750442504883
    9. '_c' → logprob: -16.054750442504883
    10. '  ' → logprob: -16.492250442504883

Token 51: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5170539021492004
    2. 'print' → logprob: -1.5170538425445557
    3. 'd' → logprob: -2.8920538425445557
    4. ' if' → logprob: -3.1420538425445557
    5. '
' → logprob: -3.5170538425445557
    6. ' ' → logprob: -4.392054080963135
    7. '<|end|>' → logprob: -5.142054080963135
    8. '  
' → logprob: -5.267054080963135
    9. '\n' → logprob: -5.392054080963135
    10. ')' → logprob: -5.517054080963135

Token 52: 'print' (ID: 1598)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9880762100219727
    2. 'print' → logprob: -1.7380762100219727
    3. '
' → logprob: -2.1130762100219727
    4. 'd' → logprob: -2.2380762100219727
    5. ' 
' → logprob: -2.8630762100219727
    6. ' if' → logprob: -3.1130762100219727
    7. '\n' → logprob: -3.3630762100219727
    8. '  
' → logprob: -3.7380762100219727
    9. '<|end|>' → logprob: -3.8630762100219727
    10. '    
' → logprob: -5.113076210021973

Token 53: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4314696192741394
    2. '(d' → logprob: -1.0564696788787842
    3. '('' → logprob: -6.556469440460205
    4. '("' → logprob: -7.556469440460205
    5. '((' → logprob: -7.556469440460205
    6. '(round' → logprob: -9.306469917297363
    7. '()' → logprob: -9.931469917297363
    8. '(max' → logprob: -10.431469917297363
    9. '("("' → logprob: -10.431469917297363
    10. '(c' → logprob: -10.556469917297363

Token 54: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.01937286928296089
    2. ')' → logprob: -4.269372940063477
    3. '_)' → logprob: -5.644372940063477
    4. '_' → logprob: -6.894372940063477
    5. ')_' → logprob: -7.894372940063477
    6. '_s' → logprob: -8.394372940063477
    7. ' _' → logprob: -10.394372940063477
    8. '_SUM' → logprob: -12.519372940063477
    9. '`)' → logprob: -13.019372940063477
    10. ' )' → logprob: -13.019372940063477

Token 55: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003619217313826084
    2. ' )' → logprob: -8.250362396240234
    3. ',' → logprob: -9.875362396240234
    4. '+' → logprob: -10.875362396240234
    5. '*' → logprob: -11.125362396240234
    6. '))' → logprob: -12.875362396240234
    7. '#' → logprob: -13.375362396240234
    8. '>' → logprob: -13.625362396240234
    9. ')
' → logprob: -13.625362396240234
    10. ' +' → logprob: -13.750362396240234

Token 56: ' ' (ID: 220)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1655937284231186
    2. '1' → logprob: -1.9155937433242798
    3. ' d' → logprob: -5.79059362411499
    4. ' ' → logprob: -7.16559362411499
    5. '(d' → logprob: -7.41559362411499
    6. '2' → logprob: -8.040594100952148
    7. 'M' → logprob: -8.665594100952148
    8. '(' → logprob: -9.540594100952148
    9. ' (' → logprob: -10.040594100952148
    10. '3' → logprob: -10.165594100952148

Token 57: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.08231233060359955
    2. '1' → logprob: -2.7073123455047607
    3. '(d' → logprob: -4.582312107086182
    4. 'M' → logprob: -7.582312107086182
    5. '(' → logprob: -7.582312107086182
    6. '2' → logprob: -8.33231258392334
    7. ' d' → logprob: -8.70731258392334
    8. '(M' → logprob: -8.83231258392334
    9. '3' → logprob: -9.83231258392334
    10. '0' → logprob: -9.83231258392334

Token 58: ' +' (ID: 659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008615575497969985
    2. '+' → logprob: -7.375861644744873
    3. ' )' → logprob: -8.750861167907715
    4. ',' → logprob: -11.000861167907715
    5. ' +' → logprob: -11.125861167907715
    6. '*' → logprob: -11.500861167907715
    7. '))' → logprob: -11.625861167907715
    8. '-' → logprob: -11.875861167907715
    9. ')
' → logprob: -12.500861167907715
    10. '`)' → logprob: -13.125861167907715

Token 59: ' (' (ID: 350)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3943905830383301
    2. ' d' → logprob: -1.26939058303833
    3. ' (' → logprob: -3.76939058303833
    4. '(' → logprob: -4.26939058303833
    5. '(d' → logprob: -5.89439058303833
    6. ' ' → logprob: -7.14439058303833
    7. '"' → logprob: -7.14439058303833
    8. ')' → logprob: -7.39439058303833
    9. '1' → logprob: -7.76939058303833
    10. ''' → logprob: -8.019390106201172

Token 60: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.01695248670876026
    2. ' d' → logprob: -4.1419525146484375
    3. '(d' → logprob: -8.266952514648438
    4. 'M' → logprob: -9.016952514648438
    5. '(' → logprob: -9.141952514648438
    6. ' (' → logprob: -9.141952514648438
    7. ')' → logprob: -9.766952514648438
    8. '   ' → logprob: -9.891952514648438
    9. ' ' → logprob: -10.266952514648438
    10. ' M' → logprob: -10.641952514648438

Token 61: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -4.084206375409849e-05
    2. ' -' → logprob: -11.875041007995605
    3. 'sum' → logprob: -12.250041007995605
    4. ' _' → logprob: -12.375041007995605
    5. '_' → logprob: -12.500041007995605
    6. '_s' → logprob: -12.500041007995605
    7. ')_' → logprob: -12.875041007995605
    8. '-' → logprob: -12.875041007995605
    9. '+' → logprob: -13.250041007995605
    10. ')' → logprob: -13.250041007995605

Token 62: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.42343252897262573
    2. ' )' → logprob: -1.7984325885772705
    3. ' //' → logprob: -2.1734325885772705
    4. '+' → logprob: -4.298432350158691
    5. ' +' → logprob: -4.423432350158691
    6. '//' → logprob: -4.673432350158691
    7. ' -' → logprob: -4.673432350158691
    8. ')//' → logprob: -4.673432350158691
    9. '-' → logprob: -5.798432350158691
    10. ' >' → logprob: -5.923432350158691

Token 63: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4749327003955841
    2. ' ' → logprob: -1.9749326705932617
    3. 'c' → logprob: -2.0999326705932617
    4. ' c' → logprob: -3.3499326705932617
    5. 'M' → logprob: -3.8499326705932617
    6. ')' → logprob: -4.724932670593262
    7. '100' → logprob: -4.849932670593262
    8. ' M' → logprob: -4.974932670593262
    9. '10' → logprob: -5.474932670593262
    10. '9' → logprob: -5.474932670593262

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3143947720527649
    2. 'c' → logprob: -1.8143947124481201
    3. '100' → logprob: -3.06439471244812
    4. 'M' → logprob: -3.81439471244812
    5. '10' → logprob: -4.439394950866699
    6. ' ' → logprob: -4.939394950866699
    7. '400' → logprob: -5.689394950866699
    8. '2' → logprob: -5.939394950866699
    9. '250' → logprob: -6.439394950866699
    10. ')' → logprob: -6.564394950866699

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0818987712264061
    2. ')//' → logprob: -2.5818986892700195
    3. ' )' → logprob: -5.8318986892700195
    4. ')/' → logprob: -10.83189868927002
    5. '//' → logprob: -11.08189868927002
    6. '))' → logprob: -11.33189868927002
    7. ' //' → logprob: -12.45689868927002
    8. ')#' → logprob: -12.58189868927002
    9. '+' → logprob: -12.70689868927002
    10. ')
' → logprob: -13.08189868927002

Token 66: ' //' (ID: 602)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023505648598074913
    2. '//' → logprob: -4.023505687713623
    3. ')//' → logprob: -5.773505687713623
    4. ' )' → logprob: -7.148505687713623
    5. '#' → logprob: -7.523505687713623
    6. ' //' → logprob: -7.523505687713623
    7. '))' → logprob: -9.023505210876465
    8. ')#' → logprob: -9.523505210876465
    9. '`)' → logprob: -10.273505210876465
    10. '')' → logprob: -10.398505210876465

Token 67: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.7464359998703003
    2. 'c' → logprob: -0.9964359998703003
    3. '10' → logprob: -2.37143611907959
    4. '2' → logprob: -3.62143611907959
    5. 'M' → logprob: -4.49643611907959
    6. '9' → logprob: -4.74643611907959
    7. '12' → logprob: -4.87143611907959
    8. '1' → logprob: -6.74643611907959
    9. 'd' → logprob: -7.12143611907959
    10. 'C' → logprob: -7.12143611907959

Token 68: '9' (ID: 24)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.02869902364909649
    2. '100' → logprob: -3.9036989212036133
    3. '10' → logprob: -5.278698921203613
    4. '2' → logprob: -7.028698921203613
    5. 'M' → logprob: -7.653698921203613
    6. '9' → logprob: -7.778698921203613
    7. '12' → logprob: -8.028698921203613
    8. '400' → logprob: -9.028698921203613
    9. '1' → logprob: -9.403698921203613
    10. '7' → logprob: -9.778698921203613

Token 69: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. ' )' → logprob: -12.500006675720215
    3. '))' → logprob: -13.500006675720215
    4. ')
' → logprob: -14.125006675720215
    5. '*' → logprob: -15.125006675720215
    6. ')`' → logprob: -15.750006675720215
    7. '`)' → logprob: -15.875006675720215
    8. '```' → logprob: -16.62500762939453
    9. '')' → logprob: -16.75000762939453
    10. '**' → logprob: -17.00000762939453


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 67
Tokens correctement prédits (1ère position, stricte): 23
Tokens correctement prédits (1ère position, avec adaptation): 25
Tokens correctement prédits (top 10): 56
Précision stricte (1ère position): 34.33%
Précision adaptée (1ère position): 37.31%
Précision (top 10): 83.58%
================================================================================
