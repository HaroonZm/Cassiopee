================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:10:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(313131313)
BIG = 98765432109876543210
MODULO = 999999937
reader = lambda : sys.stdin.readline().replace('\n','')
yn = lambda flag: (lambda x:print('Yes' if x else 'No'))(flag)
yn_big = lambda flag: (print('YES' if flag else 'NO'), None)
off1 = lambda x: int(x) - 1

def main():
    N = int(reader())
    arr = list(map(int, reader().split()))
    
    class FenwickyTree:
        def __init__(self, length):
            self.L = length
            self.container = {i:0 for i in range(1, length+2)}
            self.zdepth = length.bit_length() + 1

        def increase(self, p, value):
            idx = p+1
            try:
                while idx <= self.L:
                    self.container[idx] += value
                    idx += idx & -idx
            except KeyError:
                pass

        def cumulative(self, j):
            idx = j+1
            result = 0
            while idx>0:
                result += self.container.get(idx,0)
                idx -= idx & -idx
            return result

        def find_thresh(self, val):
            agg = 0
            spot = 0
            for power in reversed(range(self.zdepth+1)):
                probe = spot + (1<<power)
                if probe <= self.L and agg + self.container.get(probe,0) < val:
                    agg += self.container.get(probe,0)
                    spot |= (1<<power)
            return spot, agg

    def bsearch(okay, notok):
        midlamb = lambda low, high: (low+high)//2
        while (okay-notok) * (okay-notok) > 1:
            probe = midlamb(okay,notok)
            if judge(probe):
                okay = probe
            else:
                notok = probe
        return okay

    def judge(xmid):
        offset = [1 if elem >= xmid else -1 for elem in arr]
        BITW = FenwickyTree(N*2 + 5)
        answer = 0
        ind = N+1
        BITW.increase(ind, 1)
        for v in offset:
            ind += v
            answer += BITW.cumulative(ind)
            BITW.increase(ind,1)
        threshold = -(-(N*(N+1)//2)//2)
        return answer >= threshold

    print(bsearch(1, int(1e9) + 17))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -5.157039049663581e-05
    2. ' .' → logprob: -11.125051498413086
    3. '.import' → logprob: -11.750051498413086
    4. '.readline' → logprob: -12.625051498413086
    5. '[' → logprob: -12.875051498413086
    6. '.user' → logprob: -12.875051498413086
    7. '.`' → logprob: -13.250051498413086
    8. '.stdout' → logprob: -13.500051498413086
    9. '.exit' → logprob: -13.500051498413086
    10. '.next' → logprob: -13.875051498413086

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.38394302129745483
    2. 't' → logprob: -2.5089430809020996
    3. '_' → logprob: -2.6339430809020996
    4. 'set' → logprob: -3.2589430809020996
    5. '_trace' → logprob: -3.2589430809020996
    6. 'x' → logprob: -3.8839430809020996
    7. 's' → logprob: -4.5089430809021
    8. 'default' → logprob: -5.0089430809021
    9. 'sys' → logprob: -5.2589430809021
    10. 'ex' → logprob: -5.5089430809021

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.001324764802120626
    2. 'ursive' → logprob: -6.876324653625488
    3. 'ur' → logprob: -9.376324653625488
    4. 'urs' → logprob: -9.876324653625488
    5. '_' → logprob: -10.126324653625488
    6. 'limit' → logprob: -10.376324653625488
    7. '_limit' → logprob: -11.001324653625488
    8. 'urf' → logprob: -11.126324653625488
    9. 't' → logprob: -11.501324653625488
    10. 'ursor' → logprob: -11.751324653625488

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2565893828868866
    2. '_limit' → logprob: -1.631589412689209
    3. '_depth' → logprob: -3.756589412689209
    4. 'depth' → logprob: -5.006589412689209
    5. 'error' → logprob: -9.50658893585205
    6. '('_' → logprob: -9.50658893585205
    7. '_' → logprob: -9.63158893585205
    8. ' limit' → logprob: -9.75658893585205
    9. '(' → logprob: -9.88158893585205
    10. '_stack' → logprob: -10.25658893585205

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.694766489090398e-05
    2. '(
' → logprob: -10.500066757202148
    3. ' (' → logprob: -11.375066757202148
    4. '40' → logprob: -11.875066757202148
    5. '(

' → logprob: -12.500066757202148
    6. '((' → logprob: -12.750066757202148
    7. '```' → logprob: -12.750066757202148
    8. '(.' → logprob: -13.000066757202148
    9. '('' → logprob: -13.125066757202148
    10. '(()' → logprob: -13.250066757202148

Token 9: '313' (ID: 28643)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10064796358346939
    2. '100' → logprob: -2.3506479263305664
    3. ' ' → logprob: -8.100647926330566
    4. '500' → logprob: -9.850647926330566
    5. '300' → logprob: -9.975647926330566
    6. '250' → logprob: -10.725647926330566
    7. '  ' → logprob: -12.350647926330566
    8. '   ' → logprob: -12.600647926330566
    9. '200' → logprob: -12.975647926330566
    10. '999' → logprob: -13.100647926330566

Token 10: '131' (ID: 16412)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.04534655064344406
    2. '2' → logprob: -3.54534649848938
    3. '7' → logprob: -4.670346736907959
    4. '5' → logprob: -6.170346736907959
    5. ')' → logprob: -6.545346736907959
    6. '6' → logprob: -7.045346736907959
    7. '4' → logprob: -7.545346736907959
    8. '8' → logprob: -8.4203462600708
    9. '))' → logprob: -8.6703462600708
    10. '28' → logprob: -8.7953462600708

Token 11: '313' (ID: 28643)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ' )' → logprob: -13.000003814697266
    3. '))' → logprob: -14.750003814697266
    4. ')
' → logprob: -14.875003814697266
    5. '0' → logprob: -15.000003814697266
    6. '3' → logprob: -15.375003814697266
    7. ' ' → logprob: -16.125003814697266
    8. '1' → logprob: -16.375003814697266
    9. '```' → logprob: -16.375003814697266
    10. '')' → logprob: -16.750003814697266

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4140441635390744e-05
    2. '3' → logprob: -12.250014305114746
    3. ' )' → logprob: -12.250014305114746
    4. ')
' → logprob: -13.750014305114746
    5. '1' → logprob: -14.250014305114746
    6. '))' → logprob: -14.375014305114746
    7. '4' → logprob: -14.500014305114746
    8. '2' → logprob: -15.125014305114746
    9. '0' → logprob: -15.250014305114746
    10. '6' → logprob: -15.750014305114746

Token 13: 'BIG' (ID: 118898)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6851993203163147
    2. ')' → logprob: -1.68519926071167
    3. '\n' → logprob: -2.31019926071167
    4. '```' → logprob: -2.43519926071167
    5. '
' → logprob: -3.93519926071167
    6. '0' → logprob: -3.93519926071167
    7. '#' → logprob: -4.06019926071167
    8. '' → logprob: -4.43519926071167
    9. '\' → logprob: -5.06019926071167
    10. '1' → logprob: -5.06019926071167

Token 14: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0147086381912231
    2. '_' → logprob: -1.8897086381912231
    3. ')' → logprob: -2.3897085189819336
    4. '_NUMBER' → logprob: -2.3897085189819336
    5. '_ENDIAN' → logprob: -2.3897085189819336
    6. '_INT' → logprob: -2.7647085189819336
    7. '_INTEGER' → logprob: -3.2647085189819336
    8. '_DATA' → logprob: -3.8897085189819336
    9. 'INT' → logprob: -4.389708518981934
    10. '_SPACE' → logprob: -4.514708518981934

Token 15: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0664391964673996
    2. '10' → logprob: -2.941439151763916
    3. '100' → logprob: -4.941439151763916
    4. '313' → logprob: -5.816439151763916
    5. '314' → logprob: -7.816439151763916
    6. '999' → logprob: -8.191439628601074
    7. 'int' → logprob: -9.066439628601074
    8. '1' → logprob: -9.316439628601074
    9. '131' → logprob: -9.691439628601074
    10. '214' → logprob: -9.816439628601074

Token 16: '987' (ID: 42391)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.014703992754220963
    2. '100' → logprob: -5.01470422744751
    3. '313' → logprob: -6.01470422744751
    4. '999' → logprob: -6.38970422744751
    5. '1' → logprob: -6.63970422744751
    6. '314' → logprob: -7.51470422744751
    7. 'int' → logprob: -7.63970422744751
    8. '2' → logprob: -8.264703750610352
    9. ' ' → logprob: -9.014703750610352
    10. '9' → logprob: -9.264703750610352

Token 17: '654' (ID: 43200)
  Prédit: '654'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '654' → logprob: -0.0006590616540051997
    2. '65' → logprob: -7.625658988952637
    3. '456' → logprob: -10.125658988952637
    4. '650' → logprob: -11.500658988952637
    5. '656' → logprob: -11.500658988952637
    6. '653' → logprob: -11.500658988952637
    7. '```' → logprob: -11.750658988952637
    8. '_' → logprob: -11.875658988952637
    9. '234' → logprob: -12.000658988952637
    10. '362' → logprob: -12.000658988952637

Token 18: '321' (ID: 26293)
  Prédit: '321'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '321' → logprob: -0.37196335196495056
    2. '3' → logprob: -1.746963381767273
    3. '32' → logprob: -2.2469632625579834
    4. '0' → logprob: -4.2469635009765625
    5. '320' → logprob: -4.7469635009765625
    6. '323' → logprob: -6.4969635009765625
    7. '324' → logprob: -6.8719635009765625
    8. ')' → logprob: -7.6219635009765625
    9. '123' → logprob: -7.6219635009765625
    10. '1' → logprob: -7.7469635009765625

Token 19: '098' (ID: 43616)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05065150186419487
    2. '9' → logprob: -4.300651550292969
    3. '*' → logprob: -4.925651550292969
    4. '+' → logprob: -5.050651550292969
    5. '\n' → logprob: -5.050651550292969
    6. '
' → logprob: -5.550651550292969
    7. '2' → logprob: -6.050651550292969
    8. '**' → logprob: -6.300651550292969
    9. '_' → logprob: -6.550651550292969
    10. '

' → logprob: -6.925651550292969

Token 20: '765' (ID: 43749)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46338963508605957
    2. '123' → logprob: -1.5883896350860596
    3. '9' → logprob: -2.5883896350860596
    4. '234' → logprob: -3.4633896350860596
    5. '7' → logprob: -4.0883893966674805
    6. '012' → logprob: -4.5883893966674805
    7. ')' → logprob: -5.0883893966674805
    8. '987' → logprob: -5.2133893966674805
    9. '1' → logprob: -5.4633893966674805
    10. '.' → logprob: -5.9633893966674805

Token 21: '432' (ID: 30729)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7052399516105652
    2. '123' → logprob: -0.8302399516105652
    3. '012' → logprob: -3.95524001121521
    4. ')' → logprob: -4.705239772796631
    5. '234' → logprob: -4.830239772796631
    6. '9' → logprob: -4.955239772796631
    7. '.' → logprob: -5.455239772796631
    8. '3' → logprob: -5.955239772796631
    9. '321' → logprob: -6.205239772796631
    10. '987' → logprob: -6.205239772796631

Token 22: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09072015434503555
    2. '123' → logprob: -2.5907201766967773
    3. '1' → logprob: -5.215720176696777
    4. '012' → logprob: -6.215720176696777
    5. 'n' → logprob: -7.090720176696777
    6. '9' → logprob: -7.715720176696777
    7. ')' → logprob: -7.715720176696777
    8. '*' → logprob: -7.715720176696777
    9. '098' → logprob: -7.965720176696777
    10. '**' → logprob: -8.215720176696777

Token 23: '
' (ID: 198)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -1.17453134059906
    2. '0' → logprob: -1.29953134059906
    3. '**' → logprob: -1.79953134059906
    4. '9' → logprob: -1.92453134059906
    5. '+' → logprob: -3.0495314598083496
    6. 'n' → logprob: -3.6745314598083496
    7. '7' → logprob: -5.17453145980835
    8. '1' → logprob: -5.42453145980835
    9. '#' → logprob: -5.42453145980835
    10. '```' → logprob: -5.92453145980835

Token 24: 'MOD' (ID: 52135)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.3867397904396057
    2. '*' → logprob: -2.136739730834961
    3. '_' → logprob: -2.761739730834961
    4. '+' → logprob: -3.136739730834961
    5. '0' → logprob: -3.386739730834961
    6. '
' → logprob: -4.386739730834961
    7. '9' → logprob: -4.511739730834961
    8. '#' → logprob: -4.886739730834961
    9. 'n' → logprob: -4.886739730834961
    10. '-' → logprob: -5.636739730834961

Token 25: 'ULO' (ID: 63916)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014626816846430302
    2. '=' → logprob: -4.389626979827881
    3. ' ' → logprob: -6.514626979827881
    4. '_' → logprob: -7.514626979827881
    5. ')' → logprob: -10.389626502990723
    6. ' )' → logprob: -11.014626502990723
    7. '  ' → logprob: -11.514626502990723
    8. ' =)' → logprob: -11.764626502990723
    9. ' _' → logprob: -12.264626502990723
    10. '<|end|>' → logprob: -12.639626502990723

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016781941056251526
    2. '=' → logprob: -4.641781806945801
    3. ' ' → logprob: -5.516781806945801
    4. '_' → logprob: -5.891781806945801
    5. ' _' → logprob: -9.5167818069458
    6. ')' → logprob: -9.6417818069458
    7. ' )' → logprob: -10.5167818069458
    8. '  ' → logprob: -11.1417818069458
    9. '_SPACE' → logprob: -12.3917818069458
    10. ' =)' → logprob: -12.3917818069458

Token 27: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21354982256889343
    2. '100' → logprob: -1.7135498523712158
    3. '10' → logprob: -4.463549613952637
    4. '998' → logprob: -8.463549613952637
    5. '987' → logprob: -9.213549613952637
    6. '1' → logprob: -9.213549613952637
    7. ' (' → logprob: -10.088549613952637
    8. '123' → logprob: -10.588549613952637
    9. '(' → logprob: -10.838549613952637
    10. '999' → logprob: -11.338549613952637

Token 28: '999' (ID: 9130)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.010439395904541016
    2. '10' → logprob: -4.760439395904541
    3. ' ' → logprob: -7.135439395904541
    4. '998' → logprob: -7.635439395904541
    5. '987' → logprob: -8.385438919067383
    6. '(' → logprob: -9.260438919067383
    7. '1' → logprob: -9.385438919067383
    8. '123' → logprob: -9.635438919067383
    9. '999' → logprob: -10.010438919067383
    10. '109' → logprob: -12.135438919067383

Token 29: '999' (ID: 9130)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2581241130828857
    2. '\n' → logprob: -1.2581241130828857
    3. '9' → logprob: -2.2581241130828857
    4. '999' → logprob: -2.3831241130828857
    5. '```' → logprob: -3.1331241130828857
    6. '+' → logprob: -3.3831241130828857
    7. '**' → logprob: -3.6331241130828857
    8. '\' → logprob: -3.7581241130828857
    9. '' → logprob: -3.8831241130828857
    10. '.' → logprob: -4.133124351501465

Token 30: '937' (ID: 44606)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.55995774269104
    2. '9' → logprob: -2.05995774269104
    3. '\' → logprob: -3.05995774269104
    4. '999' → logprob: -3.05995774269104
    5. '' → logprob: -3.55995774269104
    6. '+' → logprob: -3.80995774269104
    7. '_' → logprob: -3.80995774269104
    8. '
' → logprob: -4.059957504272461
    9. '99' → logprob: -4.184957504272461
    10. '7' → logprob: -4.184957504272461

Token 31: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09832552820444107
    2. '

' → logprob: -3.223325490951538
    3. 'def' → logprob: -4.598325729370117
    4. '\n' → logprob: -4.598325729370117
    5. '**' → logprob: -4.723325729370117
    6. '' → logprob: -5.348325729370117
    7. '*' → logprob: -5.473325729370117
    8. ')' → logprob: -5.973325729370117
    9. '
' → logprob: -6.098325729370117
    10. '#' → logprob: -6.348325729370117

Token 32: 'reader' (ID: 22564)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2979612350463867
    2. 'def' → logprob: -1.5479612350463867
    3. '

' → logprob: -4.547961235046387
    4. '#' → logprob: -4.797961235046387
    5. '\n' → logprob: -5.422961235046387
    6. ')' → logprob: -5.547961235046387
    7. '*' → logprob: -5.672961235046387
    8. '' → logprob: -5.922961235046387
    9. '
' → logprob: -5.922961235046387
    10. '```' → logprob: -6.672961235046387

Token 33: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07753857225179672
    2. '.' → logprob: -3.20253849029541
    3. '=' → logprob: -3.45253849029541
    4. '.readline' → logprob: -6.70253849029541
    5. '(' → logprob: -7.70253849029541
    6. ' ' → logprob: -8.45253849029541
    7. ',' → logprob: -8.82753849029541
    8. ')' → logprob: -9.45253849029541
    9. '=sys' → logprob: -9.57753849029541
    10. '.read' → logprob: -10.70253849029541

Token 34: ' lambda' (ID: 27871)
  Prédit: ' sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.43617838621139526
    2. 'sys' → logprob: -2.06117844581604
    3. ' open' → logprob: -2.43617844581604
    4. 'open' → logprob: -2.68617844581604
    5. 'input' → logprob: -3.43617844581604
    6. ' input' → logprob: -3.43617844581604
    7. ' iter' → logprob: -5.561178207397461
    8. '(sys' → logprob: -7.061178207397461
    9. 'iter' → logprob: -8.061178207397461
    10. ' lambda' → logprob: -8.186178207397461

Token 35: ' :' (ID: 712)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05851990729570389
    2. ' :' → logprob: -3.5585198402404785
    3. ' sys' → logprob: -4.1835198402404785
    4. ' f' → logprob: -5.1835198402404785
    5. ' input' → logprob: -5.3085198402404785
    6. 'sys' → logprob: -6.9335198402404785
    7. ' x' → logprob: -7.3085198402404785
    8. 'input' → logprob: -8.183520317077637
    9. '=sys' → logprob: -9.058520317077637
    10. 'f' → logprob: -9.183520317077637

Token 36: ' sys' (ID: 12228)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.23829105496406555
    2. ' int' → logprob: -1.9882910251617432
    3. 'input' → logprob: -3.613291025161743
    4. ' sys' → logprob: -3.613291025161743
    5. ' input' → logprob: -4.363291263580322
    6. 'sys' → logprob: -4.988291263580322
    7. ' map' → logprob: -6.863291263580322
    8. 'map' → logprob: -7.738291263580322
    9. ' ' → logprob: -10.363290786743164
    10. ' list' → logprob: -10.613290786743164

Token 37: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0001605115394340828
    2. '.stdout' → logprob: -9.250160217285156
    3. '.' → logprob: -9.875160217285156
    4. 'stdin' → logprob: -11.875160217285156
    5. '.readline' → logprob: -12.625160217285156
    6. '.argv' → logprob: -13.750160217285156
    7. '.std' → logprob: -14.000160217285156
    8. '.stderr' → logprob: -15.250160217285156
    9. ' stdin' → logprob: -15.875160217285156
    10. '(stdin' → logprob: -16.125160217285156

Token 38: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.008700493723154068
    2. '.read' → logprob: -5.383700370788574
    3. '.' → logprob: -5.508700370788574
    4. '.buffer' → logprob: -11.758700370788574
    5. '.readlines' → logprob: -11.883700370788574
    6. 'read' → logprob: -12.633700370788574
    7. '<|end|>' → logprob: -14.008700370788574
    8. '.Read' → logprob: -14.383700370788574
    9. ' .' → logprob: -15.008700370788574
    10. ' readline' → logprob: -15.508700370788574

Token 39: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.34939390420913696
    2. '()' → logprob: -1.2243938446044922
    3. '()\' → logprob: -7.724393844604492
    4. '()
' → logprob: -8.349393844604492
    5. '(' → logprob: -9.224393844604492
    6. '.strip' → logprob: -9.724393844604492
    7. '()

' → logprob: -10.099393844604492
    8. 'rstrip' → logprob: -11.724393844604492
    9. '()<' → logprob: -11.849393844604492
    10. '.rstrip' → logprob: -11.849393844604492

Token 40: 'replace' (ID: 15208)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.018153570592403412
    2. 'rstrip' → logprob: -4.018153667449951
    3. ' strip' → logprob: -12.518153190612793
    4. 'r' → logprob: -17.51815414428711
    5. '_strip' → logprob: -17.51815414428711
    6. 'replace' → logprob: -18.51815414428711
    7. 'split' → logprob: -19.01815414428711
    8. 'str' → logprob: -19.14315414428711
    9. '(strip' → logprob: -19.26815414428711
    10. '-strip' → logprob: -19.51815414428711

Token 41: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.03495091572403908
    2. '(' → logprob: -3.9099509716033936
    3. '("\' → logprob: -4.5349507331848145
    4. '('' → logprob: -5.6599507331848145
    5. '("' → logprob: -10.284951210021973
    6. '('',' → logprob: -11.284951210021973
    7. '("("' → logprob: -11.409951210021973
    8. '(
' → logprob: -12.159951210021973
    9. '('\\' → logprob: -12.159951210021973
    10. '(',' → logprob: -12.159951210021973

Token 42: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.007058592047542334
    2. '\n' → logprob: -5.007058620452881
    3. 'r' → logprob: -8.507058143615723
    4. ' \' → logprob: -9.882058143615723
    5. ''\' → logprob: -10.132058143615723
    6. '('\' → logprob: -10.882058143615723
    7. '\' → logprob: -11.382058143615723
    8. 't' → logprob: -12.757058143615723
    9. '
' → logprob: -12.757058143615723
    10. '0' → logprob: -13.007058143615723

Token 43: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.08070192486047745
    2. '',' → logprob: -2.5807018280029297
    3. ',' → logprob: -7.08070182800293
    4. ''' → logprob: -7.58070182800293
    5. '')' → logprob: -8.70570182800293
    6. ','' → logprob: -8.83070182800293
    7. '',"' → logprob: -9.58070182800293
    8. ''',' → logprob: -10.58070182800293
    9. '''' → logprob: -10.95570182800293
    10. '","' → logprob: -11.45570182800293

Token 44: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.003835352137684822
    2. ')' → logprob: -5.628835201263428
    3. ''' → logprob: -9.378835678100586
    4. '').' → logprob: -9.378835678100586
    5. ' ')' → logprob: -10.128835678100586
    6. '')
' → logprob: -11.878835678100586
    7. ''))' → logprob: -12.253835678100586
    8. '")' → logprob: -12.628835678100586
    9. '',' → logprob: -12.878835678100586
    10. '<|end|>' → logprob: -13.128835678100586

Token 45: 'yn' (ID: 1276)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06686454266309738
    2. '
' → logprob: -3.441864490509033
    3. '\n' → logprob: -4.816864490509033
    4. '#' → logprob: -5.566864490509033
    5. '\' → logprob: -6.066864490509033
    6. ')' → logprob: -6.066864490509033
    7. 'input' → logprob: -6.191864490509033
    8. 'for' → logprob: -6.441864490509033
    9. 'n' → logprob: -6.566864490509033
    10. 'data' → logprob: -6.566864490509033

Token 46: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7085883617401123
    2. ' =' → logprob: -0.7085883617401123
    3. 'o' → logprob: -5.583588600158691
    4. 'ames' → logprob: -5.583588600158691
    5. 'ame' → logprob: -6.208588600158691
    6. ' ' → logprob: -6.583588600158691
    7. 'a' → logprob: -7.208588600158691
    8. '_' → logprob: -7.208588600158691
    9. 's' → logprob: -7.583588600158691
    10. 'um' → logprob: -7.708588600158691

Token 47: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.5147718191146851
    2. 'lambda' → logprob: -1.639771819114685
    3. ' reader' → logprob: -3.2647719383239746
    4. 'reader' → logprob: -4.014771938323975
    5. ' ['' → logprob: -4.139771938323975
    6. ' '' → logprob: -4.139771938323975
    7. 'input' → logprob: -4.264771938323975
    8. ''' → logprob: -4.264771938323975
    9. ' input' → logprob: -4.514771938323975
    10. ' []' → logprob: -4.639771938323975

Token 48: ' flag' (ID: 9641)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5134633183479309
    2. ' s' → logprob: -1.2634632587432861
    3. ' :' → logprob: -3.263463258743286
    4. ':' → logprob: -3.388463258743286
    5. ' lambda' → logprob: -4.263463497161865
    6. 's' → logprob: -4.763463497161865
    7. 'x' → logprob: -5.388463497161865
    8. ' a' → logprob: -5.638463497161865
    9. ' c' → logprob: -5.763463497161865
    10. 'a' → logprob: -6.513463497161865

Token 49: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012020254507660866
    2. ' :' → logprob: -4.512020111083984
    3. ':'' → logprob: -7.512020111083984
    4. ':"' → logprob: -8.137020111083984
    5. ':['' → logprob: -10.012020111083984
    6. ':''' → logprob: -10.637020111083984
    7. ':return' → logprob: -11.387020111083984
    8. ' :'' → logprob: -11.387020111083984
    9. ' ' → logprob: -11.637020111083984
    10. ':(' → logprob: -12.137020111083984

Token 50: ' (' (ID: 350)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7802742123603821
    2. ' '' → logprob: -1.5302741527557373
    3. ' "' → logprob: -1.9052741527557373
    4. '"' → logprob: -1.9052741527557373
    5. ' ("' → logprob: -4.905274391174316
    6. '('' → logprob: -5.030274391174316
    7. ' ('' → logprob: -5.530274391174316
    8. ' print' → logprob: -5.655274391174316
    9. '("' → logprob: -6.030274391174316
    10. 'print' → logprob: -6.405274391174316

Token 51: 'lambda' (ID: 35280)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4234265685081482
    2. '"' → logprob: -1.298426628112793
    3. ' '' → logprob: -3.173426628112793
    4. ' "' → logprob: -3.798426628112793
    5. ''int' → logprob: -6.673426628112793
    6. ''"' → logprob: -6.798426628112793
    7. ''ok' → logprob: -7.048426628112793
    8. ''A' → logprob: -7.423426628112793
    9. ''S' → logprob: -7.798426628112793
    10. ''O' → logprob: -8.048426628112793

Token 52: ' x' (ID: 1215)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.9344692230224609
    2. ' '' → logprob: -1.684469223022461
    3. '"' → logprob: -2.184469223022461
    4. ':' → logprob: -2.559469223022461
    5. '('' → logprob: -2.934469223022461
    6. ' lambda' → logprob: -3.184469223022461
    7. ' "' → logprob: -3.684469223022461
    8. ' (' → logprob: -3.934469223022461
    9. 'lambda' → logprob: -4.309469223022461
    10. ' ' → logprob: -4.309469223022461

Token 53: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029775604605674744
    2. ' :' → logprob: -4.029775619506836
    3. ':'' → logprob: -5.404775619506836
    4. ':"' → logprob: -6.279775619506836
    5. ':['' → logprob: -6.279775619506836
    6. ':x' → logprob: -7.279775619506836
    7. '=' → logprob: -7.779775619506836
    8. ':(' → logprob: -7.779775619506836
    9. ' x' → logprob: -8.029775619506836
    10. ' :'' → logprob: -8.279775619506836

Token 54: 'print' (ID: 1598)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.37777480483055115
    2. '"' → logprob: -1.7527748346328735
    3. ' '' → logprob: -2.377774715423584
    4. ' "' → logprob: -3.877774715423584
    5. '('' → logprob: -5.127774715423584
    6. '['' → logprob: -6.252774715423584
    7. 'print' → logprob: -6.252774715423584
    8. ''x' → logprob: -6.252774715423584
    9. ''\' → logprob: -6.377774715423584
    10. '[' → logprob: -6.627774715423584

Token 55: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.39788898825645447
    2. '('' → logprob: -1.3978890180587769
    3. '(' → logprob: -2.5228888988494873
    4. '(("' → logprob: -8.147889137268066
    5. '(('' → logprob: -8.647889137268066
    6. '((' → logprob: -9.522889137268066
    7. '(['' → logprob: -9.522889137268066
    8. '"' → logprob: -9.647889137268066
    9. '(["' → logprob: -9.647889137268066
    10. '(True' → logprob: -10.522889137268066

Token 56: 'Yes' (ID: 13022)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5620334148406982
    2. 'YES' → logprob: -1.8120334148406982
    3. 'Yes' → logprob: -2.1870334148406982
    4. '"' → logprob: -3.1870334148406982
    5. 'Y' → logprob: -3.1870334148406982
    6. '('' → logprob: -4.062033653259277
    7. ' '' → logprob: -4.562033653259277
    8. ''O' → logprob: -4.937033653259277
    9. 'NO' → logprob: -5.187033653259277
    10. 'yes' → logprob: -5.687033653259277

Token 57: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0005794849130325019
    2. '')' → logprob: -8.000579833984375
    3. '\n' → logprob: -8.375579833984375
    4. '','' → logprob: -12.375579833984375
    5. 'if' → logprob: -12.500579833984375
    6. ' if' → logprob: -13.125579833984375
    7. '"' → logprob: -13.375579833984375
    8. ''or' → logprob: -14.250579833984375
    9. ''t' → logprob: -15.375579833984375
    10. ''))' → logprob: -15.375579833984375

Token 58: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.35303157567977905
    2. 'if' → logprob: -1.6030316352844238
    3. ')' → logprob: -2.603031635284424
    4. ''' → logprob: -3.853031635284424
    5. '')' → logprob: -7.478031635284424
    6. '''' → logprob: -9.353031158447266
    7. '','' → logprob: -9.603031158447266
    8. ','' → logprob: -10.353031158447266
    9. ' ' → logprob: -10.853031158447266
    10. '	if' → logprob: -11.353031158447266

Token 59: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.480087548494339
    2. 'x' → logprob: -0.9800875186920166
    3. ' flag' → logprob: -5.605087757110596
    4. 'flag' → logprob: -6.105087757110596
    5. ' not' → logprob: -9.855087280273438
    6. ' ' → logprob: -10.980087280273438
    7. 'not' → logprob: -12.230087280273438
    8. '(flag' → logprob: -12.730087280273438
    9. '(x' → logprob: -13.855087280273438
    10. ' ' → logprob: -14.230087280273438

Token 60: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.13610659539699554
    2. 'else' → logprob: -2.136106491088867
    3. ' ' → logprob: -5.636106491088867
    4. '==' → logprob: -5.636106491088867
    5. ' ==' → logprob: -7.511106491088867
    6. '(flag' → logprob: -7.886106491088867
    7. '()' → logprob: -8.011106491088867
    8. ' or' → logprob: -8.761106491088867
    9. '(' → logprob: -9.261106491088867
    10. 'if' → logprob: -9.761106491088867

Token 61: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2032831758260727
    2. ' '' → logprob: -1.7032831907272339
    3. ' No' → logprob: -7.203283309936523
    4. ' flag' → logprob: -7.703283309936523
    5. ' ' → logprob: -7.953283309936523
    6. 'No' → logprob: -9.578283309936523
    7. '('' → logprob: -9.703283309936523
    8. 'flag' → logprob: -10.453283309936523
    9. ' no' → logprob: -10.953283309936523
    10. '   ' → logprob: -11.078283309936523

Token 62: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.2373584359884262
    2. 'False' → logprob: -2.862358331680298
    3. 'flag' → logprob: -2.862358331680298
    4. 'no' → logprob: -3.737358331680298
    5. ' flag' → logprob: -4.112358570098877
    6. ' no' → logprob: -4.112358570098877
    7. ' No' → logprob: -4.362358570098877
    8. ' False' → logprob: -5.362358570098877
    9. ''' → logprob: -5.487358570098877
    10. ' ' → logprob: -5.612358570098877

Token 63: ''))' (ID: 7974)
  Prédit: ''))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''))' → logprob: -0.48980870842933655
    2. '))' → logprob: -1.1148086786270142
    3. ')' → logprob: -2.8648087978363037
    4. '')' → logprob: -6.364808559417725
    5. ''' → logprob: -8.864809036254883
    6. ')))' → logprob: -9.364809036254883
    7. ''))
' → logprob: -9.489809036254883
    8. ' else' → logprob: -9.614809036254883
    9. '')))' → logprob: -9.739809036254883
    10. '',' → logprob: -10.739809036254883

Token 64: '(' (ID: 7)
  Prédit: '(flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(flag' → logprob: -0.04619771987199783
    2. '(' → logprob: -3.1711976528167725
    3. '(True' → logprob: -6.921197891235352
    4. ')' → logprob: -6.921197891235352
    5. '(False' → logprob: -8.296197891235352
    6. '<|end|>' → logprob: -8.796197891235352
    7. '(not' → logprob: -8.921197891235352
    8. '()' → logprob: -9.046197891235352
    9. 'flag' → logprob: -9.296197891235352
    10. '(
' → logprob: -9.421197891235352

Token 65: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.029783006757497787
    2. ' flag' → logprob: -3.529783010482788
    3. '(flag' → logprob: -10.654783248901367
    4. '	flag' → logprob: -12.529783248901367
    5. ')' → logprob: -13.029783248901367
    6. '.flag' → logprob: -14.404783248901367
    7. 'not' → logprob: -14.904783248901367
    8. 'bool' → logprob: -15.154783248901367
    9. '_flag' → logprob: -15.279783248901367
    10. ' True' → logprob: -15.404783248901367

Token 66: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.277553620748222e-05
    2. '))' → logprob: -9.750062942504883
    3. ' )' → logprob: -13.250062942504883
    4. ')
' → logprob: -13.375062942504883
    5. ')))' → logprob: -14.375062942504883
    6. '())' → logprob: -16.250062942504883
    7. ')

' → logprob: -16.500062942504883
    8. '),' → logprob: -16.625062942504883
    9. ')return' → logprob: -16.625062942504883
    10. ')#' → logprob: -16.750062942504883

Token 67: 'yn' (ID: 1276)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07076843082904816
    2. '#' → logprob: -3.695768356323242
    3. '<|end|>' → logprob: -4.445768356323242
    4. 'n' → logprob: -5.445768356323242
    5. '
' → logprob: -5.695768356323242
    6. '\n' → logprob: -5.820768356323242
    7. ')' → logprob: -5.945768356323242
    8. '\' → logprob: -6.070768356323242
    9. 'a' → logprob: -6.070768356323242
    10. 'from' → logprob: -6.195768356323242

Token 68: '_big' (ID: 88699)
  Prédit: '(True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(True' → logprob: -0.6614062190055847
    2. '(False' → logprob: -1.1614062786102295
    3. '(' → logprob: -1.7864062786102295
    4. '<|end|>' → logprob: -6.53640604019165
    5. '(false' → logprob: -7.53640604019165
    6. '(true' → logprob: -7.66140604019165
    7. ')' → logprob: -7.78640604019165
    8. '()' → logprob: -9.411406517028809
    9. '(None' → logprob: -9.786406517028809
    10. 'False' → logprob: -10.661406517028809

Token 69: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11761042475700378
    2. '=' → logprob: -2.492610454559326
    3. '(' → logprob: -3.742610454559326
    4. '=lambda' → logprob: -6.492610454559326
    5. '_' → logprob: -6.992610454559326
    6. '<|end|>' → logprob: -7.367610454559326
    7. ')' → logprob: -7.492610454559326
    8. ' ' → logprob: -8.492609977722168
    9. '(lambda' → logprob: -8.992609977722168
    10. '=True' → logprob: -9.617609977722168

Token 70: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.3225460350513458
    2. 'lambda' → logprob: -1.4475460052490234
    3. '(lambda' → logprob: -3.3225460052490234
    4. '=lambda' → logprob: -5.572546005249023
    5. ' (' → logprob: -7.447546005249023
    6. ' =' → logprob: -10.572546005249023
    7. 'ambda' → logprob: -10.822546005249023
    8. ' ' → logprob: -11.072546005249023
    9. '_lambda' → logprob: -11.572546005249023
    10. '(' → logprob: -11.947546005249023

Token 71: ' flag' (ID: 9641)
  Prédit: 'flag'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.6202449202537537
    2. ' flag' → logprob: -0.9952449202537537
    3. '(flag' → logprob: -2.8702449798583984
    4. ' x' → logprob: -4.370244979858398
    5. ' lambda' → logprob: -4.495244979858398
    6. 'x' → logprob: -5.370244979858398
    7. 'lambda' → logprob: -5.495244979858398
    8. '(lambda' → logprob: -6.620244979858398
    9. ' ' → logprob: -7.745244979858398
    10. ' (' → logprob: -7.870244979858398

Token 72: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016144849359989166
    2. ' :' → logprob: -6.501614570617676
    3. '=' → logprob: -9.876614570617676
    4. ':(' → logprob: -10.751614570617676
    5. '=lambda' → logprob: -11.501614570617676
    6. 'print' → logprob: -12.689114570617676
    7. ' ' → logprob: -12.876614570617676
    8. ':
' → logprob: -13.126614570617676
    9. ',' → logprob: -13.189114570617676
    10. 'x' → logprob: -13.751614570617676

Token 73: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.6144001483917236
    2. '(lambda' → logprob: -0.9894001483917236
    3. 'print' → logprob: -2.8644001483917236
    4. '(print' → logprob: -4.4893999099731445
    5. ' print' → logprob: -4.8643999099731445
    6. '(' → logprob: -4.9893999099731445
    7. 'lambda' → logprob: -6.9893999099731445
    8. ' lambda' → logprob: -7.2393999099731445
    9. '(True' → logprob: -7.3643999099731445
    10. ''' → logprob: -8.114399909973145

Token 74: 'print' (ID: 1598)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.1821151077747345
    2. 'print' → logprob: -2.307115077972412
    3. ' lambda' → logprob: -3.182115077972412
    4. '(lambda' → logprob: -3.807115077972412
    5. 'x' → logprob: -6.932115077972412
    6. ' print' → logprob: -7.182115077972412
    7. ''' → logprob: -8.18211555480957
    8. ' (' → logprob: -8.55711555480957
    9. '   ' → logprob: -8.68211555480957
    10. ' x' → logprob: -9.05711555480957

Token 75: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0018646183889359236
    2. '(' → logprob: -6.501864433288574
    3. '("' → logprob: -8.376864433288574
    4. ')' → logprob: -9.876864433288574
    5. '(('' → logprob: -9.876864433288574
    6. ' ('' → logprob: -11.876864433288574
    7. '('\' → logprob: -12.376864433288574
    8. '((' → logprob: -12.626864433288574
    9. '(
' → logprob: -12.751864433288574
    10. '(end' → logprob: -13.501864433288574

Token 76: 'YES' (ID: 31958)
  Prédit: 'Yes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -0.19503054022789001
    2. ''' → logprob: -1.9450305700302124
    3. '"' → logprob: -3.820030450820923
    4. 'YES' → logprob: -5.195030689239502
    5. 'Big' → logprob: -6.320030689239502
    6. '大' → logprob: -7.570030689239502
    7. 'True' → logprob: -7.882530689239502
    8. '1' → logprob: -8.382530212402344
    9. '('' → logprob: -8.445030212402344
    10. 'Y' → logprob: -8.570030212402344

Token 77: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -7.73183855926618e-05
    2. '')' → logprob: -9.625077247619629
    3. ' if' → logprob: -11.875077247619629
    4. 'if' → logprob: -13.125077247619629
    5. ' '' → logprob: -13.750077247619629
    6. '"' → logprob: -14.625077247619629
    7. ')'' → logprob: -15.500077247619629
    8. ''))' → logprob: -16.000078201293945
    9. ''''' → logprob: -16.375078201293945
    10. '\n' → logprob: -16.500078201293945

Token 78: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10604396462440491
    2. 'if' → logprob: -2.356044054031372
    3. ''' → logprob: -5.231043815612793
    4. ')' → logprob: -7.731043815612793
    5. ' ' → logprob: -10.606043815612793
    6. ' '' → logprob: -13.356043815612793
    7. '"' → logprob: -13.606043815612793
    8. '```' → logprob: -13.606043815612793
    9. '')' → logprob: -13.981043815612793
    10. 'If' → logprob: -14.356043815612793

Token 79: ' flag' (ID: 9641)
  Prédit: ' flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' flag' → logprob: -0.6335187554359436
    2. 'flag' → logprob: -0.7585187554359436
    3. ' ' → logprob: -7.633518695831299
    4. '(flag' → logprob: -8.758519172668457
    5. ' True' → logprob: -9.508519172668457
    6. '	flag' → logprob: -9.758519172668457
    7. 'True' → logprob: -10.383519172668457
    8. 'Yes' → logprob: -10.758519172668457
    9. '  ' → logprob: -11.133519172668457
    10. ')' → logprob: -11.258519172668457

Token 80: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.061974965035915375
    2. 'else' → logprob: -2.8119750022888184
    3. ' ' → logprob: -12.06197452545166
    4. '	else' → logprob: -13.81197452545166
    5. '  ' → logprob: -15.81197452545166
    6. ' els' → logprob: -16.311975479125977
    7. ' ' → logprob: -16.686975479125977
    8. '   ' → logprob: -16.811975479125977
    9. '_else' → logprob: -17.436975479125977
    10. '    ' → logprob: -17.561975479125977

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03817976638674736
    2. ' '' → logprob: -3.288179874420166
    3. ' ' → logprob: -9.163179397583008
    4. '('' → logprob: -11.538179397583008
    5. '"' → logprob: -12.038179397583008
    6. ''S' → logprob: -12.163179397583008
    7. ')' → logprob: -12.163179397583008
    8. '  ' → logprob: -13.038179397583008
    9. '   ' → logprob: -13.663179397583008
    10. '')' → logprob: -14.663179397583008

Token 82: 'NO' (ID: 14695)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.004100604448467493
    2. 'NO' → logprob: -5.504100799560547
    3. ' '' → logprob: -11.379100799560547
    4. '"' → logprob: -12.254100799560547
    5. ' NO' → logprob: -12.879100799560547
    6. ''S' → logprob: -14.004100799560547
    7. ''N' → logprob: -14.504100799560547
    8. '')' → logprob: -14.879100799560547
    9. ')' → logprob: -15.004100799560547
    10. 'No' → logprob: -15.129100799560547

Token 83: ''),' (ID: 10047)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.5245711207389832
    2. ')' → logprob: -1.024571180343628
    3. ''))' → logprob: -3.024571180343628
    4. '')' → logprob: -7.399570941925049
    5. ')))' → logprob: -10.399571418762207
    6. '"))' → logprob: -12.149571418762207
    7. '')))' → logprob: -13.149571418762207
    8. '))
' → logprob: -13.524571418762207
    9. '),' → logprob: -13.899571418762207
    10. ''' → logprob: -13.899571418762207

Token 84: ' None' (ID: 4662)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10597804188728333
    2. ' None' → logprob: -3.730978012084961
    3. 'None' → logprob: -3.855978012084961
    4. 'print' → logprob: -4.230978012084961
    5. 'exit' → logprob: -4.355978012084961
    6. 'flag' → logprob: -4.855978012084961
    7. ' )' → logprob: -5.730978012084961
    8. ' flag' → logprob: -5.980978012084961
    9. 'sys' → logprob: -6.355978012084961
    10. ')[' → logprob: -6.355978012084961

Token 85: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043257648940198123
    2. ')[' → logprob: -7.75043249130249
    3. '))' → logprob: -13.875432968139648
    4. ' )' → logprob: -14.875432968139648
    5. ')
' → logprob: -16.12543296813965
    6. ')(' → logprob: -16.37543296813965
    7. '))[' → logprob: -16.87543296813965
    8. '),' → logprob: -16.87543296813965
    9. ')))' → logprob: -17.00043296813965
    10. ')return' → logprob: -17.25043296813965

Token 86: 'off' (ID: 2864)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1050768718123436
    2. ')' → logprob: -3.605076789855957
    3. '#' → logprob: -3.855076789855957
    4. '\n' → logprob: -4.230076789855957
    5. '\' → logprob: -4.855076789855957
    6. ' ' → logprob: -4.855076789855957
    7. '<|end|>' → logprob: -4.855076789855957
    8. 'import' → logprob: -6.605076789855957
    9. ' 
' → logprob: -6.855076789855957
    10. '
' → logprob: -6.855076789855957

Token 87: '1' (ID: 16)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.04873383790254593
    2. '=' → logprob: -3.923733949661255
    3. 'line' → logprob: -4.298733711242676
    4. ' =' → logprob: -5.673733711242676
    5. 'sets' → logprob: -5.923733711242676
    6. 's' → logprob: -6.798733711242676
    7. 'alse' → logprob: -7.173733711242676
    8. '```' → logprob: -7.173733711242676
    9. 'ensive' → logprob: -7.798733711242676
    10. ')' → logprob: -7.798733711242676

Token 88: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33827948570251465
    2. '=' → logprob: -1.3382794857025146
    3. '_' → logprob: -4.588279724121094
    4. 's' → logprob: -5.588279724121094
    5. 'ine' → logprob: -6.338279724121094
    6. ')' → logprob: -6.838279724121094
    7. '[' → logprob: -7.463279724121094
    8. ',' → logprob: -7.588279724121094
    9. 'set' → logprob: -7.588279724121094
    10. '()' → logprob: -7.713279724121094

Token 89: ' lambda' (ID: 27871)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.819481372833252
    2. ' ' → logprob: -0.819481372833252
    3. ' -' → logprob: -2.944481372833252
    4. '0' → logprob: -3.819481372833252
    5. '-' → logprob: -4.069481372833252
    6. ' lambda' → logprob: -4.069481372833252
    7. 'lambda' → logprob: -5.944481372833252
    8. '32' → logprob: -6.319481372833252
    9. 'int' → logprob: -6.319481372833252
    10. '10' → logprob: -7.194481372833252

Token 90: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.11535145342350006
    2. 'x' → logprob: -2.615351438522339
    3. ' n' → logprob: -3.990351438522339
    4. ' i' → logprob: -5.115351676940918
    5. ' a' → logprob: -5.865351676940918
    6. ' ' → logprob: -6.240351676940918
    7. ' s' → logprob: -6.490351676940918
    8. 'n' → logprob: -6.865351676940918
    9. ' idx' → logprob: -7.115351676940918
    10. 'a' → logprob: -7.615351676940918

Token 91: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014655841514468193
    2. ' :' → logprob: -4.264656066894531
    3. ':x' → logprob: -7.889656066894531
    4. ',' → logprob: -9.889656066894531
    5. ':int' → logprob: -10.639656066894531
    6. ':return' → logprob: -11.764656066894531
    7. 'x' → logprob: -12.014656066894531
    8. ':
' → logprob: -12.389656066894531
    9. ':list' → logprob: -12.764656066894531
    10. ':n' → logprob: -12.889656066894531

Token 92: ' int' (ID: 677)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.36147549748420715
    2. 'x' → logprob: -1.2364754676818848
    3. '(x' → logprob: -5.236475467681885
    4. ' (' → logprob: -5.736475467681885
    5. 'int' → logprob: -6.861475467681885
    6. ' ' → logprob: -7.111475467681885
    7. ' int' → logprob: -7.611475467681885
    8. '(int' → logprob: -8.236475944519043
    9. ' [' → logprob: -8.236475944519043
    10. '(' → logprob: -8.236475944519043

Token 93: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.03175912797451019
    2. '(' → logprob: -3.531759023666382
    3. '(bool' → logprob: -7.031759262084961
    4. '(str' → logprob: -7.031759262084961
    5. 'x' → logprob: -9.906759262084961
    6. '((' → logprob: -10.156759262084961
    7. '(bin' → logprob: -10.156759262084961
    8. '(not' → logprob: -10.406759262084961
    9. '(True' → logprob: -11.031759262084961
    10. '(round' → logprob: -11.656759262084961

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.780982494354248
    2. ')-' → logprob: -0.780982494354248
    3. '-' → logprob: -2.655982494354248
    4. ')+' → logprob: -4.530982494354248
    5. '[' → logprob: -6.780982494354248
    6. ' -' → logprob: -6.905982494354248
    7. '+' → logprob: -7.155982494354248
    8. ' )' → logprob: -9.655982971191406
    9. '.strip' → logprob: -10.405982971191406
    10. '1' → logprob: -11.280982971191406

Token 95: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.06943954527378082
    2. '+' → logprob: -3.444439649581909
    3. '()-' → logprob: -3.694439649581909
    4. ' -' → logprob: -5.19443941116333
    5. '()' → logprob: -5.81943941116333
    6. '()+' → logprob: -7.44443941116333
    7. '<|end|>' → logprob: -8.069439888000488
    8. ' +' → logprob: -8.694439888000488
    9. '[' → logprob: -8.944439888000488
    10. '#' → logprob: -9.819439888000488

Token 96: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0036013787612318993
    2. ' ' → logprob: -5.628601551055908
    3. '<|end|>' → logprob: -14.87860107421875
    4. '  ' → logprob: -15.00360107421875
    5. '0' → logprob: -15.87860107421875
    6. 'int' → logprob: -16.44110107421875
    7. '   ' → logprob: -16.69110107421875
    8. '```' → logprob: -16.81610107421875
    9. '-' → logprob: -17.06610107421875
    10. ' ' → logprob: -17.44110107421875

Token 97: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1928003813372925e-05
    2. ' ' → logprob: -9.875051498413086
    3. '0' → logprob: -16.375051498413086
    4. '-' → logprob: -16.375051498413086
    5. '  ' → logprob: -17.000051498413086
    6. 'int' → logprob: -17.375051498413086
    7. '```' → logprob: -17.375051498413086
    8. '<|end|>' → logprob: -17.375051498413086
    9. '(' → logprob: -17.625051498413086
    10. '2' → logprob: -17.875051498413086

Token 98: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 99: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8585537672042847
    2. '#' → logprob: -1.2335537672042847
    3. '
' → logprob: -2.108553886413574
    4. '\n' → logprob: -3.108553886413574
    5. 'n' → logprob: -3.358553886413574
    6. 'a' → logprob: -4.108553886413574
    7. '<|end|>' → logprob: -4.608553886413574
    8. 'x' → logprob: -4.858553886413574
    9. '\' → logprob: -4.983553886413574
    10. 'd' → logprob: -5.108553886413574

Token 100: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.30104556679725647
    2. ' solve' → logprob: -1.926045536994934
    3. ' dfs' → logprob: -2.6760456562042236
    4. ' factorial' → logprob: -3.6760456562042236
    5. ' solution' → logprob: -5.9260454177856445
    6. ' factor' → logprob: -6.1760454177856445
    7. ' read' → logprob: -6.5510454177856445
    8. ' is' → logprob: -6.8010454177856445
    9. ' ' → logprob: -6.8010454177856445
    10. ' fib' → logprob: -6.9260454177856445

Token 101: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00011915886716451496
    2. '(' → logprob: -9.25011920928955
    3. ' ():' → logprob: -11.50011920928955
    4. '()' → logprob: -11.62511920928955
    5. '():
' → logprob: -13.00011920928955
    6. ':' → logprob: -13.75011920928955
    7. '(:' → logprob: -15.12511920928955
    8. '(":' → logprob: -15.87511920928955
    9. '()>' → logprob: -16.625118255615234
    10. '):' → logprob: -17.125118255615234

Token 102: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03826799988746643
    2. '<|end|>' → logprob: -4.288268089294434
    3. '    ' → logprob: -4.413268089294434
    4. ' ' → logprob: -5.538268089294434
    5. ':' → logprob: -6.413268089294434
    6. '(' → logprob: -6.413268089294434
    7. '    
' → logprob: -6.663268089294434
    8. ')' → logprob: -7.538268089294434
    9. '<|end|>' → logprob: -7.538268089294434
    10. '  ' → logprob: -7.788268089294434

Token 103: ' N' (ID: 478)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5853074193000793
    2. ' n' → logprob: -0.9603074193000793
    3. ' pass' → logprob: -3.4603073596954346
    4. 'pass' → logprob: -4.460307598114014
    5. ' ' → logprob: -5.460307598114014
    6. 't' → logprob: -6.335307598114014
    7. 'a' → logprob: -6.585307598114014
    8. '    ' → logprob: -6.710307598114014
    9. ' t' → logprob: -6.835307598114014
    10. '   ' → logprob: -6.960307598114014

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13715487718582153
    2. ',' → logprob: -2.2621548175811768
    3. '=' → logprob: -3.7621548175811768
    4. '=int' → logprob: -7.637155055999756
    5. ' ,' → logprob: -8.387154579162598
    6. ' ' → logprob: -10.262154579162598
    7. ')' → logprob: -11.137154579162598
    8. '=input' → logprob: -11.387154579162598
    9. ',int' → logprob: -11.887154579162598
    10. '.' → logprob: -12.262154579162598

Token 105: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.647666335105896
    2. ' off' → logprob: -1.022666335105896
    3. 'int' → logprob: -2.2726664543151855
    4. 'off' → logprob: -4.2726664543151855
    5. ' ' → logprob: -9.647665977478027
    6. 'len' → logprob: -11.897665977478027
    7. ' input' → logprob: -12.210165977478027
    8. '10' → logprob: -12.522665977478027
    9. '(off' → logprob: -12.710165977478027
    10. ' len' → logprob: -12.897665977478027

Token 106: '(reader' (ID: 49220)
  Prédit: '(reader'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.18231360614299774
    2. '(input' → logprob: -1.9323135614395142
    3. '(sys' → logprob: -3.9323136806488037
    4. '(' → logprob: -6.182313442230225
    5. '(read' → logprob: -9.557313919067383
    6. 'input' → logprob: -10.557313919067383
    7. 'sys' → logprob: -10.557313919067383
    8. '(off' → logprob: -10.557313919067383
    9. 'reader' → logprob: -10.932313919067383
    10. ' (' → logprob: -12.307313919067383

Token 107: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011834424221888185
    2. '()' → logprob: -6.75118350982666
    3. '())
' → logprob: -12.00118350982666
    4. ')' → logprob: -12.37618350982666
    5. ' ())' → logprob: -13.12618350982666
    6. '().' → logprob: -14.50118350982666
    7. '())

' → logprob: -15.62618350982666
    8. '()))' → logprob: -16.376182556152344
    9. '();)' → logprob: -16.501182556152344
    10. '()
' → logprob: -16.501182556152344

Token 108: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 109: ' arr' (ID: 1724)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.8309947848320007
    2. 'arr' (adapté à ' arr') → logprob: -1.5809948444366455
    3. ' A' → logprob: -2.0809948444366455
    4. ' arr' → logprob: -2.7059948444366455
    5. 'S' → logprob: -2.9559948444366455
    6. 'data' → logprob: -3.7059948444366455
    7. 'a' → logprob: -3.9559948444366455
    8. 's' → logprob: -4.705994606018066
    9. ' S' → logprob: -4.830994606018066
    10. ' data' → logprob: -4.830994606018066

Token 110: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1427316814661026
    2. '=' → logprob: -2.0177316665649414
    3. '=[]' → logprob: -11.267731666564941
    4. '[' → logprob: -11.392731666564941
    5. ')' → logprob: -11.517731666564941
    6. '[]' → logprob: -11.767731666564941
    7. ']' → logprob: -12.642731666564941
    8. ',' → logprob: -12.642731666564941
    9. ' ' → logprob: -13.017731666564941
    10. '[:]' → logprob: -13.642731666564941

Token 111: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.9867299199104309
    2. ' [' → logprob: -1.1117298603057861
    3. 'list' → logprob: -1.8617298603057861
    4. '[list' → logprob: -2.611729860305786
    5. '[' → logprob: -2.736729860305786
    6. '[]' → logprob: -5.861730098724365
    7. ' []' → logprob: -6.861730098724365
    8. '[int' → logprob: -8.236729621887207
    9. '[input' → logprob: -9.111729621887207
    10. '[line' → logprob: -9.736729621887207

Token 112: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0006288022268563509
    2. '(' → logprob: -7.37562894821167
    3. 'map' → logprob: -13.625628471374512
    4. '(int' → logprob: -15.000628471374512
    5. '(
' → logprob: -15.250628471374512
    6. '()' → logprob: -15.750628471374512
    7. '(range' → logprob: -16.125629425048828
    8. ' map' → logprob: -17.250629425048828
    9. '(m' → logprob: -17.375629425048828
    10. '	map' → logprob: -17.625629425048828

Token 113: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009554093703627586
    2. '(' → logprob: -7.250955581665039
    3. '(off' → logprob: -9.000955581665039
    4. 'int' → logprob: -9.875955581665039
    5. ')' → logprob: -9.875955581665039
    6. ',int' → logprob: -12.250955581665039
    7. '(
' → logprob: -12.750955581665039
    8. '<int' → logprob: -12.875955581665039
    9. '[int' → logprob: -13.125955581665039
    10. '<|end|>' → logprob: -13.375955581665039

Token 114: ',' (ID: 11)
  Prédit: '(reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reader' → logprob: -0.004222997464239597
    2. '(' → logprob: -5.754222869873047
    3. ',' → logprob: -7.004222869873047
    4. '(sys' → logprob: -9.879222869873047
    5. ' (' → logprob: -10.129222869873047
    6. ')(' → logprob: -11.254222869873047
    7. '(
' → logprob: -11.254222869873047
    8. ')' → logprob: -12.129222869873047
    9. '(read' → logprob: -13.004222869873047
    10. 'reader' → logprob: -13.379222869873047

Token 115: ' reader' (ID: 10958)
  Prédit: 'reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reader' → logprob: -0.05588484928011894
    2. ' reader' → logprob: -2.930884838104248
    3. '(reader' → logprob: -6.930884838104248
    4. '	reader' → logprob: -11.305885314941406
    5. '.reader' → logprob: -12.055885314941406
    6. ' ' → logprob: -12.680885314941406
    7. '_reader' → logprob: -13.930885314941406
    8. 'sys' → logprob: -14.680885314941406
    9. '   ' → logprob: -14.805885314941406
    10. '  ' → logprob: -14.930885314941406

Token 116: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -7.703443770878948e-06
    2. '()' → logprob: -11.875007629394531
    3. ' ().' → logprob: -14.500007629394531
    4. ')' → logprob: -16.62500762939453
    5. '(' → logprob: -17.50000762939453
    6. '())))' → logprob: -17.75000762939453
    7. '().'' → logprob: -18.50000762939453
    8. '()
' → logprob: -18.50000762939453
    9. 'split' → logprob: -19.12500762939453
    10. '()?.' → logprob: -19.12500762939453

Token 117: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011172551661729813
    2. 'strip' → logprob: -4.511172771453857
    3. 'rstrip' → logprob: -9.0111722946167
    4. ' split' → logprob: -13.0111722946167
    5. '(split' → logprob: -15.1361722946167
    6. 'replace' → logprob: -16.386173248291016
    7. ' strip' → logprob: -16.886173248291016
    8. 'spl' → logprob: -17.011173248291016
    9. '.split' → logprob: -18.011173248291016
    10. '().' → logprob: -19.011173248291016

Token 118: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.030055232346057892
    2. '())' → logprob: -4.030055046081543
    3. '()' → logprob: -4.530055046081543
    4. '))' → logprob: -7.780055046081543
    5. '('' → logprob: -7.905055046081543
    6. '()))
' → logprob: -9.280055046081543
    7. ')' → logprob: -9.905055046081543
    8. '())))' → logprob: -9.905055046081543
    9. '(' → logprob: -10.405055046081543
    10. '(','' → logprob: -11.155055046081543

Token 119: '    
' (ID: 1944)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5919486880302429
    2. '<|end|>' → logprob: -1.3419487476348877
    3. ')' → logprob: -2.0919487476348877
    4. ' ' → logprob: -3.5919487476348877
    5. '
' → logprob: -3.9669487476348877
    6. '    
' → logprob: -5.841948509216309
    7. '[' → logprob: -6.466948509216309
    8. ' for' → logprob: -6.466948509216309
    9. '  ' → logprob: -6.591948509216309
    10. ',' → logprob: -6.841948509216309

Token 120: '   ' (ID: 271)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.40466031432151794
    2. '   ' → logprob: -2.904660224914551
    3. ' dp' → logprob: -3.529660224914551
    4. 'for' → logprob: -3.654660224914551
    5. 'prefix' → logprob: -3.779660224914551
    6. 'max' → logprob: -3.779660224914551
    7. 'answer' → logprob: -4.029660224914551
    8. 'sum' → logprob: -4.029660224914551
    9. 'result' → logprob: -4.154660224914551
    10. 'count' → logprob: -4.404660224914551

Token 121: ' class' (ID: 744)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0980963334441185
    2. 'arr' → logprob: -4.5980963706970215
    3. 'prefix' → logprob: -4.7230963706970215
    4. 'for' → logprob: -4.7230963706970215
    5. 'from' → logprob: -4.7230963706970215
    6. 'count' → logprob: -4.9730963706970215
    7. 'ans' → logprob: -5.0980963706970215
    8. 'result' → logprob: -5.4730963706970215
    9. 'def' → logprob: -5.5980963706970215
    10. 's' → logprob: -5.7230963706970215

Token 122: ' Fen' (ID: 48230)
  Prédit: ' Segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Segment' → logprob: -0.513882577419281
    2. ' Fen' → logprob: -1.8888826370239258
    3. ' Stack' → logprob: -2.388882637023926
    4. ' Node' → logprob: -3.013882637023926
    5. ' Factor' → logprob: -3.638882637023926
    6. ' Solution' → logprob: -4.013882637023926
    7. ' Counter' → logprob: -4.263882637023926
    8. ' Solver' → logprob: -4.388882637023926
    9. ' Seg' → logprob: -4.638882637023926
    10. ' Tree' → logprob: -4.763882637023926

Token 123: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.5302509069442749
    2. 'w' → logprob: -0.9052509069442749
    3. '```' → logprob: -5.1552510261535645
    4. '``' → logprob: -8.280250549316406
    5. '   ' → logprob: -9.030250549316406
    6. '
' → logprob: -9.155250549316406
    7. '(w' → logprob: -9.155250549316406
    8. 'wt' → logprob: -9.405250549316406
    9. '(' → logprob: -9.655250549316406
    10. 't' → logprob: -9.655250549316406

Token 124: 'y' (ID: 88)
  Prédit: 'Tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.217951886355877e-05
    2. ':' → logprob: -11.000061988830566
    3. ' Tree' → logprob: -11.000061988830566
    4. '(Tree' → logprob: -11.500061988830566
    5. ' tree' → logprob: -11.875061988830566
    6. 'tree' → logprob: -12.500061988830566
    7. 'T' → logprob: -13.000061988830566
    8. '_T' → logprob: -14.125061988830566
    9. '(tree' → logprob: -14.250061988830566
    10. '	Tree' → logprob: -14.250061988830566

Token 125: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.20608387887477875
    2. ':' → logprob: -1.70608389377594
    3. ':
' → logprob: -6.33108377456665
    4. '(Tree' → logprob: -6.58108377456665
    5. ' Tree' → logprob: -8.206084251403809
    6. '_T' → logprob: -8.206084251403809
    7. 'tree' → logprob: -8.331084251403809
    8. '():' → logprob: -8.581084251403809
    9. '<Tree' → logprob: -9.706084251403809
    10. '{' → logprob: -9.831084251403809

Token 126: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00030078491545282304
    2. ':
' → logprob: -8.500300407409668
    3. '):' → logprob: -10.000300407409668
    4. '():' → logprob: -10.125300407409668
    5. '>:' → logprob: -12.500300407409668
    6. '(object' → logprob: -12.625300407409668
    7. ' :' → logprob: -13.250300407409668
    8. '_:' → logprob: -14.250300407409668
    9. ':**' → logprob: -14.375300407409668
    10. '}:' → logprob: -15.000300407409668

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.31662610173225403
    2. '<|end|>' → logprob: -1.4416260719299316
    3. '
' → logprob: -5.066626071929932
    4. '   ' → logprob: -5.191626071929932
    5. ':' → logprob: -5.316626071929932
    6. '<|end|>' → logprob: -5.941626071929932
    7. '    ' → logprob: -6.066626071929932
    8. '        
' → logprob: -6.191626071929932
    9. '(n' → logprob: -6.191626071929932
    10. '    
' → logprob: -6.566626071929932

Token 128: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.18023602664470673
    2. 'def' (adapté à ' def') → logprob: -1.8052359819412231
    3. '   ' → logprob: -8.055235862731934
    4. '__' → logprob: -9.430235862731934
    5. ' __' → logprob: -10.680235862731934
    6. '	def' → logprob: -11.055235862731934
    7. '       ' → logprob: -11.180235862731934
    8. '    ' → logprob: -11.305235862731934
    9. ' ' → logprob: -11.430235862731934
    10. 'class' → logprob: -12.055235862731934

Token 129: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.46694767475128174
    2. 'init' → logprob: -1.2169476747512817
    3. ' init' → logprob: -3.216947555541992
    4. '__' → logprob: -3.341947555541992
    5. '_init' → logprob: -6.591947555541992
    6. ' ' → logprob: -10.466947555541992
    7. 'n' → logprob: -10.716947555541992
    8. ' _' → logprob: -10.841947555541992
    9. '_' → logprob: -10.966947555541992
    10. 'nit' → logprob: -11.091947555541992

Token 130: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.704273118884885e-07
    2. ' init' → logprob: -14.500000953674316
    3. 'ini' → logprob: -16.5
    4. 'int' → logprob: -17.125
    5. 'in' → logprob: -17.25
    6. 'inite' → logprob: -18.625
    7. 'innit' → logprob: -18.625
    8. 'def' → logprob: -19.25
    9. '   ' → logprob: -19.25
    10. '	init' → logprob: -19.375

Token 131: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.009830227121710777
    2. '__' → logprob: -4.634829998016357
    3. '(self' → logprob: -10.009830474853516
    4. '__((' → logprob: -11.259830474853516
    5. '__(
' → logprob: -11.759830474853516
    6. '__('' → logprob: -12.759830474853516
    7. '__(*' → logprob: -12.884830474853516
    8. '___' → logprob: -14.009830474853516
    9. '(' → logprob: -14.509830474853516
    10. '__[' → logprob: -14.634830474853516

Token 132: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00038145645521581173
    2. ' self' → logprob: -7.8753814697265625
    3. '(self' → logprob: -14.625381469726562
    4. ',self' → logprob: -15.000381469726562
    5. '       ' → logprob: -15.750381469726562
    6. ',' → logprob: -16.250381469726562
    7. '
' → logprob: -16.500381469726562
    8. 'size' → logprob: -16.625381469726562
    9. '   ' → logprob: -16.875381469726562
    10. '	self' → logprob: -17.125381469726562

Token 133: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006935825105756521
    2. ' ,' → logprob: -5.2569355964660645
    3. 'self' → logprob: -6.5069355964660645
    4. ',self' → logprob: -8.631936073303223
    5. ',size' → logprob: -10.881936073303223
    6. ',n' → logprob: -12.756936073303223
    7. ' self' → logprob: -13.131936073303223
    8. ',num' → logprob: -13.756936073303223
    9. ',index' → logprob: -14.006936073303223
    10. ',parent' → logprob: -14.506936073303223

Token 134: ' length' (ID: 5517)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3017624616622925
    2. 'n' → logprob: -1.6767624616622925
    3. ' size' → logprob: -2.801762580871582
    4. 'size' → logprob: -4.551762580871582
    5. 'self' → logprob: -6.426762580871582
    6. ' self' → logprob: -7.676762580871582
    7. ' N' → logprob: -9.926762580871582
    8. '   ' → logprob: -10.051762580871582
    9. 'N' → logprob: -10.426762580871582
    10. '       ' → logprob: -11.301762580871582

Token 135: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002525957068428397
    2. '):
' → logprob: -6.252525806427002
    3. ' ):' → logprob: -7.877525806427002
    4. ',' → logprob: -8.62752628326416
    5. '=' → logprob: -11.12752628326416
    6. 'self' → logprob: -11.25252628326416
    7. ':' → logprob: -13.00252628326416
    8. '):
' → logprob: -13.12752628326416
    9. ')' → logprob: -13.25252628326416
    10. '   ' → logprob: -13.75252628326416

Token 136: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09308821707963943
    2. '<|end|>' → logprob: -2.593088150024414
    3. '            ' → logprob: -5.718088150024414
    4. '<|end|>' → logprob: -5.843088150024414
    5. ' self' → logprob: -6.218088150024414
    6. ' ' → logprob: -6.468088150024414
    7. 'self' → logprob: -6.718088150024414
    8. '               ' → logprob: -7.343088150024414
    9. '        ' → logprob: -7.718088150024414
    10. ',' → logprob: -7.718088150024414

Token 137: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.3885901868343353
    2. 'self' (adapté à ' self') → logprob: -1.1385902166366577
    3. '           ' → logprob: -6.638590335845947
    4. ' ' → logprob: -8.888589859008789
    5. '       ' → logprob: -9.013589859008789
    6. '	self' → logprob: -9.513589859008789
    7. '   ' → logprob: -10.763589859008789
    8. '        ' → logprob: -11.013589859008789
    9. '<|end|>' → logprob: -11.263589859008789
    10. '(self' → logprob: -11.763589859008789

Token 138: '.L' (ID: 2024)
  Prédit: '.size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.5026543736457825
    2. '.length' → logprob: -1.3776543140411377
    3. '.data' → logprob: -2.6276543140411377
    4. '.tree' → logprob: -3.0026543140411377
    5. '.' → logprob: -4.252654552459717
    6. '.bit' → logprob: -6.002654552459717
    7. '.n' → logprob: -6.502654552459717
    8. '._' → logprob: -6.502654552459717
    9. '.f' → logprob: -8.127654075622559
    10. ' .' → logprob: -8.502654075622559

Token 139: ' =' (ID: 314)
  Prédit: 'ength'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ength' → logprob: -0.019141223281621933
    2. '=' → logprob: -4.39414119720459
    3. ' =' → logprob: -5.26914119720459
    4. '   ' → logprob: -7.39414119720459
    5. 'eng' → logprob: -8.39414119720459
    6. 'en' → logprob: -8.51914119720459
    7. 'ENGTH' → logprob: -8.89414119720459
    8. 'e' → logprob: -9.01914119720459
    9. 'length' → logprob: -10.51914119720459
    10. 'enth' → logprob: -10.76914119720459

Token 140: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.05215529724955559
    2. ' length' → logprob: -3.0521552562713623
    3. 'ength' → logprob: -5.677155494689941
    4. '[length' → logprob: -8.927155494689941
    5. '(length' → logprob: -12.427155494689941
    6. '[' → logprob: -14.677155494689941
    7. '	length' → logprob: -14.802155494689941
    8. 'ng' → logprob: -16.052154541015625
    9. 'ENGTH' → logprob: -16.177154541015625
    10. 'leng' → logprob: -16.427154541015625

Token 141: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5920734405517578
    2. '           ' → logprob: -0.8420734405517578
    3. '+' → logprob: -4.592073440551758
    4. '<|end|>' → logprob: -6.342073440551758
    5. '       ' → logprob: -6.467073440551758
    6. 'self' → logprob: -6.967073440551758
    7. '<|end|>' → logprob: -8.092073440551758
    8. '            
' → logprob: -8.217073440551758
    9. ' +' → logprob: -8.217073440551758
    10. '               ' → logprob: -8.842073440551758

Token 142: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007829957641661167
    2. '+' → logprob: -6.1328301429748535
    3. 'self' → logprob: -6.3828301429748535
    4. '       ' → logprob: -6.5078301429748535
    5. '
' → logprob: -6.7578301429748535
    6. '<|end|>' → logprob: -7.8828301429748535
    7. ' +' → logprob: -8.632829666137695
    8. '               ' → logprob: -8.632829666137695
    9. '   ' → logprob: -8.882829666137695
    10. ',' → logprob: -9.632829666137695

Token 143: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2521628439426422
    2. 'self' (adapté à ' self') → logprob: -1.7521628141403198
    3. ' [' → logprob: -3.8771629333496094
    4. '[self' → logprob: -3.8771629333496094
    5. ' self' → logprob: -4.877162933349609
    6. '0' → logprob: -7.877162933349609
    7. '   ' → logprob: -11.00216293334961
    8. '[-' → logprob: -11.62716293334961
    9. ' ' → logprob: -11.62716293334961
    10. '       ' → logprob: -11.87716293334961

Token 144: '.container' (ID: 34153)
  Prédit: '.data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.data' → logprob: -0.4172621965408325
    2. '.tree' → logprob: -1.1672621965408325
    3. '.arr' → logprob: -4.667262077331543
    4. '.B' → logprob: -4.667262077331543
    5. '.t' → logprob: -5.792262077331543
    6. '.T' → logprob: -5.917262077331543
    7. '.D' → logprob: -6.917262077331543
    8. '.bit' → logprob: -6.917262077331543
    9. '.s' → logprob: -7.667262077331543
    10. 'arr' → logprob: -8.042262077331543

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6327356696128845
    2. ' =' → logprob: -0.7577356696128845
    3. '=[' → logprob: -9.507735252380371
    4. '[' → logprob: -10.382735252380371
    5. '=[]' → logprob: -11.132735252380371
    6. ' =[' → logprob: -11.882735252380371
    7. '[:]' → logprob: -12.507735252380371
    8. ' ' → logprob: -13.132735252380371
    9. '   ' → logprob: -13.757735252380371
    10. 's' → logprob: -14.132735252380371

Token 146: ' {' (ID: 354)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1602250337600708
    2. ' [' → logprob: -1.9102250337600708
    3. ' ' → logprob: -15.160224914550781
    4. '   ' → logprob: -16.16022491455078
    5. '[int' → logprob: -16.41022491455078
    6. '[self' → logprob: -16.66022491455078
    7. ' ' → logprob: -17.16022491455078
    8. '[len' → logprob: -17.16022491455078
    9. '[-' → logprob: -17.28522491455078
    10. '[length' → logprob: -17.91022491455078

Token 147: 'i' (ID: 72)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.001520930090919137
    2. '0' → logprob: -7.251521110534668
    3. 'i' → logprob: -7.876521110534668
    4. '}
' → logprob: -8.501521110534668
    5. ' }' → logprob: -8.751521110534668
    6. '}

' → logprob: -10.751521110534668
    7. '[]}' → logprob: -10.876521110534668
    8. 'k' → logprob: -12.126521110534668
    9. ' i' → logprob: -12.376521110534668
    10. 'default' → logprob: -12.501521110534668

Token 148: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001074015162885189
    2. ' :' → logprob: -7.376073837280273
    3. ':int' → logprob: -8.751073837280273
    4. ':i' → logprob: -8.876073837280273
    5. '+' → logprob: -9.501073837280273
    6. '0' → logprob: -10.626073837280273
    7. '=' → logprob: -10.751073837280273
    8. ':index' → logprob: -12.626073837280273
    9. '}' → logprob: -13.001073837280273
    10. ':[' → logprob: -13.376073837280273

Token 149: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00030424181022681296
    2. ' ' → logprob: -8.875304222106934
    3. '[]' → logprob: -9.000304222106934
    4. '[]}' → logprob: -10.375304222106934
    5. '[' → logprob: -12.875304222106934
    6. 'i' → logprob: -13.750304222106934
    7. '1' → logprob: -13.875304222106934
    8. 'int' → logprob: -13.875304222106934
    9. 'set' → logprob: -14.250304222106934
    10. '}' → logprob: -14.625304222106934

Token 150: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.026962755247950554
    2. 'for' → logprob: -3.6519627571105957
    3. '}' → logprob: -7.526962757110596
    4. ',' → logprob: -10.026962280273438
    5. ' ' → logprob: -10.401962280273438
    6. '	for' → logprob: -10.401962280273438
    7. '    ' → logprob: -12.651962280273438
    8. '        ' → logprob: -12.901962280273438
    9. '<|end|>' → logprob: -13.276962280273438
    10. ' }' → logprob: -13.276962280273438

Token 151: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.1239713653922081
    2. ' range' → logprob: -2.623971462249756
    3. 'i' → logprob: -3.248971462249756
    4. 'range' → logprob: -5.248971462249756
    5. ' ' → logprob: -11.873970985412598
    6. '	i' → logprob: -13.123970985412598
    7. '(i' → logprob: -13.998970985412598
    8. ' in' → logprob: -13.998970985412598
    9. '  ' → logprob: -14.248970985412598
    10. '[i' → logprob: -14.623970985412598

Token 152: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.7925743460655212
    2. ' in' → logprob: -0.9175743460655212
    3. ' range' → logprob: -2.292574405670166
    4. 'in' → logprob: -3.167574405670166
    5. 'i' → logprob: -5.667574405670166
    6. ' i' → logprob: -6.792574405670166
    7. 'ange' → logprob: -9.792573928833008
    8. ' ' → logprob: -10.292573928833008
    9. '(range' → logprob: -11.542573928833008
    10. '	range' → logprob: -11.917573928833008

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25192973017692566
    2. ' range' → logprob: -1.501929759979248
    3. '	range' → logprob: -15.25192928314209
    4. '(range' → logprob: -15.37692928314209
    5. '}' → logprob: -16.376930236816406
    6. ' ' → logprob: -16.626930236816406
    7. '[' → logprob: -17.376930236816406
    8. '
' → logprob: -17.751930236816406
    9. '   ' → logprob: -18.126930236816406
    10. '

' → logprob: -18.376930236816406

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006821724819019437
    2. '(self' → logprob: -7.875682353973389
    3. '(length' → logprob: -8.12568187713623
    4. '1' → logprob: -12.75068187713623
    5. '(len' → logprob: -14.00068187713623
    6. '(L' → logprob: -14.12568187713623
    7. 'self' → logprob: -14.25068187713623
    8. '(l' → logprob: -15.12568187713623
    9. ' (' → logprob: -15.25068187713623
    10. '(
' → logprob: -16.250682830810547

Token 155: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029468463733792305
    2. 'length' → logprob: -4.154468536376953
    3. 'self' → logprob: -4.779468536376953
    4. '(' → logprob: -5.404468536376953
    5. '(length' → logprob: -8.279468536376953
    6. '(self' → logprob: -9.279468536376953
    7. '   ' → logprob: -9.904468536376953
    8. ' length' → logprob: -10.779468536376953
    9. ' ' → logprob: -12.029468536376953
    10. ' self' → logprob: -12.404468536376953

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006888442439958453
    2. ',self' → logprob: -8.250688552856445
    3. ',length' → logprob: -8.250688552856445
    4. ' ,' → logprob: -9.250688552856445
    5. 'self' → logprob: -10.000688552856445
    6. ',len' → logprob: -11.625688552856445
    7. 'length' → logprob: -12.375688552856445
    8. ',
' → logprob: -12.500688552856445
    9. '1' → logprob: -12.625688552856445
    10. ',L' → logprob: -14.250688552856445

Token 157: ' length' (ID: 5517)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7105676531791687
    2. 'length' → logprob: -0.7105676531791687
    3. ' length' → logprob: -4.585567474365234
    4. ' self' → logprob: -4.960567474365234
    5. '   ' → logprob: -10.460567474365234
    6. 'len' → logprob: -11.460567474365234
    7. '1' → logprob: -12.335567474365234
    8. '(length' → logprob: -12.585567474365234
    9. '	length' → logprob: -12.960567474365234
    10. '(self' → logprob: -13.085567474365234

Token 158: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.04300159960985184
    2. ' +' → logprob: -3.168001651763916
    3. ')' → logprob: -14.418001174926758
    4. '   ' → logprob: -15.043001174926758
    5. ')+' → logprob: -15.418001174926758
    6. '+
' → logprob: -15.418001174926758
    7. ',' → logprob: -15.793001174926758
    8. '()+' → logprob: -15.793001174926758
    9. ' plus' → logprob: -16.043001174926758
    10. ' ' → logprob: -16.043001174926758

Token 159: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '2' → logprob: -16.25006675720215
    4. '   ' → logprob: -16.37506675720215
    5. ')' → logprob: -17.50006675720215
    6. '```' → logprob: -17.68756675720215
    7. '  ' → logprob: -18.56256675720215
    8. '+' → logprob: -19.25006675720215
    9. ')}' → logprob: -19.31256675720215
    10. '})' → logprob: -19.31256675720215

Token 160: ')}
' (ID: 19324)
  Prédit: ')}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')}' → logprob: -0.00804367195814848
    2. ')' → logprob: -4.8830437660217285
    3. '})' → logprob: -8.75804328918457
    4. '}' → logprob: -8.88304328918457
    5. ' )' → logprob: -9.50804328918457
    6. ')}}' → logprob: -10.38304328918457
    7. ')}
' → logprob: -11.63304328918457
    8. ');}' → logprob: -11.63304328918457
    9. '))' → logprob: -13.00804328918457
    10. ')}>' → logprob: -13.00804328918457

Token 161: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 162: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3163852095603943
    2. 'def' → logprob: -2.066385269165039
    3. '
' → logprob: -3.191385269165039
    4. 'self' (adapté à ' self') → logprob: -3.816385269165039
    5. '    
' → logprob: -3.941385269165039
    6. '        
' → logprob: -4.066385269165039
    7. '   ' → logprob: -4.441385269165039
    8. ' def' → logprob: -4.566385269165039
    9. '           ' → logprob: -5.066385269165039
    10. '<|end|>' → logprob: -5.441385269165039

Token 163: '.z' (ID: 9161)
  Prédit: '.update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.update' → logprob: -0.19982977211475372
    2. '._' → logprob: -2.9498298168182373
    3. '.add' → logprob: -3.1998298168182373
    4. '.size' → logprob: -3.8248298168182373
    5. 'def' → logprob: -3.9498298168182373
    6. '.query' → logprob: -4.449829578399658
    7. '.tree' → logprob: -4.449829578399658
    8. '.up' → logprob: -5.699829578399658
    9. '.def' → logprob: -6.199829578399658
    10. '.bit' → logprob: -6.324829578399658

Token 164: 'depth' (ID: 41022)
  Prédit: 'ero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ero' → logprob: -0.025687480345368385
    2. '   ' → logprob: -5.1506876945495605
    3. 'er' → logprob: -5.2756876945495605
    4. ' =' → logprob: -5.4006876945495605
    5. '=' → logprob: -5.7756876945495605
    6. 'eros' → logprob: -5.7756876945495605
    7. 'e' → logprob: -6.4006876945495605
    8. 'ip' → logprob: -6.6506876945495605
    9. 'ERO' → logprob: -9.400687217712402
    10. 'i' → logprob: -9.400687217712402

Token 165: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.387440949678421
    2. '=' → logprob: -1.1374409198760986
    3. '   ' → logprob: -8.88744068145752
    4. ' ' → logprob: -9.13744068145752
    5. 'def' → logprob: -10.01244068145752
    6. '       ' → logprob: -10.26244068145752
    7. '    ' → logprob: -10.38744068145752
    8. '           ' → logprob: -10.51244068145752
    9. 'self' → logprob: -10.88744068145752
    10. '[' → logprob: -11.01244068145752

Token 166: ' length' (ID: 5517)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.32284310460090637
    2. '1' → logprob: -1.947843074798584
    3. 'length' → logprob: -2.822843074798584
    4. '(length' → logprob: -3.572843074798584
    5. '20' → logprob: -3.822843074798584
    6. '(' → logprob: -5.697843074798584
    7. 'self' → logprob: -5.822843074798584
    8. '[length' → logprob: -5.822843074798584
    9. 'len' → logprob: -5.947843074798584
    10. 'int' → logprob: -6.447843074798584

Token 167: '.bit' (ID: 61866)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4638668894767761
    2. '<|end|>' → logprob: -2.088866949081421
    3. ' +' → logprob: -2.338866949081421
    4. '
' → logprob: -2.463866949081421
    5. '       ' → logprob: -3.338866949081421
    6. '<|end|>' → logprob: -3.713866949081421
    7. '   ' → logprob: -6.338866710662842
    8. '           ' → logprob: -7.713866710662842
    9. ' def' → logprob: -7.713866710662842
    10. '-' → logprob: -7.713866710662842

Token 168: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.12727297842502594
    2. 'length' → logprob: -2.1272730827331543
    3. 'ength' → logprob: -9.002272605895996
    4. 'l' → logprob: -9.252272605895996
    5. 'count' → logprob: -10.127272605895996
    6. 'len' → logprob: -10.252272605895996
    7. '```' → logprob: -10.877272605895996
    8. '   ' → logprob: -11.627272605895996
    9. '
' → logprob: -12.377272605895996
    10. 'width' → logprob: -12.377272605895996

Token 169: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.026841608807444572
    2. '()+' → logprob: -3.651841640472412
    3. '()}' → logprob: -8.776841163635254
    4. '())' → logprob: -8.901841163635254
    5. '()
' → logprob: -9.401841163635254
    6. '+' → logprob: -10.026841163635254
    7. '(' → logprob: -10.651841163635254
    8. '()-' → logprob: -10.776841163635254
    9. ' ()' → logprob: -11.026841163635254
    10. '()<<' → logprob: -11.151841163635254

Token 170: ' +' (ID: 659)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08193907141685486
    2. '2' → logprob: -2.8319389820098877
    3. ' ' → logprob: -3.9569389820098877
    4. '3' → logprob: -7.831939220428467
    5. '5' → logprob: -8.956938743591309
    6. '4' → logprob: -10.206938743591309
    7. '10' → logprob: -10.331938743591309
    8. '   ' → logprob: -11.331938743591309
    9. '7' → logprob: -11.331938743591309
    10. '  ' → logprob: -11.581938743591309

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22840948402881622
    2. '2' → logprob: -1.6034095287322998
    3. '3' → logprob: -6.478409290313721
    4. ' ' → logprob: -6.853409290313721
    5. '5' → logprob: -8.728409767150879
    6. '4' → logprob: -8.853409767150879
    7. '6' → logprob: -10.603409767150879
    8. '7' → logprob: -10.728409767150879
    9. '10' → logprob: -10.728409767150879
    10. '   ' → logprob: -11.728409767150879

Token 173: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.29299864172935486
    2. '<|end|>' → logprob: -1.6679986715316772
    3. '       ' → logprob: -2.9179985523223877
    4. '<|end|>' → logprob: -5.417998790740967
    5. '        
' → logprob: -5.792998790740967
    6. '    
' → logprob: -6.917998790740967
    7. 'def' → logprob: -7.167998790740967
    8. '   ' → logprob: -7.417998790740967
    9. ' 
' → logprob: -8.042998313903809
    10. '		
' → logprob: -8.417998313903809

Token 174: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05003245547413826
    2. '<|end|>' → logprob: -3.800032377243042
    3. '       ' → logprob: -4.425032615661621
    4. '        
' → logprob: -4.925032615661621
    5. '    
' → logprob: -5.300032615661621
    6. '		
' → logprob: -7.550032615661621
    7. '<|end|>' → logprob: -7.925032615661621
    8. '	
' → logprob: -8.425032615661621
    9. '   ' → logprob: -8.675032615661621
    10. ' 
' → logprob: -8.800032615661621

Token 175: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9823716878890991
    2. '
' → logprob: -1.1073716878890991
    3. '       ' → logprob: -2.2323718070983887
    4. '        
' → logprob: -2.3573718070983887
    5. '    
' → logprob: -3.1073718070983887
    6. ' def' → logprob: -3.8573718070983887
    7. '   ' → logprob: -3.9823718070983887
    8. ' 
' → logprob: -5.232371807098389
    9. '		
' → logprob: -7.107371807098389
    10. '            
' → logprob: -7.482371807098389

Token 176: ' increase' (ID: 7064)
  Prédit: ' update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.626835823059082
    2. ' add' → logprob: -1.251835823059082
    3. 'update' → logprob: -2.751835823059082
    4. 'add' → logprob: -3.501835823059082
    5. ' sum' → logprob: -3.876835823059082
    6. '_update' → logprob: -3.876835823059082
    7. ' query' → logprob: -4.626835823059082
    8. 'sum' → logprob: -4.751835823059082
    9. '_add' → logprob: -4.876835823059082
    10. ' _' → logprob: -5.501835823059082

Token 177: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023071514442563057
    2. '(' → logprob: -8.75023078918457
    3. ' (' → logprob: -9.75023078918457
    4. '(i' → logprob: -12.25023078918457
    5. '(idx' → logprob: -12.62523078918457
    6. '(index' → logprob: -13.37523078918457
    7. '(s' → logprob: -13.50023078918457
    8. '(this' → logprob: -14.75023078918457
    9. '(k' → logprob: -14.87523078918457
    10. '(sel' → logprob: -15.00023078918457

Token 178: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017596662044525146
    2. ' ,' → logprob: -4.14259672164917
    3. 'self' → logprob: -7.39259672164917
    4. '(self' → logprob: -7.64259672164917
    5. ',index' → logprob: -8.642596244812012
    6. ',self' → logprob: -9.267596244812012
    7. ' (' → logprob: -10.517596244812012
    8. 'index' → logprob: -10.642596244812012
    9. '   ' → logprob: -10.767596244812012
    10. '       ' → logprob: -11.017596244812012

Token 179: ' p' (ID: 275)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8037071228027344
    2. ' i' → logprob: -1.8037071228027344
    3. 'idx' → logprob: -1.9287071228027344
    4. 'index' → logprob: -2.0537071228027344
    5. ' idx' → logprob: -2.8037071228027344
    6. ' index' → logprob: -3.1787071228027344
    7. 'pos' → logprob: -5.178707122802734
    8. 'x' → logprob: -6.553707122802734
    9. 'k' → logprob: -6.678707122802734
    10. ' pos' → logprob: -7.053707122802734

Token 180: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00256067281588912
    2. ' ,' → logprob: -6.252560615539551
    3. 'self' → logprob: -8.25256061553955
    4. ',p' → logprob: -8.50256061553955
    5. ',self' → logprob: -9.50256061553955
    6. 'p' → logprob: -11.12756061553955
    7. '   ' → logprob: -11.37756061553955
    8. '):' → logprob: -11.37756061553955
    9. ',
' → logprob: -11.37756061553955
    10. '):
' → logprob: -12.50256061553955

Token 181: ' value' (ID: 1432)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.37290772795677185
    2. ' v' → logprob: -2.1229076385498047
    3. 'x' → logprob: -2.6229076385498047
    4. 'delta' → logprob: -3.1229076385498047
    5. ' x' → logprob: -4.122907638549805
    6. 'val' → logprob: -4.122907638549805
    7. '1' → logprob: -4.247907638549805
    8. ' delta' → logprob: -4.372907638549805
    9. ' val' → logprob: -5.497907638549805
    10. ' ' → logprob: -5.747907638549805

Token 182: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4743991494178772
    2. '):' → logprob: -0.9743991494178772
    3. '):
' → logprob: -8.22439956665039
    4. ' ):
' → logprob: -11.09939956665039
    5. ')' → logprob: -11.34939956665039
    6. ' ):' → logprob: -11.47439956665039
    7. '   ' → logprob: -11.97439956665039
    8. '       ' → logprob: -12.47439956665039
    9. ':' → logprob: -12.59939956665039
    10. '):

' → logprob: -13.72439956665039

Token 183: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 184: ' idx' (ID: 14016)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2227860540151596
    2. '           ' → logprob: -2.4727859497070312
    3. ' p' → logprob: -2.8477859497070312
    4. 'while' → logprob: -3.0977859497070312
    5. 'p' → logprob: -5.097785949707031
    6. '               ' → logprob: -5.722785949707031
    7. '            ' → logprob: -5.972785949707031
    8. '	while' → logprob: -9.597785949707031
    9. 'While' → logprob: -10.222785949707031
    10. '```' → logprob: -10.597785949707031

Token 185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2255510538816452
    2. '=' → logprob: -1.6005510091781616
    3. '=p' → logprob: -9.600550651550293
    4. ' ' → logprob: -10.725550651550293
    5. '+=' → logprob: -10.975550651550293
    6. ' +=' → logprob: -11.350550651550293
    7. '   ' → logprob: -11.975550651550293
    8. ')' → logprob: -12.100550651550293
    9. 'p' → logprob: -12.725550651550293
    10. '+' → logprob: -14.100550651550293

Token 186: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.16022484004497528
    2. ' p' → logprob: -1.9102247953414917
    3. '	p' → logprob: -15.910224914550781
    4. ' ' → logprob: -16.03522491455078
    5. '           ' → logprob: -16.16022491455078
    6. '   ' → logprob: -16.16022491455078
    7. '    ' → logprob: -16.78522491455078
    8. '(p' → logprob: -17.16022491455078
    9. ' ' → logprob: -17.16022491455078
    10. '
' → logprob: -17.28522491455078

Token 187: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.31781068444252014
    2. '           ' → logprob: -1.9428106546401978
    3. '
' → logprob: -3.1928107738494873
    4. ' +' → logprob: -3.5678107738494873
    5. '<|end|>' → logprob: -4.067810535430908
    6. '<|end|>' → logprob: -4.192810535430908
    7. 'while' → logprob: -4.567810535430908
    8. ';' → logprob: -5.192810535430908
    9. '            ' → logprob: -6.192810535430908
    10. ' while' → logprob: -6.317810535430908

Token 188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.00001335144043
    4. '0' → logprob: -14.25001335144043
    5. '
' → logprob: -15.75001335144043
    6. '```' → logprob: -17.12501335144043
    7. '+' → logprob: -17.25001335144043
    8. '  ' → logprob: -17.25001335144043
    9. '2' → logprob: -17.37501335144043
    10. '           ' → logprob: -17.50001335144043

Token 189: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6770756840705872
    2. '
' → logprob: -1.0520756244659424
    3. '<|end|>' → logprob: -2.4270756244659424
    4. '<|end|>' → logprob: -3.1770756244659424
    5. '            
' → logprob: -5.6770758628845215
    6. 'while' → logprob: -5.8020758628845215
    7. ' while' → logprob: -6.5520758628845215
    8. ';' → logprob: -6.9270758628845215
    9. '            ' → logprob: -7.3020758628845215
    10. '       ' → logprob: -7.5520758628845215

Token 190: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8798632621765137
    2. '
' → logprob: -1.0048632621765137
    3. '<|end|>' → logprob: -1.6298632621765137
    4. '<|end|>' → logprob: -4.004863262176514
    5. ')' → logprob: -6.879863262176514
    6. ' while' → logprob: -7.004863262176514
    7. 'while' → logprob: -7.379863262176514
    8. '            
' → logprob: -7.504863262176514
    9. ' 
' → logprob: -8.129863739013672
    10. ',' → logprob: -8.129863739013672

Token 191: ' try' (ID: 2075)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.1301095187664032
    2. ' while' → logprob: -2.1301095485687256
    3. '           ' → logprob: -5.7551093101501465
    4. '	while' → logprob: -12.005109786987305
    5. 'While' → logprob: -12.880109786987305
    6. '       ' → logprob: -15.005109786987305
    7. '
' → logprob: -15.255109786987305
    8. '   ' → logprob: -15.380109786987305
    9. '```' → logprob: -16.505109786987305
    10. '            
' → logprob: -16.630109786987305

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0699780061841011
    2. ':
' → logprob: -2.6949779987335205
    3. ' :' → logprob: -11.194977760314941
    4. '               ' → logprob: -11.444977760314941
    5. '            ' → logprob: -12.569977760314941
    6. '           ' → logprob: -13.319977760314941
    7. ':
' → logprob: -13.444977760314941
    8. ':

' → logprob: -13.444977760314941
    9. ' :
' → logprob: -13.444977760314941
    10. '                ' → logprob: -13.569977760314941

Token 193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19021017849445343
    2. ':' → logprob: -2.0652101039886475
    3. ':
' → logprob: -3.8152101039886475
    4. ' while' → logprob: -4.065210342407227
    5. '           ' → logprob: -6.190210342407227
    6. 'while' → logprob: -6.690210342407227
    7. '            ' → logprob: -6.815210342407227
    8. '                ' → logprob: -6.940210342407227
    9. '   ' → logprob: -7.315210342407227
    10. '              ' → logprob: -8.065210342407227

Token 194: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.14022262394428253
    2. 'while' (adapté à ' while') → logprob: -2.2652225494384766
    3. '               ' → logprob: -3.6402225494384766
    4. '                   ' → logprob: -8.765222549438477
    5. '           ' → logprob: -8.890222549438477
    6. '                ' → logprob: -9.140222549438477
    7. '
' → logprob: -9.890222549438477
    8. '```' → logprob: -9.890222549438477
    9. '            ' → logprob: -10.140222549438477
    10. 'While' → logprob: -10.265222549438477

Token 195: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.004639691673219204
    2. 'idx' → logprob: -6.004639625549316
    3. ' True' → logprob: -6.504639625549316
    4. 'True' → logprob: -7.629639625549316
    5. '(idx' → logprob: -9.129639625549316
    6. '(True' → logprob: -11.004639625549316
    7. ' ' → logprob: -11.129639625549316
    8. '1' → logprob: -11.629639625549316
    9. '	idx' → logprob: -11.629639625549316
    10. ' (' → logprob: -12.254639625549316

Token 196: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.6308176517486572
    2. ' <=' → logprob: -1.0058176517486572
    3. '<' → logprob: -2.5058176517486572
    4. ' <' → logprob: -4.005817413330078
    5. ' <<=' → logprob: -6.255817413330078
    6. '<len' → logprob: -8.380817413330078
    7. '<<' → logprob: -10.505817413330078
    8. '+=' → logprob: -10.880817413330078
    9. ' +=' → logprob: -10.880817413330078
    10. '&lt' → logprob: -11.005817413330078

Token 197: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006731711328029633
    2. ' self' → logprob: -5.0067315101623535
    3. '   ' → logprob: -11.506731986999512
    4. 'len' → logprob: -13.756731986999512
    5. '(self' → logprob: -13.881731986999512
    6. 'length' → logprob: -13.881731986999512
    7. ' ' → logprob: -14.006731986999512
    8. '           ' → logprob: -14.256731986999512
    9. '	self' → logprob: -14.256731986999512
    10. '
' → logprob: -15.131731986999512

Token 198: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -0.016055485233664513
    2. 'L' → logprob: -4.266055583953857
    3. 'length' → logprob: -6.766055583953857
    4. '.length' → logprob: -7.891055583953857
    5. 'ength' → logprob: -9.0160551071167
    6. '   ' → logprob: -9.5160551071167
    7. '       ' → logprob: -10.1410551071167
    8. 'self' → logprob: -10.1410551071167
    9. '.LENGTH' → logprob: -11.0160551071167
    10. '1' → logprob: -11.1410551071167

Token 199: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5237764716148376
    2. ':' → logprob: -0.8987764716148376
    3. '           ' → logprob: -8.523776054382324
    4. ' :
' → logprob: -9.148776054382324
    5. ' and' → logprob: -9.273776054382324
    6. ' :' → logprob: -9.648776054382324
    7. '):
' → logprob: -10.148776054382324
    8. '               ' → logprob: -10.273776054382324
    9. ':
' → logprob: -10.523776054382324
    10. ':

' → logprob: -10.773776054382324

Token 200: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.29155099391937256
    2. '               ' → logprob: -1.5415509939193726
    3. 'self' → logprob: -4.541551113128662
    4. ' self' → logprob: -5.041551113128662
    5. ',' → logprob: -5.166551113128662
    6. '<|end|>' → logprob: -5.291551113128662
    7. 'idx' → logprob: -6.166551113128662
    8. ':
' → logprob: -6.291551113128662
    9. '+' → logprob: -7.166551113128662
    10. ' idx' → logprob: -7.541551113128662

Token 201: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.38218846917152405
    2. 'self' (adapté à ' self') → logprob: -1.2571884393692017
    3. '                   ' → logprob: -3.632188558578491
    4. '               ' → logprob: -5.632188320159912
    5. '                       ' → logprob: -6.507188320159912
    6. ' ' → logprob: -7.757188320159912
    7. '           ' → logprob: -8.00718879699707
    8. '<|end|>' → logprob: -8.50718879699707
    9. '+' → logprob: -9.00718879699707
    10. '       ' → logprob: -9.63218879699707

Token 202: '.container' (ID: 34153)
  Prédit: '.container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.container' → logprob: -5.44312788406387e-05
    2. 'container' → logprob: -10.375054359436035
    3. '.' → logprob: -11.375054359436035
    4. ' .' → logprob: -11.875054359436035
    5. '                   ' → logprob: -13.625054359436035
    6. '               ' → logprob: -14.125054359436035
    7. '	container' → logprob: -14.750054359436035
    8. '           ' → logprob: -14.875054359436035
    9. 'self' → logprob: -15.000054359436035
    10. '].' → logprob: -15.250054359436035

Token 203: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -5.676981345459353e-06
    2. '[' → logprob: -12.375005722045898
    3. '                   ' → logprob: -14.625005722045898
    4. '[self' → logprob: -15.250005722045898
    5. ' [' → logprob: -15.625005722045898
    6. 'idx' → logprob: -16.0000057220459
    7. '[id' → logprob: -16.1250057220459
    8. '[index' → logprob: -16.2500057220459
    9. '```' → logprob: -16.3750057220459
    10. '[i' → logprob: -16.8750057220459

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5464634895324707
    2. ' +=' → logprob: -1.7964634895324707
    3. ']+=' → logprob: -1.7964634895324707
    4. '+=' → logprob: -2.4214634895324707
    5. ')' → logprob: -8.546463012695312
    6. ' ]' → logprob: -9.796463012695312
    7. '=' → logprob: -10.171463012695312
    8. '           ' → logprob: -10.296463012695312
    9. '+' → logprob: -10.921463012695312
    10. ']=' → logprob: -11.171463012695312

Token 205: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07958722859621048
    2. ' +=' → logprob: -2.57958722114563
    3. '=' → logprob: -7.454587459564209
    4. ' =' → logprob: -9.20458698272705
    5. ']+=' → logprob: -11.32958698272705
    6. '           ' → logprob: -13.32958698272705
    7. ' ^=' → logprob: -13.82958698272705
    8. '*=' → logprob: -14.20458698272705
    9. '+=(' → logprob: -14.82958698272705
    10. '+' → logprob: -15.20458698272705

Token 206: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.25193315744400024
    2. ' value' → logprob: -1.5019330978393555
    3. '                   ' → logprob: -12.751933097839355
    4. ' ' → logprob: -15.251933097839355
    5. '(value' → logprob: -15.251933097839355
    6. '	value' → logprob: -15.751933097839355
    7. ''value' → logprob: -16.376934051513672
    8. 'alue' → logprob: -16.876934051513672
    9. '"value' → logprob: -17.001934051513672
    10. '$value' → logprob: -17.126934051513672

Token 207: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04537878930568695
    2. '
' → logprob: -3.5453786849975586
    3. '               ' → logprob: -5.170378684997559
    4. '                    
' → logprob: -5.920378684997559
    5. ',
' → logprob: -6.170378684997559
    6. ',' → logprob: -6.295378684997559
    7. 'idx' → logprob: -7.170378684997559
    8. '           ' → logprob: -7.295378684997559
    9. ';' → logprob: -8.420378684997559
    10. '<|end|>' → logprob: -8.545378684997559

Token 208: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013324227184057236
    2. '               ' → logprob: -5.13832426071167
    3. '
' → logprob: -5.26332426071167
    4. '                    
' → logprob: -7.26332426071167
    5. '           ' → logprob: -7.88832426071167
    6. 'idx' → logprob: -8.388323783874512
    7. ',' → logprob: -8.388323783874512
    8. '       ' → logprob: -8.888323783874512
    9. '                       ' → logprob: -9.263323783874512
    10. '<|end|>' → logprob: -9.513323783874512

Token 209: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' (adapté à ' idx') → logprob: -0.4773549735546112
    2. ' idx' → logprob: -0.9773550033569336
    3. '                   ' → logprob: -5.727355003356934
    4. '	idx' → logprob: -12.227355003356934
    5. '(idx' → logprob: -12.727355003356934
    6. '[idx' → logprob: -12.977355003356934
    7. '               ' → logprob: -13.352355003356934
    8. '                    ' → logprob: -13.352355003356934
    9. '   ' → logprob: -13.727355003356934
    10. ' ' → logprob: -14.227355003356934

Token 210: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0718572661280632
    2. ' +=' → logprob: -2.696857213973999
    3. '&' → logprob: -7.446857452392578
    4. '*=' → logprob: -8.071857452392578
    5. ' <<=' → logprob: -8.196857452392578
    6. '=' → logprob: -8.321857452392578
    7. '|' → logprob: -8.321857452392578
    8. '<<' → logprob: -8.696857452392578
    9. '<' → logprob: -10.571857452392578
    10. ' =' → logprob: -10.946857452392578

Token 211: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.010666701011359692
    2. '(idx' → logprob: -5.135666847229004
    3. ' idx' → logprob: -5.385666847229004
    4. '	idx' → logprob: -9.635666847229004
    5. '   ' → logprob: -10.010666847229004
    6. ' (' → logprob: -11.510666847229004
    7. '(' → logprob: -11.510666847229004
    8. ' ' → logprob: -11.635666847229004
    9. '  ' → logprob: -13.260666847229004
    10. '[idx' → logprob: -13.760666847229004

Token 212: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.04861404746770859
    2. ' &' → logprob: -3.048614025115967
    3. '&amp' → logprob: -11.923614501953125
    4. '&p' → logprob: -11.923614501953125
    5. '&i' → logprob: -12.673614501953125
    6. '&t' → logprob: -13.048614501953125
    7. '&id' → logprob: -13.048614501953125
    8. '&r' → logprob: -13.423614501953125
    9. '&a' → logprob: -14.048614501953125
    10. '&A' → logprob: -14.173614501953125

Token 213: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03957076370716095
    2. ' -' → logprob: -3.6645708084106445
    3. '(-' → logprob: -4.4145708084106445
    4. 'idx' → logprob: -7.9145708084106445
    5. '-index' → logprob: -9.039570808410645
    6. '-i' → logprob: -9.164570808410645
    7. '-k' → logprob: -9.414570808410645
    8. '(idx' → logprob: -9.414570808410645
    9. ' (-' → logprob: -9.539570808410645
    10. ' idx' → logprob: -10.164570808410645

Token 214: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0001801801408873871
    2. ' idx' → logprob: -8.6251802444458
    3. '(idx' → logprob: -15.0001802444458
    4. '[idx' → logprob: -16.500179290771484
    5. '	idx' → logprob: -16.500179290771484
    6. '_idx' → logprob: -18.250179290771484
    7. ' ' → logprob: -19.125179290771484
    8. 'Idx' → logprob: -19.250179290771484
    9. '.idx' → logprob: -19.875179290771484
    10. '<|end|>' → logprob: -20.500179290771484

Token 215: '
' (ID: 198)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.06707971543073654
    2. ' idx' → logprob: -3.317079782485962
    3. '<|end|>' → logprob: -3.942079782485962
    4. '(idx' → logprob: -5.942079544067383
    5. '	idx' → logprob: -6.192079544067383
    6. '[idx' → logprob: -6.567079544067383
    7. '_idx' → logprob: -7.192079544067383
    8. 'x' → logprob: -7.317079544067383
    9. '                   ' → logprob: -8.067079544067383
    10. 'Idx' → logprob: -8.067079544067383

Token 216: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009818777441978455
    2. '               ' → logprob: -5.7598185539245605
    3. 'except' → logprob: -5.8848185539245605
    4. '<|end|>' → logprob: -6.7598185539245605
    5. '
' → logprob: -7.1348185539245605
    6. ' except' → logprob: -7.6348185539245605
    7. '                   ' → logprob: -8.634819030761719
    8. '       ' → logprob: -8.634819030761719
    9. '                    
' → logprob: -9.009819030761719
    10. '            
' → logprob: -9.009819030761719

Token 217: ' except' (ID: 6384)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04070313647389412
    2. 'except' (adapté à ' except') → logprob: -3.915703058242798
    3. ' except' → logprob: -4.040703296661377
    4. '               ' → logprob: -6.665703296661377
    5. '       ' → logprob: -8.290702819824219
    6. '
' → logprob: -8.790702819824219
    7. '	except' → logprob: -8.790702819824219
    8. 'finally' → logprob: -8.915702819824219
    9. ' finally' → logprob: -9.915702819824219
    10. ',' → logprob: -10.165702819824219

Token 218: ' Key' (ID: 7926)
  Prédit: ' Key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Key' → logprob: -0.11446337401866913
    2. 'Key' → logprob: -2.6144633293151855
    3. '(Key' → logprob: -3.4894633293151855
    4. ' Keyboard' → logprob: -6.2394633293151855
    5. 'Keyboard' → logprob: -6.4894633293151855
    6. ' Exception' → logprob: -8.114463806152344
    7. ':' → logprob: -9.489463806152344
    8. '(Attribute' → logprob: -9.489463806152344
    9. ' Index' → logprob: -9.739463806152344
    10. 'Exception' → logprob: -9.739463806152344

Token 219: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -1.9361264946837764e-07
    2. 'rror' → logprob: -15.75
    3. 'error' → logprob: -18.375
    4. 'Erro' → logprob: -19.25
    5. '_Error' → logprob: -19.875
    6. '_error' → logprob: -20.5
    7. ' Error' → logprob: -20.5
    8. 'ERROR' → logprob: -20.875
    9. '	Error' → logprob: -20.875
    10. 'Errors' → logprob: -21.0

Token 220: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2077459990978241
    2. ':
' → logprob: -1.8327460289001465
    3. '               ' → logprob: -3.7077460289001465
    4. '           ' → logprob: -6.5827460289001465
    5. ' :' → logprob: -7.7077460289001465
    6. '():
' → logprob: -8.082745552062988
    7. ' as' → logprob: -8.207745552062988
    8. ' :
' → logprob: -8.332745552062988
    9. '():' → logprob: -9.457745552062988
    10. '<|end|>' → logprob: -10.082745552062988

Token 221: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00565217062830925
    2. ' pass' → logprob: -5.505651950836182
    3. '           ' → logprob: -7.255651950836182
    4. ' break' → logprob: -7.505651950836182
    5. ' return' → logprob: -8.38065242767334
    6. '                   ' → logprob: -10.50565242767334
    7. 'pass' → logprob: -11.38065242767334
    8. ' ' → logprob: -11.88065242767334
    9. ' continue' → logprob: -11.88065242767334
    10. ',' → logprob: -12.63065242767334

Token 222: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.1699684113264084
    2. '               ' → logprob: -2.544968366622925
    3. 'pass' (adapté à ' pass') → logprob: -3.544968366622925
    4. ' return' → logprob: -3.794968366622925
    5. '           ' → logprob: -4.294968605041504
    6. ' break' → logprob: -5.169968605041504
    7. 'return' → logprob: -5.294968605041504
    8. '                   ' → logprob: -7.169968605041504
    9. 'break' → logprob: -7.169968605041504
    10. ' None' → logprob: -7.794968605041504

Token 223: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 224: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 225: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14608952403068542
    2. 'def' (adapté à ' def') → logprob: -2.396089553833008
    3. '           ' → logprob: -3.521089553833008
    4. ' def' → logprob: -5.146089553833008
    5. '   ' → logprob: -5.396089553833008
    6. '        
' → logprob: -7.521089553833008
    7. '        ' → logprob: -7.646089553833008
    8. ')' → logprob: -7.646089553833008
    9. 'return' → logprob: -7.646089553833008
    10. '    ' → logprob: -7.771089553833008

Token 226: ' cumulative' (ID: 75628)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.39661505818367004
    2. 'query' → logprob: -1.5216150283813477
    3. ' sum' → logprob: -3.1466150283813477
    4. ' query' → logprob: -3.7716150283813477
    5. 'prefix' → logprob: -3.7716150283813477
    6. 'get' → logprob: -4.771615028381348
    7. ' prefix' → logprob: -5.521615028381348
    8. '__' → logprob: -6.771615028381348
    9. '_sum' → logprob: -7.021615028381348
    10. ' get' → logprob: -7.021615028381348

Token 227: '(self' (ID: 2402)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.12990351021289825
    2. '(self' → logprob: -2.254903554916382
    3. 'sum' → logprob: -4.129903316497803
    4. '_frequency' → logprob: -8.004903793334961
    5. ' sum' → logprob: -9.004903793334961
    6. '(' → logprob: -9.254903793334961
    7. '_count' → logprob: -9.379903793334961
    8. '_' → logprob: -9.754903793334961
    9. 'Sum' → logprob: -10.379903793334961
    10. '(sum' → logprob: -10.504903793334961

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09611775726079941
    2. '_sum' → logprob: -2.7211177349090576
    3. ',_' → logprob: -5.221117973327637
    4. ' ,' → logprob: -5.221117973327637
    5. 'self' → logprob: -5.471117973327637
    6. ',self' → logprob: -5.596117973327637
    7. '(self' → logprob: -6.346117973327637
    8. '_query' → logprob: -6.846117973327637
    9. ',p' → logprob: -6.846117973327637
    10. '_' → logprob: -7.471117973327637

Token 229: ' j' (ID: 441)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5474973917007446
    2. ' p' → logprob: -1.0474973917007446
    3. 'self' → logprob: -3.297497272491455
    4. ' self' → logprob: -4.422497272491455
    5. 'r' → logprob: -4.797497272491455
    6. 'idx' → logprob: -5.297497272491455
    7. ' r' → logprob: -5.797497272491455
    8. ' idx' → logprob: -6.047497272491455
    9. 'i' → logprob: -7.047497272491455
    10. ' i' → logprob: -7.797497272491455

Token 230: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.3869860768318176
    2. '):
' → logprob: -1.1369860172271729
    3. ' ):' → logprob: -10.386985778808594
    4. ')' → logprob: -10.636985778808594
    5. '   ' → logprob: -10.761985778808594
    6. '):
' → logprob: -11.511985778808594
    7. '       ' → logprob: -11.761985778808594
    8. ' ):
' → logprob: -11.761985778808594
    9. ',' → logprob: -12.511985778808594
    10. '):

' → logprob: -12.761985778808594

Token 231: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011786778923124075
    2. ' idx' → logprob: -7.376178741455078
    3. 'idx' → logprob: -8.501178741455078
    4. ' s' → logprob: -9.626178741455078
    5. ' sum' → logprob: -10.001178741455078
    6. 'sum' → logprob: -10.001178741455078
    7. ' total' → logprob: -10.376178741455078
    8. '0' → logprob: -10.376178741455078
    9. '          ' → logprob: -10.501178741455078
    10. 'total' → logprob: -10.876178741455078

Token 232: ' idx' (ID: 14016)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.1135681867599487
    2. 's' → logprob: -1.9885681867599487
    3. 'result' → logprob: -2.2385683059692383
    4. '           ' → logprob: -2.3635683059692383
    5. 'res' → logprob: -2.3635683059692383
    6. ' result' → logprob: -2.4885683059692383
    7. ' res' → logprob: -2.7385683059692383
    8. ' total' → logprob: -3.8635683059692383
    9. 'total' → logprob: -3.9885683059692383
    10. ' idx' → logprob: -4.113568305969238

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141586661338806
    2. '=' → logprob: -1.7014158964157104
    3. ' ' → logprob: -13.201416015625
    4. '=j' → logprob: -15.451416015625
    5. '    ' → logprob: -15.951416015625
    6. ' +=' → logprob: -16.326416015625
    7. '   ' → logprob: -16.576416015625
    8. ' =
' → logprob: -16.951416015625
    9. '＝' → logprob: -16.951416015625
    10. '=int' → logprob: -17.076416015625

Token 234: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.04306633397936821
    2. ' j' → logprob: -3.1680662631988525
    3. '0' → logprob: -9.793066024780273
    4. ' ' → logprob: -11.793066024780273
    5. '1' → logprob: -13.918066024780273
    6. '   ' → logprob: -14.168066024780273
    7. '	j' → logprob: -14.668066024780273
    8. '{' → logprob: -15.293066024780273
    9. '$j' → logprob: -15.418066024780273
    10. '7' → logprob: -16.168066024780273

Token 235: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03114193119108677
    2. ' +' → logprob: -4.156141757965088
    3. '           ' → logprob: -4.531141757965088
    4. '0' → logprob: -6.656141757965088
    5. '-' → logprob: -6.906141757965088
    6. '1' → logprob: -8.031142234802246
    7. ' ' → logprob: -8.406142234802246
    8. '=' → logprob: -8.531142234802246
    9. '       ' → logprob: -8.781142234802246
    10. '            ' → logprob: -8.906142234802246

Token 236: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.117345684382599e-05
    2. ' ' → logprob: -11.000020980834961
    3. '0' → logprob: -12.500020980834961
    4. '
' → logprob: -15.500020980834961
    5. '           ' → logprob: -15.625020980834961
    6. '2' → logprob: -16.12502098083496
    7. '   ' → logprob: -16.37502098083496
    8. '```' → logprob: -16.75002098083496
    9. '  ' → logprob: -18.12502098083496
    10. '-' → logprob: -18.81252098083496

Token 237: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08006832003593445
    2. '
' → logprob: -3.955068349838257
    3. 'total' → logprob: -4.205068111419678
    4. 'sum' → logprob: -4.205068111419678
    5. 's' → logprob: -4.455068111419678
    6. 'result' → logprob: -4.955068111419678
    7. ',' → logprob: -5.455068111419678
    8. 'res' → logprob: -5.830068111419678
    9. ' s' → logprob: -7.580068111419678
    10. ' total' → logprob: -8.330068588256836

Token 238: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15071746706962585
    2. 'res' → logprob: -3.0257174968719482
    3. 'result' → logprob: -3.5257174968719482
    4. 'total' → logprob: -3.5257174968719482
    5. 'sum' → logprob: -4.400717258453369
    6. 's' → logprob: -4.400717258453369
    7. ',' → logprob: -6.150717258453369
    8. 'ret' → logprob: -6.650717258453369
    9. '
' → logprob: -6.775717258453369
    10. ' total' → logprob: -7.150717258453369

Token 239: ' result' (ID: 1534)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0005757808685303
    2. 'res' → logprob: -1.2505757808685303
    3. 'result' (adapté à ' result') → logprob: -1.2505757808685303
    4. 'ret' → logprob: -3.2505757808685303
    5. 'total' → logprob: -4.750576019287109
    6. 'ans' → logprob: -5.000576019287109
    7. 'sum' → logprob: -6.000576019287109
    8. 'summ' → logprob: -7.500576019287109
    9. 'acc' → logprob: -7.750576019287109
    10. '           ' → logprob: -7.875576019287109

Token 240: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759414434432983
    2. ' =' → logprob: -0.8259414434432983
    3. ' ' → logprob: -13.57594108581543
    4. '   ' → logprob: -15.45094108581543
    5. ',' → logprob: -15.82594108581543
    6. '=
' → logprob: -16.95094108581543
    7. ' =
' → logprob: -17.07594108581543
    8. '    ' → logprob: -17.20094108581543
    9. '        ' → logprob: -17.32594108581543
    10. '       ' → logprob: -17.45094108581543

Token 241: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005236717872321606
    2. ' ' → logprob: -5.255236625671387
    3. '           ' → logprob: -12.880236625671387
    4. '   ' → logprob: -15.380236625671387
    5. '       ' → logprob: -17.255237579345703
    6. '               ' → logprob: -17.380237579345703
    7. 'self' → logprob: -17.942737579345703
    8. '                   ' → logprob: -18.067737579345703
    9. '         ' → logprob: -18.067737579345703
    10. '۰' → logprob: -18.067737579345703

Token 242: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. 'self' → logprob: -18.750024795532227
    4. '   ' → logprob: -19.250024795532227
    5. '000' → logprob: -19.625024795532227
    6. '[' → logprob: -19.750024795532227
    7. 'int' → logprob: -19.750024795532227
    8. '۰' → logprob: -19.875024795532227
    9. '
' → logprob: -20.125024795532227
    10. '           ' → logprob: -21.250024795532227

Token 243: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47833555936813354
    2. '
' → logprob: -0.9783355593681335
    3. 'while' → logprob: -6.353335380554199
    4. '            
' → logprob: -7.353335380554199
    5. ' while' → logprob: -7.353335380554199
    6. '<|end|>' → logprob: -7.353335380554199
    7. '<|end|>' → logprob: -8.6033353805542
    8. ',
' → logprob: -9.4783353805542
    9. ',' → logprob: -9.9783353805542
    10. '
' → logprob: -10.1033353805542

Token 244: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0089105861261487
    2. 'while' → logprob: -5.133910655975342
    3. ' while' → logprob: -5.883910655975342
    4. '	       ' → logprob: -9.383910179138184
    5. '		' → logprob: -10.508910179138184
    6. '	while' → logprob: -10.508910179138184
    7. '       ' → logprob: -11.508910179138184
    8. '<|end|>' → logprob: -11.758910179138184
    9. '   ' → logprob: -12.133910179138184
    10. '	           ' → logprob: -12.508910179138184

Token 245: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0013441620394587517
    2. '           ' → logprob: -7.001344203948975
    3. ' while' → logprob: -7.751344203948975
    4. '	while' → logprob: -13.501343727111816
    5. 'While' → logprob: -13.876343727111816
    6. '   ' → logprob: -17.001344680786133
    7. '       ' → logprob: -17.376344680786133
    8. '
' → logprob: -17.876344680786133
    9. '               ' → logprob: -17.876344680786133
    10. '            
' → logprob: -18.001344680786133

Token 246: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.693186342716217
    2. ' idx' → logprob: -0.693186342716217
    3. '0' → logprob: -10.81818675994873
    4. '(idx' → logprob: -11.94318675994873
    5. '	idx' → logprob: -12.44318675994873
    6. ' ' → logprob: -12.44318675994873
    7. '   ' → logprob: -13.19318675994873
    8. '[idx' → logprob: -14.06818675994873
    9. '    ' → logprob: -14.31818675994873
    10. '_idx' → logprob: -15.31818675994873

Token 247: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.005234952084720135
    2. ' >' → logprob: -5.255234718322754
    3. '>=' → logprob: -14.380234718322754
    4. '&gt' → logprob: -15.380234718322754
    5. ' ' → logprob: -15.630234718322754
    6. '()>' → logprob: -16.63023567199707
    7. '0' → logprob: -17.00523567199707
    8. '   ' → logprob: -17.13023567199707
    9. ' ' → logprob: -17.25523567199707
    10. '">' → logprob: -17.38023567199707

Token 248: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002487903693690896
    2. ' ' → logprob: -6.002488136291504
    3. '=' → logprob: -11.377488136291504
    4. '           ' → logprob: -14.502488136291504
    5. '>' → logprob: -15.877488136291504
    6. '1' → logprob: -17.377487182617188
    7. 'idx' → logprob: -17.627487182617188
    8. '   ' → logprob: -17.877487182617188
    9. '               ' → logprob: -18.252487182617188
    10. '            ' → logprob: -18.377487182617188

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0573086217045784
    2. ':' → logprob: -2.9323086738586426
    3. '               ' → logprob: -6.307308673858643
    4. '           ' → logprob: -7.682308673858643
    5. '=' → logprob: -10.057308197021484
    6. '):
' → logprob: -10.307308197021484
    7. ' and' → logprob: -10.932308197021484
    8. ' :
' → logprob: -11.307308197021484
    9. ':

' → logprob: -12.307308197021484
    10. ',' → logprob: -12.932308197021484

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005654421169310808
    2. 'result' → logprob: -5.380654335021973
    3. ' result' → logprob: -7.005654335021973
    4. '   ' → logprob: -9.755654335021973
    5. ',result' → logprob: -11.130654335021973
    6. '```' → logprob: -11.380654335021973
    7. ' ' → logprob: -12.005654335021973
    8. '           ' → logprob: -12.130654335021973
    9. '<|end|>' → logprob: -12.380654335021973
    10. ',' → logprob: -12.505654335021973

Token 251: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.05721743404865265
    2. '               ' → logprob: -3.5572173595428467
    3. ' result' → logprob: -3.6822173595428467
    4. '           ' → logprob: -6.307217597961426
    5. '
' → logprob: -10.057217597961426
    6. ',result' → logprob: -11.057217597961426
    7. '                   ' → logprob: -11.432217597961426
    8. '	result' → logprob: -11.557217597961426
    9. '   ' → logprob: -11.557217597961426
    10. ' ' → logprob: -12.557217597961426

Token 252: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.1602281779050827
    2. ' +=' → logprob: -1.9102281332015991
    3. '=' → logprob: -13.91022777557373
    4. '+=(' → logprob: -14.16022777557373
    5. ']+=' → logprob: -14.53522777557373
    6. '	' → logprob: -14.53522777557373
    7. '+' → logprob: -14.66022777557373
    8. ' ' → logprob: -15.53522777557373
    9. '   ' → logprob: -15.91022777557373
    10. ' ' → logprob: -16.035228729248047

Token 253: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005532711511477828
    2. ' self' → logprob: -7.500553131103516
    3. '           ' → logprob: -16.250553131103516
    4. '(self' → logprob: -17.250553131103516
    5. '	self' → logprob: -17.375553131103516
    6. '[self' → logprob: -17.875553131103516
    7. '   ' → logprob: -18.750553131103516
    8. '=self' → logprob: -19.000553131103516
    9. ' ' → logprob: -19.750553131103516
    10. '               ' → logprob: -19.750553131103516

Token 254: '.container' (ID: 34153)
  Prédit: '.container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.container' → logprob: -1.759734732331708e-05
    2. '.' → logprob: -11.375017166137695
    3. 'container' → logprob: -12.250017166137695
    4. ' .' → logprob: -14.625017166137695
    5. '}.' → logprob: -15.750017166137695
    6. '.controller' → logprob: -15.875017166137695
    7. '.user' → logprob: -16.500017166137695
    8. '	container' → logprob: -16.500017166137695
    9. '.cont' → logprob: -16.625017166137695
    10. '].' → logprob: -16.625017166137695

Token 255: '.get' (ID: 775)
  Prédit: '[idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.38688287138938904
    2. '.get' → logprob: -1.1368829011917114
    3. 'idx' → logprob: -11.761882781982422
    4. 'get' → logprob: -12.636882781982422
    5. '.setdefault' → logprob: -15.136882781982422
    6. ' idx' → logprob: -15.636882781982422
    7. '[get' → logprob: -15.761882781982422
    8. '.' → logprob: -17.011882781982422
    9. '(idx' → logprob: -17.261882781982422
    10. '.idx' → logprob: -17.511882781982422

Token 256: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -4.320199877838604e-07
    2. '(' → logprob: -15.25
    3. 'idx' → logprob: -16.875
    4. ' (' → logprob: -17.125
    5. '[idx' → logprob: -17.875
    6. '((' → logprob: -18.75
    7. '(
' → logprob: -19.125
    8. '(obj' → logprob: -19.5
    9. '(i' → logprob: -19.625
    10. '(id' → logprob: -19.75

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003267639840487391
    2. ' ,' → logprob: -8.125327110290527
    3. '0' → logprob: -10.750327110290527
    4. ')' → logprob: -11.750327110290527
    5. '(),' → logprob: -14.250327110290527
    6. '),' → logprob: -15.500327110290527
    7. ' ' → logprob: -16.50032615661621
    8. ',
' → logprob: -16.62532615661621
    9. '(' → logprob: -17.18782615661621
    10. '‌,' → logprob: -17.18782615661621

Token 258: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014001218369230628
    2. ' ' → logprob: -8.875140190124512
    3. ')' → logprob: -16.375139236450195
    4. '   ' → logprob: -18.625139236450195
    5. '           ' → logprob: -19.000139236450195
    6. '                   ' → logprob: -19.500139236450195
    7. '  ' → logprob: -19.625139236450195
    8. '۰' → logprob: -19.625139236450195
    9. '00' → logprob: -20.187639236450195
    10. '    ' → logprob: -20.312639236450195

Token 259: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.474315345287323
    2. ')' → logprob: -0.974315345287323
    3. '               ' → logprob: -8.724315643310547
    4. ')
' → logprob: -10.224315643310547
    5. ' )
' → logprob: -11.099315643310547
    6. ')

' → logprob: -11.474315643310547
    7. '           ' → logprob: -12.099315643310547
    8. ' )' → logprob: -12.474315643310547
    9. '):
' → logprob: -13.599315643310547
    10. ')#' → logprob: -14.349315643310547

Token 260: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.710618905955926e-05
    2. '           ' → logprob: -9.625097274780273
    3. 'idx' → logprob: -11.250097274780273
    4. '                   ' → logprob: -11.875097274780273
    5. '       ' → logprob: -12.750097274780273
    6. '   ' → logprob: -12.875097274780273
    7. '```' → logprob: -13.375097274780273
    8. '              ' → logprob: -13.625097274780273
    9. '                
' → logprob: -14.000097274780273
    10. ' idx' → logprob: -14.250097274780273

Token 261: ' idx' (ID: 14016)
  Prédit: ' idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.25717440247535706
    2. 'idx' (adapté à ' idx') → logprob: -1.5071743726730347
    3. '               ' → logprob: -5.257174491882324
    4. '           ' → logprob: -11.257174491882324
    5. '	idx' → logprob: -12.507174491882324
    6. '                   ' → logprob: -13.257174491882324
    7. '                ' → logprob: -13.382174491882324
    8. ' ' → logprob: -15.007174491882324
    9. '[idx' → logprob: -15.132174491882324
    10. '              ' → logprob: -15.382174491882324

Token 262: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.4420957565307617
    2. '-=' → logprob: -1.1920957565307617
    3. '&' → logprob: -3.5670957565307617
    4. ' &=' → logprob: -3.6920957565307617
    5. '-' → logprob: -8.192095756530762
    6. ' &' → logprob: -8.692095756530762
    7. ' -' → logprob: -9.817095756530762
    8. ' ^=' → logprob: -10.567095756530762
    9. '=' → logprob: -10.817095756530762
    10. ' =' → logprob: -11.567095756530762

Token 263: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0019448186503723264
    2. ' idx' → logprob: -6.2519450187683105
    3. '(idx' → logprob: -11.501944541931152
    4. '	idx' → logprob: -12.126944541931152
    5. '   ' → logprob: -15.376944541931152
    6. ' ' → logprob: -15.626944541931152
    7. '[idx' → logprob: -16.00194549560547
    8. '  ' → logprob: -16.25194549560547
    9. ' (' → logprob: -16.62694549560547
    10. '(' → logprob: -17.00194549560547

Token 264: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.5762478709220886
    2. '&' → logprob: -0.8262478709220886
    3. '&amp' → logprob: -8.826248168945312
    4. '&id' → logprob: -9.701248168945312
    5. '&i' → logprob: -9.826248168945312
    6. '&t' → logprob: -10.701248168945312
    7. '&p' → logprob: -11.701248168945312
    8. '&r' → logprob: -12.201248168945312
    9. '&nbsp' → logprob: -13.201248168945312
    10. ' ' → logprob: -13.326248168945312

Token 265: ' -' (ID: 533)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.3553691804409027
    2. '-' → logprob: -2.2303690910339355
    3. ' -' → logprob: -2.2303690910339355
    4. ' idx' → logprob: -2.4803690910339355
    5. '	idx' → logprob: -8.605369567871094
    6. '(idx' → logprob: -8.730369567871094
    7. '.idx' → logprob: -11.105369567871094
    8. '[idx' → logprob: -11.980369567871094
    9. ' ' → logprob: -11.980369567871094
    10. '_idx' → logprob: -12.105369567871094

Token 266: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -1.3425219549390022e-05
    2. ' idx' → logprob: -11.37501335144043
    3. '(idx' → logprob: -13.75001335144043
    4. '	idx' → logprob: -14.62501335144043
    5. '-' → logprob: -16.00001335144043
    6. '[idx' → logprob: -16.25001335144043
    7. '.idx' → logprob: -16.75001335144043
    8. '1' → logprob: -17.25001335144043
    9. '```' → logprob: -17.50001335144043
    10. '_idx' → logprob: -17.62501335144043

Token 267: '
' (ID: 198)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011193180456757545
    2. ' ' → logprob: -4.51119327545166
    3. '           ' → logprob: -9.63619327545166
    4. 'idx' → logprob: -10.63619327545166
    5. '```' → logprob: -11.26119327545166
    6. '               ' → logprob: -11.51119327545166
    7. '0' → logprob: -11.63619327545166
    8. ' idx' → logprob: -11.88619327545166
    9. '
' → logprob: -12.26119327545166
    10. '       ' → logprob: -13.01119327545166

Token 268: '           ' (ID: 352)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02161039412021637
    2. ' ' → logprob: -3.8966104984283447
    3. '           ' → logprob: -7.146610260009766
    4. ' return' → logprob: -9.521610260009766
    5. '               ' → logprob: -9.521610260009766
    6. 'return' → logprob: -9.646610260009766
    7. '
' → logprob: -10.896610260009766
    8. '   ' → logprob: -11.521610260009766
    9. '       ' → logprob: -11.646610260009766
    10. '```' → logprob: -11.771610260009766

Token 269: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1799563467502594
    2. ' return' → logprob: -2.6799564361572266
    3. 'return' (adapté à ' return') → logprob: -2.9299564361572266
    4. '       ' → logprob: -3.5549564361572266
    5. '
' → logprob: -4.554956436157227
    6. '	return' → logprob: -6.179956436157227
    7. '   ' → logprob: -7.179956436157227
    8. '		' → logprob: -8.304956436157227
    9. '               ' → logprob: -9.054956436157227
    10. '	' → logprob: -9.554956436157227

Token 270: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.02975071594119072
    2. ' result' → logprob: -3.5297508239746094
    3. '(result' → logprob: -15.52975082397461
    4. ' ' → logprob: -18.02975082397461
    5. '	result' → logprob: -18.52975082397461
    6. '[result' → logprob: -18.77975082397461
    7. '   ' → logprob: -19.40475082397461
    8. '0' → logprob: -19.90475082397461
    9. '=result' → logprob: -20.02975082397461
    10. '  ' → logprob: -20.27975082397461

Token 271: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 272: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 273: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6395686864852905
    2. 'def' (adapté à ' def') → logprob: -0.8895686864852905
    3. 'tree' → logprob: -4.13956880569458
    4. ' def' → logprob: -4.38956880569458
    5. '       ' → logprob: -4.63956880569458
    6. '    
' → logprob: -5.38956880569458
    7. 'f' → logprob: -5.76456880569458
    8. '
' → logprob: -5.76456880569458
    9. 'fen' → logprob: -6.51456880569458
    10. 'arr' → logprob: -6.63956880569458

Token 274: ' find' (ID: 1646)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.720932126045227
    2. 'query' → logprob: -1.470932126045227
    3. ' query' → logprob: -2.4709320068359375
    4. 'sum' → logprob: -2.7209320068359375
    5. 'lower' → logprob: -3.2209320068359375
    6. ' range' → logprob: -3.3459320068359375
    7. 'total' → logprob: -4.8459320068359375
    8. ' sum' → logprob: -4.8459320068359375
    9. 'get' → logprob: -5.2209320068359375
    10. 'de' → logprob: -5.4709320068359375

Token 275: '_thresh' (ID: 126563)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4384681284427643
    2. '(' → logprob: -1.438468098640442
    3. '_lower' → logprob: -3.5634682178497314
    4. '_index' → logprob: -3.8134682178497314
    5. '_last' → logprob: -4.063467979431152
    6. '_prefix' → logprob: -4.313467979431152
    7. '_k' → logprob: -4.438467979431152
    8. '_' → logprob: -4.813467979431152
    9. '_first' → logprob: -5.938467979431152
    10. '_bound' → logprob: -6.188467979431152

Token 276: '(self' (ID: 2402)
  Prédit: 'old'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'old' → logprob: -0.08029310405254364
    2. '(self' → logprob: -2.5802931785583496
    3. '(old' → logprob: -7.33029317855835
    4. '```' → logprob: -8.705292701721191
    5. '   ' → logprob: -9.330292701721191
    6. 'hold' → logprob: -9.330292701721191
    7. 'self' → logprob: -9.580292701721191
    8. '_old' → logprob: -10.080292701721191
    9. 'older' → logprob: -10.205292701721191
    10. 'olding' → logprob: -10.330292701721191

Token 277: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009271840564906597
    2. ' ,' → logprob: -5.259271621704102
    3. 'self' → logprob: -5.884271621704102
    4. ',self' → logprob: -7.384271621704102
    5. ',j' → logprob: -8.509271621704102
    6. '(self' → logprob: -9.134271621704102
    7. ',p' → logprob: -10.134271621704102
    8. ',
' → logprob: -10.134271621704102
    9. ',value' → logprob: -10.134271621704102
    10. '):' → logprob: -10.259271621704102

Token 278: ' val' (ID: 1459)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19139637053012848
    2. ' self' → logprob: -1.9413963556289673
    3. 'threshold' → logprob: -5.066396236419678
    4. 'th' → logprob: -5.316396236419678
    5. 'target' → logprob: -5.316396236419678
    6. 'value' → logprob: -5.941396236419678
    7. 't' → logprob: -6.191396236419678
    8. 'k' → logprob: -6.816396236419678
    9. 'x' → logprob: -6.941396236419678
    10. 'val' → logprob: -7.066396236419678

Token 279: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10438443720340729
    2. '):' → logprob: -2.729384422302246
    3. '(self' → logprob: -4.354384422302246
    4. 'self' → logprob: -4.354384422302246
    5. '):
' → logprob: -5.354384422302246
    6. ' ,' → logprob: -6.229384422302246
    7. ',self' → logprob: -7.479384422302246
    8. ' self' → logprob: -7.729384422302246
    9. '   ' → logprob: -9.354384422302246
    10. '       ' → logprob: -9.354384422302246

Token 280: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027451282367110252
    2. ' idx' → logprob: -3.652451276779175
    3. ' def' → logprob: -7.777451515197754
    4. 'idx' → logprob: -8.027451515197754
    5. ' i' → logprob: -9.027451515197754
    6. ' index' → logprob: -9.152451515197754
    7. ' for' → logprob: -10.902451515197754
    8. '       ' → logprob: -11.027451515197754
    9. ' #' → logprob: -11.277451515197754
    10. '   ' → logprob: -11.277451515197754

Token 281: ' agg' (ID: 103407)
  Prédit: ' idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' idx' → logprob: -0.07320307195186615
    2. ' pos' → logprob: -3.5732030868530273
    3. ' res' → logprob: -4.448203086853027
    4. '       ' → logprob: -4.823203086853027
    5. 'idx' → logprob: -5.198203086853027
    6. ' result' → logprob: -5.573203086853027
    7. ' index' → logprob: -5.698203086853027
    8. ' def' → logprob: -6.073203086853027
    9. ' l' → logprob: -6.573203086853027
    10. '           ' → logprob: -6.698203086853027

Token 282: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14648324251174927
    2. '=' → logprob: -2.0214831829071045
    3. 'reg' → logprob: -6.271483421325684
    4. ',' → logprob: -7.896483421325684
    5. '_idx' → logprob: -7.896483421325684
    6. ' ' → logprob: -8.146483421325684
    7. '   ' → logprob: -8.146483421325684
    8. 'idx' → logprob: -9.396483421325684
    9. 'rega' → logprob: -9.521483421325684
    10. 'sum' → logprob: -9.771483421325684

Token 283: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014165511354804039
    2. ' ' → logprob: -4.26416540145874
    3. 'result' → logprob: -14.264165878295898
    4. '[' → logprob: -15.139165878295898
    5. 'idx' → logprob: -15.514165878295898
    6. '   ' → logprob: -16.1391658782959
    7. 'self' → logprob: -16.2641658782959
    8. 'val' → logprob: -16.6391658782959
    9. 'pos' → logprob: -17.0766658782959
    10. '-' → logprob: -17.0766658782959

Token 284: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -13.250004768371582
    3. 'result' → logprob: -13.625004768371582
    4. 'val' → logprob: -15.250004768371582
    5. 'idx' → logprob: -15.250004768371582
    6. '[' → logprob: -15.500004768371582
    7. 'self' → logprob: -15.750004768371582
    8. 'acc' → logprob: -15.875004768371582
    9. 'res' → logprob: -16.250003814697266
    10. 'mask' → logprob: -16.750003814697266

Token 285: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12509512901306152
    2. ',' → logprob: -2.8750951290130615
    3. '
' → logprob: -2.8750951290130615
    4. ' idx' → logprob: -6.250095367431641
    5. 'idx' → logprob: -7.125095367431641
    6. ' and' → logprob: -7.500095367431641
    7. ',
' → logprob: -8.00009536743164
    8. '            ' → logprob: -8.37509536743164
    9. ' 
' → logprob: -8.87509536743164
    10. '            
' → logprob: -9.00009536743164

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3791365325450897
    2. '
' → logprob: -1.379136562347412
    3. ',' → logprob: -2.879136562347412
    4. ' idx' → logprob: -5.379136562347412
    5. 'idx' → logprob: -6.754136562347412
    6. ' and' → logprob: -7.754136562347412
    7. '            
' → logprob: -8.254136085510254
    8. ';' → logprob: -8.629136085510254
    9. ',
' → logprob: -8.754136085510254
    10. ' 
' → logprob: -9.004136085510254

Token 287: ' spot' (ID: 10021)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.1259973794221878
    2. 'idx' → logprob: -2.250997304916382
    3. 'bit' → logprob: -5.375997543334961
    4. 'res' → logprob: -5.750997543334961
    5. ' pos' → logprob: -6.000997543334961
    6. 'i' → logprob: -6.875997543334961
    7. 'mask' → logprob: -7.500997543334961
    8. ' idx' → logprob: -8.500997543334961
    9. 'index' → logprob: -8.750997543334961
    10. '   ' → logprob: -9.000997543334961

Token 288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16050854325294495
    2. '=' → logprob: -1.9105085134506226
    3. ' ' → logprob: -8.535508155822754
    4. 's' → logprob: -10.660508155822754
    5. ',' → logprob: -11.160508155822754
    6. '    ' → logprob: -11.410508155822754
    7. '   ' → logprob: -11.410508155822754
    8. '<|end|>' → logprob: -11.785508155822754
    9. '  ' → logprob: -12.035508155822754
    10. ')' → logprob: -12.785508155822754

Token 289: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017182581359520555
    2. ' ' → logprob: -6.376718044281006
    3. '1' → logprob: -11.376718521118164
    4. 'self' → logprob: -13.251718521118164
    5. '   ' → logprob: -14.564218521118164
    6. '(' → logprob: -14.626718521118164
    7. '-' → logprob: -14.751718521118164
    8. ' -' → logprob: -15.876718521118164
    9. '  ' → logprob: -16.001718521118164
    10. ' self' → logprob: -16.189218521118164

Token 290: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017874970217235386
    2. '1' → logprob: -9.125178337097168
    3. 'self' → logprob: -10.000178337097168
    4. ' ' → logprob: -11.000178337097168
    5. '(' → logprob: -12.125178337097168
    6. '-' → logprob: -13.750178337097168
    7. ' self' → logprob: -16.000179290771484
    8. '(self' → logprob: -16.062679290771484
    9. '-(' → logprob: -16.437679290771484
    10. '2' → logprob: -16.500179290771484

Token 291: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018790162866935134
    2. '
' → logprob: -6.7518792152404785
    3. ' for' → logprob: -7.5018792152404785
    4. ',' → logprob: -9.25187873840332
    5. '            
' → logprob: -10.75187873840332
    6. ',
' → logprob: -11.87687873840332
    7. ' 
' → logprob: -12.00187873840332
    8. '   ' → logprob: -12.75187873840332
    9. '  
' → logprob: -13.00187873840332
    10. '            ' → logprob: -13.00187873840332

Token 292: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005484064109623432
    2. ' for' → logprob: -5.255484104156494
    3. '
' → logprob: -9.505483627319336
    4. '       ' → logprob: -9.880483627319336
    5. '   ' → logprob: -9.880483627319336
    6. ',' → logprob: -11.005483627319336
    7. '            
' → logprob: -11.130483627319336
    8. 'for' → logprob: -11.255483627319336
    9. '               ' → logprob: -12.755483627319336
    10. '		' → logprob: -13.005483627319336

Token 293: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09650351107120514
    2. 'for' (adapté à ' for') → logprob: -2.471503496170044
    3. '           ' → logprob: -4.971503734588623
    4. ' i' → logprob: -8.346503257751465
    5. '   ' → logprob: -8.471503257751465
    6. ' bit' → logprob: -9.971503257751465
    7. 'i' → logprob: -10.346503257751465
    8. '       ' → logprob: -10.846503257751465
    9. ' k' → logprob: -11.471503257751465
    10. ' while' → logprob: -11.846503257751465

Token 294: ' power' (ID: 3470)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.13432146608829498
    2. 'i' → logprob: -2.759321451187134
    3. ' d' → logprob: -3.134321451187134
    4. 'd' → logprob: -4.259321689605713
    5. ' b' → logprob: -6.259321689605713
    6. 'b' → logprob: -7.759321689605713
    7. ' k' → logprob: -8.134321212768555
    8. ' ' → logprob: -8.134321212768555
    9. 'shift' → logprob: -8.259321212768555
    10. ' _' → logprob: -8.509321212768555

Token 295: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0019977507181465626
    2. 'in' → logprob: -6.626997947692871
    3. '=' → logprob: -8.001997947692871
    4. ' =' → logprob: -8.501997947692871
    5. 's' → logprob: -9.751997947692871
    6. ',' → logprob: -10.876997947692871
    7. '           ' → logprob: -11.376997947692871
    8. ' ' → logprob: -12.126997947692871
    9. ' ,' → logprob: -12.126997947692871
    10. '            ' → logprob: -12.376997947692871

Token 296: ' reversed' (ID: 57184)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.582370400428772
    2. 'range' → logprob: -0.832370400428772
    3. ' reversed' → logprob: -5.207370281219482
    4. ' range' → logprob: -7.207370281219482
    5. '[' → logprob: -8.83237075805664
    6. '(re' → logprob: -11.08237075805664
    7. 'reverse' → logprob: -11.70737075805664
    8. '(range' → logprob: -11.70737075805664
    9. '   ' → logprob: -11.83237075805664
    10. '[::-' → logprob: -12.58237075805664

Token 297: '(range' (ID: 50017)
  Prédit: '(range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(range' → logprob: -0.006721059791743755
    2. 'range' → logprob: -5.006721019744873
    3. '(' → logprob: -12.631721496582031
    4. ' range' → logprob: -13.006721496582031
    5. '	range' → logprob: -16.13172149658203
    6. '(self' → logprob: -17.00672149658203
    7. '(list' → logprob: -18.00672149658203
    8. '   ' → logprob: -18.75672149658203
    9. '(
' → logprob: -19.13172149658203
    10. '_range' → logprob: -19.63172149658203

Token 298: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.707997428951785e-05
    2. '(' → logprob: -9.500077247619629
    3. 'self' → logprob: -13.125077247619629
    4. ' self' → logprob: -16.375076293945312
    5. '1' → logprob: -16.875076293945312
    6. ' (' → logprob: -17.000076293945312
    7. '(
' → logprob: -17.250076293945312
    8. '0' → logprob: -18.000076293945312
    9. ' ' → logprob: -18.750076293945312
    10. '	self' → logprob: -19.000076293945312

Token 299: '.z' (ID: 9161)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04849333316087723
    2. 'self' → logprob: -3.2984933853149414
    3. ' self' → logprob: -4.923493385314941
    4. '(' → logprob: -5.798493385314941
    5. ' (' → logprob: -9.673493385314941
    6. ' ' → logprob: -11.673493385314941
    7. '   ' → logprob: -12.673493385314941
    8. '0' → logprob: -13.048493385314941
    9. '	self' → logprob: -13.298493385314941
    10. '1' → logprob: -13.298493385314941

Token 300: 'depth' (ID: 41022)
  Prédit: 'depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -4.084206375409849e-05
    2. '_depth' → logprob: -10.125041007995605
    3. ' depth' → logprob: -15.500041007995605
    4. 'd' → logprob: -16.12504005432129
    5. 'dep' → logprob: -16.12504005432129
    6. '_' → logprob: -16.62504005432129
    7. '(depth' → logprob: -17.00004005432129
    8. '-depth' → logprob: -17.87504005432129
    9. '   ' → logprob: -18.00004005432129
    10. '.depth' → logprob: -18.50004005432129

Token 301: '+' (ID: 10)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.3926839530467987
    2. ')):
' → logprob: -1.142683982849121
    3. '))' → logprob: -5.892683982849121
    4. ',' → logprob: -7.142683982849121
    5. ' ))' → logprob: -7.392683982849121
    6. '()))' → logprob: -8.017683982849121
    7. ')):
' → logprob: -8.642683982849121
    8. '       ' → logprob: -8.642683982849121
    9. '(' → logprob: -8.767683982849121
    10. ' ' → logprob: -8.892683982849121

Token 302: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08164962381124496
    2. '2' → logprob: -2.5816495418548584
    3. '5' → logprob: -6.7066497802734375
    4. '3' → logprob: -6.9566497802734375
    5. '4' → logprob: -8.331649780273438
    6. '7' → logprob: -9.081649780273438
    7. '6' → logprob: -9.331649780273438
    8. '10' → logprob: -9.456649780273438
    9. '8' → logprob: -10.956649780273438
    10. '15' → logprob: -11.456649780273438

Token 303: ')):
' (ID: 22530)
  Prédit: ')):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):
' → logprob: -0.3897855579853058
    2. ')):' → logprob: -1.1397855281829834
    3. '))' → logprob: -6.8897857666015625
    4. ')):
' → logprob: -6.8897857666015625
    5. '           ' → logprob: -8.264785766601562
    6. '               ' → logprob: -8.764785766601562
    7. '       ' → logprob: -9.139785766601562
    8. '):
' → logprob: -9.139785766601562
    9. '):' → logprob: -9.514785766601562
    10. ',' → logprob: -9.889785766601562

Token 304: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.044616855680942535
    2. '1' → logprob: -3.669616937637329
    3. ' ' → logprob: -4.41961669921875
    4. '            ' → logprob: -6.16961669921875
    5. '                ' → logprob: -6.29461669921875
    6. '   ' → logprob: -8.16961669921875
    7. '           ' → logprob: -8.16961669921875
    8. ' 
' → logprob: -8.29461669921875
    9. ',' → logprob: -8.54461669921875
    10. '    ' → logprob: -8.66961669921875

Token 305: ' probe' (ID: 31925)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.3922027349472046
    2. ' step' → logprob: -1.3922027349472046
    3. '               ' → logprob: -1.6422027349472046
    4. ' bit' → logprob: -2.517202854156494
    5. ' spot' → logprob: -2.767202854156494
    6. ' b' → logprob: -3.517202854156494
    7. ' nxt' → logprob: -4.017202854156494
    8. ' ' → logprob: -4.392202854156494
    9. ' k' → logprob: -4.892202854156494
    10. '                   ' → logprob: -4.892202854156494

Token 306: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31329238414764404
    2. '=' → logprob: -1.313292384147644
    3. ' ' → logprob: -10.938292503356934
    4. '+=' → logprob: -13.688292503356934
    5. ' +=' → logprob: -14.063292503356934
    6. '|' → logprob: -14.188292503356934
    7. 'bit' → logprob: -14.313292503356934
    8. 't' → logprob: -14.438292503356934
    9. ' |=' → logprob: -14.438292503356934
    10. '=int' → logprob: -14.438292503356934

Token 307: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.014164102263748646
    2. ' spot' → logprob: -4.264163970947266
    3. '1' → logprob: -14.764163970947266
    4. '(' → logprob: -15.639163970947266
    5. ' ' → logprob: -17.014163970947266
    6. '   ' → logprob: -18.139163970947266
    7. '0' → logprob: -18.389163970947266
    8. 'Spot' → logprob: -19.014163970947266
    9. 'spots' → logprob: -19.264163970947266
    10. 'shot' → logprob: -19.389163970947266

Token 308: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3719845414161682
    2. ' +' → logprob: -1.2469844818115234
    3. '|' → logprob: -3.8719844818115234
    4. ' |' → logprob: -6.121984481811523
    5. '+(' → logprob: -8.371984481811523
    6. '+=' → logprob: -11.871984481811523
    7. '|(' → logprob: -12.121984481811523
    8. '   ' → logprob: -12.996984481811523
    9. '=' → logprob: -13.371984481811523
    10. ' +=' → logprob: -13.621984481811523

Token 309: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.763666947837919e-05
    2. '1' → logprob: -10.00004768371582
    3. ' (' → logprob: -13.12504768371582
    4. '2' → logprob: -15.87504768371582
    5. '   ' → logprob: -16.75004768371582
    6. ' ' → logprob: -17.25004768371582
    7. '[' → logprob: -17.62504768371582
    8. '
' → logprob: -17.75004768371582
    9. '((' → logprob: -17.75004768371582
    10. '```' → logprob: -18.25004768371582

Token 310: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. '(' → logprob: -11.750008583068848
    3. ' ' → logprob: -15.125008583068848
    4. '2' → logprob: -17.62500762939453
    5. ')' → logprob: -18.00000762939453
    6. '   ' → logprob: -18.37500762939453
    7. '
' → logprob: -19.12500762939453
    8. ' (' → logprob: -19.87500762939453
    9. '0' → logprob: -20.75000762939453
    10. '[' → logprob: -20.75000762939453

Token 311: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.1602245420217514
    2. ' <<' → logprob: -1.9102245569229126
    3. '<<(' → logprob: -15.535224914550781
    4. '<<<' → logprob: -16.16022491455078
    5. '<' → logprob: -16.78522491455078
    6. ' <<=' → logprob: -17.53522491455078
    7. '<<"' → logprob: -18.66022491455078
    8. ' ' → logprob: -18.91022491455078
    9. '1' → logprob: -18.91022491455078
    10. ')<<' → logprob: -19.28522491455078

Token 312: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -4.56102097814437e-05
    2. ' power' → logprob: -10.000045776367188
    3. 'pow' → logprob: -15.875045776367188
    4. '(power' → logprob: -17.125045776367188
    5. '_power' → logprob: -19.125045776367188
    6. 'powers' → logprob: -20.500045776367188
    7. '-power' → logprob: -21.000045776367188
    8. 'Power' → logprob: -21.000045776367188
    9. '.power' → logprob: -21.500045776367188
    10. '
' → logprob: -21.875045776367188

Token 313: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741145372390747
    2. ')' → logprob: -0.9741145372390747
    3. ' )
' → logprob: -10.974114418029785
    4. '               ' → logprob: -12.224114418029785
    5. ')

' → logprob: -12.474114418029785
    6. ' )' → logprob: -12.599114418029785
    7. ')
' → logprob: -13.099114418029785
    8. '):
' → logprob: -13.349114418029785
    9. '<|end|>' → logprob: -13.474114418029785
    10. ')#' → logprob: -14.099114418029785

Token 314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2671597003936768
    2. '<|end|>' → logprob: -1.2671597003936768
    3. '           ' → logprob: -1.6421597003936768
    4. ' if' → logprob: -2.3921597003936768
    5. '
' → logprob: -3.2671597003936768
    6. '                
' → logprob: -3.8921597003936768
    7. '<|end|>' → logprob: -3.8921597003936768
    8. '            
' → logprob: -4.142159461975098
    9. ' ' → logprob: -4.267159461975098
    10. ' 
' → logprob: -4.767159461975098

Token 315: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12096718698740005
    2. '               ' → logprob: -2.495967149734497
    3. 'if' (adapté à ' if') → logprob: -4.120967388153076
    4. ' ' → logprob: -4.620967388153076
    5. '                   ' → logprob: -6.495967388153076
    6. '<|end|>' → logprob: -6.745967388153076
    7. '           ' → logprob: -6.870967388153076
    8. '                ' → logprob: -7.745967388153076
    9. '```' → logprob: -7.870967388153076
    10. 'If' → logprob: -8.745966911315918

Token 316: ' probe' (ID: 31925)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -0.04335802048444748
    2. ' probe' → logprob: -3.168358087539673
    3. 'agg' → logprob: -9.293357849121094
    4. '   ' → logprob: -10.043357849121094
    5. 'prob' → logprob: -10.168357849121094
    6. ' ' → logprob: -10.168357849121094
    7. ' (' → logprob: -10.293357849121094
    8. '(pro' → logprob: -10.668357849121094
    9. '	pro' → logprob: -10.918357849121094
    10. '  ' → logprob: -11.043357849121094

Token 317: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5232542157173157
    2. ' <=' → logprob: -0.8982542157173157
    3. '<' → logprob: -9.89825439453125
    4. '<|end|>' → logprob: -10.64825439453125
    5. '<len' → logprob: -10.77325439453125
    6. ' <' → logprob: -11.77325439453125
    7. ' ' → logprob: -12.39825439453125
    8. '[' → logprob: -12.52325439453125
    9. ')<=' → logprob: -12.52325439453125
    10. '<|end|>' → logprob: -12.52325439453125

Token 318: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024756586644798517
    2. ' self' → logprob: -6.002475738525391
    3. '(self' → logprob: -17.62747573852539
    4. '	self' → logprob: -18.25247573852539
    5. 'len' → logprob: -18.37747573852539
    6. '=self' → logprob: -18.50247573852539
    7. '           ' → logprob: -18.62747573852539
    8. '   ' → logprob: -19.12747573852539
    9. '
' → logprob: -19.62747573852539
    10. '0' → logprob: -19.62747573852539

Token 319: '.L' (ID: 2024)
  Prédit: '.L'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.L' → logprob: -1.3306015716807451e-05
    2. 'L' → logprob: -11.25001335144043
    3. '.' → logprob: -15.50001335144043
    4. ' .' → logprob: -17.37501335144043
    5. '	L' → logprob: -18.25001335144043
    6. ' L' → logprob: -19.00001335144043
    7. '   ' → logprob: -19.12501335144043
    8. ' ' → logprob: -19.12501335144043
    9. '.I' → logprob: -19.50001335144043
    10. '[' → logprob: -19.50001335144043

Token 320: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0076079354621469975
    2. 'and' → logprob: -4.882607936859131
    3. '               ' → logprob: -13.882607460021973
    4. ' ' → logprob: -15.007607460021973
    5. '                ' → logprob: -16.00760841369629
    6. '           ' → logprob: -16.13260841369629
    7. '            ' → logprob: -16.25760841369629
    8. '	and' → logprob: -16.25760841369629
    9. '              ' → logprob: -16.88260841369629
    10. '                   ' → logprob: -17.25760841369629

Token 321: ' agg' (ID: 103407)
  Prédit: 'agg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agg' → logprob: -0.002851232886314392
    2. ' agg' → logprob: -6.0028510093688965
    3. 'self' → logprob: -8.377851486206055
    4. '               ' → logprob: -9.377851486206055
    5. '                   ' → logprob: -10.502851486206055
    6. '(' → logprob: -11.877851486206055
    7. '           ' → logprob: -12.002851486206055
    8. '   ' → logprob: -12.002851486206055
    9. ' self' → logprob: -12.502851486206055
    10. ' (' → logprob: -12.752851486206055

Token 322: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.576000988483429
    2. ' +' → logprob: -0.826000988483429
    3. '+self' → logprob: -10.701001167297363
    4. '<' → logprob: -11.201001167297363
    5. '+k' → logprob: -12.701001167297363
    6. ' <' → logprob: -12.701001167297363
    7. '+c' → logprob: -12.826001167297363
    8. ' ' → logprob: -13.201001167297363
    9. '+p' → logprob: -13.451001167297363
    10. '+j' → logprob: -13.576001167297363

Token 323: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002314303710591048
    2. ' self' → logprob: -8.375231742858887
    3. '(self' → logprob: -15.250231742858887
    4. '               ' → logprob: -15.625231742858887
    5. '           ' → logprob: -15.875231742858887
    6. '   ' → logprob: -16.25023078918457
    7. '
' → logprob: -16.50023078918457
    8. '[self' → logprob: -16.75023078918457
    9. '	self' → logprob: -17.00023078918457
    10. ' ' → logprob: -17.37523078918457

Token 324: '.container' (ID: 34153)
  Prédit: '.container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.container' → logprob: -0.5759525299072266
    2. 'container' → logprob: -0.8259525299072266
    3. '	container' → logprob: -12.075952529907227
    4. ' container' → logprob: -12.200952529907227
    5. ' .' → logprob: -13.950952529907227
    6. '(container' → logprob: -14.575952529907227
    7. '   ' → logprob: -15.575952529907227
    8. '容' → logprob: -15.950952529907227
    9. '```' → logprob: -16.075952529907227
    10. ' ' → logprob: -16.075952529907227

Token 325: '.get' (ID: 775)
  Prédit: '.get'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.20170655846595764
    2. '[' → logprob: -1.7017065286636353
    3. 'get' → logprob: -8.201706886291504
    4. '.' → logprob: -11.076706886291504
    5. 'probe' → logprob: -13.326706886291504
    6. '[get' → logprob: -14.201706886291504
    7. '```' → logprob: -15.076706886291504
    8. ' .' → logprob: -15.326706886291504
    9. '   ' → logprob: -15.326706886291504
    10. '.setdefault' → logprob: -15.576706886291504

Token 326: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.625000953674316
    3. '(prob' → logprob: -15.375000953674316
    4. ' (' → logprob: -16.625
    5. 'probe' → logprob: -16.75
    6. '(proxy' → logprob: -17.25
    7. '(proc' → logprob: -17.875
    8. '(
' → logprob: -18.25
    9. '```' → logprob: -18.625
    10. '	pro' → logprob: -19.75

Token 327: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.0021754815243184566
    2. 'obe' → logprob: -6.502175331115723
    3. 'robe' → logprob: -7.752175331115723
    4. '[' → logprob: -9.002175331115723
    5. 'probe' → logprob: -10.377175331115723
    6. 'e' → logprob: -11.627175331115723
    7. 'ro' → logprob: -11.752175331115723
    8. '```' → logprob: -11.752175331115723
    9. 'de' → logprob: -11.877175331115723
    10. '   ' → logprob: -12.127175331115723

Token 328: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.36364635825157166
    2. ' <=' → logprob: -2.3636462688446045
    3. ')<=' → logprob: -2.4886462688446045
    4. '<=' → logprob: -3.2386462688446045
    5. ']<=' → logprob: -3.2386462688446045
    6. ']' → logprob: -3.8636462688446045
    7. ',' → logprob: -3.9886462688446045
    8. '[' → logprob: -5.363646507263184
    9. ')<' → logprob: -6.238646507263184
    10. ' <' → logprob: -6.988646507263184

Token 329: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.432518421206623e-05
    2. ' ' → logprob: -9.8750638961792
    3. 'probe' → logprob: -12.0000638961792
    4. ')' → logprob: -12.5000638961792
    5. '
' → logprob: -13.5000638961792
    6. 'val' → logprob: -14.5000638961792
    7. '```' → logprob: -15.3750638961792
    8. '(pro' → logprob: -15.5000638961792
    9. 'pro' → logprob: -15.8750638961792
    10. '(' → logprob: -16.625064849853516

Token 330: ')' (ID: 8)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.806583821773529
    2. ' <' → logprob: -1.1815838813781738
    3. ')' → logprob: -2.431583881378174
    4. '<' → logprob: -2.556583881378174
    5. '<=' → logprob: -2.556583881378174
    6. ')<=' → logprob: -6.056583881378174
    7. ')<' → logprob: -7.931583881378174
    8. ']<=' → logprob: -8.056583404541016
    9. ']' → logprob: -8.431583404541016
    10. ' ' → logprob: -8.556583404541016

Token 331: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6933296918869019
    2. ' <' → logprob: -0.6933296918869019
    3. ' <=' → logprob: -9.318329811096191
    4. '<=' → logprob: -9.693329811096191
    5. '<p' → logprob: -12.693329811096191
    6. '<th' → logprob: -12.693329811096191
    7. '<len' → logprob: -12.693329811096191
    8. '<int' → logprob: -12.943329811096191
    9. '<num' → logprob: -12.943329811096191
    10. '<n' → logprob: -13.068329811096191

Token 332: ' val' (ID: 1459)
  Prédit: 'val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'val' → logprob: -0.01815006136894226
    2. ' val' → logprob: -4.0181498527526855
    3. '	val' → logprob: -16.393150329589844
    4. '(val' → logprob: -18.768150329589844
    5. '[val' → logprob: -19.018150329589844
    6. '           ' → logprob: -19.268150329589844
    7. 'value' → logprob: -19.268150329589844
    8. '_val' → logprob: -20.393150329589844
    9. '   ' → logprob: -20.768150329589844
    10. '
' → logprob: -21.268150329589844

Token 333: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.12714092433452606
    2. ':' → logprob: -2.127140998840332
    3. ' :
' → logprob: -9.127140998840332
    4. '               ' → logprob: -9.627140998840332
    5. '):
' → logprob: -11.002140998840332
    6. '                   ' → logprob: -11.752140998840332
    7. ' :' → logprob: -12.252140998840332
    8. ':

' → logprob: -12.502140998840332
    9. '           ' → logprob: -13.502140998840332
    10. ':
' → logprob: -13.752140998840332

Token 334: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017609752248972654
    2. '               ' → logprob: -6.376760959625244
    3. ' spot' → logprob: -11.251761436462402
    4. 'agg' → logprob: -11.251761436462402
    5. '                       ' → logprob: -12.126761436462402
    6. 'spot' → logprob: -12.126761436462402
    7. '   ' → logprob: -12.376761436462402
    8. ':
' → logprob: -12.501761436462402
    9. '
' → logprob: -12.751761436462402
    10. '                  ' → logprob: -13.126761436462402

Token 335: ' agg' (ID: 103407)
  Prédit: 'agg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'agg' (adapté à ' agg') → logprob: -1.0159876346588135
    2. 'spot' → logprob: -1.0159876346588135
    3. ' spot' → logprob: -1.3909876346588135
    4. ' agg' → logprob: -4.015987396240234
    5. '               ' → logprob: -5.265987396240234
    6. '                   ' → logprob: -6.015987396240234
    7. '   ' → logprob: -7.265987396240234
    8. '       ' → logprob: -8.765987396240234
    9. '           ' → logprob: -8.890987396240234
    10. 'aggregate' → logprob: -9.015987396240234

Token 336: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029835186898708344
    2. '+=' → logprob: -3.5298352241516113
    3. '                   ' → logprob: -9.904834747314453
    4. '                    ' → logprob: -12.029834747314453
    5. '            ' → logprob: -12.279834747314453
    6. '           ' → logprob: -12.279834747314453
    7. '    ' → logprob: -12.404834747314453
    8. '               ' → logprob: -12.404834747314453
    9. '   ' → logprob: -12.779834747314453
    10. '                ' → logprob: -13.029834747314453

Token 337: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007102862582542002
    2. ' self' → logprob: -7.250710487365723
    3. '                   ' → logprob: -15.000710487365723
    4. '(self' → logprob: -17.500709533691406
    5. '	self' → logprob: -18.250709533691406
    6. '                       ' → logprob: -18.625709533691406
    7. '[self' → logprob: -18.750709533691406
    8. ' ' → logprob: -20.125709533691406
    9. '   ' → logprob: -20.250709533691406
    10. '+self' → logprob: -20.375709533691406

Token 338: '.container' (ID: 34153)
  Prédit: '.container'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.container' → logprob: -0.008615399710834026
    2. 'container' → logprob: -4.758615493774414
    3. '	container' → logprob: -14.758615493774414
    4. ' container' → logprob: -15.883615493774414
    5. 'self' → logprob: -16.133615493774414
    6. 'Container' → logprob: -17.133615493774414
    7. ' .' → logprob: -17.133615493774414
    8. '.cont' → logprob: -18.008615493774414
    9. '.controller' → logprob: -18.008615493774414
    10. '
' → logprob: -18.133615493774414

Token 339: '.get' (ID: 775)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47495487332344055
    2. '.get' → logprob: -0.9749548435211182
    3. 'get' → logprob: -7.099955081939697
    4. '[get' → logprob: -9.974954605102539
    5. 'probe' → logprob: -12.849954605102539
    6. '.setdefault' → logprob: -13.724954605102539
    7. '.pro' → logprob: -14.724954605102539
    8. '|get' → logprob: -15.349954605102539
    9. '```' → logprob: -15.474954605102539
    10. '(pro' → logprob: -15.599954605102539

Token 340: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -1.9361264946837764e-07
    2. '(prob' → logprob: -16.875
    3. 'probe' → logprob: -17.125
    4. '(' → logprob: -17.125
    5. ' (' → logprob: -17.625
    6. '(proxy' → logprob: -18.625
    7. '	pro' → logprob: -19.125
    8. '```' → logprob: -19.25
    9. '(proc' → logprob: -19.75
    10. '(
' → logprob: -20.25

Token 341: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.031113391742110252
    2. 'robe' → logprob: -4.156113624572754
    3. 'probe' → logprob: -4.781113624572754
    4. 'obe' → logprob: -5.156113624572754
    5. 'ob' → logprob: -8.781113624572754
    6. '[' → logprob: -9.156113624572754
    7. 'e' → logprob: -9.281113624572754
    8. 'ro' → logprob: -9.906113624572754
    9. 'ote' → logprob: -10.031113624572754
    10. '```' → logprob: -10.156113624572754

Token 342: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028713271021842957
    2. '(pro' → logprob: -5.877871513366699
    3. ' ,' → logprob: -10.2528715133667
    4. '[' → logprob: -11.0028715133667
    5. 'probe' → logprob: -12.1278715133667
    6. ',
' → logprob: -13.1278715133667
    7. '           ' → logprob: -13.5028715133667
    8. '       ' → logprob: -13.7528715133667
    9. '(' → logprob: -13.8778715133667
    10. '.pro' → logprob: -14.5028715133667

Token 343: '0' (ID: 15)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -6.0033853515051305e-05
    2. ' probe' → logprob: -10.500060081481934
    3. '0' → logprob: -10.625060081481934
    4. 'prob' → logprob: -12.500060081481934
    5. 'pro' → logprob: -13.375060081481934
    6. 'spot' → logprob: -13.500060081481934
    7. 'proxy' → logprob: -14.125060081481934
    8. 'power' → logprob: -15.875060081481934
    9. 'proof' → logprob: -16.250059127807617
    10. '	pro' → logprob: -16.500059127807617

Token 344: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5563609600067139
    2. ')' → logprob: -1.5563609600067139
    3. '                   ' → logprob: -1.6813609600067139
    4. '<|end|>' → logprob: -4.056361198425293
    5. '
' → logprob: -4.806361198425293
    6. ',' → logprob: -6.556361198425293
    7. '               ' → logprob: -6.556361198425293
    8. '           ' → logprob: -7.806361198425293
    9. '       ' → logprob: -8.431361198425293
    10. '),' → logprob: -8.556361198425293

Token 345: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0002581209992058575
    2. '               ' → logprob: -8.875258445739746
    3. ' spot' → logprob: -10.000258445739746
    4. '           ' → logprob: -10.125258445739746
    5. '```' → logprob: -11.625258445739746
    6. '                  ' → logprob: -11.875258445739746
    7. 'spot' → logprob: -12.250258445739746
    8. '   ' → logprob: -12.375258445739746
    9. '       ' → logprob: -13.125258445739746
    10. '
' → logprob: -13.750258445739746

Token 346: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' (adapté à ' spot') → logprob: -0.20144745707511902
    2. ' spot' → logprob: -1.7014474868774414
    3. '                   ' → logprob: -10.326447486877441
    4. '               ' → logprob: -14.076447486877441
    5. '   ' → logprob: -16.326446533203125
    6. ' ' → logprob: -16.451446533203125
    7. '           ' → logprob: -16.451446533203125
    8. 'Spot' → logprob: -17.076446533203125
    9. ' spotlight' → logprob: -17.201446533203125
    10. '                  ' → logprob: -17.326446533203125

Token 347: ' |=' (ID: 19917)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741601049900055
    2. '=' → logprob: -0.9741600751876831
    3. ' +=' → logprob: -9.599160194396973
    4. '+=' → logprob: -11.099160194396973
    5. ' |=' → logprob: -16.474159240722656
    6. '.=' → logprob: -17.224159240722656
    7. '＝' → logprob: -17.349159240722656
    8. '+' → logprob: -18.224159240722656
    9. '<|end|>' → logprob: -18.224159240722656
    10. ' ' → logprob: -18.724159240722656

Token 348: ' (' (ID: 350)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -0.008731810376048088
    2. ' probe' → logprob: -4.758731842041016
    3. '1' → logprob: -10.258731842041016
    4. '(' → logprob: -10.383731842041016
    5. ' (' → logprob: -10.508731842041016
    6. '(pro' → logprob: -11.508731842041016
    7. 'prob' → logprob: -11.633731842041016
    8. ' ' → logprob: -13.133731842041016
    9. '
' → logprob: -14.133731842041016
    10. 'proxy' → logprob: -14.258731842041016

Token 349: '1' (ID: 16)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -0.003089059144258499
    2. '1' → logprob: -5.87808895111084
    3. '(' → logprob: -8.50308895111084
    4. ' probe' → logprob: -9.62808895111084
    5. 'prob' → logprob: -11.87808895111084
    6. ' ' → logprob: -12.62808895111084
    7. 'proxy' → logprob: -13.75308895111084
    8. ' (' → logprob: -13.75308895111084
    9. 'proof' → logprob: -14.50308895111084
    10. '(pro' → logprob: -15.00308895111084

Token 350: '<<' (ID: 5354)
  Prédit: '<<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.006715728435665369
    2. ' <<' → logprob: -5.006715774536133
    3. '<<(' → logprob: -15.756715774536133
    4. ')<<' → logprob: -17.006715774536133
    5. '<' → logprob: -17.131715774536133
    6. '<<<' → logprob: -17.756715774536133
    7. '<<"' → logprob: -18.006715774536133
    8. ')' → logprob: -18.256715774536133
    9. ' ' → logprob: -19.006715774536133
    10. '()<<' → logprob: -19.256715774536133

Token 351: 'power' (ID: 22295)
  Prédit: 'power'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'power' → logprob: -4.320199877838604e-07
    2. ' power' → logprob: -14.875
    3. 'pow' → logprob: -16.75
    4. '(power' → logprob: -18.375
    5. 'powered' → logprob: -20.875
    6. '_power' → logprob: -21.0
    7. 'Power' → logprob: -21.125
    8. 'powers' → logprob: -22.125
    9. '.power' → logprob: -22.25
    10. 'POWER' → logprob: -22.5

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003088871017098427
    2. ')
' → logprob: -8.125308990478516
    3. '<|end|>' → logprob: -11.875308990478516
    4. ')return' → logprob: -13.000308990478516
    5. ' )' → logprob: -13.750308990478516
    6. '               ' → logprob: -14.000308990478516
    7. ')#' → logprob: -15.125308990478516
    8. ')}' → logprob: -15.375308990478516
    9. '<|end|>' → logprob: -15.500308990478516
    10. ')
' → logprob: -15.625308990478516

Token 353: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10611537098884583
    2. '
' → logprob: -2.8561153411865234
    3. '```' → logprob: -4.356115341186523
    4. '<|end|>' → logprob: -4.481115341186523
    5. '       ' → logprob: -4.856115341186523
    6. ' return' → logprob: -5.356115341186523
    7. '               ' → logprob: -5.731115341186523
    8. ' 
' → logprob: -7.731115341186523
    9. ')' → logprob: -7.856115341186523
    10. '            
' → logprob: -8.106115341186523

Token 354: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.271625816822052
    2. ' return' → logprob: -1.7716257572174072
    3. '+' → logprob: -3.2716257572174072
    4. '
' → logprob: -4.021625995635986
    5. '       ' → logprob: -5.021625995635986
    6. 'return' (adapté à ' return') → logprob: -5.646625995635986
    7. ' spot' → logprob: -6.771625995635986
    8. '   ' → logprob: -8.771625518798828
    9. '               ' → logprob: -9.146625518798828
    10. ' 
' → logprob: -9.396625518798828

Token 355: ' spot' (ID: 10021)
  Prédit: 'spot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'spot' → logprob: -0.03804149478673935
    2. ' spot' → logprob: -3.288041591644287
    3. 'spo' → logprob: -17.538042068481445
    4. 'spots' → logprob: -18.288042068481445
    5. 'sp' → logprob: -19.163042068481445
    6. 'slot' → logprob: -19.788042068481445
    7. 'off' → logprob: -19.913042068481445
    8. ' ' → logprob: -19.913042068481445
    9. 'shot' → logprob: -19.913042068481445
    10. 'Spot' → logprob: -20.413042068481445

Token 356: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: ' agg' (ID: 103407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 358: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 359: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2647106945514679
    2. 'max' → logprob: -3.5147106647491455
    3. 'idx' → logprob: -4.014710903167725
    4. 'fen' → logprob: -4.014710903167725
    5. 'count' → logprob: -4.139710903167725
    6. 'answer' → logprob: -4.264710903167725
    7. 'tree' → logprob: -4.514710903167725
    8. 'cnt' → logprob: -4.639710903167725
    9. 'ft' → logprob: -5.014710903167725
    10. 'counter' → logprob: -5.014710903167725

Token 361: ' b' (ID: 287)
  Prédit: ' solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' solve' → logprob: -0.2922207713127136
    2. 'solve' → logprob: -1.9172208309173584
    3. ' count' → logprob: -3.9172208309173584
    4. ' process' → logprob: -4.292220592498779
    5. ' fen' → logprob: -4.667220592498779
    6. ' binary' → logprob: -5.042220592498779
    7. 'count' → logprob: -5.792220592498779
    8. ' prefix' → logprob: -5.792220592498779
    9. 'process' → logprob: -5.917220592498779
    10. ' max' → logprob: -5.917220592498779

Token 362: 'search' (ID: 2624)
  Prédit: 'inary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inary' → logprob: -0.2272663414478302
    2. 'in' → logprob: -1.7272663116455078
    3. 'is' → logprob: -3.727266311645508
    4. 'i' → logprob: -7.477266311645508
    5. 'search' → logprob: -7.727266311645508
    6. 'y' → logprob: -8.727266311645508
    7. 'inar' → logprob: -9.477266311645508
    8. 'ina' → logprob: -10.477266311645508
    9. 'inom' → logprob: -10.852266311645508
    10. 'uild' → logprob: -10.977266311645508

Token 363: '(ok' (ID: 128325)
  Prédit: '(arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(arr' → logprob: -0.28837281465530396
    2. '(low' → logprob: -2.413372755050659
    3. '(' → logprob: -3.413372755050659
    4. '(lo' → logprob: -3.663372755050659
    5. '(array' → logprob: -3.913372755050659
    6. '(l' → logprob: -3.913372755050659
    7. '(left' → logprob: -4.163372993469238
    8. '(start' → logprob: -4.413372993469238
    9. '(target' → logprob: -4.913372993469238
    10. '(a' → logprob: -5.038372993469238

Token 364: 'ay' (ID: 356)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036953974631614983
    2. ' ,' → logprob: -9.00036907196045
    3. ',val' → logprob: -9.12536907196045
    4. ',l' → logprob: -10.37536907196045
    5. ',x' → logprob: -10.50036907196045
    6. ',pos' → logprob: -10.87536907196045
    7. ',value' → logprob: -11.00036907196045
    8. ':' → logprob: -11.62536907196045
    9. ',v' → logprob: -12.25036907196045
    10. ',b' → logprob: -12.37536907196045

Token 365: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006143859936855733
    2. ' ,' → logprob: -7.875614166259766
    3. ',l' → logprob: -9.125614166259766
    4. ',b' → logprob: -10.500614166259766
    5. ',val' → logprob: -10.500614166259766
    6. ',x' → logprob: -11.625614166259766
    7. ',left' → logprob: -11.875614166259766
    8. ',value' → logprob: -12.000614166259766
    9. ',start' → logprob: -12.000614166259766
    10. ',n' → logprob: -12.000614166259766

Token 366: ' not' (ID: 625)
  Prédit: 'ng'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ng' → logprob: -0.049909304827451706
    2. 'not' → logprob: -4.0499091148376465
    3. ' ng' → logprob: -4.5499091148376465
    4. 'bad' → logprob: -5.2999091148376465
    5. 'nok' → logprob: -5.5499091148376465
    6. 'no' → logprob: -5.7999091148376465
    7. 'fail' → logprob: -6.1749091148376465
    8. 'n' → logprob: -6.6749091148376465
    9. '   ' → logprob: -6.6749091148376465
    10. ' not' → logprob: -7.6749091148376465

Token 367: 'ok' (ID: 525)
  Prédit: '_ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_ok' → logprob: -0.4675041437149048
    2. 'okay' → logprob: -1.0925041437149048
    3. 'ok' → logprob: -3.3425040245056152
    4. 'Okay' → logprob: -6.217504024505615
    5. '_' → logprob: -7.717504024505615
    6. ')' → logprob: -9.592504501342773
    7. ' okay' → logprob: -10.592504501342773
    8. '_)' → logprob: -10.592504501342773
    9. '_OK' → logprob: -10.592504501342773
    10. 'Ok' → logprob: -10.842504501342773

Token 368: '):
' (ID: 1883)
  Prédit: 'ay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -0.0020925651770085096
    2. '):' → logprob: -6.377092361450195
    3. '):
' → logprob: -8.002092361450195
    4. 'y' → logprob: -10.752092361450195
    5. ',' → logprob: -11.002092361450195
    6. '):

' → logprob: -12.127092361450195
    7. '=' → logprob: -12.502092361450195
    8. ')' → logprob: -12.502092361450195
    9. 'ey' → logprob: -13.002092361450195
    10. '_' → logprob: -14.502092361450195

Token 369: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.030105438083410263
    2. ':' → logprob: -4.2801055908203125
    3. '       ' → logprob: -4.6551055908203125
    4. '   ' → logprob: -5.9051055908203125
    5. ' (' → logprob: -6.4051055908203125
    6. '):' → logprob: -6.7801055908203125
    7. '(' → logprob: -8.405105590820312
    8. ' ,' → logprob: -8.905105590820312
    9. ')' → logprob: -9.030105590820312
    10. '):
' → logprob: -9.780105590820312

Token 370: ' mid' (ID: 6959)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20396284759044647
    2. ' while' → logprob: -1.953962802886963
    3. '   ' → logprob: -3.578962802886963
    4. 'while' → logprob: -4.828962802886963
    5. ' mid' → logprob: -5.078962802886963
    6. '	while' → logprob: -8.078963279724121
    7. 'mid' (adapté à ' mid') → logprob: -8.203963279724121
    8. 'm' → logprob: -11.453963279724121
    9. '    ' → logprob: -11.453963279724121
    10. '```' → logprob: -11.453963279724121

Token 371: 'l' (ID: 75)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20143868029117584
    2. '=' → logprob: -1.7014386653900146
    3. '=(' → logprob: -10.826438903808594
    4. ' ' → logprob: -12.701438903808594
    5. ' =(' → logprob: -14.076438903808594
    6. '=int' → logprob: -14.451438903808594
    7. '  ' → logprob: -14.701438903808594
    8. '   ' → logprob: -14.951438903808594
    9. ')' → logprob: -15.951438903808594
    10. '```' → logprob: -16.326438903808594

Token 372: 'amb' (ID: 1855)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04466462507843971
    2. '=' → logprob: -3.1696646213531494
    3. 'd' → logprob: -7.4196648597717285
    4. '=(' → logprob: -7.4196648597717285
    5. '=int' → logprob: -9.04466438293457
    6. 'f' → logprob: -9.29466438293457
    7. ',' → logprob: -9.29466438293457
    8. ' =(' → logprob: -9.91966438293457
    9. '   ' → logprob: -10.66966438293457
    10. '=((' → logprob: -10.79466438293457

Token 373: ' =' (ID: 314)
  Prédit: 'da'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'da' → logprob: -0.00013691288768313825
    2. 'd' → logprob: -9.000137329101562
    3. 'a' → logprob: -11.375137329101562
    4. '=' → logprob: -13.875137329101562
    5. ' da' → logprob: -15.375137329101562
    6. 'да' → logprob: -15.500137329101562
    7. 'nda' → logprob: -15.750137329101562
    8. '=lambda' → logprob: -16.000137329101562
    9. ' =' → logprob: -16.500137329101562
    10. 'dda' → logprob: -16.625137329101562

Token 374: ' lambda' (ID: 27871)
  Prédit: ' lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -0.2330038994550705
    2. 'lambda' → logprob: -1.733003854751587
    3. '(lambda' → logprob: -3.483003854751587
    4. ' (' → logprob: -8.233003616333008
    5. '   ' → logprob: -9.858003616333008
    6. '(' → logprob: -9.983003616333008
    7. ' ' → logprob: -11.733003616333008
    8. '=lambda' → logprob: -12.608003616333008
    9. '  ' → logprob: -13.983003616333008
    10. ' lamb' → logprob: -13.983003616333008

Token 375: ' low' (ID: 4465)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -1.4574333429336548
    2. ' mid' → logprob: -1.5824333429336548
    3. ' ok' → logprob: -1.7074333429336548
    4. ' x' → logprob: -2.0824332237243652
    5. 'mid' → logprob: -2.7074332237243652
    6. 'ok' → logprob: -2.9574332237243652
    7. ':' → logprob: -3.4574332237243652
    8. ' idx' → logprob: -3.8324332237243652
    9. 'x' → logprob: -3.9574332237243652
    10. 'l' → logprob: -4.332433223724365

Token 376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007462600478902459
    2. ' ,' → logprob: -7.625746250152588
    3. ',m' → logprob: -10.000746726989746
    4. ',n' → logprob: -10.125746726989746
    5. ',x' → logprob: -10.125746726989746
    6. ',y' → logprob: -10.500746726989746
    7. ',l' → logprob: -11.125746726989746
    8. ',right' → logprob: -11.125746726989746
    9. 'd' → logprob: -11.375746726989746
    10. ':' → logprob: -11.625746726989746

Token 377: ' high' (ID: 1932)
  Prédit: 'high'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.011679442599415779
    2. ' high' → logprob: -4.511679649353027
    3. 'hi' → logprob: -7.636679649353027
    4. 'up' → logprob: -9.636679649353027
    5. 'upp' → logprob: -9.636679649353027
    6. 'h' → logprob: -12.011679649353027
    7. ' hi' → logprob: -12.511679649353027
    8. 'okay' → logprob: -13.386679649353027
    9. 'High' → logprob: -13.761679649353027
    10. 'ok' → logprob: -14.011679649353027

Token 378: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00805431604385376
    2. ' :' → logprob: -5.508054256439209
    3. ',' → logprob: -5.633054256439209
    4. ':(' → logprob: -7.883054256439209
    5. '=' → logprob: -12.508054733276367
    6. ' :(' → logprob: -13.758054733276367
    7. ':[' → logprob: -14.133054733276367
    8. '   ' → logprob: -14.133054733276367
    9. '=(' → logprob: -14.258054733276367
    10. 'mid' → logprob: -14.383054733276367

Token 379: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.315836101770401
    2. '(low' → logprob: -1.3158360719680786
    3. '   ' → logprob: -6.940835952758789
    4. ' low' → logprob: -7.065835952758789
    5. ' ' → logprob: -8.565835952758789
    6. 'low' → logprob: -8.940835952758789
    7. '(lambda' → logprob: -9.065835952758789
    8. ' lambda' → logprob: -9.565835952758789
    9. '(' → logprob: -9.815835952758789
    10. '((' → logprob: -10.315835952758789

Token 380: 'low' (ID: 14739)
  Prédit: 'low'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'low' → logprob: -0.0028721538837999105
    2. ' low' → logprob: -5.877871990203857
    3. '(low' → logprob: -9.752872467041016
    4. 'high' → logprob: -11.877872467041016
    5. 'ok' → logprob: -14.252872467041016
    6. '.low' → logprob: -15.002872467041016
    7. '   ' → logprob: -15.252872467041016
    8. '_low' → logprob: -15.502872467041016
    9. ' ' → logprob: -15.752872467041016
    10. ')' → logprob: -16.002872467041016

Token 381: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023245712742209435
    2. ' +' → logprob: -3.7732458114624023
    3. '+
' → logprob: -15.648245811462402
    4. ' ' → logprob: -17.023244857788086
    5. '＋' → logprob: -17.523244857788086
    6. ' +
' → logprob: -17.648244857788086
    7. '[' → logprob: -18.273244857788086
    8. '>>>' → logprob: -18.398244857788086
    9. ')' → logprob: -18.648244857788086
    10. '>>' → logprob: -18.773244857788086

Token 382: 'high' (ID: 21116)
  Prédit: 'high'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'high' → logprob: -0.011057018302381039
    2. ' high' → logprob: -4.511056900024414
    3. '(high' → logprob: -11.636056900024414
    4. ' ' → logprob: -16.261056900024414
    5. '.high' → logprob: -16.761056900024414
    6. '高' → logprob: -17.136056900024414
    7. '(' → logprob: -18.011056900024414
    8. ' (' → logprob: -18.136056900024414
    9. '/high' → logprob: -18.136056900024414
    10. '-high' → logprob: -18.261056900024414

Token 383: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.9391241073608398
    2. ')' → logprob: -1.1891241073608398
    3. ')>>' → logprob: -1.1891241073608398
    4. ' )' → logprob: -9.93912410736084
    5. ')<<' → logprob: -12.93912410736084
    6. ')#' → logprob: -13.93912410736084
    7. '>>' → logprob: -13.93912410736084
    8. '+' → logprob: -14.81412410736084
    9. ')
' → logprob: -14.93912410736084
    10. ' ' → logprob: -15.06412410736084

Token 384: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -17.50002098083496
    4. '۲' → logprob: -17.87502098083496
    5. '２' → logprob: -18.37502098083496
    6. '٢' → logprob: -19.25002098083496
    7. '२' → logprob: -20.00002098083496
    8. '  ' → logprob: -20.06252098083496
    9. '=' → logprob: -20.56252098083496
    10. '২' → logprob: -20.56252098083496

Token 385: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 386: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07825469970703125
    2. '
' → logprob: -3.0782546997070312
    3. '<|end|>' → logprob: -3.8282546997070312
    4. '<|end|>' → logprob: -5.578254699707031
    5. 'def' → logprob: -6.453254699707031
    6. '    
' → logprob: -6.828254699707031
    7. ')' → logprob: -8.078254699707031
    8. ' def' → logprob: -8.703254699707031
    9. ' 
' → logprob: -9.203254699707031
    10. ',
' → logprob: -9.328254699707031

Token 387: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.2989235520362854
    2. '   ' → logprob: -2.1739234924316406
    3. ' low' → logprob: -2.5489234924316406
    4. 'while' (adapté à ' while') → logprob: -3.5489234924316406
    5. ' mid' → logprob: -3.7989234924316406
    6. ' lo' → logprob: -5.673923492431641
    7. ' l' → logprob: -5.798923492431641
    8. ' def' → logprob: -6.173923492431641
    9. 'mid' → logprob: -6.173923492431641
    10. 'low' → logprob: -6.298923492431641

Token 388: ' (' (ID: 350)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.39071720838546753
    2. 'abs' → logprob: -1.5157172679901123
    3. ' not' → logprob: -2.7657172679901123
    4. ' abs' → logprob: -3.6407172679901123
    5. 'ok' → logprob: -4.890717029571533
    6. 'okay' → logprob: -5.640717029571533
    7. ' okay' → logprob: -6.390717029571533
    8. '(ok' → logprob: -7.265717029571533
    9. '(not' → logprob: -7.765717029571533
    10. '(abs' → logprob: -8.015717506408691

Token 389: 'okay' (ID: 153444)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.03146450221538544
    2. 'abs' → logprob: -3.6564645767211914
    3. 'ok' → logprob: -5.906464576721191
    4. ' not' → logprob: -6.406464576721191
    5. 'okay' → logprob: -7.531464576721191
    6. ' abs' → logprob: -9.656464576721191
    7. '(not' → logprob: -9.906464576721191
    8. '(abs' → logprob: -10.031464576721191
    9. '	not' → logprob: -10.656464576721191
    10. '   ' → logprob: -10.906464576721191

Token 390: '-not' (ID: 36155)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23687458038330078
    2. ' -' → logprob: -2.361874580383301
    3. ' +' → logprob: -2.861874580383301
    4. '<' → logprob: -3.736874580383301
    5. '-' → logprob: -4.111874580383301
    6. ' <' → logprob: -4.861874580383301
    7. '!=' → logprob: -5.236874580383301
    8. ' !=' → logprob: -5.986874580383301
    9. ')' → logprob: -6.486874580383301
    10. ',' → logprob: -7.111874580383301

Token 391: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.00043805985478684306
    2. 'okay' → logprob: -8.37543773651123
    3. 'not' → logprob: -10.12543773651123
    4. '>' → logprob: -10.75043773651123
    5. '```' → logprob: -10.87543773651123
    6. ''ok' → logprob: -10.87543773651123
    7. '   ' → logprob: -11.00043773651123
    8. '0' → logprob: -11.12543773651123
    9. '_ok' → logprob: -11.25043773651123
    10. '	ok' → logprob: -11.25043773651123

Token 392: ')' (ID: 8)
  Prédit: ')>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')>' → logprob: -0.531061589717865
    2. ')' → logprob: -1.0310616493225098
    3. '>' → logprob: -2.9060616493225098
    4. ' >' → logprob: -7.40606164932251
    5. ' )' → logprob: -10.031061172485352
    6. ')!=' → logprob: -10.031061172485352
    7. ')>=' → logprob: -13.656061172485352
    8. ' ' → logprob: -14.031061172485352
    9. ')>>' → logprob: -14.281061172485352
    10. '!=' → logprob: -14.406061172485352

Token 393: ' *' (ID: 425)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4741152822971344
    2. ' >' → logprob: -0.974115252494812
    3. ' !=' → logprob: -10.849115371704102
    4. '!=' → logprob: -11.224115371704102
    5. ' ' → logprob: -13.474115371704102
    6. '.abs' → logprob: -14.224115371704102
    7. 'abs' → logprob: -14.599115371704102
    8. '1' → logprob: -14.724115371704102
    9. ')>' → logprob: -14.724115371704102
    10. '()>' → logprob: -14.849115371704102

Token 394: ' (' (ID: 350)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10155399143695831
    2. ' >' → logprob: -2.7265539169311523
    3. '0' → logprob: -4.351553916931152
    4. '1' → logprob: -4.976553916931152
    5. 'sign' → logprob: -5.476553916931152
    6. '(' → logprob: -6.351553916931152
    7. ' ' → logprob: -6.476553916931152
    8. 'ok' → logprob: -7.226553916931152
    9. '<' → logprob: -7.351553916931152
    10. '-' → logprob: -7.476553916931152

Token 395: 'okay' (ID: 153444)
  Prédit: 'okay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'okay' → logprob: -0.2319730967283249
    2. '1' → logprob: -2.356973171234131
    3. '(ok' → logprob: -2.856973171234131
    4. 'ok' → logprob: -3.481973171234131
    5. '-' → logprob: -4.231973171234131
    6. ' okay' → logprob: -5.981973171234131
    7. 'Okay' → logprob: -6.481973171234131
    8. '-ok' → logprob: -6.606973171234131
    9. '(' → logprob: -6.731973171234131
    10. 'not' → logprob: -7.231973171234131

Token 396: '-not' (ID: 36155)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.260570764541626
    2. '-not' → logprob: -1.635570764541626
    3. '-' → logprob: -4.135570526123047
    4. ' not' → logprob: -4.260570526123047
    5. 'not' → logprob: -5.635570526123047
    6. '-ok' → logprob: -7.385570526123047
    7. '_not' → logprob: -10.385570526123047
    8. '-notch' → logprob: -10.510570526123047
    9. ':not' → logprob: -10.635570526123047
    10. ' ' → logprob: -10.635570526123047

Token 397: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.010160936042666435
    2. 'not' → logprob: -4.63516092300415
    3. '1' → logprob: -8.760161399841309
    4. '```' → logprob: -9.635161399841309
    5. 'okay' → logprob: -10.010161399841309
    6. ' not' → logprob: -10.510161399841309
    7. 'ок' → logprob: -10.885161399841309
    8. '0' → logprob: -11.135161399841309
    9. '>' → logprob: -11.760161399841309
    10. '	ok' → logprob: -11.760161399841309

Token 398: ')' (ID: 8)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.406338632106781
    2. '>' → logprob: -1.2813386917114258
    3. ')>' → logprob: -3.406338691711426
    4. ')' → logprob: -3.781338691711426
    5. ' <' → logprob: -9.531338691711426
    6. ')>=' → logprob: -10.156338691711426
    7. ' >=' → logprob: -10.656338691711426
    8. '<' → logprob: -10.656338691711426
    9. '.py' → logprob: -10.906338691711426
    10. ' )' → logprob: -10.906338691711426

Token 399: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5232162475585938
    2. ' >' → logprob: -0.8982162475585938
    3. '[' → logprob: -11.023216247558594
    4. ' ' → logprob: -11.148216247558594
    5. '<|end|>' → logprob: -11.648216247558594
    6. '>=' → logprob: -11.773216247558594
    7. '()>' → logprob: -12.023216247558594
    8. '   ' → logprob: -12.023216247558594
    9. ' >=' → logprob: -12.273216247558594
    10. '1' → logprob: -12.273216247558594

Token 400: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07390955835580826
    2. '0' → logprob: -2.6989095211029053
    3. '4' → logprob: -5.823909759521484
    4. '2' → logprob: -7.948909759521484
    5. ' ' → logprob: -8.573909759521484
    6. '9' → logprob: -8.823909759521484
    7. '3' → logprob: -9.323909759521484
    8. '10' → logprob: -9.823909759521484
    9. '16' → logprob: -10.073909759521484
    10. '100' → logprob: -10.823909759521484

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0369919054210186
    2. '0' → logprob: -3.411991834640503
    3. ' ' → logprob: -5.786992073059082
    4. '4' → logprob: -8.911992073059082
    5. '2' → logprob: -9.786992073059082
    6. '9' → logprob: -11.099492073059082
    7. '(' → logprob: -11.474492073059082
    8. '3' → logprob: -11.599492073059082
    9. '16' → logprob: -12.161992073059082
    10. ' (' → logprob: -12.286992073059082

Token 402: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5795342922210693
    2. ':
' → logprob: -0.8295342922210693
    3. '       ' → logprob: -6.454534530639648
    4. ' and' → logprob: -6.454534530639648
    5. ' :
' → logprob: -8.954534530639648
    6. ':
' → logprob: -9.454534530639648
    7. ' :' → logprob: -9.579534530639648
    8. '):
' → logprob: -10.204534530639648
    9. '   ' → logprob: -10.204534530639648
    10. ':

' → logprob: -10.329534530639648

Token 403: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19861216843128204
    2. '           ' → logprob: -2.1986122131347656
    3. ' mid' → logprob: -3.1986122131347656
    4. '   ' → logprob: -4.323612213134766
    5. ',' → logprob: -5.198612213134766
    6. '    ' → logprob: -6.073612213134766
    7. ' ' → logprob: -6.323612213134766
    8. '        ' → logprob: -6.823612213134766
    9. ' midpoint' → logprob: -7.073612213134766
    10. '	   ' → logprob: -7.323612213134766

Token 404: ' probe' (ID: 31925)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.28971442580223083
    2. ' mid' → logprob: -1.6647144556045532
    3. 'm' → logprob: -3.0397143363952637
    4. '           ' → logprob: -5.039714336395264
    5. ' m' → logprob: -5.914714336395264
    6. '       ' → logprob: -6.039714336395264
    7. '   ' → logprob: -7.289714336395264
    8. 'midd' → logprob: -7.789714336395264
    9. ' midpoint' → logprob: -7.914714336395264
    10. 'middle' → logprob: -8.164714813232422

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0889425128698349
    2. '=' → logprob: -2.463942527770996
    3. ' ' → logprob: -13.338942527770996
    4. ',' → logprob: -14.338942527770996
    5. ' =(' → logprob: -15.588942527770996
    6. '=int' → logprob: -16.08894157409668
    7. '=(' → logprob: -16.21394157409668
    8. 's' → logprob: -16.96394157409668
    9. '＝' → logprob: -17.08894157409668
    10. 'mid' → logprob: -17.40144157409668

Token 406: ' mid' (ID: 6959)
  Prédit: 'mid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -0.02638007327914238
    2. ' mid' → logprob: -3.6513800621032715
    3. '(mid' → logprob: -10.27638053894043
    4. '   ' → logprob: -10.65138053894043
    5. ' ' → logprob: -12.02638053894043
    6. '  ' → logprob: -12.27638053894043
    7. ' (' → logprob: -13.65138053894043
    8. 'lambda' → logprob: -13.90138053894043
    9. 'midd' → logprob: -13.90138053894043
    10. '(' → logprob: -14.02638053894043

Token 407: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.00041577612864784896
    2. '(ok' → logprob: -8.125415802001953
    3. 'ok' → logprob: -9.625415802001953
    4. 'lambda' → logprob: -10.500415802001953
    5. '(lambda' → logprob: -11.500415802001953
    6. '(' → logprob: -12.375415802001953
    7. '           ' → logprob: -12.875415802001953
    8. '(l' → logprob: -13.250415802001953
    9. '((' → logprob: -13.625415802001953
    10. '          ' → logprob: -14.000415802001953

Token 408: 'amb' (ID: 1855)
  Prédit: 'amb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amb' → logprob: -0.0016263832803815603
    2. 'ambda' → logprob: -6.751626491546631
    3. 'ab' → logprob: -8.751626014709473
    4. 'am' → logprob: -9.876626014709473
    5. 'amp' → logprob: -9.876626014709473
    6. 'l' → logprob: -10.251626014709473
    7. '   ' → logprob: -10.251626014709473
    8. 'b' → logprob: -10.376626014709473
    9. 'ok' → logprob: -10.626626014709473
    10. 'mb' → logprob: -10.751626014709473

Token 409: '(ok' (ID: 128325)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.4751318693161011
    2. '(ok' → logprob: -0.9751318693161011
    3. '(' → logprob: -7.100131988525391
    4. 'not' → logprob: -8.60013198852539
    5. '((' → logprob: -11.10013198852539
    6. ' (' → logprob: -11.22513198852539
    7. 'ok' → logprob: -12.10013198852539
    8. '   ' → logprob: -12.85013198852539
    9. '(n' → logprob: -13.47513198852539
    10. ' not' → logprob: -13.60013198852539

Token 410: 'ay' (ID: 356)
  Prédit: 'ay'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ay' → logprob: -5.776898251497187e-05
    2. 'ok' → logprob: -10.1250581741333
    3. 'okay' → logprob: -11.7500581741333
    4. ' okay' → logprob: -12.8750581741333
    5. 'not' → logprob: -13.6250581741333
    6. 'y' → logprob: -13.8750581741333
    7. '```' → logprob: -14.2500581741333
    8. 'aybe' → logprob: -14.8750581741333
    9. '       ' → logprob: -15.0000581741333
    10. ' not' → logprob: -15.1250581741333

Token 411: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005973000079393387
    2. ' ,' → logprob: -5.130972862243652
    3. 'not' → logprob: -10.505972862243652
    4. '   ' → logprob: -11.880972862243652
    5. ' not' → logprob: -12.755972862243652
    6. ' ' → logprob: -13.380972862243652
    7. '  ' → logprob: -13.755972862243652
    8. ',
' → logprob: -14.130972862243652
    9. ',n' → logprob: -14.380972862243652
    10. '
' → logprob: -14.630972862243652

Token 412: 'not' (ID: 2878)
  Prédit: 'not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0006295174825936556
    2. ' not' → logprob: -7.375629425048828
    3. '   ' → logprob: -13.500629425048828
    4. ')' → logprob: -14.875629425048828
    5. ' ' → logprob: -15.250629425048828
    6. 'n' → logprob: -15.625629425048828
    7. '
' → logprob: -15.750629425048828
    8. '	not' → logprob: -15.750629425048828
    9. '  ' → logprob: -16.250629425048828
    10. '(not' → logprob: -16.375629425048828

Token 413: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -6.704273118884885e-07
    2. 'not' → logprob: -15.125000953674316
    3. 'ок' → logprob: -15.750000953674316
    4. ' ok' → logprob: -16.5
    5. 'okay' → logprob: -17.25
    6. '```' → logprob: -17.625
    7. '	ok' → logprob: -17.875
    8. '(ok' → logprob: -18.125
    9. ')' → logprob: -18.625
    10. '-ok' → logprob: -18.75

Token 414: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06997711211442947
    2. ')
' → logprob: -2.694977045059204
    3. ')
' → logprob: -10.694976806640625
    4. ')

' → logprob: -11.569976806640625
    5. ' )' → logprob: -12.569976806640625
    6. ' )
' → logprob: -14.069976806640625
    7. '           ' → logprob: -14.069976806640625
    8. ')`' → logprob: -14.069976806640625
    9. ')return' → logprob: -14.194976806640625
    10. '))' → logprob: -14.819976806640625

Token 415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011893989285454154
    2. ' if' → logprob: -7.251189231872559
    3. '<|end|>' → logprob: -8.251189231872559
    4. '       ' → logprob: -9.501189231872559
    5. '<|end|>' → logprob: -10.626189231872559
    6. 'if' → logprob: -10.751189231872559
    7. '
' → logprob: -10.876189231872559
    8. '            
' → logprob: -10.876189231872559
    9. '   ' → logprob: -11.376189231872559
    10. '          ' → logprob: -11.376189231872559

Token 416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8324443697929382
    2. ' if' → logprob: -1.207444429397583
    3. '           ' → logprob: -1.332444429397583
    4. '#' → logprob: -7.457444190979004
    5. 'print' → logprob: -8.207444190979004
    6. 'return' → logprob: -8.332444190979004
    7. '       ' → logprob: -8.582444190979004
    8. 'result' → logprob: -8.957444190979004
    9. 'idx' → logprob: -9.207444190979004
    10. 'def' → logprob: -9.582444190979004

Token 417: ' judge' (ID: 23319)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.27363139390945435
    2. 'probe' → logprob: -1.8986313343048096
    3. ' arr' → logprob: -3.1486313343048096
    4. ' probe' → logprob: -3.7736313343048096
    5. 'condition' → logprob: -5.148631572723389
    6. 'some' → logprob: -5.648631572723389
    7. 'False' → logprob: -5.898631572723389
    8. 'True' → logprob: -6.273631572723389
    9. ' True' → logprob: -6.648631572723389
    10. ' condition' → logprob: -6.773631572723389

Token 418: '(pro' (ID: 7092)
  Prédit: '(pro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -2.975612187583465e-05
    2. '(' → logprob: -10.750029563903809
    3. ' (' → logprob: -12.875029563903809
    4. '(m' → logprob: -13.375029563903809
    5. ':' → logprob: -14.250029563903809
    6. ')' → logprob: -14.500029563903809
    7. ' ' → logprob: -14.625029563903809
    8. '   ' → logprob: -14.750029563903809
    9. '(p' → logprob: -14.875029563903809
    10. '[' → logprob: -15.375029563903809

Token 419: 'be' (ID: 1464)
  Prédit: 'be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'be' → logprob: -4.692145012086257e-05
    2. 'obe' → logprob: -10.875046730041504
    3. 'robe' → logprob: -12.000046730041504
    4. 'probe' → logprob: -12.000046730041504
    5. 've' → logprob: -12.250046730041504
    6. 'b' → logprob: -12.750046730041504
    7. 'e' → logprob: -13.875046730041504
    8. 'бе' → logprob: -14.125046730041504
    9. 'ber' → logprob: -14.250046730041504
    10. ')' → logprob: -14.375046730041504

Token 420: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006172178778797388
    2. '):
' → logprob: -5.381172180175781
    3. ' ):' → logprob: -6.506172180175781
    4. ')' → logprob: -10.006172180175781
    5. ' ):
' → logprob: -11.756172180175781
    6. ')==' → logprob: -14.006172180175781
    7. '):
' → logprob: -14.131172180175781
    8. '):

' → logprob: -14.506172180175781
    9. ':' → logprob: -14.756172180175781
    10. ' )' → logprob: -15.131172180175781

Token 421: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015890657901763916
    2. ' okay' → logprob: -5.765890598297119
    3. ':' → logprob: -5.890890598297119
    4. ' ok' → logprob: -6.015890598297119
    5. ')' → logprob: -6.140890598297119
    6. ' :' → logprob: -6.265890598297119
    7. '                
' → logprob: -7.765890598297119
    8. ' not' → logprob: -7.890890598297119
    9. ' return' → logprob: -7.890890598297119
    10. '           ' → logprob: -7.890890598297119

Token 422: ' okay' (ID: 25435)
  Prédit: 'okay'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'okay' (adapté à ' okay') → logprob: -0.6995182633399963
    2. ' okay' → logprob: -0.8245182633399963
    3. 'not' → logprob: -3.3245182037353516
    4. ' not' → logprob: -4.074518203735352
    5. '           ' → logprob: -5.074518203735352
    6. ' ok' → logprob: -5.824518203735352
    7. 'ok' → logprob: -6.074518203735352
    8. '               ' → logprob: -9.449518203735352
    9. '	ok' → logprob: -10.324518203735352
    10. 'Okay' → logprob: -10.824518203735352

Token 423: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021033883094788
    2. '=' → logprob: -2.350210428237915
    3. ',' → logprob: -12.600210189819336
    4. ' ' → logprob: -15.225210189819336
    5. ')' → logprob: -16.225210189819336
    6. '＝' → logprob: -18.225210189819336
    7. ')=' → logprob: -18.600210189819336
    8. ' ,' → logprob: -18.975210189819336
    9. '=query' → logprob: -19.100210189819336
    10. ' =)' → logprob: -19.225210189819336

Token 424: ' probe' (ID: 31925)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -0.006717974785715342
    2. ' probe' → logprob: -5.006718158721924
    3. 'proxy' → logprob: -13.631717681884766
    4. 'pro' → logprob: -14.256717681884766
    5. '	pro' → logprob: -14.631717681884766
    6. 'prob' → logprob: -15.381717681884766
    7. '_probe' → logprob: -16.881717681884766
    8. 'prove' → logprob: -17.006717681884766
    9. '
' → logprob: -18.006717681884766
    10. 'proof' → logprob: -18.631717681884766

Token 425: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0031059421598911285
    2. 'else' → logprob: -6.128106117248535
    3. ' else' → logprob: -7.003106117248535
    4. '
' → logprob: -12.628106117248535
    5. '<|end|>' → logprob: -13.003106117248535
    6. '<|end|>' → logprob: -13.503106117248535
    7. ')' → logprob: -14.503106117248535
    8. '	       ' → logprob: -14.753106117248535
    9. '       ' → logprob: -14.753106117248535
    10. ',' → logprob: -14.753106117248535

Token 426: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005100460723042488
    2. 'else' → logprob: -5.630100250244141
    3. ' else' → logprob: -6.505100250244141
    4. '       ' → logprob: -14.38010025024414
    5. '<|end|>' → logprob: -14.63010025024414
    6. ')' → logprob: -14.75510025024414
    7. '               ' → logprob: -15.50510025024414
    8. '	       ' → logprob: -15.63010025024414
    9. '```' → logprob: -15.63010025024414
    10. ',' → logprob: -15.75510025024414

Token 427: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5847691297531128
    2. ' else' → logprob: -0.8347691297531128
    3. '           ' → logprob: -5.209769248962402
    4. '       ' → logprob: -5.709769248962402
    5. '        ' → logprob: -11.709769248962402
    6. '   ' → logprob: -13.334769248962402
    7. '	else' → logprob: -13.584769248962402
    8. 'elif' → logprob: -14.334769248962402
    9. '```' → logprob: -14.834769248962402
    10. '               ' → logprob: -15.084769248962402

Token 428: ':
' (ID: 734)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4965604841709137
    2. 'not' → logprob: -1.1215604543685913
    3. '               ' → logprob: -2.996560573577881
    4. ':
' → logprob: -4.496560573577881
    5. ':' → logprob: -5.996560573577881
    6. '           ' → logprob: -6.996560573577881
    7. '       ' → logprob: -7.996560573577881
    8. ':not' → logprob: -8.371560096740723
    9. '   ' → logprob: -8.746560096740723
    10. '              ' → logprob: -9.621560096740723

Token 429: '               ' (ID: 506)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.5280393362045288
    2. ' not' → logprob: -1.2780393362045288
    3. '               ' → logprob: -2.0280394554138184
    4. '       ' → logprob: -10.65303897857666
    5. '	not' → logprob: -10.77803897857666
    6. '           ' → logprob: -11.65303897857666
    7. '(not' → logprob: -12.65303897857666
    8. '   ' → logprob: -12.77803897857666
    9. ':not' → logprob: -13.02803897857666
    10. '.not' → logprob: -14.15303897857666

Token 430: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' (adapté à ' not') → logprob: -0.011051470413804054
    2. ' not' → logprob: -4.511051654815674
    3. '               ' → logprob: -12.761051177978516
    4. '   ' → logprob: -14.636051177978516
    5. '	not' → logprob: -15.886051177978516
    6. ' ' → logprob: -16.386051177978516
    7. '           ' → logprob: -16.636051177978516
    8. '_not' → logprob: -17.636051177978516
    9. '                   ' → logprob: -17.886051177978516
    10. '       ' → logprob: -17.886051177978516

Token 431: 'ok' (ID: 525)
  Prédit: 'ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -4.596781946020201e-05
    2. 'okay' → logprob: -10.000045776367188
    3. ' ok' → logprob: -15.625045776367188
    4. '_ok' → logprob: -16.000045776367188
    5. '	ok' → logprob: -16.000045776367188
    6. 'Okay' → logprob: -17.125045776367188
    7. ' okay' → logprob: -17.250045776367188
    8. '(ok' → logprob: -17.375045776367188
    9. ''ok' → logprob: -18.250045776367188
    10. 'ок' → logprob: -18.625045776367188

Token 432: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47407716512680054
    2. '=' → logprob: -0.9740771651268005
    3. ')' → logprob: -15.974077224731445
    4. ' ' → logprob: -16.724077224731445
    5. ',' → logprob: -18.974077224731445
    6. ')=' → logprob: -19.474077224731445
    7. '＝' → logprob: -19.599077224731445
    8. '=end' → logprob: -19.599077224731445
    9. ' =)' → logprob: -19.974077224731445
    10. ' ' → logprob: -20.224077224731445

Token 433: ' probe' (ID: 31925)
  Prédit: 'probe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'probe' → logprob: -0.005234475247561932
    2. ' probe' → logprob: -5.255234241485596
    3. 'pro' → logprob: -15.505234718322754
    4. 'prob' → logprob: -15.755234718322754
    5. 'proxy' → logprob: -16.005233764648438
    6. 'prove' → logprob: -16.630233764648438
    7. '	pro' → logprob: -17.005233764648438
    8. 'proof' → logprob: -17.130233764648438
    9. '_probe' → logprob: -17.380233764648438
    10. ' ' → logprob: -19.005233764648438

Token 434: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 435: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5186827778816223
    2. '       ' → logprob: -1.1436827182769775
    3. '<|end|>' → logprob: -2.7686827182769775
    4. '
' → logprob: -4.893682956695557
    5. ' ' → logprob: -5.518682956695557
    6. ' return' → logprob: -6.018682956695557
    7. '<|end|>' → logprob: -6.018682956695557
    8. '    ' → logprob: -6.768682956695557
    9. '        ' → logprob: -6.893682956695557
    10. '        
' → logprob: -7.143682956695557

Token 437: ' okay' (ID: 25435)
  Prédit: 'okay'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'okay' → logprob: -0.13670018315315247
    2. ' okay' → logprob: -2.13670015335083
    3. '(ok' → logprob: -5.01170015335083
    4. ' (' → logprob: -6.63670015335083
    5. '(' → logprob: -7.76170015335083
    6. 'ok' → logprob: -8.261700630187988
    7. 'mid' → logprob: -8.261700630187988
    8. ' ' → logprob: -8.386700630187988
    9. '(b' → logprob: -8.636700630187988
    10. '(mid' → logprob: -10.136700630187988

Token 438: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 439: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 441: ' judge' (ID: 23319)
  Prédit: ' judge'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' judge' → logprob: -0.47648733854293823
    2. 'judge' → logprob: -0.9764873385429382
    3. 'solve' → logprob: -6.601487159729004
    4. ' solve' → logprob: -7.726487159729004
    5. ' main' → logprob: -9.101487159729004
    6. ' ' → logprob: -9.226487159729004
    7. 'jud' → logprob: -9.601487159729004
    8. '   ' → logprob: -10.413987159729004
    9. 'main' → logprob: -10.663987159729004
    10. 'b' → logprob: -10.851487159729004

Token 442: '(x' (ID: 4061)
  Prédit: '(pro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pro' → logprob: -0.564714789390564
    2. '(p' → logprob: -1.314714789390564
    3. '(k' → logprob: -2.6897149085998535
    4. '(x' → logprob: -2.8147149085998535
    5. '(mid' → logprob: -3.9397149085998535
    6. '(pos' → logprob: -4.9397149085998535
    7. '(i' → logprob: -6.4397149085998535
    8. '(m' → logprob: -6.4397149085998535
    9. '(idx' → logprob: -6.6897149085998535
    10. '(n' → logprob: -7.3147149085998535

Token 443: 'mid' (ID: 23430)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012077342253178358
    2. '):
' → logprob: -6.7512078285217285
    3. ' ):' → logprob: -10.50120735168457
    4. ')' → logprob: -11.75120735168457
    5. ':' → logprob: -13.37620735168457
    6. '):

' → logprob: -15.75120735168457
    7. '   ' → logprob: -15.87620735168457
    8. '):
' → logprob: -16.00120735168457
    9. ' ):
' → logprob: -17.00120735168457
    10. ',' → logprob: -17.37620735168457

Token 444: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00020222914463374764
    2. '):
' → logprob: -8.625202178955078
    3. ' ):' → logprob: -11.000202178955078
    4. ':' → logprob: -12.750202178955078
    5. ')' → logprob: -13.125202178955078
    6. '   ' → logprob: -14.625202178955078
    7. ',' → logprob: -15.625202178955078
    8. '):

' → logprob: -16.250202178955078
    9. '):
' → logprob: -16.875202178955078
    10. ' ' → logprob: -17.125202178955078

Token 445: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045571038499474525
    2. '   ' → logprob: -5.629557132720947
    3. ' return' → logprob: -8.379556655883789
    4. '<|end|>' → logprob: -8.754556655883789
    5. '        
' → logprob: -9.004556655883789
    6. '    ' → logprob: -9.004556655883789
    7. ' pass' → logprob: -9.504556655883789
    8. ' for' → logprob: -9.629556655883789
    9. ' #' → logprob: -9.754556655883789
    10. ' if' → logprob: -10.754556655883789

Token 446: ' offset' (ID: 8985)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.02506160736084
    2. 'count' → logprob: -2.02506160736084
    3. ' cnt' → logprob: -2.15006160736084
    4. ' count' → logprob: -2.27506160736084
    5. ' return' → logprob: -2.27506160736084
    6. 'return' → logprob: -2.40006160736084
    7. 'cnt' → logprob: -2.52506160736084
    8. '#' → logprob: -2.90006160736084
    9. ' acc' → logprob: -3.65006160736084
    10. ' #' → logprob: -4.02506160736084

Token 447: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14377479255199432
    2. '=' → logprob: -2.0187747478485107
    3. '   ' → logprob: -7.51877498626709
    4. 's' → logprob: -8.89377498626709
    5. ',' → logprob: -9.39377498626709
    6. ')' → logprob: -9.89377498626709
    7. 'x' → logprob: -10.01877498626709
    8. 'arr' → logprob: -10.39377498626709
    9. 'def' → logprob: -10.64377498626709
    10. '=len' → logprob: -10.64377498626709

Token 448: ' [' (ID: 723)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.625277042388916
    2. 'x' → logprob: -1.000277042388916
    3. ' x' → logprob: -3.750277042388916
    4. 'arr' → logprob: -4.250277042388916
    5. 'N' → logprob: -4.500277042388916
    6. ' ' → logprob: -4.750277042388916
    7. 'b' → logprob: -5.125277042388916
    8. 'Fen' → logprob: -5.250277042388916
    9. 'abs' → logprob: -5.500277042388916
    10. '1' → logprob: -5.750277042388916

Token 449: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08942969143390656
    2. 'arr' → logprob: -3.4644296169281006
    3. 'False' → logprob: -4.21442985534668
    4. '-' → logprob: -4.58942985534668
    5. '1' → logprob: -5.21442985534668
    6. 'x' → logprob: -5.46442985534668
    7. 'abs' → logprob: -5.58942985534668
    8. '(' → logprob: -5.96442985534668
    9. 'i' → logprob: -6.21442985534668
    10. '(i' → logprob: -6.58942985534668

Token 450: ' if' (ID: 538)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3086965084075928
    2. ']' → logprob: -1.9336965084075928
    3. ' for' → logprob: -2.4336965084075928
    4. 'for' → logprob: -5.183696746826172
    5. ' -' → logprob: -5.433696746826172
    6. '+' → logprob: -5.433696746826172
    7. ' +' → logprob: -5.683696746826172
    8. ' ,' → logprob: -6.308696746826172
    9. '-' → logprob: -6.433696746826172
    10. ',-' → logprob: -6.683696746826172

Token 451: ' elem' (ID: 23108)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.35344263911247253
    2. 'a' → logprob: -2.478442668914795
    3. 'val' → logprob: -2.478442668914795
    4. 'v' → logprob: -2.478442668914795
    5. 'i' → logprob: -4.103442668914795
    6. 'num' → logprob: -5.103442668914795
    7. 'y' → logprob: -5.103442668914795
    8. 'elem' → logprob: -5.478442668914795
    9. 'x' → logprob: -5.728442668914795
    10. 'e' → logprob: -6.103442668914795

Token 452: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -1.1369194984436035
    2. ' >' → logprob: -1.8869194984436035
    3. '>=' → logprob: -2.0119194984436035
    4. ' <=' → logprob: -2.0119194984436035
    5. '<=' → logprob: -2.2619194984436035
    6. ' <' → logprob: -2.6369194984436035
    7. '>' → logprob: -2.7619194984436035
    8. ' ' → logprob: -5.0119194984436035
    9. '<' → logprob: -5.1369194984436035
    10. '>x' → logprob: -6.3869194984436035

Token 453: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.029765412211418152
    2. ' x' → logprob: -3.5297653675079346
    3. ' ' → logprob: -12.154765129089355
    4. '   ' → logprob: -12.404765129089355
    5. '
' → logprob: -14.029765129089355
    6. '(x' → logprob: -14.029765129089355
    7. '  ' → logprob: -14.529765129089355
    8. '0' → logprob: -14.779765129089355
    9. 'arr' → logprob: -14.842265129089355
    10. '	x' → logprob: -14.904765129089355

Token 454: 'mid' (ID: 23430)
  Prédit: 'mid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mid' → logprob: -3.2020991056924686e-05
    2. '[mid' → logprob: -11.875032424926758
    3. ' ' → logprob: -12.250032424926758
    4. ' mid' → logprob: -12.500032424926758
    5. '   ' → logprob: -12.625032424926758
    6. '(mid' → logprob: -13.750032424926758
    7. '
' → logprob: -13.875032424926758
    8. 'idx' → logprob: -14.000032424926758
    9. '_mid' → logprob: -14.000032424926758
    10. 'min' → logprob: -14.125032424926758

Token 455: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.14279554784297943
    2. 'else' → logprob: -2.0177955627441406
    3. '        ' → logprob: -10.64279556274414
    4. ' ' → logprob: -11.14279556274414
    5. '           ' → logprob: -11.39279556274414
    6. ' for' → logprob: -11.39279556274414
    7. '          ' → logprob: -11.39279556274414
    8. '   ' → logprob: -11.89279556274414
    9. 'for' → logprob: -11.89279556274414
    10. '            ' → logprob: -12.01779556274414

Token 456: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03145398944616318
    2. ' ' → logprob: -3.531454086303711
    3. '-' → logprob: -6.906454086303711
    4. '1' → logprob: -7.531454086303711
    5. ' -' → logprob: -9.406454086303711
    6. '  ' → logprob: -11.531454086303711
    7. '
' → logprob: -11.781454086303711
    8. '   ' → logprob: -11.843954086303711
    9. 'else' → logprob: -11.906454086303711
    10. '           ' → logprob: -12.531454086303711

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.179569077678025e-05
    2. ' ' → logprob: -10.500041961669922
    3. '0' → logprob: -11.375041961669922
    4. 'elem' → logprob: -13.125041961669922
    5. '
' → logprob: -15.750041961669922
    6. '-' → logprob: -16.000041961669922
    7. '```' → logprob: -16.437541961669922
    8. '(elem' → logprob: -16.687541961669922
    9. ' elem' → logprob: -16.875041961669922
    10. '

' → logprob: -17.000041961669922

Token 458: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.0067501855082809925
    2. 'for' → logprob: -5.006750106811523
    3. ' ' → logprob: -11.006750106811523
    4. ' else' → logprob: -12.631750106811523
    5. '   ' → logprob: -13.256750106811523
    6. ' in' → logprob: -13.506750106811523
    7. '    ' → logprob: -13.631750106811523
    8. '           ' → logprob: -13.631750106811523
    9. '        ' → logprob: -13.756750106811523
    10. '          ' → logprob: -13.756750106811523

Token 459: ' elem' (ID: 23108)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.16161969304084778
    2. ' arr' → logprob: -1.9116196632385254
    3. 'elem' → logprob: -6.661619663238525
    4. ' elem' → logprob: -9.161620140075684
    5. '	arr' → logprob: -12.411620140075684
    6. 'ele' → logprob: -13.161620140075684
    7. ' ' → logprob: -13.786620140075684
    8. '(arr' → logprob: -14.036620140075684
    9. '   ' → logprob: -14.411620140075684
    10. '$arr' → logprob: -14.911620140075684

Token 460: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023252001032233238
    2. 'in' → logprob: -3.773252010345459
    3. ',' → logprob: -13.1482515335083
    4. ' ' → logprob: -13.5232515335083
    5. 'arr' → logprob: -14.3982515335083
    6. '    ' → logprob: -14.6482515335083
    7. ' ,' → logprob: -15.0232515335083
    8. '   ' → logprob: -15.1482515335083
    9. '  ' → logprob: -15.3982515335083
    10. '	in' → logprob: -15.6482515335083

Token 461: ' arr' (ID: 1724)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.029755927622318268
    2. ' arr' → logprob: -3.5297558307647705
    3. '   ' → logprob: -13.404755592346191
    4. ' ' → logprob: -13.654755592346191
    5. '	arr' → logprob: -13.904755592346191
    6. '
' → logprob: -14.654755592346191
    7. '(arr' → logprob: -15.029755592346191
    8. '  ' → logprob: -15.029755592346191
    9. '$arr' → logprob: -16.029756546020508
    10. '_arr' → logprob: -16.654756546020508

Token 462: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004777922760695219
    2. ']
' → logprob: -5.379777908325195
    3. ' ]' → logprob: -8.879777908325195
    4. '       ' → logprob: -11.754777908325195
    5. '   ' → logprob: -12.129777908325195
    6. ']
' → logprob: -13.254777908325195
    7. ' ]
' → logprob: -14.004777908325195
    8. '           ' → logprob: -14.504777908325195
    9. ']

' → logprob: -14.504777908325195
    10. '()]' → logprob: -14.879777908325195

Token 463: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4601985216140747
    2. '   ' → logprob: -1.0851985216140747
    3. '<|end|>' → logprob: -3.835198402404785
    4. '       ' → logprob: -5.460198402404785
    5. '    
' → logprob: -6.335198402404785
    6. ')' → logprob: -6.585198402404785
    7. 'count' → logprob: -7.710198402404785
    8. ')
' → logprob: -8.210198402404785
    9. ',' → logprob: -8.585198402404785
    10. 'def' → logprob: -8.960198402404785

Token 464: ' BIT' (ID: 52185)
  Prédit: ' fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fen' → logprob: -0.7025901079177856
    2. 'fen' → logprob: -1.9525901079177856
    3. 'ft' → logprob: -2.202589988708496
    4. 'fw' → logprob: -2.702589988708496
    5. ' ft' → logprob: -3.202589988708496
    6. 'tree' → logprob: -3.577589988708496
    7. ' fw' → logprob: -3.702589988708496
    8. 'bit' → logprob: -3.827589988708496
    9. 'f' → logprob: -4.077589988708496
    10. '   ' → logprob: -4.452589988708496

Token 465: 'W' (ID: 54)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016069445759058
    2. '=' → logprob: -4.141069412231445
    3. ' ' → logprob: -10.891069412231445
    4. 'increase' → logprob: -12.141069412231445
    5. '    ' → logprob: -12.641069412231445
    6. '   ' → logprob: -13.266069412231445
    7. '        ' → logprob: -13.391069412231445
    8. '  ' → logprob: -14.266069412231445
    9. '=in' → logprob: -14.391069412231445
    10. '(' → logprob: -14.391069412231445

Token 466: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018215030431747437
    2. '=' → logprob: -4.018215179443359
    3. 'y' → logprob: -10.51821517944336
    4. ' ' → logprob: -11.39321517944336
    5. '=new' → logprob: -12.26821517944336
    6. '  ' → logprob: -12.51821517944336
    7. 'w' → logprob: -12.64321517944336
    8. '    ' → logprob: -13.26821517944336
    9. 'f' → logprob: -13.26821517944336
    10. '   ' → logprob: -13.51821517944336

Token 467: ' Fen' (ID: 48230)
  Prédit: 'Fen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Fen' → logprob: -0.048598386347293854
    2. ' Fen' → logprob: -3.048598289489746
    3. ' ' → logprob: -13.048598289489746
    4. '   ' → logprob: -13.048598289489746
    5. ' fen' → logprob: -13.548598289489746
    6. 'F' → logprob: -13.673598289489746
    7. 'len' → logprob: -13.798598289489746
    8. '[' → logprob: -14.048598289489746
    9. 'fen' → logprob: -14.548598289489746
    10. '  ' → logprob: -14.798598289489746

Token 468: 'wick' (ID: 14105)
  Prédit: 'wick'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wick' → logprob: -0.01572556607425213
    2. 'w' → logprob: -4.765725612640381
    3. 'ick' → logprob: -5.015725612640381
    4. '   ' → logprob: -9.890725135803223
    5. '       ' → logprob: -9.890725135803223
    6. 'W' → logprob: -10.265725135803223
    7. '```' → logprob: -10.515725135803223
    8. '
' → logprob: -10.765725135803223
    9. 'wy' → logprob: -10.890725135803223
    10. 'y' → logprob: -11.015725135803223

Token 469: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.1472419600977446e-06
    2. 'w' → logprob: -15.500000953674316
    3. '   ' → logprob: -16.187501907348633
    4. '       ' → logprob: -16.187501907348633
    5. 'Tree' → logprob: -16.500001907348633
    6. '```' → logprob: -17.062501907348633
    7. 'x' → logprob: -17.312501907348633
    8. 'ython' → logprob: -17.312501907348633
    9. 'Fen' → logprob: -17.312501907348633
    10. 'tree' → logprob: -17.375001907348633

Token 470: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -4.227250610711053e-05
    2. 'tree' → logprob: -10.375041961669922
    3. 'y' → logprob: -11.750041961669922
    4. ' Tree' → logprob: -14.000041961669922
    5. '_tree' → logprob: -14.250041961669922
    6. '	Tree' → logprob: -14.500041961669922
    7. '(Tree' → logprob: -15.625041961669922
    8. 't' → logprob: -15.875041961669922
    9. ' tree' → logprob: -16.250041961669922
    10. '<Tree' → logprob: -16.375041961669922

Token 471: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.10479704290628433
    2. '(len' → logprob: -2.604797124862671
    3. '(' → logprob: -4.354796886444092
    4. 'len' → logprob: -4.854796886444092
    5. 'N' → logprob: -5.354796886444092
    6. '((' → logprob: -9.97979736328125
    7. '(B' → logprob: -10.35479736328125
    8. ' N' → logprob: -10.60479736328125
    9. ' (' → logprob: -10.72979736328125
    10. '   ' → logprob: -11.35479736328125

Token 472: '*' (ID: 9)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.014517917297780514
    2. ')' → logprob: -4.264517784118652
    3. ' )
' → logprob: -8.764517784118652
    4. '   ' → logprob: -9.139517784118652
    5. ')
' → logprob: -9.889517784118652
    6. ')

' → logprob: -11.389517784118652
    7. '       ' → logprob: -11.389517784118652
    8. '+' → logprob: -11.389517784118652
    9. ' )' → logprob: -13.139517784118652
    10. '  ' → logprob: -14.139517784118652

Token 473: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0036262006033211946
    2. '3' → logprob: -6.628626346588135
    3. ' ' → logprob: -6.878626346588135
    4. '   ' → logprob: -7.878626346588135
    5. '1' → logprob: -8.003625869750977
    6. '(' → logprob: -8.628625869750977
    7. '4' → logprob: -9.128625869750977
    8. '+' → logprob: -9.253625869750977
    9. '(N' → logprob: -9.628625869750977
    10. '5' → logprob: -11.128625869750977

Token 474: ' +' (ID: 659)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.16612502932548523
    2. ')' → logprob: -1.9161250591278076
    3. '+' → logprob: -5.2911248207092285
    4. '   ' → logprob: -8.291125297546387
    5. '*' → logprob: -8.541125297546387
    6. ')
' → logprob: -8.916125297546387
    7. ' +' → logprob: -8.916125297546387
    8. ' )
' → logprob: -10.041125297546387
    9. '       ' → logprob: -10.166125297546387
    10. ')

' → logprob: -10.541125297546387

Token 475: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.38617125153541565
    2. '1' → logprob: -1.7611712217330933
    3. '5' → logprob: -2.886171340942383
    4. '10' → logprob: -2.886171340942383
    5. '3' → logprob: -3.636171340942383
    6. '4' → logprob: -5.011171340942383
    7. ' ' → logprob: -5.636171340942383
    8. '100' → logprob: -9.386171340942383
    9. '20' → logprob: -9.636171340942383
    10. '   ' → logprob: -10.136171340942383

Token 476: '5' (ID: 20)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.578097939491272
    2. '1' → logprob: -1.953097939491272
    3. '5' → logprob: -2.2030978202819824
    4. '3' → logprob: -2.4530978202819824
    5. '10' → logprob: -2.4530978202819824
    6. '4' → logprob: -4.328097820281982
    7. ' ' → logprob: -7.078097820281982
    8. '100' → logprob: -8.32809829711914
    9. '20' → logprob: -9.20309829711914
    10. '7' → logprob: -9.82809829711914

Token 477: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4750957190990448
    2. ')
' → logprob: -0.9750957489013672
    3. ')
' → logprob: -7.100095748901367
    4. '       ' → logprob: -8.850095748901367
    5. '   ' → logprob: -11.225095748901367
    6. '           ' → logprob: -11.600095748901367
    7. ')

' → logprob: -11.850095748901367
    8. ' )' → logprob: -11.975095748901367
    9. ' )
' → logprob: -12.100095748901367
    10. '+' → logprob: -14.225095748901367

Token 478: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07496784627437592
    2. ' offset' → logprob: -3.949967861175537
    3. ' prefix' → logprob: -4.574967861175537
    4. 'offset' → logprob: -4.699967861175537
    5. '   ' → logprob: -5.199967861175537
    6. ' s' → logprob: -5.449967861175537
    7. ' acc' → logprob: -5.699967861175537
    8. 'prefix' → logprob: -5.699967861175537
    9. 'sum' → logprob: -6.324967861175537
    10. ' sum' → logprob: -6.449967861175537

Token 479: ' answer' (ID: 6052)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.31546345353126526
    2. 'count' → logprob: -2.6904635429382324
    3. '   ' → logprob: -3.5654635429382324
    4. 'cum' → logprob: -3.6904635429382324
    5. 'acc' → logprob: -3.9404635429382324
    6. 'res' → logprob: -4.315463542938232
    7. 's' → logprob: -4.315463542938232
    8. 'c' → logprob: -4.315463542938232
    9. 'counter' → logprob: -4.315463542938232
    10. 'cnt' → logprob: -4.315463542938232

Token 480: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5231581926345825
    2. '=' → logprob: -0.8981581926345825
    3. ',' → logprob: -10.398158073425293
    4. ' ' → logprob: -13.898158073425293
    5. '=-' → logprob: -14.523158073425293
    6. '   ' → logprob: -14.773158073425293
    7. '=int' → logprob: -14.898158073425293
    8. '  ' → logprob: -15.023158073425293
    9. 's' → logprob: -15.148158073425293
    10. 'import' → logprob: -15.273158073425293

Token 481: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00892382301390171
    2. ' ' → logprob: -5.1339240074157715
    3. '-' → logprob: -6.2589240074157715
    4. 'False' → logprob: -7.0089240074157715
    5. ' -' → logprob: -9.758923530578613
    6. ' False' → logprob: -10.508923530578613
    7. '1' → logprob: -10.883923530578613
    8. 'True' → logprob: -11.633923530578613
    9. 'N' → logprob: -11.758923530578613
    10. 'answer' → logprob: -12.008923530578613

Token 482: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.000307575857732445
    2. '-' → logprob: -9.5003080368042
    3. 'False' → logprob: -9.5003080368042
    4. 'answer' → logprob: -10.7503080368042
    5. 'ans' → logprob: -10.8753080368042
    6. '1' → logprob: -11.0003080368042
    7. 'int' → logprob: -11.0003080368042
    8. ' ' → logprob: -11.3753080368042
    9. 'max' → logprob: -11.5003080368042
    10. 'N' → logprob: -11.6253080368042

Token 483: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41568753123283386
    2. '<|end|>' → logprob: -1.4156875610351562
    3. '
' → logprob: -2.4156875610351562
    4. '<|end|>' → logprob: -5.540687561035156
    5. '   ' → logprob: -6.415687561035156
    6. '        
' → logprob: -6.915687561035156
    7. ',' → logprob: -7.915687561035156
    8. ')' → logprob: -8.665687561035156
    9. ',
' → logprob: -9.040687561035156
    10. '    
' → logprob: -9.040687561035156

Token 484: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 485: ' ind' (ID: 1383)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -1.1408169269561768
    2. 'cum' → logprob: -1.6408169269561768
    3. 'acc' → logprob: -2.2658169269561768
    4. 'c' → logprob: -2.5158169269561768
    5. 'BIT' → logprob: -3.0158169269561768
    6. 's' → logprob: -3.2658169269561768
    7. 'curr' → logprob: -3.6408169269561768
    8. 'offset' → logprob: -3.6408169269561768
    9. 'cur' → logprob: -3.6408169269561768
    10. '       ' → logprob: -4.140816688537598

Token 486: ' =' (ID: 314)
  Prédit: 'ex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.04781682416796684
    2. ' =' → logprob: -3.297816753387451
    3. '=' → logprob: -5.047816753387451
    4. 'x' → logprob: -5.797816753387451
    5. 'e' → logprob: -8.79781723022461
    6. '   ' → logprob: -10.67281723022461
    7. '0' → logprob: -10.79781723022461
    8. 's' → logprob: -11.67281723022461
    9. '       ' → logprob: -12.04781723022461
    10. ' ' → logprob: -12.04781723022461

Token 487: ' N' (ID: 478)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.340310275554657
    2. '-' → logprob: -1.7153103351593018
    3. ' ' → logprob: -2.5903103351593018
    4. ' -' → logprob: -3.5903103351593018
    5. 'N' → logprob: -5.840310096740723
    6. ' N' → logprob: -6.090310096740723
    7. '1' → logprob: -8.465310096740723
    8. '[' → logprob: -9.090310096740723
    9. ' off' → logprob: -9.090310096740723
    10. 'off' → logprob: -9.465310096740723

Token 488: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3996448516845703
    2. ' +' → logprob: -2.2746448516845703
    3. '
' → logprob: -2.3996448516845703
    4. '-' → logprob: -2.7746448516845703
    5. ' -' → logprob: -2.7746448516845703
    6. '<|end|>' → logprob: -5.64964485168457
    7. '       ' → logprob: -6.39964485168457
    8. '   ' → logprob: -6.64964485168457
    9. '0' → logprob: -6.77464485168457
    10. '<|end|>' → logprob: -7.14964485168457

Token 489: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015561852604150772
    2. '2' → logprob: -4.765562057495117
    3. '0' → logprob: -5.515562057495117
    4. '5' → logprob: -6.640562057495117
    5. '3' → logprob: -7.390562057495117
    6. ' ' → logprob: -7.515562057495117
    7. '4' → logprob: -8.765562057495117
    8. '10' → logprob: -9.640562057495117
    9. '6' → logprob: -9.765562057495117
    10. 'N' → logprob: -10.140562057495117

Token 490: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.033164143562317
    2. '
' → logprob: -1.158164143562317
    3. 'for' → logprob: -1.408164143562317
    4. ' for' → logprob: -3.0331640243530273
    5. '<|end|>' → logprob: -3.9081640243530273
    6. '+' → logprob: -5.158164024353027
    7. '        
' → logprob: -5.658164024353027
    8. 'while' → logprob: -6.533164024353027
    9. '<|end|>' → logprob: -6.783164024353027
    10. ',' → logprob: -7.408164024353027

Token 491: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 492: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' (adapté à ' BIT') → logprob: -0.027543125674128532
    2. '       ' → logprob: -4.527543067932129
    3. ' BIT' → logprob: -4.527543067932129
    4. '   ' → logprob: -5.402543067932129
    5. 'for' → logprob: -8.777543067932129
    6. ' for' → logprob: -9.277543067932129
    7. 's' → logprob: -9.652543067932129
    8. 'prefix' → logprob: -9.652543067932129
    9. '	BIT' → logprob: -9.777543067932129
    10. 'BITS' → logprob: -9.902543067932129

Token 493: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0011465295683592558
    2. 'increase' → logprob: -7.12614631652832
    3. '.in' → logprob: -8.87614631652832
    4. 'w' → logprob: -9.62614631652832
    5. ' =' → logprob: -9.75114631652832
    6. '=' → logprob: -10.75114631652832
    7. '.increment' → logprob: -11.25114631652832
    8. '=in' → logprob: -11.75114631652832
    9. '.inc' → logprob: -11.75114631652832
    10. '   ' → logprob: -12.12614631652832

Token 494: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -6.869017852295656e-06
    2. '.increment' → logprob: -12.500006675720215
    3. 'increase' → logprob: -13.125006675720215
    4. ' .' → logprob: -14.875006675720215
    5. '.' → logprob: -15.000006675720215
    6. '=in' → logprob: -16.62500762939453
    7. '.insert' → logprob: -17.12500762939453
    8. '.In' → logprob: -17.12500762939453
    9. 'Increase' → logprob: -17.25000762939453
    10. '.raise' → logprob: -17.25000762939453

Token 495: 'crease' (ID: 27550)
  Prédit: 'crease'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crease' → logprob: -2.558399319241289e-05
    2. 'increase' → logprob: -10.875025749206543
    3. 're' → logprob: -12.500025749206543
    4. '```' → logprob: -14.250025749206543
    5. 'create' → logprob: -14.500025749206543
    6. ' crease' → logprob: -15.000025749206543
    7. '``' → logprob: -15.125025749206543
    8. '   ' → logprob: -15.375025749206543
    9. 'CREASE' → logprob: -15.500025749206543
    10. '[' → logprob: -15.750025749206543

Token 496: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -0.00010652327910065651
    2. '(N' → logprob: -9.250106811523438
    3. '(' → logprob: -11.625106811523438
    4. '(indent' → logprob: -15.250106811523438
    5. 'ind' → logprob: -15.500106811523438
    6. ' (' → logprob: -15.500106811523438
    7. '(n' → logprob: -15.875106811523438
    8. '(i' → logprob: -16.250106811523438
    9. '(nd' → logprob: -16.500106811523438
    10. '   ' → logprob: -16.625106811523438

Token 497: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00013274075172375888
    2. ' ,' → logprob: -9.00013256072998
    3. '(' → logprob: -12.75013256072998
    4. '0' → logprob: -14.00013256072998
    5. '   ' → logprob: -14.12513256072998
    6. '1' → logprob: -14.12513256072998
    7. ',
' → logprob: -14.25013256072998
    8. ',-' → logprob: -14.37513256072998
    9. ',+' → logprob: -14.62513256072998
    10. '+' → logprob: -15.50013256072998

Token 498: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021224225929472595
    2. 'offset' → logprob: -9.375212669372559
    3. ' ' → logprob: -9.750212669372559
    4. '0' → logprob: -9.875212669372559
    5. '+' → logprob: -11.250212669372559
    6. '   ' → logprob: -13.500212669372559
    7. '-' → logprob: -13.750212669372559
    8. '       ' → logprob: -14.875212669372559
    9. '           ' → logprob: -15.125212669372559
    10. '2' → logprob: -15.625212669372559

Token 499: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001577698567416519
    2. ' ' → logprob: -9.375157356262207
    3. '0' → logprob: -10.250157356262207
    4. 'offset' → logprob: -10.750157356262207
    5. '+' → logprob: -11.500157356262207
    6. '   ' → logprob: -13.000157356262207
    7. '-' → logprob: -13.375157356262207
    8. '       ' → logprob: -14.625157356262207
    9. '  ' → logprob: -15.000157356262207
    10. '           ' → logprob: -15.250157356262207

Token 500: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6933056712150574
    2. ')
' → logprob: -0.6933056712150574
    3. ')
' → logprob: -8.818305969238281
    4. '       ' → logprob: -12.193305969238281
    5. ')

' → logprob: -12.568305969238281
    6. '   ' → logprob: -15.318305969238281
    7. ')#' → logprob: -15.568305969238281
    8. '),' → logprob: -15.693305969238281
    9. ')`
' → logprob: -15.818305969238281
    10. '<|end|>' → logprob: -15.943305969238281

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11195316165685654
    2. ' for' → logprob: -2.8619532585144043
    3. '<|end|>' → logprob: -3.2369532585144043
    4. '
' → logprob: -5.361953258514404
    5. 'for' → logprob: -5.611953258514404
    6. '        
' → logprob: -7.736953258514404
    7. '```' → logprob: -8.236952781677246
    8. '   ' → logprob: -9.486952781677246
    9. ',' → logprob: -9.611952781677246
    10. ')' → logprob: -9.736952781677246

Token 502: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8503692746162415
    2. 'prefix' → logprob: -1.8503692150115967
    3. '       ' → logprob: -2.2253692150115967
    4. 'curr' → logprob: -2.7253692150115967
    5. 'cur' → logprob: -2.9753692150115967
    6. 'current' → logprob: -3.2253692150115967
    7. 'c' → logprob: -3.3503692150115967
    8. 's' → logprob: -3.8503692150115967
    9. 'acc' → logprob: -3.8503692150115967
    10. 'cum' → logprob: -4.225369453430176

Token 503: ' v' (ID: 323)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.39084482192993164
    2. 'i' → logprob: -1.1408448219299316
    3. ' idx' → logprob: -7.390844821929932
    4. 'x' → logprob: -7.515844821929932
    5. ' x' → logprob: -7.890844821929932
    6. 'idx' → logprob: -8.140844345092773
    7. ' ' → logprob: -8.640844345092773
    8. 'elem' → logprob: -8.765844345092773
    9. ' elem' → logprob: -9.015844345092773
    10. '(i' → logprob: -9.015844345092773

Token 504: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.30911368131637573
    2. 'in' → logprob: -1.6841137409210205
    3. ',' → logprob: -2.6841137409210205
    4. 'al' → logprob: -5.434113502502441
    5. 'alue' → logprob: -5.434113502502441
    6. 'ind' → logprob: -6.809113502502441
    7. 'i' → logprob: -7.684113502502441
    8. '   ' → logprob: -8.059113502502441
    9. ' ' → logprob: -8.434113502502441
    10. ' ,' → logprob: -8.559113502502441

Token 505: ' offset' (ID: 8985)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.05579499155282974
    2. ' arr' → logprob: -3.4307949542999268
    3. 'offset' → logprob: -4.180795192718506
    4. 'range' → logprob: -5.805795192718506
    5. 'off' → logprob: -6.555795192718506
    6. ' range' → logprob: -6.680795192718506
    7. ' offset' → logprob: -7.305795192718506
    8. ' off' → logprob: -9.680794715881348
    9. '   ' → logprob: -9.930794715881348
    10. '(arr' → logprob: -10.180794715881348

Token 506: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11322581768035889
    2. ':
' → logprob: -2.2382259368896484
    3. ' in' → logprob: -9.238225936889648
    4. '   ' → logprob: -9.738225936889648
    5. '       ' → logprob: -9.988225936889648
    6. ',' → logprob: -10.113225936889648
    7. ' :' → logprob: -10.238225936889648
    8. '[' → logprob: -10.238225936889648
    9. '=' → logprob: -11.238225936889648
    10. '):
' → logprob: -11.238225936889648

Token 507: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26664602756500244
    2. '       ' → logprob: -1.8916460275650024
    3. ' ind' → logprob: -2.641645908355713
    4. 'ind' → logprob: -4.641645908355713
    5. '   ' → logprob: -6.391645908355713
    6. '```' → logprob: -8.516646385192871
    7. '
' → logprob: -9.266646385192871
    8. '        
' → logprob: -9.516646385192871
    9. 'indt' → logprob: -10.016646385192871
    10. '_ind' → logprob: -10.016646385192871

Token 508: ' ind' (ID: 1383)
  Prédit: ' ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ind' → logprob: -0.5810678005218506
    2. 'ind' (adapté à ' ind') → logprob: -0.8310678005218506
    3. '       ' → logprob: -5.83106803894043
    4. '           ' → logprob: -6.70606803894043
    5. 'if' → logprob: -7.45606803894043
    6. ' if' → logprob: -8.58106803894043
    7. '   ' → logprob: -9.08106803894043
    8. '               ' → logprob: -9.95606803894043
    9. '
' → logprob: -11.58106803894043
    10. 'indent' → logprob: -11.70606803894043

Token 509: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.2519465982913971
    2. ' +=' → logprob: -1.5019465684890747
    3. '=' → logprob: -11.501946449279785
    4. ' =' → logprob: -12.501946449279785
    5. ']+=' → logprob: -13.626946449279785
    6. '+' → logprob: -14.501946449279785
    7. '-=' → logprob: -14.626946449279785
    8. '   ' → logprob: -14.626946449279785
    9. ' -=' → logprob: -14.751946449279785
    10. '+=(' → logprob: -15.126946449279785

Token 510: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007121934904716909
    2. ' v' → logprob: -7.2507123947143555
    3. '1' → logprob: -13.125712394714355
    4. '	v' → logprob: -16.25071144104004
    5. '   ' → logprob: -16.37571144104004
    6. ' ' → logprob: -17.12571144104004
    7. '-v' → logprob: -17.62571144104004
    8. '(v' → logprob: -17.87571144104004
    9. '(' → logprob: -18.25071144104004
    10. '           ' → logprob: -18.50071144104004

Token 511: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1560823917388916
    2. '           ' → logprob: -2.0310823917388916
    3. '       ' → logprob: -5.1560821533203125
    4. '            
' → logprob: -5.5310821533203125
    5. '        
' → logprob: -7.1560821533203125
    6. '    
' → logprob: -7.4060821533203125
    7. '   ' → logprob: -7.5310821533203125
    8. '
' → logprob: -7.6560821533203125
    9. '```' → logprob: -8.031082153320312
    10. '<|end|>' → logprob: -8.406082153320312

Token 512: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12499982118606567
    2. '
' → logprob: -2.374999761581421
    3. '```' → logprob: -4.75
    4. '            
' → logprob: -5.0
    5. '       ' → logprob: -5.5
    6. 'BIT' → logprob: -7.125
    7. ' 
' → logprob: -7.25
    8. '    
' → logprob: -7.625
    9. '        
' → logprob: -7.625
    10. '   ' → logprob: -7.75

Token 513: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' (adapté à ' answer') → logprob: -0.004563511349260807
    2. 'BIT' → logprob: -5.879563331604004
    3. ' answer' → logprob: -6.379563331604004
    4. ' BIT' → logprob: -10.504563331604004
    5. '           ' → logprob: -11.254563331604004
    6. '   ' → logprob: -12.254563331604004
    7. '       ' → logprob: -12.629563331604004
    8. 'result' → logprob: -12.754563331604004
    9. '            
' → logprob: -13.254563331604004
    10. 'ans' → logprob: -13.629563331604004

Token 514: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.026374151930212975
    2. '+=' → logprob: -3.651374101638794
    3. ' =' → logprob: -9.651373863220215
    4. '=' → logprob: -12.276373863220215
    5. '+' → logprob: -13.276373863220215
    6. ' ' → logprob: -14.276373863220215
    7. ',' → logprob: -14.651373863220215
    8. ']+=' → logprob: -14.776373863220215
    9. ' ,' → logprob: -14.776373863220215
    10. ' +' → logprob: -15.151373863220215

Token 515: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' → logprob: -0.0003827676991932094
    2. ' BIT' → logprob: -7.875382900238037
    3. '	BIT' → logprob: -13.500382423400879
    4. '_BIT' → logprob: -14.500382423400879
    5. 'bit' → logprob: -15.125382423400879
    6. 'B' → logprob: -16.125383377075195
    7. '1' → logprob: -16.375383377075195
    8. 'BI' → logprob: -16.375383377075195
    9. 'BITS' → logprob: -16.875383377075195
    10. '0' → logprob: -17.125383377075195

Token 516: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -2.1008713702030946e-06
    2. 'w' → logprob: -13.125001907348633
    3. ' W' → logprob: -17.750001907348633
    4. '1' → logprob: -18.125001907348633
    5. '=' → logprob: -18.250001907348633
    6. '#' → logprob: -18.625001907348633
    7. '```' → logprob: -18.625001907348633
    8. '   ' → logprob: -18.875001907348633
    9. 'v' → logprob: -18.875001907348633
    10. '[' → logprob: -18.875001907348633

Token 517: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0006366660236380994
    2. '.in' → logprob: -7.375636577606201
    3. ' .' → logprob: -11.62563705444336
    4. '.' → logprob: -14.37563705444336
    5. ').' → logprob: -15.50063705444336
    6. '>.' → logprob: -16.37563705444336
    7. '.container' → logprob: -16.37563705444336
    8. '.count' → logprob: -16.75063705444336
    9. '().' → logprob: -17.12563705444336
    10. '.increment' → logprob: -17.12563705444336

Token 518: 'umulative' (ID: 97729)
  Prédit: 'umulative'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'umulative' → logprob: -8.125210297293961e-05
    2. 'um' → logprob: -10.250081062316895
    3. 'umulate' → logprob: -10.250081062316895
    4. 'umul' → logprob: -12.500081062316895
    5. 'om' → logprob: -13.000081062316895
    6. 'uml' → logprob: -13.375081062316895
    7. 'umal' → logprob: -13.625081062316895
    8. 'c' → logprob: -15.375081062316895
    9. 'u' → logprob: -15.375081062316895
    10. ' cumulative' → logprob: -16.00008201599121

Token 519: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -2.1008713702030946e-06
    2. 'ind' → logprob: -13.375001907348633
    3. '(' → logprob: -15.000001907348633
    4. '[ind' → logprob: -16.125001907348633
    5. '(in' → logprob: -18.125001907348633
    6. '(indent' → logprob: -18.250001907348633
    7. '(idx' → logprob: -18.625001907348633
    8. '(N' → logprob: -18.875001907348633
    9. ' ind' → logprob: -19.125001907348633
    10. ' (' → logprob: -19.250001907348633

Token 520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.027690626680850983
    2. ' -' → logprob: -3.9026906490325928
    3. '-' → logprob: -5.527690410614014
    4. ' )' → logprob: -5.777690410614014
    5. ')
' → logprob: -10.277690887451172
    6. '-)' → logprob: -12.402690887451172
    7. '           ' → logprob: -12.777690887451172
    8. '))' → logprob: -13.277690887451172
    9. '())' → logprob: -13.402690887451172
    10. '),' → logprob: -14.277690887451172

Token 521: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.5716304410016164e-05
    2. '```' → logprob: -11.000035285949707
    3. ',' → logprob: -12.125035285949707
    4. '   ' → logprob: -12.875035285949707
    5. '
' → logprob: -12.875035285949707
    6. '       ' → logprob: -13.125035285949707
    7. '          ' → logprob: -13.750035285949707
    8. '               ' → logprob: -13.875035285949707
    9. '            
' → logprob: -14.000035285949707
    10. '<|end|>' → logprob: -14.250035285949707

Token 522: ' BIT' (ID: 52185)
  Prédit: 'BIT'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BIT' (adapté à ' BIT') → logprob: -0.0002353640884393826
    2. ' BIT' → logprob: -9.000235557556152
    3. '           ' → logprob: -9.125235557556152
    4. '   ' → logprob: -13.625235557556152
    5. '	BIT' → logprob: -14.500235557556152
    6. '       ' → logprob: -14.750235557556152
    7. ' ' → logprob: -14.875235557556152
    8. '               ' → logprob: -16.250234603881836
    9. 'BITS' → logprob: -16.250234603881836
    10. '_BIT' → logprob: -16.625234603881836

Token 523: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -15.750000953674316
    3. ' W' → logprob: -15.875000953674316
    4. '.' → logprob: -15.875000953674316
    5. '           ' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '.in' → logprob: -16.625001907348633
    8. '               ' → logprob: -16.750001907348633
    9. '       ' → logprob: -17.000001907348633
    10. 'increase' → logprob: -17.125001907348633

Token 524: '.in' (ID: 2250)
  Prédit: '.in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.in' → logprob: -1.1472419600977446e-06
    2. '.increment' → logprob: -14.375000953674316
    3. ' .' → logprob: -15.375000953674316
    4. '.' → logprob: -15.750000953674316
    5. 'increase' → logprob: -15.875000953674316
    6. ').' → logprob: -17.125001907348633
    7. '```' → logprob: -17.875001907348633
    8. '.raise' → logprob: -18.125001907348633
    9. '.In' → logprob: -18.750001907348633
    10. '`.' → logprob: -19.125001907348633

Token 525: 'crease' (ID: 27550)
  Prédit: 'crease'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'crease' → logprob: -0.00019245444855187088
    2. 'increase' → logprob: -8.625192642211914
    3. 'ease' → logprob: -12.250192642211914
    4. '```' → logprob: -12.875192642211914
    5. 'cre' → logprob: -13.500192642211914
    6. 're' → logprob: -14.125192642211914
    7. 'cr' → logprob: -14.250192642211914
    8. 'create' → logprob: -14.500192642211914
    9. 'CREASE' → logprob: -14.750192642211914
    10. '(' → logprob: -14.875192642211914

Token 526: '(ind' (ID: 50964)
  Prédit: '(ind'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ind' → logprob: -3.128163257315464e-07
    2. '(' → logprob: -16.125
    3. 'ind' → logprob: -16.25
    4. '(indent' → logprob: -17.875
    5. '[ind' → logprob: -18.375
    6. ' (' → logprob: -18.375
    7. '(
' → logprob: -19.375
    8. ' ind' → logprob: -19.625
    9. '(idx' → logprob: -20.25
    10. '   ' → logprob: -21.0

Token 527: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7697225252486533e-06
    2. ' ,' → logprob: -13.125003814697266
    3. ')' → logprob: -13.875003814697266
    4. '+' → logprob: -15.375003814697266
    5. ',
' → logprob: -15.875003814697266
    6. '           ' → logprob: -16.125003814697266
    7. '(),' → logprob: -16.625003814697266
    8. '1' → logprob: -17.000003814697266
    9. '(' → logprob: -17.125003814697266
    10. '<|end|>' → logprob: -17.125003814697266

Token 528: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004884536610916257
    2. ' ' → logprob: -7.62548828125
    3. '   ' → logprob: -15.37548828125
    4. '           ' → logprob: -15.37548828125
    5. ')' → logprob: -17.87548828125
    6. '       ' → logprob: -18.00048828125
    7. '  ' → logprob: -18.00048828125
    8. '    ' → logprob: -18.62548828125
    9. '               ' → logprob: -19.00048828125
    10. '+' → logprob: -19.25048828125

Token 529: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013304755557328463
    2. ')
' → logprob: -6.626330375671387
    3. ')return' → logprob: -13.251330375671387
    4. ')

' → logprob: -14.126330375671387
    5. ' )' → logprob: -14.126330375671387
    6. '<|end|>' → logprob: -14.626330375671387
    7. '       ' → logprob: -15.376330375671387
    8. ')
' → logprob: -16.001331329345703
    9. '
' → logprob: -16.126331329345703
    10. '   ' → logprob: -16.376331329345703

Token 530: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2515910863876343
    2. '
' → logprob: -1.7515910863876343
    3. '<|end|>' → logprob: -3.626591205596924
    4. '   ' → logprob: -4.126591205596924
    5. '        
' → logprob: -5.876591205596924
    6. '    
' → logprob: -6.126591205596924
    7. ',' → logprob: -8.501590728759766
    8. ' return' → logprob: -8.501590728759766
    9. '  
' → logprob: -8.626590728759766
    10. 'return' → logprob: -9.001590728759766

Token 531: ' threshold' (ID: 24313)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032500813249498606
    2. 'return' → logprob: -6.5032501220703125
    3. '       ' → logprob: -6.7532501220703125
    4. '
' → logprob: -7.8782501220703125
    5. ' return' → logprob: -8.878250122070312
    6. '	return' → logprob: -10.378250122070312
    7. '    
' → logprob: -11.128250122070312
    8. '<|end|>' → logprob: -11.503250122070312
    9. '```' → logprob: -13.753250122070312
    10. ')' → logprob: -14.128250122070312

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.010361402295529842
    2. '=' → logprob: -4.635361194610596
    3. ',' → logprob: -8.135361671447754
    4. '<|end|>' → logprob: -8.760361671447754
    5. '_' → logprob: -10.135361671447754
    6. ' +=' → logprob: -10.760361671447754
    7. ')' → logprob: -10.885361671447754
    8. '   ' → logprob: -11.260361671447754
    9. ' ' → logprob: -11.510361671447754
    10. '    ' → logprob: -11.885361671447754

Token 533: ' -' (ID: 533)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.4632790684700012
    2. '(answer' → logprob: -1.4632790088653564
    3. '0' → logprob: -3.2132790088653564
    4. '(N' → logprob: -3.5882790088653564
    5. '(' → logprob: -3.5882790088653564
    6. 'N' → logprob: -3.7132790088653564
    7. '1' → logprob: -5.2132792472839355
    8. '((' → logprob: -6.2132792472839355
    9. '(b' → logprob: -6.2132792472839355
    10. '(B' → logprob: -6.4632792472839355

Token 534: '(-(' (ID: 174232)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.48211634159088135
    2. '1' → logprob: -1.4821163415908813
    3. '(-' → logprob: -2.357116222381592
    4. '(answer' → logprob: -3.732116222381592
    5. 'BIG' → logprob: -4.107116222381592
    6. '(' → logprob: -4.482116222381592
    7. '987' → logprob: -6.107116222381592
    8. '999' → logprob: -6.982116222381592
    9. '(~' → logprob: -7.232116222381592
    10. '(-(' → logprob: -7.482116222381592

Token 535: 'N' (ID: 45)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.018644064664840698
    2. 'N' → logprob: -4.268643856048584
    3. ' answer' → logprob: -5.643643856048584
    4. '   ' → logprob: -7.643643856048584
    5. '(answer' → logprob: -8.643644332885742
    6. ' N' → logprob: -9.268644332885742
    7. '(N' → logprob: -9.893644332885742
    8. ' (' → logprob: -10.018644332885742
    9. 'len' → logprob: -10.768644332885742
    10. '(' → logprob: -10.893644332885742

Token 536: '*(' (ID: 14793)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.39856094121932983
    2. ' +' → logprob: -2.0235610008239746
    3. ' //' → logprob: -2.5235610008239746
    4. '//' → logprob: -3.1485610008239746
    5. '*' → logprob: -4.023561000823975
    6. ')' → logprob: -4.148561000823975
    7. ' ' → logprob: -4.273561000823975
    8. ' *' → logprob: -4.523561000823975
    9. '   ' → logprob: -5.523561000823975
    10. '    ' → logprob: -6.523561000823975

Token 537: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.027769360691308975
    2. '(N' → logprob: -3.7777693271636963
    3. '2' → logprob: -5.527769565582275
    4. '1' → logprob: -9.402769088745117
    5. ' N' → logprob: -9.652769088745117
    6. '3' → logprob: -9.652769088745117
    7. '(' → logprob: -9.777769088745117
    8. '   ' → logprob: -9.902769088745117
    9. '100' → logprob: -10.277769088745117
    10. '10' → logprob: -10.277769088745117

Token 538: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.007178849074989557
    2. ' +' → logprob: -5.007178783416748
    3. '1' → logprob: -7.882178783416748
    4. '   ' → logprob: -10.632179260253906
    5. '-' → logprob: -11.132179260253906
    6. ')+' → logprob: -11.257179260253906
    7. ')' → logprob: -11.507179260253906
    8. '
' → logprob: -12.257179260253906
    9. '2' → logprob: -12.882179260253906
    10. '       ' → logprob: -13.007179260253906

Token 539: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. '2' → logprob: -11.875007629394531
    3. '3' → logprob: -15.375007629394531
    4. '   ' → logprob: -15.500007629394531
    5. '
' → logprob: -17.12500762939453
    6. '4' → logprob: -17.37500762939453
    7. '```' → logprob: -17.87500762939453
    8. '  ' → logprob: -18.12500762939453
    9. '       ' → logprob: -18.62500762939453
    10. '    ' → logprob: -18.75000762939453

Token 540: ')//' (ID: 60375)
  Prédit: ')//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')//' → logprob: -0.0046875146217644215
    2. ')' → logprob: -5.754687309265137
    3. '//' → logprob: -7.379687309265137
    4. ' )' → logprob: -7.629687309265137
    5. '))' → logprob: -8.379687309265137
    6. ')>>' → logprob: -8.754687309265137
    7. ' //' → logprob: -11.629687309265137
    8. '())' → logprob: -14.254687309265137
    9. '>>' → logprob: -14.254687309265137
    10. '   ' → logprob: -14.504687309265137

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.249780638725497e-05
    2. ' ' → logprob: -10.750032424926758
    3. '4' → logprob: -11.875032424926758
    4. '   ' → logprob: -13.250032424926758
    5. '1' → logprob: -13.875032424926758
    6. '
' → logprob: -14.250032424926758
    7. '  ' → logprob: -15.625032424926758
    8. '

' → logprob: -16.250032424926758
    9. '    ' → logprob: -16.250032424926758
    10. '3' → logprob: -16.625032424926758

Token 542: ')//' (ID: 60375)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5114367008209229
    2. ')//' → logprob: -1.5114367008209229
    3. ' //' → logprob: -2.011436700820923
    4. '//' → logprob: -3.511436700820923
    5. ' )' → logprob: -4.636436462402344
    6. ')>>' → logprob: -5.761436462402344
    7. '   ' → logprob: -7.636436462402344
    8. ' >>' → logprob: -7.886436462402344
    9. '+' → logprob: -8.136436462402344
    10. ' +' → logprob: -8.261436462402344

Token 543: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0034246123395860195
    2. '100' → logprob: -6.503424644470215
    3. ' ' → logprob: -7.253424644470215
    4. 'MOD' → logprob: -7.878424644470215
    5. '10' → logprob: -8.003424644470215
    6. '3' → logprob: -8.628424644470215
    7. 'x' → logprob: -9.628424644470215
    8. '200' → logprob: -10.253424644470215
    9. '4' → logprob: -10.503424644470215
    10. '20' → logprob: -10.628424644470215

Token 544: ')
' (ID: 446)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0669001340866089
    2. ' +' → logprob: -1.1919001340866089
    3. ')
' → logprob: -1.6919001340866089
    4. ')' → logprob: -1.8169001340866089
    5. '       ' → logprob: -5.566900253295898
    6. ')+' → logprob: -7.191900253295898
    7. '
' → logprob: -8.316900253295898
    8. ' -' → logprob: -8.316900253295898
    9. ' )
' → logprob: -9.316900253295898
    10. ' )' → logprob: -9.566900253295898

Token 545: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4161473214626312
    2. '       ' → logprob: -1.5411473512649536
    3. '   ' → logprob: -2.166147232055664
    4. ' return' → logprob: -5.291147232055664
    5. '<|end|>' → logprob: -5.791147232055664
    6. 'return' → logprob: -7.166147232055664
    7. '        
' → logprob: -7.416147232055664
    8. '    
' → logprob: -7.791147232055664
    9. ',' → logprob: -8.041147232055664
    10. '
' → logprob: -8.166147232055664

Token 546: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5883062481880188
    2. '       ' → logprob: -0.9633062481880188
    3. ' return' → logprob: -3.713306188583374
    4. 'return' (adapté à ' return') → logprob: -3.713306188583374
    5. '
' → logprob: -4.338306427001953
    6. ' if' → logprob: -7.213306427001953
    7. 'if' → logprob: -8.088306427001953
    8. '	return' → logprob: -10.088306427001953
    9. '        
' → logprob: -10.463306427001953
    10. '<|end|>' → logprob: -10.713306427001953

Token 547: ' answer' (ID: 6052)
  Prédit: 'answer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -0.023326419293880463
    2. ' answer' → logprob: -3.7733263969421387
    3. '(answer' → logprob: -9.523326873779297
    4. '	answer' → logprob: -12.398326873779297
    5. '   ' → logprob: -13.023326873779297
    6. 'ans' → logprob: -14.148326873779297
    7. ' ' → logprob: -15.398326873779297
    8. '(' → logprob: -15.773326873779297
    9. ' (' → logprob: -16.648326873779297
    10. '_answer' → logprob: -16.648326873779297

Token 548: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.009090050123631954
    2. '>=' → logprob: -4.759089946746826
    3. ' >' → logprob: -7.759089946746826
    4. '>' → logprob: -10.759090423583984
    5. ' ' → logprob: -11.509090423583984
    6. ' <' → logprob: -11.634090423583984
    7. ' <=' → logprob: -12.634090423583984
    8. '   ' → logprob: -13.259090423583984
    9. ' ' → logprob: -13.509090423583984
    10. '    ' → logprob: -14.509090423583984

Token 549: ' threshold' (ID: 24313)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.009760575369000435
    2. ' threshold' → logprob: -4.63476037979126
    3. '   ' → logprob: -12.884760856628418
    4. 'th' → logprob: -14.259760856628418
    5. '```' → logprob: -15.259760856628418
    6. ' ' → logprob: -15.384760856628418
    7. '       ' → logprob: -15.884760856628418
    8. '           ' → logprob: -16.0097599029541
    9. '(th' → logprob: -16.2597599029541
    10. '.threshold' → logprob: -16.2597599029541

Token 550: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.633891761302948
    2. '   ' → logprob: -1.0088918209075928
    3. '<|end|>' → logprob: -2.3838918209075928
    4. '    
' → logprob: -4.633891582489014
    5. '

' → logprob: -6.383891582489014
    6. '<|end|>' → logprob: -7.258891582489014
    7. 'return' → logprob: -9.508892059326172
    8. '  
' → logprob: -9.883892059326172
    9. '
    
' → logprob: -10.133892059326172
    10. ',
' → logprob: -10.133892059326172

Token 551: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7297689318656921
    2. '   ' → logprob: -0.8547689318656921
    3. '<|end|>' → logprob: -2.979768991470337
    4. 'def' → logprob: -3.604768991470337
    5. '    
' → logprob: -4.729768753051758
    6. ')' → logprob: -6.229768753051758
    7. 'return' → logprob: -6.854768753051758
    8. '

' → logprob: -7.229768753051758
    9. '```' → logprob: -7.229768753051758
    10. '<|end|>' → logprob: -8.729768753051758

Token 552: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19244031608104706
    2. 'print' (adapté à ' print') → logprob: -1.9424402713775635
    3. 'result' → logprob: -3.8174402713775635
    4. 'ans' → logprob: -5.942440509796143
    5. 'answer' → logprob: -6.192440509796143
    6. 'ok' → logprob: -6.817440509796143
    7. 'res' → logprob: -6.817440509796143
    8. '    
' → logprob: -6.942440509796143
    9. 'def' → logprob: -7.817440509796143
    10. 'mid' → logprob: -8.317440032958984

Token 553: '(b' (ID: 3229)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.901727557182312
    2. '('' → logprob: -1.151727557182312
    3. '(b' → logprob: -1.901727557182312
    4. '()' → logprob: -2.1517276763916016
    5. '(main' → logprob: -5.151727676391602
    6. '("' → logprob: -5.401727676391602
    7. '("("' → logprob: -7.651727676391602
    8. '("")' → logprob: -7.901727676391602
    9. '(*' → logprob: -8.151727676391602
    10. '(max' → logprob: -8.901727676391602

Token 554: 'search' (ID: 2624)
  Prédit: 'search'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'search' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.875000953674316
    3. '(search' → logprob: -14.875000953674316
    4. ')' → logprob: -16.5
    5. '_search' → logprob: -16.625
    6. 's' → logprob: -17.625
    7. 'se' → logprob: -18.125
    8. 'earch' → logprob: -19.375
    9. '(b' → logprob: -19.375
    10. '(s' → logprob: -19.625

Token 555: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2799462676048279
    2. '(B' → logprob: -1.5299463272094727
    3. '(max' → logprob: -3.9049463272094727
    4. '(N' → logprob: -5.779946327209473
    5. '(-' → logprob: -6.529946327209473
    6. '0' → logprob: -6.904946327209473
    7. '(min' → logprob: -8.154946327209473
    8. ')' → logprob: -8.279946327209473
    9. '((' → logprob: -8.279946327209473
    10. '(MAX' → logprob: -8.404946327209473

Token 556: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17849497497081757
    2. '1' → logprob: -2.303494930267334
    3. '-' → logprob: -3.178494930267334
    4. 'BIG' → logprob: -4.678494930267334
    5. 'max' → logprob: -5.303494930267334
    6. 'N' → logprob: -6.553494930267334
    7. 'MOD' → logprob: -6.928494930267334
    8. 'MAX' → logprob: -7.303494930267334
    9. 'min' → logprob: -7.428494930267334
    10. ' ' → logprob: -7.553494930267334

Token 557: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017350364942103624
    2. ',N' → logprob: -7.501735210418701
    3. ',B' → logprob: -7.501735210418701
    4. ',max' → logprob: -7.626735210418701
    5. ' ,' → logprob: -9.126734733581543
    6. '   ' → logprob: -12.001734733581543
    7. ',n' → logprob: -12.001734733581543
    8. '999' → logprob: -12.251734733581543
    9. ',M' → logprob: -12.501734733581543
    10. ',len' → logprob: -12.626734733581543

Token 558: ' int' (ID: 677)
  Prédit: 'BIG'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'BIG' → logprob: -0.1260075718164444
    2. '10' → logprob: -3.501007556915283
    3. 'MOD' → logprob: -3.876007556915283
    4. 'MAX' → logprob: -3.876007556915283
    5. 'max' → logprob: -4.251007556915283
    6. '100' → logprob: -4.876007556915283
    7. '987' → logprob: -5.001007556915283
    8. '0' → logprob: -5.376007556915283
    9. '-' → logprob: -5.501007556915283
    10. 'big' → logprob: -5.751007556915283

Token 559: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05289652198553085
    2. '(B' → logprob: -3.052896499633789
    3. '(max' → logprob: -6.677896499633789
    4. '(M' → logprob: -6.677896499633789
    5. '('' → logprob: -7.052896499633789
    6. '1' → logprob: -8.302896499633789
    7. '(-' → logprob: -8.927896499633789
    8. '(MAX' → logprob: -8.927896499633789
    9. '((' → logprob: -9.427896499633789
    10. '(sys' → logprob: -9.927896499633789

Token 560: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022073205560445786
    2. '(B' → logprob: -4.022073268890381
    3. '(max' → logprob: -5.897073268890381
    4. '(sys' → logprob: -7.522073268890381
    5. '(MAX' → logprob: -9.272072792053223
    6. '(-' → logprob: -9.272072792053223
    7. '(M' → logprob: -9.397072792053223
    8. '(min' → logprob: -9.522072792053223
    9. '((' → logprob: -9.897072792053223
    10. '1' → logprob: -9.897072792053223

Token 561: 'e' (ID: 68)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33792734146118164
    2. 'e' → logprob: -1.8379273414611816
    3. '(B' → logprob: -2.4629273414611816
    4. '1' → logprob: -3.5879273414611816
    5. '0' → logprob: -4.587927341461182
    6. '10' → logprob: -6.837927341461182
    7. '2' → logprob: -7.337927341461182
    8. 'B' → logprob: -7.837927341461182
    9. 'BIG' → logprob: -7.837927341461182
    10. ',' → logprob: -8.087926864624023

Token 562: '9' (ID: 24)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7137123346328735
    2. '18' → logprob: -1.3387123346328735
    3. '11' → logprob: -2.338712215423584
    4. '9' → logprob: -3.088712215423584
    5. '15' → logprob: -3.338712215423584
    6. '20' → logprob: -3.588712215423584
    7. '19' → logprob: -4.088712215423584
    8. '12' → logprob: -4.088712215423584
    9. '17' → logprob: -5.963712215423584
    10. '14' → logprob: -6.213712215423584

Token 563: ')' (ID: 8)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1434231996536255
    2. '))' → logprob: -2.018423080444336
    3. ' +' → logprob: -7.643423080444336
    4. ')' → logprob: -9.518423080444336
    5. '1' → logprob: -9.518423080444336
    6. ')+' → logprob: -9.518423080444336
    7. ' ))' → logprob: -11.518423080444336
    8. ')))' → logprob: -11.893423080444336
    9. '))
' → logprob: -12.143423080444336
    10. '```' → logprob: -12.393423080444336

Token 564: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3190622925758362
    2. '))' → logprob: -1.3190622329711914
    3. ',' → logprob: -5.819062232971191
    4. ')' → logprob: -6.694062232971191
    5. ' +' → logprob: -6.944062232971191
    6. ' ))' → logprob: -7.819062232971191
    7. '))
' → logprob: -9.944062232971191
    8. ')))' → logprob: -10.319062232971191
    9. '1' → logprob: -10.444062232971191
    10. ')+' → logprob: -10.694062232971191

Token 565: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07098997384309769
    2. '10' → logprob: -3.4459900856018066
    3. '9' → logprob: -3.4459900856018066
    4. '0' → logprob: -5.445990085601807
    5. '6' → logprob: -8.820989608764648
    6. '11' → logprob: -9.195989608764648
    7. '7' → logprob: -9.320989608764648
    8. '2' → logprob: -10.570989608764648
    9. '18' → logprob: -10.570989608764648
    10. '5' → logprob: -10.695989608764648

Token 566: '17' (ID: 1422)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038169484469108284
    2. '7' → logprob: -9.125381469726562
    3. '2' → logprob: -9.500381469726562
    4. '0' → logprob: -9.625381469726562
    5. '6' → logprob: -10.250381469726562
    6. '9' → logprob: -10.375381469726562
    7. '10' → logprob: -10.500381469726562
    8. '5' → logprob: -11.125381469726562
    9. '-' → logprob: -12.000381469726562
    10. '3' → logprob: -12.250381469726562

Token 567: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006746042985469103
    2. ')' → logprob: -5.0067458152771
    3. '))
' → logprob: -10.756746292114258
    4. ')))' → logprob: -12.506746292114258
    5. ' ))' → logprob: -13.006746292114258
    6. ')
' → logprob: -13.506746292114258
    7. '+' → logprob: -14.131746292114258
    8. ' ' → logprob: -15.131746292114258
    9. ' )' → logprob: -15.256746292114258
    10. '   ' → logprob: -15.506746292114258

Token 568: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.029924970120191574
    2. '__' → logprob: -3.5299248695373535
    3. '_name' → logprob: -9.029925346374512
    4. '_' → logprob: -10.154925346374512
    5. 'name' → logprob: -12.279925346374512
    6. ' ' → logprob: -12.279925346374512
    7. '___' → logprob: -13.029925346374512
    8. ' ' → logprob: -13.654925346374512
    9. ' _' → logprob: -13.779925346374512
    10. ' ' → logprob: -14.904925346374512

Token 570: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05345728620886803
    2. ' ==' → logprob: -3.178457260131836
    3. ' __' → logprob: -5.053457260131836
    4. '==' → logprob: -5.678457260131836
    5. 'name' → logprob: -8.928457260131836
    6. '__.__' → logprob: -9.428457260131836
    7. '__.' → logprob: -9.678457260131836
    8. '.__' → logprob: -9.678457260131836
    9. '=="' → logprob: -9.928457260131836
    10. '.' → logprob: -10.053457260131836

Token 571: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.6087021473795176e-05
    2. '==' → logprob: -10.500045776367188
    3. '_' → logprob: -12.000045776367188
    4. '____' → logprob: -12.625045776367188
    5. ' ==' → logprob: -12.875045776367188
    6. '___' → logprob: -13.000045776367188
    7. '__.__' → logprob: -13.375045776367188
    8. '=="' → logprob: -14.250045776367188
    9. '__
' → logprob: -14.625045776367188
    10. '__('' → logprob: -14.875045776367188

Token 572: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18046563863754272
    2. '__' → logprob: -2.3054656982421875
    3. '==' → logprob: -2.9304656982421875
    4. '=="' → logprob: -4.5554656982421875
    5. '=='' → logprob: -6.5554656982421875
    6. '__.__' → logprob: -10.805465698242188
    7. ' =="' → logprob: -10.930465698242188
    8. '==
' → logprob: -11.680465698242188
    9. '()==' → logprob: -11.805465698242188
    10. '_' → logprob: -11.805465698242188

Token 573: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16036203503608704
    2. '"' → logprob: -1.9103620052337646
    3. '__' → logprob: -9.035362243652344
    4. ' '__' → logprob: -11.535362243652344
    5. ' "__' → logprob: -11.785362243652344
    6. '('__' → logprob: -14.910362243652344
    7. ''\' → logprob: -15.535362243652344
    8. '`' → logprob: -15.660362243652344
    9. ''"' → logprob: -16.285362243652344
    10. ''s' → logprob: -16.535362243652344

Token 574: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0038209797348827124
    2. '__' → logprob: -5.628820896148682
    3. '"' → logprob: -9.37882137298584
    4. ''' → logprob: -9.50382137298584
    5. 'name' → logprob: -9.75382137298584
    6. '_main' → logprob: -13.50382137298584
    7. ' main' → logprob: -13.62882137298584
    8. ''m' → logprob: -15.50382137298584
    9. '==' → logprob: -16.128820419311523
    10. '-main' → logprob: -16.128820419311523

Token 575: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.13062673807144165
    2. '__' → logprob: -2.130626678466797
    3. '__':
' → logprob: -5.630626678466797
    4. '__:' → logprob: -9.380626678466797
    5. '():
' → logprob: -12.130626678466797
    6. '__["' → logprob: -12.380626678466797
    7. '__.' → logprob: -12.630626678466797
    8. '__.__' → logprob: -12.755626678466797
    9. '__
' → logprob: -13.880626678466797
    10. '_' → logprob: -14.005626678466797

Token 576: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6671232581138611
    2. '	main' → logprob: -1.2921233177185059
    3. 'main' → logprob: -1.6671233177185059
    4. ' main' → logprob: -3.792123317718506
    5. '    
' → logprob: -7.667123317718506
    6. '```' → logprob: -9.292122840881348
    7. '(main' → logprob: -9.542122840881348
    8. '
' → logprob: -10.292122840881348
    9. '<|end|>' → logprob: -10.417122840881348
    10. '_main' → logprob: -10.417122840881348

Token 577: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -0.00013333676906768233
    2. ' main' → logprob: -9.500133514404297
    3. '   ' → logprob: -10.000133514404297
    4. '	main' → logprob: -11.250133514404297
    5. '(main' → logprob: -17.750133514404297
    6. '_main' → logprob: -17.750133514404297
    7. 'import' → logprob: -17.750133514404297
    8. '.main' → logprob: -19.500133514404297
    9. ' ' → logprob: -19.875133514404297
    10. '  ' → logprob: -20.500133514404297

Token 578: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 576
Tokens correctement prédits (1ère position, stricte): 260
Tokens correctement prédits (1ère position, avec adaptation): 275
Tokens correctement prédits (top 10): 464
Précision stricte (1ère position): 45.14%
Précision adaptée (1ère position): 47.74%
Précision (top 10): 80.56%
================================================================================
