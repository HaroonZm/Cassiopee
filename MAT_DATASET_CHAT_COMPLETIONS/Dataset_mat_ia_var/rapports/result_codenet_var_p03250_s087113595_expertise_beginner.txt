================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
numbers = input().split()
for i in range(len(numbers)):
    numbers[i] = int(numbers[i])
numbers.sort()
result = 10 * numbers[2] + numbers[1] + numbers[0]
print(result)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'numbers' (ID: 85055)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027165452484041452
    2. ''' → logprob: -6.377716541290283
    3. '"' → logprob: -7.877716541290283
    4. '('' → logprob: -8.252717018127441
    5. '()' → logprob: -8.752717018127441
    6. '("("' → logprob: -9.877717018127441
    7. '`' → logprob: -10.252717018127441
    8. '[' → logprob: -10.627717018127441
    9. '```' → logprob: -10.627717018127441
    10. '(
' → logprob: -10.627717018127441

Token 4: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.3237164616584778
    2. '.split' → logprob: -1.448716402053833
    3. 'strip' → logprob: -3.823716402053833
    4. '.' → logprob: -4.823716640472412
    5. '.strip' → logprob: -4.823716640472412
    6. '()' → logprob: -6.323716640472412
    7. '.lower' → logprob: -6.948716640472412
    8. '```' → logprob: -8.573716163635254
    9. ' split' → logprob: -8.823716163635254
    10. '().' → logprob: -8.948716163635254

Token 5: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0060144755989313126
    2. '()' → logprob: -5.506014347076416
    3. '('' → logprob: -7.631014347076416
    4. '`' → logprob: -8.006014823913574
    5. '(
' → logprob: -8.131014823913574
    6. '```' → logprob: -8.381014823913574
    7. '"' → logprob: -8.756014823913574
    8. '(

' → logprob: -9.256014823913574
    9. ''' → logprob: -9.506014823913574
    10. '("("' → logprob: -9.631014823913574

Token 6: 'for' (ID: 1938)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5628992319107056
    2. 'for' → logprob: -1.3128992319107056
    3. 'print' → logprob: -2.812899112701416
    4. '[' → logprob: -3.062899112701416
    5. 'nums' → logprob: -4.312899112701416
    6. 'result' → logprob: -4.812899112701416
    7. 'n' → logprob: -5.187899112701416
    8. '.' → logprob: -5.312899112701416
    9. 'num' → logprob: -5.312899112701416
    10. '#' → logprob: -5.312899112701416

Token 7: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.014561965130269527
    2. ' i' → logprob: -4.639562129974365
    3. 'i' → logprob: -6.139562129974365
    4. '  ' → logprob: -7.514562129974365
    5. '_' → logprob: -7.639562129974365
    6. ' number' → logprob: -7.639562129974365
    7. 'n' → logprob: -7.889562129974365
    8. ' n' → logprob: -8.639561653137207
    9. 'number' → logprob: -8.764561653137207
    10. ' numbers' → logprob: -8.889561653137207

Token 8: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.37082377076148987
    2. 'in' → logprob: -1.2458237409591675
    3. 'n' → logprob: -4.370823860168457
    4. ' ' → logprob: -4.995823860168457
    5. ' n' → logprob: -6.370823860168457
    6. '  ' → logprob: -7.620823860168457
    7. ',' → logprob: -8.870823860168457
    8. ' ,' → logprob: -9.870823860168457
    9. '<|end|>' → logprob: -9.995823860168457
    10. '_' → logprob: -10.120823860168457

Token 9: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19477567076683044
    2. 'numbers' → logprob: -1.9447757005691528
    3. ' range' → logprob: -3.4447755813598633
    4. ' numbers' → logprob: -6.194775581359863
    5. '(numbers' → logprob: -13.069775581359863
    6. 'ranges' → logprob: -13.194775581359863
    7. 'n' → logprob: -13.319775581359863
    8. 'number' → logprob: -13.944775581359863
    9. ' ' → logprob: -14.694775581359863
    10. '(range' → logprob: -14.944775581359863

Token 10: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.47408273816108704
    2. '(' → logprob: -0.9740827083587646
    3. '(length' → logprob: -13.599082946777344
    4. '(
' → logprob: -14.099082946777344
    5. ' (' → logprob: -14.349082946777344
    6. '(int' → logprob: -14.474082946777344
    7. '(

' → logprob: -14.474082946777344
    8. 'len' → logprob: -14.599082946777344
    9. '((' → logprob: -14.724082946777344
    10. '(numbers' → logprob: -14.849082946777344

Token 11: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.001506528351455927
    2. '(' → logprob: -6.501506328582764
    3. 'numbers' → logprob: -12.501506805419922
    4. '(number' → logprob: -15.126506805419922
    5. '(n' → logprob: -15.626506805419922
    6. '(nums' → logprob: -17.251506805419922
    7. ' numbers' → logprob: -17.751506805419922
    8. '(
' → logprob: -18.126506805419922
    9. '(names' → logprob: -18.626506805419922
    10. ' (' → logprob: -18.751506805419922

Token 12: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.44085097312927246
    2. ')):' → logprob: -1.0658509731292725
    3. ')' → logprob: -5.315851211547852
    4. '))' → logprob: -5.440851211547852
    5. '[' → logprob: -6.190851211547852
    6. '[i' → logprob: -7.440851211547852
    7. ']):' → logprob: -9.815851211547852
    8. ')):
' → logprob: -10.565851211547852
    9. ':' → logprob: -10.940851211547852
    10. '   ' → logprob: -11.315851211547852

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2854619026184082
    2. ':' → logprob: -2.035461902618408
    3. '    ' → logprob: -3.035461902618408
    4. ' ' → logprob: -3.785461902618408
    5. '[' → logprob: -4.035461902618408
    6. ' :' → logprob: -4.785461902618408
    7. ' numbers' → logprob: -5.660461902618408
    8. 'numbers' → logprob: -6.035461902618408
    9. '"' → logprob: -6.160461902618408
    10. ' if' → logprob: -6.285461902618408

Token 14: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' (adapté à ' numbers') → logprob: -0.8070456385612488
    2. ' numbers' → logprob: -1.0570456981658936
    3. '   ' → logprob: -1.8070456981658936
    4. ' if' → logprob: -3.8070456981658936
    5. 'if' → logprob: -4.0570454597473145
    6. 'print' → logprob: -6.4320454597473145
    7. ' print' → logprob: -7.6820454597473145
    8. '    ' → logprob: -8.432045936584473
    9. 'for' → logprob: -8.932045936584473
    10. ' for' → logprob: -9.182045936584473

Token 15: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12722857296466827
    2. '[i' → logprob: -2.1272284984588623
    3. '[int' → logprob: -9.377228736877441
    4. '[...]' → logprob: -10.127228736877441
    5. '\[' → logprob: -10.377228736877441
    6. '[I' → logprob: -10.502228736877441
    7. '```' → logprob: -10.502228736877441
    8. '[:]' → logprob: -10.752228736877441
    9. '[in' → logprob: -11.502228736877441
    10. '.append' → logprob: -11.627228736877441

Token 16: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7020068168640137
    2. ']' → logprob: -0.7020068168640137
    3. ' )' → logprob: -5.952006816864014
    4. '=' → logprob: -6.327006816864014
    5. ']=' → logprob: -6.452006816864014
    6. ' ]' → logprob: -6.577006816864014
    7. ')=' → logprob: -7.202006816864014
    8. ' =' → logprob: -8.077007293701172
    9. '=int' → logprob: -9.077007293701172
    10. ']+=' → logprob: -10.077007293701172

Token 17: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018735451623797417
    2. ' =' → logprob: -4.018735408782959
    3. '=int' → logprob: -8.518735885620117
    4. '+=' → logprob: -8.643735885620117
    5. ')' → logprob: -10.018735885620117
    6. '+' → logprob: -10.143735885620117
    7. ' +=' → logprob: -10.393735885620117
    8. '[' → logprob: -10.643735885620117
    9. ']' → logprob: -11.143735885620117
    10. '.' → logprob: -11.643735885620117

Token 18: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20142921805381775
    2. ' int' → logprob: -1.7014292478561401
    3. 'float' → logprob: -11.57642936706543
    4. ' float' → logprob: -12.32642936706543
    5. '(int' → logprob: -14.20142936706543
    6. '=int' → logprob: -14.70142936706543
    7. '[int' → logprob: -15.45142936706543
    8. ']int' → logprob: -15.70142936706543
    9. '	int' → logprob: -16.32642936706543
    10. '   ' → logprob: -16.57642936706543

Token 19: '(numbers' (ID: 98592)
  Prédit: '(numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(numbers' → logprob: -0.5759488344192505
    2. '(' → logprob: -0.8259488344192505
    3. '("("' → logprob: -12.825948715209961
    4. '(n' → logprob: -13.325948715209961
    5. '(number' → logprob: -13.700948715209961
    6. ' (' → logprob: -13.950948715209961
    7. '(nums' → logprob: -14.075948715209961
    8. '('' → logprob: -14.825948715209961
    9. '(`' → logprob: -15.075948715209961
    10. '(

' → logprob: -15.075948715209961

Token 20: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -6.706686690449715e-05
    2. '[' → logprob: -9.750066757202148
    3. ')' → logprob: -11.750066757202148
    4. '[n' → logprob: -15.125066757202148
    5. ')[' → logprob: -15.750066757202148
    6. '[I' → logprob: -15.875066757202148
    7. ')i' → logprob: -16.00006675720215
    8. '[
' → logprob: -17.37506675720215
    9. ' [' → logprob: -18.12506675720215
    10. '(i' → logprob: -18.25006675720215

Token 21: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3875334560871124
    2. '))' → logprob: -1.13753342628479
    3. '])' → logprob: -7.387533664703369
    4. ')))' → logprob: -10.887533187866211
    5. ')])' → logprob: -11.762533187866211
    6. ')]' → logprob: -12.512533187866211
    7. ']' → logprob: -13.137533187866211
    8. ' )' → logprob: -13.262533187866211
    9. ']))' → logprob: -13.262533187866211
    10. '})' → logprob: -13.637533187866211

Token 22: 'numbers' (ID: 85055)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: '.sort' (ID: 19551)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4984174370765686
    2. '<|end|>' → logprob: -0.9984174370765686
    3. '```' → logprob: -5.123417377471924
    4. '.' → logprob: -5.123417377471924
    5. ')' → logprob: -5.748417377471924
    6. ']' → logprob: -6.248417377471924
    7. '#' → logprob: -6.498417377471924
    8. '<|end|>' → logprob: -6.623417377471924
    9. '\[' → logprob: -6.998417377471924
    10. '[:]' → logprob: -7.373417377471924

Token 24: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0021939214784651995
    2. '(' → logprob: -6.127193927764893
    3. '()`' → logprob: -12.502193450927734
    4. '();' → logprob: -13.752193450927734
    5. '().' → logprob: -14.002193450927734
    6. ' ()' → logprob: -14.377193450927734
    7. '())' → logprob: -14.627193450927734
    8. '()]' → logprob: -15.252193450927734
    9. '`()' → logprob: -15.502193450927734
    10. '()<' → logprob: -15.627193450927734

Token 25: 'result' (ID: 2521)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21850162744522095
    2. 'print' → logprob: -2.468501567840576
    3. '(' → logprob: -3.468501567840576
    4. '#' → logprob: -3.593501567840576
    5. ')' → logprob: -4.218501567840576
    6. ',' → logprob: -4.343501567840576
    7. '.' → logprob: -5.468501567840576
    8. '<|end|>' → logprob: -5.593501567840576
    9. '[
' → logprob: -5.718501567840576
    10. 'for' → logprob: -5.843501567840576

Token 26: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6981242299079895
    2. '_' → logprob: -1.8231241703033447
    3. '(' → logprob: -2.3231241703033447
    4. 's' → logprob: -2.4481241703033447
    5. ' =' → logprob: -2.8231241703033447
    6. '[:]' → logprob: -3.0731241703033447
    7. '[' → logprob: -3.3231241703033447
    8. '()' → logprob: -5.198124408721924
    9. '.' → logprob: -5.573124408721924
    10. '(s' → logprob: -6.698124408721924

Token 27: ' ' (ID: 220)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.10185009986162186
    2. '[]' → logprob: -2.7268500328063965
    3. ' numbers' → logprob: -3.9768500328063965
    4. ' []' → logprob: -4.4768500328063965
    5. '0' → logprob: -6.9768500328063965
    6. '(numbers' → logprob: -8.976850509643555
    7. '[' → logprob: -9.226850509643555
    8. '[n' → logprob: -9.851850509643555
    9. ' ' → logprob: -10.601850509643555
    10. '"' → logprob: -11.226850509643555

Token 28: '10' (ID: 702)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.014460458420217037
    2. '[]' → logprob: -4.264460563659668
    3. '0' → logprob: -8.639460563659668
    4. '(numbers' → logprob: -10.389460563659668
    5. 'sum' → logprob: -10.889460563659668
    6. '[n' → logprob: -11.014460563659668
    7. '[]
' → logprob: -11.139460563659668
    8. 'len' → logprob: -11.764460563659668
    9. 'str' → logprob: -11.889460563659668
    10. '[' → logprob: -11.889460563659668

Token 29: ' *' (ID: 425)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2336777150630951
    2. '*' → logprob: -2.858677625656128
    3. '0' → logprob: -3.108677625656128
    4. '%' → logprob: -3.358677625656128
    5. ' **' → logprob: -3.608677625656128
    6. '[' → logprob: -3.983677625656128
    7. '-' → logprob: -4.858677864074707
    8. ' *' → logprob: -5.358677864074707
    9. '+' → logprob: -5.733677864074707
    10. 'for' → logprob: -6.233677864074707

Token 30: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.06204935908317566
    2. ' numbers' → logprob: -2.812049388885498
    3. '(numbers' → logprob: -9.56204891204834
    4. 'number' → logprob: -13.06204891204834
    5. ' ' → logprob: -13.18704891204834
    6. 'len' → logprob: -13.18704891204834
    7. 'max' → logprob: -13.93704891204834
    8. '10' → logprob: -14.06204891204834
    9. 'n' → logprob: -14.18704891204834
    10. '0' → logprob: -14.56204891204834

Token 31: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1326650232076645
    2. '<|end|>' → logprob: -2.132664918899536
    3. '[:]' → logprob: -6.757665157318115
    4. '[i' → logprob: -6.757665157318115
    5. 's' → logprob: -7.507665157318115
    6. '[]' → logprob: -7.882665157318115
    7. '[s' → logprob: -7.882665157318115
    8. '[-' → logprob: -8.257664680480957
    9. '.' → logprob: -8.257664680480957
    10. '<|end|>' → logprob: -8.382664680480957

Token 32: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.43214985728263855
    2. '-' → logprob: -1.057149887084961
    3. '2' → logprob: -6.307149887084961
    4. '1' → logprob: -6.557149887084961
    5. '3' → logprob: -9.057149887084961
    6. ' -' → logprob: -10.182149887084961
    7. '4' → logprob: -10.807149887084961
    8. 'len' → logprob: -11.932149887084961
    9. ' ' → logprob: -12.057149887084961
    10. ']' → logprob: -12.682149887084961

Token 33: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.19800181686878204
    2. ')' → logprob: -1.8230018615722656
    3. '+' → logprob: -4.198001861572266
    4. ' +' → logprob: -6.573001861572266
    5. ' ]' → logprob: -7.073001861572266
    6. ' )' → logprob: -8.198001861572266
    7. ')]' → logprob: -8.323001861572266
    8. '[' → logprob: -9.198001861572266
    9. '-' → logprob: -9.573001861572266
    10. ' -' → logprob: -10.823001861572266

Token 34: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.030082643032073975
    2. '<|end|>' → logprob: -4.155082702636719
    3. '*' → logprob: -4.780082702636719
    4. ')' → logprob: -6.780082702636719
    5. '%' → logprob: -6.905082702636719
    6. '-' → logprob: -7.405082702636719
    7. '```' → logprob: -7.905082702636719
    8. '[' → logprob: -7.905082702636719
    9. '+
' → logprob: -8.030082702636719
    10. ' ' → logprob: -8.530082702636719

Token 35: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.011296910233795643
    2. ' numbers' → logprob: -4.51129674911499
    3. '5' → logprob: -9.011297225952148
    4. '1' → logprob: -10.261297225952148
    5. '9' → logprob: -10.636297225952148
    6. '7' → logprob: -10.761297225952148
    7. '(numbers' → logprob: -10.886297225952148
    8. ' ' → logprob: -11.261297225952148
    9. '4' → logprob: -12.261297225952148
    10. '10' → logprob: -12.886297225952148

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.8206473871250637e-05
    2. '3' → logprob: -11.125028610229492
    3. '[-' → logprob: -11.250028610229492
    4. '1' → logprob: -16.625028610229492
    5. '[len' → logprob: -16.750028610229492
    6. '```' → logprob: -16.750028610229492
    7. '[i' → logprob: -17.125028610229492
    8. '[
' → logprob: -18.750028610229492
    9. ' [' → logprob: -18.750028610229492
    10. '(' → logprob: -18.875028610229492

Token 37: '1' (ID: 16)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.37573501467704773
    2. '1' → logprob: -1.2507350444793701
    3. '0' → logprob: -3.62573504447937
    4. '4' → logprob: -8.75073528289795
    5. '5' → logprob: -9.50073528289795
    6. '2' → logprob: -10.25073528289795
    7. '-' → logprob: -11.50073528289795
    8. '6' → logprob: -12.25073528289795
    9. '7' → logprob: -12.81323528289795
    10. '```' → logprob: -13.12573528289795

Token 38: ']' (ID: 60)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2817700207233429
    2. ']' → logprob: -1.4067699909210205
    3. '*' → logprob: -8.156769752502441
    4. '}' → logprob: -9.656769752502441
    5. '']' → logprob: -10.031769752502441
    6. ')]' → logprob: -10.031769752502441
    7. '])' → logprob: -10.156769752502441
    8. '<|end|>' → logprob: -10.531769752502441
    9. '[' → logprob: -10.906769752502441
    10. '0' → logprob: -11.031769752502441

Token 39: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4813528060913086
    2. '
' → logprob: -1.7313528060913086
    3. '*' → logprob: -2.4813528060913086
    4. '<|end|>' → logprob: -2.6063528060913086
    5. 'print' → logprob: -4.481352806091309
    6. ')' → logprob: -4.856352806091309
    7. '+
' → logprob: -4.981352806091309
    8. '\n' → logprob: -5.606352806091309
    9. ' ' → logprob: -5.606352806091309
    10. '```' → logprob: -5.856352806091309

Token 40: ' numbers' (ID: 8663)
  Prédit: ' numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' numbers' → logprob: -0.14526012539863586
    2. 'numbers' → logprob: -2.0202600955963135
    3. '10' → logprob: -6.645260334014893
    4. ' ' → logprob: -6.895260334014893
    5. '(numbers' → logprob: -9.395259857177734
    6. '1' → logprob: -9.770259857177734
    7. '0' → logprob: -9.895259857177734
    8. ' (' → logprob: -10.895259857177734
    9. '20' → logprob: -11.957759857177734
    10. ' number' → logprob: -12.207759857177734

Token 41: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.186122770188376e-05
    2. '```' → logprob: -11.000091552734375
    3. '[-' → logprob: -11.125091552734375
    4. '\[' → logprob: -11.125091552734375
    5. '>[' → logprob: -12.250091552734375
    6. '__[' → logprob: -12.375091552734375
    7. ''[' → logprob: -12.375091552734375
    8. '[i' → logprob: -12.625091552734375
    9. '`' → logprob: -12.625091552734375
    10. '}[' → logprob: -12.625091552734375

Token 42: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005021584220230579
    2. '2' → logprob: -7.750502109527588
    3. ']' → logprob: -10.000502586364746
    4. '3' → logprob: -11.625502586364746
    5. '1' → logprob: -11.625502586364746
    6. ' ' → logprob: -12.125502586364746
    7. ':' → logprob: -13.625502586364746
    8. '[' → logprob: -15.125502586364746
    9. ':]' → logprob: -15.500502586364746
    10. '']' → logprob: -15.875502586364746

Token 43: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007223823573440313
    2. ']' → logprob: -5.007223606109619
    3. '}' → logprob: -8.007224082946777
    4. ' )' → logprob: -9.757224082946777
    5. '[' → logprob: -10.257224082946777
    6. ')}' → logprob: -10.757224082946777
    7. '```' → logprob: -11.007224082946777
    8. '*' → logprob: -11.632224082946777
    9. ')]' → logprob: -11.757224082946777
    10. '）' → logprob: -12.257224082946777

Token 44: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7492305040359497
    2. '<|end|>' → logprob: -1.6242305040359497
    3. '\n' → logprob: -2.12423038482666
    4. '+' → logprob: -3.12423038482666
    5. '
' → logprob: -3.49923038482666
    6. '(' → logprob: -3.87423038482666
    7. '\' → logprob: -3.87423038482666
    8. '*' → logprob: -3.99923038482666
    9. '%' → logprob: -4.24923038482666
    10. ' ' → logprob: -4.49923038482666

Token 45: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.505351095460355e-05
    2. '(result' → logprob: -10.125075340270996
    3. '("("' → logprob: -10.750075340270996
    4. '('' → logprob: -12.125075340270996
    5. '(numbers' → logprob: -12.500075340270996
    6. ' (' → logprob: -13.375075340270996
    7. '()' → logprob: -13.875075340270996
    8. '((' → logprob: -14.875075340270996
    9. '(
' → logprob: -15.125075340270996
    10. '(

' → logprob: -15.500075340270996

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. '))' → logprob: -14.500000953674316
    3. ' )' → logprob: -15.625000953674316
    4. '(' → logprob: -15.750000953674316
    5. '')' → logprob: -16.375001907348633
    6. '`)' → logprob: -17.125001907348633
    7. ')`' → logprob: -17.875001907348633
    8. ')
' → logprob: -18.000001907348633
    9. '#' → logprob: -18.500001907348633
    10. '[' → logprob: -18.500001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 44
Tokens correctement prédits (1ère position, stricte): 14
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 32
Précision stricte (1ère position): 31.82%
Précision adaptée (1ère position): 34.09%
Précision (top 10): 72.73%
================================================================================
