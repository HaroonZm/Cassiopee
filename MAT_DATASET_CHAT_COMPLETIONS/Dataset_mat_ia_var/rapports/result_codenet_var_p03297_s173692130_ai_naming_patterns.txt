================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
test_case_count = int(input())

def compute_gcd(value_left, value_right):
    remainder = value_left % value_right
    if remainder == 0:
        return value_right
    return compute_gcd(value_right, remainder)

def is_valid_configuration(limit_max, limit_min, threshold_min, threshold_max):
    if limit_min > limit_max or threshold_max < limit_min:
        return 0
    step_gcd = compute_gcd(limit_min, threshold_max)
    step_count = (limit_max - threshold_min - 1) // step_gcd
    candidate_value = limit_max - step_count * step_gcd
    if candidate_value - limit_min < 0:
        return 0
    return 1

for _ in range(test_case_count):
    input_a, input_b, input_c, input_d = map(int, input().split())
    is_possible = is_valid_configuration(input_a, input_b, input_c, input_d)
    print("Yes" if is_possible else "No")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'test' (ID: 3190)
  → Token d'amorce (pas de prédiction)

Token 1: '_case' (ID: 43667)
  → Token d'amorce (pas de prédiction)

Token 2: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4472084939479828
    2. '=' → logprob: -1.1972085237503052
    3. ' =' → logprob: -3.0722084045410156
    4. '```' → logprob: -5.447208404541016
    5. ')' → logprob: -5.822208404541016
    6. '.' → logprob: -6.822208404541016
    7. '+' → logprob: -7.072208404541016
    8. '*' → logprob: -7.322208404541016
    9. ':' → logprob: -7.447208404541016
    10. '[' → logprob: -8.322208404541016

Token 4: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007542853709310293
    2. '0' → logprob: -5.507543087005615
    3. '10' → logprob: -6.507543087005615
    4. '1' → logprob: -6.882543087005615
    5. '32' → logprob: -7.757543087005615
    6. '4' → logprob: -8.632542610168457
    7. '5' → logprob: -9.882542610168457
    8. '"' → logprob: -10.132542610168457
    9. '20' → logprob: -10.507542610168457
    10. '  ' → logprob: -10.632542610168457

Token 5: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0014438070356845856
    2. '```' → logprob: -7.126443862915039
    3. '`' → logprob: -9.376443862915039
    4. ''' → logprob: -9.376443862915039
    5. '(test' → logprob: -9.501443862915039
    6. '(user' → logprob: -9.626443862915039
    7. '_' → logprob: -9.876443862915039
    8. '()' → logprob: -9.876443862915039
    9. '(input' → logprob: -10.251443862915039
    10. ' (' → logprob: -10.501443862915039

Token 6: '())

' (ID: 27654)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.340178519487381
    2. '(' → logprob: -1.3401784896850586
    3. '()' → logprob: -3.9651784896850586
    4. '())' → logprob: -4.965178489685059
    5. '))' → logprob: -8.215178489685059
    6. '(
' → logprob: -9.715178489685059
    7. '')' → logprob: -9.965178489685059
    8. '```' → logprob: -10.215178489685059
    9. '")' → logprob: -10.590178489685059
    10. '('' → logprob: -10.715178489685059

Token 7: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8595195412635803
    2. '\n' → logprob: -0.9845195412635803
    3. '```' → logprob: -2.2345194816589355
    4. ':' → logprob: -3.3595194816589355
    5. ' for' → logprob: -4.1095194816589355
    6. '\' → logprob: -4.1095194816589355
    7. '
' → logprob: -4.4845194816589355
    8. 'while' → logprob: -5.8595194816589355
    9. '\r' → logprob: -6.2345194816589355
    10. '#' → logprob: -6.3595194816589355

Token 8: ' compute' (ID: 23864)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.23558902740478516
    2. ' test' → logprob: -1.7355890274047852
    3. ' space' → logprob: -3.610589027404785
    4. ' main' → logprob: -6.235589027404785
    5. ' process' → logprob: -6.860589027404785
    6. '_' → logprob: -7.610589027404785
    7. ' solution' → logprob: -7.860589027404785
    8. ' calculate' → logprob: -7.860589027404785
    9. ' add' → logprob: -8.485589027404785
    10. ' run' → logprob: -8.610589027404785

Token 9: '_g' (ID: 5439)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2034364640712738
    2. '(' → logprob: -1.7034364938735962
    3. ')' → logprob: -6.703436374664307
    4. '('_' → logprob: -9.328436851501465
    5. '(_)' → logprob: -9.328436851501465
    6. ' ' → logprob: -9.828436851501465
    7. '_factor' → logprob: -9.953436851501465
    8. '(_' → logprob: -10.078436851501465
    9. '("_' → logprob: -10.203436851501465
    10. ' _' → logprob: -10.328436851501465

Token 10: 'cd' (ID: 8301)
  Prédit: 'g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -0.9828141331672668
    2. 'r' → logprob: -0.9828141331672668
    3. 'cd' → logprob: -2.607814073562622
    4. 'a' → logprob: -2.732814073562622
    5. '_g' → logprob: -3.732814073562622
    6. 'raph' → logprob: -4.607814311981201
    7. 'roup' → logprob: -4.732814311981201
    8. 'nergy' → logprob: -5.107814311981201
    9. 'enerate' → logprob: -5.107814311981201
    10. '(g' → logprob: -5.232814311981201

Token 11: '(value' (ID: 6333)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.007736531086266041
    2. '_' → logprob: -5.132736682891846
    3. '(x' → logprob: -7.632736682891846
    4. '(a' → logprob: -7.632736682891846
    5. ' (' → logprob: -7.757736682891846
    6. ')' → logprob: -9.257736206054688
    7. '(_' → logprob: -9.507736206054688
    8. '(n' → logprob: -9.882736206054688
    9. '(_)' → logprob: -10.382736206054688
    10. ' ' → logprob: -10.757736206054688

Token 12: '_left' (ID: 22189)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16865019500255585
    2. ')' → logprob: -3.1686501502990723
    3. ',)' → logprob: -3.1686501502990723
    4. 's' → logprob: -3.2936501502990723
    5. '(' → logprob: -4.668650150299072
    6. ' ,' → logprob: -4.793650150299072
    7. '):' → logprob: -5.043650150299072
    8. 'a' → logprob: -5.918650150299072
    9. '(a' → logprob: -5.918650150299072
    10. '1' → logprob: -6.668650150299072

Token 13: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04800613969564438
    2. ')' → logprob: -3.548006057739258
    3. '):' → logprob: -4.798006057739258
    4. ' ,' → logprob: -5.798006057739258
    5. '_,' → logprob: -6.298006057739258
    6. ',)' → logprob: -6.548006057739258
    7. ',value' → logprob: -6.548006057739258
    8. '_' → logprob: -7.798006057739258
    9. ',_' → logprob: -7.923006057739258
    10. '_)' → logprob: -8.048006057739258

Token 14: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.16025307774543762
    2. 'value' → logprob: -1.9102530479431152
    3. ' ' → logprob: -11.285253524780273
    4. '	value' → logprob: -12.535253524780273
    5. ')' → logprob: -12.785253524780273
    6. '    ' → logprob: -13.035253524780273
    7. ')value' → logprob: -13.035253524780273
    8. '   ' → logprob: -13.535253524780273
    9. '```' → logprob: -14.410253524780273
    10. ' ' → logprob: -14.847753524780273

Token 15: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.00040540905320085585
    2. '_' → logprob: -8.125405311584473
    3. '_rhs' → logprob: -10.875405311584473
    4. '_r' → logprob: -11.125405311584473
    5. '_Right' → logprob: -11.375405311584473
    6. '_left' → logprob: -11.375405311584473
    7. ')_' → logprob: -11.500405311584473
    8. ')' → logprob: -11.875405311584473
    9. '_value' → logprob: -12.375405311584473
    10. '_middle' → logprob: -12.500405311584473

Token 16: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.012548504397273064
    2. ')' → logprob: -4.387548446655273
    3. ':' → logprob: -11.137548446655273
    4. ',' → logprob: -11.887548446655273
    5. '):
' → logprob: -12.012548446655273
    6. ' ):' → logprob: -12.012548446655273
    7. ')>' → logprob: -14.637548446655273
    8. '*' → logprob: -14.887548446655273
    9. '**' → logprob: -14.887548446655273
    10. '   ' → logprob: -14.887548446655273

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03564286231994629
    2. ':' → logprob: -3.5356428623199463
    3. ' ' → logprob: -6.785642623901367
    4. '):' → logprob: -6.785642623901367
    5. '```' → logprob: -6.785642623901367
    6. '(' → logprob: -7.660642623901367
    7. ' :' → logprob: -7.910642623901367
    8. '    
' → logprob: -8.285642623901367
    9. ')' → logprob: -8.410642623901367
    10. '       ' → logprob: -9.160642623901367

Token 18: ' remainder' (ID: 47056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008960334584116936
    2. '    ' → logprob: -6.133960247039795
    3. ' if' → logprob: -6.133960247039795
    4. ' ' → logprob: -6.758960247039795
    5. '       ' → logprob: -6.883960247039795
    6. '    
' → logprob: -7.383960247039795
    7. ' 
' → logprob: -7.758960247039795
    8. ' return' → logprob: -7.883960247039795
    9. '```' → logprob: -8.258960723876953
    10. 'if' → logprob: -9.133960723876953

Token 19: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00942265521734953
    2. '=' → logprob: -5.134422779083252
    3. ' ' → logprob: -5.884422779083252
    4. '_' → logprob: -7.634422779083252
    5. '  ' → logprob: -9.009422302246094
    6. ')' → logprob: -10.134422302246094
    7. 's' → logprob: -10.509422302246094
    8. ',' → logprob: -11.759422302246094
    9. '   ' → logprob: -12.134422302246094
    10. '_space' → logprob: -12.884422302246094

Token 20: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.005248579662293196
    2. 'value' → logprob: -5.255248546600342
    3. ' ' → logprob: -11.2552490234375
    4. '	value' → logprob: -14.1302490234375
    5. ' abs' → logprob: -14.6302490234375
    6. '  ' → logprob: -15.0052490234375
    7. '   ' → logprob: -15.8802490234375
    8. '(value' → logprob: -16.2552490234375
    9. 'abs' → logprob: -16.7552490234375
    10. '0' → logprob: -17.3802490234375

Token 21: '_left' (ID: 22189)
  Prédit: '_left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.09800825268030167
    2. '_right' → logprob: -2.598008155822754
    3. '_' → logprob: -3.973008155822754
    4. ' _' → logprob: -9.723008155822754
    5. '_s' → logprob: -11.723008155822754
    6. '_r' → logprob: -11.723008155822754
    7. ' ' → logprob: -11.973008155822754
    8. '_value' → logprob: -12.098008155822754
    9. '_)' → logprob: -12.223008155822754
    10. 's' → logprob: -12.848008155822754

Token 22: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.0005334943416528404
    2. '%' → logprob: -7.625533580780029
    3. ' ' → logprob: -10.000533103942871
    4. ' %
' → logprob: -16.875534057617188
    5. ' ' → logprob: -17.625534057617188
    6. ')' → logprob: -18.000534057617188
    7. ' %

' → logprob: -18.000534057617188
    8. '%i' → logprob: -18.125534057617188
    9. ' %)' → logprob: -18.500534057617188
    10. '%s' → logprob: -19.000534057617188

Token 23: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.011048408225178719
    2. ' value' → logprob: -4.511048316955566
    3. ' ' → logprob: -14.636048316955566
    4. '   ' → logprob: -16.636049270629883
    5. '"value' → logprob: -17.136049270629883
    6. '_value' → logprob: -17.636049270629883
    7. '	value' → logprob: -17.761049270629883
    8. 'alue' → logprob: -17.886049270629883
    9. ''value' → logprob: -18.511049270629883
    10. '  ' → logprob: -18.511049270629883

Token 24: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0009621966164559126
    2. '_' → logprob: -7.375962257385254
    3. 'right' → logprob: -8.375962257385254
    4. '_rhs' → logprob: -10.375962257385254
    5. '_RIGHT' → logprob: -10.875962257385254
    6. '_value' → logprob: -11.000962257385254
    7. 'value' → logprob: -11.625962257385254
    8. '_left' → logprob: -11.625962257385254
    9. '_s' → logprob: -12.125962257385254
    10. ' ' → logprob: -13.625962257385254

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023032892495393753
    2. '
' → logprob: -4.8980326652526855
    3. '    
' → logprob: -5.0230326652526855
    4. '\n' → logprob: -5.2730326652526855
    5. '<|end|>' → logprob: -6.8980326652526855
    6. '```' → logprob: -7.1480326652526855
    7. ')' → logprob: -8.273033142089844
    8. ' 
' → logprob: -8.273033142089844
    9. '   
' → logprob: -8.398033142089844
    10. ' ' → logprob: -8.398033142089844

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28954559564590454
    2. '
' → logprob: -1.5395455360412598
    3. '    
' → logprob: -3.9145455360412598
    4. '<|end|>' → logprob: -4.91454553604126
    5. ' if' → logprob: -5.78954553604126
    6. '```' → logprob: -6.78954553604126
    7. ' while' → logprob: -6.91454553604126
    8. '   
' → logprob: -7.03954553604126
    9. ' 
' → logprob: -7.16454553604126
    10. '\n' → logprob: -7.28954553604126

Token 27: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014171031303703785
    2. ' if' → logprob: -5.264171123504639
    3. 'if' (adapté à ' if') → logprob: -6.139171123504639
    4. '\n' → logprob: -6.139171123504639
    5. '    
' → logprob: -6.139171123504639
    6. ' while' → logprob: -7.014171123504639
    7. 'while' → logprob: -7.514171123504639
    8. '
' → logprob: -8.38917064666748
    9. ' ' → logprob: -8.38917064666748
    10. '   
' → logprob: -9.13917064666748

Token 28: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -2.8921695047756657e-05
    2. 're' → logprob: -10.500028610229492
    3. ' re' → logprob: -14.250028610229492
    4. ' not' → logprob: -14.500028610229492
    5. ' ' → logprob: -16.500028610229492
    6. ' value' → logprob: -17.500028610229492
    7. '	re' → logprob: -17.625028610229492
    8. ' rest' → logprob: -17.875028610229492
    9. 'rema' → logprob: -19.250028610229492
    10. 'rem' → logprob: -19.625028610229492

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.024927673861384392
    2. ' !=' → logprob: -4.024927616119385
    3. '==' → logprob: -5.024927616119385
    4. '!=' → logprob: -9.524928092956543
    5. ':' → logprob: -9.899928092956543
    6. ' >' → logprob: -10.524928092956543
    7. '>' → logprob: -10.899928092956543
    8. ' ' → logprob: -11.649928092956543
    9. ' =' → logprob: -13.149928092956543
    10. '=' → logprob: -13.899928092956543

Token 30: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31326204538345337
    2. ' ' → logprob: -1.3132619857788086
    3. '   ' → logprob: -15.688261985778809
    4. ' ' → logprob: -16.063262939453125
    5. '>' → logprob: -18.313262939453125
    6. '1' → logprob: -18.375762939453125
    7. '```' → logprob: -18.875762939453125
    8. ' ' → logprob: -18.938262939453125
    9. '  ' → logprob: -19.063262939453125
    10. '۰' → logprob: -19.313262939453125

Token 31: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4855663721391466e-05
    2. ' ' → logprob: -11.125015258789062
    3. '۰' → logprob: -17.625015258789062
    4. '   ' → logprob: -18.375015258789062
    5. '000' → logprob: -18.625015258789062
    6. '०' → logprob: -18.875015258789062
    7. '00' → logprob: -19.125015258789062
    8. 'zero' → logprob: -19.250015258789062
    9. '٠' → logprob: -19.375015258789062
    10. '０' → logprob: -19.812515258789062

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027534032706171274
    2. ':
' → logprob: -6.502753257751465
    3. ':return' → logprob: -6.752753257751465
    4. '   ' → logprob: -9.627753257751465
    5. '):' → logprob: -12.377753257751465
    6. '       ' → logprob: -12.627753257751465
    7. ' :' → logprob: -12.752753257751465
    8. ',' → logprob: -13.002753257751465
    9. ' return' → logprob: -14.127753257751465
    10. '):
' → logprob: -14.252753257751465

Token 33: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3401777446269989
    2. '       ' → logprob: -1.3401777744293213
    3. ' return' → logprob: -3.9651777744293213
    4. 'return' → logprob: -5.090177536010742
    5. 'value' → logprob: -7.715177536010742
    6. ' value' → logprob: -7.840177536010742
    7. '	return' → logprob: -8.590177536010742
    8. '
' → logprob: -9.465177536010742
    9. '    
' → logprob: -9.590177536010742
    10. ':return' → logprob: -9.965177536010742

Token 34: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5943743586540222
    2. ' return' → logprob: -1.219374418258667
    3. 'return' (adapté à ' return') → logprob: -1.969374418258667
    4. '   ' → logprob: -4.344374179840088
    5. '	return' → logprob: -9.219374656677246
    6. ':return' → logprob: -11.094374656677246
    7. '    ' → logprob: -11.219374656677246
    8. ' ' → logprob: -11.969374656677246
    9. '_return' → logprob: -12.594374656677246
    10. '     ' → logprob: -12.969374656677246

Token 35: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.029750484973192215
    2. ' value' → logprob: -3.5297505855560303
    3. 'alue' → logprob: -17.15475082397461
    4. '"value' → logprob: -17.77975082397461
    5. '_value' → logprob: -18.27975082397461
    6. '	value' → logprob: -18.65475082397461
    7. 'Value' → logprob: -18.77975082397461
    8. ')value' → logprob: -19.15475082397461
    9. ''value' → logprob: -19.27975082397461
    10. '$value' → logprob: -19.40475082397461

Token 36: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.005554959177970886
    2. 'value' → logprob: -5.380555152893066
    3. '_left' → logprob: -7.380555152893066
    4. 'right' → logprob: -8.880555152893066
    5. '_value' → logprob: -9.630555152893066
    6. '_' → logprob: -9.755555152893066
    7. '_rhs' → logprob: -11.380555152893066
    8. '_RIGHT' → logprob: -11.630555152893066
    9. '```' → logprob: -12.005555152893066
    10. '_r' → logprob: -12.505555152893066

Token 37: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02814634144306183
    2. '    
' → logprob: -3.653146266937256
    3. '
' → logprob: -6.528146266937256
    4. '   
' → logprob: -9.403146743774414
    5. '<|end|>' → logprob: -9.528146743774414
    6. '  
' → logprob: -9.653146743774414
    7. '```' → logprob: -9.903146743774414
    8. 'else' → logprob: -10.403146743774414
    9. 'return' → logprob: -10.403146743774414
    10. '    
' → logprob: -12.028146743774414

Token 38: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002900451421737671
    2. '    
' → logprob: -5.87790060043335
    3. '
' → logprob: -10.627900123596191
    4. '```' → logprob: -11.002900123596191
    5. '<|end|>' → logprob: -11.127900123596191
    6. 'else' → logprob: -11.377900123596191
    7. '   
' → logprob: -11.752900123596191
    8. '  
' → logprob: -12.002900123596191
    9. 'return' → logprob: -12.127900123596191
    10. ' else' → logprob: -13.627900123596191

Token 39: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027604354545474052
    2. '    
' → logprob: -4.277604579925537
    3. 'else' → logprob: -5.402604579925537
    4. 'return' (adapté à ' return') → logprob: -5.777604579925537
    5. '
' → logprob: -5.902604579925537
    6. ' else' → logprob: -6.527604579925537
    7. '   
' → logprob: -7.777604579925537
    8. '  
' → logprob: -7.902604579925537
    9. ' return' → logprob: -8.152604103088379
    10. ' 
' → logprob: -9.152604103088379

Token 40: ' compute' (ID: 23864)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.01814994215965271
    2. ' compute' → logprob: -4.0181498527526855
    3. '_compute' → logprob: -17.268150329589844
    4. '.compute' → logprob: -17.768150329589844
    5. 'com' → logprob: -19.018150329589844
    6. 'computer' → logprob: -19.393150329589844
    7. 'comput' → logprob: -19.393150329589844
    8. 'value' → logprob: -21.018150329589844
    9. 'calculate' → logprob: -21.393150329589844
    10. '```' → logprob: -21.768150329589844

Token 41: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -4.215330409351736e-05
    2. '_' → logprob: -10.125041961669922
    3. '```' → logprob: -14.250041961669922
    4. ' _' → logprob: -14.875041961669922
    5. 'g' → logprob: -15.375041961669922
    6. '_r' → logprob: -15.875041961669922
    7. '_G' → logprob: -16.000041961669922
    8. '\' → logprob: -17.000041961669922
    9. 'ed' → logprob: -17.125041961669922
    10. '_gr' → logprob: -17.125041961669922

Token 42: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00024727347772568464
    2. '_cd' → logprob: -8.37524700164795
    3. '_c' → logprob: -12.00024700164795
    4. 'CD' → logprob: -12.75024700164795
    5. 'value' → logprob: -13.00024700164795
    6. 'c' → logprob: -13.12524700164795
    7. 'cdn' → logprob: -13.12524700164795
    8. '(value' → logprob: -14.75024700164795
    9. '_value' → logprob: -14.87524700164795
    10. 'Cd' → logprob: -15.75024700164795

Token 43: '(value' (ID: 6333)
  Prédit: '(value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(value' → logprob: -0.47950881719589233
    2. '(' → logprob: -0.9795088171958923
    3. '(re' → logprob: -5.229508876800537
    4. '(rem' → logprob: -10.979508399963379
    5. '(rest' → logprob: -11.604508399963379
    6. '(return' → logprob: -12.104508399963379
    7. '(
' → logprob: -12.229508399963379
    8. '((' → logprob: -12.354508399963379
    9. ' (' → logprob: -12.729508399963379
    10. '(user' → logprob: -12.729508399963379

Token 44: '_right' (ID: 24402)
  Prédit: '_right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_right' → logprob: -0.0036857128143310547
    2. '_,' → logprob: -5.75368595123291
    3. 'Right' → logprob: -8.62868595123291
    4. ',' → logprob: -9.50368595123291
    5. '_' → logprob: -9.50368595123291
    6. 'right' → logprob: -10.00368595123291
    7. '_RIGHT' → logprob: -10.37868595123291
    8. '_left' → logprob: -10.87868595123291
    9. '```' → logprob: -11.12868595123291
    10. '_re' → logprob: -11.37868595123291

Token 45: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002512071805540472
    2. ' ,' → logprob: -8.375250816345215
    3. ',re' → logprob: -10.875250816345215
    4. 're' → logprob: -14.375250816345215
    5. ',
' → logprob: -14.500250816345215
    6. '   ' → logprob: -15.500250816345215
    7. '```' → logprob: -16.37525177001953
    8. ' remainder' → logprob: -16.50025177001953
    9. '`,' → logprob: -16.75025177001953
    10. ',r' → logprob: -17.50025177001953

Token 46: ' remainder' (ID: 47056)
  Prédit: 're'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 're' → logprob: -0.023246875032782555
    2. ' remainder' → logprob: -3.7732467651367188
    3. 'rest' → logprob: -14.898246765136719
    4. ' re' → logprob: -15.023246765136719
    5. 'rem' → logprob: -15.398246765136719
    6. '	re' → logprob: -15.773246765136719
    7. 'r' → logprob: -16.14824676513672
    8. ')' → logprob: -16.14824676513672
    9. 'rema' → logprob: -16.39824676513672
    10. '   ' → logprob: -16.52324676513672

Token 47: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ')
' → logprob: -16.0
    3. ' )' → logprob: -16.75
    4. '))' → logprob: -19.25
    5. '),' → logprob: -19.625
    6. ')`' → logprob: -19.625
    7. ')

' → logprob: -20.125
    8. ')return' → logprob: -20.25
    9. '   ' → logprob: -20.375
    10. '`)' → logprob: -20.75

Token 48: 'def' (ID: 1314)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.995397365652025e-05
    2. '\n' → logprob: -9.875089645385742
    3. '
' → logprob: -11.750089645385742
    4. ' for' → logprob: -11.750089645385742
    5. '```' → logprob: -11.875089645385742
    6. 'result' → logprob: -12.250089645385742
    7. 'n' → logprob: -12.375089645385742
    8. '\' → logprob: -13.375089645385742
    9. '    
' → logprob: -13.500089645385742
    10. '  
' → logprob: -13.875089645385742

Token 49: ' is' (ID: 382)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.2846393585205078
    2. ' find' → logprob: -2.409639358520508
    3. ' solve' → logprob: -3.034639358520508
    4. ' test' → logprob: -3.284639358520508
    5. ' calculate' → logprob: -3.284639358520508
    6. ' main' → logprob: -4.034639358520508
    7. ' l' → logprob: -5.534639358520508
    8. ' gcd' → logprob: -5.784639358520508
    9. ' ' → logprob: -6.659639358520508
    10. ' process' → logprob: -6.909639358520508

Token 50: '_valid' (ID: 23321)
  Prédit: '_pal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pal' → logprob: -0.6400439143180847
    2. '_prime' → logprob: -1.1400439739227295
    3. '_' → logprob: -2.7650439739227295
    4. '_div' → logprob: -3.1400439739227295
    5. '_even' → logprob: -3.8900439739227295
    6. '_per' → logprob: -5.39004373550415
    7. '_h' → logprob: -5.64004373550415
    8. '_power' → logprob: -6.01504373550415
    9. '_valid' → logprob: -6.01504373550415
    10. '_possible' → logprob: -6.14004373550415

Token 51: '_configuration' (ID: 86722)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04049503803253174
    2. '_' → logprob: -3.540494918823242
    3. '_parent' → logprob: -5.165494918823242
    4. '_number' → logprob: -6.040494918823242
    5. '_div' → logprob: -7.290494918823242
    6. '_(' → logprob: -8.415494918823242
    7. '(number' → logprob: -9.165494918823242
    8. '_user' → logprob: -9.165494918823242
    9. '(value' → logprob: -9.415494918823242
    10. '_valid' → logprob: -9.415494918823242

Token 52: '(limit' (ID: 112473)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004622137639671564
    2. '(value' → logprob: -5.754621982574463
    3. ' (' → logprob: -7.129621982574463
    4. '(configuration' → logprob: -8.379622459411621
    5. '(config' → logprob: -9.379622459411621
    6. '(user' → logprob: -9.879622459411621
    7. '(def' → logprob: -10.629622459411621
    8. '(s' → logprob: -10.629622459411621
    9. '(input' → logprob: -10.629622459411621
    10. '(com' → logprob: -11.254622459411621

Token 53: '_max' (ID: 13731)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1823590099811554
    2. '):' → logprob: -1.807358980178833
    3. ' ,' → logprob: -6.932359218597412
    4. ')' → logprob: -7.557359218597412
    5. ' ):' → logprob: -8.057358741760254
    6. '_value' → logprob: -8.432358741760254
    7. ',value' → logprob: -8.682358741760254
    8. '_,' → logprob: -9.432358741760254
    9. '_' → logprob: -10.057358741760254
    10. '_count' → logprob: -10.932358741760254

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12238359451293945
    2. '):' → logprob: -2.3723835945129395
    3. ')' → logprob: -4.1223835945129395
    4. ' ,' → logprob: -6.3723835945129395
    5. ',value' → logprob: -7.1223835945129395
    6. '_' → logprob: -7.4973835945129395
    7. '_,' → logprob: -7.4973835945129395
    8. '_value' → logprob: -8.247383117675781
    9. ' ):' → logprob: -8.497383117675781
    10. ',)' → logprob: -8.497383117675781

Token 55: ' limit' (ID: 5967)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -1.1679178476333618
    2. ' limit' → logprob: -1.7929178476333618
    3. ' current' → logprob: -2.0429177284240723
    4. 'value' → logprob: -2.2929177284240723
    5. 'limit' → logprob: -2.9179177284240723
    6. ' configuration' → logprob: -3.6679177284240723
    7. ' number' → logprob: -3.9179177284240723
    8. 'current' → logprob: -4.042917728424072
    9. ' config' → logprob: -4.167917728424072
    10. ' values' → logprob: -4.292917728424072

Token 56: '_min' (ID: 15950)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5642167329788208
    2. '_count' → logprob: -1.5642167329788208
    3. '_value' → logprob: -1.8142167329788208
    4. '_current' → logprob: -2.6892166137695312
    5. '_min' → logprob: -2.6892166137695312
    6. '_max' → logprob: -2.8142166137695312
    7. ')' → logprob: -2.9392166137695312
    8. '_left' → logprob: -3.4392166137695312
    9. '_lower' → logprob: -3.6892166137695312
    10. '_valid' → logprob: -3.8142166137695312

Token 57: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11316482722759247
    2. ',' → logprob: -2.2381649017333984
    3. ' ):' → logprob: -8.863164901733398
    4. ')' → logprob: -9.363164901733398
    5. ' ,' → logprob: -10.113164901733398
    6. '   ' → logprob: -10.738164901733398
    7. ':' → logprob: -11.863164901733398
    8. '):
' → logprob: -12.238164901733398
    9. '_' → logprob: -12.613164901733398
    10. ' ' → logprob: -12.738164901733398

Token 58: ' threshold' (ID: 24313)
  Prédit: ' value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.8284069895744324
    2. ' current' → logprob: -2.328407049179077
    3. ' limit' → logprob: -2.328407049179077
    4. 'value' → logprob: -3.453407049179077
    5. ' target' → logprob: -3.578407049179077
    6. ' number' → logprob: -3.953407049179077
    7. ' count' → logprob: -4.078406810760498
    8. ' total' → logprob: -4.328406810760498
    9. ' step' → logprob: -4.328406810760498
    10. ' values' → logprob: -4.328406810760498

Token 59: '_min' (ID: 15950)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.003865873673930764
    2. '_' → logprob: -6.253865718841553
    3. '_threshold' → logprob: -7.378865718841553
    4. ' ):' → logprob: -7.628865718841553
    5. ',' → logprob: -7.878865718841553
    6. ')' → logprob: -8.628866195678711
    7. '=' → logprob: -10.003866195678711
    8. '_max' → logprob: -10.128866195678711
    9. '_limit' → logprob: -10.503866195678711
    10. '_value' → logprob: -10.628866195678711

Token 60: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006891435012221336
    2. ',' → logprob: -5.256891250610352
    3. ')' → logprob: -6.506891250610352
    4. ' ):' → logprob: -9.631891250610352
    5. '_' → logprob: -10.381891250610352
    6. '):
' → logprob: -11.006891250610352
    7. ':' → logprob: -11.131891250610352
    8. '=' → logprob: -11.381891250610352
    9. ' ' → logprob: -12.256891250610352
    10. '   ' → logprob: -13.006891250610352

Token 61: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.5271517634391785
    2. ' value' → logprob: -2.4021518230438232
    3. 'threshold' → logprob: -2.4021518230438232
    4. ' limit' → logprob: -2.5271518230438232
    5. ' current' → logprob: -3.4021518230438232
    6. ' target' → logprob: -3.9021518230438232
    7. 'value' → logprob: -4.152151584625244
    8. 'limit' → logprob: -4.527151584625244
    9. ' total' → logprob: -5.214651584625244
    10. ' max' → logprob: -5.527151584625244

Token 62: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.06325627863407135
    2. '_threshold' → logprob: -3.18825626373291
    3. '_' → logprob: -4.81325626373291
    4. ')' → logprob: -5.68825626373291
    5. '_valid' → logprob: -5.68825626373291
    6. '_value' → logprob: -6.56325626373291
    7. '_limit' → logprob: -7.31325626373291
    8. ',' → logprob: -7.56325626373291
    9. '_min' → logprob: -7.68825626373291
    10. '_val' → logprob: -8.56325626373291

Token 63: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007378002628684044
    2. ',' → logprob: -7.37573766708374
    3. ')' → logprob: -9.750738143920898
    4. ' ):' → logprob: -10.500738143920898
    5. ':' → logprob: -10.875738143920898
    6. '   ' → logprob: -13.125738143920898
    7. '):
' → logprob: -13.875738143920898
    8. '=' → logprob: -14.125738143920898
    9. ' ' → logprob: -14.375738143920898
    10. '():' → logprob: -14.750738143920898

Token 64: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34146779775619507
    2. '   ' → logprob: -1.3414678573608398
    3. '):' → logprob: -4.71646785736084
    4. '():' → logprob: -5.34146785736084
    5. '(' → logprob: -5.46646785736084
    6. '<|end|>' → logprob: -5.59146785736084
    7. ')' → logprob: -6.09146785736084
    8. ':return' → logprob: -7.21646785736084
    9. ' (' → logprob: -7.46646785736084
    10. ' return' → logprob: -7.71646785736084

Token 65: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3973512351512909
    2. ' return' → logprob: -1.6473512649536133
    3. ' limit' → logprob: -2.2723512649536133
    4. ' if' → logprob: -4.397351264953613
    5. ' for' → logprob: -4.897351264953613
    6. '    ' → logprob: -4.897351264953613
    7. 'limit' → logprob: -7.272351264953613
    8. '(limit' → logprob: -7.397351264953613
    9. '    
' → logprob: -7.522351264953613
    10. 'return' → logprob: -7.772351264953613

Token 66: ' limit' (ID: 5967)
  Prédit: ' limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.03158659115433693
    2. ' threshold' → logprob: -3.5315866470336914
    3. 'limit' → logprob: -7.156586647033691
    4. ' (' → logprob: -7.406586647033691
    5. '(limit' → logprob: -7.906586647033691
    6. 'threshold' → logprob: -10.156586647033691
    7. ' max' → logprob: -10.781586647033691
    8. ' ' → logprob: -11.531586647033691
    9. ' len' → logprob: -12.906586647033691
    10. ' not' → logprob: -13.281586647033691

Token 67: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.00012237003829795867
    2. '_min' → logprob: -9.5001220703125
    3. '_' → logprob: -10.0001220703125
    4. ' _' → logprob: -13.3751220703125
    5. '__' → logprob: -14.6251220703125
    6. '_m' → logprob: -17.6251220703125
    7. '_MAX' → logprob: -18.2501220703125
    8. 'max' → logprob: -18.3751220703125
    9. '_ma' → logprob: -18.6251220703125
    10. '_

' → logprob: -18.7501220703125

Token 68: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5297141671180725
    2. ' <=' → logprob: -1.5297141075134277
    3. '>' → logprob: -2.1547141075134277
    4. ' <' → logprob: -3.2797141075134277
    5. ' >=' → logprob: -3.5297141075134277
    6. '<=' → logprob: -4.779714107513428
    7. '<' → logprob: -6.279714107513428
    8. '>=' → logprob: -6.654714107513428
    9. ' ' → logprob: -9.279714584350586
    10. ' ==' → logprob: -10.654714584350586

Token 69: ' limit' (ID: 5967)
  Prédit: 'threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'threshold' → logprob: -0.3941833972930908
    2. ' threshold' → logprob: -1.7691833972930908
    3. 'limit' → logprob: -2.144183397293091
    4. ' limit' → logprob: -3.269183397293091
    5. 'th' → logprob: -10.769183158874512
    6. '=' → logprob: -11.144183158874512
    7. 'reshold' → logprob: -11.644183158874512
    8. 'lim' → logprob: -11.644183158874512
    9. ' ' → logprob: -11.894183158874512
    10. '0' → logprob: -12.206683158874512

Token 70: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0012304692063480616
    2. '_min' → logprob: -6.751230239868164
    3. '_' → logprob: -9.751230239868164
    4. 'max' → logprob: -14.001230239868164
    5. ' _' → logprob: -15.251230239868164
    6. 'Max' → logprob: -15.501230239868164
    7. '__' → logprob: -16.001230239868164
    8. '_threshold' → logprob: -16.251230239868164
    9. '_m' → logprob: -16.501230239868164
    10. '_limit' → logprob: -16.501230239868164

Token 71: ' or' (ID: 503)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022973593324422836
    2. '       ' → logprob: -4.897973537445068
    3. ':
' → logprob: -5.272973537445068
    4. ' or' → logprob: -5.647973537445068
    5. ':return' → logprob: -5.647973537445068
    6. '   ' → logprob: -6.022973537445068
    7. ' :' → logprob: -7.772973537445068
    8. '):' → logprob: -9.647974014282227
    9. ' return' → logprob: -10.022974014282227
    10. ' and' → logprob: -10.272974014282227

Token 72: ' threshold' (ID: 24313)
  Prédit: ' threshold'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.04113922640681267
    2. 'threshold' → logprob: -3.5411391258239746
    3. ' limit' → logprob: -4.541139125823975
    4. '   ' → logprob: -7.916139125823975
    5. 'limit' → logprob: -8.291139602661133
    6. '    ' → logprob: -11.978639602661133
    7. ' thresholds' → logprob: -12.103639602661133
    8. ' not' → logprob: -12.791139602661133
    9. ' ' → logprob: -13.041139602661133
    10. '```' → logprob: -13.041139602661133

Token 73: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.6335479021072388
    2. '_min' → logprob: -0.7585479021072388
    3. '_' → logprob: -7.008547782897949
    4. ' _' → logprob: -11.63354778289795
    5. 'max' → logprob: -11.75854778289795
    6. '>' → logprob: -12.13354778289795
    7. '```' → logprob: -12.38354778289795
    8. 'min' → logprob: -13.25854778289795
    9. '__' → logprob: -14.13354778289795
    10. '_low' → logprob: -14.13354778289795

Token 74: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.09669680148363113
    2. ' >' → logprob: -2.4716968536376953
    3. '<' → logprob: -5.596696853637695
    4. '>' → logprob: -6.221696853637695
    5. '<|end|>' → logprob: -6.471696853637695
    6. ' >=' → logprob: -8.346696853637695
    7. ' <=' → logprob: -9.346696853637695
    8. ' ' → logprob: -10.471696853637695
    9. ':' → logprob: -10.596696853637695
    10. '<|end|>' → logprob: -10.721696853637695

Token 75: ' limit' (ID: 5967)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.5634298324584961
    2. ' limit' → logprob: -1.563429832458496
    3. 'threshold' → logprob: -1.688429832458496
    4. 'limit' → logprob: -3.313429832458496
    5. ' ' → logprob: -10.188429832458496
    6. '0' → logprob: -10.313429832458496
    7. '(limit' → logprob: -11.563429832458496
    8. '<|end|>' → logprob: -11.688429832458496
    9. '_threshold' → logprob: -11.813429832458496
    10. 'reshold' → logprob: -12.313429832458496

Token 76: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.011956531554460526
    2. '_max' → logprob: -4.511956691741943
    3. '_' → logprob: -7.011956691741943
    4. '_m' → logprob: -12.761956214904785
    5. ' _' → logprob: -13.636956214904785
    6. '__' → logprob: -14.011956214904785
    7. '_threshold' → logprob: -14.511956214904785
    8. '_MIN' → logprob: -15.261956214904785
    9. 'min' → logprob: -15.761956214904785
    10. '_val' → logprob: -15.886956214904785

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003951475024223328
    2. ' or' → logprob: -6.378951549530029
    3. '   ' → logprob: -7.128951549530029
    4. ':
' → logprob: -7.253951549530029
    5. '):' → logprob: -8.128951072692871
    6. ' :' → logprob: -8.253951072692871
    7. ':return' → logprob: -8.753951072692871
    8. '):
' → logprob: -11.753951072692871
    9. ' and' → logprob: -12.378951072692871
    10. '       ' → logprob: -12.753951072692871

Token 78: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4519779086112976
    2. '   ' → logprob: -1.3269779682159424
    3. ':
' → logprob: -2.8269779682159424
    4. ' or' → logprob: -3.5769779682159424
    5. '       ' → logprob: -5.326977729797363
    6. ':return' → logprob: -5.451977729797363
    7. ' and' → logprob: -7.201977729797363
    8. '):
' → logprob: -7.951977729797363
    9. '):' → logprob: -8.201977729797363
    10. ' return' → logprob: -8.701977729797363

Token 79: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010116089135408401
    2. ' return' → logprob: -5.260116100311279
    3. '       ' → logprob: -5.385116100311279
    4. 'return' (adapté à ' return') → logprob: -9.385115623474121
    5. '    
' → logprob: -9.760115623474121
    6. '
' → logprob: -9.885115623474121
    7. '<|end|>' → logprob: -10.510115623474121
    8. '```' → logprob: -10.885115623474121
    9. '	return' → logprob: -11.135115623474121
    10. ' 
' → logprob: -11.135115623474121

Token 80: ' ' (ID: 220)
  Prédit: ' False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.062293343245983124
    2. 'False' → logprob: -2.812293291091919
    3. ' True' → logprob: -8.18729305267334
    4. ' None' → logprob: -10.31229305267334
    5. 'True' → logprob: -12.18729305267334
    6. ' ' → logprob: -12.56229305267334
    7. 'None' → logprob: -13.31229305267334
    8. ' 
' → logprob: -13.43729305267334
    9. '   ' → logprob: -13.68729305267334
    10. '(False' → logprob: -13.93729305267334

Token 81: '0' (ID: 15)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00010509284038562328
    2. ' False' → logprob: -9.250104904174805
    3. 'True' → logprob: -11.625104904174805
    4. '   ' → logprob: -17.375104904174805
    5. 'F' → logprob: -18.625104904174805
    6. '(False' → logprob: -18.625104904174805
    7. ' True' → logprob: -20.125104904174805
    8. 'false' → logprob: -20.250104904174805
    9. 'Fal' → logprob: -20.250104904174805
    10. '0' → logprob: -20.375104904174805

Token 82: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09367118775844574
    2. '
' → logprob: -2.5936710834503174
    3. '<|end|>' → logprob: -4.8436713218688965
    4. '\n' → logprob: -5.8436713218688965
    5. '    
' → logprob: -5.9686713218688965
    6. '	return' → logprob: -7.7186713218688965
    7. ')' → logprob: -8.593670845031738
    8. ' return' → logprob: -8.968670845031738
    9. '  
' → logprob: -9.093670845031738
    10. '<|end|>' → logprob: -9.468670845031738

Token 83: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003666467731818557
    2. '<|end|>' → logprob: -6.253666400909424
    3. '    
' → logprob: -6.878666400909424
    4. ')' → logprob: -8.253666877746582
    5. '
' → logprob: -8.503666877746582
    6. '\n' → logprob: -8.878666877746582
    7. '	return' → logprob: -10.878666877746582
    8. '<|end|>' → logprob: -11.378666877746582
    9. ',' → logprob: -11.628666877746582
    10. '1' → logprob: -11.878666877746582

Token 84: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018504624022170901
    2. '    
' → logprob: -7.251850605010986
    3. ' return' → logprob: -7.876850605010986
    4. 'return' → logprob: -8.126850128173828
    5. ' if' → logprob: -8.376850128173828
    6. '<|end|>' → logprob: -10.126850128173828
    7. 'if' → logprob: -10.501850128173828
    8. 'def' → logprob: -10.626850128173828
    9. ')' → logprob: -10.751850128173828
    10. '  
' → logprob: -10.876850128173828

Token 85: '_g' (ID: 5439)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4953674376010895
    2. 's' → logprob: -1.370367407798767
    3. '_size' → logprob: -2.9953675270080566
    4. '_' → logprob: -3.1203675270080566
    5. '=' → logprob: -3.2453675270080566
    6. ' ' → logprob: -6.495367527008057
    7. '_s' → logprob: -7.370367527008057
    8. '_count' → logprob: -7.745367527008057
    9. 'size' → logprob: -8.245367050170898
    10. '_length' → logprob: -8.620367050170898

Token 86: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.00016027313540689647
    2. 'c' → logprob: -9.250160217285156
    3. 'cf' → logprob: -10.750160217285156
    4. 'ap' → logprob: -11.750160217285156
    5. '=' → logprob: -11.875160217285156
    6. 'cm' → logprob: -11.875160217285156
    7. 'cdn' → logprob: -12.500160217285156
    8. '_cd' → logprob: -13.000160217285156
    9. '```' → logprob: -13.250160217285156
    10. ' gcd' → logprob: -13.375160217285156

Token 87: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005959137808531523
    2. '=' → logprob: -5.1309590339660645
    3. '_' → logprob: -11.005959510803223
    4. ' ' → logprob: -11.505959510803223
    5. 's' → logprob: -13.255959510803223
    6. ',' → logprob: -15.005959510803223
    7. 'space' → logprob: -15.130959510803223
    8. '	' → logprob: -15.130959510803223
    9. ' _' → logprob: -15.630959510803223
    10. '_space' → logprob: -15.755959510803223

Token 88: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5256620645523071
    2. 'compute' → logprob: -0.9006620645523071
    3. ' limit' → logprob: -6.400661945343018
    4. 'limit' → logprob: -7.150661945343018
    5. 'threshold' → logprob: -10.275662422180176
    6. ' threshold' → logprob: -10.525662422180176
    7. ' abs' → logprob: -12.025662422180176
    8. '   ' → logprob: -12.025662422180176
    9. 'abs' → logprob: -12.400662422180176
    10. ' ' → logprob: -13.525662422180176

Token 89: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -5.9153885558771435e-06
    2. '_' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -16.0000057220459
    4. '_s' → logprob: -16.6250057220459
    5. '_gr' → logprob: -16.6250057220459
    6. ')' → logprob: -16.6250057220459
    7. ' _' → logprob: -17.1250057220459
    8. '```' → logprob: -17.2500057220459
    9. '_gc' → logprob: -17.5000057220459
    10. ')_' → logprob: -17.6250057220459

Token 90: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0010222092969343066
    2. 'c' → logprob: -7.1260223388671875
    3. '_cd' → logprob: -8.626022338867188
    4. '_c' → logprob: -11.376022338867188
    5. 'cdf' → logprob: -11.751022338867188
    6. 'd' → logprob: -12.001022338867188
    7. 'cdn' → logprob: -12.126022338867188
    8. 'CD' → logprob: -12.626022338867188
    9. '	cd' → logprob: -14.501022338867188
    10. 'cdr' → logprob: -14.501022338867188

Token 91: '(limit' (ID: 112473)
  Prédit: '(limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(limit' → logprob: -0.023503083735704422
    2. '(' → logprob: -3.773503065109253
    3. '(th' → logprob: -8.398503303527832
    4. '(step' → logprob: -10.898503303527832
    5. '(l' → logprob: -12.523503303527832
    6. '(max' → logprob: -12.773503303527832
    7. '(lambda' → logprob: -13.523503303527832
    8. '(
' → logprob: -14.398503303527832
    9. '<|end|>' → logprob: -14.398503303527832
    10. '(length' → logprob: -14.523503303527832

Token 92: '_min' (ID: 15950)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -7.719917630311102e-05
    2. '_min' → logprob: -9.500077247619629
    3. 'max' → logprob: -13.125077247619629
    4. '_' → logprob: -15.500077247619629
    5. 'Max' → logprob: -16.125076293945312
    6. '_m' → logprob: -17.125076293945312
    7. '_MAX' → logprob: -17.750076293945312
    8. ')' → logprob: -18.250076293945312
    9. ' max' → logprob: -19.000076293945312
    10. '_ma' → logprob: -19.125076293945312

Token 93: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022065204102545977
    2. ' ,' → logprob: -6.127206325531006
    3. '<|end|>' → logprob: -12.002206802368164
    4. ',
' → logprob: -12.252206802368164
    5. ')' → logprob: -12.252206802368164
    6. '   ' → logprob: -13.002206802368164
    7. ' ' → logprob: -14.252206802368164
    8. '<|end|>' → logprob: -14.502206802368164
    9. ',

' → logprob: -15.502206802368164
    10. ',n' → logprob: -15.627206802368164

Token 94: ' threshold' (ID: 24313)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.31692466139793396
    2. ' limit' → logprob: -1.4419246912002563
    3. 'threshold' → logprob: -3.566924571990967
    4. ' threshold' → logprob: -5.066924571990967
    5. 'step' → logprob: -8.066925048828125
    6. ' step' → logprob: -8.441925048828125
    7. 'lim' → logprob: -11.316925048828125
    8. '(limit' → logprob: -11.316925048828125
    9. '   ' → logprob: -11.441925048828125
    10. 'th' → logprob: -12.316925048828125

Token 95: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.12695278227329254
    2. '_min' → logprob: -2.126952886581421
    3. '_' → logprob: -11.251953125
    4. 'max' → logprob: -11.751953125
    5. '_m' → logprob: -14.251953125
    6. ')' → logprob: -14.501953125
    7. 'Max' → logprob: -14.626953125
    8. ' _' → logprob: -14.626953125
    9. '_threshold' → logprob: -14.876953125
    10. 'min' → logprob: -15.126953125

Token 96: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009983942145481706
    2. ')
' → logprob: -7.000998497009277
    3. ')

' → logprob: -10.250998497009277
    4. '   ' → logprob: -10.875998497009277
    5. '<|end|>' → logprob: -11.250998497009277
    6. ' -' → logprob: -12.000998497009277
    7. '<|end|>' → logprob: -12.500998497009277
    8. '-' → logprob: -12.625998497009277
    9. ' )' → logprob: -13.000998497009277
    10. ')
' → logprob: -14.250998497009277

Token 97: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07624994218349457
    2. '<|end|>' → logprob: -2.826249837875366
    3. ')' → logprob: -5.326250076293945
    4. '
' → logprob: -5.826250076293945
    5. '    
' → logprob: -5.951250076293945
    6. '\n' → logprob: -6.576250076293945
    7. '<|end|>' → logprob: -7.326250076293945
    8. '  
' → logprob: -7.951250076293945
    9. ' ' → logprob: -7.951250076293945
    10. ' 
' → logprob: -8.201250076293945

Token 98: ' step' (ID: 5983)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02957262098789215
    2. ' if' → logprob: -4.154572486877441
    3. ' return' → logprob: -5.779572486877441
    4. '
' → logprob: -5.904572486877441
    5. '    
' → logprob: -5.904572486877441
    6. ' 
' → logprob: -6.654572486877441
    7. '    ' → logprob: -6.904572486877441
    8. '<|end|>' → logprob: -7.279572486877441
    9. ' step' → logprob: -7.529572486877441
    10. ')' → logprob: -8.279572486877441

Token 99: '_count' (ID: 7536)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.7897893190383911
    2. '_' → logprob: -1.1647893190383911
    3. ' =' → logprob: -2.1647891998291016
    4. '_g' → logprob: -2.4147891998291016
    5. '_s' → logprob: -4.414789199829102
    6. '=' → logprob: -4.414789199829102
    7. '_max' → logprob: -6.414789199829102
    8. 's' → logprob: -6.539789199829102
    9. '_length' → logprob: -7.789789199829102
    10. 'size' → logprob: -7.789789199829102

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00030042731668800116
    2. '=' → logprob: -8.125300407409668
    3. ' ' → logprob: -12.875300407409668
    4. ' +=' → logprob: -14.500300407409668
    5. ')' → logprob: -14.875300407409668
    6. ' ' → logprob: -16.000301361083984
    7. 's' → logprob: -16.000301361083984
    8. ' =
' → logprob: -16.125301361083984
    9. ',' → logprob: -16.250301361083984
    10. '<|end|>' → logprob: -16.250301361083984

Token 101: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.09403987228870392
    2. '(limit' → logprob: -2.7190399169921875
    3. ' limit' → logprob: -4.4690399169921875
    4. 'limit' → logprob: -4.5940399169921875
    5. '(max' → logprob: -7.4690399169921875
    6. '(step' → logprob: -7.8440399169921875
    7. '(' → logprob: -8.094039916992188
    8. ' step' → logprob: -8.344039916992188
    9. ' threshold' → logprob: -8.594039916992188
    10. 'threshold' → logprob: -8.719039916992188

Token 102: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.11459933966398239
    2. 'threshold' → logprob: -2.7395992279052734
    3. ' limit' → logprob: -3.3645992279052734
    4. ' threshold' → logprob: -5.364599227905273
    5. '(limit' → logprob: -5.739599227905273
    6. ' (' → logprob: -7.614599227905273
    7. 'step' → logprob: -8.614599227905273
    8. ')' → logprob: -8.989599227905273
    9. 'lim' → logprob: -8.989599227905273
    10. '(' → logprob: -9.739599227905273

Token 103: '_max' (ID: 13731)
  Prédit: '_max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.0004062434600200504
    2. '_min' → logprob: -7.875406265258789
    3. 'max' → logprob: -10.625406265258789
    4. 'Max' → logprob: -13.500406265258789
    5. ')' → logprob: -16.00040626525879
    6. '_' → logprob: -16.87540626525879
    7. '	max' → logprob: -17.00040626525879
    8. ' max' → logprob: -17.00040626525879
    9. '_MAX' → logprob: -17.00040626525879
    10. '[' → logprob: -17.75040626525879

Token 104: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.003755544312298298
    2. '-' → logprob: -6.128755569458008
    3. ' //' → logprob: -7.128755569458008
    4. ' ' → logprob: -7.253755569458008
    5. ')' → logprob: -10.503755569458008
    6. '+' → logprob: -11.503755569458008
    7. ' +' → logprob: -11.628755569458008
    8. '//' → logprob: -12.378755569458008
    9. ' –' → logprob: -13.253755569458008
    10. '   ' → logprob: -13.816255569458008

Token 105: ' threshold' (ID: 24313)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.25851520895957947
    2. 'limit' → logprob: -1.6335152387619019
    3. ' threshold' → logprob: -3.6335151195526123
    4. 'threshold' → logprob: -5.133515357971191
    5. ' step' → logprob: -8.633515357971191
    6. 'step' → logprob: -10.133515357971191
    7. ' ' → logprob: -11.883515357971191
    8. '(limit' → logprob: -12.258515357971191
    9. '    ' → logprob: -12.383515357971191
    10. '   ' → logprob: -12.883515357971191

Token 106: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.2257944941520691
    2. '_max' → logprob: -1.6007945537567139
    3. 'min' → logprob: -8.475794792175293
    4. 'max' → logprob: -8.725794792175293
    5. '_' → logprob: -12.725794792175293
    6. 'Min' → logprob: -12.850794792175293
    7. 'Max' → logprob: -13.350794792175293
    8. ')' → logprob: -13.975794792175293
    9. '<|end|>' → logprob: -14.725794792175293
    10. ' min' → logprob: -14.725794792175293

Token 107: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003729772288352251
    2. ' )' → logprob: -5.753729820251465
    3. ')//' → logprob: -7.753729820251465
    4. ' +' → logprob: -9.753729820251465
    5. '+' → logprob: -9.753729820251465
    6. ')
' → logprob: -12.878729820251465
    7. ' //' → logprob: -13.878729820251465
    8. ' ' → logprob: -14.003729820251465
    9. ')

' → logprob: -14.753729820251465
    10. '   ' → logprob: -14.878729820251465

Token 108: ' ' (ID: 220)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -1.043735384941101
    2. ' step' → logprob: -1.293735384941101
    3. ' threshold' → logprob: -1.543735384941101
    4. '1' → logprob: -2.4187355041503906
    5. 'limit' → logprob: -3.5437355041503906
    6. 'threshold' → logprob: -4.293735504150391
    7. ' ' → logprob: -4.418735504150391
    8. ' (' → logprob: -5.418735504150391
    9. 'step' → logprob: -5.543735504150391
    10. '0' → logprob: -5.543735504150391

Token 109: '1' (ID: 16)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.7812214493751526
    2. '1' → logprob: -1.5312213897705078
    3. 'step' → logprob: -1.7812213897705078
    4. ' step' → logprob: -2.906221389770508
    5. ' limit' → logprob: -3.031221389770508
    6. 'threshold' → logprob: -3.906221389770508
    7. ' ' → logprob: -5.156221389770508
    8. '0' → logprob: -5.156221389770508
    9. '(step' → logprob: -5.156221389770508
    10. ' (' → logprob: -5.281221389770508

Token 110: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019604235887527466
    2. ' )' → logprob: -4.019604206085205
    3. ')//' → logprob: -7.144604206085205
    4. ' //' → logprob: -7.894604206085205
    5. ' +' → logprob: -9.394604682922363
    6. '+' → logprob: -9.519604682922363
    7. ' ' → logprob: -9.769604682922363
    8. '//' → logprob: -10.394604682922363
    9. '   ' → logprob: -10.894604682922363
    10. '#' → logprob: -12.269604682922363

Token 111: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.017170695587992668
    2. ' ' → logprob: -4.2671709060668945
    3. '//' → logprob: -6.3921709060668945
    4. ' /' → logprob: -8.142170906066895
    5. '<|end|>' → logprob: -8.142170906066895
    6. ')' → logprob: -8.392170906066895
    7. '+' → logprob: -8.767170906066895
    8. ' %' → logprob: -9.517170906066895
    9. ' +' → logprob: -9.642170906066895
    10. ' #' → logprob: -10.017170906066895

Token 112: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.281171590089798
    2. 'step' → logprob: -1.4061715602874756
    3. '(step' → logprob: -11.656171798706055
    4. '	step' → logprob: -12.156171798706055
    5. ' ' → logprob: -13.156171798706055
    6. ' limit' → logprob: -13.406171798706055
    7. 'Step' → logprob: -14.031171798706055
    8. 'limit' → logprob: -14.156171798706055
    9. ' threshold' → logprob: -14.531171798706055
    10. 'threshold' → logprob: -14.906171798706055

Token 113: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.0007803229382261634
    2. '_count' → logprob: -7.37578010559082
    3. '_' → logprob: -9.00078010559082
    4. '_size' → logprob: -12.00078010559082
    5. '_s' → logprob: -12.25078010559082
    6. '_step' → logprob: -12.37578010559082
    7. '_c' → logprob: -12.75078010559082
    8. 'count' → logprob: -12.87578010559082
    9. 's' → logprob: -13.12578010559082
    10. 'g' → logprob: -13.62578010559082

Token 114: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.0003346314188092947
    2. 'c' → logprob: -8.125334739685059
    3. '_cd' → logprob: -10.500334739685059
    4. 'cdf' → logprob: -12.500334739685059
    5. '_c' → logprob: -13.500334739685059
    6. 'cdn' → logprob: -13.875334739685059
    7. 'd' → logprob: -14.250334739685059
    8. 'с' → logprob: -14.500334739685059
    9. ' cd' → logprob: -14.625334739685059
    10. 'CD' → logprob: -14.625334739685059

Token 115: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5465015172958374
    2. '+' → logprob: -1.0465015172958374
    3. ' +' → logprob: -2.921501636505127
    4. '<|end|>' → logprob: -4.421501636505127
    5. '+
' → logprob: -6.296501636505127
    6. ')' → logprob: -7.671501636505127
    7. ' +
' → logprob: -7.921501636505127
    8. '<|end|>' → logprob: -8.046501159667969
    9. ' ' → logprob: -8.421501159667969
    10. '
' → logprob: -8.671501159667969

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007466897368431091
    2. '<|end|>' → logprob: -5.632466793060303
    3. '+' → logprob: -6.132466793060303
    4. ')' → logprob: -6.882466793060303
    5. ' +' → logprob: -8.132467269897461
    6. '    
' → logprob: -9.507467269897461
    7. '+
' → logprob: -9.757467269897461
    8. 'return' → logprob: -9.882467269897461
    9. ' if' → logprob: -10.882467269897461
    10. '<|end|>' → logprob: -10.882467269897461

Token 117: ' candidate' (ID: 17098)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008509726263582706
    2. ')' → logprob: -6.258509635925293
    3. ' return' → logprob: -6.258509635925293
    4. 'return' → logprob: -6.508509635925293
    5. '+' → logprob: -6.758509635925293
    6. '<|end|>' → logprob: -7.258509635925293
    7. ' if' → logprob: -7.383509635925293
    8. ' +' → logprob: -8.633509635925293
    9. '    
' → logprob: -9.508509635925293
    10. '	return' → logprob: -9.508509635925293

Token 118: '_value' (ID: 6734)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3008492588996887
    2. '_' → logprob: -2.425849199295044
    3. ' =' → logprob: -2.425849199295044
    4. '_count' → logprob: -2.675849199295044
    5. '_s' → logprob: -4.925849437713623
    6. '=' → logprob: -5.800849437713623
    7. '_counts' → logprob: -7.300849437713623
    8. '_value' → logprob: -7.550849437713623
    9. '_step' → logprob: -7.550849437713623
    10. '_range' → logprob: -7.925849437713623

Token 119: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.33920925855636597
    2. 's' → logprob: -1.3392093181610107
    3. '=' → logprob: -3.7142093181610107
    4. '_' → logprob: -6.714209079742432
    5. ' ' → logprob: -11.71420955657959
    6. ' s' → logprob: -12.58920955657959
    7. ')' → logprob: -12.58920955657959
    8. '_count' → logprob: -13.33920955657959
    9. '_s' → logprob: -13.83920955657959
    10. ' _' → logprob: -13.96420955657959

Token 120: ' limit' (ID: 5967)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.02288120798766613
    2. 'threshold' → logprob: -4.397881031036377
    3. ' limit' → logprob: -4.897881031036377
    4. ' step' → logprob: -6.022881031036377
    5. 'limit' → logprob: -8.272881507873535
    6. ' (' → logprob: -10.022881507873535
    7. ' ' → logprob: -10.397881507873535
    8. 'step' → logprob: -10.397881507873535
    9. ' thresholds' → logprob: -11.835381507873535
    10. ' max' → logprob: -12.022881507873535

Token 121: '_max' (ID: 13731)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.02631225436925888
    2. '_max' → logprob: -3.6513123512268066
    3. ' _' → logprob: -12.526311874389648
    4. '_' → logprob: -12.651311874389648
    5. '_count' → logprob: -13.901311874389648
    6. 'min' → logprob: -14.276311874389648
    7. '_threshold' → logprob: -14.776311874389648
    8. '_m' → logprob: -15.276311874389648
    9. '_sum' → logprob: -15.401311874389648
    10. '_limit' → logprob: -15.401311874389648

Token 122: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.033250726759433746
    2. '-' → logprob: -3.6582508087158203
    3. '<|end|>' → logprob: -5.15825080871582
    4. '
' → logprob: -7.78325080871582
    5. ' +' → logprob: -8.03325080871582
    6. '-step' → logprob: -9.28325080871582
    7. '+' → logprob: -9.40825080871582
    8. '<|end|>' → logprob: -9.65825080871582
    9. ' ' → logprob: -10.03325080871582
    10. '   ' → logprob: -10.40825080871582

Token 123: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.645409345626831
    2. 'step' → logprob: -0.770409345626831
    3. 'threshold' → logprob: -5.14540958404541
    4. ' threshold' → logprob: -5.77040958404541
    5. '1' → logprob: -6.14540958404541
    6. '(step' → logprob: -6.64540958404541
    7. ' ' → logprob: -8.64540958404541
    8. ' (' → logprob: -9.27040958404541
    9. 'limit' → logprob: -11.14540958404541
    10. '(' → logprob: -11.64540958404541

Token 124: '_count' (ID: 7536)
  Prédit: '_g'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -0.02334156446158886
    2. '_count' → logprob: -3.773341655731201
    3. 'g' → logprob: -9.648341178894043
    4. 'count' → logprob: -10.523341178894043
    5. '_' → logprob: -13.648341178894043
    6. '_value' → logprob: -14.648341178894043
    7. '_step' → logprob: -14.773341178894043
    8. 's' → logprob: -14.898341178894043
    9. '_max' → logprob: -14.898341178894043
    10. '_candidate' → logprob: -15.023341178894043

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.005127022974193096
    2. '*' → logprob: -5.380126953125
    3. '<|end|>' → logprob: -7.755126953125
    4. '<|end|>' → logprob: -9.880126953125
    5. ' ' → logprob: -11.755126953125
    6. '*object' → logprob: -12.630126953125
    7. ')' → logprob: -12.880126953125
    8. '#' → logprob: -13.380126953125
    9. '
' → logprob: -13.380126953125
    10. ' -' → logprob: -13.505126953125

Token 126: ' step' (ID: 5983)
  Prédit: ' step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.3868812620639801
    2. 'step' → logprob: -1.1368812322616577
    3. '(step' → logprob: -12.011880874633789
    4. '	step' → logprob: -12.761880874633789
    5. ' ' → logprob: -14.761880874633789
    6. '_step' → logprob: -14.886880874633789
    7. 'space' → logprob: -16.01188087463379
    8. '-step' → logprob: -16.38688087463379
    9. 'Step' → logprob: -16.76188087463379
    10. '.step' → logprob: -16.88688087463379

Token 127: '_g' (ID: 5439)
  Prédit: '_g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_g' → logprob: -3.9650025428272784e-05
    2. 'g' → logprob: -10.625040054321289
    3. '_' → logprob: -11.750040054321289
    4. '<|end|>' → logprob: -12.125040054321289
    5. '_c' → logprob: -14.750040054321289
    6. '_s' → logprob: -15.250040054321289
    7. '<|end|>' → logprob: -16.00004005432129
    8. '_count' → logprob: -16.25004005432129
    9. 's' → logprob: -16.25004005432129
    10. 'G' → logprob: -16.37504005432129

Token 128: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.5861724831629544e-05
    2. 'c' → logprob: -9.875056266784668
    3. 'cdf' → logprob: -13.375056266784668
    4. 'cdn' → logprob: -13.875056266784668
    5. '_cd' → logprob: -14.250056266784668
    6. 'd' → logprob: -14.500056266784668
    7. 'с' → logprob: -15.250056266784668
    8. 'CD' → logprob: -16.00005531311035
    9. 'cs' → logprob: -16.87505531311035
    10. '	cd' → logprob: -16.87505531311035

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7203469276428223
    2. '<|end|>' → logprob: -1.2203469276428223
    3. '
' → logprob: -2.2203469276428223
    4. ' if' → logprob: -2.8453469276428223
    5. ')' → logprob: -3.8453469276428223
    6. ' 
' → logprob: -4.845346927642822
    7. ' ' → logprob: -5.470346927642822
    8. '    
' → logprob: -5.470346927642822
    9. 'if' → logprob: -5.720346927642822
    10. '  
' → logprob: -5.970346927642822

Token 130: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10861565917730331
    2. ' if' → logprob: -3.4836156368255615
    3. ')' → logprob: -3.8586156368255615
    4. '<|end|>' → logprob: -3.8586156368255615
    5. ' ' → logprob: -4.733615875244141
    6. '
' → logprob: -4.983615875244141
    7. ' 
' → logprob: -4.983615875244141
    8. '    
' → logprob: -6.233615875244141
    9. '+' → logprob: -6.608615875244141
    10. 'if' → logprob: -7.483615875244141

Token 131: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1898062825202942
    2. ' if' → logprob: -1.9398062229156494
    3. ' return' → logprob: -4.0648064613342285
    4. 'if' (adapté à ' if') → logprob: -6.1898064613342285
    5. '+' → logprob: -6.3148064613342285
    6. ')' → logprob: -6.4398064613342285
    7. 'return' → logprob: -6.6898064613342285
    8. '<|end|>' → logprob: -6.8148064613342285
    9. ' 
' → logprob: -6.9398064613342285
    10. '
' → logprob: -7.1898064613342285

Token 132: ' candidate' (ID: 17098)
  Prédit: ' candidate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidate' → logprob: -0.23961755633354187
    2. ' threshold' → logprob: -2.3646175861358643
    3. 'candidate' → logprob: -2.3646175861358643
    4. ' limit' → logprob: -4.364617347717285
    5. 'threshold' → logprob: -4.739617347717285
    6. 'limit' → logprob: -6.489617347717285
    7. '(candidate' → logprob: -7.239617347717285
    8. ' ' → logprob: -7.239617347717285
    9. ' not' → logprob: -7.989617347717285
    10. ' (' → logprob: -8.989617347717285

Token 133: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0007563813705928624
    2. '_' → logprob: -7.25075626373291
    3. ' _' → logprob: -10.37575626373291
    4. '_val' → logprob: -12.00075626373291
    5. 'value' → logprob: -12.12575626373291
    6. '_Value' → logprob: -14.62575626373291
    7. '_candidate' → logprob: -15.25075626373291
    8. '_VALUE' → logprob: -15.37575626373291
    9. '>' → logprob: -15.37575626373291
    10. '__' → logprob: -15.62575626373291

Token 134: ' -' (ID: 533)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.37595662474632263
    2. ' <' → logprob: -2.5009565353393555
    3. ' <=' → logprob: -2.6259565353393555
    4. '>=' → logprob: -2.6259565353393555
    5. ' >' → logprob: -3.0009565353393555
    6. '>' → logprob: -4.5009565353393555
    7. '<=' → logprob: -4.8759565353393555
    8. '<' → logprob: -4.8759565353393555
    9. ' ==' → logprob: -5.0009565353393555
    10. '==' → logprob: -6.0009565353393555

Token 135: ' limit' (ID: 5967)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.3449445962905884
    2. 'threshold' → logprob: -1.3449445962905884
    3. 'limit' → logprob: -3.969944477081299
    4. ' limit' → logprob: -4.469944477081299
    5. 'step' → logprob: -7.969944477081299
    6. ' step' → logprob: -7.969944477081299
    7. '1' → logprob: -9.594944953918457
    8. ' ' → logprob: -10.219944953918457
    9. '_threshold' → logprob: -11.469944953918457
    10. '=' → logprob: -11.594944953918457

Token 136: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.0001242772996192798
    2. '_max' → logprob: -9.125123977661133
    3. 'min' → logprob: -11.125123977661133
    4. 'Min' → logprob: -15.375123977661133
    5. '_' → logprob: -16.250123977661133
    6. '_MIN' → logprob: -16.625123977661133
    7. '_count' → logprob: -16.750123977661133
    8. '_limit' → logprob: -17.125123977661133
    9. '_threshold' → logprob: -17.375123977661133
    10. '[min' → logprob: -18.250123977661133

Token 137: ' <' (ID: 464)
  Prédit: ' >='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.42641499638557434
    2. ' <=' → logprob: -1.676414966583252
    3. '>=' → logprob: -2.301414966583252
    4. '<=' → logprob: -3.801414966583252
    5. ' >' → logprob: -4.051414966583252
    6. '>' → logprob: -4.801414966583252
    7. ' <' → logprob: -4.801414966583252
    8. ' ' → logprob: -6.676414966583252
    9. '<' → logprob: -7.426414966583252
    10. '+' → logprob: -7.426414966583252

Token 138: ' ' (ID: 220)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.2063768059015274
    2. 'threshold' → logprob: -2.206376791000366
    3. '0' → logprob: -3.456376791000366
    4. '=' → logprob: -3.956376791000366
    5. ' step' → logprob: -4.206377029418945
    6. ' ' → logprob: -4.831377029418945
    7. 'step' → logprob: -6.581377029418945
    8. ' limit' → logprob: -7.331377029418945
    9. 'limit' → logprob: -7.956377029418945
    10. ' =' → logprob: -9.331377029418945

Token 139: '0' (ID: 15)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.48687589168548584
    2. 'threshold' → logprob: -1.2368758916854858
    3. '0' → logprob: -2.7368760108947754
    4. ' step' → logprob: -4.111876010894775
    5. 'step' → logprob: -5.111876010894775
    6. ' ' → logprob: -5.111876010894775
    7. ' limit' → logprob: -7.236876010894775
    8. 'limit' → logprob: -7.236876010894775
    9. '=' → logprob: -8.236875534057617
    10. ' (' → logprob: -9.986875534057617

Token 140: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01501289289444685
    2. ' or' → logprob: -4.765012741088867
    3. ':
' → logprob: -5.390012741088867
    4. ' :' → logprob: -7.390012741088867
    5. ':return' → logprob: -7.390012741088867
    6. '   ' → logprob: -7.890012741088867
    7. ' and' → logprob: -9.015012741088867
    8. ' :
' → logprob: -10.765012741088867
    9. '<|end|>' → logprob: -11.015012741088867
    10. '):' → logprob: -11.265012741088867

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3048165440559387
    2. '   ' → logprob: -2.304816484451294
    3. ' or' → logprob: -3.054816484451294
    4. ':' → logprob: -3.304816484451294
    5. ':
' → logprob: -4.179816722869873
    6. '    ' → logprob: -4.179816722869873
    7. ' ' → logprob: -4.804816722869873
    8. '0' → logprob: -5.054816722869873
    9. ' :
' → logprob: -5.179816722869873
    10. ' return' → logprob: -5.304816722869873

Token 142: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.20900584757328033
    2. '   ' → logprob: -2.334005832672119
    3. 'return' (adapté à ' return') → logprob: -3.334005832672119
    4. '       ' → logprob: -3.334005832672119
    5. '    ' → logprob: -3.959005832672119
    6. '	return' → logprob: -7.959005832672119
    7. ' ' → logprob: -8.334006309509277
    8. '0' → logprob: -8.834006309509277
    9. ' 
' → logprob: -9.209006309509277
    10. '
' → logprob: -9.334006309509277

Token 143: ' ' (ID: 220)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.9036675095558167
    2. '0' → logprob: -1.4036674499511719
    3. ' False' → logprob: -1.4036674499511719
    4. ' ' → logprob: -2.278667449951172
    5. '1' → logprob: -7.528667449951172
    6. ' True' → logprob: -8.528667449951172
    7. 'True' → logprob: -8.778667449951172
    8. '  ' → logprob: -10.153667449951172
    9. ' None' → logprob: -10.153667449951172
    10. 'None' → logprob: -10.153667449951172

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1147836446762085
    2. 'False' → logprob: -2.364783763885498
    3. '1' → logprob: -4.739783763885498
    4. '-' → logprob: -5.489783763885498
    5. ' ' → logprob: -7.114783763885498
    6. ' False' → logprob: -7.864783763885498
    7. 'True' → logprob: -8.48978328704834
    8. 'None' → logprob: -9.86478328704834
    9. 'limit' → logprob: -10.36478328704834
    10. ' -' → logprob: -11.05228328704834

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.031580932438373566
    2. '
' → logprob: -3.906580924987793
    3. '    
' → logprob: -5.031580924987793
    4. '<|end|>' → logprob: -5.656580924987793
    5. '\n' → logprob: -8.281580924987793
    6. ' 
' → logprob: -8.781580924987793
    7. 'return' → logprob: -9.031580924987793
    8. '  
' → logprob: -9.531580924987793
    9. ')' → logprob: -9.656580924987793
    10. ' return' → logprob: -9.656580924987793

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004618896055035293
    2. '    
' → logprob: -8.50046157836914
    3. '
' → logprob: -9.12546157836914
    4. '<|end|>' → logprob: -9.75046157836914
    5. 'return' → logprob: -9.87546157836914
    6. '	return' → logprob: -11.37546157836914
    7. ' return' → logprob: -12.00046157836914
    8. ')' → logprob: -12.50046157836914
    9. ' 
' → logprob: -12.75046157836914
    10. '  
' → logprob: -12.87546157836914

Token 147: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0052874768152832985
    2. 'return' (adapté à ' return') → logprob: -5.5052876472473145
    3. ' return' → logprob: -7.0052876472473145
    4. '    
' → logprob: -9.505287170410156
    5. '	return' → logprob: -9.505287170410156
    6. '
' → logprob: -9.755287170410156
    7. '<|end|>' → logprob: -10.880287170410156
    8. ' if' → logprob: -11.005287170410156
    9. 'def' → logprob: -11.005287170410156
    10. 'if' → logprob: -11.130287170410156

Token 148: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3358854055404663
    2. 'candidate' → logprob: -1.7108854055404663
    3. ' candidate' → logprob: -2.960885524749756
    4. ' ' → logprob: -2.960885524749756
    5. '(candidate' → logprob: -7.460885524749756
    6. 'limit' → logprob: -9.085885047912598
    7. ' True' → logprob: -10.210885047912598
    8. 'step' → logprob: -10.273385047912598
    9. 'int' → logprob: -10.335885047912598
    10. ' step' → logprob: -10.460885047912598

Token 149: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5815898776054382
    2. 'candidate' → logprob: -0.8315898776054382
    3. '(candidate' → logprob: -6.081589698791504
    4. ' candidate' → logprob: -6.706589698791504
    5. 'limit' → logprob: -7.081589698791504
    6. 'abs' → logprob: -7.956589698791504
    7. 'step' → logprob: -7.956589698791504
    8. 'int' → logprob: -8.831589698791504
    9. ' ' → logprob: -9.331589698791504
    10. '(' → logprob: -9.331589698791504

Token 150: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008000037632882595
    2. ' for' → logprob: -6.132999897003174
    3. '<|end|>' → logprob: -6.257999897003174
    4. '
' → logprob: -6.507999897003174
    5. 'if' → logprob: -6.882999897003174
    6. 'n' → logprob: -8.383000373840332
    7. 'def' → logprob: -9.133000373840332
    8. '#' → logprob: -9.258000373840332
    9. 'result' → logprob: -9.383000373840332
    10. ')' → logprob: -9.383000373840332

Token 151: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0445127372804563e-05
    2. ' for' → logprob: -12.00001049041748
    3. 'while' → logprob: -13.25001049041748
    4. 'result' → logprob: -13.62501049041748
    5. 'current' → logprob: -14.87501049041748
    6. '
' → logprob: -15.37501049041748
    7. 'if' → logprob: -15.87501049041748
    8. 'results' → logprob: -16.125009536743164
    9. 'i' → logprob: -16.250009536743164
    10. 'total' → logprob: -16.375009536743164

Token 152: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.0006967080407775939
    2. '_' → logprob: -7.500696659088135
    3. ' i' → logprob: -8.875697135925293
    4. ' test' → logprob: -13.125697135925293
    5. ' ' → logprob: -13.375697135925293
    6. ' range' → logprob: -15.875697135925293
    7. '_i' → logprob: -16.750696182250977
    8. '  ' → logprob: -17.375696182250977
    9. '_test' → logprob: -17.500696182250977
    10. ' ' → logprob: -17.500696182250977

Token 153: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020704207941889763
    2. 'in' → logprob: -3.8957042694091797
    3. ' ' → logprob: -8.77070426940918
    4. '<|end|>' → logprob: -13.14570426940918
    5. '	in' → logprob: -13.77070426940918
    6. '  ' → logprob: -14.39570426940918
    7. ' i' → logprob: -14.39570426940918
    8. 'n' → logprob: -14.52070426940918
    9. 'range' → logprob: -14.89570426940918
    10. 'space' → logprob: -15.14570426940918

Token 154: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5759396553039551
    2. 'range' → logprob: -0.8259396553039551
    3. '(range' → logprob: -15.950939178466797
    4. '	range' → logprob: -16.575939178466797
    5. ' xrange' → logprob: -16.950939178466797
    6. ' ' → logprob: -17.700939178466797
    7. '_range' → logprob: -17.950939178466797
    8. 'rang' → logprob: -19.200939178466797
    9. '.range' → logprob: -19.325939178466797
    10. '0' → logprob: -19.825939178466797

Token 155: '(test' (ID: 16066)
  Prédit: '(test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(test' → logprob: -0.0024895723909139633
    2. '(' → logprob: -6.0024895668029785
    3. ' (' → logprob: -11.502490043640137
    4. ' test' → logprob: -12.627490043640137
    5. 'test' → logprob: -14.752490043640137
    6. '(t' → logprob: -17.50248908996582
    7. ')test' → logprob: -18.00248908996582
    8. '(
' → logprob: -18.25248908996582
    9. '(Test' → logprob: -19.50248908996582
    10. '(range' → logprob: -19.62748908996582

Token 156: '_case' (ID: 43667)
  Prédit: '_case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_case' → logprob: -0.055196162313222885
    2. '_' → logprob: -2.9301960468292236
    3. '_cases' → logprob: -9.305195808410645
    4. '_CASE' → logprob: -9.555195808410645
    5. ')' → logprob: -9.930195808410645
    6. 'case' → logprob: -10.430195808410645
    7. '_count' → logprob: -10.930195808410645
    8. ' _' → logprob: -11.305195808410645
    9. '_)' → logprob: -11.805195808410645
    10. ' case' → logprob: -11.805195808410645

Token 157: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0024559148587286472
    2. ')' → logprob: -6.502455711364746
    3. 'count' → logprob: -8.002455711364746
    4. 's' → logprob: -8.127455711364746
    5. ')_' → logprob: -8.502455711364746
    6. '_' → logprob: -9.627455711364746
    7. '):' → logprob: -10.252455711364746
    8. '_)' → logprob: -12.252455711364746
    9. '_COUNT' → logprob: -12.627455711364746
    10. '_cnt' → logprob: -13.002455711364746

Token 158: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004282111767679453
    2. ':' → logprob: -5.504281997680664
    3. '):
' → logprob: -9.004281997680664
    4. ')' → logprob: -9.504281997680664
    5. ' ):' → logprob: -12.629281997680664
    6. '():' → logprob: -13.629281997680664
    7. ':
' → logprob: -15.254281997680664
    8. ':)' → logprob: -15.254281997680664
    9. '>:' → logprob: -15.379281997680664
    10. ']:' → logprob: -15.504281997680664

Token 159: '   ' (ID: 271)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.36786937713623047
    2. '   ' → logprob: -2.1178693771362305
    3. ' input' → logprob: -2.1178693771362305
    4. ' 
' → logprob: -4.4928693771362305
    5. '    ' → logprob: -4.6178693771362305
    6. '(limit' → logprob: -4.8678693771362305
    7. ' line' → logprob: -4.9928693771362305
    8. '    
' → logprob: -5.1178693771362305
    9. ' inputs' → logprob: -5.2428693771362305
    10. ',' → logprob: -5.7428693771362305

Token 160: ' input' (ID: 3422)
  Prédit: ' limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' limit' → logprob: -0.12907721102237701
    2. 'limit' → logprob: -2.379077196121216
    3. ' input' → logprob: -5.254077434539795
    4. ' limits' → logprob: -5.254077434539795
    5. ' inputs' → logprob: -5.254077434539795
    6. ' values' → logprob: -5.504077434539795
    7. ' parts' → logprob: -6.129077434539795
    8. ' line' → logprob: -6.629077434539795
    9. 'input' (adapté à ' input') → logprob: -7.004077434539795
    10. ' a' → logprob: -7.129077434539795

Token 161: '_a' (ID: 10852)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.7753795385360718
    2. '_values' → logprob: -0.7753795385360718
    3. '_data' → logprob: -3.1503796577453613
    4. '_' → logprob: -4.025379657745361
    5. '_value' → logprob: -4.525379657745361
    6. '_vals' → logprob: -6.275379657745361
    7. '_str' → logprob: -6.400379657745361
    8. '()' → logprob: -6.525379657745361
    9. '_val' → logprob: -6.900379657745361
    10. '_list' → logprob: -8.025379180908203

Token 162: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.036960430443286896
    2. '=' → logprob: -3.7869603633880615
    3. ' =' → logprob: -4.536960601806641
    4. ' ,' → logprob: -6.036960601806641
    5. '_values' → logprob: -8.16196060180664
    6. '_value' → logprob: -9.66196060180664
    7. ',input' → logprob: -10.78696060180664
    8. ',value' → logprob: -10.91196060180664
    9. 'values' → logprob: -11.16196060180664
    10. ',b' → logprob: -11.16196060180664

Token 163: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.18055512011051178
    2. ' input' → logprob: -1.8055551052093506
    3. '=input' → logprob: -7.55555534362793
    4. ' ' → logprob: -9.18055534362793
    5. ' =' → logprob: -9.68055534362793
    6. '=' → logprob: -10.18055534362793
    7. '   ' → logprob: -11.05555534362793
    8. ',input' → logprob: -11.18055534362793
    9. '  ' → logprob: -11.68055534362793
    10. '_input' → logprob: -11.80555534362793

Token 164: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.00040934275602921844
    2. '_' → logprob: -8.000409126281738
    3. ' _' → logprob: -10.000409126281738
    4. '_c' → logprob: -11.125409126281738
    5. '_a' → logprob: -12.000409126281738
    6. 'b' → logprob: -13.000409126281738
    7. '_d' → logprob: -14.000409126281738
    8. '```' → logprob: -14.375409126281738
    9. '_f' → logprob: -14.875409126281738
    10. '_e' → logprob: -15.125409126281738

Token 165: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11287682503461838
    2. ' =' → logprob: -2.2378768920898438
    3. ',' → logprob: -9.987876892089844
    4. '=input' → logprob: -11.987876892089844
    5. ')' → logprob: -13.737876892089844
    6. ' ' → logprob: -14.237876892089844
    7. 'input' → logprob: -15.487876892089844
    8. ')=' → logprob: -16.612876892089844
    9. '<|end|>' → logprob: -16.612876892089844
    10. ',input' → logprob: -16.987876892089844

Token 166: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.07901393622159958
    2. ' input' → logprob: -2.5790138244628906
    3. 'threshold' → logprob: -10.32901382446289
    4. '=input' → logprob: -10.45401382446289
    5. ' ' → logprob: -11.45401382446289
    6. ',input' → logprob: -11.57901382446289
    7. '	input' → logprob: -12.26651382446289
    8. 'limit' → logprob: -12.32901382446289
    9. 'a' → logprob: -12.57901382446289
    10. ' threshold' → logprob: -12.64151382446289

Token 167: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0006099864258430898
    2. '_' → logprob: -7.625609874725342
    3. '_value' → logprob: -9.5006103515625
    4. '_val' → logprob: -11.2506103515625
    5. '_a' → logprob: -12.2506103515625
    6. '_d' → logprob: -12.5006103515625
    7. '_line' → logprob: -12.6256103515625
    8. '_x' → logprob: -12.8756103515625
    9. '_f' → logprob: -13.0006103515625
    10. '_threshold' → logprob: -13.1256103515625

Token 168: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5238273739814758
    2. '=' → logprob: -0.8988273739814758
    3. ',' → logprob: -7.27382755279541
    4. '=input' → logprob: -11.77382755279541
    5. ' ' → logprob: -13.77382755279541
    6. ')' → logprob: -14.14882755279541
    7. 'input' → logprob: -15.02382755279541
    8. ',input' → logprob: -15.77382755279541
    9. ' ,' → logprob: -16.273826599121094
    10. ' =
' → logprob: -16.898826599121094

Token 169: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.43045568466186523
    2. ' input' → logprob: -1.0554556846618652
    3. '=input' → logprob: -6.805455684661865
    4. ' =' → logprob: -8.055456161499023
    5. ',input' → logprob: -9.180456161499023
    6. '=' → logprob: -9.305456161499023
    7. '(input' → logprob: -10.555456161499023
    8. '_input' → logprob: -10.680456161499023
    9. '_' → logprob: -10.805456161499023
    10. '	input' → logprob: -11.430456161499023

Token 170: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.0016065092058852315
    2. '_' → logprob: -6.501606464385986
    3. 'd' → logprob: -10.126606941223145
    4. '_f' → logprob: -10.376606941223145
    5. '_c' → logprob: -11.126606941223145
    6. '_b' → logprob: -11.751606941223145
    7. '_a' → logprob: -13.126606941223145
    8. '_e' → logprob: -13.126606941223145
    9. '__' → logprob: -13.251606941223145
    10. ' _' → logprob: -14.376606941223145

Token 171: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14268207550048828
    2. ' =' → logprob: -2.0176820755004883
    3. '=input' → logprob: -12.642682075500488
    4. ',' → logprob: -13.017682075500488
    5. ')' → logprob: -13.892682075500488
    6. ' ' → logprob: -16.017681121826172
    7. '   ' → logprob: -16.392681121826172
    8. '    ' → logprob: -16.767681121826172
    9. '=line' → logprob: -16.892681121826172
    10. 'input' → logprob: -16.892681121826172

Token 172: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.006723771803081036
    2. 'map' → logprob: -5.006723880767822
    3. ' list' → logprob: -12.006723403930664
    4. ' input' → logprob: -14.256723403930664
    5. '	map' → logprob: -14.256723403930664
    6. ' ' → logprob: -14.381723403930664
    7. ' ' → logprob: -15.756723403930664
    8. '(map' → logprob: -16.256723403930664
    9. 'input' → logprob: -16.381723403930664
    10. '   ' → logprob: -16.506723403930664

Token 173: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000675500778015703
    2. '(' → logprob: -8.000675201416016
    3. 'int' → logprob: -8.000675201416016
    4. '(
' → logprob: -13.125675201416016
    5. '(input' → logprob: -13.875675201416016
    6. '<int' → logprob: -14.250675201416016
    7. '(str' → logprob: -14.250675201416016
    8. ' int' → logprob: -16.125675201416016
    9. '=int' → logprob: -16.125675201416016
    10. '[int' → logprob: -16.375675201416016

Token 174: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0367048941552639
    2. 'input' → logprob: -3.5367047786712646
    3. ',input' → logprob: -5.036705017089844
    4. ',' → logprob: -8.286705017089844
    5. ')' → logprob: -9.411705017089844
    6. '(' → logprob: -9.536705017089844
    7. ' input' → logprob: -10.911705017089844
    8. '=input' → logprob: -12.536705017089844
    9. ' (' → logprob: -12.661705017089844
    10. '   ' → logprob: -13.786705017089844

Token 175: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20141451060771942
    2. ' input' → logprob: -1.7014144659042358
    3. ')' → logprob: -14.701414108276367
    4. '(input' → logprob: -15.076414108276367
    5. ',input' → logprob: -15.326414108276367
    6. '=input' → logprob: -15.826414108276367
    7. '	input' → logprob: -16.701414108276367
    8. '   ' → logprob: -16.826414108276367
    9. '[input' → logprob: -17.701414108276367
    10. ' ' → logprob: -18.076414108276367

Token 176: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.318681188422488e-05
    2. '()' → logprob: -11.25001335144043
    3. ' ().' → logprob: -15.75001335144043
    4. '()
' → logprob: -18.00001335144043
    5. '(' → logprob: -19.25001335144043
    6. '())' → logprob: -19.62501335144043
    7. ')' → logprob: -19.87501335144043
    8. '.split' → logprob: -20.25001335144043
    9. '("").' → logprob: -21.00001335144043
    10. '.' → logprob: -21.12501335144043

Token 177: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0005552975926548243
    2. 'strip' → logprob: -7.500555515289307
    3. 'rstrip' → logprob: -13.250555038452148
    4. ' split' → logprob: -14.500555038452148
    5. '(split' → logprob: -16.50055503845215
    6. 'spl' → logprob: -18.62555503845215
    7. ')' → logprob: -20.00055503845215
    8. '_split' → logprob: -20.25055503845215
    9. '.split' → logprob: -20.25055503845215
    10. '().' → logprob: -20.37555503845215

Token 178: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.004356890916824341
    2. ')' → logprob: -5.754356861114502
    3. '()' → logprob: -6.754356861114502
    4. '()))' → logprob: -11.75435733795166
    5. '())
' → logprob: -13.25435733795166
    6. '(' → logprob: -13.75435733795166
    7. '))' → logprob: -14.00435733795166
    8. ' ())' → logprob: -14.25435733795166
    9. '(),' → logprob: -15.12935733795166
    10. '())

' → logprob: -16.004356384277344

Token 179: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8702735900878906
    2. '<|end|>' → logprob: -0.9952735900878906
    3. '   ' → logprob: -1.6202735900878906
    4. '    
' → logprob: -5.245273590087891
    5. ' if' → logprob: -5.870273590087891
    6. 'if' → logprob: -6.120273590087891
    7. '<|end|>' → logprob: -6.870273590087891
    8. ')' → logprob: -7.745273590087891
    9. '  
' → logprob: -8.12027359008789
    10. ' ' → logprob: -8.37027359008789

Token 180: ' is' (ID: 382)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.8462303280830383
    2. 'result' → logprob: -1.2212302684783936
    3. ' result' → logprob: -2.0962302684783936
    4. ' if' → logprob: -2.9712302684783936
    5. 'if' → logprob: -3.0962302684783936
    6. ' print' → logprob: -3.2212302684783936
    7. '   ' → logprob: -4.346230506896973
    8. 'valid' → logprob: -6.221230506896973
    9. ' valid' → logprob: -6.971230506896973
    10. 'answer' → logprob: -8.596230506896973

Token 181: '_possible' (ID: 185849)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.0001713590754661709
    2. '_' → logprob: -8.750171661376953
    3. '_val' → logprob: -11.750171661376953
    4. ' _' → logprob: -13.625171661376953
    5. 'Valid' → logprob: -14.125171661376953
    6. 'valid' → logprob: -14.375171661376953
    7. '_value' → logprob: -15.125171661376953
    8. '_possible' → logprob: -15.125171661376953
    9. '_active' → logprob: -15.375171661376953
    10. '_result' → logprob: -15.375171661376953

Token 182: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2062004655599594
    2. '=' → logprob: -1.7062004804611206
    3. '(' → logprob: -5.45620059967041
    4. '_' → logprob: -8.08120059967041
    5. ')' → logprob: -9.70620059967041
    6. '   ' → logprob: -10.33120059967041
    7. ' ' → logprob: -10.83120059967041
    8. '_result' → logprob: -11.33120059967041
    9. '_=' → logprob: -11.58120059967041
    10. '_possible' → logprob: -11.83120059967041

Token 183: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.31329065561294556
    2. 'is' → logprob: -1.3132905960083008
    3. '0' → logprob: -11.0632905960083
    4. '1' → logprob: -11.6882905960083
    5. 'int' → logprob: -13.3132905960083
    6. '(is' → logprob: -13.9382905960083
    7. '   ' → logprob: -14.3132905960083
    8. ' ' → logprob: -14.5632905960083
    9. '	is' → logprob: -14.6882905960083
    10. '=is' → logprob: -15.8132905960083

Token 184: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -9.77022064034827e-05
    2. '_' → logprob: -9.250097274780273
    3. '_possible' → logprob: -13.625097274780273
    4. 'valid' → logprob: -15.625097274780273
    5. '_val' → logprob: -17.375097274780273
    6. '_invalid' → logprob: -17.500097274780273
    7. ' _' → logprob: -17.625097274780273
    8. 'Valid' → logprob: -18.375097274780273
    9. '_is' → logprob: -18.375097274780273
    10. '_VALID' → logprob: -19.250097274780273

Token 185: '_configuration' (ID: 86722)
  Prédit: '_configuration'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_configuration' → logprob: -4.906711546937004e-05
    2. '_config' → logprob: -10.375048637390137
    3. '_' → logprob: -11.125048637390137
    4. 'configuration' → logprob: -12.875048637390137
    5. '_CONFIGURATION' → logprob: -15.875048637390137
    6. '_valid' → logprob: -16.625049591064453
    7. ' _' → logprob: -16.750049591064453
    8. '(configuration' → logprob: -17.000049591064453
    9. ' configuration' → logprob: -17.250049591064453
    10. '_possible' → logprob: -17.375049591064453

Token 186: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001933992956764996
    2. '(' → logprob: -6.251934051513672
    3. '(in' → logprob: -13.126934051513672
    4. '(
' → logprob: -13.126934051513672
    5. ' (' → logprob: -14.126934051513672
    6. '(i' → logprob: -16.001934051513672
    7. '((' → logprob: -16.376934051513672
    8. '(int' → logprob: -16.501934051513672
    9. '(

' → logprob: -16.501934051513672
    10. '(inp' → logprob: -16.501934051513672

Token 187: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0329243429005146
    2. '_d' → logprob: -4.157924175262451
    3. '_c' → logprob: -4.407924175262451
    4. '_b' → logprob: -5.407924175262451
    5. 'a' → logprob: -9.40792465209961
    6. 'd' → logprob: -13.03292465209961
    7. '_' → logprob: -14.65792465209961
    8. 'c' → logprob: -14.90792465209961
    9. '   ' → logprob: -16.03292465209961
    10. ' _' → logprob: -16.03292465209961

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002857416868209839
    2. ',input' → logprob: -5.877857208251953
    3. ' ,' → logprob: -10.127857208251953
    4. '(input' → logprob: -12.127857208251953
    5. 'input' → logprob: -12.627857208251953
    6. ',
' → logprob: -13.377857208251953
    7. '=input' → logprob: -14.502857208251953
    8. ')' → logprob: -14.627857208251953
    9. ' input' → logprob: -14.877857208251953
    10. '[input' → logprob: -15.127857208251953

Token 189: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10021033883094788
    2. ' input' → logprob: -2.350210428237915
    3. '<input' → logprob: -14.100210189819336
    4. ' ' → logprob: -14.850210189819336
    5. '	input' → logprob: -14.850210189819336
    6. 'int' → logprob: -14.850210189819336
    7. '   ' → logprob: -14.975210189819336
    8. '<|end|>' → logprob: -15.350210189819336
    9. ',input' → logprob: -15.350210189819336
    10. '=input' → logprob: -15.475210189819336

Token 190: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.000204851632588543
    2. '_c' → logprob: -8.750205039978027
    3. 'b' → logprob: -10.250205039978027
    4. '_d' → logprob: -11.750205039978027
    5. '_' → logprob: -13.500205039978027
    6. '_,' → logprob: -14.625205039978027
    7. 'c' → logprob: -14.750205039978027
    8. ',' → logprob: -14.875205039978027
    9. 'd' → logprob: -15.250205039978027
    10. '_a' → logprob: -16.25020408630371

Token 191: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003243798855692148
    2. ',input' → logprob: -8.375324249267578
    3. ' ,' → logprob: -9.375324249267578
    4. 'input' → logprob: -12.500324249267578
    5. ')' → logprob: -12.625324249267578
    6. ',
' → logprob: -14.125324249267578
    7. '=input' → logprob: -14.750324249267578
    8. ' input' → logprob: -14.875324249267578
    9. '   ' → logprob: -16.125324249267578
    10. '(input' → logprob: -16.250324249267578

Token 192: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.023250484839081764
    2. ' input' → logprob: -3.7732505798339844
    3. ' ' → logprob: -13.773250579833984
    4. '   ' → logprob: -13.773250579833984
    5. '<input' → logprob: -14.273250579833984
    6. 'int' → logprob: -14.398250579833984
    7. 'c' → logprob: -14.523250579833984
    8. '(input' → logprob: -14.898250579833984
    9. '    ' → logprob: -15.773250579833984
    10. '  ' → logprob: -16.398250579833984

Token 193: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.00013762809976469725
    2. '_,' → logprob: -9.875137329101562
    3. ',' → logprob: -10.000137329101562
    4. 'c' → logprob: -10.500137329101562
    5. '_d' → logprob: -11.750137329101562
    6. ')' → logprob: -12.750137329101562
    7. '```' → logprob: -13.750137329101562
    8. '_' → logprob: -14.750137329101562
    9. '),' → logprob: -15.625137329101562
    10. 'd' → logprob: -15.875137329101562

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001483564410591498
    2. ',input' → logprob: -8.87514877319336
    3. ' ,' → logprob: -12.00014877319336
    4. ')' → logprob: -13.37514877319336
    5. ',
' → logprob: -15.25014877319336
    6. '   ' → logprob: -15.25014877319336
    7. 'input' → logprob: -16.00014877319336
    8. '‌,' → logprob: -17.25014877319336
    9. '=input' → logprob: -17.62514877319336
    10. '_,' → logprob: -17.87514877319336

Token 195: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.4740820825099945
    2. 'input' → logprob: -0.9740821123123169
    3. ')' → logprob: -13.349081993103027
    4. '(input' → logprob: -13.724081993103027
    5. '=input' → logprob: -14.474081993103027
    6. ',input' → logprob: -14.849081993103027
    7. 'int' → logprob: -15.349081993103027
    8. '_input' → logprob: -15.599081993103027
    9. ' ' → logprob: -15.599081993103027
    10. ' ' → logprob: -15.974081993103027

Token 196: '_d' (ID: 1565)
  Prédit: '_d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_d' → logprob: -0.03542082756757736
    2. '_' → logprob: -3.4104208946228027
    3. '_)' → logprob: -6.910420894622803
    4. ')' → logprob: -7.660420894622803
    5. 'd' → logprob: -8.410420417785645
    6. ')_' → logprob: -9.785420417785645
    7. '_,' → logprob: -12.285420417785645
    8. '_
' → logprob: -12.910420417785645
    9. ' )' → logprob: -12.910420417785645
    10. ',' → logprob: -13.035420417785645

Token 197: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.8889261304575484e-06
    2. ')
' → logprob: -12.625003814697266
    3. ' )' → logprob: -15.375003814697266
    4. '))' → logprob: -15.875003814697266
    5. ')

' → logprob: -16.750003814697266
    6. '   ' → logprob: -18.125003814697266
    7. ')`' → logprob: -18.625003814697266
    8. '),' → logprob: -19.250003814697266
    9. '())' → logprob: -19.375003814697266
    10. ')))' → logprob: -19.500003814697266

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004082554951310158
    2. 'print' → logprob: -5.504082679748535
    3. ' print' → logprob: -12.504082679748535
    4. 'if' → logprob: -15.629082679748535
    5. '
' → logprob: -16.00408172607422
    6. '    
' → logprob: -16.37908172607422
    7. '	print' → logprob: -16.50408172607422
    8. '<|end|>' → logprob: -16.87908172607422
    9. '```' → logprob: -16.87908172607422
    10. '       ' → logprob: -18.87908172607422

Token 199: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.027611080557107925
    2. '   ' → logprob: -4.277611255645752
    3. ' print' → logprob: -4.777611255645752
    4. 'if' → logprob: -5.652611255645752
    5. '
' → logprob: -7.152611255645752
    6. ' if' → logprob: -7.402611255645752
    7. '    
' → logprob: -10.527610778808594
    8. ' 
' → logprob: -11.777610778808594
    9. '	print' → logprob: -13.402610778808594
    10. '  
' → logprob: -13.652610778808594

Token 200: '("' (ID: 568)
  Prédit: '(is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(is' → logprob: -0.06348665058612823
    2. '(' → logprob: -2.8134865760803223
    3. '("' → logprob: -6.813486576080322
    4. '('' → logprob: -8.18848705291748
    5. '(bool' → logprob: -8.93848705291748
    6. 'is' → logprob: -13.31348705291748
    7. '(True' → logprob: -13.31348705291748
    8. '("("' → logprob: -13.43848705291748
    9. '(int' → logprob: -13.68848705291748
    10. '(
' → logprob: -13.81348705291748

Token 201: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.42145413160324097
    2. 'Yes' → logprob: -1.2964541912078857
    3. 'Possible' → logprob: -3.4214541912078857
    4. '1' → logprob: -4.421453952789307
    5. '"' → logprob: -4.546453952789307
    6. 'True' → logprob: -4.921453952789307
    7. 'Valid' → logprob: -5.296453952789307
    8. 'possible' → logprob: -6.546453952789307
    9. 'VALID' → logprob: -7.671453952789307
    10. 'yes' → logprob: -8.546454429626465

Token 202: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -2.463036435074173e-05
    2. '")' → logprob: -10.625024795532227
    3. '```' → logprob: -15.750024795532227
    4. 'if' → logprob: -16.125024795532227
    5. ' if' → logprob: -17.000024795532227
    6. ''' → logprob: -17.625024795532227
    7. ' "' → logprob: -19.500024795532227
    8. '\n' → logprob: -19.750024795532227
    9. ')' → logprob: -20.000024795532227
    10. '``' → logprob: -20.125024795532227

Token 203: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04341691732406616
    2. ' if' → logprob: -3.168416976928711
    3. 'if' → logprob: -8.043416976928711
    4. ',' → logprob: -9.543416976928711
    5. ' )' → logprob: -11.543416976928711
    6. '")' → logprob: -12.043416976928711
    7. '   ' → logprob: -12.793416976928711
    8. '"' → logprob: -13.043416976928711
    9. '()' → logprob: -14.043416976928711
    10. ' else' → logprob: -14.168416976928711

Token 204: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -7.493430894101039e-05
    2. 'is' → logprob: -9.500075340270996
    3. ' ' → logprob: -17.75007438659668
    4. ' ' → logprob: -19.37507438659668
    5. '	is' → logprob: -20.50007438659668
    6. '(is' → logprob: -20.62507438659668
    7. '    ' → logprob: -22.37507438659668
    8. ')is' → logprob: -22.50007438659668
    9. ' not' → logprob: -22.62507438659668
    10. '_is' → logprob: -23.00007438659668

Token 205: '_possible' (ID: 185849)
  Prédit: '_possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_possible' → logprob: -3.7697225252486533e-06
    2. 'possible' → logprob: -13.000003814697266
    3. '_' → logprob: -14.000003814697266
    4. '_valid' → logprob: -14.375003814697266
    5. '_pos' → logprob: -16.875003814697266
    6. ' possible' → logprob: -18.000003814697266
    7. 'Possible' → logprob: -18.000003814697266
    8. '_p' → logprob: -18.125003814697266
    9. '_positive' → logprob: -18.125003814697266
    10. '_is' → logprob: -18.750003814697266

Token 206: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.00865806546062231
    2. 'else' → logprob: -4.758657932281494
    3. '==' → logprob: -10.758658409118652
    4. ')' → logprob: -11.133658409118652
    5. '()' → logprob: -12.883658409118652
    6. ' ==' → logprob: -12.883658409118652
    7. ' ' → logprob: -13.758658409118652
    8. '	else' → logprob: -14.133658409118652
    9. '   ' → logprob: -14.758658409118652
    10. ' )' → logprob: -15.633658409118652

Token 207: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.062143128365278244
    2. ' "' → logprob: -2.812143087387085
    3. ' ' → logprob: -8.812143325805664
    4. '"No' → logprob: -11.187143325805664
    5. ')' → logprob: -12.062143325805664
    6. ' ' → logprob: -12.687143325805664
    7. '   ' → logprob: -13.687143325805664
    8. ''' → logprob: -14.562143325805664
    9. '  ' → logprob: -14.812143325805664
    10. '("' → logprob: -15.062143325805664

Token 208: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0003377270477358252
    2. '"No' → logprob: -8.000337600708008
    3. ' No' → logprob: -13.000337600708008
    4. '"' → logprob: -17.000337600708008
    5. 'NO' → logprob: -18.125337600708008
    6. '>No' → logprob: -19.000337600708008
    7. '“No' → logprob: -19.375337600708008
    8. '_No' → logprob: -19.375337600708008
    9. '   ' → logprob: -19.750337600708008
    10. '```' → logprob: -20.000337600708008

Token 209: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002390594017924741
    2. ')' → logprob: -8.500239372253418
    3. ')")' → logprob: -10.250239372253418
    4. '")
' → logprob: -16.6252384185791
    5. '}")' → logprob: -18.2502384185791
    6. '')' → logprob: -18.2502384185791
    7. '!")' → logprob: -18.5002384185791
    8. '"))' → logprob: -19.6252384185791
    9. '())' → logprob: -20.1252384185791
    10. '”)' → logprob: -20.1252384185791


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 207
Tokens correctement prédits (1ère position, stricte): 103
Tokens correctement prédits (1ère position, avec adaptation): 104
Tokens correctement prédits (top 10): 183
Précision stricte (1ère position): 49.76%
Précision adaptée (1ère position): 50.24%
Précision (top 10): 88.41%
================================================================================
