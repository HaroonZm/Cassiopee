================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:22
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
A, B = list(map(int, input().split()))

print(
    max(
        A + B,
        A - B,
        A * B
    )
)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'A' (ID: 32)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' B' (ID: 418)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21797432005405426
    2. '+' → logprob: -2.7179744243621826
    3. ';' → logprob: -3.2179744243621826
    4. '.' → logprob: -3.5929744243621826
    5. ',' → logprob: -3.8429744243621826
    6. 'C' → logprob: -4.5929741859436035
    7. ')' → logprob: -4.5929741859436035
    8. '<|end|>' → logprob: -5.2179741859436035
    9. '[' → logprob: -5.4679741859436035
    10. ':' → logprob: -5.5929741859436035

Token 4: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5059782266616821
    2. '0' → logprob: -1.7559782266616821
    3. '10' → logprob: -3.1309781074523926
    4. '[]' → logprob: -3.1309781074523926
    5. ' []' → logprob: -3.3809781074523926
    6. 'input' → logprob: -3.8809781074523926
    7. '1' → logprob: -4.130978107452393
    8. ' input' → logprob: -4.380978107452393
    9. ' [],' → logprob: -4.880978107452393
    10. ' B' → logprob: -5.380978107452393

Token 5: '(map' (ID: 16946)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.31626930832862854
    2. '(' → logprob: -1.5662692785263062
    3. '.' → logprob: -3.5662693977355957
    4. ',' → logprob: -4.441269397735596
    5. '(
' → logprob: -4.691269397735596
    6. '[
' → logprob: -5.191269397735596
    7. ')' → logprob: -6.316269397735596
    8. '=' → logprob: -7.066269397735596
    9. '```' → logprob: -7.316269397735596
    10. ''s' → logprob: -7.441269397735596

Token 6: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18210020661354065
    2. '(lambda' → logprob: -2.057100296020508
    3. '(int' → logprob: -3.932100296020508
    4. '(str' → logprob: -4.182100296020508
    5. ')' → logprob: -5.807100296020508
    6. '(eval' → logprob: -8.682100296020508
    7. '(
' → logprob: -9.057100296020508
    8. '```' → logprob: -9.307100296020508
    9. '(list' → logprob: -10.307100296020508
    10. '(float' → logprob: -10.307100296020508

Token 7: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23655752837657928
    2. ')' → logprob: -1.9865574836730957
    3. '))' → logprob: -3.7365574836730957
    4. '(input' → logprob: -4.611557483673096
    5. '(user' → logprob: -4.736557483673096
    6. '(range' → logprob: -5.236557483673096
    7. '((' → logprob: -5.736557483673096
    8. '<|end|>' → logprob: -5.736557483673096
    9. '(""))' → logprob: -6.111557483673096
    10. '(data' → logprob: -6.361557483673096

Token 8: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0053012315183877945
    2. ' input' → logprob: -5.755300998687744
    3. '(input' → logprob: -6.380300998687744
    4. ')' → logprob: -8.005301475524902
    5. ',input' → logprob: -9.380301475524902
    6. '=input' → logprob: -13.005301475524902
    7. '))' → logprob: -13.880301475524902
    8. '	input' → logprob: -14.005301475524902
    9. '<input' → logprob: -14.005301475524902
    10. '[input' → logprob: -14.130301475524902

Token 9: '().' (ID: 1454)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.47375252842903137
    2. '()' → logprob: -2.098752498626709
    3. '())' → logprob: -2.348752498626709
    4. '(' → logprob: -2.598752498626709
    5. '()));' → logprob: -3.348752498626709
    6. '(()' → logprob: -3.848752498626709
    7. '())))' → logprob: -4.473752498626709
    8. '`()' → logprob: -5.973752498626709
    9. '(""))' → logprob: -6.348752498626709
    10. '))' → logprob: -6.473752498626709

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0008837147615849972
    2. 'strip' → logprob: -7.12588357925415
    3. 'rstrip' → logprob: -9.750884056091309
    4. ' split' → logprob: -11.375884056091309
    5. '(split' → logprob: -12.125884056091309
    6. 'read' → logprob: -13.500884056091309
    7. 'spl' → logprob: -13.625884056091309
    8. ')' → logprob: -13.625884056091309
    9. 'startswith' → logprob: -16.375883102416992
    10. 'replace' → logprob: -16.875883102416992

Token 11: '()))

' (ID: 125972)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.16353853046894073
    2. '()))' → logprob: -1.9135385751724243
    3. ')))' → logprob: -6.788538455963135
    4. '())' → logprob: -7.163538455963135
    5. ')' → logprob: -7.413538455963135
    6. '()' → logprob: -7.413538455963135
    7. '(' → logprob: -9.538538932800293
    8. '())))' → logprob: -9.788538932800293
    9. '()));' → logprob: -10.788538932800293
    10. ''))' → logprob: -11.788538932800293

Token 12: 'print' (ID: 1598)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47745612263679504
    2. 'if' → logprob: -1.7274560928344727
    3. '+' → logprob: -2.3524560928344727
    4. '*' → logprob: -2.8524560928344727
    5. 'C' → logprob: -4.852456092834473
    6. '```' → logprob: -4.852456092834473
    7. 'i' → logprob: -5.102456092834473
    8. '[' → logprob: -5.477456092834473
    9. 'c' → logprob: -5.477456092834473
    10. ' if' → logprob: -6.102456092834473

Token 13: '(
' (ID: 1607)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00022761584841646254
    2. '("("' → logprob: -9.125227928161621
    3. '('' → logprob: -9.500227928161621
    4. '(A' → logprob: -10.625227928161621
    5. '((' → logprob: -12.125227928161621
    6. '()' → logprob: -12.125227928161621
    7. '("""' → logprob: -13.500227928161621
    8. '(`' → logprob: -13.750227928161621
    9. '("")' → logprob: -14.250227928161621
    10. '(B' → logprob: -14.375227928161621

Token 14: '   ' (ID: 271)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.012927140109241009
    2. 'max' → logprob: -5.762927055358887
    3. 'sum' → logprob: -5.887927055358887
    4. '"A' → logprob: -6.387927055358887
    5. '"' → logprob: -6.637927055358887
    6. ''A' → logprob: -7.137927055358887
    7. ')' → logprob: -7.137927055358887
    8. 'B' → logprob: -7.262927055358887
    9. 'f' → logprob: -7.387927055358887
    10. 'abs' → logprob: -7.887927055358887

Token 15: ' max' (ID: 2999)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04054346680641174
    2. 'sum' → logprob: -4.040543556213379
    3. 'max' (adapté à ' max') → logprob: -4.290543556213379
    4. 'B' → logprob: -5.915543556213379
    5. ''A' → logprob: -6.790543556213379
    6. ')' → logprob: -6.790543556213379
    7. ' A' → logprob: -7.290543556213379
    8. '"' → logprob: -7.665543556213379
    9. 'min' → logprob: -7.915543556213379
    10. '"A' → logprob: -8.165543556213379

Token 16: '(
' (ID: 1607)
  Prédit: '(A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -0.4747488796710968
    2. '(' → logprob: -0.9747488498687744
    3. '(B' → logprob: -7.9747490882873535
    4. '((' → logprob: -9.099748611450195
    5. '(a' → logprob: -9.474748611450195
    6. '(
' → logprob: -9.849748611450195
    7. '()' → logprob: -10.099748611450195
    8. ')' → logprob: -11.474748611450195
    9. '(max' → logprob: -11.849748611450195
    10. '(abs' → logprob: -12.599748611450195

Token 17: '       ' (ID: 309)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.005373914260417223
    2. ' A' → logprob: -5.630373954772949
    3. '(A' → logprob: -6.755373954772949
    4. '[A' → logprob: -8.88037395477295
    5. '(' → logprob: -9.00537395477295
    6. '[' → logprob: -9.13037395477295
    7. '   ' → logprob: -9.13037395477295
    8. 'B' → logprob: -10.25537395477295
    9. ',' → logprob: -10.75537395477295
    10. 'a' → logprob: -10.75537395477295

Token 18: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.007577169686555862
    2. '   ' → logprob: -5.882576942443848
    3. ' A' → logprob: -6.632576942443848
    4. '[A' → logprob: -6.882576942443848
    5. '(A' → logprob: -6.882576942443848
    6. '[' → logprob: -7.132576942443848
    7. '[
' → logprob: -8.632576942443848
    8. 'a' → logprob: -9.132576942443848
    9. '(' → logprob: -9.757576942443848
    10. '0' → logprob: -10.132576942443848

Token 19: ' +' (ID: 659)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27294614911079407
    2. '+' → logprob: -2.2729461193084717
    3. ' ,' → logprob: -2.8979461193084717
    4. ' +' → logprob: -3.3979461193084717
    5. '+B' → logprob: -3.3979461193084717
    6. ',B' → logprob: -4.772946357727051
    7. '*' → logprob: -5.897946357727051
    8. '-' → logprob: -7.397946357727051
    9. ',
' → logprob: -7.772946357727051
    10. ' *' → logprob: -7.897946357727051

Token 20: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.05565958842635155
    2. ' B' → logprob: -2.930659532546997
    3. '   ' → logprob: -8.055659294128418
    4. '1' → logprob: -8.430659294128418
    5. ' ' → logprob: -9.430659294128418
    6. 'A' → logprob: -10.680659294128418
    7. '  ' → logprob: -11.180659294128418
    8. '(B' → logprob: -11.430659294128418
    9. 'max' → logprob: -11.555659294128418
    10. '	B' → logprob: -11.555659294128418

Token 21: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16749326884746552
    2. '))' → logprob: -2.0424933433532715
    3. ')))' → logprob: -4.5424933433532715
    4. ')
' → logprob: -5.0424933433532715
    5. '   ' → logprob: -5.2924933433532715
    6. ',' → logprob: -6.7924933433532715
    7. ' ' → logprob: -7.6674933433532715
    8. '),' → logprob: -8.667492866516113
    9. ' )' → logprob: -8.792492866516113
    10. '))))' → logprob: -9.667492866516113

Token 22: '       ' (ID: 309)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.6714304089546204
    2. 'A' → logprob: -1.0464303493499756
    3. ' max' → logprob: -3.1714303493499756
    4. 'max' → logprob: -3.6714303493499756
    5. 'abs' → logprob: -4.046430587768555
    6. '1' → logprob: -4.421430587768555
    7. ')' → logprob: -4.546430587768555
    8. ' ' → logprob: -5.171430587768555
    9. ' (' → logprob: -5.546430587768555
    10. ' abs' → logprob: -5.546430587768555

Token 23: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.19882433116436005
    2. ' A' → logprob: -1.9488242864608765
    3. 'abs' → logprob: -3.698824405670166
    4. '   ' → logprob: -5.198824405670166
    5. ' abs' → logprob: -6.448824405670166
    6. 'max' → logprob: -6.573824405670166
    7. ')' → logprob: -7.073824405670166
    8. ' max' → logprob: -7.323824405670166
    9. 'AB' → logprob: -7.573824405670166
    10. '(A' → logprob: -7.698824405670166

Token 24: ' -' (ID: 533)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6029486656188965
    2. '-' → logprob: -1.7279486656188965
    3. ' -' → logprob: -1.7279486656188965
    4. ' *' → logprob: -2.3529486656188965
    5. ')' → logprob: -6.9779486656188965
    6. '-B' → logprob: -7.3529486656188965
    7. ' ' → logprob: -7.9779486656188965
    8. '+' → logprob: -8.852949142456055
    9. ',' → logprob: -9.227949142456055
    10. ' +' → logprob: -9.602949142456055

Token 25: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.34845468401908875
    2. ' B' → logprob: -1.2234547138214111
    3. ' ' → logprob: -12.098454475402832
    4. '        ' → logprob: -13.848454475402832
    5. '       ' → logprob: -13.848454475402832
    6. '1' → logprob: -14.473454475402832
    7. '   ' → logprob: -14.473454475402832
    8. '    ' → logprob: -14.973454475402832
    9. '	B' → logprob: -15.598454475402832
    10. '<|end|>' → logprob: -15.598454475402832

Token 26: ',
' (ID: 412)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08477278053760529
    2. '   ' → logprob: -3.584772825241089
    3. '))' → logprob: -3.834772825241089
    4. ',' → logprob: -4.20977258682251
    5. ')))' → logprob: -5.08477258682251
    6. '),' → logprob: -5.45977258682251
    7. ',
' → logprob: -5.58477258682251
    8. '       ' → logprob: -6.45977258682251
    9. ' )' → logprob: -7.20977258682251
    10. ')
' → logprob: -8.209773063659668

Token 27: '       ' (ID: 309)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.7647782564163208
    2. 'A' → logprob: -0.8897782564163208
    3. '   ' → logprob: -3.1397781372070312
    4. ')' → logprob: -3.2647781372070312
    5. '0' → logprob: -4.014778137207031
    6. ' ' → logprob: -4.764778137207031
    7. '1' → logprob: -5.514778137207031
    8. 'B' → logprob: -5.639778137207031
    9. '       ' → logprob: -5.889778137207031
    10. ' B' → logprob: -6.014778137207031

Token 28: ' A' (ID: 355)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.39349526166915894
    2. 'A' (adapté à ' A') → logprob: -1.2684953212738037
    3. ' B' → logprob: -3.8934953212738037
    4. ' A' → logprob: -4.393495082855225
    5. '0' → logprob: -4.893495082855225
    6. ')' → logprob: -6.768495082855225
    7. '   ' → logprob: -6.893495082855225
    8. '1' → logprob: -7.393495082855225
    9. ' ' → logprob: -7.393495082855225
    10. '-' → logprob: -8.893495559692383

Token 29: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.2589065432548523
    2. ' *' → logprob: -1.508906602859497
    3. '-' → logprob: -5.633906364440918
    4. ' -' → logprob: -6.008906364440918
    5. '+' → logprob: -7.883906364440918
    6. ')' → logprob: -8.008906364440918
    7. ' +' → logprob: -9.258906364440918
    8. ' ' → logprob: -9.758906364440918
    9. '-B' → logprob: -11.508906364440918
    10. '<|end|>' → logprob: -11.758906364440918

Token 30: ' B' (ID: 418)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0491965189576149
    2. ' B' → logprob: -3.049196481704712
    3. '<|end|>' → logprob: -7.424196720123291
    4. ' ' → logprob: -11.549196243286133
    5. ')' → logprob: -14.049196243286133
    6. '  ' → logprob: -14.299196243286133
    7. '<|end|>' → logprob: -14.674196243286133
    8. '   ' → logprob: -15.549196243286133
    9. '    ' → logprob: -16.049196243286133
    10. '(' → logprob: -16.174196243286133

Token 31: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.25515222549438477
    2. '   ' → logprob: -1.5051522254943848
    3. '))' → logprob: -6.255152225494385
    4. ')))' → logprob: -7.255152225494385
    5. ')
' → logprob: -8.005151748657227
    6. '       ' → logprob: -8.755151748657227
    7. ',
' → logprob: -10.755151748657227
    8. ' )' → logprob: -10.880151748657227
    9. ',' → logprob: -11.255151748657227
    10. '))))' → logprob: -11.255151748657227

Token 32: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01191683579236269
    2. '   ' → logprob: -4.511916637420654
    3. '))' → logprob: -7.261916637420654
    4. ')
' → logprob: -9.136917114257812
    5. ')))' → logprob: -10.511917114257812
    6. ' )' → logprob: -11.761917114257812
    7. '       ' → logprob: -12.136917114257812
    8. ',' → logprob: -12.386917114257812
    9. '),' → logprob: -12.511917114257812
    10. '<|end|>' → logprob: -12.886917114257812

Token 33: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001625379954930395
    2. '))' → logprob: -9.750162124633789
    3. ')
' (adapté à ' )
') → logprob: -9.750162124633789
    4. '   ' → logprob: -10.375162124633789
    5. ' )' → logprob: -11.250162124633789
    6. ' ' → logprob: -14.375162124633789
    7. '),' → logprob: -15.875162124633789
    8. ')`' → logprob: -15.875162124633789
    9. ')))' → logprob: -16.00016212463379
    10. ')

' → logprob: -16.00016212463379

Token 34: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.069664333248511e-05
    2. ')
' → logprob: -11.000020980834961
    3. '```' → logprob: -13.500020980834961
    4. '))' → logprob: -14.000020980834961
    5. ' )' → logprob: -14.875020980834961
    6. '`)' → logprob: -14.875020980834961
    7. '   ' → logprob: -15.125020980834961
    8. '#' → logprob: -15.500020980834961
    9. ')`' → logprob: -16.00002098083496
    10. '}' → logprob: -16.25002098083496


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 32
Tokens correctement prédits (1ère position, stricte): 2
Tokens correctement prédits (1ère position, avec adaptation): 4
Tokens correctement prédits (top 10): 19
Précision stricte (1ère position): 6.25%
Précision adaptée (1ère position): 12.50%
Précision (top 10): 59.38%
================================================================================
