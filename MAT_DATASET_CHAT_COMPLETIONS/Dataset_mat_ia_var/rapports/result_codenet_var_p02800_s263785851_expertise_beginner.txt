================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:30:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

H, W = map(int, input().split())
A = []
for i in range(H):
    A.append(input().strip())

mod = 998244353

# Calcul des factorielles et inverses modulo mod
FACT = [1]
for i in range(1, 21):
    FACT.append((FACT[-1] * i) % mod)

FACT_INV = [pow(FACT[-1], mod - 2, mod)]
for i in range(20, 0, -1):
    FACT_INV.append((FACT_INV[-1] * i) % mod)
FACT_INV = FACT_INV[::-1]

# Tableau pour les combinaisons
COMBI = []
for i in range(21):
    COMBI.append([-1] * 21)

def Combi(a, b):
    if COMBI[a][b] != -1:
        return COMBI[a][b]
    if 0 <= b <= a:
        COMBI[a][b] = FACT[a] * FACT_INV[b] * FACT_INV[a-b] % mod
        return COMBI[a][b]
    else:
        COMBI[a][b] = 0
        return 0

M = max(H, W) + 1
RA = []
for i in range(M):
    RA.append([-1] * M)

def rect(HH, WW):
    if HH == 0 and WW == 0:
        return 1
    if RA[HH][WW] != -1:
        return RA[HH][WW]
    DP = []
    for i in range(HH+1):
        line = []
        for j in range(WW+1):
            line.append([0, 0])
        DP.append(line)
    DP[0][0][0] = 1
    DP[0][0][1] = 1

    for h in range(HH+1):
        for w in range(WW+1):
            # Vertical
            for nexth in range(h+1, HH+1):
                DP[nexth][w][0] += DP[h][w][1] * FACT_INV[nexth-h]
                DP[nexth][w][0] %= mod
            # Horizontal
            for nextw in range(w+1, WW+1):
                DP[h][nextw][1] += DP[h][w][0] * FACT_INV[nextw-w]
                DP[h][nextw][1] %= mod

    RA[HH][WW] = (DP[HH][WW][0] + DP[HH][WW][1]) % mod * FACT[HH] % mod * FACT[WW] % mod
    RA[WW][HH] = RA[HH][WW]
    return RA[HH][WW]

CA = []
for i in range(H+1):
    CA.append([-1] * (W+1))

def calc(h, w):
    if CA[h][w] != -1:
        return CA[h][w]
    RET = 0
    for bh in range(h+1):
        for bw in range(w+1):
            v = rect(bh, w-bw) * rect(h-bh, bw) * Combi(h,bh) * Combi(w,bw)
            RET += v
            RET %= mod
    CA[h][w] = RET % mod
    return CA[h][w]

for i in range(H+1):
    for j in range(W+1):
        calc(i, j)

ANS = rect(H, W)

for i in range((1 << H) - 1):
    for j in range((1 << W) - 1):
        okflag = 1
        for h in range(H):
            if (i & (1 << h)) != 0:
                continue
            coinc = ""
            dif = 0
            for w in range(W):
                if (j & (1 << w)) != 0:
                    continue
                if coinc == "":
                    coinc = A[h][w]
                elif A[h][w] != coinc:
                    dif = 1
                    break
            if dif == 0:
                okflag = 0
                break
        if okflag == 0:
            continue

        okflag = 1
        for w in range(W):
            if (j & (1 << w)) != 0:
                continue
            coinc = ""
            dif = 0
            for h in range(H):
                if (i & (1 << h)) != 0:
                    continue
                if coinc == "":
                    coinc = A[h][w]
                elif A[h][w] != coinc:
                    dif = 1
                    break
            if dif == 0:
                okflag = 0
                break
        if okflag == 0:
            continue

        HR = 0
        for h in range(H):
            if (i & (1 << h)) != 0:
                HR += 1
        WR = 0
        for w in range(W):
            if (j & (1 << w)) != 0:
                WR += 1
        ANS += CA[HR][WR]
        # ANS %= mod

print(ANS % mod)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6405025720596313
    2. '.' → logprob: -0.8905025720596313
    3. 'import' → logprob: -4.015502452850342
    4. 'newline' → logprob: -4.265502452850342
    5. '\' → logprob: -4.765502452850342
    6. '<|end|>' → logprob: -5.015502452850342
    7. '```' → logprob: -5.390502452850342
    8. '
' → logprob: -5.765502452850342
    9. '<|end|>' → logprob: -6.515502452850342
    10. '' → logprob: -6.515502452850342

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01348513551056385
    2. '.' → logprob: -4.388484954833984
    3. ' (' → logprob: -7.888484954833984
    4. ')' → logprob: -9.013484954833984
    5. '[' → logprob: -9.138484954833984
    6. '()' → logprob: -9.513484954833984
    7. '('' → logprob: -9.763484954833984
    8. '(
' → logprob: -9.763484954833984
    9. ''' → logprob: -10.263484954833984
    10. ''s' → logprob: -10.638484954833984

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.06210717186331749
    2. 'sys' → logprob: -2.8121070861816406
    3. ' input' → logprob: -9.31210708618164
    4. 'input' → logprob: -10.06210708618164
    5. '	sys' → logprob: -12.93710708618164
    6. '=sys' → logprob: -13.18710708618164
    7. ' ' → logprob: -13.68710708618164
    8. '(sys' → logprob: -13.93710708618164
    9. ' system' → logprob: -16.18710708618164
    10. ' lambda' → logprob: -16.68710708618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00016074994346126914
    2. ' .' → logprob: -9.875161170959473
    3. '[' → logprob: -10.750161170959473
    4. '.readline' → logprob: -10.750161170959473
    5. '.stdin' → logprob: -11.125161170959473
    6. '.
' → logprob: -11.500161170959473
    7. '.import' → logprob: -11.875161170959473
    8. '.​' → logprob: -12.625161170959473
    9. '.argv' → logprob: -12.875161170959473
    10. '```' → logprob: -12.875161170959473

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5011351704597473
    2. '.' → logprob: -1.0011351108551025
    3. '.read' → logprob: -3.6261351108551025
    4. '.readlines' → logprob: -10.876134872436523
    5. '.Read' → logprob: -10.876134872436523
    6. 'read' → logprob: -11.126134872436523
    7. '```' → logprob: -12.001134872436523
    8. ' .' → logprob: -12.251134872436523
    9. '.

' → logprob: -13.501134872436523
    10. '.
' → logprob: -13.626134872436523

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: 'H' (ID: 39)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941479563713074
    2. '(' → logprob: -1.2244148254394531
    3. '().' → logprob: -7.849414825439453
    4. '(
' → logprob: -8.599414825439453
    5. '()
' → logprob: -8.724414825439453
    6. '()

' → logprob: -10.474414825439453
    7. 'a' → logprob: -10.599414825439453
    8. ')' → logprob: -10.849414825439453
    9. '.' → logprob: -10.849414825439453
    10. '#' → logprob: -11.224414825439453

Token 10: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6460403800010681
    2. ' =' → logprob: -0.8960403800010681
    3. '=' → logprob: -2.771040439605713
    4. '=int' → logprob: -6.646040439605713
    5. '_' → logprob: -7.771040439605713
    6. ' ' → logprob: -7.771040439605713
    7. 'W' → logprob: -7.896040439605713
    8. '   ' → logprob: -7.896040439605713
    9. ')' → logprob: -8.146039962768555
    10. 'H' → logprob: -8.396039962768555

Token 11: ' W' (ID: 486)
  Prédit: ' W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.03384669870138168
    2. 'W' → logprob: -3.408846616744995
    3. ' ' → logprob: -8.908846855163574
    4. ' M' → logprob: -10.408846855163574
    5. ' N' → logprob: -10.908846855163574
    6. ' w' → logprob: -12.658846855163574
    7. '_' → logprob: -12.783846855163574
    8. 'M' → logprob: -12.908846855163574
    9. 'N' → logprob: -12.908846855163574
    10. 'w' → logprob: -12.908846855163574

Token 12: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36495453119277954
    2. ',' → logprob: -1.7399544715881348
    3. '=' → logprob: -2.1149544715881348
    4. ' ,' → logprob: -4.739954471588135
    5. ' ' → logprob: -7.364954471588135
    6. '<|end|>' → logprob: -8.989954948425293
    7. ')' → logprob: -9.614954948425293
    8. '[' → logprob: -11.864954948425293
    9. ' =
' → logprob: -12.239954948425293
    10. '<|end|>' → logprob: -12.489954948425293

Token 13: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07896149903535843
    2. 'map' → logprob: -2.5789616107940674
    3. ' list' → logprob: -9.953961372375488
    4. ' input' → logprob: -11.203961372375488
    5. 'list' → logprob: -12.453961372375488
    6. 'input' → logprob: -12.828961372375488
    7. ' ' → logprob: -13.203961372375488
    8. ' tuple' → logprob: -13.953961372375488
    9. ' [' → logprob: -15.078961372375488
    10. ' int' → logprob: -15.453961372375488

Token 14: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4091886878013611
    2. '(lambda' → logprob: -1.9091887474060059
    3. '(int' → logprob: -2.159188747406006
    4. '(str' → logprob: -2.659188747406006
    5. '(input' → logprob: -6.659188747406006
    6. '(tuple' → logprob: -8.909188270568848
    7. '(len' → logprob: -9.034188270568848
    8. '(eval' → logprob: -9.409188270568848
    9. '(list' → logprob: -9.409188270568848
    10. '<|end|>' → logprob: -9.409188270568848

Token 15: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.652377188205719
    2. '(input' → logprob: -1.1523771286010742
    3. ',' → logprob: -2.027377128601074
    4. ')' → logprob: -4.152377128601074
    5. ',input' → logprob: -5.152377128601074
    6. '(str' → logprob: -6.152377128601074
    7. '(sys' → logprob: -6.152377128601074
    8. '(int' → logprob: -6.152377128601074
    9. ' ,' → logprob: -7.902377128601074
    10. ' (' → logprob: -8.027377128601074

Token 16: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.47408074140548706
    2. 'input' → logprob: -0.9740807414054871
    3. '(input' → logprob: -13.724081039428711
    4. ',input' → logprob: -14.224081039428711
    5. ')' → logprob: -14.349081039428711
    6. 'str' → logprob: -14.599081039428711
    7. '=input' → logprob: -14.849081039428711
    8. ' ' → logprob: -15.349081039428711
    9. ' str' → logprob: -15.599081039428711
    10. '	input' → logprob: -16.59908103942871

Token 17: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.10093895345926285
    2. '())' → logprob: -2.3509390354156494
    3. '()' → logprob: -7.35093879699707
    4. ')' → logprob: -9.60093879699707
    5. '()))' → logprob: -11.72593879699707
    6. '(' → logprob: -12.22593879699707
    7. '()),' → logprob: -13.35093879699707
    8. '()[' → logprob: -13.35093879699707
    9. '());' → logprob: -13.60093879699707
    10. ' ())' → logprob: -14.10093879699707

Token 18: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.5821829438209534
    2. 'strip' → logprob: -0.8321829438209534
    3. 'rstrip' → logprob: -5.082182884216309
    4. 'read' → logprob: -11.832182884216309
    5. ')' → logprob: -11.957182884216309
    6. ' split' → logprob: -13.582182884216309
    7. 'str' → logprob: -13.957182884216309
    8. '())' → logprob: -14.332182884216309
    9. ' strip' → logprob: -14.457182884216309
    10. '()' → logprob: -14.957182884216309

Token 19: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003242607053834945
    2. '))' → logprob: -8.875324249267578
    3. '())' → logprob: -8.875324249267578
    4. '()' → logprob: -10.250324249267578
    5. ')`' → logprob: -12.875324249267578
    6. '(' → logprob: -13.500324249267578
    7. '),' → logprob: -13.500324249267578
    8. '`)' → logprob: -13.625324249267578
    9. ')
' → logprob: -14.375324249267578
    10. ' )' → logprob: -14.875324249267578

Token 20: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.9758870005607605
    2. 'grid' → logprob: -1.2258870601654053
    3. 'A' → logprob: -2.4758870601654053
    4. 'x' → logprob: -3.3508870601654053
    5. 'matrix' → logprob: -3.4758870601654053
    6. 'g' → logprob: -3.9758870601654053
    7. '[' → logprob: -4.475886821746826
    8. 's' → logprob: -4.475886821746826
    9. 'field' → logprob: -4.600886821746826
    10. 'c' → logprob: -4.725886821746826

Token 21: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0028570592403411865
    2. '=' → logprob: -6.752857208251953
    3. ' =' → logprob: -7.002857208251953
    4. ' ' → logprob: -8.377857208251953
    5. '[]' → logprob: -8.377857208251953
    6. '_' → logprob: -9.502857208251953
    7. '[][]' → logprob: -9.752857208251953
    8. '[:]' → logprob: -10.502857208251953
    9. '[i' → logprob: -10.752857208251953
    10. '[A' → logprob: -11.127857208251953

Token 22: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14886824786663055
    2. '[]' → logprob: -2.3988683223724365
    3. '[list' → logprob: -3.6488683223724365
    4. '[int' → logprob: -4.148868083953857
    5. ' [' → logprob: -6.023868083953857
    6. ' []' → logprob: -6.648868083953857
    7. '[i' → logprob: -7.898868083953857
    8. '[str' → logprob: -8.023868560791016
    9. '[List' → logprob: -8.523868560791016
    10. '[line' → logprob: -8.773868560791016

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005542247672565281
    2. ' for' → logprob: -7.500554084777832
    3. '[' → logprob: -14.375554084777832
    4. '	for' → logprob: -15.000554084777832
    5. '```' → logprob: -15.750554084777832
    6. '   ' → logprob: -16.87555503845215
    7. '' → logprob: -17.37555503845215
    8. '\' → logprob: -17.75055503845215
    9. '\n' → logprob: -18.00055503845215
    10. '
' → logprob: -18.00055503845215

Token 24: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.15433155000209808
    2. ' i' → logprob: -2.5293314456939697
    3. ' ' → logprob: -2.9043314456939697
    4. '_' → logprob: -4.779331684112549
    5. ' ‌' → logprob: -9.90433120727539
    6. ' ' → logprob: -10.40433120727539
    7. 'i' → logprob: -11.40433120727539
    8. ' ▁' → logprob: -11.65433120727539
    9. ' ​' → logprob: -12.02933120727539
    10. '  ' → logprob: -13.15433120727539

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03403925523161888
    2. 'in' → logprob: -3.409039258956909
    3. ' ' → logprob: -8.034039497375488
    4. 'n' → logprob: -10.034039497375488
    5. '  ' → logprob: -12.034039497375488
    6. ' i' → logprob: -12.409039497375488
    7. '	in' → logprob: -12.409039497375488
    8. ' n' → logprob: -12.659039497375488
    9. '_' → logprob: -13.284039497375488
    10. '0' → logprob: -14.284039497375488

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3868741989135742
    2. 'range' → logprob: -1.1368741989135742
    3. '	range' → logprob: -13.886874198913574
    4. ' ' → logprob: -14.386874198913574
    5. 'rang' → logprob: -15.011874198913574
    6. ' ran' → logprob: -15.011874198913574
    7. 'ran' → logprob: -15.511874198913574
    8. 'in' → logprob: -15.511874198913574
    9. '(range' → logprob: -16.01187515258789
    10. 'ra' → logprob: -16.38687515258789

Token 27: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5763648748397827
    2. '(' → logprob: -0.8263648748397827
    3. ' (' → logprob: -7.826364994049072
    4. '(W' → logprob: -11.326364517211914
    5. ' ' → logprob: -12.826364517211914
    6. ' H' → logprob: -13.076364517211914
    7. '(int' → logprob: -13.326364517211914
    8. '(
' → logprob: -13.576364517211914
    9. '(A' → logprob: -13.951364517211914
    10. '()' → logprob: -14.076364517211914

Token 28: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00047094907495193183
    2. ')' → logprob: -8.000471115112305
    3. ' ):' → logprob: -9.375471115112305
    4. '):
' → logprob: -10.500471115112305
    5. '+' → logprob: -11.250471115112305
    6. ':' → logprob: -11.875471115112305
    7. ')：' → logprob: -14.250471115112305
    8. '）：' → logprob: -15.000471115112305
    9. '-' → logprob: -15.375471115112305
    10. '*' → logprob: -15.375471115112305

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21546043455600739
    2. ' A' → logprob: -2.0904605388641357
    3. ' ' → logprob: -3.0904605388641357
    4. 'A' → logprob: -4.090460300445557
    5. '    ' → logprob: -5.965460300445557
    6. '	A' → logprob: -6.715460300445557
    7. ' 
' → logprob: -7.340460300445557
    8. '  ' → logprob: -7.715460300445557
    9. '    
' → logprob: -7.840460300445557
    10. '   ' → logprob: -7.840460300445557

Token 30: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.3556842803955078
    2. 'A' (adapté à ' A') → logprob: -1.2306842803955078
    3. '   ' → logprob: -4.980684280395508
    4. ' list' → logprob: -9.105684280395508
    5. ' a' → logprob: -9.605684280395508
    6. 'a' → logprob: -9.730684280395508
    7. ' ' → logprob: -10.480684280395508
    8. '    ' → logprob: -10.480684280395508
    9. ' row' → logprob: -10.980684280395508
    10. ' ' → logprob: -11.855684280395508

Token 31: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.12699635326862335
    2. '.' → logprob: -2.1269962787628174
    3. '.app' → logprob: -9.876996040344238
    4. '.ap' → logprob: -12.001996040344238
    5. '.extend' → logprob: -12.251996040344238
    6. ' .' → logprob: -12.876996040344238
    7. '.=' → logprob: -13.501996040344238
    8. '.readline' → logprob: -14.626996040344238
    9. '​.' → logprob: -15.001996040344238
    10. '.Append' → logprob: -15.126996040344238

Token 32: '(input' (ID: 10054)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0020734101999551058
    2. '(' → logprob: -6.252073287963867
    3. 'list' → logprob: -9.127073287963867
    4. '(tuple' → logprob: -10.502073287963867
    5. '([' → logprob: -12.377073287963867
    6. ' (' → logprob: -13.377073287963867
    7. ' list' → logprob: -13.627073287963867
    8. '(li' → logprob: -14.627073287963867
    9. '(l' → logprob: -15.252073287963867
    10. '=list' → logprob: -15.252073287963867

Token 33: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.012546384707093239
    2. '())' → logprob: -4.512546539306641
    3. '()' → logprob: -6.512546539306641
    4. '()))' → logprob: -11.63754653930664
    5. '(' → logprob: -13.51254653930664
    6. ')' → logprob: -14.01254653930664
    7. ' ().' → logprob: -14.26254653930664
    8. ' ())' → logprob: -15.13754653930664
    9. '();)' → logprob: -16.01254653930664
    10. '()).' → logprob: -16.13754653930664

Token 34: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.8114506006240845
    2. 'rstrip' → logprob: -1.0614506006240845
    3. 'split' → logprob: -1.5614506006240845
    4. 'rs' → logprob: -13.561450958251953
    5. 'read' → logprob: -16.311450958251953
    6. ' split' → logprob: -16.436450958251953
    7. ' strip' → logprob: -17.061450958251953
    8. 'rst' → logprob: -17.061450958251953
    9. '.rstrip' → logprob: -17.436450958251953
    10. '```' → logprob: -17.811450958251953

Token 35: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.006573023274540901
    2. '()' → logprob: -5.38157320022583
    3. '()))' → logprob: -6.50657320022583
    4. ')' → logprob: -7.75657320022583
    5. '().' → logprob: -11.381572723388672
    6. '())
' → logprob: -12.006572723388672
    7. '))' → logprob: -12.506572723388672
    8. '(' → logprob: -12.756572723388672
    9. ' ())' → logprob: -13.256572723388672
    10. '())

' → logprob: -14.131572723388672

Token 36: 'mod' (ID: 4847)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8906310796737671
    2. ' =' → logprob: -1.015631079673767
    3. '=' → logprob: -1.765631079673767
    4. ' ' → logprob: -3.2656311988830566
    5. '_space' → logprob: -5.265631198883057
    6. ')' → logprob: -6.515631198883057
    7. ' _' → logprob: -6.515631198883057
    8. 'ular' → logprob: -6.765631198883057
    9. ' )' → logprob: -7.140631198883057
    10. 'space' → logprob: -7.140631198883057

Token 38: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.2549804151058197
    2. '100' → logprob: -1.879980444908142
    3. ' ' → logprob: -2.6299803256988525
    4. '998' → logprob: -8.004980087280273
    5. '1' → logprob: -9.754980087280273
    6. '0' → logprob: -14.379980087280273
    7. '9' → logprob: -14.879980087280273
    8. '`' → logprob: -15.004980087280273
    9. ' (' → logprob: -15.004980087280273
    10. 'int' → logprob: -15.129980087280273

Token 39: '998' (ID: 34589)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.10069301724433899
    2. '100' → logprob: -2.3506929874420166
    3. '998' → logprob: -7.725693225860596
    4. '1' → logprob: -10.725692749023438
    5. ' ' → logprob: -10.975692749023438
    6. '(' → logprob: -12.850692749023438
    7. 'int' → logprob: -13.225692749023438
    8. '2' → logprob: -15.475692749023438
    9. '```' → logprob: -15.600692749023438
    10. '`' → logprob: -15.600692749023438

Token 40: '244' (ID: 25291)
  Prédit: '244'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '244' → logprob: -1.0325924449716695e-05
    2. '```' → logprob: -12.75001049041748
    3. '247' → logprob: -12.87501049041748
    4. '2' → logprob: -13.87501049041748
    5. '245' → logprob: -14.00001049041748
    6. '243' → logprob: -14.50001049041748
    7. '457' → logprob: -14.50001049041748
    8. '24' → logprob: -14.50001049041748
    9. '254' → logprob: -14.75001049041748
    10. '4' → logprob: -16.000009536743164

Token 41: '353' (ID: 32996)
  Prédit: '853'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '853' → logprob: -0.5779556035995483
    2. '353' → logprob: -0.9529556035995483
    3. '857' → logprob: -2.952955722808838
    4. '257' → logprob: -7.327955722808838
    5. '357' → logprob: -8.20295524597168
    6. '85' → logprob: -9.07795524597168
    7. '253' → logprob: -10.45295524597168
    8. '```' → logprob: -10.57795524597168
    9. '457' → logprob: -10.95295524597168
    10. '3' → logprob: -11.20295524597168

Token 42: '

' (ID: 279)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8306788206100464
    2. '
' → logprob: -1.0806788206100464
    3. '\n' → logprob: -2.830678939819336
    4. '' → logprob: -3.705678939819336
    5. ' 
' → logprob: -3.705678939819336
    6. '\' → logprob: -3.830678939819336
    7. '<|end|>' → logprob: -4.080678939819336
    8. 'result' → logprob: -4.330678939819336
    9. '

' → logprob: -4.455678939819336
    10. 'n' → logprob: -4.955678939819336

Token 43: '#' (ID: 2)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.010159165598452091
    2. 'DP' → logprob: -5.635159015655518
    3. '
' → logprob: -6.510159015655518
    4. ' dp' → logprob: -7.010159015655518
    5. '\n' → logprob: -7.260159015655518
    6. 'result' → logprob: -7.385159015655518
    7. 'd' → logprob: -7.635159015655518
    8. '_dp' → logprob: -7.885159015655518
    9. 'for' → logprob: -8.510159492492676
    10. '#' → logprob: -8.510159492492676

Token 44: ' Calcul' (ID: 57243)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.011464985087513924
    2. ' dp' → logprob: -4.511465072631836
    3. 'ans' → logprob: -9.261465072631836
    4. 'result' → logprob: -9.761465072631836
    5. ' ans' → logprob: -10.011465072631836
    6. 'pow' → logprob: -10.511465072631836
    7. 'DP' → logprob: -10.636465072631836
    8. 'f' → logprob: -10.636465072631836
    9. 'fact' → logprob: -10.761465072631836
    10. '#' → logprob: -11.011465072631836

Token 45: ' des' (ID: 731)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ate' → logprob: -9.043078898685053e-05
    2. 'ating' → logprob: -9.625090599060059
    3. 'ator' → logprob: -10.875090599060059
    4. 'a' → logprob: -12.875090599060059
    5. 'ATE' → logprob: -13.375090599060059
    6. 'ation' → logprob: -14.250090599060059
    7. 'ated' → logprob: -14.750090599060059
    8. 'at' → logprob: -15.750090599060059
    9. 'ater' → logprob: -17.000089645385742
    10. '```' → logprob: -17.000089645385742

Token 46: ' fact' (ID: 2840)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.65392005443573
    2. ' ' → logprob: -2.1539201736450195
    3. ' chemins' → logprob: -2.5289201736450195
    4. ' nombres' → logprob: -2.6539201736450195
    5. ' ways' → logprob: -3.0289201736450195
    6. ' espaces' → logprob: -3.2789201736450195
    7. ' paths' → logprob: -3.2789201736450195
    8. ' dp' → logprob: -4.4039201736450195
    9. ' _' → logprob: -4.9039201736450195
    10. ' ' → logprob: -5.2789201736450195

Token 47: 'ori' (ID: 6510)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.4806596636772156
    2. 'ori' → logprob: -1.2306597232818604
    3. 'or' → logprob: -2.9806597232818604
    4. 'orial' → logprob: -3.3556597232818604
    5. '```' → logprob: -5.855659484863281
    6. 'ories' → logprob: -7.980659484863281
    7. 'oria' → logprob: -8.480659484863281
    8. 'oires' → logprob: -9.105659484863281
    9. '``' → logprob: -9.605659484863281
    10. 'oir' → logprob: -9.730659484863281

Token 48: 'elles' (ID: 8500)
  Prédit: 'els'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'els' → logprob: -0.11072210222482681
    2. 'elles' → logprob: -2.485722064971924
    3. 'el' → logprob: -4.360722064971924
    4. 'a' → logprob: -5.485722064971924
    5. 'e' → logprob: -6.235722064971924
    6. '`' → logprob: -7.360722064971924
    7. 'als' → logprob: -7.610722064971924
    8. 'al' → logprob: -7.735722064971924
    9. '```' → logprob: -7.860722064971924
    10. 'ales' → logprob: -8.735722541809082

Token 49: ' et' (ID: 859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.18961499631404877
    2. 's' → logprob: -3.06461501121521
    3. '[' → logprob: -3.56461501121521
    4. ',' → logprob: -3.56461501121521
    5. 'f' → logprob: -4.189614772796631
    6. '_factor' → logprob: -4.564614772796631
    7. '_fact' → logprob: -4.689614772796631
    8. ' ' → logprob: -5.064614772796631
    9. 'fact' → logprob: -5.439614772796631
    10. ' and' → logprob: -5.439614772796631

Token 50: ' invers' (ID: 38721)
  Prédit: ' leurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' leurs' → logprob: -0.6707595586776733
    2. ' des' → logprob: -1.9207595586776733
    3. 'les' → logprob: -2.545759677886963
    4. 'leurs' → logprob: -2.670759677886963
    5. 'des' → logprob: -3.295759677886963
    6. ' les' → logprob: -3.795759677886963
    7. 'in' → logprob: -3.920759677886963
    8. 'inverse' → logprob: -3.920759677886963
    9. 'leur' → logprob: -4.045759677886963
    10. '```' → logprob: -4.295759677886963

Token 51: 'es' (ID: 268)
  Prédit: 'es'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'es' → logprob: -0.00020616286201402545
    2. 'e' → logprob: -8.500205993652344
    3. 'és' → logprob: -13.875205993652344
    4. '```' → logprob: -14.000205993652344
    5. 's' → logprob: -15.875205993652344
    6. 'aires' → logprob: -16.000205993652344
    7. 'ées' → logprob: -16.125205993652344
    8. 'ces' → logprob: -16.500205993652344
    9. 'ses' → logprob: -16.500205993652344
    10. 'des' → logprob: -16.625205993652344

Token 52: ' modulo' (ID: 112372)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2899063527584076
    2. ',' → logprob: -2.9149062633514404
    3. ' ' → logprob: -2.9149062633514404
    4. '_fact' → logprob: -3.0399062633514404
    5. '_factor' → logprob: -3.9149062633514404
    6. '
' → logprob: -3.9149062633514404
    7. 'fact' → logprob: -4.2899065017700195
    8. '```' → logprob: -4.6649065017700195
    9. ' _' → logprob: -4.9149065017700195
    10. '[' → logprob: -5.1649065017700195

Token 53: ' mod' (ID: 1812)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.599830150604248
    2. ':' → logprob: -2.599830150604248
    3. '_' → logprob: -2.849830150604248
    4. 'n' → logprob: -2.849830150604248
    5. '_fact' → logprob: -2.974830150604248
    6. '
' → logprob: -3.349830150604248
    7. '_factor' → logprob: -3.599830150604248
    8. ',' → logprob: -3.599830150604248
    9. '```' → logprob: -3.724830150604248
    10. 'factor' → logprob: -3.974830150604248

Token 54: '
' (ID: 198)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.29888978600502014
    2. '_fact' → logprob: -2.5488898754119873
    3. '_' → logprob: -2.9238898754119873
    4. '
' → logprob: -3.0488898754119873
    5. '_factor' → logprob: -3.7988898754119873
    6. '!' → logprob: -4.173889636993408
    7. 'factor' → logprob: -4.173889636993408
    8. 'n' → logprob: -5.298889636993408
    9. '```' → logprob: -5.798889636993408
    10. 'max' → logprob: -5.923889636993408

Token 55: 'FACT' (ID: 105795)
  Prédit: 'fact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fact' → logprob: -0.4136330783367157
    2. '
' → logprob: -2.413633108139038
    3. '_fact' → logprob: -2.913633108139038
    4. 'n' → logprob: -3.038633108139038
    5. 'max' → logprob: -3.163633108139038
    6. 'factor' → logprob: -3.538633108139038
    7. '_' → logprob: -3.913633108139038
    8. '```' → logprob: -4.288632869720459
    9. '_factor' → logprob: -4.663632869720459
    10. ' fact' → logprob: -5.538632869720459

Token 56: ' =' (ID: 314)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -1.004826545715332
    2. 'OR' → logprob: -1.504826545715332
    3. '=' → logprob: -1.879826545715332
    4. ' =' → logprob: -2.004826545715332
    5. '_' → logprob: -2.879826545715332
    6. '[]' → logprob: -4.004826545715332
    7. 'or' → logprob: -4.004826545715332
    8. 'O' → logprob: -4.879826545715332
    9. 's' → logprob: -5.004826545715332
    10. '[' → logprob: -5.504826545715332

Token 57: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04859054833650589
    2. ' [' → logprob: -3.048590660095215
    3. '[int' → logprob: -13.548590660095215
    4. '[i' → logprob: -14.298590660095215
    5. '[len' → logprob: -15.673590660095215
    6. '[I' → logprob: -15.923590660095215
    7. ' ' → logprob: -16.1735897064209
    8. '[n' → logprob: -16.1735897064209
    9. '[a' → logprob: -16.5485897064209
    10. '[p' → logprob: -16.7985897064209

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. ']' → logprob: -21.0
    4. '   ' → logprob: -22.0
    5. '１' → logprob: -22.125
    6. '  ' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. ')' → logprob: -23.0
    9. '...' → logprob: -23.25
    10. '۱' → logprob: -23.75

Token 59: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004135112394578755
    2. ',' → logprob: -8.87541389465332
    3. ']
' → logprob: -9.00041389465332
    4. ' ]' → logprob: -9.12541389465332
    5. ']*' → logprob: -10.87541389465332
    6. ']*(' → logprob: -10.87541389465332
    7. ']
' → logprob: -13.87541389465332
    8. ']

' → logprob: -14.12541389465332
    9. ']int' → logprob: -14.75041389465332
    10. ']+' → logprob: -14.87541389465332

Token 60: 'for' (ID: 1938)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4429273307323456
    2. ' ' → logprob: -1.567927360534668
    3. '*' → logprob: -2.192927360534668
    4. ' for' → logprob: -4.317927360534668
    5. '0' → logprob: -5.317927360534668
    6. '_' → logprob: -5.692927360534668
    7. ' ,' → logprob: -5.692927360534668
    8. ']' → logprob: -6.192927360534668
    9. 'for' → logprob: -6.317927360534668
    10. '[' → logprob: -6.567927360534668

Token 61: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.018164927139878273
    2. 'i' → logprob: -4.018165111541748
    3. ' ' → logprob: -12.14316463470459
    4. '	i' → logprob: -12.14316463470459
    5. ' ' → logprob: -13.39316463470459
    6. 'x' → logprob: -14.14316463470459
    7. ' x' → logprob: -14.39316463470459
    8. '  ' → logprob: -14.64316463470459
    9. ' _' → logprob: -14.76816463470459
    10. '_' → logprob: -14.89316463470459

Token 62: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009605350787751377
    2. 'in' → logprob: -7.000960350036621
    3. ' ' → logprob: -10.125960350036621
    4. '1' → logprob: -11.875960350036621
    5. ' i' → logprob: -15.000960350036621
    6. '	in' → logprob: -15.000960350036621
    7. '2' → logprob: -15.125960350036621
    8. '  ' → logprob: -15.375960350036621
    9. ',' → logprob: -15.375960350036621
    10. 'range' → logprob: -15.625960350036621

Token 63: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.00862213596701622
    2. 'range' → logprob: -4.758622169494629
    3. ' ' → logprob: -12.008622169494629
    4. '(range' → logprob: -13.883622169494629
    5. '	range' → logprob: -14.883622169494629
    6. '  ' → logprob: -16.383621215820312
    7. '1' → logprob: -17.383621215820312
    8. ' in' → logprob: -17.383621215820312
    9. ' xrange' → logprob: -17.758621215820312
    10. ')' → logprob: -18.008621215820312

Token 64: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024821963161230087
    2. '1' → logprob: -6.0024824142456055
    3. ' (' → logprob: -12.252482414245605
    4. '(H' → logprob: -14.377482414245605
    5. ' ' → logprob: -14.502482414245605
    6. '[' → logprob: -15.252482414245605
    7. '2' → logprob: -16.00248146057129
    8. '(
' → logprob: -16.75248146057129
    9. '(max' → logprob: -16.87748146057129
    10. 'H' → logprob: -17.50248146057129

Token 65: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026634239475242794
    2. ' ' → logprob: -9.125266075134277
    3. 'max' → logprob: -9.625266075134277
    4. '2' → logprob: -10.125266075134277
    5. 'W' → logprob: -11.250266075134277
    6. 'H' → logprob: -11.250266075134277
    7. '100' → logprob: -11.375266075134277
    8. '10' → logprob: -11.875266075134277
    9. ' max' → logprob: -13.375266075134277
    10. '400' → logprob: -14.000266075134277

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.043039727956056595
    2. ' ,' → logprob: -3.1680397987365723
    3. ',H' → logprob: -10.168039321899414
    4. ',W' → logprob: -14.293039321899414
    5. ',len' → logprob: -14.668039321899414
    6. ' ' → logprob: -15.168039321899414
    7. ',
' → logprob: -15.793039321899414
    8. ',int' → logprob: -16.043039321899414
    9. ' ,
' → logprob: -16.043039321899414
    10. 'H' → logprob: -16.168039321899414

Token 67: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.5275635719299316
    2. '10' → logprob: -1.6525635719299316
    3. 'H' → logprob: -2.2775635719299316
    4. ' ' → logprob: -3.5275635719299316
    5. ' max' → logprob: -3.5275635719299316
    6. '100' → logprob: -3.6525635719299316
    7. 'W' → logprob: -4.152563571929932
    8. '500' → logprob: -5.152563571929932
    9. '2' → logprob: -6.402563571929932
    10. '200' → logprob: -6.652563571929932

Token 68: '21' (ID: 2040)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.34474050998687744
    2. 'H' → logprob: -2.219740390777588
    3. '10' → logprob: -2.469740390777588
    4. '100' → logprob: -2.969740390777588
    5. '200' → logprob: -4.344740390777588
    6. '300' → logprob: -4.469740390777588
    7. '500' → logprob: -4.844740390777588
    8. '2' → logprob: -5.344740390777588
    9. 'W' → logprob: -5.719740390777588
    10. '400' → logprob: -5.969740390777588

Token 69: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014147520996630192
    2. '):
' → logprob: -4.639147758483887
    3. ' ):' → logprob: -5.639147758483887
    4. ')' → logprob: -8.139147758483887
    5. '0' → logprob: -8.389147758483887
    6. ' ):
' → logprob: -9.639147758483887
    7. ':' → logprob: -9.889147758483887
    8. '7' → logprob: -10.264147758483887
    9. '+' → logprob: -10.514147758483887
    10. '6' → logprob: -10.764147758483887

Token 70: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12159442156553268
    2. ' FACT' → logprob: -2.4965944290161133
    3. ' 
' → logprob: -4.246594429016113
    4. 'FACT' → logprob: -4.996594429016113
    5. ' ' → logprob: -5.121594429016113
    6. ' ```' → logprob: -6.996594429016113
    7. '```' → logprob: -6.996594429016113
    8. '  
' → logprob: -7.621594429016113
    9. '   ' → logprob: -8.371594429016113
    10. '0' → logprob: -8.621594429016113

Token 71: ' FACT' (ID: 99053)
  Prédit: ' FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' FACT' → logprob: -0.0631987527012825
    2. ' ' → logprob: -3.1881988048553467
    3. 'FACT' (adapté à ' FACT') → logprob: -3.9381988048553467
    4. ' fact' → logprob: -8.688199043273926
    5. ' ' → logprob: -9.313199043273926
    6. ' factorial' → logprob: -9.688199043273926
    7. ' ```' → logprob: -10.063199043273926
    8. ' Fact' → logprob: -10.563199043273926
    9. 'Fact' → logprob: -10.688199043273926
    10. '_FACT' → logprob: -10.813199043273926

Token 72: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.013047992251813412
    2. '.' → logprob: -4.38804817199707
    3. '.extend' → logprob: -8.38804817199707
    4. '=' → logprob: -9.26304817199707
    5. ' .' → logprob: -9.38804817199707
    6. ' =' → logprob: -9.88804817199707
    7. '*' → logprob: -10.26304817199707
    8. ' *=' → logprob: -11.13804817199707
    9. 'append' → logprob: -11.51304817199707
    10. '*=' → logprob: -11.63804817199707

Token 73: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.2471589798224159e-05
    2. '((' → logprob: -12.250012397766113
    3. ' FACT' → logprob: -13.000012397766113
    4. '(i' → logprob: -13.125012397766113
    5. 'FACT' → logprob: -13.125012397766113
    6. '(F' → logprob: -14.125012397766113
    7. '(f' → logprob: -14.750012397766113
    8. 'Fact' → logprob: -16.37501335144043
    9. ' (' → logprob: -16.50001335144043
    10. '()' → logprob: -17.62501335144043

Token 74: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.011138836853206158
    2. ' FACT' → logprob: -4.511138916015625
    3. 'FA' → logprob: -9.511138916015625
    4. 'i' → logprob: -11.636138916015625
    5. ' ' → logprob: -12.386138916015625
    6. '_FACT' → logprob: -14.136138916015625
    7. 'FAC' → logprob: -14.136138916015625
    8. ' i' → logprob: -14.386138916015625
    9. 'Fact' → logprob: -14.511138916015625
    10. 'fact' → logprob: -14.886138916015625

Token 75: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.001170225441455841
    2. '[i' → logprob: -6.7511701583862305
    3. '[' → logprob: -17.376171112060547
    4. ' [-' → logprob: -19.251171112060547
    5. '[
' → logprob: -20.751171112060547
    6. 'i' → logprob: -20.876171112060547
    7. '   ' → logprob: -21.126171112060547
    8. '	' → logprob: -21.751171112060547
    9. '-' → logprob: -22.751171112060547
    10. '1' → logprob: -23.251171112060547

Token 76: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.399378566537052e-05
    2. 'i' → logprob: -9.750083923339844
    3. ' ' → logprob: -11.250083923339844
    4. '   ' → logprob: -11.625083923339844
    5. '  ' → logprob: -13.375083923339844
    6. ' i' → logprob: -13.625083923339844
    7. '    ' → logprob: -15.500083923339844
    8. '     ' → logprob: -16.250083923339844
    9. '*i' → logprob: -16.375083923339844
    10. '```' → logprob: -16.625083923339844

Token 77: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4305632710456848
    2. '*' → logprob: -1.05556321144104
    3. '*i' → logprob: -6.305563449859619
    4. ' ' → logprob: -10.680562973022461
    5. ')' → logprob: -12.305562973022461
    6. '   ' → logprob: -13.180562973022461
    7. ')*' → logprob: -13.680562973022461
    8. ' ' → logprob: -13.680562973022461
    9. '**' → logprob: -14.305562973022461
    10. 'i' → logprob: -14.805562973022461

Token 78: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1813613772392273
    2. ' *' → logprob: -1.806361436843872
    3. '*i' → logprob: -6.431361198425293
    4. ' ' → logprob: -12.806361198425293
    5. ' ' → logprob: -13.931361198425293
    6. '**' → logprob: -15.056361198425293
    7. '   ' → logprob: -15.306361198425293
    8. '*object' → logprob: -15.806361198425293
    9. '*
' → logprob: -16.30636215209961
    10. '*

' → logprob: -16.43136215209961

Token 79: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5759406089782715
    2. 'i' → logprob: -0.8259406089782715
    3. ' ' → logprob: -14.70094108581543
    4. '	i' → logprob: -14.70094108581543
    5. ')i' → logprob: -16.07594108581543
    6. '   ' → logprob: -16.07594108581543
    7. ')' → logprob: -17.20094108581543
    8. '*i' → logprob: -17.45094108581543
    9. '(i' → logprob: -17.70094108581543
    10. '  ' → logprob: -18.07594108581543

Token 80: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009631502907723188
    2. ' )' → logprob: -7.12596321105957
    3. ')%' → logprob: -8.75096321105957
    4. '%' → logprob: -15.50096321105957
    5. '))' → logprob: -18.12596321105957
    6. '）' → logprob: -18.75096321105957
    7. ')
' → logprob: -19.12596321105957
    8. ' %' → logprob: -19.25096321105957
    9. ')#' → logprob: -19.50096321105957
    10. '`)' → logprob: -19.62596321105957

Token 81: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.9122343063354492
    2. ' %' → logprob: -0.9122343063354492
    3. ')' → logprob: -1.6622343063354492
    4. ')%' → logprob: -5.537234306335449
    5. ' )' → logprob: -5.787234306335449
    6. ' ' → logprob: -11.66223430633545
    7. ' %)' → logprob: -11.66223430633545
    8. '%)' → logprob: -12.16223430633545
    9. ' ' → logprob: -12.91223430633545
    10. '%n' → logprob: -13.66223430633545

Token 82: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.5759425163269043
    2. ' mod' → logprob: -0.8259425163269043
    3. ' ' → logprob: -13.200942993164062
    4. '(mod' → logprob: -14.325942993164062
    5. '	mod' → logprob: -15.200942993164062
    6. '998' → logprob: -15.450942993164062
    7. '```' → logprob: -17.200942993164062
    8. ' мод' → logprob: -17.575942993164062
    9. ' modul' → logprob: -18.325942993164062
    10. '999' → logprob: -18.575942993164062

Token 83: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9266199160483666e-05
    2. ' )' → logprob: -10.875019073486328
    3. ')
' → logprob: -15.625019073486328
    4. '))' → logprob: -19.250019073486328
    5. '）' → logprob: -19.250019073486328
    6. ')

' → logprob: -19.500019073486328
    7. ')return' → logprob: -19.500019073486328
    8. ')`' → logprob: -19.625019073486328
    9. ')i' → logprob: -19.875019073486328
    10. '),' → logprob: -20.125019073486328

Token 84: 'FACT' (ID: 105795)
  Prédit: 'INV'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'INV' → logprob: -0.06349648535251617
    2. 'inv' → logprob: -2.8134965896606445
    3. 'IN' → logprob: -7.4384965896606445
    4. '_INV' → logprob: -7.6884965896606445
    5. 'inverse' → logprob: -8.938496589660645
    6. 'in' → logprob: -9.188496589660645
    7. 'FACT' → logprob: -9.938496589660645
    8. 'INVAL' → logprob: -10.188496589660645
    9. '_inv' → logprob: -10.563496589660645
    10. 'ifact' → logprob: -10.813496589660645

Token 85: '_INV' (ID: 116669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994865834712982
    2. '=' → logprob: -2.694948673248291
    3. '=[' → logprob: -12.319948196411133
    4. ' =[' → logprob: -12.569948196411133
    5. '.append' → logprob: -13.444948196411133
    6. ' ' → logprob: -13.819948196411133
    7. '=[]' → logprob: -14.069948196411133
    8. '[' → logprob: -14.569948196411133
    9. '_' → logprob: -15.319948196411133
    10. '＝' → logprob: -15.569948196411133

Token 87: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014165391214191914
    2. ' [' → logprob: -4.26416540145874
    3. '[len' → logprob: -14.264164924621582
    4. '[]' → logprob: -14.389164924621582
    5. ' ' → logprob: -15.264164924621582
    6. '([' → logprob: -17.0141658782959
    7. '[i' → logprob: -17.1391658782959
    8. ' ' → logprob: -17.2641658782959
    9. '[-' → logprob: -17.3891658782959
    10. '[(' → logprob: -17.3891658782959

Token 88: 'pow' (ID: 30304)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. '0' → logprob: -11.750015258789062
    3. 'None' → logprob: -12.000015258789062
    4. ' ' → logprob: -14.875015258789062
    5. ']' → logprob: -15.750015258789062
    6. '```' → logprob: -15.875015258789062
    7. '[' → logprob: -16.625015258789062
    8. '-' → logprob: -17.000015258789062
    9. '<|end|>' → logprob: -17.000015258789062
    10. ')' → logprob: -17.375015258789062

Token 89: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -3.9888433093437925e-05
    2. '(f' → logprob: -11.250040054321289
    3. ')' → logprob: -11.625040054321289
    4. '```' → logprob: -12.250040054321289
    5. '(
' → logprob: -13.000040054321289
    6. '(F' → logprob: -13.375040054321289
    7. '10' → logprob: -13.500040054321289
    8. '((' → logprob: -13.625040054321289
    9. '(`' → logprob: -13.750040054321289
    10. '(i' → logprob: -14.250040054321289

Token 90: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.17311587929725647
    2. '(' → logprob: -2.9231159687042236
    3. '1' → logprob: -3.5481159687042236
    4. '2' → logprob: -3.6731159687042236
    5. ')' → logprob: -4.1731157302856445
    6. '19' → logprob: -4.6731157302856445
    7. ' FACT' → logprob: -5.0481157302856445
    8. 'FA' → logprob: -5.1731157302856445
    9. '10' → logprob: -5.9231157302856445
    10. '20' → logprob: -6.2981157302856445

Token 91: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00026860725483857095
    2. '[' → logprob: -8.250268936157227
    3. '-' → logprob: -12.125268936157227
    4. '```' → logprob: -14.625268936157227
    5. '][-' → logprob: -14.750268936157227
    6. ' [-' → logprob: -15.125268936157227
    7. '[
' → logprob: -15.375268936157227
    8. '
' → logprob: -15.625268936157227
    9. '[i' → logprob: -15.750268936157227
    10. ' ' → logprob: -16.375268936157227

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '
' → logprob: -12.50001049041748
    3. '2' → logprob: -13.56251049041748
    4. ' ' → logprob: -13.93751049041748
    5. '```' → logprob: -14.50001049041748
    6. '

' → logprob: -14.56251049041748
    7. '11' → logprob: -14.68751049041748
    8. '
' → logprob: -15.06251049041748
    9. ']' → logprob: -15.50001049041748
    10. '``' → logprob: -15.81251049041748

Token 93: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003086486831307411
    2. ' ,' → logprob: -8.125308990478516
    3. ',i' → logprob: -12.250308990478516
    4. ' ' → logprob: -13.125308990478516
    5. ',
' → logprob: -13.875308990478516
    6. ')' → logprob: -14.125308990478516
    7. ',num' → logprob: -14.750308990478516
    8. '，' → logprob: -14.875308990478516
    9. ',n' → logprob: -14.875308990478516
    10. '‌,' → logprob: -15.000308990478516

Token 94: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.38295263051986694
    2. '-' → logprob: -1.7579526901245117
    3. ' mod' → logprob: -2.0079526901245117
    4. ' ' → logprob: -4.757952690124512
    5. ' -' → logprob: -6.132952690124512
    6. '998' → logprob: -8.507952690124512
    7. '-mod' → logprob: -8.507952690124512
    8. '	mod' → logprob: -8.507952690124512
    9. '(mod' → logprob: -10.007952690124512
    10. 'm' → logprob: -11.757952690124512

Token 95: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.004620241466909647
    2. ' -' → logprob: -5.37962007522583
    3. ' ' → logprob: -16.754619598388672
    4. '−' → logprob: -17.129619598388672
    5. '```' → logprob: -17.879619598388672
    6. '2' → logprob: -18.817119598388672
    7. '-
' → logprob: -18.942119598388672
    8. ' ' → logprob: -18.942119598388672
    9. '–' → logprob: -19.567119598388672
    10. '{-' → logprob: -19.567119598388672

Token 96: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.723973582556937e-05
    2. '-' → logprob: -11.250017166137695
    3. ' ' → logprob: -13.625017166137695
    4. '```' → logprob: -14.375017166137695
    5. '' → logprob: -14.625017166137695
    6. '

' → logprob: -15.187517166137695
    7. ' -' → logprob: -15.500017166137695
    8. '２' → logprob: -16.062517166137695
    9. '22' → logprob: -16.062517166137695
    10. '۲' → logprob: -16.125017166137695

Token 97: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1041145626222715e-05
    2. '-' → logprob: -12.000011444091797
    3. ' ' → logprob: -14.062511444091797
    4. '

' → logprob: -14.062511444091797
    5. '```' → logprob: -14.375011444091797
    6. '' → logprob: -14.687511444091797
    7. '
' → logprob: -15.000011444091797
    8. '22' → logprob: -15.437511444091797
    9. ' -' → logprob: -16.062511444091797
    10. '
' → logprob: -16.062511444091797

Token 98: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0027148802764713764
    2. ')' → logprob: -6.002715110778809
    3. ' ,' → logprob: -8.502715110778809
    4. ' ' → logprob: -10.627715110778809
    5. ',)' → logprob: -12.127715110778809
    6. ' )' → logprob: -13.377715110778809
    7. ')]' → logprob: -13.502715110778809
    8. ',
' → logprob: -13.877715110778809
    9. '),' → logprob: -15.002715110778809
    10. '))' → logprob: -15.127715110778809

Token 99: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.08906923979520798
    2. ' mod' → logprob: -2.464069128036499
    3. ')' → logprob: -9.339069366455078
    4. '	mod' → logprob: -10.589069366455078
    5. ' 
' → logprob: -12.464069366455078
    6. ' )' → logprob: -12.714069366455078
    7. '(mod' → logprob: -12.714069366455078
    8. '
' → logprob: -12.839069366455078
    9. ' ' → logprob: -13.214069366455078
    10. '```' → logprob: -14.339069366455078

Token 100: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10028322786092758
    2. ')]' → logprob: -2.350283145904541
    3. ')])' → logprob: -10.7252836227417
    4. ')
' → logprob: -11.1002836227417
    5. ' )' → logprob: -11.3502836227417
    6. '))' → logprob: -11.3502836227417
    7. ')]
' → logprob: -12.4752836227417
    8. ']' → logprob: -12.6002836227417
    9. '),' → logprob: -12.7252836227417
    10. ')`' → logprob: -13.6002836227417

Token 101: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10236642509698868
    2. ' for' → logprob: -2.4773664474487305
    3. '
' → logprob: -4.4773664474487305
    4. ',' → logprob: -6.9773664474487305
    5. '<|end|>' → logprob: -8.35236644744873
    6. '```' → logprob: -8.85236644744873
    7. '#' → logprob: -9.22736644744873
    8. ' 
' → logprob: -9.35236644744873
    9. ',
' → logprob: -9.47736644744873
    10. '  
' → logprob: -9.47736644744873

Token 102: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00881617795675993
    2. 'i' → logprob: -4.758816242218018
    3. ' range' → logprob: -9.25881576538086
    4. 'range' → logprob: -10.00881576538086
    5. ' ' → logprob: -10.50881576538086
    6. '	i' → logprob: -10.50881576538086
    7. ' ' → logprob: -13.13381576538086
    8. '  ' → logprob: -13.88381576538086
    9. ' in' → logprob: -14.00881576538086
    10. '_i' → logprob: -14.00881576538086

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002215915359556675
    2. 'in' → logprob: -6.50221586227417
    3. 'n' → logprob: -7.87721586227417
    4. ' ' → logprob: -8.127216339111328
    5. ' i' → logprob: -11.002216339111328
    6. '  ' → logprob: -11.877216339111328
    7. '	in' → logprob: -12.627216339111328
    8. ' n' → logprob: -12.752216339111328
    9. '<|end|>' → logprob: -13.002216339111328
    10. ',' → logprob: -13.877216339111328

Token 104: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.07907815277576447
    2. ' range' → logprob: -2.579078197479248
    3. 're' → logprob: -8.82907772064209
    4. ' reversed' → logprob: -11.20407772064209
    5. '	range' → logprob: -11.20407772064209
    6. ' ' → logprob: -11.82907772064209
    7. '(range' → logprob: -12.57907772064209
    8. '  ' → logprob: -13.70407772064209
    9. 'list' → logprob: -13.95407772064209
    10. '   ' → logprob: -13.95407772064209

Token 105: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00012821101699955761
    2. '(range' → logprob: -9.000127792358398
    3. '(len' → logprob: -13.250127792358398
    4. 'range' → logprob: -13.875127792358398
    5. ' (' → logprob: -13.875127792358398
    6. ' range' → logprob: -14.625127792358398
    7. '((' → logprob: -15.125127792358398
    8. '(
' → logprob: -15.625127792358398
    9. '(re' → logprob: -16.7501277923584
    10. '(i' → logprob: -17.6251277923584

Token 106: '20' (ID: 455)
  Prédit: '20'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.0001242772996192798
    2. '19' → logprob: -9.625123977661133
    3. ' ' → logprob: -10.125123977661133
    4. 'range' → logprob: -11.125123977661133
    5. '2' → logprob: -13.250123977661133
    6. '1' → logprob: -13.875123977661133
    7. '  ' → logprob: -15.750123977661133
    8. ' range' → logprob: -15.875123977661133
    9. '   ' → logprob: -16.375123977661133
    10. '
' → logprob: -16.625123977661133

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07995563745498657
    2. ' ,' → logprob: -2.704955577850342
    3. '-' → logprob: -4.829955577850342
    4. ' -' → logprob: -7.204955577850342
    5. '0' → logprob: -7.329955577850342
    6. ' ' → logprob: -7.704955577850342
    7. ' in' → logprob: -10.3299560546875
    8. '2' → logprob: -10.7049560546875
    9. '  ' → logprob: -10.9549560546875
    10. '1' → logprob: -11.2049560546875

Token 108: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02630993351340294
    2. ' ' → logprob: -3.6513099670410156
    3. '-' → logprob: -12.901309967041016
    4. ' -' → logprob: -13.151309967041016
    5. '   ' → logprob: -14.026309967041016
    6. '  ' → logprob: -14.026309967041016
    7. '
' → logprob: -14.151309967041016
    8. '	' → logprob: -14.338809967041016
    9. '1' → logprob: -14.651309967041016
    10. '```' → logprob: -15.088809967041016

Token 109: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '1' → logprob: -18.750003814697266
    4. '```' → logprob: -18.750003814697266
    5. '   ' → logprob: -19.625003814697266
    6. '-' → logprob: -19.625003814697266
    7. '۰' → logprob: -21.125003814697266
    8. '  ' → logprob: -21.125003814697266
    9. '	' → logprob: -21.375003814697266
    10. ' -' → logprob: -22.125003814697266

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03693653270602226
    2. '-' → logprob: -3.6619365215301514
    3. ' ,' → logprob: -4.9119367599487305
    4. ',-' → logprob: -6.4119367599487305
    5. ' -' → logprob: -6.5369367599487305
    6. ' ,-' → logprob: -9.41193675994873
    7. '-,' → logprob: -11.03693675994873
    8. '   ' → logprob: -11.41193675994873
    9. ' ' → logprob: -11.53693675994873
    10. ',
' → logprob: -13.16193675994873

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20164147019386292
    2. ' -' → logprob: -1.7016414403915405
    3. '1' → logprob: -9.576641082763672
    4. ' ' → logprob: -9.951641082763672
    5. '  ' → logprob: -10.201641082763672
    6. '   ' → logprob: -10.451641082763672
    7. '```' → logprob: -11.076641082763672
    8. ')' → logprob: -11.201641082763672
    9. '):
' → logprob: -12.451641082763672
    10. '-i' → logprob: -12.951641082763672

Token 112: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -7.004696090007201e-05
    2. ' -' → logprob: -9.750069618225098
    3. '1' → logprob: -12.125069618225098
    4. ')' → logprob: -12.250069618225098
    5. '-)' → logprob: -14.250069618225098
    6. '-i' → logprob: -15.000069618225098
    7. ')-' → logprob: -15.750069618225098
    8. 'i' → logprob: -15.875069618225098
    9. '```' → logprob: -16.125070571899414
    10. '):
' → logprob: -16.375070571899414

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21523794531822205
    2. '):
' → logprob: -1.9652379751205444
    3. '-' → logprob: -2.965237855911255
    4. ' ):' → logprob: -6.965238094329834
    5. ')' → logprob: -7.340238094329834
    6. ' ):
' → logprob: -8.340237617492676
    7. ' -' → logprob: -9.590237617492676
    8. '):
' → logprob: -10.340237617492676
    9. ':' → logprob: -10.715237617492676
    10. ',' → logprob: -11.715237617492676

Token 114: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003404070856049657
    2. '    
' → logprob: -6.878404140472412
    3. ' FACT' → logprob: -7.003404140472412
    4. '	' → logprob: -7.378404140472412
    5. ' ' → logprob: -8.253403663635254
    6. ' 
' → logprob: -9.003403663635254
    7. '```' → logprob: -9.503403663635254
    8. 'FACT' → logprob: -9.628403663635254
    9. '	
' → logprob: -10.003403663635254
    10. '<|end|>' → logprob: -10.128403663635254

Token 115: ' FACT' (ID: 99053)
  Prédit: ' FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' FACT' → logprob: -0.28539153933525085
    2. 'FACT' (adapté à ' FACT') → logprob: -1.6603915691375732
    3. '   ' → logprob: -2.9103915691375732
    4. ' ' → logprob: -6.910391330718994
    5. ' 
' → logprob: -7.660391330718994
    6. '_FACT' → logprob: -7.910391330718994
    7. '    
' → logprob: -8.285391807556152
    8. '```' → logprob: -8.410391807556152
    9. ' fact' → logprob: -8.660391807556152
    10. 'Fact' → logprob: -8.660391807556152

Token 116: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -4.246537173457909e-06
    2. '_inv' → logprob: -13.250003814697266
    3. '.append' → logprob: -13.875003814697266
    4. 'INV' → logprob: -15.375003814697266
    5. '=_' → logprob: -16.000003814697266
    6. '=' → logprob: -16.000003814697266
    7. '.inv' → logprob: -16.125003814697266
    8. '   ' → logprob: -16.250003814697266
    9. '_APPEND' → logprob: -16.250003814697266
    10. '.' → logprob: -16.375003814697266

Token 117: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0025106200482696295
    2. '.' → logprob: -6.0025105476379395
    3. ' .' → logprob: -10.752511024475098
    4. 'append' → logprob: -12.627511024475098
    5. '.extend' → logprob: -12.627511024475098
    6. '=' → logprob: -13.377511024475098
    7. '.app' → logprob: -14.002511024475098
    8. '.push' → logprob: -14.377511024475098
    9. ').' → logprob: -14.377511024475098
    10. ' ' → logprob: -14.627511024475098

Token 118: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.2519918978214264
    2. '(' → logprob: -1.501991868019104
    3. '(((' → logprob: -10.626992225646973
    4. '(
' → logprob: -10.751992225646973
    5. '(pow' → logprob: -11.876992225646973
    6. ' (' → logprob: -13.001992225646973
    7. '((((' → logprob: -13.001992225646973
    8. '(F' → logprob: -14.001992225646973
    9. '()' → logprob: -14.001992225646973
    10. '(i' → logprob: -14.501992225646973

Token 119: 'FACT' (ID: 105795)
  Prédit: 'FACT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.016377557069063187
    2. '(' → logprob: -4.2663774490356445
    3. ' FACT' → logprob: -6.2663774490356445
    4. 'FA' → logprob: -8.766377449035645
    5. 'Fact' → logprob: -9.891377449035645
    6. '_FACT' → logprob: -10.266377449035645
    7. 'fact' → logprob: -10.641377449035645
    8. '(F' → logprob: -11.266377449035645
    9. '   ' → logprob: -12.016377449035645
    10. ' (' → logprob: -12.016377449035645

Token 120: '_INV' (ID: 116669)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.020828912034630775
    2. '[i' → logprob: -4.020828723907471
    3. '_INV' → logprob: -6.395828723907471
    4. '[_' → logprob: -8.020829200744629
    5. '	' → logprob: -8.770829200744629
    6. '_' → logprob: -9.395829200744629
    7. '[' → logprob: -9.395829200744629
    8. '
' → logprob: -9.645829200744629
    9. '```' → logprob: -9.895829200744629
    10. '_inv' → logprob: -10.145829200744629

Token 121: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.750004768371582
    3. '[i' → logprob: -13.625004768371582
    4. '[
' → logprob: -15.375004768371582
    5. ' [-' → logprob: -16.000003814697266
    6. '
' → logprob: -16.125003814697266
    7. '-' → logprob: -16.750003814697266
    8. '	' → logprob: -18.250003814697266
    9. '   ' → logprob: -18.750003814697266
    10. ' ' → logprob: -19.625003814697266

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.203409844194539e-05
    2. 'i' → logprob: -11.187541961669922
    3. '2' → logprob: -12.250041961669922
    4. ')' → logprob: -12.625041961669922
    5. ' ' → logprob: -12.625041961669922
    6. '   ' → logprob: -12.625041961669922
    7. ']' → logprob: -13.562541961669922
    8. '```' → logprob: -13.687541961669922
    9. ' i' → logprob: -14.437541961669922
    10. '0' → logprob: -14.500041961669922

Token 123: ']' (ID: 60)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.2519739270210266
    2. '*' → logprob: -1.5019738674163818
    3. ' ' → logprob: -10.251974105834961
    4. '   ' → logprob: -12.876974105834961
    5. ')' → logprob: -13.751974105834961
    6. '*i' → logprob: -14.001974105834961
    7. '**' → logprob: -14.126974105834961
    8. ' **' → logprob: -14.126974105834961
    9. ' ' → logprob: -14.251974105834961
    10. '  ' → logprob: -14.751974105834961

Token 124: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.42876043915748596
    2. '*' → logprob: -1.0537604093551636
    3. ' ' → logprob: -10.178760528564453
    4. '   ' → logprob: -12.303760528564453
    5. '  ' → logprob: -12.553760528564453
    6. '**' → logprob: -12.928760528564453
    7. ' *
' → logprob: -13.303760528564453
    8. ')' → logprob: -13.428760528564453
    9. ' **' → logprob: -13.678760528564453
    10. ' ' → logprob: -13.803760528564453

Token 125: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.3868805170059204
    2. ' i' → logprob: -1.1368805170059204
    3. '(i' → logprob: -12.761880874633789
    4. '	i' → logprob: -12.886880874633789
    5. ' ' → logprob: -13.761880874633789
    6. ')i' → logprob: -14.261880874633789
    7. '%i' → logprob: -14.511880874633789
    8. ',i' → logprob: -14.761880874633789
    9. '[i' → logprob: -14.761880874633789
    10. '*i' → logprob: -15.261880874633789

Token 126: ')' (ID: 8)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.48025965690612793
    2. ')' → logprob: -0.9802596569061279
    3. ' )' → logprob: -5.730259895324707
    4. ' -' → logprob: -5.855259895324707
    5. '-)' → logprob: -11.230259895324707
    6. ')
' → logprob: -11.980259895324707
    7. '1' → logprob: -12.105259895324707
    8. ')%' → logprob: -12.230259895324707
    9. '))' → logprob: -12.980259895324707
    10. ')i' → logprob: -13.230259895324707

Token 127: ' %' (ID: 1851)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.010131550952792168
    2. ')' → logprob: -4.885131359100342
    3. ' -' → logprob: -6.010131359100342
    4. ' )' → logprob: -10.2601318359375
    5. '-)' → logprob: -10.6351318359375
    6. ' ' → logprob: -12.2601318359375
    7. '<|end|>' → logprob: -13.8851318359375
    8. '1' → logprob: -14.0101318359375
    9. '   ' → logprob: -15.2601318359375
    10. '0' → logprob: -15.6351318359375

Token 128: ' mod' (ID: 1812)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.37704429030418396
    2. 'mod' → logprob: -1.2520443201065063
    3. ' i' → logprob: -4.002044200897217
    4. '1' → logprob: -5.377044200897217
    5. ' mod' → logprob: -6.877044200897217
    6. ')' → logprob: -7.002044200897217
    7. '(i' → logprob: -7.127044200897217
    8. ' ' → logprob: -7.877044200897217
    9. '(' → logprob: -8.002044677734375
    10. '
' → logprob: -8.127044677734375

Token 129: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009638655465096235
    2. ')
' → logprob: -7.5009636878967285
    3. ' )' → logprob: -8.500964164733887
    4. '
' → logprob: -8.750964164733887
    5. '\n' → logprob: -11.625964164733887
    6. '0' → logprob: -11.750964164733887
    7. '' → logprob: -12.125964164733887
    8. '#' → logprob: -12.375964164733887
    9. ' ' → logprob: -12.750964164733887
    10. '[::-' → logprob: -13.125964164733887

Token 130: 'FACT' (ID: 105795)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.056648414582014084
    2. '[::-' → logprob: -3.9316484928131104
    3. '[' → logprob: -4.931648254394531
    4. ' 
' → logprob: -5.181648254394531
    5. ')' → logprob: -5.431648254394531
    6. 'FACT' → logprob: -5.681648254394531
    7. '\n' → logprob: -5.806648254394531
    8. '    
' → logprob: -6.431648254394531
    9. '
' → logprob: -6.556648254394531
    10. '#' → logprob: -6.556648254394531

Token 131: '_INV' (ID: 116669)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 132: ' =' (ID: 314)
  Prédit: '.reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.1483483463525772
    2. ' =' → logprob: -2.648348331451416
    3. '[::-' → logprob: -2.898348331451416
    4. '=' → logprob: -4.648348331451416
    5. '.' → logprob: -6.773348331451416
    6. '[' → logprob: -7.773348331451416
    7. '.pop' → logprob: -8.148348808288574
    8. ' .' → logprob: -8.648348808288574
    9. '=[' → logprob: -9.398348808288574
    10. '<|end|>' → logprob: -9.648348808288574

Token 133: ' FACT' (ID: 99053)
  Prédit: 'FACT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.014164566993713379
    2. ' FACT' → logprob: -4.264164447784424
    3. ' factorial' → logprob: -15.639164924621582
    4. ' list' → logprob: -15.764164924621582
    5. 'list' → logprob: -15.764164924621582
    6. 'LIST' → logprob: -15.764164924621582
    7. '_FACT' → logprob: -15.889164924621582
    8. 'FAC' → logprob: -15.889164924621582
    9. 'FA' → logprob: -16.014163970947266
    10. 'fact' → logprob: -17.264163970947266

Token 134: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -0.008800698444247246
    2. '[::-' → logprob: -4.758800506591797
    3. 'INV' → logprob: -9.008800506591797
    4. '_REV' → logprob: -10.008800506591797
    5. '_IN' → logprob: -12.008800506591797
    6. '_inv' → logprob: -12.883800506591797
    7. '_IV' → logprob: -13.633800506591797
    8. '[:' → logprob: -13.758800506591797
    9. '_RE' → logprob: -13.883800506591797
    10. '[' → logprob: -13.883800506591797

Token 135: '[::-' (ID: 159890)
  Prédit: '[::-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.00862131267786026
    2. '[' → logprob: -4.7586212158203125
    3. ' [' → logprob: -13.383621215820312
    4. '[-' → logprob: -13.508621215820312
    5. '[:' → logprob: -13.633621215820312
    6. '[
' → logprob: -13.758621215820312
    7. '.reverse' → logprob: -14.758621215820312
    8. '[:-' → logprob: -15.383621215820312
    9. '[len' → logprob: -16.133621215820312
    10. '[int' → logprob: -16.258621215820312

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017682861536741257
    2. 'verse' → logprob: -5.267683029174805
    3. '```' → logprob: -5.642683029174805
    4. 'vers' → logprob: -5.767683029174805
    5. '-' → logprob: -6.517683029174805
    6. 'versal' → logprob: -6.892683029174805
    7. 'reverse' → logprob: -7.392683029174805
    8. 'v' → logprob: -7.767683029174805
    9. 'versed' → logprob: -8.017683029174805
    10. '``' → logprob: -8.017683029174805

Token 137: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3133946657180786
    2. ']' → logprob: -1.3133946657180786
    3. '<|end|>' → logprob: -9.313394546508789
    4. '#' → logprob: -11.313394546508789
    5. '[' → logprob: -12.188394546508789
    6. ' )' → logprob: -12.438394546508789
    7. ')]' → logprob: -12.563394546508789
    8. ' ]' → logprob: -12.563394546508789
    9. '])' → logprob: -12.688394546508789
    10. '）' → logprob: -12.938394546508789

Token 138: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49193140864372253
    2. 'def' → logprob: -1.116931438446045
    3. '(' → logprob: -2.991931438446045
    4. '(
' → logprob: -5.491931438446045
    5. '#' → logprob: -5.616931438446045
    6. '
' → logprob: -7.241931438446045
    7. 'n' → logprob: -7.991931438446045
    8. ' ' → logprob: -8.116930961608887
    9. '[' → logprob: -8.366930961608887
    10. ']' → logprob: -8.616930961608887

Token 139: ' Tableau' (ID: 180833)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0001495484757469967
    2. ' def' → logprob: -9.625149726867676
    3. 'from' → logprob: -9.750149726867676
    4. '#' → logprob: -10.750149726867676
    5. 'import' → logprob: -13.375149726867676
    6. '
' → logprob: -14.000149726867676
    7. 'n' → logprob: -15.000149726867676
    8. ' 
' → logprob: -15.625149726867676
    9. '```' → logprob: -16.00014877319336
    10. ' from' → logprob: -16.25014877319336

Token 140: ' pour' (ID: 1930)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.47582101821899414
    2. ' =' → logprob: -1.9758210182189941
    3. 'des' → logprob: -2.350821018218994
    4. 'de' → logprob: -2.725821018218994
    5. ' des' → logprob: -3.850821018218994
    6. '=' → logprob: -4.475821018218994
    7. 's' → logprob: -4.850821018218994
    8. 'com' → logprob: -5.225821018218994
    9. ' de' → logprob: -5.350821018218994
    10. '_dp' → logprob: -5.350821018218994

Token 141: ' les' (ID: 1341)
  Prédit: 'memo'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'memo' → logprob: -0.8279172778129578
    2. ' stock' → logprob: -2.4529173374176025
    3. 'les' → logprob: -2.8279173374176025
    4. 'stock' → logprob: -2.9529173374176025
    5. 'dp' → logprob: -2.9529173374176025
    6. 'comb' → logprob: -3.0779173374176025
    7. ' memo' → logprob: -3.3279173374176025
    8. ' compter' → logprob: -3.5779173374176025
    9. 'la' → logprob: -3.9529173374176025
    10. ' les' → logprob: -3.9529173374176025

Token 142: ' comb' (ID: 4134)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.41063109040260315
    2. 'comb' → logprob: -2.1606311798095703
    3. 'com' → logprob: -2.6606311798095703
    4. 'coeff' → logprob: -2.9106311798095703
    5. 'dé' → logprob: -4.78563117980957
    6. ' comb' → logprob: -4.78563117980957
    7. 'bin' → logprob: -5.16063117980957
    8. 'per' → logprob: -5.28563117980957
    9. 's' → logprob: -5.41063117980957
    10. 'f' → logprob: -5.66063117980957

Token 143: 'inais' (ID: 42744)
  Prédit: 'inais'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inais' → logprob: -0.016731416806578636
    2. 'ina' → logprob: -5.016731262207031
    3. 'inations' → logprob: -5.016731262207031
    4. 'in' → logprob: -6.891731262207031
    5. 's' → logprob: -7.641731262207031
    6. 'inas' → logprob: -8.016731262207031
    7. 'initions' → logprob: -8.766731262207031
    8. 'ais' → logprob: -9.016731262207031
    9. 'os' → logprob: -9.329231262207031
    10. '#' → logprob: -9.391731262207031

Token 144: 'ons' (ID: 1808)
  Prédit: 'sons'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sons' → logprob: -0.9530820846557617
    2. 'ais' → logprob: -1.7030820846557617
    3. 'a' → logprob: -1.8280820846557617
    4. 'asons' → logprob: -2.4530820846557617
    5. 's' → logprob: -2.9530820846557617
    6. 'ons' → logprob: -3.0780820846557617
    7. 'son' → logprob: -3.4530820846557617
    8. 'n' → logprob: -4.203082084655762
    9. '#' → logprob: -4.203082084655762
    10. 'na' → logprob: -5.453082084655762

Token 145: '
' (ID: 198)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.12519210577011108
    2. 'def' → logprob: -2.250192165374756
    3. 'COM' → logprob: -5.250192165374756
    4. 'n' → logprob: -5.875192165374756
    5. 'comb' → logprob: -6.375192165374756
    6. ' C' → logprob: -7.000192165374756
    7. 'Comb' → logprob: -8.250191688537598
    8. 'import' → logprob: -8.875191688537598
    9. '
' → logprob: -8.875191688537598
    10. 'com' → logprob: -8.875191688537598

Token 146: 'COM' (ID: 13775)
  Prédit: 'COM'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.45572325587272644
    2. 'def' → logprob: -1.5807232856750488
    3. 'C' → logprob: -2.330723285675049
    4. 'comb' → logprob: -3.080723285675049
    5. 'n' → logprob: -5.455723285675049
    6. 'cmb' → logprob: -5.705723285675049
    7. 'com' → logprob: -6.455723285675049
    8. 'from' → logprob: -6.455723285675049
    9. ' COM' → logprob: -6.830723285675049
    10. '```' → logprob: -7.080723285675049

Token 147: 'BI' (ID: 18223)
  Prédit: 'B'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -0.0010917582549154758
    2. 'b' → logprob: -7.376091957092285
    3. ' =' → logprob: -8.501091957092285
    4. 'BS' → logprob: -9.126091957092285
    5. 'BI' → logprob: -9.501091957092285
    6. 'BIN' → logprob: -11.126091957092285
    7. 'BO' → logprob: -11.126091957092285
    8. '=' → logprob: -11.376091957092285
    9. 'C' → logprob: -11.751091957092285
    10. 'N' → logprob: -12.126091957092285

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31398409605026245
    2. 'N' → logprob: -1.5639841556549072
    3. '=' → logprob: -2.8139841556549072
    4. 'nation' → logprob: -10.188983917236328
    5. ' ' → logprob: -10.313983917236328
    6. '   ' → logprob: -10.563983917236328
    7. '=N' → logprob: -10.938983917236328
    8. ' N' → logprob: -11.063983917236328
    9. 'n' → logprob: -11.313983917236328
    10. '=[]' → logprob: -11.313983917236328

Token 149: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.030980495736002922
    2. '[[' → logprob: -3.7809805870056152
    3. ' [' → logprob: -4.905980587005615
    4. ' [[' → logprob: -8.155980110168457
    5. '[]' → logprob: -12.155980110168457
    6. '[(' → logprob: -12.405980110168457
    7. '[len' → logprob: -13.280980110168457
    8. '[i' → logprob: -14.155980110168457
    9. '[A' → logprob: -14.155980110168457
    10. '[]
' → logprob: -14.530980110168457

Token 150: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03598319739103317
    2. '[' → logprob: -3.535983085632324
    3. 'COM' → logprob: -5.660983085632324
    4. 'row' → logprob: -6.660983085632324
    5. ' for' → logprob: -7.410983085632324
    6. 'current' → logprob: -7.535983085632324
    7. 'temp' → logprob: -9.535983085632324
    8. 'com' → logprob: -9.785983085632324
    9. 'tmp' → logprob: -9.785983085632324
    10. 'factor' → logprob: -10.535983085632324

Token 151: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.31929418444633484
    2. 'n' → logprob: -1.3192942142486572
    3. ' i' → logprob: -5.694293975830078
    4. ' n' → logprob: -6.444293975830078
    5. 'r' → logprob: -7.194293975830078
    6. 'k' → logprob: -9.069293975830078
    7. '   ' → logprob: -9.944293975830078
    8. 'j' → logprob: -10.194293975830078
    9. '_n' → logprob: -10.194293975830078
    10. '_i' → logprob: -10.819293975830078

Token 152: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03391837701201439
    2. 'in' → logprob: -3.4089183807373047
    3. 'n' → logprob: -8.408918380737305
    4. 'range' → logprob: -10.658918380737305
    5. ' ' → logprob: -11.408918380737305
    6. '   ' → logprob: -12.908918380737305
    7. '  ' → logprob: -12.908918380737305
    8. 's' → logprob: -13.283918380737305
    9. 'd' → logprob: -13.783918380737305
    10. 'In' → logprob: -13.908918380737305

Token 153: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011049000546336174
    2. ' range' → logprob: -4.511048793792725
    3. '(range' → logprob: -14.261049270629883
    4. ' ' → logprob: -14.636049270629883
    5. '	range' → logprob: -16.011049270629883
    6. 'r' → logprob: -18.011049270629883
    7. '  ' → logprob: -18.011049270629883
    8. 'rang' → logprob: -18.511049270629883
    9. ')' → logprob: -19.136049270629883
    10. '
' → logprob: -19.136049270629883

Token 154: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002829603850841522
    2. '(H' → logprob: -5.877829551696777
    3. '(W' → logprob: -11.502829551696777
    4. ' (' → logprob: -11.752829551696777
    5. '21' → logprob: -12.502829551696777
    6. '(len' → logprob: -13.752829551696777
    7. ' ' → logprob: -13.877829551696777
    8. '20' → logprob: -14.502829551696777
    9. '(
' → logprob: -15.252829551696777
    10. '((' → logprob: -15.627829551696777

Token 155: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.0005340866628102958
    2. ' ' → logprob: -8.000534057617188
    3. 'H' → logprob: -8.875534057617188
    4. '22' → logprob: -10.500534057617188
    5. 'W' → logprob: -10.750534057617188
    6. '0' → logprob: -12.375534057617188
    7. ' H' → logprob: -13.375534057617188
    8. '   ' → logprob: -13.875534057617188
    9. '  ' → logprob: -14.000534057617188
    10. '2' → logprob: -14.750534057617188

Token 156: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1282859742641449
    2. '):
' → logprob: -2.1282858848571777
    3. ' ):' → logprob: -7.628285884857178
    4. ')' → logprob: -7.753285884857178
    5. '):
' → logprob: -8.503286361694336
    6. '+' → logprob: -9.628286361694336
    7. ' ):
' → logprob: -9.628286361694336
    8. ' ' → logprob: -10.128286361694336
    9. ':' → logprob: -10.253286361694336
    10. '(' → logprob: -11.878286361694336

Token 157: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.978233846486546e-05
    2. 'COM' → logprob: -10.250049591064453
    3. ' COM' → logprob: -11.750049591064453
    4. '  ' → logprob: -13.000049591064453
    5. 'com' → logprob: -13.125049591064453
    6. ' ' → logprob: -13.625049591064453
    7. '	com' → logprob: -15.250049591064453
    8. '    ' → logprob: -16.000049591064453
    9. '<|end|>' → logprob: -16.000049591064453
    10. '   ' → logprob: -16.250049591064453

Token 158: ' COM' (ID: 10434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3081342875957489
    2. 'COM' (adapté à ' COM') → logprob: -2.0581343173980713
    3. 'row' → logprob: -2.4331343173980713
    4. ' row' → logprob: -3.0581343173980713
    5. ' COM' → logprob: -6.058134078979492
    6. ' ' → logprob: -9.433134078979492
    7. 'temp' → logprob: -9.683134078979492
    8. 'tmp' → logprob: -9.808134078979492
    9. 'com' → logprob: -10.058134078979492
    10. 'line' → logprob: -10.558134078979492

Token 159: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -2.8921695047756657e-05
    2. 'B' → logprob: -10.500028610229492
    3. 'BO' → logprob: -15.500028610229492
    4. '
' → logprob: -15.625028610229492
    5. ' BI' → logprob: -15.625028610229492
    6. 'Bi' → logprob: -16.000028610229492
    7. 'BC' → logprob: -16.125028610229492
    8. 'I' → logprob: -16.625028610229492
    9. 'Б' → logprob: -16.750028610229492
    10. 'COM' → logprob: -17.000028610229492

Token 160: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0021769083105027676
    2. '.' → logprob: -6.377176761627197
    3. ' .' → logprob: -7.752176761627197
    4. ' =' → logprob: -10.627177238464355
    5. '=' → logprob: -11.127177238464355
    6. ' ' → logprob: -13.502177238464355
    7. '.ap' → logprob: -13.752177238464355
    8. '   ' → logprob: -14.377177238464355
    9. '.app' → logprob: -14.877177238464355
    10. '=[' → logprob: -15.127177238464355

Token 161: '([-' (ID: 99080)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.09027010202407837
    2. '([]' → logprob: -2.4652700424194336
    3. '[]' → logprob: -7.465270042419434
    4. '[' → logprob: -8.090270042419434
    5. '(' → logprob: -8.340270042419434
    6. '([])
' → logprob: -9.215270042419434
    7. '((' → logprob: -10.090270042419434
    8. '([(' → logprob: -10.590270042419434
    9. '(([' → logprob: -10.965270042419434
    10. ' ([' → logprob: -11.590270042419434

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.000001907348633
    3. '(-' → logprob: -15.250001907348633
    4. '-' → logprob: -15.500001907348633
    5. ' -' → logprob: -15.937501907348633
    6. '(' → logprob: -17.062501907348633
    7. '```' → logprob: -17.062501907348633
    8. '   ' → logprob: -17.562501907348633
    9. '2' → logprob: -17.687501907348633
    10. ')' → logprob: -17.937501907348633

Token 163: ']' (ID: 60)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.14013786613941193
    2. 'for' → logprob: -2.7651379108428955
    3. ']' → logprob: -2.8901379108428955
    4. ' ]' → logprob: -5.015137672424316
    5. ']*(' → logprob: -6.390137672424316
    6. ' ' → logprob: -6.640137672424316
    7. ']*' → logprob: -6.640137672424316
    8. ')' → logprob: -7.515137672424316
    9. ',' → logprob: -8.265137672424316
    10. '1' → logprob: -9.015137672424316

Token 164: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.02396758273243904
    2. 'for' → logprob: -3.7739675045013428
    3. ']' → logprob: -7.898967742919922
    4. ']*(' → logprob: -8.773967742919922
    5. ')' → logprob: -9.273967742919922
    6. ' ]' → logprob: -10.273967742919922
    7. ' ' → logprob: -10.773967742919922
    8. ']*' → logprob: -11.398967742919922
    9. '	for' → logprob: -11.898967742919922
    10. ',' → logprob: -12.148967742919922

Token 165: ' ' (ID: 220)
  Prédit: '21'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.36779874563217163
    2. '22' → logprob: -1.3677988052368164
    3. ' ' → logprob: -2.9927988052368164
    4. '(' → logprob: -5.992798805236816
    5. ' (' → logprob: -8.367798805236816
    6. '(i' → logprob: -8.617798805236816
    7. '   ' → logprob: -11.617798805236816
    8. ' i' → logprob: -13.117798805236816
    9. '  ' → logprob: -13.242798805236816
    10. '    ' → logprob: -13.367798805236816

Token 166: '21' (ID: 2040)
  Prédit: '21'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '21' → logprob: -0.005993263330310583
    2. ' ' → logprob: -5.505993366241455
    3. '22' → logprob: -6.505993366241455
    4. '(' → logprob: -7.880993366241455
    5. '(i' → logprob: -10.880992889404297
    6. ' (' → logprob: -11.630992889404297
    7. '2' → logprob: -11.880992889404297
    8. '   ' → logprob: -13.255992889404297
    9. '
' → logprob: -13.755992889404297
    10. 'i' → logprob: -14.005992889404297

Token 167: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.3319124011322856e-05
    2. ' )' → logprob: -10.750022888183594
    3. ')
' → logprob: -13.250022888183594
    4. '   ' → logprob: -18.125022888183594
    5. '))' → logprob: -18.375022888183594
    6. '),' → logprob: -19.000022888183594
    7. ')#' → logprob: -19.000022888183594
    8. ')

' → logprob: -19.125022888183594
    9. ')`' → logprob: -19.125022888183594
    10. ' ' → logprob: -19.125022888183594

Token 168: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00021903318702243268
    2. ')' → logprob: -8.500219345092773
    3. 'for' → logprob: -12.000219345092773
    4. '<|end|>' → logprob: -12.625219345092773
    5. ' def' → logprob: -13.125219345092773
    6. '#' → logprob: -13.250219345092773
    7. '```' → logprob: -14.125219345092773
    8. ']' → logprob: -14.125219345092773
    9. '(' → logprob: -15.750219345092773
    10. '<|end|>' → logprob: -16.375219345092773

Token 169: ' Com' (ID: 1390)
  Prédit: ' comb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' comb' → logprob: -0.13280490040779114
    2. ' n' → logprob: -2.5078048706054688
    3. 'comb' → logprob: -4.132804870605469
    4. 'n' → logprob: -4.882804870605469
    5. ' com' → logprob: -5.007804870605469
    6. 'com' → logprob: -5.382804870605469
    7. ' combination' → logprob: -6.132804870605469
    8. ' cmb' → logprob: -6.382804870605469
    9. ' combinaison' → logprob: -7.007804870605469
    10. ' ' → logprob: -7.382804870605469

Token 170: 'bi' (ID: 6738)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.09070959687232971
    2. 'bin' → logprob: -3.090709686279297
    3. 'bination' → logprob: -3.590709686279297
    4. 'bine' → logprob: -4.965709686279297
    5. 'bi' → logprob: -5.090709686279297
    6. 'binations' → logprob: -8.090709686279297
    7. 'B' → logprob: -9.340709686279297
    8. '_b' → logprob: -9.715709686279297
    9. '(b' → logprob: -10.840709686279297
    10. 'bis' → logprob: -11.340709686279297

Token 171: '(a' (ID: 6271)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.047919776290655136
    2. 'n' → logprob: -3.297919750213623
    3. 'nation' → logprob: -4.672919750213623
    4. 'ne' → logprob: -8.047920227050781
    5. '(' → logprob: -9.297920227050781
    6. ' (' → logprob: -10.922920227050781
    7. '(
' → logprob: -11.172920227050781
    8. 'na' → logprob: -11.672920227050781
    9. '(x' → logprob: -12.047920227050781
    10. '(i' → logprob: -12.047920227050781

Token 172: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015531922690570354
    2. ' ,' → logprob: -4.26553201675415
    3. ',b' → logprob: -6.64053201675415
    4. ',n' → logprob: -10.265531539916992
    5. ',a' → logprob: -11.765531539916992
    6. ',r' → logprob: -11.890531539916992
    7. 'b' → logprob: -12.390531539916992
    8. ',
' → logprob: -13.390531539916992
    9. ',c' → logprob: -13.890531539916992
    10. 'r' → logprob: -13.890531539916992

Token 173: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.07889264822006226
    2. ' b' → logprob: -2.578892707824707
    3. 'k' → logprob: -13.703892707824707
    4. ' ' → logprob: -14.203892707824707
    5. 'r' → logprob: -15.203892707824707
    6. 'n' → logprob: -15.203892707824707
    7. '<|end|>' → logprob: -15.203892707824707
    8. ' k' → logprob: -16.20389175415039
    9. 't' → logprob: -17.07889175415039
    10. ' n' → logprob: -17.20389175415039

Token 174: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008022417314350605
    2. ')' → logprob: -7.250802040100098
    3. '):
' → logprob: -9.500802040100098
    4. ' ):' → logprob: -11.250802040100098
    5. ':' → logprob: -12.625802040100098
    6. '):
' → logprob: -14.500802040100098
    7. '   ' → logprob: -16.000802993774414
    8. ')：' → logprob: -16.000802993774414
    9. ' ' → logprob: -16.375802993774414
    10. ',' → logprob: -16.500802993774414

Token 175: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014901097863912582
    2. '    
' → logprob: -5.514901161193848
    3. ':' → logprob: -5.639901161193848
    4. ' if' → logprob: -6.139901161193848
    5. ' 
' → logprob: -6.264901161193848
    6. ')' → logprob: -6.639901161193848
    7. ' ' → logprob: -8.014901161193848
    8. '<|end|>' → logprob: -8.014901161193848
    9. '):' → logprob: -8.514901161193848
    10. ',' → logprob: -8.764901161193848

Token 176: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5953589677810669
    2. 'if' (adapté à ' if') → logprob: -0.8453589677810669
    3. '   ' → logprob: -3.9703588485717773
    4. ' ' → logprob: -8.095358848571777
    5. '    ' → logprob: -10.345358848571777
    6. '	if' → logprob: -11.970358848571777
    7. ' return' → logprob: -11.970358848571777
    8. ' 
' → logprob: -12.095358848571777
    9. 'return' → logprob: -12.220358848571777
    10. '  ' → logprob: -13.470358848571777

Token 177: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.2301214337348938
    2. ' COM' → logprob: -2.355121374130249
    3. 'a' → logprob: -2.605121374130249
    4. 'b' → logprob: -3.605121374130249
    5. ' a' → logprob: -5.105121612548828
    6. ' b' → logprob: -5.730121612548828
    7. 'com' → logprob: -8.980121612548828
    8. '   ' → logprob: -9.480121612548828
    9. ' ' → logprob: -10.480121612548828
    10. '(COM' → logprob: -10.980121612548828

Token 178: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -8.423219696851447e-05
    2. 'bi' → logprob: -10.375083923339844
    3. 'b' → logprob: -10.500083923339844
    4. 'B' → logprob: -10.750083923339844
    5. 'I' → logprob: -14.375083923339844
    6. 'Bi' → logprob: -14.375083923339844
    7. '_b' → logprob: -14.500083923339844
    8. 'a' → logprob: -14.625083923339844
    9. 'PI' → logprob: -15.000083923339844
    10. 'BO' → logprob: -15.500083923339844

Token 179: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -2.236549335066229e-05
    2. 'a' → logprob: -11.375021934509277
    3. '[b' → logprob: -12.500021934509277
    4. '   ' → logprob: -13.375021934509277
    5. ' [' → logprob: -13.375021934509277
    6. ')[' → logprob: -13.500021934509277
    7. '[' → logprob: -13.625021934509277
    8. '[i' → logprob: -15.125021934509277
    9. '```' → logprob: -15.125021934509277
    10. ')a' → logprob: -15.625021934509277

Token 180: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.007052441593259573
    2. '[b' → logprob: -5.132052421569824
    3. ' ][' → logprob: -7.507052421569824
    4. 'b' → logprob: -8.382052421569824
    5. ']' → logprob: -9.007052421569824
    6. '[a' → logprob: -9.257052421569824
    7. '[' → logprob: -9.382052421569824
    8. '   ' → logprob: -11.132052421569824
    9. 'a' → logprob: -11.757052421569824
    10. ' [' → logprob: -12.257052421569824

Token 181: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -13.750000953674316
    3. ')b' → logprob: -19.750001907348633
    4. '   ' → logprob: -20.625001907348633
    5. '	b' → logprob: -20.625001907348633
    6. ' ' → logprob: -21.250001907348633
    7. '>b' → logprob: -21.250001907348633
    8. '<|end|>' → logprob: -22.125001907348633
    9. 'a' → logprob: -22.375001907348633
    10. '_b' → logprob: -23.500001907348633

Token 182: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.25456008315086365
    2. ']!=' → logprob: -2.5045599937438965
    3. ' !=' → logprob: -2.6295599937438965
    4. '!=' → logprob: -2.8795599937438965
    5. ']==' → logprob: -5.2545599937438965
    6. '==' → logprob: -5.7545599937438965
    7. ' ]' → logprob: -5.7545599937438965
    8. '!=-' → logprob: -6.6295599937438965
    9. ')' → logprob: -7.0045599937438965
    10. ' ==' → logprob: -7.5045599937438965

Token 183: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.34762880206108093
    2. '==' → logprob: -1.7226288318634033
    3. ' !=' → logprob: -2.2226288318634033
    4. ' ==' → logprob: -5.222628593444824
    5. '!=-' → logprob: -6.847628593444824
    6. '==-' → logprob: -9.097628593444824
    7. '=' → logprob: -9.722628593444824
    8. '>=' → logprob: -10.972628593444824
    9. ')' → logprob: -10.972628593444824
    10. '

' → logprob: -11.097628593444824

Token 184: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.001502598519437015
    2. ' -' → logprob: -6.501502513885498
    3. ' ' → logprob: -16.001502990722656
    4. '   ' → logprob: -16.126502990722656
    5. '−' → logprob: -18.251502990722656
    6. '  ' → logprob: -19.126502990722656
    7. '	' → logprob: -20.376502990722656
    8. '    ' → logprob: -20.501502990722656
    9. '
' → logprob: -20.501502990722656
    10. '```' → logprob: -21.251502990722656

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3080716346157715e-05
    2. ' ' → logprob: -10.750022888183594
    3. '
' → logprob: -14.375022888183594
    4. '```' → logprob: -15.000022888183594
    5. '   ' → logprob: -15.125022888183594
    6. '

' → logprob: -16.000022888183594
    7. '  ' → logprob: -16.437522888183594
    8. '`' → logprob: -16.875022888183594
    9. '``' → logprob: -17.062522888183594
    10. '    ' → logprob: -17.187522888183594

Token 186: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02334517613053322
    2. ':
' → logprob: -4.023344993591309
    3. ':return' → logprob: -5.648344993591309
    4. '       ' → logprob: -7.523344993591309
    5. '   ' → logprob: -7.773344993591309
    6. ' :' → logprob: -8.148344993591309
    7. '):' → logprob: -9.148344993591309
    8. '<|end|>' → logprob: -9.648344993591309
    9. ' :
' → logprob: -9.773344993591309
    10. ' or' → logprob: -10.023344993591309

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026766068767756224
    2. ' return' → logprob: -6.752676486968994
    3. '
' → logprob: -7.627676486968994
    4. '   ' → logprob: -8.252676963806152
    5. ' 
' → logprob: -8.752676963806152
    6. '        
' → logprob: -8.877676963806152
    7. '    
' → logprob: -9.002676963806152
    8. ' ' → logprob: -9.377676963806152
    9. '    ' → logprob: -9.627676963806152
    10. 'return' → logprob: -9.877676963806152

Token 188: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.28188610076904297
    2. '       ' → logprob: -1.531886100769043
    3. ' return' → logprob: -3.531886100769043
    4. '   ' → logprob: -8.656886100769043
    5. '	return' → logprob: -9.781886100769043
    6. '
' → logprob: -10.781886100769043
    7. ':return' → logprob: -12.656886100769043
    8. ' ' → logprob: -13.281886100769043
    9. '{return' → logprob: -13.906886100769043
    10. 'ret' → logprob: -13.906886100769043

Token 189: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.0009118211455643177
    2. ' COM' → logprob: -7.000911712646484
    3. 'Com' → logprob: -15.250911712646484
    4. 'com' → logprob: -17.250911712646484
    5. ' ' → logprob: -17.875911712646484
    6. '   ' → logprob: -18.500911712646484
    7. ' Com' → logprob: -18.875911712646484
    8. '_COM' → logprob: -19.000911712646484
    9. '(COM' → logprob: -19.000911712646484
    10. 'CO' → logprob: -19.125911712646484

Token 190: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -0.00010223194840364158
    2. 'B' → logprob: -9.500102043151855
    3. 'bi' → logprob: -11.875102043151855
    4. 'I' → logprob: -11.875102043151855
    5. 'BO' → logprob: -12.500102043151855
    6. 'b' → logprob: -12.625102043151855
    7. 'COM' → logprob: -13.500102043151855
    8. '
' → logprob: -13.750102043151855
    9. 'Bi' → logprob: -14.000102043151855
    10. ' BI' → logprob: -15.187602043151855

Token 191: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -7.703443770878948e-06
    2. 'a' → logprob: -11.875007629394531
    3. ' [' → logprob: -15.375007629394531
    4. '```' → logprob: -15.375007629394531
    5. '[' → logprob: -15.500007629394531
    6. ' a' → logprob: -16.50000762939453
    7. '[
' → logprob: -17.37500762939453
    8. '[A' → logprob: -18.37500762939453
    9. '	a' → logprob: -18.37500762939453
    10. '
' → logprob: -18.50000762939453

Token 192: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0003781224077101797
    2. '[a' → logprob: -8.500377655029297
    3. ']' → logprob: -9.625377655029297
    4. 'a' → logprob: -10.000377655029297
    5. ' ][' → logprob: -10.000377655029297
    6. '[' → logprob: -11.750377655029297
    7. '"][' → logprob: -12.875377655029297
    8. '   ' → logprob: -13.875377655029297
    9. ')[' → logprob: -14.125377655029297
    10. ''][' → logprob: -14.125377655029297

Token 193: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.1472419600977446e-06
    2. ' b' → logprob: -14.375000953674316
    3. '<|end|>' → logprob: -16.375001907348633
    4. ' ' → logprob: -16.500001907348633
    5. '```' → logprob: -16.625001907348633
    6. '	b' → logprob: -16.750001907348633
    7. '[b' → logprob: -17.000001907348633
    8. '[' → logprob: -17.375001907348633
    9. ')b' → logprob: -17.500001907348633
    10. ']' → logprob: -17.500001907348633

Token 194: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5339710116386414
    2. ')' → logprob: -0.9089710116386414
    3. ']
' → logprob: -5.283970832824707
    4. ')
' → logprob: -5.908970832824707
    5. '])' → logprob: -6.658970832824707
    6. '   ' → logprob: -6.908970832824707
    7. ' )' → logprob: -7.908970832824707
    8. ' ' → logprob: -9.408970832824707
    9. ' ]' → logprob: -9.533970832824707
    10. 'def' → logprob: -9.783970832824707

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00901030283421278
    2. '    
' → logprob: -4.759010314941406
    3. '<|end|>' → logprob: -8.509010314941406
    4. '   
' → logprob: -10.009010314941406
    5. '
' → logprob: -10.134010314941406
    6. '  
' → logprob: -10.259010314941406
    7. ' 
' → logprob: -10.259010314941406
    8. '        
' → logprob: -11.884010314941406
    9. '	
' → logprob: -12.009010314941406
    10. '<|end|>' → logprob: -12.384010314941406

Token 196: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06068451330065727
    2. '   ' → logprob: -3.3106844425201416
    3. ' if' → logprob: -3.8106844425201416
    4. 'res' → logprob: -9.185684204101562
    5. '    
' → logprob: -9.560684204101562
    6. 'com' → logprob: -10.060684204101562
    7. 'result' → logprob: -11.310684204101562
    8. '
' → logprob: -11.935684204101562
    9. 'value' → logprob: -12.685684204101562
    10. ' ' → logprob: -12.685684204101562

Token 197: ' ' (ID: 220)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.14770179986953735
    2. ' b' → logprob: -2.0227017402648926
    3. 'a' → logprob: -5.397701740264893
    4. ' a' → logprob: -7.897701740264893
    5. '   ' → logprob: -9.14770221710205
    6. '	b' → logprob: -12.39770221710205
    7. ' ' → logprob: -13.39770221710205
    8. '    ' → logprob: -13.64770221710205
    9. '  ' → logprob: -15.27270221710205
    10. '_b' → logprob: -15.33520221710205

Token 198: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0021352714393287897
    2. 'a' → logprob: -6.377135276794434
    3. ' b' → logprob: -7.752135276794434
    4. ' a' → logprob: -12.877135276794434
    5. '   ' → logprob: -15.127135276794434
    6. '	b' → logprob: -15.377135276794434
    7. ' ' → logprob: -16.502134323120117
    8. '
' → logprob: -19.002134323120117
    9. ' б' → logprob: -19.252134323120117
    10. '  ' → logprob: -19.564634323120117

Token 199: ' <=' (ID: 5017)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6913243532180786
    2. '==' → logprob: -0.9413243532180786
    3. '<=' → logprob: -3.566324234008789
    4. ' ==' → logprob: -3.691324234008789
    5. '>=' → logprob: -4.191324234008789
    6. '>' → logprob: -4.566324234008789
    7. ' or' → logprob: -5.191324234008789
    8. '   ' → logprob: -5.316324234008789
    9. '>b' → logprob: -5.441324234008789
    10. 'if' → logprob: -5.441324234008789

Token 200: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -6.146429223008454e-05
    2. ' b' → logprob: -9.75006103515625
    3. 'a' → logprob: -13.00006103515625
    4. '	b' → logprob: -14.12506103515625
    5. '   ' → logprob: -17.62506103515625
    6. ')b' → logprob: -18.12506103515625
    7. '```' → logprob: -18.12506103515625
    8. '_b' → logprob: -18.37506103515625
    9. '>b' → logprob: -18.62506103515625
    10. ')' → logprob: -18.75006103515625

Token 201: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.1499888151884079
    2. ' <=' → logprob: -2.024988889694214
    3. ' and' → logprob: -5.274988651275635
    4. 'and' → logprob: -6.149988651275635
    5. '<|end|>' → logprob: -11.649989128112793
    6. ')<=' → logprob: -11.899989128112793
    7. ']<=' → logprob: -12.399989128112793
    8. 'a' → logprob: -12.524989128112793
    9. ' ' → logprob: -13.024989128112793
    10. '<|end|>' → logprob: -13.274989128112793

Token 202: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0019289902411401272
    2. ' a' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.75192928314209
    4. ' ' → logprob: -16.126928329467773
    5. '	a' → logprob: -16.501928329467773
    6. '  ' → logprob: -18.501928329467773
    7. '>a' → logprob: -18.626928329467773
    8. '```' → logprob: -20.251928329467773
    9. '<|end|>' → logprob: -20.501928329467773
    10. '    ' → logprob: -20.626928329467773

Token 203: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6021621227264404
    2. ':' → logprob: -1.3521621227264404
    3. ' and' → logprob: -1.7271621227264404
    4. '       ' → logprob: -5.1021623611450195
    5. '   ' → logprob: -5.2271623611450195
    6. 'and' → logprob: -6.2271623611450195
    7. '):
' → logprob: -6.8521623611450195
    8. ' :
' → logprob: -7.3521623611450195
    9. ' :' → logprob: -8.60216236114502
    10. ':return' → logprob: -8.72716236114502

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0518999882042408
    2. ':' → logprob: -3.3018999099731445
    3. ':
' → logprob: -4.9268999099731445
    4. ' and' → logprob: -5.5518999099731445
    5. '   ' → logprob: -6.4268999099731445
    6. '<|end|>' → logprob: -8.176899909973145
    7. '):
' → logprob: -8.426899909973145
    8. 'and' → logprob: -8.801899909973145
    9. ',' → logprob: -8.926899909973145
    10. ' if' → logprob: -10.176899909973145

Token 205: ' COM' (ID: 10434)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0472573041915894
    2. '       ' → logprob: -1.2972573041915894
    3. 'COM' (adapté à ' COM') → logprob: -1.2972573041915894
    4. 'res' → logprob: -3.297257423400879
    5. 'com' → logprob: -3.922257423400879
    6. 'result' → logprob: -4.047257423400879
    7. ' res' → logprob: -4.672257423400879
    8. ' COM' → logprob: -5.547257423400879
    9. 'val' → logprob: -5.797257423400879
    10. ' result' → logprob: -6.047257423400879

Token 206: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -5.455048449221067e-05
    2. 'B' → logprob: -10.250054359436035
    3. 'bi' → logprob: -11.375054359436035
    4. 'b' → logprob: -13.125054359436035
    5. ' BI' → logprob: -13.500054359436035
    6. '
' → logprob: -13.875054359436035
    7. 'BO' → logprob: -14.125054359436035
    8. 'Bi' → logprob: -14.375054359436035
    9. '_B' → logprob: -15.500054359436035
    10. '

' → logprob: -15.625054359436035

Token 207: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.00023500648967456073
    2. 'a' → logprob: -8.625234603881836
    3. '[' → logprob: -10.375234603881836
    4. '[
' → logprob: -11.625234603881836
    5. '(a' → logprob: -12.375234603881836
    6. 'return' → logprob: -13.250234603881836
    7. '```' → logprob: -13.625234603881836
    8. 'def' → logprob: -13.750234603881836
    9. ' a' → logprob: -13.875234603881836
    10. '=a' → logprob: -14.000234603881836

Token 208: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01790665090084076
    2. ']' → logprob: -4.142906665802002
    3. ' ][' → logprob: -6.767906665802002
    4. '[' → logprob: -8.142906188964844
    5. '-' → logprob: -9.142906188964844
    6. '][-' → logprob: -9.267906188964844
    7. '   ' → logprob: -9.642906188964844
    8. ']==' → logprob: -10.767906188964844
    9. 'and' → logprob: -10.892906188964844
    10. ',' → logprob: -10.892906188964844

Token 209: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -3.7146746763028204e-05
    2. ' b' → logprob: -10.50003719329834
    3. ']' → logprob: -12.25003719329834
    4. 'a' → logprob: -12.62503719329834
    5. '   ' → logprob: -14.12503719329834
    6. '
' → logprob: -14.87503719329834
    7. '       ' → logprob: -16.125036239624023
    8. '```' → logprob: -16.250036239624023
    9. 'return' → logprob: -16.875036239624023
    10. '    ' → logprob: -16.875036239624023

Token 210: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.004030906595289707
    2. ']=' → logprob: -5.879030704498291
    3. ' ]' → logprob: -6.754030704498291
    4. '=' → logprob: -9.87903118133545
    5. ' =' → logprob: -12.87903118133545
    6. ']=(' → logprob: -13.12903118133545
    7. '   ' → logprob: -14.50403118133545
    8. '
' → logprob: -14.50403118133545
    9. ')' → logprob: -14.50403118133545
    10. ']==' → logprob: -14.75403118133545

Token 211: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889573276042938
    2. ' =' → logprob: -2.5788958072662354
    3. '=
' → logprob: -12.203895568847656
    4. ' ' → logprob: -15.578895568847656
    5. '=

' → logprob: -15.578895568847656
    6. '
' → logprob: -15.828895568847656
    7. ' =
' → logprob: -16.078895568847656
    8. '   ' → logprob: -16.078895568847656
    9. '=com' → logprob: -16.328895568847656
    10. '＝' → logprob: -17.203895568847656

Token 212: ' FACT' (ID: 99053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01358872652053833
    2. ' (' → logprob: -4.388588905334473
    3. 'FACT' → logprob: -7.013588905334473
    4. '((' → logprob: -9.888588905334473
    5. ' FACT' → logprob: -9.888588905334473
    6. '(COM' → logprob: -10.638588905334473
    7. '
' → logprob: -11.013588905334473
    8. ' ' → logprob: -11.888588905334473
    9. 'fact' → logprob: -12.138588905334473
    10. 'FA' → logprob: -12.263588905334473

Token 213: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.700132997939363e-05
    2. 'a' → logprob: -11.125017166137695
    3. '```' → logprob: -14.375017166137695
    4. '[A' → logprob: -14.625017166137695
    5. '[b' → logprob: -14.875017166137695
    6. '[' → logprob: -15.125017166137695
    7. '[-' → logprob: -15.250017166137695
    8. '   ' → logprob: -16.125017166137695
    9. ' a' → logprob: -17.375017166137695
    10. '	a' → logprob: -17.500017166137695

Token 214: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00028159678913652897
    2. ']*' → logprob: -8.25028133392334
    3. ' ]' → logprob: -11.25028133392334
    4. ']
' → logprob: -12.25028133392334
    5. '   ' → logprob: -13.75028133392334
    6. '*' → logprob: -14.50028133392334
    7. ' ' → logprob: -15.62528133392334
    8. ']%' → logprob: -16.500282287597656
    9. '"]' → logprob: -16.625282287597656
    10. '-' → logprob: -16.625282287597656

Token 215: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.001704579102806747
    2. ' *' → logprob: -6.376704692840576
    3. '
' → logprob: -14.126704216003418
    4. '   ' → logprob: -14.751704216003418
    5. '*
' → logprob: -15.376704216003418
    6. '**' → logprob: -15.376704216003418
    7. '=' → logprob: -15.501704216003418
    8. '```' → logprob: -15.751704216003418
    9. '//' → logprob: -16.501705169677734
    10. '*(' → logprob: -16.501705169677734

Token 216: ' FACT' (ID: 99053)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3507942259311676
    2. 'FACT' → logprob: -1.2257941961288452
    3. ' (' → logprob: -6.600794315338135
    4. ' FACT' → logprob: -7.475794315338135
    5. '((' → logprob: -8.225793838500977
    6. '   ' → logprob: -9.975793838500977
    7. 'FA' → logprob: -10.475793838500977
    8. '(F' → logprob: -10.725793838500977
    9. 'fact' → logprob: -11.350793838500977
    10. 'Fact' → logprob: -11.600793838500977

Token 217: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -4.008129963040119e-06
    2. 'INV' → logprob: -13.125003814697266
    3. '_inv' → logprob: -14.500003814697266
    4. '[_' → logprob: -14.625003814697266
    5. '   ' → logprob: -15.000003814697266
    6. '[' → logprob: -15.375003814697266
    7. '_IN' → logprob: -15.375003814697266
    8. '[-' → logprob: -16.500003814697266
    9. '_INF' → logprob: -16.500003814697266
    10. 'inv' → logprob: -16.750003814697266

Token 218: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.00118677644059062
    2. '[a' → logprob: -7.001186847686768
    3. 'b' → logprob: -8.62618637084961
    4. '[' → logprob: -9.37618637084961
    5. '][' → logprob: -13.37618637084961
    6. 'a' → logprob: -13.50118637084961
    7. '[
' → logprob: -13.62618637084961
    8. ']' → logprob: -14.00118637084961
    9. '[n' → logprob: -14.37618637084961
    10. '	b' → logprob: -14.37618637084961

Token 219: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02374805137515068
    2. ']%' → logprob: -3.8987481594085693
    3. '%' → logprob: -5.77374792098999
    4. ' ]' → logprob: -9.773748397827148
    5. ' %' → logprob: -10.523748397827148
    6. ')' → logprob: -13.023748397827148
    7. ']*' → logprob: -13.773748397827148
    8. '%n' → logprob: -13.898748397827148
    9. ')%' → logprob: -14.023748397827148
    10. '```' → logprob: -14.273748397827148

Token 220: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.18120793998241425
    2. ' %' → logprob: -1.8062078952789307
    3. ' *' → logprob: -7.05620813369751
    4. '*' → logprob: -7.68120813369751
    5. '   ' → logprob: -9.306207656860352
    6. ')' → logprob: -11.306207656860352
    7. ' ' → logprob: -11.806207656860352
    8. ')%' → logprob: -12.181207656860352
    9. '
' → logprob: -12.306207656860352
    10. '	' → logprob: -12.431207656860352

Token 221: ' FACT' (ID: 99053)
  Prédit: 'FACT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.006045281887054443
    2. ' FACT' → logprob: -5.131045341491699
    3. '(' → logprob: -9.2560453414917
    4. 'FA' → logprob: -11.8810453414917
    5. '   ' → logprob: -12.5060453414917
    6. ' ' → logprob: -12.8810453414917
    7. 'FAC' → logprob: -13.0060453414917
    8. '(F' → logprob: -13.6310453414917
    9. ' (' → logprob: -13.8810453414917
    10. '_FACT' → logprob: -14.1310453414917

Token 222: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -0.012037690728902817
    2. '[a' → logprob: -4.512037754058838
    3. '[-' → logprob: -7.137037754058838
    4. 'INV' → logprob: -9.01203727722168
    5. 'Inv' → logprob: -11.13703727722168
    6. '_inv' → logprob: -11.38703727722168
    7. '_IDX' → logprob: -11.63703727722168
    8. '[' → logprob: -12.01203727722168
    9. 'a' → logprob: -12.13703727722168
    10. '[i' → logprob: -12.51203727722168

Token 223: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -1.1517960956552997e-05
    2. 'a' → logprob: -12.000011444091797
    3. '[' → logprob: -12.500011444091797
    4. ' [' → logprob: -13.625011444091797
    5. '[-' → logprob: -16.250011444091797
    6. '[
' → logprob: -16.250011444091797
    7. '   ' → logprob: -17.125011444091797
    8. '```' → logprob: -17.625011444091797
    9. ' a' → logprob: -17.875011444091797
    10. '(a' → logprob: -18.000011444091797

Token 224: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.10040184110403061
    2. ' -' → logprob: -2.6004018783569336
    3. '-' → logprob: -3.8504018783569336
    4. '[-' → logprob: -12.350401878356934
    5. '-i' → logprob: -13.225401878356934
    6. '-j' → logprob: -13.600401878356934
    7. '-
' → logprob: -14.100401878356934
    8. '[b' → logprob: -14.100401878356934
    9. '-k' → logprob: -14.850401878356934
    10. '[' → logprob: -14.975401878356934

Token 225: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006733487825840712
    2. ']%' → logprob: -5.006733417510986
    3. ' ]' → logprob: -11.381733894348145
    4. '%' → logprob: -12.131733894348145
    5. ']
' → logprob: -13.881733894348145
    6. '[' → logprob: -16.631732940673828
    7. '])' → logprob: -16.881732940673828
    8. ')' → logprob: -16.881732940673828
    9. ' %' → logprob: -17.006732940673828
    10. '   ' → logprob: -17.381732940673828

Token 226: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.5759481191635132
    2. ' %' → logprob: -0.8259481191635132
    3. ')' → logprob: -12.200947761535645
    4. ')%' → logprob: -13.450947761535645
    5. '%n' → logprob: -14.200947761535645
    6. ' ' → logprob: -14.950947761535645
    7. '   ' → logprob: -14.950947761535645
    8. ' %=' → logprob: -15.700947761535645
    9. '%m' → logprob: -16.07594871520996
    10. '%c' → logprob: -16.20094871520996

Token 227: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0005550591740757227
    2. ' mod' → logprob: -7.500555038452148
    3. '(mod' → logprob: -13.625555038452148
    4. '998' → logprob: -14.000555038452148
    5. ' ' → logprob: -17.87555503845215
    6. '	mod' → logprob: -18.00055503845215
    7. '```' → logprob: -19.87555503845215
    8. 'MOD' → logprob: -20.12555503845215
    9. '
' → logprob: -20.75055503845215
    10. 'moder' → logprob: -20.75055503845215

Token 228: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -5.526570384972729e-05
    2. '<|end|>' → logprob: -10.625055313110352
    3. '	return' → logprob: -11.250055313110352
    4. 'return' → logprob: -12.250055313110352
    5. ':return' → logprob: -12.500055313110352
    6. ')' → logprob: -12.875055313110352
    7. ' return' → logprob: -13.375055313110352
    8. ',' → logprob: -14.125055313110352
    9. '   ' → logprob: -14.125055313110352
    10. '       ' → logprob: -14.375055313110352

Token 229: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -4.870950215263292e-05
    2. 'else' → logprob: -11.125048637390137
    3. '    
' → logprob: -11.500048637390137
    4. '	return' → logprob: -11.625048637390137
    5. 'return' → logprob: -12.500048637390137
    6. ' else' → logprob: -12.625048637390137
    7. '       ' → logprob: -13.000048637390137
    8. ' return' → logprob: -13.250048637390137
    9. '	else' → logprob: -13.500048637390137
    10. '
' → logprob: -14.625048637390137

Token 230: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6006067395210266
    2. 'return' (adapté à ' return') → logprob: -0.8506067395210266
    3. '   ' → logprob: -3.725606679916382
    4. 'COM' → logprob: -8.850606918334961
    5. ' COM' → logprob: -9.975606918334961
    6. '       ' → logprob: -10.975606918334961
    7. 'com' → logprob: -11.225606918334961
    8. ':return' → logprob: -11.600606918334961
    9. '	return' → logprob: -11.725606918334961
    10. ')' → logprob: -12.100606918334961

Token 231: ' COM' (ID: 10434)
  Prédit: 'COM'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'COM' → logprob: -0.003180921310558915
    2. ' COM' → logprob: -5.753180980682373
    3. 'Com' → logprob: -13.128180503845215
    4. '(COM' → logprob: -13.753180503845215
    5. 'com' → logprob: -16.37818145751953
    6. ' ' → logprob: -17.00318145751953
    7. ' Com' → logprob: -17.12818145751953
    8. '_COM' → logprob: -17.87818145751953
    9. 'C' → logprob: -18.25318145751953
    10. '(C' → logprob: -18.62818145751953

Token 232: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -0.3184598386287689
    2. 'bi' → logprob: -1.3184598684310913
    3. 'Bi' → logprob: -5.318459987640381
    4. 'b' → logprob: -8.443459510803223
    5. 'B' → logprob: -10.318459510803223
    6. '[' → logprob: -12.318459510803223
    7. '
' → logprob: -12.443459510803223
    8. '[i' → logprob: -12.943459510803223
    9. '[b' → logprob: -13.068459510803223
    10. ' BI' → logprob: -13.068459510803223

Token 233: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -9.491498531133402e-06
    2. 'a' → logprob: -12.000009536743164
    3. '[' → logprob: -13.250009536743164
    4. ' [' → logprob: -14.125009536743164
    5. '   ' → logprob: -14.875009536743164
    6. '```' → logprob: -15.875009536743164
    7. '][' → logprob: -16.250009536743164
    8. ' a' → logprob: -16.500009536743164
    9. '[
' → logprob: -17.000009536743164
    10. ')[' → logprob: -17.125009536743164

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08915887773036957
    2. '[a' → logprob: -2.464158773422241
    3. 'a' → logprob: -8.96415901184082
    4. ' ][' → logprob: -9.96415901184082
    5. ']' → logprob: -10.96415901184082
    6. '[' → logprob: -11.21415901184082
    7. '}[' → logprob: -12.83915901184082
    8. '[b' → logprob: -12.83915901184082
    9. ' [' → logprob: -13.58915901184082
    10. ')[' → logprob: -13.58915901184082

Token 235: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.2664456789934775e-06
    2. 'a' → logprob: -14.125000953674316
    3. ' b' → logprob: -15.500000953674316
    4. '[b' → logprob: -16.000001907348633
    5. '	b' → logprob: -16.750001907348633
    6. ')b' → logprob: -17.000001907348633
    7. '```' → logprob: -17.375001907348633
    8. ''b' → logprob: -18.500001907348633
    9. ']' → logprob: -18.875001907348633
    10. '[' → logprob: -18.875001907348633

Token 236: ']
' (ID: 1592)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09576673805713654
    2. ')' → logprob: -2.47076678276062
    3. ']' → logprob: -5.345766544342041
    4. '<|end|>' → logprob: -6.345766544342041
    5. '}' → logprob: -8.5957670211792
    6. '<|end|>' → logprob: -10.4707670211792
    7. ')
' → logprob: -10.7207670211792
    8. ')return' → logprob: -11.4707670211792
    9. ' )' → logprob: -12.0957670211792
    10. '%' → logprob: -12.0957670211792

Token 237: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.676292231422849e-05
    2. '    
' → logprob: -11.500017166137695
    3. '<|end|>' → logprob: -12.375017166137695
    4. '    ' → logprob: -14.375017166137695
    5. '
' → logprob: -14.750017166137695
    6. 'return' → logprob: -15.375017166137695
    7. 'else' → logprob: -15.500017166137695
    8. '  ' → logprob: -15.750017166137695
    9. ')' → logprob: -15.750017166137695
    10. '       ' → logprob: -15.875017166137695

Token 238: ' else' (ID: 1203)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037770282942801714
    2. 'else' (adapté à ' else') → logprob: -5.878777027130127
    3. 'return' → logprob: -7.128777027130127
    4. ' ' → logprob: -9.628777503967285
    5. '0' → logprob: -10.378777503967285
    6. ' else' → logprob: -10.378777503967285
    7. '<|end|>' → logprob: -12.003777503967285
    8. '  ' → logprob: -12.128777503967285
    9. '    
' → logprob: -12.128777503967285
    10. ' return' → logprob: -12.378777503967285

Token 239: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05583423003554344
    2. ':' → logprob: -3.8058342933654785
    3. ':
' → logprob: -4.0558342933654785
    4. '   ' → logprob: -4.5558342933654785
    5. '0' → logprob: -6.4308342933654785
    6. ':return' → logprob: -6.8058342933654785
    7. ' return' → logprob: -7.1808342933654785
    8. 'return' → logprob: -7.8058342933654785
    9. ',' → logprob: -9.43083381652832
    10. '
' → logprob: -9.68083381652832

Token 240: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13917070627212524
    2. '0' → logprob: -2.5141706466674805
    3. '   ' → logprob: -3.6391706466674805
    4. 'return' → logprob: -3.8891706466674805
    5. ' return' → logprob: -6.1391706466674805
    6. '1' → logprob: -10.26417064666748
    7. '
' → logprob: -10.51417064666748
    8. '    
' → logprob: -11.76417064666748
    9. '	return' → logprob: -11.76417064666748
    10. ' ' → logprob: -12.01417064666748

Token 241: ' COM' (ID: 10434)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.009195184335112572
    2. '0' → logprob: -4.759195327758789
    3. '       ' → logprob: -8.134195327758789
    4. '   ' → logprob: -8.509195327758789
    5. ' return' → logprob: -9.384195327758789
    6. '	return' → logprob: -14.759195327758789
    7. 'raise' → logprob: -14.884195327758789
    8. '
' → logprob: -15.509195327758789
    9. ':return' → logprob: -16.13419532775879
    10. '1' → logprob: -16.25919532775879

Token 242: 'BI' (ID: 18223)
  Prédit: 'BI'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'BI' → logprob: -0.00010628487507347018
    2. 'bi' → logprob: -9.625105857849121
    3. 'B' → logprob: -10.750105857849121
    4. '
' → logprob: -12.250105857849121
    5. 'I' → logprob: -13.000105857849121
    6. 'Bi' → logprob: -13.125105857849121
    7. 'b' → logprob: -13.875105857849121
    8. 'BO' → logprob: -14.000105857849121
    9. '[' → logprob: -14.250105857849121
    10. '#' → logprob: -14.625105857849121

Token 243: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0012720199301838875
    2. '[' → logprob: -7.376272201538086
    3. 'return' → logprob: -7.876272201538086
    4. 'a' → logprob: -8.876272201538086
    5. '[-' → logprob: -10.876272201538086
    6. ' return' → logprob: -10.876272201538086
    7. '   ' → logprob: -11.126272201538086
    8. '[
' → logprob: -11.126272201538086
    9. '[]' → logprob: -11.626272201538086
    10. ')[' → logprob: -11.751272201538086

Token 244: '][' (ID: 2696)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008735007606446743
    2. ']==' → logprob: -5.508735179901123
    3. '][' → logprob: -6.508735179901123
    4. '[' → logprob: -6.633735179901123
    5. ']=' → logprob: -7.258735179901123
    6. ']
' → logprob: -8.133734703063965
    7. 'return' → logprob: -9.258734703063965
    8. ']<' → logprob: -9.258734703063965
    9. '[
' → logprob: -9.383734703063965
    10. '==' → logprob: -9.383734703063965

Token 245: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.06721637398004532
    2. '-' → logprob: -3.067216396331787
    3. 'a' → logprob: -5.067216396331787
    4. '-b' → logprob: -5.067216396331787
    5. '0' → logprob: -5.192216396331787
    6. '-a' → logprob: -8.442215919494629
    7. 'return' → logprob: -10.442215919494629
    8. '-return' → logprob: -10.942215919494629
    9. ' -' → logprob: -11.442215919494629
    10. ' b' → logprob: -11.567215919494629

Token 246: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20487499237060547
    2. '=' → logprob: -1.9548749923706055
    3. ']=' → logprob: -3.3298749923706055
    4. ']=-' → logprob: -5.2048749923706055
    5. 'return' → logprob: -6.8298749923706055
    6. ' =' → logprob: -7.2048749923706055
    7. '=-' → logprob: -7.8298749923706055
    8. ']
' → logprob: -10.204874992370605
    9. ' ]' → logprob: -10.329874992370605
    10. ')' → logprob: -11.079874992370605

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0031853171531111
    2. ' =' → logprob: -5.753185272216797
    3. 'return' → logprob: -12.128185272216797
    4. '=
' → logprob: -13.878185272216797
    5. '=None' → logprob: -14.628185272216797
    6. ' return' → logprob: -15.628185272216797
    7. ',' → logprob: -15.753185272216797
    8. ' ' → logprob: -16.128185272216797
    9. '   ' → logprob: -16.378185272216797
    10. '=-' → logprob: -16.753185272216797

Token 248: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '
' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '00' → logprob: -20.875001907348633
    6. ' ' → logprob: -21.125001907348633
    7. '０' → logprob: -21.250001907348633
    8. '۰' → logprob: -21.250001907348633
    9. 'None' → logprob: -22.000001907348633
    10. '```' → logprob: -22.125001907348633

Token 249: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '
' → logprob: -19.5
    4. '   ' → logprob: -20.5
    5. '۰' → logprob: -20.625
    6. '00' → logprob: -20.875
    7. '０' → logprob: -21.125
    8. 'None' → logprob: -21.625
    9. '000' → logprob: -21.75
    10. '```' → logprob: -22.0

Token 250: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00020258675795048475
    2. '	return' → logprob: -9.375202178955078
    3. 'return' → logprob: -9.625202178955078
    4. '
' → logprob: -10.875202178955078
    5. ' return' → logprob: -11.125202178955078
    6. '    
' → logprob: -11.875202178955078
    7. '<|end|>' → logprob: -11.875202178955078
    8. ')' → logprob: -14.250202178955078
    9. ':return' → logprob: -14.250202178955078
    10. '       ' → logprob: -14.500202178955078

Token 251: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.659005157416686e-05
    2. '<|end|>' → logprob: -10.625066757202148
    3. '	return' → logprob: -11.000066757202148
    4. '    
' → logprob: -11.750066757202148
    5. '       ' → logprob: -12.000066757202148
    6. ' return' → logprob: -12.500066757202148
    7. 'return' → logprob: -12.750066757202148
    8. ')' → logprob: -13.250066757202148
    9. '  ' → logprob: -14.125066757202148
    10. '    ' → logprob: -14.500066757202148

Token 252: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.00691855326294899
    2. ' return' → logprob: -5.006918430328369
    3. '   ' → logprob: -8.506918907165527
    4. '
' → logprob: -14.506918907165527
    5. '	return' → logprob: -15.006918907165527
    6. '       ' → logprob: -15.631918907165527
    7. 'eturn' → logprob: -17.00691795349121
    8. '    
' → logprob: -17.63191795349121
    9. ' ' → logprob: -17.88191795349121
    10. ')return' → logprob: -17.88191795349121

Token 253: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01879066787660122
    2. 'COM' → logprob: -4.0187907218933105
    3. ' ' → logprob: -7.5187907218933105
    4. ' COM' → logprob: -9.518790245056152
    5. 'Com' → logprob: -11.268790245056152
    6. 'com' → logprob: -11.768790245056152
    7. '(COM' → logprob: -14.268790245056152
    8. 'C' → logprob: -14.268790245056152
    9. '   ' → logprob: -14.893790245056152
    10. '_COM' → logprob: -15.331290245056152

Token 254: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005937566980719566
    2. 'COM' → logprob: -5.130937576293945
    3. 'com' → logprob: -12.255937576293945
    4. ' ' → logprob: -13.505937576293945
    5. 'Com' → logprob: -13.630937576293945
    6. ' COM' → logprob: -14.130937576293945
    7. '(COM' → logprob: -14.880937576293945
    8. '(' → logprob: -16.505937576293945
    9. '_COM' → logprob: -16.630937576293945
    10. '
' → logprob: -16.630937576293945

Token 255: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: 'M' (ID: 44)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.23845550417900085
    2. 'def' → logprob: -3.1134555339813232
    3. 'result' → logprob: -3.1134555339813232
    4. 'answer' → logprob: -3.6134555339813232
    5. 'res' → logprob: -3.7384555339813232
    6. 'ans' → logprob: -3.8634555339813232
    7. 'DP' → logprob: -3.9884555339813232
    8. '#' → logprob: -4.863455295562744
    9. 'count' → logprob: -5.863455295562744
    10. 'n' → logprob: -6.113455295562744

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.348396897315979
    2. '=' → logprob: -1.473396897315979
    3. 'od' → logprob: -4.2233967781066895
    4. 'atrix' → logprob: -4.8483967781066895
    5. 'atch' → logprob: -5.0983967781066895
    6. 'ax' → logprob: -5.4733967781066895
    7. 'at' → logprob: -5.4733967781066895
    8. 'atching' → logprob: -6.0983967781066895
    9. 'ult' → logprob: -6.3483967781066895
    10. 'ask' → logprob: -6.4733967781066895

Token 258: ' max' (ID: 2999)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2844892740249634
    2. '[[' → logprob: -1.5344892740249634
    3. 'H' → logprob: -1.6594892740249634
    4. '{}' → logprob: -2.284489154815674
    5. '0' → logprob: -3.159489154815674
    6. '20' → logprob: -3.409489154815674
    7. 'W' → logprob: -3.534489154815674
    8. '10' → logprob: -4.034489154815674
    9. '(' → logprob: -4.159489154815674
    10. '[]' → logprob: -4.534489154815674

Token 259: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.00014239625306800008
    2. '(' → logprob: -9.000142097473145
    3. 'H' → logprob: -11.875142097473145
    4. '(W' → logprob: -12.375142097473145
    5. '(len' → logprob: -13.125142097473145
    6. '(A' → logprob: -13.500142097473145
    7. '((' → logprob: -14.000142097473145
    8. '([' → logprob: -14.250142097473145
    9. '()' → logprob: -14.250142097473145
    10. '(max' → logprob: -14.375142097473145

Token 260: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.034293051809072495
    2. ',W' → logprob: -3.4092929363250732
    3. ' ,' → logprob: -7.534293174743652
    4. '-' → logprob: -10.534293174743652
    5. '+' → logprob: -10.784293174743652
    6. 'W' → logprob: -10.909293174743652
    7. ',H' → logprob: -10.909293174743652
    8. ',M' → logprob: -12.034293174743652
    9. ',
' → logprob: -12.159293174743652
    10. ')' → logprob: -12.159293174743652

Token 261: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.012513656169176102
    2. ' W' → logprob: -4.387513637542725
    3. ' ' → logprob: -13.137514114379883
    4. '
' → logprob: -14.387514114379883
    5. '   ' → logprob: -14.387514114379883
    6. '20' → logprob: -14.637514114379883
    7. ')' → logprob: -15.762514114379883
    8. '	W' → logprob: -16.012514114379883
    9. '  ' → logprob: -17.137514114379883
    10. ',W' → logprob: -17.637514114379883

Token 262: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00025084958178922534
    2. '+' → logprob: -9.000250816345215
    3. ')+' → logprob: -9.500250816345215
    4. ' )' → logprob: -10.125250816345215
    5. ')
' → logprob: -11.750250816345215
    6. ' +' → logprob: -13.250250816345215
    7. '))' → logprob: -14.125250816345215
    8. ')#' → logprob: -15.000250816345215
    9. ',' → logprob: -15.250250816345215
    10. '),' → logprob: -15.500250816345215

Token 263: ' +' (ID: 659)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1627746969461441
    2. 'DP' → logprob: -2.4127748012542725
    3. '#' → logprob: -4.412774562835693
    4. 'result' → logprob: -4.662774562835693
    5. '+' → logprob: -5.287774562835693
    6. '
' → logprob: -5.287774562835693
    7. 'D' → logprob: -5.537774562835693
    8. 'for' → logprob: -5.912774562835693
    9. 'count' → logprob: -6.037774562835693
    10. ')' → logprob: -6.287774562835693

Token 264: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21155498921871185
    2. '20' → logprob: -2.711555004119873
    3. '21' → logprob: -3.086555004119873
    4. '2' → logprob: -3.336555004119873
    5. '10' → logprob: -3.461555004119873
    6. '5' → logprob: -4.711555004119873
    7. ' ' → logprob: -6.711555004119873
    8. '3' → logprob: -7.461555004119873
    9. '11' → logprob: -7.836555004119873
    10. '22' → logprob: -8.836554527282715

Token 265: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.38062429428100586
    2. '10' → logprob: -2.130624294281006
    3. '20' → logprob: -2.130624294281006
    4. '2' → logprob: -3.005624294281006
    5. '5' → logprob: -4.005624294281006
    6. '21' → logprob: -4.755624294281006
    7. '3' → logprob: -6.880624294281006
    8. '11' → logprob: -7.380624294281006
    9. '100' → logprob: -7.880624294281006
    10. '50' → logprob: -8.755624771118164

Token 266: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.357122004032135
    2. 'DP' → logprob: -1.6071219444274902
    3. ' 
' → logprob: -3.4821219444274902
    4. '
' → logprob: -4.35712194442749
    5. ' DP' → logprob: -4.73212194442749
    6. 'D' → logprob: -5.23212194442749
    7. ')' → logprob: -5.35712194442749
    8. ' dp' → logprob: -5.48212194442749
    9. 'count' → logprob: -5.73212194442749
    10. '  
' → logprob: -5.85712194442749

Token 267: 'RA' (ID: 7896)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.12843601405620575
    2. 'DP' → logprob: -2.2534360885620117
    3. 'D' → logprob: -5.753436088562012
    4. 'pow' → logprob: -6.253436088562012
    5. 'ans' → logprob: -6.378436088562012
    6. 'dist' → logprob: -6.753436088562012
    7. 'f' → logprob: -7.378436088562012
    8. 'count' → logprob: -7.503436088562012
    9. 'cnt' → logprob: -7.753436088562012
    10. 'ways' → logprob: -7.878436088562012

Token 268: ' =' (ID: 314)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.8501259684562683
    2. 'NK' → logprob: -1.475126028060913
    3. ' =' → logprob: -1.725126028060913
    4. 'NG' → logprob: -2.600126028060913
    5. 'C' → logprob: -4.350125789642334
    6. 'F' → logprob: -4.600125789642334
    7. 'D' → logprob: -4.725125789642334
    8. 'Z' → logprob: -5.350125789642334
    9. '=' → logprob: -5.350125789642334
    10. 'ND' → logprob: -5.350125789642334

Token 269: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.48515740036964417
    2. '[' → logprob: -0.9851573705673218
    3. '[M' → logprob: -5.360157489776611
    4. ' [[' → logprob: -5.485157489776611
    5. ' [' → logprob: -6.485157489776611
    6. '[-' → logprob: -8.235157012939453
    7. '[A' → logprob: -8.485157012939453
    8. '[m' → logprob: -10.360157012939453
    9. '[a' → logprob: -10.485157012939453
    10. '[(' → logprob: -10.735157012939453

Token 270: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08667866885662079
    2. 'dp' → logprob: -2.8366787433624268
    3. 'DP' → logprob: -4.711678504943848
    4. 'row' → logprob: -5.336678504943848
    5. ' for' → logprob: -6.211678504943848
    6. 'count' → logprob: -7.086678504943848
    7. 'cnt' → logprob: -7.086678504943848
    8. 'R' → logprob: -7.336678504943848
    9. 'col' → logprob: -7.586678504943848
    10. 'tmp' → logprob: -7.711678504943848

Token 271: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.03859172761440277
    2. '_' → logprob: -4.1635918617248535
    3. '_i' → logprob: -5.1635918617248535
    4. 'j' → logprob: -5.2885918617248535
    5. 'r' → logprob: -5.5385918617248535
    6. ' i' → logprob: -6.1635918617248535
    7. 'x' → logprob: -6.4135918617248535
    8. '_row' → logprob: -6.5385918617248535
    9. 'row' → logprob: -6.9135918617248535
    10. '_j' → logprob: -8.038591384887695

Token 272: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0621432401239872
    2. 'in' → logprob: -2.812143325805664
    3. ' ' → logprob: -9.187143325805664
    4. 'n' → logprob: -10.062143325805664
    5. '   ' → logprob: -12.437143325805664
    6. ')' → logprob: -12.437143325805664
    7. '=' → logprob: -12.812143325805664
    8. ',' → logprob: -12.937143325805664
    9. '_' → logprob: -12.937143325805664
    10. 'range' → logprob: -13.062143325805664

Token 273: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005249056499451399
    2. ' range' → logprob: -5.2552490234375
    3. 'A' → logprob: -11.3802490234375
    4. ' ' → logprob: -13.5052490234375
    5. '   ' → logprob: -14.8802490234375
    6. 'r' → logprob: -15.0052490234375
    7. ' A' → logprob: -15.0052490234375
    8. 'ra' → logprob: -15.6302490234375
    9. '  ' → logprob: -15.6302490234375
    10. ')' → logprob: -15.8802490234375

Token 274: '(M' (ID: 6103)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.017446840181946754
    2. '(M' → logprob: -4.142446994781494
    3. '(' → logprob: -6.767446994781494
    4. 'H' → logprob: -8.892446517944336
    5. '(len' → logprob: -9.642446517944336
    6. 'M' → logprob: -10.517446517944336
    7. '(W' → logprob: -11.517446517944336
    8. ' (' → logprob: -12.017446517944336
    9. '(R' → logprob: -12.517446517944336
    10. '   ' → logprob: -13.142446517944336

Token 275: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.31517064571380615
    2. '):' → logprob: -1.3151706457138062
    3. '+' → logprob: -6.315170764923096
    4. '):
' → logprob: -10.190170288085938
    5. ')' → logprob: -10.940170288085938
    6. ' ):
' → logprob: -10.940170288085938
    7. ' ):' → logprob: -11.440170288085938
    8. ' +' → logprob: -12.565170288085938
    9. '-' → logprob: -12.940170288085938
    10. ',' → logprob: -13.440170288085938

Token 276: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011442000046372414
    2. 'RA' → logprob: -4.511442184448242
    3. ' RA' → logprob: -7.886442184448242
    4. '   ' → logprob: -12.136442184448242
    5. ' ' → logprob: -12.886442184448242
    6. 'row' → logprob: -13.136442184448242
    7. '_RA' → logprob: -13.386442184448242
    8. '       ' → logprob: -13.511442184448242
    9. ' row' → logprob: -13.886442184448242
    10. '  ' → logprob: -14.136442184448242

Token 277: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' (adapté à ' RA') → logprob: -0.035613641142845154
    2. '   ' → logprob: -4.160613536834717
    3. 'row' → logprob: -4.285613536834717
    4. ' RA' → logprob: -5.660613536834717
    5. ' row' → logprob: -6.785613536834717
    6. 'temp' → logprob: -8.160614013671875
    7. 'ra' → logprob: -8.410614013671875
    8. 'tmp' → logprob: -8.535614013671875
    9. 'line' → logprob: -9.035614013671875
    10. ' ' → logprob: -9.660614013671875

Token 278: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.03812514618039131
    2. '=' → logprob: -3.7881250381469727
    3. '.' → logprob: -4.788125038146973
    4. ' =' → logprob: -5.163125038146973
    5. 'append' → logprob: -8.163125038146973
    6. ' .' → logprob: -8.163125038146973
    7. '.ap' → logprob: -10.413125038146973
    8. '.=' → logprob: -11.038125038146973
    9. '.a' → logprob: -11.288125038146973
    10. '.app' → logprob: -11.538125038146973

Token 279: '([-' (ID: 99080)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.10027223080396652
    2. '(' → logprob: -3.1002721786499023
    3. '([]' → logprob: -3.4752721786499023
    4. '[' → logprob: -4.975272178649902
    5. '([-' → logprob: -5.475272178649902
    6. '(i' → logprob: -5.850272178649902
    7. '[i' → logprob: -6.975272178649902
    8. '[]' → logprob: -6.975272178649902
    9. '0' → logprob: -7.100272178649902
    10. '((' → logprob: -7.100272178649902

Token 280: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '-' → logprob: -13.125004768371582
    3. '2' → logprob: -14.500004768371582
    4. '```' → logprob: -15.500004768371582
    5. ']' → logprob: -15.562504768371582
    6. 'sys' → logprob: -15.875004768371582
    7. ' ' → logprob: -15.937504768371582
    8. 'mod' → logprob: -16.500003814697266
    9. '(' → logprob: -16.625003814697266
    10. '１' → logprob: -16.937503814697266

Token 281: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006885277107357979
    2. ' ]' → logprob: -5.506885051727295
    3. ' for' → logprob: -6.506885051727295
    4. ']*' → logprob: -7.006885051727295
    5. 'for' → logprob: -8.631885528564453
    6. ']*(' → logprob: -8.881885528564453
    7. '])' → logprob: -10.131885528564453
    8. ')' → logprob: -11.631885528564453
    9. ',' → logprob: -11.756885528564453
    10. '*' → logprob: -11.881885528564453

Token 282: ' *' (ID: 425)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5278839468955994
    2. ' for' → logprob: -1.2778840065002441
    3. ')' → logprob: -2.902884006500244
    4. '*' → logprob: -3.652884006500244
    5. 'for' → logprob: -3.902884006500244
    6. ']*' → logprob: -4.277884006500244
    7. ' ]' → logprob: -5.027884006500244
    8. ' *' → logprob: -5.027884006500244
    9. ',' → logprob: -6.527884006500244
    10. ' )' → logprob: -7.777884006500244

Token 283: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.05709539353847504
    2. '21' → logprob: -4.432095527648926
    3. '(' → logprob: -4.807095527648926
    4. '(M' → logprob: -4.807095527648926
    5. 'W' → logprob: -5.057095527648926
    6. '(H' → logprob: -5.182095527648926
    7. 'H' → logprob: -5.932095527648926
    8. '3' → logprob: -6.057095527648926
    9. '2' → logprob: -6.182095527648926
    10. '(W' → logprob: -6.307095527648926

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010115911572938785
    2. '))' → logprob: -10.250101089477539
    3. '])' → logprob: -10.250101089477539
    4. ' )' → logprob: -10.625101089477539
    5. ')
' → logprob: -12.375101089477539
    6. ')]' → logprob: -14.375101089477539
    7. '[' → logprob: -15.250101089477539
    8. ')])' → logprob: -15.375101089477539
    9. '）' → logprob: -16.00010108947754
    10. '   ' → logprob: -16.00010108947754

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.006064478773623705
    2. '<|end|>' → logprob: -5.131064414978027
    3. ')' → logprob: -9.131064414978027
    4. ' def' → logprob: -11.006064414978027
    5. '```' → logprob: -12.506064414978027
    6. '<|end|>' → logprob: -13.131064414978027
    7. '
' → logprob: -13.506064414978027
    8. '\' → logprob: -14.256064414978027
    9. '#' → logprob: -14.506064414978027
    10. 'for' → logprob: -14.506064414978027

Token 286: ' rect' (ID: 13107)
  Prédit: ' rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rec' → logprob: -1.6336653232574463
    2. ' R' → logprob: -1.8836653232574463
    3. ' count' → logprob: -2.6336653232574463
    4. ' Rec' → logprob: -2.6336653232574463
    5. ' Ra' → logprob: -2.8836653232574463
    6. ' dfs' → logprob: -2.8836653232574463
    7. 'R' → logprob: -3.0086653232574463
    8. ' DP' → logprob: -3.3836653232574463
    9. ' dp' → logprob: -3.5086653232574463
    10. ' RA' → logprob: -3.7586653232574463

Token 287: '(H' (ID: 20904)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.031886614859104156
    2. '(' → logprob: -4.656886577606201
    3. 'angles' → logprob: -4.781886577606201
    4. '_count' → logprob: -5.031886577606201
    5. '_area' → logprob: -6.656886577606201
    6. '_rect' → logprob: -6.906886577606201
    7. 'angular' → logprob: -7.031886577606201
    8. '_' → logprob: -7.531886577606201
    9. 'count' → logprob: -8.03188705444336
    10. '_angle' → logprob: -8.03188705444336

Token 288: 'H' (ID: 39)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018236928153783083
    2. ' ,' → logprob: -6.501823902130127
    3. ',
' → logprob: -8.626823425292969
    4. '):' → logprob: -10.376823425292969
    5. ',H' → logprob: -11.001823425292969
    6. '_,' → logprob: -11.126823425292969
    7. '+,' → logprob: -11.251823425292969
    8. '+' → logprob: -11.376823425292969
    9. ')' → logprob: -11.626823425292969
    10. ',W' → logprob: -12.376823425292969

Token 289: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013784486800432205
    2. ' ,' → logprob: -6.626378536224365
    3. ',H' → logprob: -10.376378059387207
    4. '):' → logprob: -12.376378059387207
    5. ',
' → logprob: -12.501378059387207
    6. ' ' → logprob: -13.251378059387207
    7. ',W' → logprob: -13.376378059387207
    8. '_,' → logprob: -13.876378059387207
    9. ')' → logprob: -14.001378059387207
    10. '   ' → logprob: -14.126378059387207

Token 290: ' WW' (ID: 43758)
  Prédit: 'WW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -0.0009629119304008782
    2. ' WW' → logprob: -7.000962734222412
    3. 'W' → logprob: -10.62596321105957
    4. 'HW' → logprob: -12.00096321105957
    5. 'WWW' → logprob: -12.37596321105957
    6. ' ' → logprob: -12.75096321105957
    7. '
' → logprob: -12.75096321105957
    8. 'HH' → logprob: -12.87596321105957
    9. 'ww' → logprob: -13.12596321105957
    10. 'KK' → logprob: -13.62596321105957

Token 291: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013767797499895096
    2. '):
' → logprob: -6.876376628875732
    3. ')' → logprob: -8.00137710571289
    4. ' ):' → logprob: -12.62637710571289
    5. ',' → logprob: -12.75137710571289
    6. ':' → logprob: -13.62637710571289
    7. '):
' → logprob: -13.87637710571289
    8. '):

' → logprob: -15.25137710571289
    9. ')：' → logprob: -16.00137710571289
    10. '   ' → logprob: -16.87637710571289

Token 292: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0420190766453743
    2. '	if' → logprob: -4.417018890380859
    3. ' if' → logprob: -4.417018890380859
    4. ' 
' → logprob: -4.792018890380859
    5. '<|end|>' → logprob: -5.667018890380859
    6. '    
' → logprob: -6.917018890380859
    7. ')' → logprob: -7.042018890380859
    8. ' ' → logprob: -7.042018890380859
    9. ':' → logprob: -7.167018890380859
    10. ',' → logprob: -8.04201889038086

Token 293: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018651321530342102
    2. ' if' → logprob: -4.018651485443115
    3. '   ' → logprob: -7.643651485443115
    4. 'i' → logprob: -11.268651008605957
    5. ' ' → logprob: -12.268651008605957
    6. '	if' → logprob: -13.143651008605957
    7. '    ' → logprob: -13.143651008605957
    8. '  ' → logprob: -15.393651008605957
    9. ' i' → logprob: -15.393651008605957
    10. 'return' → logprob: -16.143651962280273

Token 294: ' HH' (ID: 46207)
  Prédit: ' RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' RA' → logprob: -0.5530559420585632
    2. 'RA' → logprob: -0.9280559420585632
    3. ' HH' → logprob: -4.053055763244629
    4. 'HH' → logprob: -4.428055763244629
    5. 'RR' → logprob: -10.178055763244629
    6. ' RR' → logprob: -10.178055763244629
    7. 'HA' → logprob: -10.928055763244629
    8. ' ' → logprob: -10.928055763244629
    9. ' HA' → logprob: -11.178055763244629
    10. '_RA' → logprob: -11.178055763244629

Token 295: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5900408625602722
    2. ' ==' → logprob: -0.8400408625602722
    3. '<' → logprob: -4.590040683746338
    4. ' <' → logprob: -6.465040683746338
    5. '<=' → logprob: -6.465040683746338
    6. ' <=' → logprob: -7.840040683746338
    7. '>=' → logprob: -8.465041160583496
    8. '>' → logprob: -10.340041160583496
    9. ' >=' → logprob: -10.465041160583496
    10. '<H' → logprob: -11.215041160583496

Token 296: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012590175494551659
    2. ' ' → logprob: -4.387590408325195
    3. '1' → logprob: -9.512590408325195
    4. '-' → logprob: -12.887590408325195
    5. '   ' → logprob: -13.637590408325195
    6. 'HH' → logprob: -14.137590408325195
    7. ' -' → logprob: -14.637590408325195
    8. ' HH' → logprob: -14.762590408325195
    9. '  ' → logprob: -15.137590408325195
    10. '2' → logprob: -15.762590408325195

Token 297: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00021760274830739945
    2. ' ' → logprob: -8.75021743774414
    3. '1' → logprob: -10.12521743774414
    4. '-' → logprob: -11.37521743774414
    5. 'HH' → logprob: -12.12521743774414
    6. '   ' → logprob: -15.12521743774414
    7. 'H' → logprob: -15.25021743774414
    8. 'W' → logprob: -15.37521743774414
    9. 'WW' → logprob: -15.50021743774414
    10. ' -' → logprob: -15.75021743774414

Token 298: ' and' (ID: 326)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.11476962268352509
    2. 'or' → logprob: -2.739769697189331
    3. ':' → logprob: -3.864769697189331
    4. ' and' → logprob: -4.864769458770752
    5. '   ' → logprob: -5.239769458770752
    6. ':
' → logprob: -5.489769458770752
    7. 'and' → logprob: -5.989769458770752
    8. ':return' → logprob: -6.114769458770752
    9. '	or' → logprob: -6.989769458770752
    10. ' ' → logprob: -10.23976993560791

Token 299: ' WW' (ID: 43758)
  Prédit: ' WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' WW' → logprob: -0.3132629990577698
    2. 'WW' → logprob: -1.313262939453125
    3. ' ' → logprob: -13.938262939453125
    4. 'ww' → logprob: -16.188262939453125
    5. ' ' → logprob: -16.438262939453125
    6. '   ' → logprob: -16.938262939453125
    7. '```' → logprob: -17.438262939453125
    8. ' WWW' → logprob: -17.563262939453125
    9. ' ww' → logprob: -17.688262939453125
    10. '  ' → logprob: -17.688262939453125

Token 300: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6326169967651367
    2. ' ==' → logprob: -0.7576169967651367
    3. '<|end|>' → logprob: -12.632616996765137
    4. ')==' → logprob: -12.757616996765137
    5. ' ' → logprob: -12.882616996765137
    6. ')' → logprob: -13.007616996765137
    7. '=' → logprob: -13.257616996765137
    8. ']==' → logprob: -13.757616996765137
    9. '()==' → logprob: -14.007616996765137
    10. '0' → logprob: -14.007616996765137

Token 301: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00866030529141426
    2. ' ' → logprob: -4.758660316467285
    3. '1' → logprob: -10.133660316467285
    4. '   ' → logprob: -13.133660316467285
    5. '  ' → logprob: -14.133660316467285
    6. '2' → logprob: -14.321160316467285
    7. '
' → logprob: -14.946160316467285
    8. '۰' → logprob: -15.571160316467285
    9. '```' → logprob: -15.633660316467285
    10. ' ' → logprob: -15.821160316467285

Token 302: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00044914212776347995
    2. ' ' → logprob: -7.750449180603027
    3. '1' → logprob: -11.125449180603027
    4. '   ' → logprob: -14.437949180603027
    5. '2' → logprob: -14.812949180603027
    6. '
' → logprob: -15.000449180603027
    7. '```' → logprob: -15.062949180603027
    8. '  ' → logprob: -15.187949180603027
    9. '

' → logprob: -15.687949180603027
    10. '۰' → logprob: -15.750449180603027

Token 303: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2523323595523834
    2. ':
' → logprob: -1.502332329750061
    3. ':return' → logprob: -8.00233268737793
    4. '   ' → logprob: -10.00233268737793
    5. '):
' → logprob: -11.62733268737793
    6. ' or' → logprob: -12.75233268737793
    7. ' :
' → logprob: -12.75233268737793
    8. ' :' → logprob: -13.00233268737793
    9. '):' → logprob: -13.12733268737793
    10. ':
' → logprob: -13.37733268737793

Token 304: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13580869138240814
    2. ':
' → logprob: -2.5108087062835693
    3. ':' → logprob: -3.7608087062835693
    4. ':return' → logprob: -4.26080846786499
    5. '   ' → logprob: -5.01080846786499
    6. ' return' → logprob: -7.63580846786499
    7. '	return' → logprob: -8.135808944702148
    8. '):
' → logprob: -8.260808944702148
    9. ' :
' → logprob: -8.260808944702148
    10. 'return' → logprob: -8.760808944702148

Token 305: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08023358136415482
    2. ' return' → logprob: -2.580233573913574
    3. '   ' → logprob: -6.955233573913574
    4. '
' → logprob: -8.705233573913574
    5. '       ' → logprob: -9.080233573913574
    6. '	return' → logprob: -9.580233573913574
    7. '1' → logprob: -10.955233573913574
    8. '    
' → logprob: -11.705233573913574
    9. ' 
' → logprob: -12.080233573913574
    10. '0' → logprob: -12.955233573913574

Token 306: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007519744685851038
    2. '0' → logprob: -7.625751972198486
    3. ' ' → logprob: -8.250752449035645
    4. '
' → logprob: -13.625752449035645
    5. '   ' → logprob: -14.625752449035645
    6. '(' → logprob: -14.750752449035645
    7. 'int' → logprob: -15.875752449035645
    8. ' ' → logprob: -16.438251495361328
    9. '[' → logprob: -16.688251495361328
    10. '2' → logprob: -16.813251495361328

Token 307: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '0' → logprob: -10.875020980834961
    3. ' ' → logprob: -13.375020980834961
    4. '
' → logprob: -15.625020980834961
    5. '(' → logprob: -16.68752098083496
    6. 'int' → logprob: -16.93752098083496
    7. '[' → logprob: -17.25002098083496
    8. '{' → logprob: -17.87502098083496
    9. '   ' → logprob: -18.12502098083496
    10. '-' → logprob: -18.18752098083496

Token 308: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.34289538860321045
    2. '
' → logprob: -1.4678953886032104
    3. '<|end|>' → logprob: -3.4678955078125
    4. '    
' → logprob: -3.8428955078125
    5. '  
' → logprob: -6.0928955078125
    6. '	
' → logprob: -6.2178955078125
    7. ' 
' → logprob: -6.9678955078125
    8. '\n' → logprob: -6.9678955078125
    9. '<|end|>' → logprob: -8.0928955078125
    10. '   
' → logprob: -8.0928955078125

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04449554905295372
    2. '
' → logprob: -4.044495582580566
    3. '<|end|>' → logprob: -4.044495582580566
    4. '    
' → logprob: -5.044495582580566
    5. '	
' → logprob: -6.669495582580566
    6. '  
' → logprob: -8.419495582580566
    7. ' 
' → logprob: -8.919495582580566
    8. '<|end|>' → logprob: -9.044495582580566
    9. '\t' → logprob: -9.669495582580566
    10. '\n' → logprob: -10.044495582580566

Token 310: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0007316163973882794
    2. ' if' → logprob: -7.250731468200684
    3. '   ' → logprob: -10.875731468200684
    4. '    
' → logprob: -13.875731468200684
    5. 'res' → logprob: -14.000731468200684
    6. '
' → logprob: -14.750731468200684
    7. 'elif' → logprob: -16.125732421875
    8. '	if' → logprob: -16.500732421875
    9. 'i' → logprob: -16.500732421875
    10. 'r' → logprob: -17.125732421875

Token 311: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -0.05639132857322693
    2. 'HH' → logprob: -3.3063912391662598
    3. ' RA' → logprob: -4.05639123916626
    4. ' HH' → logprob: -7.30639123916626
    5. 'RR' → logprob: -8.931391716003418
    6. 'HA' → logprob: -11.181391716003418
    7. '   ' → logprob: -11.931391716003418
    8. ' ' → logprob: -11.931391716003418
    9. '_RA' → logprob: -11.931391716003418
    10. 'H' → logprob: -12.493891716003418

Token 312: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.180258191714529e-06
    2. 'HH' → logprob: -12.000008583068848
    3. ')[' → logprob: -14.000008583068848
    4. '][' → logprob: -15.250008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '```' → logprob: -16.12500762939453
    7. '[
' → logprob: -16.37500762939453
    8. '
' → logprob: -16.50000762939453
    9. ' [' → logprob: -16.50000762939453
    10. ')' → logprob: -17.12500762939453

Token 313: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -1.6240566083070007e-06
    2. ' HH' → logprob: -13.500001907348633
    3. 'H' → logprob: -15.875001907348633
    4. '   ' → logprob: -18.000001907348633
    5. ' ' → logprob: -19.625001907348633
    6. '[' → logprob: -20.250001907348633
    7. '
' → logprob: -21.375001907348633
    8. 'HS' → logprob: -21.750001907348633
    9. 'HP' → logprob: -21.875001907348633
    10. '][' → logprob: -22.250001907348633

Token 314: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -8.423219696851447e-05
    2. '[' → logprob: -10.375083923339844
    3. ' ][' → logprob: -10.375083923339844
    4. ']' → logprob: -10.875083923339844
    5. ']][' → logprob: -13.500083923339844
    6. '   ' → logprob: -14.375083923339844
    7. '"][' → logprob: -15.500083923339844
    8. ']==' → logprob: -16.000083923339844
    9. ''][' → logprob: -16.125083923339844
    10. '][]' → logprob: -16.625083923339844

Token 315: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -6.2729995988775045e-06
    2. ' WW' → logprob: -12.000006675720215
    3. 'W' → logprob: -17.0000057220459
    4. '   ' → logprob: -18.8750057220459
    5. ' ' → logprob: -19.0000057220459
    6. 'ww' → logprob: -19.1250057220459
    7. '
' → logprob: -19.3750057220459
    8. '  ' → logprob: -22.2500057220459
    9. 'WWW' → logprob: -22.5000057220459
    10. '```' → logprob: -22.7500057220459

Token 316: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00866586435586214
    2. ']!=' → logprob: -4.758666038513184
    3. ']==' → logprob: -10.383666038513184
    4. ' ]' → logprob: -10.883666038513184
    5. '!=' → logprob: -13.633666038513184
    6. '!=-' → logprob: -15.883666038513184
    7. ']!='' → logprob: -16.258665084838867
    8. ')!=' → logprob: -16.383665084838867
    9. ' !=' → logprob: -17.133665084838867
    10. ']
' → logprob: -17.508665084838867

Token 317: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.17212063074111938
    2. ' !=' → logprob: -2.0471205711364746
    3. '!=-' → logprob: -3.5471205711364746
    4. ']!=' → logprob: -9.047121047973633
    5. ')!=' → logprob: -9.797121047973633
    6. ')' → logprob: -11.547121047973633
    7. '==' → logprob: -11.922121047973633
    8. '()!=' → logprob: -12.172121047973633
    9. '!==' → logprob: -12.422121047973633
    10. '=' → logprob: -13.172121047973633

Token 318: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0001234428636962548
    2. ' -' → logprob: -9.000123023986816
    3. '   ' → logprob: -20.750123977661133
    4. ' ' → logprob: -22.250123977661133
    5. '
' → logprob: -22.250123977661133
    6. '−' → logprob: -23.000123977661133
    7. '-
' → logprob: -23.750123977661133
    8. '  ' → logprob: -24.125123977661133
    9. '	' → logprob: -24.875123977661133
    10. '```' → logprob: -25.875123977661133

Token 319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '-' → logprob: -12.250006675720215
    3. ' ' → logprob: -14.375006675720215
    4. ' -' → logprob: -14.875006675720215
    5. '
' → logprob: -15.500006675720215
    6. '```' → logprob: -16.3750057220459
    7. '   ' → logprob: -16.7500057220459
    8. '

' → logprob: -17.1875057220459
    9. '`' → logprob: -18.1250057220459
    10. '2' → logprob: -18.3125057220459

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.060664430260658264
    2. ':
' → logprob: -3.435664415359497
    3. '):' → logprob: -4.060664653778076
    4. '):
' → logprob: -5.185664653778076
    5. ')' → logprob: -6.560664653778076
    6. '   ' → logprob: -6.685664653778076
    7. ':return' → logprob: -7.310664653778076
    8. '<|end|>' → logprob: -8.560664176940918
    9. '       ' → logprob: -8.935664176940918
    10. ' and' → logprob: -9.560664176940918

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013472576392814517
    2. ' return' → logprob: -7.626347064971924
    3. '   ' → logprob: -7.751347064971924
    4. 'return' → logprob: -8.501347541809082
    5. ',' → logprob: -9.751347541809082
    6. '	return' → logprob: -10.001347541809082
    7. '	' → logprob: -10.751347541809082
    8. ':return' → logprob: -10.876347541809082
    9. '	   ' → logprob: -10.876347541809082
    10. '<|end|>' → logprob: -11.501347541809082

Token 322: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0008723941282369196
    2. '       ' → logprob: -7.500872611999512
    3. ' return' → logprob: -8.375872611999512
    4. '
' → logprob: -10.375872611999512
    5. '   ' → logprob: -10.500872611999512
    6. '	return' → logprob: -10.500872611999512
    7. 'ret' → logprob: -13.875872611999512
    8. '{return' → logprob: -14.250872611999512
    9. '```' → logprob: -14.375872611999512
    10. ':return' → logprob: -15.625872611999512

Token 323: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -1.306760805164231e-05
    2. ' RA' → logprob: -11.25001335144043
    3. 'R' → logprob: -19.75001335144043
    4. '   ' → logprob: -20.75001335144043
    5. '
' → logprob: -21.62501335144043
    6. '_RA' → logprob: -21.62501335144043
    7. ' ' → logprob: -23.50001335144043
    8. 'RO' → logprob: -23.87501335144043
    9. 'ra' → logprob: -24.37501335144043
    10. 'РА' → logprob: -24.50001335144043

Token 324: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1160349458805285e-05
    2. 'HH' → logprob: -11.625011444091797
    3. '[
' → logprob: -13.375011444091797
    4. ' [' → logprob: -15.500011444091797
    5. '
' → logprob: -16.375011444091797
    6. ')[' → logprob: -16.500011444091797
    7. '   ' → logprob: -16.625011444091797
    8. '```' → logprob: -16.750011444091797
    9. '[[' → logprob: -17.000011444091797
    10. '][' → logprob: -17.375011444091797

Token 325: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -2.2200749754119897e-06
    2. 'H' → logprob: -13.375001907348633
    3. ' HH' → logprob: -14.375001907348633
    4. '   ' → logprob: -18.000001907348633
    5. '
' → logprob: -18.250001907348633
    6. ' ' → logprob: -18.750001907348633
    7. '[' → logprob: -19.000001907348633
    8. 'HN' → logprob: -19.875001907348633
    9. 'HT' → logprob: -21.500001907348633
    10. 'HS' → logprob: -21.625001907348633

Token 326: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004879915213678032
    2. '[' → logprob: -7.875487804412842
    3. ' ][' → logprob: -9.25048828125
    4. ']' → logprob: -11.87548828125
    5. ')[' → logprob: -13.75048828125
    6. '   ' → logprob: -14.00048828125
    7. '"][' → logprob: -14.50048828125
    8. ']][' → logprob: -14.62548828125
    9. '       ' → logprob: -14.62548828125
    10. ' ' → logprob: -14.75048828125

Token 327: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -6.630610641877865e-06
    2. ' WW' → logprob: -12.500006675720215
    3. 'W' → logprob: -12.750006675720215
    4. 'ww' → logprob: -17.8750057220459
    5. '
' → logprob: -19.3750057220459
    6. 'WO' → logprob: -20.1250057220459
    7. '   ' → logprob: -20.3750057220459
    8. '```' → logprob: -20.5000057220459
    9. ' ' → logprob: -21.1250057220459
    10. '  ' → logprob: -21.2500057220459

Token 328: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0010324534960091114
    2. ')' → logprob: -7.87603235244751
    3. ']
' → logprob: -7.87603235244751
    4. '   ' → logprob: -8.626032829284668
    5. ']:' → logprob: -10.251032829284668
    6. ']*' → logprob: -10.501032829284668
    7. ' ]' → logprob: -11.251032829284668
    8. ']:
' → logprob: -12.251032829284668
    9. '])' → logprob: -12.376032829284668
    10. ']+' → logprob: -13.501032829284668

Token 329: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005859463009983301
    2. '    
' → logprob: -5.255859375
    3. '    ' → logprob: -9.255859375
    4. '<|end|>' → logprob: -9.255859375
    5. '	
' → logprob: -10.005859375
    6. '   
' → logprob: -10.005859375
    7. '```' → logprob: -10.255859375
    8. '        
' → logprob: -10.380859375
    9. '[' → logprob: -10.380859375
    10. '       ' → logprob: -10.505859375

Token 330: ' DP' (ID: 51992)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.013910900801420212
    2. 'ret' → logprob: -5.13891077041626
    3. 'r' → logprob: -5.38891077041626
    4. 's' → logprob: -6.38891077041626
    5. 'result' → logprob: -7.51391077041626
    6. 'ans' → logprob: -7.51391077041626
    7. 'if' → logprob: -8.388911247253418
    8. ' res' → logprob: -8.513911247253418
    9. 're' → logprob: -10.138911247253418
    10. '   ' → logprob: -10.263911247253418

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03856167197227478
    2. '=' → logprob: -3.2885615825653076
    3. '[' → logprob: -7.788561820983887
    4. '=[' → logprob: -10.163561820983887
    5. ' ' → logprob: -11.038561820983887
    6. ' =[' → logprob: -11.038561820983887
    7. '   ' → logprob: -12.163561820983887
    8. '	' → logprob: -12.288561820983887
    9. ' ' → logprob: -12.288561820983887
    10. ']' → logprob: -12.288561820983887

Token 332: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.011128113605082035
    2. '[' → logprob: -4.511127948760986
    3. ' [[' → logprob: -10.136128425598145
    4. '0' → logprob: -10.261128425598145
    5. '[]
' → logprob: -13.386128425598145
    6. '[
' → logprob: -13.636128425598145
    7. '[-' → logprob: -14.261128425598145
    8. ' [' → logprob: -14.636128425598145
    9. '{' → logprob: -14.886128425598145
    10. '{}' → logprob: -15.011128425598145

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6724117398262024
    2. 'for' → logprob: -1.1724116802215576
    3. ' for' → logprob: -1.9224116802215576
    4. '[' → logprob: -3.6724116802215576
    5. '	for' → logprob: -4.922411918640137
    6. '<|end|>' → logprob: -8.297411918640137
    7. '[
' → logprob: -8.547411918640137
    8. '    ' → logprob: -8.797411918640137
    9. ' ' → logprob: -9.172411918640137
    10. '    
' → logprob: -9.922411918640137

Token 334: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.09135803580284119
    2. ' for' → logprob: -3.091357946395874
    3. '[' → logprob: -3.341357946395874
    4. '   ' → logprob: -5.216358184814453
    5. 'DP' → logprob: -7.216358184814453
    6. '[
' → logprob: -9.591358184814453
    7. ' [' → logprob: -9.716358184814453
    8. '[[' → logprob: -9.716358184814453
    9. '[]' → logprob: -10.091358184814453
    10. '	for' → logprob: -10.966358184814453

Token 335: ' i' (ID: 575)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.5107414126396179
    2. 'i' → logprob: -1.1357414722442627
    3. '_i' → logprob: -2.8857414722442627
    4. ' _' → logprob: -4.635741233825684
    5. ' i' → logprob: -4.885741233825684
    6. '_j' → logprob: -6.260741233825684
    7. 'j' → logprob: -6.385741233825684
    8. '_h' → logprob: -7.135741233825684
    9. '_H' → logprob: -7.385741233825684
    10. ' j' → logprob: -8.760741233825684

Token 336: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17992357909679413
    2. 'in' → logprob: -1.8049235343933105
    3. 'n' → logprob: -9.679924011230469
    4. ' ' → logprob: -9.929924011230469
    5. '	in' → logprob: -10.929924011230469
    6. 'range' → logprob: -11.304924011230469
    7. '   ' → logprob: -11.929924011230469
    8. ' i' → logprob: -11.929924011230469
    9. '  ' → logprob: -12.304924011230469
    10. '_' → logprob: -12.679924011230469

Token 337: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004087897017598152
    2. ' range' → logprob: -5.504087924957275
    3. '   ' → logprob: -12.629087448120117
    4. ' ' → logprob: -12.879087448120117
    5. '
' → logprob: -13.629087448120117
    6. '  ' → logprob: -14.004087448120117
    7. '	range' → logprob: -14.004087448120117
    8. 'rang' → logprob: -15.754087448120117
    9. 'r' → logprob: -15.879087448120117
    10. '    ' → logprob: -16.379087448120117

Token 338: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.01194322295486927
    2. '(' → logprob: -4.636943340301514
    3. 'HH' → logprob: -6.761943340301514
    4. 'H' → logprob: -7.511943340301514
    5. '(max' → logprob: -8.886942863464355
    6. '(W' → logprob: -9.386942863464355
    7. 'max' → logprob: -9.636942863464355
    8. '((' → logprob: -10.261942863464355
    9. '(len' → logprob: -10.511942863464355
    10. '
' → logprob: -11.386942863464355

Token 339: 'H' (ID: 39)
  Prédit: 'H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.671524167060852
    2. 'W' → logprob: -1.296524167060852
    3. '   ' → logprob: -2.4215240478515625
    4. '+' → logprob: -2.6715240478515625
    5. ',' → logprob: -3.5465240478515625
    6. '):
' → logprob: -4.6715240478515625
    7. ' ' → logprob: -5.0465240478515625
    8. '0' → logprob: -5.9215240478515625
    9. ' +' → logprob: -6.2965240478515625
    10. '1' → logprob: -6.2965240478515625

Token 340: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00865404587239027
    2. ' +' → logprob: -4.7586541175842285
    3. '):
' → logprob: -10.63365364074707
    4. '   ' → logprob: -11.50865364074707
    5. '):' → logprob: -12.38365364074707
    6. '+
' → logprob: -15.00865364074707
    7. ',' → logprob: -16.00865364074707
    8. '＋' → logprob: -16.50865364074707
    9. '[' → logprob: -16.63365364074707
    10. '  ' → logprob: -16.75865364074707

Token 341: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016861737822182477
    2. ' ' → logprob: -8.875168800354004
    3. '
' → logprob: -11.375168800354004
    4. '   ' → logprob: -11.750168800354004
    5. '2' → logprob: -11.875168800354004
    6. '  ' → logprob: -15.062668800354004
    7. '

' → logprob: -15.250168800354004
    8. 'WW' → logprob: -15.500168800354004
    9. '    ' → logprob: -15.812668800354004
    10. ')' → logprob: -16.187667846679688

Token 342: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.008468599058687687
    2. '):' → logprob: -4.8834686279296875
    3. '+' → logprob: -7.2584686279296875
    4. ')' → logprob: -9.633468627929688
    5. '   ' → logprob: -10.008468627929688
    6. ' ):
' → logprob: -11.008468627929688
    7. '):
' → logprob: -11.133468627929688
    8. ',' → logprob: -12.758468627929688
    9. ' +' → logprob: -13.133468627929688
    10. ':
' → logprob: -13.258468627929688

Token 343: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06276009231805801
    2. '       ' → logprob: -2.8127601146698
    3. 'DP' → logprob: -7.187759876251221
    4. ' DP' → logprob: -10.937760353088379
    5. '	   ' → logprob: -11.437760353088379
    6. '	' → logprob: -12.937760353088379
    7. '   ' → logprob: -13.187760353088379
    8. '_DP' → logprob: -13.312760353088379
    9. '    ' → logprob: -15.062760353088379
    10. '     ' → logprob: -15.187760353088379

Token 344: ' line' (ID: 2543)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4609738886356354
    2. 'DP' → logprob: -1.085973858833313
    3. ' DP' → logprob: -3.4609739780426025
    4. '       ' → logprob: -8.835973739624023
    5. ' ' → logprob: -9.085973739624023
    6. '_DP' → logprob: -10.460973739624023
    7. '  ' → logprob: -10.585973739624023
    8. 'row' → logprob: -11.335973739624023
    9. 'dp' → logprob: -11.585973739624023
    10. '   ' → logprob: -11.710973739624023

Token 345: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25844091176986694
    2. ' =' → logprob: -1.5084409713745117
    3. '.append' → logprob: -5.883440971374512
    4. '=[]' → logprob: -6.508440971374512
    5. '=[]
' → logprob: -7.133440971374512
    6. ')' → logprob: -7.758440971374512
    7. '=[' → logprob: -8.633440971374512
    8. 'dp' → logprob: -8.758440971374512
    9. '.' → logprob: -8.758440971374512
    10. 's' → logprob: -9.383440971374512

Token 346: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0037121959030628204
    2. '[-' → logprob: -5.753712177276611
    3. '[i' → logprob: -7.878712177276611
    4. ' [' → logprob: -8.87871265411377
    5. '[]
' → logprob: -11.87871265411377
    6. '0' → logprob: -12.75371265411377
    7. '   ' → logprob: -12.87871265411377
    8. '[]' → logprob: -13.25371265411377
    9. '[n' → logprob: -15.12871265411377
    10. '[len' → logprob: -15.37871265411377

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007820967584848404
    2. 'for' → logprob: -5.757821083068848
    3. ' for' → logprob: -5.882821083068848
    4. '   ' → logprob: -6.507821083068848
    5. '	' → logprob: -8.757821083068848
    6. '	   ' → logprob: -9.007821083068848
    7. '	for' → logprob: -9.632821083068848
    8. ' ' → logprob: -12.632821083068848
    9. '    ' → logprob: -13.632821083068848
    10. '     ' → logprob: -14.132821083068848

Token 348: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.007000704761594534
    2. ' for' → logprob: -5.507000923156738
    3. '       ' → logprob: -5.882000923156738
    4. '   ' → logprob: -9.007000923156738
    5. ' ' → logprob: -13.132000923156738
    6. '	for' → logprob: -13.132000923156738
    7. '0' → logprob: -13.257000923156738
    8. '    ' → logprob: -16.006999969482422
    9. '           ' → logprob: -16.006999969482422
    10. '     ' → logprob: -16.756999969482422

Token 349: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.018540626391768456
    2. ' j' → logprob: -4.018540859222412
    3. 'range' → logprob: -8.143540382385254
    4. ' in' → logprob: -10.143540382385254
    5. ' range' → logprob: -10.893540382385254
    6. '   ' → logprob: -11.518540382385254
    7. '_j' → logprob: -11.643540382385254
    8. 'w' → logprob: -12.018540382385254
    9. '	j' → logprob: -12.393540382385254
    10. ' ' → logprob: -12.893540382385254

Token 350: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02055882103741169
    2. 'in' → logprob: -3.8955588340759277
    3. ' ' → logprob: -11.64555835723877
    4. '<|end|>' → logprob: -13.02055835723877
    5. 'n' → logprob: -13.27055835723877
    6. '	in' → logprob: -13.89555835723877
    7. 'In' → logprob: -14.64555835723877
    8. '0' → logprob: -14.89555835723877
    9. 'j' → logprob: -15.02055835723877
    10. '   ' → logprob: -15.77055835723877

Token 351: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0630953386425972
    2. ' range' → logprob: -2.8130953311920166
    3. '(range' → logprob: -6.813095569610596
    4. '(' → logprob: -10.813095092773438
    5. '(W' → logprob: -11.813095092773438
    6. '   ' → logprob: -15.938095092773438
    7. '	range' → logprob: -16.938095092773438
    8. '
' → logprob: -17.063095092773438
    9. 'Range' → logprob: -17.313095092773438
    10. '.range' → logprob: -18.313095092773438

Token 352: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3663626305060461e-05
    2. '(W' → logprob: -11.37501335144043
    3. 'WW' → logprob: -14.25001335144043
    4. '(i' → logprob: -14.62501335144043
    5. '

' → logprob: -15.62501335144043
    6. '   ' → logprob: -16.12501335144043
    7. '(H' → logprob: -16.12501335144043
    8. ' (' → logprob: -16.25001335144043
    9. '	' → logprob: -16.37501335144043
    10. '
' → logprob: -16.37501335144043

Token 353: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -0.00013011827832087874
    2. ' WW' → logprob: -9.875129699707031
    3. '(' → logprob: -10.000129699707031
    4. 'i' → logprob: -11.250129699707031
    5. 'HH' → logprob: -11.625129699707031
    6. '   ' → logprob: -13.000129699707031
    7. '(i' → logprob: -13.125129699707031
    8. 'W' → logprob: -13.375129699707031
    9. '(W' → logprob: -13.500129699707031
    10. ' ' → logprob: -13.500129699707031

Token 354: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0003023345780093223
    2. ' +' → logprob: -8.1253023147583
    3. '+
' → logprob: -13.0003023147583
    4. '   ' → logprob: -14.2503023147583
    5. '):
' → logprob: -14.2503023147583
    6. '+j' → logprob: -14.3753023147583
    7. ')+' → logprob: -14.5003023147583
    8. ')' → logprob: -15.0003023147583
    9. '
' → logprob: -15.2503023147583
    10. '1' → logprob: -15.5003023147583

Token 355: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -13.125003814697266
    3. '
' → logprob: -14.125003814697266
    4. '   ' → logprob: -15.500003814697266
    5. '2' → logprob: -15.687503814697266
    6. '+' → logprob: -15.750003814697266
    7. '

' → logprob: -16.187503814697266
    8. '(' → logprob: -16.750003814697266
    9. ')' → logprob: -16.750003814697266
    10. '```' → logprob: -17.062503814697266

Token 356: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0700576975941658
    2. '):' → logprob: -2.6950576305389404
    3. ')' → logprob: -10.44505786895752
    4. '):
' → logprob: -11.19505786895752
    5. '       ' → logprob: -11.32005786895752
    6. '():
' → logprob: -11.44505786895752
    7. ':' → logprob: -11.44505786895752
    8. ':
' → logprob: -11.69505786895752
    9. '           ' → logprob: -11.82005786895752
    10. '0' → logprob: -11.94505786895752

Token 357: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015240935317706317
    2. ' line' → logprob: -9.125152587890625
    3. '		' → logprob: -10.875152587890625
    4. '	       ' → logprob: -11.125152587890625
    5. '               ' → logprob: -13.750152587890625
    6. 'line' → logprob: -13.750152587890625
    7. '       ' → logprob: -13.750152587890625
    8. '[line' → logprob: -14.000152587890625
    9. '=line' → logprob: -14.250152587890625
    10. ',' → logprob: -14.500152587890625

Token 358: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.09926670789718628
    2. 'line' (adapté à ' line') → logprob: -2.849266767501831
    3. ' if' → logprob: -3.849266767501831
    4. '               ' → logprob: -4.349266529083252
    5. '           ' → logprob: -6.599266529083252
    6. 'if' → logprob: -7.099266529083252
    7. '	line' → logprob: -9.47426700592041
    8. '            ' → logprob: -10.47426700592041
    9. '   ' → logprob: -10.59926700592041
    10. '[line' → logprob: -10.84926700592041

Token 359: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002439467643853277
    2. '.' → logprob: -8.375244140625
    3. ' .' → logprob: -11.750244140625
    4. '=' → logprob: -12.750244140625
    5. '.app' → logprob: -13.875244140625
    6. ' =' → logprob: -14.125244140625
    7. '.ap' → logprob: -15.750244140625
    8. '   ' → logprob: -15.875244140625
    9. 'append' → logprob: -15.875244140625
    10. '.extend' → logprob: -16.625244140625

Token 360: '([' (ID: 5194)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002734620589762926
    2. '(' → logprob: -6.127734661102295
    3. '-' → logprob: -8.252734184265137
    4. ' ' → logprob: -8.877734184265137
    5. '(-' → logprob: -9.252734184265137
    6. '
' → logprob: -11.002734184265137
    7. '   ' → logprob: -11.377734184265137
    8. '1' → logprob: -12.065234184265137
    9. '(
' → logprob: -13.127734184265137
    10. '[' → logprob: -13.252734184265137

Token 361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03960445523262024
    2. '-' → logprob: -3.414604425430298
    3. '[' → logprob: -5.289604663848877
    4. '[[' → logprob: -8.039604187011719
    5. '[-' → logprob: -8.164604187011719
    6. '1' → logprob: -9.039604187011719
    7. '(' → logprob: -9.789604187011719
    8. 'False' → logprob: -10.414604187011719
    9. '[]' → logprob: -11.289604187011719
    10. '(-' → logprob: -11.289604187011719

Token 362: ',' (ID: 11)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1569327861070633
    2. ',' → logprob: -2.656932830810547
    3. ']*' → logprob: -3.031932830810547
    4. ']*(' → logprob: -3.656932830810547
    5. ' for' → logprob: -7.781932830810547
    6. '])' → logprob: -8.531932830810547
    7. 'for' → logprob: -8.656932830810547
    8. ' ]' → logprob: -9.906932830810547
    9. ' ,' → logprob: -10.031932830810547
    10. ']+' → logprob: -10.406932830810547

Token 363: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00196836213581264
    2. ' ' → logprob: -6.3769683837890625
    3. '1' → logprob: -9.376968383789062
    4. ']' → logprob: -10.001968383789062
    5. '
' → logprob: -10.126968383789062
    6. '])' → logprob: -10.939468383789062
    7. 'False' → logprob: -11.439468383789062
    8. '(' → logprob: -11.876968383789062
    9. '[' → logprob: -11.876968383789062
    10. 'i' → logprob: -11.939468383789062

Token 364: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0010094691533595324
    2. '1' → logprob: -7.376009464263916
    3. ' ' → logprob: -8.251009941101074
    4. '
' → logprob: -9.751009941101074
    5. ']' → logprob: -10.813509941101074
    6. '2' → logprob: -12.126009941101074
    7. '

' → logprob: -12.313509941101074
    8. 'mod' → logprob: -12.938509941101074
    9. '(' → logprob: -13.001009941101074
    10. '   ' → logprob: -13.126009941101074

Token 365: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.008468125946819782
    2. '])
' → logprob: -5.383468151092529
    3. ']' → logprob: -6.133468151092529
    4. ',' → logprob: -6.508468151092529
    5. ')' → logprob: -9.508467674255371
    6. ' ])' → logprob: -9.758467674255371
    7. '])

' → logprob: -11.508467674255371
    8. ']
' → logprob: -11.633467674255371
    9. '])
' → logprob: -12.008467674255371
    10. ']))' → logprob: -12.633467674255371

Token 366: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003328614868223667
    2. '<|end|>' → logprob: -6.378328800201416
    3. '           ' → logprob: -7.253328800201416
    4. '   ' → logprob: -7.378328800201416
    5. ',' → logprob: -9.628328323364258
    6. ')' → logprob: -9.753328323364258
    7. '<|end|>' → logprob: -10.003328323364258
    8. ' ' → logprob: -10.253328323364258
    9. '0' → logprob: -10.753328323364258
    10. '     ' → logprob: -11.378328323364258

Token 367: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.11968596279621124
    2. '   ' → logprob: -2.2446858882904053
    3. ' DP' → logprob: -5.244686126708984
    4. '       ' → logprob: -7.619686126708984
    5. ')' → logprob: -8.119686126708984
    6. ' ' → logprob: -8.244686126708984
    7. '_DP' → logprob: -8.869686126708984
    8. '<|end|>' → logprob: -9.244686126708984
    9. '  ' → logprob: -9.994686126708984
    10. 'for' → logprob: -10.119686126708984

Token 368: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001242772996192798
    2. '.' → logprob: -9.000123977661133
    3. 'append' → logprob: -14.250123977661133
    4. '.app' → logprob: -15.875123977661133
    5. ' .' → logprob: -16.500123977661133
    6. '.ap' → logprob: -18.250123977661133
    7. '.extend' → logprob: -19.125123977661133
    8. '.
' → logprob: -19.375123977661133
    9. '.Append' → logprob: -19.375123977661133
    10. 'Append' → logprob: -19.500123977661133

Token 369: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.00033677343162707984
    2. 'line' → logprob: -8.000336647033691
    3. '(' → logprob: -14.000336647033691
    4. '[line' → logprob: -15.750336647033691
    5. '(
' → logprob: -16.125337600708008
    6. ' line' → logprob: -16.500337600708008
    7. '=line' → logprob: -16.625337600708008
    8. '#line' → logprob: -18.125337600708008
    9. ',line' → logprob: -18.250337600708008
    10. '(lines' → logprob: -19.500337600708008

Token 370: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008442913531325758
    2. ')
' → logprob: -7.125844478607178
    3. '   ' → logprob: -10.25084400177002
    4. '
' → logprob: -13.25084400177002
    5. ')

' → logprob: -14.00084400177002
    6. ' )' → logprob: -14.25084400177002
    7. ' ' → logprob: -15.50084400177002
    8. '[' → logprob: -16.250844955444336
    9. '))' → logprob: -16.375844955444336
    10. ')return' → logprob: -16.375844955444336

Token 371: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0025078821927309036
    2. '    
' → logprob: -6.62750768661499
    3. 'DP' → logprob: -8.127508163452148
    4. ' for' → logprob: -8.627508163452148
    5. '
' → logprob: -8.627508163452148
    6. '<|end|>' → logprob: -9.252508163452148
    7. ' DP' → logprob: -9.502508163452148
    8. '\t' → logprob: -9.627508163452148
    9. '        
' → logprob: -10.127508163452148
    10. ' ' → logprob: -10.377508163452148

Token 372: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.001777161261998117
    2. '   ' → logprob: -7.001777172088623
    3. 'for' → logprob: -7.501777172088623
    4. ' DP' → logprob: -8.626776695251465
    5. ' for' → logprob: -9.501776695251465
    6. 'i' → logprob: -11.126776695251465
    7. 'dp' → logprob: -11.251776695251465
    8. ' ' → logprob: -11.501776695251465
    9. '
' → logprob: -11.501776695251465
    10. ' 
' → logprob: -12.751776695251465

Token 373: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.2113979209971149e-05
    2. '
' → logprob: -12.500012397766113
    3. '=' → logprob: -13.000012397766113
    4. '[-' → logprob: -13.375012397766113
    5. '][' → logprob: -13.500012397766113
    6. '```' → logprob: -14.250012397766113
    7. ' [' → logprob: -14.750012397766113
    8. '    
' → logprob: -15.250012397766113
    9. '

' → logprob: -15.500012397766113
    10. ')[' → logprob: -15.875012397766113

Token 374: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.194110756041482e-05
    2. '[' → logprob: -10.625061988830566
    3. '1' → logprob: -10.875061988830566
    4. 'H' → logprob: -12.125061988830566
    5. '
' → logprob: -12.375061988830566
    6. ' ' → logprob: -12.375061988830566
    7. '   ' → logprob: -13.375061988830566
    8. '00' → logprob: -14.250061988830566
    9. '][' → logprob: -14.812561988830566
    10. 'HH' → logprob: -14.812561988830566

Token 375: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00032163821742869914
    2. '[' → logprob: -8.375321388244629
    3. ']' → logprob: -9.625321388244629
    4. ' ][' → logprob: -11.000321388244629
    5. '0' → logprob: -12.750321388244629
    6. '
' → logprob: -13.125321388244629
    7. ']
' → logprob: -14.375321388244629
    8. '   ' → logprob: -14.375321388244629
    9. '][-' → logprob: -14.500321388244629
    10. '"][' → logprob: -15.250321388244629

Token 376: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.77627644513268e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.000008583068848
    4. '
' → logprob: -16.187509536743164
    5. '۰' → logprob: -16.875009536743164
    6. '  ' → logprob: -17.000009536743164
    7. '1' → logprob: -17.062509536743164
    8. '```' → logprob: -17.125009536743164
    9. '[' → logprob: -17.437509536743164
    10. '    ' → logprob: -18.000009536743164

Token 377: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16176602244377136
    2. ']' → logprob: -1.9117660522460938
    3. ']=' → logprob: -6.536766052246094
    4. '[' → logprob: -9.911766052246094
    5. ' ][' → logprob: -11.161766052246094
    6. ']
' → logprob: -12.536766052246094
    7. '
' → logprob: -12.786766052246094
    8. '])' → logprob: -13.036766052246094
    9. ' ]' → logprob: -13.036766052246094
    10. '   ' → logprob: -13.036766052246094

Token 378: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.07890234887599945
    2. '1' → logprob: -2.578902244567871
    3. '
' → logprob: -11.828902244567871
    4. ' ' → logprob: -12.453902244567871
    5. ']' → logprob: -14.641402244567871
    6. '   ' → logprob: -15.828902244567871
    7. '01' → logprob: -16.203903198242188
    8. '[' → logprob: -16.266403198242188
    9. '(' → logprob: -16.453903198242188
    10. 'True' → logprob: -17.016403198242188

Token 379: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00048262736527249217
    2. ']=' → logprob: -8.125482559204102
    3. ' ]' → logprob: -8.625482559204102
    4. '][' → logprob: -13.000482559204102
    5. ']
' → logprob: -13.625482559204102
    6. ']+=' → logprob: -13.750482559204102
    7. '[' → logprob: -14.500482559204102
    8. ',' → logprob: -14.500482559204102
    9. '],' → logprob: -14.875482559204102
    10. '=' → logprob: -14.875482559204102

Token 380: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2017270028591156
    2. ' =' → logprob: -1.701727032661438
    3. ']' → logprob: -8.451726913452148
    4. ']=' → logprob: -9.826726913452148
    5. ',' → logprob: -10.201726913452148
    6. '[' → logprob: -12.076726913452148
    7. ' ' → logprob: -13.451726913452148
    8. ')' → logprob: -15.201726913452148
    9. '+=' → logprob: -15.451726913452148
    10. '1' → logprob: -15.451726913452148

Token 381: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015633940347470343
    2. '0' → logprob: -9.12515640258789
    3. ' ' → logprob: -10.12515640258789
    4. '
' → logprob: -12.75015640258789
    5. '   ' → logprob: -13.50015640258789
    6. '(' → logprob: -13.87515640258789
    7. 'mod' → logprob: -14.56265640258789
    8. '

' → logprob: -15.00015640258789
    9. '  ' → logprob: -15.68765640258789
    10. '[' → logprob: -15.75015640258789

Token 382: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030424181022681296
    2. '0' → logprob: -8.125304222106934
    3. ' ' → logprob: -12.875304222106934
    4. '
' → logprob: -13.000304222106934
    5. '(' → logprob: -14.000304222106934
    6. 'mod' → logprob: -14.000304222106934
    7. '   ' → logprob: -15.312804222106934
    8. '2' → logprob: -15.500304222106934
    9. '-' → logprob: -15.625304222106934
    10. '

' → logprob: -15.625304222106934

Token 383: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 384: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 385: ' DP' (ID: 51992)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3137477934360504
    2. ' for' → logprob: -1.313747763633728
    3. '   ' → logprob: -7.813747882843018
    4. ')' → logprob: -10.56374740600586
    5. '	for' → logprob: -10.56374740600586
    6. ' ' → logprob: -10.81374740600586
    7. '
' → logprob: -12.43874740600586
    8. ' 
' → logprob: -13.18874740600586
    9. '```' → logprob: -13.68874740600586
    10. '    
' → logprob: -14.43874740600586

Token 386: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0029868518467992544
    2. 'for' → logprob: -7.127986907958984
    3. '][' → logprob: -7.127986907958984
    4. '0' → logprob: -7.627986907958984
    5. 'def' → logprob: -8.252986907958984
    6. '
' → logprob: -8.877986907958984
    7. ':' → logprob: -9.252986907958984
    8. ' for' → logprob: -10.002986907958984
    9. ' =' → logprob: -10.127986907958984
    10. '=' → logprob: -10.252986907958984

Token 387: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.145118848304264e-05
    2. '1' → logprob: -10.125051498413086
    3. 'H' → logprob: -12.937551498413086
    4. '-' → logprob: -13.000051498413086
    5. '
' → logprob: -13.000051498413086
    6. ' ' → logprob: -13.000051498413086
    7. '   ' → logprob: -14.562551498413086
    8. '```' → logprob: -15.000051498413086
    9. '

' → logprob: -15.812551498413086
    10. '[' → logprob: -15.875051498413086

Token 388: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00015014449309092015
    2. '[' → logprob: -9.250149726867676
    3. ' ][' → logprob: -10.125149726867676
    4. ']' → logprob: -11.500149726867676
    5. '   ' → logprob: -13.500149726867676
    6. '0' → logprob: -13.500149726867676
    7. ']
' → logprob: -15.500149726867676
    8. '][-' → logprob: -15.875149726867676
    9. '1' → logprob: -16.000150680541992
    10. ' ' → logprob: -16.125150680541992

Token 389: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.1782583391759545e-05
    2. '1' → logprob: -11.125031471252441
    3. ' ' → logprob: -11.250031471252441
    4. '   ' → logprob: -13.500031471252441
    5. '
' → logprob: -13.687531471252441
    6. '```' → logprob: -15.187531471252441
    7. '  ' → logprob: -15.375031471252441
    8. '۰' → logprob: -16.187532424926758
    9. '

' → logprob: -16.812532424926758
    10. '-' → logprob: -16.875032424926758

Token 390: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00169065420050174
    2. '[' → logprob: -6.501690864562988
    3. ']' → logprob: -8.876690864562988
    4. ' ][' → logprob: -10.751690864562988
    5. '1' → logprob: -11.376690864562988
    6. '
' → logprob: -12.001690864562988
    7. ')[' → logprob: -12.376690864562988
    8. '=' → logprob: -14.126690864562988
    9. '

' → logprob: -14.376690864562988
    10. ']=' → logprob: -14.626690864562988

Token 391: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8550976164988242e-05
    2. '0' → logprob: -11.125018119812012
    3. '
' → logprob: -13.125018119812012
    4. ' ' → logprob: -14.312518119812012
    5. '-' → logprob: -15.500018119812012
    6. '```' → logprob: -15.562518119812012
    7. '   ' → logprob: -15.812518119812012
    8. '[' → logprob: -16.187519073486328
    9. ']' → logprob: -16.500019073486328
    10. '

' → logprob: -16.937519073486328

Token 392: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0022556488402187824
    2. '=' → logprob: -6.752255439758301
    3. ']=' → logprob: -7.377255439758301
    4. ' ]' → logprob: -8.0022554397583
    5. ' =' → logprob: -9.0022554397583
    6. ')' → logprob: -14.3772554397583
    7. ']+=' → logprob: -15.2522554397583
    8. ' ' → logprob: -15.5022554397583
    9. ',' → logprob: -16.002256393432617
    10. '0' → logprob: -16.252256393432617

Token 393: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03804194927215576
    2. ' =' → logprob: -3.2880420684814453
    3. '+=' → logprob: -15.413042068481445
    4. ',' → logprob: -16.538042068481445
    5. ' +=' → logprob: -16.663042068481445
    6. ' ' → logprob: -16.788042068481445
    7. ')' → logprob: -18.038042068481445
    8. '=
' → logprob: -18.663042068481445
    9. '   ' → logprob: -19.163042068481445
    10. '    ' → logprob: -19.163042068481445

Token 394: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.030176104977726936
    2. '1' → logprob: -3.5301761627197266
    3. ' ' → logprob: -7.780176162719727
    4. '   ' → logprob: -13.092676162719727
    5. '
' → logprob: -13.780176162719727
    6. '  ' → logprob: -14.280176162719727
    7. '```' → logprob: -14.967676162719727
    8. '-' → logprob: -15.030176162719727
    9. 'mod' → logprob: -15.217676162719727
    10. '    ' → logprob: -15.592676162719727

Token 395: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.018196653574705124
    2. '1' → logprob: -4.0181965827941895
    3. ' ' → logprob: -10.143197059631348
    4. '-' → logprob: -13.393197059631348
    5. '
' → logprob: -13.705697059631348
    6. 'mod' → logprob: -14.455697059631348
    7. '   ' → logprob: -14.580697059631348
    8. '  ' → logprob: -14.955697059631348
    9. '2' → logprob: -15.393197059631348
    10. 'int' → logprob: -15.393197059631348

Token 396: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 397: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 398: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08627480268478394
    2. ' for' → logprob: -2.5862748622894287
    3. ' 
' → logprob: -5.96127462387085
    4. ' ' → logprob: -6.08627462387085
    5. '   ' → logprob: -6.58627462387085
    6. '
' → logprob: -8.211275100708008
    7. 'i' → logprob: -8.461275100708008
    8. '	for' → logprob: -8.961275100708008
    9. '    
' → logprob: -9.211275100708008
    10. '\n' → logprob: -9.836275100708008

Token 399: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.6077218651771545
    2. 'i' → logprob: -0.9827218651771545
    3. ' h' → logprob: -3.3577218055725098
    4. ' i' → logprob: -3.4827218055725098
    5. 'x' → logprob: -5.10772180557251
    6. 'hh' → logprob: -5.98272180557251
    7. 'y' → logprob: -6.35772180557251
    8. 'r' → logprob: -7.10772180557251
    9. 'hi' → logprob: -7.23272180557251
    10. 'ii' → logprob: -7.48272180557251

Token 400: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00696223508566618
    2. 'in' → logprob: -5.006962299346924
    3. ' ' → logprob: -9.506961822509766
    4. '1' → logprob: -9.756961822509766
    5. ',' → logprob: -10.006961822509766
    6. '   ' → logprob: -10.881961822509766
    7. '+' → logprob: -11.381961822509766
    8. ' ,' → logprob: -11.506961822509766
    9. '0' → logprob: -12.256961822509766
    10. '_' → logprob: -12.506961822509766

Token 401: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03812112659215927
    2. ' range' → logprob: -3.288121223449707
    3. '1' → logprob: -9.913121223449707
    4. '0' → logprob: -11.413121223449707
    5. ' ' → logprob: -11.538121223449707
    6. '   ' → logprob: -12.413121223449707
    7. '
' → logprob: -13.663121223449707
    8. 'r' → logprob: -14.288121223449707
    9. 'rang' → logprob: -14.288121223449707
    10. 'in' → logprob: -14.288121223449707

Token 402: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.5789254307746887
    2. '(' → logprob: -0.8289254307746887
    3. '1' → logprob: -5.828925609588623
    4. 'H' → logprob: -10.578925132751465
    5. '0' → logprob: -11.703925132751465
    6. ' ' → logprob: -13.578925132751465
    7. 'HH' → logprob: -13.828925132751465
    8. '(M' → logprob: -14.203925132751465
    9. ' (' → logprob: -14.328925132751465
    10. '2' → logprob: -14.578925132751465

Token 403: 'H' (ID: 39)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.46321287751197815
    2. 'H' → logprob: -2.2132129669189453
    3. '1' → logprob: -2.3382129669189453
    4. '(H' → logprob: -2.8382129669189453
    5. '(' → logprob: -2.9632129669189453
    6. '0' → logprob: -3.3382129669189453
    7. '   ' → logprob: -5.088212966918945
    8. ' +' → logprob: -5.088212966918945
    9. ' ' → logprob: -5.963212966918945
    10. ',' → logprob: -6.213212966918945

Token 404: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03972818702459335
    2. ' +' → logprob: -3.9147281646728516
    3. '):
' → logprob: -4.414728164672852
    4. '):' → logprob: -5.039728164672852
    5. ',' → logprob: -8.414728164672852
    6. '   ' → logprob: -9.164728164672852
    7. '1' → logprob: -10.414728164672852
    8. '+
' → logprob: -10.914728164672852
    9. '
' → logprob: -11.039728164672852
    10. ' ):
' → logprob: -12.039728164672852

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5861724831629544e-05
    2. ' ' → logprob: -10.500056266784668
    3. '+' → logprob: -10.875056266784668
    4. '
' → logprob: -12.500056266784668
    5. '   ' → logprob: -12.750056266784668
    6. '2' → logprob: -14.750056266784668
    7. '0' → logprob: -14.750056266784668
    8. ')' → logprob: -14.750056266784668
    9. '```' → logprob: -14.875056266784668
    10. '

' → logprob: -15.250056266784668

Token 406: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4746018648147583
    2. '):' → logprob: -0.9746018648147583
    3. ':' → logprob: -8.224601745605469
    4. '   ' → logprob: -8.974601745605469
    5. ',' → logprob: -9.349601745605469
    6. '+' → logprob: -11.474601745605469
    7. ')' → logprob: -11.724601745605469
    8. '):
' → logprob: -11.974601745605469
    9. ':
' → logprob: -11.974601745605469
    10. ' ):
' → logprob: -12.224601745605469

Token 407: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21536308526992798
    2. '   ' → logprob: -1.8403630256652832
    3. '       ' → logprob: -3.965363025665283
    4. 'for' → logprob: -4.215363025665283
    5. '	for' → logprob: -6.840363025665283
    6. ' ' → logprob: -8.840363502502441
    7. '    ' → logprob: -10.840363502502441
    8. '	   ' → logprob: -11.840363502502441
    9. '   ' → logprob: -11.965363502502441
    10. '	' → logprob: -12.340363502502441

Token 408: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.029929598793387413
    2. ' for' → logprob: -3.5299296379089355
    3. '   ' → logprob: -8.654929161071777
    4. 'w' → logprob: -12.904929161071777
    5. ' ' → logprob: -13.404929161071777
    6. '       ' → logprob: -14.904929161071777
    7. 'W' → logprob: -15.279929161071777
    8. '	for' → logprob: -15.654929161071777
    9. '  ' → logprob: -17.029930114746094
    10. '    ' → logprob: -17.154930114746094

Token 409: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.2693977653980255
    2. 'W' → logprob: -1.5193977355957031
    3. ' w' → logprob: -4.894397735595703
    4. ' W' → logprob: -5.394397735595703
    5. '   ' → logprob: -5.394397735595703
    6. '0' → logprob: -8.019397735595703
    7. ' ' → logprob: -9.394397735595703
    8. '1' → logprob: -9.644397735595703
    9. '       ' → logprob: -9.769397735595703
    10. '(W' → logprob: -10.019397735595703

Token 410: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009821374900639057
    2. 'in' → logprob: -4.63482141494751
    3. '+' → logprob: -10.259820938110352
    4. ' ' → logprob: -11.759820938110352
    5. '	in' → logprob: -11.759820938110352
    6. '0' → logprob: -13.259820938110352
    7. '   ' → logprob: -13.259820938110352
    8. '1' → logprob: -13.384820938110352
    9. ')' → logprob: -13.509820938110352
    10. ',' → logprob: -13.509820938110352

Token 411: ' range' (ID: 3352)
  Prédit: 'WW'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'WW' → logprob: -0.9197225570678711
    2. '(' → logprob: -1.544722557067871
    3. 'HH' → logprob: -1.544722557067871
    4. 'range' → logprob: -2.794722557067871
    5. '1' → logprob: -2.919722557067871
    6. '(W' → logprob: -3.544722557067871
    7. '(H' → logprob: -4.294722557067871
    8. ' WW' → logprob: -5.294722557067871
    9. '   ' → logprob: -5.669722557067871
    10. ' HH' → logprob: -6.419722557067871

Token 412: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000374546303646639
    2. 'WW' → logprob: -8.375374794006348
    3. '   ' → logprob: -9.625374794006348
    4. '1' → logprob: -9.875374794006348
    5. ' (' → logprob: -11.750374794006348
    6. ' ' → logprob: -12.125374794006348
    7. '(W' → logprob: -13.000374794006348
    8. 'W' → logprob: -13.125374794006348
    9. '0' → logprob: -13.375374794006348
    10. '  ' → logprob: -13.500374794006348

Token 413: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -0.00012296605564188212
    2. ' WW' → logprob: -9.500123023986816
    3. '   ' → logprob: -10.625123023986816
    4. 'HH' → logprob: -11.625123023986816
    5. 'W' → logprob: -11.875123023986816
    6. '1' → logprob: -12.875123023986816
    7. '(' → logprob: -13.375123023986816
    8. 'WH' → logprob: -13.625123023986816
    9. ' ' → logprob: -13.750123023986816
    10. '(W' → logprob: -15.125123023986816

Token 414: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00015312091272789985
    2. ' +' → logprob: -9.000153541564941
    3. '1' → logprob: -11.000153541564941
    4. '):
' → logprob: -12.750153541564941
    5. '   ' → logprob: -12.875153541564941
    6. '+
' → logprob: -12.875153541564941
    7. '0' → logprob: -13.750153541564941
    8. '
' → logprob: -13.875153541564941
    9. ')+' → logprob: -14.250153541564941
    10. ',' → logprob: -14.375153541564941

Token 415: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8908587662735954e-05
    2. '+' → logprob: -11.250019073486328
    3. ' ' → logprob: -12.500019073486328
    4. '   ' → logprob: -13.875019073486328
    5. '0' → logprob: -14.625019073486328
    6. '(' → logprob: -15.500019073486328
    7. 'W' → logprob: -15.875019073486328
    8. '```' → logprob: -16.250019073486328
    9. '
' → logprob: -16.375019073486328
    10. '(W' → logprob: -16.375019073486328

Token 416: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.08051837980747223
    2. '):' → logprob: -2.5805184841156006
    3. ':' → logprob: -6.8305182456970215
    4. '       ' → logprob: -8.70551872253418
    5. ':
' → logprob: -8.70551872253418
    6. '   ' → logprob: -9.20551872253418
    7. ',' → logprob: -9.45551872253418
    8. '+' → logprob: -11.20551872253418
    9. '):
' → logprob: -11.83051872253418
    10. ' ):
' → logprob: -12.45551872253418

Token 417: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0025792247615754604
    2. ' if' → logprob: -6.877579212188721
    3. '               ' → logprob: -7.627579212188721
    4. '       ' → logprob: -7.877579212188721
    5. '	       ' → logprob: -8.002579689025879
    6. 'if' → logprob: -8.877579689025879
    7. '   ' → logprob: -9.252579689025879
    8. '            
' → logprob: -10.502579689025879
    9. '[' → logprob: -11.752579689025879
    10. ' ' → logprob: -11.752579689025879

Token 418: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8136043548583984
    2. ' if' → logprob: -0.8136043548583984
    3. '           ' → logprob: -2.8136043548583984
    4. '               ' → logprob: -3.0636043548583984
    5. 'for' → logprob: -5.938604354858398
    6. ' for' → logprob: -6.313604354858398
    7. '   ' → logprob: -6.313604354858398
    8. '
' → logprob: -8.813604354858398
    9. '       ' → logprob: -9.063604354858398
    10. ' ' → logprob: -9.438604354858398

Token 419: ' Vertical' (ID: 58623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0017603866290301085
    2. 'for' → logprob: -6.376760482788086
    3. ' if' → logprob: -10.501760482788086
    4. '   ' → logprob: -11.251760482788086
    5. 'continue' → logprob: -11.626760482788086
    6. 'val' → logprob: -13.376760482788086
    7. '           ' → logprob: -13.501760482788086
    8. 'dp' → logprob: -13.626760482788086
    9. 'count' → logprob: -14.126760482788086
    10. '       ' → logprob: -14.251760482788086

Token 420: '
' (ID: 198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.43562349677085876
    2. 'if' → logprob: -1.5606235265731812
    3. ' and' → logprob: -2.6856234073638916
    4. '
' → logprob: -3.8106234073638916
    5. ' for' → logprob: -4.560623645782471
    6. '           ' → logprob: -4.560623645782471
    7. ':
' → logprob: -4.935623645782471
    8. '   ' → logprob: -5.060623645782471
    9. 'for' → logprob: -5.060623645782471
    10. ' ' → logprob: -6.185623645782471

Token 421: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.38894984126091003
    2. ' if' → logprob: -1.5139498710632324
    3. 'for' → logprob: -2.6389498710632324
    4. ' for' → logprob: -3.8889498710632324
    5. '   ' → logprob: -5.388949871063232
    6. '
' → logprob: -6.388949871063232
    7. '           ' → logprob: -6.513949871063232
    8. ' ' → logprob: -7.888949871063232
    9. '       ' → logprob: -7.888949871063232
    10. ' and' → logprob: -7.888949871063232

Token 422: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.008025458082556725
    2. '           ' → logprob: -5.508025646209717
    3. 'for' (adapté à ' for') → logprob: -6.008025646209717
    4. ' if' → logprob: -6.633025646209717
    5. '               ' → logprob: -9.383025169372559
    6. '   ' → logprob: -9.883025169372559
    7. '       ' → logprob: -11.258025169372559
    8. ' for' → logprob: -12.633025169372559
    9. '            
' → logprob: -12.883025169372559
    10. '                   ' → logprob: -13.008025169372559

Token 423: ' nex' (ID: 92763)
  Prédit: 'nh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'nh' → logprob: -1.2788525819778442
    2. 'hh' → logprob: -1.6538525819778442
    3. ' nh' → logprob: -2.4038524627685547
    4. 'k' → logprob: -2.5288524627685547
    5. 'h' → logprob: -3.1538524627685547
    6. 'l' → logprob: -3.2788524627685547
    7. 'dh' → logprob: -3.2788524627685547
    8. 'v' → logprob: -3.4038524627685547
    9. 'i' → logprob: -3.4038524627685547
    10. 'vh' → logprob: -3.6538524627685547

Token 424: 'th' (ID: 404)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00012892624363303185
    2. 'w' → logprob: -9.500128746032715
    3. 'th' → logprob: -10.375128746032715
    4. 'h' → logprob: -11.750128746032715
    5. ' in' → logprob: -11.750128746032715
    6. ',' → logprob: -13.375128746032715
    7. '_w' → logprob: -13.625128746032715
    8. ' t' → logprob: -14.250128746032715
    9. '_t' → logprob: -14.250128746032715
    10. '`t' → logprob: -14.250128746032715

Token 425: ' in' (ID: 306)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.05656258016824722
    2. ' in' → logprob: -3.306562662124634
    3. '_' → logprob: -4.431562423706055
    4. 'in' → logprob: -6.431562423706055
    5. ',' → logprob: -6.681562423706055
    6. '_t' → logprob: -6.681562423706055
    7. 'h' → logprob: -6.806562423706055
    8. '_h' → logprob: -7.931562423706055
    9. 'w' → logprob: -8.931562423706055
    10. ' ' → logprob: -9.056562423706055

Token 426: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003977362532168627
    2. ' range' → logprob: -5.753977298736572
    3. '   ' → logprob: -7.378977298736572
    4. 'in' → logprob: -9.87897777557373
    5. '[h' → logprob: -9.87897777557373
    6. '
' → logprob: -11.12897777557373
    7. ' ' → logprob: -11.50397777557373
    8. 'h' → logprob: -11.50397777557373
    9. '  ' → logprob: -11.62897777557373
    10. '(range' → logprob: -11.75397777557373

Token 427: '(h' (ID: 8120)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.006385891232639551
    2. '(h' → logprob: -5.256385803222656
    3. '   ' → logprob: -7.006385803222656
    4. '
' → logprob: -9.756385803222656
    5. '1' → logprob: -10.006385803222656
    6. ' h' → logprob: -10.131385803222656
    7. '0' → logprob: -10.756385803222656
    8. '	h' → logprob: -11.006385803222656
    9. '(' → logprob: -11.256385803222656
    10. ',h' → logprob: -12.006385803222656

Token 428: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07848804444074631
    2. ' +' → logprob: -2.9534881114959717
    3. ',' → logprob: -3.8284881114959717
    4. ' ,' → logprob: -7.078487873077393
    5. ',h' → logprob: -8.07848834991455
    6. '+h' → logprob: -8.57848834991455
    7. '+,' → logprob: -9.57848834991455
    8. '
' → logprob: -9.95348834991455
    9. '

' → logprob: -10.57848834991455
    10. '   ' → logprob: -10.70348834991455

Token 429: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002273774443892762
    2. '2' → logprob: -9.125226974487305
    3. ' ' → logprob: -9.625226974487305
    4. '
' → logprob: -10.500226974487305
    5. '

' → logprob: -12.125226974487305
    6. '   ' → logprob: -12.375226974487305
    7. ')' → logprob: -12.625226974487305
    8. '0' → logprob: -13.000226974487305
    9. ',' → logprob: -13.125226974487305
    10. '(' → logprob: -13.125226974487305

Token 430: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011249887757003307
    2. ' ,' → logprob: -5.261250019073486
    3. '):
' → logprob: -6.386250019073486
    4. '           ' → logprob: -7.011250019073486
    5. '):' → logprob: -7.136250019073486
    6. '   ' → logprob: -7.136250019073486
    7. '       ' → logprob: -7.386250019073486
    8. ',h' → logprob: -7.886250019073486
    9. '+' → logprob: -8.636249542236328
    10. '
' → logprob: -8.761249542236328

Token 431: ' HH' (ID: 46207)
  Prédit: 'HH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -0.0008920480031520128
    2. ' HH' → logprob: -7.125892162322998
    3. 'min' → logprob: -10.37589168548584
    4. 'H' → logprob: -11.00089168548584
    5. '   ' → logprob: -11.00089168548584
    6. ' min' → logprob: -11.75089168548584
    7. ' ' → logprob: -12.37589168548584
    8. '
' → logprob: -13.37589168548584
    9. '       ' → logprob: -13.37589168548584
    10. 'hh' → logprob: -13.50089168548584

Token 432: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0015606891829520464
    2. ' +' → logprob: -6.626560688018799
    3. '):
' → logprob: -8.626561164855957
    4. '):' → logprob: -9.876561164855957
    5. '+
' → logprob: -14.001561164855957
    6. '   ' → logprob: -14.126561164855957
    7. '1' → logprob: -14.876561164855957
    8. ')+' → logprob: -14.876561164855957
    9. '       ' → logprob: -15.126561164855957
    10. '
' → logprob: -15.251561164855957

Token 433: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.804671233519912e-05
    2. '2' → logprob: -9.50008773803711
    3. ' ' → logprob: -11.75008773803711
    4. '
' → logprob: -13.00008773803711
    5. '+' → logprob: -13.62508773803711
    6. '   ' → logprob: -13.75008773803711
    7. '```' → logprob: -15.56258773803711
    8. '

' → logprob: -16.18758773803711
    9. '``' → logprob: -16.18758773803711
    10. ')' → logprob: -16.50008773803711

Token 434: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47413453459739685
    2. '):' → logprob: -0.9741345643997192
    3. '):
' → logprob: -10.59913444519043
    4. ':' → logprob: -11.72413444519043
    5. ')' → logprob: -11.97413444519043
    6. '+' → logprob: -12.59913444519043
    7. '           ' → logprob: -12.97413444519043
    8. ' ):
' → logprob: -12.97413444519043
    9. '):

' → logprob: -13.09913444519043
    10. '               ' → logprob: -13.22413444519043

Token 435: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005160700995475054
    2. ':' → logprob: -5.755160808563232
    3. ':
' → logprob: -7.505160808563232
    4. ',' → logprob: -7.755160808563232
    5. '):' → logprob: -7.880160808563232
    6. '):
' → logprob: -8.380160331726074
    7. '           ' → logprob: -9.255160331726074
    8. '                   ' → logprob: -9.630160331726074
    9. ')' → logprob: -9.755160331726074
    10. '       ' → logprob: -10.630160331726074

Token 436: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.2020607739686966
    2. 'if' → logprob: -2.3270606994628906
    3. ' DP' → logprob: -3.5770606994628906
    4. 'dp' → logprob: -4.202060699462891
    5. ' if' → logprob: -4.577060699462891
    6. 'val' → logprob: -4.952060699462891
    7. 'for' → logprob: -5.202060699462891
    8. 'comb' → logprob: -6.077060699462891
    9. 'length' → logprob: -6.452060699462891
    10. '   ' → logprob: -6.577060699462891

Token 437: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.018218660727143288
    2. '[h' → logprob: -4.018218517303467
    3. '[' → logprob: -10.018218994140625
    4. '[w' → logprob: -11.643218994140625
    5. '[next' → logprob: -12.518218994140625
    6. ' [' → logprob: -12.768218994140625
    7. '   ' → logprob: -13.643218994140625
    8. '

' → logprob: -13.893218994140625
    9. '[j' → logprob: -14.018218994140625
    10. 'n' → logprob: -14.143218994140625

Token 438: 'ex' (ID: 490)
  Prédit: 'ext'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ext' → logprob: -0.6442012786865234
    2. 'w' → logprob: -1.3942012786865234
    3. 'ex' → logprob: -2.1442012786865234
    4. 'h' → logprob: -3.1442012786865234
    5. '[n' → logprob: -4.144201278686523
    6. '[' → logprob: -4.269201278686523
    7. '[next' → logprob: -4.644201278686523
    8. '[h' → logprob: -5.269201278686523
    9. 'n' → logprob: -5.644201278686523
    10. '[w' → logprob: -5.644201278686523

Token 439: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.09584548324346542
    2. 'h' → logprob: -2.5958454608917236
    3. 't' → logprob: -4.095845699310303
    4. 'т' → logprob: -8.845845222473145
    5. '```' → logprob: -11.970845222473145
    6. 'w' → logprob: -12.095845222473145
    7. '[h' → logprob: -12.220845222473145
    8. ' h' → logprob: -13.345845222473145
    9. ' th' → logprob: -13.595845222473145
    10. '[' → logprob: -13.720845222473145

Token 440: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001199635793454945
    2. '[w' → logprob: -6.876199722290039
    3. ']' → logprob: -9.751199722290039
    4. '[' → logprob: -10.376199722290039
    5. '[h' → logprob: -11.126199722290039
    6. ' ][' → logprob: -11.126199722290039
    7. '[j' → logprob: -11.751199722290039
    8. '
' → logprob: -11.876199722290039
    9. '   ' → logprob: -12.126199722290039
    10. '[n' → logprob: -12.251199722290039

Token 441: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.558399319241289e-05
    2. ' w' → logprob: -11.000025749206543
    3. '
' → logprob: -12.250025749206543
    4. '   ' → logprob: -13.125025749206543
    5. '[w' → logprob: -14.500025749206543
    6. 'W' → logprob: -14.625025749206543
    7. '	w' → logprob: -15.000025749206543
    8. '    
' → logprob: -15.875025749206543
    9. '<w' → logprob: -16.000024795532227
    10. 'ww' → logprob: -16.625024795532227

Token 442: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006259413785301149
    2. '[' → logprob: -7.750626087188721
    3. ']' → logprob: -9.000625610351562
    4. '
' → logprob: -10.625625610351562
    5. ' ][' → logprob: -11.000625610351562
    6. '   ' → logprob: -11.375625610351562
    7. '0' → logprob: -12.000625610351562
    8. '1' → logprob: -13.500625610351562
    9. 's' → logprob: -13.500625610351562
    10. ']
' → logprob: -14.125625610351562

Token 443: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020558703690767288
    2. '1' → logprob: -3.8955585956573486
    3. ' ' → logprob: -11.77055835723877
    4. '
' → logprob: -12.02055835723877
    5. '   ' → logprob: -13.39555835723877
    6. '(' → logprob: -14.77055835723877
    7. '```' → logprob: -15.08305835723877
    8. '    
' → logprob: -15.83305835723877
    9. '[' → logprob: -15.89555835723877
    10. '  
' → logprob: -16.333059310913086

Token 444: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0015284325927495956
    2. ']+=' → logprob: -6.501528263092041
    3. ']=(' → logprob: -11.1265287399292
    4. '(' → logprob: -12.7515287399292
    5. '
' → logprob: -12.7515287399292
    6. ' ]' → logprob: -13.1265287399292
    7. ']=' → logprob: -14.1265287399292
    8. '```' → logprob: -14.5015287399292
    9. ']+' → logprob: -14.8765287399292
    10. ']
' → logprob: -14.8765287399292

Token 445: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.22395843267440796
    2. '=' → logprob: -1.7239584922790527
    3. ']+=' → logprob: -3.9739584922790527
    4. ']' → logprob: -6.598958492279053
    5. ' +=' → logprob: -6.848958492279053
    6. ' =' → logprob: -7.848958492279053
    7. '=(' → logprob: -8.098958015441895
    8. '|' → logprob: -8.598958015441895
    9. '+=(' → logprob: -9.723958015441895
    10. '+' → logprob: -10.098958015441895

Token 446: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.006758709903806448
    2. ' DP' → logprob: -5.006758689880371
    3. '(D' → logprob: -11.006758689880371
    4. '(' → logprob: -11.506758689880371
    5. '   ' → logprob: -11.631758689880371
    6. '_DP' → logprob: -12.756758689880371
    7. ' (' → logprob: -13.131758689880371
    8. 'dp' → logprob: -14.631758689880371
    9. '
' → logprob: -14.756758689880371
    10. ' ' → logprob: -15.006758689880371

Token 447: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.061972957104444504
    2. 'h' → logprob: -2.8119728565216064
    3. '	h' → logprob: -13.436972618103027
    4. ' h' → logprob: -13.436972618103027
    5. '[' → logprob: -14.311972618103027
    6. '
' → logprob: -15.061972618103027
    7. '   ' → logprob: -15.311972618103027
    8. '<h' → logprob: -15.436972618103027
    9. '[n' → logprob: -15.686972618103027
    10. '```' → logprob: -16.061973571777344

Token 448: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001240348443388939
    2. '[w' → logprob: -6.751240253448486
    3. ' ][' → logprob: -10.376240730285645
    4. 'w' → logprob: -10.501240730285645
    5. '"][' → logprob: -13.001240730285645
    6. '[' → logprob: -13.126240730285645
    7. ']' → logprob: -13.501240730285645
    8. '   ' → logprob: -13.501240730285645
    9. '```' → logprob: -14.251240730285645
    10. ' [' → logprob: -14.626240730285645

Token 449: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.47626737493556e-05
    2. ' w' → logprob: -10.37503433227539
    3. '   ' → logprob: -13.62503433227539
    4. '[w' → logprob: -13.87503433227539
    5. '
' → logprob: -14.50003433227539
    6. ' ' → logprob: -15.25003433227539
    7. '	w' → logprob: -15.87503433227539
    8. '    ' → logprob: -16.37503433227539
    9. '       ' → logprob: -16.37503433227539
    10. '<w' → logprob: -16.50003433227539

Token 450: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.01837983913719654
    2. '[' → logprob: -4.0183796882629395
    3. ' ][' → logprob: -9.268380165100098
    4. '0' → logprob: -9.768380165100098
    5. '
' → logprob: -11.018380165100098
    6. ']' → logprob: -11.018380165100098
    7. '   ' → logprob: -11.518380165100098
    8. ' [' → logprob: -11.893380165100098
    9. ')[' → logprob: -12.268380165100098
    10. '1' → logprob: -12.518380165100098

Token 451: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05489491671323776
    2. '1' → logprob: -2.9298949241638184
    3. '
' → logprob: -12.55489444732666
    4. '   ' → logprob: -12.55489444732666
    5. ' ' → logprob: -12.67989444732666
    6. '```' → logprob: -14.49239444732666
    7. '[' → logprob: -15.30489444732666
    8. '  ' → logprob: -16.117395401000977
    9. '    
' → logprob: -16.117395401000977
    10. '۰' → logprob: -16.429895401000977

Token 452: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00045009577297605574
    2. ']
' → logprob: -8.125450134277344
    3. ' ]' → logprob: -9.375450134277344
    4. ']%' → logprob: -9.875450134277344
    5. ']*' → logprob: -11.125450134277344
    6. ']
' → logprob: -14.500450134277344
    7. ' *' → logprob: -15.125450134277344
    8. '*' → logprob: -15.375450134277344
    9. '];' → logprob: -15.375450134277344
    10. ']

' → logprob: -15.625450134277344

Token 453: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.561328649520874
    2. ' %' → logprob: -0.936328649520874
    3. '
' → logprob: -4.311328887939453
    4. '<|end|>' → logprob: -4.811328887939453
    5. ')' → logprob: -5.061328887939453
    6. '%D' → logprob: -5.561328887939453
    7. ')%' → logprob: -6.311328887939453
    8. ' %=' → logprob: -6.686328887939453
    9. '                   ' → logprob: -6.811328887939453
    10. '<|end|>' → logprob: -7.311328887939453

Token 454: ' FACT' (ID: 99053)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.021989116445183754
    2. 'rect' → logprob: -4.271989345550537
    3. '(' → logprob: -5.896989345550537
    4. 'pow' → logprob: -6.146989345550537
    5. ' Com' → logprob: -6.896989345550537
    6. 'COM' → logprob: -7.146989345550537
    7. 'fact' → logprob: -8.771988868713379
    8. 'com' → logprob: -8.896988868713379
    9. '(rect' → logprob: -9.021988868713379
    10. '((' → logprob: -9.146988868713379

Token 455: '_INV' (ID: 116669)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.014171387068927288
    2. '[' → logprob: -4.514171600341797
    3. '_INV' → logprob: -6.014171600341797
    4. '[(' → logprob: -7.764171600341797
    5. '[
' → logprob: -9.764171600341797
    6. 'Inv' → logprob: -10.514171600341797
    7. '[in' → logprob: -10.639171600341797
    8. '[((' → logprob: -11.014171600341797
    9. '[[' → logprob: -11.139171600341797
    10. '[next' → logprob: -11.514171600341797

Token 456: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0012290386948734522
    2. '[' → logprob: -6.7512288093566895
    3. '[(' → logprob: -10.126229286193848
    4. '[next' → logprob: -12.876229286193848
    5. 'n' → logprob: -13.001229286193848
    6. ' [' → logprob: -13.376229286193848
    7. '[max' → logprob: -13.501229286193848
    8. '[
' → logprob: -13.751229286193848
    9. '[[' → logprob: -14.126229286193848
    10. '   ' → logprob: -14.251229286193848

Token 457: 'ex' (ID: 490)
  Prédit: 'ex'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ex' → logprob: -0.0029576157685369253
    2. '[' → logprob: -6.502957820892334
    3. '[n' → logprob: -6.752957820892334
    4. 'e' → logprob: -9.252957344055176
    5. '(ex' → logprob: -9.877957344055176
    6. ']' → logprob: -10.752957344055176
    7. '```' → logprob: -10.752957344055176
    8. 'ext' → logprob: -11.502957344055176
    9. '[
' → logprob: -11.627957344055176
    10. '   ' → logprob: -11.752957344055176

Token 458: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.00019460011390037835
    2. '[' → logprob: -9.625194549560547
    3. 'x' → logprob: -9.875194549560547
    4. '```' → logprob: -10.875194549560547
    5. '
' → logprob: -11.625194549560547
    6. '``' → logprob: -11.625194549560547
    7. ']' → logprob: -12.000194549560547
    8. '[n' → logprob: -12.000194549560547
    9. 't' → logprob: -12.625194549560547
    10. '<th' → logprob: -12.625194549560547

Token 459: '-h' (ID: 4559)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0311990175396204
    2. ' -' → logprob: -3.7811989784240723
    3. '[-' → logprob: -5.031198978424072
    4. '-h' → logprob: -7.031198978424072
    5. '[' → logprob: -8.40619945526123
    6. '-n' → logprob: -8.53119945526123
    7. '[h' → logprob: -10.28119945526123
    8. ']-' → logprob: -11.65619945526123
    9. '-
' → logprob: -11.78119945526123
    10. '[n' → logprob: -11.90619945526123

Token 460: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014314873144030571
    2. '-' → logprob: -4.639314651489258
    3. ' ]' → logprob: -6.514314651489258
    4. '[' → logprob: -7.014314651489258
    5. ' -' → logprob: -7.764314651489258
    6. '+' → logprob: -8.014314651489258
    7. ']
' → logprob: -8.014314651489258
    8. '1' → logprob: -8.764314651489258
    9. '[n' → logprob: -9.014314651489258
    10. ']%' → logprob: -9.014314651489258

Token 461: '               ' (ID: 506)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3580574095249176
    2. ' %' → logprob: -1.6080573797225952
    3. ')' → logprob: -3.1080574989318848
    4. '<|end|>' → logprob: -3.3580574989318848
    5. ')%' → logprob: -4.108057498931885
    6. '<|end|>' → logprob: -6.608057498931885
    7. '           ' → logprob: -7.108057498931885
    8. '
' → logprob: -7.233057498931885
    9. '%D' → logprob: -7.983057498931885
    10. ']%' → logprob: -8.358057022094727

Token 462: ' DP' (ID: 51992)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 463: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.0030081309378147125
    2. '[' → logprob: -6.8780083656311035
    3. '[w' → logprob: -6.8780083656311035
    4. '][' → logprob: -7.2530083656311035
    5. '```' → logprob: -9.253007888793945
    6. '[h' → logprob: -10.503007888793945
    7. '[next' → logprob: -10.753007888793945
    8. ' [' → logprob: -11.003007888793945
    9. ')[' → logprob: -11.253007888793945
    10. '           ' → logprob: -12.253007888793945

Token 464: 'ex' (ID: 490)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.1296537220478058
    2. 'w' → logprob: -2.2546536922454834
    3. '+' → logprob: -4.7546539306640625
    4. 'ext' → logprob: -5.7546539306640625
    5. '[n' → logprob: -6.3796539306640625
    6. 'ex' → logprob: -7.0046539306640625
    7. '[w' → logprob: -7.1296539306640625
    8. '[' → logprob: -7.8796539306640625
    9. 'h' → logprob: -8.504653930664062
    10. '```' → logprob: -8.754653930664062

Token 465: 'th' (ID: 404)
  Prédit: 'th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -3.0948158382670954e-05
    2. 'h' → logprob: -10.875030517578125
    3. 't' → logprob: -12.625030517578125
    4. '```' → logprob: -12.875030517578125
    5. 'w' → logprob: -13.750030517578125
    6. 'т' → logprob: -14.000030517578125
    7. '
' → logprob: -14.375030517578125
    8. '[' → logprob: -15.000030517578125
    9. 'eth' → logprob: -15.250030517578125
    10. ']' → logprob: -15.250030517578125

Token 466: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00035072024911642075
    2. '[w' → logprob: -8.500350952148438
    3. ' ][' → logprob: -9.250350952148438
    4. '[' → logprob: -10.375350952148438
    5. ']' → logprob: -11.750350952148438
    6. '   ' → logprob: -13.625350952148438
    7. 'w' → logprob: -13.750350952148438
    8. ' ' → logprob: -13.875350952148438
    9. ' [' → logprob: -13.875350952148438
    10. '           ' → logprob: -14.000350952148438

Token 467: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -3.404745439183898e-05
    2. ' w' → logprob: -10.37503433227539
    3. 'W' → logprob: -13.62503433227539
    4. '[w' → logprob: -14.62503433227539
    5. '[' → logprob: -15.37503433227539
    6. '   ' → logprob: -15.50003433227539
    7. '	w' → logprob: -15.75003433227539
    8. '
' → logprob: -15.87503433227539
    9. '```' → logprob: -16.50003433227539
    10. '<w' → logprob: -17.00003433227539

Token 468: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0008687060908414423
    2. '[' → logprob: -7.125868797302246
    3. ' ][' → logprob: -9.875868797302246
    4. ']' → logprob: -11.500868797302246
    5. ']][' → logprob: -14.750868797302246
    6. ''][' → logprob: -14.750868797302246
    7. ' [' → logprob: -14.750868797302246
    8. '"][' → logprob: -15.000868797302246
    9. ')[' → logprob: -15.625868797302246
    10. ' ' → logprob: -15.625868797302246

Token 469: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014269989915192127
    2. '1' → logprob: -4.264269828796387
    3. '
' → logprob: -9.514269828796387
    4. ' ' → logprob: -11.139269828796387
    5. '   ' → logprob: -12.014269828796387
    6. '[' → logprob: -12.139269828796387
    7. ']' → logprob: -13.451769828796387
    8. '

' → logprob: -14.389269828796387
    9. '```' → logprob: -14.451769828796387
    10. '    
' → logprob: -14.514269828796387

Token 470: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -5.741137283621356e-05
    2. ']+=' → logprob: -10.000057220458984
    3. ' ]' → logprob: -11.625057220458984
    4. ']%' → logprob: -13.375057220458984
    5. ']=' → logprob: -14.750057220458984
    6. '%' → logprob: -14.750057220458984
    7. '```' → logprob: -15.250057220458984
    8. ')' → logprob: -15.625057220458984
    9. ']
' → logprob: -16.250057220458984
    10. '[' → logprob: -17.000057220458984

Token 471: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.01713671162724495
    2. ' %=' → logprob: -4.142136573791504
    3. '%' → logprob: -7.017136573791504
    4. ')' → logprob: -8.892136573791504
    5. ']' → logprob: -9.767136573791504
    6. '
' → logprob: -13.142136573791504
    7. '	' → logprob: -13.142136573791504
    8. '```' → logprob: -13.392136573791504
    9. ' %' → logprob: -13.517136573791504
    10. ')%' → logprob: -13.517136573791504

Token 472: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.896309739408025e-07
    2. ' mod' → logprob: -14.250000953674316
    3. '998' → logprob: -17.5
    4. '(mod' → logprob: -19.5
    5. '
' → logprob: -20.625
    6. '	mod' → logprob: -20.875
    7. 'moder' → logprob: -21.75
    8. '```' → logprob: -21.875
    9. '999' → logprob: -22.0
    10. 'MOD' → logprob: -22.875

Token 473: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22006277740001678
    2. '               ' → logprob: -2.220062732696533
    3. '<|end|>' → logprob: -2.470062732696533
    4. '		' → logprob: -7.220062732696533
    5. '<|end|>' → logprob: -7.345062732696533
    6. ')' → logprob: -7.470062732696533
    7. '            ' → logprob: -7.720062732696533
    8. '
' → logprob: -7.970062732696533
    9. '                   ' → logprob: -8.470063209533691
    10. '            
' → logprob: -8.720063209533691

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07222530245780945
    2. '               ' → logprob: -3.072225332260132
    3. '<|end|>' → logprob: -4.322225093841553
    4. '            ' → logprob: -5.447225093841553
    5. '            
' → logprob: -6.822225093841553
    6. '       ' → logprob: -7.072225093841553
    7. '             ' → logprob: -7.447225093841553
    8. '                   ' → logprob: -7.572225093841553
    9. '		' → logprob: -7.697225093841553
    10. '                ' → logprob: -7.822225093841553

Token 475: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0032093229237943888
    2. '		' → logprob: -6.003209114074707
    3. 'for' → logprob: -8.128209114074707
    4. ' for' → logprob: -9.128209114074707
    5. '            ' → logprob: -9.253209114074707
    6. ' ' → logprob: -10.378209114074707
    7. '```' → logprob: -10.378209114074707
    8. '       ' → logprob: -10.628209114074707
    9. '               ' → logprob: -10.628209114074707
    10. '          ' → logprob: -10.878209114074707

Token 476: ' Horizontal' (ID: 75428)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08511661738157272
    2. 'Horizontal' → logprob: -2.8351166248321533
    3. ' for' → logprob: -4.585116386413574
    4. '           ' → logprob: -4.960116386413574
    5. ' Horizontal' → logprob: -5.335116386413574
    6. 'Vertical' → logprob: -8.085116386413574
    7. '#' → logprob: -8.585116386413574
    8. '   ' → logprob: -9.085116386413574
    9. '       ' → logprob: -9.210116386413574
    10. 'horizontal' → logprob: -10.085116386413574

Token 477: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4246806502342224
    2. 'for' → logprob: -1.1746807098388672
    3. ' for' → logprob: -3.299680709838867
    4. '
' → logprob: -9.549680709838867
    5. '            
' → logprob: -10.174680709838867
    6. '               ' → logprob: -10.299680709838867
    7. '```' → logprob: -10.549680709838867
    8. '[' → logprob: -11.674680709838867
    9. '   ' → logprob: -12.299680709838867
    10. '       ' → logprob: -12.299680709838867

Token 478: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06691360473632812
    2. '           ' → logprob: -2.816913604736328
    3. ' for' → logprob: -5.316913604736328
    4. '       ' → logprob: -11.316913604736328
    5. '   ' → logprob: -11.691913604736328
    6. '	for' → logprob: -12.816913604736328
    7. '               ' → logprob: -14.191913604736328
    8. ' ' → logprob: -14.316913604736328
    9. '```' → logprob: -14.566913604736328
    10. '          ' → logprob: -15.316913604736328

Token 479: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011789368465542793
    2. ' for' → logprob: -4.761789321899414
    3. '           ' → logprob: -5.761789321899414
    4. '   ' → logprob: -11.386789321899414
    5. '       ' → logprob: -11.761789321899414
    6. '	for' → logprob: -12.761789321899414
    7. ' ' → logprob: -13.636789321899414
    8. '               ' → logprob: -14.761789321899414
    9. '  ' → logprob: -15.761789321899414
    10. '
' → logprob: -16.261789321899414

Token 480: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0620100311934948
    2. ' next' → logprob: -2.8120100498199463
    3. '   ' → logprob: -11.437009811401367
    4. '(next' → logprob: -11.562009811401367
    5. 'n' → logprob: -12.562009811401367
    6. '	next' → logprob: -12.562009811401367
    7. ' ' → logprob: -12.687009811401367
    8. 'Next' → logprob: -13.187009811401367
    9. '[next' → logprob: -13.312009811401367
    10. '`' → logprob: -13.812009811401367

Token 481: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.023552455008029938
    2. 'in' → logprob: -4.148552417755127
    3. ' in' → logprob: -4.898552417755127
    4. ' w' → logprob: -10.648552894592285
    5. '_w' → logprob: -13.398552894592285
    6. '<w' → logprob: -13.523552894592285
    7. '[w' → logprob: -13.523552894592285
    8. '   ' → logprob: -13.898552894592285
    9. 'W' → logprob: -14.023552894592285
    10. '(w' → logprob: -14.648552894592285

Token 482: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005929863080382347
    2. 'in' → logprob: -5.130929946899414
    3. ' ' → logprob: -14.380929946899414
    4. 'n' → logprob: -14.630929946899414
    5. 'range' → logprob: -16.005929946899414
    6. 'w' → logprob: -16.380929946899414
    7. '   ' → logprob: -17.130929946899414
    8. 'd' → logprob: -17.255929946899414
    9. '	in' → logprob: -17.630929946899414
    10. 'In' → logprob: -17.880929946899414

Token 483: ' range' (ID: 3352)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.9901856780052185
    2. 'range' → logprob: -0.9901856780052185
    3. ' range' → logprob: -1.3651857376098633
    4. ' in' → logprob: -7.365185737609863
    5. '(range' → logprob: -7.990185737609863
    6. ' (' → logprob: -8.740185737609863
    7. '   ' → logprob: -8.740185737609863
    8. 'w' → logprob: -8.740185737609863
    9. '(' → logprob: -9.865185737609863
    10. ' w' → logprob: -10.365185737609863

Token 484: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -8.65707261255011e-06
    2. 'w' → logprob: -12.250008583068848
    3. '(' → logprob: -12.750008583068848
    4. '(W' → logprob: -15.125008583068848
    5. '   ' → logprob: -15.250008583068848
    6. ' (' → logprob: -16.000009536743164
    7. '(
' → logprob: -16.625009536743164
    8. '	w' → logprob: -17.875009536743164
    9. '[w' → logprob: -17.875009536743164
    10. '
' → logprob: -18.250009536743164

Token 485: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0009802898857742548
    2. ' +' → logprob: -7.000980377197266
    3. '+w' → logprob: -10.125980377197266
    4. ',' → logprob: -11.000980377197266
    5. '+,' → logprob: -12.375980377197266
    6. '1' → logprob: -12.500980377197266
    7. 'w' → logprob: -13.500980377197266
    8. '+
' → logprob: -13.750980377197266
    9. ',w' → logprob: -14.750980377197266
    10. '(w' → logprob: -15.125980377197266

Token 486: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03021681308746338
    2. 'w' → logprob: -3.530216693878174
    3. '+' → logprob: -8.655217170715332
    4. '(w' → logprob: -8.655217170715332
    5. '   ' → logprob: -10.280217170715332
    6. 'W' → logprob: -10.530217170715332
    7. '
' → logprob: -11.655217170715332
    8. ' w' → logprob: -11.655217170715332
    9. 'next' → logprob: -12.030217170715332
    10. ' ' → logprob: -12.280217170715332

Token 487: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014964033849537373
    2. '+' → logprob: -5.1399641036987305
    3. ',w' → logprob: -5.5149641036987305
    4. 'w' → logprob: -5.8899641036987305
    5. '(w' → logprob: -6.5149641036987305
    6. ' ,' → logprob: -8.38996410369873
    7. '+,' → logprob: -8.76496410369873
    8. '(next' → logprob: -9.26496410369873
    9. '(' → logprob: -9.38996410369873
    10. ',next' → logprob: -9.76496410369873

Token 488: ' WW' (ID: 43758)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.4149725139141083
    2. 'WW' → logprob: -1.4149725437164307
    3. '(W' → logprob: -2.6649725437164307
    4. '(' → logprob: -3.7899725437164307
    5. ' W' → logprob: -5.789972305297852
    6. ' WW' → logprob: -7.289972305297852
    7. '   ' → logprob: -7.539972305297852
    8. 'ww' → logprob: -9.664972305297852
    9. ' (' → logprob: -9.664972305297852
    10. 'w' → logprob: -9.664972305297852

Token 489: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.9862216504407115e-05
    2. '[' → logprob: -11.625020027160645
    3. ' +' → logprob: -12.125020027160645
    4. '1' → logprob: -13.125020027160645
    5. '+w' → logprob: -13.125020027160645
    6. 'w' → logprob: -14.750020027160645
    7. ')+' → logprob: -15.125020027160645
    8. '+
' → logprob: -15.625020027160645
    9. '):
' → logprob: -16.000019073486328
    10. ')' → logprob: -16.375019073486328

Token 490: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.620622712536715e-05
    2. '+' → logprob: -10.000045776367188
    3. ' ' → logprob: -14.625045776367188
    4. '   ' → logprob: -16.125045776367188
    5. '```' → logprob: -16.500045776367188
    6. '
' → logprob: -17.125045776367188
    7. ')' → logprob: -17.500045776367188
    8. 'w' → logprob: -17.750045776367188
    9. '       ' → logprob: -17.750045776367188
    10. 'next' → logprob: -17.875045776367188

Token 491: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023833492770791054
    2. '):' → logprob: -3.7738335132598877
    3. '               ' → logprob: -7.648833274841309
    4. ':
' → logprob: -10.398833274841309
    5. '):
' → logprob: -10.648833274841309
    6. '           ' → logprob: -11.148833274841309
    7. ':' → logprob: -11.398833274841309
    8. ')' → logprob: -11.898833274841309
    9. ']:
' → logprob: -12.148833274841309
    10. ',' → logprob: -12.398833274841309

Token 492: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005031120381318033
    2. '           ' → logprob: -7.625503063201904
    3. '       ' → logprob: -12.750503540039062
    4. '                   ' → logprob: -12.750503540039062
    5. '             ' → logprob: -13.000503540039062
    6. '```' → logprob: -13.250503540039062
    7. '              ' → logprob: -13.375503540039062
    8. '            ' → logprob: -14.000503540039062
    9. 'DP' → logprob: -14.125503540039062
    10. '                ' → logprob: -14.125503540039062

Token 493: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.15202604234218597
    2. '               ' → logprob: -2.1520259380340576
    3. ' DP' → logprob: -3.9020259380340576
    4. '           ' → logprob: -5.527026176452637
    5. '                   ' → logprob: -8.277026176452637
    6. '   ' → logprob: -8.277026176452637
    7. '       ' → logprob: -9.777026176452637
    8. ' ' → logprob: -11.277026176452637
    9. '_DP' → logprob: -11.277026176452637
    10. '              ' → logprob: -13.027026176452637

Token 494: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0001789881061995402
    2. '[next' → logprob: -9.125179290771484
    3. '[n' → logprob: -9.875179290771484
    4. '[' → logprob: -11.875179290771484
    5. '[w' → logprob: -12.500179290771484
    6. 'h' → logprob: -13.125179290771484
    7. '   ' → logprob: -13.750179290771484
    8. ' [' → logprob: -13.750179290771484
    9. '	h' → logprob: -14.250179290771484
    10. '           ' → logprob: -14.500179290771484

Token 495: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.16034851968288422
    2. '[next' → logprob: -1.9103485345840454
    3. '[' → logprob: -9.785348892211914
    4. ' ][' → logprob: -10.910348892211914
    5. ']' → logprob: -11.535348892211914
    6. 'next' → logprob: -11.785348892211914
    7. '   ' → logprob: -11.910348892211914
    8. '
' → logprob: -12.160348892211914
    9. '           ' → logprob: -12.285348892211914
    10. '       ' → logprob: -13.285348892211914

Token 496: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -3.273621405242011e-05
    2. ' next' → logprob: -10.875032424926758
    3. '[next' → logprob: -11.250032424926758
    4. '(next' → logprob: -15.125032424926758
    5. '   ' → logprob: -15.500032424926758
    6. '
' → logprob: -15.625032424926758
    7. '	next' → logprob: -17.125032424926758
    8. 'n' → logprob: -17.250032424926758
    9. ' ' → logprob: -18.375032424926758
    10. '       ' → logprob: -18.500032424926758

Token 497: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.057743949990254e-05
    2. '+' → logprob: -12.000020980834961
    3. '[w' → logprob: -12.000020980834961
    4. 'W' → logprob: -13.500020980834961
    5. '[' → logprob: -13.500020980834961
    6. '```' → logprob: -13.625020980834961
    7. '][' → logprob: -13.750020980834961
    8. '
' → logprob: -14.500020980834961
    9. 'h' → logprob: -14.625020980834961
    10. ']' → logprob: -15.000020980834961

Token 498: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018216200172901154
    2. '[' → logprob: -4.018216133117676
    3. ' ][' → logprob: -10.143216133117676
    4. ']' → logprob: -11.268216133117676
    5. '           ' → logprob: -13.143216133117676
    6. '   ' → logprob: -13.268216133117676
    7. '       ' → logprob: -13.518216133117676
    8. '1' → logprob: -13.643216133117676
    9. ')[' → logprob: -13.768216133117676
    10. '	' → logprob: -14.018216133117676

Token 499: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. '
' → logprob: -15.375000953674316
    3. '1' → logprob: -15.875000953674316
    4. ' ' → logprob: -16.625
    5. '   ' → logprob: -17.375
    6. '۰' → logprob: -18.75
    7. '０' → logprob: -19.375
    8. '[' → logprob: -19.375
    9. ']' → logprob: -20.5
    10. '```' → logprob: -21.0

Token 500: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.008619419299066067
    2. ']+=' → logprob: -4.75861930847168
    3. ' ]' → logprob: -12.63361930847168
    4. ']+' → logprob: -14.75861930847168
    5. '[' → logprob: -14.75861930847168
    6. '```' → logprob: -14.88361930847168
    7. '   ' → logprob: -16.63361930847168
    8. ']
' → logprob: -16.63361930847168
    9. '+=' → logprob: -16.88361930847168
    10. '][' → logprob: -17.00861930847168

Token 501: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0011455760104581714
    2. ']+=' → logprob: -7.001145362854004
    3. ' +=' → logprob: -8.376145362854004
    4. '+=(' → logprob: -12.626145362854004
    5. ']' → logprob: -15.251145362854004
    6. '=' → logprob: -16.62614631652832
    7. '+' → logprob: -16.75114631652832
    8. '[' → logprob: -17.62614631652832
    9. '```' → logprob: -17.87614631652832
    10. '+='' → logprob: -18.00114631652832

Token 502: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.0019287518225610256
    2. ' DP' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. '_DP' → logprob: -17.376928329467773
    5. '
' → logprob: -18.126928329467773
    6. '(D' → logprob: -18.876928329467773
    7. 'dp' → logprob: -19.501928329467773
    8. '(' → logprob: -20.126928329467773
    9. ' ' → logprob: -20.251928329467773
    10. 'Dp' → logprob: -20.251928329467773

Token 503: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.00015979631280060858
    2. 'h' → logprob: -8.750160217285156
    3. '[' → logprob: -14.500160217285156
    4. '[
' → logprob: -15.000160217285156
    5. '```' → logprob: -15.500160217285156
    6. '
' → logprob: -15.750160217285156
    7. 's' → logprob: -17.375160217285156
    8. '<h' → logprob: -17.500160217285156
    9. ' [' → logprob: -17.875160217285156
    10. '	h' → logprob: -18.250160217285156

Token 504: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018209058791399002
    2. '[w' → logprob: -4.018208980560303
    3. '[h' → logprob: -10.518209457397461
    4. 'w' → logprob: -11.393209457397461
    5. ' ][' → logprob: -11.893209457397461
    6. '}[' → logprob: -12.643209457397461
    7. ' [' → logprob: -13.018209457397461
    8. '[' → logprob: -13.143209457397461
    9. ']' → logprob: -13.393209457397461
    10. '   ' → logprob: -13.893209457397461

Token 505: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2233183042553719e-05
    2. ' w' → logprob: -11.375012397766113
    3. '
' → logprob: -15.000012397766113
    4. '   ' → logprob: -15.750012397766113
    5. '[w' → logprob: -16.250011444091797
    6. 'W' → logprob: -17.000011444091797
    7. ' ' → logprob: -17.375011444091797
    8. '	w' → logprob: -17.500011444091797
    9. '```' → logprob: -18.375011444091797
    10. '<w' → logprob: -18.625011444091797

Token 506: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.011139659211039543
    2. '[' → logprob: -4.511139869689941
    3. '0' → logprob: -10.261139869689941
    4. ' ][' → logprob: -10.386139869689941
    5. ']' → logprob: -11.386139869689941
    6. '   ' → logprob: -12.386139869689941
    7. '
' → logprob: -12.636139869689941
    8. '	' → logprob: -13.761139869689941
    9. ' ' → logprob: -13.886139869689941
    10. ' [' → logprob: -14.386139869689941

Token 507: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. '[' → logprob: -12.500004768371582
    3. '
' → logprob: -14.875004768371582
    4. '   ' → logprob: -16.125003814697266
    5. '```' → logprob: -16.250003814697266
    6. '1' → logprob: -16.625003814697266
    7. ' ' → logprob: -17.125003814697266
    8. '	' → logprob: -18.000003814697266
    9. ']' → logprob: -18.625003814697266
    10. 'h' → logprob: -18.625003814697266

Token 508: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0005745976231992245
    2. '*' → logprob: -8.500575065612793
    3. ' *' → logprob: -8.500575065612793
    4. ']*' → logprob: -8.875575065612793
    5. ' ]' → logprob: -10.875575065612793
    6. '```' → logprob: -13.125575065612793
    7. '               ' → logprob: -13.750575065612793
    8. '[' → logprob: -13.750575065612793
    9. ']
' → logprob: -14.125575065612793
    10. '   ' → logprob: -14.375575065612793

Token 509: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.20169095695018768
    2. ' *' → logprob: -1.701690912246704
    3. '               ' → logprob: -8.326690673828125
    4. '*object' → logprob: -11.326690673828125
    5. '*(' → logprob: -12.201690673828125
    6. '           ' → logprob: -12.701690673828125
    7. '```' → logprob: -12.701690673828125
    8. ' ' → logprob: -13.076690673828125
    9. '                   ' → logprob: -13.076690673828125
    10. ')' → logprob: -13.701690673828125

Token 510: ' FACT' (ID: 99053)
  Prédit: 'FACT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.001327499165199697
    2. 'COM' → logprob: -7.0013275146484375
    3. ' FACT' → logprob: -8.001327514648438
    4. 'FA' → logprob: -10.001327514648438
    5. 'pow' → logprob: -11.751327514648438
    6. '   ' → logprob: -11.876327514648438
    7. 'fact' → logprob: -11.876327514648438
    8. 'FAC' → logprob: -12.501327514648438
    9. ' ' → logprob: -13.376327514648438
    10. '
' → logprob: -13.376327514648438

Token 511: '_INV' (ID: 116669)
  Prédit: '_INV'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_INV' → logprob: -2.951771421066951e-05
    2. 'INV' → logprob: -10.500029563903809
    3. '[' → logprob: -13.500029563903809
    4. 'inv' → logprob: -16.375028610229492
    5. '[next' → logprob: -16.500028610229492
    6. '[-' → logprob: -16.625028610229492
    7. '_inv' → logprob: -16.750028610229492
    8. '[n' → logprob: -16.750028610229492
    9. 'Inv' → logprob: -17.250028610229492
    10. '```' → logprob: -17.375028610229492

Token 512: '[next' (ID: 103383)
  Prédit: '[next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[next' → logprob: -1.9361264946837764e-07
    2. '[n' → logprob: -17.25
    3. '[' → logprob: -17.875
    4. ' [' → logprob: -18.125
    5. '[(' → logprob: -18.625
    6. '[now' → logprob: -18.625
    7. '(next' → logprob: -18.75
    8. 'next' → logprob: -19.125
    9. '[last' → logprob: -19.875
    10. '

' → logprob: -20.5

Token 513: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.078839502763003e-05
    2. 'h' → logprob: -9.500090599060059
    3. '
' → logprob: -12.750090599060059
    4. 'next' → logprob: -12.750090599060059
    5. '_w' → logprob: -13.250090599060059
    6. '[next' → logprob: -13.375090599060059
    7. '[w' → logprob: -13.750090599060059
    8. '-h' → logprob: -14.500090599060059
    9. ']' → logprob: -14.562590599060059
    10. '-w' → logprob: -14.687590599060059

Token 514: '-w' (ID: 4450)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5292980670928955
    2. '-w' → logprob: -0.9042980670928955
    3. ' -' → logprob: -5.404297828674316
    4. '[w' → logprob: -6.654297828674316
    5. '-h' → logprob: -9.154297828674316
    6. '[-' → logprob: -9.279297828674316
    7. '-[' → logprob: -9.654297828674316
    8. '[' → logprob: -9.904297828674316
    9. '-
' → logprob: -11.904297828674316
    10. 'w' → logprob: -11.904297828674316

Token 515: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.11518988758325577
    2. ']' → logprob: -2.240189790725708
    3. ']%' → logprob: -6.615190029144287
    4. '               ' → logprob: -7.865190029144287
    5. ']
' → logprob: -7.990190029144287
    6. '%' → logprob: -8.365189552307129
    7. '           ' → logprob: -11.115189552307129
    8. ' ]
' → logprob: -11.365189552307129
    9. '                   ' → logprob: -11.490189552307129
    10. ']

' → logprob: -11.740189552307129

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000511687423568219
    2. '```' → logprob: -8.00051212310791
    3. '
' → logprob: -9.00051212310791
    4. '           ' → logprob: -10.75051212310791
    5. '<|end|>' → logprob: -11.50051212310791
    6. '              ' → logprob: -12.12551212310791
    7. '                   ' → logprob: -13.00051212310791
    8. '                
' → logprob: -13.00051212310791
    9. '\
' → logprob: -13.37551212310791
    10. '                ' → logprob: -13.37551212310791

Token 517: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' (adapté à ' DP') → logprob: -0.0015070053050294518
    2. '               ' → logprob: -6.751506805419922
    3. ' DP' → logprob: -8.001506805419922
    4. '
' → logprob: -13.501506805419922
    5. '_DP' → logprob: -15.126506805419922
    6. '           ' → logprob: -16.751506805419922
    7. 'dp' → logprob: -18.001506805419922
    8. '              ' → logprob: -18.626506805419922
    9. '   ' → logprob: -18.876506805419922
    10. ' ' → logprob: -19.001506805419922

Token 518: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.2664456789934775e-06
    2. 'h' → logprob: -13.875000953674316
    3. '[' → logprob: -16.500001907348633
    4. '```' → logprob: -17.000001907348633
    5. '
' → logprob: -17.875001907348633
    6. '<h' → logprob: -17.875001907348633
    7. '][' → logprob: -18.125001907348633
    8. ' [' → logprob: -18.250001907348633
    9. '(h' → logprob: -18.375001907348633
    10. '	h' → logprob: -19.250001907348633

Token 519: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.02388587035238743
    2. '[h' → logprob: -3.77388596534729
    3. '[next' → logprob: -7.523885726928711
    4. ' ][' → logprob: -11.023885726928711
    5. ')[' → logprob: -11.273885726928711
    6. '```' → logprob: -11.398885726928711
    7. '}[' → logprob: -11.773885726928711
    8. ']' → logprob: -11.773885726928711
    9. '   ' → logprob: -11.898885726928711
    10. '[w' → logprob: -12.023885726928711

Token 520: 'next' (ID: 7311)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.3872082531452179
    2. 'next' → logprob: -1.1372082233428955
    3. '[next' → logprob: -8.762207984924316
    4. '(next' → logprob: -9.012207984924316
    5. ' next' → logprob: -10.262207984924316
    6. 'h' → logprob: -11.262207984924316
    7. '
' → logprob: -13.012207984924316
    8. '[w' → logprob: -13.262207984924316
    9. ' w' → logprob: -13.637207984924316
    10. 'W' → logprob: -13.637207984924316

Token 521: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00044556602369993925
    2. '+' → logprob: -8.000445365905762
    3. '1' → logprob: -9.500445365905762
    4. '[w' → logprob: -11.500445365905762
    5. '
' → logprob: -11.750445365905762
    6. '][' → logprob: -12.375445365905762
    7. '```' → logprob: -12.625445365905762
    8. '[' → logprob: -12.875445365905762
    9. '_w' → logprob: -13.500445365905762
    10. ']' → logprob: -13.875445365905762

Token 522: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0025069285184144974
    2. '[' → logprob: -6.002506732940674
    3. ' ][' → logprob: -10.752507209777832
    4. ']' → logprob: -11.752507209777832
    5. '```' → logprob: -14.877507209777832
    6. '>[' → logprob: -15.502507209777832
    7. '"][' → logprob: -15.502507209777832
    8. '[][' → logprob: -15.752507209777832
    9. 'w' → logprob: -15.877507209777832
    10. ' [' → logprob: -15.877507209777832

Token 523: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.093505099765025e-05
    2. '0' → logprob: -11.750020980834961
    3. ']' → logprob: -12.625020980834961
    4. '
' → logprob: -13.000020980834961
    5. ' ' → logprob: -13.375020980834961
    6. '[' → logprob: -13.625020980834961
    7. '   ' → logprob: -13.625020980834961
    8. '```' → logprob: -14.250020980834961
    9. '%' → logprob: -14.500020980834961
    10. ')' → logprob: -15.000020980834961

Token 524: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.009807324968278408
    2. ']+=' → logprob: -4.759807109832764
    3. '][' → logprob: -7.009807109832764
    4. '[' → logprob: -8.259807586669922
    5. ' ]' → logprob: -11.259807586669922
    6. '           ' → logprob: -12.009807586669922
    7. '       ' → logprob: -12.634807586669922
    8. '```' → logprob: -13.259807586669922
    9. '   ' → logprob: -13.384807586669922
    10. ')' → logprob: -14.384807586669922

Token 525: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.004158652853220701
    2. ' %=' → logprob: -5.5041584968566895
    3. '%' → logprob: -9.504158973693848
    4. '+=' → logprob: -12.754158973693848
    5. ')%' → logprob: -13.754158973693848
    6. ')' → logprob: -14.754158973693848
    7. '%\' → logprob: -15.379158973693848
    8. ' %' → logprob: -15.754158973693848
    9. ']+=' → logprob: -15.754158973693848
    10. '   ' → logprob: -16.00415802001953

Token 526: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.0009120595059357584
    2. ' mod' → logprob: -7.000912189483643
    3. '(mod' → logprob: -15.250911712646484
    4. '
' → logprob: -15.250911712646484
    5. '```' → logprob: -16.875911712646484
    6. '	mod' → logprob: -17.375911712646484
    7. '0' → logprob: -19.625911712646484
    8. '_mod' → logprob: -19.625911712646484
    9. ' ' → logprob: -19.750911712646484
    10. ' modul' → logprob: -20.125911712646484

Token 527: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008782144635915756
    2. 'RA' → logprob: -5.633781909942627
    3. '
' → logprob: -5.883781909942627
    4. ')' → logprob: -6.883781909942627
    5. '```' → logprob: -8.133782386779785
    6. '<|end|>' → logprob: -8.133782386779785
    7. '       ' → logprob: -8.383782386779785
    8. '    
' → logprob: -8.883782386779785
    9. ' ' → logprob: -9.633782386779785
    10. ' return' → logprob: -9.883782386779785

Token 528: '   ' (ID: 271)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -0.25574278831481934
    2. '   ' → logprob: -1.5057427883148193
    3. ')' → logprob: -5.755743026733398
    4. 'return' → logprob: -8.005743026733398
    5. '
' → logprob: -9.130743026733398
    6. '```' → logprob: -10.255743026733398
    7. '_RA' → logprob: -10.380743026733398
    8. ' RA' → logprob: -10.755743026733398
    9. ')
' → logprob: -11.005743026733398
    10. ' ' → logprob: -11.005743026733398

Token 529: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' (adapté à ' RA') → logprob: -9.925185440806672e-05
    2. '   ' → logprob: -9.375099182128906
    3. ' RA' → logprob: -12.500099182128906
    4. 'result' → logprob: -12.625099182128906
    5. 'res' → logprob: -12.750099182128906
    6. 'for' → logprob: -13.375099182128906
    7. 'return' → logprob: -13.500099182128906
    8. '```' → logprob: -13.875099182128906
    9. 'ra' → logprob: -15.875099182128906
    10. '_RA' → logprob: -16.250099182128906

Token 530: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.961759259458631e-06
    2. '[
' → logprob: -13.500004768371582
    3. '[h' → logprob: -14.500004768371582
    4. '   ' → logprob: -14.625004768371582
    5. ')[' → logprob: -14.625004768371582
    6. '[int' → logprob: -14.875004768371582
    7. '[I' → logprob: -15.625004768371582
    8. '][' → logprob: -15.750004768371582
    9. '    
' → logprob: -15.875004768371582
    10. '[N' → logprob: -15.875004768371582

Token 531: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -0.000432695698691532
    2. 'H' → logprob: -7.75043249130249
    3. ' HH' → logprob: -13.250432968139648
    4. '-H' → logprob: -15.375432968139648
    5. '
' → logprob: -18.37543296813965
    6. '   ' → logprob: -18.62543296813965
    7. '_H' → logprob: -18.62543296813965
    8. 'hh' → logprob: -18.87543296813965
    9. '-' → logprob: -19.12543296813965
    10. '(H' → logprob: -19.25043296813965

Token 532: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00013381359167397022
    2. ']' → logprob: -9.000133514404297
    3. '[' → logprob: -12.000133514404297
    4. ' ][' → logprob: -13.000133514404297
    5. ']][' → logprob: -14.750133514404297
    6. '][]' → logprob: -15.000133514404297
    7. ')][' → logprob: -15.375133514404297
    8. '][_' → logprob: -15.500133514404297
    9. '"][' → logprob: -15.750133514404297
    10. ']
' → logprob: -15.750133514404297

Token 533: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -7.896309739408025e-07
    2. ' WW' → logprob: -14.250000953674316
    3. 'ww' → logprob: -18.5
    4. 'W' → logprob: -18.5
    5. '   ' → logprob: -21.0
    6. '
' → logprob: -21.5
    7. ' ' → logprob: -21.625
    8. 'WWW' → logprob: -22.625
    9. '  ' → logprob: -23.125
    10. '```' → logprob: -23.125

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004418743774294853
    2. ']=' → logprob: -7.750442028045654
    3. ' ]' → logprob: -12.250441551208496
    4. '=' → logprob: -12.250441551208496
    5. '[' → logprob: -14.125441551208496
    6. ']==' → logprob: -14.875441551208496
    7. ']
' → logprob: -14.875441551208496
    8. '][' → logprob: -17.125442504882812
    9. ')' → logprob: -17.500442504882812
    10. ']=-' → logprob: -17.500442504882812

Token 535: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006764991208910942
    2. ' =' → logprob: -5.006764888763428
    3. 'return' → logprob: -10.256765365600586
    4. '=
' → logprob: -11.756765365600586
    5. '%=' → logprob: -12.631765365600586
    6. ',' → logprob: -13.631765365600586
    7. '   ' → logprob: -14.131765365600586
    8. '+=' → logprob: -15.131765365600586
    9. ')' → logprob: -15.631765365600586
    10. ' return' → logprob: -15.631765365600586

Token 536: ' (' (ID: 350)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.01955069974064827
    2. '(D' → logprob: -4.019550800323486
    3. ' DP' → logprob: -7.269550800323486
    4. '(' → logprob: -8.394550323486328
    5. 'sum' → logprob: -8.769550323486328
    6. ' (' → logprob: -8.894550323486328
    7. '((' → logprob: -9.894550323486328
    8. '0' → logprob: -10.769550323486328
    9. 'int' → logprob: -11.019550323486328
    10. '   ' → logprob: -11.269550323486328

Token 537: 'DP' (ID: 16851)
  Prédit: 'DP'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.003780720056965947
    2. '(D' → logprob: -5.878780841827393
    3. ' DP' → logprob: -8.003780364990234
    4. '(' → logprob: -8.753780364990234
    5. 'sum' → logprob: -8.753780364990234
    6. 'fact' → logprob: -9.253780364990234
    7. '   ' → logprob: -9.503780364990234
    8. ' (' → logprob: -10.503780364990234
    9. '
' → logprob: -10.628780364990234
    10. 'int' → logprob: -10.878780364990234

Token 538: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012487331696320325
    2. 'HH' → logprob: -9.12512493133545
    3. '[-' → logprob: -11.37512493133545
    4. '
' → logprob: -12.50012493133545
    5. '   ' → logprob: -15.12512493133545
    6. 'H' → logprob: -15.37512493133545
    7. '[
' → logprob: -16.250123977661133
    8. '

' → logprob: -16.875123977661133
    9. '```' → logprob: -16.875123977661133
    10. '
' → logprob: -18.000123977661133

Token 539: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -8.180258191714529e-06
    2. 'H' → logprob: -11.750008583068848
    3. ' HH' → logprob: -15.500008583068848
    4. '[' → logprob: -16.62500762939453
    5. '-H' → logprob: -17.00000762939453
    6. '   ' → logprob: -17.75000762939453
    7. '
' → logprob: -18.00000762939453
    8. '_H' → logprob: -21.00000762939453
    9. 'HM' → logprob: -21.37500762939453
    10. '(H' → logprob: -21.50000762939453

Token 540: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.004662949591875076
    2. '[' → logprob: -5.379662990570068
    3. ')[' → logprob: -10.37966251373291
    4. ']' → logprob: -12.12966251373291
    5. ' ][' → logprob: -13.25466251373291
    6. '   ' → logprob: -13.87966251373291
    7. '}[' → logprob: -14.12966251373291
    8. '>[' → logprob: -14.37966251373291
    9. '[][' → logprob: -14.62966251373291
    10. '
' → logprob: -14.87966251373291

Token 541: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -0.004093835595995188
    2. '[' → logprob: -5.504093647003174
    3. 'W' → logprob: -11.629094123840332
    4. ' WW' → logprob: -12.379094123840332
    5. '0' → logprob: -13.879094123840332
    6. '   ' → logprob: -14.504094123840332
    7. 'ww' → logprob: -14.504094123840332
    8. ' ' → logprob: -16.504093170166016
    9. '
' → logprob: -16.629093170166016
    10. 'HH' → logprob: -17.004093170166016

Token 542: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0001544321421533823
    2. '[' → logprob: -8.875154495239258
    3. ' ][' → logprob: -12.125154495239258
    4. ']' → logprob: -12.250154495239258
    5. '0' → logprob: -13.125154495239258
    6. '
' → logprob: -14.125154495239258
    7. '   ' → logprob: -14.250154495239258
    8. ']
' → logprob: -14.875154495239258
    9. '1' → logprob: -16.000154495239258
    10. '"][' → logprob: -16.375154495239258

Token 543: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0219828002154827e-05
    2. '1' → logprob: -11.000020027160645
    3. '
' → logprob: -13.000020027160645
    4. '   ' → logprob: -14.750020027160645
    5. '[' → logprob: -15.125020027160645
    6. ' ' → logprob: -16.37502098083496
    7. ']' → logprob: -16.50002098083496
    8. '```' → logprob: -17.12502098083496
    9. '۰' → logprob: -17.25002098083496
    10. '(' → logprob: -17.43752098083496

Token 544: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.16023458540439606
    2. ' +' → logprob: -1.9102345705032349
    3. '+
' → logprob: -12.035234451293945
    4. ')' → logprob: -13.035234451293945
    5. ' +
' → logprob: -14.535234451293945
    6. ')+' → logprob: -14.910234451293945
    7. '0' → logprob: -15.410234451293945
    8. ' ' → logprob: -15.410234451293945
    9. '+)' → logprob: -15.660234451293945
    10. ']+' → logprob: -16.035234451293945

Token 545: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759861469268799
    2. ' +' → logprob: -0.8259861469268799
    3. '+
' → logprob: -10.2009859085083
    4. ' +
' → logprob: -11.7009859085083
    5. '
' → logprob: -15.4509859085083
    6. ' ' → logprob: -15.7009859085083
    7. '＋' → logprob: -15.9509859085083
    8. ')' → logprob: -16.075986862182617
    9. '0' → logprob: -16.325986862182617
    10. '*' → logprob: -16.450986862182617

Token 546: ' DP' (ID: 51992)
  Prédit: 'DP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'DP' → logprob: -0.004078401252627373
    2. ' DP' → logprob: -5.504078388214111
    3. '_DP' → logprob: -18.629077911376953
    4. 'dp' → logprob: -19.879077911376953
    5. 'Dp' → logprob: -19.879077911376953
    6. '
' → logprob: -20.379077911376953
    7. ' ' → logprob: -21.879077911376953
    8. '   ' → logprob: -22.254077911376953
    9. 'DF' → logprob: -23.879077911376953
    10. '0' → logprob: -23.879077911376953

Token 547: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -17.25
    3. '[
' → logprob: -17.75
    4. '   ' → logprob: -18.0
    5. '
' → logprob: -18.75
    6. ')[' → logprob: -19.125
    7. 'HH' → logprob: -19.125
    8. ' [' → logprob: -19.5
    9. '][' → logprob: -19.875
    10. ' ' → logprob: -20.0

Token 548: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -0.0025074053555727005
    2. '[' → logprob: -6.002507209777832
    3. 'H' → logprob: -10.502507209777832
    4. ' HH' → logprob: -12.627507209777832
    5. '(H' → logprob: -14.627507209777832
    6. '   ' → logprob: -15.377507209777832
    7. 'HN' → logprob: -16.62750816345215
    8. '
' → logprob: -16.87750816345215
    9. 'HL' → logprob: -17.12750816345215
    10. ' ' → logprob: -17.25250816345215

Token 549: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.018158724531531334
    2. '[' → logprob: -4.018158912658691
    3. ' ][' → logprob: -11.893158912658691
    4. ']' → logprob: -14.018158912658691
    5. ''][' → logprob: -15.268158912658691
    6. '```' → logprob: -15.393158912658691
    7. '"][' → logprob: -15.643158912658691
    8. '>[' → logprob: -15.643158912658691
    9. ')[' → logprob: -15.643158912658691
    10. '   ' → logprob: -15.768158912658691

Token 550: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -5.657694418914616e-05
    2. 'W' → logprob: -10.000056266784668
    3. '[' → logprob: -11.750056266784668
    4. ' WW' → logprob: -13.500056266784668
    5. '
' → logprob: -14.625056266784668
    6. 'WH' → logprob: -14.750056266784668
    7. '```' → logprob: -15.500056266784668
    8. 'ww' → logprob: -15.875056266784668
    9. '   ' → logprob: -15.875056266784668
    10. 'HH' → logprob: -16.250057220458984

Token 551: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0009249189170077443
    2. '[' → logprob: -7.000925064086914
    3. ']' → logprob: -11.500925064086914
    4. ' ][' → logprob: -13.625925064086914
    5. '1' → logprob: -14.125925064086914
    6. ')[' → logprob: -15.375925064086914
    7. ''][' → logprob: -16.000925064086914
    8. '>[' → logprob: -16.000925064086914
    9. '"][' → logprob: -16.000925064086914
    10. '   ' → logprob: -16.000925064086914

Token 552: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.25
    3. '   ' → logprob: -17.125
    4. '[' → logprob: -17.375
    5. '0' → logprob: -18.375
    6. '```' → logprob: -18.625
    7. '
' → logprob: -20.5
    8. '  ' → logprob: -20.625
    9. ')' → logprob: -21.125
    10. '`' → logprob: -21.5

Token 553: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010366239439463243
    2. ')%' → logprob: -9.250103950500488
    3. ' )' → logprob: -12.125103950500488
    4. '   ' → logprob: -13.750103950500488
    5. '）' → logprob: -14.750103950500488
    6. '])' → logprob: -15.250103950500488
    7. '`)' → logprob: -16.875102996826172
    8. ']' → logprob: -17.375102996826172
    9. '})' → logprob: -17.500102996826172
    10. ')
' → logprob: -17.875102996826172

Token 554: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.10021702200174332
    2. ' %' → logprob: -2.35021710395813
    3. '
' → logprob: -11.97521686553955
    4. ')' → logprob: -13.35021686553955
    5. ')%' → logprob: -14.35021686553955
    6. ' ' → logprob: -15.10021686553955
    7. ' ' → logprob: -15.22521686553955
    8. '   ' → logprob: -15.35021686553955
    9. '%
' → logprob: -15.47521686553955
    10. '%=' → logprob: -15.97521686553955

Token 555: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00012368128227535635
    2. ' mod' → logprob: -9.000123977661133
    3. '(mod' → logprob: -15.750123977661133
    4. '	mod' → logprob: -18.375123977661133
    5. '
' → logprob: -19.125123977661133
    6. '```' → logprob: -20.625123977661133
    7. ' ' → logprob: -20.750123977661133
    8. '998' → logprob: -21.000123977661133
    9. ' ' → logprob: -21.125123977661133
    10. '`' → logprob: -22.125123977661133

Token 556: ' *' (ID: 425)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12132741510868073
    2. 'return' → logprob: -2.6213274002075195
    3. '
' → logprob: -3.3713274002075195
    4. '<|end|>' → logprob: -5.3713274002075195
    5. ' return' → logprob: -6.7463274002075195
    6. '	return' → logprob: -7.2463274002075195
    7. '    
' → logprob: -8.12132740020752
    8. ':return' → logprob: -9.12132740020752
    9. '  ' → logprob: -9.87132740020752
    10. ' ' → logprob: -9.99632740020752

Token 557: ' FACT' (ID: 99053)
  Prédit: 'FACT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -0.0031613188330084085
    2. ' FACT' → logprob: -6.253161430358887
    3. 'fact' → logprob: -7.503161430358887
    4. 'FA' → logprob: -8.003161430358887
    5. '(' → logprob: -8.878161430358887
    6. 'FAC' → logprob: -9.003161430358887
    7. 'COM' → logprob: -10.128161430358887
    8. 'Fact' → logprob: -11.128161430358887
    9. 'com' → logprob: -12.253161430358887
    10. ' fact' → logprob: -12.253161430358887

Token 558: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0006714478367939591
    2. '_INV' → logprob: -7.50067138671875
    3. '[(' → logprob: -9.87567138671875
    4. '(H' → logprob: -10.62567138671875
    5. '   ' → logprob: -12.00067138671875
    6. '
' → logprob: -12.25067138671875
    7. '(' → logprob: -12.62567138671875
    8. '[
' → logprob: -12.62567138671875
    9. 'INV' → logprob: -12.75067138671875
    10. '_FACT' → logprob: -13.12567138671875

Token 559: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -0.000981243560090661
    2. '(H' → logprob: -7.500981330871582
    3. 'H' → logprob: -7.875981330871582
    4. ' HH' → logprob: -11.000981330871582
    5. '   ' → logprob: -11.500981330871582
    6. '(' → logprob: -11.625981330871582
    7. '
' → logprob: -12.250981330871582
    8. '[' → logprob: -13.625981330871582
    9. ' (' → logprob: -14.000981330871582
    10. 'HW' → logprob: -14.125981330871582

Token 560: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.026479337364435196
    2. '+' → logprob: -3.9014792442321777
    3. ']*' → logprob: -5.276479244232178
    4. '*' → logprob: -7.401479244232178
    5. ']
' → logprob: -9.276479721069336
    6. ' +' → logprob: -9.526479721069336
    7. ' ]' → logprob: -11.276479721069336
    8. ' *' → logprob: -12.651479721069336
    9. ' ' → logprob: -12.776479721069336
    10. '   ' → logprob: -13.026479721069336

Token 561: ' %' (ID: 1851)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.08212851732969284
    2. ' *' → logprob: -2.7071285247802734
    3. '%' → logprob: -4.457128524780273
    4. '[' → logprob: -8.582128524780273
    5. '   ' → logprob: -8.582128524780273
    6. ' ' → logprob: -10.207128524780273
    7. ' %' → logprob: -10.582128524780273
    8. '
' → logprob: -11.207128524780273
    9. ')' → logprob: -11.332128524780273
    10. '<|end|>' → logprob: -11.332128524780273

Token 562: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -7.517272024415433e-05
    2. ' mod' → logprob: -9.750075340270996
    3. '(mod' → logprob: -11.875075340270996
    4. 'FACT' → logprob: -12.125075340270996
    5. 'MOD' → logprob: -13.250075340270996
    6. 'fact' → logprob: -13.250075340270996
    7. '(' → logprob: -15.125075340270996
    8. 'W' → logprob: -15.750075340270996
    9. ' FACT' → logprob: -16.00007438659668
    10. '
' → logprob: -16.00007438659668

Token 563: ' *' (ID: 425)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.04333040490746498
    2. ' %' → logprob: -3.293330430984497
    3. '   ' → logprob: -6.043330192565918
    4. ')' → logprob: -6.543330192565918
    5. '*' → logprob: -7.293330192565918
    6. ' *' → logprob: -8.168330192565918
    7. ')%' → logprob: -8.918330192565918
    8. '<|end|>' → logprob: -9.043330192565918
    9. 'return' → logprob: -9.918330192565918
    10. '```' → logprob: -9.918330192565918

Token 564: ' FACT' (ID: 99053)
  Prédit: 'FACT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'FACT' → logprob: -1.0087516784551553e-05
    2. 'FA' → logprob: -12.00001049041748
    3. 'FAC' → logprob: -13.25001049041748
    4. ' FACT' → logprob: -13.50001049041748
    5. '
' → logprob: -14.75001049041748
    6. 'fact' → logprob: -15.87501049041748
    7. '```' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.500009536743164
    9. 'FAQ' → logprob: -17.750009536743164
    10. '`' → logprob: -17.875009536743164

Token 565: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.9054008084349334e-05
    2. 'WW' → logprob: -10.875039100646973
    3. '```' → logprob: -11.250039100646973
    4. '[next' → logprob: -13.375039100646973
    5. '`' → logprob: -13.500039100646973
    6. '   ' → logprob: -14.000039100646973
    7. '``' → logprob: -14.125039100646973
    8. '[
' → logprob: -14.375039100646973
    9. 'W' → logprob: -14.375039100646973
    10. ' [' → logprob: -15.375039100646973

Token 566: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -3.128163257315464e-07
    2. ' WW' → logprob: -15.5
    3. '[' → logprob: -18.5
    4. 'ww' → logprob: -19.0
    5. 'W' → logprob: -20.0
    6. '(' → logprob: -20.625
    7. '
' → logprob: -20.75
    8. '```' → logprob: -22.25
    9. '   ' → logprob: -22.625
    10. 'WO' → logprob: -23.5

Token 567: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.09449952840805054
    2. ')' → logprob: -2.5944995880126953
    3. ' %' → logprob: -5.094499588012695
    4. ')%' → logprob: -5.219499588012695
    5. ']' → logprob: -5.844499588012695
    6. ']%' → logprob: -6.969499588012695
    7. '%
' → logprob: -9.969499588012695
    8. ' ' → logprob: -10.344499588012695
    9. '%)' → logprob: -11.469499588012695
    10. '
' → logprob: -12.719499588012695

Token 568: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.002324864035472274
    2. ' %' → logprob: -6.502325057983398
    3. '
' → logprob: -8.127325057983398
    4. '%
' → logprob: -8.502325057983398
    5. '<|end|>' → logprob: -9.002325057983398
    6. ')' → logprob: -9.252325057983398
    7. ')%' → logprob: -10.127325057983398
    8. 'return' → logprob: -10.502325057983398
    9. '```' → logprob: -11.877325057983398
    10. '   ' → logprob: -12.377325057983398

Token 569: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -5.860340752406046e-05
    2. ' mod' → logprob: -9.7500581741333
    3. '(mod' → logprob: -15.3750581741333
    4. '
' → logprob: -17.125059127807617
    5. '	mod' → logprob: -18.625059127807617
    6. '998' → logprob: -20.000059127807617
    7. ' ' → logprob: -20.875059127807617
    8. 'moder' → logprob: -21.000059127807617
    9. '
' → logprob: -21.250059127807617
    10. '```' → logprob: -21.375059127807617

Token 570: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7032995223999023
    2. 'return' → logprob: -1.3282995223999023
    3. '   ' → logprob: -1.7032995223999023
    4. '    
' → logprob: -3.7032995223999023
    5. ' 
' → logprob: -4.078299522399902
    6. '  
' → logprob: -5.453299522399902
    7. ' return' → logprob: -5.578299522399902
    8. '	return' → logprob: -6.578299522399902
    9. '   
' → logprob: -6.578299522399902
    10. '<|end|>' → logprob: -6.578299522399902

Token 571: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3855828046798706
    2. '\n' → logprob: -1.3855828046798706
    3. 'return' → logprob: -3.76058292388916
    4. '<|end|>' → logprob: -4.76058292388916
    5. '	return' → logprob: -4.88558292388916
    6. ' return' → logprob: -4.88558292388916
    7. '    
' → logprob: -5.01058292388916
    8. '
' → logprob: -5.13558292388916
    9. '```' → logprob: -5.38558292388916
    10. '\' → logprob: -6.51058292388916

Token 572: ' RA' (ID: 46104)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40316057205200195
    2. '   ' → logprob: -1.278160572052002
    3. ' return' → logprob: -3.153160572052002
    4. '
' → logprob: -4.778160572052002
    5. '	return' → logprob: -6.528160572052002
    6. '    
' → logprob: -8.278160095214844
    7. ' 
' → logprob: -8.903160095214844
    8. ':return' → logprob: -9.528160095214844
    9. '```' → logprob: -9.528160095214844
    10. '  
' → logprob: -10.528160095214844

Token 573: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010342398309148848
    2. '<|end|>' → logprob: -9.500102996826172
    3. ')[' → logprob: -11.500102996826172
    4. '   ' → logprob: -12.625102996826172
    5. '=' → logprob: -12.625102996826172
    6. '][' → logprob: -13.000102996826172
    7. 'return' → logprob: -13.375102996826172
    8. '```' → logprob: -13.875102996826172
    9. '[
' → logprob: -14.375102996826172
    10. '[I' → logprob: -14.500102996826172

Token 574: 'WW' (ID: 22648)
  Prédit: 'HH'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'HH' → logprob: -5.3596853831550106e-05
    2. ' HH' → logprob: -10.250053405761719
    3. '[' → logprob: -11.750053405761719
    4. 'H' → logprob: -11.750053405761719
    5. '][' → logprob: -13.500053405761719
    6. '(H' → logprob: -14.500053405761719
    7. '-H' → logprob: -15.125053405761719
    8. 'HS' → logprob: -16.62505340576172
    9. '_H' → logprob: -16.87505340576172
    10. ']' → logprob: -16.87505340576172

Token 575: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0002858881198335439
    2. ']' → logprob: -8.375286102294922
    3. ']][' → logprob: -10.500286102294922
    4. '][]' → logprob: -11.125286102294922
    5. ' ][' → logprob: -12.000286102294922
    6. ')][' → logprob: -13.000286102294922
    7. '[' → logprob: -13.125286102294922
    8. '()][' → logprob: -14.500286102294922
    9. '[][' → logprob: -14.625286102294922
    10. '<|end|>' → logprob: -14.750286102294922

Token 576: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -1.1472419600977446e-06
    2. ' HH' → logprob: -13.750000953674316
    3. 'HW' → logprob: -18.500001907348633
    4. 'H' → logprob: -18.875001907348633
    5. 'hh' → logprob: -20.375001907348633
    6. 'WW' → logprob: -20.500001907348633
    7. 'HI' → logprob: -21.000001907348633
    8. 'HN' → logprob: -21.500001907348633
    9. 'HQ' → logprob: -22.375001907348633
    10. '
' → logprob: -22.375001907348633

Token 577: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0014722455525770783
    2. ']=' → logprob: -7.001472473144531
    3. '=' → logprob: -7.501472473144531
    4. '[' → logprob: -12.501472473144531
    5. ' ]' → logprob: -12.626472473144531
    6. ' =' → logprob: -14.626472473144531
    7. '][' → logprob: -14.751472473144531
    8. ']
' → logprob: -15.751472473144531
    9. ']==' → logprob: -16.37647247314453
    10. ')' → logprob: -16.50147247314453

Token 578: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009124171338044107
    2. ' =' → logprob: -7.000912189483643
    3. '=
' → logprob: -14.0009126663208
    4. '[' → logprob: -17.125911712646484
    5. ']=' → logprob: -17.625911712646484
    6. ']' → logprob: -17.875911712646484
    7. '=

' → logprob: -17.875911712646484
    8. ',' → logprob: -18.375911712646484
    9. ')=' → logprob: -18.500911712646484
    10. '=}' → logprob: -18.750911712646484

Token 579: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -4.584861744660884e-05
    2. ' RA' → logprob: -10.000045776367188
    3. '_RA' → logprob: -15.875045776367188
    4. '   ' → logprob: -16.875045776367188
    5. 'ra' → logprob: -17.000045776367188
    6. '
' → logprob: -17.250045776367188
    7. '(' → logprob: -17.625045776367188
    8. '(R' → logprob: -17.750045776367188
    9. ' ' → logprob: -18.250045776367188
    10. 'R' → logprob: -18.750045776367188

Token 580: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.822646693966817e-06
    2. 'HH' → logprob: -11.875007629394531
    3. '[i' → logprob: -14.375007629394531
    4. '[[' → logprob: -16.25000762939453
    5. '[
' → logprob: -17.12500762939453
    6. '[-' → logprob: -17.25000762939453
    7. '   ' → logprob: -17.25000762939453
    8. '```' → logprob: -17.25000762939453
    9. '\[' → logprob: -17.87500762939453
    10. '`' → logprob: -18.00000762939453

Token 581: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -4.127333340875339e-06
    2. ' HH' → logprob: -13.125003814697266
    3. 'HW' → logprob: -13.875003814697266
    4. 'WW' → logprob: -14.250003814697266
    5. 'H' → logprob: -14.750003814697266
    6. '[' → logprob: -17.375003814697266
    7. 'HT' → logprob: -17.625003814697266
    8. 'WH' → logprob: -17.750003814697266
    9. 'HI' → logprob: -17.875003814697266
    10. 'hh' → logprob: -18.750003814697266

Token 582: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0004941754741594195
    2. '[' → logprob: -7.625494003295898
    3. ']' → logprob: -12.250494003295898
    4. ' ][' → logprob: -13.875494003295898
    5. '"][' → logprob: -15.750494003295898
    6. ''][' → logprob: -16.0004940032959
    7. ')[' → logprob: -16.3754940032959
    8. '   ' → logprob: -17.2504940032959
    9. ']][' → logprob: -17.6254940032959
    10. '	' → logprob: -17.7504940032959

Token 583: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -9.088346359931165e-07
    2. ' WW' → logprob: -14.250000953674316
    3. 'W' → logprob: -16.375
    4. 'ww' → logprob: -17.75
    5. 'WO' → logprob: -18.0
    6. '[' → logprob: -18.125
    7. 'WS' → logprob: -18.5
    8. 'WH' → logprob: -18.875
    9. '```' → logprob: -19.125
    10. 'WT' → logprob: -19.375

Token 584: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2607959508895874
    2. '
' → logprob: -2.135796070098877
    3. ']' → logprob: -2.885796070098877
    4. '   ' → logprob: -3.385796070098877
    5. '<|end|>' → logprob: -4.760796070098877
    6. '%' → logprob: -5.260796070098877
    7. ')
' → logprob: -5.260796070098877
    8. 'return' → logprob: -7.010796070098877
    9. ')return' → logprob: -7.635796070098877
    10. ']
' → logprob: -7.885796070098877

Token 585: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03907689452171326
    2. 'return' → logprob: -3.289076805114746
    3. ' return' → logprob: -7.539076805114746
    4. '	return' → logprob: -8.414076805114746
    5. '    
' → logprob: -9.289076805114746
    6. '
' → logprob: -9.914076805114746
    7. ':return' → logprob: -10.039076805114746
    8. '```' → logprob: -10.664076805114746
    9. '<|end|>' → logprob: -11.164076805114746
    10. ' ' → logprob: -11.664076805114746

Token 586: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005249887239187956
    2. 'return' (adapté à ' return') → logprob: -5.255249977111816
    3. ' return' → logprob: -11.630249977111816
    4. '	return' → logprob: -12.130249977111816
    5. '    
' → logprob: -14.505249977111816
    6. ':return' → logprob: -15.005249977111816
    7. '<|end|>' → logprob: -15.380249977111816
    8. '  ' → logprob: -15.380249977111816
    9. '       ' → logprob: -16.1302490234375
    10. '```' → logprob: -16.1302490234375

Token 587: ' RA' (ID: 46104)
  Prédit: 'RA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RA' → logprob: -3.128163257315464e-07
    2. ' RA' → logprob: -15.375
    3. 'R' → logprob: -18.375
    4. '_RA' → logprob: -20.75
    5. '   ' → logprob: -21.5
    6. 'ra' → logprob: -21.625
    7. 'Ra' → logprob: -23.0
    8. 'RAM' → logprob: -23.0
    9. '
' → logprob: -23.25
    10. 'РА' → logprob: -23.75

Token 588: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002186307217925787
    2. '<|end|>' → logprob: -6.127186298370361
    3. '<|end|>' → logprob: -15.50218677520752
    4. ' ' → logprob: -15.75218677520752
    5. '
' → logprob: -15.87718677520752
    6. '```' → logprob: -15.87718677520752
    7. '[...,' → logprob: -16.252185821533203
    8. '[
' → logprob: -16.502185821533203
    9. '#' → logprob: -16.502185821533203
    10. ')' → logprob: -16.752185821533203

Token 589: 'HH' (ID: 35743)
  Prédit: 'HH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HH' → logprob: -3.128163257315464e-07
    2. ' HH' → logprob: -15.375
    3. 'H' → logprob: -18.25
    4. 'HT' → logprob: -18.875
    5. '
' → logprob: -19.625
    6. 'HI' → logprob: -20.375
    7. 'HL' → logprob: -20.625
    8. 'HQ' → logprob: -20.625
    9. 'HS' → logprob: -20.875
    10. 'HW' → logprob: -21.0

Token 590: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00014692598779220134
    2. '[' → logprob: -9.125146865844727
    3. ']' → logprob: -10.250146865844727
    4. ' ][' → logprob: -13.500146865844727
    5. '"][' → logprob: -14.625146865844727
    6. ''][' → logprob: -15.250146865844727
    7. '>[' → logprob: -16.000146865844727
    8. ']][' → logprob: -16.500146865844727
    9. '   ' → logprob: -16.750146865844727
    10. ')[' → logprob: -17.000146865844727

Token 591: 'WW' (ID: 22648)
  Prédit: 'WW'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WW' → logprob: -7.896309739408025e-07
    2. ' WW' → logprob: -14.250000953674316
    3. 'ww' → logprob: -18.0
    4. 'W' → logprob: -19.125
    5. 'WO' → logprob: -21.375
    6. '   ' → logprob: -21.5
    7. 'WWW' → logprob: -21.625
    8. '
' → logprob: -22.125
    9. 'HH' → logprob: -22.875
    10. ' ' → logprob: -22.875

Token 592: ']

' (ID: 3144)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 593: 'CA' (ID: 6781)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -1.1228688955307007
    2. 'answer' → logprob: -1.7478688955307007
    3. 'ans' → logprob: -1.8728688955307007
    4. '#' → logprob: -2.4978690147399902
    5. 'total' → logprob: -2.6228690147399902
    6. 'result' → logprob: -2.9978690147399902
    7. 'def' → logprob: -3.7478690147399902
    8. 'cnt' → logprob: -3.8728690147399902
    9. 'count' → logprob: -4.37286901473999
    10. 'ret' → logprob: -4.74786901473999

Token 594: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9354673624038696
    2. 'L' → logprob: -0.9354673624038696
    3. ' =' → logprob: -2.43546724319458
    4. 'N' → logprob: -2.68546724319458
    5. 'C' → logprob: -4.56046724319458
    6. 'S' → logprob: -4.68546724319458
    7. 'LC' → logprob: -4.68546724319458
    8. 'll' → logprob: -5.56046724319458
    9. 'l' → logprob: -5.68546724319458
    10. 'LL' → logprob: -5.68546724319458

Token 595: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2601892650127411
    2. '[]' → logprob: -2.0101892948150635
    3. '[[' → logprob: -2.6351892948150635
    4. '0' → logprob: -5.010189056396484
    5. '[A' → logprob: -5.385189056396484
    6. '[]
' → logprob: -5.510189056396484
    7. '[-' → logprob: -5.760189056396484
    8. '[len' → logprob: -6.510189056396484
    9. '[C' → logprob: -7.385189056396484
    10. '{}' → logprob: -7.510189056396484

Token 596: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0026222665328532457
    2. '[' → logprob: -6.002622127532959
    3. '[]' → logprob: -9.377622604370117
    4. '[-' → logprob: -10.627622604370117
    5. ' for' → logprob: -11.502622604370117
    6. '[
' → logprob: -11.627622604370117
    7. '0' → logprob: -12.377622604370117
    8. '[]
' → logprob: -12.627622604370117
    9. '[i' → logprob: -13.127622604370117
    10. '=' → logprob: -13.252622604370117

Token 597: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09057512879371643
    2. 'j' → logprob: -3.3405752182006836
    3. '_' → logprob: -4.090575218200684
    4. 'w' → logprob: -4.090575218200684
    5. '_i' → logprob: -5.465575218200684
    6. 'c' → logprob: -5.715575218200684
    7. 'h' → logprob: -5.840575218200684
    8. 'x' → logprob: -6.590575218200684
    9. ' i' → logprob: -6.840575218200684
    10. '_w' → logprob: -6.965575218200684

Token 598: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22549918293952942
    2. 'in' → logprob: -1.600499153137207
    3. 'range' → logprob: -9.975499153137207
    4. 'n' → logprob: -11.475499153137207
    5. ' ' → logprob: -11.475499153137207
    6. '0' → logprob: -12.975499153137207
    7. '  ' → logprob: -13.350499153137207
    8. '   ' → logprob: -13.350499153137207
    9. 'In' → logprob: -13.475499153137207
    10. '	in' → logprob: -13.600499153137207

Token 599: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026288547087460756
    2. ' range' → logprob: -8.250263214111328
    3. 'in' → logprob: -15.000263214111328
    4. ' ' → logprob: -15.500263214111328
    5. '(range' → logprob: -15.500263214111328
    6. 'A' → logprob: -15.625263214111328
    7. '  ' → logprob: -16.000263214111328
    8. '   ' → logprob: -16.000263214111328
    9. '	range' → logprob: -16.625263214111328
    10. '
' → logprob: -16.625263214111328

Token 600: '(H' (ID: 20904)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.381400465965271
    2. '(H' → logprob: -1.381400465965271
    3. '(' → logprob: -2.7564005851745605
    4. '(M' → logprob: -7.2564005851745605
    5. 'W' → logprob: -7.3814005851745605
    6. '(len' → logprob: -7.7564005851745605
    7. '21' → logprob: -8.381400108337402
    8. '20' → logprob: -8.506400108337402
    9. 'H' → logprob: -9.756400108337402
    10. '(C' → logprob: -10.256400108337402

Token 601: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3845384120941162
    2. 'range' → logprob: -1.6345384120941162
    3. 'in' → logprob: -2.634538412094116
    4. 'W' → logprob: -4.134538650512695
    5. '20' → logprob: -4.634538650512695
    6. '0' → logprob: -4.759538650512695
    7. '(W' → logprob: -4.759538650512695
    8. '(' → logprob: -6.134538650512695
    9. '(range' → logprob: -6.259538650512695
    10. ' range' → logprob: -6.759538650512695

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06271933019161224
    2. 'W' → logprob: -2.8127193450927734
    3. '2' → logprob: -8.062719345092773
    4. '(W' → logprob: -8.062719345092773
    5. '11' → logprob: -10.687719345092773
    6. '21' → logprob: -10.687719345092773
    7. 'H' → logprob: -10.937719345092773
    8. ' W' → logprob: -11.437719345092773
    9. ' ' → logprob: -11.562719345092773
    10. '3' → logprob: -12.312719345092773

Token 603: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007243356201797724
    2. '):' → logprob: -5.0072431564331055
    3. '+' → logprob: -7.6322431564331055
    4. ')' → logprob: -10.757243156433105
    5. '):
' → logprob: -11.132243156433105
    6. ']:
' → logprob: -12.632243156433105
    7. '   ' → logprob: -13.757243156433105
    8. ':
' → logprob: -14.257243156433105
    9. '):

' → logprob: -15.007243156433105
    10. '():
' → logprob: -15.132243156433105

Token 604: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023421334102749825
    2. 'CA' → logprob: -3.773421287536621
    3. ' ' → logprob: -9.523421287536621
    4. ' CA' → logprob: -9.898421287536621
    5. 'line' → logprob: -10.523421287536621
    6. 'row' → logprob: -11.648421287536621
    7. '  ' → logprob: -12.023421287536621
    8. 'ca' → logprob: -12.773421287536621
    9. '	' → logprob: -12.898421287536621
    10. '       ' → logprob: -13.898421287536621

Token 605: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' (adapté à ' CA') → logprob: -0.528515100479126
    2. '   ' → logprob: -0.903515100479126
    3. 'line' → logprob: -5.528514862060547
    4. 'row' → logprob: -7.153514862060547
    5. ' ' → logprob: -8.653514862060547
    6. ' CA' → logprob: -8.653514862060547
    7. 'ca' → logprob: -9.028514862060547
    8. 'C' → logprob: -10.778514862060547
    9. 'c' → logprob: -10.903514862060547
    10. '  ' → logprob: -11.153514862060547

Token 606: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0006047414499334991
    2. '.' → logprob: -7.750604629516602
    3. ' .' → logprob: -9.125604629516602
    4. 'append' → logprob: -11.000604629516602
    5. '   ' → logprob: -11.125604629516602
    6. '=' → logprob: -11.375604629516602
    7. '.ap' → logprob: -12.625604629516602
    8. '=[]
' → logprob: -13.125604629516602
    9. ' =' → logprob: -13.250604629516602
    10. 'a' → logprob: -13.625604629516602

Token 607: '([-' (ID: 99080)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.15520842373371124
    2. '[' → logprob: -2.1552083492279053
    3. '([-' → logprob: -4.030208587646484
    4. '([' → logprob: -4.655208587646484
    5. '0' → logprob: -7.780208587646484
    6. '[i' → logprob: -9.780208587646484
    7. '[]' → logprob: -10.030208587646484
    8. '(' → logprob: -10.280208587646484
    9. '   ' → logprob: -11.405208587646484
    10. '(-' → logprob: -11.780208587646484

Token 608: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6166903151315637e-05
    2. '-' → logprob: -11.250016212463379
    3. '2' → logprob: -13.625016212463379
    4. ' ' → logprob: -14.500016212463379
    5. '```' → logprob: -15.312516212463379
    6. '(' → logprob: -15.437516212463379
    7. '   ' → logprob: -15.750016212463379
    8. '
' → logprob: -15.875016212463379
    9. '(-' → logprob: -16.437515258789062
    10. '

' → logprob: -16.562515258789062

Token 609: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.1424170285463333
    2. '*' → logprob: -2.3924169540405273
    3. ' *' → logprob: -3.3924169540405273
    4. ']*' → logprob: -5.392416954040527
    5. ']*(' → logprob: -6.767416954040527
    6. ' ]' → logprob: -7.392416954040527
    7. '*(' → logprob: -7.517416954040527
    8. 'for' → logprob: -8.017416954040527
    9. ' for' → logprob: -8.017416954040527
    10. '])' → logprob: -9.767416954040527

Token 610: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1009245291352272
    2. ' *' → logprob: -2.350924491882324
    3. '*(' → logprob: -7.350924491882324
    4. ' for' → logprob: -10.600924491882324
    5. 'for' → logprob: -10.725924491882324
    6. ']' → logprob: -11.350924491882324
    7. '*[' → logprob: -11.975924491882324
    8. ')' → logprob: -12.100924491882324
    9. ']*' → logprob: -13.475924491882324
    10. ' ' → logprob: -13.725924491882324

Token 611: ' (' (ID: 350)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.012046286836266518
    2. '(H' → logprob: -4.7620463371276855
    3. '(' → logprob: -6.3870463371276855
    4. 'W' → logprob: -7.0120463371276855
    5. '21' → logprob: -8.762045860290527
    6. '(i' → logprob: -8.762045860290527
    7. ' (' → logprob: -9.887045860290527
    8. '((' → logprob: -10.262045860290527
    9. '1' → logprob: -10.387045860290527
    10. 'i' → logprob: -10.512045860290527

Token 612: 'W' (ID: 54)
  Prédit: 'W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.02139698527753353
    2. '(W' → logprob: -4.396397113800049
    3. 'H' → logprob: -5.146397113800049
    4. 'i' → logprob: -6.271397113800049
    5. '(H' → logprob: -7.521397113800049
    6. '(i' → logprob: -8.14639663696289
    7. ' W' → logprob: -9.64639663696289
    8. 'len' → logprob: -10.14639663696289
    9. 'min' → logprob: -10.39639663696289
    10. '(' → logprob: -11.02139663696289

Token 613: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0005753128207288682
    2. '+i' → logprob: -7.875575542449951
    3. '1' → logprob: -8.625575065612793
    4. ' +' → logprob: -11.125575065612793
    5. '+
' → logprob: -14.750575065612793
    6. '+C' → logprob: -16.00057601928711
    7. '[i' → logprob: -16.37557601928711
    8. '```' → logprob: -16.62557601928711
    9. '(i' → logprob: -16.87557601928711
    10. '+j' → logprob: -16.87557601928711

Token 614: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7252845029579476e-05
    2. '2' → logprob: -11.250027656555176
    3. ' ' → logprob: -11.625027656555176
    4. '   ' → logprob: -12.625027656555176
    5. '
' → logprob: -14.500027656555176
    6. '11' → logprob: -14.875027656555176
    7. '(' → logprob: -15.625027656555176
    8. '```' → logprob: -15.750027656555176
    9. '       ' → logprob: -16.25002670288086
    10. '           ' → logprob: -16.31252670288086

Token 615: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16046325862407684
    2. '))' → logprob: -1.9104632139205933
    3. '])' → logprob: -8.535463333129883
    4. ')
' → logprob: -10.660463333129883
    5. ' )' → logprob: -11.285463333129883
    6. '))
' → logprob: -13.160463333129883
    7. ')]' → logprob: -13.785463333129883
    8. ')

' → logprob: -14.035463333129883
    9. '})' → logprob: -14.410463333129883
    10. ')])' → logprob: -14.785463333129883

Token 616: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.3663626305060461e-05
    2. 'for' → logprob: -11.50001335144043
    3. '
' → logprob: -13.62501335144043
    4. '```' → logprob: -13.87501335144043
    5. '#' → logprob: -14.62501335144043
    6. 'from' → logprob: -15.25001335144043
    7. 'ndef' → logprob: -15.87501335144043
    8. '<|end|>' → logprob: -16.37501335144043
    9. 'CA' → logprob: -16.62501335144043
    10. '...' → logprob: -16.87501335144043

Token 617: ' calc' (ID: 25691)
  Prédit: ' calc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' calc' → logprob: -0.5541803240776062
    2. 'calc' → logprob: -2.429180383682251
    3. ' count' → logprob: -2.554180383682251
    4. ' comb' → logprob: -2.929180383682251
    5. ' ca' → logprob: -3.429180383682251
    6. ' solve' → logprob: -3.679180383682251
    7. ' col' → logprob: -4.554180145263672
    8. ' cal' → logprob: -4.554180145263672
    9. 'count' → logprob: -4.804180145263672
    10. 'C' → logprob: -5.054180145263672

Token 618: '(h' (ID: 8120)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.4529155194759369
    2. '_rect' → logprob: -2.4529154300689697
    3. '_area' → logprob: -2.9529154300689697
    4. '(' → logprob: -3.3279154300689697
    5. '_cells' → logprob: -3.8279154300689697
    6. '(a' → logprob: -4.202915668487549
    7. '(C' → logprob: -4.452915668487549
    8. '(l' → logprob: -4.452915668487549
    9. '_c' → logprob: -4.827915668487549
    10. '_C' → logprob: -4.952915668487549

Token 619: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00771582406014204
    2. ',w' → logprob: -5.007715702056885
    3. 'w' → logprob: -7.507715702056885
    4. ' ,' → logprob: -8.132716178894043
    5. ',W' → logprob: -9.132716178894043
    6. '_,' → logprob: -11.507716178894043
    7. 'W' → logprob: -12.007716178894043
    8. ',k' → logprob: -12.507716178894043
    9. ',
' → logprob: -12.632716178894043
    10. ',h' → logprob: -12.882716178894043

Token 620: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00020914296328555793
    2. ' w' → logprob: -8.625208854675293
    3. '
' → logprob: -12.250208854675293
    4. 'k' → logprob: -12.500208854675293
    5. 'l' → logprob: -12.500208854675293
    6. ' ' → logprob: -12.625208854675293
    7. '```' → logprob: -13.250208854675293
    8. 'v' → logprob: -13.375208854675293
    9. '   ' → logprob: -13.375208854675293
    10. 'c' → logprob: -14.187708854675293

Token 621: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006110805552452803
    2. '):
' → logprob: -5.131110668182373
    3. ',' → logprob: -9.256111145019531
    4. ')' → logprob: -9.506111145019531
    5. '):
' → logprob: -11.631111145019531
    6. ' ):' → logprob: -13.381111145019531
    7. '   ' → logprob: -14.131111145019531
    8. ':' → logprob: -14.631111145019531
    9. '):

' → logprob: -15.506111145019531
    10. ')：' → logprob: -16.25611114501953

Token 622: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08509887754917145
    2. 'if' → logprob: -2.5850989818573
    3. ' if' → logprob: -5.085098743438721
    4. '	if' → logprob: -14.460099220275879
    5. ' ' → logprob: -14.710099220275879
    6. '  ' → logprob: -15.085099220275879
    7. '    
' → logprob: -16.710098266601562
    8. '   ' → logprob: -16.960098266601562
    9. 'global' → logprob: -17.210098266601562
    10. '```' → logprob: -17.210098266601562

Token 623: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00043448375072330236
    2. '   ' → logprob: -7.750434398651123
    3. ' if' → logprob: -12.625434875488281
    4. 'for' → logprob: -14.750434875488281
    5. 'global' → logprob: -16.00043487548828
    6. '#' → logprob: -16.62543487548828
    7. '
' → logprob: -18.12543487548828
    8. '	if' → logprob: -18.25043487548828
    9. 'res' → logprob: -18.37543487548828
    10. '```' → logprob: -18.50043487548828

Token 624: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.003916799556463957
    2. 'h' → logprob: -6.1289167404174805
    3. ' CA' → logprob: -6.3789167404174805
    4. ' h' → logprob: -10.50391674041748
    5. '   ' → logprob: -12.62891674041748
    6. '0' → logprob: -13.50391674041748
    7. ' ' → logprob: -15.12891674041748
    8. 'ca' → logprob: -15.37891674041748
    9. 'w' → logprob: -15.87891674041748
    10. 'not' → logprob: -16.003917694091797

Token 625: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.9361264946837764e-07
    2. 'h' → logprob: -16.0
    3. '[w' → logprob: -17.75
    4. '[' → logprob: -18.25
    5. '```' → logprob: -19.0
    6. '<h' → logprob: -19.125
    7. '   ' → logprob: -19.375
    8. '[int' → logprob: -19.625
    9. '][' → logprob: -20.25
    10. '[i' → logprob: -20.375

Token 626: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -1.5570885807392187e-05
    2. ' ][' → logprob: -12.125015258789062
    3. ']' → logprob: -12.500015258789062
    4. '   ' → logprob: -13.375015258789062
    5. '[w' → logprob: -13.500015258789062
    6. '[h' → logprob: -13.750015258789062
    7. '[' → logprob: -14.250015258789062
    8. ')[' → logprob: -15.125015258789062
    9. '
' → logprob: -15.625015258789062
    10. ')][' → logprob: -15.750015258789062

Token 627: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.2664456789934775e-06
    2. ' w' → logprob: -13.625000953674316
    3. 'W' → logprob: -19.125001907348633
    4. '	w' → logprob: -19.625001907348633
    5. '[w' → logprob: -20.125001907348633
    6. '<w' → logprob: -20.750001907348633
    7. '   ' → logprob: -21.125001907348633
    8. '
' → logprob: -21.500001907348633
    9. ' ' → logprob: -21.500001907348633
    10. '>w' → logprob: -22.000001907348633

Token 628: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.024979300796985626
    2. ']!=' → logprob: -4.149979114532471
    3. '!=' → logprob: -4.774979114532471
    4. ' !=' → logprob: -7.774979114532471
    5. '!=-' → logprob: -10.899979591369629
    6. ')' → logprob: -11.649979591369629
    7. ')!=' → logprob: -11.649979591369629
    8. ' ]' → logprob: -12.399979591369629
    9. '   ' → logprob: -12.899979591369629
    10. '[' → logprob: -13.524979591369629

Token 629: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.023882489651441574
    2. ' !=' → logprob: -3.7738823890686035
    3. '!=-' → logprob: -7.3988823890686035
    4. '==' → logprob: -11.398882865905762
    5. '()!=' → logprob: -12.523882865905762
    6. ')!=' → logprob: -12.648882865905762
    7. '   ' → logprob: -13.023882865905762
    8. ']!=' → logprob: -13.273882865905762
    9. ')' → logprob: -13.523882865905762
    10. '=' → logprob: -14.523882865905762

Token 630: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.0206720617134124e-05
    2. ' -' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.625009536743164
    4. ' ' → logprob: -20.500009536743164
    5. '−' → logprob: -21.125009536743164
    6. '  ' → logprob: -21.500009536743164
    7. '[-' → logprob: -22.375009536743164
    8. '
' → logprob: -22.500009536743164
    9. '(-' → logprob: -22.625009536743164
    10. '-n' → logprob: -22.625009536743164

Token 631: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010334034450352192
    2. '-' → logprob: -6.876033306121826
    3. ' -' → logprob: -14.501033782958984
    4. ' ' → logprob: -16.376033782958984
    5. '   ' → logprob: -17.626033782958984
    6. '```' → logprob: -17.751033782958984
    7. '
' → logprob: -19.001033782958984
    8. '(-' → logprob: -19.751033782958984
    9. '

' → logprob: -20.376033782958984
    10. '  ' → logprob: -20.376033782958984

Token 632: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09568917751312256
    2. ':
' → logprob: -2.470689296722412
    3. '   ' → logprob: -5.720689296722412
    4. '       ' → logprob: -6.095689296722412
    5. ':return' → logprob: -7.845689296722412
    6. '):
' → logprob: -8.220688819885254
    7. '):' → logprob: -8.970688819885254
    8. '<|end|>' → logprob: -9.345688819885254
    9. ' and' → logprob: -9.470688819885254
    10. ')' → logprob: -9.470688819885254

Token 633: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004109034780412912
    2. '   ' → logprob: -5.629108905792236
    3. 'return' → logprob: -8.004109382629395
    4. ' return' → logprob: -8.879109382629395
    5. '      ' → logprob: -12.129109382629395
    6. '
' → logprob: -12.129109382629395
    7. '    ' → logprob: -12.504109382629395
    8. 'CA' → logprob: -12.629109382629395
    9. '    
' → logprob: -12.754109382629395
    10. '        
' → logprob: -12.879109382629395

Token 634: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.08246974647045135
    2. '       ' → logprob: -2.5824697017669678
    3. ' return' → logprob: -5.832469940185547
    4. '   ' → logprob: -7.457469940185547
    5. '	return' → logprob: -9.707469940185547
    6. '
' → logprob: -13.457469940185547
    7. '```' → logprob: -13.957469940185547
    8. ':return' → logprob: -14.082469940185547
    9. '{return' → logprob: -14.332469940185547
    10. '           ' → logprob: -15.082469940185547

Token 635: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -9.615255839889869e-05
    2. ' CA' → logprob: -9.250096321105957
    3. 'C' → logprob: -18.87509536743164
    4. '_CA' → logprob: -20.62509536743164
    5. 'Ca' → logprob: -21.37509536743164
    6. '   ' → logprob: -21.50009536743164
    7. ' ' → logprob: -21.62509536743164
    8. 'ca' → logprob: -22.12509536743164
    9. 'CAE' → logprob: -22.87509536743164
    10. '
' → logprob: -23.62509536743164

Token 636: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -4.842555426876061e-06
    2. 'h' → logprob: -12.250004768371582
    3. '```' → logprob: -17.7500057220459
    4. '[' → logprob: -18.5000057220459
    5. '	h' → logprob: -18.8750057220459
    6. '
' → logprob: -19.1250057220459
    7. '<h' → logprob: -19.6250057220459
    8. '[w' → logprob: -20.1250057220459
    9. '[
' → logprob: -20.2500057220459
    10. '[c' → logprob: -20.3750057220459

Token 637: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0012957158032804728
    2. '[h' → logprob: -6.751295566558838
    3. 'h' → logprob: -10.001296043395996
    4. '[w' → logprob: -10.626296043395996
    5. ']' → logprob: -10.876296043395996
    6. ' ][' → logprob: -11.501296043395996
    7. '   ' → logprob: -11.751296043395996
    8. '[' → logprob: -12.501296043395996
    9. ')[' → logprob: -13.001296043395996
    10. 'w' → logprob: -13.376296043395996

Token 638: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.088346359931165e-07
    2. ' w' → logprob: -14.375000953674316
    3. '[w' → logprob: -16.375
    4. 'h' → logprob: -16.875
    5. '```' → logprob: -17.0
    6. '
' → logprob: -17.0
    7. 'W' → logprob: -17.875
    8. '	w' → logprob: -18.75
    9. '(w' → logprob: -19.125
    10. ''w' → logprob: -19.25

Token 639: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.31330040097236633
    2. ']
' → logprob: -1.313300371170044
    3. ')' → logprob: -10.938300132751465
    4. '   ' → logprob: -11.813300132751465
    5. ']

' → logprob: -11.813300132751465
    6. ']
' → logprob: -12.313300132751465
    7. ')
' → logprob: -13.813300132751465
    8. ' ' → logprob: -16.06330108642578
    9. ']()
' → logprob: -16.56330108642578
    10. 'return' → logprob: -16.68830108642578

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003671448677778244
    2. ' if' → logprob: -6.253671646118164
    3. 'if' → logprob: -6.378671646118164
    4. '    
' → logprob: -11.003671646118164
    5. '```' → logprob: -11.753671646118164
    6. 'CA' → logprob: -12.003671646118164
    7. ' CA' → logprob: -12.253671646118164
    8. '
' → logprob: -12.378671646118164
    9. ' ' → logprob: -13.378671646118164
    10. '  ' → logprob: -14.003671646118164

Token 641: ' RET' (ID: 36363)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.05607466772198677
    2. 'if' → logprob: -3.556074619293213
    3. 'ret' → logprob: -4.056074619293213
    4. 'ans' → logprob: -5.056074619293213
    5. 'result' → logprob: -6.681074619293213
    6. 'r' → logprob: -7.431074619293213
    7. 's' → logprob: -8.681075096130371
    8. 'val' → logprob: -9.806075096130371
    9. 'total' → logprob: -9.931075096130371
    10. '   ' → logprob: -9.931075096130371

Token 642: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1797790825366974
    2. ' =' → logprob: -1.804779052734375
    3. ' ' → logprob: -11.429779052734375
    4. '=
' → logprob: -11.679779052734375
    5. '   ' → logprob: -12.804779052734375
    6. ',' → logprob: -13.304779052734375
    7. '  ' → logprob: -13.304779052734375
    8. ' =
' → logprob: -13.429779052734375
    9. '=[]
' → logprob: -13.679779052734375
    10. 's' → logprob: -14.304779052734375

Token 643: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.015520655550062656
    2. ' ' → logprob: -4.8905205726623535
    3. 'rect' → logprob: -5.0155205726623535
    4. '1' → logprob: -7.3905205726623535
    5. ' rect' → logprob: -7.8905205726623535
    6. '(' → logprob: -9.640521049499512
    7. '(rect' → logprob: -10.265521049499512
    8. 'mod' → logprob: -10.578021049499512
    9. ' (' → logprob: -11.015521049499512
    10. 'pow' → logprob: -11.140521049499512

Token 644: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014953113161027431
    2. 'rect' → logprob: -4.264953136444092
    3. '1' → logprob: -8.764952659606934
    4. 'calc' → logprob: -8.764952659606934
    5. '(' → logprob: -9.014952659606934
    6. '(rect' → logprob: -9.389952659606934
    7. 'mod' → logprob: -10.014952659606934
    8. ' ' → logprob: -10.389952659606934
    9. 'A' → logprob: -10.702452659606934
    10. '((' → logprob: -10.702452659606934

Token 645: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00036667886888608336
    2. '<|end|>' → logprob: -8.6253662109375
    3. 'for' → logprob: -9.5003662109375
    4. ' for' → logprob: -9.6253662109375
    5. '    
' → logprob: -10.2503662109375
    6. '
' → logprob: -12.5003662109375
    7. '<|end|>' → logprob: -13.5003662109375
    8. '```' → logprob: -13.8753662109375
    9. 'if' → logprob: -14.0003662109375
    10. ' if' → logprob: -14.3753662109375

Token 646: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004021645523607731
    2. 'for' → logprob: -5.754021644592285
    3. ' for' → logprob: -7.379021644592285
    4. '    
' → logprob: -9.254021644592285
    5. 'if' → logprob: -9.379021644592285
    6. '
' → logprob: -11.879021644592285
    7. '  ' → logprob: -12.004021644592285
    8. ' if' → logprob: -12.129021644592285
    9. 'return' → logprob: -12.129021644592285
    10. '<|end|>' → logprob: -12.504021644592285

Token 647: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18144023418426514
    2. 'for' (adapté à ' for') → logprob: -1.8064402341842651
    3. ' for' → logprob: -6.681440353393555
    4. 'if' → logprob: -7.806440353393555
    5. '
' → logprob: -11.806440353393555
    6. '    
' → logprob: -11.806440353393555
    7. '	for' → logprob: -12.306440353393555
    8. '#' → logprob: -12.556440353393555
    9. ' if' → logprob: -13.056440353393555
    10. '```' → logprob: -13.306440353393555

Token 648: ' bh' (ID: 11387)
  Prédit: 'hh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'hh' → logprob: -0.813481867313385
    2. 'i' → logprob: -1.0634818077087402
    3. 'nh' → logprob: -2.5634818077087402
    4. 'x' → logprob: -3.5634818077087402
    5. 'h' → logprob: -3.6884818077087402
    6. 'dh' → logprob: -4.18848180770874
    7. 'k' → logprob: -4.68848180770874
    8. 'sh' → logprob: -4.93848180770874
    9. 'H' → logprob: -5.18848180770874
    10. 'a' → logprob: -5.68848180770874

Token 649: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2015664428472519
    2. 'in' → logprob: -1.701566457748413
    3. ',' → logprob: -9.951566696166992
    4. ' ' → logprob: -10.326566696166992
    5. 'b' → logprob: -11.076566696166992
    6. 'range' → logprob: -11.076566696166992
    7. '0' → logprob: -11.826566696166992
    8. '   ' → logprob: -12.076566696166992
    9. 'i' → logprob: -12.201566696166992
    10. '1' → logprob: -12.451566696166992

Token 650: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0033317103516310453
    2. ' range' → logprob: -6.003331661224365
    3. 'in' → logprob: -7.128331661224365
    4. ' in' → logprob: -10.628332138061523
    5. '
' → logprob: -11.128332138061523
    6. '   ' → logprob: -12.628332138061523
    7. 'r' → logprob: -13.378332138061523
    8. '```' → logprob: -13.503332138061523
    9. ')' → logprob: -13.628332138061523
    10. ' ' → logprob: -13.753332138061523

Token 651: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.3208346366882324
    2. 'h' → logprob: -1.3208346366882324
    3. '(' → logprob: -5.320834636688232
    4. '1' → logprob: -5.945834636688232
    5. '0' → logprob: -10.82083511352539
    6. '[h' → logprob: -12.57083511352539
    7. '(H' → logprob: -12.94583511352539
    8. ' h' → logprob: -13.19583511352539
    9. '	h' → logprob: -13.19583511352539
    10. '(max' → logprob: -13.57083511352539

Token 652: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.011116082780063152
    2. ' +' → logprob: -4.511116027832031
    3. '
' → logprob: -10.886116027832031
    4. '+h' → logprob: -11.011116027832031
    5. '   ' → logprob: -11.511116027832031
    6. '):' → logprob: -11.636116027832031
    7. '):
' → logprob: -11.636116027832031
    8. ' ' → logprob: -14.261116027832031
    9. '+
' → logprob: -14.261116027832031
    10. ',' → logprob: -14.261116027832031

Token 653: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25785407423973083
    2. 'h' → logprob: -1.7578541040420532
    3. 'bh' → logprob: -3.5078539848327637
    4. 'w' → logprob: -4.007853984832764
    5. 'H' → logprob: -6.507853984832764
    6. '+' → logprob: -7.007853984832764
    7. '0' → logprob: -7.132853984832764
    8. '
' → logprob: -7.132853984832764
    9. 'BH' → logprob: -7.382853984832764
    10. 'Bh' → logprob: -7.507853984832764

Token 654: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.161393404006958
    2. '):' → logprob: -1.911393404006958
    3. ',' → logprob: -7.661393165588379
    4. '   ' → logprob: -7.786393165588379
    5. ',h' → logprob: -9.536393165588379
    6. '):
' → logprob: -9.661393165588379
    7. '```' → logprob: -9.911393165588379
    8. '       ' → logprob: -10.911393165588379
    9. ')' → logprob: -10.911393165588379
    10. '(h' → logprob: -11.536393165588379

Token 655: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39361071586608887
    2. ' for' → logprob: -1.2686107158660889
    3. 'for' → logprob: -3.143610715866089
    4. '   ' → logprob: -7.018610954284668
    5. ',' → logprob: -9.893610954284668
    6. '	for' → logprob: -10.018610954284668
    7. '
' → logprob: -10.893610954284668
    8. ' ' → logprob: -12.143610954284668
    9. '```' → logprob: -12.643610954284668
    10. '        
' → logprob: -13.018610954284668

Token 656: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01066752802580595
    2. ' for' → logprob: -4.760667324066162
    3. '       ' → logprob: -6.760667324066162
    4. 'bw' → logprob: -7.385667324066162
    5. '           ' → logprob: -9.13566780090332
    6. '   ' → logprob: -9.26066780090332
    7. '```' → logprob: -10.63566780090332
    8. 'if' → logprob: -10.76066780090332
    9. '	for' → logprob: -12.38566780090332
    10. '               ' → logprob: -12.38566780090332

Token 657: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -5.080963092041202e-06
    2. ' bw' → logprob: -12.500004768371582
    3. '
' → logprob: -14.125004768371582
    4. '	bw' → logprob: -15.500004768371582
    5. '   ' → logprob: -16.1250057220459
    6. '```' → logprob: -16.8750057220459
    7. ' ' → logprob: -17.1250057220459
    8. '`' → logprob: -17.3750057220459
    9. '_bw' → logprob: -17.3750057220459
    10. '

' → logprob: -19.0000057220459

Token 658: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.34886568784713745
    2. 'in' → logprob: -1.2238657474517822
    3. 'range' → logprob: -7.973865509033203
    4. '(' → logprob: -10.598865509033203
    5. '(range' → logprob: -11.223865509033203
    6. ' range' → logprob: -11.223865509033203
    7. 'for' → logprob: -11.598865509033203
    8. ' ' → logprob: -12.598865509033203
    9. '```' → logprob: -13.098865509033203
    10. 'b' → logprob: -13.348865509033203

Token 659: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00894745159894228
    2. ' range' → logprob: -4.758947372436523
    3. '(range' → logprob: -8.008947372436523
    4. 'for' → logprob: -15.508947372436523
    5. 'ran' → logprob: -17.258947372436523
    6. '(b' → logprob: -17.508947372436523
    7. '(' → logprob: -17.633947372436523
    8. ' in' → logprob: -17.758947372436523
    9. 'b' → logprob: -18.008947372436523
    10. 'rang' → logprob: -18.008947372436523

Token 660: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.875000953674316
    3. 'w' → logprob: -14.875000953674316
    4. ' (' → logprob: -15.500000953674316
    5. '
' → logprob: -16.500001907348633
    6. '(b' → logprob: -16.875001907348633
    7. '(W' → logprob: -17.250001907348633
    8. '(
' → logprob: -18.000001907348633
    9. '   ' → logprob: -18.125001907348633
    10. '[w' → logprob: -18.250001907348633

Token 661: '+' (ID: 10)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.202618807554245
    2. '+' → logprob: -1.7026188373565674
    3. '+b' → logprob: -7.202618598937988
    4. ' +' → logprob: -8.952618598937988
    5. '(' → logprob: -10.077618598937988
    6. '(w' → logprob: -10.077618598937988
    7. '	bw' → logprob: -10.202618598937988
    8. 'bw' → logprob: -10.452618598937988
    9. ' (' → logprob: -10.702618598937988
    10. '   ' → logprob: -10.827618598937988

Token 662: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001319404342211783
    2. 'bw' → logprob: -6.751319408416748
    3. '(b' → logprob: -9.62631893157959
    4. 'b' → logprob: -10.25131893157959
    5. ' bw' → logprob: -11.50131893157959
    6. '(' → logprob: -11.62631893157959
    7. '
' → logprob: -12.12631893157959
    8. ' ' → logprob: -12.25131893157959
    9. '(w' → logprob: -12.62631893157959
    10. '	bw' → logprob: -12.87631893157959

Token 663: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.055363669991493225
    2. '):' → logprob: -2.930363655090332
    3. '():
' → logprob: -8.305363655090332
    4. '       ' → logprob: -9.430363655090332
    5. '```' → logprob: -10.680363655090332
    6. '):
' → logprob: -10.930363655090332
    7. '           ' → logprob: -10.930363655090332
    8. ':' → logprob: -11.305363655090332
    9. ':
' → logprob: -11.305363655090332
    10. '()):
' → logprob: -11.430363655090332

Token 664: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09801560640335083
    2. '       ' → logprob: -2.598015546798706
    3. 'ret' → logprob: -4.598015785217285
    4. 'RET' → logprob: -5.598015785217285
    5. 'if' → logprob: -5.723015785217285
    6. 'x' → logprob: -8.223015785217285
    7. 'for' → logprob: -8.848015785217285
    8. 'c' → logprob: -8.848015785217285
    9. '        
' → logprob: -9.223015785217285
    10. 's' → logprob: -9.223015785217285

Token 665: ' v' (ID: 323)
  Prédit: 'RET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'RET' → logprob: -0.3673495948314667
    2. '               ' → logprob: -1.867349624633789
    3. 'if' → logprob: -2.367349624633789
    4. 'ret' → logprob: -4.867349624633789
    5. 'cnt' → logprob: -4.992349624633789
    6. '           ' → logprob: -4.992349624633789
    7. 'tmp' → logprob: -5.367349624633789
    8. 'val' → logprob: -5.492349624633789
    9. ' RET' → logprob: -5.492349624633789
    10. 'count' → logprob: -5.867349624633789

Token 666: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47410446405410767
    2. '=' → logprob: -0.9741044640541077
    3. '+=' → logprob: -11.599104881286621
    4. 'v' → logprob: -12.349104881286621
    5. '=v' → logprob: -12.599104881286621
    6. '   ' → logprob: -12.974104881286621
    7. '=
' → logprob: -13.349104881286621
    8. ' +=' → logprob: -13.599104881286621
    9. '=int' → logprob: -14.099104881286621
    10. 'alue' → logprob: -14.474104881286621

Token 667: ' rect' (ID: 13107)
  Prédit: 'rect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rect' → logprob: -0.5628287196159363
    2. 'Com' → logprob: -1.312828779220581
    3. 'calc' → logprob: -1.937828779220581
    4. '(' → logprob: -5.437828540802002
    5. ' calc' → logprob: -5.812828540802002
    6. ' rect' → logprob: -5.937828540802002
    7. 'COM' → logprob: -6.437828540802002
    8. '(rect' → logprob: -6.687828540802002
    9. ' Com' → logprob: -6.937828540802002
    10. '(calc' → logprob: -7.187828540802002

Token 668: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001831565605243668
    2. '(h' → logprob: -8.62518310546875
    3. '(' → logprob: -13.25018310546875
    4. '(B' → logprob: -13.87518310546875
    5. '(H' → logprob: -14.25018310546875
    6. 'bh' → logprob: -15.87518310546875
    7. '(bl' → logprob: -17.50018310546875
    8. '   ' → logprob: -18.00018310546875
    9. '(
' → logprob: -18.12518310546875
    10. '(bp' → logprob: -18.12518310546875

Token 669: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.5048530030981055e-06
    2. '(h' → logprob: -14.625001907348633
    3. '[h' → logprob: -14.875001907348633
    4. ' h' → logprob: -14.875001907348633
    5. ',h' → logprob: -16.250001907348633
    6. '
' → logprob: -16.500001907348633
    7. '<h' → logprob: -16.875001907348633
    8. '	h' → logprob: -16.875001907348633
    9. '```' → logprob: -18.000001907348633
    10. '[' → logprob: -18.250001907348633

Token 670: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02705046907067299
    2. ',b' → logprob: -3.652050495147705
    3. ',w' → logprob: -7.527050495147705
    4. ' ,' → logprob: -8.777050018310547
    5. ',
' → logprob: -10.402050018310547
    6. '   ' → logprob: -11.152050018310547
    7. 'bw' → logprob: -13.027050018310547
    8. '       ' → logprob: -13.402050018310547
    9. ' ' → logprob: -13.652050018310547
    10. '
' → logprob: -13.902050018310547

Token 671: ' w' (ID: 286)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bw' → logprob: -3.91732100979425e-05
    2. ' bw' → logprob: -10.250039100646973
    3. 'b' → logprob: -13.625039100646973
    4. ' ' → logprob: -13.750039100646973
    5. '   ' → logprob: -13.875039100646973
    6. 'w' → logprob: -15.500039100646973
    7. '	bw' → logprob: -16.37504005432129
    8. '
' → logprob: -16.37504005432129
    9. '    ' → logprob: -17.12504005432129
    10. '  ' → logprob: -17.25004005432129

Token 672: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.5399886965751648
    2. 'w' → logprob: -1.5399887561798096
    3. '-w' → logprob: -1.7899887561798096
    4. '-' → logprob: -4.0399885177612305
    5. ')' → logprob: -4.2899885177612305
    6. ' -' → logprob: -5.7899885177612305
    7. 'b' → logprob: -6.7899885177612305
    8. '-s' → logprob: -8.78998851776123
    9. '-aw' → logprob: -9.66498851776123
    10. ')
' → logprob: -10.53998851776123

Token 673: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0003136552404612303
    2. 'bw' → logprob: -8.625313758850098
    3. 'b' → logprob: -9.250313758850098
    4. ' bw' → logprob: -11.125313758850098
    5. '
' → logprob: -11.750313758850098
    6. '```' → logprob: -12.500313758850098
    7. ' w' → logprob: -12.875313758850098
    8. '1' → logprob: -13.375313758850098
    9. '   ' → logprob: -13.875313758850098
    10. '	bw' → logprob: -14.375313758850098

Token 674: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.983476436696947e-05
    2. ')
' → logprob: -10.000089645385742
    3. ')*' → logprob: -10.250089645385742
    4. ' )' → logprob: -12.500089645385742
    5. '   ' → logprob: -14.375089645385742
    6. '")' → logprob: -14.375089645385742
    7. '))' → logprob: -14.500089645385742
    8. '）' → logprob: -14.500089645385742
    9. '')' → logprob: -14.750089645385742
    10. '-' → logprob: -14.875089645385742

Token 675: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.12315169721841812
    2. '*' → logprob: -2.6231517791748047
    3. '
' → logprob: -4.123151779174805
    4. ')' → logprob: -4.873151779174805
    5. 'v' → logprob: -4.873151779174805
    6. '           ' → logprob: -4.998151779174805
    7. '*v' → logprob: -5.748151779174805
    8. '   ' → logprob: -7.623151779174805
    9. '```' → logprob: -8.373151779174805
    10. ')
' → logprob: -8.623151779174805

Token 676: ' rect' (ID: 13107)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.2910480201244354
    2. 'rect' → logprob: -1.4160480499267578
    3. 'calc' → logprob: -4.791048049926758
    4. 'COM' → logprob: -7.166048049926758
    5. 'com' → logprob: -8.416048049926758
    6. 'pow' → logprob: -8.916048049926758
    7. 'Calc' → logprob: -8.916048049926758
    8. 'comb' → logprob: -9.916048049926758
    9. 'Comb' → logprob: -10.041048049926758
    10. ' Com' → logprob: -10.791048049926758

Token 677: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -11.250021934509277
    3. ' (' → logprob: -12.750021934509277
    4. 'h' → logprob: -12.750021934509277
    5. '(H' → logprob: -12.750021934509277
    6. '((' → logprob: -16.125022888183594
    7. '[h' → logprob: -16.500022888183594
    8. '(w' → logprob: -16.625022888183594
    9. '```' → logprob: -16.875022888183594
    10. ' h' → logprob: -17.625022888183594

Token 678: '-b' (ID: 2118)
  Prédit: '-b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-b' → logprob: -0.05569375306367874
    2. ' -' → logprob: -3.3056938648223877
    3. '-' → logprob: -4.055693626403809
    4. '-h' → logprob: -9.055693626403809
    5. '-B' → logprob: -10.430693626403809
    6. 'b' → logprob: -10.930693626403809
    7. '-
' → logprob: -13.180693626403809
    8. ',' → logprob: -13.680693626403809
    9. '-bi' → logprob: -14.180693626403809
    10. ',b' → logprob: -14.305693626403809

Token 679: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.20267175137996674
    2. 'bh' → logprob: -1.702671766281128
    3. ' bh' → logprob: -6.702671527862549
    4. 'b' → logprob: -11.827672004699707
    5. ' ' → logprob: -12.327672004699707
    6. '
' → logprob: -12.452672004699707
    7. '```' → logprob: -12.827672004699707
    8. 'Bh' → logprob: -13.077672004699707
    9. '-b' → logprob: -13.327672004699707
    10. '   ' → logprob: -13.702672004699707

Token 680: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009028499014675617
    2. ',b' → logprob: -4.759028434753418
    3. ',w' → logprob: -8.509028434753418
    4. ' ,' → logprob: -8.634028434753418
    5. ',
' → logprob: -11.134028434753418
    6. 'bw' → logprob: -11.759028434753418
    7. 'w' → logprob: -12.509028434753418
    8. ' bw' → logprob: -13.134028434753418
    9. '	bw' → logprob: -13.509028434753418
    10. '```' → logprob: -14.009028434753418

Token 681: ' bw' (ID: 20824)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -0.00010449681576574221
    2. 'b' → logprob: -9.750104904174805
    3. ' bw' → logprob: -10.000104904174805
    4. '	bw' → logprob: -14.875104904174805
    5. '   ' → logprob: -15.875104904174805
    6. 'bm' → logprob: -16.500104904174805
    7. ' ' → logprob: -17.250104904174805
    8. 'w' → logprob: -17.500104904174805
    9. '
' → logprob: -18.125104904174805
    10. '_bw' → logprob: -18.750104904174805

Token 682: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006588232354260981
    2. ')%' → logprob: -7.375658988952637
    3. '%' → logprob: -10.750658988952637
    4. ')
' → logprob: -12.500658988952637
    5. ' )' → logprob: -13.750658988952637
    6. '   ' → logprob: -14.000658988952637
    7. '%)' → logprob: -14.125658988952637
    8. '[' → logprob: -14.250658988952637
    9. '       ' → logprob: -14.750658988952637
    10. '))' → logprob: -15.375658988952637

Token 683: ' *' (ID: 425)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.846400260925293
    2. '%' → logprob: -0.971400260925293
    3. '           ' → logprob: -2.346400260925293
    4. ' *' → logprob: -2.846400260925293
    5. ')' → logprob: -3.596400260925293
    6. '*' → logprob: -5.096400260925293
    7. 'v' → logprob: -6.846400260925293
    8. '*v' → logprob: -6.971400260925293
    9. '
' → logprob: -7.096400260925293
    10. '                   ' → logprob: -7.346400260925293

Token 684: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.003371392609551549
    2. 'COM' → logprob: -5.753371238708496
    3. 'pow' → logprob: -9.753371238708496
    4. ' Com' → logprob: -10.003371238708496
    5. 'rect' → logprob: -10.878371238708496
    6. '(' → logprob: -10.878371238708496
    7. '   ' → logprob: -11.003371238708496
    8. 'Comb' → logprob: -11.503371238708496
    9. 'com' → logprob: -11.878371238708496
    10. '       ' → logprob: -13.128371238708496

Token 685: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -6.704273118884885e-07
    2. 'pi' → logprob: -15.250000953674316
    3. 'b' → logprob: -15.500000953674316
    4. 'Bi' → logprob: -16.75
    5. 'vi' → logprob: -17.75
    6. '(' → logprob: -18.25
    7. '(b' → logprob: -18.375
    8. ' bi' → logprob: -18.625
    9. 'би' → logprob: -19.625
    10. 'BI' → logprob: -19.875

Token 686: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -9.65101717156358e-05
    2. 'h' → logprob: -9.375096321105957
    3. '(' → logprob: -11.500096321105957
    4. '(H' → logprob: -13.625096321105957
    5. '(
' → logprob: -15.875096321105957
    6. '(w' → logprob: -16.250097274780273
    7. '[h' → logprob: -17.375097274780273
    8. '(b' → logprob: -17.750097274780273
    9. '(ht' → logprob: -18.000097274780273
    10. 'H' → logprob: -18.125097274780273

Token 687: ',b' (ID: 17568)
  Prédit: '(h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.001040552044287324
    2. '(' → logprob: -7.376040458679199
    3. '(w' → logprob: -8.0010404586792
    4. ')(' → logprob: -10.2510404586792
    5. '(
' → logprob: -11.0010404586792
    6. 'h' → logprob: -11.1260404586792
    7. ')' → logprob: -12.0010404586792
    8. ',h' → logprob: -13.6260404586792
    9. ')(
' → logprob: -13.6260404586792
    10. '(b' → logprob: -13.8760404586792

Token 688: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.007648272439837456
    2. 'w' → logprob: -4.882648468017578
    3. '```' → logprob: -11.507648468017578
    4. 'hw' → logprob: -12.132648468017578
    5. '   ' → logprob: -12.632648468017578
    6. '
' → logprob: -12.882648468017578
    7. '	h' → logprob: -13.007648468017578
    8. '{' → logprob: -13.007648468017578
    9. 'r' → logprob: -13.132648468017578
    10. ' h' → logprob: -13.757648468017578

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.225939872208983e-05
    2. ')*' → logprob: -10.625032424926758
    3. ')
' → logprob: -12.625032424926758
    4. ' )' → logprob: -12.750032424926758
    5. '`)' → logprob: -15.500032424926758
    6. ')`' → logprob: -15.500032424926758
    7. '   ' → logprob: -15.750032424926758
    8. ')%' → logprob: -15.750032424926758
    9. '')' → logprob: -15.875032424926758
    10. ')b' → logprob: -16.125032424926758

Token 690: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.40276625752449036
    2. ' *' → logprob: -1.402766227722168
    3. '%' → logprob: -3.527766227722168
    4. '*v' → logprob: -4.152766227722168
    5. '(v' → logprob: -4.402766227722168
    6. '(' → logprob: -5.152766227722168
    7. '(C' → logprob: -5.652766227722168
    8. ')' → logprob: -5.777766227722168
    9. '   ' → logprob: -5.902766227722168
    10. 'v' → logprob: -6.152766227722168

Token 691: ' Com' (ID: 1390)
  Prédit: 'Com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Com' → logprob: -0.00023512568441219628
    2. ' Com' → logprob: -8.375235557556152
    3. '   ' → logprob: -12.750235557556152
    4. 'com' → logprob: -15.000235557556152
    5. '(' → logprob: -15.250235557556152
    6. '           ' → logprob: -15.500235557556152
    7. '       ' → logprob: -15.875235557556152
    8. '_Com' → logprob: -15.875235557556152
    9. 'C' → logprob: -16.000234603881836
    10. ' ' → logprob: -16.125234603881836

Token 692: 'bi' (ID: 6738)
  Prédit: 'bi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bi' → logprob: -9.014684110297821e-06
    2. 'b' → logprob: -12.375008583068848
    3. 'pi' → logprob: -13.500008583068848
    4. 'i' → logprob: -14.000008583068848
    5. '(w' → logprob: -14.250008583068848
    6. 'wi' → logprob: -14.500008583068848
    7. 'bw' → logprob: -14.500008583068848
    8. '
' → logprob: -15.375008583068848
    9. 'Bi' → logprob: -15.500008583068848
    10. 'би' → logprob: -16.375009536743164

Token 693: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -4.167648876318708e-05
    2. '(h' → logprob: -10.250041961669922
    3. '(' → logprob: -12.000041961669922
    4. 'w' → logprob: -17.125041961669922
    5. '(u' → logprob: -18.250041961669922
    6. '(v' → logprob: -18.250041961669922
    7. '(
' → logprob: -18.875041961669922
    8. '(g' → logprob: -19.250041961669922
    9. '(W' → logprob: -19.875041961669922
    10. ' (' → logprob: -20.000041961669922

Token 694: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.32693496346473694
    2. ',w' → logprob: -1.3269349336624146
    3. '(b' → logprob: -5.326934814453125
    4. ',' → logprob: -5.451934814453125
    5. '(w' → logprob: -5.701934814453125
    6. 'w' → logprob: -7.076934814453125
    7. 'bw' → logprob: -9.201934814453125
    8. ',
' → logprob: -9.701934814453125
    9. '(' → logprob: -10.701934814453125
    10. '[b' → logprob: -11.576934814453125

Token 695: 'w' (ID: 86)
  Prédit: 'bw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bw' → logprob: -0.16129358112812042
    2. 'w' → logprob: -1.911293625831604
    3. ' bw' → logprob: -7.2862935066223145
    4. 'b' → logprob: -8.036293983459473
    5. '	bw' → logprob: -10.036293983459473
    6. ',b' → logprob: -12.411293983459473
    7. '/b' → logprob: -13.286293983459473
    8. '_bw' → logprob: -13.411293983459473
    9. '   ' → logprob: -13.536293983459473
    10. 'wb' → logprob: -14.161293983459473

Token 696: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02721579559147358
    2. ')%' → logprob: -4.152215957641602
    3. '%' → logprob: -4.527215957641602
    4. ' %' → logprob: -9.027215957641602
    5. ')
' → logprob: -9.652215957641602
    6. ' )' → logprob: -9.902215957641602
    7. '   ' → logprob: -10.777215957641602
    8. '()%' → logprob: -11.527215957641602
    9. '%)' → logprob: -11.777215957641602
    10. '
' → logprob: -11.902215957641602

Token 697: '           ' (ID: 352)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -1.0165154933929443
    2. '
' → logprob: -1.0165154933929443
    3. '   ' → logprob: -1.8915154933929443
    4. '           ' → logprob: -3.0165154933929443
    5. ')' → logprob: -3.5165154933929443
    6. ')%' → logprob: -3.8915154933929443
    7. ' %' → logprob: -3.8915154933929443
    8. '       ' → logprob: -5.641515731811523
    9. '            
' → logprob: -8.016515731811523
    10. '
' → logprob: -8.516515731811523

Token 698: ' RET' (ID: 36363)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46812543272972107
    2. 'RET' (adapté à ' RET') → logprob: -1.7181254625320435
    3. 'v' → logprob: -2.468125343322754
    4. '           ' → logprob: -2.718125343322754
    5. '
' → logprob: -3.468125343322754
    6. ' RET' → logprob: -4.968125343322754
    7. '            
' → logprob: -6.218125343322754
    8. '    
' → logprob: -7.093125343322754
    9. '```' → logprob: -7.718125343322754
    10. '       ' → logprob: -7.843125343322754

Token 699: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003491705865599215
    2. '%=' → logprob: -8.750349044799805
    3. ' +=' → logprob: -9.000349044799805
    4. '=' → logprob: -9.750349044799805
    5. '+=(' → logprob: -12.125349044799805
    6. ']+=' → logprob: -13.000349044799805
    7. '+' → logprob: -14.500349044799805
    8. '   ' → logprob: -15.125349044799805
    9. '
' → logprob: -15.375349044799805
    10. '```' → logprob: -16.000349044799805

Token 700: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011730826226994395
    2. ' v' → logprob: -6.75117301940918
    3. '(v' → logprob: -13.12617301940918
    4. '	v' → logprob: -14.25117301940918
    5. '
' → logprob: -16.87617301940918
    6. '   ' → logprob: -16.87617301940918
    7. '(' → logprob: -17.25117301940918
    8. '           ' → logprob: -18.25117301940918
    9. ')v' → logprob: -18.37617301940918
    10. ' (' → logprob: -19.00117301940918

Token 701: '
' (ID: 198)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.11257307976484299
    2. '%' → logprob: -2.4875731468200684
    3. '
' → logprob: -4.237573146820068
    4. ' %=' → logprob: -4.862573146820068
    5. ')' → logprob: -7.612573146820068
    6. ' %
' → logprob: -8.23757266998291
    7. '   ' → logprob: -8.86257266998291
    8. ' 
' → logprob: -9.48757266998291
    9. '           ' → logprob: -10.23757266998291
    10. '%
' → logprob: -10.61257266998291

Token 702: '           ' (ID: 352)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.6715895533561707
    2. '%' → logprob: -1.4215896129608154
    3. '
' → logprob: -1.5465896129608154
    4. ' %=' → logprob: -3.5465896129608154
    5. '   ' → logprob: -6.046589374542236
    6. ')' → logprob: -6.296589374542236
    7. ' 
' → logprob: -7.546589374542236
    8. ' %
' → logprob: -8.046589851379395
    9. '%=' → logprob: -8.546589851379395
    10. '%
' → logprob: -8.796589851379395

Token 703: ' RET' (ID: 36363)
  Prédit: 'RET'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RET' (adapté à ' RET') → logprob: -0.006722826045006514
    2. ' RET' → logprob: -5.006722927093506
    3. '_RET' → logprob: -13.006722450256348
    4. 'REST' → logprob: -13.131722450256348
    5. 'RE' → logprob: -13.506722450256348
    6. '=' → logprob: -14.631722450256348
    7. 'v' → logprob: -14.631722450256348
    8. '   ' → logprob: -14.631722450256348
    9. '       ' → logprob: -16.006723403930664
    10. '
' → logprob: -16.381723403930664

Token 704: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.13796263933181763
    2. '%' → logprob: -2.137962579727173
    3. ' %=' → logprob: -4.512962818145752
    4. ')%' → logprob: -12.887962341308594
    5. ' %' → logprob: -13.512962341308594
    6. ')' → logprob: -13.637962341308594
    7. '=' → logprob: -14.012962341308594
    8. '	' → logprob: -14.887962341308594
    9. '%i' → logprob: -15.137962341308594
    10. '%\' → logprob: -15.262962341308594

Token 705: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -9.088346359931165e-07
    2. ' mod' → logprob: -14.000000953674316
    3. '(mod' → logprob: -19.625
    4. '
' → logprob: -19.875
    5. '	mod' → logprob: -20.875
    6. '998' → logprob: -21.125
    7. '```' → logprob: -21.375
    8. 'moder' → logprob: -23.375
    9. '999' → logprob: -23.5
    10. '   ' → logprob: -24.0

Token 706: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3945792317390442
    2. 'CA' → logprob: -1.1445791721343994
    3. '
' → logprob: -4.8945794105529785
    4. ' CA' → logprob: -9.01957893371582
    5. '```' → logprob: -10.39457893371582
    6. '    
' → logprob: -11.01957893371582
    7. 'return' → logprob: -11.14457893371582
    8. ' return' → logprob: -12.39457893371582
    9. ' ' → logprob: -13.64457893371582
    10. '``' → logprob: -14.14457893371582

Token 707: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20227248966693878
    2. 'CA' → logprob: -1.7022725343704224
    3. '
' → logprob: -7.452272415161133
    4. ' CA' → logprob: -8.577272415161133
    5. '```' → logprob: -9.702272415161133
    6. 'return' → logprob: -11.077272415161133
    7. ' return' → logprob: -12.202272415161133
    8. '    
' → logprob: -12.202272415161133
    9. ' ' → logprob: -13.577272415161133
    10. '``' → logprob: -13.952272415161133

Token 708: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' (adapté à ' CA') → logprob: -0.0015140273608267307
    2. '   ' → logprob: -6.501513957977295
    3. ' CA' → logprob: -12.126514434814453
    4. '
' → logprob: -12.126514434814453
    5. '```' → logprob: -14.626514434814453
    6. 'return' → logprob: -15.251514434814453
    7. '    
' → logprob: -15.876514434814453
    8. ' ' → logprob: -17.626514434814453
    9. '``' → logprob: -18.126514434814453
    10. 'Ca' → logprob: -18.751514434814453

Token 709: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -2.816093228830141e-06
    2. 'h' → logprob: -13.37500286102295
    3. '[' → logprob: -13.87500286102295
    4. '```' → logprob: -16.625001907348633
    5. '[w' → logprob: -17.000001907348633
    6. '[s' → logprob: -17.875001907348633
    7. '[t' → logprob: -17.875001907348633
    8. '	h' → logprob: -18.250001907348633
    9. '][' → logprob: -18.375001907348633
    10. '[c' → logprob: -18.375001907348633

Token 710: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -6.051066520740278e-05
    2. ']' → logprob: -10.375060081481934
    3. '[' → logprob: -11.375060081481934
    4. ')[' → logprob: -11.625060081481934
    5. '"][' → logprob: -13.000060081481934
    6. ' ][' → logprob: -13.625060081481934
    7. '```' → logprob: -14.000060081481934
    8. '>[' → logprob: -14.125060081481934
    9. '   ' → logprob: -14.250060081481934
    10. '[w' → logprob: -14.250060081481934

Token 711: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.339278580620885e-06
    2. ' w' → logprob: -13.125001907348633
    3. '
' → logprob: -16.250001907348633
    4. 'W' → logprob: -17.000001907348633
    5. '```' → logprob: -17.125001907348633
    6. ']' → logprob: -17.250001907348633
    7. ' ' → logprob: -17.875001907348633
    8. ')' → logprob: -18.625001907348633
    9. ''w' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.000001907348633

Token 712: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008112939540296793
    2. ']=' → logprob: -7.3758111000061035
    3. '=' → logprob: -9.000811576843262
    4. ')' → logprob: -10.000811576843262
    5. ']
' → logprob: -11.375811576843262
    6. ' ]' → logprob: -13.375811576843262
    7. '   ' → logprob: -13.875811576843262
    8. '])' → logprob: -14.250811576843262
    9. 'return' → logprob: -15.125811576843262
    10. ' =' → logprob: -15.500811576843262

Token 713: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0011705794604495168
    2. ' =' → logprob: -6.751170635223389
    3. '=
' → logprob: -15.00117015838623
    4. '=

' → logprob: -18.126171112060547
    5. '＝' → logprob: -18.876171112060547
    6. '.=' → logprob: -19.251171112060547
    7. '=int' → logprob: -19.751171112060547
    8. '=`' → logprob: -19.751171112060547
    9. ' =
' → logprob: -20.501171112060547
    10. '   ' → logprob: -20.626171112060547

Token 714: ' RET' (ID: 36363)
  Prédit: 'RET'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RET' → logprob: -0.0003633521846495569
    2. ' RET' → logprob: -8.00036334991455
    3. 'RE' → logprob: -10.50036334991455
    4. 'ret' → logprob: -14.87536334991455
    5. 'RT' → logprob: -17.750364303588867
    6. '_RET' → logprob: -18.000364303588867
    7. 'REST' → logprob: -18.875364303588867
    8. '
' → logprob: -19.000364303588867
    9. 'REN' → logprob: -19.125364303588867
    10. '0' → logprob: -19.250364303588867

Token 715: ' %' (ID: 1851)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006706207641400397
    2. 'return' → logprob: -7.375670433044434
    3. '	return' → logprob: -11.000670433044434
    4. ' return' → logprob: -11.375670433044434
    5. '    
' → logprob: -11.500670433044434
    6. '
' → logprob: -12.875670433044434
    7. '<|end|>' → logprob: -13.875670433044434
    8. '```' → logprob: -14.250670433044434
    9. '  ' → logprob: -14.750670433044434
    10. ':return' → logprob: -15.000670433044434

Token 716: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.00023274161503650248
    2. '(mod' → logprob: -8.375232696533203
    3. ' mod' → logprob: -13.375232696533203
    4. '```' → logprob: -15.750232696533203
    5. '(' → logprob: -15.875232696533203
    6. '0' → logprob: -16.500232696533203
    7. '
' → logprob: -17.250232696533203
    8. '	mod' → logprob: -17.500232696533203
    9. ')' → logprob: -17.625232696533203
    10. '`' → logprob: -17.875232696533203

Token 717: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -6.360996485454962e-05
    2. 'return' → logprob: -9.8750638961792
    3. ' return' → logprob: -12.2500638961792
    4. '	return' → logprob: -12.3750638961792
    5. '    
' → logprob: -13.0000638961792
    6. '
' → logprob: -14.8750638961792
    7. '```' → logprob: -15.7500638961792
    8. '       ' → logprob: -16.000062942504883
    9. '<|end|>' → logprob: -16.250062942504883
    10. '  ' → logprob: -16.500062942504883

Token 718: '   ' (ID: 271)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5762187838554382
    2. '   ' → logprob: -0.8262187838554382
    3. ' return' → logprob: -8.451218605041504
    4. '```' → logprob: -10.326218605041504
    5. '	return' → logprob: -10.576218605041504
    6. '<|end|>' → logprob: -12.701218605041504
    7. '  ' → logprob: -13.451218605041504
    8. ' ' → logprob: -14.201218605041504
    9. '    
' → logprob: -14.576218605041504
    10. ':return' → logprob: -14.826218605041504

Token 719: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0020163096487522125
    2. '   ' → logprob: -6.252016544342041
    3. ' return' → logprob: -9.377016067504883
    4. '	return' → logprob: -13.252016067504883
    5. '```' → logprob: -13.877016067504883
    6. '    
' → logprob: -17.002016067504883
    7. ':return' → logprob: -17.002016067504883
    8. '
' → logprob: -17.127016067504883
    9. '<|end|>' → logprob: -17.127016067504883
    10. '       ' → logprob: -17.502016067504883

Token 720: ' CA' (ID: 13180)
  Prédit: 'CA'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CA' → logprob: -0.062015969306230545
    2. 'RET' → logprob: -2.812016010284424
    3. ' RET' → logprob: -10.312015533447266
    4. ' CA' → logprob: -11.312015533447266
    5. 'RE' → logprob: -12.937015533447266
    6. 'RA' → logprob: -15.937015533447266
    7. 'ret' → logprob: -16.062015533447266
    8. '   ' → logprob: -17.187015533447266
    9. 'CRE' → logprob: -17.937015533447266
    10. 'CAE' → logprob: -17.937015533447266

Token 721: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -1.5048530030981055e-06
    2. 'h' → logprob: -14.500001907348633
    3. '[c' → logprob: -14.625001907348633
    4. 'CA' → logprob: -15.375001907348633
    5. '[w' → logprob: -16.000001907348633
    6. '[' → logprob: -16.000001907348633
    7. '```' → logprob: -16.875001907348633
    8. '[v' → logprob: -18.250001907348633
    9. '[g' → logprob: -18.375001907348633
    10. '[t' → logprob: -18.875001907348633

Token 722: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0046071805991232395
    2. '[w' → logprob: -5.879607200622559
    3. 'w' → logprob: -7.504607200622559
    4. ']' → logprob: -7.879607200622559
    5. ')[' → logprob: -8.004607200622559
    6. '[' → logprob: -8.004607200622559
    7. '[h' → logprob: -9.879607200622559
    8. '[
' → logprob: -10.254607200622559
    9. ')' → logprob: -11.004607200622559
    10. ')][' → logprob: -11.254607200622559

Token 723: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.9361264946837764e-07
    2. ' w' → logprob: -16.0
    3. ')' → logprob: -17.625
    4. ']' → logprob: -18.625
    5. 'user' → logprob: -18.875
    6. ''w' → logprob: -19.0
    7. '	w' → logprob: -19.25
    8. '
' → logprob: -19.375
    9. 'return' → logprob: -19.75
    10. 'W' → logprob: -19.75

Token 724: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. '<|end|>' → logprob: -11.500022888183594
    3. ')
' → logprob: -11.625022888183594
    4. '}' → logprob: -13.375022888183594
    5. ')return' → logprob: -14.375022888183594
    6. ']' → logprob: -15.375022888183594
    7. '```' → logprob: -15.625022888183594
    8. ' )' → logprob: -16.125022888183594
    9. '   ' → logprob: -16.375022888183594
    10. ')

' → logprob: -16.375022888183594

Token 725: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6175346970558167
    2. 'result' → logprob: -1.1175346374511719
    3. 'ret' → logprob: -2.867534637451172
    4. 'answer' → logprob: -3.242534637451172
    5. 'res' → logprob: -3.492534637451172
    6. 'ans' → logprob: -4.992534637451172
    7. 'RET' → logprob: -8.492534637451172
    8. '#' → logprob: -9.492534637451172
    9. 'for' → logprob: -9.742534637451172
    10. 'r' → logprob: -9.992534637451172

Token 726: ' i' (ID: 575)
  Prédit: ' h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.41372424364089966
    2. 'h' → logprob: -1.9137241840362549
    3. ' i' → logprob: -2.538724184036255
    4. '_' → logprob: -2.663724184036255
    5. ' _' → logprob: -3.663724184036255
    6. 'i' → logprob: -4.413724422454834
    7. '_h' → logprob: -5.538724422454834
    8. '_i' → logprob: -7.288724422454834
    9. ' line' → logprob: -9.163723945617676
    10. ' row' → logprob: -10.413723945617676

Token 727: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07904092967510223
    2. 'in' → logprob: -2.579041004180908
    3. ' ' → logprob: -8.95404052734375
    4. 'range' → logprob: -12.45404052734375
    5. '_' → logprob: -12.57904052734375
    6. 'n' → logprob: -12.70404052734375
    7. '	in' → logprob: -13.20404052734375
    8. ',' → logprob: -13.32904052734375
    9. '  ' → logprob: -13.95404052734375
    10. '(' → logprob: -14.07904052734375

Token 728: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0013266648165881634
    2. ' range' → logprob: -6.626326560974121
    3. 'r' → logprob: -15.001326560974121
    4. ' ' → logprob: -15.876326560974121
    5. '
' → logprob: -16.751327514648438
    6. 'in' → logprob: -17.001327514648438
    7. '  ' → logprob: -17.126327514648438
    8. '```' → logprob: -17.126327514648438
    9. '   ' → logprob: -17.376327514648438
    10. '(range' → logprob: -17.501327514648438

Token 729: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2254662811756134
    2. '(' → logprob: -1.600466251373291
    3. '1' → logprob: -10.85046672821045
    4. 'H' → logprob: -11.35046672821045
    5. '(len' → logprob: -11.47546672821045
    6. '(h' → logprob: -12.72546672821045
    7. '(W' → logprob: -12.72546672821045
    8. '((' → logprob: -12.97546672821045
    9. ' (' → logprob: -14.35046672821045
    10. '(
' → logprob: -14.97546672821045

Token 730: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.014296899549663067
    2. '):' → logprob: -5.014297008514404
    3. '):
' → logprob: -5.139297008514404
    4. ' +' → logprob: -6.514297008514404
    5. '   ' → logprob: -9.264296531677246
    6. '(' → logprob: -10.264296531677246
    7. '1' → logprob: -10.639296531677246
    8. 'for' → logprob: -11.139296531677246
    9. ',' → logprob: -11.514296531677246
    10. ' ' → logprob: -11.639296531677246

Token 731: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -10.125052452087402
    3. 'W' → logprob: -12.000052452087402
    4. '+' → logprob: -13.125052452087402
    5. '2' → logprob: -13.500052452087402
    6. '(' → logprob: -14.500052452087402
    7. '   ' → logprob: -14.750052452087402
    8. '
' → logprob: -15.000052452087402
    9. 'for' → logprob: -15.250052452087402
    10. '```' → logprob: -15.750052452087402

Token 732: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030663734301924706
    2. '):
' → logprob: -3.5306637287139893
    3. ':' → logprob: -7.280663967132568
    4. ')' → logprob: -9.03066349029541
    5. '+' → logprob: -9.53066349029541
    6. ',' → logprob: -11.15566349029541
    7. '):
' → logprob: -12.53066349029541
    8. '   ' → logprob: -12.90566349029541
    9. ':
' → logprob: -13.03066349029541
    10. ']:' → logprob: -13.15566349029541

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08864561468362808
    2. 'for' → logprob: -2.9636456966400146
    3. 'print' → logprob: -3.7136456966400146
    4. ' for' → logprob: -4.8386454582214355
    5. ' print' → logprob: -7.3386454582214355
    6. 'sys' → logprob: -9.213645935058594
    7. ' ' → logprob: -10.213645935058594
    8. '  ' → logprob: -10.963645935058594
    9. '	for' → logprob: -11.088645935058594
    10. 'res' → logprob: -11.213645935058594

Token 734: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.1695026308298111
    2. 'print' → logprob: -1.91950261592865
    3. '   ' → logprob: -4.9195027351379395
    4. ' for' → logprob: -6.9195027351379395
    5. 'res' → logprob: -7.4195027351379395
    6. 'row' → logprob: -9.794502258300781
    7. 'pr' → logprob: -10.169502258300781
    8. 'ans' → logprob: -10.169502258300781
    9. 'A' → logprob: -10.544502258300781
    10. 'r' → logprob: -10.794502258300781

Token 735: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.011048289015889168
    2. ' j' → logprob: -4.511048316955566
    3. 'w' → logprob: -15.136048316955566
    4. '   ' → logprob: -16.26104736328125
    5. '	j' → logprob: -16.51104736328125
    6. '_j' → logprob: -18.13604736328125
    7. ' ' → logprob: -18.88604736328125
    8. ',j' → logprob: -19.13604736328125
    9. ' w' → logprob: -19.51104736328125
    10. ' ' → logprob: -20.13604736328125

Token 736: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17974919080734253
    2. 'in' → logprob: -1.8047492504119873
    3. ' ' → logprob: -13.429749488830566
    4. '	in' → logprob: -13.554749488830566
    5. '<|end|>' → logprob: -15.304749488830566
    6. 'In' → logprob: -15.304749488830566
    7. 'inth' → logprob: -15.804749488830566
    8. ')' → logprob: -15.929749488830566
    9. 'i' → logprob: -16.17974853515625
    10. '   ' → logprob: -16.17974853515625

Token 737: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018155913800001144
    2. ' range' → logprob: -4.018156051635742
    3. '(W' → logprob: -12.518156051635742
    4. '(range' → logprob: -13.018156051635742
    5. 'W' → logprob: -15.643156051635742
    6. '   ' → logprob: -17.018156051635742
    7. 'Range' → logprob: -18.268156051635742
    8. 'for' → logprob: -18.643156051635742
    9. '(i' → logprob: -19.518156051635742
    10. ' W' → logprob: -19.768156051635742

Token 738: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -3.690834273584187e-05
    2. '(i' → logprob: -10.62503719329834
    3. '(' → logprob: -11.75003719329834
    4. 'W' → logprob: -12.62503719329834
    5. '(H' → logprob: -14.25003719329834
    6. '   ' → logprob: -15.50003719329834
    7. 'range' → logprob: -15.75003719329834
    8. ' (' → logprob: -16.000036239624023
    9. '(w' → logprob: -16.125036239624023
    10. '1' → logprob: -16.625036239624023

Token 739: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.191489642835222e-05
    2. ' +' → logprob: -10.500041961669922
    3. '+i' → logprob: -12.125041961669922
    4. '(i' → logprob: -12.250041961669922
    5. '):
' → logprob: -13.125041961669922
    6. '(' → logprob: -14.125041961669922
    7. '   ' → logprob: -14.750041961669922
    8. '[i' → logprob: -15.250041961669922
    9. '):' → logprob: -16.000041961669922
    10. '1' → logprob: -16.125041961669922

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3900795876979828
    2. 'j' → logprob: -1.1400796175003052
    3. '(j' → logprob: -6.265079498291016
    4. 'i' → logprob: -7.390079498291016
    5. '+' → logprob: -8.140079498291016
    6. 'range' → logprob: -8.390079498291016
    7. '(i' → logprob: -9.265079498291016
    8. '   ' → logprob: -10.640079498291016
    9. ' j' → logprob: -11.265079498291016
    10. ')' → logprob: -11.390079498291016

Token 741: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03857428953051567
    2. '):
' → logprob: -3.28857421875
    3. ':' → logprob: -8.03857421875
    4. '+' → logprob: -8.66357421875
    5. ')' → logprob: -11.53857421875
    6. '   ' → logprob: -11.78857421875
    7. ']:' → logprob: -12.66357421875
    8. '):
' → logprob: -12.66357421875
    9. ',' → logprob: -12.78857421875
    10. '}:' → logprob: -13.03857421875

Token 742: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4156048595905304
    2. '       ' → logprob: -1.665604829788208
    3. 'CA' → logprob: -2.040604829788208
    4. 'if' → logprob: -4.665605068206787
    5. 'print' → logprob: -4.915605068206787
    6. ' CA' → logprob: -6.540605068206787
    7. ' if' → logprob: -6.790605068206787
    8. ' ' → logprob: -8.165604591369629
    9. 'sys' → logprob: -8.540604591369629
    10. 'for' → logprob: -8.665604591369629

Token 743: ' calc' (ID: 25691)
  Prédit: 'calc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'calc' (adapté à ' calc') → logprob: -0.3808509111404419
    2. 'CA' → logprob: -1.255850911140442
    3. 'print' → logprob: -4.130850791931152
    4. '_' → logprob: -4.380850791931152
    5. 'if' → logprob: -6.005850791931152
    6. 'for' → logprob: -9.130850791931152
    7. ' calc' → logprob: -9.255850791931152
    8. 'A' → logprob: -9.380850791931152
    9. '_calc' → logprob: -9.630850791931152
    10. '   ' → logprob: -9.755850791931152

Token 744: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.176947600673884e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -15.750021934509277
    4. '(I' → logprob: -17.00002098083496
    5. ' (' → logprob: -17.25002098083496
    6. 'i' → logprob: -18.50002098083496
    7. '(j' → logprob: -19.50002098083496
    8. '((' → logprob: -20.00002098083496
    9. '(int' → logprob: -20.12502098083496
    10. '(ii' → logprob: -20.50002098083496

Token 745: ',' (ID: 11)
  Prédit: ',j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.4740813970565796
    2. ',' → logprob: -0.9740813970565796
    3. ' ,' → logprob: -12.849081039428711
    4. '[j' → logprob: -13.974081039428711
    5. ',
' → logprob: -15.099081039428711
    6. 'j' → logprob: -15.099081039428711
    7. ',w' → logprob: -16.22408103942871
    8. '   ' → logprob: -16.47408103942871
    9. '][' → logprob: -16.59908103942871
    10. ' ' → logprob: -17.72408103942871

Token 746: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.306760805164231e-05
    2. ' j' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.12501335144043
    4. '	j' → logprob: -19.25001335144043
    5. ')' → logprob: -19.62501335144043
    6. '<|end|>' → logprob: -20.00001335144043
    7. ' ' → logprob: -20.50001335144043
    8. '$j' → logprob: -20.75001335144043
    9. '       ' → logprob: -21.25001335144043
    10. '```' → logprob: -21.62501335144043

Token 747: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.68022444692906e-05
    2. ')
' → logprob: -10.000046730041504
    3. '<|end|>' → logprob: -14.125046730041504
    4. ' )' → logprob: -15.125046730041504
    5. ')

' → logprob: -16.37504768371582
    6. '))' → logprob: -16.50004768371582
    7. ')return' → logprob: -16.62504768371582
    8. ');' → logprob: -17.00004768371582
    9. '),' → logprob: -17.12504768371582
    10. ')#' → logprob: -17.25004768371582

Token 748: 'ANS' (ID: 18850)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -1.3657993078231812
    2. 'ret' → logprob: -1.3657993078231812
    3. 'answer' → logprob: -1.4907993078231812
    4. 'print' → logprob: -1.6157993078231812
    5. 'res' → logprob: -3.1157994270324707
    6. 'ans' → logprob: -4.490799427032471
    7. 'total' → logprob: -5.740799427032471
    8. 'for' → logprob: -5.990799427032471
    9. 'RET' → logprob: -6.615799427032471
    10. 'count' → logprob: -7.365799427032471

Token 749: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025489568710327
    2. '=' → logprob: -1.910254955291748
    3. ' =
' → logprob: -11.66025447845459
    4. '=[' → logprob: -12.53525447845459
    5. ' ' → logprob: -12.66025447845459
    6. ',' → logprob: -12.66025447845459
    7. '＝' → logprob: -13.03525447845459
    8. '_' → logprob: -13.28525447845459
    9. '=
' → logprob: -13.41025447845459
    10. ' =[' → logprob: -13.41025447845459

Token 750: ' rect' (ID: 13107)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6516284942626953
    2. 'calc' → logprob: -0.7766284942626953
    3. ' calc' → logprob: -4.151628494262695
    4. ' ' → logprob: -6.401628494262695
    5. '(calc' → logprob: -7.276628494262695
    6. '1' → logprob: -7.526628494262695
    7. 'cal' → logprob: -9.776628494262695
    8. '[' → logprob: -10.776628494262695
    9. '(' → logprob: -11.151628494262695
    10. 'pow' → logprob: -11.401628494262695

Token 751: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.0005575587856583297
    2. '(' → logprob: -7.5005574226379395
    3. '((' → logprob: -13.625557899475098
    4. ' (' → logprob: -13.750557899475098
    5. '<|end|>' → logprob: -14.000557899475098
    6. 'H' → logprob: -15.125557899475098
    7. '(
' → logprob: -15.625557899475098
    8. ')(' → logprob: -15.625557899475098
    9. ')' → logprob: -15.750557899475098
    10. '```' → logprob: -16.25055694580078

Token 752: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026576850563287735
    2. ',W' → logprob: -3.6515767574310303
    3. ',H' → logprob: -8.65157699584961
    4. ' ,' → logprob: -9.40157699584961
    5. '-' → logprob: -12.40157699584961
    6. ',
' → logprob: -12.90157699584961
    7. 'W' → logprob: -13.52657699584961
    8. ',B' → logprob: -13.52657699584961
    9. ',S' → logprob: -14.02657699584961
    10. ',Q' → logprob: -14.15157699584961

Token 753: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.00014084660506341606
    2. ' W' → logprob: -8.875141143798828
    3. '   ' → logprob: -14.750141143798828
    4. ' ' → logprob: -15.250141143798828
    5. '	W' → logprob: -16.250141143798828
    6. '0' → logprob: -16.625141143798828
    7. '  ' → logprob: -17.500141143798828
    8. ')' → logprob: -18.250141143798828
    9. ',W' → logprob: -18.750141143798828
    10. '(W' → logprob: -19.125141143798828

Token 754: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.47626737493556e-05
    2. '))' → logprob: -11.25003433227539
    3. ' )' → logprob: -11.37503433227539
    4. ')*' → logprob: -12.37503433227539
    5. ')
' → logprob: -12.75003433227539
    6. ')%' → logprob: -14.00003433227539
    7. ')#' → logprob: -14.75003433227539
    8. '*' → logprob: -15.12503433227539
    9. '[' → logprob: -15.25003433227539
    10. ')`' → logprob: -16.00003433227539

Token 755: 'for' (ID: 1938)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09004766494035721
    2. 'for' → logprob: -2.465047597885132
    3. 'if' → logprob: -7.215047836303711
    4. 'ans' → logprob: -9.215047836303711
    5. 'ANS' → logprob: -9.715047836303711
    6. '#' → logprob: -10.090047836303711
    7. ')' → logprob: -10.340047836303711
    8. '+' → logprob: -10.715047836303711
    9. 'count' → logprob: -10.840047836303711
    10. '```' → logprob: -11.090047836303711

Token 756: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2024534046649933
    2. 'h' → logprob: -2.452453374862671
    3. ' i' → logprob: -2.702453374862671
    4. ' h' → logprob: -4.82745361328125
    5. '_i' → logprob: -4.95245361328125
    6. 'x' → logprob: -5.57745361328125
    7. '_' → logprob: -5.82745361328125
    8. 'bh' → logprob: -6.45245361328125
    9. 'hh' → logprob: -7.07745361328125
    10. 'r' → logprob: -7.45245361328125

Token 757: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5243539214134216
    2. 'in' → logprob: -0.8993539214134216
    3. ',' → logprob: -7.274353981018066
    4. ' ' → logprob: -7.774353981018066
    5. '	in' → logprob: -10.274353981018066
    6. 'n' → logprob: -10.649353981018066
    7. '_' → logprob: -11.649353981018066
    8. ' ,' → logprob: -11.649353981018066
    9. '  ' → logprob: -11.899353981018066
    10. '   ' → logprob: -12.024353981018066

Token 758: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03805170953273773
    2. ' range' → logprob: -3.2880516052246094
    3. ' ' → logprob: -12.28805160522461
    4. '   ' → logprob: -13.03805160522461
    5. 'r' → logprob: -14.03805160522461
    6. '  ' → logprob: -14.28805160522461
    7. '(range' → logprob: -14.53805160522461
    8. '```' → logprob: -15.28805160522461
    9. '	range' → logprob: -15.66305160522461
    10. '`' → logprob: -15.78805160522461

Token 759: '((' (ID: 2054)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.2522328794002533
    2. '(' → logprob: -1.5022329092025757
    3. '(range' → logprob: -8.877232551574707
    4. '((' → logprob: -9.752232551574707
    5. '(W' → logprob: -9.752232551574707
    6. '(len' → logprob: -11.127232551574707
    7. 'range' → logprob: -11.377232551574707
    8. 'H' → logprob: -12.877232551574707
    9. '(h' → logprob: -12.877232551574707
    10. '(R' → logprob: -13.002232551574707

Token 760: '1' (ID: 16)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.006541877519339323
    2. 'len' → logprob: -5.381541728973389
    3. 'min' → logprob: -8.131542205810547
    4. '10' → logprob: -8.256542205810547
    5. ' H' → logprob: -8.631542205810547
    6. '(H' → logprob: -8.631542205810547
    7. '0' → logprob: -8.756542205810547
    8. '20' → logprob: -8.756542205810547
    9. '1' → logprob: -8.881542205810547
    10. '21' → logprob: -9.131542205810547

Token 761: ' <<' (ID: 2256)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01597067154943943
    2. ' ,' → logprob: -4.390970706939697
    3. ',H' → logprob: -5.890970706939697
    4. '+' → logprob: -8.265970230102539
    5. '<<' → logprob: -8.890970230102539
    6. 'H' → logprob: -9.265970230102539
    7. ' +' → logprob: -9.515970230102539
    8. '2' → logprob: -10.640970230102539
    9. '1' → logprob: -10.765970230102539
    10. ')' → logprob: -11.265970230102539

Token 762: ' H' (ID: 487)
  Prédit: '(H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.003055904060602188
    2. 'H' → logprob: -5.878056049346924
    3. ' (' → logprob: -9.128055572509766
    4. '(W' → logprob: -9.253055572509766
    5. '(' → logprob: -10.253055572509766
    6. '((' → logprob: -12.253055572509766
    7. 'W' → logprob: -12.753055572509766
    8. 'HW' → logprob: -13.878055572509766
    9. '(
' → logprob: -14.628055572509766
    10. ' H' → logprob: -15.128055572509766

Token 763: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4768642783164978
    2. '):' → logprob: -0.9768642783164978
    3. '):
' → logprob: -5.976864337921143
    4. ')>' → logprob: -10.351863861083984
    5. ')+' → logprob: -10.476863861083984
    6. ')):' → logprob: -10.601863861083984
    7. ')-' → logprob: -10.726863861083984
    8. ')i' → logprob: -11.101863861083984
    9. '(' → logprob: -11.226863861083984
    10. '):
' → logprob: -11.476863861083984

Token 764: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1018344983458519
    2. ')' → logprob: -2.351834535598755
    3. '):
' → logprob: -6.976834297180176
    4. '(' → logprob: -8.351834297180176
    5. '|' → logprob: -9.226834297180176
    6. ')>' → logprob: -9.726834297180176
    7. 'for' → logprob: -9.851834297180176
    8. ':' → logprob: -10.351834297180176
    9. ',' → logprob: -10.351834297180176
    10. '>' → logprob: -10.726834297180176

Token 765: ' ' (ID: 220)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.003397290827706456
    2. ')' → logprob: -6.503397464752197
    3. 'H' → logprob: -7.003397464752197
    4. '1' → logprob: -7.503397464752197
    5. '(' → logprob: -8.503396987915039
    6. '(W' → logprob: -9.003396987915039
    7. ' W' → logprob: -9.378396987915039
    8. 'i' → logprob: -11.378396987915039
    9. '(H' → logprob: -12.753396987915039
    10. '```' → logprob: -13.503396987915039

Token 766: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001882823125924915
    2. 'W' → logprob: -8.875187873840332
    3. 'H' → logprob: -10.750187873840332
    4. '0' → logprob: -10.875187873840332
    5. '(' → logprob: -12.875187873840332
    6. '2' → logprob: -13.500187873840332
    7. '```' → logprob: -13.625187873840332
    8. '
' → logprob: -14.125187873840332
    9. 'i' → logprob: -14.375187873840332
    10. '(W' → logprob: -14.750187873840332

Token 767: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16790960729122162
    2. '+' → logprob: -2.292909622192383
    3. '):
' → logprob: -3.042909622192383
    4. ')' → logprob: -5.542909622192383
    5. '1' → logprob: -7.417909622192383
    6. ',' → logprob: -7.792909622192383
    7. ')+' → logprob: -8.167909622192383
    8. '):
' → logprob: -8.417909622192383
    9. '   ' → logprob: -9.417909622192383
    10. '-' → logprob: -9.542909622192383

Token 768: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0068507008254528046
    2. ' for' → logprob: -5.506850719451904
    3. 'for' → logprob: -6.006850719451904
    4. ':' → logprob: -8.631850242614746
    5. ':
' → logprob: -10.881850242614746
    6. '       ' → logprob: -11.006850242614746
    7. '	for' → logprob: -11.131850242614746
    8. '    ' → logprob: -11.506850242614746
    9. '  ' → logprob: -11.756850242614746
    10. ' ' → logprob: -11.881850242614746

Token 769: ' for' (ID: 395)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.617442011833191
    2. 'b' → logprob: -1.867442011833191
    3. 'bit' → logprob: -2.4924421310424805
    4. 'mask' → logprob: -2.4924421310424805
    5. '   ' → logprob: -2.6174421310424805
    6. 's' → logprob: -2.8674421310424805
    7. 'cnt' → logprob: -2.8674421310424805
    8. 'row' → logprob: -2.9924421310424805
    9. 'count' → logprob: -3.3674421310424805
    10. 'subset' → logprob: -3.3674421310424805

Token 770: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.012832408770918846
    2. ' j' → logprob: -4.3878326416015625
    3. 'mask' → logprob: -8.887832641601562
    4. 'i' → logprob: -9.512832641601562
    5. '   ' → logprob: -10.387832641601562
    6. 's' → logprob: -10.512832641601562
    7. 'subset' → logprob: -11.887832641601562
    8. ' mask' → logprob: -12.012832641601562
    9. 'k' → logprob: -12.012832641601562
    10. 'b' → logprob: -12.262832641601562

Token 771: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2254524827003479
    2. 'in' → logprob: -1.6004524230957031
    3. '   ' → logprob: -10.975452423095703
    4. ' ' → logprob: -11.600452423095703
    5. 'n' → logprob: -12.475452423095703
    6. '```' → logprob: -12.975452423095703
    7. '	in' → logprob: -12.975452423095703
    8. '    ' → logprob: -13.850452423095703
    9. '(' → logprob: -14.225452423095703
    10. '  ' → logprob: -14.350452423095703

Token 772: ' range' (ID: 3352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28440865874290466
    2. '((' → logprob: -2.0344085693359375
    3. 'range' → logprob: -2.2844085693359375
    4. '(W' → logprob: -4.2844085693359375
    5. '(range' → logprob: -7.6594085693359375
    6. ' range' → logprob: -8.159408569335938
    7. 'W' → logprob: -8.409408569335938
    8. ' (' → logprob: -9.409408569335938
    9. '1' → logprob: -9.534408569335938
    10. '(H' → logprob: -10.784408569335938

Token 773: '((' (ID: 2054)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.3316440284252167
    2. '((' → logprob: -1.331644058227539
    3. '(' → logprob: -4.081644058227539
    4. 'W' → logprob: -7.206644058227539
    5. ' (' → logprob: -8.206644058227539
    6. '   ' → logprob: -9.581644058227539
    7. '(i' → logprob: -9.581644058227539
    8. '(H' → logprob: -9.706644058227539
    9. ' ' → logprob: -10.331644058227539
    10. '1' → logprob: -10.956644058227539

Token 774: '1' (ID: 16)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.30740147829055786
    2. '(W' → logprob: -1.807401418685913
    3. '(' → logprob: -2.307401418685913
    4. '1' → logprob: -7.557401657104492
    5. ' (' → logprob: -8.432401657104492
    6. ' W' → logprob: -8.557401657104492
    7. '((' → logprob: -10.432401657104492
    8. '(i' → logprob: -10.432401657104492
    9. 'i' → logprob: -10.557401657104492
    10. '   ' → logprob: -11.557401657104492

Token 775: ' <<' (ID: 2256)
  Prédit: '(W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.23221497237682343
    2. '+' → logprob: -2.10721492767334
    3. 'W' → logprob: -2.48221492767334
    4. '(' → logprob: -6.60721492767334
    5. ' W' → logprob: -8.23221492767334
    6. '   ' → logprob: -8.73221492767334
    7. ' (' → logprob: -9.23221492767334
    8. ')' → logprob: -9.85721492767334
    9. ' +' → logprob: -10.23221492767334
    10. '1' → logprob: -10.60721492767334

Token 776: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0006681174854747951
    2. ' W' → logprob: -7.500668048858643
    3. '(W' → logprob: -9.3756685256958
    4. '(' → logprob: -11.2506685256958
    5. '   ' → logprob: -11.6256685256958
    6. 'i' → logprob: -12.8756685256958
    7. ' ' → logprob: -13.1256685256958
    8. '((' → logprob: -13.8756685256958
    9. '	W' → logprob: -13.8756685256958
    10. '(i' → logprob: -14.6256685256958

Token 777: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0032652919180691242
    2. ')-' → logprob: -6.753265380859375
    3. '):' → logprob: -6.753265380859375
    4. '):
' → logprob: -7.253265380859375
    5. ')+' → logprob: -9.753265380859375
    6. ' )' → logprob: -9.878265380859375
    7. '   ' → logprob: -10.003265380859375
    8. '+' → logprob: -10.628265380859375
    9. '       ' → logprob: -11.003265380859375
    10. ')
' → logprob: -12.878265380859375

Token 778: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47615107893943787
    2. ')' → logprob: -1.4761511087417603
    3. ')-' → logprob: -1.9761511087417603
    4. ' -' → logprob: -5.101150989532471
    5. '):
' → logprob: -6.101150989532471
    6. '):' → logprob: -6.476150989532471
    7. '   ' → logprob: -7.101150989532471
    8. ' ' → logprob: -8.351151466369629
    9. '()-' → logprob: -8.601151466369629
    10. '+' → logprob: -8.726151466369629

Token 779: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.125015258789062
    3. '0' → logprob: -15.625015258789062
    4. '```' → logprob: -15.625015258789062
    5. '   ' → logprob: -15.750015258789062
    6. '2' → logprob: -16.750015258789062
    7. ')' → logprob: -16.875015258789062
    8. '(' → logprob: -17.562515258789062
    9. '           ' → logprob: -17.812515258789062
    10. 'j' → logprob: -17.875015258789062

Token 780: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. ' ' → logprob: -12.375005722045898
    3. 'j' → logprob: -14.500005722045898
    4. '0' → logprob: -14.625005722045898
    5. '   ' → logprob: -14.750005722045898
    6. '```' → logprob: -16.0000057220459
    7. '(' → logprob: -16.3750057220459
    8. 'i' → logprob: -17.1250057220459
    9. 'W' → logprob: -17.2500057220459
    10. '
' → logprob: -17.2500057220459

Token 781: '):
' (ID: 1883)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2131088227033615
    2. '       ' → logprob: -2.213108777999878
    3. ':
' → logprob: -3.088108777999878
    4. '):
' → logprob: -3.963108777999878
    5. '   ' → logprob: -4.463109016418457
    6. '):' → logprob: -5.463109016418457
    7. ',' → logprob: -7.463109016418457
    8. '():
' → logprob: -7.713109016418457
    9. '           ' → logprob: -8.213109016418457
    10. ' :' → logprob: -9.088109016418457

Token 782: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004541792441159487
    2. 'k' → logprob: -6.754541873931885
    3. 'count' → logprob: -7.004541873931885
    4. 'pass' → logprob: -7.504541873931885
    5. 'u' → logprob: -7.879541873931885
    6. 'sum' → logprob: -8.254541397094727
    7. 'if' → logprob: -8.504541397094727
    8. ' pass' → logprob: -8.504541397094727
    9. 'v' → logprob: -9.129541397094727
    10. '   ' → logprob: -9.254541397094727

Token 783: ' ok' (ID: 4763)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -1.5070363283157349
    2. 'continue' → logprob: -2.2570362091064453
    3. 'bits' → logprob: -2.2570362091064453
    4. 'subset' → logprob: -2.5070362091064453
    5. 's' → logprob: -2.7570362091064453
    6. 'mask' → logprob: -2.8820362091064453
    7. 'pop' → logprob: -2.8820362091064453
    8. 'if' → logprob: -3.1320362091064453
    9. '       ' → logprob: -3.5070362091064453
    10. 'ANS' → logprob: -3.5070362091064453

Token 784: 'flag' (ID: 17665)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07013771682977676
    2. '=' → logprob: -2.6951377391815186
    3. ' ' → logprob: -9.445137977600098
    4. ',' → logprob: -9.945137977600098
    5. '[' → logprob: -9.945137977600098
    6. '=True' → logprob: -12.195137977600098
    7. ' =
' → logprob: -12.820137977600098
    8. ' =[' → logprob: -12.820137977600098
    9. '=False' → logprob: -13.070137977600098
    10. '	' → logprob: -13.695137977600098

Token 785: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868778347969055
    2. ' =' → logprob: -1.1368777751922607
    3. ' ' → logprob: -12.76187801361084
    4. '=True' → logprob: -12.76187801361084
    5. ',' → logprob: -14.38687801361084
    6. '=False' → logprob: -15.51187801361084
    7. '[' → logprob: -16.511877059936523
    8. '  ' → logprob: -16.761877059936523
    9. '   ' → logprob: -17.011877059936523
    10. ')' → logprob: -17.136877059936523

Token 786: ' ' (ID: 220)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002959280973300338
    2. ' True' → logprob: -6.127959251403809
    3. 'False' → logprob: -7.377959251403809
    4. '1' → logprob: -9.002959251403809
    5. '(True' → logprob: -11.252959251403809
    6. '0' → logprob: -12.002959251403809
    7. '   ' → logprob: -12.002959251403809
    8. ' False' → logprob: -14.752959251403809
    9. '       ' → logprob: -16.002960205078125
    10. ' ' → logprob: -16.627960205078125

Token 787: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0002703953068703413
    2. 'False' → logprob: -8.37527084350586
    3. '1' → logprob: -10.37527084350586
    4. ' True' → logprob: -11.87527084350586
    5. '(True' → logprob: -13.87527084350586
    6. '0' → logprob: -14.25027084350586
    7. 'Tr' → logprob: -17.12527084350586
    8. '   ' → logprob: -17.37527084350586
    9. '[' → logprob: -18.00027084350586
    10. '=True' → logprob: -19.62527084350586

Token 788: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012322536204010248
    2. ' for' → logprob: -7.251232147216797
    3. '<|end|>' → logprob: -8.376232147216797
    4. '   ' → logprob: -8.626232147216797
    5. 'for' → logprob: -9.501232147216797
    6. '	' → logprob: -11.626232147216797
    7. '        
' → logprob: -12.001232147216797
    8. '           ' → logprob: -12.376232147216797
    9. ',' → logprob: -12.501232147216797
    10. '	   ' → logprob: -12.876232147216797

Token 790: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00256864121183753
    2. ' for' → logprob: -6.50256872177124
    3. '       ' → logprob: -6.87756872177124
    4. 'rows' → logprob: -11.877568244934082
    5. 'mask' → logprob: -12.252568244934082
    6. 'bits' → logprob: -12.627568244934082
    7. 'row' → logprob: -13.252568244934082
    8. 'x' → logprob: -13.252568244934082
    9. '   ' → logprob: -13.252568244934082
    10. 'break' → logprob: -13.377568244934082

Token 791: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.09587570279836655
    2. 'x' → logprob: -3.2208757400512695
    3. 'hi' → logprob: -3.5958757400512695
    4. 'hh' → logprob: -4.5958757400512695
    5. 'ii' → logprob: -4.9708757400512695
    6. 'y' → logprob: -6.2208757400512695
    7. 'ih' → logprob: -6.5958757400512695
    8. 'a' → logprob: -7.0958757400512695
    9. 'sh' → logprob: -7.0958757400512695
    10. 'i' → logprob: -7.7208757400512695

Token 792: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08102332055568695
    2. 'in' → logprob: -2.5810232162475586
    3. '<|end|>' → logprob: -6.456023216247559
    4. '	in' → logprob: -8.581023216247559
    5. ' ' → logprob: -8.956023216247559
    6. ')' → logprob: -10.206023216247559
    7. '	' → logprob: -10.331023216247559
    8. ',' → logprob: -10.456023216247559
    9. '0' → logprob: -10.706023216247559
    10. '_in' → logprob: -10.831023216247559

Token 793: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804252669215202
    2. ' range' → logprob: -3.2880425453186035
    3. ' ' → logprob: -14.913042068481445
    4. '(range' → logprob: -15.288042068481445
    5. ' in' → logprob: -15.663042068481445
    6. '0' → logprob: -16.163042068481445
    7. '
' → logprob: -16.538042068481445
    8. '	range' → logprob: -16.913042068481445
    9. 'in' → logprob: -17.163042068481445
    10. '   ' → logprob: -18.163042068481445

Token 794: '(H' (ID: 20904)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.03816312924027443
    2. '(H' → logprob: -3.288163185119629
    3. ' H' → logprob: -9.538163185119629
    4. '(' → logprob: -10.663163185119629
    5. '	H' → logprob: -11.913163185119629
    6. '   ' → logprob: -11.913163185119629
    7. '(
' → logprob: -12.913163185119629
    8. '0' → logprob: -13.038163185119629
    9. ' (' → logprob: -13.663163185119629
    10. '
' → logprob: -13.788163185119629

Token 795: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5786380171775818
    2. '):
' → logprob: -0.8286380171775818
    3. '+' → logprob: -6.078638076782227
    4. ':' → logprob: -8.953638076782227
    5. '   ' → logprob: -9.953638076782227
    6. '       ' → logprob: -9.953638076782227
    7. '-' → logprob: -9.953638076782227
    8. ')' → logprob: -10.328638076782227
    9. '):
' → logprob: -11.203638076782227
    10. '<|end|>' → logprob: -11.328638076782227

Token 796: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011287017725408077
    2. '   ' → logprob: -5.261287212371826
    3. '	       ' → logprob: -6.136287212371826
    4. '       ' → logprob: -6.886287212371826
    5. '<|end|>' → logprob: -7.261287212371826
    6. '	   ' → logprob: -7.636287212371826
    7. '		' → logprob: -7.761287212371826
    8. ' if' → logprob: -8.011286735534668
    9. '	' → logprob: -8.386286735534668
    10. ' ' → logprob: -8.511286735534668

Token 797: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6039761304855347
    2. ' if' → logprob: -1.7289761304855347
    3. '           ' → logprob: -1.8539761304855347
    4. 'if' (adapté à ' if') → logprob: -2.603976249694824
    5. '       ' → logprob: -3.603976249694824
    6. ' for' → logprob: -4.478976249694824
    7. 'for' → logprob: -5.603976249694824
    8. '               ' → logprob: -6.603976249694824
    9. ' ' → logprob: -7.228976249694824
    10. '	   ' → logprob: -8.228976249694824

Token 798: ' (' (ID: 350)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.5939940810203552
    2. '(i' → logprob: -0.9689940810203552
    3. '(not' → logprob: -3.718994140625
    4. 'not' → logprob: -3.968994140625
    5. '(((' → logprob: -4.468994140625
    6. ' not' → logprob: -4.718994140625
    7. ' (' → logprob: -6.343994140625
    8. 'i' → logprob: -7.218994140625
    9. '(A' → logprob: -7.593994140625
    10. ' ((' → logprob: -7.593994140625

Token 799: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.12735168635845184
    2. '((' → logprob: -2.627351760864258
    3. '(not' → logprob: -3.377351760864258
    4. 'not' → logprob: -4.752351760864258
    5. '(((' → logprob: -6.252351760864258
    6. 'i' → logprob: -6.377351760864258
    7. ' not' → logprob: -7.127351760864258
    8. ' (' → logprob: -9.877351760864258
    9. '(' → logprob: -10.877351760864258
    10. '((((' → logprob: -11.502351760864258

Token 800: ' &' (ID: 827)
  Prédit: '&'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '&' → logprob: -0.47239166498184204
    2. '>>' → logprob: -1.2223916053771973
    3. ' &' → logprob: -2.5973916053771973
    4. '&
' → logprob: -5.722391605377197
    5. ' >>' → logprob: -5.847391605377197
    6. '	' → logprob: -7.972391605377197
    7. ' &
' → logprob: -8.472392082214355
    8. '&(' → logprob: -8.972392082214355
    9. ')' → logprob: -9.222392082214355
    10. '   ' → logprob: -9.847392082214355

Token 801: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0009163398644886911
    2. ' (' → logprob: -7.000916481018066
    3. '1' → logprob: -12.250916481018066
    4. '   ' → logprob: -16.37591552734375
    5. '
' → logprob: -17.50091552734375
    6. ' ' → logprob: -17.62591552734375
    7. '           ' → logprob: -17.75091552734375
    8. '((' → logprob: -18.12591552734375
    9. ')' → logprob: -18.75091552734375
    10. '```' → logprob: -19.12591552734375

Token 802: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01815778948366642
    2. '1' → logprob: -4.018157958984375
    3. ' (' → logprob: -11.768157958984375
    4. ' ' → logprob: -17.018157958984375
    5. '   ' → logprob: -17.143157958984375
    6. '
' → logprob: -17.893157958984375
    7. '(h' → logprob: -19.018157958984375
    8. '           ' → logprob: -19.393157958984375
    9. ')' → logprob: -19.768157958984375
    10. '```' → logprob: -20.393157958984375

Token 803: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<<' → logprob: -0.0011901067337021232
    2. '(' → logprob: -7.501190185546875
    3. ' <<' → logprob: -8.001190185546875
    4. '1' → logprob: -9.001190185546875
    5. '<' → logprob: -9.001190185546875
    6. '>>' → logprob: -10.876190185546875
    7. '```' → logprob: -11.876190185546875
    8. '
' → logprob: -12.501190185546875
    9. '   ' → logprob: -12.626190185546875
    10. ')<<' → logprob: -12.626190185546875

Token 804: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.796184723294573e-06
    2. ' h' → logprob: -12.125005722045898
    3. '   ' → logprob: -15.500005722045898
    4. '	h' → logprob: -16.8750057220459
    5. '
' → logprob: -17.6250057220459
    6. '```' → logprob: -17.7500057220459
    7. '    ' → logprob: -18.1250057220459
    8. '           ' → logprob: -18.1250057220459
    9. '       ' → logprob: -18.2500057220459
    10. ' ' → logprob: -18.6250057220459

Token 805: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01298338919878006
    2. '))' → logprob: -5.012983322143555
    3. ')==' → logprob: -5.137983322143555
    4. '==' → logprob: -8.512983322143555
    5. ' )' → logprob: -9.262983322143555
    6. '0' → logprob: -10.137983322143555
    7. '):
' → logprob: -10.762983322143555
    8. ')!=' → logprob: -12.012983322143555
    9. ' and' → logprob: -12.387983322143555
    10. ' ==' → logprob: -12.512983322143555

Token 806: ' !=' (ID: 1666)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2563110888004303
    2. 'and' → logprob: -1.881311058998108
    3. '==' → logprob: -3.2563111782073975
    4. '!=' → logprob: -3.3813111782073975
    5. '>' → logprob: -7.506310939788818
    6. ' ==' → logprob: -8.506311416625977
    7. ' !=' → logprob: -8.756311416625977
    8. '	and' → logprob: -9.506311416625977
    9. '               ' → logprob: -9.631311416625977
    10. ':
' → logprob: -10.756311416625977

Token 807: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002613358374219388
    2. ' ' → logprob: -8.250261306762695
    3. '   ' → logprob: -17.375261306762695
    4. '	' → logprob: -20.250261306762695
    5. '０' → logprob: -20.250261306762695
    6. '(' → logprob: -20.250261306762695
    7. '۰' → logprob: -20.750261306762695
    8. '  ' → logprob: -21.250261306762695
    9. '    ' → logprob: -21.625261306762695
    10. ' ' → logprob: -21.750261306762695

Token 808: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.611323624383658e-05
    2. ' ' → logprob: -9.625065803527832
    3. '   ' → logprob: -17.75006675720215
    4. '(' → logprob: -20.37506675720215
    5. '	' → logprob: -21.00006675720215
    6. '۰' → logprob: -21.50006675720215
    7. '０' → logprob: -21.50006675720215
    8. '  ' → logprob: -22.12506675720215
    9. ' (' → logprob: -22.25006675720215
    10. '  ' → logprob: -22.37506675720215

Token 809: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1815325915813446
    2. ':
' → logprob: -2.556532621383667
    3. '           ' → logprob: -3.306532621383667
    4. ':' → logprob: -3.556532621383667
    5. 'and' → logprob: -3.931532621383667
    6. '               ' → logprob: -6.431532382965088
    7. '       ' → logprob: -6.556532382965088
    8. '   ' → logprob: -8.431532859802246
    9. '	and' → logprob: -9.181532859802246
    10. ' continue' → logprob: -9.931532859802246

Token 810: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1364661157131195
    2. '           ' → logprob: -2.2614660263061523
    3. ' continue' → logprob: -4.511466026306152
    4. ' for' → logprob: -4.761466026306152
    5. 'continue' → logprob: -6.386466026306152
    6. ' if' → logprob: -7.386466026306152
    7. '   ' → logprob: -7.636466026306152
    8. 'for' → logprob: -7.636466026306152
    9. '       ' → logprob: -8.636466026306152
    10. '	           ' → logprob: -9.261466026306152

Token 811: ' continue' (ID: 4901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19424964487552643
    2. ' for' → logprob: -2.0692496299743652
    3. 'continue' (adapté à ' continue') → logprob: -3.4442496299743652
    4. ' continue' → logprob: -5.194249629974365
    5. 'if' → logprob: -5.569249629974365
    6. '                   ' → logprob: -5.569249629974365
    7. '   ' → logprob: -5.819249629974365
    8. '               ' → logprob: -7.069249629974365
    9. '           ' → logprob: -7.444249629974365
    10. 'break' → logprob: -7.819249629974365

Token 812: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00534736318513751
    2. '       ' → logprob: -5.25534725189209
    3. '   ' → logprob: -9.25534725189209
    4. 'for' → logprob: -12.13034725189209
    5. '               ' → logprob: -12.63034725189209
    6. ' for' → logprob: -12.88034725189209
    7. '	   ' → logprob: -13.50534725189209
    8. '<|end|>' → logprob: -13.75534725189209
    9. '          ' → logprob: -14.13034725189209
    10. '	       ' → logprob: -14.38034725189209

Token 813: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014264225959777832
    2. '       ' → logprob: -4.264264106750488
    3. '   ' → logprob: -9.639264106750488
    4. 'for' → logprob: -10.389264106750488
    5. '               ' → logprob: -13.139264106750488
    6. ' for' → logprob: -13.389264106750488
    7. '	   ' → logprob: -14.889264106750488
    8. '         ' → logprob: -15.389264106750488
    9. '          ' → logprob: -15.764264106750488
    10. '                   ' → logprob: -15.764264106750488

Token 814: ' coinc' (ID: 31733)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3886217176914215
    2. 'for' → logprob: -1.1386216878890991
    3. '           ' → logprob: -6.763621807098389
    4. ' for' → logprob: -7.638621807098389
    5. '   ' → logprob: -9.13862133026123
    6. ' ' → logprob: -13.01362133026123
    7. '               ' → logprob: -13.26362133026123
    8. 'if' → logprob: -14.51362133026123
    9. '	for' → logprob: -14.88862133026123
    10. '#' → logprob: -16.513622283935547

Token 815: ' =' (ID: 314)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.26461702585220337
    2. 'd' → logprob: -2.3896169662475586
    3. 'ent' → logprob: -2.8896169662475586
    4. 'de' → logprob: -3.7646169662475586
    5. 'ences' → logprob: -4.264616966247559
    6. 'ed' → logprob: -4.764616966247559
    7. 'id' → logprob: -4.764616966247559
    8. 'ide' → logprob: -4.764616966247559
    9. 'ence' → logprob: -5.014616966247559
    10. 'dent' → logprob: -5.389616966247559

Token 816: ' ""
' (ID: 18061)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38743942975997925
    2. 'False' → logprob: -1.137439489364624
    3. '1' → logprob: -8.262439727783203
    4. 'True' → logprob: -8.762439727783203
    5. ' False' → logprob: -9.137439727783203
    6. '   ' → logprob: -11.262439727783203
    7. ' ' → logprob: -11.887439727783203
    8. '-' → logprob: -12.387439727783203
    9. 'A' → logprob: -12.887439727783203
    10. '[]
' → logprob: -13.012439727783203

Token 817: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06125427037477493
    2. '               ' → logprob: -3.0612542629241943
    3. 'for' → logprob: -5.186254501342773
    4. ' for' → logprob: -5.436254501342773
    5. '       ' → logprob: -6.061254501342773
    6. '	       ' → logprob: -8.936254501342773
    7. '<|end|>' → logprob: -9.061254501342773
    8. '                   ' → logprob: -11.061254501342773
    9. '		' → logprob: -11.686254501342773
    10. '		       ' → logprob: -11.936254501342773

Token 818: ' dif' (ID: 1501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005545823951251805
    2. '           ' → logprob: -7.50055456161499
    3. ' for' → logprob: -13.500555038452148
    4. '       ' → logprob: -16.00055503845215
    5. '   ' → logprob: -17.00055503845215
    6. 'flag' → logprob: -17.37555503845215
    7. 'ok' → logprob: -18.00055503845215
    8. '               ' → logprob: -18.25055503845215
    9. '
' → logprob: -18.75055503845215
    10. '	for' → logprob: -18.87555503845215

Token 819: ' =' (ID: 314)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4586159586906433
    2. 'ference' → logprob: -1.333616018295288
    3. 'fer' → logprob: -2.458616018295288
    4. 'ferences' → logprob: -5.333615779876709
    5. '=' → logprob: -5.458615779876709
    6. 'er' → logprob: -6.333615779876709
    7. 'fs' → logprob: -6.458615779876709
    8. 't' → logprob: -6.958615779876709
    9. ' =' → logprob: -6.958615779876709
    10. 'fe' → logprob: -7.458615779876709

Token 820: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.050148218870162964
    2. 'False' → logprob: -3.0501482486724854
    3. '1' → logprob: -7.050148010253906
    4. 'True' → logprob: -7.425148010253906
    5. '[]
' → logprob: -10.550148010253906
    6. ' False' → logprob: -10.800148010253906
    7. ' ' → logprob: -11.050148010253906
    8. '[]' → logprob: -11.425148010253906
    9. '   ' → logprob: -12.175148010253906
    10. '           ' → logprob: -12.925148010253906

Token 821: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.007704349234700203
    2. 'False' → logprob: -5.007704257965088
    3. '1' → logprob: -7.757704257965088
    4. '[]
' → logprob: -8.757704734802246
    5. 'True' → logprob: -9.257704734802246
    6. 'H' → logprob: -9.507704734802246
    7. '[]' → logprob: -9.507704734802246
    8. '-' → logprob: -9.757704734802246
    9. 'W' → logprob: -10.757704734802246
    10. 'j' → logprob: -11.507704734802246

Token 822: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2887974679470062
    2. '<|end|>' → logprob: -1.7887974977493286
    3. '       ' → logprob: -2.913797378540039
    4. '
' → logprob: -4.413797378540039
    5. ' for' → logprob: -5.038797378540039
    6. '   ' → logprob: -6.288797378540039
    7. '<|end|>' → logprob: -6.288797378540039
    8. '		' → logprob: -6.538797378540039
    9. 'for' → logprob: -7.163797378540039
    10. '               ' → logprob: -7.413797378540039

Token 823: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.685223400592804
    2. '       ' → logprob: -1.4352233409881592
    3. '<|end|>' → logprob: -1.5602233409881592
    4. ' for' → logprob: -3.685223340988159
    5. '   ' → logprob: -5.310223579406738
    6. '		' → logprob: -5.560223579406738
    7. '               ' → logprob: -5.810223579406738
    8. 'for' → logprob: -6.310223579406738
    9. '	       ' → logprob: -6.685223579406738
    10. ' ' → logprob: -6.685223579406738

Token 824: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01772361993789673
    2. '           ' → logprob: -4.267723560333252
    3. ' for' → logprob: -5.642723560333252
    4. '   ' → logprob: -12.26772403717041
    5. '       ' → logprob: -12.89272403717041
    6. '               ' → logprob: -13.51772403717041
    7. '```' → logprob: -14.26772403717041
    8. ' ' → logprob: -14.39272403717041
    9. '	for' → logprob: -15.51772403717041
    10. 'ok' → logprob: -16.267723083496094

Token 825: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.7432603272027336e-06
    2. ' w' → logprob: -13.750001907348633
    3. 'ww' → logprob: -14.500001907348633
    4. 'k' → logprob: -16.375001907348633
    5. 'c' → logprob: -17.375001907348633
    6. 'wi' → logprob: -18.375001907348633
    7. 'x' → logprob: -18.500001907348633
    8. 'l' → logprob: -18.750001907348633
    9. '_w' → logprob: -18.875001907348633
    10. 'W' → logprob: -19.125001907348633

Token 826: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03804241120815277
    2. 'in' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.038042068481445
    4. 'w' → logprob: -15.538042068481445
    5. '	in' → logprob: -15.663042068481445
    6. '   ' → logprob: -16.913042068481445
    7. 'range' → logprob: -16.913042068481445
    8. '```' → logprob: -16.913042068481445
    9. '
' → logprob: -17.413042068481445
    10. '<|end|>' → logprob: -17.663042068481445

Token 827: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -3.547789674485102e-05
    2. ' range' → logprob: -10.250035285949707
    3. '(range' → logprob: -16.750036239624023
    4. '
' → logprob: -18.250036239624023
    5. 'W' → logprob: -18.375036239624023
    6. '	range' → logprob: -19.500036239624023
    7. '   ' → logprob: -19.500036239624023
    8. 'r' → logprob: -19.750036239624023
    9. ' ' → logprob: -19.875036239624023
    10. '  ' → logprob: -20.250036239624023

Token 828: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.04863778129220009
    2. 'W' → logprob: -3.048637866973877
    3. '(' → logprob: -10.548637390136719
    4. '(H' → logprob: -12.298637390136719
    5. '
' → logprob: -12.673637390136719
    6. '(
' → logprob: -12.798637390136719
    7. 'j' → logprob: -13.048637390136719
    8. '0' → logprob: -13.673637390136719
    9. '1' → logprob: -14.173637390136719
    10. '           ' → logprob: -14.173637390136719

Token 829: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06571576744318008
    2. '):' → logprob: -3.565715789794922
    3. '+' → logprob: -3.690715789794922
    4. '               ' → logprob: -5.815715789794922
    5. '           ' → logprob: -6.190715789794922
    6. ')' → logprob: -6.815715789794922
    7. '<|end|>' → logprob: -7.065715789794922
    8. '       ' → logprob: -7.440715789794922
    9. ',' → logprob: -7.565715789794922
    10. ':' → logprob: -7.815715789794922

Token 830: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018009616760537028
    2. ' if' → logprob: -6.626801013946533
    3. '	           ' → logprob: -8.751800537109375
    4. '			' → logprob: -9.251800537109375
    5. '              ' → logprob: -9.751800537109375
    6. '                ' → logprob: -10.501800537109375
    7. '<|end|>' → logprob: -10.501800537109375
    8. '		       ' → logprob: -10.876800537109375
    9. '           ' → logprob: -11.126800537109375
    10. '                
' → logprob: -11.251800537109375

Token 831: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8764643669128418
    2. ' if' → logprob: -1.2514643669128418
    3. '                   ' → logprob: -1.3764643669128418
    4. 'if' (adapté à ' if') → logprob: -3.376464366912842
    5. '                ' → logprob: -5.751464366912842
    6. ' coin' → logprob: -6.626464366912842
    7. 'co' → logprob: -6.876464366912842
    8. '   ' → logprob: -7.001464366912842
    9. '           ' → logprob: -7.001464366912842
    10. '	           ' → logprob: -7.626464366912842

Token 832: ' (' (ID: 350)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.6075202226638794
    2. '(i' → logprob: -1.1075202226638794
    3. ' (' → logprob: -2.10752010345459
    4. '((' → logprob: -5.85752010345459
    5. '(w' → logprob: -8.60752010345459
    6. '(not' → logprob: -8.98252010345459
    7. 'not' → logprob: -9.85752010345459
    8. 'j' → logprob: -9.98252010345459
    9. ' ((' → logprob: -10.23252010345459
    10. ' not' → logprob: -10.98252010345459

Token 833: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.4040592312812805
    2. '(i' → logprob: -1.7790591716766357
    3. 'j' → logprob: -1.9040591716766357
    4. 'i' → logprob: -4.404059410095215
    5. ' (' → logprob: -7.404059410095215
    6. '(w' → logprob: -7.404059410095215
    7. 'not' → logprob: -7.654059410095215
    8. '((' → logprob: -8.529059410095215
    9. '(not' → logprob: -8.654059410095215
    10. ' j' → logprob: -9.279059410095215

Token 834: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.07890300452709198
    2. '&' → logprob: -2.5789029598236084
    3. ' &
' → logprob: -12.453903198242188
    4. '&
' → logprob: -13.578903198242188
    5. '&w' → logprob: -13.828903198242188
    6. '&amp' → logprob: -13.828903198242188
    7. '&p' → logprob: -14.078903198242188
    8. '&(' → logprob: -14.078903198242188
    9. '＆' → logprob: -14.203903198242188
    10. ' ' → logprob: -14.328903198242188

Token 835: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0549260638654232
    2. ' (' → logprob: -2.9299261569976807
    3. '(w' → logprob: -10.304925918579102
    4. '(not' → logprob: -12.304925918579102
    5. 'w' → logprob: -13.179925918579102
    6. '0' → logprob: -13.804925918579102
    7. '1' → logprob: -14.304925918579102
    8. '((' → logprob: -14.929925918579102
    9. '(False' → logprob: -15.304925918579102
    10. '(None' → logprob: -15.429925918579102

Token 836: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023404466919600964
    2. 'w' → logprob: -6.377340316772461
    3. ' (' → logprob: -8.002340316772461
    4. '1' → logprob: -8.127340316772461
    5. '(w' → logprob: -12.252340316772461
    6. ' w' → logprob: -14.252340316772461
    7. '0' → logprob: -14.502340316772461
    8. '```' → logprob: -14.502340316772461
    9. ')' → logprob: -15.252340316772461
    10. '
' → logprob: -15.252340316772461

Token 837: ' <<' (ID: 2256)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.020978350192308426
    2. ' w' → logprob: -5.0209784507751465
    3. '<<' → logprob: -5.3959784507751465
    4. '(w' → logprob: -5.7709784507751465
    5. ')' → logprob: -6.1459784507751465
    6. ' (' → logprob: -6.7709784507751465
    7. '(' → logprob: -6.8959784507751465
    8. '<w' → logprob: -6.8959784507751465
    9. '_w' → logprob: -8.645977973937988
    10. '   ' → logprob: -8.770977973937988

Token 838: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0325924449716695e-05
    2. ' w' → logprob: -11.50001049041748
    3. '   ' → logprob: -16.875009536743164
    4. '
' → logprob: -17.750009536743164
    5. '	w' → logprob: -17.875009536743164
    6. '               ' → logprob: -18.250009536743164
    7. '           ' → logprob: -18.500009536743164
    8. '                   ' → logprob: -18.625009536743164
    9. '(w' → logprob: -18.625009536743164
    10. '       ' → logprob: -19.625009536743164

Token 839: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022821188031230122
    2. ')==' → logprob: -8.500227928161621
    3. ')!=' → logprob: -11.250227928161621
    4. '==' → logprob: -12.125227928161621
    5. '):
' → logprob: -13.375227928161621
    6. ' )' → logprob: -13.500227928161621
    7. '               ' → logprob: -13.875227928161621
    8. '))' → logprob: -14.375227928161621
    9. '                   ' → logprob: -14.500227928161621
    10. '!=' → logprob: -15.125227928161621

Token 840: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3201141655445099
    2. ' ==' → logprob: -1.6951141357421875
    3. ')' → logprob: -3.4451141357421875
    4. ' !=' → logprob: -3.8201141357421875
    5. '!=' → logprob: -3.8201141357421875
    6. ')==' → logprob: -4.3201141357421875
    7. ')!=' → logprob: -6.8201141357421875
    8. '                   ' → logprob: -9.820114135742188
    9. ']==' → logprob: -10.195114135742188
    10. '):
' → logprob: -10.445114135742188

Token 841: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.97024549683556e-05
    2. '1' → logprob: -9.875080108642578
    3. ' ' → logprob: -10.625080108642578
    4. 'w' → logprob: -12.625080108642578
    5. '
' → logprob: -14.750080108642578
    6. '   ' → logprob: -16.687580108642578
    7. '=' → logprob: -17.875080108642578
    8. '```' → logprob: -18.062580108642578
    9. 'h' → logprob: -18.125080108642578
    10. '  ' → logprob: -18.187580108642578

Token 842: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8802491215174086e-05
    2. '1' → logprob: -11.250028610229492
    3. 'w' → logprob: -11.500028610229492
    4. ' ' → logprob: -12.125028610229492
    5. '
' → logprob: -15.875028610229492
    6. '   ' → logprob: -17.625028610229492
    7. 'h' → logprob: -18.000028610229492
    8. '=' → logprob: -18.437528610229492
    9. '(' → logprob: -19.187528610229492
    10. '  ' → logprob: -19.312528610229492

Token 843: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008437154814600945
    2. '               ' → logprob: -6.008437156677246
    3. ':
' → logprob: -6.883437156677246
    4. '                       ' → logprob: -7.008437156677246
    5. ' and' → logprob: -7.508437156677246
    6. '		           ' → logprob: -7.508437156677246
    7. '(co' → logprob: -8.133437156677246
    8. ':' → logprob: -8.258437156677246
    9. '==' → logprob: -8.258437156677246
    10. '   ' → logprob: -8.258437156677246

Token 844: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.012519778683781624
    2. 'co' → logprob: -4.762519836425781
    3. '               ' → logprob: -6.012519836425781
    4. 'coin' → logprob: -8.012519836425781
    5. ' coinc' → logprob: -8.137519836425781
    6. '(co' → logprob: -8.262519836425781
    7. ' coin' → logprob: -9.012519836425781
    8. '           ' → logprob: -9.512519836425781
    9. '                       ' → logprob: -9.512519836425781
    10. ' co' → logprob: -10.137519836425781

Token 845: ' continue' (ID: 4901)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.17001979053020477
    2. '                   ' → logprob: -2.6700198650360107
    3. ' continue' → logprob: -3.5450198650360107
    4. 'continue' (adapté à ' continue') → logprob: -3.5450198650360107
    5. ' coinc' → logprob: -4.670019626617432
    6. 'coin' → logprob: -5.045019626617432
    7. 'if' → logprob: -5.545019626617432
    8. '               ' → logprob: -6.045019626617432
    9. '   ' → logprob: -6.295019626617432
    10. ' co' → logprob: -6.670019626617432

Token 846: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03913227096199989
    2. '                       ' → logprob: -4.039132118225098
    3. '               ' → logprob: -4.164132118225098
    4. 'co' → logprob: -5.789132118225098
    5. '+' → logprob: -7.789132118225098
    6. '(co' → logprob: -8.164132118225098
    7. ' co' → logprob: -8.789132118225098
    8. '           ' → logprob: -8.914132118225098
    9. '   ' → logprob: -8.914132118225098
    10. '-co' → logprob: -9.039132118225098

Token 847: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2438056915998459
    2. '               ' → logprob: -1.6188056468963623
    3. 'co' → logprob: -4.743805885314941
    4. '                       ' → logprob: -4.993805885314941
    5. ' co' → logprob: -7.618805885314941
    6. '	               ' → logprob: -7.743805885314941
    7. ' if' → logprob: -7.868805885314941
    8. 'coin' → logprob: -8.493805885314941
    9. '		           ' → logprob: -8.618805885314941
    10. '(co' → logprob: -8.743805885314941

Token 848: ' if' (ID: 538)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.23783227801322937
    2. '               ' → logprob: -1.9878323078155518
    3. '                   ' → logprob: -3.2378323078155518
    4. 'coin' → logprob: -3.9878323078155518
    5. ' coinc' → logprob: -4.612832069396973
    6. 'if' (adapté à ' if') → logprob: -5.487832069396973
    7. '           ' → logprob: -7.362832069396973
    8. '   ' → logprob: -7.612832069396973
    9. ' if' → logprob: -8.112832069396973
    10. ' coin' → logprob: -8.237832069396973

Token 849: ' coinc' (ID: 31733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.47435900568962097
    2. ' A' → logprob: -0.9743590354919434
    3. '                   ' → logprob: -8.724358558654785
    4. '               ' → logprob: -10.099358558654785
    5. '   ' → logprob: -11.099358558654785
    6. '	A' → logprob: -11.224358558654785
    7. ' not' → logprob: -11.599358558654785
    8. '                ' → logprob: -11.724358558654785
    9. ' ' → logprob: -12.349358558654785
    10. ' ' → logprob: -12.599358558654785

Token 850: ' ==' (ID: 951)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.023853980004787445
    2. '+=' → logprob: -4.773853778839111
    3. '==' → logprob: -5.273853778839111
    4. '[' → logprob: -5.398853778839111
    5. ' +=' → logprob: -5.773853778839111
    6. '+' → logprob: -7.273853778839111
    7. '!=' → logprob: -7.648853778839111
    8. ' ==' → logprob: -7.648853778839111
    9. '[w' → logprob: -8.27385425567627
    10. ' !=' → logprob: -8.39885425567627

Token 851: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.022216377779841423
    2. '"":' → logprob: -3.897216320037842
    3. '''' → logprob: -6.897216320037842
    4. '"' → logprob: -7.647216320037842
    5. '"A' → logprob: -8.772216796875
    6. ''' → logprob: -11.522216796875
    7. 'A' → logprob: -11.647216796875
    8. ' "":
' → logprob: -12.397216796875
    9. ''A' → logprob: -12.772216796875
    10. '"",' → logprob: -13.397216796875

Token 852: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.45586955547332764
    2. 'co' → logprob: -1.0808695554733276
    3. ' coinc' → logprob: -4.080869674682617
    4. '                       ' → logprob: -5.080869674682617
    5. 'coin' → logprob: -6.205869674682617
    6. '               ' → logprob: -7.455869674682617
    7. '(co' → logprob: -8.080869674682617
    8. '                           ' → logprob: -8.705869674682617
    9. '                    
' → logprob: -9.330869674682617
    10. '+' → logprob: -9.580869674682617

Token 853: ' coinc' (ID: 31733)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0008332127472385764
    2. 'coin' → logprob: -7.250833034515381
    3. '                   ' → logprob: -9.625833511352539
    4. '               ' → logprob: -10.375833511352539
    5. 'A' → logprob: -11.000833511352539
    6. ' coinc' → logprob: -12.750833511352539
    7. '
' → logprob: -13.125833511352539
    8. '                    
' → logprob: -14.125833511352539
    9. '                
' → logprob: -14.250833511352539
    10. '           ' → logprob: -14.500833511352539

Token 854: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0013647585874423385
    2. ' =' → logprob: -6.876364707946777
    3. '=A' → logprob: -8.501364707946777
    4. '+=' → logprob: -9.001364707946777
    5. 'A' → logprob: -12.251364707946777
    6. '=
' → logprob: -15.376364707946777
    7. '==' → logprob: -15.751364707946777
    8. ' +=' → logprob: -15.751364707946777
    9. ' A' → logprob: -16.876365661621094
    10. '+' → logprob: -17.501365661621094

Token 855: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -1.4021237802808173e-05
    2. ' A' → logprob: -11.250014305114746
    3. '"A' → logprob: -14.500014305114746
    4. ''A' → logprob: -15.375014305114746
    5. '   ' → logprob: -15.625014305114746
    6. ' ' → logprob: -17.00001335144043
    7. '"' → logprob: -18.00001335144043
    8. '  ' → logprob: -18.12501335144043
    9. 'str' → logprob: -18.37501335144043
    10. 'a' → logprob: -18.62501335144043

Token 856: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -7.064297824399546e-05
    2. 'h' → logprob: -9.625070571899414
    3. '[i' → logprob: -12.375070571899414
    4. '[' → logprob: -15.250070571899414
    5. '[w' → logprob: -17.500070571899414
    6. '[j' → logprob: -18.375070571899414
    7. '```' → logprob: -19.000070571899414
    8. '[v' → logprob: -19.125070571899414
    9. '[u' → logprob: -19.250070571899414
    10. '(h' → logprob: -19.375070571899414

Token 857: '][' (ID: 2696)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.0010160179808735847
    2. '[' → logprob: -7.751016139984131
    3. '[h' → logprob: -7.876016139984131
    4. 'w' → logprob: -9.251015663146973
    5. '][' → logprob: -9.376015663146973
    6. '[j' → logprob: -11.751015663146973
    7. '
' → logprob: -12.126015663146973
    8. '[
' → logprob: -12.376015663146973
    9. ' [' → logprob: -13.001015663146973
    10. '```' → logprob: -13.376015663146973

Token 858: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0280383548888494e-06
    2. ' w' → logprob: -14.125000953674316
    3. '
' → logprob: -16.000001907348633
    4. '0' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.875001907348633
    6. '[w' → logprob: -18.000001907348633
    7. ':w' → logprob: -18.250001907348633
    8. '	w' → logprob: -18.625001907348633
    9. '```' → logprob: -19.125001907348633
    10. '_w' → logprob: -19.250001907348633

Token 859: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.24447380006313324
    2. ']
' → logprob: -2.119473695755005
    3. '               ' → logprob: -2.744473695755005
    4. '                   ' → logprob: -4.744473934173584
    5. 'else' → logprob: -4.744473934173584
    6. '<|end|>' → logprob: -5.619473934173584
    7. ' else' → logprob: -6.119473934173584
    8. '
' → logprob: -6.494473934173584
    9. 'elif' → logprob: -6.744473934173584
    10. '                           ' → logprob: -6.869473934173584

Token 860: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12527036666870117
    2. '                   ' → logprob: -2.250270366668701
    3. 'elif' → logprob: -5.250270366668701
    4. 'else' → logprob: -5.875270366668701
    5. ' else' → logprob: -6.750270366668701
    6. ' elif' → logprob: -7.250270366668701
    7. '           ' → logprob: -7.375270366668701
    8. '<|end|>' → logprob: -7.500270366668701
    9. '                       ' → logprob: -8.37527084350586
    10. '                    
' → logprob: -8.62527084350586

Token 861: ' elif' (ID: 9497)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.9689919948577881
    2. ' elif' → logprob: -0.9689919948577881
    3. ' else' → logprob: -1.843991994857788
    4. 'elif' (adapté à ' elif') → logprob: -2.968991994857788
    5. '                   ' → logprob: -4.093992233276367
    6. 'else' → logprob: -4.343992233276367
    7. '                ' → logprob: -7.843992233276367
    8. '<|end|>' → logprob: -7.968992233276367
    9. '                               ' → logprob: -8.343992233276367
    10. '                       ' → logprob: -8.718992233276367

Token 862: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.04194523021578789
    2. 'co' → logprob: -3.541945219039917
    3. ' A' → logprob: -4.416945457458496
    4. ' coinc' → logprob: -10.791945457458496
    5. 'coin' → logprob: -11.166945457458496
    6. ' ' → logprob: -12.916945457458496
    7. '   ' → logprob: -12.916945457458496
    8. ' co' → logprob: -13.291945457458496
    9. '	A' → logprob: -13.416945457458496
    10. '(co' → logprob: -13.541945457458496

Token 863: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -2.1008713702030946e-06
    2. 'h' → logprob: -13.125001907348633
    3. '<h' → logprob: -19.750001907348633
    4. '	h' → logprob: -19.875001907348633
    5. '[' → logprob: -20.375001907348633
    6. '[u' → logprob: -20.625001907348633
    7. '[
' → logprob: -20.625001907348633
    8. '
' → logprob: -21.125001907348633
    9. '[i' → logprob: -21.500001907348633
    10. '[a' → logprob: -21.625001907348633

Token 864: '][' (ID: 2696)
  Prédit: '[h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.003623000578954816
    2. '][' → logprob: -5.628623008728027
    3. 'h' → logprob: -11.128623008728027
    4. '[' → logprob: -12.003623008728027
    5. '[w' → logprob: -14.378623008728027
    6. '[i' → logprob: -15.128623008728027
    7. '
' → logprob: -15.878623008728027
    8. '[u' → logprob: -15.878623008728027
    9. '[
' → logprob: -16.12862205505371
    10. '```' → logprob: -16.37862205505371

Token 865: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.003605416975915432
    2. 'h' → logprob: -5.628605365753174
    3. '[w' → logprob: -12.878605842590332
    4. '```' → logprob: -14.003605842590332
    5. '[h' → logprob: -14.128605842590332
    6. '
' → logprob: -14.878605842590332
    7. ' w' → logprob: -15.503605842590332
    8. '[' → logprob: -15.878605842590332
    9. '   ' → logprob: -16.378604888916016
    10. 'i' → logprob: -16.503604888916016

Token 866: ']' (ID: 60)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.34961527585983276
    2. ' !=' → logprob: -1.2246153354644775
    3. ']!=' → logprob: -7.224615097045898
    4. ')!=' → logprob: -9.099615097045898
    5. '[' → logprob: -9.224615097045898
    6. ']' → logprob: -9.474615097045898
    7. ')' → logprob: -10.474615097045898
    8. '<' → logprob: -10.599615097045898
    9. '==' → logprob: -10.974615097045898
    10. '```' → logprob: -10.974615097045898

Token 867: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.12727685272693634
    2. ' !=' → logprob: -2.12727689743042
    3. '[' → logprob: -8.627276420593262
    4. '<' → logprob: -9.877276420593262
    5. '==' → logprob: -9.877276420593262
    6. ')!=' → logprob: -11.127276420593262
    7. '<>' → logprob: -11.502276420593262
    8. '	' → logprob: -11.627276420593262
    9. ']!=' → logprob: -12.002276420593262
    10. ' ==' → logprob: -12.127276420593262

Token 868: ' coinc' (ID: 31733)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.001296073431149125
    2. 'coin' → logprob: -6.876296043395996
    3. ' coinc' → logprob: -8.251296043395996
    4. '
' → logprob: -14.501296043395996
    5. 'coins' → logprob: -15.126296043395996
    6. ' ' → logprob: -15.126296043395996
    7. 'c' → logprob: -15.501296043395996
    8. '```' → logprob: -15.501296043395996
    9. 'coeff' → logprob: -15.751296043395996
    10. '`' → logprob: -16.251296997070312

Token 869: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2873668074607849
    2. '                   ' → logprob: -1.9123668670654297
    3. '                       ' → logprob: -3.2873668670654297
    4. 'and' → logprob: -3.7873668670654297
    5. ':' → logprob: -3.9123668670654297
    6. ' and' → logprob: -4.03736686706543
    7. '               ' → logprob: -6.28736686706543
    8. '                           ' → logprob: -6.91236686706543
    9. ' :
' → logprob: -8.66236686706543
    10. '<|end|>' → logprob: -9.16236686706543

Token 870: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14234216511249542
    2. '                       ' → logprob: -2.3923420906066895
    3. 'dif' → logprob: -3.8923420906066895
    4. ' dif' → logprob: -4.1423420906066895
    5. '               ' → logprob: -5.7673420906066895
    6. 'diff' → logprob: -7.8923420906066895
    7. '                           ' → logprob: -8.392342567443848
    8. '                  ' → logprob: -8.517342567443848
    9. '                    ' → logprob: -8.642342567443848
    10. '   ' → logprob: -9.017342567443848

Token 871: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' (adapté à ' dif') → logprob: -0.002259806264191866
    2. ' dif' → logprob: -6.502259731292725
    3. 'ok' → logprob: -7.377259731292725
    4. 'diff' → logprob: -9.252260208129883
    5. '
' → logprob: -11.627260208129883
    6. 'break' → logprob: -11.877260208129883
    7. '   ' → logprob: -12.002260208129883
    8. ' ok' → logprob: -12.377260208129883
    9. '               ' → logprob: -12.752260208129883
    10. 'd' → logprob: -13.127260208129883

Token 872: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.13930459320545197
    2. '+=' → logprob: -2.3893046379089355
    3. ' =' → logprob: -3.5143046379089355
    4. ' +=' → logprob: -4.7643046379089355
    5. '+' → logprob: -10.639304161071777
    6. 'f' → logprob: -12.389304161071777
    7. ' |=' → logprob: -12.389304161071777
    8. '-=' → logprob: -12.389304161071777
    9. '   ' → logprob: -13.139304161071777
    10. '=
' → logprob: -13.264304161071777

Token 873: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5332478142227046e-05
    2. ' ' → logprob: -11.125015258789062
    3. '2' → logprob: -14.875015258789062
    4. '   ' → logprob: -17.125015258789062
    5. '
' → logprob: -17.250015258789062
    6. '+' → logprob: -17.375015258789062
    7. 'True' → logprob: -17.375015258789062
    8. '-' → logprob: -17.500015258789062
    9. '0' → logprob: -18.250015258789062
    10. 'true' → logprob: -18.625015258789062

Token 874: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.236549335066229e-05
    2. '-' → logprob: -11.000021934509277
    3. ' ' → logprob: -13.000021934509277
    4. '2' → logprob: -13.250021934509277
    5. 'True' → logprob: -13.875021934509277
    6. '999' → logprob: -15.750021934509277
    7. '0' → logprob: -15.875021934509277
    8. '100' → logprob: -16.375022888183594
    9. '
' → logprob: -16.750022888183594
    10. 'max' → logprob: -17.000022888183594

Token 875: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004413975402712822
    2. 'break' → logprob: -8.250441551208496
    3. '                       ' → logprob: -9.125441551208496
    4. '               ' → logprob: -10.375441551208496
    5. ' break' → logprob: -11.375441551208496
    6. '           ' → logprob: -11.625441551208496
    7. '				' → logprob: -12.375441551208496
    8. '
' → logprob: -12.750441551208496
    9. '       ' → logprob: -12.875441551208496
    10. '	break' → logprob: -13.375441551208496

Token 876: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009948217775672674
    2. '                       ' → logprob: -7.500994682312012
    3. '               ' → logprob: -8.250994682312012
    4. '           ' → logprob: -9.250994682312012
    5. '                           ' → logprob: -10.875994682312012
    6. '       ' → logprob: -11.000994682312012
    7. '   ' → logprob: -11.625994682312012
    8. '                    ' → logprob: -12.125994682312012
    9. '                    
' → logprob: -12.125994682312012
    10. '                  ' → logprob: -12.250994682312012

Token 877: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.032222215086221695
    2. ' break' → logprob: -4.032222270965576
    3. '                   ' → logprob: -4.282222270965576
    4. '                       ' → logprob: -9.157221794128418
    5. '               ' → logprob: -10.907221794128418
    6. '	break' → logprob: -11.282221794128418
    7. '```' → logprob: -11.532221794128418
    8. '                           ' → logprob: -11.657221794128418
    9. '           ' → logprob: -13.532221794128418
    10. '                               ' → logprob: -13.782221794128418

Token 878: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6199785470962524
    2. '                   ' → logprob: -1.1199785470962524
    3. '               ' → logprob: -2.369978427886963
    4. ' if' → logprob: -4.119978427886963
    5. 'if' → logprob: -4.369978427886963
    6. '       ' → logprob: -4.744978427886963
    7. '                       ' → logprob: -6.369978427886963
    8. '<|end|>' → logprob: -6.994978427886963
    9. '
' → logprob: -7.494978427886963
    10. '   ' → logprob: -7.619978427886963

Token 879: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42457178235054016
    2. '                   ' → logprob: -1.4245717525482178
    3. '               ' → logprob: -3.0495717525482178
    4. '       ' → logprob: -3.2995717525482178
    5. ' if' → logprob: -4.674571990966797
    6. 'if' → logprob: -4.799571990966797
    7. '   ' → logprob: -7.174571990966797
    8. '<|end|>' → logprob: -7.174571990966797
    9. '                       ' → logprob: -7.424571990966797
    10. '
' → logprob: -9.049571990966797

Token 880: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5498441457748413
    2. ' if' → logprob: -1.2998441457748413
    3. '               ' → logprob: -2.924844264984131
    4. '       ' → logprob: -3.549844264984131
    5. '<|end|>' → logprob: -3.549844264984131
    6. 'if' (adapté à ' if') → logprob: -3.674844264984131
    7. '                   ' → logprob: -5.049844264984131
    8. ' ' → logprob: -6.924844264984131
    9. ')' → logprob: -7.549844264984131
    10. '            ' → logprob: -7.674844264984131

Token 881: ' dif' (ID: 1501)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.8573189973831177
    2. 'dif' → logprob: -1.2323189973831177
    3. 'not' → logprob: -1.6073189973831177
    4. ' dif' → logprob: -2.482318878173828
    5. 'diff' → logprob: -10.232318878173828
    6. '   ' → logprob: -10.357318878173828
    7. '!' → logprob: -11.732318878173828
    8. ' ' → logprob: -11.732318878173828
    9. '           ' → logprob: -11.857318878173828
    10. '	not' → logprob: -12.607318878173828

Token 882: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.32063448429107666
    2. ' ==' → logprob: -1.3206344842910767
    3. ':' → logprob: -5.195634365081787
    4. '!=' → logprob: -6.945634365081787
    5. '=' → logprob: -8.070634841918945
    6. ' !=' → logprob: -8.320634841918945
    7. ':
' → logprob: -8.945634841918945
    8. '           ' → logprob: -10.320634841918945
    9. '       ' → logprob: -10.570634841918945
    10. 'continue' → logprob: -11.070634841918945

Token 883: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006108098896220326
    2. ' ' → logprob: -7.750610828399658
    3. '0' → logprob: -8.6256103515625
    4. '   ' → logprob: -15.1256103515625
    5. 'True' → logprob: -16.8131103515625
    6. '
' → logprob: -17.1256103515625
    7. '```' → logprob: -17.6881103515625
    8. '  ' → logprob: -18.0006103515625
    9. '' → logprob: -18.0631103515625
    10. '    ' → logprob: -18.3131103515625

Token 884: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -11.000031471252441
    3. '0' → logprob: -11.125031471252441
    4. '
' → logprob: -16.875032424926758
    5. '   ' → logprob: -17.250032424926758
    6. 'True' → logprob: -18.375032424926758
    7. '```' → logprob: -18.500032424926758
    8. '' → logprob: -19.437532424926758
    9. '2' → logprob: -19.875032424926758
    10. '=' → logprob: -20.000032424926758

Token 885: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7246159315109253
    2. ':' → logprob: -1.2246159315109253
    3. ':
' → logprob: -1.8496159315109253
    4. ' and' → logprob: -2.974616050720215
    5. '           ' → logprob: -4.724616050720215
    6. '==' → logprob: -5.974616050720215
    7. '       ' → logprob: -7.724616050720215
    8. ' ==' → logprob: -8.224616050720215
    9. ',' → logprob: -8.474616050720215
    10. ' or' → logprob: -8.474616050720215

Token 886: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03776981309056282
    2. '           ' → logprob: -3.6627697944641113
    3. 'ok' → logprob: -4.787769794464111
    4. ' ok' → logprob: -6.537769794464111
    5. '       ' → logprob: -7.412769794464111
    6. 'continue' → logprob: -7.537769794464111
    7. '   ' → logprob: -8.28777027130127
    8. '                   ' → logprob: -9.03777027130127
    9. ' continue' → logprob: -10.16277027130127
    10. '              ' → logprob: -11.03777027130127

Token 887: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.00575184915214777
    2. ' ok' → logprob: -5.505752086639404
    3. '                   ' → logprob: -7.130752086639404
    4. '               ' → logprob: -7.255752086639404
    5. '                       ' → logprob: -10.130751609802246
    6. '   ' → logprob: -10.255751609802246
    7. '```' → logprob: -10.255751609802246
    8. '           ' → logprob: -10.505751609802246
    9. '``' → logprob: -11.630751609802246
    10. 'continue' → logprob: -11.880751609802246

Token 888: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.9361264946837764e-07
    2. '_flag' → logprob: -16.625
    3. 'f' → logprob: -17.25
    4. ' flag' → logprob: -17.625
    5. '	flag' → logprob: -17.625
    6. 'flags' → logprob: -19.125
    7. '=' → logprob: -19.25
    8. 'Flag' → logprob: -20.125
    9. 'fl' → logprob: -20.375
    10. '
' → logprob: -21.0

Token 889: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02992982417345047
    2. ' =' → logprob: -3.5299298763275146
    3. '==' → logprob: -8.779930114746094
    4. ' ==' → logprob: -10.904930114746094
    5. '+=' → logprob: -13.154930114746094
    6. '           ' → logprob: -13.154930114746094
    7. '   ' → logprob: -14.029930114746094
    8. '=False' → logprob: -14.029930114746094
    9. ' +=' → logprob: -15.029930114746094
    10. '               ' → logprob: -15.029930114746094

Token 890: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9862216504407115e-05
    2. ' ' → logprob: -11.375020027160645
    3. 'False' → logprob: -11.750020027160645
    4. '1' → logprob: -15.000020027160645
    5. ' False' → logprob: -16.625019073486328
    6. '   ' → logprob: -17.875019073486328
    7. '=' → logprob: -18.250019073486328
    8. '```' → logprob: -18.375019073486328
    9. '	' → logprob: -18.687519073486328
    10. '
' → logprob: -19.187519073486328

Token 891: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.0100624169572257e-05
    2. 'False' → logprob: -10.875020027160645
    3. '1' → logprob: -14.125020027160645
    4. ' ' → logprob: -15.625020027160645
    5. '
' → logprob: -15.750020027160645
    6. '```' → logprob: -17.75002098083496
    7. ' False' → logprob: -18.18752098083496
    8. '	' → logprob: -18.43752098083496
    9. '-' → logprob: -18.56252098083496
    10. '

' → logprob: -18.75002098083496

Token 892: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.8873001933097839
    2. '       ' → logprob: -1.2623002529144287
    3. '                   ' → logprob: -1.2623002529144287
    4. '<|end|>' → logprob: -5.01230001449585
    5. '           ' → logprob: -5.13730001449585
    6. '                       ' → logprob: -5.88730001449585
    7. 'if' → logprob: -6.63730001449585
    8. ' if' → logprob: -7.01230001449585
    9. '        
' → logprob: -7.51230001449585
    10. '   ' → logprob: -7.63730001449585

Token 893: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22687990963459015
    2. '               ' → logprob: -2.476879835128784
    3. '<|end|>' → logprob: -2.851879835128784
    4. '                   ' → logprob: -4.226880073547363
    5. '        
' → logprob: -4.601880073547363
    6. '           ' → logprob: -5.476880073547363
    7. ' if' → logprob: -5.601880073547363
    8. '  
' → logprob: -5.851880073547363
    9. 'if' → logprob: -5.851880073547363
    10. ')' → logprob: -6.101880073547363

Token 894: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6850481033325195
    2. 'break' (adapté à ' break') → logprob: -0.8100481033325195
    3. ' break' → logprob: -3.4350481033325195
    4. '                   ' → logprob: -4.8100481033325195
    5. '	break' → logprob: -5.6850481033325195
    6. '       ' → logprob: -6.0600481033325195
    7. '           ' → logprob: -6.1850481033325195
    8. '                ' → logprob: -7.4350481033325195
    9. '                       ' → logprob: -7.5600481033325195
    10. 'continue' → logprob: -7.5600481033325195

Token 895: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12667585909366608
    2. '<|end|>' → logprob: -2.751675844192505
    3. ')' → logprob: -4.376676082611084
    4. '        ' → logprob: -4.501676082611084
    5. '        
' → logprob: -5.126676082611084
    6. 'if' → logprob: -5.376676082611084
    7. '               ' → logprob: -5.626676082611084
    8. '                        
' → logprob: -6.126676082611084
    9. ' if' → logprob: -6.376676082611084
    10. ',' → logprob: -6.376676082611084

Token 896: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2861085534095764
    2. ')' → logprob: -2.1611084938049316
    3. '<|end|>' → logprob: -3.1611084938049316
    4. '        
' → logprob: -4.411108493804932
    5. '        ' → logprob: -4.411108493804932
    6. '	' → logprob: -4.661108493804932
    7. ',' → logprob: -5.036108493804932
    8. '               ' → logprob: -5.036108493804932
    9. '\' → logprob: -5.286108493804932
    10. '    ' → logprob: -5.786108493804932

Token 897: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02126535400748253
    2. 'if' (adapté à ' if') → logprob: -4.271265506744385
    3. ' if' → logprob: -6.396265506744385
    4. '           ' → logprob: -6.896265506744385
    5. '               ' → logprob: -6.896265506744385
    6. '        ' → logprob: -7.271265506744385
    7. '<|end|>' → logprob: -7.521265506744385
    8. ')' → logprob: -7.771265506744385
    9. '   ' → logprob: -7.771265506744385
    10. '                   ' → logprob: -7.896265506744385

Token 898: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.1812685877084732
    2. ' ok' → logprob: -1.806268572807312
    3. ' not' → logprob: -7.181268692016602
    4. 'not' → logprob: -7.681268692016602
    5. '(ok' → logprob: -8.431268692016602
    6. ' (' → logprob: -10.556268692016602
    7. '	ok' → logprob: -11.181268692016602
    8. '(' → logprob: -11.431268692016602
    9. '   ' → logprob: -12.181268692016602
    10. 'j' → logprob: -12.431268692016602

Token 899: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -1.0325924449716695e-05
    2. '_flag' → logprob: -11.87501049041748
    3. '(flag' → logprob: -13.37501049041748
    4. ' flag' → logprob: -14.37501049041748
    5. 'flags' → logprob: -14.62501049041748
    6. 'f' → logprob: -14.62501049041748
    7. '==' → logprob: -16.375009536743164
    8. 'fl' → logprob: -16.375009536743164
    9. '```' → logprob: -17.750009536743164
    10. 'Flag' → logprob: -17.875009536743164

Token 900: ' ==' (ID: 951)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08084510266780853
    2. '==' → logprob: -2.8308451175689697
    3. ' ==' → logprob: -4.205844879150391
    4. '=' → logprob: -6.205844879150391
    5. ':
' → logprob: -7.580844879150391
    6. '           ' → logprob: -7.705844879150391
    7. '       ' → logprob: -8.58084487915039
    8. ' +=' → logprob: -8.70584487915039
    9. '+=' → logprob: -8.95584487915039
    10. ' :' → logprob: -9.08084487915039

Token 901: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.31508728861808777
    2. '1' → logprob: -1.3150873184204102
    3. ' ' → logprob: -6.31508731842041
    4. '   ' → logprob: -11.44008731842041
    5. 'True' → logprob: -13.69008731842041
    6. 'False' → logprob: -14.31508731842041
    7. '```' → logprob: -14.31508731842041
    8. '	' → logprob: -15.06508731842041
    9. '
' → logprob: -15.06508731842041
    10. '       ' → logprob: -15.19008731842041

Token 902: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.160289004445076
    2. '0' → logprob: -1.9102890491485596
    3. ' ' → logprob: -9.66028881072998
    4. 'True' → logprob: -15.28528881072998
    5. 'False' → logprob: -15.53528881072998
    6. '
' → logprob: -15.66028881072998
    7. '```' → logprob: -15.91028881072998
    8. '   ' → logprob: -16.097789764404297
    9. '	' → logprob: -16.785289764404297
    10. '=' → logprob: -17.285289764404297

Token 903: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32798853516578674
    2. ':' → logprob: -1.4529885053634644
    3. '           ' → logprob: -3.327988624572754
    4. '       ' → logprob: -5.327988624572754
    5. ' continue' → logprob: -5.952988624572754
    6. '   ' → logprob: -6.827988624572754
    7. 'continue' → logprob: -7.202988624572754
    8. ' and' → logprob: -8.452988624572754
    9. ' :
' → logprob: -9.952988624572754
    10. '               ' → logprob: -9.952988624572754

Token 904: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17685678601264954
    2. ' continue' → logprob: -2.426856756210327
    3. 'continue' → logprob: -2.676856756210327
    4. '   ' → logprob: -5.551856994628906
    5. '       ' → logprob: -7.301856994628906
    6. '               ' → logprob: -9.051856994628906
    7. '	continue' → logprob: -9.051856994628906
    8. '		' → logprob: -9.551856994628906
    9. 'ANS' → logprob: -10.176856994628906
    10. '	       ' → logprob: -10.676856994628906

Token 905: ' continue' (ID: 4901)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.4670657515525818
    2. 'continue' (adapté à ' continue') → logprob: -1.2170658111572266
    3. 'ans' → logprob: -3.3420658111572266
    4. '       ' → logprob: -4.342065811157227
    5. '           ' → logprob: -5.092065811157227
    6. 'sub' → logprob: -5.342065811157227
    7. 'v' → logprob: -5.467065811157227
    8. 'subset' → logprob: -6.467065811157227
    9. ' continue' → logprob: -6.717065811157227
    10. 'AN' → logprob: -6.842065811157227

Token 906: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017693519592285156
    2. '   ' → logprob: -4.892693519592285
    3. 'ANS' → logprob: -6.142693519592285
    4. ' AN' → logprob: -6.517693519592285
    5. '
' → logprob: -7.142693519592285
    6. 'ans' → logprob: -7.142693519592285
    7. '        
' → logprob: -7.392693519592285
    8. 'count' → logprob: -7.642693519592285
    9. 'sub' → logprob: -8.142693519592285
    10. '	' → logprob: -8.267693519592285

Token 907: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23493175208568573
    2. 'for' → logprob: -2.109931707382202
    3. '   ' → logprob: -2.859931707382202
    4. 'ANS' → logprob: -4.484931945800781
    5. ' for' → logprob: -4.984931945800781
    6. 'count' → logprob: -5.734931945800781
    7. 'k' → logprob: -5.984931945800781
    8. 'AN' → logprob: -6.484931945800781
    9. ' AN' → logprob: -6.984931945800781
    10. '           ' → logprob: -7.234931945800781

Token 908: ' ok' (ID: 4763)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -1.1504260301589966
    2. 'ANS' → logprob: -1.6504260301589966
    3. 'cnt' → logprob: -1.6504260301589966
    4. 'count' → logprob: -2.900425910949707
    5. 'ans' → logprob: -3.275425910949707
    6. 'rows' → logprob: -3.650425910949707
    7. 'mask' → logprob: -4.025425910949707
    8. 'subset' → logprob: -4.025425910949707
    9. 'row' → logprob: -4.275425910949707
    10. 'bit' → logprob: -4.400425910949707

Token 909: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -7.469590491382405e-05
    2. '_flag' → logprob: -10.25007438659668
    3. '=' → logprob: -10.62507438659668
    4. ' =' → logprob: -11.37507438659668
    5. 'for' → logprob: -14.00007438659668
    6. 'f' → logprob: -14.00007438659668
    7. ' flag' → logprob: -14.25007438659668
    8. '	flag' → logprob: -15.00007438659668
    9. 'fl' → logprob: -15.50007438659668
    10. '
' → logprob: -16.37507438659668

Token 910: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25696367025375366
    2. ' =' → logprob: -1.8819637298583984
    3. ' +=' → logprob: -3.1319637298583984
    4. '+=' → logprob: -3.5069637298583984
    5. ' *=' → logprob: -8.131963729858398
    6. ' |=' → logprob: -8.631963729858398
    7. '*=' → logprob: -9.881963729858398
    8. ' ^=' → logprob: -10.506963729858398
    9. ' ' → logprob: -10.756963729858398
    10. '==' → logprob: -11.131963729858398

Token 911: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015812745550647378
    2. ' ' → logprob: -9.125158309936523
    3. 'True' → logprob: -10.250158309936523
    4. '0' → logprob: -11.625158309936523
    5. '   ' → logprob: -12.750158309936523
    6. ' True' → logprob: -13.500158309936523
    7. '       ' → logprob: -16.125158309936523
    8. '2' → logprob: -16.500158309936523
    9. '
' → logprob: -16.687658309936523
    10. '  ' → logprob: -16.875158309936523

Token 912: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011783202644437551
    2. '0' → logprob: -6.75117826461792
    3. ' ' → logprob: -12.376178741455078
    4. '2' → logprob: -13.251178741455078
    5. 'True' → logprob: -13.626178741455078
    6. '(' → logprob: -15.501178741455078
    7. '
' → logprob: -15.688678741455078
    8. '-' → logprob: -15.876178741455078
    9. '   ' → logprob: -16.751178741455078
    10. 'int' → logprob: -17.438678741455078

Token 913: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0049495818093419075
    2. '<|end|>' → logprob: -5.379949569702148
    3. '
' → logprob: -8.754949569702148
    4. ' for' → logprob: -10.004949569702148
    5. 'for' → logprob: -10.004949569702148
    6. '   ' → logprob: -10.129949569702148
    7. '<|end|>' → logprob: -11.379949569702148
    8. '        
' → logprob: -11.629949569702148
    9. '	' → logprob: -11.754949569702148
    10. ' ' → logprob: -13.129949569702148

Token 914: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2756544351577759
    2. '<|end|>' → logprob: -1.7756544351577759
    3. ' for' → logprob: -3.0256543159484863
    4. 'for' → logprob: -5.025654315948486
    5. '
' → logprob: -5.025654315948486
    6. '```' → logprob: -6.150654315948486
    7. '	' → logprob: -6.400654315948486
    8. '        
' → logprob: -6.525654315948486
    9. '	for' → logprob: -6.775654315948486
    10. '   ' → logprob: -7.025654315948486

Token 915: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00012976066500414163
    2. '       ' → logprob: -9.000129699707031
    3. ' for' → logprob: -12.000129699707031
    4. '```' → logprob: -16.37512969970703
    5. '   ' → logprob: -17.50012969970703
    6. '	for' → logprob: -18.37512969970703
    7. '
' → logprob: -19.12512969970703
    8. '``' → logprob: -20.12512969970703
    9. '        
' → logprob: -20.62512969970703
    10. 'from' → logprob: -21.00012969970703

Token 916: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03200911730527878
    2. 'h' → logprob: -3.7820091247558594
    3. ' w' → logprob: -4.782009124755859
    4. ' h' → logprob: -8.03200912475586
    5. 'j' → logprob: -11.53200912475586
    6. '   ' → logprob: -12.53200912475586
    7. 'i' → logprob: -13.65700912475586
    8. 'c' → logprob: -14.03200912475586
    9. 'g' → logprob: -14.03200912475586
    10. '	w' → logprob: -14.03200912475586

Token 917: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06211008131504059
    2. 'in' → logprob: -2.812110185623169
    3. 'range' → logprob: -9.43710994720459
    4. ' range' → logprob: -9.81210994720459
    5. '(range' → logprob: -12.06210994720459
    6. '(' → logprob: -14.56210994720459
    7. ' ' → logprob: -14.56210994720459
    8. '   ' → logprob: -14.68710994720459
    9. 'n' → logprob: -15.18710994720459
    10. '       ' → logprob: -15.68710994720459

Token 918: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.722539834911004e-05
    2. ' range' → logprob: -9.250097274780273
    3. '(range' → logprob: -13.750097274780273
    4. '	range' → logprob: -20.875097274780273
    5. 'in' → logprob: -21.000097274780273
    6. '
' → logprob: -21.625097274780273
    7. ' ' → logprob: -22.125097274780273
    8. 'ange' → logprob: -22.250097274780273
    9. 'for' → logprob: -22.500097274780273
    10. '   ' → logprob: -22.875097274780273

Token 919: '(W' (ID: 26031)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005294953938573599
    2. ' range' → logprob: -5.2552947998046875
    3. '(range' → logprob: -9.755294799804688
    4. 'in' → logprob: -12.755294799804688
    5. ' in' → logprob: -14.880294799804688
    6. '	range' → logprob: -18.130294799804688
    7. '(' → logprob: -20.005294799804688
    8. '.range' → logprob: -20.630294799804688
    9. '   ' → logprob: -20.755294799804688
    10. 'ange' → logprob: -20.880294799804688

Token 920: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.002266708994284272
    2. '):' → logprob: -6.127266883850098
    3. '   ' → logprob: -9.877266883850098
    4. '):
' → logprob: -12.252266883850098
    5. '       ' → logprob: -12.377266883850098
    6. '+' → logprob: -12.627266883850098
    7. '):

' → logprob: -12.752266883850098
    8. ':
' → logprob: -12.877266883850098
    9. ']:
' → logprob: -13.252266883850098
    10. ')' → logprob: -13.252266883850098

Token 921: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5351787805557251
    2. '   ' → logprob: -0.9101787805557251
    3. '       ' → logprob: -4.5351786613464355
    4. ' if' → logprob: -6.9101786613464355
    5. 'if' → logprob: -8.910179138183594
    6. '	   ' → logprob: -9.910179138183594
    7. '```' → logprob: -10.410179138183594
    8. ' ' → logprob: -11.410179138183594
    9. '   ' → logprob: -12.160179138183594
    10. ':' → logprob: -12.285179138183594

Token 922: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11434736847877502
    2. 'if' (adapté à ' if') → logprob: -3.114347457885742
    3. ' if' → logprob: -3.114347457885742
    4. '       ' → logprob: -4.114347457885742
    5. '           ' → logprob: -5.864347457885742
    6. '```' → logprob: -10.614347457885742
    7. ' ' → logprob: -11.114347457885742
    8. ' for' → logprob: -11.864347457885742
    9. '	if' → logprob: -11.989347457885742
    10. 'for' → logprob: -12.239347457885742

Token 923: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.15464083850383759
    2. '(j' → logprob: -2.1546409130096436
    3. '(w' → logprob: -4.0296406745910645
    4. '(i' → logprob: -4.6546406745910645
    5. '(not' → logprob: -10.654641151428223
    6. '(' → logprob: -12.654641151428223
    7. '(v' → logprob: -13.779641151428223
    8. ' ' → logprob: -13.779641151428223
    9. '(u' → logprob: -14.029641151428223
    10. '(ii' → logprob: -14.404641151428223

Token 924: 'j' (ID: 73)
  Prédit: '(j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.0009929145453497767
    2. 'j' → logprob: -7.375992774963379
    3. '(i' → logprob: -8.375992774963379
    4. ' (' → logprob: -9.000992774963379
    5. '(w' → logprob: -11.750992774963379
    6. '(' → logprob: -13.000992774963379
    7. '   ' → logprob: -14.375992774963379
    8. '(not' → logprob: -14.625992774963379
    9. ' j' → logprob: -14.750992774963379
    10. 'i' → logprob: -15.375992774963379

Token 925: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.02325141802430153
    2. '&' → logprob: -3.773251533508301
    3. ')' → logprob: -12.6482515335083
    4. ' &
' → logprob: -13.7732515335083
    5. ' ' → logprob: -15.1482515335083
    6. ' &=' → logprob: -15.2732515335083
    7. ')&' → logprob: -15.6482515335083
    8. ' &)' → logprob: -15.7732515335083
    9. '&
' → logprob: -16.023250579833984
    10. '&(' → logprob: -16.023250579833984

Token 926: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.061969030648469925
    2. ' (' → logprob: -2.811969041824341
    3. '0' → logprob: -14.561968803405762
    4. '1' → logprob: -14.686968803405762
    5. '```' → logprob: -16.061969757080078
    6. '   ' → logprob: -16.436969757080078
    7. ')' → logprob: -16.811969757080078
    8. '
' → logprob: -17.061969757080078
    9. ' ' → logprob: -17.436969757080078
    10. '((' → logprob: -17.811969757080078

Token 927: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0023184416349977255
    2. '1' → logprob: -6.127318382263184
    3. '0' → logprob: -9.252318382263184
    4. ' (' → logprob: -10.252318382263184
    5. 'w' → logprob: -13.627318382263184
    6. '   ' → logprob: -15.127318382263184
    7. '(w' → logprob: -15.127318382263184
    8. '```' → logprob: -15.752318382263184
    9. '``' → logprob: -16.3773193359375
    10. ')' → logprob: -16.6273193359375

Token 928: ' <<' (ID: 2256)
  Prédit: '<<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<<' → logprob: -1.0030527114868164
    2. '(' → logprob: -1.3780527114868164
    3. 'w' → logprob: -2.0030527114868164
    4. '(w' → logprob: -2.1280527114868164
    5. '0' → logprob: -2.7530527114868164
    6. '1' → logprob: -3.0030527114868164
    7. '==' → logprob: -5.503052711486816
    8. '>>' → logprob: -5.753052711486816
    9. '=' → logprob: -6.753052711486816
    10. '```' → logprob: -6.878052711486816

Token 929: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0564331205387134e-05
    2. ' w' → logprob: -11.50001049041748
    3. '   ' → logprob: -15.00001049041748
    4. '       ' → logprob: -16.750011444091797
    5. '           ' → logprob: -17.625011444091797
    6. '	w' → logprob: -18.375011444091797
    7. '0' → logprob: -18.625011444091797
    8. '(w' → logprob: -18.625011444091797
    9. '    ' → logprob: -18.750011444091797
    10. ')' → logprob: -19.000011444091797

Token 930: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.274932143744081e-05
    2. ')==' → logprob: -10.625042915344238
    3. ' )' → logprob: -11.375042915344238
    4. ')!=' → logprob: -12.125042915344238
    5. '))' → logprob: -14.375042915344238
    6. '==' → logprob: -15.125042915344238
    7. '`)' → logprob: -15.250042915344238
    8. '）' → logprob: -16.125041961669922
    9. '')' → logprob: -16.375041961669922
    10. '):
' → logprob: -16.375041961669922

Token 931: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.034726645797491074
    2. '==' → logprob: -4.034726619720459
    3. ' !=' → logprob: -4.534726619720459
    4. ')' → logprob: -5.659726619720459
    5. ')!=' → logprob: -6.159726619720459
    6. ')==' → logprob: -9.659727096557617
    7. ' ==' → logprob: -10.534727096557617
    8. ']!=' → logprob: -11.409727096557617
    9. '```' → logprob: -11.909727096557617
    10. '()!=' → logprob: -13.534727096557617

Token 932: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.816093228830141e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.75000286102295
    4. '
' → logprob: -16.375001907348633
    5. '=' → logprob: -16.750001907348633
    6. '```' → logprob: -17.625001907348633
    7. ' ' → logprob: -18.875001907348633
    8. '1' → logprob: -18.875001907348633
    9. '``' → logprob: -19.000001907348633
    10. '==' → logprob: -19.000001907348633

Token 933: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '   ' → logprob: -15.12500286102295
    4. '  ' → logprob: -17.375001907348633
    5. '=' → logprob: -17.750001907348633
    6. '
' → logprob: -18.375001907348633
    7. '==' → logprob: -18.500001907348633
    8. '1' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '``' → logprob: -18.750001907348633

Token 934: ':
' (ID: 734)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5095956325531006
    2. '               ' → logprob: -1.1345956325531006
    3. ' ==' → logprob: -2.7595956325531006
    4. '           ' → logprob: -4.50959587097168
    5. '!=' → logprob: -6.50959587097168
    6. ':' → logprob: -6.63459587097168
    7. ' !=' → logprob: -8.50959587097168
    8. ':
' → logprob: -9.13459587097168
    9. ')==' → logprob: -9.38459587097168
    10. 'continue' → logprob: -9.63459587097168

Token 935: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00307349837385118
    2. 'continue' → logprob: -6.503073692321777
    3. ' continue' → logprob: -6.753073692321777
    4. '           ' → logprob: -8.128073692321777
    5. '```' → logprob: -9.503073692321777
    6. '       ' → logprob: -11.503073692321777
    7. '	continue' → logprob: -12.253073692321777
    8. 'Continue' → logprob: -12.628073692321777
    9. '_continue' → logprob: -12.878073692321777
    10. ':' → logprob: -13.253073692321777

Token 936: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.15649065375328064
    2. ' continue' → logprob: -2.1564905643463135
    3. '   ' → logprob: -4.281490802764893
    4. '       ' → logprob: -4.406490802764893
    5. '               ' → logprob: -6.531490802764893
    6. '           ' → logprob: -6.656490802764893
    7. '	continue' → logprob: -8.281490325927734
    8. ' ' → logprob: -9.156490325927734
    9. '  ' → logprob: -12.906490325927734
    10. '_continue' → logprob: -13.281490325927734

Token 937: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31756392121315
    2. '               ' → logprob: -1.3175638914108276
    3. '       ' → logprob: -6.317564010620117
    4. '   ' → logprob: -7.692564010620117
    5. ':
' → logprob: -7.942564010620117
    6. '```' → logprob: -7.942564010620117
    7. ':' → logprob: -8.192564010620117
    8. ',' → logprob: -8.567564010620117
    9. 'continue' → logprob: -8.567564010620117
    10. '<|end|>' → logprob: -8.567564010620117

Token 938: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04373224452137947
    2. '       ' → logprob: -3.918732166290283
    3. '   ' → logprob: -4.293732166290283
    4. '               ' → logprob: -4.793732166290283
    5. '```' → logprob: -7.543732166290283
    6. 'co' → logprob: -8.418732643127441
    7. 'continue' → logprob: -9.418732643127441
    8. 'for' → logprob: -9.543732643127441
    9. ' ' → logprob: -10.668732643127441
    10. ' for' → logprob: -10.793732643127441

Token 939: ' coinc' (ID: 31733)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09433887898921967
    2. ' for' → logprob: -2.594338893890381
    3. '       ' → logprob: -4.969338893890381
    4. '   ' → logprob: -5.094338893890381
    5. 'co' → logprob: -6.719338893890381
    6. 'continue' → logprob: -7.844338893890381
    7. '```' → logprob: -8.094338417053223
    8. '           ' → logprob: -8.469338417053223
    9. 'if' → logprob: -9.844338417053223
    10. ' ' → logprob: -11.094338417053223

Token 940: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012510236352682114
    2. ' =' → logprob: -4.387510299682617
    3. '==' → logprob: -15.012510299682617
    4. '+=' → logprob: -16.012510299682617
    5. ' ' → logprob: -17.387510299682617
    6. '=False' → logprob: -17.387510299682617
    7. '=
' → logprob: -17.387510299682617
    8. '=True' → logprob: -17.762510299682617
    9. '   ' → logprob: -18.012510299682617
    10. 's' → logprob: -18.887510299682617

Token 941: ' ""
' (ID: 18061)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0024987291544675827
    2. '"' → logprob: -6.002498626708984
    3. '''' → logprob: -10.752498626708984
    4. ' ""' → logprob: -13.377498626708984
    5. ''' → logprob: -16.627498626708984
    6. '''
' → logprob: -16.877498626708984
    7. ' ""
' → logprob: -17.377498626708984
    8. '"",
' → logprob: -18.627498626708984
    9. '"user' → logprob: -18.877498626708984
    10. '"":' → logprob: -19.127498626708984

Token 942: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022301262244582176
    2. 'for' → logprob: -4.647301197052002
    3. ' for' → logprob: -4.772301197052002
    4. '               ' → logprob: -5.647301197052002
    5. '```' → logprob: -9.02230167388916
    6. '		' → logprob: -9.27230167388916
    7. '            ' → logprob: -9.64730167388916
    8. '<|end|>' → logprob: -9.64730167388916
    9. '	       ' → logprob: -9.77230167388916
    10. '                   ' → logprob: -11.39730167388916

Token 943: ' dif' (ID: 1501)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5766420364379883
    2. 'dif' (adapté à ' dif') → logprob: -0.8266420364379883
    3. 'diff' → logprob: -7.326642036437988
    4. ' dif' → logprob: -11.076642036437988
    5. ' for' → logprob: -11.201642036437988
    6. '           ' → logprob: -11.326642036437988
    7. '       ' → logprob: -12.951642036437988
    8. '   ' → logprob: -14.701642036437988
    9. '```' → logprob: -15.451642036437988
    10. 'difference' → logprob: -16.076641082763672

Token 944: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023245595395565033
    2. ' =' → logprob: -3.7732455730438232
    3. '   ' → logprob: -17.398244857788086
    4. ' ' → logprob: -17.523244857788086
    5. '           ' → logprob: -17.523244857788086
    6. '```' → logprob: -17.648244857788086
    7. '<|end|>' → logprob: -17.898244857788086
    8. '=
' → logprob: -18.023244857788086
    9. '+=' → logprob: -18.398244857788086
    10. 'f' → logprob: -18.523244857788086

Token 945: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013307139743119478
    2. ' ' → logprob: -6.626330852508545
    3. '1' → logprob: -12.251330375671387
    4. '```' → logprob: -19.001331329345703
    5. '   ' → logprob: -19.126331329345703
    6. '
' → logprob: -20.001331329345703
    7. ' ' → logprob: -20.001331329345703
    8. '۰' → logprob: -20.126331329345703
    9. ' 
' → logprob: -21.001331329345703
    10. ' ' → logprob: -21.063831329345703

Token 946: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '1' → logprob: -16.375001907348633
    4. '
' → logprob: -20.000001907348633
    5. '=' → logprob: -20.250001907348633
    6. '۰' → logprob: -20.375001907348633
    7. '```' → logprob: -20.375001907348633
    8. '<|end|>' → logprob: -20.375001907348633
    9. ' ' → logprob: -21.000001907348633
    10. '   ' → logprob: -21.375001907348633

Token 947: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010580805974313989
    2. 'for' → logprob: -9.875105857849121
    3. ' for' → logprob: -10.500105857849121
    4. '<|end|>' → logprob: -11.500105857849121
    5. ' ' → logprob: -12.250105857849121
    6. '   ' → logprob: -12.250105857849121
    7. '       ' → logprob: -13.375105857849121
    8. '		' → logprob: -13.500105857849121
    9. '               ' → logprob: -13.625105857849121
    10. '
' → logprob: -13.750105857849121

Token 948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.255023956531659e-05
    2. 'for' → logprob: -9.875072479248047
    3. ' for' → logprob: -11.250072479248047
    4. '               ' → logprob: -13.000072479248047
    5. '```' → logprob: -13.250072479248047
    6. '		' → logprob: -13.500072479248047
    7. '	       ' → logprob: -13.750072479248047
    8. '   ' → logprob: -14.625072479248047
    9. '<|end|>' → logprob: -15.250072479248047
    10. '       ' → logprob: -15.625072479248047

Token 949: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -3.4121114822482923e-06
    2. ' for' → logprob: -12.750003814697266
    3. '           ' → logprob: -14.875003814697266
    4. '```' → logprob: -16.625003814697266
    5. '       ' → logprob: -19.250003814697266
    6. 'For' → logprob: -19.375003814697266
    7. '
' → logprob: -19.500003814697266
    8. '	for' → logprob: -19.875003814697266
    9. '               ' → logprob: -21.000003814697266
    10. '``' → logprob: -21.625003814697266

Token 950: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.723352049040841e-06
    2. ' h' → logprob: -12.500004768371582
    3. 'i' → logprob: -14.500004768371582
    4. 'H' → logprob: -14.625004768371582
    5. 'range' → logprob: -18.000003814697266
    6. '```' → logprob: -18.625003814697266
    7. '	h' → logprob: -18.875003814697266
    8. '(h' → logprob: -20.500003814697266
    9. '`' → logprob: -20.875003814697266
    10. '   ' → logprob: -21.500003814697266

Token 951: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16079828143119812
    2. 'in' → logprob: -1.9107983112335205
    3. 'range' → logprob: -7.910798072814941
    4. ' range' → logprob: -8.535798072814941
    5. '(range' → logprob: -11.785798072814941
    6. 'h' → logprob: -14.035798072814941
    7. 'w' → logprob: -14.160798072814941
    8. ' ' → logprob: -14.785798072814941
    9. '(' → logprob: -15.160798072814941
    10. '(h' → logprob: -15.285798072814941

Token 952: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7968066206085496e-05
    2. ' range' → logprob: -10.500027656555176
    3. '(range' → logprob: -14.750027656555176
    4. 'in' → logprob: -16.875028610229492
    5. '	range' → logprob: -21.875028610229492
    6. '
' → logprob: -22.625028610229492
    7. ' in' → logprob: -22.750028610229492
    8. '(' → logprob: -23.125028610229492
    9. '```' → logprob: -24.500028610229492
    10. '.range' → logprob: -24.625028610229492

Token 953: '(H' (ID: 20904)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02011786587536335
    2. '(range' → logprob: -4.02011775970459
    3. ' range' → logprob: -6.27011775970459
    4. '(H' → logprob: -9.52011775970459
    5. 'Range' → logprob: -14.64511775970459
    6. '	range' → logprob: -16.770118713378906
    7. '_range' → logprob: -17.395118713378906
    8. '.range' → logprob: -17.645118713378906
    9. '(' → logprob: -18.270118713378906
    10. 'H' → logprob: -18.645118713378906

Token 954: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.35489872097969055
    2. ' range' → logprob: -2.354898691177368
    3. ')' → logprob: -2.854898691177368
    4. 'in' → logprob: -3.104898691177368
    5. '(range' → logprob: -3.229898691177368
    6. 'range' → logprob: -3.604898691177368
    7. '               ' → logprob: -4.854898929595947
    8. 'w' → logprob: -4.979898929595947
    9. '(' → logprob: -5.104898929595947
    10. '<|end|>' → logprob: -5.479898929595947

Token 955: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025800589937716722
    2. '<|end|>' → logprob: -6.877580165863037
    3. ' if' → logprob: -7.127580165863037
    4. 'if' → logprob: -7.627580165863037
    5. '		       ' → logprob: -9.877579689025879
    6. '           ' → logprob: -9.877579689025879
    7. '<|end|>' → logprob: -10.252579689025879
    8. '	           ' → logprob: -10.502579689025879
    9. '       ' → logprob: -10.877579689025879
    10. '	       ' → logprob: -11.377579689025879

Token 956: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08313772082328796
    2. ' if' → logprob: -3.0831377506256104
    3. 'if' (adapté à ' if') → logprob: -3.5831377506256104
    4. '```' → logprob: -5.583137512207031
    5. '           ' → logprob: -7.083137512207031
    6. 'If' → logprob: -7.208137512207031
    7. '<|end|>' → logprob: -7.708137512207031
    8. '       ' → logprob: -9.458137512207031
    9. ' ' → logprob: -9.708137512207031
    10. '                   ' → logprob: -9.708137512207031

Token 957: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.009758921340107918
    2. ' (' → logprob: -4.634758949279785
    3. '   ' → logprob: -13.634758949279785
    4. '(' → logprob: -14.634758949279785
    5. ' ' → logprob: -14.884758949279785
    6. '(j' → logprob: -15.509758949279785
    7. '(not' → logprob: -15.759758949279785
    8. '(h' → logprob: -16.13475799560547
    9. '((' → logprob: -16.38475799560547
    10. '(if' → logprob: -16.50975799560547

Token 958: 'i' (ID: 72)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.14307868480682373
    2. 'i' → logprob: -2.0180788040161133
    3. ' (' → logprob: -8.143078804016113
    4. ' i' → logprob: -10.143078804016113
    5. '   ' → logprob: -10.643078804016113
    6. 'not' → logprob: -11.143078804016113
    7. '(' → logprob: -11.393078804016113
    8. '(not' → logprob: -11.518078804016113
    9. '`' → logprob: -13.518078804016113
    10. '           ' → logprob: -13.518078804016113

Token 959: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.01603800244629383
    2. '&' → logprob: -4.141037940979004
    3. '&(' → logprob: -13.641037940979004
    4. '&amp' → logprob: -13.891037940979004
    5. '<|end|>' → logprob: -14.391037940979004
    6. ' &
' → logprob: -15.516037940979004
    7. '```' → logprob: -15.766037940979004
    8. ' ' → logprob: -16.14103889465332
    9. '＆' → logprob: -16.51603889465332
    10. '[' → logprob: -16.51603889465332

Token 960: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0699736699461937
    2. ' (' → logprob: -2.6949737071990967
    3. '(not' → logprob: -10.694973945617676
    4. '1' → logprob: -12.319973945617676
    5. ' not' → logprob: -12.819973945617676
    6. '((' → logprob: -13.194973945617676
    7. '```' → logprob: -13.569973945617676
    8. '   ' → logprob: -13.819973945617676
    9. '           ' → logprob: -14.569973945617676
    10. ' ' → logprob: -14.694973945617676

Token 961: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003743078850675374
    2. '1' → logprob: -8.375373840332031
    3. ' (' → logprob: -8.875373840332031
    4. '```' → logprob: -12.875373840332031
    5. '
' → logprob: -15.125373840332031
    6. '((' → logprob: -15.375373840332031
    7. ')' → logprob: -15.625373840332031
    8. '   ' → logprob: -15.625373840332031
    9. '``' → logprob: -15.750373840332031
    10. '(h' → logprob: -16.12537384033203

Token 962: ' <<' (ID: 2256)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10294324159622192
    2. 'h' → logprob: -2.852943181991577
    3. '(h' → logprob: -3.977943181991577
    4. ' h' → logprob: -5.102943420410156
    5. ' (' → logprob: -5.102943420410156
    6. '(' → logprob: -5.727943420410156
    7. '<<' → logprob: -6.102943420410156
    8. '[h' → logprob: -6.727943420410156
    9. '<h' → logprob: -7.852943420410156
    10. '0' → logprob: -7.852943420410156

Token 963: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.1637164789135568e-05
    2. ' h' → logprob: -11.375011444091797
    3. '           ' → logprob: -16.375011444091797
    4. '   ' → logprob: -18.500011444091797
    5. '                   ' → logprob: -18.500011444091797
    6. '	h' → logprob: -18.500011444091797
    7. 'w' → logprob: -18.625011444091797
    8. '```' → logprob: -18.875011444091797
    9. ')' → logprob: -19.250011444091797
    10. '
' → logprob: -20.000011444091797

Token 964: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.596781946020201e-05
    2. ')==' → logprob: -10.250045776367188
    3. ')!=' → logprob: -12.375045776367188
    4. ' )' → logprob: -12.875045776367188
    5. '):
' → logprob: -14.000045776367188
    6. '==' → logprob: -14.000045776367188
    7. '                   ' → logprob: -14.625045776367188
    8. '               ' → logprob: -15.625045776367188
    9. '&' → logprob: -15.750045776367188
    10. ')
' → logprob: -15.750045776367188

Token 965: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.3156024217605591
    2. '!=' → logprob: -1.315602421760559
    3. '==' → logprob: -7.0656023025512695
    4. ')' → logprob: -7.4406023025512695
    5. ' ==' → logprob: -7.5656023025512695
    6. ')!=' → logprob: -8.19060230255127
    7. '0' → logprob: -10.69060230255127
    8. ' ' → logprob: -10.69060230255127
    9. '                   ' → logprob: -11.56560230255127
    10. '=' → logprob: -11.69060230255127

Token 966: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.165027217415627e-05
    2. ' ' → logprob: -10.750021934509277
    3. '   ' → logprob: -16.37502098083496
    4. '
' → logprob: -18.12502098083496
    5. '1' → logprob: -19.37502098083496
    6. '  ' → logprob: -19.87502098083496
    7. '０' → logprob: -20.25002098083496
    8. '۰' → logprob: -20.25002098083496
    9. '``' → logprob: -20.37502098083496
    10. ' ' → logprob: -20.50002098083496

Token 967: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.12500286102295
    3. '   ' → logprob: -15.50000286102295
    4. '
' → logprob: -15.75000286102295
    5. '1' → logprob: -17.250001907348633
    6. 'h' → logprob: -17.500001907348633
    7. 'w' → logprob: -18.125001907348633
    8. ' ' → logprob: -18.437501907348633
    9. '=' → logprob: -18.562501907348633
    10. '	' → logprob: -18.625001907348633

Token 968: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19116786122322083
    2. ':
' → logprob: -2.6911678314208984
    3. '               ' → logprob: -3.1911678314208984
    4. ':' → logprob: -3.4411678314208984
    5. '                       ' → logprob: -3.5661678314208984
    6. '<|end|>' → logprob: -5.816167831420898
    7. '):
' → logprob: -7.316167831420898
    8. '           ' → logprob: -8.316167831420898
    9. '   ' → logprob: -9.316167831420898
    10. ')' → logprob: -9.441167831420898

Token 969: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.020476723089814186
    2. '                       ' → logprob: -4.645476818084717
    3. '               ' → logprob: -5.020476818084717
    4. 'continue' → logprob: -5.645476818084717
    5. ' continue' → logprob: -8.770476341247559
    6. '<|end|>' → logprob: -9.020476341247559
    7. '           ' → logprob: -10.145476341247559
    8. '	               ' → logprob: -10.145476341247559
    9. '   ' → logprob: -10.270476341247559
    10. '       ' → logprob: -10.520476341247559

Token 970: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.2167508453130722
    2. ' continue' → logprob: -1.9667508602142334
    3. '                   ' → logprob: -2.9667508602142334
    4. '                       ' → logprob: -6.466750621795654
    5. '               ' → logprob: -6.466750621795654
    6. '       ' → logprob: -9.091751098632812
    7. '   ' → logprob: -9.591751098632812
    8. ' ' → logprob: -9.716751098632812
    9. '           ' → logprob: -9.841751098632812
    10. '                 ' → logprob: -10.841751098632812

Token 971: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.15983791649341583
    2. '                   ' → logprob: -2.0348379611968994
    3. '                       ' → logprob: -4.28483772277832
    4. '<|end|>' → logprob: -6.78483772277832
    5. '       ' → logprob: -7.28483772277832
    6. '           ' → logprob: -7.65983772277832
    7. ':
' → logprob: -8.03483772277832
    8. '
' → logprob: -9.40983772277832
    9. '                        
' → logprob: -9.78483772277832
    10. '<|end|>' → logprob: -10.03483772277832

Token 972: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017890633316710591
    2. '                   ' → logprob: -6.751789093017578
    3. '```' → logprob: -8.376789093017578
    4. '                       ' → logprob: -9.251789093017578
    5. '       ' → logprob: -9.376789093017578
    6. ' if' → logprob: -9.751789093017578
    7. 'if' → logprob: -9.876789093017578
    8. '           ' → logprob: -10.126789093017578
    9. '<|end|>' → logprob: -10.751789093017578
    10. '   ' → logprob: -12.126789093017578

Token 973: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.06910128891468048
    2. '               ' → logprob: -3.069101333618164
    3. ' if' → logprob: -3.944101333618164
    4. '                   ' → logprob: -7.069101333618164
    5. '           ' → logprob: -9.694101333618164
    6. '```' → logprob: -11.444101333618164
    7. '
' → logprob: -12.819101333618164
    8. '                       ' → logprob: -12.819101333618164
    9. 'If' → logprob: -13.319101333618164
    10. '       ' → logprob: -13.444101333618164

Token 974: ' coinc' (ID: 31733)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.011210862547159195
    2. ' A' → logprob: -4.886210918426514
    3. 'co' → logprob: -5.636210918426514
    4. ' coinc' → logprob: -11.761210441589355
    5. 'coin' → logprob: -12.511210441589355
    6. '   ' → logprob: -12.886210441589355
    7. '(co' → logprob: -13.136210441589355
    8. '(A' → logprob: -13.261210441589355
    9. ' ' → logprob: -13.386210441589355
    10. 'not' → logprob: -13.511210441589355

Token 975: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16026566922664642
    2. ' ==' → logprob: -1.9102656841278076
    3. '=' → logprob: -10.410265922546387
    4. ' =' → logprob: -12.160265922546387
    5. '==
' → logprob: -12.910265922546387
    6. '<|end|>' → logprob: -13.410265922546387
    7. '=="' → logprob: -13.660265922546387
    8. '===' → logprob: -14.660265922546387
    9. ' ' → logprob: -15.910265922546387
    10. ')==' → logprob: -16.16026496887207

Token 976: ' "":
' (ID: 132826)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.0031182991806417704
    2. '"' → logprob: -6.253118515014648
    3. '"A' → logprob: -7.378118515014648
    4. '"":' → logprob: -7.753118515014648
    5. 'A' → logprob: -9.378118515014648
    6. ' "":
' → logprob: -10.628118515014648
    7. ' ""' → logprob: -11.378118515014648
    8. '''' → logprob: -11.878118515014648
    9. ' A' → logprob: -12.378118515014648
    10. '"",
' → logprob: -13.628118515014648

Token 977: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00459851510822773
    2. '                       ' → logprob: -5.754598617553711
    3. 'A' → logprob: -7.379598617553711
    4. '               ' → logprob: -7.879598617553711
    5. '                    ' → logprob: -8.879598617553711
    6. ' A' → logprob: -9.129598617553711
    7. '                     ' → logprob: -10.254598617553711
    8. '                  ' → logprob: -10.379598617553711
    9. '                 ' → logprob: -11.129598617553711
    10. '                ' → logprob: -11.129598617553711

Token 978: ' coinc' (ID: 31733)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.004146780353039503
    2. ' coinc' → logprob: -6.004146575927734
    3. '                   ' → logprob: -6.879146575927734
    4. 'coin' → logprob: -7.504146575927734
    5. '               ' → logprob: -10.629146575927734
    6. '                  ' → logprob: -10.879146575927734
    7. '```' → logprob: -11.004146575927734
    8. 'coeff' → logprob: -11.879146575927734
    9. '                 ' → logprob: -12.004146575927734
    10. '                ' → logprob: -12.129146575927734

Token 979: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020710527896881
    2. ' =' → logprob: -2.3502070903778076
    3. '=A' → logprob: -15.475207328796387
    4. '==' → logprob: -16.35020637512207
    5. '+=' → logprob: -16.35020637512207
    6. '=
' → logprob: -16.85020637512207
    7. ' ' → logprob: -16.85020637512207
    8. ' ' → logprob: -17.10020637512207
    9. '=s' → logprob: -17.72520637512207
    10. '<|end|>' → logprob: -17.85020637512207

Token 980: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -8.494741632603109e-05
    2. ' A' → logprob: -9.37508487701416
    3. '   ' → logprob: -16.250085830688477
    4. ' ' → logprob: -17.625085830688477
    5. '`' → logprob: -17.750085830688477
    6. '	A' → logprob: -18.375085830688477
    7. '```' → logprob: -19.000085830688477
    8. '  ' → logprob: -19.375085830688477
    9. ''A' → logprob: -19.625085830688477
    10. '"A' → logprob: -19.750085830688477

Token 981: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: -0.0002036595979006961
    2. 'h' → logprob: -8.500204086303711
    3. '[' → logprob: -15.750204086303711
    4. '[
' → logprob: -17.12520408630371
    5. '(h' → logprob: -18.75020408630371
    6. '[w' → logprob: -18.75020408630371
    7. '	h' → logprob: -19.00020408630371
    8. '[u' → logprob: -20.62520408630371
    9. '```' → logprob: -20.62520408630371
    10. '
' → logprob: -21.00020408630371

Token 982: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03836207091808319
    2. '[w' → logprob: -3.2883620262145996
    3. '[' → logprob: -8.663362503051758
    4. 'w' → logprob: -9.288362503051758
    5. '[h' → logprob: -10.663362503051758
    6. ']' → logprob: -11.913362503051758
    7. '"][' → logprob: -11.913362503051758
    8. ' ][' → logprob: -12.538362503051758
    9. '[j' → logprob: -12.788362503051758
    10. '```' → logprob: -12.913362503051758

Token 983: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.0280383548888494e-06
    2. ' w' → logprob: -14.125000953674316
    3. '[w' → logprob: -15.750000953674316
    4. '
' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '```' → logprob: -18.125001907348633
    7. '	w' → logprob: -18.875001907348633
    8. '[' → logprob: -19.000001907348633
    9. '               ' → logprob: -19.500001907348633
    10. '       ' → logprob: -19.500001907348633

Token 984: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.045351557433605194
    2. '[w' → logprob: -3.170351505279541
    3. ']
' → logprob: -6.670351505279541
    4. '[h' → logprob: -7.545351505279541
    5. '][' → logprob: -7.795351505279541
    6. 'w' → logprob: -9.4203519821167
    7. '[' → logprob: -11.2953519821167
    8. ')' → logprob: -11.4203519821167
    9. '               ' → logprob: -12.1703519821167
    10. '       ' → logprob: -12.2953519821167

Token 985: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0008367887930944562
    2. 'elif' → logprob: -7.1258368492126465
    3. '<|end|>' → logprob: -11.375836372375488
    4. ' elif' → logprob: -11.750836372375488
    5. '                   ' → logprob: -12.000836372375488
    6. '           ' → logprob: -12.875836372375488
    7. '#elif' → logprob: -13.125836372375488
    8. '              ' → logprob: -14.500836372375488
    9. '	elif' → logprob: -15.000836372375488
    10. '       ' → logprob: -15.250836372375488

Token 986: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.014950293116271496
    2. '               ' → logprob: -4.514950275421143
    3. ' elif' → logprob: -6.264950275421143
    4. '                   ' → logprob: -6.264950275421143
    5. '           ' → logprob: -9.7649507522583
    6. '	elif' → logprob: -11.1399507522583
    7. '#elif' → logprob: -11.3899507522583
    8. '              ' → logprob: -13.0149507522583
    9. '                ' → logprob: -13.2649507522583
    10. '             ' → logprob: -14.2649507522583

Token 987: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.006716079078614712
    2. ' A' → logprob: -5.006716251373291
    3. '                   ' → logprob: -15.381715774536133
    4. '   ' → logprob: -15.506715774536133
    5. '               ' → logprob: -16.131715774536133
    6. '           ' → logprob: -16.756715774536133
    7. '                ' → logprob: -17.256715774536133
    8. ' ' → logprob: -17.631715774536133
    9. '	A' → logprob: -18.006715774536133
    10. '    ' → logprob: -18.131715774536133

Token 988: '[h' (ID: 88900)
  Prédit: '[h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[h' → logprob: 0.0
    2. 'h' → logprob: -18.375
    3. '[' → logprob: -18.75
    4. '[i' → logprob: -20.25
    5. '[w' → logprob: -20.375
    6. '```' → logprob: -21.625
    7. '<h' → logprob: -21.75
    8. '(h' → logprob: -21.875
    9. '[
' → logprob: -22.0
    10. '	h' → logprob: -22.25

Token 989: '][' (ID: 2696)
  Prédit: '[w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.10625055432319641
    2. '[h' → logprob: -2.356250524520874
    3. '][' → logprob: -5.231250762939453
    4. 'w' → logprob: -7.981250762939453
    5. '[' → logprob: -8.231250762939453
    6. '```' → logprob: -10.731250762939453
    7. '[u' → logprob: -11.106250762939453
    8. '[i' → logprob: -11.981250762939453
    9. '[
' → logprob: -11.981250762939453
    10. ']' → logprob: -12.356250762939453

Token 990: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.20143340528011322
    2. 'h' → logprob: -1.7014334201812744
    3. '[h' → logprob: -11.451433181762695
    4. '[w' → logprob: -12.076433181762695
    5. ' w' → logprob: -12.951433181762695
    6. ' h' → logprob: -14.076433181762695
    7. '```' → logprob: -14.701433181762695
    8. '
' → logprob: -15.951433181762695
    9. '	w' → logprob: -16.701433181762695
    10. '	h' → logprob: -16.951433181762695

Token 991: ']' (ID: 60)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5801841616630554
    2. '!=' → logprob: -0.8301841616630554
    3. ']!=' → logprob: -5.580183982849121
    4. ')!=' → logprob: -7.955183982849121
    5. ']' → logprob: -10.080183982849121
    6. '[' → logprob: -10.205183982849121
    7. '!='' → logprob: -11.955183982849121
    8. '()!=' → logprob: -12.080183982849121
    9. '```' → logprob: -12.080183982849121
    10. '                   ' → logprob: -12.830183982849121

Token 992: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.07893054932355881
    2. ' !=' → logprob: -2.578930616378784
    3. ')!=' → logprob: -10.703930854797363
    4. ']!=' → logprob: -11.328930854797363
    5. '()!=' → logprob: -13.203930854797363
    6. '```' → logprob: -13.203930854797363
    7. '!='' → logprob: -13.578930854797363
    8. '!="' → logprob: -14.453930854797363
    9. '!=(' → logprob: -15.203930854797363
    10. '!=-' → logprob: -15.578930854797363

Token 993: ' coinc' (ID: 31733)
  Prédit: 'co'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'co' → logprob: -0.0014698688173666596
    2. 'coin' → logprob: -7.00147008895874
    3. ' coinc' → logprob: -7.50147008895874
    4. 'coeff' → logprob: -13.501469612121582
    5. ' ' → logprob: -13.751469612121582
    6. '
' → logprob: -14.376469612121582
    7. '```' → logprob: -14.376469612121582
    8. '`' → logprob: -14.876469612121582
    9. 'coins' → logprob: -15.001469612121582
    10. 'c' → logprob: -15.126469612121582

Token 994: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2962806522846222
    2. ':
' → logprob: -1.4212806224822998
    3. ':' → logprob: -4.546280860900879
    4. '                       ' → logprob: -5.921280860900879
    5. '               ' → logprob: -6.796280860900879
    6. '<|end|>' → logprob: -8.921280860900879
    7. '                  ' → logprob: -9.296280860900879
    8. '{
' → logprob: -9.296280860900879
    9. '                    ' → logprob: -9.921280860900879
    10. '           ' → logprob: -10.421280860900879

Token 995: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0018420136766508222
    2. '                       ' → logprob: -7.126842021942139
    3. '1' → logprob: -7.251842021942139
    4. '               ' → logprob: -8.75184154510498
    5. '                    ' → logprob: -10.00184154510498
    6. '                  ' → logprob: -10.62684154510498
    7. '0' → logprob: -10.75184154510498
    8. ':
' → logprob: -11.37684154510498
    9. ' dif' → logprob: -11.50184154510498
    10. 'dif' → logprob: -11.62684154510498

Token 996: ' dif' (ID: 1501)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0807032585144043
    2. 'dif' (adapté à ' dif') → logprob: -2.7057032585144043
    3. ' dif' → logprob: -4.705703258514404
    4. ' ' → logprob: -6.455703258514404
    5. '                   ' → logprob: -10.330703735351562
    6. 'diff' → logprob: -10.705703735351562
    7. '   ' → logprob: -11.580703735351562
    8. '               ' → logprob: -11.705703735351562
    9. '           ' → logprob: -12.080703735351562
    10. 'd' → logprob: -12.205703735351562

Token 997: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.017761098220944405
    2. ' =' → logprob: -4.39276123046875
    3. '1' → logprob: -5.26776123046875
    4. ' ' → logprob: -9.51776123046875
    5. '           ' → logprob: -12.76776123046875
    6. '                   ' → logprob: -13.14276123046875
    7. '               ' → logprob: -14.39276123046875
    8. '
' → logprob: -14.64276123046875
    9. '   ' → logprob: -14.64276123046875
    10. '=
' → logprob: -14.64276123046875

Token 998: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003805064770858735
    2. ' ' → logprob: -7.875380516052246
    3. '
' → logprob: -15.125380516052246
    4. '   ' → logprob: -17.00037956237793
    5. '```' → logprob: -17.50037956237793
    6. ' ' → logprob: -17.62537956237793
    7. '0' → logprob: -18.37537956237793
    8. '１' → logprob: -19.06287956237793
    9. '	' → logprob: -19.87537956237793
    10. '           ' → logprob: -20.00037956237793

Token 999: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.625000953674316
    3. '0' → logprob: -16.625001907348633
    4. '
' → logprob: -17.250001907348633
    5. '```' → logprob: -19.750001907348633
    6. '   ' → logprob: -20.000001907348633
    7. 'True' → logprob: -20.375001907348633
    8. '2' → logprob: -21.000001907348633
    9. '' → logprob: -21.437501907348633
    10. '１' → logprob: -21.625001907348633

Token 1000: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013583439402282238
    2. '                       ' → logprob: -4.513583660125732
    3. '               ' → logprob: -6.763583660125732
    4. '           ' → logprob: -8.013583183288574
    5. '<|end|>' → logprob: -8.013583183288574
    6. '                           ' → logprob: -8.513583183288574
    7. '=' → logprob: -9.513583183288574
    8. '                  ' → logprob: -9.763583183288574
    9. '       ' → logprob: -9.888583183288574
    10. '                    ' → logprob: -10.013583183288574

Token 1001: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013283167965710163
    2. '                       ' → logprob: -4.5132832527160645
    3. '               ' → logprob: -6.5132832527160645
    4. '<|end|>' → logprob: -8.763282775878906
    5. '           ' → logprob: -9.138282775878906
    6. '				' → logprob: -9.138282775878906
    7. '                  ' → logprob: -9.763282775878906
    8. '                           ' → logprob: -10.138282775878906
    9. '                    ' → logprob: -10.138282775878906
    10. '       ' → logprob: -10.513282775878906

Token 1002: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.038149017840623856
    2. ' break' → logprob: -3.288149118423462
    3. '                   ' → logprob: -9.288148880004883
    4. '               ' → logprob: -12.163148880004883
    5. '                       ' → logprob: -12.538148880004883
    6. '```' → logprob: -12.663148880004883
    7. '1' → logprob: -13.413148880004883
    8. '	break' → logprob: -14.163148880004883
    9. '           ' → logprob: -14.663148880004883
    10. '
' → logprob: -15.413148880004883

Token 1003: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.0328154563903809
    2. '<|end|>' → logprob: -1.1578154563903809
    3. '               ' → logprob: -1.5328154563903809
    4. '           ' → logprob: -3.157815456390381
    5. '                       ' → logprob: -3.657815456390381
    6. '```' → logprob: -4.657815456390381
    7. ')' → logprob: -5.032815456390381
    8. '       ' → logprob: -5.157815456390381
    9. '                               ' → logprob: -5.907815456390381
    10. '                           ' → logprob: -5.907815456390381

Token 1004: '           ' (ID: 352)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41790771484375
    2. '           ' → logprob: -1.91790771484375
    3. '                   ' → logprob: -2.16790771484375
    4. '<|end|>' → logprob: -3.79290771484375
    5. '       ' → logprob: -4.04290771484375
    6. '```' → logprob: -4.29290771484375
    7. '                       ' → logprob: -4.79290771484375
    8. ')' → logprob: -5.16790771484375
    9. '                           ' → logprob: -5.66790771484375
    10. '                               ' → logprob: -6.16790771484375

Token 1005: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6274243593215942
    2. '           ' → logprob: -1.3774243593215942
    3. 'if' (adapté à ' if') → logprob: -1.6274243593215942
    4. '       ' → logprob: -4.877424240112305
    5. '               ' → logprob: -5.002424240112305
    6. '```' → logprob: -5.877424240112305
    7. '   ' → logprob: -8.877424240112305
    8. '``' → logprob: -10.627424240112305
    9. '                   ' → logprob: -11.127424240112305
    10. '
' → logprob: -11.377424240112305

Token 1006: ' dif' (ID: 1501)
  Prédit: 'dif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dif' → logprob: -0.026843227446079254
    2. ' dif' → logprob: -3.651843309402466
    3. 'ok' → logprob: -7.901843070983887
    4. 'diff' → logprob: -8.901843070983887
    5. ' ok' → logprob: -10.526843070983887
    6. 'd' → logprob: -13.276843070983887
    7. '   ' → logprob: -13.526843070983887
    8. ' ' → logprob: -13.526843070983887
    9. 'not' → logprob: -13.651843070983887
    10. '
' → logprob: -14.401843070983887

Token 1007: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04310835525393486
    2. '==' → logprob: -3.1681084632873535
    3. ' =' → logprob: -9.668107986450195
    4. ' !=' → logprob: -10.918107986450195
    5. '=' → logprob: -11.043107986450195
    6. '!=' → logprob: -12.918107986450195
    7. ' +=' → logprob: -13.043107986450195
    8. ' ' → logprob: -13.668107986450195
    9. ' ==
' → logprob: -13.918107986450195
    10. '```' → logprob: -14.043107986450195

Token 1008: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1315666139125824
    2. '1' → logprob: -2.1315665245056152
    3. ' ' → logprob: -5.381566524505615
    4. '   ' → logprob: -11.131567001342773
    5. '
' → logprob: -11.756567001342773
    6. '```' → logprob: -13.819067001342773
    7. '       ' → logprob: -13.944067001342773
    8. '	' → logprob: -14.756567001342773
    9. '           ' → logprob: -14.944067001342773
    10. '  ' → logprob: -15.381567001342773

Token 1009: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006728161126375198
    2. '1' → logprob: -5.006728172302246
    3. ' ' → logprob: -11.506728172302246
    4. '
' → logprob: -13.256728172302246
    5. '```' → logprob: -14.381728172302246
    6. '   ' → logprob: -15.006728172302246
    7. '``' → logprob: -17.25672721862793
    8. ' 
' → logprob: -17.63172721862793
    9. '       ' → logprob: -17.75672721862793
    10. '=' → logprob: -18.19422721862793

Token 1010: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7393582463264465
    2. '               ' → logprob: -0.9893582463264465
    3. ':
' → logprob: -2.2393581867218018
    4. '           ' → logprob: -3.2393581867218018
    5. '=' → logprob: -6.364358425140381
    6. '       ' → logprob: -6.989358425140381
    7. '==' → logprob: -6.989358425140381
    8. '                   ' → logprob: -7.989358425140381
    9. '```' → logprob: -8.364357948303223
    10. '<|end|>' → logprob: -8.489357948303223

Token 1011: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.110668618930504e-05
    2. '           ' → logprob: -10.25006103515625
    3. '```' → logprob: -11.75006103515625
    4. '   ' → logprob: -11.87506103515625
    5. '                   ' → logprob: -12.75006103515625
    6. '       ' → logprob: -12.87506103515625
    7. '              ' → logprob: -13.25006103515625
    8. 'ok' → logprob: -13.50006103515625
    9. '0' → logprob: -13.62506103515625
    10. '
' → logprob: -15.37506103515625

Token 1012: ' ok' (ID: 4763)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2507675290107727
    2. 'ok' (adapté à ' ok') → logprob: -1.625767469406128
    3. ' ok' → logprob: -4.375767707824707
    4. '           ' → logprob: -4.625767707824707
    5. '   ' → logprob: -6.500767707824707
    6. '0' → logprob: -7.375767707824707
    7. '       ' → logprob: -8.375767707824707
    8. ' ' → logprob: -9.875767707824707
    9. 'continue' → logprob: -9.875767707824707
    10. '                   ' → logprob: -10.125767707824707

Token 1013: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -0.3565428555011749
    2. '=' → logprob: -1.3565428256988525
    3. '==' → logprob: -3.2315428256988525
    4. ' =' → logprob: -6.856543064117432
    5. '           ' → logprob: -7.481543064117432
    6. ' ==' → logprob: -7.981543064117432
    7. '   ' → logprob: -8.731542587280273
    8. ' flag' → logprob: -8.981542587280273
    9. '_flag' → logprob: -9.106542587280273
    10. ' ' → logprob: -9.481542587280273

Token 1014: ' =' (ID: 314)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49961090087890625
    2. '==' → logprob: -0.9996109008789062
    3. ' =' → logprob: -4.374610900878906
    4. '=' → logprob: -4.374610900878906
    5. '!=' → logprob: -11.499610900878906
    6. '+=' → logprob: -12.624610900878906
    7. ' !=' → logprob: -12.624610900878906
    8. ' +=' → logprob: -12.874610900878906
    9. '           ' → logprob: -13.499610900878906
    10. '==
' → logprob: -14.249610900878906

Token 1015: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -16.250032424926758
    4. '   ' → logprob: -16.625032424926758
    5. '```' → logprob: -18.125032424926758
    6. '
' → logprob: -18.812532424926758
    7. '       ' → logprob: -19.250032424926758
    8. '	' → logprob: -19.312532424926758
    9. '  ' → logprob: -19.375032424926758
    10. '۰' → logprob: -19.375032424926758

Token 1016: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.500005722045898
    3. '1' → logprob: -13.500005722045898
    4. '
' → logprob: -16.6250057220459
    5. '   ' → logprob: -17.0000057220459
    6. '=' → logprob: -18.1875057220459
    7. '```' → logprob: -18.3750057220459
    8. ' ' → logprob: -18.7500057220459
    9. '۰' → logprob: -19.2500057220459
    10. '  ' → logprob: -19.3125057220459

Token 1017: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6355348825454712
    2. '           ' → logprob: -0.7605348825454712
    3. '                   ' → logprob: -6.010534763336182
    4. '		' → logprob: -9.01053524017334
    5. '<|end|>' → logprob: -10.01053524017334
    6. '       ' → logprob: -10.26053524017334
    7. '	           ' → logprob: -10.38553524017334
    8. '              ' → logprob: -10.51053524017334
    9. '	       ' → logprob: -10.76053524017334
    10. '			' → logprob: -10.88553524017334

Token 1018: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043809957802295685
    2. '               ' → logprob: -3.1688098907470703
    3. 'continue' → logprob: -7.91880989074707
    4. '		' → logprob: -8.04380989074707
    5. '	       ' → logprob: -10.29380989074707
    6. '                   ' → logprob: -10.29380989074707
    7. '       ' → logprob: -11.16880989074707
    8. ' continue' → logprob: -11.29380989074707
    9. '	           ' → logprob: -11.91880989074707
    10. '	continue' → logprob: -12.41880989074707

Token 1019: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.4809424877166748
    2. '           ' → logprob: -0.9809424877166748
    3. ' break' → logprob: -5.855942726135254
    4. '               ' → logprob: -5.855942726135254
    5. 'continue' → logprob: -6.855942726135254
    6. '       ' → logprob: -10.605942726135254
    7. '                   ' → logprob: -11.480942726135254
    8. '	break' → logprob: -11.480942726135254
    9. '   ' → logprob: -11.605942726135254
    10. ' continue' → logprob: -13.230942726135254

Token 1020: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009730586782097816
    2. '           ' → logprob: -5.134730815887451
    3. 'continue' → logprob: -6.634730815887451
    4. '<|end|>' → logprob: -6.634730815887451
    5. ' continue' → logprob: -8.134730339050293
    6. '	' → logprob: -8.509730339050293
    7. '	continue' → logprob: -8.634730339050293
    8. '        
' → logprob: -8.634730339050293
    9. '               ' → logprob: -9.634730339050293
    10. ' if' → logprob: -10.134730339050293

Token 1021: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007588644977658987
    2. 'continue' → logprob: -5.132588863372803
    3. '   ' → logprob: -7.382588863372803
    4. ' continue' → logprob: -8.132588386535645
    5. '           ' → logprob: -8.257588386535645
    6. '<|end|>' → logprob: -8.507588386535645
    7. '        
' → logprob: -8.757588386535645
    8. 'if' → logprob: -11.257588386535645
    9. '```' → logprob: -11.257588386535645
    10. '
' → logprob: -11.382588386535645

Token 1022: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015040830709040165
    2. 'continue' → logprob: -4.390040874481201
    3. ' continue' → logprob: -6.140040874481201
    4. '           ' → logprob: -9.265040397644043
    5. '   ' → logprob: -9.765040397644043
    6. '               ' → logprob: -9.765040397644043
    7. ' if' → logprob: -10.015040397644043
    8. '```' → logprob: -10.140040397644043
    9. '<|end|>' → logprob: -10.890040397644043
    10. 'if' (adapté à ' if') → logprob: -11.015040397644043

Token 1023: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.008436916396021843
    2. ' ok' → logprob: -5.008436679840088
    3. 'not' → logprob: -6.508436679840088
    4. ' not' → logprob: -8.383437156677246
    5. '   ' → logprob: -15.883437156677246
    6. '0' → logprob: -15.883437156677246
    7. '(ok' → logprob: -16.63343620300293
    8. ' ' → logprob: -17.13343620300293
    9. 'okay' → logprob: -17.13343620300293
    10. '	ok' → logprob: -17.50843620300293

Token 1024: 'flag' (ID: 17665)
  Prédit: 'flag'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'flag' → logprob: -2.696889623621246e-06
    2. '_flag' → logprob: -13.25000286102295
    3. '==' → logprob: -14.75000286102295
    4. 'flags' → logprob: -15.12500286102295
    5. ' flag' → logprob: -16.000001907348633
    6. 'f' → logprob: -17.750001907348633
    7. 'lag' → logprob: -17.875001907348633
    8. '=' → logprob: -18.250001907348633
    9. '(flag' → logprob: -18.375001907348633
    10. 'Flag' → logprob: -18.500001907348633

Token 1025: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3153747618198395
    2. '==' → logprob: -1.440374732017517
    3. '=' → logprob: -4.065374851226807
    4. ' =' → logprob: -4.440374851226807
    5. '           ' → logprob: -5.440374851226807
    6. '```' → logprob: -9.190374374389648
    7. ' +=' → logprob: -9.315374374389648
    8. '   ' → logprob: -10.065374374389648
    9. '       ' → logprob: -10.315374374389648
    10. '+=' → logprob: -10.690374374389648

Token 1026: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.025673186406493187
    2. ' ' → logprob: -4.1506733894348145
    3. '1' → logprob: -4.6506733894348145
    4. '   ' → logprob: -10.775672912597656
    5. '
' → logprob: -12.713172912597656
    6. '```' → logprob: -12.838172912597656
    7. '=' → logprob: -12.900672912597656
    8. '	' → logprob: -13.150672912597656
    9. '  ' → logprob: -13.838172912597656
    10. '    ' → logprob: -14.588172912597656

Token 1027: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.387134313583374
    2. '1' → logprob: -1.137134313583374
    3. ' ' → logprob: -9.137134552001953
    4. '```' → logprob: -9.387134552001953
    5. '=' → logprob: -10.512134552001953
    6. '
' → logprob: -10.887134552001953
    7. '   ' → logprob: -11.887134552001953
    8. '``' → logprob: -12.699634552001953
    9. '==' → logprob: -13.074634552001953
    10. '=
' → logprob: -13.574634552001953

Token 1028: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027801543474197388
    2. ':' → logprob: -6.752779960632324
    3. 'continue' → logprob: -7.252779960632324
    4. ':
' → logprob: -7.377779960632324
    5. ' continue' → logprob: -8.377779960632324
    6. '       ' → logprob: -11.627779960632324
    7. '               ' → logprob: -11.877779960632324
    8. '		' → logprob: -12.127779960632324
    9. '	continue' → logprob: -12.252779960632324
    10. '_continue' → logprob: -12.502779960632324

Token 1029: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010682971915230155
    2. ' continue' → logprob: -7.501068115234375
    3. 'continue' → logprob: -7.751068115234375
    4. '		' → logprob: -10.126068115234375
    5. '	       ' → logprob: -11.376068115234375
    6. '	continue' → logprob: -11.376068115234375
    7. '```' → logprob: -11.751068115234375
    8. '               ' → logprob: -12.376068115234375
    9. '       ' → logprob: -12.501068115234375
    10. '_continue' → logprob: -13.251068115234375

Token 1030: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.6165273189544678
    2. '           ' → logprob: -0.8665273189544678
    3. ' continue' → logprob: -3.2415273189544678
    4. '   ' → logprob: -7.741527557373047
    5. '	continue' → logprob: -8.991527557373047
    6. ' ' → logprob: -10.366527557373047
    7. '               ' → logprob: -10.741527557373047
    8. '       ' → logprob: -10.866527557373047
    9. '_continue' → logprob: -10.991527557373047
    10. '```' → logprob: -11.366527557373047

Token 1031: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6901344060897827
    2. '   ' → logprob: -0.8151344060897827
    3. 'ANS' → logprob: -4.315134525299072
    4. '           ' → logprob: -4.565134525299072
    5. ' AN' → logprob: -4.940134525299072
    6. 'ans' → logprob: -5.440134525299072
    7. '```' → logprob: -5.940134525299072
    8. '
' → logprob: -5.940134525299072
    9. 'for' → logprob: -6.065134525299072
    10. 'count' → logprob: -6.190134525299072

Token 1032: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3165234923362732
    2. '   ' → logprob: -1.941523551940918
    3. 'ANS' → logprob: -2.566523551940918
    4. '           ' → logprob: -3.316523551940918
    5. 'for' → logprob: -4.691523551940918
    6. '               ' → logprob: -6.566523551940918
    7. 'ans' → logprob: -7.066523551940918
    8. 'mask' → logprob: -7.066523551940918
    9. 'AN' → logprob: -7.316523551940918
    10. ' AN' → logprob: -8.191523551940918

Token 1033: ' HR' (ID: 26502)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.5897614359855652
    2. 'sub' → logprob: -1.83976149559021
    3. 'rows' → logprob: -2.71476149559021
    4. 'cnt' → logprob: -3.21476149559021
    5. 'ans' → logprob: -3.33976149559021
    6. 'bits' → logprob: -3.58976149559021
    7. 'bit' → logprob: -3.96476149559021
    8. 'subset' → logprob: -4.089761257171631
    9. 'v' → logprob: -4.464761257171631
    10. 'count' → logprob: -4.464761257171631

Token 1034: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4516544044017792
    2. ' =' → logprob: -1.0766544342041016
    3. '=(' → logprob: -5.826654434204102
    4. ')' → logprob: -6.201654434204102
    5. '[' → logprob: -6.201654434204102
    6. '+=' → logprob: -6.201654434204102
    7. '=
' → logprob: -6.326654434204102
    8. '[
' → logprob: -6.576654434204102
    9. ' +=' → logprob: -6.826654434204102
    10. '=[' → logprob: -6.826654434204102

Token 1035: ' ' (ID: 220)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.04227861762046814
    2. '0' → logprob: -3.417278528213501
    3. ' bin' → logprob: -5.54227876663208
    4. 'H' → logprob: -6.04227876663208
    5. '(bin' → logprob: -6.91727876663208
    6. 'sum' → logprob: -7.54227876663208
    7. '(' → logprob: -8.292278289794922
    8. '(H' → logprob: -8.917278289794922
    9. 'pop' → logprob: -9.667278289794922
    10. '((' → logprob: -10.042278289794922

Token 1036: '0' (ID: 15)
  Prédit: 'bin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bin' → logprob: -0.013395504094660282
    2. '(bin' → logprob: -5.388395309448242
    3. 'H' → logprob: -5.888395309448242
    4. '(H' → logprob: -6.638395309448242
    5. '(' → logprob: -6.888395309448242
    6. '((' → logprob: -7.388395309448242
    7. '1' → logprob: -7.513395309448242
    8. 'sum' → logprob: -7.513395309448242
    9. '0' → logprob: -7.638395309448242
    10. 'ANS' → logprob: -7.888395309448242

Token 1037: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09995526075363159
    2. '<|end|>' → logprob: -2.4749553203582764
    3. ' for' → logprob: -5.099955081939697
    4. 'for' → logprob: -5.724955081939697
    5. '<|end|>' → logprob: -7.349955081939697
    6. ')' → logprob: -8.224955558776855
    7. '
' → logprob: -8.599955558776855
    8. ',' → logprob: -9.349955558776855
    9. '	' → logprob: -9.349955558776855
    10. '   ' → logprob: -9.349955558776855

Token 1038: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8217222094535828
    2. '       ' → logprob: -0.9467222094535828
    3. ' for' → logprob: -2.5717222690582275
    4. '<|end|>' → logprob: -3.5717222690582275
    5. '[' → logprob: -4.196722030639648
    6. '	' → logprob: -4.446722030639648
    7. '	for' → logprob: -4.946722030639648
    8. '+' → logprob: -5.321722030639648
    9. '=' → logprob: -5.446722030639648
    10. ',' → logprob: -5.696722030639648

Token 1039: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004002061206847429
    2. '       ' → logprob: -5.754002094268799
    3. 'mask' → logprob: -7.879002094268799
    4. 'count' → logprob: -9.37900161743164
    5. 'HR' → logprob: -9.50400161743164
    6. 'cnt' → logprob: -9.75400161743164
    7. 'k' → logprob: -9.87900161743164
    8. 'pop' → logprob: -10.25400161743164
    9. ' for' → logprob: -10.50400161743164
    10. 'while' → logprob: -11.50400161743164

Token 1040: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.0001490716531407088
    2. '_h' → logprob: -10.00014877319336
    3. 'w' → logprob: -10.37514877319336
    4. '_' → logprob: -10.75014877319336
    5. ' h' → logprob: -10.75014877319336
    6. 'k' → logprob: -11.12514877319336
    7. 'hh' → logprob: -12.50014877319336
    8. 'x' → logprob: -12.87514877319336
    9. 'i' → logprob: -13.12514877319336
    10. 'v' → logprob: -13.25014877319336

Token 1041: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4740943908691406
    2. 'in' → logprob: -0.9740943908691406
    3. ' ' → logprob: -12.34909439086914
    4. 'i' → logprob: -12.72409439086914
    5. 'range' → logprob: -12.84909439086914
    6. 'h' → logprob: -12.97409439086914
    7. '	in' → logprob: -14.09909439086914
    8. '```' → logprob: -14.09909439086914
    9. ' i' → logprob: -14.72409439086914
    10. ',' → logprob: -14.84909439086914

Token 1042: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004657137673348188
    2. ' range' → logprob: -5.37965726852417
    3. 'in' → logprob: -11.004656791687012
    4. ' in' → logprob: -11.004656791687012
    5. 'r' → logprob: -14.004656791687012
    6. '
' → logprob: -14.504656791687012
    7. '```' → logprob: -14.754656791687012
    8. 'H' → logprob: -15.004656791687012
    9. 'ran' → logprob: -15.004656791687012
    10. 'h' → logprob: -15.254656791687012

Token 1043: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.1429613083600998
    2. 'H' → logprob: -2.017961263656616
    3. '(' → logprob: -8.517961502075195
    4. '1' → logprob: -9.767961502075195
    5. '(h' → logprob: -11.267961502075195
    6. 'h' → logprob: -12.767961502075195
    7. '(
' → logprob: -12.892961502075195
    8. '((' → logprob: -13.517961502075195
    9. ' H' → logprob: -13.642961502075195
    10. ',H' → logprob: -13.767961502075195

Token 1044: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.009095486253499985
    2. '+' → logprob: -5.009095668792725
    3. '       ' → logprob: -7.009095668792725
    4. '):' → logprob: -7.509095668792725
    5. '           ' → logprob: -7.634095668792725
    6. ':
' → logprob: -8.759095191955566
    7. '():
' → logprob: -9.384095191955566
    8. '```' → logprob: -10.509095191955566
    9. '):
' → logprob: -10.884095191955566
    10. '   ' → logprob: -11.009095191955566

Token 1045: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023989591281861067
    2. '		' → logprob: -7.12739896774292
    3. ' if' → logprob: -7.62739896774292
    4. '	       ' → logprob: -7.87739896774292
    5. 'if' → logprob: -8.127398490905762
    6. '	   ' → logprob: -9.252398490905762
    7. '```' → logprob: -9.502398490905762
    8. '   ' → logprob: -9.627398490905762
    9. '<|end|>' → logprob: -9.877398490905762
    10. '	if' → logprob: -10.502398490905762

Token 1046: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5678383708000183
    2. ' if' → logprob: -0.9428383708000183
    3. '           ' → logprob: -3.192838430404663
    4. '```' → logprob: -6.692838191986084
    5. '       ' → logprob: -7.567838191986084
    6. '               ' → logprob: -8.067838668823242
    7. '   ' → logprob: -8.317838668823242
    8. '	if' → logprob: -8.567838668823242
    9. ' ' → logprob: -9.942838668823242
    10. '	       ' → logprob: -10.192838668823242

Token 1047: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.04321829974651337
    2. ' (' → logprob: -3.1682183742523193
    3. '(h' → logprob: -8.668218612670898
    4. ' not' → logprob: -10.918218612670898
    5. '((' → logprob: -11.668218612670898
    6. '(not' → logprob: -11.668218612670898
    7. 'not' → logprob: -12.918218612670898
    8. '(' → logprob: -13.293218612670898
    9. ' i' → logprob: -13.543218612670898
    10. '   ' → logprob: -13.543218612670898

Token 1048: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0146385682746768
    2. '(i' → logprob: -4.264638423919678
    3. ' i' → logprob: -8.139638900756836
    4. 'h' → logprob: -9.514638900756836
    5. ' (' → logprob: -9.889638900756836
    6. '(h' → logprob: -10.764638900756836
    7. 'not' → logprob: -11.389638900756836
    8. '~' → logprob: -11.889638900756836
    9. '1' → logprob: -12.014638900756836
    10. '(' → logprob: -12.764638900756836

Token 1049: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.0047469609417021275
    2. '&' → logprob: -5.379746913909912
    3. ' >>' → logprob: -9.62974739074707
    4. '>>' → logprob: -10.50474739074707
    5. ' &
' → logprob: -11.00474739074707
    6. ' ' → logprob: -12.50474739074707
    7. ')' → logprob: -13.12974739074707
    8. '&i' → logprob: -13.62974739074707
    9. '&p' → logprob: -13.75474739074707
    10. '&nbsp' → logprob: -14.00474739074707

Token 1050: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002889632945880294
    2. ' (' → logprob: -5.877889633178711
    3. '1' → logprob: -9.377889633178711
    4. '```' → logprob: -16.12788963317871
    5. '           ' → logprob: -17.00288963317871
    6. '   ' → logprob: -17.62788963317871
    7. ' ' → logprob: -17.75288963317871
    8. '``' → logprob: -17.87788963317871
    9. '
' → logprob: -18.37788963317871
    10. ')' → logprob: -18.50288963317871

Token 1051: '1' (ID: 16)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0034383961465209723
    2. '1' → logprob: -5.753438472747803
    3. ' (' → logprob: -8.253437995910645
    4. '```' → logprob: -15.628437995910645
    5. '           ' → logprob: -16.50343894958496
    6. '   ' → logprob: -16.50343894958496
    7. '``' → logprob: -17.00343894958496
    8. ')' → logprob: -17.87843894958496
    9. ' ' → logprob: -17.87843894958496
    10. '[' → logprob: -18.00343894958496

Token 1052: ' <<' (ID: 2256)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0308349821716547
    2. '1' → logprob: -3.780834913253784
    3. '<<' → logprob: -5.030835151672363
    4. ' (' → logprob: -7.280835151672363
    5. ')' → logprob: -8.405835151672363
    6. '>>' → logprob: -10.280835151672363
    7. ')<<' → logprob: -10.780835151672363
    8. '```' → logprob: -11.030835151672363
    9. ' <<' → logprob: -11.155835151672363
    10. '>' → logprob: -12.030835151672363

Token 1053: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -4.036524842376821e-05
    2. ' h' → logprob: -10.125040054321289
    3. ')' → logprob: -16.87504005432129
    4. '
' → logprob: -17.00004005432129
    5. '	h' → logprob: -17.00004005432129
    6. '(h' → logprob: -18.00004005432129
    7. ' ' → logprob: -18.12504005432129
    8. '   ' → logprob: -18.12504005432129
    9. '1' → logprob: -18.25004005432129
    10. '```' → logprob: -18.37504005432129

Token 1054: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0013653546338900924
    2. ')==' → logprob: -6.6263651847839355
    3. '):
' → logprob: -11.501365661621094
    4. ')!=' → logprob: -11.501365661621094
    5. ')>>' → logprob: -12.251365661621094
    6. '==' → logprob: -12.501365661621094
    7. ' )' → logprob: -12.501365661621094
    8. ')
' → logprob: -13.126365661621094
    9. '))' → logprob: -13.501365661621094
    10. '0' → logprob: -14.251365661621094

Token 1055: ' !=' (ID: 1666)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01337620709091425
    2. ')==' → logprob: -4.388376235961914
    3. '==' → logprob: -7.263376235961914
    4. '0' → logprob: -9.013376235961914
    5. ')!=' → logprob: -10.263376235961914
    6. ' ==' → logprob: -12.388376235961914
    7. '):
' → logprob: -13.513376235961914
    8. ')>>' → logprob: -14.513376235961914
    9. '!=' → logprob: -14.513376235961914
    10. '```' → logprob: -14.513376235961914

Token 1056: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.558399319241289e-05
    2. ' ' → logprob: -11.375025749206543
    3. '
' → logprob: -11.375025749206543
    4. 'h' → logprob: -13.875025749206543
    5. '1' → logprob: -14.250025749206543
    6. '   ' → logprob: -15.500025749206543
    7. '```' → logprob: -15.500025749206543
    8. '=' → logprob: -16.000024795532227
    9. ' ' → logprob: -16.375024795532227
    10. '``' → logprob: -16.625024795532227

Token 1057: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0032059962395578623
    2. 'h' → logprob: -5.7532057762146
    3. ' ' → logprob: -11.128206253051758
    4. '
' → logprob: -11.378206253051758
    5. '1' → logprob: -13.878206253051758
    6. ' h' → logprob: -15.253206253051758
    7. '```' → logprob: -15.503206253051758
    8. '   ' → logprob: -15.753206253051758
    9. '	h' → logprob: -15.753206253051758
    10. '(h' → logprob: -16.628206253051758

Token 1058: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.1745896190404892
    2. ':' → logprob: -2.5495896339416504
    3. '           ' → logprob: -2.6745896339416504
    4. '):
' → logprob: -4.92458963394165
    5. '               ' → logprob: -6.29958963394165
    6. '       ' → logprob: -6.92458963394165
    7. '==' → logprob: -7.42458963394165
    8. '+' → logprob: -7.79958963394165
    9. ')' → logprob: -8.299589157104492
    10. '
' → logprob: -8.549589157104492

Token 1059: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1500546783208847
    2. '           ' → logprob: -2.150054693222046
    3. '		' → logprob: -4.775054454803467
    4. '	       ' → logprob: -5.025054454803467
    5. '			' → logprob: -5.650054454803467
    6. '		       ' → logprob: -6.400054454803467
    7. '	           ' → logprob: -6.775054454803467
    8. '                   ' → logprob: -8.275054931640625
    9. '	' → logprob: -8.275054931640625
    10. ' ' → logprob: -8.775054931640625

Token 1060: ' HR' (ID: 26502)
  Prédit: 'HR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HR' (adapté à ' HR') → logprob: -0.0080532506108284
    2. ' HR' → logprob: -4.883053302764893
    3. '
' → logprob: -8.133052825927734
    4. '           ' → logprob: -9.508052825927734
    5. '       ' → logprob: -10.133052825927734
    6. '   ' → logprob: -10.383052825927734
    7. '               ' → logprob: -12.008052825927734
    8. '                   ' → logprob: -13.883052825927734
    9. '1' → logprob: -14.633052825927734
    10. ' ' → logprob: -16.508052825927734

Token 1061: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.02977374941110611
    2. ' +=' → logprob: -3.529773712158203
    3. '   ' → logprob: -11.779773712158203
    4. '=' → logprob: -11.904773712158203
    5. ']+=' → logprob: -12.279773712158203
    6. '
' → logprob: -13.904773712158203
    7. '       ' → logprob: -13.904773712158203
    8. '+' → logprob: -14.029773712158203
    9. '           ' → logprob: -14.154773712158203
    10. '	' → logprob: -15.904773712158203

Token 1062: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.968312951968983e-06
    2. ' ' → logprob: -11.625009536743164
    3. '-' → logprob: -15.000009536743164
    4. '
' → logprob: -15.125009536743164
    5. 'h' → logprob: -15.625009536743164
    6. '   ' → logprob: -16.750009536743164
    7. '```' → logprob: -18.250009536743164
    8. '0' → logprob: -18.750009536743164
    9. 'H' → logprob: -18.812509536743164
    10. '2' → logprob: -18.875009536743164

Token 1063: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.749814019713085e-06
    2. '-' → logprob: -13.375006675720215
    3. 'W' → logprob: -13.375006675720215
    4. 'H' → logprob: -14.125006675720215
    5. ' ' → logprob: -14.500006675720215
    6. '0' → logprob: -14.750006675720215
    7. '
' → logprob: -14.750006675720215
    8. 'h' → logprob: -14.875006675720215
    9. 'A' → logprob: -15.125006675720215
    10. 'fact' → logprob: -15.125006675720215

Token 1064: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038347385823726654
    2. '<|end|>' → logprob: -3.9133474826812744
    3. '
' → logprob: -4.288347244262695
    4. '        
' → logprob: -6.788347244262695
    5. '  
' → logprob: -6.913347244262695
    6. ' 
' → logprob: -6.913347244262695
    7. '    
' → logprob: -8.538347244262695
    8. '<|end|>' → logprob: -9.413347244262695
    9. '	' → logprob: -9.663347244262695
    10. '   ' → logprob: -9.788347244262695

Token 1065: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003311627544462681
    2. '           ' → logprob: -6.753311634063721
    3. '        ' → logprob: -7.128311634063721
    4. '<|end|>' → logprob: -7.753311634063721
    5. '   ' → logprob: -8.003311157226562
    6. '               ' → logprob: -9.128311157226562
    7. '    ' → logprob: -9.503311157226562
    8. '```' → logprob: -10.003311157226562
    9. ' for' → logprob: -10.378311157226562
    10. ' ' → logprob: -10.503311157226562

Token 1066: ' WR' (ID: 37437)
  Prédit: 'WR'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WR' (adapté à ' WR') → logprob: -0.05337263643741608
    2. 'for' → logprob: -4.053372859954834
    3. '       ' → logprob: -5.303372859954834
    4. 'HW' → logprob: -5.428372859954834
    5. 'HC' → logprob: -5.553372859954834
    6. 'HR' → logprob: -5.678372859954834
    7. '   ' → logprob: -5.803372859954834
    8. 'VR' → logprob: -5.928372859954834
    9. 'WC' → logprob: -6.053372859954834
    10. 'LR' → logprob: -6.053372859954834

Token 1067: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25290489196777344
    2. ' =' → logprob: -1.5029048919677734
    3. ' +=' → logprob: -7.377904891967773
    4. '+=' → logprob: -8.002904891967773
    5. ' ' → logprob: -11.752904891967773
    6. '=
' → logprob: -12.877904891967773
    7. '   ' → logprob: -13.252904891967773
    8. ')' → logprob: -13.877904891967773
    9. '    ' → logprob: -14.377904891967773
    10. ' =
' → logprob: -14.752904891967773

Token 1068: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0052342405542731285
    2. ' ' → logprob: -5.255234241485596
    3. ' W' → logprob: -16.380233764648438
    4. '   ' → logprob: -16.505233764648438
    5. '1' → logprob: -16.630233764648438
    6. 'W' → logprob: -17.130233764648438
    7. '       ' → logprob: -17.880233764648438
    8. 'w' → logprob: -18.130233764648438
    9. ' ' → logprob: -18.630233764648438
    10. '    ' → logprob: -18.880233764648438

Token 1069: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.875008583068848
    4. 'W' → logprob: -16.87500762939453
    5. 'for' → logprob: -17.37500762939453
    6. '       ' → logprob: -17.50000762939453
    7. '
' → logprob: -18.75000762939453
    8. '           ' → logprob: -18.75000762939453
    9. '1' → logprob: -19.00000762939453
    10. 'w' → logprob: -19.37500762939453

Token 1070: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011384962126612663
    2. 'for' → logprob: -4.636384963989258
    3. ' for' → logprob: -6.636384963989258
    4. '
' → logprob: -9.136384963989258
    5. '<|end|>' → logprob: -9.136384963989258
    6. '[
' → logprob: -10.386384963989258
    7. '[' → logprob: -11.136384963989258
    8. '           ' → logprob: -11.636384963989258
    9. '	for' → logprob: -11.636384963989258
    10. '	' → logprob: -12.011384963989258

Token 1071: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14935922622680664
    2. 'for' → logprob: -2.0243592262268066
    3. ' for' → logprob: -5.149359226226807
    4. '	for' → logprob: -7.274359226226807
    5. '	' → logprob: -8.899358749389648
    6. '```' → logprob: -11.774358749389648
    7. '           ' → logprob: -12.399358749389648
    8. '   ' → logprob: -12.524358749389648
    9. '[' → logprob: -12.774358749389648
    10. '
' → logprob: -13.399358749389648

Token 1072: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -9.13388703338569e-06
    2. ' for' → logprob: -11.625009536743164
    3. '       ' → logprob: -16.250009536743164
    4. 'while' → logprob: -17.125009536743164
    5. '```' → logprob: -17.500009536743164
    6. '	for' → logprob: -18.750009536743164
    7. 'w' → logprob: -19.125009536743164
    8. '[' → logprob: -20.625009536743164
    9. '
' → logprob: -20.750009536743164
    10. '   ' → logprob: -21.000009536743164

Token 1073: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00317783304490149
    2. ' w' → logprob: -5.753177642822266
    3. '(w' → logprob: -15.878177642822266
    4. 'W' → logprob: -17.253177642822266
    5. '   ' → logprob: -17.878177642822266
    6. '	w' → logprob: -18.003177642822266
    7. 'j' → logprob: -18.128177642822266
    8. '```' → logprob: -18.253177642822266
    9. '_w' → logprob: -18.628177642822266
    10. '
' → logprob: -19.378177642822266

Token 1074: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5760119557380676
    2. 'in' → logprob: -0.8260119557380676
    3. '(' → logprob: -10.701011657714844
    4. 'w' → logprob: -10.826011657714844
    5. ' ' → logprob: -12.076011657714844
    6. '[' → logprob: -12.326011657714844
    7. ' (' → logprob: -12.326011657714844
    8. '(w' → logprob: -12.451011657714844
    9. '   ' → logprob: -12.576011657714844
    10. ' w' → logprob: -13.701011657714844

Token 1075: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.038196295499801636
    2. ' range' → logprob: -3.288196325302124
    3. '(range' → logprob: -8.788196563720703
    4. '(' → logprob: -14.038196563720703
    5. 'w' → logprob: -14.163196563720703
    6. 'in' → logprob: -15.163196563720703
    7. ' in' → logprob: -15.413196563720703
    8. '(W' → logprob: -15.788196563720703
    9. 'W' → logprob: -16.413196563720703
    10. '(w' → logprob: -16.663196563720703

Token 1076: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.10527109354734421
    2. 'range' → logprob: -3.230271100997925
    3. '(' → logprob: -3.480271100997925
    4. ' range' → logprob: -4.230270862579346
    5. '(range' → logprob: -4.480270862579346
    6. '(w' → logprob: -6.230270862579346
    7. ' (' → logprob: -6.855270862579346
    8. 'W' → logprob: -7.480270862579346
    9. 'w' → logprob: -10.105271339416504
    10. 'WR' → logprob: -10.605271339416504

Token 1077: '):
' (ID: 1883)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3331465423107147
    2. 'in' → logprob: -2.583146572113037
    3. '&' → logprob: -3.458146572113037
    4. ')' → logprob: -3.458146572113037
    5. 'w' → logprob: -3.833146572113037
    6. 'if' → logprob: -3.833146572113037
    7. '           ' → logprob: -4.083146572113037
    8. '   ' → logprob: -4.083146572113037
    9. '       ' → logprob: -4.458146572113037
    10. '(' → logprob: -4.458146572113037

Token 1078: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03405515104532242
    2. '```' → logprob: -4.034055233001709
    3. 'if' → logprob: -4.784055233001709
    4. ' if' → logprob: -5.409055233001709
    5. '               ' → logprob: -7.159055233001709
    6. '       ' → logprob: -7.409055233001709
    7. '          ' → logprob: -8.28405475616455
    8. '            ' → logprob: -8.53405475616455
    9. '                   ' → logprob: -8.65905475616455
    10. '         ' → logprob: -8.78405475616455

Token 1079: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.002574709476903081
    2. '           ' → logprob: -6.377574920654297
    3. ' if' → logprob: -7.252574920654297
    4. '(w' → logprob: -9.127574920654297
    5. '               ' → logprob: -10.627574920654297
    6. '       ' → logprob: -11.627574920654297
    7. '(if' → logprob: -12.252574920654297
    8. '(' → logprob: -12.502574920654297
    9. '```' → logprob: -12.502574920654297
    10. '
' → logprob: -12.877574920654297

Token 1080: ' (' (ID: 350)
  Prédit: '(w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.20954610407352448
    2. '(j' → logprob: -1.7095460891723633
    3. ' (' → logprob: -4.834546089172363
    4. '(' → logprob: -9.209546089172363
    5. 'w' → logprob: -10.334546089172363
    6. '(not' → logprob: -11.959546089172363
    7. 'j' → logprob: -12.084546089172363
    8. '(W' → logprob: -14.084546089172363
    9. '(J' → logprob: -14.209546089172363
    10. '(i' → logprob: -14.334546089172363

Token 1081: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.1273319572210312
    2. 'w' → logprob: -2.1273319721221924
    3. 'i' → logprob: -8.127331733703613
    4. '(j' → logprob: -9.877331733703613
    5. '(w' → logprob: -10.252331733703613
    6. ' j' → logprob: -11.127331733703613
    7. ' w' → logprob: -12.502331733703613
    8. '(i' → logprob: -13.377331733703613
    9. '(' → logprob: -13.502331733703613
    10. '```' → logprob: -16.12733268737793

Token 1082: ' &' (ID: 827)
  Prédit: ' &'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' &' → logprob: -0.02324652671813965
    2. '&' → logprob: -3.7732465267181396
    3. '&(' → logprob: -15.148246765136719
    4. ' ' → logprob: -15.898246765136719
    5. ' &
' → logprob: -16.39824676513672
    6. '＆' → logprob: -16.64824676513672
    7. ')' → logprob: -16.89824676513672
    8. '&w' → logprob: -17.14824676513672
    9. '&p' → logprob: -17.14824676513672
    10. '&i' → logprob: -17.14824676513672

Token 1083: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1801796704530716
    2. ' (' → logprob: -1.8051797151565552
    3. '(w' → logprob: -8.430179595947266
    4. '1' → logprob: -8.555179595947266
    5. 'w' → logprob: -11.180179595947266
    6. '```' → logprob: -12.805179595947266
    7. '(j' → logprob: -13.180179595947266
    8. '0' → logprob: -13.305179595947266
    9. ')' → logprob: -13.430179595947266
    10. '   ' → logprob: -14.930179595947266

Token 1084: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027240164577960968
    2. 'w' → logprob: -3.65224027633667
    3. ' ' → logprob: -7.77724027633667
    4. ' w' → logprob: -8.277239799499512
    5. '(' → logprob: -9.152239799499512
    6. '(w' → logprob: -9.402239799499512
    7. '```' → logprob: -10.402239799499512
    8. ' (' → logprob: -11.277239799499512
    9. '   ' → logprob: -11.777239799499512
    10. '0' → logprob: -12.027239799499512

Token 1085: ' <<' (ID: 2256)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03633158653974533
    2. ' ' → logprob: -4.036331653594971
    3. ')' → logprob: -4.411331653594971
    4. 'w' → logprob: -5.911331653594971
    5. ' w' → logprob: -6.786331653594971
    6. '&' → logprob: -7.286331653594971
    7. '```' → logprob: -7.286331653594971
    8. '1' → logprob: -8.661331176757812
    9. '!=' → logprob: -9.161331176757812
    10. '>' → logprob: -9.411331176757812

Token 1086: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.01815076172351837
    2. ' w' → logprob: -4.018150806427002
    3. ' ' → logprob: -14.643150329589844
    4. '	w' → logprob: -15.768150329589844
    5. ' ' → logprob: -16.143150329589844
    6. '```' → logprob: -16.518150329589844
    7. '   ' → logprob: -16.643150329589844
    8. ')' → logprob: -17.018150329589844
    9. '1' → logprob: -17.143150329589844
    10. '
' → logprob: -17.893150329589844

Token 1087: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.718606891809031e-05
    2. ')!=' → logprob: -9.875066757202148
    3. ' )' → logprob: -12.250066757202148
    4. '!=' → logprob: -12.375066757202148
    5. '&' → logprob: -13.750066757202148
    6. ')&' → logprob: -13.875066757202148
    7. '       ' → logprob: -14.125066757202148
    8. '               ' → logprob: -14.250066757202148
    9. '0' → logprob: -14.375066757202148
    10. '           ' → logprob: -14.500066757202148

Token 1088: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.1628454029560089
    2. ' !=' → logprob: -1.9128453731536865
    3. '&' → logprob: -6.162845611572266
    4. ' &' → logprob: -9.537845611572266
    5. '==' → logprob: -9.787845611572266
    6. '>' → logprob: -9.912845611572266
    7. '+=' → logprob: -9.912845611572266
    8. ')' → logprob: -10.037845611572266
    9. '       ' → logprob: -10.162845611572266
    10. '               ' → logprob: -10.287845611572266

Token 1089: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00450536934658885
    2. ' ' → logprob: -5.754505157470703
    3. '1' → logprob: -6.629505157470703
    4. 'w' → logprob: -12.879505157470703
    5. '
' → logprob: -13.879505157470703
    6. '   ' → logprob: -14.004505157470703
    7. '```' → logprob: -14.879505157470703
    8. '+' → logprob: -15.504505157470703
    9. ' ' → logprob: -15.754505157470703
    10. ' w' → logprob: -16.067005157470703

Token 1090: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.057904038578271866
    2. '1' → logprob: -3.057904005050659
    3. ' ' → logprob: -4.682904243469238
    4. 'w' → logprob: -11.057904243469238
    5. '   ' → logprob: -13.057904243469238
    6. '
' → logprob: -13.682904243469238
    7. '+' → logprob: -14.432904243469238
    8. 'int' → logprob: -15.745404243469238
    9. '       ' → logprob: -15.870404243469238
    10. '	' → logprob: -15.995404243469238

Token 1091: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010611612349748611
    2. '+=' → logprob: -5.135611534118652
    3. '           ' → logprob: -5.760611534118652
    4. ':
' → logprob: -7.260611534118652
    5. ' +=' → logprob: -7.635611534118652
    6. '=' → logprob: -9.260611534118652
    7. '+' → logprob: -9.510611534118652
    8. ':' → logprob: -9.885611534118652
    9. '              ' → logprob: -10.010611534118652
    10. '	       ' → logprob: -11.385611534118652

Token 1092: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.20700377225875854
    2. '           ' → logprob: -1.7070038318634033
    3. '+' → logprob: -6.332003593444824
    4. '+=' → logprob: -6.332003593444824
    5. '=' → logprob: -7.207003593444824
    6. '	       ' → logprob: -8.332003593444824
    7. '```' → logprob: -8.457003593444824
    8. '++' → logprob: -8.582003593444824
    9. ' +=' → logprob: -9.207003593444824
    10. ':
' → logprob: -9.582003593444824

Token 1093: ' WR' (ID: 37437)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.039689816534519196
    2. '           ' → logprob: -3.539689779281616
    3. ' ' → logprob: -4.664690017700195
    4. '               ' → logprob: -8.289690017700195
    5. '   ' → logprob: -8.789690017700195
    6. '+' → logprob: -10.789690017700195
    7. '	' → logprob: -11.789690017700195
    8. '                   ' → logprob: -11.914690017700195
    9. '	       ' → logprob: -12.414690017700195
    10. '```' → logprob: -12.539690017700195

Token 1094: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.018274489790201187
    2. ' +=' → logprob: -4.018274307250977
    3. ']+=' → logprob: -9.643274307250977
    4. '           ' → logprob: -10.018274307250977
    5. '       ' → logprob: -12.143274307250977
    6. '+' → logprob: -12.893274307250977
    7. '   ' → logprob: -13.018274307250977
    8. '=' → logprob: -13.018274307250977
    9. '        ' → logprob: -14.393274307250977
    10. '          ' → logprob: -14.393274307250977

Token 1095: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3306015716807451e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.00001335144043
    4. '
' → logprob: -16.75001335144043
    5. '           ' → logprob: -17.87501335144043
    6. '	' → logprob: -18.50001335144043
    7. '       ' → logprob: -19.00001335144043
    8. '```' → logprob: -19.25001335144043
    9. '0' → logprob: -19.37501335144043
    10. ' ' → logprob: -19.37501335144043

Token 1096: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '
' → logprob: -16.125001907348633
    4. '   ' → logprob: -16.875001907348633
    5. 'w' → logprob: -17.500001907348633
    6. '           ' → logprob: -18.250001907348633
    7. '```' → logprob: -18.250001907348633
    8. '0' → logprob: -18.500001907348633
    9. '       ' → logprob: -19.375001907348633
    10. '2' → logprob: -19.625001907348633

Token 1097: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2528069317340851
    2. '       ' → logprob: -1.5028069019317627
    3. '   ' → logprob: -7.502807140350342
    4. '
' → logprob: -9.252806663513184
    5. '        
' → logprob: -9.752806663513184
    6. '```' → logprob: -10.002806663513184
    7. '<|end|>' → logprob: -10.252806663513184
    8. '           ' → logprob: -10.877806663513184
    9. '    
' → logprob: -10.877806663513184
    10. ',' → logprob: -11.502806663513184

Token 1098: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2079852670431137
    2. '
' → logprob: -1.832985281944275
    3. '   ' → logprob: -3.8329851627349854
    4. '           ' → logprob: -6.4579854011535645
    5. 'ANS' → logprob: -6.5829854011535645
    6. '```' → logprob: -7.3329854011535645
    7. ',
' → logprob: -7.8329854011535645
    8. '        
' → logprob: -8.207984924316406
    9. '<|end|>' → logprob: -8.207984924316406
    10. '               ' → logprob: -8.207984924316406

Token 1099: ' AN' (ID: 3473)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.020009782165288925
    2. '   ' → logprob: -4.895009994506836
    3. 'if' → logprob: -5.770009994506836
    4. '       ' → logprob: -6.145009994506836
    5. 'AN' (adapté à ' AN') → logprob: -6.145009994506836
    6. '
' → logprob: -6.770009994506836
    7. 'ans' → logprob: -6.770009994506836
    8. 'sign' → logprob: -7.145009994506836
    9. 'v' → logprob: -7.270009994506836
    10. '```' → logprob: -8.520009994506836

Token 1100: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -3.128163257315464e-07
    2. ' S' → logprob: -15.375
    3. '[S' → logprob: -17.25
    4. '+=' → logprob: -17.875
    5. 'SOR' → logprob: -18.125
    6. '(S' → logprob: -18.5
    7. '=' → logprob: -18.75
    8. '	S' → logprob: -18.75
    9. 'Ｓ' → logprob: -19.0
    10. '_S' → logprob: -19.125

Token 1101: ' +=' (ID: 2757)
  Prédit: '-='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-=' → logprob: -0.02614109218120575
    2. ' -=' → logprob: -4.526141166687012
    3. '-' → logprob: -4.651141166687012
    4. '+=' → logprob: -6.026141166687012
    5. '*=' → logprob: -6.151141166687012
    6. '=' → logprob: -7.151141166687012
    7. '*' → logprob: -9.526141166687012
    8. ' *=' → logprob: -11.651141166687012
    9. ' +=' → logprob: -12.151141166687012
    10. '+=(' → logprob: -12.901141166687012

Token 1102: ' CA' (ID: 13180)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.12017055600881577
    2. '-' → logprob: -2.4951705932617188
    3. 'mod' → logprob: -4.870170593261719
    4. '(mod' → logprob: -4.995170593261719
    5. '((-' → logprob: -5.370170593261719
    6. '-mod' → logprob: -5.620170593261719
    7. '((' → logprob: -5.870170593261719
    8. 'calc' → logprob: -5.870170593261719
    9. '(calc' → logprob: -6.870170593261719
    10. '-cal' → logprob: -8.495170593261719

Token 1103: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.16115528345108032
    2. 'HR' → logprob: -1.9111552238464355
    3. 'H' → logprob: -7.6611552238464355
    4. '(H' → logprob: -8.036155700683594
    5. '[
' → logprob: -9.661155700683594
    6. '[(' → logprob: -10.161155700683594
    7. '```' → logprob: -11.036155700683594
    8. ' HR' → logprob: -12.286155700683594
    9. '[len' → logprob: -12.786155700683594
    10. '[i' → logprob: -13.411155700683594

Token 1104: 'HR' (ID: 22427)
  Prédit: 'HR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'HR' → logprob: -0.038051363080739975
    2. 'H' → logprob: -3.2880513668060303
    3. ' HR' → logprob: -12.41305160522461
    4. 'Hr' → logprob: -12.66305160522461
    5. 'hr' → logprob: -14.41305160522461
    6. '_H' → logprob: -14.41305160522461
    7. '(H' → logprob: -14.78805160522461
    8. '
' → logprob: -15.16305160522461
    9. '[' → logprob: -15.78805160522461
    10. 'HP' → logprob: -15.91305160522461

Token 1105: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002813078695908189
    2. '[' → logprob: -5.87781286239624
    3. ',' → logprob: -13.002813339233398
    4. '   ' → logprob: -13.502813339233398
    5. '       ' → logprob: -13.877813339233398
    6. ' ][' → logprob: -13.877813339233398
    7. ']' → logprob: -14.127813339233398
    8. '```' → logprob: -14.627813339233398
    9. ''][' → logprob: -15.127813339233398
    10. '           ' → logprob: -15.377813339233398

Token 1106: 'WR' (ID: 23921)
  Prédit: 'WR'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'WR' → logprob: -3.054500666621607e-06
    2. 'W' → logprob: -12.75000286102295
    3. ' WR' → logprob: -16.750003814697266
    4. '(W' → logprob: -17.500003814697266
    5. 'WW' → logprob: -18.875003814697266
    6. '   ' → logprob: -18.875003814697266
    7. '
' → logprob: -19.250003814697266
    8. '(' → logprob: -19.375003814697266
    9. '[' → logprob: -19.625003814697266
    10. 'WT' → logprob: -21.125003814697266

Token 1107: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02107149548828602
    2. '*' → logprob: -4.396071434020996
    3. ']*' → logprob: -5.146071434020996
    4. ' *' → logprob: -6.021071434020996
    5. '       ' → logprob: -8.396071434020996
    6. ']
' → logprob: -11.271071434020996
    7. '           ' → logprob: -11.771071434020996
    8. '   ' → logprob: -11.896071434020996
    9. ' ]' → logprob: -12.521071434020996
    10. '[' → logprob: -12.646071434020996

Token 1108: '       ' (ID: 309)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.08679497987031937
    2. '
' → logprob: -2.5867950916290283
    3. ' %' → logprob: -5.711794853210449
    4. '%
' → logprob: -6.586794853210449
    5. '       ' → logprob: -7.086794853210449
    6. ')' → logprob: -7.086794853210449
    7. ')%' → logprob: -7.711794853210449
    8. '%=' → logprob: -8.46179485321045
    9. '<|end|>' → logprob: -8.71179485321045
    10. ' %=' → logprob: -8.83679485321045

Token 1109: ' #' (ID: 1069)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.12702606618404388
    2. '
' → logprob: -2.627026081085205
    3. '       ' → logprob: -3.377026081085205
    4. '%
' → logprob: -5.002026081085205
    5. 'ANS' → logprob: -6.377026081085205
    6. '```' → logprob: -6.877026081085205
    7. ')' → logprob: -7.252026081085205
    8. ' %' → logprob: -7.377026081085205
    9. '\n' → logprob: -7.502026081085205
    10. '   ' → logprob: -8.377025604248047

Token 1110: ' AN' (ID: 3473)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014858808368444443
    2. '+=' → logprob: -5.014858722686768
    3. '<|end|>' → logprob: -5.389858722686768
    4. '+' → logprob: -6.889858722686768
    5. '#' → logprob: -7.514858722686768
    6. '1' → logprob: -7.889858722686768
    7. '```' → logprob: -8.264859199523926
    8. ' =' → logprob: -8.389859199523926
    9. '=
' → logprob: -8.389859199523926
    10. ')' → logprob: -9.014859199523926

Token 1111: 'S' (ID: 50)
  Prédit: 'S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -15.250000953674316
    3. '```' → logprob: -16.125
    4. ' S' → logprob: -16.375
    5. '#' → logprob: -16.625
    6. 'SOR' → logprob: -17.125
    7. 's' → logprob: -17.375
    8. 'NS' → logprob: -17.75
    9. '	S' → logprob: -17.875
    10. 'N' → logprob: -17.875

Token 1112: ' %=' (ID: 117035)
  Prédit: '%='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%=' → logprob: -0.5078037977218628
    2. ' %=' → logprob: -1.1328037977218628
    3. '%' → logprob: -2.7578039169311523
    4. '+=' → logprob: -4.632803916931152
    5. ' +=' → logprob: -6.257803916931152
    6. '=' → logprob: -7.757803916931152
    7. ' %' → logprob: -8.257803916931152
    8. ')' → logprob: -9.257803916931152
    9. '
' → logprob: -9.632803916931152
    10. '<|end|>' → logprob: -9.882803916931152

Token 1113: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.2014296054840088
    2. ' mod' → logprob: -1.7014296054840088
    3. '998' → logprob: -11.70142936706543
    4. '(mod' → logprob: -11.82642936706543
    5. '	mod' → logprob: -14.70142936706543
    6. '999' → logprob: -16.20142936706543
    7. ' ' → logprob: -16.70142936706543
    8. ' мод' → logprob: -16.82642936706543
    9. ' modul' → logprob: -17.20142936706543
    10. '```' → logprob: -17.32642936706543

Token 1114: '

' (ID: 279)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.8729587197303772
    2. '
' → logprob: -1.2479586601257324
    3. '\n' → logprob: -1.9979586601257324
    4. '%
' → logprob: -3.2479586601257324
    5. '       ' → logprob: -3.3729586601257324
    6. '<|end|>' → logprob: -3.7479586601257324
    7. ')' → logprob: -4.497958660125732
    8. 'ANS' → logprob: -4.497958660125732
    9. '```' → logprob: -4.997958660125732
    10. '   ' → logprob: -5.247958660125732

Token 1115: 'print' (ID: 1598)
  Prédit: 'ANS'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -0.40413835644721985
    2. '
' → logprob: -1.2791383266448975
    3. '```' → logprob: -4.404138565063477
    4. '\n' → logprob: -4.904138565063477
    5. ' 
' → logprob: -5.029138565063477
    6. '  
' → logprob: -5.279138565063477
    7. '=' → logprob: -5.404138565063477
    8. '\' → logprob: -5.779138565063477
    9. '       ' → logprob: -6.029138565063477
    10. '   ' → logprob: -6.404138565063477

Token 1116: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.5491004129871726e-05
    2. '(ans' → logprob: -10.875045776367188
    3. '((' → logprob: -11.625045776367188
    4. '()' → logprob: -11.625045776367188
    5. 'ANS' → logprob: -12.375045776367188
    6. '(
' → logprob: -13.250045776367188
    7. '(int' → logprob: -13.875045776367188
    8. '('' → logprob: -14.250045776367188
    9. '(str' → logprob: -15.250045776367188
    10. ' (' → logprob: -15.375045776367188

Token 1117: 'ANS' (ID: 18850)
  Prédit: 'ANS'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ANS' → logprob: -6.704273118884885e-07
    2. 'ans' → logprob: -14.250000953674316
    3. 'ANSWER' → logprob: -19.25
    4. 'Ans' → logprob: -19.75
    5. 'AN' → logprob: -21.375
    6. '(ans' → logprob: -21.5
    7. 'ANTS' → logprob: -22.25
    8. '0' → logprob: -24.125
    9. 'ANT' → logprob: -24.125
    10. ' AN' → logprob: -24.25

Token 1118: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.38998544216156006
    2. ')' → logprob: -1.13998544216156
    3. ' %' → logprob: -5.88998556137085
    4. '%)' → logprob: -8.514985084533691
    5. ')%' → logprob: -9.264985084533691
    6. ' ' → logprob: -10.764985084533691
    7. '	' → logprob: -12.139985084533691
    8. ')
' → logprob: -12.389985084533691
    9. ' )' → logprob: -12.514985084533691
    10. '```' → logprob: -12.639985084533691

Token 1119: ' mod' (ID: 1812)
  Prédit: 'mod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mod' → logprob: -0.000170882252859883
    2. ' mod' → logprob: -8.750170707702637
    3. '998' → logprob: -12.000170707702637
    4. '(mod' → logprob: -12.000170707702637
    5. '	mod' → logprob: -18.500171661376953
    6. '
' → logprob: -19.625171661376953
    7. '```' → logprob: -19.750171661376953
    8. '999' → logprob: -19.875171661376953
    9. ' мод' → logprob: -20.375171661376953
    10. 'MOD' → logprob: -20.625171661376953

Token 1120: ')' (ID: 8)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4300985038280487
    2. ')' → logprob: -1.055098533630371
    3. '<|end|>' → logprob: -8.180098533630371
    4. '(' → logprob: -8.430098533630371
    5. '```' → logprob: -8.805098533630371
    6. ' %' → logprob: -8.930098533630371
    7. '#' → logprob: -8.930098533630371
    8. '
' → logprob: -9.180098533630371
    9. '*' → logprob: -9.430098533630371
    10. '%)' → logprob: -9.555098533630371


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1118
Tokens correctement prédits (1ère position, stricte): 501
Tokens correctement prédits (1ère position, avec adaptation): 549
Tokens correctement prédits (top 10): 984
Précision stricte (1ère position): 44.81%
Précision adaptée (1ère position): 49.11%
Précision (top 10): 88.01%
================================================================================
