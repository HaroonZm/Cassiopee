================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:56:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def read_input():
    return sys.stdin.readline().rstrip()

def read_integer():
    return int(read_input())

def read_integer_list():
    return list(map(int, read_input().split()))

def initialize_prefix_sum_array(size):
    return [0 for _ in range(size + 1)]

def build_prefix_sum(weights, prefix_sum_array, n):
    for i in range(n):
        update_prefix_sum(prefix_sum_array, i, weights[i])

def update_prefix_sum(prefix_sum_array, index, value):
    prefix_sum_array[index + 1] = prefix_sum_array[index] + value

def calculate_total_weight(prefix_sum_array, n):
    return prefix_sum_array[n]

def compute_absolute_difference(prefix_sum_array, total_weight, split_index):
    left_sum = prefix_sum_array[split_index + 1]
    right_sum = total_weight - left_sum
    return abs(left_sum - right_sum)

def find_minimum_difference(prefix_sum_array, n):
    total_weight = calculate_total_weight(prefix_sum_array, n)
    minimum_difference = 10 ** 9 + 7
    for i in range(n):
        difference = compute_absolute_difference(prefix_sum_array, total_weight, i)
        minimum_difference = update_minimum(minimum_difference, difference)
    return minimum_difference

def update_minimum(current_minimum, new_value):
    return min(current_minimum, new_value)

def print_result(result):
    print(result)

def solve():
    n = read_integer()
    weights = read_integer_list()
    prefix_sum_array = initialize_prefix_sum_array(n)
    build_prefix_sum(weights, prefix_sum_array, n)
    minimum_difference = find_minimum_difference(prefix_sum_array, n)
    print_result(minimum_difference)

if __name__ == '__main__':
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -1.042949914932251
    2. '.' → logprob: -1.167949914932251
    3. '<|end|>' → logprob: -2.292949914932251
    4. 'import' → logprob: -2.542949914932251
    5. '' → logprob: -2.542949914932251
    6. '#' → logprob: -3.792949914932251
    7. '\' → logprob: -4.417949676513672
    8. '
' → logprob: -4.792949676513672
    9. 'print' → logprob: -5.042949676513672
    10. ';' → logprob: -5.667949676513672

Token 4: ' read' (ID: 1729)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.05554931238293648
    2. ' main' → logprob: -3.805549383163452
    3. ' process' → logprob: -4.805549144744873
    4. ' sys' → logprob: -5.680549144744873
    5. ' space' → logprob: -5.805549144744873
    6. ' ' → logprob: -6.055549144744873
    7. ' function' → logprob: -6.430549144744873
    8. ' a' → logprob: -6.680549144744873
    9. '  ' → logprob: -6.930549144744873
    10. ' my' → logprob: -7.180549144744873

Token 5: '_input' (ID: 12507)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38957807421684265
    2. '_' → logprob: -1.139578104019165
    3. ' (' → logprob: -6.389577865600586
    4. '_line' → logprob: -8.389577865600586
    5. ':' → logprob: -9.514577865600586
    6. '```' → logprob: -9.514577865600586
    7. '_data' → logprob: -9.639577865600586
    8. ' ' → logprob: -9.764577865600586
    9. '():' → logprob: -9.764577865600586
    10. '_space' → logprob: -9.889577865600586

Token 6: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.011192589066922665
    2. '_' → logprob: -4.636192798614502
    3. '():' → logprob: -7.136192798614502
    4. ' (' → logprob: -8.761192321777344
    5. '(_' → logprob: -9.261192321777344
    6. ':' → logprob: -9.886192321777344
    7. '```' → logprob: -9.886192321777344
    8. '(_:' → logprob: -9.886192321777344
    9. '):' → logprob: -10.636192321777344
    10. '_:' → logprob: -10.761192321777344

Token 7: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22093988955020905
    2. '\n' → logprob: -2.845939874649048
    3. '():' → logprob: -3.220939874649048
    4. '\' → logprob: -3.470939874649048
    5. '(' → logprob: -4.095940113067627
    6. '()' → logprob: -4.470940113067627
    7. '```' → logprob: -4.720940113067627
    8. ' return' → logprob: -5.345940113067627
    9. '    
' → logprob: -5.345940113067627
    10. '    ' → logprob: -5.470940113067627

Token 8: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21447153389453888
    2. 'return' (adapté à ' return') → logprob: -2.0894715785980225
    3. ' return' → logprob: -3.3394715785980225
    4. 'data' → logprob: -4.839471340179443
    5. 'input' → logprob: -4.964471340179443
    6. ' ' → logprob: -5.089471340179443
    7. '    ' → logprob: -5.089471340179443
    8. ' input' → logprob: -6.839471340179443
    9. '  ' → logprob: -6.964471340179443
    10. ' line' → logprob: -7.089471340179443

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.017658626660704613
    2. 'sys' → logprob: -4.142658710479736
    3. ' input' → logprob: -7.142658710479736
    4. ' ' → logprob: -7.642658710479736
    5. 'input' → logprob: -8.142658233642578
    6. ' int' → logprob: -10.517658233642578
    7. 'int' → logprob: -11.642658233642578
    8. '	sys' → logprob: -12.017658233642578
    9. '(sys' → logprob: -12.392658233642578
    10. ' ' → logprob: -12.642658233642578

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004062963649630547
    2. '.stdin' → logprob: -5.879063129425049
    3. '.argv' → logprob: -7.129063129425049
    4. '.readline' → logprob: -8.87906265258789
    5. '.stdout' → logprob: -8.87906265258789
    6. ' .' → logprob: -9.25406265258789
    7. '.exit' → logprob: -10.87906265258789
    8. '.import' → logprob: -11.12906265258789
    9. '.input' → logprob: -11.62906265258789
    10. '.`' → logprob: -12.37906265258789

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5773472785949707
    2. '.' → logprob: -1.0773472785949707
    3. '.read' → logprob: -2.3273472785949707
    4. '.readlines' → logprob: -7.702347278594971
    5. '.Read' → logprob: -9.702346801757812
    6. ' .' → logprob: -11.077346801757812
    7. 'read' → logprob: -11.202346801757812
    8. '.READ' → logprob: -12.077346801757812
    9. '.write' → logprob: -12.327346801757812
    10. '```' → logprob: -12.952346801757812

Token 12: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.001584258396178484
    2. '().' → logprob: -6.626584053039551
    3. ' ()' → logprob: -9.00158405303955
    4. '(' → logprob: -9.37658405303955
    5. '()(' → logprob: -10.62658405303955
    6. '()
' → logprob: -11.25158405303955
    7. '()

' → logprob: -12.87658405303955
    8. '`()' → logprob: -13.00158405303955
    9. ')' → logprob: -13.25158405303955
    10. '()\' → logprob: -13.87658405303955

Token 13: 'rstrip' (ID: 180429)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0005533903022296727
    2. 'rstrip' → logprob: -7.500553607940674
    3. ' strip' → logprob: -15.250553131103516
    4. '_strip' → logprob: -16.625553131103516
    5. 'decode' → logprob: -16.750553131103516
    6. 'replace' → logprob: -17.875553131103516
    7. '```' → logprob: -18.250553131103516
    8. 'read' → logprob: -18.625553131103516
    9. '-strip' → logprob: -18.750553131103516
    10. '(strip' → logprob: -19.125553131103516

Token 14: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16177159547805786
    2. '()' → logprob: -1.911771535873413
    3. '(\' → logprob: -7.036771774291992
    4. '(
' → logprob: -8.411771774291992
    5. '```' → logprob: -9.536771774291992
    6. '\' → logprob: -10.036771774291992
    7. ' ' → logprob: -10.286771774291992
    8. ''' → logprob: -10.411771774291992
    9. '\n' → logprob: -10.411771774291992
    10. ' ()' → logprob: -10.536771774291992

Token 15: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2362765222787857
    2. '
' → logprob: -2.486276626586914
    3. '#' → logprob: -3.111276626586914
    4. '\n' → logprob: -3.486276626586914
    5. '```' → logprob: -4.236276626586914
    6. '    
' → logprob: -4.611276626586914
    7. '\' → logprob: -4.861276626586914
    8. '  
' → logprob: -5.361276626586914
    9. '<|end|>' → logprob: -5.611276626586914
    10. 'x' → logprob: -5.986276626586914

Token 16: ' read' (ID: 1729)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0922030657529831
    2. ' calculate' → logprob: -3.342203140258789
    3. ' process' → logprob: -3.842203140258789
    4. ' read' → logprob: -4.967203140258789
    5. ' write' → logprob: -4.967203140258789
    6. ' space' → logprob: -6.092203140258789
    7. ' solve' → logprob: -6.342203140258789
    8. ' ' → logprob: -6.342203140258789
    9. ' compute' → logprob: -6.592203140258789
    10. '_' → logprob: -6.592203140258789

Token 17: '_integer' (ID: 82911)
  Prédit: '_int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_int' → logprob: -0.14771239459514618
    2. '_line' → logprob: -2.522712469100952
    3. '_' → logprob: -3.397712469100952
    4. '()' → logprob: -4.897712230682373
    5. 'int' → logprob: -5.272712230682373
    6. '_input' → logprob: -5.522712230682373
    7. '_integer' → logprob: -5.897712230682373
    8. '_array' → logprob: -7.147712230682373
    9. '_list' → logprob: -7.272712230682373
    10. '_token' → logprob: -7.397712230682373

Token 18: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.04725516214966774
    2. '()' → logprob: -3.172255277633667
    3. '(' → logprob: -5.672255039215088
    4. 's' → logprob: -8.172255516052246
    5. ' ()' → logprob: -8.547255516052246
    6. ' ():' → logprob: -9.547255516052246
    7. '()">' → logprob: -10.297255516052246
    8. '()>' → logprob: -10.547255516052246
    9. '():
' → logprob: -10.547255516052246
    10. '```' → logprob: -10.672255516052246

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22227440774440765
    2. '()' → logprob: -2.3472743034362793
    3. ' return' → logprob: -2.9722743034362793
    4. ' ()' → logprob: -3.2222743034362793
    5. '(' → logprob: -5.847274303436279
    6. 'return' → logprob: -6.097274303436279
    7. '    ' → logprob: -6.347274303436279
    8. '  ' → logprob: -6.472274303436279
    9. 'int' → logprob: -7.097274303436279
    10. ' ' → logprob: -7.097274303436279

Token 20: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.020394960418343544
    2. '   ' → logprob: -4.395394802093506
    3. 'return' (adapté à ' return') → logprob: -5.020394802093506
    4. ' int' → logprob: -6.895394802093506
    5. 'int' → logprob: -8.395395278930664
    6. ' ' → logprob: -12.270395278930664
    7. '    ' → logprob: -12.395395278930664
    8. '  ' → logprob: -13.395395278930664
    9. '    
' → logprob: -13.895395278930664
    10. ' n' → logprob: -14.270395278930664

Token 21: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -5.1689596148207784e-05
    2. 'int' → logprob: -10.500051498413086
    3. ' ' → logprob: -11.125051498413086
    4. '(int' → logprob: -11.875051498413086
    5. ' in' → logprob: -13.125051498413086
    6. ' i' → logprob: -15.750051498413086
    7. '  ' → logprob: -16.250051498413086
    8. '<int' → logprob: -17.250051498413086
    9. ' integer' → logprob: -17.500051498413086
    10. '[int' → logprob: -17.500051498413086

Token 22: '(read' (ID: 45738)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003135174512863159
    2. '(sys' → logprob: -6.0031352043151855
    3. '(read' → logprob: -7.3781352043151855
    4. '(
' → logprob: -11.628134727478027
    5. '()' → logprob: -12.128134727478027
    6. '('' → logprob: -12.378134727478027
    7. ' (' → logprob: -12.753134727478027
    8. '(

' → logprob: -13.128134727478027
    9. '(input' → logprob: -13.378134727478027
    10. '(s' → logprob: -13.378134727478027

Token 23: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.018933618441224098
    2. '_integer' → logprob: -4.0189337730407715
    3. '_' → logprob: -7.2689337730407715
    4. '_line' → logprob: -9.893933296203613
    5. '_string' → logprob: -11.143933296203613
    6. '_in' → logprob: -11.768933296203613
    7. '_int' → logprob: -12.768933296203613
    8. '_instruction' → logprob: -13.018933296203613
    9. '_token' → logprob: -13.268933296203613
    10. '_argument' → logprob: -14.268933296203613

Token 24: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0011835616314783692
    2. '()' → logprob: -6.75118350982666
    3. ')' → logprob: -12.00118350982666
    4. '())
' → logprob: -12.62618350982666
    5. '()))' → logprob: -13.25118350982666
    6. ' ())' → logprob: -13.37618350982666
    7. '();)' → logprob: -16.001184463500977
    8. '()]' → logprob: -16.251184463500977
    9. '()),' → logprob: -16.501184463500977
    10. '())

' → logprob: -16.626184463500977

Token 25: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0004891689168289304
    2. '\' → logprob: -8.250489234924316
    3. 'class' → logprob: -9.750489234924316
    4. '

' → logprob: -9.875489234924316
    5. '```' → logprob: -10.500489234924316
    6. '\n' → logprob: -10.625489234924316
    7. '
' → logprob: -10.875489234924316
    8. '#' → logprob: -11.000489234924316
    9. '<|end|>' → logprob: -11.750489234924316
    10. '<|end|>' → logprob: -11.750489234924316

Token 26: ' read' (ID: 1729)
  Prédit: ' read'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' read' → logprob: -0.0345337800681591
    2. ' write' → logprob: -3.659533739089966
    3. ' main' → logprob: -5.534533977508545
    4. 'read' → logprob: -5.784533977508545
    5. '_' → logprob: -8.409533500671387
    6. 'write' → logprob: -8.409533500671387
    7. ' process' → logprob: -8.784533500671387
    8. ' calculate' → logprob: -9.159533500671387
    9. ' factorial' → logprob: -9.784533500671387
    10. ' compute' → logprob: -9.784533500671387

Token 27: '_integer' (ID: 82911)
  Prédit: '_list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.4841040074825287
    2. '_line' → logprob: -1.609104037284851
    3. '_array' → logprob: -2.2341039180755615
    4. '_' → logprob: -3.1091039180755615
    5. '_string' → logprob: -3.9841039180755615
    6. '_integer' → logprob: -5.109104156494141
    7. '_float' → logprob: -6.109104156494141
    8. '_int' → logprob: -6.359104156494141
    9. '_tuple' → logprob: -7.109104156494141
    10. '_vector' → logprob: -7.234104156494141

Token 28: '_list' (ID: 4162)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.02002965286374092
    2. '_list' → logprob: -4.270029544830322
    3. '()' → logprob: -5.895029544830322
    4. '_array' → logprob: -6.020029544830322
    5. '_s' → logprob: -7.395029544830322
    6. 'list' → logprob: -10.77003002166748
    7. 'array' → logprob: -11.64503002166748
    8. '_tuple' → logprob: -12.14503002166748
    9. '_line' → logprob: -12.14503002166748
    10. '_vector' → logprob: -12.77003002166748

Token 29: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.007697956636548042
    2. '()' → logprob: -4.882698059082031
    3. ' ()' → logprob: -10.632698059082031
    4. '():
' → logprob: -11.132698059082031
    5. '()>' → logprob: -11.507698059082031
    6. ' ():' → logprob: -11.507698059082031
    7. '(' → logprob: -11.757698059082031
    8. '()">' → logprob: -12.257698059082031
    9. '()[' → logprob: -12.882698059082031
    10. '`()' → logprob: -13.257698059082031

Token 30: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05369547754526138
    2. '():' → logprob: -3.0536954402923584
    3. ' ()' → logprob: -5.4286956787109375
    4. '(' → logprob: -7.9286956787109375
    5. '   ' → logprob: -9.303695678710938
    6. '()[' → logprob: -9.428695678710938
    7. '():
' → logprob: -10.303695678710938
    8. '[]' → logprob: -10.303695678710938
    9. '().' → logprob: -10.553695678710938
    10. 'return' → logprob: -11.053695678710938

Token 31: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.378886342048645
    2. ' list' → logprob: -1.378886342048645
    3. 'return' (adapté à ' return') → logprob: -3.0038862228393555
    4. 'list' → logprob: -4.6288862228393555
    5. ' map' → logprob: -5.8788862228393555
    6. '   ' → logprob: -6.7538862228393555
    7. ' ' → logprob: -9.253886222839355
    8. 'map' → logprob: -9.378886222839355
    9. '  ' → logprob: -12.003886222839355
    10. ' [' → logprob: -13.253886222839355

Token 32: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.12768109142780304
    2. 'list' → logprob: -2.127681016921997
    3. '[list' → logprob: -7.252681255340576
    4. ' [' → logprob: -10.627680778503418
    5. '[' → logprob: -10.877680778503418
    6. ' ' → logprob: -14.502680778503418
    7. '(list' → logprob: -15.502680778503418
    8. '	list' → logprob: -15.627680778503418
    9. '[int' → logprob: -16.252681732177734
    10. '[List' → logprob: -16.752681732177734

Token 33: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003982346970587969
    2. '(read' → logprob: -6.2539825439453125
    3. '(map' → logprob: -6.6289825439453125
    4. '(int' → logprob: -8.253982543945312
    5. '(range' → logprob: -8.378982543945312
    6. '(list' → logprob: -9.753982543945312
    7. '(eval' → logprob: -9.753982543945312
    8. '(sys' → logprob: -10.253982543945312
    9. '(

' → logprob: -11.253982543945312
    10. '(
' → logprob: -11.628982543945312

Token 34: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.000937547127250582
    2. '(' → logprob: -7.000937461853027
    3. 'int' → logprob: -10.875937461853027
    4. '<int' → logprob: -12.875937461853027
    5. '```' → logprob: -13.625937461853027
    6. ')' → logprob: -13.750937461853027
    7. ' int' → logprob: -14.375937461853027
    8. '=int' → logprob: -14.500937461853027
    9. ',int' → logprob: -15.125937461853027
    10. '[int' → logprob: -15.375937461853027

Token 35: ',' (ID: 11)
  Prédit: '(read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(read' → logprob: -0.07343980669975281
    2. '(' → logprob: -2.698439836502075
    3. ',' → logprob: -5.823439598083496
    4. ' (' → logprob: -8.573439598083496
    5. ')' → logprob: -9.323439598083496
    6. 'read' → logprob: -9.573439598083496
    7. '(
' → logprob: -9.698439598083496
    8. '))' → logprob: -10.573439598083496
    9. '(input' → logprob: -11.073439598083496
    10. ' ,' → logprob: -11.323439598083496

Token 36: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.5759533643722534
    2. ' read' → logprob: -0.8259533643722534
    3. '(read' → logprob: -12.075953483581543
    4. '	read' → logprob: -12.200953483581543
    5. ' ' → logprob: -13.700953483581543
    6. ' readline' → logprob: -14.075953483581543
    7. '   ' → logprob: -14.200953483581543
    8. '.read' → logprob: -15.575953483581543
    9. '  ' → logprob: -16.075952529907227
    10. '```' → logprob: -17.325952529907227

Token 37: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -0.20155249536037445
    2. '_integer' → logprob: -1.7015525102615356
    3. ' _' → logprob: -10.576552391052246
    4. '_int' → logprob: -10.951552391052246
    5. '_string' → logprob: -11.076552391052246
    6. '(_' → logprob: -11.201552391052246
    7. '_in' → logprob: -11.326552391052246
    8. '_instruction' → logprob: -11.576552391052246
    9. ')_' → logprob: -12.451552391052246
    10. '_line' → logprob: -12.576552391052246

Token 38: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -9.372294698550832e-06
    2. '()' → logprob: -12.375009536743164
    3. ' ().' → logprob: -12.500009536743164
    4. '()))' → logprob: -15.125009536743164
    5. ')' → logprob: -15.375009536743164
    6. '   ' → logprob: -15.875009536743164
    7. 'split' → logprob: -16.125009536743164
    8. '))' → logprob: -16.125009536743164
    9. '.' → logprob: -16.125009536743164
    10. '.split' → logprob: -16.250009536743164

Token 39: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0006293982733041048
    2. 'strip' → logprob: -7.500629425048828
    3. 'rstrip' → logprob: -9.500629425048828
    4. ' split' → logprob: -13.625629425048828
    5. '(split' → logprob: -15.625629425048828
    6. 's' → logprob: -16.500629425048828
    7. ')' → logprob: -16.750629425048828
    8. 'spl' → logprob: -17.750629425048828
    9. '.split' → logprob: -18.375629425048828
    10. '```' → logprob: -18.375629425048828

Token 40: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007612424436956644
    2. '()' → logprob: -5.507612228393555
    3. '))' → logprob: -5.757612228393555
    4. '())' → logprob: -8.007612228393555
    5. '()))
' → logprob: -11.257612228393555
    6. '())))' → logprob: -11.257612228393555
    7. '(' → logprob: -12.132612228393555
    8. '()));' → logprob: -13.507612228393555
    9. '()))

' → logprob: -13.757612228393555
    10. ')))' → logprob: -14.257612228393555

Token 41: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05177151784300804
    2. 'class' → logprob: -3.426771402359009
    3. '\n' → logprob: -5.676771640777588
    4. '\' → logprob: -5.801771640777588
    5. '

' → logprob: -5.926771640777588
    6. '#' → logprob: -5.926771640777588
    7. '```' → logprob: -6.176771640777588
    8. 'print' → logprob: -6.926771640777588
    9. '
' → logprob: -6.926771640777588
    10. 'n' → logprob: -7.426771640777588

Token 42: ' initialize' (ID: 18400)
  Prédit: ' write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' write' → logprob: -0.17860975861549377
    2. ' main' → logprob: -2.428609848022461
    3. ' read' → logprob: -2.803609848022461
    4. ' solve' → logprob: -5.303609848022461
    5. 'write' → logprob: -5.928609848022461
    6. ' factorial' → logprob: -6.178609848022461
    7. ' is' → logprob: -6.303609848022461
    8. ' count' → logprob: -7.303609848022461
    9. ' binary' → logprob: -7.803609848022461
    10. ' process' → logprob: -8.428609848022461

Token 43: '_prefix' (ID: 33197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0027457927353680134
    2. '(' → logprob: -7.127745628356934
    3. '_array' → logprob: -7.377745628356934
    4. ' _' → logprob: -8.377745628356934
    5. '_(' → logprob: -8.377745628356934
    6. '(_' → logprob: -9.627745628356934
    7. '_data' → logprob: -9.752745628356934
    8. '_database' → logprob: -9.877745628356934
    9. '(_)' → logprob: -10.002745628356934
    10. '```' → logprob: -10.252745628356934

Token 44: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.10931159555912018
    2. '_sum' → logprob: -2.359311580657959
    3. '_s' → logprob: -5.109311580657959
    4. '_array' → logprob: -5.859311580657959
    5. '_suffix' → logprob: -9.859312057495117
    6. '_counts' → logprob: -10.734312057495117
    7. '_count' → logprob: -10.734312057495117
    8. ' _' → logprob: -10.734312057495117
    9. '_counter' → logprob: -11.734312057495117
    10. '_arrays' → logprob: -11.859312057495117

Token 45: '_array' (ID: 8766)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12401042878627777
    2. '_' → logprob: -2.3740103244781494
    3. '_(' → logprob: -4.4990105628967285
    4. '()' → logprob: -5.3740105628967285
    5. 's' → logprob: -5.7490105628967285
    6. '_s' → logprob: -6.8740105628967285
    7. '(_' → logprob: -7.1240105628967285
    8. '(_)' → logprob: -7.1240105628967285
    9. '_list' → logprob: -7.6240105628967285
    10. '_array' → logprob: -8.49901008605957

Token 46: '(size' (ID: 15192)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0279768705368042
    2. '()' → logprob: -3.6529769897460938
    3. '_' → logprob: -7.277976989746094
    4. '(n' → logprob: -8.152976989746094
    5. '(()' → logprob: -8.777976989746094
    6. ' (' → logprob: -8.902976989746094
    7. '(size' → logprob: -9.277976989746094
    8. '()(' → logprob: -10.402976989746094
    9. '_(' → logprob: -10.652976989746094
    10. '(s' → logprob: -10.652976989746094

Token 47: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002989589935168624
    2. ')' → logprob: -5.877989768981934
    3. ' ):' → logprob: -8.752989768981934
    4. '):
' → logprob: -12.002989768981934
    5. '(' → logprob: -12.252989768981934
    6. '():' → logprob: -12.377989768981934
    7. ')：' → logprob: -12.627989768981934
    8. '_' → logprob: -13.377989768981934
    9. '=' → logprob: -13.752989768981934
    10. ':' → logprob: -13.752989768981934

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0037410527002066374
    2. '[' → logprob: -5.878741264343262
    3. '(size' → logprob: -8.003741264343262
    4. '[]' → logprob: -9.253741264343262
    5. ' return' → logprob: -9.503741264343262
    6. '(' → logprob: -9.878741264343262
    7. ' [' → logprob: -10.003741264343262
    8. '():
' → logprob: -10.253741264343262
    9. '[size' → logprob: -10.378741264343262
    10. '():' → logprob: -10.503741264343262

Token 49: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7040055990219116
    2. '   ' → logprob: -0.8290055990219116
    3. 'return' (adapté à ' return') → logprob: -3.829005718231201
    4. '    ' → logprob: -4.579005718231201
    5. ' [' → logprob: -4.579005718231201
    6. ' prefix' → logprob: -4.579005718231201
    7. ' ' → logprob: -5.079005718231201
    8. '[' → logprob: -5.204005718231201
    9. 'prefix' → logprob: -5.954005718231201
    10. ' 
' → logprob: -8.079005241394043

Token 50: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6931489706039429
    2. ' [' → logprob: -0.6931489706039429
    3. ' ' → logprob: -15.068148612976074
    4. ' ' → logprob: -15.193148612976074
    5. '[n' → logprob: -15.318148612976074
    6. '[int' → logprob: -15.318148612976074
    7. '[size' → logprob: -15.818148612976074
    8. '   ' → logprob: -16.31814956665039
    9. '0' → logprob: -16.56814956665039
    10. '[s' → logprob: -16.81814956665039

Token 51: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. ')' → logprob: -15.250431060791016
    4. '[' → logprob: -16.812931060791016
    5. '۰' → logprob: -17.437931060791016
    6. '00' → logprob: -17.562931060791016
    7. '   ' → logprob: -17.687931060791016
    8. ' ' → logprob: -17.687931060791016
    9. ']' → logprob: -17.750431060791016
    10. ' [' → logprob: -18.000431060791016

Token 52: ' for' (ID: 395)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007352970424108207
    2. ']*(' → logprob: -7.375735282897949
    3. ' ]' → logprob: -9.62573528289795
    4. ']*' → logprob: -10.50073528289795
    5. ' for' → logprob: -11.37573528289795
    6. ')' → logprob: -13.62573528289795
    7. ']+' → logprob: -14.50073528289795
    8. '<|end|>' → logprob: -14.75073528289795
    9. ']int' → logprob: -15.12573528289795
    10. '<|end|>' → logprob: -15.37573528289795

Token 53: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.26815396547317505
    2. '_' → logprob: -1.6431539058685303
    3. ' ' → logprob: -3.7681539058685303
    4. ' range' → logprob: -4.393154144287109
    5. 'range' → logprob: -5.518154144287109
    6. ' in' → logprob: -7.018154144287109
    7. '_range' → logprob: -7.393154144287109
    8. ' i' → logprob: -8.01815414428711
    9. '<|end|>' → logprob: -8.01815414428711
    10. '  ' → logprob: -10.01815414428711

Token 54: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12856338918209076
    2. ' range' → logprob: -3.003563404083252
    3. ' in' → logprob: -3.128563404083252
    4. 'in' → logprob: -4.378563404083252
    5. 'size' → logprob: -5.003563404083252
    6. 'ange' → logprob: -5.753563404083252
    7. ' ' → logprob: -6.128563404083252
    8. '_' → logprob: -6.628563404083252
    9. ' size' → logprob: -7.753563404083252
    10. '(range' → logprob: -8.128562927246094

Token 55: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029778147116303444
    2. ' range' → logprob: -3.529778242111206
    3. '	range' → logprob: -11.404778480529785
    4. '(range' → logprob: -12.029778480529785
    5. 'size' → logprob: -12.654778480529785
    6. ' ' → logprob: -13.279778480529785
    7. ')' → logprob: -13.404778480529785
    8. ' xrange' → logprob: -13.654778480529785
    9. 'ange' → logprob: -14.154778480529785
    10. ']' → logprob: -14.654778480529785

Token 56: '(size' (ID: 15192)
  Prédit: '(size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(size' → logprob: -0.0011709370883181691
    2. '(' → logprob: -6.751171112060547
    3. ' (' → logprob: -14.376171112060547
    4. ')' → logprob: -17.001171112060547
    5. ')]' → logprob: -18.376171112060547
    6. '<size' → logprob: -18.376171112060547
    7. '(range' → logprob: -18.876171112060547
    8. '(length' → logprob: -19.001171112060547
    9. 'size' → logprob: -19.001171112060547
    10. '(count' → logprob: -19.376171112060547

Token 57: ' +' (ID: 659)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.016254184767603874
    2. '+' → logprob: -4.14125394821167
    3. ' +' → logprob: -8.641254425048828
    4. ' )' → logprob: -10.641254425048828
    5. ')' → logprob: -11.766254425048828
    6. ']' → logprob: -12.141254425048828
    7. ')]
' → logprob: -13.391254425048828
    8. ')])' → logprob: -13.516254425048828
    9. ' ]' → logprob: -13.891254425048828
    10. '   ' → logprob: -14.266254425048828

Token 58: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.007609108928591013
    2. ' ' → logprob: -4.882608890533447
    3. '2' → logprob: -13.382609367370605
    4. '   ' → logprob: -14.257609367370605
    5. ')' → logprob: -14.757609367370605
    6. '0' → logprob: -15.632609367370605
    7. '  ' → logprob: -16.07010841369629
    8. '```' → logprob: -16.38260841369629
    9. '+' → logprob: -17.88260841369629
    10. '１' → logprob: -18.00760841369629

Token 59: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. ' ' → logprob: -11.25001335144043
    3. '2' → logprob: -15.00001335144043
    4. '１' → logprob: -18.12501335144043
    5. '```' → logprob: -18.12501335144043
    6. ')' → logprob: -18.37501335144043
    7. '   ' → logprob: -18.56251335144043
    8. '  ' → logprob: -19.31251335144043
    9. '0' → logprob: -20.50001335144043
    10. '7' → logprob: -20.62501335144043

Token 60: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -5.7888184528565034e-05
    2. ']' → logprob: -10.3750581741333
    3. ')' → logprob: -10.6250581741333
    4. '])' → logprob: -14.2500581741333
    5. ')])' → logprob: -14.5000581741333
    6. '])]' → logprob: -14.5000581741333
    7. ')]
' → logprob: -15.5000581741333
    8. ')],' → logprob: -15.6250581741333
    9. ' )' → logprob: -15.7500581741333
    10. ' ]' → logprob: -16.875057220458984

Token 61: 'def' (ID: 1314)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6701369285583496
    2. 'def' → logprob: -1.0451369285583496
    3. '
' → logprob: -2.0451369285583496
    4. '\' → logprob: -5.54513692855835
    5. '\n' → logprob: -7.04513692855835
    6. ' def' → logprob: -7.17013692855835
    7. '```' → logprob: -8.045137405395508
    8. '' → logprob: -8.420137405395508
    9. '<|end|>' → logprob: -8.420137405395508
    10. ' 

' → logprob: -8.420137405395508

Token 62: ' build' (ID: 3024)
  Prédit: ' compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.5660042762756348
    2. ' calculate' → logprob: -1.0660042762756348
    3. '_' → logprob: -3.3160042762756348
    4. ' build' → logprob: -3.6910042762756348
    5. ' update' → logprob: -4.191004276275635
    6. ' _' → logprob: -5.816004276275635
    7. ' accumulate' → logprob: -6.066004276275635
    8. ' create' → logprob: -6.691004276275635
    9. '_compute' → logprob: -7.316004276275635
    10. ' ' → logprob: -7.316004276275635

Token 63: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.004723106976598501
    2. '_' → logprob: -5.379723072052002
    3. 'prefix' → logprob: -10.00472354888916
    4. '_suffix' → logprob: -10.62972354888916
    5. '_sum' → logprob: -11.62972354888916
    6. '(prefix' → logprob: -12.37972354888916
    7. ' _' → logprob: -12.37972354888916
    8. ' prefix' → logprob: -12.75472354888916
    9. '_frequency' → logprob: -12.87972354888916
    10. '_pref' → logprob: -13.25472354888916

Token 64: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00011009939044015482
    2. '_s' → logprob: -9.500109672546387
    3. '_' → logprob: -10.500109672546387
    4. '_array' → logprob: -12.625109672546387
    5. '_suffix' → logprob: -13.000109672546387
    6. ' _' → logprob: -14.375109672546387
    7. 'sum' → logprob: -14.625109672546387
    8. '_prefix' → logprob: -15.625109672546387
    9. '_f' → logprob: -16.125110626220703
    10. ')_' → logprob: -16.750110626220703

Token 65: '(weights' (ID: 154124)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00033581978641450405
    2. '(arr' → logprob: -8.750335693359375
    3. '_arr' → logprob: -9.250335693359375
    4. '(' → logprob: -10.625335693359375
    5. 'array' → logprob: -11.125335693359375
    6. '_arrays' → logprob: -11.375335693359375
    7. 'arr' → logprob: -12.250335693359375
    8. '_list' → logprob: -12.250335693359375
    9. '(array' → logprob: -12.375335693359375
    10. '_' → logprob: -12.625335693359375

Token 66: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033684198278933764
    2. '):' → logprob: -5.878368377685547
    3. ' ,' → logprob: -7.753368377685547
    4. ',size' → logprob: -9.628368377685547
    5. '):
' → logprob: -11.378368377685547
    6. ',w' → logprob: -11.503368377685547
    7. ',length' → logprob: -11.753368377685547
    8. '   ' → logprob: -12.628368377685547
    9. ' ):' → logprob: -12.628368377685547
    10. ',n' → logprob: -12.628368377685547

Token 67: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.20693166553974152
    2. 'prefix' → logprob: -1.706931710243225
    3. ' n' → logprob: -7.0819315910339355
    4. ' counts' → logprob: -7.5819315910339355
    5. ' weights' → logprob: -7.5819315910339355
    6. ' size' → logprob: -7.7069315910339355
    7. 'arr' → logprob: -7.8319315910339355
    8. 'weights' → logprob: -8.331932067871094
    9. 'psum' → logprob: -8.581932067871094
    10. 'n' → logprob: -8.581932067871094

Token 68: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.36302101612091064
    2. '_s' → logprob: -1.2380210161209106
    3. ')' → logprob: -5.238020896911621
    4. ')_' → logprob: -5.613020896911621
    5. 's' → logprob: -6.238020896911621
    6. '_' → logprob: -6.238020896911621
    7. ')]' → logprob: -7.488020896911621
    8. '_array' → logprob: -7.738020896911621
    9. '   ' → logprob: -9.488020896911621
    10. 'sum' → logprob: -9.738020896911621

Token 69: '_array' (ID: 8766)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05838610604405403
    2. '_array' → logprob: -3.1833860874176025
    3. '):
' → logprob: -4.933386325836182
    4. 's' → logprob: -5.183386325836182
    5. ')' → logprob: -6.683386325836182
    6. ',' → logprob: -8.308385848999023
    7. ')):' → logprob: -8.433385848999023
    8. '):
' → logprob: -9.183385848999023
    9. ' ):' → logprob: -9.183385848999023
    10. '   ' → logprob: -9.308385848999023

Token 70: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001816790085285902
    2. '):
' → logprob: -6.501816749572754
    3. ',' → logprob: -8.751816749572754
    4. ' ):' → logprob: -9.376816749572754
    5. ')' → logprob: -10.001816749572754
    6. '):
' → logprob: -11.251816749572754
    7. '   ' → logprob: -12.126816749572754
    8. ':' → logprob: -12.876816749572754
    9. ' ' → logprob: -14.001816749572754
    10. '):

' → logprob: -14.501816749572754

Token 71: ' n' (ID: 297)
  Prédit: ' size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' size' → logprob: -0.5294035077095032
    2. ' n' → logprob: -2.2794034481048584
    3. 'size' → logprob: -2.2794034481048584
    4. ' index' → logprob: -2.9044034481048584
    5. 'n' → logprob: -3.1544034481048584
    6. 'index' → logprob: -3.7794034481048584
    7. ' start' → logprob: -4.1544036865234375
    8. ' weights' → logprob: -4.4044036865234375
    9. ' i' → logprob: -4.5294036865234375
    10. ' length' → logprob: -4.9044036865234375

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008806961588561535
    2. '):
' → logprob: -4.758807182312012
    3. ')' → logprob: -9.383807182312012
    4. ' ):' → logprob: -9.883807182312012
    5. ',' → logprob: -10.758807182312012
    6. '):
' → logprob: -11.383807182312012
    7. 'e' → logprob: -11.758807182312012
    8. 's' → logprob: -12.508807182312012
    9. '   ' → logprob: -13.508807182312012
    10. ':' → logprob: -13.508807182312012

Token 73: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05773640424013138
    2. '):' → logprob: -2.932736396789551
    3. '():' → logprob: -6.557736396789551
    4. ':
' → logprob: -7.307736396789551
    5. '):
' → logprob: -7.932736396789551
    6. '   ' → logprob: -8.68273639678955
    7. ' :' → logprob: -9.18273639678955
    8. ']:' → logprob: -9.93273639678955
    9. ',' → logprob: -11.05773639678955
    10. '():
' → logprob: -11.43273639678955

Token 74: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17006374895572662
    2. ' for' → logprob: -2.1700637340545654
    3. ':' → logprob: -3.9200637340545654
    4. '
' → logprob: -4.0450639724731445
    5. ':
' → logprob: -6.0450639724731445
    6. 'for' (adapté à ' for') → logprob: -6.5450639724731445
    7. '    
' → logprob: -7.7950639724731445
    8. '	for' → logprob: -8.170063972473145
    9. '```' → logprob: -9.170063972473145
    10. '):
' → logprob: -9.795063972473145

Token 75: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0003993296413682401
    2. 'i' → logprob: -8.500399589538574
    3. ' ' → logprob: -8.625399589538574
    4. '_' → logprob: -11.750399589538574
    5. ' _' → logprob: -12.000399589538574
    6. '	i' → logprob: -13.625399589538574
    7. '_i' → logprob: -14.625399589538574
    8. ' ' → logprob: -15.000399589538574
    9. ' in' → logprob: -16.250398635864258
    10. ' I' → logprob: -17.125398635864258

Token 76: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0037873699329793453
    2. 'in' → logprob: -5.628787517547607
    3. ' ' → logprob: -8.75378704071045
    4. '	in' → logprob: -12.00378704071045
    5. 'n' → logprob: -12.37878704071045
    6. '  ' → logprob: -12.75378704071045
    7. ',' → logprob: -12.87878704071045
    8. '   ' → logprob: -13.25378704071045
    9. 'range' → logprob: -13.25378704071045
    10. '+' → logprob: -13.44128704071045

Token 77: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.25196772813796997
    2. ' range' → logprob: -1.5019676685333252
    3. '(range' → logprob: -10.751967430114746
    4. '	range' → logprob: -11.501967430114746
    5. ' ' → logprob: -12.626967430114746
    6. ' xrange' → logprob: -13.376967430114746
    7. 'ange' → logprob: -13.751967430114746
    8. '   ' → logprob: -14.751967430114746
    9. '  ' → logprob: -15.876967430114746
    10. '.range' → logprob: -16.001968383789062

Token 78: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00011403311509639025
    2. '(n' → logprob: -9.250114440917969
    3. ' (' → logprob: -11.125114440917969
    4. '1' → logprob: -12.875114440917969
    5. ' ' → logprob: -15.125114440917969
    6. '(
' → logprob: -15.250114440917969
    7. '   ' → logprob: -17.75011444091797
    8. '(len' → logprob: -18.12511444091797
    9. '	' → logprob: -18.25011444091797
    10. '(i' → logprob: -18.87511444091797

Token 79: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011486903764307499
    2. '):
' → logprob: -4.636487007141113
    3. ' ):' → logprob: -6.511487007141113
    4. '+' → logprob: -8.761487007141113
    5. '):
' → logprob: -10.761487007141113
    6. '1' → logprob: -11.011487007141113
    7. ' ' → logprob: -11.636487007141113
    8. '   ' → logprob: -11.636487007141113
    9. ' +' → logprob: -11.886487007141113
    10. ' ):
' → logprob: -12.136487007141113

Token 80: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27952054142951965
    2. ' prefix' → logprob: -2.0295205116271973
    3. '   ' → logprob: -2.5295205116271973
    4. 'prefix' → logprob: -3.7795205116271973
    5. '+' → logprob: -5.904520511627197
    6. '    ' → logprob: -6.279520511627197
    7. ')' → logprob: -6.654520511627197
    8. '        
' → logprob: -7.154520511627197
    9. '    
' → logprob: -7.279520511627197
    10. '_prefix' → logprob: -7.529520511627197

Token 81: ' update' (ID: 4027)
  Prédit: ' prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.7000094652175903
    2. 'prefix' → logprob: -0.7000094652175903
    3. '       ' → logprob: -5.200009346008301
    4. '   ' → logprob: -6.700009346008301
    5. '_prefix' → logprob: -10.0750093460083
    6. '(prefix' → logprob: -10.7000093460083
    7. '.prefix' → logprob: -11.5750093460083
    8. '           ' → logprob: -11.9500093460083
    9. ' ' → logprob: -12.5750093460083
    10. '```' → logprob: -13.3250093460083

Token 82: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.4248124361038208
    2. 'prefix' → logprob: -1.9248124361038208
    3. 'd' → logprob: -2.4248123168945312
    4. '(prefix' → logprob: -2.6748123168945312
    5. ' prefix' → logprob: -4.049812316894531
    6. 's' → logprob: -4.299812316894531
    7. '_' → logprob: -5.174812316894531
    8. 'Prefix' → logprob: -6.424812316894531
    9. 'refix' → logprob: -7.299812316894531
    10. '   ' → logprob: -7.549812316894531

Token 83: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -5.967624019831419e-05
    2. 'sum' → logprob: -10.000060081481934
    3. '_array' → logprob: -11.375060081481934
    4. 's' → logprob: -14.125060081481934
    5. '_' → logprob: -14.375060081481934
    6. 'array' → logprob: -15.125060081481934
    7. '_prefix' → logprob: -15.500060081481934
    8. 'psum' → logprob: -15.500060081481934
    9. '_s' → logprob: -15.750060081481934
    10. '(sum' → logprob: -16.250059127807617

Token 84: '(prefix' (ID: 59324)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.022458521649241447
    2. '(prefix' → logprob: -3.897458553314209
    3. 'Array' → logprob: -8.02245807647705
    4. '_prefix' → logprob: -8.39745807647705
    5. 'prefix' → logprob: -8.39745807647705
    6. 'array' → logprob: -8.52245807647705
    7. '_' → logprob: -8.52245807647705
    8. '   ' → logprob: -8.89745807647705
    9. '[' → logprob: -9.02245807647705
    10. '(i' → logprob: -9.27245807647705

Token 85: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.00023154958034865558
    2. 'sum' → logprob: -8.375231742858887
    3. ' sum' → logprob: -15.000231742858887
    4. '_array' → logprob: -16.12523078918457
    5. 'Sum' → logprob: -16.12523078918457
    6. '_' → logprob: -16.62523078918457
    7. 's' → logprob: -16.62523078918457
    8. '	sum' → logprob: -16.75023078918457
    9. 'um' → logprob: -16.87523078918457
    10. '_s' → logprob: -17.00023078918457

Token 86: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00047630956396460533
    2. '_' → logprob: -8.625475883483887
    3. 'array' → logprob: -8.750475883483887
    4. '_arr' → logprob: -10.375475883483887
    5. ')_' → logprob: -10.500475883483887
    6. ')' → logprob: -10.750475883483887
    7. '_arrays' → logprob: -11.625475883483887
    8. '_)' → logprob: -11.875475883483887
    9. 'Array' → logprob: -12.000475883483887
    10. '_sum' → logprob: -12.500475883483887

Token 87: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16594146192073822
    2. '[i' → logprob: -2.1659414768218994
    3. '[' → logprob: -3.5409414768218994
    4. ',i' → logprob: -5.66594123840332
    5. ' ,' → logprob: -5.91594123840332
    6. ')' → logprob: -6.16594123840332
    7. ',[' → logprob: -7.91594123840332
    8. ')[' → logprob: -8.16594123840332
    9. '   ' → logprob: -9.16594123840332
    10. ',
' → logprob: -9.91594123840332

Token 88: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.05507286638021469
    2. ' i' → logprob: -2.930072784423828
    3. ')' → logprob: -8.930072784423828
    4. ')i' → logprob: -10.805072784423828
    5. ',' → logprob: -12.305072784423828
    6. '   ' → logprob: -12.305072784423828
    7. ' weights' → logprob: -12.430072784423828
    8. ',i' → logprob: -12.430072784423828
    9. '[i' → logprob: -12.430072784423828
    10. '(i' → logprob: -12.430072784423828

Token 89: ',' (ID: 11)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5207363963127136
    2. ' +' → logprob: -1.0207364559173584
    3. ',' → logprob: -3.5207364559173584
    4. ')' → logprob: -4.520736217498779
    5. ' ,' → logprob: -5.520736217498779
    6. ' )' → logprob: -7.770736217498779
    7. '   ' → logprob: -8.520736694335938
    8. ' ' → logprob: -8.770736694335938
    9. ')+' → logprob: -9.395736694335938
    10. ']' → logprob: -9.770736694335938

Token 90: ' weights' (ID: 28460)
  Prédit: ' weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' weights' → logprob: -0.3487967252731323
    2. 'weights' → logprob: -1.2237967252731323
    3. '   ' → logprob: -8.848796844482422
    4. ')' → logprob: -9.848796844482422
    5. '(weights' → logprob: -10.348796844482422
    6. '    ' → logprob: -10.473796844482422
    7. ' i' → logprob: -10.973796844482422
    8. '_weights' → logprob: -11.348796844482422
    9. 'weight' → logprob: -11.723796844482422
    10. ' ' → logprob: -11.723796844482422

Token 91: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.02274370938539505
    2. '[' → logprob: -3.8977437019348145
    3. ')' → logprob: -6.2727437019348145
    4. ']' → logprob: -9.147744178771973
    5. '[
' → logprob: -10.272744178771973
    6. ' [' → logprob: -10.272744178771973
    7. ' ' → logprob: -10.897744178771973
    8. '])' → logprob: -11.147744178771973
    9. ',' → logprob: -11.272744178771973
    10. '+' → logprob: -11.272744178771973

Token 92: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00478254584595561
    2. ' )' → logprob: -5.879782676696777
    3. '+' → logprob: -6.379782676696777
    4. ' +' → logprob: -8.879782676696777
    5. '))' → logprob: -9.504782676696777
    6. '])' → logprob: -10.629782676696777
    7. '+)' → logprob: -11.504782676696777
    8. ']' → logprob: -11.754782676696777
    9. ')
' → logprob: -12.129782676696777
    10. ')+' → logprob: -12.379782676696777

Token 93: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.022194471210241318
    2. 'def' → logprob: -4.3971943855285645
    3. '' → logprob: -5.7721943855285645
    4. ' 
' → logprob: -6.6471943855285645
    5. '\n' → logprob: -7.0221943855285645
    6. '    
' → logprob: -7.1471943855285645
    7. '

' → logprob: -7.1471943855285645
    8. '<|end|>' → logprob: -7.1471943855285645
    9. '  
' → logprob: -7.5221943855285645
    10. '   ' → logprob: -7.8971943855285645

Token 94: ' update' (ID: 4027)
  Prédit: ' update'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' update' → logprob: -0.16662417352199554
    2. ' ' → logprob: -2.041624069213867
    3. '_' → logprob: -4.416624069213867
    4. ' _' → logprob: -5.291624069213867
    5. '_update' → logprob: -6.041624069213867
    6. ' def' → logprob: -6.541624069213867
    7. ' build' → logprob: -7.041624069213867
    8. ' space' → logprob: -7.791624069213867
    9. ' u' → logprob: -8.291624069213867
    10. 'update' → logprob: -8.791624069213867

Token 95: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0013963071396574378
    2. '_' → logprob: -6.626396179199219
    3. '_suffix' → logprob: -10.001396179199219
    4. ' _' → logprob: -12.251396179199219
    5. '_pres' → logprob: -12.251396179199219
    6. '```' → logprob: -12.251396179199219
    7. '_p' → logprob: -12.376396179199219
    8. '_prec' → logprob: -13.501396179199219
    9. '_sum' → logprob: -13.876396179199219
    10. '_pref' → logprob: -14.251396179199219

Token 96: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.1008713702030946e-06
    2. 'sum' → logprob: -13.125001907348633
    3. '_s' → logprob: -16.875001907348633
    4. 's' → logprob: -17.625001907348633
    5. '_' → logprob: -18.125001907348633
    6. ' sum' → logprob: -18.250001907348633
    7. '```' → logprob: -19.125001907348633
    8. 'Sum' → logprob: -19.375001907348633
    9. '_SUM' → logprob: -19.500001907348633
    10. ' _' → logprob: -19.500001907348633

Token 97: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.0017484845593571663
    2. '(' → logprob: -6.376748561859131
    3. '_prefix' → logprob: -11.001748085021973
    4. '(array' → logprob: -11.126748085021973
    5. '(pref' → logprob: -12.126748085021973
    6. '_array' → logprob: -13.001748085021973
    7. '(
' → logprob: -13.126748085021973
    8. ' (' → logprob: -13.251748085021973
    9. '(parent' → logprob: -14.001748085021973
    10. '```' → logprob: -15.001748085021973

Token 98: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.1472419600977446e-06
    2. '_s' → logprob: -14.625000953674316
    3. 'sum' → logprob: -15.500000953674316
    4. '_' → logprob: -15.625000953674316
    5. ')_' → logprob: -16.000001907348633
    6. '_array' → logprob: -16.375001907348633
    7. 's' → logprob: -17.875001907348633
    8. '```' → logprob: -17.875001907348633
    9. '_SUM' → logprob: -18.375001907348633
    10. ' sum' → logprob: -18.375001907348633

Token 99: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.3663626305060461e-05
    2. '_arrays' → logprob: -12.62501335144043
    3. '_' → logprob: -12.75001335144043
    4. '[' → logprob: -13.50001335144043
    5. 'array' → logprob: -13.62501335144043
    6. ')' → logprob: -13.62501335144043
    7. '_ARRAY' → logprob: -14.25001335144043
    8. '_arr' → logprob: -14.62501335144043
    9. '```' → logprob: -14.87501335144043
    10. 'Array' → logprob: -14.87501335144043

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027933192905038595
    2. ',i' → logprob: -8.500279426574707
    3. ',index' → logprob: -10.000279426574707
    4. ' ,' → logprob: -10.750279426574707
    5. '[i' → logprob: -13.250279426574707
    6. ',k' → logprob: -13.500279426574707
    7. ',size' → logprob: -13.875279426574707
    8. ',j' → logprob: -13.875279426574707
    9. '   ' → logprob: -14.500279426574707
    10. ',n' → logprob: -15.250279426574707

Token 101: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6292831301689148
    2. 'i' → logprob: -1.0042831897735596
    3. 'index' → logprob: -3.0042831897735596
    4. ' index' → logprob: -3.2542831897735596
    5. ' idx' → logprob: -4.7542829513549805
    6. 'idx' → logprob: -5.8792829513549805
    7. 'k' → logprob: -8.37928295135498
    8. ')' → logprob: -8.62928295135498
    9. ' k' → logprob: -9.00428295135498
    10. 'j' → logprob: -9.37928295135498

Token 102: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08577416837215424
    2. '+' → logprob: -2.5857741832733154
    3. '):
' → logprob: -5.960773944854736
    4. ' +' → logprob: -6.710773944854736
    5. ' ):' → logprob: -6.835773944854736
    6. ')' → logprob: -6.960773944854736
    7. '   ' → logprob: -7.335773944854736
    8. ',' → logprob: -8.460774421691895
    9. '):
' → logprob: -10.085774421691895
    10. ')+' → logprob: -10.460774421691895

Token 103: ' value' (ID: 1432)
  Prédit: 'value'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'value' → logprob: -0.203484907746315
    2. ' value' → logprob: -1.7034848928451538
    3. 'delta' → logprob: -6.703485012054443
    4. 'increment' → logprob: -8.328484535217285
    5. 'val' → logprob: -8.578484535217285
    6. ' delta' → logprob: -8.828484535217285
    7. 'weight' → logprob: -9.078484535217285
    8. ' increment' → logprob: -10.203484535217285
    9. ' val' → logprob: -10.453484535217285
    10. ' weight' → logprob: -10.703484535217285

Token 104: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008717750199139118
    2. '):
' → logprob: -4.7587175369262695
    3. '):
' → logprob: -10.00871753692627
    4. ':' → logprob: -10.75871753692627
    5. '   ' → logprob: -11.75871753692627
    6. ' ):' → logprob: -11.88371753692627
    7. '+' → logprob: -12.13371753692627
    8. ',' → logprob: -12.25871753692627
    9. ')' → logprob: -12.63371753692627
    10. ']:' → logprob: -13.13371753692627

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025910651311278343
    2. ' prefix' → logprob: -4.5259108543396
    3. 'prefix' → logprob: -5.1509108543396
    4. ' =' → logprob: -5.9009108543396
    5. '    
' → logprob: -6.6509108543396
    6. ' +=' → logprob: -7.2759108543396
    7. '+' → logprob: -7.5259108543396
    8. '=' → logprob: -7.5259108543396
    9. ')' → logprob: -8.275910377502441
    10. '<|end|>' → logprob: -8.275910377502441

Token 106: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.6729229092597961
    2. '   ' → logprob: -1.0479228496551514
    3. ' prefix' → logprob: -2.0479228496551514
    4. '    
' → logprob: -5.7979230880737305
    5. ' for' → logprob: -6.4229230880737305
    6. '_prefix' → logprob: -6.7979230880737305
    7. ')' → logprob: -7.0479230880737305
    8. 'for' → logprob: -7.5479230880737305
    9. '(prefix' → logprob: -7.6729230880737305
    10. '```' → logprob: -7.7979230880737305

Token 107: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.8624639324116288e-06
    2. 'sum' → logprob: -13.250001907348633
    3. ' sum' → logprob: -17.250001907348633
    4. '_s' → logprob: -18.750001907348633
    5. '_SUM' → logprob: -20.250001907348633
    6. '_' → logprob: -21.125001907348633
    7. 'Sum' → logprob: -21.875001907348633
    8. '_num' → logprob: -22.000001907348633
    9. '	sum' → logprob: -22.000001907348633
    10. '```' → logprob: -22.375001907348633

Token 108: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -6.511406809295295e-06
    2. '_' → logprob: -12.750006675720215
    3. 'array' → logprob: -13.875006675720215
    4. '_arrays' → logprob: -14.125006675720215
    5. 'Array' → logprob: -14.750006675720215
    6. '[' → logprob: -14.875006675720215
    7. '_ARRAY' → logprob: -15.125006675720215
    8. '_Array' → logprob: -15.750006675720215
    9. '_arr' → logprob: -16.0000057220459
    10. 's' → logprob: -16.3750057220459

Token 109: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -6.432518421206623e-05
    2. '[' → logprob: -9.8750638961792
    3. '=index' → logprob: -13.1250638961792
    4. 'index' → logprob: -13.1250638961792
    5. '[Index' → logprob: -13.1250638961792
    6. '_index' → logprob: -13.5000638961792
    7. '[i' → logprob: -13.6250638961792
    8. '```' → logprob: -13.8750638961792
    9. '   ' → logprob: -14.2500638961792
    10. ' [' → logprob: -14.7500638961792

Token 110: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.07040251791477203
    2. ' +' → logprob: -2.6954026222229004
    3. ']' → logprob: -7.6954026222229
    4. '+]' → logprob: -12.445402145385742
    5. '   ' → logprob: -13.320402145385742
    6. '1' → logprob: -13.320402145385742
    7. ']+' → logprob: -13.570402145385742
    8. '＋' → logprob: -14.570402145385742
    9. ']+=' → logprob: -14.570402145385742
    10. ' plus' → logprob: -14.820402145385742

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5570885807392187e-05
    2. ' ' → logprob: -11.250015258789062
    3. ']' → logprob: -14.375015258789062
    4. '   ' → logprob: -14.750015258789062
    5. '2' → logprob: -15.187515258789062
    6. '<|end|>' → logprob: -15.187515258789062
    7. '```' → logprob: -15.250015258789062
    8. ')' → logprob: -15.750015258789062
    9. '>' → logprob: -16.250015258789062
    10. '+' → logprob: -16.687515258789062

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. ' ' → logprob: -15.500000953674316
    3. '<|end|>' → logprob: -15.625000953674316
    4. ']' → logprob: -16.125
    5. '+' → logprob: -17.0
    6. '   ' → logprob: -17.5625
    7. '2' → logprob: -17.6875
    8. ')' → logprob: -18.25
    9. '```' → logprob: -18.25
    10. '[' → logprob: -18.75

Token 113: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006862067151814699
    2. ' ]' → logprob: -5.006862163543701
    3. ')' → logprob: -9.381861686706543
    4. ']+=' → logprob: -9.881861686706543
    5. ')]' → logprob: -12.006861686706543
    6. ' )' → logprob: -14.006861686706543
    7. '`]' → logprob: -14.006861686706543
    8. ']=' → logprob: -14.256861686706543
    9. '   ' → logprob: -14.256861686706543
    10. ' +=' → logprob: -14.381861686706543

Token 114: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.8969346284866333
    2. ' +=' → logprob: -1.0219346284866333
    3. '=' → logprob: -1.5219346284866333
    4. ' =' → logprob: -4.271934509277344
    5. '+' → logprob: -10.646934509277344
    6. ']+=' → logprob: -11.521934509277344
    7. '[' → logprob: -14.021934509277344
    8. '.=' → logprob: -14.021934509277344
    9. '    ' → logprob: -14.146934509277344
    10. '+='' → logprob: -14.271934509277344

Token 115: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.20146994292736053
    2. ' prefix' → logprob: -1.701469898223877
    3. '   ' → logprob: -9.826470375061035
    4. '(prefix' → logprob: -13.576470375061035
    5. '_prefix' → logprob: -14.076470375061035
    6. '    ' → logprob: -15.326470375061035
    7. '```' → logprob: -16.45146942138672
    8. 'value' → logprob: -16.70146942138672
    9. ' ' → logprob: -16.82646942138672
    10. '.prefix' → logprob: -16.95146942138672

Token 116: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0004886920796707273
    2. 'sum' → logprob: -7.625488758087158
    3. ' sum' → logprob: -14.62548828125
    4. 'psum' → logprob: -16.75048828125
    5. '_SUM' → logprob: -17.12548828125
    6. 's' → logprob: -17.37548828125
    7. 'Sum' → logprob: -17.50048828125
    8. '	sum' → logprob: -18.00048828125
    9. '_s' → logprob: -18.25048828125
    10. '.sum' → logprob: -18.37548828125

Token 117: '_array' (ID: 8766)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.012008953839540482
    2. 'sum' → logprob: -4.637009143829346
    3. '_array' → logprob: -6.137009143829346
    4. 'array' → logprob: -10.137008666992188
    5. 'um' → logprob: -10.387008666992188
    6. 'psum' → logprob: -12.012008666992188
    7. 'Sum' → logprob: -13.262008666992188
    8. 'prefix' → logprob: -13.387008666992188
    9. '.sum' → logprob: -13.637008666992188
    10. '[' → logprob: -13.887008666992188

Token 118: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.00014060820103622973
    2. 'index' → logprob: -9.250140190124512
    3. '[' → logprob: -10.125140190124512
    4. ' index' → logprob: -13.000140190124512
    5. '[in' → logprob: -14.125140190124512
    6. '```' → logprob: -14.875140190124512
    7. '[ind' → logprob: -15.000140190124512
    8. ' [' → logprob: -15.125140190124512
    9. '[Index' → logprob: -16.125141143798828
    10. '	index' → logprob: -16.500141143798828

Token 119: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003985316026955843
    2. '+' → logprob: -6.253985404968262
    3. ' ]' → logprob: -6.753985404968262
    4. ']+' → logprob: -7.128985404968262
    5. ' +' → logprob: -9.503985404968262
    6. '+]' → logprob: -11.878985404968262
    7. '    ' → logprob: -13.878985404968262
    8. '']' → logprob: -13.878985404968262
    9. '   ' → logprob: -14.253985404968262
    10. ')' → logprob: -14.628985404968262

Token 120: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519315779209137
    2. ' +' → logprob: -1.5019315481185913
    3. ' plus' → logprob: -14.376931190490723
    4. ' ' → logprob: -15.126931190490723
    5. '   ' → logprob: -15.751931190490723
    6. '+i' → logprob: -15.876931190490723
    7. '＋' → logprob: -16.00193214416504
    8. '+s' → logprob: -16.00193214416504
    9. '+
' → logprob: -16.12693214416504
    10. '    ' → logprob: -16.12693214416504

Token 121: ' value' (ID: 1432)
  Prédit: ' value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' value' → logprob: -0.02975083328783512
    2. 'value' → logprob: -3.5297508239746094
    3. '(value' → logprob: -16.52975082397461
    4. ' ' → logprob: -16.52975082397461
    5. ' ' → logprob: -17.02975082397461
    6. '"value' → logprob: -17.40475082397461
    7. ''value' → logprob: -17.52975082397461
    8. '	value' → logprob: -18.02975082397461
    9. '$value' → logprob: -18.15475082397461
    10. '    ' → logprob: -18.15475082397461

Token 122: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 123: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2594531178474426
    2. '<|end|>' → logprob: -1.7594530582427979
    3. '
' → logprob: -3.884453058242798
    4. '#' → logprob: -4.134453296661377
    5. 'n' → logprob: -4.509453296661377
    6. '```' → logprob: -5.259453296661377
    7. '[' → logprob: -7.009453296661377
    8. '<|end|>' → logprob: -7.259453296661377
    9. '\' → logprob: -8.009452819824219
    10. '\n' → logprob: -8.009452819824219

Token 124: ' calculate' (ID: 17950)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.5453411340713501
    2. 'main' → logprob: -0.9203411340713501
    3. 'calculate' → logprob: -4.2953410148620605
    4. ' calculate' → logprob: -6.0453410148620605
    5. 'compute' → logprob: -6.5453410148620605
    6. 'sum' → logprob: -7.2953410148620605
    7. 'query' → logprob: -7.4203410148620605
    8. 'process' → logprob: -7.5453410148620605
    9. 'get' → logprob: -7.7953410148620605
    10. 'solve' → logprob: -8.170341491699219

Token 125: '_total' (ID: 23814)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.8208576440811157
    2. '_max' → logprob: -1.3208576440811157
    3. '_sub' → logprob: -2.320857524871826
    4. '_total' → logprob: -2.570857524871826
    5. '_weight' → logprob: -2.695857524871826
    6. '_range' → logprob: -3.820857524871826
    7. '_sum' → logprob: -4.320857524871826
    8. '_average' → logprob: -4.945857524871826
    9. '_' → logprob: -6.320857524871826
    10. '_difference' → logprob: -6.695857524871826

Token 126: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.044228821992874146
    2. '_sum' → logprob: -3.5442287921905518
    3. '_weights' → logprob: -4.919229030609131
    4. '_cost' → logprob: -6.294229030609131
    5. '_prefix' → logprob: -6.544229030609131
    6. '_' → logprob: -6.919229030609131
    7. '(' → logprob: -7.544229030609131
    8. '_we' → logprob: -7.919229030609131
    9. '_score' → logprob: -8.169228553771973
    10. '_amount' → logprob: -8.419228553771973

Token 127: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.046079788357019424
    2. '(' → logprob: -3.4210798740386963
    3. '(weights' → logprob: -4.421079635620117
    4. '():' → logprob: -8.421079635620117
    5. '(weight' → logprob: -10.546079635620117
    6. '(total' → logprob: -10.921079635620117
    7. ' (' → logprob: -11.296079635620117
    8. '(parent' → logprob: -11.546079635620117
    9. '()' → logprob: -12.046079635620117
    10. '(s' → logprob: -12.171079635620117

Token 128: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.3782830137643032e-05
    2. '_' → logprob: -12.37501335144043
    3. ')_' → logprob: -12.62501335144043
    4. 'sum' → logprob: -12.87501335144043
    5. '_s' → logprob: -13.00001335144043
    6. ')' → logprob: -14.25001335144043
    7. '_suffix' → logprob: -15.62501335144043
    8. '_total' → logprob: -16.50001335144043
    9. '_array' → logprob: -16.62501335144043
    10. 's' → logprob: -17.00001335144043

Token 129: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.5776860184123507e-06
    2. 'array' → logprob: -13.50000286102295
    3. '_arrays' → logprob: -14.50000286102295
    4. ')' → logprob: -15.50000286102295
    5. 'Array' → logprob: -16.125001907348633
    6. '_ARRAY' → logprob: -16.625001907348633
    7. '_' → logprob: -16.625001907348633
    8. 's' → logprob: -17.375001907348633
    9. '_sum' → logprob: -17.375001907348633
    10. ')_' → logprob: -17.625001907348633

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010332842357456684
    2. '):' → logprob: -8.001032829284668
    3. ',n' → logprob: -8.501032829284668
    4. ' ,' → logprob: -8.626032829284668
    5. ',index' → logprob: -8.751032829284668
    6. ',start' → logprob: -9.501032829284668
    7. ',size' → logprob: -10.376032829284668
    8. ',i' → logprob: -11.376032829284668
    9. ',end' → logprob: -12.126032829284668
    10. ',length' → logprob: -12.126032829284668

Token 131: ' n' (ID: 297)
  Prédit: ' left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' left' → logprob: -0.8279346823692322
    2. 'left' → logprob: -1.452934741973877
    3. ' start' → logprob: -1.702934741973877
    4. 'start' → logprob: -1.952934741973877
    5. 'l' → logprob: -5.702934741973877
    6. ' l' → logprob: -7.202934741973877
    7. 'i' → logprob: -7.702934741973877
    8. ' i' → logprob: -7.952934741973877
    9. '   ' → logprob: -9.702934265136719
    10. 'prefix' → logprob: -10.077934265136719

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008868030272424221
    2. ',' → logprob: -7.375886917114258
    3. '):
' → logprob: -8.750886917114258
    4. ')' → logprob: -9.625886917114258
    5. ' ):' → logprob: -10.375886917114258
    6. ':' → logprob: -13.625886917114258
    7. '):
' → logprob: -13.750886917114258
    8. '   ' → logprob: -14.875886917114258
    9. ' ,' → logprob: -15.125886917114258
    10. ' ' → logprob: -15.125886917114258

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06735525280237198
    2. ' return' → logprob: -2.942355155944824
    3. 'return' → logprob: -4.442355155944824
    4. '	return' → logprob: -7.817355155944824
    5. '   ' → logprob: -9.317355155944824
    6. '    
' → logprob: -10.067355155944824
    7. '```' → logprob: -10.942355155944824
    8. '{return' → logprob: -11.192355155944824
    9. ':return' → logprob: -11.442355155944824
    10. '
' → logprob: -12.067355155944824

Token 134: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0012455896940082312
    2. ' return' → logprob: -6.751245498657227
    3. '   ' → logprob: -9.501245498657227
    4. 'prefix' → logprob: -15.376245498657227
    5. '
' → logprob: -15.626245498657227
    6. '```' → logprob: -16.876245498657227
    7. 'def' → logprob: -17.126245498657227
    8. '	return' → logprob: -17.501245498657227
    9. ' ' → logprob: -17.626245498657227
    10. 'eturn' → logprob: -17.876245498657227

Token 135: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.023246875032782555
    2. 'prefix' → logprob: -3.7732467651367188
    3. '(prefix' → logprob: -13.523246765136719
    4. '_prefix' → logprob: -17.77324676513672
    5. ' prefixes' → logprob: -18.27324676513672
    6. 'Prefix' → logprob: -19.27324676513672
    7. '.prefix' → logprob: -19.89824676513672
    8. ' ' → logprob: -20.39824676513672
    9. 'refix' → logprob: -20.64824676513672
    10. 'PREFIX' → logprob: -20.77324676513672

Token 136: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -1.723973582556937e-05
    2. 'sum' → logprob: -11.000017166137695
    3. 'psum' → logprob: -16.125017166137695
    4. '_s' → logprob: -16.625017166137695
    5. '_array' → logprob: -16.875017166137695
    6. 'array' → logprob: -17.125017166137695
    7. ' sum' → logprob: -17.250017166137695
    8. '_' → logprob: -17.500017166137695
    9. '```' → logprob: -18.125017166137695
    10. 'Sum' → logprob: -18.625017166137695

Token 137: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.5107177862082608e-05
    2. 'array' → logprob: -10.750024795532227
    3. 'Array' → logprob: -13.750024795532227
    4. '_' → logprob: -14.375024795532227
    5. 'rray' → logprob: -14.500024795532227
    6. '_arrays' → logprob: -14.500024795532227
    7. '[' → logprob: -15.250024795532227
    8. '_ar' → logprob: -15.500024795532227
    9. '_ARRAY' → logprob: -15.875024795532227
    10. '_arr' → logprob: -15.875024795532227

Token 138: '[n' (ID: 15433)
  Prédit: '[n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.029808932915329933
    2. '[-' → logprob: -3.52980899810791
    3. '[' → logprob: -9.77980899810791
    4. '[len' → logprob: -13.65480899810791
    5. 'n' → logprob: -15.27980899810791
    6. '[
' → logprob: -15.90480899810791
    7. '[num' → logprob: -17.029808044433594
    8. '```' → logprob: -17.279808044433594
    9. ' [' → logprob: -17.529808044433594
    10. '[N' → logprob: -18.029808044433594

Token 139: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009894612012431026
    2. ' ]' → logprob: -7.3759894371032715
    3. ')' → logprob: -8.75098991394043
    4. '])' → logprob: -8.87598991394043
    5. ']
' → logprob: -10.37598991394043
    6. ')]' → logprob: -10.62598991394043
    7. ']-' → logprob: -12.87598991394043
    8. ' )' → logprob: -13.50098991394043
    9. ']

' → logprob: -13.75098991394043
    10. '[' → logprob: -14.00098991394043

Token 140: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 141: ' compute' (ID: 23864)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.787187397480011
    2. 'main' → logprob: -1.4121873378753662
    3. 'calculate' → logprob: -1.5371873378753662
    4. ' calculate' → logprob: -3.412187337875366
    5. 'def' → logprob: -3.662187337875366
    6. 'read' → logprob: -5.037187576293945
    7. 'find' → logprob: -5.287187576293945
    8. ' find' → logprob: -5.787187576293945
    9. 'sum' → logprob: -6.037187576293945
    10. ' read' → logprob: -6.412187576293945

Token 142: '_absolute' (ID: 131930)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4436178505420685
    2. '_min' → logprob: -2.193617820739746
    3. '_opt' → logprob: -2.693617820739746
    4. '_weight' → logprob: -3.193617820739746
    5. '_prefix' → logprob: -3.193617820739746
    6. '_total' → logprob: -3.443617820739746
    7. '_' → logprob: -3.693617820739746
    8. '_m' → logprob: -5.193617820739746
    9. '_partition' → logprob: -5.193617820739746
    10. '_average' → logprob: -5.193617820739746

Token 143: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.0518619567155838
    2. '_value' → logprob: -3.0518620014190674
    3. '_diff' → logprob: -6.676861763000488
    4. '_distance' → logprob: -6.801861763000488
    5. '_d' → logprob: -8.301861763000488
    6. 'difference' → logprob: -8.426861763000488
    7. '_de' → logprob: -8.676861763000488
    8. '_sum' → logprob: -9.176861763000488
    9. 'value' → logprob: -11.051861763000488
    10. '_' → logprob: -11.051861763000488

Token 144: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.12994864583015442
    2. '(' → logprob: -2.504948616027832
    3. '(a' → logprob: -4.254948616027832
    4. '(left' → logprob: -4.504948616027832
    5. '(total' → logprob: -5.129948616027832
    6. ' (' → logprob: -5.629948616027832
    7. '(weight' → logprob: -6.879948616027832
    8. '(weights' → logprob: -7.254948616027832
    9. '(prev' → logprob: -7.629948616027832
    10. '(value' → logprob: -7.879948616027832

Token 145: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.18246100842952728
    2. '_' → logprob: -1.8074610233306885
    3. '_s' → logprob: -7.182460784912109
    4. 'sum' → logprob: -7.432460784912109
    5. ')' → logprob: -8.30746078491211
    6. '<|end|>' → logprob: -8.30746078491211
    7. '_)' → logprob: -8.43246078491211
    8. '_array' → logprob: -8.55746078491211
    9. 's' → logprob: -8.80746078491211
    10. 'Sum' → logprob: -9.55746078491211

Token 146: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -8.780830830801278e-05
    2. 'array' → logprob: -9.75008773803711
    3. '_arrays' → logprob: -11.12508773803711
    4. '_' → logprob: -12.50008773803711
    5. '_sum' → logprob: -12.62508773803711
    6. '(array' → logprob: -13.75008773803711
    7. '(prefix' → logprob: -13.87508773803711
    8. 'Array' → logprob: -13.87508773803711
    9. '_arr' → logprob: -14.12508773803711
    10. '(' → logprob: -14.25008773803711

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022356293629854918
    2. ' ,' → logprob: -8.750223159790039
    3. ',n' → logprob: -10.000223159790039
    4. ',index' → logprob: -11.250223159790039
    5. ',p' → logprob: -12.625223159790039
    6. ',i' → logprob: -14.375223159790039
    7. ',size' → logprob: -14.750223159790039
    8. ',s' → logprob: -15.000223159790039
    9. ',num' → logprob: -15.250223159790039
    10. ',k' → logprob: -15.375223159790039

Token 148: ' total' (ID: 3609)
  Prédit: ' index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' index' → logprob: -1.2183372974395752
    2. 'index' → logprob: -1.4683372974395752
    3. ' left' → logprob: -1.9683372974395752
    4. 'i' → logprob: -2.718337297439575
    5. ' n' → logprob: -2.843337297439575
    6. ' i' → logprob: -2.968337297439575
    7. 'n' → logprob: -3.093337297439575
    8. 'left' → logprob: -3.218337297439575
    9. 'mid' → logprob: -4.468337059020996
    10. ' mid' → logprob: -4.593337059020996

Token 149: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.12241175770759583
    2. '_weights' → logprob: -2.7474117279052734
    3. '_size' → logprob: -3.7474117279052734
    4. '_' → logprob: -4.122411727905273
    5. '_length' → logprob: -5.247411727905273
    6. '_n' → logprob: -6.497411727905273
    7. '_w' → logprob: -7.247411727905273
    8. '_sum' → logprob: -7.622411727905273
    9. '_we' → logprob: -7.747411727905273
    10. '_index' → logprob: -7.872411727905273

Token 150: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001206423039548099
    2. ' ,' → logprob: -7.126206398010254
    3. '):' → logprob: -8.126206398010254
    4. ',n' → logprob: -10.001206398010254
    5. '):
' → logprob: -10.876206398010254
    6. ',
' → logprob: -11.501206398010254
    7. ',index' → logprob: -12.001206398010254
    8. '_,' → logprob: -12.626206398010254
    9. ',int' → logprob: -13.126206398010254
    10. 's' → logprob: -13.126206398010254

Token 151: ' split' (ID: 12648)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.16641102731227875
    2. ' index' → logprob: -2.5414109230041504
    3. 'mid' → logprob: -3.9164109230041504
    4. 'position' → logprob: -4.66641092300415
    5. 'split' → logprob: -4.79141092300415
    6. 'i' → logprob: -4.91641092300415
    7. 'partition' → logprob: -5.16641092300415
    8. 'idx' → logprob: -5.29141092300415
    9. 'k' → logprob: -5.91641092300415
    10. 'left' → logprob: -6.04141092300415

Token 152: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.2265731692314148
    2. '_point' → logprob: -1.6015732288360596
    3. ')' → logprob: -7.4765729904174805
    4. '):' → logprob: -8.22657299041748
    5. '_' → logprob: -9.10157299041748
    6. '_position' → logprob: -9.10157299041748
    7. '_pos' → logprob: -10.10157299041748
    8. '_idx' → logprob: -11.22657299041748
    9. 'Index' → logprob: -11.47657299041748
    10. 'point' → logprob: -11.60157299041748

Token 153: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008450066088698804
    2. ' ):' → logprob: -8.000844955444336
    3. '):
' → logprob: -8.375844955444336
    4. ')' → logprob: -8.500844955444336
    5. ',' → logprob: -9.625844955444336
    6. ':' → logprob: -12.250844955444336
    7. ' ' → logprob: -13.375844955444336
    8. '):
' → logprob: -13.625844955444336
    9. '   ' → logprob: -15.000844955444336
    10. '1' → logprob: -15.125844955444336

Token 154: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08020926266908646
    2. '(' → logprob: -3.705209255218506
    3. '):' → logprob: -3.705209255218506
    4. '():' → logprob: -3.955209255218506
    5. '   ' → logprob: -4.955209255218506
    6. ' :' → logprob: -7.830209255218506
    7. ':
' → logprob: -8.205209732055664
    8. ')' → logprob: -8.330209732055664
    9. '<|end|>' → logprob: -9.080209732055664
    10. ',' → logprob: -9.455209732055664

Token 155: ' left' (ID: 3561)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.7943099737167358
    2. ' abs' → logprob: -1.4193099737167358
    3. ' return' → logprob: -1.5443099737167358
    4. '   ' → logprob: -2.9193100929260254
    5. 'return' → logprob: -3.2943100929260254
    6. ' prefix' → logprob: -7.794310092926025
    7. '    ' → logprob: -7.919310092926025
    8. 'prefix' → logprob: -8.169309616088867
    9. '(abs' → logprob: -8.544309616088867
    10. ' ' → logprob: -10.044309616088867

Token 156: '_sum' (ID: 29859)
  Prédit: '_weight'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.5796362161636353
    2. '_sum' → logprob: -0.8296362161636353
    3. '=' → logprob: -6.829636096954346
    4. ' =' → logprob: -6.829636096954346
    5. '_' → logprob: -6.954636096954346
    6. '_total' → logprob: -8.454636573791504
    7. '_prefix' → logprob: -8.579636573791504
    8. '_diff' → logprob: -9.454636573791504
    9. 'sum' → logprob: -10.579636573791504
    10. '_difference' → logprob: -10.954636573791504

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048589076846838
    2. '=' → logprob: -3.048588991165161
    3. ' ' → logprob: -13.673588752746582
    4. ',' → logprob: -15.798588752746582
    5. ' =
' → logprob: -16.1735897064209
    6. '   ' → logprob: -16.2985897064209
    7. ')' → logprob: -16.5485897064209
    8. ' ' → logprob: -17.4235897064209
    9. '_' → logprob: -17.5485897064209
    10. '    ' → logprob: -17.7985897064209

Token 158: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.05488701909780502
    2. 'prefix' → logprob: -2.929887056350708
    3. '(prefix' → logprob: -13.179886817932129
    4. ' abs' → logprob: -13.304886817932129
    5. 'abs' → logprob: -14.179886817932129
    6. '_prefix' → logprob: -15.804886817932129
    7. ' ' → logprob: -16.429887771606445
    8. '   ' → logprob: -17.179887771606445
    9. 'Prefix' → logprob: -17.179887771606445
    10. ' ' → logprob: -17.554887771606445

Token 159: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0002989968634210527
    2. 'sum' → logprob: -8.125299453735352
    3. 'Sum' → logprob: -13.750299453735352
    4. 'psum' → logprob: -14.875299453735352
    5. ' sum' → logprob: -15.125299453735352
    6. '_array' → logprob: -15.125299453735352
    7. 'array' → logprob: -15.375299453735352
    8. '	sum' → logprob: -15.875299453735352
    9. '.sum' → logprob: -16.00029945373535
    10. '=sum' → logprob: -16.25029945373535

Token 160: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -2.4987974029500037e-05
    2. 'array' → logprob: -10.625024795532227
    3. 'Array' → logprob: -14.875024795532227
    4. '_ARRAY' → logprob: -16.250024795532227
    5. 'rray' → logprob: -17.250024795532227
    6. '_' → logprob: -17.500024795532227
    7. '_arrays' → logprob: -17.500024795532227
    8. '_ar' → logprob: -18.000024795532227
    9. '_sum' → logprob: -18.250024795532227
    10. '[' → logprob: -18.250024795532227

Token 161: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.3438327843905427e-05
    2. 'split' → logprob: -10.87502384185791
    3. ' [' → logprob: -12.50002384185791
    4. ' split' → logprob: -15.12502384185791
    5. '[
' → logprob: -15.75002384185791
    6. '(split' → logprob: -16.375022888183594
    7. '_split' → logprob: -16.625022888183594
    8. '][' → logprob: -16.875022888183594
    9. '```' → logprob: -17.625022888183594
    10. ' ' → logprob: -17.625022888183594

Token 162: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.4021237802808173e-05
    2. ' split' → logprob: -11.250014305114746
    3. '(split' → logprob: -14.375014305114746
    4. '[' → logprob: -15.625014305114746
    5. 'plit' → logprob: -17.00001335144043
    6. '_split' → logprob: -17.50001335144043
    7. 'spl' → logprob: -18.37501335144043
    8. '.split' → logprob: -18.50001335144043
    9. ' ' → logprob: -18.87501335144043
    10. 's' → logprob: -18.87501335144043

Token 163: '_index' (ID: 7748)
  Prédit: '_index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_index' → logprob: -0.00020520923135336488
    2. 'index' → logprob: -9.625205039978027
    3. '+' → logprob: -10.000205039978027
    4. '_array' → logprob: -11.000205039978027
    5. '_' → logprob: -11.500205039978027
    6. 'dex' → logprob: -11.750205039978027
    7. ']' → logprob: -12.125205039978027
    8. '_idx' → logprob: -12.250205039978027
    9. '[index' → logprob: -12.375205039978027
    10. 'ex' → logprob: -12.500205039978027

Token 164: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00564528675749898
    2. ']
' → logprob: -5.380645275115967
    3. ' ]' → logprob: -7.005645275115967
    4. '+' → logprob: -9.380645751953125
    5. ']

' → logprob: -11.130645751953125
    6. ' ]
' → logprob: -11.630645751953125
    7. ' +' → logprob: -12.755645751953125
    8. ']
' → logprob: -13.255645751953125
    9. ']-' → logprob: -14.130645751953125
    10. '   ' → logprob: -14.255645751953125

Token 165: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015467056073248386
    2. ' ' → logprob: -9.000154495239258
    3. ']' → logprob: -10.500154495239258
    4. '+' → logprob: -13.125154495239258
    5. ' +' → logprob: -15.000154495239258
    6. ' ]' → logprob: -15.125154495239258
    7. ']
' → logprob: -15.250154495239258
    8. '```' → logprob: -15.375154495239258
    9. '
' → logprob: -15.500154495239258
    10. '2' → logprob: -16.312654495239258

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.957014556974173e-05
    2. ' ' → logprob: -9.625069618225098
    3. ']' → logprob: -13.375069618225098
    4. '0' → logprob: -13.875069618225098
    5. '```' → logprob: -15.125069618225098
    6. '+' → logprob: -15.500069618225098
    7. '
' → logprob: -16.75006866455078
    8. '2' → logprob: -17.06256866455078
    9. '<|end|>' → logprob: -17.12506866455078
    10. '１' → logprob: -17.12506866455078

Token 167: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0008858494111336768
    2. ']
' → logprob: -7.375885963439941
    3. ' ]' → logprob: -8.375885963439941
    4. ']-' → logprob: -11.000885963439941
    5. ']

' → logprob: -12.500885963439941
    6. ' -' → logprob: -12.750885963439941
    7. '-' → logprob: -12.875885963439941
    8. ']
' → logprob: -14.000885963439941
    9. ' ]
' → logprob: -14.750885963439941
    10. ')' → logprob: -15.000885963439941

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6317827105522156
    2. '-' → logprob: -2.1317827701568604
    3. '
' → logprob: -2.1317827701568604
    4. 'right' → logprob: -2.6317827701568604
    5. ' right' → logprob: -2.7567827701568604
    6. ' -' → logprob: -3.1317827701568604
    7. '<|end|>' → logprob: -3.8817827701568604
    8. '    
' → logprob: -4.631782531738281
    9. ' ' → logprob: -5.256782531738281
    10. 'total' → logprob: -6.006782531738281

Token 169: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' (adapté à ' right') → logprob: -0.014242835342884064
    2. ' right' → logprob: -4.264242649078369
    3. 'diff' → logprob: -10.264243125915527
    4. 'difference' → logprob: -11.389243125915527
    5. '   ' → logprob: -11.889243125915527
    6. 'rightness' → logprob: -12.139243125915527
    7. '	right' → logprob: -12.389243125915527
    8. '
' → logprob: -12.639243125915527
    9. '```' → logprob: -12.639243125915527
    10. 'abs' → logprob: -12.889243125915527

Token 170: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0053644259460270405
    2. '_' → logprob: -5.505364418029785
    3. '_weight' → logprob: -7.755364418029785
    4. ' _' → logprob: -8.005364418029785
    5. '=' → logprob: -9.255364418029785
    6. '_diff' → logprob: -9.630364418029785
    7. ' =' → logprob: -9.630364418029785
    8. '_s' → logprob: -9.755364418029785
    9. 'sum' → logprob: -9.755364418029785
    10. '_total' → logprob: -10.130364418029785

Token 171: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008633715100586414
    2. '=' → logprob: -4.758633613586426
    3. ' ' → logprob: -11.008633613586426
    4. ' =
' → logprob: -14.133633613586426
    5. ' ' → logprob: -14.883633613586426
    6. ')' → logprob: -15.008633613586426
    7. '```' → logprob: -15.508633613586426
    8. ',' → logprob: -15.508633613586426
    9. '	' → logprob: -16.008634567260742
    10. '_' → logprob: -16.133634567260742

Token 172: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.04355525225400925
    2. 'total' → logprob: -3.16855525970459
    3. ' prefix' → logprob: -7.66855525970459
    4. 'prefix' → logprob: -9.41855525970459
    5. '(total' → logprob: -12.79355525970459
    6. '	total' → logprob: -13.29355525970459
    7. ' ' → logprob: -13.54355525970459
    8. 't' → logprob: -15.16855525970459
    9. ',total' → logprob: -15.54355525970459
    10. ' tot' → logprob: -16.043554306030273

Token 173: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -3.190178904333152e-05
    2. 'weight' → logprob: -10.750031471252441
    3. '-weight' → logprob: -12.000031471252441
    4. '_' → logprob: -13.875031471252441
    5. '_we' → logprob: -14.125031471252441
    6. '_weights' → logprob: -14.125031471252441
    7. '-' → logprob: -14.250031471252441
    8. '_sum' → logprob: -15.250031471252441
    9. '_WEIGHT' → logprob: -15.500031471252441
    10. '-_' → logprob: -15.750031471252441

Token 174: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.038059625774621964
    2. '-' → logprob: -3.288059711456299
    3. ' ' → logprob: -11.28805923461914
    4. ' ' → logprob: -12.78805923461914
    5. '-prefix' → logprob: -13.28805923461914
    6. '-s' → logprob: -15.66305923461914
    7. '-left' → logprob: -15.91305923461914
    8. '-ex' → logprob: -16.03805923461914
    9. ' -
' → logprob: -16.28805923461914
    10. ' –' → logprob: -16.28805923461914

Token 175: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.04923839494585991
    2. ' left' → logprob: -3.049238443374634
    3. 'prefix' → logprob: -7.424238204956055
    4. ' prefix' → logprob: -10.174238204956055
    5. '	left' → logprob: -11.674238204956055
    6. ' ' → logprob: -13.299238204956055
    7. '[left' → logprob: -13.924238204956055
    8. '_left' → logprob: -14.174238204956055
    9. ' lef' → logprob: -14.299238204956055
    10. '(left' → logprob: -14.361738204956055

Token 176: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0013010689290240407
    2. 'sum' → logprob: -6.876301288604736
    3. '_' → logprob: -8.501300811767578
    4. '_split' → logprob: -10.251300811767578
    5. '_s' → logprob: -11.126300811767578
    6. 's' → logprob: -12.751300811767578
    7. '[' → logprob: -13.501300811767578
    8. 'split' → logprob: -13.626300811767578
    9. ')' → logprob: -13.876300811767578
    10. '```' → logprob: -14.251300811767578

Token 177: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032156186643987894
    2. '
' → logprob: -6.628215789794922
    3. '<|end|>' → logprob: -7.128215789794922
    4. '	return' → logprob: -7.753215789794922
    5. ' return' → logprob: -8.003215789794922
    6. 'return' → logprob: -9.253215789794922
    7. ')' → logprob: -9.628215789794922
    8. '    
' → logprob: -10.128215789794922
    9. '  ' → logprob: -10.253215789794922
    10. ' ' → logprob: -10.628215789794922

Token 178: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0027165452484041452
    2. 'return' → logprob: -6.752716541290283
    3. ' return' → logprob: -6.877716541290283
    4. '
' → logprob: -8.002717018127441
    5. '	return' → logprob: -9.002717018127441
    6. '    
' → logprob: -10.377717018127441
    7. '<|end|>' → logprob: -11.377717018127441
    8. ')' → logprob: -12.502717018127441
    9. '       ' → logprob: -13.252717018127441
    10. '   ' → logprob: -13.627717018127441

Token 179: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6989487409591675
    2. 'return' (adapté à ' return') → logprob: -0.6989487409591675
    3. ' return' → logprob: -5.198948860168457
    4. '	return' → logprob: -9.073948860168457
    5. '
' → logprob: -9.573948860168457
    6. 'abs' → logprob: -10.448948860168457
    7. '    
' → logprob: -11.323948860168457
    8. '  ' → logprob: -11.948948860168457
    9. ' ' → logprob: -11.948948860168457
    10. '```' → logprob: -12.323948860168457

Token 180: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.003178071230649948
    2. 'abs' → logprob: -5.753178119659424
    3. '(abs' → logprob: -15.128177642822266
    4. ' ' → logprob: -18.003177642822266
    5. '.abs' → logprob: -18.503177642822266
    6. '   ' → logprob: -18.878177642822266
    7. '_abs' → logprob: -18.878177642822266
    8. ' ' → logprob: -19.003177642822266
    9. ' max' → logprob: -20.378177642822266
    10. '  ' → logprob: -22.128177642822266

Token 181: '(left' (ID: 32958)
  Prédit: '(left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(left' → logprob: -0.1269678920507431
    2. '(' → logprob: -2.1269679069519043
    3. '(right' → logprob: -10.626967430114746
    4. '(
' → logprob: -11.251967430114746
    5. 'left' → logprob: -13.626967430114746
    6. ' (' → logprob: -15.001967430114746
    7. '(

' → logprob: -15.126967430114746
    8. ',left' → logprob: -15.751967430114746
    9. '(lhs' → logprob: -15.876967430114746
    10. '((' → logprob: -16.626968383789062

Token 182: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.000947545631788671
    2. '_' → logprob: -8.375947952270508
    3. 'sum' → logprob: -8.750947952270508
    4. '-' → logprob: -8.750947952270508
    5. ')' → logprob: -9.000947952270508
    6. ' -' → logprob: -9.875947952270508
    7. '_s' → logprob: -10.000947952270508
    8. '_difference' → logprob: -10.000947952270508
    9. 'difference' → logprob: -10.375947952270508
    10. 'Sum' → logprob: -10.875947952270508

Token 183: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02056805044412613
    2. '-' → logprob: -3.8955681324005127
    3. ' ' → logprob: -10.770567893981934
    4. '-right' → logprob: -13.020567893981934
    5. '   ' → logprob: -13.270567893981934
    6. ' ' → logprob: -14.770567893981934
    7. ' -
' → logprob: -14.895567893981934
    8. '  ' → logprob: -16.39556884765625
    9. ')' → logprob: -16.52056884765625
    10. '<|end|>' → logprob: -16.77056884765625

Token 184: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.023245712742209435
    2. ' right' → logprob: -3.7732458114624023
    3. '(right' → logprob: -16.398244857788086
    4. '	right' → logprob: -16.773244857788086
    5. ' ' → logprob: -16.898244857788086
    6. '
' → logprob: -17.773244857788086
    7. '   ' → logprob: -17.898244857788086
    8. ',right' → logprob: -18.273244857788086
    9. '```' → logprob: -18.398244857788086
    10. '[right' → logprob: -18.398244857788086

Token 185: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.1782583391759545e-05
    2. 'sum' → logprob: -10.750031471252441
    3. ')' → logprob: -11.750031471252441
    4. '_split' → logprob: -13.625031471252441
    5. '_index' → logprob: -15.375031471252441
    6. '_' → logprob: -15.375031471252441
    7. 'Sum' → logprob: -15.750031471252441
    8. '_)' → logprob: -15.875031471252441
    9. 'split' → logprob: -16.375032424926758
    10. ')_' → logprob: -16.625032424926758

Token 186: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.226628895296017e-06
    2. ')
' → logprob: -12.000007629394531
    3. ' )' → logprob: -14.125007629394531
    4. '())' → logprob: -16.75000762939453
    5. '()' → logprob: -16.87500762939453
    6. '<|end|>' → logprob: -16.87500762939453
    7. ')return' → logprob: -17.50000762939453
    8. '))' → logprob: -17.62500762939453
    9. '')' → logprob: -18.00000762939453
    10. '),' → logprob: -18.12500762939453

Token 187: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0025774401146918535
    2. '<|end|>' → logprob: -6.127577304840088
    3. '```' → logprob: -9.377577781677246
    4. '#' → logprob: -9.377577781677246
    5. '\' → logprob: -9.877577781677246
    6. ' def' → logprob: -10.252577781677246
    7. 'd' → logprob: -10.627577781677246
    8. '\n' → logprob: -10.877577781677246
    9. 'n' → logprob: -10.877577781677246
    10. '
' → logprob: -11.127577781677246

Token 188: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.31177741289138794
    2. ' main' → logprob: -1.4367773532867432
    3. 'main' → logprob: -4.186777591705322
    4. 'find' → logprob: -4.436777591705322
    5. ' def' → logprob: -6.936777591705322
    6. 'def' → logprob: -7.186777591705322
    7. ' minimize' → logprob: -7.811777591705322
    8. ' split' → logprob: -8.061777114868164
    9. ' solve' → logprob: -8.186777114868164
    10. 'solve' → logprob: -9.061777114868164

Token 189: '_min' (ID: 15950)
  Prédit: '_split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_split' → logprob: -0.8817126750946045
    2. '_min' → logprob: -1.0067126750946045
    3. '_best' → logprob: -2.2567126750946045
    4. '_opt' → logprob: -2.7567126750946045
    5. '_' → logprob: -3.2567126750946045
    6. '_partition' → logprob: -5.631712913513184
    7. '_bal' → logprob: -5.756712913513184
    8. '_max' → logprob: -6.381712913513184
    9. '_balance' → logprob: -7.256712913513184
    10. '_p' → logprob: -7.256712913513184

Token 190: 'imum' (ID: 4556)
  Prédit: '_difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.5405497550964355
    2. '_split' → logprob: -1.9155497550964355
    3. 'imum' → logprob: -2.2905497550964355
    4. '_partition' → logprob: -2.7905497550964355
    5. '_' → logprob: -3.0405497550964355
    6. '_cut' → logprob: -3.1655497550964355
    7. '_diff' → logprob: -4.4155497550964355
    8. '_div' → logprob: -6.5405497550964355
    9. 'imal' → logprob: -6.9155497550964355
    10. '_gap' → logprob: -7.9155497550964355

Token 191: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.07062847912311554
    2. '_split' → logprob: -3.5706284046173096
    3. '_partition' → logprob: -3.6956284046173096
    4. '_' → logprob: -4.820628643035889
    5. '_cut' → logprob: -5.945628643035889
    6. '_diff' → logprob: -6.320628643035889
    7. '_total' → logprob: -6.820628643035889
    8. '_weight' → logprob: -7.945628643035889
    9. '_absolute' → logprob: -8.44562816619873
    10. '_gap' → logprob: -8.82062816619873

Token 192: '(prefix' (ID: 59324)
  Prédit: '(weights'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.4789164066314697
    2. '(prefix' → logprob: -1.1039164066314697
    3. '(' → logprob: -3.2289164066314697
    4. '(n' → logprob: -5.478916168212891
    5. '(size' → logprob: -6.228916168212891
    6. '():' → logprob: -6.478916168212891
    7. '(split' → logprob: -7.478916168212891
    8. ' (' → logprob: -7.853916168212891
    9. '(s' → logprob: -8.60391616821289
    10. '(weight' → logprob: -8.85391616821289

Token 193: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.27060073614120483
    2. '_split' → logprob: -1.5206007957458496
    3. '_' → logprob: -4.02060079574585
    4. '_index' → logprob: -7.89560079574585
    5. ' _' → logprob: -9.520600318908691
    6. '_s' → logprob: -10.770600318908691
    7. 'split' → logprob: -11.020600318908691
    8. 'def' → logprob: -11.395600318908691
    9. '_array' → logprob: -11.645600318908691
    10. '_cut' → logprob: -11.770600318908691

Token 194: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.005384587682783604
    2. '_index' → logprob: -5.25538444519043
    3. '_arr' → logprob: -9.75538444519043
    4. '_' → logprob: -10.00538444519043
    5. '_split' → logprob: -11.13038444519043
    6. ')_' → logprob: -11.50538444519043
    7. ')' → logprob: -11.88038444519043
    8. 'array' → logprob: -12.63038444519043
    9. '_difference' → logprob: -13.00538444519043
    10. '_list' → logprob: -13.50538444519043

Token 195: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0019666971638798714
    2. ',n' → logprob: -6.25196647644043
    3. ',size' → logprob: -10.50196647644043
    4. ',p' → logprob: -13.00196647644043
    5. ',total' → logprob: -13.00196647644043
    6. ' ,' → logprob: -13.25196647644043
    7. ',
' → logprob: -13.25196647644043
    8. ',num' → logprob: -14.62696647644043
    9. '(n' → logprob: -14.75196647644043
    10. '):' → logprob: -14.87696647644043

Token 196: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.18138384819030762
    2. ' n' → logprob: -2.4313838481903076
    3. 'total' → logprob: -2.8063838481903076
    4. ' total' → logprob: -4.056384086608887
    5. '   ' → logprob: -9.556384086608887
    6. 'size' → logprob: -10.556384086608887
    7. 'weights' → logprob: -10.806384086608887
    8. ')' → logprob: -11.181384086608887
    9. '```' → logprob: -11.431384086608887
    10. ' ' → logprob: -11.556384086608887

Token 197: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6326954364776611
    2. ',' → logprob: -0.7576954364776611
    3. '):
' → logprob: -10.132695198059082
    4. ':' → logprob: -11.257695198059082
    5. ')' → logprob: -11.507695198059082
    6. '   ' → logprob: -11.757695198059082
    7. ',index' → logprob: -11.757695198059082
    8. ' ,' → logprob: -12.007695198059082
    9. ' ):' → logprob: -13.007695198059082
    10. ',n' → logprob: -13.632695198059082

Token 198: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013269031187519431
    2. 'min' → logprob: -6.876327037811279
    3. ' min' → logprob: -8.376326560974121
    4. '```' → logprob: -10.001326560974121
    5. 'minimum' → logprob: -12.001326560974121
    6. '	min' → logprob: -12.251326560974121
    7. ' minimum' → logprob: -12.501326560974121
    8. ' minimal' → logprob: -13.251326560974121
    9. '_min' → logprob: -14.251326560974121
    10. 'minimal' → logprob: -14.626326560974121

Token 199: ' total' (ID: 3609)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.16752322018146515
    2. ' min' → logprob: -1.9175232648849487
    3. '   ' → logprob: -5.042523384094238
    4. 'minimum' → logprob: -7.542523384094238
    5. ' minimum' → logprob: -8.542523384094238
    6. '
' → logprob: -10.292523384094238
    7. '```' → logprob: -10.417523384094238
    8. ' minimal' → logprob: -11.792523384094238
    9. 'minimal' → logprob: -11.792523384094238
    10. '	min' → logprob: -12.292523384094238

Token 200: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.00021390743495430797
    2. '_' → logprob: -8.750213623046875
    3. '_weights' → logprob: -10.125213623046875
    4. 'weight' → logprob: -12.250213623046875
    5. '_w' → logprob: -12.500213623046875
    6. '=' → logprob: -13.250213623046875
    7. '_total' → logprob: -13.750213623046875
    8. '_we' → logprob: -13.875213623046875
    9. ' =' → logprob: -14.250213623046875
    10. '=_' → logprob: -14.875213623046875

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47407805919647217
    2. ' =' → logprob: -0.9740780591964722
    3. ')' → logprob: -15.349078178405762
    4. ',' → logprob: -15.474078178405762
    5. '   ' → logprob: -16.349077224731445
    6. ' ' → logprob: -16.474077224731445
    7. '=int' → logprob: -16.849077224731445
    8. '=create' → logprob: -16.974077224731445
    9. '＝' → logprob: -17.099077224731445
    10. ':' → logprob: -17.349077224731445

Token 202: ' calculate' (ID: 17950)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.32571446895599365
    2. 'calculate' → logprob: -1.9507144689559937
    3. ' prefix' → logprob: -2.075714588165283
    4. ' calculate' → logprob: -4.575714588165283
    5. '   ' → logprob: -10.700714111328125
    6. '(prefix' → logprob: -10.950714111328125
    7. 'compute' → logprob: -12.950714111328125
    8. 'calc' → logprob: -13.450714111328125
    9. 'Calculate' → logprob: -13.825714111328125
    10. 'cal' → logprob: -14.075714111328125

Token 203: '_total' (ID: 23814)
  Prédit: '_prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.777387797832489
    2. '_total' → logprob: -1.1523878574371338
    3. '(prefix' → logprob: -1.7773878574371338
    4. 'prefix' → logprob: -3.652387857437134
    5. '_' → logprob: -4.152387619018555
    6. '_weight' → logprob: -4.402387619018555
    7. 'total' → logprob: -6.902387619018555
    8. ' prefix' → logprob: -8.652387619018555
    9. '_(' → logprob: -8.652387619018555
    10. '```' → logprob: -10.277387619018555

Token 204: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.0009293294278904796
    2. 'weight' → logprob: -7.000929355621338
    3. '_difference' → logprob: -11.75092887878418
    4. 'difference' → logprob: -11.87592887878418
    5. '_weights' → logprob: -14.37592887878418
    6. '_we' → logprob: -14.50092887878418
    7. ' weight' → logprob: -14.75092887878418
    8. '_' → logprob: -14.75092887878418
    9. '_WEIGHT' → logprob: -15.62592887878418
    10. 'Weight' → logprob: -15.75092887878418

Token 205: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -14.500000953674316
    3. '(pref' → logprob: -16.625
    4. 'prefix' → logprob: -18.125
    5. ' (' → logprob: -19.75
    6. '(pre' → logprob: -20.625
    7. ' prefix' → logprob: -21.0
    8. '(predicate' → logprob: -21.375
    9. '(
' → logprob: -21.5
    10. '(paren' → logprob: -22.625

Token 206: '_sum' (ID: 29859)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.13143962621688843
    2. '_sum' → logprob: -2.131439685821533
    3. 'sum' → logprob: -5.881439685821533
    4. 'array' → logprob: -6.381439685821533
    5. 'Array' → logprob: -12.631439208984375
    6. 'rray' → logprob: -13.381439208984375
    7. '_arrays' → logprob: -13.381439208984375
    8. 'psum' → logprob: -13.506439208984375
    9. '$array' → logprob: -13.631439208984375
    10. '```' → logprob: -13.756439208984375

Token 207: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00043472214019857347
    2. 'array' → logprob: -7.750434875488281
    3. 'Array' → logprob: -13.250434875488281
    4. 'rray' → logprob: -14.375434875488281
    5. '_' → logprob: -14.875434875488281
    6. '_ARRAY' → logprob: -15.125434875488281
    7. ',' → logprob: -15.500434875488281
    8. '```' → logprob: -15.625434875488281
    9. '_,' → logprob: -15.875434875488281
    10. '   ' → logprob: -16.12543487548828

Token 208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036088628694415092
    2. ',n' → logprob: -5.628608703613281
    3. ',
' → logprob: -12.503608703613281
    4. ' ,' → logprob: -12.753608703613281
    5. ')' → logprob: -13.503608703613281
    6. 'n' → logprob: -15.128608703613281
    7. ',

' → logprob: -16.25360870361328
    8. '(n' → logprob: -16.25360870361328
    9. ',
' → logprob: -17.12860870361328
    10. ' n' → logprob: -17.25360870361328

Token 209: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889033854007721
    2. ' n' → logprob: -2.578890323638916
    3. ')n' → logprob: -15.078890800476074
    4. '	n' → logprob: -15.328890800476074
    5. '   ' → logprob: -17.828889846801758
    6. ')' → logprob: -17.953889846801758
    7. '_n' → logprob: -18.203889846801758
    8. ' н' → logprob: -19.328889846801758
    9. '```' → logprob: -19.453889846801758
    10. '$n' → logprob: -19.828889846801758

Token 210: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006360700353980064
    2. ')
' → logprob: -7.375636100769043
    3. '   ' → logprob: -12.625636100769043
    4. ' )' → logprob: -12.750636100769043
    5. ')
' → logprob: -13.500636100769043
    6. ',' → logprob: -14.125636100769043
    7. ')

' → logprob: -15.625636100769043
    8. ')return' → logprob: -15.750636100769043
    9. '),' → logprob: -16.125635147094727
    10. '))' → logprob: -16.625635147094727

Token 211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019912676885724068
    2. ' min' → logprob: -4.0199127197265625
    3. 'min' → logprob: -6.6449127197265625
    4. ' minimal' → logprob: -8.894912719726562
    5. '	min' → logprob: -9.144912719726562
    6. '```' → logprob: -9.144912719726562
    7. ' minimum' → logprob: -10.019912719726562
    8. ' result' → logprob: -10.894912719726562
    9. '    ' → logprob: -11.144912719726562
    10. '_min' → logprob: -12.269912719726562

Token 212: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.0032244143076241016
    2. ' min' → logprob: -6.0032243728637695
    3. '   ' → logprob: -7.6282243728637695
    4. 'minimum' (adapté à ' minimum') → logprob: -8.37822437286377
    5. 'minimal' → logprob: -10.87822437286377
    6. 'result' → logprob: -12.87822437286377
    7. '
' → logprob: -13.12822437286377
    8. '```' → logprob: -13.12822437286377
    9. ' minimum' → logprob: -13.62822437286377
    10. 'answer' → logprob: -13.87822437286377

Token 213: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.002066041575744748
    2. '_diff' → logprob: -6.877066135406494
    3. '_' → logprob: -7.002066135406494
    4. 'difference' → logprob: -9.252065658569336
    5. '_value' → logprob: -11.377065658569336
    6. '_distance' → logprob: -11.877065658569336
    7. '_d' → logprob: -13.127065658569336
    8. ' difference' → logprob: -13.752065658569336
    9. ' =' → logprob: -14.252065658569336
    10. '_index' → logprob: -14.252065658569336

Token 214: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003811025235336274
    2. '=' → logprob: -7.875380992889404
    3. ' ' → logprob: -14.500381469726562
    4. ',' → logprob: -14.625381469726562
    5. ' =
' → logprob: -16.750381469726562
    6. ' ' → logprob: -18.625381469726562
    7. '   ' → logprob: -18.750381469726562
    8. '  ' → logprob: -18.875381469726562
    9. ' ,' → logprob: -18.875381469726562
    10. 's' → logprob: -19.125381469726562

Token 215: ' ' (ID: 220)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0024862384889274836
    2. 'sys' → logprob: -6.627486228942871
    3. '10' → logprob: -7.252486228942871
    4. ' float' → logprob: -7.752486228942871
    5. 'total' → logprob: -11.127486228942871
    6. ' sys' → logprob: -12.877486228942871
    7. '1' → logprob: -14.002486228942871
    8. 'abs' → logprob: -14.377486228942871
    9. 'max' → logprob: -14.752486228942871
    10. 'prefix' → logprob: -14.752486228942871

Token 216: '10' (ID: 702)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.0012572570703923702
    2. '10' → logprob: -6.876257419586182
    3. 'sys' → logprob: -9.251256942749023
    4. 'total' → logprob: -9.251256942749023
    5. 'abs' → logprob: -11.376256942749023
    6. 'prefix' → logprob: -11.376256942749023
    7. ' float' → logprob: -12.376256942749023
    8. 'calculate' → logprob: -13.001256942749023
    9. '1' → logprob: -13.626256942749023
    10. 'None' → logprob: -14.251256942749023

Token 217: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.03641527518630028
    2. '6' → logprob: -3.7864153385162354
    3. '7' → logprob: -4.411415100097656
    4. '8' → logprob: -7.286415100097656
    5. '**' → logprob: -8.661415100097656
    6. '10' → logprob: -10.536415100097656
    7. '09' → logprob: -10.661415100097656
    8. '0' → logprob: -11.286415100097656
    9. '```' → logprob: -11.911415100097656
    10. '5' → logprob: -12.286415100097656

Token 218: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '9' → logprob: -0.0015098588773980737
    2. '15' → logprob: -7.126509666442871
    3. '10' → logprob: -7.501509666442871
    4. '18' → logprob: -8.876509666442871
    5. '7' → logprob: -11.626509666442871
    6. '12' → logprob: -12.626509666442871
    7. '6' → logprob: -14.626509666442871
    8. '8' → logprob: -15.501509666442871
    9. '16' → logprob: -16.126510620117188
    10. '20' → logprob: -16.751510620117188

Token 219: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002288352930918336
    2. '10' → logprob: -6.502288341522217
    3. '15' → logprob: -7.627288341522217
    4. '18' → logprob: -8.377288818359375
    5. '7' → logprob: -10.002288818359375
    6. '12' → logprob: -11.252288818359375
    7. '6' → logprob: -12.002288818359375
    8. '8' → logprob: -12.877288818359375
    9. '20' → logprob: -14.252288818359375
    10. '16' → logprob: -15.002288818359375

Token 220: ' +' (ID: 659)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30236634612083435
    2. '
' → logprob: -1.4273663759231567
    3. '    
' → logprob: -4.427366256713867
    4. ' for' → logprob: -5.302366256713867
    5. '<|end|>' → logprob: -6.427366256713867
    6. 'for' → logprob: -6.927366256713867
    7. ',' → logprob: -7.552366256713867
    8. '	
' → logprob: -8.552366256713867
    9. '<|end|>' → logprob: -8.802366256713867
    10. 'def' → logprob: -9.052366256713867

Token 221: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.030910227447748184
    2. '1' → logprob: -3.5309102535247803
    3. '10' → logprob: -6.780910015106201
    4. '9' → logprob: -11.15591049194336
    5. '8' → logprob: -12.03091049194336
    6. ' ' → logprob: -13.15591049194336
    7. '6' → logprob: -13.53091049194336
    8. '0' → logprob: -16.53091049194336
    9. '```' → logprob: -16.78091049194336
    10. '   ' → logprob: -17.40591049194336

Token 222: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.0008002190152183175
    2. '10' → logprob: -8.125800132751465
    3. '8' → logprob: -8.250800132751465
    4. '1' → logprob: -8.500800132751465
    5. '6' → logprob: -10.625800132751465
    6. '9' → logprob: -11.125800132751465
    7. '```' → logprob: -15.500800132751465
    8. '5' → logprob: -16.00080108642578
    9. '+' → logprob: -16.81330108642578
    10. ' ' → logprob: -16.87580108642578

Token 223: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10487240552902222
    2. '<|end|>' → logprob: -3.354872465133667
    3. '   ' → logprob: -3.479872465133667
    4. ' for' → logprob: -4.229872226715088
    5. '    
' → logprob: -4.479872226715088
    6. 'for' → logprob: -6.229872226715088
    7. '  
' → logprob: -6.604872226715088
    8. '<|end|>' → logprob: -7.104872226715088
    9. ' 
' → logprob: -7.229872226715088
    10. ',' → logprob: -7.354872226715088

Token 224: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004229766316711903
    2. '
' → logprob: -6.629229545593262
    3. ' for' → logprob: -6.754229545593262
    4. '	for' → logprob: -6.879229545593262
    5. '    
' → logprob: -8.004229545593262
    6. '<|end|>' → logprob: -8.504229545593262
    7. 'for' → logprob: -9.129229545593262
    8. '	
' → logprob: -11.254229545593262
    9. '\n' → logprob: -11.379229545593262
    10. '\t' → logprob: -11.754229545593262

Token 225: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.042105820029973984
    2. ' for' → logprob: -3.2921059131622314
    3. '   ' → logprob: -5.542105674743652
    4. '
' → logprob: -9.917105674743652
    5. 'minimum' → logprob: -10.167105674743652
    6. 'min' → logprob: -10.292105674743652
    7. '```' → logprob: -12.542105674743652
    8. ' ' → logprob: -12.667105674743652
    9. '	for' → logprob: -12.917105674743652
    10. ' minimum' → logprob: -13.292105674743652

Token 226: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.47485774755477905
    2. ' i' → logprob: -0.974857747554779
    3. ' split' → logprob: -7.599857807159424
    4. 'split' → logprob: -8.349857330322266
    5. ' ' → logprob: -10.724857330322266
    6. '   ' → logprob: -11.974857330322266
    7. '	i' → logprob: -12.224857330322266
    8. ' index' → logprob: -12.349857330322266
    9. 'index' → logprob: -13.099857330322266
    10. '```' → logprob: -13.349857330322266

Token 227: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005950364284217358
    2. ' ' → logprob: -5.380950450897217
    3. 'in' → logprob: -6.630950450897217
    4. ' i' → logprob: -12.505949974060059
    5. ',' → logprob: -13.505949974060059
    6. 'range' → logprob: -13.880949974060059
    7. 'space' → logprob: -14.005949974060059
    8. '1' → logprob: -14.630949974060059
    9. ' ' → logprob: -14.880949974060059
    10. '  ' → logprob: -14.880949974060059

Token 228: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.38687485456466675
    2. ' range' → logprob: -1.1368749141693115
    3. '(range' → logprob: -12.76187515258789
    4. '	range' → logprob: -14.63687515258789
    5. ' ' → logprob: -15.01187515258789
    6. '   ' → logprob: -16.13687515258789
    7. ' xrange' → logprob: -17.13687515258789
    8. ')' → logprob: -18.26187515258789
    9. '
' → logprob: -18.26187515258789
    10. '```' → logprob: -18.26187515258789

Token 229: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06199278309941292
    2. '(' → logprob: -2.811992883682251
    3. '1' → logprob: -11.061992645263672
    4. 'n' → logprob: -12.311992645263672
    5. '(
' → logprob: -12.936992645263672
    6. ' (' → logprob: -13.061992645263672
    7. ' n' → logprob: -15.186992645263672
    8. ' ' → logprob: -16.686992645263672
    9. '   ' → logprob: -17.061992645263672
    10. '(

' → logprob: -18.061992645263672

Token 230: '):
' (ID: 1883)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06605851650238037
    2. '-' → logprob: -2.81605863571167
    3. '):' → logprob: -5.56605863571167
    4. '):
' → logprob: -8.816058158874512
    5. ' ):' → logprob: -9.816058158874512
    6. '   ' → logprob: -10.691058158874512
    7. ' ' → logprob: -11.066058158874512
    8. ')' → logprob: -11.941058158874512
    9. '1' → logprob: -12.191058158874512
    10. ' ):
' → logprob: -13.441058158874512

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03919050097465515
    2. ' ' → logprob: -4.164190292358398
    3. '   ' → logprob: -4.539190292358398
    4. '    ' → logprob: -5.164190292358398
    5. '<|end|>' → logprob: -6.164190292358398
    6. ' if' → logprob: -6.789190292358398
    7. '        
' → logprob: -7.414190292358398
    8. ' 
' → logprob: -7.414190292358398
    9. ',' → logprob: -7.664190292358398
    10. '    
' → logprob: -8.164190292358398

Token 232: ' difference' (ID: 9809)
  Prédit: ' difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' difference' → logprob: -0.7678723931312561
    2. ' diff' → logprob: -1.1428723335266113
    3. ' current' → logprob: -2.2678723335266113
    4. 'difference' (adapté à ' difference') → logprob: -2.5178723335266113
    5. 'diff' → logprob: -3.8928723335266113
    6. '       ' → logprob: -5.142872333526611
    7. '   ' → logprob: -5.642872333526611
    8. 'current' → logprob: -6.017872333526611
    9. ' minimum' → logprob: -8.14287281036377
    10. ' if' → logprob: -9.51787281036377

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01815333589911461
    2. '=' → logprob: -4.018153190612793
    3. '   ' → logprob: -13.518153190612793
    4. ' ' → logprob: -13.893153190612793
    5. '    ' → logprob: -15.143153190612793
    6. '	' → logprob: -15.143153190612793
    7. ' ' → logprob: -15.643153190612793
    8. ' =
' → logprob: -15.768153190612793
    9. ')' → logprob: -16.76815414428711
    10. '  ' → logprob: -17.76815414428711

Token 234: ' compute' (ID: 23864)
  Prédit: ' compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' compute' → logprob: -0.1269291490316391
    2. 'compute' → logprob: -2.1269290447235107
    3. ' calculate' → logprob: -14.62692928314209
    4. '.compute' → logprob: -15.25192928314209
    5. 'calculate' → logprob: -15.37692928314209
    6. '_compute' → logprob: -16.251928329467773
    7. ' ' → logprob: -17.001928329467773
    8. '   ' → logprob: -17.751928329467773
    9. ' computer' → logprob: -18.126928329467773
    10. '(com' → logprob: -18.501928329467773

Token 235: '_absolute' (ID: 131930)
  Prédit: '_absolute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_absolute' → logprob: -3.214019307051785e-05
    2. '_difference' → logprob: -10.875032424926758
    3. 'absolute' → logprob: -11.750032424926758
    4. '_' → logprob: -13.250032424926758
    5. '_total' → logprob: -14.000032424926758
    6. '(i' → logprob: -14.250032424926758
    7. 'Absolute' → logprob: -14.375032424926758
    8. '_abs' → logprob: -14.500032424926758
    9. '_average' → logprob: -15.250032424926758
    10. ' absolute' → logprob: -16.125032424926758

Token 236: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00026407750556245446
    2. 'difference' → logprob: -8.250264167785645
    3. '_' → logprob: -13.500264167785645
    4. ' difference' → logprob: -14.625264167785645
    5. 'ifference' → logprob: -14.875264167785645
    6. '(' → logprob: -16.125263214111328
    7. '```' → logprob: -16.250263214111328
    8. 'Difference' → logprob: -16.250263214111328
    9. '_distance' → logprob: -16.500263214111328
    10. 'd' → logprob: -16.625263214111328

Token 237: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -9.73446003627032e-05
    2. '(' → logprob: -9.250097274780273
    3. '(
' → logprob: -14.250097274780273
    4. 'prefix' → logprob: -15.375097274780273
    5. '(pref' → logprob: -15.375097274780273
    6. '(pre' → logprob: -16.750097274780273
    7. ' prefix' → logprob: -16.875097274780273
    8. ' (' → logprob: -17.500097274780273
    9. '(

' → logprob: -18.500097274780273
    10. '(paren' → logprob: -19.125097274780273

Token 238: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.31711557507514954
    2. '_array' → logprob: -1.3171155452728271
    3. 'array' → logprob: -5.817115783691406
    4. 'sum' → logprob: -7.067115783691406
    5. '```' → logprob: -12.192115783691406
    6. '
' → logprob: -12.442115783691406
    7. 'Array' → logprob: -13.692115783691406
    8. '_' → logprob: -13.817115783691406
    9. 'Sum' → logprob: -14.317115783691406
    10. '`' → logprob: -14.442115783691406

Token 239: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0007145775598473847
    2. 'array' → logprob: -7.2507147789001465
    3. 'Array' → logprob: -13.750714302062988
    4. '_ARRAY' → logprob: -14.125714302062988
    5. '_' → logprob: -14.500714302062988
    6. 'rray' → logprob: -14.750714302062988
    7. '
' → logprob: -15.000714302062988
    8. '```' → logprob: -15.250714302062988
    9. ',' → logprob: -15.500714302062988
    10. '_arrays' → logprob: -15.750714302062988

Token 240: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0030991658568382263
    2. ',p' → logprob: -6.003098964691162
    3. ',i' → logprob: -7.503098964691162
    4. ' ,' → logprob: -10.62809944152832
    5. ',n' → logprob: -10.75309944152832
    6. 'prefix' → logprob: -11.37809944152832
    7. ',array' → logprob: -12.12809944152832
    8. ',index' → logprob: -12.62809944152832
    9. '(prefix' → logprob: -13.50309944152832
    10. ' prefix' → logprob: -13.87809944152832

Token 241: ' total' (ID: 3609)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5028203725814819
    2. ' n' → logprob: -1.002820372581482
    3. 'i' → logprob: -3.8778204917907715
    4. ' i' → logprob: -5.0028204917907715
    5. ' ' → logprob: -7.7528204917907715
    6. 'minimum' → logprob: -9.127820014953613
    7. '10' → logprob: -9.252820014953613
    8. ' minimum' → logprob: -9.502820014953613
    9. 'total' → logprob: -10.002820014953613
    10. ' total' → logprob: -10.377820014953613

Token 242: '_weight' (ID: 34711)
  Prédit: '_weight'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_weight' → logprob: -0.003034636378288269
    2. '_sum' → logprob: -6.378034591674805
    3. 'weight' → logprob: -7.378034591674805
    4. '_difference' → logprob: -8.503034591674805
    5. '_weights' → logprob: -8.878034591674805
    6. 'sum' → logprob: -9.878034591674805
    7. '[i' → logprob: -10.003034591674805
    8. '_we' → logprob: -10.128034591674805
    9. 'i' → logprob: -10.878034591674805
    10. '_index' → logprob: -11.003034591674805

Token 243: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0036890320479869843
    2. ',i' → logprob: -5.628688812255859
    3. ' ,' → logprob: -9.37868881225586
    4. '   ' → logprob: -13.00368881225586
    5. ')' → logprob: -14.62868881225586
    6. '       ' → logprob: -15.12868881225586
    7. '	' → logprob: -15.25368881225586
    8. ' i' → logprob: -15.75368881225586
    9. '‌,' → logprob: -15.87868881225586
    10. ',
' → logprob: -15.87868881225586

Token 244: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.04858805239200592
    2. ' i' → logprob: -3.0485880374908447
    3. ')i' → logprob: -15.298587799072266
    4. ')' → logprob: -15.923587799072266
    5. '	i' → logprob: -16.048587799072266
    6. ' ' → logprob: -16.423587799072266
    7. '
' → logprob: -17.298587799072266
    8. '   ' → logprob: -17.423587799072266
    9. '```' → logprob: -17.798587799072266
    10. '[i' → logprob: -18.173587799072266

Token 245: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18450145423412323
    2. ')
' → logprob: -1.8095014095306396
    3. '       ' → logprob: -5.434501647949219
    4. ')
' → logprob: -8.934501647949219
    5. '<|end|>' → logprob: -9.309501647949219
    6. ' )' → logprob: -10.059501647949219
    7. '
' → logprob: -10.184501647949219
    8. ' )
' → logprob: -10.309501647949219
    9. '   ' → logprob: -11.309501647949219
    10. '):
' → logprob: -12.309501647949219

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008193138986825943
    2. '<|end|>' → logprob: -5.008193016052246
    3. ' if' → logprob: -7.633193016052246
    4. '   ' → logprob: -8.008193016052246
    5. ' ' → logprob: -8.133193016052246
    6. '
' → logprob: -9.383193016052246
    7. '        
' → logprob: -9.883193016052246
    8. ')' → logprob: -9.883193016052246
    9. ',' → logprob: -10.133193016052246
    10. '    ' → logprob: -10.508193016052246

Token 247: ' minimum' (ID: 11085)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7029134035110474
    2. 'if' → logprob: -1.0779134035110474
    3. '       ' → logprob: -1.8279134035110474
    4. '   ' → logprob: -5.702913284301758
    5. 'minimum' (adapté à ' minimum') → logprob: -8.202913284301758
    6. ' minimum' → logprob: -9.827913284301758
    7. '
' → logprob: -9.952913284301758
    8. '	if' → logprob: -9.952913284301758
    9. '           ' → logprob: -11.202913284301758
    10. ' ' → logprob: -11.577913284301758

Token 248: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00015050210640765727
    2. 'difference' → logprob: -9.375150680541992
    3. '_' → logprob: -9.875150680541992
    4. '_diff' → logprob: -11.750150680541992
    5. 'ifference' → logprob: -13.625150680541992
    6. '_d' → logprob: -13.625150680541992
    7. ' difference' → logprob: -14.000150680541992
    8. '_distance' → logprob: -14.250150680541992
    9. 'if' → logprob: -14.750150680541992
    10. '_min' → logprob: -15.250150680541992

Token 249: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142152905464172
    2. '=' → logprob: -1.7014214992523193
    3. '=min' → logprob: -12.326421737670898
    4. '   ' → logprob: -12.826421737670898
    5. '>' → logprob: -14.951421737670898
    6. ' ' → logprob: -15.326421737670898
    7. '	' → logprob: -16.0764217376709
    8. '    ' → logprob: -16.0764217376709
    9. ',' → logprob: -16.7014217376709
    10. '```' → logprob: -17.2014217376709

Token 250: ' update' (ID: 4027)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.4740828275680542
    2. 'min' → logprob: -0.9740828275680542
    3. '	min' → logprob: -12.349082946777344
    4. 'difference' → logprob: -14.474082946777344
    5. ' difference' → logprob: -14.724082946777344
    6. '(min' → logprob: -15.599082946777344
    7. '[min' → logprob: -16.599082946777344
    8. '   ' → logprob: -17.099082946777344
    9. '=min' → logprob: -17.224082946777344
    10. ' ' → logprob: -17.974082946777344

Token 251: '_min' (ID: 15950)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3010765314102173
    2. ' min' → logprob: -2.1760764122009277
    3. '_min' → logprob: -2.6760764122009277
    4. '(min' → logprob: -3.4260764122009277
    5. 'minimum' → logprob: -3.5510764122009277
    6. '_difference' → logprob: -4.801076412200928
    7. ' minimum' → logprob: -6.176076412200928
    8. '_' → logprob: -6.551076412200928
    9. 'difference' → logprob: -6.801076412200928
    10. '   ' → logprob: -6.926076412200928

Token 252: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.006816481705754995
    2. 'difference' → logprob: -5.881816387176514
    3. 'um' → logprob: -6.006816387176514
    4. '_difference' → logprob: -6.756816387176514
    5. 'im' → logprob: -8.631816864013672
    6. 'ium' → logprob: -10.381816864013672
    7. 'mum' → logprob: -10.506816864013672
    8. '(' → logprob: -10.631816864013672
    9. '```' → logprob: -10.881816864013672
    10. '(min' → logprob: -11.131816864013672

Token 253: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.925227165222168
    2. 'difference' → logprob: -1.050227165222168
    3. '_difference' → logprob: -1.425227165222168
    4. 'minimum' → logprob: -5.300227165222168
    5. '(' → logprob: -5.425227165222168
    6. 'min' → logprob: -5.800227165222168
    7. ' difference' → logprob: -8.550227165222168
    8. '(
' → logprob: -8.675227165222168
    9. '(m' → logprob: -9.050227165222168
    10. '(d' → logprob: -9.550227165222168

Token 254: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.0019091233843937516
    2. '_difference' → logprob: -6.501909255981445
    3. 'difference' → logprob: -8.251909255981445
    4. 'um' → logprob: -10.001909255981445
    5. 'im' → logprob: -10.126909255981445
    6. '(min' → logprob: -10.751909255981445
    7. 'ium' → logprob: -11.751909255981445
    8. 'minimum' → logprob: -12.001909255981445
    9. 'ute' → logprob: -12.376909255981445
    10. 'inum' → logprob: -12.501909255981445

Token 255: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.04467111825942993
    2. 'difference' → logprob: -3.294671058654785
    3. 'ifference' → logprob: -5.044671058654785
    4. 'minimum' → logprob: -9.169671058654785
    5. 'imum' → logprob: -10.669671058654785
    6. ' difference' → logprob: -11.294671058654785
    7. 'if' → logprob: -12.669671058654785
    8. '(min' → logprob: -12.794671058654785
    9. '
' → logprob: -12.919671058654785
    10. 'min' → logprob: -13.044671058654785

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04866264760494232
    2. ',d' → logprob: -3.0486626625061035
    3. '(d' → logprob: -10.173662185668945
    4. ' ,' → logprob: -10.423662185668945
    5. '(' → logprob: -12.673662185668945
    6. 'difference' → logprob: -13.048662185668945
    7. ',
' → logprob: -14.423662185668945
    8. '   ' → logprob: -14.423662185668945
    9. ',min' → logprob: -14.548662185668945
    10. 'd' → logprob: -15.673662185668945

Token 257: ' difference' (ID: 9809)
  Prédit: 'difference'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'difference' → logprob: -0.3868732452392578
    2. ' difference' → logprob: -1.1368732452392578
    3. '   ' → logprob: -14.136873245239258
    4. '_difference' → logprob: -14.886873245239258
    5. 'd' → logprob: -15.261873245239258
    6. '       ' → logprob: -15.761873245239258
    7. ' ' → logprob: -15.761873245239258
    8. 'dif' → logprob: -15.886873245239258
    9. 'diff' → logprob: -15.886873245239258
    10. '```' → logprob: -16.761873245239258

Token 258: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.045524705201387405
    2. '<|end|>' → logprob: -3.1705245971679688
    3. ')
' → logprob: -7.420524597167969
    4. '   ' → logprob: -7.545524597167969
    5. ',' → logprob: -7.545524597167969
    6. ' )' → logprob: -7.920524597167969
    7. '       ' → logprob: -8.670524597167969
    8. '<|end|>' → logprob: -8.795524597167969
    9. ')return' → logprob: -9.920524597167969
    10. ' ' → logprob: -10.170524597167969

Token 259: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15898913145065308
    2. '<|end|>' → logprob: -2.033989191055298
    3. '    
' → logprob: -5.158988952636719
    4. ' ' → logprob: -6.533988952636719
    5. '       ' → logprob: -6.533988952636719
    6. ' 
' → logprob: -6.658988952636719
    7. '\' → logprob: -6.658988952636719
    8. ')' → logprob: -6.658988952636719
    9. '    ' → logprob: -7.033988952636719
    10. '\n' → logprob: -7.533988952636719

Token 260: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.044796962291002274
    2. '    
' → logprob: -4.044796943664551
    3. '<|end|>' → logprob: -5.169796943664551
    4. ' ' → logprob: -5.419796943664551
    5. ' 
' → logprob: -5.544796943664551
    6. 'def' → logprob: -5.919796943664551
    7. '       ' → logprob: -5.919796943664551
    8. '    ' → logprob: -6.419796943664551
    9. '  
' → logprob: -7.044796943664551
    10. '	return' → logprob: -7.169796943664551

Token 261: ' minimum' (ID: 11085)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.5759687423706055
    2. ' minimum' → logprob: -0.8259687423706055
    3. 'min' → logprob: -10.450968742370605
    4. ' min' → logprob: -15.575968742370605
    5. '.minimum' → logprob: -16.200969696044922
    6. 'minimal' → logprob: -17.075969696044922
    7. ' minimal' → logprob: -17.700969696044922
    8. 'Minimum' → logprob: -18.200969696044922
    9. '	min' → logprob: -19.075969696044922
    10. '(min' → logprob: -19.200969696044922

Token 262: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -8.470901229884475e-05
    2. '_' → logprob: -9.50008487701416
    3. 'difference' → logprob: -11.87508487701416
    4. 'imum' → logprob: -14.50008487701416
    5. '_vari' → logprob: -14.50008487701416
    6. '_diff' → logprob: -15.00008487701416
    7. '_d' → logprob: -15.12508487701416
    8. ' _' → logprob: -15.37508487701416
    9. 't' → logprob: -16.000083923339844
    10. '_value' → logprob: -16.125083923339844

Token 263: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 264: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.031051337718963623
    2. '
' → logprob: -4.531051158905029
    3. '<|end|>' → logprob: -4.656051158905029
    4. '_' → logprob: -5.281051158905029
    5. '(' → logprob: -6.406051158905029
    6. '(
' → logprob: -6.531051158905029
    7. '()' → logprob: -7.281051158905029
    8. ' 
' → logprob: -8.031051635742188
    9. '\' → logprob: -8.281051635742188
    10. '```' → logprob: -8.781051635742188

Token 265: ' update' (ID: 4027)
  Prédit: 'update'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'update' → logprob: -0.10020699352025986
    2. ' update' → logprob: -2.3502070903778076
    3. ' ' → logprob: -15.475207328796387
    4. '_update' → logprob: -16.47520637512207
    5. '	update' → logprob: -17.35020637512207
    6. '(update' → logprob: -17.97520637512207
    7. 'def' → logprob: -18.35020637512207
    8. 'updated' → logprob: -18.47520637512207
    9. 'up' → logprob: -18.72520637512207
    10. '.update' → logprob: -19.10020637512207

Token 266: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -4.4849443838757e-06
    2. 'minimum' → logprob: -12.500004768371582
    3. 'min' → logprob: -15.000004768371582
    4. '_max' → logprob: -15.375004768371582
    5. '_' → logprob: -16.375003814697266
    6. 'Minimum' → logprob: -16.625003814697266
    7. '_MIN' → logprob: -17.625003814697266
    8. ' minimum' → logprob: -18.000003814697266
    9. '(min' → logprob: -19.500003814697266
    10. '_Min' → logprob: -19.750003814697266

Token 267: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -3.6312321753939614e-05
    2. '_difference' → logprob: -10.250036239624023
    3. 'im' → logprob: -14.750036239624023
    4. 'IMUM' → logprob: -15.875036239624023
    5. 'um' → logprob: -16.500036239624023
    6. '_' → logprob: -16.500036239624023
    7. 'inum' → logprob: -16.625036239624023
    8. '(' → logprob: -16.875036239624023
    9. 'mum' → logprob: -17.125036239624023
    10. 'difference' → logprob: -17.625036239624023

Token 268: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.20204713940620422
    2. '(min' → logprob: -1.7020471096038818
    3. '(old' → logprob: -7.452047348022461
    4. '(existing' → logprob: -10.827047348022461
    5. '(previous' → logprob: -11.327047348022461
    6. '(a' → logprob: -11.827047348022461
    7. '(curr' → logprob: -12.327047348022461
    8. '(prev' → logprob: -12.577047348022461
    9. '(' → logprob: -13.202047348022461
    10. '(original' → logprob: -13.452047348022461

Token 269: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.3332346975803375
    2. '_difference' → logprob: -2.0832347869873047
    3. 'minimum' → logprob: -2.3332347869873047
    4. ',' → logprob: -2.9582347869873047
    5. ',min' → logprob: -5.333234786987305
    6. 'min' → logprob: -5.833234786987305
    7. 'difference' → logprob: -6.833234786987305
    8. ' minimum' → logprob: -8.083234786987305
    9. '(min' → logprob: -8.333234786987305
    10. ',_' → logprob: -8.708234786987305

Token 270: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.16340135037899017
    2. ',' → logprob: -1.9134013652801514
    3. '_,' → logprob: -6.038401126861572
    4. ',_' → logprob: -7.788401126861572
    5. 'inum' → logprob: -9.41340160369873
    6. ' ,' → logprob: -9.41340160369873
    7. 'mum' → logprob: -9.78840160369873
    8. 'im' → logprob: -10.03840160369873
    9. ',current' → logprob: -10.53840160369873
    10. 'IMUM' → logprob: -10.66340160369873

Token 271: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012928384239785373
    2. ' ,' → logprob: -9.875129699707031
    3. ',new' → logprob: -10.125129699707031
    4. ',value' → logprob: -10.875129699707031
    5. ',d' → logprob: -11.000129699707031
    6. ',current' → logprob: -13.500129699707031
    7. ',min' → logprob: -15.500129699707031
    8. ',
' → logprob: -15.625129699707031
    9. ',target' → logprob: -17.12512969970703
    10. 'value' → logprob: -17.12512969970703

Token 272: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.04796205088496208
    2. ' new' → logprob: -3.797961950302124
    3. 'candidate' → logprob: -3.797961950302124
    4. 'value' → logprob: -6.797962188720703
    5. ' candidate' → logprob: -7.047962188720703
    6. ' value' → logprob: -11.672962188720703
    7. 'current' → logprob: -12.797962188720703
    8. 'next' → logprob: -15.547962188720703
    9. 'potential' → logprob: -15.797962188720703
    10. 'other' → logprob: -16.297962188720703

Token 273: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0025162079837173223
    2. '):' → logprob: -6.752516269683838
    3. '_' → logprob: -7.127516269683838
    4. '_min' → logprob: -8.25251579284668
    5. '_difference' → logprob: -9.00251579284668
    6. '):
' → logprob: -9.87751579284668
    7. ')' → logprob: -9.87751579284668
    8. '_candidate' → logprob: -10.62751579284668
    9. '_val' → logprob: -10.87751579284668
    10. '_Value' → logprob: -13.37751579284668

Token 274: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.014230971224606037
    2. '):
' → logprob: -4.264231204986572
    3. '):
' → logprob: -9.639230728149414
    4. ')' → logprob: -13.514230728149414
    5. ' ):' → logprob: -14.389230728149414
    6. '):

' → logprob: -15.639230728149414
    7. '   ' → logprob: -15.764230728149414
    8. ':' → logprob: -17.014230728149414
    9. '=' → logprob: -17.389230728149414
    10. ' ):
' → logprob: -18.139230728149414

Token 275: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007856926880776882
    2. ' return' → logprob: -5.007856845855713
    3. ' if' → logprob: -7.007856845855713
    4. 'return' → logprob: -8.507857322692871
    5. 'if' → logprob: -10.382857322692871
    6. '	return' → logprob: -14.007857322692871
    7. '   ' → logprob: -14.007857322692871
    8. '    ' → logprob: -14.382857322692871
    9. '```' → logprob: -15.007857322692871
    10. '    
' → logprob: -15.007857322692871

Token 276: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.2749711871147156
    2. ' return' → logprob: -1.7749712467193604
    3. 'if' → logprob: -3.0249712467193604
    4. '   ' → logprob: -4.274971008300781
    5. ' if' → logprob: -4.774971008300781
    6. '	return' → logprob: -12.649971008300781
    7. '
' → logprob: -13.524971008300781
    8. '```' → logprob: -13.649971008300781
    9. 'min' → logprob: -14.024971008300781
    10. '    ' → logprob: -14.649971008300781

Token 277: ' min' (ID: 1349)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.5680496692657471
    2. ' new' → logprob: -1.568049669265747
    3. ' min' → logprob: -2.068049669265747
    4. 'min' → logprob: -2.318049669265747
    5. ' current' → logprob: -11.568049430847168
    6. 'current' → logprob: -11.568049430847168
    7. '   ' → logprob: -13.568049430847168
    8. '	min' → logprob: -14.318049430847168
    9. '	new' → logprob: -15.068049430847168
    10. ' ' → logprob: -15.318049430847168

Token 278: '(current' (ID: 15023)
  Prédit: '(current'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(current' → logprob: -0.004082197323441505
    2. '(' → logprob: -5.504082202911377
    3. '(cur' → logprob: -13.129081726074219
    4. '(curr' → logprob: -14.254081726074219
    5. ' (' → logprob: -14.629081726074219
    6. 'current' → logprob: -14.754081726074219
    7. '(
' → logprob: -16.00408172607422
    8. ',current' → logprob: -16.50408172607422
    9. '(c' → logprob: -17.87908172607422
    10. '(existing' → logprob: -18.12908172607422

Token 279: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.00018625585653353482
    2. 'minimum' → logprob: -8.6251859664917
    3. 'min' → logprob: -12.8751859664917
    4. '_' → logprob: -13.8751859664917
    5. 'Minimum' → logprob: -14.0001859664917
    6. 'imum' → logprob: -14.6251859664917
    7. '_MIN' → logprob: -15.0001859664917
    8. '_,' → logprob: -15.2501859664917
    9. '_m' → logprob: -15.3751859664917
    10. ' minimum' → logprob: -15.5001859664917

Token 280: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.016085868701338768
    2. 'um' → logprob: -4.141086101531982
    3. 'mum' → logprob: -10.266085624694824
    4. 'ium' → logprob: -11.766085624694824
    5. 'im' → logprob: -12.141085624694824
    6. 'inum' → logprob: -13.516085624694824
    7. 'un' → logprob: -14.641085624694824
    8. '```' → logprob: -14.766085624694824
    9. 'IMUM' → logprob: -15.016085624694824
    10. '__' → logprob: -15.516085624694824

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00043567578541114926
    2. ',new' → logprob: -7.750435829162598
    3. ' ,' → logprob: -12.250435829162598
    4. 'new' → logprob: -15.625435829162598
    5. ',
' → logprob: -17.75043487548828
    6. ' new' → logprob: -17.87543487548828
    7. ',n' → logprob: -18.62543487548828
    8. ',current' → logprob: -19.12543487548828
    9. '‌,' → logprob: -21.00043487548828
    10. ')' → logprob: -21.37543487548828

Token 282: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.12692810595035553
    2. ' new' → logprob: -2.1269280910491943
    3. '   ' → logprob: -18.251928329467773
    4. '	new' → logprob: -18.251928329467773
    5. ')new' → logprob: -19.251928329467773
    6. '_new' → logprob: -19.501928329467773
    7. ' ' → logprob: -20.626928329467773
    8. '    ' → logprob: -21.376928329467773
    9. '新' → logprob: -21.626928329467773
    10. '(new' → logprob: -21.876928329467773

Token 283: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -6.64708495605737e-05
    2. '_' → logprob: -9.750066757202148
    3. 'value' → logprob: -12.125066757202148
    4. ' _' → logprob: -14.000066757202148
    5. '_val' → logprob: -14.125066757202148
    6. '_min' → logprob: -14.375066757202148
    7. ')' → logprob: -16.00006675720215
    8. 'alue' → logprob: -16.25006675720215
    9. '_VALUE' → logprob: -16.50006675720215
    10. '_Value' → logprob: -16.87506675720215

Token 284: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -13.625000953674316
    3. ' )' → logprob: -16.625001907348633
    4. '}' → logprob: -18.625001907348633
    5. ')

' → logprob: -20.125001907348633
    6. ')}' → logprob: -20.250001907348633
    7. '())' → logprob: -20.250001907348633
    8. ')return' → logprob: -20.375001907348633
    9. '<|end|>' → logprob: -20.500001907348633
    10. '),' → logprob: -20.625001907348633

Token 285: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06308683753013611
    2. 'if' → logprob: -2.813086748123169
    3. 'n' → logprob: -6.813086986541748
    4. 'import' → logprob: -11.31308650970459
    5. 'weights' → logprob: -12.43808650970459
    6. '```' → logprob: -13.56308650970459
    7. ' if' → logprob: -14.06308650970459
    8. '#' → logprob: -14.56308650970459
    9. ' def' → logprob: -15.31308650970459
    10. 'num' → logprob: -16.563087463378906

Token 286: ' print' (ID: 2123)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0033816182985901833
    2. 'def' → logprob: -5.753381729125977
    3. ' main' → logprob: -8.503381729125977
    4. 'solve' → logprob: -14.503381729125977
    5. ' def' → logprob: -14.628381729125977
    6. 'if' → logprob: -16.628381729125977
    7. 'read' → logprob: -17.003381729125977
    8. 'process' → logprob: -18.378381729125977
    9. '_main' → logprob: -18.753381729125977
    10. 'run' → logprob: -19.503381729125977

Token 287: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002427144441753626
    2. '(min' → logprob: -6.877427101135254
    3. '_min' → logprob: -8.252427101135254
    4. '_' → logprob: -8.377427101135254
    5. '(_' → logprob: -8.627427101135254
    6. '("_' → logprob: -9.002427101135254
    7. '("("' → logprob: -9.002427101135254
    8. '()' → logprob: -9.252427101135254
    9. '_result' → logprob: -9.627427101135254
    10. '(
' → logprob: -10.252427101135254

Token 288: '(result' (ID: 8111)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10525360703468323
    2. '(' → logprob: -2.4802536964416504
    3. '(result' → logprob: -4.48025369644165
    4. '()' → logprob: -5.60525369644165
    5. '(data' → logprob: -8.855253219604492
    6. '(print' → logprob: -8.855253219604492
    7. '(def' → logprob: -8.980253219604492
    8. '(value' → logprob: -9.230253219604492
    9. '(output' → logprob: -9.230253219604492
    10. ' ():' → logprob: -9.355253219604492

Token 289: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028418414294719696
    2. '):
' → logprob: -6.252841949462891
    3. ')' → logprob: -7.002841949462891
    4. '(result' → logprob: -13.87784194946289
    5. '):
' → logprob: -14.12784194946289
    6. ' ):' → logprob: -14.12784194946289
    7. ',' → logprob: -14.62784194946289
    8. '   ' → logprob: -15.12784194946289
    9. '):

' → logprob: -15.62784194946289
    10. ' ' → logprob: -16.12784194946289

Token 290: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009100683033466339
    2. ' print' → logprob: -4.759100914001465
    3. 'print' → logprob: -7.634100914001465
    4. '```' → logprob: -13.259100914001465
    5. '   ' → logprob: -15.384100914001465
    6. '	print' → logprob: -15.509100914001465
    7. '    
' → logprob: -15.759100914001465
    8. '(print' → logprob: -17.13409996032715
    9. '
' → logprob: -18.13409996032715
    10. '.print' → logprob: -18.50909996032715

Token 291: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002036595979006961
    2. ' print' → logprob: -8.500204086303711
    3. '   ' → logprob: -16.37520408630371
    4. 'pr' → logprob: -19.12520408630371
    5. '```' → logprob: -20.00020408630371
    6. 'prin' → logprob: -20.37520408630371
    7. '
' → logprob: -21.75020408630371
    8. 'pri' → logprob: -22.50020408630371
    9. '	print' → logprob: -22.75020408630371
    10. 'def' → logprob: -23.25020408630371

Token 292: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002492999192327261
    2. '(' → logprob: -8.500248908996582
    3. 'result' → logprob: -10.000248908996582
    4. '()' → logprob: -15.250248908996582
    5. '=result' → logprob: -17.6252498626709
    6. ',result' → logprob: -18.0002498626709
    7. '(results' → logprob: -18.1252498626709
    8. '(res' → logprob: -18.1252498626709
    9. '_result' → logprob: -18.1252498626709
    10. ' result' → logprob: -18.1252498626709

Token 293: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.125
    3. ' )' → logprob: -17.875
    4. '()' → logprob: -18.625
    5. ')`' → logprob: -18.75
    6. '())' → logprob: -19.0
    7. '))' → logprob: -19.875
    8. '),' → logprob: -20.25
    9. '')' → logprob: -20.375
    10. ')

' → logprob: -20.5

Token 294: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0034708285238593817
    2. '<|end|>' → logprob: -6.1284708976745605
    3. 'if' → logprob: -7.2534708976745605
    4. '```' → logprob: -7.6284708976745605
    5. '#' → logprob: -9.753470420837402
    6. 'n' → logprob: -11.628470420837402
    7. '<|end|>' → logprob: -11.878470420837402
    8. ' def' → logprob: -12.378470420837402
    9. 'weights' → logprob: -12.878470420837402
    10. 'ndef' → logprob: -13.378470420837402

Token 295: ' solve' (ID: 17722)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.00043102685594931245
    2. ' main' → logprob: -7.750431060791016
    3. 'def' → logprob: -15.250431060791016
    4. 'solve' → logprob: -15.875431060791016
    5. '
' → logprob: -18.000431060791016
    6. '	main' → logprob: -18.125431060791016
    7. 'process' → logprob: -19.625431060791016
    8. '_main' → logprob: -20.000431060791016
    9. 'run' → logprob: -20.250431060791016
    10. '```' → logprob: -20.500431060791016

Token 296: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -9.491498531133402e-06
    2. ' ():' → logprob: -11.625009536743164
    3. '():
' → logprob: -14.750009536743164
    4. '_' → logprob: -17.000009536743164
    5. '(' → logprob: -17.375009536743164
    6. '()' → logprob: -18.375009536743164
    7. '():
' → logprob: -19.625009536743164
    8. '()>' → logprob: -20.500009536743164
    9. '():

' → logprob: -20.625009536743164
    10. '().' → logprob: -20.750009536743164

Token 297: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007882476784288883
    2. 'n' → logprob: -5.007882595062256
    3. ' n' → logprob: -6.757882595062256
    4. '	n' → logprob: -12.632882118225098
    5. '```' → logprob: -14.382882118225098
    6. '   ' → logprob: -14.507882118225098
    7. 'import' → logprob: -16.382883071899414
    8. '    ' → logprob: -16.757883071899414
    9. 'weights' → logprob: -17.132883071899414
    10. ',n' → logprob: -17.382883071899414

Token 298: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.004187498241662979
    2. '   ' → logprob: -5.50418758392334
    3. ' n' → logprob: -9.12918758392334
    4. '```' → logprob: -15.75418758392334
    5. '
' → logprob: -16.004186630249023
    6. ' ' → logprob: -16.004186630249023
    7. '	n' → logprob: -16.379186630249023
    8. '  ' → logprob: -16.379186630249023
    9. '    
' → logprob: -17.129186630249023
    10. '    ' → logprob: -17.254186630249023

Token 299: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11284104734659195
    2. '=' → logprob: -2.2378411293029785
    3. '=int' → logprob: -11.36284065246582
    4. '   ' → logprob: -12.98784065246582
    5. ',' → logprob: -13.23784065246582
    6. ' =
' → logprob: -13.36284065246582
    7. ')' → logprob: -15.11284065246582
    8. ' =
' → logprob: -15.11284065246582
    9. '    ' → logprob: -15.23784065246582
    10. ' ' → logprob: -15.48784065246582

Token 300: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.6931473612785339
    2. ' read' → logprob: -0.6931473612785339
    3. '	read' → logprob: -16.318147659301758
    4. '(read' → logprob: -17.693147659301758
    5. 'int' → logprob: -18.068147659301758
    6. ' int' → logprob: -18.068147659301758
    7. '   ' → logprob: -18.443147659301758
    8. '_read' → logprob: -19.318147659301758
    9. ' ' → logprob: -19.443147659301758
    10. '  ' → logprob: -20.443147659301758

Token 301: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -15.125000953674316
    3. '_input' → logprob: -15.250000953674316
    4. '_INTEGER' → logprob: -17.0
    5. 'integer' → logprob: -17.625
    6. '_in' → logprob: -17.75
    7. '_int' → logprob: -18.625
    8. '_Integer' → logprob: -19.625
    9. '()' → logprob: -19.875
    10. '_string' → logprob: -20.25

Token 302: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0004320996522437781
    2. '()
' → logprob: -7.750432014465332
    3. '()
' → logprob: -14.500432014465332
    4. ' ()' → logprob: -14.750432014465332
    5. '()\' → logprob: -15.500432014465332
    6. '()

' → logprob: -16.00043296813965
    7. '())' → logprob: -16.37543296813965
    8. '(' → logprob: -17.12543296813965
    9. '()`' → logprob: -17.12543296813965
    10. '()<' → logprob: -17.62543296813965

Token 303: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1822936236858368
    2. 'weights' → logprob: -1.8072936534881592
    3. ' weights' → logprob: -6.55729341506958
    4. '<|end|>' → logprob: -7.18229341506958
    5. '_weights' → logprob: -9.182293891906738
    6. '(weights' → logprob: -9.432293891906738
    7. '```' → logprob: -9.682293891906738
    8. 'weight' → logprob: -10.682293891906738
    9. '  ' → logprob: -10.682293891906738
    10. 'n' → logprob: -10.807293891906738

Token 304: ' weights' (ID: 28460)
  Prédit: 'weights'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'weights' (adapté à ' weights') → logprob: -0.14854544401168823
    2. ' weights' → logprob: -2.023545503616333
    3. '   ' → logprob: -5.148545265197754
    4. '_weights' → logprob: -11.523545265197754
    5. 'weight' → logprob: -11.523545265197754
    6. '(weights' → logprob: -11.898545265197754
    7. 'weig' → logprob: -12.773545265197754
    8. '    ' → logprob: -12.773545265197754
    9. ' ' → logprob: -12.898545265197754
    10. '  ' → logprob: -13.023545265197754

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300525784492493
    2. '=' → logprob: -3.1680052280426025
    3. ')' → logprob: -13.168004989624023
    4. '   ' → logprob: -13.293004989624023
    5. '[' → logprob: -13.668004989624023
    6. ',' → logprob: -14.793004989624023
    7. '_' → logprob: -15.543004989624023
    8. ' ' → logprob: -15.668004989624023
    9. 's' → logprob: -16.168004989624023
    10. '[]' → logprob: -16.668004989624023

Token 306: ' read' (ID: 1729)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.038042064756155014
    2. ' read' → logprob: -3.2880420684814453
    3. '	read' → logprob: -15.038042068481445
    4. '   ' → logprob: -15.788042068481445
    5. '(read' → logprob: -15.788042068481445
    6. '  ' → logprob: -19.038042068481445
    7. '.read' → logprob: -19.788042068481445
    8. '_read' → logprob: -20.038042068481445
    9. ' ' → logprob: -20.288042068481445
    10. '    ' → logprob: -21.163042068481445

Token 307: '_integer' (ID: 82911)
  Prédit: '_integer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_integer' → logprob: -1.7432603272027336e-06
    2. '_INTEGER' → logprob: -14.250001907348633
    3. 'integer' → logprob: -15.000001907348633
    4. '_' → logprob: -15.250001907348633
    5. '_string' → logprob: -16.000001907348633
    6. '```' → logprob: -16.750001907348633
    7. '_in' → logprob: -16.875001907348633
    8. '_input' → logprob: -17.125001907348633
    9. '_list' → logprob: -17.375001907348633
    10. '_array' → logprob: -17.375001907348633

Token 308: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.00045009577297605574
    2. '()' → logprob: -7.750450134277344
    3. 'list' → logprob: -11.375450134277344
    4. 's' → logprob: -12.250450134277344
    5. '_array' → logprob: -13.500450134277344
    6. '_' → logprob: -13.625450134277344
    7. 'List' → logprob: -15.250450134277344
    8. '_lst' → logprob: -16.500450134277344
    9. ' list' → logprob: -16.625450134277344
    10. '_line' → logprob: -16.875450134277344

Token 309: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.688212614681106e-05
    2. '()
' → logprob: -11.500017166137695
    3. ' ()' → logprob: -12.250017166137695
    4. '(' → logprob: -14.375017166137695
    5. '()\' → logprob: -15.000017166137695
    6. '()

' → logprob: -15.375017166137695
    7. '()<' → logprob: -15.375017166137695
    8. '()]' → logprob: -15.750017166137695
    9. '()[' → logprob: -16.000017166137695
    10. '())' → logprob: -16.000017166137695

Token 310: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21565645933151245
    2. '
' → logprob: -1.7156565189361572
    3. 'prefix' → logprob: -4.715656280517578
    4. ' prefix' → logprob: -5.965656280517578
    5. '    
' → logprob: -6.215656280517578
    6. 'build' → logprob: -8.840656280517578
    7. '  
' → logprob: -9.090656280517578
    8. ' 
' → logprob: -9.465656280517578
    9. ' build' → logprob: -9.715656280517578
    10. '```' → logprob: -9.965656280517578

Token 311: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.4349448084831238
    2. 'prefix' (adapté à ' prefix') → logprob: -1.1849448680877686
    3. '   ' → logprob: -3.0599448680877686
    4. '```' → logprob: -11.309945106506348
    5. '_prefix' → logprob: -12.059945106506348
    6. '    
' → logprob: -12.059945106506348
    7. '
' → logprob: -12.184945106506348
    8. '(prefix' → logprob: -12.309945106506348
    9. ' ' → logprob: -12.309945106506348
    10. '  ' → logprob: -13.059945106506348

Token 312: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.339278580620885e-06
    2. 'sum' → logprob: -13.125001907348633
    3. '_s' → logprob: -15.250001907348633
    4. '_array' → logprob: -16.875001907348633
    5. '_' → logprob: -17.000001907348633
    6. ' sum' → logprob: -19.250001907348633
    7. '_prefix' → logprob: -20.000001907348633
    8. '_size' → logprob: -20.375001907348633
    9. 'Sum' → logprob: -20.625001907348633
    10. '_SUM' → logprob: -20.750001907348633

Token 313: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -7.660315895918757e-05
    2. ' =' → logprob: -10.125076293945312
    3. '=' → logprob: -10.500076293945312
    4. '_' → logprob: -12.625076293945312
    5. '=_' → logprob: -12.875076293945312
    6. '_arrays' → logprob: -13.875076293945312
    7. '_arr' → logprob: -14.000076293945312
    8. 'array' → logprob: -14.125076293945312
    9. '_=' → logprob: -15.500076293945312
    10. '=array' → logprob: -15.500076293945312

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07888989895582199
    2. '=' → logprob: -2.578889846801758
    3. '=create' → logprob: -16.578889846801758
    4. '＝' → logprob: -17.453889846801758
    5. ')' → logprob: -18.203889846801758
    6. ' ' → logprob: -18.453889846801758
    7. ',' → logprob: -18.578889846801758
    8. '[' → logprob: -19.203889846801758
    9. '   ' → logprob: -19.828889846801758
    10. '=size' → logprob: -19.953889846801758

Token 315: ' initialize' (ID: 18400)
  Prédit: 'initialize'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initialize' → logprob: -0.47408327460289
    2. ' initialize' → logprob: -0.9740833044052124
    3. '	initialize' → logprob: -12.849082946777344
    4. '[' → logprob: -13.224082946777344
    5. '.initialize' → logprob: -13.974082946777344
    6. '_initialize' → logprob: -14.224082946777344
    7. ' [' → logprob: -15.724082946777344
    8. '   ' → logprob: -16.849082946777344
    9. 'itialize' → logprob: -17.224082946777344
    10. 'Initialize' → logprob: -17.724082946777344

Token 316: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.023467449471354485
    2. 'prefix' → logprob: -3.898467540740967
    3. '(prefix' → logprob: -5.898467540740967
    4. '_' → logprob: -9.523467063903809
    5. '_weights' → logprob: -9.648467063903809
    6. ' prefix' → logprob: -11.273467063903809
    7. '(weights' → logprob: -11.773467063903809
    8. '_(' → logprob: -11.773467063903809
    9. '_pref' → logprob: -12.773467063903809
    10. 'weights' → logprob: -13.148467063903809

Token 317: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0015149809187278152
    2. '_array' → logprob: -6.501514911651611
    3. 'array' → logprob: -12.75151538848877
    4. '_size' → logprob: -13.00151538848877
    5. 'sum' → logprob: -13.12651538848877
    6. '_' → logprob: -13.25151538848877
    7. '_prefix' → logprob: -14.37651538848877
    8. '_s' → logprob: -14.50151538848877
    9. '```' → logprob: -14.50151538848877
    10. '_len' → logprob: -15.00151538848877

Token 318: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.0026030067820101976
    2. '(n' → logprob: -6.127603054046631
    3. 'array' → logprob: -8.252602577209473
    4. '(len' → logprob: -9.877602577209473
    5. '_(' → logprob: -10.252602577209473
    6. 'Array' → logprob: -10.377602577209473
    7. '_arr' → logprob: -11.127602577209473
    8. '_' → logprob: -11.627602577209473
    9. '_arrays' → logprob: -11.877602577209473
    10. 'arr' → logprob: -13.752602577209473

Token 319: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. '(len' → logprob: -14.625011444091797
    4. ' (' → logprob: -14.625011444091797
    5. 'n' → logprob: -16.000011444091797
    6. '	n' → logprob: -16.125011444091797
    7. '   ' → logprob: -17.500011444091797
    8. ')n' → logprob: -17.500011444091797
    9. ' n' → logprob: -17.750011444091797
    10. '((' → logprob: -18.250011444091797

Token 320: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ' )' → logprob: -15.000000953674316
    3. ')
' → logprob: -15.375000953674316
    4. ')n' → logprob: -16.625
    5. '())' → logprob: -17.0
    6. '   ' → logprob: -17.0
    7. '))' → logprob: -17.625
    8. ')...' → logprob: -18.25
    9. '),' → logprob: -18.375
    10. ')#' → logprob: -18.75

Token 321: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.037814587354660034
    2. 'build' → logprob: -3.4128146171569824
    3. ' build' → logprob: -5.537814617156982
    4. '	build' → logprob: -9.162814140319824
    5. '(build' → logprob: -10.162814140319824
    6. '
' → logprob: -10.287814140319824
    7. '    
' → logprob: -10.787814140319824
    8. '  ' → logprob: -12.162814140319824
    9. ')' → logprob: -12.287814140319824
    10. '```' → logprob: -12.412814140319824

Token 322: ' build' (ID: 3024)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'build' (adapté à ' build') → logprob: -0.0019454145804047585
    2. ' build' → logprob: -6.251945495605469
    3. '   ' → logprob: -11.001945495605469
    4. '	build' → logprob: -16.50194549560547
    5. '(build' → logprob: -17.00194549560547
    6. '.build' → logprob: -18.37694549560547
    7. '_build' → logprob: -18.75194549560547
    8. '-build' → logprob: -20.12694549560547
    9. 'Build' → logprob: -20.37694549560547
    10. '  ' → logprob: -20.75194549560547

Token 323: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -0.0006066487403586507
    2. 'prefix' → logprob: -7.500606536865234
    3. '```' → logprob: -11.000606536865234
    4. '_' → logprob: -11.125606536865234
    5. '(prefix' → logprob: -11.250606536865234
    6. '_suffix' → logprob: -11.875606536865234
    7. '
' → logprob: -14.875606536865234
    8. '_pref' → logprob: -15.125606536865234
    9. '(_' → logprob: -15.500606536865234
    10. '_pres' → logprob: -15.625606536865234

Token 324: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -2.935296834039036e-06
    2. 'sum' → logprob: -12.87500286102295
    3. '_s' → logprob: -15.87500286102295
    4. '_prefix' → logprob: -16.750003814697266
    5. ')_' → logprob: -18.125003814697266
    6. '_suffix' → logprob: -18.625003814697266
    7. '```' → logprob: -19.000003814697266
    8. '_' → logprob: -19.375003814697266
    9. 's' → logprob: -19.500003814697266
    10. ' sum' → logprob: -19.875003814697266

Token 325: '(weights' (ID: 154124)
  Prédit: '(weights'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(weights' → logprob: -0.00016039233014453202
    2. '(prefix' → logprob: -8.750160217285156
    3. '(weight' → logprob: -13.500160217285156
    4. '(' → logprob: -15.125160217285156
    5. 'weights' → logprob: -15.750160217285156
    6. '_weights' → logprob: -17.125160217285156
    7. ' weights' → logprob: -17.250160217285156
    8. '(scores' → logprob: -18.375160217285156
    9. '(values' → logprob: -18.750160217285156
    10. 'Weights' → logprob: -18.875160217285156

Token 326: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007070713327266276
    2. ',p' → logprob: -7.375707149505615
    3. '(prefix' → logprob: -9.875706672668457
    4. 'prefix' → logprob: -10.750706672668457
    5. ' ,' → logprob: -12.375706672668457
    6. ' prefix' → logprob: -13.875706672668457
    7. ',
' → logprob: -13.875706672668457
    8. ')' → logprob: -14.500706672668457
    9. '_prefix' → logprob: -15.625706672668457
    10. '```' → logprob: -16.250707626342773

Token 327: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.014163628220558167
    2. 'prefix' → logprob: -4.264163494110107
    3. '(prefix' → logprob: -16.389163970947266
    4. '_prefix' → logprob: -18.014163970947266
    5. '.prefix' → logprob: -20.139163970947266
    6. 'Prefix' → logprob: -20.639163970947266
    7. ')' → logprob: -21.389163970947266
    8. ' prefixes' → logprob: -21.889163970947266
    9. 'refix' → logprob: -22.264163970947266
    10. '   ' → logprob: -22.389163970947266

Token 328: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003434488025959581
    2. 'sum' → logprob: -8.000343322753906
    3. '_array' → logprob: -11.875343322753906
    4. 'array' → logprob: -14.250343322753906
    5. ' sum' → logprob: -16.125343322753906
    6. 'x' → logprob: -16.500343322753906
    7. 'ix' → logprob: -17.375343322753906
    8. 's' → logprob: -17.375343322753906
    9. 'prefix' → logprob: -17.375343322753906
    10. 'fix' → logprob: -17.500343322753906

Token 329: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00014478032244369388
    2. 'array' → logprob: -9.250144958496094
    3. 'rray' → logprob: -10.000144958496094
    4. 'Array' → logprob: -13.375144958496094
    5. 'ray' → logprob: -14.375144958496094
    6. 'prefix' → logprob: -14.875144958496094
    7. 'y' → logprob: -15.375144958496094
    8. 'ay' → logprob: -15.625144958496094
    9. '_' → logprob: -16.750144958496094
    10. '```' → logprob: -16.750144958496094

Token 330: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004902417422272265
    2. ',n' → logprob: -7.625490188598633
    3. ' ,' → logprob: -13.125490188598633
    4. 'n' → logprob: -15.625490188598633
    5. ')' → logprob: -17.875490188598633
    6. '```' → logprob: -19.000490188598633
    7. '),' → logprob: -19.250490188598633
    8. '‌,' → logprob: -19.375490188598633
    9. ',
' → logprob: -19.625490188598633
    10. '   ' → logprob: -19.625490188598633

Token 331: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004078639671206474
    2. ' n' → logprob: -5.5040788650512695
    3. '   ' → logprob: -16.004077911376953
    4. ')n' → logprob: -17.129077911376953
    5. '	n' → logprob: -17.254077911376953
    6. ')' → logprob: -18.879077911376953
    7. '_n' → logprob: -20.754077911376953
    8. '    ' → logprob: -21.504077911376953
    9. ' ' → logprob: -21.629077911376953
    10. ')
' → logprob: -22.254077911376953

Token 332: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007200572872534394
    2. ')
' → logprob: -7.250720024108887
    3. '   ' → logprob: -11.750720024108887
    4. '<|end|>' → logprob: -14.250720024108887
    5. ' )' → logprob: -14.500720024108887
    6. ')
' → logprob: -15.250720024108887
    7. ')n' → logprob: -15.375720024108887
    8. ')

' → logprob: -15.500720024108887
    9. ')return' → logprob: -16.250720977783203
    10. ')add' → logprob: -16.750720977783203

Token 333: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003839382901787758
    2. 'result' → logprob: -6.378839492797852
    3. ' result' → logprob: -6.503839492797852
    4. '
' → logprob: -8.128839492797852
    5. '    
' → logprob: -8.628839492797852
    6. '```' → logprob: -8.878839492797852
    7. '_result' → logprob: -12.628839492797852
    8. '	result' → logprob: -12.628839492797852
    9. 'minimum' → logprob: -12.878839492797852
    10. '   ' → logprob: -13.128839492797852

Token 334: ' minimum' (ID: 11085)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.0045922305434942245
    2. 'minimum' (adapté à ' minimum') → logprob: -6.254592418670654
    3. '   ' → logprob: -6.504592418670654
    4. ' result' → logprob: -7.004592418670654
    5. 'min' → logprob: -8.879591941833496
    6. 'print' → logprob: -9.629591941833496
    7. 'difference' → logprob: -10.129591941833496
    8. '```' → logprob: -12.129591941833496
    9. ' minimum' → logprob: -12.629591941833496
    10. 'diff' → logprob: -14.129591941833496

Token 335: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -1.0802738870552275e-05
    2. 'difference' → logprob: -12.00001049041748
    3. '_' → logprob: -12.50001049041748
    4. '_d' → logprob: -15.00001049041748
    5. ' _' → logprob: -15.25001049041748
    6. '_diff' → logprob: -15.50001049041748
    7. ' difference' → logprob: -16.750011444091797
    8. '_result' → logprob: -16.750011444091797
    9. '_distance' → logprob: -17.750011444091797
    10. 'Difference' → logprob: -18.500011444091797

Token 336: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00861468818038702
    2. '=' → logprob: -4.758614540100098
    3. ')' → logprob: -16.508615493774414
    4. '_' → logprob: -17.008615493774414
    5. ' =
' → logprob: -17.258615493774414
    6. ' ' → logprob: -17.758615493774414
    7. ' =)' → logprob: -18.008615493774414
    8. '＝' → logprob: -18.258615493774414
    9. ',' → logprob: -19.258615493774414
    10. '=find' → logprob: -19.508615493774414

Token 337: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.048587486147880554
    2. 'find' → logprob: -3.0485875606536865
    3. '(find' → logprob: -17.173587799072266
    4. '	find' → logprob: -17.173587799072266
    5. '=find' → logprob: -17.923587799072266
    6. '_find' → logprob: -19.798587799072266
    7. ')find' → logprob: -19.923587799072266
    8. '.find' → logprob: -20.048587799072266
    9. ' finds' → logprob: -20.673587799072266
    10. '   ' → logprob: -21.173587799072266

Token 338: '_min' (ID: 15950)
  Prédit: '_min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -1.5213274309644476e-05
    2. 'minimum' → logprob: -11.750015258789062
    3. '_' → logprob: -12.125015258789062
    4. 'min' → logprob: -14.250015258789062
    5. '_m' → logprob: -14.750015258789062
    6. '_max' → logprob: -15.500015258789062
    7. ' _' → logprob: -16.000015258789062
    8. ' minimum' → logprob: -16.125015258789062
    9. '_difference' → logprob: -16.125015258789062
    10. '```' → logprob: -16.625015258789062

Token 339: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -0.008950882591307163
    2. 'um' → logprob: -4.758950710296631
    3. 'im' → logprob: -9.133951187133789
    4. 'ium' → logprob: -9.258951187133789
    5. '_difference' → logprob: -9.633951187133789
    6. 'difference' → logprob: -10.883951187133789
    7. 'mum' → logprob: -11.258951187133789
    8. 'inum' → logprob: -11.758951187133789
    9. '_' → logprob: -12.508951187133789
    10. 'ute' → logprob: -12.508951187133789

Token 340: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.0002087853499688208
    2. 'difference' → logprob: -8.500208854675293
    3. '```' → logprob: -12.500208854675293
    4. '_distance' → logprob: -15.500208854675293
    5. '_result' → logprob: -15.625208854675293
    6. '   ' → logprob: -16.125207901000977
    7. '\' → logprob: -16.250207901000977
    8. ' difference' → logprob: -16.625207901000977
    9. '_d' → logprob: -16.625207901000977
    10. ' _' → logprob: -16.750207901000977

Token 341: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.125003814697266
    3. 'prefix' → logprob: -13.625003814697266
    4. ' prefix' → logprob: -16.625003814697266
    5. ' (' → logprob: -17.625003814697266
    6. '(pref' → logprob: -17.625003814697266
    7. '```' → logprob: -20.000003814697266
    8. '(print' → logprob: -20.625003814697266
    9. '_prefix' → logprob: -20.875003814697266
    10. '(prompt' → logprob: -21.375003814697266

Token 342: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.027216725051403046
    2. '_array' → logprob: -3.652216672897339
    3. 'sum' → logprob: -7.277216911315918
    4. 'array' → logprob: -8.527216911315918
    5. '_prefix' → logprob: -11.527216911315918
    6. 'prefix' → logprob: -11.902216911315918
    7. '```' → logprob: -13.027216911315918
    8. 'um' → logprob: -13.277216911315918
    9. 'Sum' → logprob: -13.777216911315918
    10. '_' → logprob: -14.277216911315918

Token 343: '_array' (ID: 8766)
  Prédit: '_array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -0.00014799882774241269
    2. 'array' → logprob: -8.875147819519043
    3. 'prefix' → logprob: -12.375147819519043
    4. 'Array' → logprob: -14.000147819519043
    5. '(prefix' → logprob: -14.250147819519043
    6. '_ARRAY' → logprob: -14.625147819519043
    7. '_prefix' → logprob: -15.000147819519043
    8. 'n' → logprob: -15.375147819519043
    9. 'def' → logprob: -15.625147819519043
    10. 'rray' → logprob: -15.750147819519043

Token 344: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007222028798423707
    2. ',n' → logprob: -7.250722408294678
    3. ' ,' → logprob: -11.50072193145752
    4. 'n' → logprob: -13.87572193145752
    5. '   ' → logprob: -13.87572193145752
    6. ',
' → logprob: -16.375722885131836
    7. '(n' → logprob: -17.000722885131836
    8. '‌,' → logprob: -17.000722885131836
    9. ')' → logprob: -17.125722885131836
    10. '```' → logprob: -17.625722885131836

Token 345: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.07889033854007721
    2. ' n' → logprob: -2.578890323638916
    3. ')n' → logprob: -14.828890800476074
    4. '	n' → logprob: -15.453890800476074
    5. ')' → logprob: -17.078889846801758
    6. '   ' → logprob: -18.078889846801758
    7. ' ' → logprob: -18.078889846801758
    8. '_n' → logprob: -18.578889846801758
    9. '<|end|>' → logprob: -18.578889846801758
    10. 'len' → logprob: -18.828889846801758

Token 346: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1002374067902565
    2. ')
' → logprob: -2.3502373695373535
    3. '   ' → logprob: -10.725237846374512
    4. ')
' → logprob: -11.725237846374512
    5. ' )' → logprob: -15.475237846374512
    6. ')`
' → logprob: -15.725237846374512
    7. ' )
' → logprob: -15.975237846374512
    8. ')

' → logprob: -16.225236892700195
    9. ')`' → logprob: -16.475236892700195
    10. ')\
' → logprob: -17.475236892700195

Token 347: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.700797438621521
    2. '
' → logprob: -0.825797438621521
    3. 'print' → logprob: -2.8257975578308105
    4. '```' → logprob: -5.4507975578308105
    5. '    
' → logprob: -6.9507975578308105
    6. ' print' → logprob: -7.5757975578308105
    7. '(print' → logprob: -8.575797080993652
    8. '	print' → logprob: -8.700797080993652
    9. '  
' → logprob: -8.950797080993652
    10. '
' → logprob: -9.450797080993652

Token 348: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0005392124294303358
    2. ' print' → logprob: -8.00053882598877
    3. '   ' → logprob: -8.50053882598877
    4. '
' → logprob: -16.125539779663086
    5. '	print' → logprob: -16.125539779663086
    6. '```' → logprob: -16.375539779663086
    7. '.print' → logprob: -17.375539779663086
    8. '(print' → logprob: -17.625539779663086
    9. '_print' → logprob: -18.250539779663086
    10. '#print' → logprob: -18.500539779663086

Token 349: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -2.093505099765025e-05
    2. '_' → logprob: -11.000020980834961
    3. '(_' → logprob: -13.375020980834961
    4. '(' → logprob: -14.000020980834961
    5. '_results' → logprob: -14.000020980834961
    6. '_res' → logprob: -15.375020980834961
    7. '```' → logprob: -15.625020980834961
    8. '_(' → logprob: -16.12502098083496
    9. '(result' → logprob: -16.12502098083496
    10. ' _' → logprob: -16.50002098083496

Token 350: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.0024781543761491776
    2. '(' → logprob: -6.002478122711182
    3. ' (' → logprob: -14.37747859954834
    4. '(max' → logprob: -15.25247859954834
    5. '("("' → logprob: -15.50247859954834
    6. '(parent' → logprob: -15.62747859954834
    7. '((' → logprob: -15.75247859954834
    8. '(
' → logprob: -16.002477645874023
    9. 'minimum' → logprob: -16.127477645874023
    10. '(s' → logprob: -16.377477645874023

Token 351: 'imum' (ID: 4556)
  Prédit: 'imum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imum' → logprob: -9.877503907773644e-05
    2. 'um' → logprob: -9.250099182128906
    3. 'im' → logprob: -13.375099182128906
    4. 'ium' → logprob: -14.375099182128906
    5. 'inum' → logprob: -15.125099182128906
    6. 'IMUM' → logprob: -16.375099182128906
    7. '_' → logprob: -17.375099182128906
    8. 'imal' → logprob: -17.375099182128906
    9. 'mum' → logprob: -17.375099182128906
    10. 'inium' → logprob: -18.500099182128906

Token 352: '_difference' (ID: 123771)
  Prédit: '_difference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_difference' → logprob: -0.00013643606507685035
    2. 'difference' → logprob: -9.000136375427246
    3. '_diff' → logprob: -12.125136375427246
    4. ')' → logprob: -12.625136375427246
    5. '_' → logprob: -13.625136375427246
    6. '_d' → logprob: -14.000136375427246
    7. ')_' → logprob: -14.000136375427246
    8. '_)' → logprob: -14.750136375427246
    9. ' difference' → logprob: -15.000136375427246
    10. 't' → logprob: -15.625136375427246

Token 353: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.464347173576243e-05
    2. ')
' → logprob: -10.37503433227539
    3. '())' → logprob: -13.25003433227539
    4. '()' → logprob: -13.75003433227539
    5. ' )' → logprob: -14.50003433227539
    6. ')

' → logprob: -17.87503433227539
    7. ')`' → logprob: -17.87503433227539
    8. '))' → logprob: -18.25003433227539
    9. '```' → logprob: -18.75003433227539
    10. '`)' → logprob: -18.87503433227539

Token 354: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25366368889808655
    2. 'solve' → logprob: -1.6286636590957642
    3. '
' → logprob: -3.6286637783050537
    4. '\n' → logprob: -7.503663539886475
    5. '```' → logprob: -8.253664016723633
    6. '#' → logprob: -9.128664016723633
    7. ' solve' → logprob: -9.378664016723633
    8. '<|end|>' → logprob: -9.503664016723633
    9. '' → logprob: -10.003664016723633
    10. ' if' → logprob: -10.003664016723633

Token 355: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.04346418380737305
    2. '__' → logprob: -3.168464183807373
    3. '_' → logprob: -8.418464660644531
    4. ' ' → logprob: -8.418464660644531
    5. '_name' → logprob: -11.668464660644531
    6. ' ' → logprob: -12.293464660644531
    7. ' ' → logprob: -12.668464660644531
    8. ' _' → logprob: -13.043464660644531
    9. '___' → logprob: -13.543464660644531
    10. '​' → logprob: -13.668464660644531

Token 356: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.02612460032105446
    2. ' __' → logprob: -3.7761247158050537
    3. ' ==' → logprob: -6.026124477386475
    4. '==' → logprob: -8.276124954223633
    5. '_' → logprob: -9.651124954223633
    6. '__.' → logprob: -10.151124954223633
    7. '.__' → logprob: -10.276124954223633
    8. '__.__' → logprob: -10.526124954223633
    9. '___' → logprob: -11.901124954223633
    10. '____' → logprob: -12.276124954223633

Token 357: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -4.47757811343763e-05
    2. '__.__' → logprob: -10.500044822692871
    3. '==' → logprob: -11.125044822692871
    4. '___' → logprob: -13.625044822692871
    5. '_' → logprob: -14.500044822692871
    6. '__.' → logprob: -15.125044822692871
    7. '____' → logprob: -15.250044822692871
    8. '=="' → logprob: -16.000043869018555
    9. ' ==' → logprob: -16.875043869018555
    10. '__["' → logprob: -17.000043869018555

Token 358: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.009568016044795513
    2. '==' → logprob: -5.259568214416504
    3. ' ==' → logprob: -5.509568214416504
    4. '=="' → logprob: -8.384568214416504
    5. '__.__' → logprob: -10.759568214416504
    6. '_' → logprob: -11.884568214416504
    7. '___' → logprob: -12.134568214416504
    8. '.__' → logprob: -12.259568214416504
    9. '__.' → logprob: -12.384568214416504
    10. '=='' → logprob: -13.634568214416504

Token 359: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.02333049848675728
    2. ''' → logprob: -3.7733304500579834
    3. ' "__' → logprob: -9.648330688476562
    4. '__' → logprob: -10.898330688476562
    5. '"user' → logprob: -14.148330688476562
    6. ' '__' → logprob: -14.523330688476562
    7. ' "' → logprob: -14.898330688476562
    8. '"name' → logprob: -16.023330688476562
    9. '("__' → logprob: -16.398330688476562
    10. '"log' → logprob: -16.898330688476562

Token 360: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.4766535758972168
    2. '__' → logprob: -0.9766535758972168
    3. 'name' → logprob: -5.976653575897217
    4. ''' → logprob: -11.476654052734375
    5. 'if' → logprob: -11.851654052734375
    6. '__':
' → logprob: -12.726654052734375
    7. '```' → logprob: -12.726654052734375
    8. '__
' → logprob: -13.101654052734375
    9. ' __' → logprob: -13.226654052734375
    10. ' main' → logprob: -13.351654052734375

Token 361: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.07892371714115143
    2. '__' → logprob: -2.5789237022399902
    3. '__:' → logprob: -10.453924179077148
    4. '__":
' → logprob: -12.453924179077148
    5. '':' → logprob: -13.953924179077148
    6. '_' → logprob: -15.578924179077148
    7. '__('' → logprob: -17.20392417907715
    8. ':' → logprob: -17.70392417907715
    9. '___' → logprob: -17.82892417907715
    10. '__.' → logprob: -17.82892417907715

Token 362: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006656165234744549
    2. 'solve' → logprob: -5.131656169891357
    3. ' solve' → logprob: -7.256656169891357
    4. '```' → logprob: -11.7566556930542
    5. '	s' → logprob: -12.0066556930542
    6. '.solve' → logprob: -12.2566556930542
    7. '   ' → logprob: -13.6316556930542
    8. '    
' → logprob: -14.3816556930542
    9. 'main' → logprob: -15.0066556930542
    10. '    ' → logprob: -15.7566556930542

Token 363: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -2.0100624169572257e-05
    2. '   ' → logprob: -11.000020027160645
    3. ' solve' → logprob: -12.625020027160645
    4. '.solve' → logprob: -17.25002098083496
    5. '  ' → logprob: -20.87502098083496
    6. '```' → logprob: -21.00002098083496
    7. 'resolve' → logprob: -21.50002098083496
    8. 'solver' → logprob: -22.00002098083496
    9. 'simulate' → logprob: -22.62502098083496
    10. ' ' → logprob: -22.62502098083496

Token 364: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 362
Tokens correctement prédits (1ère position, stricte): 203
Tokens correctement prédits (1ère position, avec adaptation): 214
Tokens correctement prédits (top 10): 330
Précision stricte (1ère position): 56.08%
Précision adaptée (1ère position): 59.12%
Précision (top 10): 91.16%
================================================================================
