================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:45:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
input_count = int(input())
input_list_a, input_list_b, input_list_c = [list(map(int, input().split())) for _ in range(3)]
total_sum = sum(input_list_b)
for index in range(input_count - 1):
    if input_list_a[index + 1] - input_list_a[index] == 1:
        total_sum += input_list_c[input_list_a[index] - 1]
print(total_sum)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'input' (ID: 2586)
  → Token d'amorce (pas de prédiction)

Token 1: '_count' (ID: 7536)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07137931883335114
    2. '0' → logprob: -2.8213794231414795
    3. '1' → logprob: -5.0713791847229
    4. '5' → logprob: -6.8213791847229
    5. '10' → logprob: -6.8213791847229
    6. ' len' → logprob: -7.9463791847229
    7. ' int' → logprob: -8.446379661560059
    8. '4' → logprob: -8.821379661560059
    9. 'int' → logprob: -9.821379661560059
    10. ' input' → logprob: -10.071379661560059

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01639644242823124
    2. '(input' → logprob: -4.141396522521973
    3. '()' → logprob: -9.016396522521973
    4. '(user' → logprob: -9.516396522521973
    5. ' (' → logprob: -10.016396522521973
    6. '('' → logprob: -10.266396522521973
    7. '```' → logprob: -10.641396522521973
    8. '(`' → logprob: -11.891396522521973
    9. 'input' → logprob: -12.391396522521973
    10. '(code' → logprob: -12.391396522521973

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10250791907310486
    2. ')' → logprob: -2.4775078296661377
    3. '()' → logprob: -4.727508068084717
    4. '())' → logprob: -5.602508068084717
    5. '('' → logprob: -8.227507591247559
    6. '(
' → logprob: -8.727507591247559
    7. '))' → logprob: -9.227507591247559
    8. '(""))' → logprob: -9.477507591247559
    9. '(()' → logprob: -9.727507591247559
    10. '```' → logprob: -9.977507591247559

Token 6: 'input' (ID: 2586)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0326802730560303
    2. 'for' → logprob: -1.4076802730560303
    3. '\n' → logprob: -2.1576802730560303
    4. '+' → logprob: -2.5326802730560303
    5. '```' → logprob: -3.2826802730560303
    6. '*' → logprob: -3.4076802730560303
    7. ')' → logprob: -3.6576802730560303
    8. ' if' → logprob: -3.7826802730560303
    9. ' for' → logprob: -4.282680511474609
    10. '>' → logprob: -4.282680511474609

Token 7: '_list' (ID: 4162)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6259332299232483
    2. '(' → logprob: -1.1259331703186035
    3. '_count' → logprob: -2.2509331703186035
    4. '()' → logprob: -4.7509331703186035
    5. '_counts' → logprob: -5.0009331703186035
    6. '('_' → logprob: -5.5009331703186035
    7. ''' → logprob: -5.5009331703186035
    8. '('' → logprob: -6.0009331703186035
    9. '("_' → logprob: -6.6259331703186035
    10. '_parent' → logprob: -7.0009331703186035

Token 8: '_a' (ID: 10852)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08654596656560898
    2. '.' → logprob: -2.586545944213867
    3. '```' → logprob: -6.336545944213867
    4. '_' → logprob: -6.586545944213867
    5. '.append' → logprob: -6.961545944213867
    6. '[]' → logprob: -7.211545944213867
    7. '[
' → logprob: -7.961545944213867
    8. '[:]' → logprob: -8.086545944213867
    9. ')' → logprob: -8.211545944213867
    10. '\[' → logprob: -8.211545944213867

Token 9: ',' (ID: 11)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.754368007183075
    2. '[' → logprob: -0.879368007183075
    3. '.append' → logprob: -3.3793680667877197
    4. ' =' → logprob: -3.6293680667877197
    5. '=' → logprob: -3.7543680667877197
    6. '_' → logprob: -4.254367828369141
    7. '[]' → logprob: -5.379367828369141
    8. '[:]' → logprob: -5.379367828369141
    9. ')' → logprob: -5.754367828369141
    10. '.count' → logprob: -7.504367828369141

Token 10: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.5105528235435486
    2. ' =' → logprob: -1.2605528831481934
    3. ' input' → logprob: -2.8855528831481934
    4. ' ' → logprob: -3.2605528831481934
    5. '=' → logprob: -4.135552883148193
    6. '=input' → logprob: -6.385552883148193
    7. '[' → logprob: -6.760552883148193
    8. '[input' → logprob: -7.510552883148193
    9. '_' → logprob: -8.010552406311035
    10. '*' → logprob: -8.260552406311035

Token 11: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.40093812346458435
    2. '_count' → logprob: -1.6509381532669067
    3. '_' → logprob: -2.025938034057617
    4. '_b' → logprob: -6.025938034057617
    5. '_s' → logprob: -6.900938034057617
    6. '_a' → logprob: -7.775938034057617
    7. '_counts' → logprob: -7.900938034057617
    8. '_line' → logprob: -8.275938034057617
    9. '_value' → logprob: -8.525938034057617
    10. '```' → logprob: -8.775938034057617

Token 12: '_b' (ID: 1535)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7521764636039734
    2. '_b' → logprob: -0.7521764636039734
    3. '_a' → logprob: -2.877176523208618
    4. '_c' → logprob: -7.502176284790039
    5. '_,' → logprob: -8.502176284790039
    6. '_=' → logprob: -9.252176284790039
    7. '```' → logprob: -9.752176284790039
    8. '__' → logprob: -10.627176284790039
    9. ' _' → logprob: -11.127176284790039
    10. '_s' → logprob: -11.252176284790039

Token 13: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07118327915668488
    2. '=' → logprob: -2.696183204650879
    3. ',' → logprob: -7.071183204650879
    4. '[' → logprob: -8.446183204650879
    5. ' ' → logprob: -9.321183204650879
    6. '_' → logprob: -9.696183204650879
    7. ' ,' → logprob: -11.446183204650879
    8. '.' → logprob: -12.071183204650879
    9. ')' → logprob: -13.071183204650879
    10. '[:]' → logprob: -13.071183204650879

Token 14: ' input' (ID: 3422)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14438962936401367
    2. '=' → logprob: -2.2693896293640137
    3. ' ' → logprob: -3.6443896293640137
    4. 'input' → logprob: -6.019389629364014
    5. ' [],' → logprob: -7.144389629364014
    6. ' input' → logprob: -7.269389629364014
    7. ' []' → logprob: -8.769390106201172
    8. '[]' → logprob: -8.894390106201172
    9. '<|end|>' → logprob: -9.144390106201172
    10. '=input' → logprob: -9.269390106201172

Token 15: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.4735884368419647
    2. '_' → logprob: -1.848588466644287
    3. '_count' → logprob: -2.098588466644287
    4. '(' → logprob: -2.848588466644287
    5. '__' → logprob: -4.848588466644287
    6. '()' → logprob: -5.348588466644287
    7. '_s' → logprob: -5.473588466644287
    8. '```' → logprob: -5.723588466644287
    9. '_counts' → logprob: -5.848588466644287
    10. '_split' → logprob: -6.348588466644287

Token 16: '_c' (ID: 1303)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05901537090539932
    2. '_c' → logprob: -2.9340152740478516
    3. '_a' → logprob: -5.684015274047852
    4. '_s' → logprob: -8.059015274047852
    5. '__' → logprob: -8.934015274047852
    6. 's' → logprob: -9.434015274047852
    7. '```' → logprob: -10.184015274047852
    8. '_

' → logprob: -10.309015274047852
    9. '_=' → logprob: -11.184015274047852
    10. '_[' → logprob: -11.309015274047852

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026508595794439316
    2. '=' → logprob: -3.6515085697174072
    3. '[' → logprob: -8.776508331298828
    4. ',' → logprob: -10.276508331298828
    5. '_' → logprob: -12.026508331298828
    6. ' ' → logprob: -12.276508331298828
    7. ' =[' → logprob: -13.151508331298828
    8. '[:]' → logprob: -13.526508331298828
    9. '.' → logprob: -14.151508331298828
    10. '=[]' → logprob: -14.151508331298828

Token 18: ' [' (ID: 723)
  Prédit: ' map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.7029792666435242
    2. ' [],' → logprob: -1.952979326248169
    3. 'map' → logprob: -1.952979326248169
    4. '[],' → logprob: -2.327979326248169
    5. 'input' → logprob: -3.327979326248169
    6. ' input' → logprob: -3.702979326248169
    7. ' list' → logprob: -3.827979326248169
    8. 'list' → logprob: -4.20297908782959
    9. '[]' → logprob: -4.82797908782959
    10. '[' → logprob: -5.32797908782959

Token 19: 'list' (ID: 2641)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.45305728912353516
    2. 'map' → logprob: -1.5780572891235352
    3. '[]' → logprob: -2.578057289123535
    4. '[int' → logprob: -3.328057289123535
    5. 'list' → logprob: -3.953057289123535
    6. 'input' → logprob: -4.953057289123535
    7. ' int' → logprob: -5.078057289123535
    8. ' map' → logprob: -5.078057289123535
    9. ' []' → logprob: -6.328057289123535
    10. ']' → logprob: -6.578057289123535

Token 20: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.08238423615694046
    2. '(' → logprob: -2.5823843479156494
    3. '(range' → logprob: -5.83238410949707
    4. '(input' → logprob: -8.20738410949707
    5. '()' → logprob: -8.95738410949707
    6. '(int' → logprob: -8.95738410949707
    7. '()]' → logprob: -11.83238410949707
    8. '(
' → logprob: -12.08238410949707
    9. '(eval' → logprob: -12.83238410949707
    10. '(filter' → logprob: -13.33238410949707

Token 21: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.003695920342579484
    2. '(' → logprob: -6.003695964813232
    3. '(str' → logprob: -6.878695964813232
    4. '(lambda' → logprob: -9.378695487976074
    5. 'int' → logprob: -9.878695487976074
    6. '(input' → logprob: -10.253695487976074
    7. '<int' → logprob: -12.503695487976074
    8. 'str' → logprob: -12.503695487976074
    9. '(eval' → logprob: -12.628695487976074
    10. '(
' → logprob: -12.753695487976074

Token 22: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 23: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12754982709884644
    2. ' input' → logprob: -2.127549886703491
    3. '(input' → logprob: -8.00255012512207
    4. ')' → logprob: -8.75255012512207
    5. ',input' → logprob: -9.12755012512207
    6. '<input' → logprob: -12.50255012512207
    7. '))' → logprob: -12.87755012512207
    8. '=input' → logprob: -13.00255012512207
    9. '[input' → logprob: -13.12755012512207
    10. '),' → logprob: -13.25255012512207

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.015263106673955917
    2. '()))' → logprob: -4.890263080596924
    3. '()' → logprob: -5.140263080596924
    4. '(' → logprob: -6.890263080596924
    5. '))' → logprob: -8.015263557434082
    6. '())' → logprob: -8.265263557434082
    7. '(input' → logprob: -9.265263557434082
    8. ')' → logprob: -11.390263557434082
    9. '()
' → logprob: -11.515263557434082
    10. '(),' → logprob: -12.015263557434082

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0009808859322220087
    2. 'strip' → logprob: -7.000980854034424
    3. 'rstrip' → logprob: -9.625981330871582
    4. '(split' → logprob: -13.375981330871582
    5. ' split' → logprob: -13.375981330871582
    6. 'spl' → logprob: -15.125981330871582
    7. ')' → logprob: -17.625980377197266
    8. 'read' → logprob: -17.875980377197266
    9. ' strip' → logprob: -18.375980377197266
    10. 's' → logprob: -18.625980377197266

Token 26: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.007777933031320572
    2. '))' → logprob: -5.632778167724609
    3. '()' → logprob: -6.507778167724609
    4. '(' → logprob: -7.007778167724609
    5. '())' → logprob: -7.132778167724609
    6. '('' → logprob: -7.257778167724609
    7. '(','' → logprob: -8.63277816772461
    8. '())))' → logprob: -10.88277816772461
    9. '(()' → logprob: -11.50777816772461
    10. '()));' → logprob: -11.63277816772461

Token 27: ' for' (ID: 395)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8708295226097107
    2. '(' → logprob: -1.1208295822143555
    3. '),' → logprob: -2.4958295822143555
    4. ')' → logprob: -2.9958295822143555
    5. 'for' → logprob: -3.1208295822143555
    6. ' for' → logprob: -4.3708295822143555
    7. '(','' → logprob: -4.3708295822143555
    8. ')]' → logprob: -4.6208295822143555
    9. '(),' → logprob: -4.6208295822143555
    10. '()' → logprob: -4.6208295822143555

Token 28: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10241247713565826
    2. ' _' → logprob: -3.102412462234497
    3. '_' → logprob: -3.227412462234497
    4. ' ' → logprob: -5.102412700653076
    5. 'range' → logprob: -5.727412700653076
    6. '_range' → logprob: -6.977412700653076
    7. '(' → logprob: -7.102412700653076
    8. ' i' → logprob: -7.102412700653076
    9. ' in' → logprob: -7.977412700653076
    10. '(range' → logprob: -8.227412223815918

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20403555035591125
    2. 'in' → logprob: -1.7040355205535889
    3. ' ' → logprob: -6.829035758972168
    4. '<|end|>' → logprob: -7.954035758972168
    5. '	in' → logprob: -8.079035758972168
    6. 'range' → logprob: -8.579035758972168
    7. 'import' → logprob: -8.954035758972168
    8. '_' → logprob: -9.079035758972168
    9. '32' → logprob: -9.579035758972168
    10. '<|end|>' → logprob: -10.329035758972168

Token 30: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.009774390608072281
    2. ' range' → logprob: -4.634774208068848
    3. '	range' → logprob: -12.384774208068848
    4. '[' → logprob: -12.509774208068848
    5. '(range' → logprob: -12.634774208068848
    6. 'input' → logprob: -13.009774208068848
    7. '_range' → logprob: -13.259774208068848
    8. 'rang' → logprob: -14.259774208068848
    9. '['' → logprob: -14.384774208068848
    10. ' ' → logprob: -14.884774208068848

Token 31: '(' (ID: 7)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.002477081725373864
    2. '(' → logprob: -6.002477169036865
    3. '(len' → logprob: -14.002476692199707
    4. ' (' → logprob: -16.002477645874023
    5. 'input' → logprob: -16.002477645874023
    6. '((' → logprob: -16.627477645874023
    7. '(int' → logprob: -16.627477645874023
    8. '(
' → logprob: -16.627477645874023
    9. '(in' → logprob: -17.127477645874023
    10. '(n' → logprob: -17.627477645874023

Token 32: '3' (ID: 18)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0143648162484169
    2. '3' → logprob: -4.264364719390869
    3. ' input' → logprob: -8.514365196228027
    4. ' ' → logprob: -15.139365196228027
    5. '(input' → logprob: -15.264365196228027
    6. '2' → logprob: -16.38936424255371
    7. ')' → logprob: -16.51436424255371
    8. '<input' → logprob: -17.63936424255371
    9. '1' → logprob: -18.13936424255371
    10. '=input' → logprob: -18.13936424255371

Token 33: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00021712594025302678
    2. ')' → logprob: -8.62521743774414
    3. ']' → logprob: -10.37521743774414
    4. ')])' → logprob: -12.50021743774414
    5. '])' → logprob: -14.50021743774414
    6. ' )' → logprob: -14.75021743774414
    7. '')]' → logprob: -14.87521743774414
    8. '])]' → logprob: -14.87521743774414
    9. '))' → logprob: -15.50021743774414
    10. ')]
' → logprob: -15.50021743774414

Token 34: 'total' (ID: 9577)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14240524172782898
    2. '.' → logprob: -2.7674052715301514
    3. '#' → logprob: -3.2674052715301514
    4. 'for' → logprob: -4.642405033111572
    5. ')' → logprob: -5.392405033111572
    6. '```' → logprob: -5.767405033111572
    7. ',' → logprob: -6.142405033111572
    8. '(' → logprob: -6.392405033111572
    9. '=' → logprob: -6.392405033111572
    10. '_' → logprob: -6.517405033111572

Token 35: '_sum' (ID: 29859)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.01083770114928484
    2. '_count' → logprob: -5.010837554931641
    3. '_space' → logprob: -6.635837554931641
    4. '_counts' → logprob: -6.885837554931641
    5. '_sum' → logprob: -7.885837554931641
    6. '.' → logprob: -8.01083755493164
    7. '(' → logprob: -8.88583755493164
    8. '_amount' → logprob: -9.13583755493164
    9. ')' → logprob: -9.26083755493164
    10. '=' → logprob: -9.26083755493164

Token 36: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5901870727539062
    2. ' =' → logprob: -1.5901870727539062
    3. '=' → logprob: -2.4651870727539062
    4. ' +=' → logprob: -2.5901870727539062
    5. ' ' → logprob: -3.3401870727539062
    6. '+' → logprob: -3.8401870727539062
    7. '_' → logprob: -4.840187072753906
    8. '<|end|>' → logprob: -5.090187072753906
    9. ' +' → logprob: -5.215187072753906
    10. ')' → logprob: -6.215187072753906

Token 37: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.06334970146417618
    2. 'sum' → logprob: -3.313349723815918
    3. '0' → logprob: -3.813349723815918
    4. ' ' → logprob: -6.063349723815918
    5. ' input' → logprob: -7.563349723815918
    6. 'input' → logprob: -10.563349723815918
    7. ' max' → logprob: -11.063349723815918
    8. '(sum' → logprob: -11.188349723815918
    9. '  ' → logprob: -13.188349723815918
    10. '	sum' → logprob: -13.438349723815918

Token 38: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.000837980885989964
    2. '(input' → logprob: -7.500837802886963
    3. '((' → logprob: -9.125838279724121
    4. '(sum' → logprob: -10.000838279724121
    5. '("("' → logprob: -10.250838279724121
    6. '(total' → logprob: -10.625838279724121
    7. ' (' → logprob: -11.125838279724121
    8. '('' → logprob: -11.625838279724121
    9. '(user' → logprob: -12.125838279724121
    10. '(
' → logprob: -12.250838279724121

Token 39: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.020627493038773537
    2. '_count' → logprob: -3.895627498626709
    3. ')_' → logprob: -10.64562702178955
    4. '_counts' → logprob: -10.64562702178955
    5. '_' → logprob: -10.89562702178955
    6. ')' → logprob: -11.39562702178955
    7. '_input' → logprob: -13.39562702178955
    8. '_sum' → logprob: -13.52062702178955
    9. '_lists' → logprob: -14.02062702178955
    10. '_lst' → logprob: -14.39562702178955

Token 40: '_b' (ID: 1535)
  Prédit: '_a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.0011266445508226752
    2. '_' → logprob: -7.001126766204834
    3. '_b' → logprob: -9.126126289367676
    4. '_c' → logprob: -9.251126289367676
    5. ')_' → logprob: -12.751126289367676
    6. ' _' → logprob: -13.126126289367676
    7. ')' → logprob: -13.626126289367676
    8. '_s' → logprob: -13.626126289367676
    9. 'a' → logprob: -13.876126289367676
    10. '_)' → logprob: -14.126126289367676

Token 41: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012535653077065945
    2. '[' → logprob: -7.376253604888916
    3. ' )' → logprob: -7.501253604888916
    4. ' +' → logprob: -10.626253128051758
    5. '+' → logprob: -10.876253128051758
    6. ')+' → logprob: -11.751253128051758
    7. '[i' → logprob: -12.501253128051758
    8. ' ' → logprob: -12.876253128051758
    9. ',' → logprob: -13.001253128051758
    10. '[input' → logprob: -13.126253128051758

Token 42: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1546076536178589
    2. 'if' → logprob: -1.4046076536178589
    3. '+' → logprob: -2.2796077728271484
    4. '%' → logprob: -2.5296077728271484
    5. '
' → logprob: -2.7796077728271484
    6. '-' → logprob: -3.0296077728271484
    7. '>' → logprob: -3.1546077728271484
    8. ' if' → logprob: -3.7796077728271484
    9. ' for' → logprob: -4.029607772827148
    10. ')' → logprob: -4.654607772827148

Token 43: ' index' (ID: 3472)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.8619083762168884
    2. ' ' → logprob: -1.2369084358215332
    3. ' _' → logprob: -1.4869084358215332
    4. '_' → logprob: -2.861908435821533
    5. '  ' → logprob: -6.236908435821533
    6. ' item' → logprob: -6.611908435821533
    7. ' input' → logprob: -8.236907958984375
    8. ' ‌' → logprob: -8.486907958984375
    9. ' space' → logprob: -8.861907958984375
    10. 'i' → logprob: -9.861907958984375

Token 44: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10272974520921707
    2. 'in' → logprob: -2.3527297973632812
    3. ' ' → logprob: -6.102729797363281
    4. '<|end|>' → logprob: -9.602729797363281
    5. ',' → logprob: -9.727729797363281
    6. '  ' → logprob: -10.102729797363281
    7. ' ,' → logprob: -10.727729797363281
    8. ')' → logprob: -10.852729797363281
    9. '_' → logprob: -10.977729797363281
    10. '	in' → logprob: -11.227729797363281

Token 45: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.001578182796947658
    2. 'range' → logprob: -6.501578330993652
    3. ' input' → logprob: -9.751578330993652
    4. ' ' → logprob: -11.376578330993652
    5. '	range' → logprob: -12.376578330993652
    6. ' space' → logprob: -14.876578330993652
    7. '_range' → logprob: -15.001578330993652
    8. ' xrange' → logprob: -15.001578330993652
    9. '(range' → logprob: -15.251578330993652
    10. '  ' → logprob: -15.626578330993652

Token 46: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2521030902862549
    2. '(input' → logprob: -1.5021030902862549
    3. '(len' → logprob: -8.752102851867676
    4. ' (' → logprob: -11.502102851867676
    5. '(total' → logprob: -12.877102851867676
    6. '(
' → logprob: -13.627102851867676
    7. '(in' → logprob: -14.127102851867676
    8. '(

' → logprob: -15.127102851867676
    9. '(length' → logprob: -15.502102851867676
    10. 'input' → logprob: -16.002103805541992

Token 47: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00017433916218578815
    2. '_' → logprob: -10.000174522399902
    3. ')_' → logprob: -10.125174522399902
    4. '_c' → logprob: -10.500174522399902
    5. ' _' → logprob: -11.000174522399902
    6. '_counts' → logprob: -11.500174522399902
    7. '_list' → logprob: -11.750174522399902
    8. '_co' → logprob: -12.000174522399902
    9. ')' → logprob: -12.125174522399902
    10. '__' → logprob: -13.250174522399902

Token 48: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0024158458691090345
    2. ')' → logprob: -6.502415657043457
    3. '+' → logprob: -7.877415657043457
    4. ':' → logprob: -8.002415657043457
    5. ' ):' → logprob: -8.627415657043457
    6. '+:' → logprob: -12.127415657043457
    7. '):
' → logprob: -12.502415657043457
    8. ' +' → logprob: -12.627415657043457
    9. ',' → logprob: -12.877415657043457
    10. ' )' → logprob: -13.752415657043457

Token 49: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10021303594112396
    2. '1' → logprob: -2.350213050842285
    3. '2' → logprob: -13.100213050842285
    4. '0' → logprob: -14.100213050842285
    5. '<|end|>' → logprob: -14.100213050842285
    6. '    ' → logprob: -14.600213050842285
    7. ' ' → logprob: -14.850213050842285
    8. ')' → logprob: -14.850213050842285
    9. ',' → logprob: -15.100213050842285
    10. '```' → logprob: -15.537713050842285

Token 50: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027945113833993673
    2. ' ' → logprob: -8.375279426574707
    3. '2' → logprob: -10.000279426574707
    4. '3' → logprob: -13.000279426574707
    5. '4' → logprob: -14.750279426574707
    6. '10' → logprob: -15.625279426574707
    7. '   ' → logprob: -16.125280380249023
    8. '5' → logprob: -16.250280380249023
    9. '100' → logprob: -16.500280380249023
    10. '0' → logprob: -16.625280380249023

Token 51: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0025212035980075598
    2. ':' → logprob: -6.62752103805542
    3. ')' → logprob: -7.37752103805542
    4. ' ):' → logprob: -8.377521514892578
    5. '+' → logprob: -8.752521514892578
    6. ',' → logprob: -9.002521514892578
    7. '):
' → logprob: -10.002521514892578
    8. '+:' → logprob: -12.752521514892578
    9. ' +' → logprob: -13.127521514892578
    10. ']:' → logprob: -13.377521514892578

Token 52: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3449670672416687
    2. '    ' → logprob: -2.0949671268463135
    3. ' ' → logprob: -2.5949671268463135
    4. '    
' → logprob: -3.2199671268463135
    5. '     
' → logprob: -3.9699671268463135
    6. ':' → logprob: -4.594966888427734
    7. ' 
' → logprob: -5.219966888427734
    8. '<|end|>' → logprob: -5.344966888427734
    9. '```' → logprob: -5.844966888427734
    10. ',' → logprob: -5.969966888427734

Token 53: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6472927927970886
    2. ' ' → logprob: -1.2722928524017334
    3. '    ' → logprob: -2.3972928524017334
    4. ' total' → logprob: -2.7722928524017334
    5. ' 
' → logprob: -4.522292613983154
    6. '<|end|>' → logprob: -4.897292613983154
    7. '     
' → logprob: -5.147292613983154
    8. 'total' → logprob: -5.522292613983154
    9. '   ' → logprob: -5.647292613983154
    10. 'if' (adapté à ' if') → logprob: -6.022292613983154

Token 54: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6633719205856323
    2. ' input' → logprob: -1.2883719205856323
    3. ' total' → logprob: -1.6633719205856323
    4. 'total' → logprob: -4.663372039794922
    5. 'input' → logprob: -4.788372039794922
    6. ' (' → logprob: -6.788372039794922
    7. ' not' → logprob: -7.913372039794922
    8. ' space' → logprob: -9.538372039794922
    9. ' ' → logprob: -9.663372039794922
    10. ' output' → logprob: -10.538372039794922

Token 55: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.3199920178740285e-05
    2. '_' → logprob: -12.250022888183594
    3. '_count' → logprob: -12.375022888183594
    4. ' _' → logprob: -12.500022888183594
    5. ')_' → logprob: -13.375022888183594
    6. '_lists' → logprob: -13.500022888183594
    7. '```' → logprob: -13.625022888183594
    8. '_lst' → logprob: -14.000022888183594
    9. '[_' → logprob: -14.000022888183594
    10. '_li' → logprob: -14.500022888183594

Token 56: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.1299639195203781
    2. '_a' → logprob: -2.1299638748168945
    3. '_c' → logprob: -6.1299638748168945
    4. '```' → logprob: -8.004963874816895
    5. '[_' → logprob: -8.504963874816895
    6. '_' → logprob: -9.379963874816895
    7. '"_' → logprob: -10.004963874816895
    8. ' _' → logprob: -10.379963874816895
    9. '[' → logprob: -10.504963874816895
    10. '__' → logprob: -10.879963874816895

Token 57: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.16073919832706451
    2. '[' → logprob: -1.9107391834259033
    3. ' [' → logprob: -7.910739421844482
    4. '[in' → logprob: -10.535738945007324
    5. '[input' → logprob: -10.660738945007324
    6. '==' → logprob: -11.285738945007324
    7. ' ==' → logprob: -11.285738945007324
    8. '```' → logprob: -11.660738945007324
    9. '[i' → logprob: -11.785738945007324
    10. ' ' → logprob: -12.035738945007324

Token 58: ' +' (ID: 659)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.20104028284549713
    2. '>' → logprob: -2.701040267944336
    3. ' <' → logprob: -3.451040267944336
    4. '<' → logprob: -3.826040267944336
    5. ' >' → logprob: -4.326040267944336
    6. ' ' → logprob: -4.576040267944336
    7. '==' → logprob: -4.576040267944336
    8. ' ]' → logprob: -5.201040267944336
    9. ' ==' → logprob: -5.201040267944336
    10. ' <=' → logprob: -5.326040267944336

Token 59: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001237252727150917
    2. ' ' → logprob: -6.751237392425537
    3. ']' → logprob: -10.001236915588379
    4. '```' → logprob: -12.126236915588379
    5. '   ' → logprob: -12.751236915588379
    6. ')' → logprob: -12.876236915588379
    7. ' ]' → logprob: -13.001236915588379
    8. '<|end|>' → logprob: -13.126236915588379
    9. '2' → logprob: -13.501236915588379
    10. '`' → logprob: -13.876236915588379

Token 60: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043448375072330236
    2. ']' → logprob: -8.250434875488281
    3. '0' → logprob: -9.000434875488281
    4. ' ' → logprob: -10.125434875488281
    5. ')' → logprob: -12.750434875488281
    6. '   ' → logprob: -13.250434875488281
    7. '```' → logprob: -13.750434875488281
    8. '+' → logprob: -14.125434875488281
    9. '2' → logprob: -14.250434875488281
    10. ']==' → logprob: -14.750434875488281

Token 61: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.0944677591323853
    2. ' -' → logprob: -1.7194677591323853
    3. ' ]' → logprob: -1.8444677591323853
    4. ' ==' → logprob: -1.9694677591323853
    5. ' ' → logprob: -2.4694676399230957
    6. ' >' → logprob: -2.8444676399230957
    7. '>' → logprob: -4.344467639923096
    8. '==' → logprob: -4.844467639923096
    9. '-' → logprob: -5.219467639923096
    10. ' <=' → logprob: -5.469467639923096

Token 62: ' -' (ID: 533)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.7349555492401123
    2. ' -' → logprob: -1.7349555492401123
    3. ' ==' → logprob: -1.7349555492401123
    4. '>' → logprob: -2.4849555492401123
    5. ' <' → logprob: -3.7349555492401123
    6. ' <=' → logprob: -3.9849555492401123
    7. '==' → logprob: -4.359955787658691
    8. '-' → logprob: -4.609955787658691
    9. '<' → logprob: -4.984955787658691
    10. ' >=' → logprob: -4.984955787658691

Token 63: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2813975214958191
    2. ' input' → logprob: -1.4063975811004639
    3. '1' → logprob: -9.406397819519043
    4. '	input' → logprob: -10.031397819519043
    5. '=input' → logprob: -10.156397819519043
    6. ' ' → logprob: -10.406397819519043
    7. '  ' → logprob: -11.406397819519043
    8. '   ' → logprob: -12.031397819519043
    9. '(input' → logprob: -12.156397819519043
    10. '<|end|>' → logprob: -12.156397819519043

Token 64: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -1.318681188422488e-05
    2. '_' → logprob: -12.12501335144043
    3. 'list' → logprob: -12.62501335144043
    4. '_count' → logprob: -13.37501335144043
    5. 'List' → logprob: -13.75001335144043
    6. '[' → logprob: -14.12501335144043
    7. '[_' → logprob: -15.25001335144043
    8. '>' → logprob: -16.87501335144043
    9. ']' → logprob: -16.87501335144043
    10. '   ' → logprob: -16.87501335144043

Token 65: '_a' (ID: 10852)
  Prédit: '_a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_a' → logprob: -0.00022976152831688523
    2. 'a' → logprob: -9.750229835510254
    3. '_b' → logprob: -9.875229835510254
    4. '_c' → logprob: -10.125229835510254
    5. '_' → logprob: -10.875229835510254
    6. '```' → logprob: -10.875229835510254
    7. '[' → logprob: -11.000229835510254
    8. '[index' → logprob: -11.250229835510254
    9. '[_' → logprob: -12.375229835510254
    10. '_[' → logprob: -12.500229835510254

Token 66: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0008189192740246654
    2. '[' → logprob: -7.125818729400635
    3. 'index' → logprob: -11.625819206237793
    4. '[in' → logprob: -12.875819206237793
    5. '```' → logprob: -13.875819206237793
    6. '[ind' → logprob: -14.625819206237793
    7. ' [' → logprob: -14.875819206237793
    8. '[input' → logprob: -15.250819206237793
    9. '[user' → logprob: -15.500819206237793
    10. ' index' → logprob: -15.625819206237793

Token 67: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5979901552200317
    2. '>' → logprob: -1.3479901552200317
    3. ' ==' → logprob: -2.597990036010742
    4. ' <=' → logprob: -3.097990036010742
    5. ')' → logprob: -3.847990036010742
    6. '==' → logprob: -4.222990036010742
    7. ' <' → logprob: -4.347990036010742
    8. ' ' → logprob: -4.472990036010742
    9. '<=' → logprob: -5.847990036010742
    10. ' !=' → logprob: -5.972990036010742

Token 68: ' ==' (ID: 951)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.075203776359558
    2. ' <' → logprob: -1.700203776359558
    3. '>' → logprob: -1.825203776359558
    4. '<' → logprob: -2.4502038955688477
    5. ' ==' → logprob: -2.4502038955688477
    6. ' <=' → logprob: -2.4502038955688477
    7. '<=' → logprob: -4.075203895568848
    8. '==' → logprob: -4.075203895568848
    9. ' >=' → logprob: -4.450203895568848
    10. ' !=' → logprob: -5.450203895568848

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.20465826988220215
    2. ' ' → logprob: -1.7046582698822021
    3. 'input' → logprob: -6.204658508300781
    4. ' input' → logprob: -8.204658508300781
    5. '2' → logprob: -8.704658508300781
    6. '100' → logprob: -8.704658508300781
    7. '0' → logprob: -8.704658508300781
    8. '  ' → logprob: -9.454658508300781
    9. '10' → logprob: -9.829658508300781
    10. '>' → logprob: -10.329658508300781

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0011050907196477056
    2. 'input' → logprob: -8.001105308532715
    3. ' ' → logprob: -8.251105308532715
    4. '0' → logprob: -8.751105308532715
    5. '2' → logprob: -9.001105308532715
    6. '400' → logprob: -9.876105308532715
    7. '10' → logprob: -9.876105308532715
    8. '100' → logprob: -10.001105308532715
    9. '864' → logprob: -11.501105308532715
    10. '3' → logprob: -12.001105308532715

Token 71: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008556773886084557
    2. ' and' → logprob: -5.133556842803955
    3. ' :' → logprob: -6.008556842803955
    4. ':
' → logprob: -9.383556365966797
    5. 'and' → logprob: -10.008556365966797
    6. '):' → logprob: -11.133556365966797
    7. '：' → logprob: -12.383556365966797
    8. '   ' → logprob: -12.633556365966797
    9. ' ' → logprob: -12.883556365966797
    10. '    ' → logprob: -13.133556365966797

Token 72: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013092822395265102
    2. ':' → logprob: -4.888092994689941
    3. '   ' → logprob: -5.638092994689941
    4. ' and' → logprob: -6.763092994689941
    5. ',' → logprob: -8.763092994689941
    6. '<|end|>' → logprob: -8.763092994689941
    7. '    ' → logprob: -9.263092994689941
    8. '	   ' → logprob: -9.888092994689941
    9. ' ' → logprob: -10.013092994689941
    10. ' total' → logprob: -10.013092994689941

Token 73: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.6375022530555725
    2. 'total' (adapté à ' total') → logprob: -0.7625022530555725
    3. ' ' → logprob: -6.762502193450928
    4. '    ' → logprob: -6.887502193450928
    5. '   ' → logprob: -7.387502193450928
    6. '       ' → logprob: -7.887502193450928
    7. '	total' → logprob: -7.887502193450928
    8. ' if' → logprob: -8.012502670288086
    9. '           ' → logprob: -8.262502670288086
    10. 'if' → logprob: -8.637502670288086

Token 74: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0012974964920431376
    2. '_' → logprob: -6.751297473907471
    3. ' +=' → logprob: -9.751297950744629
    4. '+' → logprob: -10.501297950744629
    5. '+=' → logprob: -10.876297950744629
    6. ' _' → logprob: -11.626297950744629
    7. '_add' → logprob: -12.376297950744629
    8. '_s' → logprob: -12.626297950744629
    9. '__' → logprob: -14.251297950744629
    10. ' ' → logprob: -14.376297950744629

Token 75: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2256331592798233
    2. '+=' → logprob: -1.600633144378662
    3. '+' → logprob: -8.85063362121582
    4. ']+=' → logprob: -10.60063362121582
    5. ' +' → logprob: -10.85063362121582
    6. '+=(' → logprob: -11.60063362121582
    7. ' *=' → logprob: -11.97563362121582
    8. '=' → logprob: -12.22563362121582
    9. ' -=' → logprob: -12.47563362121582
    10. '```' → logprob: -13.47563362121582

Token 76: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -9.125203132629395
    3. 'min' → logprob: -10.000203132629395
    4. '(input' → logprob: -10.750203132629395
    5. 'max' → logprob: -11.250203132629395
    6. 'int' → logprob: -12.750203132629395
    7. '100' → logprob: -12.875203132629395
    8. '10' → logprob: -13.125203132629395
    9. '   ' → logprob: -14.000203132629395
    10. '2' → logprob: -14.125203132629395

Token 77: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -2.463036435074173e-05
    2. 'list' → logprob: -10.875024795532227
    3. 'List' → logprob: -13.250024795532227
    4. '[' → logprob: -14.375024795532227
    5. '_count' → logprob: -14.375024795532227
    6. '_' → logprob: -14.625024795532227
    7. '   ' → logprob: -15.125024795532227
    8. '```' → logprob: -15.250024795532227
    9. '[_' → logprob: -15.375024795532227
    10. ' list' → logprob: -15.625024795532227

Token 78: '_c' (ID: 1303)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0700928196310997
    2. '_c' → logprob: -2.6950929164886475
    3. '_a' → logprob: -9.695093154907227
    4. '```' → logprob: -9.695093154907227
    5. 'b' → logprob: -11.445093154907227
    6. '[' → logprob: -12.070093154907227
    7. '`' → logprob: -12.945093154907227
    8. '"_' → logprob: -13.195093154907227
    9. '[_' → logprob: -13.445093154907227
    10. 'c' → logprob: -13.570093154907227

Token 79: '[input' (ID: 157156)
  Prédit: '[index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.001938750152476132
    2. '[' → logprob: -6.251938819885254
    3. 'index' → logprob: -12.501938819885254
    4. ' [' → logprob: -13.376938819885254
    5. '[in' → logprob: -13.876938819885254
    6. '[ind' → logprob: -14.126938819885254
    7. '```' → logprob: -14.251938819885254
    8. '[Index' → logprob: -14.251938819885254
    9. '[input' → logprob: -14.501938819885254
    10. '[token' → logprob: -15.376938819885254

Token 80: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.06221303343772888
    2. 'index' → logprob: -3.6872129440307617
    3. '_count' → logprob: -3.8122129440307617
    4. 'list' → logprob: -4.937212944030762
    5. '[index' → logprob: -5.812212944030762
    6. 'count' → logprob: -6.937212944030762
    7. '[' → logprob: -8.187212944030762
    8. 'user' → logprob: -8.437212944030762
    9. ']' → logprob: -8.687212944030762
    10. 'List' → logprob: -8.687212944030762

Token 81: '_a' (ID: 10852)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.9396481513977051
    2. '[index' → logprob: -1.314648151397705
    3. 'index' → logprob: -1.439648151397705
    4. '_count' → logprob: -3.814648151397705
    5. '_a' → logprob: -3.814648151397705
    6. 'b' → logprob: -4.689648151397705
    7. '[' → logprob: -4.814648151397705
    8. 'a' → logprob: -4.939648151397705
    9. ']' → logprob: -5.314648151397705
    10. 's' → logprob: -5.439648151397705

Token 82: '[index' (ID: 11815)
  Prédit: '[index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[index' → logprob: -0.0004107732092961669
    2. 'index' → logprob: -7.875410556793213
    3. '[' → logprob: -10.500411033630371
    4. ' index' → logprob: -14.125411033630371
    5. ']' → logprob: -14.375411033630371
    6. '```' → logprob: -14.750411033630371
    7. '[
' → logprob: -15.500411033630371
    8. '	index' → logprob: -15.625411033630371
    9. '[user' → logprob: -16.000410079956055
    10. '_index' → logprob: -16.125410079956055

Token 83: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5628767609596252
    2. '+' → logprob: -1.1878767013549805
    3. ' +' → logprob: -2.4378767013549805
    4. ']+' → logprob: -3.8128767013549805
    5. '[index' → logprob: -5.6878767013549805
    6. '   ' → logprob: -5.8128767013549805
    7. ' ]' → logprob: -5.8128767013549805
    8. '])' → logprob: -5.9378767013549805
    9. ']]' → logprob: -6.5628767013549805
    10. ')]' → logprob: -7.0628767013549805

Token 84: ' -' (ID: 533)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014195004478096962
    2. '+' → logprob: -5.014194965362549
    3. ' ]' → logprob: -5.514194965362549
    4. '-' → logprob: -6.139194965362549
    5. ' -' → logprob: -7.139194965362549
    6. ' +' → logprob: -8.014195442199707
    7. ']+' → logprob: -10.389195442199707
    8. ']-' → logprob: -10.389195442199707
    9. 'index' → logprob: -10.639195442199707
    10. '   ' → logprob: -10.889195442199707

Token 85: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004341261519584805
    2. ' ' → logprob: -7.750433921813965
    3. '１' → logprob: -14.000433921813965
    4. '2' → logprob: -14.312933921813965
    5. '   ' → logprob: -15.187933921813965
    6. '0' → logprob: -15.562933921813965
    7. '१' → logprob: -15.625433921813965
    8. '11' → logprob: -15.687933921813965
    9. '  ' → logprob: -15.687933921813965
    10. '۱' → logprob: -15.812933921813965

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014478032244369388
    2. ' ' → logprob: -8.875144958496094
    3. '2' → logprob: -13.375144958496094
    4. '   ' → logprob: -14.000144958496094
    5. '-' → logprob: -14.250144958496094
    6. '0' → logprob: -14.937644958496094
    7. '  ' → logprob: -15.375144958496094
    8. '１' → logprob: -15.562644958496094
    9. '11' → logprob: -15.562644958496094
    10. ' -' → logprob: -16.125144958496094

Token 87: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0060164909809827805
    2. ' ]' → logprob: -5.131016254425049
    3. ']*' → logprob: -10.381016731262207
    4. ')' → logprob: -11.256016731262207
    5. '<|end|>' → logprob: -11.881016731262207
    6. '       ' → logprob: -11.881016731262207
    7. '])' → logprob: -12.006016731262207
    8. '   ' → logprob: -12.131016731262207
    9. ']
' → logprob: -12.381016731262207
    10. ' ' → logprob: -12.881016731262207

Token 88: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 89: '(total' (ID: 39744)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004998447839170694
    2. '(total' → logprob: -5.379998683929443
    3. '('' → logprob: -8.254998207092285
    4. '("("' → logprob: -9.504998207092285
    5. ' (' → logprob: -10.754998207092285
    6. '()' → logprob: -11.254998207092285
    7. 'total' → logprob: -12.879998207092285
    8. '(
' → logprob: -13.629998207092285
    9. '(`' → logprob: -13.629998207092285
    10. '(

' → logprob: -14.379998207092285

Token 90: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -6.074907287256792e-05
    2. '_s' → logprob: -9.87506103515625
    3. '_' → logprob: -12.62506103515625
    4. 'sum' → logprob: -13.50006103515625
    5. '_total' → logprob: -13.50006103515625
    6. ')' → logprob: -13.87506103515625
    7. 's' → logprob: -14.00006103515625
    8. ')_' → logprob: -14.37506103515625
    9. ' _' → logprob: -15.25006103515625
    10. '_)' → logprob: -16.62506103515625

Token 91: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.750000953674316
    3. '))' → logprob: -16.375001907348633
    4. ')`' → logprob: -16.875001907348633
    5. ')
' → logprob: -17.000001907348633
    6. '`)' → logprob: -18.875001907348633
    7. '）' → logprob: -19.125001907348633
    8. '')' → logprob: -19.250001907348633
    9. '```' → logprob: -19.750001907348633
    10. '),' → logprob: -19.875001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 75
Précision stricte (1ère position): 42.70%
Précision adaptée (1ère position): 42.70%
Précision (top 10): 84.27%
================================================================================
