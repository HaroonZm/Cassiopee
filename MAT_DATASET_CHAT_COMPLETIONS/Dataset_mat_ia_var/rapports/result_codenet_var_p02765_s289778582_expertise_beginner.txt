================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:24:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n_r = input().split()
n = int(n_r[0])
r = int(n_r[1])

if n > 10:
    R = r
else:
    R = r + 100 * (10 - n)

print(R)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: '_r' (ID: 3442)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.040486227720975876
    2. '0' → logprob: -3.9154863357543945
    3. '1' → logprob: -4.9154863357543945
    4. '10' → logprob: -4.9154863357543945
    5. '5' → logprob: -5.6654863357543945
    6. '4' → logprob: -8.415486335754395
    7. ' np' → logprob: -8.415486335754395
    8. '2' → logprob: -8.665486335754395
    9. ' []' → logprob: -8.665486335754395
    10. ' int' → logprob: -8.915486335754395

Token 4: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.05623413994908333
    2. ''' → logprob: -3.181234121322632
    3. '"' → logprob: -4.556234359741211
    4. '('' → logprob: -6.681234359741211
    5. '_' → logprob: -7.431234359741211
    6. '[' → logprob: -8.306234359741211
    7. '(
' → logprob: -8.681234359741211
    8. '("("' → logprob: -9.431234359741211
    9. '`' → logprob: -9.806234359741211
    10. '```' → logprob: -10.306234359741211

Token 5: 'split' (ID: 13627)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3440491259098053
    2. '+' → logprob: -1.969049096107483
    3. '.strip' → logprob: -2.9690492153167725
    4. '_' → logprob: -3.0940492153167725
    5. ')' → logprob: -4.594048976898193
    6. ' ' → logprob: -4.719048976898193
    7. '*' → logprob: -5.094048976898193
    8. '\n' → logprob: -5.344048976898193
    9. '()' → logprob: -6.094048976898193
    10. '(' → logprob: -6.219048976898193

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006540587637573481
    2. '`' → logprob: -8.625654220581055
    3. '('' → logprob: -8.625654220581055
    4. '("("' → logprob: -9.250654220581055
    5. '()' → logprob: -10.000654220581055
    6. '(
' → logprob: -10.250654220581055
    7. '"' → logprob: -10.625654220581055
    8. '((' → logprob: -10.875654220581055
    9. '```' → logprob: -11.000654220581055
    10. '(

' → logprob: -11.125654220581055

Token 7: 'n' (ID: 77)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005380433984100819
    2. '[n' → logprob: -6.130380630493164
    3. '.' → logprob: -6.255380630493164
    4. '[int' → logprob: -8.005380630493164
    5. '=' → logprob: -8.255380630493164
    6. '```' → logprob: -8.630380630493164
    7. '\[' → logprob: -8.880380630493164
    8. '#' → logprob: -9.880380630493164
    9. 'n' → logprob: -10.130380630493164
    10. '[:]' → logprob: -10.130380630493164

Token 8: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.031043823808431625
    2. '_r' → logprob: -3.531043767929077
    3. '[' → logprob: -6.781044006347656
    4. '_[' → logprob: -9.906044006347656
    5. '[_' → logprob: -10.281044006347656
    6. '_n' → logprob: -10.906044006347656
    7. 'r' → logprob: -11.406044006347656
    8. '_s' → logprob: -11.531044006347656
    9. ' _' → logprob: -12.531044006347656
    10. '[]' → logprob: -12.906044006347656

Token 9: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.2525638937950134
    2. ' int' → logprob: -1.5025639533996582
    3. '[int' → logprob: -8.5025634765625
    4. 'len' → logprob: -8.6275634765625
    5. ' n' → logprob: -9.2525634765625
    6. 'n' → logprob: -10.2525634765625
    7. ' len' → logprob: -10.3775634765625
    8. 'list' → logprob: -10.6275634765625
    9. 'map' → logprob: -11.0025634765625
    10. ' ' → logprob: -11.2525634765625

Token 10: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14269426465034485
    2. '(n' → logprob: -2.0176942348480225
    3. '('' → logprob: -11.767694473266602
    4. '(_' → logprob: -13.767694473266602
    5. '(

' → logprob: -13.767694473266602
    6. '(
' → logprob: -13.892694473266602
    7. '("("' → logprob: -13.892694473266602
    8. '(r' → logprob: -14.017694473266602
    9. '()' → logprob: -14.017694473266602
    10. 'n' → logprob: -14.017694473266602

Token 11: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.0034735556691884995
    2. '[' → logprob: -5.75347375869751
    3. '[_' → logprob: -9.378473281860352
    4. '_' → logprob: -9.503473281860352
    5. '_[' → logprob: -10.003473281860352
    6. '_n' → logprob: -11.003473281860352
    7. '_)' → logprob: -11.253473281860352
    8. ')' → logprob: -11.503473281860352
    9. ')_' → logprob: -11.503473281860352
    10. '_s' → logprob: -12.003473281860352

Token 12: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.246537173457909e-06
    2. ')' → logprob: -13.250003814697266
    3. '[n' → logprob: -13.250003814697266
    4. '[
' → logprob: -15.000003814697266
    5. '\[' → logprob: -15.750003814697266
    6. ' [' → logprob: -16.250003814697266
    7. '```' → logprob: -17.125003814697266
    8. '   ' → logprob: -18.250003814697266
    9. ' ' → logprob: -18.625003814697266
    10. '[i' → logprob: -18.750003814697266

Token 13: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. '1' → logprob: -14.125000953674316
    3. ' ' → logprob: -14.875000953674316
    4. ')' → logprob: -17.250001907348633
    5. '])' → logprob: -18.500001907348633
    6. ']' → logprob: -19.500001907348633
    7. '```' → logprob: -20.000001907348633
    8. ''' → logprob: -20.500001907348633
    9. '۰' → logprob: -20.562501907348633
    10. '`' → logprob: -20.750001907348633

Token 14: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.002417749259620905
    2. ')' → logprob: -6.62741756439209
    3. ']' → logprob: -6.87741756439209
    4. '])
' → logprob: -10.37741756439209
    5. ' ])' → logprob: -11.25241756439209
    6. ''])' → logprob: -12.12741756439209
    7. ')]' → logprob: -13.12741756439209
    8. ')])' → logprob: -13.37741756439209
    9. '[' → logprob: -13.75241756439209
    10. '])

' → logprob: -14.37741756439209

Token 15: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.005650628358125687
    2. ' r' → logprob: -6.005650520324707
    3. ')' → logprob: -6.130650520324707
    4. '_r' → logprob: -7.380650520324707
    5. '<|end|>' → logprob: -9.130650520324707
    6. 'm' → logprob: -9.255650520324707
    7. 'n' → logprob: -9.755650520324707
    8. ' ' → logprob: -11.130650520324707
    9. '_' → logprob: -11.255650520324707
    10. '#' → logprob: -11.380650520324707

Token 16: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3812037706375122
    2. '=' → logprob: -1.5062037706375122
    3. '[' → logprob: -1.7562037706375122
    4. ')' → logprob: -2.1312036514282227
    5. ' =' → logprob: -2.1312036514282227
    6. '<|end|>' → logprob: -2.3812036514282227
    7. ' ' → logprob: -5.256203651428223
    8. '_space' → logprob: -5.381203651428223
    9. '.' → logprob: -5.881203651428223
    10. '[]' → logprob: -6.131203651428223

Token 17: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.20141851902008057
    2. ' int' → logprob: -1.7014185190200806
    3. ' n' → logprob: -12.57641887664795
    4. 'n' → logprob: -14.45141887664795
    5. ' ' → logprob: -14.45141887664795
    6. '=int' → logprob: -15.20141887664795
    7. '(int' → logprob: -15.82641887664795
    8. '0' → logprob: -16.701417922973633
    9. '[int' → logprob: -16.951417922973633
    10. '	int' → logprob: -16.951417922973633

Token 18: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.28713005781173706
    2. '(' → logprob: -1.4121301174163818
    3. '(r' → logprob: -5.162129878997803
    4. ' (' → logprob: -8.537130355834961
    5. '((' → logprob: -11.537130355834961
    6. '(s' → logprob: -12.287130355834961
    7. ''' → logprob: -13.287130355834961
    8. '()' → logprob: -13.412130355834961
    9. ' ' → logprob: -13.412130355834961
    10. 'r' → logprob: -13.537130355834961

Token 19: '_r' (ID: 3442)
  Prédit: '_r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_r' → logprob: -0.001852131332270801
    2. '[' → logprob: -6.376852035522461
    3. ')' → logprob: -10.001852035522461
    4. '_' → logprob: -10.376852035522461
    5. '[_' → logprob: -10.501852035522461
    6. '```' → logprob: -11.251852035522461
    7. 'r' → logprob: -11.501852035522461
    8. '-' → logprob: -12.501852035522461
    9. ')_' → logprob: -12.876852035522461
    10. ' _' → logprob: -13.251852035522461

Token 20: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '1' → logprob: -13.500004768371582
    3. '```' → logprob: -14.000004768371582
    4. ')' → logprob: -14.125004768371582
    5. ' [' → logprob: -14.125004768371582
    6. '[
' → logprob: -15.750004768371582
    7. ')[' → logprob: -16.250003814697266
    8. '])' → logprob: -16.375003814697266
    9. '][' → logprob: -16.625003814697266
    10. '   ' → logprob: -16.875003814697266

Token 21: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3902033970225602e-05
    2. '])' → logprob: -11.625014305114746
    3. '0' → logprob: -12.375014305114746
    4. ' ' → logprob: -15.000014305114746
    5. ')' → logprob: -15.750014305114746
    6. ']' → logprob: -16.37501335144043
    7. '```' → logprob: -16.37501335144043
    8. ')]' → logprob: -18.12501335144043
    9. '+' → logprob: -18.25001335144043
    10. '2' → logprob: -18.37501335144043

Token 22: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. '')' → logprob: -15.500000953674316
    3. ']' → logprob: -15.625000953674316
    4. ' )' → logprob: -16.0
    5. '))' → logprob: -16.125
    6. '`)' → logprob: -16.125
    7. '）' → logprob: -17.5
    8. '[' → logprob: -17.75
    9. '])' → logprob: -17.875
    10. ')
' → logprob: -18.125

Token 23: 'if' (ID: 366)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.7032781839370728
    2. 'n' → logprob: -1.7032781839370728
    3. 'i' → logprob: -2.453278064727783
    4. 'a' → logprob: -2.453278064727783
    5. 'm' → logprob: -2.953278064727783
    6. 'c' → logprob: -2.953278064727783
    7. '#' → logprob: -3.078278064727783
    8. 'p' → logprob: -3.078278064727783
    9. 'result' → logprob: -3.203278064727783
    10. 's' → logprob: -3.328278064727783

Token 24: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.44458797574043274
    2. ' r' → logprob: -1.1945879459381104
    3. 'n' → logprob: -3.6945879459381104
    4. ' ' → logprob: -3.6945879459381104
    5. 'r' → logprob: -5.1945881843566895
    6. ' ' → logprob: -7.9445881843566895
    7. ' (' → logprob: -8.694587707519531
    8. '(' → logprob: -9.694587707519531
    9. ''' → logprob: -9.819587707519531
    10. ' a' → logprob: -9.944587707519531

Token 25: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14783598482608795
    2. ' >=' → logprob: -2.5228359699249268
    3. '>' → logprob: -3.3978359699249268
    4. ' ' → logprob: -4.522836208343506
    5. ' <=' → logprob: -5.022836208343506
    6. ' <' → logprob: -6.022836208343506
    7. ' ==' → logprob: -6.397836208343506
    8. '>=' → logprob: -6.647836208343506
    9. '<' → logprob: -8.522835731506348
    10. '%' → logprob: -8.772835731506348

Token 26: ' ' (ID: 220)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.3088529407978058
    2. 'r' → logprob: -1.4338529109954834
    3. ' ' → logprob: -4.3088531494140625
    4. '0' → logprob: -4.6838531494140625
    5. '=' → logprob: -5.4338531494140625
    6. '=r' → logprob: -9.433853149414062
    7. '10' → logprob: -9.933853149414062
    8. '1' → logprob: -10.308853149414062
    9. '20' → logprob: -11.308853149414062
    10. '5' → logprob: -11.558853149414062

Token 27: '10' (ID: 702)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0028057026211172342
    2. '0' → logprob: -6.252805709838867
    3. '10' → logprob: -8.377805709838867
    4. '1' → logprob: -8.627805709838867
    5. ' r' → logprob: -8.752805709838867
    6. '100' → logprob: -9.877805709838867
    7. '20' → logprob: -10.127805709838867
    8. '=' → logprob: -10.252805709838867
    9. '5' → logprob: -10.752805709838867
    10. '12' → logprob: -11.127805709838867

Token 28: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0023088154848665
    2. ' :' → logprob: -6.2523088455200195
    3. ' and' → logprob: -8.12730884552002
    4. '>' → logprob: -10.37730884552002
    5. 'and' → logprob: -10.62730884552002
    6. ':**' → logprob: -11.87730884552002
    7. ' ' → logprob: -12.50230884552002
    8. ' or' → logprob: -12.50230884552002
    9. '.' → logprob: -12.75230884552002
    10. ' >' → logprob: -13.00230884552002

Token 29: '   ' (ID: 271)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.6664957404136658
    2. ' ' → logprob: -1.7914958000183105
    3. ' 
' → logprob: -2.4164958000183105
    4. '\' → logprob: -2.7914958000183105
    5. '   ' → logprob: -2.7914958000183105
    6. ':' → logprob: -3.7914958000183105
    7. 'n' → logprob: -4.2914958000183105
    8. '    ' → logprob: -4.5414958000183105
    9. '    
' → logprob: -4.5414958000183105
    10. ' \' → logprob: -4.6664958000183105

Token 30: ' R' (ID: 460)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.849282443523407
    2. ' print' → logprob: -0.974282443523407
    3. 'print' → logprob: -3.2242825031280518
    4. ' n' → logprob: -3.2242825031280518
    5. 'r' → logprob: -3.3492825031280518
    6. ' r' → logprob: -3.7242825031280518
    7. ' 
' → logprob: -3.9742825031280518
    8. 'n' → logprob: -4.099282264709473
    9. '    ' → logprob: -5.224282264709473
    10. ' \' → logprob: -6.099282264709473

Token 31: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.18733684718608856
    2. ' =' → logprob: -2.1873369216918945
    3. 'r' → logprob: -4.1873369216918945
    4. ' +=' → logprob: -4.8123369216918945
    5. '_' → logprob: -5.1873369216918945
    6. '+=' → logprob: -5.3123369216918945
    7. ':' → logprob: -5.5623369216918945
    8. '>' → logprob: -5.8123369216918945
    9. ' ' → logprob: -5.9373369216918945
    10. 'print' → logprob: -6.1873369216918945

Token 32: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.7534795999526978
    2. ' n' → logprob: -1.2534795999526978
    3. ' ' → logprob: -2.253479480743408
    4. 'r' → logprob: -2.503479480743408
    5. 'n' → logprob: -3.628479480743408
    6. '100' → logprob: -5.003479480743408
    7. '10' → logprob: -5.003479480743408
    8. '"' → logprob: -5.378479480743408
    9. ' "' → logprob: -5.753479480743408
    10. ' True' → logprob: -5.878479480743408

Token 33: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1392507702112198
    2. '*' → logprob: -2.8892507553100586
    3. ' +' → logprob: -3.3892507553100586
    4. '>' → logprob: -4.764250755310059
    5. '**' → logprob: -4.889250755310059
    6. ' *' → logprob: -5.014250755310059
    7. '%' → logprob: -5.264250755310059
    8. ' ' → logprob: -5.764250755310059
    9. ' else' → logprob: -6.389250755310059
    10. ' **' → logprob: -6.639250755310059

Token 34: 'else' (ID: 2807)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3022136390209198
    2. '*' → logprob: -2.177213668823242
    3. 'else' → logprob: -2.677213668823242
    4. ' else' → logprob: -3.677213668823242
    5. ':' → logprob: -4.177213668823242
    6. '<|end|>' → logprob: -5.177213668823242
    7. '-' → logprob: -5.427213668823242
    8. '>' → logprob: -5.552213668823242
    9. 'elif' → logprob: -5.802213668823242
    10. '.' → logprob: -6.052213668823242

Token 35: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005698331515304744
    2. ' :' → logprob: -8.125570297241211
    3. '   ' → logprob: -8.375570297241211
    4. ':
' → logprob: -11.125570297241211
    5. '=' → logprob: -11.375570297241211
    6. ' R' → logprob: -12.500570297241211
    7. ' =' → logprob: -12.750570297241211
    8. '<|end|>' → logprob: -13.000570297241211
    9. 'r' → logprob: -13.500570297241211
    10. '  ' → logprob: -14.125570297241211

Token 36: '   ' (ID: 271)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -1.6341214179992676
    2. 'r' → logprob: -1.8841214179992676
    3. ' n' → logprob: -1.8841214179992676
    4. 'n' → logprob: -2.1341214179992676
    5. ' r' → logprob: -2.1341214179992676
    6. '0' → logprob: -2.5091214179992676
    7. ' ' → logprob: -2.7591214179992676
    8. '   ' → logprob: -3.0091214179992676
    9. ' R' → logprob: -3.2591214179992676
    10. 'R' → logprob: -3.6341214179992676

Token 37: ' R' (ID: 460)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -1.2589024305343628
    2. ' r' → logprob: -1.5089024305343628
    3. 'n' → logprob: -2.3839025497436523
    4. ' ' → logprob: -2.3839025497436523
    5. ' R' → logprob: -2.3839025497436523
    6. '10' → logprob: -2.5089025497436523
    7. 'r' → logprob: -2.5089025497436523
    8. '0' → logprob: -3.5089025497436523
    9. 'R' (adapté à ' R') → logprob: -3.7589025497436523
    10. '1' → logprob: -7.383902549743652

Token 38: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34849071502685547
    2. ' =' → logprob: -1.2234907150268555
    3. ' +=' → logprob: -10.598490715026855
    4. '+=' → logprob: -11.348490715026855
    5. ' ' → logprob: -13.223490715026855
    6. '=r' → logprob: -13.223490715026855
    7. ' *=' → logprob: -13.848490715026855
    8. '=int' → logprob: -14.348490715026855
    9. '+' → logprob: -14.473490715026855
    10. ')' → logprob: -14.598490715026855

Token 39: ' r' (ID: 428)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0111955404281616
    2. ' n' → logprob: -1.6361955404281616
    3. 'r' → logprob: -1.6361955404281616
    4. '0' → logprob: -2.386195659637451
    5. ' r' → logprob: -2.511195659637451
    6. '10' → logprob: -3.386195659637451
    7. ' ' → logprob: -3.511195659637451
    8. '1' → logprob: -5.136195659637451
    9. '5' → logprob: -6.136195659637451
    10. '2' → logprob: -7.511195659637451

Token 40: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3500537872314453
    2. '<|end|>' → logprob: -1.3500537872314453
    3. '*' → logprob: -4.475053787231445
    4. ' ' → logprob: -4.600053787231445
    5. ' +' → logprob: -5.350053787231445
    6. '-' → logprob: -5.600053787231445
    7. '
' → logprob: -6.850053787231445
    8. '<|end|>' → logprob: -6.975053787231445
    9. '```' → logprob: -7.100053787231445
    10. '%' → logprob: -7.225053787231445

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2577187418937683
    2. '10' → logprob: -2.507718801498413
    3. '5' → logprob: -2.632718801498413
    4. ' ' → logprob: -3.132718801498413
    5. '2' → logprob: -4.007718563079834
    6. '3' → logprob: -5.632718563079834
    7. 'n' → logprob: -5.882718563079834
    8. ' n' → logprob: -6.007718563079834
    9. '4' → logprob: -7.132718563079834
    10. '20' → logprob: -7.507718563079834

Token 42: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.8976554274559021
    2. '5' → logprob: -0.8976554274559021
    3. '10' → logprob: -2.147655487060547
    4. '2' → logprob: -3.147655487060547
    5. 'n' → logprob: -4.522655487060547
    6. '3' → logprob: -5.022655487060547
    7. '20' → logprob: -6.522655487060547
    8. '4' → logprob: -6.897655487060547
    9. ' ' → logprob: -7.022655487060547
    10. '100' → logprob: -7.147655487060547

Token 43: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.900197446346283
    2. '<|end|>' → logprob: -1.1501975059509277
    3. '\n' → logprob: -2.0251975059509277
    4. '*' → logprob: -2.5251975059509277
    5. '0' → logprob: -4.150197505950928
    6. '#' → logprob: -4.525197505950928
    7. 'print' → logprob: -4.650197505950928
    8. '```' → logprob: -5.025197505950928
    9. '+' → logprob: -5.275197505950928
    10. ')' → logprob: -5.275197505950928

Token 44: ' (' (ID: 350)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.1465696096420288
    2. '(n' → logprob: -3.0215697288513184
    3. '(' → logprob: -3.3965697288513184
    4. '0' → logprob: -4.021569728851318
    5. ' n' → logprob: -4.646569728851318
    6. 'r' → logprob: -4.771569728851318
    7. '2' → logprob: -4.896569728851318
    8. '10' → logprob: -5.896569728851318
    9. ' (' → logprob: -5.896569728851318
    10. ' ' → logprob: -6.521569728851318

Token 45: '10' (ID: 702)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.467026948928833
    2. 'n' → logprob: -1.342026948928833
    3. '(n' → logprob: -2.342026948928833
    4. '10' → logprob: -4.967026710510254
    5. ' (' → logprob: -5.467026710510254
    6. ' n' → logprob: -6.092026710510254
    7. '1' → logprob: -6.842026710510254
    8. '0' → logprob: -8.217026710510254
    9. '2' → logprob: -8.217026710510254
    10. '   ' → logprob: -9.092026710510254

Token 46: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.43293505907058716
    2. '-n' → logprob: -1.4329349994659424
    3. '-' → logprob: -2.1829349994659424
    4. '-r' → logprob: -9.557934761047363
    5. ' ' → logprob: -12.557934761047363
    6. '0' → logprob: -12.557934761047363
    7. '-N' → logprob: -15.307934761047363
    8. '-num' → logprob: -15.307934761047363
    9. ' n' → logprob: -15.682934761047363
    10. '-R' → logprob: -15.807934761047363

Token 47: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2519405782222748
    2. ' n' → logprob: -1.5019406080245972
    3. '	n' → logprob: -11.626940727233887
    4. ' ' → logprob: -13.876940727233887
    5. '   ' → logprob: -14.376940727233887
    6. ')n' → logprob: -15.126940727233887
    7. '(n' → logprob: -15.501940727233887
    8. ')' → logprob: -15.751940727233887
    9. ' (' → logprob: -16.25193977355957
    10. '_n' → logprob: -16.50193977355957

Token 48: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.047134305234067e-05
    2. ' )' → logprob: -10.625030517578125
    3. ')
' → logprob: -13.000030517578125
    4. '))' → logprob: -13.125030517578125
    5. '   ' → logprob: -15.375030517578125
    6. '0' → logprob: -15.625030517578125
    7. ')))' → logprob: -15.750030517578125
    8. ')}' → logprob: -15.750030517578125
    9. '+' → logprob: -16.000030517578125
    10. ')`' → logprob: -16.000030517578125

Token 49: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.089962899684906
    2. ')' → logprob: -3.964962959289551
    3. '#' → logprob: -4.089962959289551
    4. '<|end|>' → logprob: -4.089962959289551
    5. '*' → logprob: -4.714962959289551
    6. '
' → logprob: -4.839962959289551
    7. 'n' → logprob: -5.339962959289551
    8. 'r' → logprob: -5.589962959289551
    9. '+' → logprob: -6.339962959289551
    10. '\n' → logprob: -6.714962959289551

Token 50: '(R' (ID: 4092)
  Prédit: '(R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(R' → logprob: -0.5760044455528259
    2. '(' → logprob: -0.8260044455528259
    3. '()' → logprob: -10.451004028320312
    4. '('' → logprob: -10.951004028320312
    5. '((' → logprob: -11.576004028320312
    6. '(max' → logprob: -13.701004028320312
    7. '(sum' → logprob: -13.826004028320312
    8. '(round' → logprob: -13.826004028320312
    9. '(r' → logprob: -14.076004028320312
    10. '("' → logprob: -14.076004028320312

Token 51: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. '))' → logprob: -13.500001907348633
    3. ' )' → logprob: -16.625001907348633
    4. ')`' → logprob: -17.750001907348633
    5. '')' → logprob: -18.375001907348633
    6. ')))' → logprob: -19.375001907348633
    7. ')
' → logprob: -19.625001907348633
    8. ')}' → logprob: -19.875001907348633
    9. ')**' → logprob: -20.625001907348633
    10. '`)' → logprob: -20.750001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 49
Tokens correctement prédits (1ère position, stricte): 15
Tokens correctement prédits (1ère position, avec adaptation): 15
Tokens correctement prédits (top 10): 37
Précision stricte (1ère position): 30.61%
Précision adaptée (1ère position): 30.61%
Précision (top 10): 75.51%
================================================================================
