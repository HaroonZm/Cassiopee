================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W = map(int, input().split())
a = [list(map(int, input().split())) for _ in range(H)]
move = []
for i in range(H):
    for j in range(W):
        if a[i][j] % 2 == 1:
            if j < W-1:
                move.append([i, j, i, j+1])
                a[i][j+1] += 1
            elif i < H-1:
                move.append([i, j, i+1, j])
                a[i+1][j] += 1
print(len(move))
for x, y, x2, y2 in move:
    print(x+1, y+1, x2+1, y2+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3957967460155487
    2. '=' → logprob: -1.145796775817871
    3. ' =' → logprob: -6.145796775817871
    4. '*' → logprob: -6.395796775817871
    5. ')' → logprob: -6.395796775817871
    6. ':' → logprob: -6.770796775817871
    7. '```' → logprob: -7.020796775817871
    8. '#' → logprob: -8.270796775817871
    9. ';' → logprob: -8.645796775817871
    10. '.' → logprob: -8.770796775817871

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.023654907941818237
    2. '32' → logprob: -5.273654937744141
    3. ' map' → logprob: -5.898654937744141
    4. '100' → logprob: -6.398654937744141
    5. ' img' → logprob: -6.398654937744141
    6. ' image' → logprob: -6.523654937744141
    7. '224' → logprob: -6.773654937744141
    8. '256' → logprob: -6.773654937744141
    9. '128' → logprob: -6.898654937744141
    10. '64' → logprob: -6.898654937744141

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5343425869941711
    2. '(int' → logprob: -1.0343425273895264
    3. '(str' → logprob: -3.5343425273895264
    4. '(lambda' → logprob: -3.7843425273895264
    5. '<|end|>' → logprob: -6.2843427658081055
    6. '(input' → logprob: -7.5343427658081055
    7. ')' → logprob: -7.5343427658081055
    8. '(len' → logprob: -7.5343427658081055
    9. '(range' → logprob: -7.6593427658081055
    10. '```' → logprob: -7.6593427658081055

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.007321577984839678
    2. ')' → logprob: -5.757321357727051
    3. 'input' → logprob: -6.257321357727051
    4. '(' → logprob: -6.257321357727051
    5. '[input' → logprob: -9.88232135772705
    6. '(int' → logprob: -10.00732135772705
    7. '(str' → logprob: -10.38232135772705
    8. '(raw' → logprob: -10.63232135772705
    9. ' input' → logprob: -10.75732135772705
    10. '```' → logprob: -11.00732135772705

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.06200723350048065
    2. ' input' → logprob: -2.812007188796997
    3. '(input' → logprob: -10.187006950378418
    4. ',input' → logprob: -13.812006950378418
    5. ')' → logprob: -14.312006950378418
    6. '=input' → logprob: -16.187007904052734
    7. '[input' → logprob: -16.687007904052734
    8. '<input' → logprob: -16.812007904052734
    9. '```' → logprob: -17.062007904052734
    10. '	input' → logprob: -17.312007904052734

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.7184149026870728
    2. '())' → logprob: -1.0934149026870728
    3. '(' → logprob: -2.093414783477783
    4. '()>' → logprob: -3.968414783477783
    5. '('' → logprob: -5.093414783477783
    6. '().' → logprob: -5.218414783477783
    7. '`()' → logprob: -5.343414783477783
    8. ')' → logprob: -5.343414783477783
    9. '()">' → logprob: -5.593414783477783
    10. '(""))' → logprob: -6.093414783477783

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0001761272142175585
    2. 'strip' → logprob: -8.750176429748535
    3. ')' → logprob: -11.375176429748535
    4. ' split' → logprob: -12.375176429748535
    5. 'rstrip' → logprob: -13.875176429748535
    6. 'read' → logprob: -14.250176429748535
    7. '(split' → logprob: -15.500176429748535
    8. 'spl' → logprob: -16.25017547607422
    9. 'startswith' → logprob: -17.62517547607422
    10. '```' → logprob: -18.12517547607422

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.028988929465413094
    2. '())' → logprob: -4.153988838195801
    3. '))' → logprob: -4.403988838195801
    4. '()' → logprob: -8.5289888381958
    5. '`)' → logprob: -8.6539888381958
    6. '(' → logprob: -9.0289888381958
    7. '')' → logprob: -10.2789888381958
    8. '('' → logprob: -10.2789888381958
    9. '()))' → logprob: -10.4039888381958
    10. ')`' → logprob: -11.5289888381958

Token 11: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.567688524723053
    2. 'x' → logprob: -1.3176884651184082
    3. ',' → logprob: -2.942688465118408
    4. 'h' → logprob: -3.817688465118408
    5. '#' → logprob: -4.067688465118408
    6. 'height' → logprob: -4.067688465118408
    7. 'for' → logprob: -4.692688465118408
    8. 'n' → logprob: -4.692688465118408
    9. '```' → logprob: -4.942688465118408
    10. '`' → logprob: -5.317688465118408

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.14660853147506714
    2. 'rray' → logprob: -2.771608591079712
    3. 'rr' → logprob: -3.646608591079712
    4. '[i' → logprob: -4.146608352661133
    5. ' =' → logprob: -5.021608352661133
    6. '[r' → logprob: -5.146608352661133
    7. '=' → logprob: -5.396608352661133
    8. '[a' → logprob: -5.646608352661133
    9. 'r' → logprob: -5.896608352661133
    10. '[]' → logprob: -6.021608352661133

Token 13: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.5407447814941406
    2. '[' → logprob: -1.6657447814941406
    3. '[list' → logprob: -1.6657447814941406
    4. '[]' → logprob: -1.7907447814941406
    5. 'list' → logprob: -1.7907447814941406
    6. ' []' → logprob: -3.6657447814941406
    7. '[a' → logprob: -3.9157447814941406
    8. ' list' → logprob: -4.540744781494141
    9. '[int' → logprob: -4.540744781494141
    10. '[input' → logprob: -5.290744781494141

Token 14: 'list' (ID: 2641)
  Prédit: 'list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -5.967624019831419e-05
    2. ' list' → logprob: -10.875060081481934
    3. 'map' → logprob: -11.000060081481934
    4. '[]' → logprob: -11.250060081481934
    5. '[list' → logprob: -11.625060081481934
    6. '[int' → logprob: -14.375060081481934
    7. 'int' → logprob: -14.375060081481934
    8. '(list' → logprob: -14.625060081481934
    9. '[' → logprob: -15.500060081481934
    10. 'tuple' → logprob: -15.875060081481934

Token 15: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0018836578819900751
    2. '(' → logprob: -6.751883506774902
    3. '(int' → logprob: -7.251883506774902
    4. 'map' → logprob: -13.251883506774902
    5. '(input' → logprob: -14.001883506774902
    6. '()' → logprob: -14.626883506774902
    7. '(
' → logprob: -14.751883506774902
    8. '(eval' → logprob: -15.501883506774902
    9. ' map' → logprob: -15.626883506774902
    10. '(range' → logprob: -15.751883506774902

Token 16: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00016587569552939385
    2. '(' → logprob: -8.750165939331055
    3. 'int' → logprob: -12.750165939331055
    4. '<int' → logprob: -13.000165939331055
    5. '[int' → logprob: -14.625165939331055
    6. '=int' → logprob: -14.875165939331055
    7. '(
' → logprob: -15.125165939331055
    8. ',int' → logprob: -15.250165939331055
    9. '(str' → logprob: -15.375165939331055
    10. ']int' → logprob: -15.375165939331055

Token 17: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.9094796776771545
    2. ',' → logprob: -1.1594796180725098
    3. '(input' → logprob: -1.2844796180725098
    4. '(' → logprob: -5.03447961807251
    5. 'input' → logprob: -8.909480094909668
    6. ' ,' → logprob: -9.659480094909668
    7. ')' → logprob: -10.159480094909668
    8. ',int' → logprob: -10.909480094909668
    9. '(),' → logprob: -11.534480094909668
    10. '(int' → logprob: -11.784480094909668

Token 18: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.018151583150029182
    2. ' input' → logprob: -4.018151760101318
    3. '(input' → logprob: -14.01815128326416
    4. ',input' → logprob: -14.64315128326416
    5. ')' → logprob: -15.89315128326416
    6. 'list' → logprob: -16.393152236938477
    7. '=input' → logprob: -16.393152236938477
    8. '<input' → logprob: -17.268152236938477
    9. '_input' → logprob: -17.268152236938477
    10. '	input' → logprob: -17.393152236938477

Token 19: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.0445127372804563e-05
    2. '()' → logprob: -12.25001049041748
    3. ' ().' → logprob: -12.87501049041748
    4. '.' → logprob: -13.12501049041748
    5. ' .' → logprob: -14.75001049041748
    6. '.readline' → logprob: -15.62501049041748
    7. ')' → logprob: -16.125009536743164
    8. '(' → logprob: -16.500009536743164
    9. '()))' → logprob: -16.500009536743164
    10. '(.' → logprob: -17.250009536743164

Token 20: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.2664456789934775e-06
    2. ' split' → logprob: -14.375000953674316
    3. '(split' → logprob: -15.000000953674316
    4. 'rstrip' → logprob: -15.625000953674316
    5. 'strip' → logprob: -16.250001907348633
    6. 'spl' → logprob: -17.750001907348633
    7. 'plit' → logprob: -19.500001907348633
    8. '.split' → logprob: -20.125001907348633
    9. 's' → logprob: -20.625001907348633
    10. '_split' → logprob: -21.000001907348633

Token 21: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.003969643265008926
    2. '())' → logprob: -6.253969669342041
    3. '()' → logprob: -6.878969669342041
    4. '))' → logprob: -7.003969669342041
    5. '(' → logprob: -9.628969192504883
    6. '())))' → logprob: -11.253969192504883
    7. '()));' → logprob: -11.753969192504883
    8. '()))
' → logprob: -12.503969192504883
    9. '().' → logprob: -12.878969192504883
    10. ')' → logprob: -13.003969192504883

Token 22: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.49282097816467285
    2. '())' → logprob: -1.8678209781646729
    3. '(' → logprob: -2.117820978164673
    4. '()' → logprob: -2.617820978164673
    5. 'for' → logprob: -4.117820739746094
    6. ')]' → logprob: -4.367820739746094
    7. '()]' → logprob: -4.742820739746094
    8. ']' → logprob: -6.617820739746094
    9. ' for' → logprob: -6.742820739746094
    10. '(a' → logprob: -8.242820739746094

Token 23: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.2176087200641632
    2. '_' → logprob: -1.7176086902618408
    3. ' _' → logprob: -4.34260892868042
    4. ' ' → logprob: -6.84260892868042
    5. '(range' → logprob: -7.21760892868042
    6. '_range' → logprob: -7.46760892868042
    7. ' i' → logprob: -7.59260892868042
    8. 'range' → logprob: -9.217608451843262
    9. '(' → logprob: -10.342608451843262
    10. ' in' → logprob: -10.967608451843262

Token 24: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.021633252501487732
    2. ' range' → logprob: -4.271633148193359
    3. 'range' → logprob: -5.021633148193359
    4. 'in' → logprob: -7.146633148193359
    5. '(range' → logprob: -10.89663314819336
    6. '_' → logprob: -11.39663314819336
    7. '	range' → logprob: -11.64663314819336
    8. ' ' → logprob: -11.77163314819336
    9. '(' → logprob: -11.89663314819336
    10. '_range' → logprob: -12.89663314819336

Token 25: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.029753385111689568
    2. ' range' → logprob: -3.5297534465789795
    3. '	range' → logprob: -13.279753684997559
    4. '(range' → logprob: -14.904753684997559
    5. ' ' → logprob: -15.654753684997559
    6. '.range' → logprob: -15.904753684997559
    7. '   ' → logprob: -15.904753684997559
    8. '  ' → logprob: -16.404752731323242
    9. '```' → logprob: -16.404752731323242
    10. '_range' → logprob: -16.779752731323242

Token 26: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.004989201202988625
    2. '(' → logprob: -5.504989147186279
    3. '(W' → logprob: -7.004989147186279
    4. '(A' → logprob: -14.754989624023438
    5. '(I' → logprob: -14.879989624023438
    6. '(
' → logprob: -15.129989624023438
    7. '(int' → logprob: -15.379989624023438
    8. '((' → logprob: -15.504989624023438
    9. 'H' → logprob: -15.629989624023438
    10. '(M' → logprob: -15.629989624023438

Token 27: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -3.166338137816638e-05
    2. ')' → logprob: -10.625031471252441
    3. ']' → logprob: -13.000031471252441
    4. ')])' → logprob: -13.250031471252441
    5. '])]' → logprob: -14.375031471252441
    6. ')],' → logprob: -14.500031471252441
    7. '')]' → logprob: -14.625031471252441
    8. '))' → logprob: -14.750031471252441
    9. ')].' → logprob: -14.875031471252441
    10. ' )' → logprob: -15.250031471252441

Token 28: 'move' (ID: 16366)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.450905442237854
    2. 's' → logprob: -1.700905442237854
    3. 'm' → logprob: -2.2009053230285645
    4. 'c' → logprob: -2.3259053230285645
    5. 'd' → logprob: -2.3259053230285645
    6. 'dp' → logprob: -2.5759053230285645
    7. 'b' → logprob: -3.4509053230285645
    8. 'n' → logprob: -3.7009053230285645
    9. 'h' → logprob: -4.0759053230285645
    10. 'r' → logprob: -4.2009053230285645

Token 29: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.004661284387111664
    2. ' =' → logprob: -5.7546610832214355
    3. '_s' → logprob: -7.3796610832214355
    4. '_' → logprob: -7.8796610832214355
    5. 'd' → logprob: -8.379661560058594
    6. ' ' → logprob: -9.379661560058594
    7. '_d' → logprob: -9.504661560058594
    8. '_dirs' → logprob: -10.879661560058594
    9. '=' → logprob: -11.629661560058594
    10. '_offsets' → logprob: -11.754661560058594

Token 30: ' []
' (ID: 8911)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.20897454023361206
    2. '[' → logprob: -1.7089745998382568
    3. ' [(' → logprob: -5.708974361419678
    4. '[]' → logprob: -6.208974361419678
    5. '[-' → logprob: -6.958974361419678
    6. '[[' → logprob: -7.208974361419678
    7. ' [' → logprob: -8.583974838256836
    8. '['' → logprob: -8.708974838256836
    9. '[((' → logprob: -10.083974838256836
    10. '["' → logprob: -10.333974838256836

Token 31: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.019109532237052917
    2. ' for' → logprob: -4.144109725952148
    3. '[' → logprob: -6.019109725952148
    4. '(' → logprob: -8.394109725952148
    5. 'd' → logprob: -9.019109725952148
    6. '=' → logprob: -9.894109725952148
    7. 'r' → logprob: -9.894109725952148
    8. ' ' → logprob: -10.644109725952148
    9. '_' → logprob: -10.644109725952148
    10. ',' → logprob: -11.019109725952148

Token 32: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02477080561220646
    2. ' _' → logprob: -4.024770736694336
    3. '_' → logprob: -5.774770736694336
    4. ' ' → logprob: -6.399770736694336
    5. ' h' → logprob: -6.899770736694336
    6. 'i' → logprob: -7.274770736694336
    7. ' y' → logprob: -9.774770736694336
    8. ' r' → logprob: -10.649770736694336
    9. '_i' → logprob: -11.024770736694336
    10. ' x' → logprob: -11.899770736694336

Token 33: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04220033437013626
    2. 'n' → logprob: -3.5422003269195557
    3. 'in' → logprob: -4.542200565338135
    4. ' ' → logprob: -6.667200565338135
    5. ' n' → logprob: -7.917200565338135
    6. 's' → logprob: -10.417200088500977
    7. '  ' → logprob: -11.667200088500977
    8. '_' → logprob: -11.667200088500977
    9. '	in' → logprob: -12.042200088500977
    10. ',' → logprob: -12.292200088500977

Token 34: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0011711753904819489
    2. 'range' → logprob: -6.751171112060547
    3. ' ran' → logprob: -14.876171112060547
    4. '	range' → logprob: -15.751171112060547
    5. ' ra' → logprob: -15.876171112060547
    6. ' r' → logprob: -16.376171112060547
    7. ' xrange' → logprob: -16.876171112060547
    8. ' ' → logprob: -16.876171112060547
    9. ')' → logprob: -17.626171112060547
    10. ' rang' → logprob: -17.751171112060547

Token 35: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.38692203164100647
    2. '(' → logprob: -1.136922001838684
    3. ' (' → logprob: -10.261921882629395
    4. '(len' → logprob: -12.386921882629395
    5. ' H' → logprob: -12.886921882629395
    6. '(W' → logprob: -12.886921882629395
    7. ' ' → logprob: -13.136921882629395
    8. '(
' → logprob: -13.886921882629395
    9. '(s' → logprob: -14.261921882629395
    10. '(I' → logprob: -14.511921882629395

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.001897225040011108
    2. '):
' → logprob: -6.62689733505249
    3. ')' → logprob: -7.50189733505249
    4. ':' → logprob: -12.251896858215332
    5. '):
' → logprob: -12.751896858215332
    6. ' ):' → logprob: -13.001896858215332
    7. '+' → logprob: -13.001896858215332
    8. '-' → logprob: -13.376896858215332
    9. '):

' → logprob: -13.626896858215332
    10. '<|end|>' → logprob: -14.001896858215332

Token 37: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4898025095462799
    2. '   ' → logprob: -0.9898024797439575
    3. ' ' → logprob: -4.989802360534668
    4. 'for' → logprob: -5.864802360534668
    5. '    ' → logprob: -6.114802360534668
    6. '<|end|>' → logprob: -6.364802360534668
    7. '	for' → logprob: -6.489802360534668
    8. '       ' → logprob: -8.989802360534668
    9. ' range' → logprob: -9.364802360534668
    10. '  ' → logprob: -9.614802360534668

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.047416046261787415
    2. 'for' (adapté à ' for') → logprob: -3.5474159717559814
    3. '   ' → logprob: -4.4224162101745605
    4. ' ' → logprob: -6.0474162101745605
    5. '<|end|>' → logprob: -6.0474162101745605
    6. '    ' → logprob: -7.7974162101745605
    7. '	for' → logprob: -8.672415733337402
    8. ' range' → logprob: -9.422415733337402
    9. '<|end|>' → logprob: -10.172415733337402
    10. '```' → logprob: -10.797415733337402

Token 39: ' j' (ID: 441)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.14332258701324463
    2. ' range' → logprob: -2.143322467803955
    3. ' j' → logprob: -5.143322467803955
    4. 'W' → logprob: -5.643322467803955
    5. ' ' → logprob: -6.018322467803955
    6. 'range' → logprob: -6.143322467803955
    7. '    ' → logprob: -6.518322467803955
    8. 'j' → logprob: -8.393322944641113
    9. '   ' → logprob: -8.393322944641113
    10. ' (' → logprob: -9.268322944641113

Token 40: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008106227964162827
    2. 'in' → logprob: -4.883106231689453
    3. ' ' → logprob: -8.133106231689453
    4. '<|end|>' → logprob: -9.633106231689453
    5. '    ' → logprob: -9.883106231689453
    6. '   ' → logprob: -10.508106231689453
    7. '+' → logprob: -10.883106231689453
    8. '	in' → logprob: -11.383106231689453
    9. '  ' → logprob: -12.383106231689453
    10. '(' → logprob: -12.758106231689453

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.20462164282798767
    2. ' ' → logprob: -1.95462167263031
    3. 'range' → logprob: -3.9546215534210205
    4. '1' → logprob: -3.9546215534210205
    5. '(' → logprob: -6.4546217918396
    6. ' (' → logprob: -6.8296217918396
    7. '0' → logprob: -6.8296217918396
    8. '(range' → logprob: -7.3296217918396
    9. '2' → logprob: -8.579621315002441
    10. ')' → logprob: -9.079621315002441

Token 42: '(W' (ID: 26031)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.015175503678619862
    2. ' (' → logprob: -4.2651753425598145
    3. '(W' → logprob: -7.6401753425598145
    4. ' range' → logprob: -8.640175819396973
    5. '(H' → logprob: -9.015175819396973
    6. ')' → logprob: -9.640175819396973
    7. '(range' → logprob: -9.640175819396973
    8. ' ' → logprob: -10.015175819396973
    9. ' W' → logprob: -10.890175819396973
    10. ' )' → logprob: -11.515175819396973

Token 43: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16443891823291779
    2. '):' → logprob: -1.9144389629364014
    3. ' )' → logprob: -5.914438724517822
    4. ':' → logprob: -7.039438724517822
    5. ' ):' → logprob: -7.664438724517822
    6. 'if' → logprob: -10.03943920135498
    7. ':)' → logprob: -10.78943920135498
    8. '):
' → logprob: -11.03943920135498
    9. '   ' → logprob: -11.28943920135498
    10. ')>' → logprob: -11.28943920135498

Token 44: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07288205623626709
    2. '    ' → logprob: -3.5728821754455566
    3. '   ' → logprob: -3.8228821754455566
    4. '<|end|>' → logprob: -5.197882175445557
    5. 'if' → logprob: -5.322882175445557
    6. ' if' → logprob: -5.322882175445557
    7. '  ' → logprob: -6.322882175445557
    8. '       ' → logprob: -7.322882175445557
    9. '     
' → logprob: -7.822882175445557
    10. ',' → logprob: -8.197881698608398

Token 45: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5246629118919373
    2. ' if' → logprob: -0.8996629118919373
    3. '   ' → logprob: -7.024662971496582
    4. '    ' → logprob: -8.024662971496582
    5. ' ' → logprob: -8.774662971496582
    6. '       ' → logprob: -9.274662971496582
    7. '           ' → logprob: -10.274662971496582
    8. '        ' → logprob: -11.149662971496582
    9. 'i' → logprob: -12.274662971496582
    10. ' i' → logprob: -13.149662971496582

Token 46: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.1798054575920105
    2. 'a' → logprob: -1.8048055171966553
    3. ' ' → logprob: -10.304805755615234
    4. '    ' → logprob: -12.429805755615234
    5. ' not' → logprob: -12.429805755615234
    6. ' i' → logprob: -12.679805755615234
    7. '0' → logprob: -13.054805755615234
    8. 'i' → logprob: -13.179805755615234
    9. '(a' → logprob: -13.179805755615234
    10. '	a' → logprob: -13.429805755615234

Token 47: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0014776058960705996
    2. '[' → logprob: -6.7514777183532715
    3. '[j' → logprob: -8.126477241516113
    4. '[I' → logprob: -11.626477241516113
    5. '[a' → logprob: -13.626477241516113
    6. '[
' → logprob: -14.251477241516113
    7. ' [' → logprob: -15.626477241516113
    8. '[int' → logprob: -15.876477241516113
    9. '[A' → logprob: -16.50147819519043
    10. '[...]' → logprob: -17.12647819519043

Token 48: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3070163428783417
    2. '[i' → logprob: -1.682016372680664
    3. '][' → logprob: -2.932016372680664
    4. ']>' → logprob: -4.932016372680664
    5. '[j' → logprob: -5.182016372680664
    6. '>' → logprob: -5.182016372680664
    7. ']' → logprob: -5.682016372680664
    8. '>[' → logprob: -6.557016372680664
    9. '[I' → logprob: -7.807016372680664
    10. ' >' → logprob: -8.557016372680664

Token 49: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.2664456789934775e-06
    2. ' j' → logprob: -14.750000953674316
    3. ']' → logprob: -15.000000953674316
    4. '0' → logprob: -15.375000953674316
    5. '[j' → logprob: -16.750001907348633
    6. '][' → logprob: -17.125001907348633
    7. '_j' → logprob: -17.125001907348633
    8. '	j' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.625001907348633
    10. ':j' → logprob: -17.625001907348633

Token 50: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.031761206686496735
    2. ']>' → logprob: -3.7817611694335938
    3. '>' → logprob: -5.656761169433594
    4. ' ]' → logprob: -5.906761169433594
    5. ']>=' → logprob: -7.281761169433594
    6. '%' → logprob: -7.906761169433594
    7. ' >' → logprob: -7.906761169433594
    8. ']!=' → logprob: -8.031761169433594
    9. ']==' → logprob: -8.281761169433594
    10. ')' → logprob: -9.156761169433594

Token 51: ' %' (ID: 1851)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5433263182640076
    2. ' !=' → logprob: -1.9183263778686523
    3. ' ==' → logprob: -1.9183263778686523
    4. '>' → logprob: -2.5433263778686523
    5. ' ' → logprob: -4.293326377868652
    6. '==' → logprob: -4.543326377868652
    7. '!=' → logprob: -4.543326377868652
    8. '%' → logprob: -5.168326377868652
    9. ' %' → logprob: -5.543326377868652
    10. ' >=' → logprob: -7.168326377868652

Token 52: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47407975792884827
    2. ' ' → logprob: -0.9740797281265259
    3. '1' → logprob: -13.974080085754395
    4. '>' → logprob: -14.474080085754395
    5. '```' → logprob: -15.099080085754395
    6. '  ' → logprob: -15.599080085754395
    7. ' ' → logprob: -15.599080085754395
    8. '==' → logprob: -15.724080085754395
    9. '=' → logprob: -15.974080085754395
    10. '4' → logprob: -16.224079132080078

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.60414821645827e-06
    2. ' ' → logprob: -12.750004768371582
    3. '```' → logprob: -14.250004768371582
    4. '10' → logprob: -15.125004768371582
    5. '1' → logprob: -15.375004768371582
    6. '19' → logprob: -16.500003814697266
    7. '２' → logprob: -17.000003814697266
    8. '>' → logprob: -17.625003814697266
    9. '100' → logprob: -17.750003814697266
    10. '  ' → logprob: -18.062503814697266

Token 54: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.29150334000587463
    2. '!=' → logprob: -1.5415033102035522
    3. ' ==' → logprob: -3.666503429412842
    4. '==' → logprob: -4.541503429412842
    5. ':' → logprob: -6.041503429412842
    6. '=' → logprob: -9.791502952575684
    7. '>' → logprob: -10.416502952575684
    8. ' =' → logprob: -10.666502952575684
    9. ' ' → logprob: -10.791502952575684
    10. ' :' → logprob: -11.166502952575684

Token 55: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.88418151892256e-05
    2. ' ' → logprob: -9.750059127807617
    3. '!=' → logprob: -16.125059127807617
    4. '0' → logprob: -16.250059127807617
    5. '```' → logprob: -16.750059127807617
    6. '==' → logprob: -17.125059127807617
    7. '>' → logprob: -17.625059127807617
    8. '１' → logprob: -17.625059127807617
    9. '

' → logprob: -17.750059127807617
    10. '!' → logprob: -18.250059127807617

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. '0' → logprob: -12.625006675720215
    3. ' ' → logprob: -12.875006675720215
    4. '```' → logprob: -15.875006675720215
    5. '!=' → logprob: -16.8750057220459
    6. '１' → logprob: -17.1250057220459
    7. '

' → logprob: -17.5000057220459
    8. '!' → logprob: -17.6250057220459
    9. '১' → logprob: -17.9375057220459
    10. '' → logprob: -18.0625057220459

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004350797680672258
    2. ' :' → logprob: -7.875434875488281
    3. ' and' → logprob: -10.625434875488281
    4. ':
' → logprob: -11.375434875488281
    5. '):' → logprob: -11.625434875488281
    6. ',' → logprob: -13.000434875488281
    7. ':**' → logprob: -13.500434875488281
    8. '           ' → logprob: -13.875434875488281
    9. '=' → logprob: -14.125434875488281
    10. ' ' → logprob: -14.125434875488281

Token 58: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.182937741279602
    2. '            ' → logprob: -1.307937741279602
    3. ' ' → logprob: -1.557937741279602
    4. '        ' → logprob: -2.6829376220703125
    5. ':' → logprob: -2.9329376220703125
    6. ' :' → logprob: -3.6829376220703125
    7. '    ' → logprob: -4.1829376220703125
    8. '          ' → logprob: -4.1829376220703125
    9. '         ' → logprob: -5.4329376220703125
    10. '               ' → logprob: -5.4329376220703125

Token 59: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12259431183338165
    2. ' if' → logprob: -2.4975943565368652
    3. 'a' → logprob: -4.372594356536865
    4. '           ' → logprob: -5.247594356536865
    5. '               ' → logprob: -5.497594356536865
    6. '   ' → logprob: -5.497594356536865
    7. 'move' → logprob: -6.122594356536865
    8. ' a' → logprob: -6.497594356536865
    9. ' ' → logprob: -6.997594356536865
    10. ' move' → logprob: -7.747594356536865

Token 60: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.6931775808334351
    2. ' j' → logprob: -0.6931775808334351
    3. '(j' → logprob: -11.568177223205566
    4. ' ' → logprob: -11.693177223205566
    5. ' ' → logprob: -13.068177223205566
    6. '	j' → logprob: -13.193177223205566
    7. '   ' → logprob: -13.318177223205566
    8. 'i' → logprob: -13.693177223205566
    9. ' i' → logprob: -13.818177223205566
    10. '(' → logprob: -13.818177223205566

Token 61: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5182419419288635
    2. '<' → logprob: -1.2682418823242188
    3. '+' → logprob: -2.3932418823242188
    4. ' !=' → logprob: -4.018241882324219
    5. ' ' → logprob: -5.018241882324219
    6. '!=' → logprob: -5.268241882324219
    7. '<|end|>' → logprob: -7.518241882324219
    8. ' +' → logprob: -8.018241882324219
    9. '<size' → logprob: -9.205741882324219
    10. '<len' → logprob: -9.205741882324219

Token 62: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.14269085228443146
    2. ' W' → logprob: -2.017690896987915
    3. '   ' → logprob: -12.142690658569336
    4. ' ' → logprob: -12.142690658569336
    5. '<W' → logprob: -13.142690658569336
    6. '	W' → logprob: -14.017690658569336
    7. '  ' → logprob: -14.642690658569336
    8. '(W' → logprob: -14.767690658569336
    9. '(' → logprob: -15.392690658569336
    10. '```' → logprob: -15.642690658569336

Token 63: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.11283444613218307
    2. ' -' → logprob: -2.2378344535827637
    3. ' ' → logprob: -12.112833976745605
    4. '1' → logprob: -12.237833976745605
    5. ' ' → logprob: -14.737833976745605
    6. '–' → logprob: -15.362833976745605
    7. ':' → logprob: -15.612833976745605
    8. '--' → logprob: -16.112834930419922
    9. '−' → logprob: -16.175334930419922
    10. ')' → logprob: -16.237834930419922

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.102680633077398e-05
    2. ' ' → logprob: -9.375090599060059
    3. '-' → logprob: -13.500090599060059
    4. '   ' → logprob: -13.750090599060059
    5. '１' → logprob: -13.812590599060059
    6. '```' → logprob: -14.187590599060059
    7. '۱' → logprob: -15.187590599060059
    8. '    ' → logprob: -15.562590599060059
    9. '<|end|>' → logprob: -15.687590599060059
    10. '  ' → logprob: -15.750090599060059

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019867917522788048
    2. ' :' → logprob: -4.144867897033691
    3. ' and' → logprob: -6.269867897033691
    4. '<|end|>' → logprob: -7.394867897033691
    5. ' ' → logprob: -7.644867897033691
    6. '               ' → logprob: -8.269867897033691
    7. ':
' → logprob: -8.894867897033691
    8. '):' → logprob: -9.394867897033691
    9. '           ' → logprob: -9.519867897033691
    10. '       ' → logprob: -10.144867897033691

Token 66: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.46755146980285645
    2. ' ' → logprob: -1.2175514698028564
    3. '                ' → logprob: -3.0925514698028564
    4. '                
' → logprob: -4.092551231384277
    5. '            ' → logprob: -5.842551231384277
    6. ' :' → logprob: -6.217551231384277
    7. '              ' → logprob: -6.717551231384277
    8. '           ' → logprob: -6.842551231384277
    9. ':' → logprob: -6.842551231384277
    10. ' ' → logprob: -6.967551231384277

Token 67: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.24088354408740997
    2. ' a' → logprob: -2.9908835887908936
    3. '               ' → logprob: -2.9908835887908936
    4. ' ' → logprob: -3.2408835887908936
    5. 'move' (adapté à ' move') → logprob: -3.4908835887908936
    6. '                ' → logprob: -3.8658835887908936
    7. '            ' → logprob: -4.8658833503723145
    8. 'a' → logprob: -4.9908833503723145
    9. '           ' → logprob: -6.2408833503723145
    10. ' ' → logprob: -6.8658833503723145

Token 68: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.015750672668218613
    2. 's' → logprob: -4.265750885009766
    3. '.' → logprob: -6.765750885009766
    4. '.extend' → logprob: -8.265750885009766
    5. '=' → logprob: -9.515750885009766
    6. ''s' → logprob: -11.015750885009766
    7. '.s' → logprob: -11.140750885009766
    8. 'append' → logprob: -11.515750885009766
    9. '_move' → logprob: -11.515750885009766
    10. ' =' → logprob: -11.640750885009766

Token 69: '([' (ID: 5194)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.07053327560424805
    2. '(' → logprob: -2.695533275604248
    3. '(('' → logprob: -8.070533752441406
    4. '([' → logprob: -9.320533752441406
    5. '(("' → logprob: -9.320533752441406
    6. '(f' → logprob: -10.445533752441406
    7. '(((' → logprob: -10.820533752441406
    8. '([(' → logprob: -11.070533752441406
    9. '('' → logprob: -11.445533752441406
    10. '(()' → logprob: -12.070533752441406

Token 70: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.73052782076411e-05
    2. ' i' → logprob: -10.000067710876465
    3. '   ' → logprob: -10.875067710876465
    4. '(i' → logprob: -14.250067710876465
    5. '           ' → logprob: -14.500067710876465
    6. ''i' → logprob: -14.500067710876465
    7. '	i' → logprob: -15.375067710876465
    8. '{i' → logprob: -15.375067710876465
    9. 'j' → logprob: -15.500067710876465
    10. '       ' → logprob: -15.750067710876465

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6964228749275208
    2. ',j' → logprob: -0.6964228749275208
    3. ' ,' → logprob: -5.946423053741455
    4. ' j' → logprob: -8.321422576904297
    5. 'j' → logprob: -8.696422576904297
    6. ' ' → logprob: -8.821422576904297
    7. '   ' → logprob: -10.071422576904297
    8. '	j' → logprob: -10.696422576904297
    9. '[j' → logprob: -12.071422576904297
    10. '[' → logprob: -12.071422576904297

Token 72: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.001039479160681367
    2. ' j' → logprob: -6.876039505004883
    3. '   ' → logprob: -12.376039505004883
    4. '	j' → logprob: -13.251039505004883
    5. ' ' → logprob: -15.376039505004883
    6. '    ' → logprob: -15.501039505004883
    7. '  ' → logprob: -16.626039505004883
    8. '       ' → logprob: -16.876039505004883
    9. '     ' → logprob: -17.126039505004883
    10. '           ' → logprob: -17.501039505004883

Token 73: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01027657464146614
    2. ' ,' → logprob: -4.760276794433594
    3. ',j' → logprob: -6.885276794433594
    4. '   ' → logprob: -7.760276794433594
    5. '+' → logprob: -9.135276794433594
    6. '])' → logprob: -10.260276794433594
    7. ' ' → logprob: -11.135276794433594
    8. 'j' → logprob: -11.385276794433594
    9. ']' → logprob: -11.885276794433594
    10. '    ' → logprob: -11.885276794433594

Token 74: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2835608124732971
    2. 'j' → logprob: -1.4085607528686523
    3. ' i' → logprob: -6.408560752868652
    4. '   ' → logprob: -7.908560752868652
    5. ' j' → logprob: -8.033560752868652
    6. '	i' → logprob: -10.783560752868652
    7. ' ' → logprob: -10.908560752868652
    8. '    ' → logprob: -11.158560752868652
    9. '	j' → logprob: -12.283560752868652
    10. '  ' → logprob: -12.408560752868652

Token 75: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004810184706002474
    2. ' ,' → logprob: -5.504810333251953
    3. ',j' → logprob: -7.754810333251953
    4. '   ' → logprob: -8.504810333251953
    5. ' ' → logprob: -9.504810333251953
    6. 'j' → logprob: -11.129810333251953
    7. '	' → logprob: -12.629810333251953
    8. ' j' → logprob: -13.129810333251953
    9. '  ' → logprob: -13.379810333251953
    10. '    ' → logprob: -13.629810333251953

Token 76: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.38693103194236755
    2. ' j' → logprob: -1.13693106174469
    3. ' ' → logprob: -10.261931419372559
    4. '	j' → logprob: -11.761931419372559
    5. '   ' → logprob: -12.011931419372559
    6. '+' → logprob: -12.511931419372559
    7. '    ' → logprob: -12.511931419372559
    8. '  ' → logprob: -13.761931419372559
    9. ' (' → logprob: -14.511931419372559
    10. '(j' → logprob: -14.761931419372559

Token 77: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005929982289671898
    2. ' +' → logprob: -5.130929946899414
    3. ' ' → logprob: -15.005929946899414
    4. '＋' → logprob: -15.130929946899414
    5. '1' → logprob: -15.255929946899414
    6. '+
' → logprob: -15.880929946899414
    7. '+,' → logprob: -16.380929946899414
    8. '   ' → logprob: -16.380929946899414
    9. ' plus' → logprob: -18.005929946899414
    10. ' +
' → logprob: -18.380929946899414

Token 78: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018065694894175977
    2. ' ' → logprob: -8.6251802444458
    3. '   ' → logprob: -15.0001802444458
    4. '  ' → logprob: -15.5001802444458
    5. '+' → logprob: -15.8126802444458
    6. '１' → logprob: -16.187681198120117
    7. '0' → logprob: -16.562681198120117
    8. '-' → logprob: -17.500181198120117
    9. ']' → logprob: -17.875181198120117
    10. '```' → logprob: -18.000181198120117

Token 79: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0038912808522582054
    2. '])
' → logprob: -6.253891468048096
    3. ',' → logprob: -6.753891468048096
    4. ')' → logprob: -7.878891468048096
    5. ' ])' → logprob: -8.878890991210938
    6. ')])' → logprob: -9.128890991210938
    7. '           ' → logprob: -10.128890991210938
    8. '               ' → logprob: -10.503890991210938
    9. '])
' → logprob: -10.628890991210938
    10. ']' → logprob: -10.753890991210938

Token 80: '               ' (ID: 506)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6726231575012207
    2. '           ' → logprob: -0.9226231575012207
    3. '               ' → logprob: -3.0476231575012207
    4. '            ' → logprob: -4.422623157501221
    5. 'elif' → logprob: -4.547623157501221
    6. 'else' → logprob: -5.047623157501221
    7. ' a' → logprob: -5.797623157501221
    8. '                ' → logprob: -5.922623157501221
    9. ' elif' → logprob: -5.922623157501221
    10. ' else' → logprob: -6.172623157501221

Token 81: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.002505982294678688
    2. ' a' → logprob: -6.002505779266357
    3. '               ' → logprob: -10.877506256103516
    4. '           ' → logprob: -12.002506256103516
    5. '                   ' → logprob: -12.627506256103516
    6. '   ' → logprob: -13.627506256103516
    7. ' ' → logprob: -15.127506256103516
    8. '                ' → logprob: -15.877506256103516
    9. '       ' → logprob: -16.127506256103516
    10. 'move' → logprob: -16.752506256103516

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00013572083844337612
    2. '[' → logprob: -9.50013542175293
    3. '[I' → logprob: -10.00013542175293
    4. '][' → logprob: -12.62513542175293
    5. '[j' → logprob: -12.75013542175293
    6. ' [' → logprob: -13.00013542175293
    7. '```' → logprob: -13.00013542175293
    8. '[int' → logprob: -14.00013542175293
    9. '[][' → logprob: -14.12513542175293
    10. '[
' → logprob: -15.12513542175293

Token 83: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0005916363443247974
    2. '[i' → logprob: -8.500591278076172
    3. '[' → logprob: -8.875591278076172
    4. '[j' → logprob: -9.250591278076172
    5. ' ][' → logprob: -9.625591278076172
    6. ']' → logprob: -9.750591278076172
    7. ')[' → logprob: -11.625591278076172
    8. '"][' → logprob: -12.500591278076172
    9. '```' → logprob: -12.875591278076172
    10. ' [' → logprob: -13.250591278076172

Token 84: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.0445127372804563e-05
    2. ' j' → logprob: -11.62501049041748
    3. '	j' → logprob: -14.75001049041748
    4. '   ' → logprob: -15.00001049041748
    5. '[j' → logprob: -15.00001049041748
    6. ' ' → logprob: -15.75001049041748
    7. ',j' → logprob: -16.500009536743164
    8. '][' → logprob: -17.125009536743164
    9. '```' → logprob: -17.125009536743164
    10. ':j' → logprob: -17.375009536743164

Token 85: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09271582216024399
    2. '-' → logprob: -2.7177157402038574
    3. ']-' → logprob: -4.092715740203857
    4. ')' → logprob: -6.217715740203857
    5. '-=' → logprob: -6.217715740203857
    6. ' -=' → logprob: -6.717715740203857
    7. ' -' → logprob: -8.717716217041016
    8. ' ]' → logprob: -8.967716217041016
    9. '```' → logprob: -9.467716217041016
    10. '[' → logprob: -10.092716217041016

Token 86: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008190384833142161
    2. ' ' → logprob: -7.250819206237793
    3. ']' → logprob: -9.250819206237793
    4. '<|end|>' → logprob: -12.750819206237793
    5. '   ' → logprob: -12.875819206237793
    6. '  ' → logprob: -13.625819206237793
    7. ']+=' → logprob: -13.750819206237793
    8. ']+' → logprob: -14.125819206237793
    9. '           ' → logprob: -14.250819206237793
    10. '+' → logprob: -14.250819206237793

Token 87: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.044833891093730927
    2. ']+=' → logprob: -3.1698338985443115
    3. ' ]' → logprob: -6.419833660125732
    4. ']+' → logprob: -9.29483413696289
    5. ')' → logprob: -9.91983413696289
    6. ' +=' → logprob: -10.54483413696289
    7. '+=' → logprob: -11.79483413696289
    8. '+]' → logprob: -12.29483413696289
    9. ')]' → logprob: -12.41983413696289
    10. '    ' → logprob: -12.79483413696289

Token 88: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.020671280100941658
    2. ' +=' → logprob: -4.020671367645264
    3. ']+=' → logprob: -6.270671367645264
    4. '+' → logprob: -7.645671367645264
    5. '=' → logprob: -9.395670890808105
    6. '+='' → logprob: -10.395670890808105
    7. '+=(' → logprob: -11.270670890808105
    8. '<|end|>' → logprob: -11.770670890808105
    9. '```' → logprob: -12.020670890808105
    10. '+="' → logprob: -13.520670890808105

Token 89: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004782661329954863
    2. ' ' → logprob: -5.379782676696777
    3. 'a' → logprob: -8.754782676696777
    4. ' a' → logprob: -12.504782676696777
    5. '   ' → logprob: -14.629782676696777
    6. '```' → logprob: -15.754782676696777
    7. '  ' → logprob: -16.00478172302246
    8. '-' → logprob: -16.56728172302246
    9. '１' → logprob: -16.81728172302246
    10. ' ' → logprob: -16.94228172302246

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000455340719781816
    2. 'a' → logprob: -8.125454902648926
    3. ' ' → logprob: -8.750454902648926
    4. '   ' → logprob: -15.125454902648926
    5. ' a' → logprob: -15.250454902648926
    6. '```' → logprob: -16.000455856323242
    7. '１' → logprob: -16.625455856323242
    8. '-' → logprob: -17.062955856323242
    9. '  ' → logprob: -17.250455856323242
    10. '    ' → logprob: -18.437955856323242

Token 91: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07368390262126923
    2. 'else' → logprob: -3.323683977127075
    3. ' else' → logprob: -3.448683977127075
    4. 'elif' → logprob: -6.573683738708496
    5. ' elif' → logprob: -7.323683738708496
    6. '       ' → logprob: -7.448683738708496
    7. '```' → logprob: -8.448683738708496
    8. '<|end|>' → logprob: -8.823683738708496
    9. '               ' → logprob: -9.323683738708496
    10. '            
' → logprob: -9.448683738708496

Token 92: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.040481068193912506
    2. ' else' → logprob: -3.9154810905456543
    3. 'else' → logprob: -4.665481090545654
    4. '       ' → logprob: -5.665481090545654
    5. '               ' → logprob: -6.040481090545654
    6. '            
' → logprob: -6.290481090545654
    7. ' elif' → logprob: -7.540481090545654
    8. 'elif' → logprob: -7.790481090545654
    9. ' 
' → logprob: -8.040480613708496
    10. 'a' → logprob: -8.415480613708496

Token 93: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.1759050190448761
    2. '       ' → logprob: -1.9259049892425537
    3. 'elif' (adapté à ' elif') → logprob: -4.175905227661133
    4. ' else' → logprob: -8.675905227661133
    5. ' elif' → logprob: -11.550905227661133
    6. '   ' → logprob: -11.925905227661133
    7. '           ' → logprob: -12.300905227661133
    8. '```' → logprob: -12.300905227661133
    9. '	else' → logprob: -14.675905227661133
    10. '	elif' → logprob: -14.925905227661133

Token 94: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.14270491898059845
    2. 'i' → logprob: -2.017704963684082
    3. ' ' → logprob: -11.392704963684082
    4. ' ' → logprob: -11.642704963684082
    5. '   ' → logprob: -12.517704963684082
    6. '```' → logprob: -13.517704963684082
    7. '  ' → logprob: -13.642704963684082
    8. '	i' → logprob: -14.267704963684082
    9. '0' → logprob: -14.767704963684082
    10. '(i' → logprob: -15.080204963684082

Token 95: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.03810173645615578
    2. ' <' → logprob: -3.2881016731262207
    3. '+' → logprob: -9.913102149963379
    4. ' ' → logprob: -11.913102149963379
    5. '<|end|>' → logprob: -13.413102149963379
    6. '()<' → logprob: -14.913102149963379
    7. ' +' → logprob: -15.163102149963379
    8. '1' → logprob: -15.288102149963379
    9. '   ' → logprob: -15.538102149963379
    10. ',' → logprob: -15.538102149963379

Token 96: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4740905463695526
    2. ' H' → logprob: -0.974090576171875
    3. ' ' → logprob: -11.474090576171875
    4. '   ' → logprob: -13.474090576171875
    5. 'W' → logprob: -15.599090576171875
    6. ' (' → logprob: -15.724090576171875
    7. '  ' → logprob: -15.849090576171875
    8. '1' → logprob: -16.161590576171875
    9. '```' → logprob: -16.224090576171875
    10. ' ' → logprob: -16.286590576171875

Token 97: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.00014025058771949261
    2. ' -' → logprob: -8.875140190124512
    3. '1' → logprob: -15.250140190124512
    4. '()-' → logprob: -16.250141143798828
    5. ' ' → logprob: -17.750141143798828
    6. '```' → logprob: -18.750141143798828
    7. '   ' → logprob: -19.000141143798828
    8. '−' → logprob: -19.250141143798828
    9. '–' → logprob: -19.875141143798828
    10. '-
' → logprob: -20.000141143798828

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.75000286102295
    3. '-' → logprob: -15.12500286102295
    4. '2' → logprob: -18.000003814697266
    5. '   ' → logprob: -18.000003814697266
    6. '```' → logprob: -19.125003814697266
    7. '<|end|>' → logprob: -19.375003814697266
    8. '１' → logprob: -19.375003814697266
    9. '۱' → logprob: -19.500003814697266
    10. '  ' → logprob: -20.187503814697266

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11376069486141205
    2. ':
' → logprob: -2.2387607097625732
    3. ' :' → logprob: -7.863760471343994
    4. '               ' → logprob: -8.113760948181152
    5. ' :
' → logprob: -8.613760948181152
    6. '           ' → logprob: -10.988760948181152
    7. '       ' → logprob: -10.988760948181152
    8. ':

' → logprob: -11.238760948181152
    9. ':
' → logprob: -11.613760948181152
    10. '):
' → logprob: -12.613760948181152

Token 100: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3228605389595032
    2. ' move' → logprob: -1.5728604793548584
    3. 'move' → logprob: -2.6978604793548584
    4. ' ' → logprob: -8.322860717773438
    5. '   ' → logprob: -8.322860717773438
    6. '       ' → logprob: -8.447860717773438
    7. '	move' → logprob: -8.697860717773438
    8. '           ' → logprob: -9.072860717773438
    9. '(move' → logprob: -9.697860717773438
    10. '```' → logprob: -10.947860717773438

Token 101: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' (adapté à ' move') → logprob: -0.5764793753623962
    2. ' move' → logprob: -0.8264793753623962
    3. '               ' → logprob: -7.576479434967041
    4. '	move' → logprob: -11.576478958129883
    5. '           ' → logprob: -11.701478958129883
    6. '                   ' → logprob: -12.826478958129883
    7. '(move' → logprob: -12.951478958129883
    8. ' ' → logprob: -12.951478958129883
    9. '.move' → logprob: -14.201478958129883
    10. '   ' → logprob: -14.576478958129883

Token 102: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002181987656513229
    2. '.' → logprob: -8.500218391418457
    3. ' .' → logprob: -11.625218391418457
    4. 'append' → logprob: -12.625218391418457
    5. '.Append' → logprob: -14.500218391418457
    6. '.setdefault' → logprob: -14.500218391418457
    7. '	append' → logprob: -15.125218391418457
    8. '   ' → logprob: -15.500218391418457
    9. '<|end|>' → logprob: -15.500218391418457
    10. '.app' → logprob: -15.750218391418457

Token 103: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -1.2113979209971149e-05
    2. '[' → logprob: -11.875012397766113
    3. '[i' → logprob: -12.750012397766113
    4. '(' → logprob: -13.375012397766113
    5. '(i' → logprob: -14.875012397766113
    6. '([
' → logprob: -15.375012397766113
    7. ' ([' → logprob: -16.750011444091797
    8. '```' → logprob: -18.125011444091797
    9. '<|end|>' → logprob: -18.250011444091797
    10. '([...' → logprob: -18.875011444091797

Token 104: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.3120038501219824e-05
    2. '[i' → logprob: -10.375053405761719
    3. ' i' → logprob: -10.750053405761719
    4. '{i' → logprob: -15.250053405761719
    5. '   ' → logprob: -16.25005340576172
    6. '[' → logprob: -17.00005340576172
    7. '(i' → logprob: -17.12505340576172
    8. '	i' → logprob: -17.37505340576172
    9. '[
' → logprob: -18.25005340576172
    10. ' [' → logprob: -18.62505340576172

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.931863051955588e-05
    2. ' ,' → logprob: -10.375059127807617
    3. ',i' → logprob: -10.625059127807617
    4. ',j' → logprob: -13.375059127807617
    5. '<|end|>' → logprob: -14.000059127807617
    6. ' ' → logprob: -15.125059127807617
    7. '',' → logprob: -15.375059127807617
    8. '   ' → logprob: -15.500059127807617
    9. 'i' → logprob: -15.750059127807617
    10. '+' → logprob: -16.250059127807617

Token 106: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4741863012313843
    2. ' j' → logprob: -0.9741863012313843
    3. 'i' → logprob: -9.724185943603516
    4. ' ' → logprob: -10.599185943603516
    5. ' i' → logprob: -11.099185943603516
    6. ',' → logprob: -12.724185943603516
    7. ',j' → logprob: -13.599185943603516
    8. '   ' → logprob: -13.849185943603516
    9. '<|end|>' → logprob: -13.849185943603516
    10. '  ' → logprob: -14.099185943603516

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005303950165398419
    2. ' ,' → logprob: -7.625530242919922
    3. '+' → logprob: -10.375530242919922
    4. ',i' → logprob: -11.500530242919922
    5. '   ' → logprob: -14.500530242919922
    6. ' ' → logprob: -15.750530242919922
    7. ',
' → logprob: -16.000530242919922
    8. '+,' → logprob: -16.000530242919922
    9. ' +' → logprob: -16.125530242919922
    10. ',j' → logprob: -16.750530242919922

Token 108: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10021799057722092
    2. 'i' → logprob: -2.3502180576324463
    3. '   ' → logprob: -12.225217819213867
    4. ' ' → logprob: -13.225217819213867
    5. '    ' → logprob: -13.350217819213867
    6. '(i' → logprob: -13.975217819213867
    7. ' (' → logprob: -14.100217819213867
    8. '	i' → logprob: -15.100217819213867
    9. ' ' → logprob: -15.225217819213867
    10. ',' → logprob: -15.725217819213867

Token 109: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007099286303855479
    2. ' +' → logprob: -7.2507100105285645
    3. '1' → logprob: -17.375709533691406
    4. '+
' → logprob: -17.875709533691406
    5. '＋' → logprob: -17.875709533691406
    6. ' ' → logprob: -18.375709533691406
    7. '+j' → logprob: -19.375709533691406
    8. '+,' → logprob: -20.125709533691406
    9. ' plus' → logprob: -20.500709533691406
    10. '   ' → logprob: -20.625709533691406

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6405310816480778e-05
    2. ' ' → logprob: -11.500016212463379
    3. '+' → logprob: -12.000016212463379
    4. '   ' → logprob: -17.375017166137695
    5. ' +' → logprob: -18.375017166137695
    6. '  ' → logprob: -20.875017166137695
    7. '۱' → logprob: -21.250017166137695
    8. '
' → logprob: -21.375017166137695
    9. '```' → logprob: -21.375017166137695
    10. '１' → logprob: -21.375017166137695

Token 111: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.723973582556937e-05
    2. ' ,' → logprob: -11.125017166137695
    3. ',j' → logprob: -13.500017166137695
    4. '   ' → logprob: -14.750017166137695
    5. '       ' → logprob: -15.875017166137695
    6. '0' → logprob: -16.125017166137695
    7. ' ' → logprob: -16.375017166137695
    8. 'j' → logprob: -16.750017166137695
    9. '1' → logprob: -17.000017166137695
    10. '])' → logprob: -17.375017166137695

Token 112: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.4760470688343048
    2. '0' → logprob: -0.9760470390319824
    3. ' j' → logprob: -6.601047039031982
    4. ' ' → logprob: -7.476047039031982
    5. '   ' → logprob: -10.35104751586914
    6. '       ' → logprob: -12.47604751586914
    7. '           ' → logprob: -13.22604751586914
    8. '  ' → logprob: -13.22604751586914
    9. '    ' → logprob: -14.35104751586914
    10. '     ' → logprob: -14.47604751586914

Token 113: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.03805674985051155
    2. '])
' → logprob: -3.2880568504333496
    3. '])

' → logprob: -12.413056373596191
    4. '])
' → logprob: -12.913056373596191
    5. ' ])' → logprob: -12.913056373596191
    6. ']])' → logprob: -13.413056373596191
    7. ')])' → logprob: -13.538056373596191
    8. ')' → logprob: -13.913056373596191
    9. ''])' → logprob: -14.163056373596191
    10. '"])' → logprob: -15.038056373596191

Token 114: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.17784897983074188
    2. 'a' → logprob: -1.9278489351272583
    3. '           ' → logprob: -4.427848815917969
    4. ' a' → logprob: -5.302848815917969
    5. '                   ' → logprob: -9.177848815917969
    6. '              ' → logprob: -9.552848815917969
    7. '                ' → logprob: -9.927848815917969
    8. ')' → logprob: -10.052848815917969
    9. ',' → logprob: -10.302848815917969
    10. '```' → logprob: -10.302848815917969

Token 115: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5231366753578186
    2. 'a' (adapté à ' a') → logprob: -0.8981366753578186
    3. '   ' → logprob: -12.523137092590332
    4. ' ' → logprob: -12.648137092590332
    5. '           ' → logprob: -13.148137092590332
    6. '               ' → logprob: -13.898137092590332
    7. '       ' → logprob: -14.023137092590332
    8. '                   ' → logprob: -14.273137092590332
    9. '	a' → logprob: -14.398137092590332
    10. ' ' → logprob: -15.023137092590332

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.047134305234067e-05
    2. '[' → logprob: -10.500030517578125
    3. '[next' → logprob: -13.750030517578125
    4. '[I' → logprob: -13.875030517578125
    5. 'i' → logprob: -14.875030517578125
    6. ' [' → logprob: -16.000030517578125
    7. '[
' → logprob: -16.375030517578125
    8. '[int' → logprob: -16.625030517578125
    9. '][' → logprob: -16.875030517578125
    10. '<|end|>' → logprob: -16.875030517578125

Token 117: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00018744789122138172
    2. '][' → logprob: -8.750187873840332
    3. ' +' → logprob: -11.750187873840332
    4. '[' → logprob: -12.125187873840332
    5. '+i' → logprob: -12.500187873840332
    6. '[i' → logprob: -12.500187873840332
    7. '+[' → logprob: -12.625187873840332
    8. '1' → logprob: -13.250187873840332
    9. '[j' → logprob: -13.625187873840332
    10. '+j' → logprob: -14.500187873840332

Token 118: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.021301763132214546
    2. 'j' → logprob: -3.896301746368408
    3. ' ' → logprob: -8.021302223205566
    4. '+' → logprob: -8.271302223205566
    5. ' j' → logprob: -9.646302223205566
    6. '<|end|>' → logprob: -9.896302223205566
    7. '   ' → logprob: -10.146302223205566
    8. '[j' → logprob: -12.021302223205566
    9. '```' → logprob: -12.771302223205566
    10. ')' → logprob: -13.146302223205566

Token 119: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.002432620618492365
    2. '[j' → logprob: -6.627432823181152
    3. '[' → logprob: -7.627432823181152
    4. ']' → logprob: -8.127432823181152
    5. ',' → logprob: -9.127432823181152
    6. ' ][' → logprob: -9.752432823181152
    7. '"][' → logprob: -10.002432823181152
    8. ',j' → logprob: -10.752432823181152
    9. ')[' → logprob: -10.877432823181152
    10. '<|end|>' → logprob: -11.252432823181152

Token 120: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -6.670925358776003e-05
    2. ' j' → logprob: -9.625066757202148
    3. '[j' → logprob: -15.500066757202148
    4. '0' → logprob: -16.12506675720215
    5. ' ' → logprob: -16.25006675720215
    6. '_j' → logprob: -16.62506675720215
    7. '   ' → logprob: -17.00006675720215
    8. '	j' → logprob: -17.50006675720215
    9. '$j' → logprob: -17.50006675720215
    10. 'a' → logprob: -18.37506675720215

Token 121: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014902622438967228
    2. ']+=' → logprob: -4.264902591705322
    3. ' ]' → logprob: -7.264902591705322
    4. ' +=' → logprob: -11.26490306854248
    5. ']+' → logprob: -11.26490306854248
    6. '+=' → logprob: -12.38990306854248
    7. '']' → logprob: -13.13990306854248
    8. ')' → logprob: -13.51490306854248
    9. '           ' → logprob: -13.76490306854248
    10. '"]' → logprob: -14.13990306854248

Token 122: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.023999826982617378
    2. ' +=' → logprob: -3.7739999294281006
    3. ']+=' → logprob: -7.7739996910095215
    4. '+' → logprob: -8.27400016784668
    5. '=' → logprob: -10.14900016784668
    6. '```' → logprob: -10.77400016784668
    7. '<|end|>' → logprob: -12.14900016784668
    8. '+='' → logprob: -12.39900016784668
    9. ')' → logprob: -13.89900016784668
    10. '+="' → logprob: -13.89900016784668

Token 123: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043126524542458355
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.125431060791016
    4. '<|end|>' → logprob: -16.625431060791016
    5. '```' → logprob: -16.937931060791016
    6. '+' → logprob: -17.250431060791016
    7. '１' → logprob: -17.562931060791016
    8. '  ' → logprob: -17.687931060791016
    9. '           ' → logprob: -17.812931060791016
    10. ')' → logprob: -17.937931060791016

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. 'a' → logprob: -18.18750762939453
    4. '１' → logprob: -18.81250762939453
    5. '   ' → logprob: -19.00000762939453
    6. '```' → logprob: -19.00000762939453
    7. '۱' → logprob: -19.75000762939453
    8. '
' → logprob: -19.75000762939453
    9. '+' → logprob: -19.81250762939453
    10. '[' → logprob: -20.12500762939453

Token 125: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10589224845170975
    2. '(len' → logprob: -2.3558921813964844
    3. '(move' → logprob: -5.605892181396484
    4. '(*' → logprob: -7.105892181396484
    5. '('' → logprob: -7.980892181396484
    6. '()' → logprob: -8.230892181396484
    7. '(sum' → logprob: -8.230892181396484
    8. '("' → logprob: -9.105892181396484
    9. '(
' → logprob: -9.355892181396484
    10. 'len' → logprob: -10.230892181396484

Token 128: '(move' (ID: 69621)
  Prédit: '(move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(move' → logprob: -0.023448355495929718
    2. '(' → logprob: -3.7734484672546387
    3. '(m' → logprob: -8.52344799041748
    4. '(
' → logprob: -13.52344799041748
    5. ')' → logprob: -14.02344799041748
    6. 'move' → logprob: -14.14844799041748
    7. ' (' → logprob: -14.77344799041748
    8. '(

' → logprob: -14.77344799041748
    9. ' move' → logprob: -16.398448944091797
    10. '()' → logprob: -16.523448944091797

Token 129: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00043496055877767503
    2. ')
' → logprob: -7.750434875488281
    3. ')`' → logprob: -13.750434875488281
    4. '))' → logprob: -14.125434875488281
    5. '`)' → logprob: -14.500434875488281
    6. '())' → logprob: -14.500434875488281
    7. '()' → logprob: -14.750434875488281
    8. ')`
' → logprob: -15.250434875488281
    9. ' )' → logprob: -15.375434875488281
    10. ')
' → logprob: -15.625434875488281

Token 130: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003718046355061233
    2. '```' → logprob: -8.125371932983398
    3. 'print' → logprob: -9.875371932983398
    4. ' for' → logprob: -11.250371932983398
    5. '``' → logprob: -11.625371932983398
    6. '
' → logprob: -14.000371932983398
    7. '\n' → logprob: -14.750371932983398
    8. '  
' → logprob: -14.750371932983398
    9. '    
' → logprob: -15.250371932983398
    10. '<|end|>' → logprob: -15.500371932983398

Token 131: ' x' (ID: 1215)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.024024726822972298
    2. 'move' → logprob: -4.649024963378906
    3. 'mv' → logprob: -4.649024963378906
    4. 'x' → logprob: -5.774024963378906
    5. ' m' → logprob: -7.274024963378906
    6. ' move' → logprob: -8.274024963378906
    7. 'd' → logprob: -8.649024963378906
    8. 'line' → logprob: -8.899024963378906
    9. 'v' → logprob: -9.899024963378906
    10. 'i' → logprob: -10.524024963378906

Token 132: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03447054699063301
    2. 'in' → logprob: -3.534470558166504
    3. ',' → logprob: -5.409470558166504
    4. ' ,' → logprob: -9.784470558166504
    5. '_' → logprob: -9.909470558166504
    6. ' ' → logprob: -10.034470558166504
    7. '[' → logprob: -11.284470558166504
    8. '   ' → logprob: -11.534470558166504
    9. '_in' → logprob: -11.659470558166504
    10. 'move' → logprob: -11.784470558166504

Token 133: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008172092959284782
    2. ' y' → logprob: -4.883172035217285
    3. 's' → logprob: -8.008172035217285
    4. '(y' → logprob: -8.883172035217285
    5. 'sy' → logprob: -10.383172035217285
    6. 'from' → logprob: -10.883172035217285
    7. 'sx' → logprob: -11.633172035217285
    8. '*y' → logprob: -11.883172035217285
    9. 'yi' → logprob: -12.508172035217285
    10. 'iy' → logprob: -12.508172035217285

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006927193142473698
    2. '1' → logprob: -5.256927013397217
    3. ',x' → logprob: -7.506927013397217
    4. 'x' → logprob: -7.881927013397217
    5. '0' → logprob: -8.006927490234375
    6. '_,' → logprob: -8.881927490234375
    7. ' ,' → logprob: -8.881927490234375
    8. 'in' → logprob: -10.006927490234375
    9. ',z' → logprob: -10.881927490234375
    10. 'a' → logprob: -11.256927490234375

Token 135: ' x' (ID: 1215)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.20885515213012695
    2. 'nx' → logprob: -2.458855152130127
    3. 'xx' → logprob: -2.958855152130127
    4. 'x' → logprob: -3.708855152130127
    5. 'X' → logprob: -4.333855152130127
    6. 'tx' → logprob: -4.958855152130127
    7. 'p' → logprob: -5.833855152130127
    8. 'sx' → logprob: -6.583855152130127
    9. 'u' → logprob: -7.208855152130127
    10. 'px' → logprob: -7.583855152130127

Token 136: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.5419756770133972
    2. '1' → logprob: -1.166975736618042
    3. ',' → logprob: -2.291975736618042
    4. 'p' → logprob: -6.041975498199463
    5. '_,' → logprob: -6.291975498199463
    6. 'from' → logprob: -7.666975498199463
    7. '0' → logprob: -7.916975498199463
    8. 'a' → logprob: -8.541975975036621
    9. '_next' → logprob: -8.541975975036621
    10. 'r' → logprob: -9.166975975036621

Token 137: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.796184723294573e-06
    2. ' ,' → logprob: -12.375005722045898
    3. '2' → logprob: -14.250005722045898
    4. ',y' → logprob: -14.500005722045898
    5. '_,' → logprob: -15.500005722045898
    6. ',x' → logprob: -15.875005722045898
    7. '1' → logprob: -17.3750057220459
    8. 'a' → logprob: -18.3750057220459
    9. ',z' → logprob: -18.5000057220459
    10. 'y' → logprob: -19.0000057220459

Token 138: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.002476016292348504
    2. ' y' → logprob: -6.002476215362549
    3. ' ' → logprob: -16.37747573852539
    4. 'x' → logprob: -16.62747573852539
    5. '   ' → logprob: -16.62747573852539
    6. '  ' → logprob: -16.87747573852539
    7. '    ' → logprob: -17.87747573852539
    8. 'z' → logprob: -18.50247573852539
    9. '	y' → logprob: -19.12747573852539
    10. 'w' → logprob: -20.50247573852539

Token 139: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0007235141238197684
    2. ',' → logprob: -8.000723838806152
    3. '_' → logprob: -8.375723838806152
    4. '=' → logprob: -10.250723838806152
    5. '₂' → logprob: -10.750723838806152
    6. '_,' → logprob: -10.875723838806152
    7. '```' → logprob: -11.250723838806152
    8. 'print' → logprob: -11.250723838806152
    9. 'x' → logprob: -11.500723838806152
    10. ' ' → logprob: -11.500723838806152

Token 140: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07889749854803085
    2. 'in' → logprob: -2.578897476196289
    3. ',' → logprob: -12.578897476196289
    4. ' ' → logprob: -13.578897476196289
    5. 's' → logprob: -14.453897476196289
    6. ')' → logprob: -14.703897476196289
    7. '	in' → logprob: -14.953897476196289
    8. 'In' → logprob: -15.328897476196289
    9. '  ' → logprob: -15.453897476196289
    10. ' ,' → logprob: -15.953897476196289

Token 141: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.00020354038861114532
    2. ' move' → logprob: -8.500203132629395
    3. '(move' → logprob: -18.75020408630371
    4. '   ' → logprob: -19.37520408630371
    5. '	move' → logprob: -20.50020408630371
    6. 'mov' → logprob: -21.25020408630371
    7. ' ' → logprob: -21.25020408630371
    8. 'moves' → logprob: -22.50020408630371
    9. '  ' → logprob: -22.75020408630371
    10. '.move' → logprob: -23.00020408630371

Token 142: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008762525394558907
    2. ':
' → logprob: -4.758762359619141
    3. '):' → logprob: -9.88376235961914
    4. ',' → logprob: -10.13376235961914
    5. 'print' → logprob: -10.75876235961914
    6. '):
' → logprob: -11.13376235961914
    7. '<|end|>' → logprob: -12.38376235961914
    8. ':**' → logprob: -12.88376235961914
    9. ' print' → logprob: -13.00876235961914
    10. ')' → logprob: -13.00876235961914

Token 143: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12983892858028412
    2. ' print' → logprob: -2.6298389434814453
    3. 'print' → logprob: -3.0048389434814453
    4. '	print' → logprob: -9.629838943481445
    5. '    
' → logprob: -10.129838943481445
    6. '       ' → logprob: -12.379838943481445
    7. '```' → logprob: -12.879838943481445
    8. '<|end|>' → logprob: -12.879838943481445
    9. ' 
' → logprob: -13.379838943481445
    10. '
' → logprob: -13.379838943481445

Token 144: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.02078745886683464
    2. ' print' → logprob: -4.270787239074707
    3. '   ' → logprob: -5.020787239074707
    4. '	print' → logprob: -12.895787239074707
    5. '       ' → logprob: -15.645787239074707
    6. '```' → logprob: -16.770788192749023
    7. '  ' → logprob: -17.020788192749023
    8. ' ' → logprob: -17.020788192749023
    9. '    ' → logprob: -17.395788192749023
    10. '    
' → logprob: -18.395788192749023

Token 145: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005265804938971996
    2. 'x' → logprob: -8.250526428222656
    3. '(f' → logprob: -8.375526428222656
    4. '(' → logprob: -10.375526428222656
    5. 'f' → logprob: -12.625526428222656
    6. '{x' → logprob: -15.750526428222656
    7. ' x' → logprob: -15.875526428222656
    8. '(
' → logprob: -18.375526428222656
    9. '("{}' → logprob: -18.375526428222656
    10. '('{}' → logprob: -18.625526428222656

Token 146: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005943780997768044
    2. ' ,' → logprob: -7.500594615936279
    3. ',y' → logprob: -10.250594139099121
    4. ',end' → logprob: -12.375594139099121
    5. '+' → logprob: -13.875594139099121
    6. ',x' → logprob: -14.500594139099121
    7. ' y' → logprob: -16.375595092773438
    8. '   ' → logprob: -16.625595092773438
    9. ' ' → logprob: -16.750595092773438
    10. ')' → logprob: -17.625595092773438

Token 147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001035191467963159
    2. ' ' → logprob: -6.876035213470459
    3. '```' → logprob: -14.1260347366333
    4. ',' → logprob: -14.6260347366333
    5. '0' → logprob: -15.1260347366333
    6. '`' → logprob: -15.2510347366333
    7. ')' → logprob: -15.3760347366333
    8. ' ,' → logprob: -15.5010347366333
    9. '"' → logprob: -15.6260347366333
    10. '   ' → logprob: -16.251035690307617

Token 148: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007878291653469205
    2. ' ,' → logprob: -7.625787734985352
    3. ',y' → logprob: -8.125787734985352
    4. ' y' → logprob: -12.875787734985352
    5. '   ' → logprob: -14.750787734985352
    6. 'y' → logprob: -14.750787734985352
    7. ',
' → logprob: -15.875787734985352
    8. ',end' → logprob: -16.12578773498535
    9. ',x' → logprob: -16.12578773498535
    10. '_,' → logprob: -17.00078773498535

Token 149: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0067154900170862675
    2. ' y' → logprob: -5.006715297698975
    3. '	y' → logprob: -16.881715774536133
    4. '(y' → logprob: -17.506715774536133
    5. '   ' → logprob: -18.006715774536133
    6. ',y' → logprob: -18.631715774536133
    7. ''y' → logprob: -18.756715774536133
    8. '    ' → logprob: -19.131715774536133
    9. '<|end|>' → logprob: -19.256715774536133
    10. ')y' → logprob: -19.381715774536133

Token 150: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.5094070477061905e-05
    2. ' +' → logprob: -11.125015258789062
    3. '1' → logprob: -16.250015258789062
    4. '+
' → logprob: -16.750015258789062
    5. '+x' → logprob: -17.125015258789062
    6. '<|end|>' → logprob: -19.375015258789062
    7. '+)' → logprob: -19.875015258789062
    8. '+,' → logprob: -19.875015258789062
    9. '＋' → logprob: -20.000015258789062
    10. '2' → logprob: -20.125015258789062

Token 151: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '+' → logprob: -17.375001907348633
    4. '2' → logprob: -18.000001907348633
    5. '```' → logprob: -18.500001907348633
    6. '<|end|>' → logprob: -19.000001907348633
    7. '   ' → logprob: -19.375001907348633
    8. '0' → logprob: -20.312501907348633
    9. ' +' → logprob: -20.562501907348633
    10. '`' → logprob: -21.187501907348633

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000556012790184468
    2. ' ,' → logprob: -8.000555992126465
    3. ',x' → logprob: -9.000555992126465
    4. 'x' → logprob: -9.250555992126465
    5. '   ' → logprob: -14.750555992126465
    6. ' x' → logprob: -15.125555992126465
    7. '+,' → logprob: -15.875555992126465
    8. ',
' → logprob: -16.62555694580078
    9. '1' → logprob: -17.00055694580078
    10. '+' → logprob: -17.12555694580078

Token 153: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002613358374219388
    2. ' x' → logprob: -8.250261306762695
    3. '	x' → logprob: -21.125261306762695
    4. ')x' → logprob: -21.250261306762695
    5. '{x' → logprob: -21.375261306762695
    6. '(x' → logprob: -21.875261306762695
    7. '"x' → logprob: -22.500261306762695
    8. '$x' → logprob: -22.750261306762695
    9. '   ' → logprob: -23.250261306762695
    10. ',x' → logprob: -24.250261306762695

Token 154: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.25194013118743896
    2. '2' → logprob: -1.501940131187439
    3. '```' → logprob: -12.50193977355957
    4. '<|end|>' → logprob: -12.87693977355957
    5. ',' → logprob: -13.50193977355957
    6. ' +' → logprob: -13.62693977355957
    7. '1' → logprob: -14.50193977355957
    8. '+
' → logprob: -15.25193977355957
    9. ')' → logprob: -15.37693977355957
    10. ''+' → logprob: -15.37693977355957

Token 155: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.165027217415627e-05
    2. ' +' → logprob: -10.750021934509277
    3. ',' → logprob: -15.750021934509277
    4. '+
' → logprob: -17.25002098083496
    5. '1' → logprob: -18.00002098083496
    6. '+,' → logprob: -19.00002098083496
    7. '```' → logprob: -20.50002098083496
    8. '＋' → logprob: -20.75002098083496
    9. '2' → logprob: -20.75002098083496
    10. '()+' → logprob: -20.87502098083496

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -17.25000762939453
    4. '```' → logprob: -18.00000762939453
    5. '<|end|>' → logprob: -18.12500762939453
    6. '0' → logprob: -18.25000762939453
    7. '   ' → logprob: -19.37500762939453
    8. '  ' → logprob: -20.00000762939453
    9. '+' → logprob: -20.25000762939453
    10. '１' → logprob: -20.43750762939453

Token 157: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024287392443511635
    2. ' ,' → logprob: -8.375243186950684
    3. ',y' → logprob: -11.375243186950684
    4. ' y' → logprob: -15.125243186950684
    5. 'y' → logprob: -16.000242233276367
    6. '   ' → logprob: -16.125242233276367
    7. ')' → logprob: -16.250242233276367
    8. '1' → logprob: -16.750242233276367
    9. ',
' → logprob: -17.125242233276367
    10. ' ' → logprob: -17.125242233276367

Token 158: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.004083266947418451
    2. ' y' → logprob: -5.504083156585693
    3. 'x' → logprob: -12.254083633422852
    4. 'z' → logprob: -17.12908363342285
    5. '	y' → logprob: -17.12908363342285
    6. '1' → logprob: -17.12908363342285
    7. ' ' → logprob: -17.50408363342285
    8. ')y' → logprob: -18.12908363342285
    9. '   ' → logprob: -18.25408363342285
    10. ')' → logprob: -18.25408363342285

Token 159: '2' (ID: 17)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0021949794609099627
    2. '2' → logprob: -6.127194881439209
    3. '1' → logprob: -12.002195358276367
    4. ' +' → logprob: -13.002195358276367
    5. '```' → logprob: -13.752195358276367
    6. '+
' → logprob: -15.377195358276367
    7. ')' → logprob: -16.252195358276367
    8. '<|end|>' → logprob: -16.502195358276367
    9. ')+' → logprob: -17.252195358276367
    10. '[' → logprob: -17.502195358276367

Token 160: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.2664456789934775e-06
    2. '2' → logprob: -14.125000953674316
    3. ' +' → logprob: -15.500000953674316
    4. '+
' → logprob: -15.625000953674316
    5. '```' → logprob: -16.875001907348633
    6. '1' → logprob: -18.250001907348633
    7. '[' → logprob: -18.750001907348633
    8. '<|end|>' → logprob: -19.000001907348633
    9. ')+' → logprob: -19.625001907348633
    10. '+)' → logprob: -19.875001907348633

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3856492842023727e-06
    2. ' ' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -16.125001907348633
    4. '0' → logprob: -16.500001907348633
    5. '2' → logprob: -16.750001907348633
    6. ')' → logprob: -17.875001907348633
    7. '```' → logprob: -18.750001907348633
    8. '-' → logprob: -19.500001907348633
    9. '<|end|>' → logprob: -21.750001907348633
    10. '   ' → logprob: -22.500001907348633

Token 162: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ')
' → logprob: -14.500000953674316
    3. ' )' → logprob: -14.750000953674316
    4. ')`' → logprob: -17.375001907348633
    5. '')' → logprob: -17.750001907348633
    6. ')#' → logprob: -18.000001907348633
    7. '))' → logprob: -18.000001907348633
    8. '`)' → logprob: -18.000001907348633
    9. '）' → logprob: -19.125001907348633
    10. '),' → logprob: -19.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 160
Tokens correctement prédits (1ère position, stricte): 87
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 148
Précision stricte (1ère position): 54.37%
Précision adaptée (1ère position): 57.50%
Précision (top 10): 92.50%
================================================================================
