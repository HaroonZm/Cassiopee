================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:07
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
s = input()
t = input()
alp_s = []
alp_t = []
num_s = []
num_t = []
for i in range(len(s)):
    cnt = 0
    for j in alp_s:
        if s[i] == j:
            num_s[cnt] += 1
        cnt += 1
    if not s[i] in alp_s:
        alp_s.append(s[i])
        num_s.append(1)
    cnt = 0
    for j in alp_t:
        if t[i] == j:
            num_t[cnt] += 1
        cnt += 1
    if not t[i] in alp_t:
        alp_t.append(t[i])
        num_t.append(1)
    if num_s != num_t:
        print('No')
        quit()
print('Yes')
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 's' (ID: 82)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00987295713275671
    2. '\n' → logprob: -6.009872913360596
    3. '<|end|>' → logprob: -6.384872913360596
    4. 'import' → logprob: -6.634872913360596
    5. '```' → logprob: -6.634872913360596
    6. '\' → logprob: -6.634872913360596
    7. '.pi' → logprob: -8.259873390197754
    8. 'def' → logprob: -8.384873390197754
    9. 'newline' → logprob: -8.759873390197754
    10. '<|end|>' → logprob: -8.884873390197754

Token 4: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.34538954496383667
    2. '.' → logprob: -1.4703896045684814
    3. 'qrt' → logprob: -3.7203896045684814
    4. '=' → logprob: -4.595389366149902
    5. 'i' → logprob: -4.970389366149902
    6. 'u' → logprob: -5.220389366149902
    7. '[' → logprob: -5.845389366149902
    8. '(' → logprob: -5.970389366149902
    9. 't' → logprob: -6.220389366149902
    10. 'quare' → logprob: -6.345389366149902

Token 5: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34872114658355713
    2. ' math' → logprob: -1.3487211465835571
    3. ' "' → logprob: -4.348721027374268
    4. 'math' → logprob: -5.098721027374268
    5. '"' → logprob: -5.223721027374268
    6. ' int' → logprob: -5.848721027374268
    7. '0' → logprob: -6.598721027374268
    8. ' s' → logprob: -6.848721027374268
    9. ' '' → logprob: -6.848721027374268
    10. '1' → logprob: -7.473721027374268

Token 6: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0007113590254448354
    2. '('' → logprob: -7.875711441040039
    3. ''' → logprob: -8.875711441040039
    4. '(
' → logprob: -9.750711441040039
    5. '("("' → logprob: -9.875711441040039
    6. ' (' → logprob: -11.125711441040039
    7. '`' → logprob: -11.250711441040039
    8. '"' → logprob: -11.250711441040039
    9. ')' → logprob: -11.500711441040039
    10. '(

' → logprob: -11.750711441040039

Token 7: 't' (ID: 83)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21141229569911957
    2. 'result' → logprob: -3.336412191390991
    3. '[' → logprob: -3.586412191390991
    4. ''' → logprob: -3.961412191390991
    5. '(' → logprob: -3.961412191390991
    6. ')' → logprob: -4.33641242980957
    7. 'if' → logprob: -4.33641242980957
    8. '_' → logprob: -4.71141242980957
    9. '=' → logprob: -4.71141242980957
    10. '**' → logprob: -4.83641242980957

Token 8: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.40304315090179443
    2. '.' → logprob: -1.9030431509017944
    3. '=' → logprob: -2.528043270111084
    4. 'oken' → logprob: -3.153043270111084
    5. 'okens' → logprob: -3.903043270111084
    6. 'o' → logprob: -4.653043270111084
    7. 'r' → logprob: -5.278043270111084
    8. 'ok' → logprob: -5.403043270111084
    9. '[' → logprob: -5.528043270111084
    10. '(' → logprob: -5.528043270111084

Token 9: ' input' (ID: 3422)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.46095848083496094
    2. 's' → logprob: -1.585958480834961
    3. 'input' → logprob: -2.835958480834961
    4. ' input' → logprob: -2.960958480834961
    5. ' ' → logprob: -4.210958480834961
    6. ' math' → logprob: -4.210958480834961
    7. '"' → logprob: -4.960958480834961
    8. 'int' → logprob: -5.460958480834961
    9. ' int' → logprob: -6.210958480834961
    10. ''' → logprob: -6.210958480834961

Token 10: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.43005508184432983
    2. '()' → logprob: -1.0550551414489746
    3. '.' → logprob: -7.430055141448975
    4. ')' → logprob: -8.180054664611816
    5. '(
' → logprob: -8.680054664611816
    6. '(

' → logprob: -9.555054664611816
    7. ' (' → logprob: -9.930054664611816
    8. ' ' → logprob: -10.305054664611816
    9. '```' → logprob: -10.305054664611816
    10. ' ()' → logprob: -11.055054664611816

Token 11: 'alp' (ID: 100669)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.17307518422603607
    2. 'i' → logprob: -2.1730751991271973
    3. ' if' → logprob: -4.298075199127197
    4. 'd' → logprob: -4.673075199127197
    5. 'for' → logprob: -5.298075199127197
    6. '.' → logprob: -5.673075199127197
    7. 'n' → logprob: -5.923075199127197
    8. 's' → logprob: -6.548075199127197
    9. '```' → logprob: -7.173075199127197
    10. 'a' → logprob: -7.298075199127197

Token 12: '_s' (ID: 1278)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.032959409058094025
    2. 'ha' → logprob: -3.532959461212158
    3. 'hab' → logprob: -6.907959461212158
    4. 'has' → logprob: -7.157959461212158
    5. '=' → logprob: -7.282959461212158
    6. ' =' → logprob: -8.282958984375
    7. 'abet' → logprob: -9.157958984375
    8. '```' → logprob: -9.407958984375
    9. 'hat' → logprob: -10.032958984375
    10. 'hah' → logprob: -11.032958984375

Token 13: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4822952151298523
    2. 'a' → logprob: -1.607295274734497
    3. '[a' → logprob: -1.857295274734497
    4. '```' → logprob: -5.232295036315918
    5. ']' → logprob: -5.732295036315918
    6. 'as' → logprob: -5.857295036315918
    7. '['' → logprob: -6.232295036315918
    8. '[:]' → logprob: -6.357295036315918
    9. '[]' → logprob: -6.357295036315918
    10. '=' → logprob: -6.857295036315918

Token 14: ' []
' (ID: 8911)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.5637239217758179
    2. ' set' → logprob: -1.4387239217758179
    3. '{}' → logprob: -1.9387239217758179
    4. ' {}' → logprob: -3.3137240409851074
    5. ' [' → logprob: -6.063724040985107
    6. '{' → logprob: -6.188724040985107
    7. 's' → logprob: -6.313724040985107
    8. '[' → logprob: -6.313724040985107
    9. ' s' → logprob: -6.688724040985107
    10. '{s' → logprob: -6.938724040985107

Token 15: 'alp' (ID: 100669)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.017404792830348015
    2. '=' → logprob: -5.017404556274414
    3. ' for' → logprob: -5.517404556274414
    4. 'f' → logprob: -5.767404556274414
    5. 'a' → logprob: -6.642404556274414
    6. '_' → logprob: -7.267404556274414
    7. 's' → logprob: -7.642404556274414
    8. '[' → logprob: -8.517404556274414
    9. '.' → logprob: -9.017404556274414
    10. ' =' → logprob: -9.392404556274414

Token 16: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8123716711997986
    2. '_s' → logprob: -0.9373716711997986
    3. '_t' → logprob: -1.8123717308044434
    4. 't' → logprob: -7.937371730804443
    5. '_a' → logprob: -8.437371253967285
    6. 's' → logprob: -8.812371253967285
    7. '_=' → logprob: -9.062371253967285
    8. '_o' → logprob: -9.187371253967285
    9. ' =' → logprob: -10.312371253967285
    10. '_u' → logprob: -10.312371253967285

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.35015904903411865
    2. '=' → logprob: -1.2251590490341187
    3. '.append' → logprob: -7.350159168243408
    4. '=[]' → logprob: -7.600159168243408
    5. '.' → logprob: -7.850159168243408
    6. '[:]' → logprob: -10.22515869140625
    7. '[]' → logprob: -10.35015869140625
    8. '_' → logprob: -10.85015869140625
    9. 's' → logprob: -10.97515869140625
    10. '.=' → logprob: -11.10015869140625

Token 18: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.06953129917383194
    2. ' []' → logprob: -2.819531202316284
    3. 'set' → logprob: -5.194531440734863
    4. '{}' → logprob: -6.819531440734863
    5. ' set' → logprob: -7.194531440734863
    6. ' {}' → logprob: -10.069531440734863
    7. '[' → logprob: -10.069531440734863
    8. '[]
' → logprob: -10.194531440734863
    9. '[]}' → logprob: -12.569531440734863
    10. '[:]' → logprob: -12.569531440734863

Token 19: 'num' (ID: 4571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01748093217611313
    2. ' for' → logprob: -4.267480850219727
    3. 's' → logprob: -6.642480850219727
    4. 'f' → logprob: -7.267480850219727
    5. '=' → logprob: -7.392480850219727
    6. ':' → logprob: -8.392480850219727
    7. 'a' → logprob: -8.767480850219727
    8. ' ' → logprob: -9.642480850219727
    9. 'i' → logprob: -10.142480850219727
    10. 'n' → logprob: -10.267480850219727

Token 20: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5236570835113525
    2. '_' → logprob: -1.1486570835113525
    3. 's' → logprob: -2.5236570835113525
    4. ' =' → logprob: -5.398656845092773
    5. '_chars' → logprob: -6.398656845092773
    6. 'ber' → logprob: -6.898656845092773
    7. 'p' → logprob: -6.898656845092773
    8. '_a' → logprob: -7.648656845092773
    9. '_p' → logprob: -8.023656845092773
    10. '=' → logprob: -8.398656845092773

Token 21: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.36746925115585327
    2. '_' → logprob: -1.617469310760498
    3. ' =' → logprob: -2.867469310760498
    4. 's' → logprob: -2.992469310760498
    5. '[' → logprob: -7.367469310760498
    6. '_=' → logprob: -8.24246883392334
    7. '=[]' → logprob: -8.49246883392334
    8. ')' → logprob: -8.86746883392334
    9. '[:]' → logprob: -8.86746883392334
    10. '(' → logprob: -9.11746883392334

Token 22: ' []
' (ID: 8911)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2245226502418518
    2. '[]' → logprob: -2.724522590637207
    3. '{}' → logprob: -3.349522590637207
    4. '[' → logprob: -3.599522590637207
    5. ' ' → logprob: -3.599522590637207
    6. ' []' → logprob: -3.974522590637207
    7. 'len' → logprob: -4.099522590637207
    8. ' len' → logprob: -5.849522590637207
    9. ' [' → logprob: -5.974522590637207
    10. ' {}' → logprob: -6.349522590637207

Token 23: 'num' (ID: 4571)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15303651988506317
    2. 'num' → logprob: -2.028036594390869
    3. ' for' → logprob: -5.528036594390869
    4. 'n' → logprob: -5.778036594390869
    5. '[]' → logprob: -6.778036594390869
    6. '[' → logprob: -8.278036117553711
    7. 's' → logprob: -8.278036117553711
    8. '_' → logprob: -8.403036117553711
    9. 'i' → logprob: -8.653036117553711
    10. 'count' → logprob: -8.903036117553711

Token 24: '_t' (ID: 838)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05508730933070183
    2. '_s' → logprob: -2.9300873279571533
    3. ' _' → logprob: -10.305087089538574
    4. '_t' → logprob: -10.430087089538574
    5. 's' → logprob: -10.430087089538574
    6. '_=' → logprob: -10.930087089538574
    7. '_a' → logprob: -10.930087089538574
    8. '_

' → logprob: -11.430087089538574
    9. '```' → logprob: -11.430087089538574
    10. '_)' → logprob: -11.930087089538574

Token 25: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2526528835296631
    2. '=' → logprob: -1.502652883529663
    3. '=[]' → logprob: -7.377653121948242
    4. '.append' → logprob: -10.502653121948242
    5. 's' → logprob: -10.752653121948242
    6. '[]' → logprob: -11.127653121948242
    7. ')' → logprob: -12.002653121948242
    8. ']' → logprob: -12.002653121948242
    9. '=[]
' → logprob: -12.252653121948242
    10. '.' → logprob: -12.627653121948242

Token 26: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -8.363617962459102e-05
    2. ' []' → logprob: -10.125083923339844
    3. '[]
' → logprob: -10.500083923339844
    4. '[' → logprob: -11.750083923339844
    5. '0' → logprob: -12.375083923339844
    6. '[]}' → logprob: -12.875083923339844
    7. '[]

' → logprob: -14.500083923339844
    8. '=[]' → logprob: -15.250083923339844
    9. '[])' → logprob: -15.625083923339844
    10. '[:]' → logprob: -15.750083923339844

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -4.906711546937004e-05
    2. ' for' → logprob: -10.500048637390137
    3. 'i' → logprob: -11.500048637390137
    4. 'f' → logprob: -12.125048637390137
    5. 'n' → logprob: -12.875048637390137
    6. 'a' → logprob: -13.750048637390137
    7. 's' → logprob: -14.500048637390137
    8. 'd' → logprob: -14.750048637390137
    9. '#' → logprob: -15.500048637390137
    10. '```' → logprob: -15.500048637390137

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5555055141448975
    2. ' c' → logprob: -1.3055055141448975
    3. ' ' → logprob: -1.9305055141448975
    4. 'c' → logprob: -5.305505752563477
    5. 'i' → logprob: -6.055505752563477
    6. ' _' → logprob: -6.180505752563477
    7. ' s' → logprob: -8.555505752563477
    8. ' ch' → logprob: -8.930505752563477
    9. ' x' → logprob: -9.180505752563477
    10. ' char' → logprob: -9.430505752563477

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012736006639897823
    2. 'in' → logprob: -4.387735843658447
    3. ' ' → logprob: -8.512736320495605
    4. '  ' → logprob: -11.887736320495605
    5. 'n' → logprob: -12.012736320495605
    6. 'range' → logprob: -13.012736320495605
    7. 's' → logprob: -13.262736320495605
    8. ' range' → logprob: -13.512736320495605
    9. ',' → logprob: -13.762736320495605
    10. ')' → logprob: -13.887736320495605

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.004011441953480244
    2. 'range' → logprob: -5.629011631011963
    3. ' ' → logprob: -8.504011154174805
    4. ' s' → logprob: -8.629011154174805
    5. 's' → logprob: -11.004011154174805
    6. ' xrange' → logprob: -12.754011154174805
    7. ')' → logprob: -13.129011154174805
    8. ' r' → logprob: -13.254011154174805
    9. '(range' → logprob: -13.754011154174805
    10. ' ra' → logprob: -13.754011154174805

Token 31: '(len' (ID: 14990)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3133432865142822
    2. '(len' → logprob: -1.3133432865142822
    3. '(length' → logprob: -9.563343048095703
    4. '(s' → logprob: -12.813343048095703
    5. ' (' → logprob: -12.938343048095703
    6. '(range' → logprob: -13.438343048095703
    7. 'len' → logprob: -14.188343048095703
    8. '()' → logprob: -14.188343048095703
    9. '(strlen' → logprob: -14.688343048095703
    10. '(ord' → logprob: -14.813343048095703

Token 32: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.006801337003707886
    2. '(' → logprob: -5.006801128387451
    3. 's' → logprob: -9.38180160522461
    4. '(t' → logprob: -13.63180160522461
    5. '(a' → logprob: -15.50680160522461
    6. '(al' → logprob: -15.50680160522461
    7. ' (' → logprob: -16.63180160522461
    8. '(
' → logprob: -16.75680160522461
    9. ')' → logprob: -17.00680160522461
    10. '(

' → logprob: -17.88180160522461

Token 33: ')):
' (ID: 22530)
  Prédit: ')):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')):' → logprob: -0.38974064588546753
    2. '):' → logprob: -1.1397407054901123
    3. '))' → logprob: -6.014740467071533
    4. ')' → logprob: -8.389740943908691
    5. ' ):' → logprob: -9.264740943908691
    6. ')):
' → logprob: -10.514740943908691
    7. ':' → logprob: -10.889740943908691
    8. '():' → logprob: -11.389740943908691
    9. ']):' → logprob: -11.514740943908691
    10. '>):' → logprob: -11.764740943908691

Token 34: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18822869658470154
    2. '   ' → logprob: -1.813228726387024
    3. ' ' → logprob: -5.813228607177734
    4. ' :' → logprob: -6.063228607177734
    5. ' if' → logprob: -6.563228607177734
    6. ')' → logprob: -8.438228607177734
    7. '<|end|>' → logprob: -8.438228607177734
    8. '):' → logprob: -8.563228607177734
    9. 'if' → logprob: -8.688228607177734
    10. ''s' → logprob: -8.813228607177734

Token 35: ' cnt' (ID: 27340)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6572247743606567
    2. 'if' → logprob: -0.7822247743606567
    3. '   ' → logprob: -4.282224655151367
    4. ' ' → logprob: -5.032224655151367
    5. ':' → logprob: -5.657224655151367
    6. ')' → logprob: -8.907224655151367
    7. 's' → logprob: -9.032224655151367
    8. '	if' → logprob: -9.657224655151367
    9. '):' → logprob: -10.782224655151367
    10. ' )' → logprob: -10.907224655151367

Token 36: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5953954458236694
    2. '[' → logprob: -1.2203954458236694
    3. 's' → logprob: -2.345395565032959
    4. '_' → logprob: -3.345395565032959
    5. ')' → logprob: -4.470395565032959
    6. '(s' → logprob: -5.470395565032959
    7. '[s' → logprob: -6.220395565032959
    8. ']' → logprob: -6.720395565032959
    9. ' ' → logprob: -6.720395565032959
    10. '=' → logprob: -7.595395565032959

Token 37: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10787823796272278
    2. 's' → logprob: -2.4828782081604004
    3. '1' → logprob: -4.2328782081604
    4. ' ' → logprob: -6.6078782081604
    5. '{}' → logprob: -6.8578782081604
    6. '{' → logprob: -7.3578782081604
    7. 't' → logprob: -7.3578782081604
    8. ' s' → logprob: -8.607878684997559
    9. '{s' → logprob: -9.357878684997559
    10. 'int' → logprob: -9.982878684997559

Token 38: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3744407892227173
    2. 's' → logprob: -1.2494407892227173
    3. '1' → logprob: -3.9994406700134277
    4. 't' → logprob: -5.624440670013428
    5. 'len' → logprob: -6.874440670013428
    6. '{' → logprob: -6.999440670013428
    7. 'alp' → logprob: -7.624440670013428
    8. '{}' → logprob: -8.124441146850586
    9. '{s' → logprob: -8.249441146850586
    10. 'math' → logprob: -8.749441146850586

Token 39: '
' (ID: 198)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6713786125183105
    2. '   ' → logprob: -1.0463786125183105
    3. ' if' → logprob: -3.0463786125183105
    4. '<|end|>' → logprob: -3.1713786125183105
    5. '    ' → logprob: -3.4213786125183105
    6. ':' → logprob: -5.6713786125183105
    7. '  ' → logprob: -5.6713786125183105
    8. 'if' → logprob: -6.1713786125183105
    9. '       ' → logprob: -6.6713786125183105
    10. ')' → logprob: -7.2963786125183105

Token 40: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.08087720721960068
    2. '   ' → logprob: -3.2058773040771484
    3. ' if' → logprob: -4.080877304077148
    4. '    ' → logprob: -4.705877304077148
    5. '<|end|>' → logprob: -5.330877304077148
    6. 'if' → logprob: -5.705877304077148
    7. '  ' → logprob: -7.205877304077148
    8. ')' → logprob: -7.830877304077148
    9. '       ' → logprob: -8.205877304077148
    10. ' )' → logprob: -8.455877304077148

Token 41: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.505963146686554
    2. 'if' → logprob: -1.0059630870819092
    3. '   ' → logprob: -4.630963325500488
    4. 'for' (adapté à ' for') → logprob: -4.755963325500488
    5. ' ' → logprob: -5.380963325500488
    6. ' for' → logprob: -6.005963325500488
    7. '    ' → logprob: -6.005963325500488
    8. ' while' → logprob: -6.255963325500488
    9. 'while' → logprob: -7.130963325500488
    10. ')' → logprob: -8.880963325500488

Token 42: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.18253402411937714
    2. ' range' → logprob: -2.3075339794158936
    3. 'j' → logprob: -3.0575339794158936
    4. 'range' → logprob: -3.9325339794158936
    5. ' ' → logprob: -8.057534217834473
    6. ' alp' → logprob: -9.307534217834473
    7. ')' → logprob: -9.432534217834473
    8. 'alp' → logprob: -9.932534217834473
    9. ' s' → logprob: -10.432534217834473
    10. '  ' → logprob: -10.932534217834473

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014355769380927086
    2. 'in' → logprob: -4.264355659484863
    3. 'range' → logprob: -9.014355659484863
    4. ' ' → logprob: -10.139355659484863
    5. '   ' → logprob: -11.514355659484863
    6. ' range' → logprob: -12.264355659484863
    7. ')' → logprob: -12.639355659484863
    8. '(range' → logprob: -12.639355659484863
    9. '  ' → logprob: -13.139355659484863
    10. '    ' → logprob: -13.389355659484863

Token 44: ' alp' (ID: 107692)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.4741498529911041
    2. 'range' → logprob: -0.9741498231887817
    3. 'alp' → logprob: -10.474149703979492
    4. '(range' → logprob: -11.349149703979492
    5. 's' → logprob: -11.474149703979492
    6. ' alp' → logprob: -11.974149703979492
    7. ' s' → logprob: -12.474149703979492
    8. ')' → logprob: -12.849149703979492
    9. ' rang' → logprob: -13.349149703979492
    10. 'rang' → logprob: -13.599149703979492

Token 45: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.00011212585377506912
    2. '_t' → logprob: -9.125112533569336
    3. 's' → logprob: -13.250112533569336
    4. '_' → logprob: -14.750112533569336
    5. '_a' → logprob: -14.750112533569336
    6. 't' → logprob: -15.750112533569336
    7. ')' → logprob: -15.875112533569336
    8. 'a' → logprob: -16.750112533569336
    9. ' _' → logprob: -16.875112533569336
    10. '(s' → logprob: -17.000112533569336

Token 46: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.15645486116409302
    2. '):' → logprob: -2.4064548015594482
    3. ')' → logprob: -3.4064548015594482
    4. '<|end|>' → logprob: -4.906455039978027
    5. ' in' → logprob: -5.156455039978027
    6. 'in' → logprob: -6.406455039978027
    7. '   ' → logprob: -6.656455039978027
    8. ' :' → logprob: -7.031455039978027
    9. '<|end|>' → logprob: -7.656455039978027
    10. '[' → logprob: -7.656455039978027

Token 47: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6560667157173157
    2. ' if' → logprob: -1.531066656112671
    3. ':' → logprob: -2.531066656112671
    4. '    ' → logprob: -2.656066656112671
    5. 'if' → logprob: -2.906066656112671
    6. '   ' → logprob: -3.156066656112671
    7. '<|end|>' → logprob: -5.53106689453125
    8. ' :' → logprob: -5.78106689453125
    9. ' ' → logprob: -5.90606689453125
    10. '[' → logprob: -6.53106689453125

Token 48: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 49: ' s' (ID: 265)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4418439269065857
    2. 'j' → logprob: -1.1918439865112305
    3. ' s' → logprob: -3.3168439865112305
    4. 's' → logprob: -4.0668439865112305
    5. ' i' → logprob: -10.06684398651123
    6. 'i' → logprob: -10.19184398651123
    7. ' ' → logprob: -12.56684398651123
    8. ' not' → logprob: -13.44184398651123
    9. 'alp' → logprob: -14.06684398651123
    10. '	j' → logprob: -14.19184398651123

Token 50: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.014332969672977924
    2. '[j' → logprob: -4.2643327713012695
    3. '[' → logprob: -8.76433277130127
    4. '==' → logprob: -12.13933277130127
    5. ' [' → logprob: -12.76433277130127
    6. '[count' → logprob: -13.51433277130127
    7. ' ==' → logprob: -13.76433277130127
    8. '[I' → logprob: -14.51433277130127
    9. '[index' → logprob: -14.63933277130127
    10. '[len' → logprob: -14.76433277130127

Token 51: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3971118628978729
    2. ' ==' → logprob: -1.1471118927001953
    3. ']==' → logprob: -5.272111892700195
    4. ']' → logprob: -5.397111892700195
    5. ' ' → logprob: -8.772111892700195
    6. ' not' → logprob: -9.397111892700195
    7. '!=' → logprob: -9.647111892700195
    8. ' !=' → logprob: -10.022111892700195
    9. '[' → logprob: -10.022111892700195
    10. '=' → logprob: -10.647111892700195

Token 52: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.18272121250629425
    2. ' ==' → logprob: -1.8077212572097778
    3. '!=' → logprob: -6.182721138000488
    4. '=' → logprob: -7.932721138000488
    5. ' !=' → logprob: -7.932721138000488
    6. ' not' → logprob: -9.682721138000488
    7. ' ' → logprob: -10.057721138000488
    8. '[' → logprob: -10.807721138000488
    9. ']==' → logprob: -10.932721138000488
    10. ' in' → logprob: -10.932721138000488

Token 53: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.002476135268807411
    2. ' j' → logprob: -6.002476215362549
    3. '	j' → logprob: -14.75247573852539
    4. ' ' → logprob: -18.00247573852539
    5. '[j' → logprob: -18.00247573852539
    6. '   ' → logprob: -18.12747573852539
    7. '$j' → logprob: -18.50247573852539
    8. '=j' → logprob: -18.87747573852539
    9. ',j' → logprob: -19.12747573852539
    10. '    ' → logprob: -19.25247573852539

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00145475915633142
    2. ':
' → logprob: -6.626454830169678
    3. ' :' → logprob: -10.00145435333252
    4. '       ' → logprob: -10.37645435333252
    5. '           ' → logprob: -10.50145435333252
    6. ' and' → logprob: -12.00145435333252
    7. '):' → logprob: -12.25145435333252
    8. '   ' → logprob: -13.12645435333252
    9. '==' → logprob: -13.50145435333252
    10. '=' → logprob: -13.75145435333252

Token 55: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02128145657479763
    2. ':' → logprob: -4.2712812423706055
    3. ' :' → logprob: -6.2712812423706055
    4. ':
' → logprob: -6.6462812423706055
    5. '               ' → logprob: -7.3962812423706055
    6. '          ' → logprob: -7.3962812423706055
    7. '       ' → logprob: -7.6462812423706055
    8. ' and' → logprob: -8.271281242370605
    9. '```' → logprob: -8.521281242370605
    10. '         ' → logprob: -8.646281242370605

Token 56: ' num' (ID: 2269)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.15315373241901398
    2. ' cnt' → logprob: -2.278153657913208
    3. '       ' → logprob: -4.278153896331787
    4. '	cnt' → logprob: -4.528153896331787
    5. '           ' → logprob: -4.653153896331787
    6. '   ' → logprob: -5.528153896331787
    7. '               ' → logprob: -8.153153419494629
    8. '[cnt' → logprob: -8.528153419494629
    9. '1' → logprob: -8.653153419494629
    10. ' ' → logprob: -8.903153419494629

Token 57: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -4.7755875129951164e-05
    2. '_' → logprob: -10.25004768371582
    3. '_t' → logprob: -11.50004768371582
    4. '[_' → logprob: -13.87504768371582
    5. 's' → logprob: -14.75004768371582
    6. '_x' → logprob: -15.75004768371582
    7. '[' → logprob: -16.00004768371582
    8. ' _' → logprob: -16.75004768371582
    9. '_i' → logprob: -16.87504768371582
    10. '_a' → logprob: -17.00004768371582

Token 58: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.03187760338187218
    2. '[' → logprob: -3.6568775177001953
    3. '[num' → logprob: -5.656877517700195
    4. '[c' → logprob: -7.156877517700195
    5. '[j' → logprob: -7.781877517700195
    6. '[counter' → logprob: -8.656877517700195
    7. '[len' → logprob: -8.781877517700195
    8. '[count' → logprob: -8.906877517700195
    9. '+=' → logprob: -9.281877517700195
    10. '[i' → logprob: -10.281877517700195

Token 59: ']' (ID: 60)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.44084861874580383
    2. ']+=' → logprob: -1.5658485889434814
    3. ']' → logprob: -2.1908485889434814
    4. ' +=' → logprob: -3.4408485889434814
    5. '+' → logprob: -6.0658488273620605
    6. '=' → logprob: -7.0658488273620605
    7. ']+' → logprob: -8.690848350524902
    8. '<|end|>' → logprob: -8.815848350524902
    9. ' ]' → logprob: -9.690848350524902
    10. '[' → logprob: -9.690848350524902

Token 60: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20351079106330872
    2. ' +=' → logprob: -1.7035107612609863
    3. '=' → logprob: -6.328510761260986
    4. '+' → logprob: -8.328511238098145
    5. ']+=' → logprob: -9.828511238098145
    6. ' =' → logprob: -11.703511238098145
    7. ' ' → logprob: -12.828511238098145
    8. '+='' → logprob: -13.453511238098145
    9. ' +' → logprob: -13.703511238098145
    10. '[' → logprob: -14.453511238098145

Token 61: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004078997299075127
    2. ' ' → logprob: -5.5040788650512695
    3. '+' → logprob: -15.12907886505127
    4. '   ' → logprob: -16.504079818725586
    5. '  ' → logprob: -16.879079818725586
    6. '<|end|>' → logprob: -16.879079818725586
    7. 's' → logprob: -17.129079818725586
    8. ' +' → logprob: -17.629079818725586
    9. ' ' → logprob: -18.129079818725586
    10. '```' → logprob: -18.254079818725586

Token 62: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. 's' → logprob: -16.8750057220459
    4. '   ' → logprob: -18.3750057220459
    5. '<|end|>' → logprob: -18.8750057220459
    6. '１' → logprob: -19.5000057220459
    7. '  ' → logprob: -19.5000057220459
    8. '```' → logprob: -19.6250057220459
    9. '+' → logprob: -20.3125057220459
    10. '۱' → logprob: -20.3750057220459

Token 63: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014361060224473476
    2. '       ' → logprob: -4.2643609046936035
    3. '   ' → logprob: -9.639361381530762
    4. '               ' → logprob: -9.639361381530762
    5. '
' → logprob: -10.764361381530762
    6. '     ' → logprob: -11.764361381530762
    7. '            
' → logprob: -12.139361381530762
    8. '<|end|>' → logprob: -12.139361381530762
    9. '        
' → logprob: -12.639361381530762
    10. '          ' → logprob: -12.889361381530762

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00456624198704958
    2. '           ' → logprob: -5.629566192626953
    3. '   ' → logprob: -7.754566192626953
    4. '
' → logprob: -9.004566192626953
    5. '               ' → logprob: -9.379566192626953
    6. '<|end|>' → logprob: -10.004566192626953
    7. '	' → logprob: -10.379566192626953
    8. '     ' → logprob: -10.504566192626953
    9. '        
' → logprob: -10.629566192626953
    10. '    ' → logprob: -10.879566192626953

Token 65: ' cnt' (ID: 27340)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4872426986694336
    2. '           ' → logprob: -0.9872426986694336
    3. '   ' → logprob: -4.737242698669434
    4. '               ' → logprob: -6.737242698669434
    5. 'cnt' (adapté à ' cnt') → logprob: -7.362242698669434
    6. '     ' → logprob: -7.612242698669434
    7. ' ' → logprob: -8.112242698669434
    8. '	' → logprob: -8.237242698669434
    9. '	       ' → logprob: -8.362242698669434
    10. ' cnt' → logprob: -8.362242698669434

Token 66: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.24994054436683655
    2. '+' → logprob: -1.6249405145645142
    3. ' +=' → logprob: -3.7499406337738037
    4. '++' → logprob: -7.624940395355225
    5. '=' → logprob: -8.999940872192383
    6. '<|end|>' → logprob: -9.999940872192383
    7. ' +' → logprob: -10.624940872192383
    8. '+++' → logprob: -11.624940872192383
    9. '+="' → logprob: -12.249940872192383
    10. '+='' → logprob: -12.374940872192383

Token 67: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007100477814674377
    2. ' ' → logprob: -7.2507100105285645
    3. '```' → logprob: -17.000709533691406
    4. '   ' → logprob: -17.563209533691406
    5. '+' → logprob: -17.563209533691406
    6. '<|end|>' → logprob: -18.000709533691406
    7. '１' → logprob: -18.250709533691406
    8. '0' → logprob: -18.313209533691406
    9. '  ' → logprob: -18.438209533691406
    10. '۱' → logprob: -19.125709533691406

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -17.437515258789062
    4. '   ' → logprob: -18.000015258789062
    5. '+' → logprob: -18.125015258789062
    6. 'a' → logprob: -18.687515258789062
    7. '１' → logprob: -18.812515258789062
    8. '-' → logprob: -18.875015258789062
    9. '<|end|>' → logprob: -19.125015258789062
    10. '0' → logprob: -19.125015258789062

Token 69: '
' (ID: 198)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4721485674381256
    2. ' else' → logprob: -1.8471485376358032
    3. '<|end|>' → logprob: -2.0971486568450928
    4. '   ' → logprob: -2.9721486568450928
    5. 'elif' → logprob: -3.5971486568450928
    6. ' ' → logprob: -5.472148418426514
    7. ' elif' → logprob: -5.472148418426514
    8. '	else' → logprob: -6.472148418426514
    9. '[' → logprob: -6.847148418426514
    10. '
' → logprob: -6.972148418426514

Token 70: '   ' (ID: 271)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.13498620688915253
    2. ' else' → logprob: -2.509986162185669
    3. '   ' → logprob: -3.759986162185669
    4. 'elif' → logprob: -4.259986400604248
    5. '<|end|>' → logprob: -6.009986400604248
    6. ' elif' → logprob: -6.884986400604248
    7. '	else' → logprob: -7.384986400604248
    8. ' ' → logprob: -7.384986400604248
    9. '```' → logprob: -7.509986400604248
    10. '[' → logprob: -7.509986400604248

Token 71: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.06029404699802399
    2. ' else' → logprob: -2.9352941513061523
    3. '   ' → logprob: -5.810294151306152
    4. 'elif' → logprob: -6.685294151306152
    5. 'if' (adapté à ' if') → logprob: -7.935294151306152
    6. ' ' → logprob: -8.560294151306152
    7. '```' → logprob: -8.685294151306152
    8. 's' → logprob: -8.685294151306152
    9. '	else' → logprob: -9.935294151306152
    10. ' if' → logprob: -10.060294151306152

Token 72: ' not' (ID: 625)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.07015360891819
    2. 's' → logprob: -2.6951537132263184
    3. ' not' → logprob: -8.57015323638916
    4. 'not' → logprob: -10.57015323638916
    5. ' ' → logprob: -13.69515323638916
    6. ' ' → logprob: -14.94515323638916
    7. '(s' → logprob: -15.32015323638916
    8. '`s' → logprob: -16.570154190063477
    9. '	s' → logprob: -16.820154190063477
    10. ' (' → logprob: -17.195154190063477

Token 73: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009437658824026585
    2. 's' → logprob: -4.759437561035156
    3. '(s' → logprob: -7.759437561035156
    4. ' (' → logprob: -8.134437561035156
    5. '(' → logprob: -9.509437561035156
    6. ' any' → logprob: -10.759437561035156
    7. ' alp' → logprob: -13.384437561035156
    8. ' ' → logprob: -13.759437561035156
    9. '_s' → logprob: -13.884437561035156
    10. 'any' → logprob: -14.134437561035156

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.0
    3. '[
' → logprob: -18.625
    4. ' [' → logprob: -19.75
    5. '(i' → logprob: -20.5
    6. '[:' → logprob: -20.5
    7. '[I' → logprob: -20.875
    8. 'i' → logprob: -21.75
    9. '```' → logprob: -21.875
    10. '`' → logprob: -23.25

Token 75: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10036065429449081
    2. 'in' → logprob: -2.350360631942749
    3. ')' → logprob: -9.725360870361328
    4. ' ' → logprob: -10.350360870361328
    5. ']' → logprob: -10.850360870361328
    6. 'n' → logprob: -11.350360870361328
    7. ' i' → logprob: -11.600360870361328
    8. 'a' → logprob: -13.100360870361328
    9. 'not' → logprob: -13.100360870361328
    10. 'i' → logprob: -13.225360870361328

Token 76: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5765810012817383
    2. ' in' → logprob: -0.8265810012817383
    3. 'n' → logprob: -7.451581001281738
    4. 'i' → logprob: -11.201581001281738
    5. 'In' → logprob: -11.326581001281738
    6. 'int' → logprob: -12.076581001281738
    7. ' ' → logprob: -12.201581001281738
    8. '	in' → logprob: -12.701581001281738
    9. 'e' → logprob: -12.826581001281738
    10. 's' → logprob: -12.951581001281738

Token 77: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.16027681529521942
    2. ' alp' → logprob: -1.9102767705917358
    3. 'alb' → logprob: -10.160276412963867
    4. ' ' → logprob: -12.660276412963867
    5. 'al' → logprob: -12.910276412963867
    6. ' alb' → logprob: -13.285276412963867
    7. 'alph' → logprob: -13.410276412963867
    8. 'alc' → logprob: -13.660276412963867
    9. 'alf' → logprob: -13.785276412963867
    10. ' alph' → logprob: -14.535276412963867

Token 78: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -7.896309739408025e-07
    2. '_' → logprob: -15.000000953674316
    3. '_t' → logprob: -15.500000953674316
    4. 's' → logprob: -15.750000953674316
    5. ' _' → logprob: -19.25
    6. ')' → logprob: -20.875
    7. 'a' → logprob: -21.25
    8. ' ' → logprob: -21.75
    9. '```' → logprob: -21.875
    10. '._' → logprob: -22.0625

Token 79: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00011236425780225545
    2. ':
' → logprob: -9.375112533569336
    3. '.append' → logprob: -11.875112533569336
    4. ' :' → logprob: -11.875112533569336
    5. '):' → logprob: -11.875112533569336
    6. '<|end|>' → logprob: -13.375112533569336
    7. ':**' → logprob: -14.125112533569336
    8. '.' → logprob: -14.375112533569336
    9. '：' → logprob: -14.500112533569336
    10. '():' → logprob: -15.125112533569336

Token 80: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03942981734871864
    2. ':
' → logprob: -3.7894299030303955
    3. '       ' → logprob: -5.164429664611816
    4. 'alp' → logprob: -5.414429664611816
    5. '   ' → logprob: -5.789429664611816
    6. ' :' → logprob: -7.164429664611816
    7. '):
' → logprob: -8.039429664611816
    8. 'al' → logprob: -8.289429664611816
    9. ' alp' → logprob: -8.414429664611816
    10. '<|end|>' → logprob: -8.414429664611816

Token 81: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' (adapté à ' alp') → logprob: -0.578459620475769
    2. ' alp' → logprob: -0.828459620475769
    3. 'alb' → logprob: -7.328459739685059
    4. '   ' → logprob: -7.578459739685059
    5. 'al' → logprob: -7.578459739685059
    6. '       ' → logprob: -8.203459739685059
    7. ' al' → logprob: -8.453459739685059
    8. ' alph' → logprob: -9.453459739685059
    9. ' alb' → logprob: -9.703459739685059
    10. 'alf' → logprob: -10.078459739685059

Token 82: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.704273118884885e-07
    2. 's' → logprob: -14.500000953674316
    3. '_' → logprob: -17.125
    4. ' _' → logprob: -17.625
    5. '<|end|>' → logprob: -19.375
    6. '```' → logprob: -19.625
    7. '_t' → logprob: -21.0
    8. '‌' → logprob: -21.25
    9. '   ' → logprob: -21.25
    10. '<|end|>' → logprob: -21.25

Token 83: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.014183484017848969
    2. '.' → logprob: -4.264183521270752
    3. ' .' → logprob: -11.889183044433594
    4. 'append' → logprob: -12.389183044433594
    5. '.app' → logprob: -13.389183044433594
    6. '.add' → logprob: -13.639183044433594
    7. '_append' → logprob: -14.014183044433594
    8. '.Append' → logprob: -14.139183044433594
    9. '.py' → logprob: -14.264183044433594
    10. ').' → logprob: -14.264183044433594

Token 84: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0009140860638581216
    2. '(' → logprob: -7.000914096832275
    3. '((' → logprob: -13.625913619995117
    4. 's' → logprob: -13.625913619995117
    5. '(
' → logprob: -16.125913619995117
    6. '('' → logprob: -16.375913619995117
    7. ' (' → logprob: -17.500913619995117
    8. '(i' → logprob: -18.250913619995117
    9. '()' → logprob: -18.750913619995117
    10. '(

' → logprob: -18.875913619995117

Token 85: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. ')' → logprob: -14.250001907348633
    3. '[' → logprob: -14.500001907348633
    4. ' [' → logprob: -16.250001907348633
    5. ')[' → logprob: -17.125001907348633
    6. '[
' → logprob: -17.500001907348633
    7. 'i' → logprob: -17.500001907348633
    8. '```' → logprob: -17.500001907348633
    9. '(i' → logprob: -18.875001907348633
    10. '[j' → logprob: -19.125001907348633

Token 86: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07914280891418457
    2. '])' → logprob: -2.5791428089141846
    3. ')
' → logprob: -8.829142570495605
    4. '))' → logprob: -10.454142570495605
    5. ' )' → logprob: -11.079142570495605
    6. ']' → logprob: -11.079142570495605
    7. '])
' → logprob: -11.204142570495605
    8. '>)' → logprob: -12.079142570495605
    9. ''])' → logprob: -12.079142570495605
    10. '})' → logprob: -12.454142570495605

Token 87: '       ' (ID: 309)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.24708299338817596
    2. '       ' → logprob: -1.6220829486846924
    3. ' num' → logprob: -4.1220831871032715
    4. '   ' → logprob: -5.3720831871032715
    5. '	num' → logprob: -8.872082710266113
    6. ',num' → logprob: -8.872082710266113
    7. '```' → logprob: -9.247082710266113
    8. ' ' → logprob: -9.497082710266113
    9. '           ' → logprob: -10.122082710266113
    10. ',' → logprob: -11.122082710266113

Token 88: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.0004890497075393796
    2. ' num' → logprob: -7.625489234924316
    3. ' ' → logprob: -14.625489234924316
    4. '   ' → logprob: -14.750489234924316
    5. '  ' → logprob: -16.87548828125
    6. '	num' → logprob: -17.00048828125
    7. '       ' → logprob: -18.12548828125
    8. '```' → logprob: -18.37548828125
    9. 'nu' → logprob: -18.50048828125
    10. '
' → logprob: -19.00048828125

Token 89: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -16.375
    3. '_t' → logprob: -17.0
    4. ' _' → logprob: -17.375
    5. 's' → logprob: -18.125
    6. '<|end|>' → logprob: -18.875
    7. ' ' → logprob: -19.0
    8. '   ' → logprob: -20.375
    9. '```' → logprob: -20.625
    10. ')' → logprob: -20.875

Token 90: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004885728703811765
    2. '.' → logprob: -7.625488758087158
    3. '.app' → logprob: -15.50048828125
    4. 'append' → logprob: -16.12548828125
    5. '.extend' → logprob: -17.12548828125
    6. '<|end|>' → logprob: -17.12548828125
    7. '.setdefault' → logprob: -17.37548828125
    8. '.Append' → logprob: -17.50048828125
    9. '.push' → logprob: -18.25048828125
    10. '.ap' → logprob: -18.37548828125

Token 91: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.518582762917504e-05
    2. '1' → logprob: -9.37508487701416
    3. '(
' → logprob: -15.75008487701416
    4. '(int' → logprob: -17.125085830688477
    5. ' (' → logprob: -19.000085830688477
    6. '()' → logprob: -19.625085830688477
    7. '(

' → logprob: -19.875085830688477
    8. '((' → logprob: -20.750085830688477
    9. 'int' → logprob: -21.000085830688477
    10. ' ' → logprob: -21.000085830688477

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.796184723294573e-06
    2. ' ' → logprob: -12.250005722045898
    3. '0' → logprob: -14.250005722045898
    4. '   ' → logprob: -16.0000057220459
    5. ')' → logprob: -16.3750057220459
    6. '１' → logprob: -18.3750057220459
    7. '`' → logprob: -18.5625057220459
    8. '```' → logprob: -18.8750057220459
    9. '  ' → logprob: -19.0625057220459
    10. '2' → logprob: -19.5625057220459

Token 93: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8074162653647363e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -14.250018119812012
    4. '<|end|>' → logprob: -15.375018119812012
    5. '
' → logprob: -16.000017166137695
    6. ')

' → logprob: -16.000017166137695
    7. ')return' → logprob: -16.875017166137695
    8. '`)' → logprob: -17.625017166137695
    9. '```' → logprob: -17.875017166137695
    10. ')`' → logprob: -18.000017166137695

Token 94: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23290908336639404
    2. '<|end|>' → logprob: -1.857909083366394
    3. ' for' → logprob: -4.107909202575684
    4. '
' → logprob: -4.232909202575684
    5. ' ' → logprob: -5.107909202575684
    6. '```' → logprob: -5.357909202575684
    7. 's' → logprob: -6.107909202575684
    8. ')' → logprob: -6.232909202575684
    9. ' 
' → logprob: -6.357909202575684
    10. '#' → logprob: -7.107909202575684

Token 95: ' cnt' (ID: 27340)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.010260405018925667
    2. ' for' → logprob: -4.635260581970215
    3. '
' → logprob: -8.510260581970215
    4. ' ' → logprob: -10.010260581970215
    5. '<|end|>' → logprob: -10.010260581970215
    6. '    
' → logprob: -10.135260581970215
    7. '```' → logprob: -10.135260581970215
    8. ' 
' → logprob: -10.635260581970215
    9. ')' → logprob: -10.760260581970215
    10. 's' → logprob: -10.885260581970215

Token 96: ' =' (ID: 314)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.07563386112451553
    2. '+=' → logprob: -3.0756337642669678
    3. '=' → logprob: -3.9506337642669678
    4. '+' → logprob: -5.075634002685547
    5. ' =' → logprob: -6.825634002685547
    6. ' +' → logprob: -10.075634002685547
    7. ' ' → logprob: -10.450634002685547
    8. '<|end|>' → logprob: -10.450634002685547
    9. '0' → logprob: -13.075634002685547
    10. '++' → logprob: -13.325634002685547

Token 97: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0036004253197461367
    2. ' ' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.253600120544434
    4. '  ' → logprob: -17.50360107421875
    5. '<|end|>' → logprob: -17.50360107421875
    6. '۰' → logprob: -18.62860107421875
    7. '1' → logprob: -18.75360107421875
    8. 'len' → logprob: -19.00360107421875
    9. '０' → logprob: -19.06610107421875
    10. '    ' → logprob: -19.19110107421875

Token 98: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'len' → logprob: -16.125019073486328
    4. 'for' → logprob: -17.750019073486328
    5. '   ' → logprob: -17.750019073486328
    6. '1' → logprob: -18.000019073486328
    7. '  ' → logprob: -19.375019073486328
    8. '-' → logprob: -19.562519073486328
    9. '<|end|>' → logprob: -19.562519073486328
    10. '۰' → logprob: -19.625019073486328

Token 99: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0052945963107049465
    2. ' for' → logprob: -5.2552947998046875
    3. '<|end|>' → logprob: -10.130294799804688
    4. '   ' → logprob: -11.630294799804688
    5. '	for' → logprob: -11.755294799804688
    6. '```' → logprob: -13.255294799804688
    7. '
' → logprob: -13.755294799804688
    8. ' ' → logprob: -14.755294799804688
    9. 't' → logprob: -14.880294799804688
    10. '<|end|>' → logprob: -15.880294799804688

Token 100: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0008188001229427755
    2. ' for' → logprob: -7.125818729400635
    3. '   ' → logprob: -11.875819206237793
    4. '```' → logprob: -12.375819206237793
    5. '	for' → logprob: -13.500819206237793
    6. ' ' → logprob: -14.000819206237793
    7. '<|end|>' → logprob: -15.000819206237793
    8. 'from' → logprob: -16.250818252563477
    9. '
' → logprob: -16.375818252563477
    10. 't' → logprob: -16.375818252563477

Token 101: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0001438266917830333
    2. ' for' → logprob: -8.875144004821777
    3. '   ' → logprob: -12.625144004821777
    4. '	for' → logprob: -14.750144004821777
    5. '<|end|>' → logprob: -15.750144004821777
    6. ' ' → logprob: -15.875144004821777
    7. 'For' → logprob: -17.87514305114746
    8. 'while' → logprob: -17.87514305114746
    9. '```' → logprob: -18.25014305114746
    10. '  ' → logprob: -18.37514305114746

Token 102: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.007056099828332663
    2. ' j' → logprob: -5.00705623626709
    3. 'k' → logprob: -8.00705623626709
    4. ' k' → logprob: -12.63205623626709
    5. 'i' → logprob: -12.75705623626709
    6. ' ' → logprob: -14.50705623626709
    7. 'x' → logprob: -14.88205623626709
    8. '	j' → logprob: -16.132055282592773
    9. 'l' → logprob: -16.382055282592773
    10. 'a' → logprob: -16.632055282592773

Token 103: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043063934892416
    2. 'in' → logprob: -3.1680638790130615
    3. 'alp' → logprob: -10.54306411743164
    4. ' alp' → logprob: -10.91806411743164
    5. 't' → logprob: -11.41806411743164
    6. 'al' → logprob: -12.41806411743164
    7. ' al' → logprob: -13.04306411743164
    8. '	in' → logprob: -13.91806411743164
    9. ' ' → logprob: -14.79306411743164
    10. 'alph' → logprob: -15.29306411743164

Token 104: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.018162114545702934
    2. ' alp' → logprob: -4.018162250518799
    3. 't' → logprob: -11.64316177368164
    4. 'alb' → logprob: -13.01816177368164
    5. ' t' → logprob: -14.76816177368164
    6. 'alph' → logprob: -15.51816177368164
    7. 'al' → logprob: -15.51816177368164
    8. 'alf' → logprob: -15.64316177368164
    9. 'alc' → logprob: -16.01816177368164
    10. ' ' → logprob: -16.39316177368164

Token 105: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0009202735964208841
    2. 't' → logprob: -7.000920295715332
    3. '_s' → logprob: -11.875920295715332
    4. '_' → logprob: -14.375920295715332
    5. 's' → logprob: -14.375920295715332
    6. ' t' → logprob: -15.250920295715332
    7. '   ' → logprob: -16.250919342041016
    8. '	t' → logprob: -16.875919342041016
    9. ' ' → logprob: -17.125919342041016
    10. '<|end|>' → logprob: -17.313419342041016

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0011874916963279247
    2. ':
' → logprob: -7.626187324523926
    3. ' in' → logprob: -8.126187324523926
    4. '<|end|>' → logprob: -9.001187324523926
    5. 'in' → logprob: -9.376187324523926
    6. '):' → logprob: -9.751187324523926
    7. ' :' → logprob: -9.876187324523926
    8. 's' → logprob: -10.626187324523926
    9. '   ' → logprob: -10.876187324523926
    10. ':

' → logprob: -11.251187324523926

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028225891292095184
    2. '<|end|>' → logprob: -6.877822399139404
    3. '   ' → logprob: -7.002822399139404
    4. ' if' → logprob: -7.127822399139404
    5. 'if' → logprob: -9.877822875976562
    6. '<|end|>' → logprob: -11.377822875976562
    7. ' ' → logprob: -12.752822875976562
    8. '```' → logprob: -13.002822875976562
    9. ':' → logprob: -13.002822875976562
    10. '    ' → logprob: -13.377822875976562

Token 108: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03796345368027687
    2. ' if' → logprob: -3.662963390350342
    3. '<|end|>' → logprob: -5.037963390350342
    4. 'if' (adapté à ' if') → logprob: -5.287963390350342
    5. '<|end|>' → logprob: -10.2879638671875
    6. 'If' → logprob: -11.7879638671875
    7. '```' → logprob: -12.0379638671875
    8. '   ' → logprob: -12.6629638671875
    9. ' ' → logprob: -13.1629638671875
    10. '	if' → logprob: -14.0379638671875

Token 109: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.029763683676719666
    2. 't' → logprob: -3.529763698577881
    3. 's' → logprob: -12.779763221740723
    4. ' ' → logprob: -12.904763221740723
    5. '   ' → logprob: -13.592263221740723
    6. '<t' → logprob: -13.592263221740723
    7. '    ' → logprob: -14.342263221740723
    8. '(t' → logprob: -14.467263221740723
    9. ' s' → logprob: -14.529763221740723
    10. '`t' → logprob: -14.842263221740723

Token 110: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010068230039905757
    2. '[' → logprob: -9.500101089477539
    3. '[len' → logprob: -11.375101089477539
    4. '[count' → logprob: -11.875101089477539
    5. '   ' → logprob: -13.250101089477539
    6. ' [' → logprob: -13.750101089477539
    7. '[int' → logprob: -14.250101089477539
    8. '[j' → logprob: -14.375101089477539
    9. '[cnt' → logprob: -14.625101089477539
    10. '[num' → logprob: -14.750101089477539

Token 111: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04126746952533722
    2. '==' → logprob: -3.5412673950195312
    3. ']' → logprob: -4.791267395019531
    4. ']==' → logprob: -5.791267395019531
    5. ' ' → logprob: -9.666267395019531
    6. ')' → logprob: -11.541267395019531
    7. ' ]' → logprob: -11.791267395019531
    8. '<|end|>' → logprob: -12.291267395019531
    9. '=' → logprob: -13.166267395019531
    10. ' =' → logprob: -13.416267395019531

Token 112: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.038049064576625824
    2. '==' → logprob: -3.2880489826202393
    3. ' ' → logprob: -12.28804874420166
    4. ']==' → logprob: -13.78804874420166
    5. '=' → logprob: -14.03804874420166
    6. ' =' → logprob: -14.66304874420166
    7. '<|end|>' → logprob: -15.53804874420166
    8. ')' → logprob: -15.91304874420166
    9. ' ' → logprob: -16.663049697875977
    10. ')==' → logprob: -16.663049697875977

Token 113: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.4740792512893677
    2. 'j' → logprob: -0.9740792512893677
    3. '	j' → logprob: -14.099079132080078
    4. ' ' → logprob: -14.099079132080078
    5. '<|end|>' → logprob: -15.349079132080078
    6. '   ' → logprob: -16.349079132080078
    7. '$j' → logprob: -16.599079132080078
    8. ' ' → logprob: -16.599079132080078
    9. '    ' → logprob: -16.724079132080078
    10. '[j' → logprob: -16.849079132080078

Token 114: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.22099943459033966
    2. ':
' → logprob: -1.7209994792938232
    3. '           ' → logprob: -3.9709994792938232
    4. '       ' → logprob: -8.345999717712402
    5. 'num' → logprob: -8.595999717712402
    6. ':

' → logprob: -9.970999717712402
    7. '<|end|>' → logprob: -10.970999717712402
    8. '):
' → logprob: -11.720999717712402
    9. '          ' → logprob: -11.970999717712402
    10. ',' → logprob: -11.970999717712402

Token 115: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013512528501451015
    2. 'num' → logprob: -4.51351261138916
    3. ' num' → logprob: -6.13851261138916
    4. '<|end|>' → logprob: -8.38851261138916
    5. ',num' → logprob: -11.13851261138916
    6. '       ' → logprob: -11.13851261138916
    7. '               ' → logprob: -11.38851261138916
    8. '          ' → logprob: -11.88851261138916
    9. '```' → logprob: -12.01351261138916
    10. ' ' → logprob: -12.01351261138916

Token 116: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.01815216802060604
    2. ' num' → logprob: -4.018152236938477
    3. '           ' → logprob: -13.518152236938477
    4. '       ' → logprob: -14.518152236938477
    5. '	num' → logprob: -15.018152236938477
    6. ',num' → logprob: -16.768152236938477
    7. ' ' → logprob: -17.018152236938477
    8. '   ' → logprob: -17.143152236938477
    9. '[num' → logprob: -17.518152236938477
    10. '<num' → logprob: -17.643152236938477

Token 117: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -7.896309739408025e-07
    2. '_s' → logprob: -14.375000953674316
    3. 't' → logprob: -15.750000953674316
    4. '_' → logprob: -17.375
    5. '   ' → logprob: -19.5
    6. ' _' → logprob: -20.25
    7. ''_' → logprob: -20.25
    8. ' ' → logprob: -20.375
    9. 's' → logprob: -20.625
    10. '_a' → logprob: -20.875

Token 118: '[cnt' (ID: 157792)
  Prédit: '[cnt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.0003740694955922663
    2. 'cnt' → logprob: -9.125373840332031
    3. '[' → logprob: -9.375373840332031
    4. '[num' → logprob: -10.125373840332031
    5. ' ' → logprob: -10.125373840332031
    6. ' +=' → logprob: -10.250373840332031
    7. '+=' → logprob: -10.750373840332031
    8. '(cnt' → logprob: -11.500373840332031
    9. '	cnt' → logprob: -11.875373840332031
    10. ' cnt' → logprob: -12.000373840332031

Token 119: ']' (ID: 60)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.6774465441703796
    2. ' +=' → logprob: -1.4274466037750244
    3. ']' → logprob: -1.6774466037750244
    4. '+=' → logprob: -2.8024466037750244
    5. ' ]' → logprob: -5.427446365356445
    6. ')' → logprob: -9.927446365356445
    7. '   ' → logprob: -10.177446365356445
    8. '']' → logprob: -10.302446365356445
    9. '    ' → logprob: -10.427446365356445
    10. '"]' → logprob: -10.677446365356445

Token 120: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20158623158931732
    2. ' +=' → logprob: -1.7015862464904785
    3. ']+=' → logprob: -8.70158576965332
    4. ' ' → logprob: -13.32658576965332
    5. '   ' → logprob: -13.70158576965332
    6. '=' → logprob: -13.82658576965332
    7. '+' → logprob: -13.95158576965332
    8. '    ' → logprob: -14.20158576965332
    9. '```' → logprob: -15.07658576965332
    10. '  ' → logprob: -15.57658576965332

Token 121: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00026217024424113333
    2. ' ' → logprob: -8.250262260437012
    3. '   ' → logprob: -14.375262260437012
    4. '  ' → logprob: -15.875262260437012
    5. '<|end|>' → logprob: -16.125261306762695
    6. '```' → logprob: -17.625261306762695
    7. '    ' → logprob: -18.000261306762695
    8. '	' → logprob: -18.937761306762695
    9. '１' → logprob: -19.000261306762695
    10. '۱' → logprob: -19.437761306762695

Token 122: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '<|end|>' → logprob: -17.5000057220459
    4. '   ' → logprob: -17.6250057220459
    5. '  ' → logprob: -19.3750057220459
    6. '１' → logprob: -20.1250057220459
    7. '```' → logprob: -20.3750057220459
    8. '۱' → logprob: -20.5000057220459
    9. '-' → logprob: -21.6250057220459
    10. '<|end|>' → logprob: -22.0000057220459

Token 123: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.014684110297821e-06
    2. '   ' → logprob: -12.250008583068848
    3. '           ' → logprob: -13.000008583068848
    4. '<|end|>' → logprob: -13.750008583068848
    5. '```' → logprob: -14.750008583068848
    6. 'cnt' → logprob: -15.875008583068848
    7. '<|end|>' → logprob: -16.000009536743164
    8. '      ' → logprob: -16.125009536743164
    9. ' ' → logprob: -16.625009536743164
    10. '
' → logprob: -16.875009536743164

Token 124: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001664717128733173
    2. 'cnt' → logprob: -9.500166893005371
    3. '   ' → logprob: -9.625166893005371
    4. '```' → logprob: -11.625166893005371
    5. '           ' → logprob: -12.125166893005371
    6. '<|end|>' → logprob: -12.250166893005371
    7. '<|end|>' → logprob: -13.500166893005371
    8. ' ' → logprob: -14.125166893005371
    9. '	' → logprob: -14.250166893005371
    10. 'Here' → logprob: -14.375166893005371

Token 125: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' (adapté à ' cnt') → logprob: -0.0011248565278947353
    2. ' cnt' → logprob: -7.001124858856201
    3. '   ' → logprob: -9.376124382019043
    4. '       ' → logprob: -9.626124382019043
    5. '	cnt' → logprob: -10.376124382019043
    6. '[cnt' → logprob: -12.001124382019043
    7. '```' → logprob: -12.001124382019043
    8. '(cnt' → logprob: -12.001124382019043
    9. '1' → logprob: -12.251124382019043
    10. '0' → logprob: -12.626124382019043

Token 126: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31352320313453674
    2. '+=' → logprob: -1.3135231733322144
    3. '=' → logprob: -8.438523292541504
    4. '   ' → logprob: -10.688523292541504
    5. '```' → logprob: -12.188523292541504
    6. ' ' → logprob: -12.188523292541504
    7. ' =' → logprob: -12.563523292541504
    8. '    ' → logprob: -12.688523292541504
    9. '+' → logprob: -12.813523292541504
    10. ']+=' → logprob: -13.688523292541504

Token 127: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.493430894101039e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -18.00007438659668
    4. '   ' → logprob: -19.50007438659668
    5. '<|end|>' → logprob: -19.75007438659668
    6. '0' → logprob: -20.50007438659668
    7. '１' → logprob: -21.12507438659668
    8. '  ' → logprob: -21.75007438659668
    9. '=' → logprob: -22.06257438659668
    10. '`' → logprob: -22.25007438659668

Token 128: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '```' → logprob: -17.375003814697266
    4. '<|end|>' → logprob: -20.000003814697266
    5. '   ' → logprob: -20.125003814697266
    6. '0' → logprob: -21.250003814697266
    7. '`' → logprob: -21.875003814697266
    8. '１' → logprob: -21.875003814697266
    9. '-' → logprob: -22.125003814697266
    10. '  ' → logprob: -22.187503814697266

Token 129: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038068529684096575
    2. 'if' → logprob: -5.753807067871094
    3. ' if' → logprob: -7.378807067871094
    4. '```' → logprob: -12.753807067871094
    5. '  ' → logprob: -13.878807067871094
    6. ' ' → logprob: -14.753807067871094
    7. '       ' → logprob: -15.753807067871094
    8. '
' → logprob: -16.878807067871094
    9. '	if' → logprob: -17.003807067871094
    10. 'If' → logprob: -17.003807067871094

Token 130: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27519601583480835
    2. '   ' → logprob: -1.7751960754394531
    3. ' if' → logprob: -2.650196075439453
    4. '```' → logprob: -7.900196075439453
    5. 'else' → logprob: -9.275196075439453
    6. ' ' → logprob: -11.400196075439453
    7. '``' → logprob: -12.650196075439453
    8. 'If' → logprob: -13.025196075439453
    9. ' else' → logprob: -13.400196075439453
    10. '	if' → logprob: -13.525196075439453

Token 131: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0003372502396814525
    2. ' if' → logprob: -8.000337600708008
    3. '   ' → logprob: -13.625337600708008
    4. '```' → logprob: -15.125337600708008
    5. 'else' → logprob: -15.500337600708008
    6. 'If' → logprob: -16.250337600708008
    7. 'elif' → logprob: -17.125337600708008
    8. 'not' → logprob: -18.500337600708008
    9. ' ' → logprob: -19.500337600708008
    10. '	if' → logprob: -20.375337600708008

Token 132: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.016035424545407295
    2. 'not' → logprob: -4.141035556793213
    3. ' t' → logprob: -14.766035079956055
    4. ' ' → logprob: -15.141035079956055
    5. 't' → logprob: -15.266035079956055
    6. '(not' → logprob: -16.016035079956055
    7. ' ' → logprob: -17.016035079956055
    8. '	not' → logprob: -17.516035079956055
    9. ' no' → logprob: -17.641035079956055
    10. 'n' → logprob: -18.766035079956055

Token 133: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.014163628220558167
    2. 't' → logprob: -4.264163494110107
    3. ' ' → logprob: -17.264163970947266
    4. ' ' → logprob: -17.264163970947266
    5. 's' → logprob: -18.014163970947266
    6. '(t' → logprob: -18.389163970947266
    7. '`t' → logprob: -18.389163970947266
    8. '	t' → logprob: -19.264163970947266
    9. '<t' → logprob: -20.389163970947266
    10. '_t' → logprob: -20.389163970947266

Token 134: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.320199877838604e-07
    2. '[' → logprob: -15.625
    3. ' [' → logprob: -16.5
    4. 't' → logprob: -16.625
    5. 'i' → logprob: -18.125
    6. ' in' → logprob: -18.75
    7. '[
' → logprob: -19.0
    8. '```' → logprob: -19.125
    9. '(i' → logprob: -19.75
    10. 'import' → logprob: -19.75

Token 135: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002833172446116805
    2. 'in' → logprob: -5.877833366394043
    3. ']' → logprob: -10.752833366394043
    4. ' ' → logprob: -12.002833366394043
    5. ')' → logprob: -15.627833366394043
    6. ' ]' → logprob: -15.877833366394043
    7. ' ' → logprob: -15.877833366394043
    8. '[]' → logprob: -16.627832412719727
    9. '[' → logprob: -16.752832412719727
    10. '<|end|>' → logprob: -17.002832412719727

Token 136: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03364615887403488
    2. 'in' → logprob: -3.4086461067199707
    3. ' ' → logprob: -15.158646583557129
    4. ' ' → logprob: -17.158645629882812
    5. 'n' → logprob: -17.283645629882812
    6. 'i' → logprob: -18.158645629882812
    7. 'import' → logprob: -18.408645629882812
    8. ')' → logprob: -18.533645629882812
    9. 'int' → logprob: -18.533645629882812
    10. '```' → logprob: -18.533645629882812

Token 137: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.2812289297580719
    2. ' alp' → logprob: -1.4062288999557495
    3. 'alb' → logprob: -9.656229019165039
    4. 'alc' → logprob: -12.781229019165039
    5. 'alph' → logprob: -13.156229019165039
    6. ' ' → logprob: -13.156229019165039
    7. ' alb' → logprob: -13.281229019165039
    8. 'alf' → logprob: -13.781229019165039
    9. ' alph' → logprob: -14.031229019165039
    10. 'alm' → logprob: -14.406229019165039

Token 138: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00026288547087460756
    2. 't' → logprob: -8.250263214111328
    3. '_s' → logprob: -13.750263214111328
    4. '_' → logprob: -14.625263214111328
    5. 's' → logprob: -17.125263214111328
    6. 'T' → logprob: -18.750263214111328
    7. ' t' → logprob: -19.500263214111328
    8. '[' → logprob: -21.000263214111328
    9. '\' → logprob: -21.375263214111328
    10. '[t' → logprob: -21.750263214111328

Token 139: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2158709019422531
    2. ':
' → logprob: -1.8408708572387695
    3. '.append' → logprob: -3.3408708572387695
    4. '.' → logprob: -10.96587085723877
    5. 'append' → logprob: -10.96587085723877
    6. ':

' → logprob: -11.21587085723877
    7. '):
' → logprob: -11.71587085723877
    8. '   ' → logprob: -12.59087085723877
    9. '<|end|>' → logprob: -12.71587085723877
    10. '):' → logprob: -13.09087085723877

Token 140: '       ' (ID: 309)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' → logprob: -0.6082607507705688
    2. '       ' → logprob: -1.4832607507705688
    3. '   ' → logprob: -1.9832607507705688
    4. ':
' → logprob: -2.8582606315612793
    5. '.append' → logprob: -4.108260631561279
    6. ':' → logprob: -4.733260631561279
    7. 'append' → logprob: -5.358260631561279
    8. ' alp' → logprob: -6.233260631561279
    9. 't' → logprob: -7.358260631561279
    10. 'al' → logprob: -7.858260631561279

Token 141: ' alp' (ID: 107692)
  Prédit: 'alp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alp' (adapté à ' alp') → logprob: -0.0001446611131541431
    2. ' alp' → logprob: -9.250144958496094
    3. 'alb' → logprob: -10.500144958496094
    4. '       ' → logprob: -11.125144958496094
    5. '   ' → logprob: -12.500144958496094
    6. 'alph' → logprob: -13.875144958496094
    7. 'alf' → logprob: -14.875144958496094
    8. 't' → logprob: -15.375144958496094
    9. 'alpha' → logprob: -15.750144958496094
    10. '           ' → logprob: -15.875144958496094

Token 142: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -9.729906196298543e-06
    2. 't' → logprob: -11.750009536743164
    3. '_s' → logprob: -13.875009536743164
    4. '_' → logprob: -14.125009536743164
    5. 's' → logprob: -16.750009536743164
    6. ' _' → logprob: -18.500009536743164
    7. ' t' → logprob: -19.000009536743164
    8. 'a' → logprob: -19.125009536743164
    9. '.append' → logprob: -19.375009536743164
    10. 'T' → logprob: -19.500009536743164

Token 143: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.6087021473795176e-05
    2. '.' → logprob: -10.000045776367188
    3. 'append' → logprob: -15.125045776367188
    4. ' .' → logprob: -15.250045776367188
    5. '.extend' → logprob: -17.125045776367188
    6. '.app' → logprob: -17.875045776367188
    7. '.ap' → logprob: -18.250045776367188
    8. '.add' → logprob: -18.375045776367188
    9. ').' → logprob: -18.500045776367188
    10. '.Append' → logprob: -18.625045776367188

Token 144: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.87501049041748
    3. 't' → logprob: -12.75001049041748
    4. '(s' → logprob: -14.50001049041748
    5. ' (' → logprob: -19.375009536743164
    6. '(
' → logprob: -19.875009536743164
    7. 's' → logprob: -20.125009536743164
    8. '((' → logprob: -20.375009536743164
    9. '	t' → logprob: -21.375009536743164
    10. '(T' → logprob: -21.625009536743164

Token 145: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.692145012086257e-05
    2. 't' → logprob: -10.500046730041504
    3. '[t' → logprob: -11.125046730041504
    4. '[' → logprob: -13.000046730041504
    5. 'i' → logprob: -13.250046730041504
    6. ' [' → logprob: -15.875046730041504
    7. ' t' → logprob: -15.875046730041504
    8. '(i' → logprob: -16.00004768371582
    9. '[
' → logprob: -17.00004768371582
    10. '[j' → logprob: -17.37504768371582

Token 146: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520606517791748
    2. ')
' → logprob: -1.5020606517791748
    3. '])' → logprob: -9.377060890197754
    4. '])
' → logprob: -11.127060890197754
    5. ']' → logprob: -12.002060890197754
    6. ')
' → logprob: -12.502060890197754
    7. '       ' → logprob: -12.502060890197754
    8. ' )
' → logprob: -12.877060890197754
    9. ' )' → logprob: -13.127060890197754
    10. '   ' → logprob: -13.502060890197754

Token 147: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13168469071388245
    2. 'num' → logprob: -2.1316847801208496
    3. '   ' → logprob: -5.38168478012085
    4. '           ' → logprob: -10.006684303283691
    5. '
' → logprob: -10.256684303283691
    6. ' num' → logprob: -10.881684303283691
    7. '1' → logprob: -10.881684303283691
    8. '      ' → logprob: -12.131684303283691
    9. '	num' → logprob: -12.131684303283691
    10. ',num' → logprob: -12.756684303283691

Token 148: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' (adapté à ' num') → logprob: -0.10026167333126068
    2. '1' → logprob: -2.350261688232422
    3. ' num' → logprob: -9.850261688232422
    4. ' ' → logprob: -13.100261688232422
    5. '   ' → logprob: -15.475261688232422
    6. '(num' → logprob: -17.475261688232422
    7. '[num' → logprob: -17.600261688232422
    8. '       ' → logprob: -18.225261688232422
    9. '```' → logprob: -18.350261688232422
    10. '0' → logprob: -18.350261688232422

Token 149: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -1.9361264946837764e-07
    2. 't' → logprob: -16.375
    3. '_s' → logprob: -17.0
    4. '_' → logprob: -19.625
    5. '[' → logprob: -20.0
    6. '   ' → logprob: -20.625
    7. '.append' → logprob: -21.25
    8. '	t' → logprob: -21.375
    9. '```' → logprob: -21.625
    10. 's' → logprob: -22.0

Token 150: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002625278721097857
    2. '.' → logprob: -8.250262260437012
    3. 'append' → logprob: -14.125262260437012
    4. ' .' → logprob: -14.750262260437012
    5. ').' → logprob: -18.500263214111328
    6. '].' → logprob: -19.375263214111328
    7. '```' → logprob: -19.375263214111328
    8. '.push' → logprob: -19.500263214111328
    9. '   ' → logprob: -19.625263214111328
    10. '.extend' → logprob: -19.875263214111328

Token 151: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020354038861114532
    2. '1' → logprob: -8.500203132629395
    3. '(
' → logprob: -18.00020408630371
    4. ' (' → logprob: -20.25020408630371
    5. '```' → logprob: -21.12520408630371
    6. '0' → logprob: -21.75020408630371
    7. '   ' → logprob: -22.37520408630371
    8. ' ' → logprob: -22.50020408630371
    9. '[' → logprob: -22.62520408630371
    10. 'def' → logprob: -23.25020408630371

Token 152: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -13.00000286102295
    3. '0' → logprob: -15.75000286102295
    4. '```' → logprob: -16.375001907348633
    5. '   ' → logprob: -17.125001907348633
    6. '`' → logprob: -18.375001907348633
    7. '2' → logprob: -18.812501907348633
    8. '[' → logprob: -18.875001907348633
    9. '
' → logprob: -19.187501907348633
    10. '１' → logprob: -19.437501907348633

Token 153: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8550976164988242e-05
    2. ')
' → logprob: -11.000018119812012
    3. ' )' → logprob: -14.750018119812012
    4. '())' → logprob: -14.750018119812012
    5. '()' → logprob: -14.875018119812012
    6. '#' → logprob: -15.125018119812012
    7. ')#' → logprob: -16.250019073486328
    8. '   ' → logprob: -16.375019073486328
    9. '))' → logprob: -17.000019073486328
    10. ')`' → logprob: -17.125019073486328

Token 154: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 155: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 156: ' num' (ID: 2269)
  Prédit: ' len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.22967621684074402
    2. ' s' → logprob: -1.7296762466430664
    3. ' alp' → logprob: -4.104676246643066
    4. 'len' → logprob: -4.979676246643066
    5. ' not' → logprob: -6.229676246643066
    6. 's' → logprob: -7.229676246643066
    7. ' math' → logprob: -7.354676246643066
    8. ' ' → logprob: -7.854676246643066
    9. 'alp' → logprob: -8.104676246643066
    10. '(len' → logprob: -8.229676246643066

Token 157: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -6.825890159234405e-05
    2. '_t' → logprob: -10.250068664550781
    3. '_' → logprob: -10.625068664550781
    4. ' _' → logprob: -12.750068664550781
    5. 's' → logprob: -13.000068664550781
    6. '[_' → logprob: -13.625068664550781
    7. ')' → logprob: -14.750068664550781
    8. '_a' → logprob: -15.000068664550781
    9. ' ' → logprob: -15.250068664550781
    10. '```' → logprob: -15.625068664550781

Token 158: ' !=' (ID: 1666)
  Prédit: '[cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[cnt' → logprob: -0.30465972423553467
    2. '[' → logprob: -1.4296597242355347
    3. '[num' → logprob: -4.929659843444824
    4. ' [' → logprob: -5.054659843444824
    5. '[s' → logprob: -5.554659843444824
    6. '[len' → logprob: -5.679659843444824
    7. '[count' → logprob: -7.054659843444824
    8. '==' → logprob: -7.554659843444824
    9. ' ==' → logprob: -8.304659843444824
    10. '[i' → logprob: -8.679659843444824

Token 159: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.08900141716003418
    2. ' num' → logprob: -2.464001417160034
    3. ' ' → logprob: -9.839001655578613
    4. '[num' → logprob: -12.339001655578613
    5. '  ' → logprob: -13.964001655578613
    6. '	num' → logprob: -14.339001655578613
    7. '[]' → logprob: -14.589001655578613
    8. '(num' → logprob: -14.589001655578613
    9. '   ' → logprob: -14.714001655578613
    10. '<num' → logprob: -15.089001655578613

Token 160: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0010716310935094953
    2. '_s' → logprob: -7.001071453094482
    3. '_' → logprob: -8.75107192993164
    4. ' _' → logprob: -14.25107192993164
    5. 't' → logprob: -14.50107192993164
    6. 's' → logprob: -15.12607192993164
    7. '_i' → logprob: -16.87607192993164
    8. ''_' → logprob: -17.00107192993164
    9. ' ' → logprob: -17.12607192993164
    10. '```' → logprob: -17.37607192993164

Token 161: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031784188002347946
    2. ':
' → logprob: -4.0317840576171875
    3. '[' → logprob: -4.7817840576171875
    4. ' or' → logprob: -5.9067840576171875
    5. ' and' → logprob: -7.1567840576171875
    6. '       ' → logprob: -7.9067840576171875
    7. ':return' → logprob: -8.031784057617188
    8. '<|end|>' → logprob: -8.156784057617188
    9. '   ' → logprob: -8.656784057617188
    10. 'and' → logprob: -9.281784057617188

Token 162: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013222652487456799
    2. '   ' → logprob: -8.126321792602539
    3. '        
' → logprob: -8.501321792602539
    4. ' continue' → logprob: -8.876321792602539
    5. '\n' → logprob: -9.001321792602539
    6. '           ' → logprob: -9.251321792602539
    7. ' print' → logprob: -9.626321792602539
    8. '\' → logprob: -9.751321792602539
    9. ' 
' → logprob: -10.376321792602539
    10. ' ' → logprob: -10.501321792602539

Token 163: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.011857230216264725
    2. ' print' → logprob: -4.636857032775879
    3. 'break' → logprob: -6.386857032775879
    4. '   ' → logprob: -8.136857032775879
    5. ' break' → logprob: -9.261857032775879
    6. 'continue' → logprob: -11.636857032775879
    7. '       ' → logprob: -12.136857032775879
    8. '    ' → logprob: -12.886857032775879
    9. '	print' → logprob: -12.886857032775879
    10. 'pr' → logprob: -13.386857032775879

Token 164: '('' (ID: 706)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.28787297010421753
    2. '(' → logprob: -1.7878730297088623
    3. '('' → logprob: -2.5378730297088623
    4. '(False' → logprob: -6.412872791290283
    5. '(i' → logprob: -6.912872791290283
    6. '(-' → logprob: -7.787872791290283
    7. '()' → logprob: -8.037873268127441
    8. '(s' → logprob: -8.787873268127441
    9. '"' → logprob: -10.037873268127441
    10. '("")' → logprob: -10.662873268127441

Token 165: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.03904490917921066
    2. 'NO' → logprob: -3.4140448570251465
    3. 'no' → logprob: -5.5390448570251465
    4. 'DI' → logprob: -7.9140448570251465
    5. 'Not' → logprob: -8.789045333862305
    6. 'UN' → logprob: -9.164045333862305
    7. 'False' → logprob: -9.289045333862305
    8. 'Impossible' → logprob: -9.539045333862305
    9. '"No' → logprob: -9.539045333862305
    10. ' No' → logprob: -9.789045333862305

Token 166: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.2850320637226105
    2. '')' → logprob: -1.410032033920288
    3. ')' → logprob: -6.285032272338867
    4. ')
' → logprob: -6.660032272338867
    5. '')
' → logprob: -8.160032272338867
    6. '       ' → logprob: -8.410032272338867
    7. '")
' → logprob: -9.410032272338867
    8. ' ')
' → logprob: -10.160032272338867
    9. '")' → logprob: -10.410032272338867
    10. '   ' → logprob: -11.035032272338867

Token 167: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7173115611076355
    2. '       ' → logprob: -0.7173115611076355
    3. '   ' → logprob: -4.842311382293701
    4. '           ' → logprob: -5.717311382293701
    5. '\n' → logprob: -5.842311382293701
    6. '        
' → logprob: -6.092311382293701
    7. '```' → logprob: -6.717311382293701
    8. 'else' → logprob: -6.842311382293701
    9. '    
' → logprob: -6.842311382293701
    10. '  
' → logprob: -6.967311382293701

Token 168: ' quit' (ID: 27737)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003273491282016039
    2. ' exit' → logprob: -6.3782734870910645
    3. ' break' → logprob: -7.0032734870910645
    4. 'exit' → logprob: -7.5032734870910645
    5. 'break' → logprob: -9.628273963928223
    6. '	exit' → logprob: -11.503273963928223
    7. '   ' → logprob: -11.628273963928223
    8. '	break' → logprob: -11.878273963928223
    9. '        
' → logprob: -12.128273963928223
    10. ' ' → logprob: -12.878273963928223

Token 169: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018186114728450775
    2. '()
' → logprob: -4.018186092376709
    3. ')' → logprob: -11.893186569213867
    4. '()

' → logprob: -11.893186569213867
    5. '(' → logprob: -12.018186569213867
    6. '())' → logprob: -12.143186569213867
    7. '()
' → logprob: -12.393186569213867
    8. '()\' → logprob: -12.518186569213867
    9. '()`' → logprob: -14.018186569213867
    10. 'print' → logprob: -14.768186569213867

Token 170: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8690626621246338
    2. '
' → logprob: -1.7440626621246338
    3. ' 
' → logprob: -1.7440626621246338
    4. 'print' → logprob: -2.619062662124634
    5. '\n' → logprob: -3.369062662124634
    6. 'else' → logprob: -3.869062662124634
    7. '  
' → logprob: -3.869062662124634
    8. ')
' → logprob: -4.494062423706055
    9. 'n' → logprob: -4.619062423706055
    10. '    
' → logprob: -4.744062423706055

Token 171: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.6054075956344604
    2. '()' → logprob: -1.1054075956344604
    3. '(' → logprob: -2.10540771484375
    4. '("' → logprob: -6.73040771484375
    5. '(True' → logprob: -10.10540771484375
    6. '("("' → logprob: -11.60540771484375
    7. '(False' → logprob: -12.35540771484375
    8. '(len' → logprob: -12.35540771484375
    9. '("")' → logprob: -12.48040771484375
    10. ''' → logprob: -12.48040771484375

Token 172: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -6.0033853515051305e-05
    2. ' Yes' → logprob: -9.750060081481934
    3. 'Ok' → logprob: -14.625060081481934
    4. 'Ye' → logprob: -15.375060081481934
    5. ' ' → logprob: -15.625060081481934
    6. 'YES' → logprob: -15.750060081481934
    7. '')' → logprob: -15.875060081481934
    8. 'No' → logprob: -16.125059127807617
    9. ''' → logprob: -16.375059127807617
    10. 'OK' → logprob: -16.375059127807617

Token 173: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.04861200228333473
    2. ')' → logprob: -3.048612117767334
    3. '")' → logprob: -10.798611640930176
    4. '`)' → logprob: -13.423611640930176
    5. '')
' → logprob: -13.423611640930176
    6. '```' → logprob: -14.673611640930176
    7. ''' → logprob: -15.548611640930176
    8. '’)' → logprob: -15.673611640930176
    9. '»)' → logprob: -16.173612594604492
    10. '!' → logprob: -16.423612594604492


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 171
Tokens correctement prédits (1ère position, stricte): 69
Tokens correctement prédits (1ère position, avec adaptation): 78
Tokens correctement prédits (top 10): 143
Précision stricte (1ère position): 40.35%
Précision adaptée (1ère position): 45.61%
Précision (top 10): 83.63%
================================================================================
