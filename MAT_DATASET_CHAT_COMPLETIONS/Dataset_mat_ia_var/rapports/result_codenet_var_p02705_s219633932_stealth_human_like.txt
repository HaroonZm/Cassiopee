================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:17:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Bon, on récupère le rayon d'abord
rayon = input() # pas sûr que ce soit le bon nom mais bon
num = int(rayon)   # conversion, faut que ce soit un int
# j'importe la librairie ici, ça me semble propre
import math
# j'ai jamais retenu le nom exact... pi? pai? Enfin bref
piApprox = math.pi    # utiliser math.pi plutôt que 3.14 tant qu'à faire
# je calcule le tour du cercle, je crois que c'est ça la formule
tour_du_cercle = 2 * piApprox * num # C'est 2*Pi*R non ?
# et hop on affiche, je sais pas si c'est le format attendu mais bon
print(tour_du_cercle)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Bon' (ID: 12658)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.16662125289440155
    2. ' je' → logprob: -3.166621208190918
    3. '```' → logprob: -3.291621208190918
    4. '  ' → logprob: -3.416621208190918
    5. ' e' → logprob: -5.291621208190918
    6. ' t' → logprob: -5.291621208190918
    7. 'jour' → logprob: -5.541621208190918
    8. '`' → logprob: -5.666621208190918
    9. 'e' → logprob: -6.041621208190918
    10. ' ```' → logprob: -6.291621208190918

Token 4: ' récup' (ID: 62856)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3734365701675415
    2. '```' → logprob: -1.8734365701675415
    3. 'n' → logprob: -1.9984365701675415
    4. 'ne' → logprob: -2.623436450958252
    5. 'u' → logprob: -2.748436450958252
    6. 't' → logprob: -2.873436450958252
    7. 'e' → logprob: -2.873436450958252
    8. ''' → logprob: -3.498436450958252
    9. ' ```' → logprob: -3.748436450958252
    10. '`' → logprob: -3.748436450958252

Token 5: 'ère' (ID: 4346)
  Prédit: 'ère'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ère' → logprob: -0.002206401200965047
    2. 'è' → logprob: -7.127206325531006
    3. 'érer' → logprob: -7.502206325531006
    4. 'èr' → logprob: -8.127206802368164
    5. '#' → logprob: -8.252206802368164
    6. 'ére' → logprob: -8.752206802368164
    7. 'ération' → logprob: -10.127206802368164
    8. 'èrent' → logprob: -10.752206802368164
    9. '```' → logprob: -10.752206802368164
    10. 'érez' → logprob: -11.877206802368164

Token 6: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.04312650486826897
    2. '_' → logprob: -3.5431265830993652
    3. ' ' → logprob: -5.793126583099365
    4. ' le' → logprob: -6.043126583099365
    5. ' l' → logprob: -6.418126583099365
    6. ' #' → logprob: -6.918126583099365
    7. 'le' → logprob: -7.043126583099365
    8. '  ' → logprob: -7.543126583099365
    9. 'l' → logprob: -7.543126583099365
    10. ''' → logprob: -7.793126583099365

Token 7: ' rayon' (ID: 80967)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9027393460273743
    2. 'f' → logprob: -1.4027392864227295
    3. ' fichier' → logprob: -2.5277392864227295
    4. 'data' → logprob: -3.1527392864227295
    5. 'texte' → logprob: -3.6527392864227295
    6. 's' → logprob: -3.7777392864227295
    7. ' ' → logprob: -3.9027392864227295
    8. ' data' → logprob: -4.152739524841309
    9. 'conten' → logprob: -4.152739524841309
    10. ' f' → logprob: -4.527739524841309

Token 8: ' d' (ID: 272)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.11756327748298645
    2. '#' → logprob: -3.117563247680664
    3. '_' → logprob: -3.242563247680664
    4. ' ' → logprob: -4.742563247680664
    5. '=' → logprob: -5.367563247680664
    6. ',' → logprob: -5.992563247680664
    7. 'ray' → logprob: -6.617563247680664
    8. 'radius' → logprob: -6.617563247680664
    9. 's' → logprob: -6.742563247680664
    10. 'd' → logprob: -6.867563247680664

Token 9: ''abord' (ID: 89989)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -1.5151547193527222
    2. ''une' → logprob: -1.5151547193527222
    3. 'u' → logprob: -1.7651547193527222
    4. ''un' → logprob: -1.8901547193527222
    5. ''entrée' → logprob: -2.5151548385620117
    6. 'e' → logprob: -2.8901548385620117
    7. 'une' → logprob: -3.5151548385620117
    8. ''action' → logprob: -4.015154838562012
    9. 'un' → logprob: -4.265154838562012
    10. ''ex' → logprob: -5.015154838562012

Token 10: '
' (ID: 198)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.057628266513347626
    2. ' ' → logprob: -3.9326281547546387
    3. '_' → logprob: -4.682628154754639
    4. '#' → logprob: -4.932628154754639
    5. 'e' → logprob: -5.182628154754639
    6. '`' → logprob: -6.432628154754639
    7. 's' → logprob: -6.557628154754639
    8. 'a' → logprob: -6.682628154754639
    9. 'radius' → logprob: -6.682628154754639
    10. '=' → logprob: -6.807628154754639

Token 11: 'ray' (ID: 25430)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.1166076809167862
    2. ' ' → logprob: -3.116607666015625
    3. '_' → logprob: -3.491607666015625
    4. 'e' → logprob: -4.741607666015625
    5. '#' → logprob: -5.366607666015625
    6. 's' → logprob: -5.866607666015625
    7. ',' → logprob: -5.866607666015625
    8. '.' → logprob: -6.116607666015625
    9. 'ray' → logprob: -6.366607666015625
    10. '```' → logprob: -6.491607666015625

Token 12: 'on' (ID: 263)
  Prédit: 'o'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -0.28829383850097656
    2. 'on' → logprob: -1.5382938385009766
    3. 'a' → logprob: -3.4132938385009766
    4. 'ay' → logprob: -7.288293838500977
    5. ' ' → logprob: -7.663293838500977
    6. '  ' → logprob: -8.163293838500977
    7. 'e' → logprob: -8.413293838500977
    8. ' o' → logprob: -8.413293838500977
    9. '   ' → logprob: -8.413293838500977
    10. '_' → logprob: -9.038293838500977

Token 13: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.870782196521759
    2. '_' → logprob: -1.2457821369171143
    3. ' =' → logprob: -1.2457821369171143
    4. '=' → logprob: -6.620782375335693
    5. '_space' → logprob: -6.620782375335693
    6. ' _' → logprob: -6.745782375335693
    7. '[' → logprob: -7.370782375335693
    8. ')' → logprob: -8.370781898498535
    9. '_radius' → logprob: -8.370781898498535
    10. ' )' → logprob: -8.620781898498535

Token 14: ' input' (ID: 3422)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6294273138046265
    2. ' float' → logprob: -1.0044273138046265
    3. ' int' → logprob: -2.629427433013916
    4. ' input' → logprob: -4.754427433013916
    5. 'float' → logprob: -5.004427433013916
    6. '5' → logprob: -5.379427433013916
    7. 'int' → logprob: -6.004427433013916
    8. '10' → logprob: -6.129427433013916
    9. '3' → logprob: -6.629427433013916
    10. 'input' → logprob: -7.129427433013916

Token 15: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006179584306664765
    2. '('' → logprob: -8.000617980957031
    3. '("("' → logprob: -8.250617980957031
    4. '(
' → logprob: -11.875617980957031
    5. '()' → logprob: -12.625617980957031
    6. ''' → logprob: -13.250617980957031
    7. ' (' → logprob: -13.625617980957031
    8. '(

' → logprob: -13.750617980957031
    9. '(`' → logprob: -13.875617980957031
    10. '("")' → logprob: -14.125617980957031

Token 16: ' #' (ID: 1069)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21724195778369904
    2. ')' → logprob: -2.2172420024871826
    3. '.strip' → logprob: -2.8422420024871826
    4. '(' → logprob: -5.0922417640686035
    5. ' ' → logprob: -5.0922417640686035
    6. '*' → logprob: -5.5922417640686035
    7. '()' → logprob: -6.5922417640686035
    8. '#' → logprob: -6.9672417640686035
    9. '.to' → logprob: -6.9672417640686035
    10. '```' → logprob: -6.9672417640686035

Token 17: ' pas' (ID: 2173)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.5972391963005066
    2. ' ' → logprob: -1.7222392559051514
    3. ''' → logprob: -2.3472392559051514
    4. ' "' → logprob: -2.4722392559051514
    5. ')' → logprob: -3.7222392559051514
    6. 'int' → logprob: -3.7222392559051514
    7. ' '' → logprob: -4.847239017486572
    8. '.' → logprob: -5.222239017486572
    9. ' )' → logprob: -5.972239017486572
    10. ' int' → logprob: -6.097239017486572

Token 18: ' sûr' (ID: 46415)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -1.143493890762329
    2. '(' → logprob: -1.268493890762329
    3. '_' → logprob: -1.893493890762329
    4. '("' → logprob: -2.768493890762329
    5. ')' → logprob: -3.393493890762329
    6. ' ' → logprob: -4.26849365234375
    7. '('' → logprob: -4.39349365234375
    8. '_str' → logprob: -4.39349365234375
    9. 'str' → logprob: -5.14349365234375
    10. '_ray' → logprob: -5.26849365234375

Token 19: ' que' (ID: 661)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.29707077145576477
    2. '.' → logprob: -1.7970707416534424
    3. ')' → logprob: -3.2970707416534424
    4. '()' → logprob: -3.5470707416534424
    5. '(
' → logprob: -4.4220709800720215
    6. ' ' → logprob: -5.6720709800720215
    7. ',' → logprob: -6.0470709800720215
    8. '.strip' → logprob: -6.2970709800720215
    9. '```' → logprob: -7.2970709800720215
    10. '#' → logprob: -7.5470709800720215

Token 20: ' ce' (ID: 2357)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -1.2218495607376099
    2. ' isinstance' → logprob: -1.8468495607376099
    3. ' rayon' → logprob: -2.5968494415283203
    4. ''' → logprob: -2.7218494415283203
    5. 'int' → logprob: -2.7218494415283203
    6. ')' → logprob: -2.7218494415283203
    7. ' '' → logprob: -2.8468494415283203
    8. 'len' → logprob: -2.9718494415283203
    9. ' ' → logprob: -3.0968494415283203
    10. ' len' → logprob: -3.8468494415283203

Token 21: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.013777933083474636
    2. ''' → logprob: -4.888777732849121
    3. ' so' → logprob: -6.763777732849121
    4. 'so' → logprob: -6.888777732849121
    5. ' '' → logprob: -7.138777732849121
    6. ' ' → logprob: -7.513777732849121
    7. ''s' → logprob: -7.638777732849121
    8. ' f' → logprob: -8.138777732849121
    9. ' sois' → logprob: -8.388777732849121
    10. 's' → logprob: -8.513777732849121

Token 22: ' le' (ID: 505)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8832987546920776
    2. '_' → logprob: -1.3832987546920776
    3. ' une' → logprob: -1.8832987546920776
    4. ' un' → logprob: -2.383298873901367
    5. ' convert' → logprob: -4.633298873901367
    6. ' a' → logprob: -4.633298873901367
    7. ' valid' → logprob: -4.758298873901367
    8. 's' → logprob: -5.383298873901367
    9. ' convertible' → logprob: -5.383298873901367
    10. ' _' → logprob: -5.508298873901367

Token 23: ' bon' (ID: 4846)
  Prédit: 'bon'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bon' → logprob: -0.03170347213745117
    2. 'ray' → logprob: -4.531703472137451
    3. ' bon' → logprob: -4.656703472137451
    4. 'r' → logprob: -5.406703472137451
    5. ' rayon' → logprob: -6.281703472137451
    6. 'radius' → logprob: -7.156703472137451
    7. 'code' → logprob: -7.656703472137451
    8. ' code' → logprob: -7.781703472137451
    9. 'bonne' → logprob: -7.781703472137451
    10. 'ent' → logprob: -8.15670394897461

Token 24: ' nom' (ID: 8080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.37085115909576416
    2. '.' → logprob: -1.2458511590957642
    3. ' ' → logprob: -4.620851039886475
    4. ',' → logprob: -6.245851039886475
    5. '(' → logprob: -6.245851039886475
    6. ' )' → logprob: -6.495851039886475
    7. '.strip' → logprob: -6.620851039886475
    8. '_' → logprob: -7.370851039886475
    9. '```' → logprob: -7.745851039886475
    10. '=' → logprob: -7.745851039886475

Token 25: ' mais' (ID: 2899)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11131920665502548
    2. '.' → logprob: -2.9863193035125732
    3. '(' → logprob: -4.611319065093994
    4. ',' → logprob: -4.736319065093994
    5. ' ' → logprob: -5.361319065093994
    6. '```' → logprob: -5.361319065093994
    7. '()' → logprob: -5.861319065093994
    8. 'ray' → logprob: -5.861319065093994
    9. '<|end|>' → logprob: -6.236319065093994
    10. '.strip' → logprob: -6.486319065093994

Token 26: ' bon' (ID: 4846)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2457893192768097
    2. '"' → logprob: -2.7457892894744873
    3. ')' → logprob: -3.1207892894744873
    4. 'ray' → logprob: -3.4957892894744873
    5. ' )' → logprob: -3.9957892894744873
    6. ' rayon' → logprob: -3.9957892894744873
    7. ' "' → logprob: -4.495789527893066
    8. ''' → logprob: -4.745789527893066
    9. 'int' → logprob: -5.370789527893066
    10. '```' → logprob: -5.995789527893066

Token 27: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44236743450164795
    2. '(' → logprob: -1.567367434501648
    3. '.' → logprob: -2.5673675537109375
    4. '()' → logprob: -4.1923675537109375
    5. '(
' → logprob: -4.6923675537109375
    6. ' ' → logprob: -4.6923675537109375
    7. '```' → logprob: -4.9423675537109375
    8. ',' → logprob: -5.0673675537109375
    9. '#' → logprob: -5.5673675537109375
    10. '*' → logprob: -5.8173675537109375

Token 28: 'num' (ID: 4571)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1661471426486969
    2. '(' → logprob: -2.666147232055664
    3. '()' → logprob: -3.416147232055664
    4. '.' → logprob: -4.416147232055664
    5. ' ' → logprob: -4.916147232055664
    6. ' =' → logprob: -5.166147232055664
    7. ' )' → logprob: -5.791147232055664
    8. ',' → logprob: -5.916147232055664
    9. '=' → logprob: -5.916147232055664
    10. '```' → logprob: -6.041147232055664

Token 29: ' =' (ID: 314)
  Prédit: 'éro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'éro' → logprob: -1.1511348485946655
    2. '_' → logprob: -1.4011348485946655
    3. 'é' → logprob: -1.9011348485946655
    4. '.' → logprob: -2.651134967803955
    5. '(' → logprob: -3.401134967803955
    6. 'ér' → logprob: -3.651134967803955
    7. '()' → logprob: -3.901134967803955
    8. 'érique' → logprob: -4.026134967803955
    9. 'er' → logprob: -4.276134967803955
    10. 'è' → logprob: -4.401134967803955

Token 30: ' int' (ID: 677)
  Prédit: ' float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.296511709690094
    2. ' int' → logprob: -1.4215116500854492
    3. 'int' → logprob: -4.671511650085449
    4. 'float' → logprob: -5.296511650085449
    5. ' ' → logprob: -7.171511650085449
    6. ' ' → logprob: -9.92151165008545
    7. '  ' → logprob: -11.42151165008545
    8. '```' → logprob: -11.54651165008545
    9. '=float' → logprob: -11.79651165008545
    10. '	float' → logprob: -11.92151165008545

Token 31: '(r' (ID: 4729)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10045833885669708
    2. '(r' → logprob: -2.3504583835601807
    3. '(ray' → logprob: -8.475458145141602
    4. '(input' → logprob: -11.225458145141602
    5. '()' → logprob: -11.850458145141602
    6. '(user' → logprob: -12.225458145141602
    7. '('' → logprob: -12.475458145141602
    8. ' (' → logprob: -12.600458145141602
    9. '(
' → logprob: -13.350458145141602
    10. '(

' → logprob: -13.600458145141602

Token 32: 'ayon' (ID: 42054)
  Prédit: 'ayon'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayon' → logprob: -0.00012130453251302242
    2. 'ay' → logprob: -10.250121116638184
    3. '  ' → logprob: -11.500121116638184
    4. '#' → logprob: -11.625121116638184
    5. '   ' → logprob: -11.750121116638184
    6. '

' → logprob: -12.125121116638184
    7. '```' → logprob: -12.250121116638184
    8. '<' → logprob: -12.250121116638184
    9. ')' → logprob: -12.375121116638184
    10. 'ray' → logprob: -12.375121116638184

Token 33: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002019907406065613
    2. ' )' → logprob: -9.250202178955078
    3. '))' → logprob: -9.500202178955078
    4. '[' → logprob: -10.750202178955078
    5. ')))' → logprob: -13.500202178955078
    6. '()' → logprob: -13.750202178955078
    7. '+' → logprob: -13.875202178955078
    8. '())' → logprob: -14.000202178955078
    9. '(' → logprob: -14.125202178955078
    10. ')`' → logprob: -14.625202178955078

Token 34: '  ' (ID: 256)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5795060396194458
    2. ')' → logprob: -1.0795060396194458
    3. ' ' → logprob: -3.5795059204101562
    4. '<|end|>' → logprob: -3.8295059204101562
    5. ' *' → logprob: -4.329505920410156
    6. '.' → logprob: -4.329505920410156
    7. '\' → logprob: -4.579505920410156
    8. '#' → logprob: -5.454505920410156
    9. '\n' → logprob: -6.204505920410156
    10. '
' → logprob: -6.329505920410156

Token 35: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1532382220029831
    2. ')' → logprob: -2.528238296508789
    3. ' *' → logprob: -3.903238296508789
    4. ' ' → logprob: -4.653238296508789
    5. '**' → logprob: -4.653238296508789
    6. '+' → logprob: -4.778238296508789
    7. '#' (adapté à ' #') → logprob: -5.028238296508789
    8. '.' → logprob: -6.278238296508789
    9. '<|end|>' → logprob: -6.528238296508789
    10. ' 
' → logprob: -7.403238296508789

Token 36: ' conversion' (ID: 22165)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7420263886451721
    2. '*' → logprob: -1.4920263290405273
    3. ')' → logprob: -1.6170263290405273
    4. '\n' → logprob: -4.117026329040527
    5. ' *' → logprob: -4.117026329040527
    6. '.' → logprob: -4.367026329040527
    7. '\' → logprob: -4.617026329040527
    8. '<|end|>' → logprob: -4.867026329040527
    9. ' 
' → logprob: -5.242026329040527
    10. '#' → logprob: -5.242026329040527

Token 37: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3584522604942322
    2. '*' → logprob: -1.733452320098877
    3. ' ' → logprob: -2.733452320098877
    4. ',' → logprob: -4.858452320098877
    5. '#' → logprob: -4.983452320098877
    6. 'r' → logprob: -5.108452320098877
    7. '.' → logprob: -5.233452320098877
    8. '+' → logprob: -5.358452320098877
    9. '(' → logprob: -5.358452320098877
    10. '
' → logprob: -5.483452320098877

Token 38: ' faut' (ID: 17821)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.2921290099620819
    2. ')' → logprob: -1.4171290397644043
    3. ' )' → logprob: -5.292129039764404
    4. ' "' → logprob: -6.792129039764404
    5. ' ' → logprob: -7.167129039764404
    6. '<|end|>' → logprob: -7.792129039764404
    7. ' a' → logprob: -8.292128562927246
    8. '"' → logprob: -8.417128562927246
    9. ' on' → logprob: -8.479628562927246
    10. ',' → logprob: -8.604628562927246

Token 39: ' que' (ID: 661)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7178260087966919
    2. ' vérifier' → logprob: -2.3428258895874023
    3. 'v' → logprob: -2.5928258895874023
    4. '-il' → logprob: -3.0928258895874023
    5. ' bien' → logprob: -3.5928258895874023
    6. ' pas' → logprob: -3.7178258895874023
    7. 'bien' → logprob: -3.7178258895874023
    8. 'être' → logprob: -4.092825889587402
    9. ' penser' → logprob: -4.217825889587402
    10. '```' → logprob: -4.467825889587402

Token 40: ' ce' (ID: 2357)
  Prédit: 'je'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'je' → logprob: -1.1342568397521973
    2. ' ce' → logprob: -1.3842568397521973
    3. 'ce' → logprob: -1.6342568397521973
    4. 'num' → logprob: -2.7592568397521973
    5. 'tu' → logprob: -3.6342568397521973
    6. ' je' → logprob: -3.8842568397521973
    7. ' tu' → logprob: -4.009256839752197
    8. 'faire' → logprob: -4.134256839752197
    9. 'ça' → logprob: -4.259256839752197
    10. 'le' → logprob: -4.634256839752197

Token 41: ' soit' (ID: 17293)
  Prédit: ' soit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' soit' → logprob: -0.06605628877878189
    2. 'so' → logprob: -2.941056251525879
    3. 's' → logprob: -5.066056251525879
    4. 'f' → logprob: -7.066056251525879
    5. ' sois' → logprob: -7.066056251525879
    6. 'a' → logprob: -7.566056251525879
    7. 'ray' → logprob: -7.691056251525879
    8. ' so' → logprob: -8.566056251525879
    9. 'num' → logprob: -8.566056251525879
    10. '```' → logprob: -8.816056251525879

Token 42: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.10587209463119507
    2. 'un' → logprob: -2.35587215423584
    3. ' correct' → logprob: -5.85587215423584
    4. 'ent' → logprob: -7.48087215423584
    5. 'bien' → logprob: -8.10587215423584
    6. ' une' → logprob: -8.23087215423584
    7. ' entier' → logprob: -8.35587215423584
    8. 'une' → logprob: -8.48087215423584
    9. '```' → logprob: -8.48087215423584
    10. ' en' → logprob: -8.73087215423584

Token 43: ' int' (ID: 677)
  Prédit: 'ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ent' → logprob: -1.3583794832229614
    2. ' nombre' → logprob: -1.3583794832229614
    3. ' entier' → logprob: -1.3583794832229614
    4. 'nombre' → logprob: -1.6083794832229614
    5. 'e' → logprob: -4.358379364013672
    6. 'n' → logprob: -5.358379364013672
    7. 'int' → logprob: -5.733379364013672
    8. ' ' → logprob: -6.733379364013672
    9. '```' → logprob: -7.108379364013672
    10. ' int' → logprob: -7.608379364013672

Token 44: '
' (ID: 198)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.9868242740631104
    2. ')' → logprob: -1.1118242740631104
    3. '\n' → logprob: -2.2368242740631104
    4. '*' → logprob: -2.8618242740631104
    5. '#' → logprob: -3.1118242740631104
    6. '.' → logprob: -3.8618242740631104
    7. ' ' → logprob: -4.236824035644531
    8. ' 
' → logprob: -4.861824035644531
    9. '(' → logprob: -4.986824035644531
    10. '  
' → logprob: -5.236824035644531

Token 45: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1641267538070679
    2. '*' → logprob: -1.2891267538070679
    3. '\' → logprob: -1.9141267538070679
    4. '#' → logprob: -2.2891268730163574
    5. '\n' → logprob: -2.2891268730163574
    6. ',' → logprob: -4.539126873016357
    7. ' ' → logprob: -5.039126873016357
    8. '.' → logprob: -5.164126873016357
    9. 'r' → logprob: -5.164126873016357
    10. '
' → logprob: -5.164126873016357

Token 46: ' j' (ID: 441)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -1.4106124639511108
    2. ')' → logprob: -1.7856124639511108
    3. ' ' → logprob: -1.7856124639511108
    4. '\n' → logprob: -1.7856124639511108
    5. '#' → logprob: -2.4106125831604004
    6. '*' → logprob: -2.5356125831604004
    7. '  
' → logprob: -4.5356125831604
    8. ' 
' → logprob: -4.6606125831604
    9. '<|end|>' → logprob: -4.7856125831604
    10. ',' → logprob: -4.9106125831604

Token 47: ''importe' (ID: 103032)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.057398341596126556
    2. 'uste' → logprob: -3.0573983192443848
    3. 'ust' → logprob: -6.307398319244385
    4. ''ai' → logprob: -6.557398319244385
    5. ''espère' → logprob: -6.807398319244385
    6. 'a' → logprob: -6.932398319244385
    7. ''aj' → logprob: -7.432398319244385
    8. 'avascript' → logprob: -7.682398319244385
    9. ''' → logprob: -7.807398319244385
    10. 'oueur' → logprob: -8.682398796081543

Token 48: ' la' (ID: 557)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.0015093892579898238
    2. ' ' → logprob: -6.876509189605713
    3. 'math' → logprob: -8.126509666442871
    4. ' ' → logprob: -10.001509666442871
    5. ' numpy' → logprob: -10.376509666442871
    6. ' ' → logprob: -10.501509666442871
    7. '(math' → logprob: -10.876509666442871
    8. '_math' → logprob: -11.501509666442871
    9. '```' → logprob: -11.751509666442871
    10. ' matplotlib' → logprob: -11.751509666442871

Token 49: ' libra' (ID: 128316)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.17997537553310394
    2. 'math' → logprob: -1.8049753904342651
    3. 'import' → logprob: -9.429975509643555
    4. 'm' → logprob: -10.304975509643555
    5. 'cmath' → logprob: -10.429975509643555
    6. '```' → logprob: -10.554975509643555
    7. ' m' → logprob: -11.804975509643555
    8. 'mat' → logprob: -11.804975509643555
    9. ' from' → logprob: -12.054975509643555
    10. 'from' → logprob: -12.054975509643555

Token 50: 'irie' (ID: 59773)
  Prédit: 'irie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irie' → logprob: -0.012846768833696842
    2. 'rie' → logprob: -4.387846946716309
    3. 'ir' → logprob: -8.387846946716309
    4. 'ire' → logprob: -9.887846946716309
    5. 'ry' → logprob: -10.512846946716309
    6. 'erie' → logprob: -11.512846946716309
    7. 'ie' → logprob: -12.262846946716309
    8. 'urie' → logprob: -12.512846946716309
    9. 'r' → logprob: -13.137846946716309
    10. '#' → logprob: -13.387846946716309

Token 51: ' ici' (ID: 27994)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.04340037330985069
    2. ' import' → logprob: -3.793400287628174
    3. ' ' → logprob: -4.168400287628174
    4. 'import' → logprob: -6.043400287628174
    5. 'math' → logprob: -7.043400287628174
    6. ' numpy' → logprob: -7.168400287628174
    7. ' m' → logprob: -8.293400764465332
    8. ' matplotlib' → logprob: -9.918400764465332
    9. ' ```' → logprob: -10.168400764465332
    10. 'm' → logprob: -10.793400764465332

Token 52: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01853816583752632
    2. ' import' → logprob: -4.518537998199463
    3. ' math' → logprob: -5.268537998199463
    4. '```' → logprob: -6.768537998199463
    5. '
' → logprob: -7.893537998199463
    6. ' 
' → logprob: -8.768538475036621
    7. 'math' → logprob: -8.893538475036621
    8. '\n' → logprob: -9.018538475036621
    9. '\' → logprob: -9.393538475036621
    10. '`' → logprob: -9.893538475036621

Token 53: ' ça' (ID: 13590)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.6765284538269043
    2. 'import' → logprob: -0.9265284538269043
    3. ' import' → logprob: -2.4265284538269043
    4. 'math' → logprob: -5.426528453826904
    5. ' on' → logprob: -6.301528453826904
    6. ' numpy' → logprob: -8.801528930664062
    7. ' from' → logprob: -9.176528930664062
    8. ' je' → logprob: -9.176528930664062
    9. ' c' → logprob: -9.301528930664062
    10. 'cmath' → logprob: -9.426528930664062

Token 54: ' me' (ID: 668)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.28744077682495117
    2. ' import' → logprob: -1.4124407768249512
    3. ' math' → logprob: -5.787440776824951
    4. ' ' → logprob: -7.412440776824951
    5. ' n' → logprob: -7.537440776824951
    6. 'n' → logprob: -7.662440776824951
    7. '<|end|>' → logprob: -7.662440776824951
    8. ' importe' → logprob: -8.78744125366211
    9. ' 
' → logprob: -9.03744125366211
    10. '	import' → logprob: -9.16244125366211

Token 55: ' semble' (ID: 42899)
  Prédit: ' semble'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' semble' → logprob: -0.5552773475646973
    2. ' paraît' → logprob: -2.6802773475646973
    3. 'f' → logprob: -3.0552773475646973
    4. ' va' → logprob: -3.3052773475646973
    5. 'semble' → logprob: -3.5552773475646973
    6. 's' → logprob: -3.5552773475646973
    7. 'va' → logprob: -3.5552773475646973
    8. ' permettra' → logprob: -3.9302773475646973
    9. 'import' → logprob: -4.180277347564697
    10. 'fac' → logprob: -4.430277347564697

Token 56: ' propre' (ID: 40682)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.08698960393667221
    2. ' math' → logprob: -2.711989641189575
    3. ' bien' → logprob: -5.336989402770996
    4. ' import' → logprob: -5.336989402770996
    5. 'math' → logprob: -6.211989402770996
    6. ' correct' → logprob: -6.836989402770996
    7. ' okay' → logprob: -6.961989402770996
    8. ' logique' → logprob: -6.961989402770996
    9. ' nécessaire' → logprob: -7.836989402770996
    10. ' ok' → logprob: -8.086989402770996

Token 57: '
' (ID: 198)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.01586003787815571
    2. '
' → logprob: -4.515860080718994
    3. ' import' → logprob: -6.140860080718994
    4. '```' → logprob: -6.640860080718994
    5. ' math' → logprob: -7.765860080718994
    6. '' → logprob: -8.265859603881836
    7. ' 
' → logprob: -8.390859603881836
    8. '\n' → logprob: -8.890859603881836
    9. 'math' → logprob: -9.765859603881836
    10. '
' → logprob: -9.765859603881836

Token 58: 'import' (ID: 561)
  Prédit: 'import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.011707247234880924
    2. ' math' → logprob: -5.386707305908203
    3. ' import' → logprob: -5.886707305908203
    4. '
' → logprob: -6.261707305908203
    5. '```' → logprob: -6.636707305908203
    6. 'math' → logprob: -7.261707305908203
    7. '\n' → logprob: -8.886707305908203
    8. ' 
' → logprob: -9.386707305908203
    9. '\' → logprob: -10.636707305908203
    10. '' → logprob: -10.761707305908203

Token 59: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -5.204720582696609e-05
    2. ' ' → logprob: -11.125052452087402
    3. ' numpy' → logprob: -11.375052452087402
    4. ' ' → logprob: -11.500052452087402
    5. '_math' → logprob: -12.250052452087402
    6. ' matplotlib' → logprob: -12.875052452087402
    7. 'math' → logprob: -13.000052452087402
    8. ' space' → logprob: -13.500052452087402
    9. ' random' → logprob: -13.750052452087402
    10. '_' → logprob: -14.125052452087402

Token 60: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5298502445220947
    2. 'r' → logprob: -2.7798502445220947
    3. '\n' → logprob: -2.7798502445220947
    4. ' 
' → logprob: -2.9048502445220947
    5. '  
' → logprob: -3.0298502445220947
    6. '*' → logprob: -3.4048502445220947
    7. '#' → logprob: -3.5298502445220947
    8. '' → logprob: -3.5298502445220947
    9. '

' → logprob: -4.529850006103516
    10. 'pi' → logprob: -4.654850006103516

Token 61: '#' (ID: 2)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.6122394800186157
    2. '*' → logprob: -1.7372394800186157
    3. '
' → logprob: -2.487239360809326
    4. '\n' → logprob: -2.487239360809326
    5. '#' → logprob: -3.362239360809326
    6. '' → logprob: -3.612239360809326
    7. '  
' → logprob: -4.987239360809326
    8. 'radius' → logprob: -4.987239360809326
    9. ')' → logprob: -5.362239360809326
    10. 'a' → logprob: -5.612239360809326

Token 62: ' j' (ID: 441)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6172784566879272
    2. 'r' → logprob: -1.7422784566879272
    3. ' 
' → logprob: -2.367278575897217
    4. '#' → logprob: -3.492278575897217
    5. 'ray' → logprob: -4.242278575897217
    6. 'radius' → logprob: -4.242278575897217
    7. '' → logprob: -4.367278575897217
    8. '  
' → logprob: -4.492278575897217
    9. ' rayon' → logprob: -4.492278575897217
    10. ' #' → logprob: -4.617278575897217

Token 63: ''ai' (ID: 12480)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.7538543939590454
    2. ''ai' → logprob: -2.503854274749756
    3. '.' → logprob: -3.003854274749756
    4. ''espère' → logprob: -3.003854274749756
    5. ''' → logprob: -3.128854274749756
    6. 'a' → logprob: -3.253854274749756
    7. 's' → logprob: -3.628854274749756
    8. ' vais' → logprob: -3.878854274749756
    9. 'p' → logprob: -4.378854274749756
    10. ' veux' → logprob: -4.503854274749756

Token 64: ' jamais' (ID: 23077)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4778946042060852
    2. ' besoin' → logprob: -1.2278945446014404
    3. ' math' → logprob: -3.6028945446014404
    4. '_' → logprob: -3.8528945446014404
    5. ' calcul' → logprob: -4.1028947830200195
    6. 'f' → logprob: -5.9778947830200195
    7. ' f' → logprob: -6.1028947830200195
    8. ' compris' → logprob: -6.6028947830200195
    9. ' l' → logprob: -6.8528947830200195
    10. ' un' → logprob: -7.1028947830200195

Token 65: ' reten' (ID: 91978)
  Prédit: ' utilisé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' utilisé' → logprob: -0.5241524577140808
    2. 'fait' → logprob: -1.8991525173187256
    3. 'import' → logprob: -2.8991525173187256
    4. ' fait' → logprob: -2.8991525173187256
    5. 'util' → logprob: -3.3991525173187256
    6. ' vu' → logprob: -3.5241525173187256
    7. 'vu' → logprob: -3.5241525173187256
    8. ' compris' → logprob: -4.3991522789001465
    9. ' calcul' → logprob: -5.0241522789001465
    10. 'calcul' → logprob: -5.2741522789001465

Token 66: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -4.68022444692906e-05
    2. 'ue' → logprob: -10.500046730041504
    3. 'enu' → logprob: -12.000046730041504
    4. 'nu' → logprob: -12.125046730041504
    5. 'du' → logprob: -12.875046730041504
    6. 'tu' → logprob: -14.375046730041504
    7. 'eu' → logprob: -14.500046730041504
    8. '[u' → logprob: -14.750046730041504
    9. 'ué' → logprob: -14.750046730041504
    10. 'i' → logprob: -15.250046730041504

Token 67: ' le' (ID: 505)
  Prédit: ' comment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' comment' → logprob: -0.27083325386047363
    2. ' la' → logprob: -2.2708332538604736
    3. 'comment' → logprob: -2.6458332538604736
    4. 'la' → logprob: -3.8958332538604736
    5. ' ' → logprob: -4.5208330154418945
    6. ' ce' → logprob: -4.6458330154418945
    7. 'le' → logprob: -5.3958330154418945
    8. ' à' → logprob: -5.6458330154418945
    9. 'ce' → logprob: -6.0208330154418945
    10. ' le' → logprob: -6.0208330154418945

Token 68: ' nom' (ID: 8080)
  Prédit: ' pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pi' → logprob: -0.18962889909744263
    2. 'pi' → logprob: -2.564628839492798
    3. ' π' → logprob: -2.564628839492798
    4. '_pi' → logprob: -5.064629077911377
    5. ' ' → logprob: -6.064629077911377
    6. 'π' → logprob: -6.689629077911377
    7. ' diamètre' → logprob: -6.814629077911377
    8. ' rayon' → logprob: -6.814629077911377
    9. '_' → logprob: -7.189629077911377
    10. ' math' → logprob: -7.439629077911377

Token 69: ' exact' (ID: 6354)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5028016567230225
    2. ' math' → logprob: -2.0028016567230225
    3. 'pi' → logprob: -2.3778016567230225
    4. ' ' → logprob: -3.1278016567230225
    5. 's' → logprob: -3.3778016567230225
    6. ' pi' → logprob: -3.5028016567230225
    7. 'math' → logprob: -4.127801895141602
    8. ' du' → logprob: -4.502801895141602
    9. '_pi' → logprob: -5.752801895141602
    10. ' d' → logprob: -5.877801895141602

Token 70: '...' (ID: 1008)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.09184479713439941
    2. 'math' → logprob: -3.5918447971343994
    3. ' pi' → logprob: -3.8418447971343994
    4. ' de' → logprob: -4.59184455871582
    5. 's' → logprob: -4.96684455871582
    6. '_pi' → logprob: -5.59184455871582
    7. 'r' → logprob: -5.71684455871582
    8. 'de' → logprob: -5.71684455871582
    9. ' math' → logprob: -6.21684455871582
    10. 'import' → logprob: -6.21684455871582

Token 71: ' pi' (ID: 6404)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.6922122836112976
    2. ' ' → logprob: -2.0672123432159424
    3. 'math' → logprob: -2.0672123432159424
    4. 'r' → logprob: -2.4422123432159424
    5. ' pi' → logprob: -3.3172123432159424
    6. ',' → logprob: -3.8172123432159424
    7. ' math' → logprob: -3.9422123432159424
    8. ')' → logprob: -4.192212104797363
    9. '(' → logprob: -4.567212104797363
    10. 'import' → logprob: -4.567212104797363

Token 72: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5174150466918945
    2. ' =' → logprob: -1.8924150466918945
    3. ',' → logprob: -2.2674150466918945
    4. ' )' → logprob: -3.3924150466918945
    5. '<|end|>' → logprob: -3.5174150466918945
    6. '=' → logprob: -3.7674150466918945
    7. ' ' → logprob: -3.8924150466918945
    8. '.' → logprob: -4.6424150466918945
    9. ' *' → logprob: -4.7674150466918945
    10. ' ,' → logprob: -5.2674150466918945

Token 73: ' pai' (ID: 26390)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7104836106300354
    2. ')' → logprob: -0.8354836106300354
    3. 'math' → logprob: -4.085483551025391
    4. ' math' → logprob: -4.585483551025391
    5. 'pi' → logprob: -4.585483551025391
    6. '.' → logprob: -4.960483551025391
    7. ' ' → logprob: -5.085483551025391
    8. '=' → logprob: -5.835483551025391
    9. '
' → logprob: -6.085483551025391
    10. ':' → logprob: -6.335483551025391

Token 74: '?' (ID: 30)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4903342723846436
    2. 'r' → logprob: -2.4903342723846436
    3. '_math' → logprob: -2.4903342723846436
    4. ' ' → logprob: -2.6153342723846436
    5. 'math' → logprob: -2.6153342723846436
    6. '_pi' → logprob: -3.1153342723846436
    7. '?' → logprob: -3.3653342723846436
    8. 'cmath' → logprob: -3.4903342723846436
    9. 'm' → logprob: -3.4903342723846436
    10. '=' → logprob: -3.4903342723846436

Token 75: ' Enfin' (ID: 85274)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.24323776364326477
    2. '.pi' → logprob: -2.8682377338409424
    3. '.' → logprob: -3.4932377338409424
    4. 'math' → logprob: -3.7432377338409424
    5. ' ' → logprob: -3.9932377338409424
    6. 't' → logprob: -3.9932377338409424
    7. ')' → logprob: -4.7432379722595215
    8. 'm' → logprob: -4.7432379722595215
    9. 'a' → logprob: -4.9932379722595215
    10. 'p' → logprob: -5.1182379722595215

Token 76: ' bref' (ID: 119435)
  Prédit: 'pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.13568514585494995
    2. 'math' → logprob: -2.5106852054595947
    3. ' math' → logprob: -3.7606852054595947
    4. ' pi' → logprob: -4.135684967041016
    5. '.pi' → logprob: -6.885684967041016
    6. ',' → logprob: -7.010684967041016
    7. '_pi' → logprob: -7.010684967041016
    8. ' =' → logprob: -7.010684967041016
    9. 'π' → logprob: -7.635684967041016
    10. ' ' → logprob: -8.135684967041016

Token 77: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8236494660377502
    2. 'pi' → logprob: -1.0736494064331055
    3. ',' → logprob: -2.5736494064331055
    4. 'math' → logprob: -3.1986494064331055
    5. 'm' → logprob: -4.0736494064331055
    6. ' ' → logprob: -4.1986494064331055
    7. '.' → logprob: -4.1986494064331055
    8. 'p' → logprob: -4.3236494064331055
    9. ' )' → logprob: -4.4486494064331055
    10. ' math' → logprob: -5.1986494064331055

Token 78: 'pi' (ID: 3455)
  Prédit: 'pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pi' → logprob: -0.020044375211000443
    2. ' pi' → logprob: -4.645044326782227
    3. 'math' → logprob: -5.520044326782227
    4. ' math' → logprob: -6.895044326782227
    5. 'π' → logprob: -7.020044326782227
    6. ')' → logprob: -7.145044326782227
    7. ' ' → logprob: -7.145044326782227
    8. '_pi' → logprob: -7.270044326782227
    9. 'radius' → logprob: -8.145044326782227
    10. ',' → logprob: -8.145044326782227

Token 79: 'Approx' (ID: 116014)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5234500765800476
    2. '=' → logprob: -0.8984500765800476
    3. '.' → logprob: -8.148449897766113
    4. ' ' → logprob: -11.273449897766113
    5. ')' → logprob: -11.398449897766113
    6. ',' → logprob: -12.398449897766113
    7. 'pi' → logprob: -12.648449897766113
    8. 'import' → logprob: -13.898449897766113
    9. ' =
' → logprob: -14.273449897766113
    10. '.=' → logprob: -14.273449897766113

Token 80: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.195122629404068
    2. ' =' → logprob: -2.445122718811035
    3. 'ation' → logprob: -2.570122718811035
    4. 'm' → logprob: -4.695122718811035
    5. 'imation' → logprob: -5.820122718811035
    6. 'math' → logprob: -7.195122718811035
    7. 'pi' → logprob: -7.320122718811035
    8. '_' → logprob: -9.070122718811035
    9. '=m' → logprob: -9.945122718811035
    10. '	' → logprob: -10.570122718811035

Token 81: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.023251881822943687
    2. 'math' → logprob: -3.77325177192688
    3. '3' → logprob: -12.8982515335083
    4. '(math' → logprob: -13.2732515335083
    5. ' ' → logprob: -14.3982515335083
    6. ' ' → logprob: -15.0232515335083
    7. '.math' → logprob: -15.1482515335083
    8. ' ma' → logprob: -15.8982515335083
    9. ' maths' → logprob: -15.8982515335083
    10. '2' → logprob: -16.648252487182617

Token 82: '.pi' (ID: 55497)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.31329724192619324
    2. '.pi' → logprob: -1.3132972717285156
    3. '.PI' → logprob: -11.188297271728516
    4. '.p' → logprob: -11.563297271728516
    5. ' .' → logprob: -12.313297271728516
    6. '.
' → logprob: -13.188297271728516
    7. '.sqrt' → logprob: -13.938297271728516
    8. '.pyplot' → logprob: -14.063297271728516
    9. '.

' → logprob: -15.063297271728516
    10. '.s' → logprob: -15.563297271728516

Token 83: '   ' (ID: 271)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1574663519859314
    2. '
' → logprob: -3.032466411590576
    3. '#' → logprob: -3.157466411590576
    4. ' ' → logprob: -4.282466411590576
    5. ' 
' → logprob: -4.657466411590576
    6. ')' → logprob: -4.782466411590576
    7. '' → logprob: -4.907466411590576
    8. '  
' → logprob: -5.532466411590576
    9. ' *' → logprob: -6.282466411590576
    10. '.' → logprob: -6.407466411590576

Token 84: ' #' (ID: 1069)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5434352159500122
    2. '#' (adapté à ' #') → logprob: -1.1684352159500122
    3. '
' → logprob: -3.7934350967407227
    4. '\n' → logprob: -3.7934350967407227
    5. ')' → logprob: -4.043435096740723
    6. ' ' → logprob: -4.043435096740723
    7. '' → logprob: -5.293435096740723
    8. '\' → logprob: -5.543435096740723
    9. ' *' → logprob: -5.793435096740723
    10. ' 
' → logprob: -5.793435096740723

Token 85: ' utiliser' (ID: 43227)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7217043042182922
    2. '#' → logprob: -0.9717043042182922
    3. '*' → logprob: -3.2217042446136475
    4. ' #' → logprob: -3.4717042446136475
    5. ' math' → logprob: -4.346704483032227
    6. ' *' → logprob: -4.971704483032227
    7. ' 
' → logprob: -5.096704483032227
    8. 'math' → logprob: -5.346704483032227
    9. 'import' → logprob: -5.471704483032227
    10. '  
' → logprob: -5.846704483032227

Token 86: ' math' (ID: 13324)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: '.pi' (ID: 55497)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.1621749997138977
    2. ' *' → logprob: -2.537174940109253
    3. '#' → logprob: -3.912174940109253
    4. ')' → logprob: -4.162175178527832
    5. ' ' → logprob: -4.537175178527832
    6. '<|end|>' → logprob: -5.412175178527832
    7. '*r' → logprob: -5.787175178527832
    8. '
' → logprob: -6.037175178527832
    9. '**' → logprob: -6.287175178527832
    10. '*pi' → logprob: -6.412175178527832

Token 88: ' plutôt' (ID: 40017)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6824295520782471
    2. '#' → logprob: -0.9324295520782471
    3. ' 
' → logprob: -3.557429552078247
    4. ' ' → logprob: -4.057429313659668
    5. '
' → logprob: -4.182429313659668
    6. ')' → logprob: -4.557429313659668
    7. '  
' → logprob: -4.932429313659668
    8. '**' → logprob: -4.932429313659668
    9. '\' → logprob: -6.182429313659668
    10. ' *' → logprob: -6.307429313659668

Token 89: ' que' (ID: 661)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.7278217673301697
    2. '#' → logprob: -0.9778217673301697
    3. '
' → logprob: -2.6028218269348145
    4. ')' → logprob: -4.4778218269348145
    5. 'r' → logprob: -4.6028218269348145
    6. '  
' → logprob: -4.7278218269348145
    7. ' 
' → logprob: -4.9778218269348145
    8. '*
' → logprob: -5.3528218269348145
    9. ' ' → logprob: -5.4778218269348145
    10. '' → logprob: -5.4778218269348145

Token 90: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.25877872109413147
    2. 'math' → logprob: -1.508778691291809
    3. ' math' → logprob: -5.5087785720825195
    4. 'pi' → logprob: -6.3837785720825195
    5. '"' → logprob: -8.13377857208252
    6. ' ' → logprob: -8.38377857208252
    7. 'Math' → logprob: -8.50877857208252
    8. ''m' → logprob: -9.63377857208252
    9. 'cmath' → logprob: -9.88377857208252
    10. ' ' → logprob: -9.88377857208252

Token 91: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.03674924746155739
    2. 'math' → logprob: -3.4117493629455566
    3. ' math' → logprob: -6.411749362945557
    4. ' ' → logprob: -7.161749362945557
    5. 'Math' → logprob: -7.911749362945557
    6. 'cmath' → logprob: -9.161748886108398
    7. 'pi' → logprob: -9.411748886108398
    8. ' ' → logprob: -11.224248886108398
    9. '"' → logprob: -11.661748886108398
    10. 'm' → logprob: -11.849248886108398

Token 92: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.200166469876422e-06
    2. '4' → logprob: -13.750004768371582
    3. '3' → logprob: -14.625004768371582
    4. '.

' → logprob: -15.000004768371582
    5. '14' → logprob: -15.000004768371582
    6. '.

' → logprob: -15.375004768371582
    7. '<|end|>' → logprob: -15.375004768371582
    8. '19' → logprob: -15.500004768371582
    9. '.​' → logprob: -15.500004768371582
    10. '6' → logprob: -15.625004768371582

Token 93: '14' (ID: 1265)
  Prédit: '14'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '14' → logprob: -0.10027578473091125
    2. '141' → logprob: -2.350275754928589
    3. '1' → logprob: -9.600275993347168
    4. '142' → logprob: -14.225275993347168
    5. '145' → logprob: -15.225275993347168
    6. '140' → logprob: -15.475275993347168
    7. '4' → logprob: -16.10027503967285
    8. '143' → logprob: -17.10027503967285
    9. '13' → logprob: -17.35027503967285
    10. '15' → logprob: -17.60027503967285

Token 94: ' tant' (ID: 16235)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.13539940118789673
    2. '
' → logprob: -3.010399341583252
    3. '#' → logprob: -3.885399341583252
    4. 'r' → logprob: -4.510399341583252
    5. '\n' → logprob: -4.760399341583252
    6. '*
' → logprob: -5.135399341583252
    7. '  
' → logprob: -5.260399341583252
    8. '' → logprob: -5.385399341583252
    9. ' 
' → logprob: -5.385399341583252
    10. ' *' → logprob: -5.885399341583252

Token 95: ' qu' (ID: 474)
  Prédit: 'qu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qu' → logprob: -0.49671703577041626
    2. 'que' → logprob: -0.9967170357704163
    3. ' qu' → logprob: -4.4967169761657715
    4. ' que' → logprob: -4.8717169761657715
    5. '#' → logprob: -5.8717169761657715
    6. 'ôt' → logprob: -8.37171745300293
    7. 'p' → logprob: -8.74671745300293
    8. 'pis' → logprob: -9.12171745300293
    9. 'q' → logprob: -10.37171745300293
    10. ' mieux' → logprob: -10.37171745300293

Token 96: ''à' (ID: 33688)
  Prédit: 'que'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'que' → logprob: -0.9696967601776123
    2. 'qu' → logprob: -1.2196967601776123
    3. ' qu' → logprob: -1.3446967601776123
    4. ' que' → logprob: -2.8446967601776123
    5. '#' → logprob: -5.344696998596191
    6. ' ' → logprob: -6.969696998596191
    7. '   ' → logprob: -8.344696998596191
    8. '  ' → logprob: -8.844696998596191
    9. '```' → logprob: -8.969696998596191
    10. ' #' → logprob: -9.844696998596191

Token 97: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.08640383183956146
    2. 'f' → logprob: -2.7114038467407227
    3. ' faire' → logprob: -4.961403846740723
    4. '#' → logprob: -4.961403846740723
    5. 'fait' → logprob: -6.961403846740723
    6. '```' → logprob: -7.711403846740723
    7. 'fa' → logprob: -8.336403846740723
    8. 'Faire' → logprob: -8.586403846740723
    9. 'faite' → logprob: -8.961403846740723
    10. 'y' → logprob: -8.961403846740723

Token 98: '
' (ID: 198)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1135036945343018
    2. '*' → logprob: -1.6135036945343018
    3. '
' → logprob: -1.6135036945343018
    4. '  
' → logprob: -2.9885036945343018
    5. '\n' → logprob: -3.1135036945343018
    6. ' 
' → logprob: -3.2385036945343018
    7. 'r' → logprob: -3.3635036945343018
    8. '' → logprob: -4.113503456115723
    9. '\' → logprob: -4.238503456115723
    10. '<|end|>' → logprob: -4.613503456115723

Token 99: '#' (ID: 2)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5517351627349854
    2. '#' → logprob: -1.9267351627349854
    3. 'r' → logprob: -2.3017351627349854
    4. '\n' → logprob: -3.1767351627349854
    5. '' → logprob: -3.5517351627349854
    6. '\' → logprob: -3.9267351627349854
    7. '*
' → logprob: -4.176734924316406
    8. '<|end|>' → logprob: -4.426734924316406
    9. '
' → logprob: -4.676734924316406
    10. '  
' → logprob: -4.801734924316406

Token 100: ' je' (ID: 1264)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.21759790182113647
    2. 'ray' → logprob: -2.8425979614257812
    3. 'surface' → logprob: -3.5925979614257812
    4. 'aire' → logprob: -3.8425979614257812
    5. 'area' → logprob: -4.092597961425781
    6. 'r' → logprob: -4.342597961425781
    7. 'result' → logprob: -4.467597961425781
    8. '#
' → logprob: -4.467597961425781
    9. ' #' → logprob: -4.967597961425781
    10. 'print' → logprob: -4.967597961425781

Token 101: ' calc' (ID: 25691)
  Prédit: ' veux'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' veux' → logprob: -0.7577481269836426
    2. ' vais' → logprob: -1.5077481269836426
    3. '#' → logprob: -2.6327481269836426
    4. 'vais' → logprob: -2.7577481269836426
    5. 'veux' → logprob: -3.5077481269836426
    6. 'vou' → logprob: -4.257748126983643
    7. ' #' → logprob: -4.507748126983643
    8. ' calc' → logprob: -4.507748126983643
    9. ' continue' → logprob: -4.882748126983643
    10. 's' → logprob: -4.882748126983643

Token 102: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.022708626464009285
    2. 'uler' → logprob: -4.397708415985107
    3. 'ul' → logprob: -5.022708415985107
    4. '#' → logprob: -6.272708415985107
    5. 'ulé' → logprob: -7.147708415985107
    6. 'cule' → logprob: -7.897708415985107
    7. 'ulate' → logprob: -8.397708892822266
    8. 'le' → logprob: -9.397708892822266
    9. 'ulaire' → logprob: -11.022708892822266
    10. 'ular' → logprob: -11.147708892822266

Token 103: ' le' (ID: 505)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.3574589788913727
    2. ' le' → logprob: -1.6074589490890503
    3. 'le' → logprob: -2.85745906829834
    4. 'l' → logprob: -3.60745906829834
    5. ' la' → logprob: -4.60745906829834
    6. 'ray' → logprob: -6.60745906829834
    7. 'radius' → logprob: -7.35745906829834
    8. 'r' → logprob: -7.35745906829834
    9. ' r' → logprob: -7.73245906829834
    10. 'aire' → logprob: -7.73245906829834

Token 104: ' tour' (ID: 6970)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.15561233460903168
    2. 'r' → logprob: -3.5306122303009033
    3. ' rayon' → logprob: -3.5306122303009033
    4. 'c' → logprob: -3.9056122303009033
    5. 'aire' → logprob: -4.030612468719482
    6. 'surface' → logprob: -4.905612468719482
    7. ' cercle' → logprob: -5.030612468719482
    8. ' diamètre' → logprob: -5.155612468719482
    9. 'volume' → logprob: -5.405612468719482
    10. 'diam' → logprob: -5.405612468719482

Token 105: ' du' (ID: 1462)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04897383600473404
    2. '=' → logprob: -3.798973798751831
    3. '_de' → logprob: -4.67397403717041
    4. 'ray' → logprob: -5.29897403717041
    5. 'r' → logprob: -6.04897403717041
    6. 'de' → logprob: -6.17397403717041
    7. '_r' → logprob: -6.67397403717041
    8. 'du' → logprob: -6.79897403717041
    9. '_circle' → logprob: -6.79897403717041
    10. '_' → logprob: -7.42397403717041

Token 106: ' cercle' (ID: 172399)
  Prédit: ' cercle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cercle' → logprob: -0.7798524498939514
    2. 'cer' → logprob: -1.0298523902893066
    3. 'c' → logprob: -1.7798523902893066
    4. 'ray' → logprob: -5.279852390289307
    5. 'r' → logprob: -5.404852390289307
    6. 'circle' → logprob: -5.529852390289307
    7. ' cer' → logprob: -6.404852390289307
    8. '#' → logprob: -8.904852867126465
    9. '```' → logprob: -8.904852867126465
    10. ' circle' → logprob: -9.404852867126465

Token 107: ',' (ID: 11)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.08717962354421616
    2. ' =' → logprob: -3.087179660797119
    3. '=' → logprob: -4.587179660797119
    4. 't' → logprob: -4.712179660797119
    5. ' tour' → logprob: -5.212179660797119
    6. 'circ' → logprob: -5.962179660797119
    7. 'ray' → logprob: -6.087179660797119
    8. 'circle' → logprob: -6.337179660797119
    9. 'cir' → logprob: -6.462179660797119
    10. 'per' → logprob: -6.712179660797119

Token 108: ' je' (ID: 1264)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.12048066407442093
    2. 'per' → logprob: -3.37048077583313
    3. 'circ' → logprob: -3.62048077583313
    4. '2' → logprob: -3.74548077583313
    5. ' tour' → logprob: -4.620480537414551
    6. '#' → logprob: -4.745480537414551
    7. 'cir' → logprob: -5.620480537414551
    8. 'diam' → logprob: -5.745480537414551
    9. 't' → logprob: -7.370480537414551
    10. ' ' → logprob: -7.495480537414551

Token 109: ' crois' (ID: 65485)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.524117350578308
    2. ' #' → logprob: -1.524117350578308
    3. '#' → logprob: -2.1491174697875977
    4. ' veux' → logprob: -2.5241174697875977
    5. ' vais' → logprob: -2.8991174697875977
    6. '=' → logprob: -3.2741174697875977
    7. 's' → logprob: -3.3991174697875977
    8. 'n' → logprob: -3.5241174697875977
    9. ' peux' → logprob: -3.5241174697875977
    10. 'ai' → logprob: -4.149117469787598

Token 110: ' que' (ID: 661)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.05270981788635254
    2. ' tour' → logprob: -3.5527098178863525
    3. 'circ' → logprob: -5.177709579467773
    4. 't' → logprob: -5.427709579467773
    5. 'ray' → logprob: -5.927709579467773
    6. 'per' → logprob: -5.927709579467773
    7. 'circle' → logprob: -6.427709579467773
    8. ' =' → logprob: -6.552709579467773
    9. ' circumference' → logprob: -7.052709579467773
    10. 'cir' → logprob: -7.427709579467773

Token 111: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.90521639585495
    2. ' rayon' → logprob: -1.7802164554595947
    3. '2' → logprob: -1.9052164554595947
    4. 'ray' → logprob: -2.0302164554595947
    5. ' num' → logprob: -3.0302164554595947
    6. 'num' → logprob: -3.4052164554595947
    7. ' le' → logprob: -4.655216217041016
    8. ' tour' → logprob: -5.280216217041016
    9. 'c' → logprob: -5.405216217041016
    10. 'le' → logprob: -5.655216217041016

Token 112: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.36123430728912354
    2. '#' → logprob: -2.111234188079834
    3. 'est' → logprob: -2.361234188079834
    4. 'a' → logprob: -3.861234188079834
    5. 'e' → logprob: -4.236234188079834
    6. 'ircle' → logprob: -4.486234188079834
    7. 'ir' → logprob: -4.861234188079834
    8. 'on' → logprob: -5.361234188079834
    9. 'c' → logprob: -5.611234188079834
    10. ''' → logprob: -5.736234188079834

Token 113: ' ça' (ID: 13590)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0033338486682623625
    2. ' ' → logprob: -6.003334045410156
    3. 'ray' → logprob: -7.128334045410156
    4. 'num' → logprob: -11.253334045410156
    5. 'le' → logprob: -11.378334045410156
    6. 'radius' → logprob: -12.253334045410156
    7. '```' → logprob: -12.378334045410156
    8. '#' → logprob: -12.753334045410156
    9. '   ' → logprob: -13.128334045410156
    10. 'tour' → logprob: -13.253334045410156

Token 114: ' la' (ID: 557)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.03234595060348511
    2. ' tour' → logprob: -4.282345771789551
    3. '2' → logprob: -4.782345771789551
    4. 'circ' → logprob: -5.657345771789551
    5. 'per' → logprob: -6.157345771789551
    6. 't' → logprob: -6.782345771789551
    7. 'circle' → logprob: -7.407345771789551
    8. 'cir' → logprob: -7.907345771789551
    9. ' =' → logprob: -8.03234577178955
    10. 'ray' → logprob: -8.28234577178955

Token 115: ' formule' (ID: 84316)
  Prédit: 'circ'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'circ' → logprob: -0.1454196721315384
    2. 'cir' → logprob: -2.2704195976257324
    3. 'form' → logprob: -4.270419597625732
    4. 'per' → logprob: -4.520419597625732
    5. ' circumference' → logprob: -6.270419597625732
    6. ' cir' → logprob: -6.395419597625732
    7. 'p' → logprob: -7.020419597625732
    8. '#' → logprob: -7.520419597625732
    9. 'circle' → logprob: -7.645419597625732
    10. ' formule' → logprob: -7.770419597625732

Token 116: '
' (ID: 198)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.7729974389076233
    2. 't' → logprob: -1.1479973793029785
    3. ' =' → logprob: -2.2729973793029785
    4. 'ray' → logprob: -3.7729973793029785
    5. 'tour' → logprob: -4.1479973793029785
    6. '=' → logprob: -4.2729973793029785
    7. 'circ' → logprob: -4.3979973793029785
    8. ' ' → logprob: -4.7729973793029785
    9. ':' → logprob: -4.8979973793029785
    10. ' circumference' → logprob: -5.2729973793029785

Token 117: 'tour' (ID: 90790)
  Prédit: 'tour'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.060877010226249695
    2. 'circ' → logprob: -3.6858770847320557
    3. 'per' → logprob: -4.185876846313477
    4. '2' → logprob: -4.560876846313477
    5. ' tour' → logprob: -5.310876846313477
    6. 'cir' → logprob: -6.560876846313477
    7. 't' → logprob: -7.810876846313477
    8. ' circumference' → logprob: -8.310876846313477
    9. 'circle' → logprob: -8.435876846313477
    10. ' ' → logprob: -8.560876846313477

Token 118: '_du' (ID: 109022)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06995299458503723
    2. '=' → logprob: -2.694952964782715
    3. '_' → logprob: -12.569952964782715
    4. ' ' → logprob: -12.694952964782715
    5. 's' → logprob: -12.819952964782715
    6. 'ray' → logprob: -13.194952964782715
    7. 'd' → logprob: -13.569952964782715
    8. 'r' → logprob: -13.819952964782715
    9. '_circle' → logprob: -14.444952964782715
    10. '_c' → logprob: -14.819952964782715

Token 119: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.017447544261813164
    2. '_' → logprob: -5.017447471618652
    3. 'c' → logprob: -5.017447471618652
    4. ' cercle' → logprob: -5.892447471618652
    5. '_circle' → logprob: -7.142447471618652
    6. ' ' → logprob: -8.267447471618652
    7. 'cer' → logprob: -9.142447471618652
    8. ' _' → logprob: -9.767447471618652
    9. 'r' → logprob: -11.017447471618652
    10. 'C' → logprob: -11.517447471618652

Token 120: 'erc' (ID: 2831)
  Prédit: 'erc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erc' → logprob: -0.006926130969077349
    2. 'ircle' → logprob: -5.3819260597229
    3. 'er' → logprob: -6.2569260597229
    4. 'erce' → logprob: -8.131926536560059
    5. 'ir' → logprob: -10.631926536560059
    6. ' =' → logprob: -11.631926536560059
    7. 'on' → logprob: -11.881926536560059
    8. '=' → logprob: -12.006926536560059
    9. 'ont' → logprob: -12.381926536560059
    10. 'irc' → logprob: -12.381926536560059

Token 121: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.11295327544212341
    2. 'e' → logprob: -2.2379531860351562
    3. 're' → logprob: -9.112953186035156
    4. '#' → logprob: -11.862953186035156
    5. 'ele' → logprob: -12.362953186035156
    6. '```' → logprob: -12.487953186035156
    7. '   ' → logprob: -13.987953186035156
    8. 'Le' → logprob: -14.862953186035156
    9. 'er' → logprob: -14.862953186035156
    10. '1' → logprob: -15.112953186035156

Token 122: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889176905155182
    2. '=' → logprob: -2.5788917541503906
    3. ' ' → logprob: -13.95389175415039
    4. 's' → logprob: -14.95389175415039
    5. ' ' → logprob: -15.07889175415039
    6. '=num' → logprob: -15.07889175415039
    7. ')' → logprob: -16.57889175415039
    8. ':' → logprob: -16.95389175415039
    9. 'num' → logprob: -17.57889175415039
    10. '＝' → logprob: -17.70389175415039

Token 123: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.12693870067596436
    2. ' ' → logprob: -2.126938819885254
    3. 'pi' → logprob: -13.001938819885254
    4. '   ' → logprob: -13.501938819885254
    5. 'num' → logprob: -13.626938819885254
    6. '  ' → logprob: -13.876938819885254
    7. ' ' → logprob: -14.126938819885254
    8. ' pi' → logprob: -14.126938819885254
    9. ' num' → logprob: -14.251938819885254
    10. 'ray' → logprob: -14.626938819885254

Token 124: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00033832306507974863
    2. ' ' → logprob: -8.000338554382324
    3. 'num' → logprob: -13.625338554382324
    4. 'pi' → logprob: -14.000338554382324
    5. 'ray' → logprob: -15.375338554382324
    6. '   ' → logprob: -15.625338554382324
    7. '  ' → logprob: -16.375337600708008
    8. '(' → logprob: -16.375337600708008
    9. '6' → logprob: -16.750337600708008
    10. '```' → logprob: -17.125337600708008

Token 125: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.1363700032234192
    2. '*pi' → logprob: -2.6363699436187744
    3. '*' → logprob: -2.8863699436187744
    4. 'pi' → logprob: -10.386369705200195
    5. '*Math' → logprob: -10.761369705200195
    6. ' pi' → logprob: -11.011369705200195
    7. ' ' → logprob: -11.886369705200195
    8. ' ' → logprob: -13.136369705200195
    9. '*object' → logprob: -13.136369705200195
    10. '*num' → logprob: -14.886369705200195

Token 126: ' pi' (ID: 6404)
  Prédit: ' pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pi' → logprob: -0.018399376422166824
    2. 'pi' → logprob: -4.018399238586426
    3. ' ' → logprob: -8.768399238586426
    4. ' ' → logprob: -10.143399238586426
    5. '*pi' → logprob: -10.393399238586426
    6. '.pi' → logprob: -11.393399238586426
    7. '<|end|>' → logprob: -12.893399238586426
    8. ' math' → logprob: -13.268399238586426
    9. ' *' → logprob: -13.393399238586426
    10. '(pi' → logprob: -13.893399238586426

Token 127: 'Approx' (ID: 116014)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.31607580184936523
    2. '*' → logprob: -1.4410758018493652
    3. 'pi' → logprob: -4.191075801849365
    4. '*pi' → logprob: -4.566075801849365
    5. 'r' → logprob: -5.691075801849365
    6. 'Approx' → logprob: -5.816075801849365
    7. ' ' → logprob: -7.316075801849365
    8. '*r' → logprob: -7.691075801849365
    9. '*num' → logprob: -7.941075801849365
    10. 'a' → logprob: -8.441076278686523

Token 128: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.4741194546222687
    2. '*' → logprob: -0.9741194248199463
    3. '*r' → logprob: -10.349119186401367
    4. '*num' → logprob: -11.849119186401367
    5. '*object' → logprob: -13.474119186401367
    6. ' ' → logprob: -14.474119186401367
    7. ' ' → logprob: -15.224119186401367
    8. '**' → logprob: -15.599119186401367
    9. '*t' → logprob: -16.099119186401367
    10. '*s' → logprob: -16.349119186401367

Token 129: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.02500045858323574
    2. 'ray' → logprob: -3.90000057220459
    3. ' num' → logprob: -5.52500057220459
    4. ' rayon' → logprob: -7.77500057220459
    5. 'radius' → logprob: -10.77500057220459
    6. 'r' → logprob: -12.40000057220459
    7. '	num' → logprob: -12.52500057220459
    8. ' ray' → logprob: -12.90000057220459
    9. 'numero' → logprob: -13.15000057220459
    10. 'rad' → logprob: -13.65000057220459

Token 130: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.03298986330628395
    2. '#' → logprob: -4.157989978790283
    3. '
' → logprob: -4.657989978790283
    4. ' print' → logprob: -5.907989978790283
    5. '<|end|>' → logprob: -5.907989978790283
    6. ')' → logprob: -7.157989978790283
    7. '\n' → logprob: -8.282989501953125
    8. '#print' → logprob: -8.657989501953125
    9. '  
' → logprob: -8.907989501953125
    10. ' ' → logprob: -9.157989501953125

Token 131: ' C' (ID: 363)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013072106055915356
    2. ' print' → logprob: -4.6380720138549805
    3. '<|end|>' → logprob: -6.0130720138549805
    4. '
' → logprob: -7.8880720138549805
    5. '#' → logprob: -8.51307201385498
    6. ' ' → logprob: -9.51307201385498
    7. ')' → logprob: -9.63807201385498
    8. ' 
' → logprob: -10.76307201385498
    9. '#print' → logprob: -11.13807201385498
    10. '.print' → logprob: -11.26307201385498

Token 132: ''est' (ID: 6616)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.6802208423614502
    2. 'print' → logprob: -1.5552208423614502
    3. 'al' → logprob: -1.8052208423614502
    4. 'alculate' → logprob: -3.43022084236145
    5. '#' → logprob: -3.68022084236145
    6. 'ont' → logprob: -4.555220603942871
    7. 'ode' → logprob: -4.805220603942871
    8. 'alc' → logprob: -5.180220603942871
    9. '\' → logprob: -5.430220603942871
    10. '\n' → logprob: -5.430220603942871

Token 133: ' ' (ID: 220)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.3575094938278198
    2. ' print' → logprob: -1.9825094938278198
    3. 'le' → logprob: -2.1075096130371094
    4. 'print' → logprob: -2.6075096130371094
    5. ' correct' → logprob: -2.9825096130371094
    6. ' ce' → logprob: -2.9825096130371094
    7. ' la' → logprob: -3.1075096130371094
    8. ' juste' → logprob: -3.4825096130371094
    9. ' ' → logprob: -3.6075096130371094
    10. ' pas' → logprob: -3.9825096130371094

Token 134: '2' (ID: 17)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.3985788822174072
    2. 'ray' → logprob: -2.1485788822174072
    3. 'correct' → logprob: -2.7735788822174072
    4. 'la' → logprob: -3.0235788822174072
    5. 'une' → logprob: -3.6485788822174072
    6. 'bon' → logprob: -3.8985788822174072
    7. ' le' → logprob: -4.523578643798828
    8. 'un' → logprob: -5.023578643798828
    9. 'just' → logprob: -5.023578643798828
    10. 'pas' → logprob: -5.648578643798828

Token 135: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.5794444680213928
    2. ' *' → logprob: -0.8294444680213928
    3. '*pi' → logprob: -6.079444408416748
    4. '<|end|>' → logprob: -7.579444408416748
    5. ' ' → logprob: -8.079444885253906
    6. '*object' → logprob: -9.454444885253906
    7. 'import' → logprob: -9.954444885253906
    8. '**' → logprob: -9.954444885253906
    9. 'pi' → logprob: -10.079444885253906
    10. '*Math' → logprob: -10.454444885253906

Token 136: 'Pi' (ID: 45560)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.010046463459730148
    2. 'num' → logprob: -5.385046482086182
    3. ' rayon' → logprob: -5.760046482086182
    4. 'pi' → logprob: -6.885046482086182
    5. '<|end|>' → logprob: -7.760046482086182
    6. 'radius' → logprob: -8.385046005249023
    7. ' ray' → logprob: -8.510046005249023
    8. '-ray' → logprob: -9.385046005249023
    9. ' ' → logprob: -9.635046005249023
    10. 'math' → logprob: -9.885046005249023

Token 137: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.06193798780441284
    2. '*r' → logprob: -3.4369380474090576
    3. ' *' → logprob: -4.0619378089904785
    4. '*num' → logprob: -4.5619378089904785
    5. '*t' → logprob: -9.561938285827637
    6. 'r' → logprob: -9.811938285827637
    7. 'print' → logprob: -10.811938285827637
    8. 'ray' → logprob: -11.311938285827637
    9. '*
' → logprob: -11.561938285827637
    10. '*n' → logprob: -11.686938285827637

Token 138: 'R' (ID: 49)
  Prédit: 'ray'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ray' → logprob: -0.00563829718157649
    2. 'num' → logprob: -6.005638122558594
    3. 'radius' → logprob: -6.630638122558594
    4. ' rayon' → logprob: -6.755638122558594
    5. 'r' → logprob: -7.630638122558594
    6. 'rad' → logprob: -9.255638122558594
    7. ' ray' → logprob: -10.005638122558594
    8. 'Ray' → logprob: -11.255638122558594
    9. '```' → logprob: -11.880638122558594
    10. ' num' → logprob: -12.380638122558594

Token 139: ' non' (ID: 2893)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.000548387470189482
    2. '
' → logprob: -8.375548362731934
    3. '#' → logprob: -8.625548362731934
    4. ' print' → logprob: -9.125548362731934
    5. '#print' → logprob: -11.625548362731934
    6. 'prin' → logprob: -12.375548362731934
    7. 'pr' → logprob: -12.500548362731934
    8. '
' → logprob: -12.875548362731934
    9. '  
' → logprob: -13.625548362731934
    10. 'p' → logprob: -13.750548362731934

Token 140: ' ?
' (ID: 19740)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5904455184936523
    2. '
' → logprob: -0.8404455184936523
    3. '
' → logprob: -5.465445518493652
    4. '#' → logprob: -5.465445518493652
    5. ' print' → logprob: -5.840445518493652
    6. '

' → logprob: -7.215445518493652
    7. '\n' → logprob: -7.840445518493652
    8. '' → logprob: -7.965445518493652
    9. '#print' → logprob: -8.215445518493652
    10. '  
' → logprob: -8.340445518493652

Token 141: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001981687266379595
    2. '
' → logprob: -6.501981735229492
    3. ' print' → logprob: -7.876981735229492
    4. '#' → logprob: -10.001981735229492
    5. ')' → logprob: -11.501981735229492
    6. '
' → logprob: -11.626981735229492
    7. '#print' → logprob: -11.751981735229492
    8. '<|end|>' → logprob: -11.751981735229492
    9. '' → logprob: -12.751981735229492
    10. '(print' → logprob: -12.876981735229492

Token 142: ' et' (ID: 859)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.008933390490710735
    2. ' print' → logprob: -4.7589335441589355
    3. '
' → logprob: -8.383933067321777
    4. '#' → logprob: -10.383933067321777
    5. 'prin' → logprob: -11.133933067321777
    6. ' 
' → logprob: -11.633933067321777
    7. '#print' → logprob: -12.133933067321777
    8. 'pr' → logprob: -12.383933067321777
    9. '  
' → logprob: -12.758933067321777
    10. ' ' → logprob: -13.008933067321777

Token 143: ' hop' (ID: 10284)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.22125878930091858
    2. '#' → logprob: -2.2212588787078857
    3. ' print' → logprob: -2.8462588787078857
    4. '
' → logprob: -3.9712588787078857
    5. '#print' → logprob: -5.971258640289307
    6. ' on' → logprob: -6.096258640289307
    7. 'on' → logprob: -6.221258640289307
    8. ' #' → logprob: -6.721258640289307
    9. ' ensuite' → logprob: -7.346258640289307
    10. ' puis' → logprob: -7.721258640289307

Token 144: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.018162935972213745
    2. ' print' → logprob: -4.018162727355957
    3. '
' → logprob: -11.768162727355957
    4. '#print' → logprob: -12.518162727355957
    5. '#' → logprob: -14.268162727355957
    6. 'pr' → logprob: -14.893162727355957
    7. '```' → logprob: -15.893162727355957
    8. 'prin' → logprob: -16.018163681030273
    9. '.print' → logprob: -16.268163681030273
    10. '(print' → logprob: -16.643163681030273

Token 145: ' affiche' (ID: 127479)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.16250477731227875
    2. ' print' → logprob: -2.1625046730041504
    3. ' imprime' → logprob: -4.03750467300415
    4. ' affiche' → logprob: -4.66250467300415
    5. 'aff' → logprob: -5.03750467300415
    6. 'pr' → logprob: -7.53750467300415
    7. '#' → logprob: -8.537505149841309
    8. 'fait' → logprob: -9.037505149841309
    9. '_print' → logprob: -9.537505149841309
    10. 'im' → logprob: -9.787505149841309

Token 146: ',' (ID: 11)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.013431262224912643
    2. ' print' → logprob: -4.763431072235107
    3. '(' → logprob: -6.138431072235107
    4. ' tour' → logprob: -7.138431072235107
    5. 'tour' → logprob: -7.138431072235107
    6. '(print' → logprob: -7.263431072235107
    7. '(t' → logprob: -8.388431549072266
    8. '(
' → logprob: -10.013431549072266
    9. '
' → logprob: -10.138431549072266
    10. ')' → logprob: -11.763431549072266

Token 147: ' je' (ID: 1264)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5233204364776611
    2. ' print' → logprob: -0.8983204364776611
    3. ' tour' → logprob: -9.648320198059082
    4. ' ' → logprob: -9.773320198059082
    5. ' end' → logprob: -10.648320198059082
    6. ' ' → logprob: -11.148320198059082
    7. 'end' → logprob: -11.273320198059082
    8. ')' → logprob: -12.273320198059082
    9. ' f' → logprob: -12.648320198059082
    10. '"' → logprob: -12.773320198059082

Token 148: ' sais' (ID: 30010)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9242666959762573
    2. 'print' → logprob: -1.0492666959762573
    3. 'mp' → logprob: -1.6742666959762573
    4. 'l' → logprob: -3.799266815185547
    5. 'mpr' → logprob: -4.174266815185547
    6. 'n' → logprob: -4.299266815185547
    7. 's' → logprob: -5.549266815185547
    8. ' print' → logprob: -5.799266815185547
    9. 'mpl' → logprob: -6.924266815185547
    10. ' m' → logprob: -7.049266815185547

Token 149: ' pas' (ID: 2173)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07596758008003235
    2. '(t' → logprob: -2.70096755027771
    3. '()' → logprob: -5.325967788696289
    4. '(
' → logprob: -7.950967788696289
    5. 'tour' → logprob: -8.075967788696289
    6. 'print' → logprob: -8.575967788696289
    7. '(print' → logprob: -9.325967788696289
    8. '("' → logprob: -10.075967788696289
    9. 't' → logprob: -10.200967788696289
    10. '(

' → logprob: -10.200967788696289

Token 150: ' si' (ID: 1784)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014357296749949455
    2. '(t' → logprob: -5.139357089996338
    3. '(
' → logprob: -5.639357089996338
    4. '("' → logprob: -6.514357089996338
    5. 'tour' → logprob: -6.889357089996338
    6. 'print' → logprob: -7.139357089996338
    7. '()' → logprob: -7.389357089996338
    8. '(

' → logprob: -7.889357089996338
    9. '('' → logprob: -8.639357566833496
    10. '(print' → logprob: -9.014357566833496

Token 151: ' c' (ID: 274)
  Prédit: ' tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' tour' → logprob: -0.2019025832414627
    2. 'tour' → logprob: -1.7019026279449463
    3. 'print' → logprob: -8.826902389526367
    4. ' ' → logprob: -9.326902389526367
    5. ' le' → logprob: -9.326902389526367
    6. ' ' → logprob: -10.076902389526367
    7. ' print' → logprob: -10.451902389526367
    8. 'le' → logprob: -10.701902389526367
    9. '(t' → logprob: -11.826902389526367
    10. ' isinstance' → logprob: -11.826902389526367

Token 152: ''est' (ID: 6616)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.24934040009975433
    2. 'e' → logprob: -2.124340295791626
    3. 'est' → logprob: -2.749340295791626
    4. ''est' → logprob: -3.624340295791626
    5. 'ela' → logprob: -5.374340534210205
    6. ''' → logprob: -6.874340534210205
    7. ''a' → logprob: -7.249340534210205
    8. '```' → logprob: -7.874340534210205
    9. ''était' → logprob: -7.999340534210205
    10. 'et' → logprob: -7.999340534210205

Token 153: ' le' (ID: 505)
  Prédit: 'tout'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tout' → logprob: -1.3216713666915894
    2. ' le' → logprob: -1.9466713666915894
    3. ' bien' → logprob: -2.571671485900879
    4. 'le' → logprob: -2.571671485900879
    5. 'bien' → logprob: -2.696671485900879
    6. 'la' → logprob: -3.071671485900879
    7. 'exact' → logprob: -3.321671485900879
    8. 'clair' → logprob: -3.696671485900879
    9. ' exactement' → logprob: -3.946671485900879
    10. 'une' → logprob: -4.196671485900879

Token 154: ' format' (ID: 6011)
  Prédit: 'tour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tour' → logprob: -0.49839264154434204
    2. ' tour' → logprob: -2.1233925819396973
    3. 'bon' → logprob: -2.2483925819396973
    4. ' meilleur' → logprob: -2.7483925819396973
    5. 'print' → logprob: -3.3733925819396973
    6. 'result' → logprob: -3.4983925819396973
    7. 'me' → logprob: -4.123392581939697
    8. ' bon' → logprob: -5.873392581939697
    9. 'bonne' → logprob: -5.998392581939697
    10. 'best' → logprob: -6.123392581939697

Token 155: ' attendu' (ID: 171331)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04186806455254555
    2. '(' → logprob: -3.416867971420288
    3. '(
' → logprob: -5.166868209838867
    4. '()' → logprob: -6.916868209838867
    5. '(print' → logprob: -7.041868209838867
    6. ')' → logprob: -8.041868209838867
    7. '()
' → logprob: -8.916868209838867
    8. ' print' → logprob: -9.291868209838867
    9. '(

' → logprob: -10.541868209838867
    10. '(t' → logprob: -12.041868209838867

Token 156: ' mais' (ID: 2899)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.009140253067016602
    2. '
' → logprob: -4.7591400146484375
    3. ' print' → logprob: -7.8841400146484375
    4. '(
' → logprob: -10.134140014648438
    5. '(' → logprob: -10.259140014648438
    6. '(print' → logprob: -10.259140014648438
    7. '()
' → logprob: -10.884140014648438
    8. '
' → logprob: -12.009140014648438
    9. ')
' → logprob: -12.134140014648438
    10. '\' → logprob: -13.009140014648438

Token 157: ' bon' (ID: 4846)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3868757486343384
    2. 'print' → logprob: -1.1368757486343384
    3. ' ' → logprob: -12.886876106262207
    4. '	print' → logprob: -14.886876106262207
    5. ')' → logprob: -15.011876106262207
    6. '(print' → logprob: -15.011876106262207
    7. '```' → logprob: -15.136876106262207
    8. ' ' → logprob: -15.261876106262207
    9. ' f' → logprob: -16.26187515258789
    10. '.print' → logprob: -16.38687515258789

Token 158: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.04050476476550102
    2. '
' → logprob: -3.5405046939849854
    3. ' print' → logprob: -4.5405049324035645
    4. '
' → logprob: -11.415504455566406
    5. ' 
' → logprob: -11.540504455566406
    6. '```' → logprob: -12.290504455566406
    7. ')
' → logprob: -14.040504455566406
    8. '(print' → logprob: -14.415504455566406
    9. '  
' → logprob: -14.540504455566406
    10. '.print' → logprob: -15.165504455566406

Token 159: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.541112427134067e-05
    2. ' print' → logprob: -9.500075340270996
    3. '```' → logprob: -15.000075340270996
    4. '
' → logprob: -15.500075340270996
    5. '``' → logprob: -19.875076293945312
    6. '
' → logprob: -20.000076293945312
    7. '.print' → logprob: -20.750076293945312
    8. 'for' → logprob: -20.750076293945312
    9. '(print' → logprob: -21.000076293945312
    10. '#print' → logprob: -21.125076293945312

Token 160: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12708821892738342
    2. '(t' → logprob: -2.1270883083343506
    3. '("' → logprob: -9.62708854675293
    4. '()' → logprob: -10.62708854675293
    5. '((' → logprob: -10.87708854675293
    6. '('' → logprob: -11.12708854675293
    7. '(f' → logprob: -11.37708854675293
    8. '("("' → logprob: -11.50208854675293
    9. ' (' → logprob: -11.87708854675293
    10. '(round' → logprob: -12.12708854675293

Token 161: 'our' (ID: 401)
  Prédit: 'our'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'our' → logprob: -0.0002600245934445411
    2. '_' → logprob: -10.125260353088379
    3. 'out' → logprob: -10.250260353088379
    4. 'ou' → logprob: -10.625260353088379
    5. 'tour' → logprob: -10.875260353088379
    6. ')' → logprob: -11.125260353088379
    7. 'Our' → logprob: -11.250260353088379
    8. 'oure' → logprob: -11.375260353088379
    9. ' our' → logprob: -11.500260353088379
    10. 'ext' → logprob: -11.500260353088379

Token 162: '_du' (ID: 109022)
  Prédit: '_du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_du' → logprob: -4.060365608893335e-05
    2. '_' → logprob: -10.625041007995605
    3. ')' → logprob: -12.125041007995605
    4. ')_' → logprob: -13.375041007995605
    5. '(' → logprob: -13.500041007995605
    6. '_de' → logprob: -13.625041007995605
    7. 'du' → logprob: -13.875041007995605
    8. ' _' → logprob: -14.000041007995605
    9. '_dup' → logprob: -14.500041007995605
    10. '"_' → logprob: -14.625041007995605

Token 163: '_c' (ID: 1303)
  Prédit: '_c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_c' → logprob: -0.0005132370279170573
    2. '_circle' → logprob: -8.500513076782227
    3. '_' → logprob: -8.750513076782227
    4. 'c' → logprob: -8.875513076782227
    5. ' cercle' → logprob: -12.625513076782227
    6. ' _' → logprob: -13.250513076782227
    7. '_du' → logprob: -13.750513076782227
    8. '_le' → logprob: -14.000513076782227
    9. '_de' → logprob: -14.375513076782227
    10. '_cl' → logprob: -14.500513076782227

Token 164: 'erc' (ID: 2831)
  Prédit: 'erc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'erc' → logprob: -0.06042466312646866
    2. 'er' → logprob: -3.435424566268921
    3. 'rc' → logprob: -4.1854248046875
    4. 'erce' → logprob: -5.3104248046875
    5. 'r' → logprob: -5.6854248046875
    6. 'ircle' → logprob: -6.0604248046875
    7. 'ir' → logprob: -8.8104248046875
    8. 'le' → logprob: -8.8104248046875
    9. 'e' → logprob: -9.5604248046875
    10. 'cle' → logprob: -10.5604248046875

Token 165: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.00014203863975126296
    2. 'e' → logprob: -9.125142097473145
    3. 'cle' → logprob: -11.250142097473145
    4. 're' → logprob: -11.375142097473145
    5. '_le' → logprob: -13.000142097473145
    6. 'l' → logprob: -13.625142097473145
    7. '\' → logprob: -14.500142097473145
    8. '```' → logprob: -14.625142097473145
    9. ')' → logprob: -15.187642097473145
    10. '_' → logprob: -15.312642097473145

Token 166: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ' )' → logprob: -13.625000953674316
    3. '))' → logprob: -16.500001907348633
    4. ')`' → logprob: -16.500001907348633
    5. ')
' → logprob: -18.375001907348633
    6. '`)' → logprob: -19.000001907348633
    7. ')#' → logprob: -19.125001907348633
    8. ')**' → logprob: -19.375001907348633
    9. '()' → logprob: -19.875001907348633
    10. '),' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 164
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 38
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 23.17%
Précision adaptée (1ère position): 23.17%
Précision (top 10): 48.17%
================================================================================
