================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def f(_): return list(map(int, _.split()))
a, b = f(input())
C = [f(input()) for __ in range(a)]
X = [[] for _ in range(8)]
for i in range(len(C)):
    x, y, z = C[i]
    X[0]+=[ x+y+z ]
    X[1].append( x+y-z )
    X[2].extend( [x-y+z] )
    X[3].append( x-y-z )
    X[4].append( -x+y+z )
    X[5]+=[ -x+y-z ]
    X[6]+=[ -x-y+z ]
    X[7].append( -x-y-z )
list(map(lambda lst: lst.sort(reverse=1), X))
r=0
i=0
while i<8:
    s = 0
    for e in range(b): s+=X[i][e]
    if s>r: r=s
    i+=1
print(r)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' f' (ID: 285)
  → Token d'amorce (pas de prédiction)

Token 2: '(_' (ID: 4963)
  → Token d'amorce (pas de prédiction)

Token 3: '):' (ID: 3127)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6751937866210938
    2. '):' → logprob: -0.8001937866210938
    3. ')' → logprob: -4.050193786621094
    4. 'x' → logprob: -4.425193786621094
    5. 'a' → logprob: -5.050193786621094
    6. ':' → logprob: -6.175193786621094
    7. 'p' → logprob: -6.300193786621094
    8. ',' → logprob: -8.050193786621094
    9. '_:' → logprob: -8.175193786621094
    10. 'n' → logprob: -8.550193786621094

Token 4: ' return' (ID: 622)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.31402587890625
    2. '\' → logprob: -1.68902587890625
    3. ' pass' → logprob: -3.56402587890625
    4. ' ' → logprob: -4.31402587890625
    5. ' 
' → logprob: -4.68902587890625
    6. ' \' → logprob: -4.68902587890625
    7. ''' → logprob: -5.06402587890625
    8. '   ' → logprob: -5.31402587890625
    9. ' return' → logprob: -5.31402587890625
    10. ':' → logprob: -6.43902587890625

Token 5: ' list' (ID: 1562)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.654331624507904
    2. '_' → logprob: -1.0293316841125488
    3. ' _' → logprob: -2.154331684112549
    4. ' None' → logprob: -5.154331684112549
    5. 'None' → logprob: -8.40433120727539
    6. ' True' → logprob: -8.65433120727539
    7. ''' → logprob: -8.90433120727539
    8. '<|end|>' → logprob: -9.15433120727539
    9. ' _
' → logprob: -9.40433120727539
    10. ' ▁' → logprob: -9.52933120727539

Token 6: '(map' (ID: 16946)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28783130645751953
    2. '.' → logprob: -1.9128313064575195
    3. '[' → logprob: -2.2878313064575195
    4. ')' → logprob: -8.66283130645752
    5. ''' → logprob: -8.78783130645752
    6. '(
' → logprob: -9.16283130645752
    7. '[(' → logprob: -9.53783130645752
    8. '[
' → logprob: -9.66283130645752
    9. '```' → logprob: -10.41283130645752
    10. 's' → logprob: -10.53783130645752

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25544098019599915
    2. '(lambda' → logprob: -1.5054409503936768
    3. '(str' → logprob: -6.005441188812256
    4. ')' → logprob: -7.630441188812256
    5. '(
' → logprob: -8.380440711975098
    6. '(f' → logprob: -9.505440711975098
    7. '(None' → logprob: -10.005440711975098
    8. ' (' → logprob: -10.505440711975098
    9. '(int' → logprob: -10.880440711975098
    10. '(operator' → logprob: -11.005440711975098

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3912225663661957
    2. ')' → logprob: -1.516222596168518
    3. ',' → logprob: -3.1412224769592285
    4. '(_' → logprob: -3.5162224769592285
    5. '<|end|>' → logprob: -5.0162224769592285
    6. '))' → logprob: -5.1412224769592285
    7. '(_('' → logprob: -6.2662224769592285
    8. '`' → logprob: -6.2662224769592285
    9. '(open' → logprob: -6.6412224769592285
    10. '('' → logprob: -6.8912224769592285

Token 9: ' _.' (ID: 26522)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.02294517122209072
    2. '_)' → logprob: -4.397945404052734
    3. '_.' → logprob: -4.772945404052734
    4. '_[' → logprob: -7.522945404052734
    5. ' _' → logprob: -8.147945404052734
    6. 'input' → logprob: -8.897945404052734
    7. '_*' → logprob: -9.022945404052734
    8. '_input' → logprob: -9.147945404052734
    9. ' _.' → logprob: -9.147945404052734
    10. '__))' → logprob: -9.147945404052734

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.002480412134900689
    2. 'strip' → logprob: -6.002480506896973
    3. 'rstrip' → logprob: -12.627480506896973
    4. ')' → logprob: -14.377480506896973
    5. 'replace' → logprob: -14.627480506896973
    6. '__' → logprob: -15.002480506896973
    7. ' split' → logprob: -15.752480506896973
    8. 'spl' → logprob: -16.252479553222656
    9. 'isdigit' → logprob: -18.002479553222656
    10. 'startswith' → logprob: -18.002479553222656

Token 11: '()))
' (ID: 24521)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.01784927397966385
    2. '(' → logprob: -4.142849445343018
    3. '("("' → logprob: -6.392849445343018
    4. ''' → logprob: -9.51784896850586
    5. '(','' → logprob: -10.76784896850586
    6. '(
' → logprob: -12.01784896850586
    7. '('='' → logprob: -12.51784896850586
    8. '(`' → logprob: -12.51784896850586
    9. '((' → logprob: -12.76784896850586
    10. '("' → logprob: -12.89284896850586

Token 12: 'a' (ID: 64)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04441538825631142
    2. ')' → logprob: -4.419415473937988
    3. '(
' → logprob: -4.794415473937988
    4. ':' → logprob: -5.169415473937988
    5. '\' → logprob: -5.669415473937988
    6. '#' → logprob: -5.919415473937988
    7. '\n' → logprob: -6.169415473937988
    8. 'newline' → logprob: -6.169415473937988
    9. ''' → logprob: -6.419415473937988
    10. '```' → logprob: -7.044415473937988

Token 13: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8122216463088989
    2. 'r' → logprob: -1.562221646308899
    3. '=' → logprob: -2.3122215270996094
    4. '[' → logprob: -2.5622215270996094
    5. ' =' → logprob: -3.0622215270996094
    6. 'd' → logprob: -3.0622215270996094
    7. 'b' → logprob: -4.062221527099609
    8. 'p' → logprob: -4.312221527099609
    9. ',' → logprob: -5.312221527099609
    10. 'dd' → logprob: -5.312221527099609

Token 14: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.38738131523132324
    2. ' b' → logprob: -1.1373813152313232
    3. '_' → logprob: -8.137381553649902
    4. ' =' → logprob: -9.262381553649902
    5. ' ' → logprob: -9.637381553649902
    6. '=' → logprob: -11.012381553649902
    7. '_=' → logprob: -11.137381553649902
    8. '=b' → logprob: -11.887381553649902
    9. ' _' → logprob: -12.387381553649902
    10. ' f' → logprob: -13.012381553649902

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7472167611122131
    2. '=' → logprob: -0.9972167611122131
    3. ',' → logprob: -1.8722167015075684
    4. '<|end|>' → logprob: -6.247216701507568
    5. ' ,' → logprob: -7.622216701507568
    6. ')' → logprob: -8.122217178344727
    7. '[' → logprob: -8.497217178344727
    8. '.' → logprob: -8.872217178344727
    9. '```' → logprob: -9.247217178344727
    10. ' ' → logprob: -9.497217178344727

Token 16: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.08023171126842499
    2. ' f' → logprob: -2.5802316665649414
    3. 'input' → logprob: -7.080231666564941
    4. 'map' → logprob: -8.455231666564941
    5. ' map' → logprob: -9.080231666564941
    6. ' input' → logprob: -9.080231666564941
    7. ' ' → logprob: -10.330231666564941
    8. 'b' → logprob: -12.205231666564941
    9. 'list' → logprob: -12.705231666564941
    10. '[' → logprob: -12.705231666564941

Token 17: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.4525275230407715
    2. '('' → logprob: -1.4525275230407715
    3. 'input' → logprob: -2.7025275230407715
    4. '('(' → logprob: -3.3275275230407715
    5. '(' → logprob: -3.8275275230407715
    6. '("("' → logprob: -6.2025275230407715
    7. ''(' → logprob: -6.7025275230407715
    8. '("(' → logprob: -6.9525275230407715
    9. '("' → logprob: -7.5775275230407715
    10. '"(' → logprob: -8.57752799987793

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.01987002231180668
    2. '()))' → logprob: -4.019869804382324
    3. '()' → logprob: -6.644869804382324
    4. '('' → logprob: -8.394869804382324
    5. '(' → logprob: -9.269869804382324
    6. ')' → logprob: -10.519869804382324
    7. '("' → logprob: -10.894869804382324
    8. '());' → logprob: -11.644869804382324
    9. ' ())' → logprob: -11.894869804382324
    10. '()),' → logprob: -11.894869804382324

Token 19: 'C' (ID: 34)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3441967964172363
    2. ')' → logprob: -2.3441967964172363
    3. '.' → logprob: -2.7191967964172363
    4. '()' → logprob: -2.7191967964172363
    5. 'c' → logprob: -2.8441967964172363
    6. ' ' → logprob: -2.8441967964172363
    7. ' if' → logprob: -2.9691967964172363
    8. '<|end|>' → logprob: -3.0941967964172363
    9. 'if' → logprob: -3.2191967964172363
    10. '
' → logprob: -3.2191967964172363

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23775887489318848
    2. '=' → logprob: -1.8627588748931885
    3. 'ounter' → logprob: -4.612758636474609
    4. '_' → logprob: -4.987758636474609
    5. ':' → logprob: -5.237758636474609
    6. '.' → logprob: -5.362758636474609
    7. 'ount' → logprob: -5.487758636474609
    8. 'a' → logprob: -5.612758636474609
    9. 'on' → logprob: -5.862758636474609
    10. '=int' → logprob: -5.987758636474609

Token 21: ' [' (ID: 723)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07256636768579483
    2. '[a' → logprob: -3.322566270828247
    3. ' a' → logprob: -4.697566509246826
    4. '[]' → logprob: -5.197566509246826
    5. '[' → logprob: -5.697566509246826
    6. 'int' → logprob: -5.822566509246826
    7. 'list' → logprob: -5.947566509246826
    8. '(a' → logprob: -6.697566509246826
    9. ' [' → logprob: -6.822566509246826
    10. 'max' → logprob: -6.947566509246826

Token 22: 'f' (ID: 69)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.15106181800365448
    2. 'int' → logprob: -2.776061773300171
    3. 'a' → logprob: -2.901061773300171
    4. ']' → logprob: -4.77606201171875
    5. '*' → logprob: -5.77606201171875
    6. 'f' → logprob: -6.02606201171875
    7. 'b' → logprob: -6.40106201171875
    8. 'False' → logprob: -6.65106201171875
    9. '[]' → logprob: -6.90106201171875
    10. '*a' → logprob: -7.15106201171875

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -7.40998875699006e-05
    2. 'input' → logprob: -9.62507438659668
    3. '(' → logprob: -12.50007438659668
    4. ' (' → logprob: -13.37507438659668
    5. ',input' → logprob: -14.75007438659668
    6. ' input' → logprob: -14.75007438659668
    7. '('' → logprob: -14.87507438659668
    8. '("("' → logprob: -14.87507438659668
    9. '("(' → logprob: -15.25007438659668
    10. '('(' → logprob: -15.50007438659668

Token 24: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0025622190441936255
    2. '()' → logprob: -6.127562046051025
    3. '()]' → logprob: -8.252562522888184
    4. ')' → logprob: -9.752562522888184
    5. ')]' → logprob: -11.002562522888184
    6. '()))' → logprob: -11.002562522888184
    7. '()),' → logprob: -11.627562522888184
    8. '())
' → logprob: -12.377562522888184
    9. '();)' → logprob: -13.002562522888184
    10. '());' → logprob: -13.127562522888184

Token 25: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0373709574341774
    2. ')]' → logprob: -3.7873709201812744
    3. ']' → logprob: -4.6623711585998535
    4. '()' → logprob: -6.0373711585998535
    5. '()]' → logprob: -6.9123711585998535
    6. ' for' → logprob: -7.7873711585998535
    7. '),' → logprob: -8.412370681762695
    8. 'for' → logprob: -8.787370681762695
    9. ',' → logprob: -9.287370681762695
    10. '())' → logprob: -9.537370681762695

Token 26: ' __' (ID: 2516)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16477757692337036
    2. 'range' → logprob: -1.9147775173187256
    3. '_' → logprob: -5.414777755737305
    4. ' _' → logprob: -10.289777755737305
    5. '_range' → logprob: -10.664777755737305
    6. ' ' → logprob: -10.789777755737305
    7. '	range' → logprob: -11.914777755737305
    8. '(range' → logprob: -12.914777755737305
    9. ' in' → logprob: -13.039777755737305
    10. 'i' → logprob: -13.914777755737305

Token 27: ' in' (ID: 306)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4258214831352234
    2. ' in' → logprob: -1.1758215427398682
    3. 'in' → logprob: -4.175821304321289
    4. ' ' → logprob: -4.550821304321289
    5. ' range' → logprob: -4.800821304321289
    6. 'range' → logprob: -5.675821304321289
    7. ' _' → logprob: -7.425821304321289
    8. '  ' → logprob: -11.550821304321289
    9. '_range' → logprob: -11.550821304321289
    10. '0' → logprob: -12.800821304321289

Token 28: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.08943654596805573
    2. ' range' → logprob: -2.4644365310668945
    3. ' ran' → logprob: -9.089436531066895
    4. 'r' → logprob: -9.214436531066895
    5. 'ran' → logprob: -9.339436531066895
    6. ' ' → logprob: -9.839436531066895
    7. 'ra' → logprob: -9.839436531066895
    8. 'rang' → logprob: -10.214436531066895
    9. ' ra' → logprob: -11.464436531066895
    10. '[' → logprob: -11.964436531066895

Token 29: '(a' (ID: 6271)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.1647273153066635
    2. '(a' → logprob: -1.9147273302078247
    3. '(' → logprob: -5.414727210998535
    4. '(n' → logprob: -11.164727210998535
    5. 'b' → logprob: -12.289727210998535
    6. '(ab' → logprob: -12.289727210998535
    7. '(B' → logprob: -12.539727210998535
    8. '(int' → logprob: -12.789727210998535
    9. 'a' → logprob: -12.914727210998535
    10. '(m' → logprob: -13.289727210998535

Token 30: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0019405345665290952
    2. ')' → logprob: -6.251940727233887
    3. ']' → logprob: -12.001940727233887
    4. ')])' → logprob: -12.626940727233887
    5. ' )' → logprob: -14.251940727233887
    6. '))' → logprob: -14.376940727233887
    7. ')],' → logprob: -15.001940727233887
    8. '])]' → logprob: -15.751940727233887
    9. '])' → logprob: -16.12693977355957
    10. '),' → logprob: -16.25193977355957

Token 31: 'X' (ID: 55)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.35905224084854126
    2. 'd' → logprob: -2.1090521812438965
    3. 'result' → logprob: -2.3590521812438965
    4. 'c' → logprob: -3.8590521812438965
    5. 'r' → logprob: -4.7340521812438965
    6. '[' → logprob: -4.7340521812438965
    7. 'n' → logprob: -4.8590521812438965
    8. ' for' → logprob: -4.9840521812438965
    9. '
' → logprob: -5.2340521812438965
    10. 'a' → logprob: -5.7340521812438965

Token 32: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4458681643009186
    2. '=' → logprob: -1.1958681344985962
    3. ',' → logprob: -3.3208682537078857
    4. '[' → logprob: -4.695868015289307
    5. '=[]' → logprob: -5.445868015289307
    6. '[:]' → logprob: -5.695868015289307
    7. '.' → logprob: -6.195868015289307
    8. '_' → logprob: -7.445868015289307
    9. 's' → logprob: -8.195868492126465
    10. 'a' → logprob: -8.945868492126465

Token 33: ' [[]' (ID: 182908)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.0491769313812256
    2. 'f' → logprob: -1.9241769313812256
    3. '0' → logprob: -2.2991769313812256
    4. ' f' → logprob: -2.4241769313812256
    5. '[' → logprob: -2.6741769313812256
    6. '[]' → logprob: -3.2991769313812256
    7. '[f' → logprob: -3.2991769313812256
    8. 'b' → logprob: -3.5491769313812256
    9. ' ' → logprob: -3.6741769313812256
    10. ' []' → logprob: -3.9241769313812256

Token 34: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.42901477217674255
    2. ' for' → logprob: -1.429014801979065
    3. ']' → logprob: -2.8040146827697754
    4. ')' → logprob: -3.0540146827697754
    5. ')]' → logprob: -7.054014682769775
    6. 'a' → logprob: -8.554015159606934
    7. ',' → logprob: -8.929015159606934
    8. ' ]' → logprob: -9.804015159606934
    9. '	for' → logprob: -10.054015159606934
    10. ']*' → logprob: -10.554015159606934

Token 35: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.08838354796171188
    2. ' range' → logprob: -2.588383436203003
    3. 'range' → logprob: -4.963383674621582
    4. ' _' → logprob: -6.088383674621582
    5. '(range' → logprob: -9.213383674621582
    6. ' ' → logprob: -10.588383674621582
    7. '_range' → logprob: -10.838383674621582
    8. ' i' → logprob: -11.213383674621582
    9. ' in' → logprob: -11.838383674621582
    10. ' C' → logprob: -11.838383674621582

Token 36: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.41184377670288086
    2. ' range' → logprob: -1.1618437767028809
    3. '(range' → logprob: -4.911843776702881
    4. 'in' → logprob: -5.036843776702881
    5. 'C' → logprob: -5.161843776702881
    6. ' in' → logprob: -6.161843776702881
    7. '_' → logprob: -6.661843776702881
    8. ' C' → logprob: -6.911843776702881
    9. '(C' → logprob: -7.786843776702881
    10. ' ' → logprob: -9.036844253540039

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5763047337532043
    2. 'range' → logprob: -0.8263047337532043
    3. 'C' → logprob: -8.07630443572998
    4. ' C' → logprob: -10.07630443572998
    5. '(range' → logprob: -11.70130443572998
    6. 'b' → logprob: -13.95130443572998
    7. '	range' → logprob: -14.45130443572998
    8. ' ' → logprob: -14.57630443572998
    9. 'Range' → logprob: -14.70130443572998
    10. 'B' → logprob: -15.45130443572998

Token 38: '(' (ID: 7)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0035402015782892704
    2. '(a' → logprob: -6.0035400390625
    3. 'b' → logprob: -7.0035400390625
    4. '(' → logprob: -9.0035400390625
    5. 'a' → logprob: -11.6285400390625
    6. '(len' → logprob: -12.5035400390625
    7. '(m' → logprob: -12.6285400390625
    8. ' (' → logprob: -12.7535400390625
    9. '   ' → logprob: -12.8785400390625
    10. ' b' → logprob: -13.1285400390625

Token 39: '8' (ID: 23)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.20183710753917694
    2. 'a' → logprob: -1.7018370628356934
    3. ' b' → logprob: -8.201837539672852
    4. ' a' → logprob: -9.451837539672852
    5. 'len' → logprob: -10.201837539672852
    6. '(a' → logprob: -11.826837539672852
    7. '   ' → logprob: -12.201837539672852
    8. '(b' → logprob: -12.326837539672852
    9. 'm' → logprob: -12.701837539672852
    10. ' ' → logprob: -13.139337539672852

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00010771531378850341
    2. ')' → logprob: -9.500107765197754
    3. ' )' → logprob: -10.750107765197754
    4. ']' → logprob: -12.000107765197754
    5. '+' → logprob: -13.500107765197754
    6. ')]
' → logprob: -14.125107765197754
    7. ' ]' → logprob: -14.500107765197754
    8. ')],' → logprob: -14.500107765197754
    9. ')])' → logprob: -14.625107765197754
    10. ')]

' → logprob: -15.625107765197754

Token 41: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0011455760104581714
    2. '_' → logprob: -7.251145362854004
    3. 'range' → logprob: -8.501145362854004
    4. ' for' → logprob: -9.251145362854004
    5. 'i' → logprob: -9.251145362854004
    6. 'a' → logprob: -11.501145362854004
    7. 'b' → logprob: -12.376145362854004
    8. ']' → logprob: -12.876145362854004
    9. '```' → logprob: -12.876145362854004
    10. ')' → logprob: -13.126145362854004

Token 42: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22493426501750946
    2. ' c' → logprob: -2.0999343395233154
    3. 'i' → logprob: -2.9749343395233154
    4. ' _' → logprob: -4.474934101104736
    5. 'c' → logprob: -4.849934101104736
    6. '_' → logprob: -5.974934101104736
    7. ' x' → logprob: -6.599934101104736
    8. ' b' → logprob: -6.724934101104736
    9. ' j' → logprob: -7.224934101104736
    10. '_i' → logprob: -7.349934101104736

Token 43: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05050881579518318
    2. 'in' → logprob: -3.050508737564087
    3. ' ' → logprob: -6.425508975982666
    4. ',' → logprob: -9.175508499145508
    5. '_' → logprob: -9.425508499145508
    6. 'n' → logprob: -10.050508499145508
    7. '  ' → logprob: -10.925508499145508
    8. ' i' → logprob: -11.425508499145508
    9. ' _' → logprob: -11.675508499145508
    10. '	in' → logprob: -12.175508499145508

Token 44: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.012783801183104515
    2. ' range' → logprob: -4.387784004211426
    3. 'C' → logprob: -8.262784004211426
    4. ' C' → logprob: -11.887784004211426
    5. 'r' → logprob: -12.387784004211426
    6. 'ran' → logprob: -13.887784004211426
    7. 'b' → logprob: -13.887784004211426
    8. '(range' → logprob: -14.387784004211426
    9. 'X' → logprob: -14.512784004211426
    10. 'a' → logprob: -14.762784004211426

Token 45: '(len' (ID: 14990)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.009463280439376831
    2. '(' → logprob: -4.759463310241699
    3. '(b' → logprob: -7.134463310241699
    4. '(len' → logprob: -10.2594633102417
    5. 'a' → logprob: -11.3844633102417
    6. '(
' → logprob: -14.5094633102417
    7. '(c' → logprob: -14.6344633102417
    8. '(A' → logprob: -14.7594633102417
    9. '(i' → logprob: -14.8844633102417
    10. '(s' → logprob: -14.8844633102417

Token 46: '(C' (ID: 5559)
  Prédit: '(C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(C' → logprob: -0.004050382878631353
    2. '(' → logprob: -6.004050254821777
    3. 'C' → logprob: -7.379050254821777
    4. '(X' → logprob: -7.379050254821777
    5. '(a' → logprob: -9.254050254821777
    6. '(b' → logprob: -9.629050254821777
    7. '(A' → logprob: -10.129050254821777
    8. '(c' → logprob: -10.629050254821777
    9. '(B' → logprob: -10.754050254821777
    10. ' (' → logprob: -11.129050254821777

Token 47: ')):
' (ID: 22530)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12861590087413788
    2. ')):' → logprob: -2.1286158561706543
    3. ')' → logprob: -7.253615856170654
    4. '[' → logprob: -7.628615856170654
    5. ']):' → logprob: -8.753616333007812
    6. '))' → logprob: -8.878616333007812
    7. ' ):' → logprob: -9.378616333007812
    8. '[i' → logprob: -10.753616333007812
    9. ':' → logprob: -10.878616333007812
    10. ' ' → logprob: -11.003616333007812

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.30851641297340393
    2. ' for' → logprob: -1.5585163831710815
    3. ':' → logprob: -3.683516502380371
    4. 'for' → logprob: -4.433516502380371
    5. ' X' → logprob: -4.808516502380371
    6. ' ' → logprob: -5.058516502380371
    7. 'X' → logprob: -7.183516502380371
    8. ' x' → logprob: -7.808516502380371
    9. ' C' → logprob: -7.933516502380371
    10. '	for' → logprob: -7.933516502380371

Token 49: ' x' (ID: 1215)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5333734750747681
    2. 'for' → logprob: -0.9083734750747681
    3. '   ' → logprob: -5.7833733558654785
    4. 'X' → logprob: -6.0333733558654785
    5. ' X' → logprob: -6.7833733558654785
    6. 'x' (adapté à ' x') → logprob: -7.6583733558654785
    7. ' j' → logprob: -7.6583733558654785
    8. 'j' → logprob: -7.7833733558654785
    9. 'if' → logprob: -8.033373832702637
    10. ' if' → logprob: -8.033373832702637

Token 50: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07519432157278061
    2. '=' → logprob: -2.8251943588256836
    3. ',' → logprob: -4.950194358825684
    4. '=C' → logprob: -6.075194358825684
    5. '[' → logprob: -6.825194358825684
    6. '[i' → logprob: -7.825194358825684
    7. ']' → logprob: -7.950194358825684
    8. 's' → logprob: -8.075194358825684
    9. ' ' → logprob: -8.575194358825684
    10. '=i' → logprob: -8.575194358825684

Token 51: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.055107373744249344
    2. ' y' → logprob: -2.930107355117798
    3. '_' → logprob: -9.305107116699219
    4. '=' → logprob: -10.180107116699219
    5. ' =' → logprob: -10.805107116699219
    6. '_=' → logprob: -10.805107116699219
    7. '_y' → logprob: -11.055107116699219
    8. ' ' → logprob: -11.305107116699219
    9. 'x' → logprob: -12.180107116699219
    10. '_,' → logprob: -12.430107116699219

Token 52: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07137531787157059
    2. ' =' → logprob: -2.6963753700256348
    3. ',' → logprob: -6.571375370025635
    4. '=C' → logprob: -10.321374893188477
    5. '   ' → logprob: -14.446374893188477
    6. '=int' → logprob: -14.571374893188477
    7. '=data' → logprob: -14.571374893188477
    8. ' ' → logprob: -14.696374893188477
    9. '=y' → logprob: -14.696374893188477
    10. '=x' → logprob: -14.696374893188477

Token 53: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.11385771632194519
    2. ' z' → logprob: -2.4888577461242676
    3. 'c' → logprob: -4.738857746124268
    4. 'd' → logprob: -6.238857746124268
    5. 'w' → logprob: -6.363857746124268
    6. '_' → logprob: -6.613857746124268
    7. 'r' → logprob: -6.613857746124268
    8. ' c' → logprob: -6.613857746124268
    9. '_=' → logprob: -6.988857746124268
    10. 's' → logprob: -7.113857746124268

Token 54: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1607036590576172
    2. ' =' → logprob: -1.9107036590576172
    3. ',' → logprob: -7.660703659057617
    4. '=C' → logprob: -12.910703659057617
    5. '=int' → logprob: -13.910703659057617
    6. ' ' → logprob: -14.035703659057617
    7. '   ' → logprob: -14.035703659057617
    8. ')' → logprob: -14.535703659057617
    9. '=data' → logprob: -14.910703659057617
    10. '＝' → logprob: -15.410703659057617

Token 55: ' C' (ID: 363)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.5759430527687073
    2. ' C' → logprob: -0.8259430527687073
    3. ' ' → logprob: -13.325942993164062
    4. '   ' → logprob: -13.825942993164062
    5. '    ' → logprob: -15.075942993164062
    6. '	C' → logprob: -15.450942993164062
    7. '*C' → logprob: -15.950942993164062
    8. 'c' → logprob: -16.575942993164062
    9. '  ' → logprob: -16.700942993164062
    10. '(C' → logprob: -17.075942993164062

Token 56: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -3.8889261304575484e-06
    2. '[' → logprob: -13.250003814697266
    3. ')[' → logprob: -14.500003814697266
    4. '[x' → logprob: -14.750003814697266
    5. ')' → logprob: -15.250003814697266
    6. '```' → logprob: -15.375003814697266
    7. '[I' → logprob: -15.625003814697266
    8. ' [' → logprob: -15.750003814697266
    9. '][' → logprob: -15.875003814697266
    10. 'i' → logprob: -17.125003814697266

Token 57: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002201167168095708
    2. ']' → logprob: -6.377201080322266
    3. '])' → logprob: -8.127201080322266
    4. ')]' → logprob: -8.877201080322266
    5. '[' → logprob: -10.877201080322266
    6. ')])' → logprob: -11.377201080322266
    7. ')
' → logprob: -11.627201080322266
    8. ' )' → logprob: -11.627201080322266
    9. '   ' → logprob: -12.002201080322266
    10. '）' → logprob: -13.002201080322266

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.023648271337151527
    2. '
' → logprob: -4.398648262023926
    3. '    
' → logprob: -4.898648262023926
    4. '<|end|>' → logprob: -6.773648262023926
    5. 'X' → logprob: -7.398648262023926
    6. ',' → logprob: -7.648648262023926
    7. ')' → logprob: -8.148648262023926
    8. '   
' → logprob: -8.523648262023926
    9. '  
' → logprob: -9.148648262023926
    10. ' 
' → logprob: -9.273648262023926

Token 59: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.5294867157936096
    2. '   ' → logprob: -1.2794866561889648
    3. ' X' → logprob: -2.154486656188965
    4. ' if' → logprob: -4.654486656188965
    5. ' for' → logprob: -6.029486656188965
    6. 'if' → logprob: -6.154486656188965
    7. '
' → logprob: -7.529486656188965
    8. ' ' → logprob: -7.904486656188965
    9. 'for' → logprob: -7.904486656188965
    10. 'x' → logprob: -8.154486656188965

Token 60: '[' (ID: 58)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.05813373997807503
    2. '[z' → logprob: -3.183133840560913
    3. '[y' → logprob: -4.683133602142334
    4. '[' → logprob: -5.183133602142334
    5. '[a' → logprob: -10.308134078979492
    6. 'x' → logprob: -10.808134078979492
    7. ' [' → logprob: -11.183134078979492
    8. '[i' → logprob: -11.308134078979492
    9. '[int' → logprob: -11.683134078979492
    10. '[min' → logprob: -12.058134078979492

Token 61: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.006121940445154905
    2. ' x' → logprob: -5.75612211227417
    3. 'z' → logprob: -6.63112211227417
    4. '0' → logprob: -7.25612211227417
    5. 'i' → logprob: -8.006121635437012
    6. 'y' → logprob: -8.881121635437012
    7. '(x' → logprob: -8.881121635437012
    8. ' ' → logprob: -9.381121635437012
    9. '7' → logprob: -10.006121635437012
    10. 'a' → logprob: -10.381121635437012

Token 62: ']+' (ID: 15344)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '].' → logprob: -0.05455927550792694
    2. ']' → logprob: -3.0545592308044434
    3. ' ].' → logprob: -5.429559230804443
    4. '][' → logprob: -6.804559230804443
    5. ' ]' → logprob: -8.679559707641602
    6. '[' → logprob: -9.804559707641602
    7. ' ' → logprob: -10.179559707641602
    8. ']+=' → logprob: -10.304559707641602
    9. '   ' → logprob: -10.804559707641602
    10. '+' → logprob: -10.929559707641602

Token 63: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16640739142894745
    2. '=[' → logprob: -2.166407346725464
    3. '[' → logprob: -3.291407346725464
    4. ' [' → logprob: -6.791407585144043
    5. ' =' → logprob: -9.166407585144043
    6. '[x' → logprob: -9.541407585144043
    7. '[(' → logprob: -10.041407585144043
    8. 'x' → logprob: -10.416407585144043
    9. '=(' → logprob: -10.541407585144043
    10. '=x' → logprob: -10.791407585144043

Token 64: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.08901156485080719
    2. ' x' → logprob: -2.8390116691589355
    3. '(x' → logprob: -4.5890116691589355
    4. '[x' → logprob: -4.8390116691589355
    5. ' (' → logprob: -6.0890116691589355
    6. '[' → logprob: -6.4640116691589355
    7. ' [' → logprob: -6.5890116691589355
    8. 'z' → logprob: -6.9640116691589355
    9. '(' → logprob: -7.2140116691589355
    10. 'y' → logprob: -7.4640116691589355

Token 65: '+y' (ID: 102753)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.05682964250445366
    2. ' ]' → logprob: -3.1818296909332275
    3. ',' → logprob: -4.306829452514648
    4. ' ,' → logprob: -9.431829452514648
    5. '],' → logprob: -9.681829452514648
    6. ']
' → logprob: -10.806829452514648
    7. ' ],' → logprob: -10.931829452514648
    8. ']

' → logprob: -11.556829452514648
    9. '   ' → logprob: -11.681829452514648
    10. '+' → logprob: -11.806829452514648

Token 66: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10577589273452759
    2. ' ]' → logprob: -2.730775833129883
    3. ',' → logprob: -3.855775833129883
    4. '+' → logprob: -4.480775833129883
    5. ' ,' → logprob: -7.105775833129883
    6. '+x' → logprob: -7.230775833129883
    7. ' +' → logprob: -8.105775833129883
    8. '+y' → logprob: -8.355775833129883
    9. 'z' → logprob: -8.980775833129883
    10. ',z' → logprob: -8.980775833129883

Token 67: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.001333455671556294
    2. ' z' → logprob: -6.626333236694336
    3. '	z' → logprob: -13.251333236694336
    4. '+' → logprob: -13.501333236694336
    5. ' ' → logprob: -14.001333236694336
    6. 'x' → logprob: -14.001333236694336
    7. '   ' → logprob: -14.251333236694336
    8. '1' → logprob: -14.751333236694336
    9. ''z' → logprob: -15.501333236694336
    10. '  ' → logprob: -16.126333236694336

Token 68: ' ]
' (ID: 10213)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006329028867185116
    2. ' ]' → logprob: -5.25632905960083
    3. '   ' → logprob: -7.13132905960083
    4. ',' → logprob: -8.381328582763672
    5. ']
' → logprob: -9.881328582763672
    6. ' ' → logprob: -12.506328582763672
    7. ')' → logprob: -13.506328582763672
    8. ' ,' → logprob: -13.506328582763672
    9. '']' → logprob: -13.631328582763672
    10. '    ' → logprob: -13.631328582763672

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2814595103263855
    2. 'X' → logprob: -1.6564595699310303
    3. ',' → logprob: -3.6564595699310303
    4. '[' → logprob: -4.906459331512451
    5. ' ' → logprob: -4.906459331512451
    6. ' X' → logprob: -5.281459331512451
    7. '<|end|>' → logprob: -5.656459331512451
    8. '    
' → logprob: -6.906459331512451
    9. ',X' → logprob: -7.406459331512451
    10. ']' → logprob: -7.406459331512451

Token 70: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.6073376536369324
    2. ',' → logprob: -1.4823377132415771
    3. '   ' → logprob: -2.482337713241577
    4. '[' → logprob: -2.857337713241577
    5. ' X' → logprob: -3.482337713241577
    6. '<|end|>' → logprob: -4.357337474822998
    7. ')' → logprob: -4.732337474822998
    8. ',
' → logprob: -4.982337474822998
    9. ' ' → logprob: -4.982337474822998
    10. '[
' → logprob: -5.482337474822998

Token 71: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.630610641877865e-06
    2. ' [' → logprob: -13.000006675720215
    3. '```' → logprob: -13.875006675720215
    4. '[
' → logprob: -14.375006675720215
    5. '   ' → logprob: -14.500006675720215
    6. '0' → logprob: -14.750006675720215
    7. '\[' → logprob: -15.250006675720215
    8. ' ' → logprob: -15.375006675720215
    9. '][' → logprob: -15.500006675720215
    10. '1' → logprob: -15.750006675720215

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0008261834154836833
    2. '0' → logprob: -7.375826358795166
    3. ' ' → logprob: -8.625825881958008
    4. '   ' → logprob: -12.063325881958008
    5. '3' → logprob: -13.188325881958008
    6. '4' → logprob: -13.438325881958008
    7. '2' → logprob: -13.688325881958008
    8. '  ' → logprob: -13.813325881958008
    9. '[' → logprob: -13.813325881958008
    10. '7' → logprob: -13.875825881958008

Token 73: '].' (ID: 1651)
  Prédit: ']+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']+' → logprob: -0.032956529408693314
    2. ']+=' → logprob: -3.657956600189209
    3. ']' → logprob: -5.032956600189209
    4. ' ]' → logprob: -9.90795612335205
    5. '   ' → logprob: -10.78295612335205
    6. '+' → logprob: -10.78295612335205
    7. ')+' → logprob: -12.15795612335205
    8. '+=' → logprob: -12.15795612335205
    9. ' ' → logprob: -12.40795612335205
    10. '  ' → logprob: -13.65795612335205

Token 74: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.002360190497711301
    2. '+' → logprob: -6.2523603439331055
    3. '+=' → logprob: -8.127360343933105
    4. '+=(' → logprob: -9.752360343933105
    5. ' append' → logprob: -9.877360343933105
    6. 'extend' → logprob: -11.752360343933105
    7. '.append' → logprob: -11.877360343933105
    8. '_append' → logprob: -12.002360343933105
    9. 'add' → logprob: -12.752360343933105
    10. 'Append' → logprob: -14.127360343933105

Token 75: '(' (ID: 7)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.31643012166023254
    2. '(' → logprob: -1.3164300918579102
    3. 'x' → logprob: -6.69143009185791
    4. ' (' → logprob: -6.94143009185791
    5. ' x' → logprob: -7.19143009185791
    6. '(-' → logprob: -9.19143009185791
    7. '((' → logprob: -10.06643009185791
    8. '(max' → logprob: -10.69143009185791
    9. '(y' → logprob: -11.69143009185791
    10. '(z' → logprob: -12.44143009185791

Token 76: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31799083948135376
    2. 'x' → logprob: -1.317990779876709
    3. '-x' → logprob: -5.692990779876709
    4. '-' → logprob: -7.942990779876709
    5. '+x' → logprob: -8.442991256713867
    6. ' -' → logprob: -8.567991256713867
    7. ' ' → logprob: -8.942991256713867
    8. '(' → logprob: -9.067991256713867
    9. ' (' → logprob: -10.067991256713867
    10. '  ' → logprob: -10.192991256713867

Token 77: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.4002707898616791
    2. '+' → logprob: -1.1502708196640015
    3. ' +' → logprob: -4.525270938873291
    4. '-' → logprob: -6.775270938873291
    5. '-y' → logprob: -7.275270938873291
    6. '+x' → logprob: -7.650270938873291
    7. ' -' → logprob: -10.775270462036133
    8. ')' → logprob: -11.150270462036133
    9. '+b' → logprob: -11.275270462036133
    10. '+
' → logprob: -11.275270462036133

Token 78: '-z' (ID: 16826)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0011539128609001637
    2. ' +' → logprob: -7.501153945922852
    3. '-z' → logprob: -7.876153945922852
    4. '-' → logprob: -8.501153945922852
    5. ' -' → logprob: -11.626153945922852
    6. '+x' → logprob: -12.001153945922852
    7. '+y' → logprob: -14.626153945922852
    8. '+-' → logprob: -15.001153945922852
    9. '+
' → logprob: -15.001153945922852
    10. 'z' → logprob: -15.251153945922852

Token 79: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03656330704689026
    2. ' )' → logprob: -3.6615633964538574
    3. ')
' → logprob: -4.786563396453857
    4. ' )
' → logprob: -6.411563396453857
    5. '   ' → logprob: -8.6615629196167
    6. ')
' → logprob: -10.5365629196167
    7. ' ' → logprob: -11.0365629196167
    8. ' )
' → logprob: -12.1615629196167
    9. ')

' → logprob: -14.1615629196167
    10. ')#' → logprob: -14.4115629196167

Token 80: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02101360633969307
    2. 'X' → logprob: -3.8960134983062744
    3. '    
' → logprob: -8.896013259887695
    4. '<|end|>' → logprob: -9.271013259887695
    5. ' X' → logprob: -9.396013259887695
    6. '[' → logprob: -10.021013259887695
    7. ' ' → logprob: -10.521013259887695
    8. '
' → logprob: -11.146013259887695
    9. ')' → logprob: -11.271013259887695
    10. '[X' → logprob: -11.521013259887695

Token 81: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.010867060162127018
    2. ' X' → logprob: -4.760867118835449
    3. '   ' → logprob: -6.135867118835449
    4. ' ' → logprob: -10.38586711883545
    5. ')' → logprob: -10.88586711883545
    6. '[' → logprob: -11.26086711883545
    7. '<|end|>' → logprob: -12.26086711883545
    8. '  ' → logprob: -12.63586711883545
    9. '    
' → logprob: -12.76086711883545
    10. '[
' → logprob: -13.13586711883545

Token 82: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.000763510703109e-05
    2. '.' → logprob: -10.500040054321289
    3. '2' → logprob: -11.500040054321289
    4. '1' → logprob: -14.625040054321289
    5. '```' → logprob: -14.750040054321289
    6. ' [' → logprob: -15.375040054321289
    7. '[
' → logprob: -15.375040054321289
    8. '.[' → logprob: -15.500040054321289
    9. '.append' → logprob: -15.750040054321289
    10. '][' → logprob: -15.875040054321289

Token 83: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.576044499874115
    2. '2' → logprob: -0.826044499874115
    3. ' ' → logprob: -9.201044082641602
    4. '   ' → logprob: -13.701044082641602
    5. '0' → logprob: -14.013544082641602
    6. '  ' → logprob: -14.388544082641602
    7. ']' → logprob: -15.076044082641602
    8. '[' → logprob: -15.576044082641602
    9. '    ' → logprob: -15.888544082641602
    10. '3' → logprob: -16.2635440826416

Token 84: '].' (ID: 1651)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.13778367638587952
    2. '.append' → logprob: -2.3877837657928467
    3. ').' → logprob: -3.6377837657928467
    4. '].' → logprob: -4.762783527374268
    5. ' .' → logprob: -6.262783527374268
    6. ')' → logprob: -10.137784004211426
    7. ' ' → logprob: -11.012784004211426
    8. ']' → logprob: -11.512784004211426
    9. ' ).' → logprob: -11.762784004211426
    10. '}.' → logprob: -11.887784004211426

Token 85: 'extend' (ID: 52011)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00010652327910065651
    2. ' append' → logprob: -9.375106811523438
    3. '.append' → logprob: -11.125106811523438
    4. 'appen' → logprob: -12.125106811523438
    5. '	append' → logprob: -14.250106811523438
    6. 'app' → logprob: -14.875106811523438
    7. ' ' → logprob: -15.875106811523438
    8. 'Append' → logprob: -16.375106811523438
    9. '   ' → logprob: -16.625106811523438
    10. '  ' → logprob: -17.000106811523438

Token 86: '(' (ID: 7)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.16048255562782288
    2. '(' → logprob: -1.9104825258255005
    3. '((' → logprob: -9.160482406616211
    4. '[' → logprob: -9.160482406616211
    5. '([(' → logprob: -10.910482406616211
    6. '(([' → logprob: -12.035482406616211
    7. '([-' → logprob: -12.285482406616211
    8. '([
' → logprob: -12.285482406616211
    9. ' ([' → logprob: -12.410482406616211
    10. '([[' → logprob: -13.160482406616211

Token 87: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.11688856035470963
    2. '[x' → logprob: -2.6168885231018066
    3. ' [' → logprob: -3.3668885231018066
    4. '(' → logprob: -6.366888523101807
    5. '(x' → logprob: -8.741888999938965
    6. '([' → logprob: -8.741888999938965
    7. '[
' → logprob: -8.991888999938965
    8. ' ' → logprob: -9.241888999938965
    9. '[i' → logprob: -9.616888999938965
    10. '[z' → logprob: -9.616888999938965

Token 88: 'x' (ID: 87)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.3878485858440399
    2. 'x' → logprob: -1.1378486156463623
    3. ' ' → logprob: -7.512848377227783
    4. '  ' → logprob: -9.387848854064941
    5. '(' → logprob: -9.637848854064941
    6. '(x' → logprob: -10.012848854064941
    7. ' (' → logprob: -10.012848854064941
    8. '[' → logprob: -10.262848854064941
    9. ' [' → logprob: -10.262848854064941
    10. '-' → logprob: -10.512848854064941

Token 89: '-y' (ID: 18102)
  Prédit: '+y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.21285688877105713
    2. '+' → logprob: -1.7128568887710571
    3. '-y' → logprob: -5.212856769561768
    4. ' +' → logprob: -5.712856769561768
    5. '-' → logprob: -6.337856769561768
    6. ',' → logprob: -8.337857246398926
    7. ' -' → logprob: -8.462857246398926
    8. '+-' → logprob: -9.337857246398926
    9. '+x' → logprob: -9.712857246398926
    10. '-z' → logprob: -10.087857246398926

Token 90: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.010627773590385914
    2. ' +' → logprob: -4.760627746582031
    3. '-' → logprob: -6.635627746582031
    4. ' -' → logprob: -8.135627746582031
    5. ')+' → logprob: -8.885627746582031
    6. ']+' → logprob: -9.635627746582031
    7. ' ' → logprob: -10.510627746582031
    8. '+
' → logprob: -10.885627746582031
    9. '+x' → logprob: -11.010627746582031
    10. '-z' → logprob: -11.260627746582031

Token 91: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.009114852175116539
    2. ' z' → logprob: -5.134114742279053
    3. '-z' → logprob: -5.759114742279053
    4. '	z' → logprob: -11.509115219116211
    5. '-' → logprob: -11.759115219116211
    6. ' ' → logprob: -12.759115219116211
    7. ''z' → logprob: -13.134115219116211
    8. ' -' → logprob: -13.259115219116211
    9. '  ' → logprob: -13.759115219116211
    10. '<|end|>' → logprob: -14.009115219116211

Token 92: ']' (ID: 60)
  Prédit: ' ])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ])' → logprob: -0.8152003288269043
    2. ' ]' → logprob: -1.0652003288269043
    3. '])' → logprob: -2.4402003288269043
    4. ',' → logprob: -2.8152003288269043
    5. ']' → logprob: -2.9402003288269043
    6. ' )' → logprob: -5.190200328826904
    7. ' ,' → logprob: -5.440200328826904
    8. ')' → logprob: -6.190200328826904
    9. '   ' → logprob: -7.565200328826904
    10. ' ])
' → logprob: -8.815200805664062

Token 93: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1494172811508179
    2. ' )' → logprob: -1.1494172811508179
    3. ' )
' → logprob: -1.3994172811508179
    4. '   ' → logprob: -2.6494174003601074
    5. ')
' → logprob: -3.0244174003601074
    6. ' ' → logprob: -8.89941692352295
    7. ' )
' → logprob: -9.02441692352295
    8. ')
' → logprob: -10.64941692352295
    9. ' )

' → logprob: -10.89941692352295
    10. '    ' → logprob: -11.64941692352295

Token 94: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009189624106511474
    2. 'X' → logprob: -7.750918865203857
    3. '<|end|>' → logprob: -8.500919342041016
    4. '    
' → logprob: -9.125919342041016
    5. '```' → logprob: -9.875919342041016
    6. '[' → logprob: -10.500919342041016
    7. ')' → logprob: -10.750919342041016
    8. '
' → logprob: -11.125919342041016
    9. ' ' → logprob: -11.500919342041016
    10. '[
' → logprob: -11.625919342041016

Token 95: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.7052482962608337
    2. '   ' → logprob: -0.7052482962608337
    3. ' X' → logprob: -4.5802483558654785
    4. '[' → logprob: -8.08024787902832
    5. '[
' → logprob: -8.08024787902832
    6. ' ' → logprob: -8.33024787902832
    7. ')' → logprob: -8.45524787902832
    8. '    
' → logprob: -8.58024787902832
    9. '
' → logprob: -8.95524787902832
    10. ' 
' → logprob: -9.58024787902832

Token 96: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.407366916188039e-05
    2. '.' → logprob: -10.250054359436035
    3. '3' → logprob: -11.250054359436035
    4. '.[' → logprob: -13.250054359436035
    5. '```' → logprob: -13.750054359436035
    6. '.append' → logprob: -14.375054359436035
    7. '[
' → logprob: -15.125054359436035
    8. '\[' → logprob: -15.375054359436035
    9. '][' → logprob: -15.500054359436035
    10. ' [' → logprob: -15.750054359436035

Token 97: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.975612187583465e-05
    2. ' ' → logprob: -10.500029563903809
    3. '   ' → logprob: -14.250029563903809
    4. '4' → logprob: -15.062529563903809
    5. ']' → logprob: -15.500029563903809
    6. '  ' → logprob: -15.625029563903809
    7. '۳' → logprob: -15.875029563903809
    8. '３' → logprob: -16.062530517578125
    9. '2' → logprob: -16.375030517578125
    10. '    ' → logprob: -16.937530517578125

Token 98: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.3523191213607788
    2. '.' → logprob: -1.3523191213607788
    3. '.append' → logprob: -3.3523192405700684
    4. ').' → logprob: -6.227319240570068
    5. '.extend' → logprob: -7.477319240570068
    6. ']' → logprob: -8.35231876373291
    7. ' .' → logprob: -8.60231876373291
    8. ' ].' → logprob: -9.10231876373291
    9. '>.' → logprob: -9.85231876373291
    10. '.ext' → logprob: -9.85231876373291

Token 99: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.25270935893058777
    2. 'extend' → logprob: -1.5027093887329102
    3. ' append' → logprob: -7.87770938873291
    4. '.append' → logprob: -8.75270938873291
    5. ' extend' → logprob: -9.00270938873291
    6. '.extend' → logprob: -9.50270938873291
    7. 'appen' → logprob: -11.25270938873291
    8. '	append' → logprob: -11.87770938873291
    9. 'expand' → logprob: -12.50270938873291
    10. '.' → logprob: -13.19020938873291

Token 100: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11288566887378693
    2. '(x' → logprob: -2.2378857135772705
    3. '(-' → logprob: -9.987885475158691
    4. '((' → logprob: -11.862885475158691
    5. 'x' → logprob: -12.112885475158691
    6. ' (' → logprob: -13.237885475158691
    7. '([' → logprob: -13.737885475158691
    8. '(
' → logprob: -15.112885475158691
    9. '(y' → logprob: -15.112885475158691
    10. ' x' → logprob: -15.612885475158691

Token 101: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6943797469139099
    2. ' x' → logprob: -0.6943797469139099
    3. '(x' → logprob: -7.694379806518555
    4. '(' → logprob: -7.694379806518555
    5. ' (' → logprob: -9.194379806518555
    6. '   ' → logprob: -9.319379806518555
    7. '  ' → logprob: -9.944379806518555
    8. ' ' → logprob: -9.944379806518555
    9. '    ' → logprob: -11.944379806518555
    10. ')' → logprob: -12.194379806518555

Token 102: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.050958216190338135
    2. ' -' → logprob: -3.0509581565856934
    3. '-' → logprob: -6.050958156585693
    4. ' ' → logprob: -12.800958633422852
    5. '   ' → logprob: -13.425958633422852
    6. '−' → logprob: -14.050958633422852
    7. '-Y' → logprob: -14.050958633422852
    8. '+y' → logprob: -14.175958633422852
    9. '-z' → logprob: -14.550958633422852
    10. '-yard' → logprob: -14.675958633422852

Token 103: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.02457273378968239
    2. ' -' → logprob: -3.7745728492736816
    3. '-' → logprob: -6.649572849273682
    4. ' ' → logprob: -10.524572372436523
    5. '   ' → logprob: -13.274572372436523
    6. '  ' → logprob: -13.649572372436523
    7. '+' → logprob: -14.274572372436523
    8. '-Z' → logprob: -15.649572372436523
    9. '[' → logprob: -16.024572372436523
    10. '    ' → logprob: -16.024572372436523

Token 104: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3921535015106201
    2. ' )' → logprob: -1.1421535015106201
    3. ' )
' → logprob: -5.892153739929199
    4. '   ' → logprob: -6.642153739929199
    5. ')
' → logprob: -7.017153739929199
    6. ' ]' → logprob: -8.8921537399292
    7. ']' → logprob: -9.3921537399292
    8. ' ' → logprob: -10.8921537399292
    9. '])' → logprob: -11.2671537399292
    10. ' ])' → logprob: -11.3921537399292

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008644355461001396
    2. 'X' → logprob: -4.7586445808410645
    3. ' X' → logprob: -11.133644104003906
    4. '```' → logprob: -12.008644104003906
    5. '    
' → logprob: -12.758644104003906
    6. ' ' → logprob: -13.508644104003906
    7. '  ' → logprob: -13.758644104003906
    8. '<|end|>' → logprob: -14.008644104003906
    9. '       ' → logprob: -14.633644104003906
    10. '	X' → logprob: -14.633644104003906

Token 106: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.18066516518592834
    2. '   ' → logprob: -1.805665135383606
    3. ' X' → logprob: -7.055665016174316
    4. ' ' → logprob: -10.430665016174316
    5. '  ' → logprob: -11.305665016174316
    6. 'for' → logprob: -11.305665016174316
    7. '    ' → logprob: -14.305665016174316
    8. '	X' → logprob: -14.555665016174316
    9. ' for' → logprob: -14.805665016174316
    10. '    
' → logprob: -15.305665016174316

Token 107: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.20603168499656e-05
    2. '.' → logprob: -10.500061988830566
    3. '4' → logprob: -10.500061988830566
    4. '.[' → logprob: -13.250061988830566
    5. '```' → logprob: -13.625061988830566
    6. '.append' → logprob: -14.250061988830566
    7. '[
' → logprob: -14.375061988830566
    8. '5' → logprob: -14.625061988830566
    9. '\[' → logprob: -14.875061988830566
    10. '[].' → logprob: -15.750061988830566

Token 108: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.664371848164592e-05
    2. ' ' → logprob: -11.250016212463379
    3. '   ' → logprob: -14.125016212463379
    4. ']' → logprob: -14.312516212463379
    5. '' → logprob: -15.187516212463379
    6. '४' → logprob: -15.500016212463379
    7. '４' → logprob: -15.625016212463379
    8. '۴' → logprob: -15.625016212463379
    9. '٤' → logprob: -15.875016212463379
    10. '  ' → logprob: -15.875016212463379

Token 109: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.023638619109988213
    2. '.' → logprob: -4.273638725280762
    3. '.append' → logprob: -4.898638725280762
    4. ']' → logprob: -7.023638725280762
    5. ').' → logprob: -7.273638725280762
    6. ' ].' → logprob: -9.023638725280762
    7. ']+' → logprob: -9.523638725280762
    8. ']+=' → logprob: -9.773638725280762
    9. '.extend' → logprob: -10.898638725280762
    10. '+=' → logprob: -11.023638725280762

Token 110: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.006744150537997484
    2. 'extend' → logprob: -5.006744384765625
    3. ' append' → logprob: -11.006744384765625
    4. '.append' → logprob: -12.131744384765625
    5. '+=' → logprob: -13.131744384765625
    6. '	append' → logprob: -13.881744384765625
    7. '+' → logprob: -14.131744384765625
    8. 'appen' → logprob: -14.256744384765625
    9. '.extend' → logprob: -14.506744384765625
    10. 'add' → logprob: -14.506744384765625

Token 111: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.017280487343668938
    2. '(x' → logprob: -4.767280578613281
    3. '(-' → logprob: -5.267280578613281
    4. '(y' → logprob: -5.767280578613281
    5. '(z' → logprob: -8.517280578613281
    6. '(+' → logprob: -10.142280578613281
    7. ' (' → logprob: -10.392280578613281
    8. 'x' → logprob: -11.017280578613281
    9. '((' → logprob: -11.017280578613281
    10. 'y' → logprob: -11.642280578613281

Token 112: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2977403998374939
    2. '-y' → logprob: -1.6727404594421387
    3. '-x' → logprob: -2.7977404594421387
    4. '-' → logprob: -6.047740459442139
    5. '-z' → logprob: -6.172740459442139
    6. '(-' → logprob: -6.297740459442139
    7. '[-' → logprob: -7.047740459442139
    8. ' (-' → logprob: -7.547740459442139
    9. ' y' → logprob: -7.797740459442139
    10. '(' → logprob: -8.92273998260498

Token 113: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002788551209960133
    2. '(x' → logprob: -8.87527847290039
    3. ' x' → logprob: -9.00027847290039
    4. '(' → logprob: -11.37527847290039
    5. ' (' → logprob: -14.00027847290039
    6. '1' → logprob: -14.12527847290039
    7. ')x' → logprob: -14.50027847290039
    8. '   ' → logprob: -14.75027847290039
    9. ')' → logprob: -14.75027847290039
    10. 'y' → logprob: -15.37527847290039

Token 114: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.33885982632637024
    2. '+' → logprob: -1.3388597965240479
    3. ' +' → logprob: -4.213860034942627
    4. '-y' → logprob: -5.088860034942627
    5. '-' → logprob: -6.088860034942627
    6. '+x' → logprob: -6.588860034942627
    7. ' -' → logprob: -7.838860034942627
    8. ' ' → logprob: -9.963859558105469
    9. '+-' → logprob: -9.963859558105469
    10. ')+' → logprob: -10.088859558105469

Token 115: '+' (ID: 10)
  Prédit: '-z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.0026810099370777607
    2. ' -' → logprob: -6.252680778503418
    3. '+' → logprob: -7.627680778503418
    4. '-' → logprob: -8.252680778503418
    5. ' ' → logprob: -12.627680778503418
    6. ' +' → logprob: -14.752680778503418
    7. '-Z' → logprob: -15.252680778503418
    8. '   ' → logprob: -15.627680778503418
    9. '-x' → logprob: -15.752680778503418
    10. '-g' → logprob: -16.002681732177734

Token 116: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.00029148702742531896
    2. '-z' → logprob: -8.87529182434082
    3. ' z' → logprob: -9.00029182434082
    4. '-' → logprob: -10.75029182434082
    5. '	z' → logprob: -13.25029182434082
    6. 'y' → logprob: -13.37529182434082
    7. ' ' → logprob: -13.87529182434082
    8. ''z' → logprob: -14.50029182434082
    9. '  ' → logprob: -14.62529182434082
    10. ' -' → logprob: -15.00029182434082

Token 117: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2662202715873718
    2. '   ' → logprob: -2.2662203311920166
    3. ' )' → logprob: -2.6412203311920166
    4. ')
' → logprob: -3.2662203311920166
    5. ' )
' → logprob: -3.8912203311920166
    6. ' ' → logprob: -9.891220092773438
    7. ']' → logprob: -10.016220092773438
    8. ' ]' → logprob: -10.141220092773438
    9. '])' → logprob: -11.641220092773438
    10. ' )
' → logprob: -12.016220092773438

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18018005788326263
    2. 'X' → logprob: -1.8051800727844238
    3. ' X' → logprob: -8.305179595947266
    4. ' ' → logprob: -9.430179595947266
    5. '  ' → logprob: -9.555179595947266
    6. '    
' → logprob: -10.930179595947266
    7. ' 
' → logprob: -12.805179595947266
    8. '(' → logprob: -13.055179595947266
    9. '    ' → logprob: -13.180179595947266
    10. '       ' → logprob: -13.305179595947266

Token 119: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.0031121151987463236
    2. ' X' → logprob: -6.128112316131592
    3. '   ' → logprob: -7.003112316131592
    4. ' ' → logprob: -11.378111839294434
    5. '  ' → logprob: -13.003111839294434
    6. '[' → logprob: -13.628111839294434
    7. ',' → logprob: -15.003111839294434
    8. 'x' → logprob: -15.253111839294434
    9. '(' → logprob: -15.628111839294434
    10. '
' → logprob: -15.628111839294434

Token 120: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.849109119386412e-06
    2. '5' → logprob: -12.000009536743164
    3. '[
' → logprob: -13.500009536743164
    4. '```' → logprob: -14.000009536743164
    5. ' [' → logprob: -15.375009536743164
    6. '.' → logprob: -15.500009536743164
    7. '`' → logprob: -16.187509536743164
    8. '\[' → logprob: -16.375009536743164
    9. '

' → logprob: -16.500009536743164
    10. ''[' → logprob: -16.750009536743164

Token 121: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.511406809295295e-06
    2. '4' → logprob: -12.375006675720215
    3. ' ' → logprob: -13.375006675720215
    4. '   ' → logprob: -16.2500057220459
    5. '```' → logprob: -16.6250057220459
    6. '(' → logprob: -16.6875057220459
    7. '
' → logprob: -16.8125057220459
    8. '  ' → logprob: -16.8750057220459
    9. '[' → logprob: -16.9375057220459
    10. '' → logprob: -17.0000057220459

Token 122: ']+' (ID: 15344)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6081300377845764
    2. ').' → logprob: -1.7331299781799316
    3. '].' → logprob: -1.8581299781799316
    4. '.append' → logprob: -2.1081299781799316
    5. ' .' → logprob: -7.858129978179932
    6. ']' → logprob: -8.10813045501709
    7. '   ' → logprob: -8.73313045501709
    8. ')' → logprob: -8.85813045501709
    9. '}.' → logprob: -9.10813045501709
    10. '[' → logprob: -9.98313045501709

Token 123: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.16144543886184692
    2. '=' → logprob: -1.9114453792572021
    3. '[' → logprob: -6.786445617675781
    4. '=(' → logprob: -9.786445617675781
    5. ' =[' → logprob: -11.536445617675781
    6. '=['' → logprob: -11.661445617675781
    7. '=[
' → logprob: -12.036445617675781
    8. '=[[' → logprob: -12.786445617675781
    9. '=[]' → logprob: -13.161445617675781
    10. '=["' → logprob: -13.536445617675781

Token 124: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.01581263169646263
    2. '-y' → logprob: -5.265812397003174
    3. '-x' → logprob: -5.265812397003174
    4. '-z' → logprob: -5.765812397003174
    5. '(-' → logprob: -6.640812397003174
    6. ' (-' → logprob: -7.640812397003174
    7. '-' → logprob: -8.390812873840332
    8. ' ' → logprob: -9.890812873840332
    9. '[-' → logprob: -10.390812873840332
    10. '   ' → logprob: -10.765812873840332

Token 125: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00011558275582501665
    2. ' x' → logprob: -9.125115394592285
    3. 'y' → logprob: -12.125115394592285
    4. '(' → logprob: -14.875115394592285
    5. '(x' → logprob: -15.875115394592285
    6. '1' → logprob: -16.1251163482666
    7. ''x' → logprob: -16.3751163482666
    8. '-x' → logprob: -16.5001163482666
    9. '+x' → logprob: -16.6251163482666
    10. ' ' → logprob: -16.8751163482666

Token 126: '+y' (ID: 102753)
  Prédit: '+y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+y' → logprob: -0.014351186342537403
    2. '+' → logprob: -5.0143513679504395
    3. '-y' → logprob: -5.2643513679504395
    4. 'y' → logprob: -6.5143513679504395
    5. ' +' → logprob: -7.1393513679504395
    6. ' y' → logprob: -9.639350891113281
    7. ' -' → logprob: -10.764350891113281
    8. ' ' → logprob: -11.264350891113281
    9. '   ' → logprob: -11.764350891113281
    10. '-' → logprob: -11.889350891113281

Token 127: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.012512595392763615
    2. ' -' → logprob: -4.387512683868408
    3. '-' → logprob: -13.26251220703125
    4. ' ' → logprob: -13.88751220703125
    5. '+' → logprob: -15.63751220703125
    6. ' z' → logprob: -17.26251220703125
    7. 'z' → logprob: -17.38751220703125
    8. '-Z' → logprob: -17.63751220703125
    9. '   ' → logprob: -17.76251220703125
    10. '  ' → logprob: -17.88751220703125

Token 128: ' ]
' (ID: 10213)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.370810866355896
    2. ']' → logprob: -1.245810866355896
    3. ' ]
' → logprob: -3.9958109855651855
    4. ']
' → logprob: -6.1208109855651855
    5. '   ' → logprob: -6.6208109855651855
    6. ' )' → logprob: -9.495810508728027
    7. ')' → logprob: -9.870810508728027
    8. ' ]
' → logprob: -10.245810508728027
    9. ' ' → logprob: -11.495810508728027
    10. ' ]

' → logprob: -11.620810508728027

Token 129: '   ' (ID: 271)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.020935505628585815
    2. '   ' → logprob: -4.020935535430908
    3. ' X' → logprob: -5.895935535430908
    4. ' ' → logprob: -11.27093505859375
    5. '  ' → logprob: -12.02093505859375
    6. ']' → logprob: -12.27093505859375
    7. '[' → logprob: -13.39593505859375
    8. '
' → logprob: -14.14593505859375
    9. '(' → logprob: -14.27093505859375
    10. ']
' → logprob: -14.39593505859375

Token 130: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.0013675002846866846
    2. ' X' → logprob: -6.626367568969727
    3. '   ' → logprob: -10.126367568969727
    4. ' ' → logprob: -13.876367568969727
    5. '[' → logprob: -15.751367568969727
    6. '  ' → logprob: -16.001367568969727
    7. 'x' → logprob: -16.626367568969727
    8. '(' → logprob: -16.751367568969727
    9. ']' → logprob: -16.876367568969727
    10. '_' → logprob: -17.126367568969727

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.650518920039758e-06
    2. '6' → logprob: -13.625003814697266
    3. '5' → logprob: -13.750003814697266
    4. '.' → logprob: -14.250003814697266
    5. '```' → logprob: -16.000003814697266
    6. '.append' → logprob: -16.125003814697266
    7. ' [' → logprob: -16.750003814697266
    8. '[
' → logprob: -16.750003814697266
    9. '(' → logprob: -17.000003814697266
    10. '#' → logprob: -17.875003814697266

Token 132: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0011746286181733012
    2. '5' → logprob: -6.751174449920654
    3. '[' → logprob: -13.251174926757812
    4. ' ' → logprob: -13.376174926757812
    5. '
' → logprob: -15.501174926757812
    6. '   ' → logprob: -15.626174926757812
    7. '(' → logprob: -15.876174926757812
    8. '7' → logprob: -16.126174926757812
    9. '4' → logprob: -16.313674926757812
    10. ']' → logprob: -16.313674926757812

Token 133: ']+' (ID: 15344)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.39602330327033997
    2. '].' → logprob: -1.2710232734680176
    3. '.' → logprob: -3.1460232734680176
    4. '.extend' → logprob: -6.771023273468018
    5. ']+' → logprob: -7.646023273468018
    6. ').' → logprob: -7.771023273468018
    7. '   ' → logprob: -8.146023750305176
    8. '+.' → logprob: -8.271023750305176
    9. ' .' → logprob: -8.521023750305176
    10. '+' → logprob: -8.521023750305176

Token 134: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5766916275024414
    2. '=[' → logprob: -0.8266916275024414
    3. '[' → logprob: -7.201691627502441
    4. '=['' → logprob: -13.076691627502441
    5. ' =[' → logprob: -13.826691627502441
    6. '=["' → logprob: -14.576691627502441
    7. '=(' → logprob: -14.826691627502441
    8. '=[
' → logprob: -14.826691627502441
    9. '+=' → logprob: -14.951691627502441
    10. '=[]' → logprob: -14.951691627502441

Token 135: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.20305736362934113
    2. '-x' → logprob: -1.7030574083328247
    3. '-z' → logprob: -6.953057289123535
    4. '-' → logprob: -8.078057289123535
    5. '(-' → logprob: -8.828057289123535
    6. '-y' → logprob: -9.703057289123535
    7. ' (-' → logprob: -9.703057289123535
    8. ' ' → logprob: -10.453057289123535
    9. '[-' → logprob: -10.828057289123535
    10. '   ' → logprob: -11.328057289123535

Token 136: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0008049834286794066
    2. ' x' → logprob: -7.125804901123047
    3. '(x' → logprob: -16.125804901123047
    4. '	x' → logprob: -16.125804901123047
    5. '1' → logprob: -16.250804901123047
    6. '-x' → logprob: -16.250804901123047
    7. ' ' → logprob: -17.250804901123047
    8. ''x' → logprob: -17.250804901123047
    9. '(' → logprob: -17.375804901123047
    10. '"x' → logprob: -18.250804901123047

Token 137: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.0701940655708313
    2. ' -' → logprob: -2.6951940059661865
    3. '-' → logprob: -8.570194244384766
    4. '[' → logprob: -10.820194244384766
    5. '[-' → logprob: -10.820194244384766
    6. '-z' → logprob: -11.820194244384766
    7. ' ' → logprob: -11.945194244384766
    8. 'y' → logprob: -13.195194244384766
    9. '-x' → logprob: -13.195194244384766
    10. '+y' → logprob: -13.570194244384766

Token 138: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00021688752167392522
    2. '+x' → logprob: -9.125216484069824
    3. ' +' → logprob: -9.625216484069824
    4. '-z' → logprob: -10.375216484069824
    5. 'z' → logprob: -12.375216484069824
    6. '+[' → logprob: -13.500216484069824
    7. '[' → logprob: -13.875216484069824
    8. '[z' → logprob: -13.875216484069824
    9. '+
' → logprob: -14.000216484069824
    10. ' ' → logprob: -14.625216484069824

Token 139: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.05298424884676933
    2. ' z' → logprob: -3.0529842376708984
    3. '+' → logprob: -5.552984237670898
    4. '-z' → logprob: -8.052984237670898
    5. ''z' → logprob: -9.927984237670898
    6. ' +' → logprob: -10.177984237670898
    7. ' ' → logprob: -10.177984237670898
    8. '	z' → logprob: -10.302984237670898
    9. '  ' → logprob: -11.927984237670898
    10. '[z' → logprob: -12.427984237670898

Token 140: ' ]
' (ID: 10213)
  Prédit: ' ]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ]' → logprob: -0.2630980908870697
    2. ']' → logprob: -1.513098120689392
    3. ' ]
' → logprob: -5.263098239898682
    4. '   ' → logprob: -5.388098239898682
    5. ')' → logprob: -7.513098239898682
    6. ' )' → logprob: -7.638098239898682
    7. ']
' → logprob: -8.138097763061523
    8. ' )
' → logprob: -11.638097763061523
    9. ' ]

' → logprob: -12.138097763061523
    10. ' ' → logprob: -12.513097763061523

Token 141: '   ' (ID: 271)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.008225183002650738
    2. '   ' → logprob: -5.008224964141846
    3. ' X' → logprob: -6.508224964141846
    4. '[' → logprob: -12.008225440979004
    5. ' ' → logprob: -12.133225440979004
    6. '  ' → logprob: -12.758225440979004
    7. '(' → logprob: -14.758225440979004
    8. 'x' → logprob: -15.008225440979004
    9. '	X' → logprob: -15.008225440979004
    10. '_X' → logprob: -15.133225440979004

Token 142: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' (adapté à ' X') → logprob: -0.002564480062574148
    2. ' X' → logprob: -6.252564430236816
    3. '   ' → logprob: -7.377564430236816
    4. ' ' → logprob: -11.752564430236816
    5. '[' → logprob: -13.502564430236816
    6. '  ' → logprob: -14.752564430236816
    7. 'x' → logprob: -15.877564430236816
    8. '	X' → logprob: -15.877564430236816
    9. '_X' → logprob: -16.127565383911133
    10. '(' → logprob: -16.377565383911133

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.41866585687967e-06
    2. '7' → logprob: -11.875008583068848
    3. '```' → logprob: -14.375008583068848
    4. '6' → logprob: -15.500008583068848
    5. '.' → logprob: -16.12500762939453
    6. '[
' → logprob: -16.50000762939453
    7. ' [' → logprob: -16.62500762939453
    8. '.append' → logprob: -17.75000762939453
    9. '\[' → logprob: -17.75000762939453
    10. '`' → logprob: -17.87500762939453

Token 144: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.816093228830141e-06
    2. '6' → logprob: -13.50000286102295
    3. ' ' → logprob: -13.62500286102295
    4. '   ' → logprob: -17.000001907348633
    5. '  ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.250001907348633
    7. '-' → logprob: -17.375001907348633
    8. '７' → logprob: -17.750001907348633
    9. '۷' → logprob: -17.750001907348633
    10. ']' → logprob: -17.875001907348633

Token 145: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.03306356072425842
    2. ']+' → logprob: -3.7830636501312256
    3. ']' → logprob: -4.6580634117126465
    4. ']+=' → logprob: -8.408063888549805
    5. '.' → logprob: -10.408063888549805
    6. ' ].' → logprob: -11.408063888549805
    7. '   ' → logprob: -11.908063888549805
    8. '.append' → logprob: -12.033063888549805
    9. ''].' → logprob: -13.158063888549805
    10. ').' → logprob: -13.408063888549805

Token 146: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.00027444821898825467
    2. 'extend' → logprob: -8.375274658203125
    3. '.append' → logprob: -10.250274658203125
    4. ' append' → logprob: -12.375274658203125
    5. 'appen' → logprob: -13.125274658203125
    6. '	append' → logprob: -14.375274658203125
    7. 'app' → logprob: -14.625274658203125
    8. '+=' → logprob: -15.500274658203125
    9. '_append' → logprob: -15.875274658203125
    10. 'Append' → logprob: -15.875274658203125

Token 147: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.16024871170520782
    2. '(-' → logprob: -1.9102487564086914
    3. '(x' → logprob: -10.785248756408691
    4. '((-' → logprob: -13.785248756408691
    5. '(-(' → logprob: -13.910248756408691
    6. '(
' → logprob: -14.035248756408691
    7. ' (' → logprob: -15.535248756408691
    8. '((' → logprob: -15.660248756408691
    9. '-' → logprob: -16.160247802734375
    10. ' (-' → logprob: -16.410247802734375

Token 148: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6328142285346985
    2. '-x' → logprob: -0.7578142285346985
    3. '-z' → logprob: -9.757814407348633
    4. '(-' → logprob: -10.007814407348633
    5. ' ' → logprob: -10.132814407348633
    6. '-' → logprob: -10.257814407348633
    7. '   ' → logprob: -11.007814407348633
    8. '  ' → logprob: -12.007814407348633
    9. ' (-' → logprob: -12.132814407348633
    10. '-y' → logprob: -13.257814407348633

Token 149: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.130576806142926e-05
    2. ' x' → logprob: -10.375031471252441
    3. '	x' → logprob: -18.625030517578125
    4. ''x' → logprob: -19.250030517578125
    5. ' ' → logprob: -19.375030517578125
    6. '   ' → logprob: -19.500030517578125
    7. '(x' → logprob: -19.750030517578125
    8. '-x' → logprob: -20.000030517578125
    9. ')x' → logprob: -20.375030517578125
    10. '1' → logprob: -20.625030517578125

Token 150: '-y' (ID: 18102)
  Prédit: '-y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-y' → logprob: -0.001090447069145739
    2. 'y' → logprob: -7.3760905265808105
    3. ' -' → logprob: -7.8760905265808105
    4. '-' → logprob: -10.251090049743652
    5. '-z' → logprob: -10.376090049743652
    6. '```' → logprob: -12.501090049743652
    7. '   ' → logprob: -13.126090049743652
    8. ' ' → logprob: -13.376090049743652
    9. '_y' → logprob: -13.626090049743652
    10. ' y' → logprob: -13.876090049743652

Token 151: '-z' (ID: 16826)
  Prédit: '-z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-z' → logprob: -0.00035608073812909424
    2. ' -' → logprob: -8.37535572052002
    3. '-' → logprob: -9.12535572052002
    4. 'z' → logprob: -11.75035572052002
    5. ' ' → logprob: -12.75035572052002
    6. '   ' → logprob: -13.62535572052002
    7. '
' → logprob: -14.12535572052002
    8. '  ' → logprob: -14.37535572052002
    9. '```' → logprob: -14.50035572052002
    10. '-
' → logprob: -14.87535572052002

Token 152: ' )
' (ID: 3270)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007668029051274061
    2. ' )' → logprob: -4.8826680183410645
    3. ']' → logprob: -10.257668495178223
    4. ')
' → logprob: -11.632668495178223
    5. ')]' → logprob: -11.882668495178223
    6. '])' → logprob: -12.007668495178223
    7. '   ' → logprob: -13.757668495178223
    8. ' ]' → logprob: -13.882668495178223
    9. '）' → logprob: -14.132668495178223
    10. ' )
' → logprob: -14.882668495178223

Token 153: 'list' (ID: 2641)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.12511764466762543
    2. 'ans' → logprob: -3.500117540359497
    3. 'm' → logprob: -4.000117778778076
    4. 'dp' → logprob: -4.000117778778076
    5. 'for' → logprob: -4.500117778778076
    6. 's' → logprob: -5.000117778778076
    7. 'M' → logprob: -5.000117778778076
    8. 'res' → logprob: -5.250117778778076
    9. 'X' → logprob: -5.375117778778076
    10. 'd' → logprob: -6.250117778778076

Token 154: '(map' (ID: 16946)
  Prédit: '_max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_max' → logprob: -0.4518457055091858
    2. 'max' → logprob: -1.951845645904541
    3. 's' → logprob: -2.451845645904541
    4. '_lengths' → logprob: -3.451845645904541
    5. '(max' → logprob: -3.826845645904541
    6. '_' → logprob: -4.201845645904541
    7. '_sum' → logprob: -4.826845645904541
    8. '_scores' → logprob: -4.826845645904541
    9. '_values' → logprob: -4.826845645904541
    10. '_s' → logprob: -4.951845645904541

Token 155: '(lambda' (ID: 43341)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5565816760063171
    2. '(max' → logprob: -0.9315816760063171
    3. '(lambda' → logprob: -4.056581497192383
    4. '(sum' → logprob: -4.556581497192383
    5. '(sorted' → logprob: -6.181581497192383
    6. ' max' → logprob: -6.681581497192383
    7. 'max' → logprob: -7.431581497192383
    8. '(print' → logprob: -7.681581497192383
    9. '(abs' → logprob: -8.306581497192383
    10. '(min' → logprob: -8.431581497192383

Token 156: ' lst' (ID: 33384)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.5731743574142456
    2. ' v' → logprob: -1.9481743574142456
    3. ' l' → logprob: -2.323174476623535
    4. ' x' → logprob: -2.448174476623535
    5. ' L' → logprob: -2.448174476623535
    6. ' a' → logprob: -2.698174476623535
    7. ' s' → logprob: -2.948174476623535
    8. ' X' → logprob: -3.698174476623535
    9. ' max' → logprob: -4.198174476623535
    10. ' ' → logprob: -4.198174476623535

Token 157: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.053213633596897125
    2. ' :' → logprob: -3.053213596343994
    3. '(lst' → logprob: -6.678213596343994
    4. ' lst' → logprob: -7.053213596343994
    5. ':max' → logprob: -7.178213596343994
    6. 'lst' → logprob: -7.678213596343994
    7. ':list' → logprob: -7.803213596343994
    8. ':l' → logprob: -8.928214073181152
    9. ' max' → logprob: -9.428214073181152
    10. ' ' → logprob: -9.553214073181152

Token 158: ' lst' (ID: 33384)
  Prédit: 'lst'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lst' → logprob: -0.39075368642807007
    2. ' lst' → logprob: -1.2657537460327148
    3. 'X' → logprob: -4.140753746032715
    4. ' max' → logprob: -5.015753746032715
    5. 'max' → logprob: -5.390753746032715
    6. ' X' → logprob: -5.390753746032715
    7. 'print' → logprob: -5.640753746032715
    8. ' ' → logprob: -6.515753746032715
    9. 'sorted' → logprob: -6.515753746032715
    10. ' print' → logprob: -7.140753746032715

Token 159: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.018448878079652786
    2. '.' → logprob: -4.018448829650879
    3. '.append' → logprob: -8.768448829650879
    4. ' .' → logprob: -10.143448829650879
    5. 'sort' → logprob: -10.518448829650879
    6. '.extend' → logprob: -10.518448829650879
    7. '.max' → logprob: -10.643448829650879
    8. '.reverse' → logprob: -12.268448829650879
    9. ':' → logprob: -12.393448829650879
    10. '.__' → logprob: -12.393448829650879

Token 160: '(reverse' (ID: 110806)
  Prédit: '(),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(),' → logprob: -0.0060086678713560104
    2. '()' → logprob: -5.131008625030518
    3. ',' → logprob: -10.631009101867676
    4. ' (),' → logprob: -11.006009101867676
    5. '(),
' → logprob: -11.381009101867676
    6. '()))' → logprob: -12.006009101867676
    7. '(),"' → logprob: -12.256009101867676
    8. '()
' → logprob: -12.381009101867676
    9. '(' → logprob: -12.381009101867676
    10. '()),' → logprob: -12.756009101867676

Token 161: '=' (ID: 28)
  Prédit: '=True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.19178199768066406
    2. '(True' → logprob: -1.941781997680664
    3. ',' → logprob: -4.066781997680664
    4. '),' → logprob: -4.691781997680664
    5. 'True' → logprob: -6.066781997680664
    6. ')' → logprob: -6.691781997680664
    7. ')),' → logprob: -8.191781997680664
    8. '()' → logprob: -8.316781997680664
    9. '(),' → logprob: -8.816781997680664
    10. '   ' → logprob: -9.066781997680664

Token 162: '1' (ID: 16)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0001831565605243668
    2. ' True' → logprob: -8.75018310546875
    3. '1' → logprob: -11.12518310546875
    4. '(True' → logprob: -11.87518310546875
    5. ')' → logprob: -14.00018310546875
    6. '=True' → logprob: -14.25018310546875
    7. '
' → logprob: -15.00018310546875
    8. 'Tr' → logprob: -15.50018310546875
    9. '   ' → logprob: -15.62518310546875
    10. 'False' → logprob: -15.87518310546875

Token 163: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.018192552030086517
    2. ')' → logprob: -4.018192768096924
    3. ' ),' → logprob: -10.268192291259766
    4. ',' → logprob: -13.018192291259766
    5. ')))' → logprob: -13.643192291259766
    6. '),(' → logprob: -14.268192291259766
    7. ')
' → logprob: -14.643192291259766
    8. ''),' → logprob: -14.643192291259766
    9. '()),' → logprob: -15.018192291259766
    10. ' )' → logprob: -15.018192291259766

Token 164: ' X' (ID: 2127)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.020543403923511505
    2. ' X' → logprob: -3.895543336868286
    3. ' ' → logprob: -13.895543098449707
    4. '(X' → logprob: -15.520543098449707
    5. '   ' → logprob: -15.645543098449707
    6. '  ' → logprob: -16.020544052124023
    7. '[X' → logprob: -16.645544052124023
    8. '	X' → logprob: -16.770544052124023
    9. '[' → logprob: -17.395544052124023
    10. ')' → logprob: -18.645544052124023

Token 165: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0007312587113119662
    2. ')' → logprob: -7.250731468200684
    3. '))
' → logprob: -11.000731468200684
    4. ' ))' → logprob: -12.750731468200684
    5. ')))' → logprob: -13.875731468200684
    6. ' ' → logprob: -15.500731468200684
    7. '));' → logprob: -15.750731468200684
    8. '))

' → logprob: -16.000730514526367
    9. '()))' → logprob: -16.125730514526367
    10. ')
' → logprob: -16.500730514526367

Token 166: 'r' (ID: 81)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.4477463364601135
    2. 'dp' → logprob: -2.6977462768554688
    3. 'res' → logprob: -2.9477462768554688
    4. 's' → logprob: -2.9477462768554688
    5. 'max' → logprob: -3.0727462768554688
    6. 'm' → logprob: -3.4477462768554688
    7. 'S' → logprob: -3.9477462768554688
    8. 'answer' → logprob: -3.9477462768554688
    9. 'p' → logprob: -4.947746276855469
    10. 'M' → logprob: -4.947746276855469

Token 167: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8295387029647827
    2. 'es' → logprob: -0.8295387029647827
    3. ' =' → logprob: -2.8295388221740723
    4. '=[' → logprob: -4.204538822174072
    5. '=s' → logprob: -4.704538822174072
    6. 's' → logprob: -4.829538822174072
    7. '=
' → logprob: -5.329538822174072
    8. 'r' → logprob: -5.579538822174072
    9. '=r' → logprob: -5.579538822174072
    10. '=[]
' → logprob: -5.829538822174072

Token 168: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.297478199005127
    2. '-' → logprob: -1.672478199005127
    3. 'X' → logprob: -1.922478199005127
    4. 'float' → logprob: -2.297478199005127
    5. '10' → logprob: -2.422478199005127
    6. '0' → logprob: -2.547478199005127
    7. '[max' → logprob: -3.547478199005127
    8. '[' → logprob: -3.672478199005127
    9. '[-' → logprob: -3.672478199005127
    10. '-X' → logprob: -3.922478199005127

Token 169: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05187543109059334
    2. '
' → logprob: -3.051875352859497
    3. ' for' → logprob: -5.801875591278076
    4. '\n' → logprob: -9.551875114440918
    5. 'r' → logprob: -9.926875114440918
    6. ' 
' → logprob: -10.676875114440918
    7. ',' → logprob: -10.926875114440918
    8. '
' → logprob: -11.301875114440918
    9. '' → logprob: -11.426875114440918
    10. '

' → logprob: -11.801875114440918

Token 170: 'i' (ID: 72)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00013655527436640114
    2. ' for' → logprob: -9.125136375427246
    3. 'range' → logprob: -11.125136375427246
    4. '_' → logprob: -11.750136375427246
    5. 'r' → logprob: -12.875136375427246
    6. 'while' → logprob: -14.250136375427246
    7. '
' → logprob: -14.875136375427246
    8. 'b' → logprob: -15.500136375427246
    9. '_
' → logprob: -15.750136375427246
    10. '[' → logprob: -16.250137329101562

Token 171: '=' (ID: 28)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.01225390937179327
    2. '=' → logprob: -4.637253761291504
    3. ' n' → logprob: -7.512253761291504
    4. 'nd' → logprob: -7.762253761291504
    5. ' ' → logprob: -8.012253761291504
    6. ' =' → logprob: -8.012253761291504
    7. 'nt' → logprob: -8.512253761291504
    8. ',' → logprob: -8.637253761291504
    9. 'for' → logprob: -8.762253761291504
    10. 's' → logprob: -9.137253761291504

Token 172: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.36131107807159424
    2. '7' → logprob: -1.3613110780715942
    3. '8' → logprob: -3.1113109588623047
    4. '1' → logprob: -6.236310958862305
    5. 'b' → logprob: -8.361310958862305
    6. ' ' → logprob: -9.236310958862305
    7. '100' → logprob: -10.486310958862305
    8. 'a' → logprob: -10.611310958862305
    9. '10' → logprob: -12.361310958862305
    10. '9' → logprob: -12.361310958862305

Token 173: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04255649074912071
    2. '
' → logprob: -4.542556285858154
    3. ' while' → logprob: -4.542556285858154
    4. 'for' → logprob: -4.792556285858154
    5. '<|end|>' → logprob: -5.417556285858154
    6. 'b' → logprob: -6.042556285858154
    7. ',' → logprob: -6.792556285858154
    8. ' ' → logprob: -7.167556285858154
    9. 's' → logprob: -7.292556285858154
    10. 'r' → logprob: -7.417556285858154

Token 174: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.012279941700398922
    2. 'for' → logprob: -5.387279987335205
    3. ' while' → logprob: -5.512279987335205
    4. '
' → logprob: -6.637279987335205
    5. 'r' → logprob: -7.137279987335205
    6. 'b' → logprob: -7.762279987335205
    7. '7' → logprob: -8.137279510498047
    8. ',' → logprob: -9.012279510498047
    9. '8' → logprob: -9.262279510498047
    10. ' ' → logprob: -9.762279510498047

Token 175: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5770919919013977
    2. ' i' → logprob: -0.8270919919013977
    3. 'b' → logprob: -7.452092170715332
    4. ' b' → logprob: -8.202092170715332
    5. ' ' → logprob: -9.202092170715332
    6. 'r' → logprob: -9.827092170715332
    7. ' r' → logprob: -10.202092170715332
    8. 'a' → logprob: -10.327092170715332
    9. ' a' → logprob: -11.202092170715332
    10. '   ' → logprob: -11.452092170715332

Token 176: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18467490375041962
    2. '<' → logprob: -1.809674859046936
    3. '<b' → logprob: -5.6846747398376465
    4. '<len' → logprob: -6.9346747398376465
    5. '<a' → logprob: -7.8096747398376465
    6. ' ' → logprob: -10.309675216674805
    7. '<n' → logprob: -10.559675216674805
    8. 'a' → logprob: -10.684675216674805
    9. ' a' → logprob: -10.934675216674805
    10. '<=' → logprob: -11.434675216674805

Token 177: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -0.046919334679841995
    2. 'len' → logprob: -3.921919345855713
    3. 'b' → logprob: -4.046919345855713
    4. 'a' → logprob: -4.796919345855713
    5. ' len' → logprob: -9.046918869018555
    6. ' ' → logprob: -9.296918869018555
    7. '(' → logprob: -9.921918869018555
    8. ' b' → logprob: -11.671918869018555
    9. '7' → logprob: -11.921918869018555
    10. '(len' → logprob: -12.171918869018555

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28598353266716003
    2. ':
' → logprob: -1.4109835624694824
    3. ' and' → logprob: -5.660983562469482
    4. 'and' → logprob: -7.285983562469482
    5. ' :
' → logprob: -8.160983085632324
    6. ' :' → logprob: -8.410983085632324
    7. '   ' → logprob: -9.660983085632324
    8. ':r' → logprob: -10.660983085632324
    9. ' ' → logprob: -10.910983085632324
    10. 'r' → logprob: -11.660983085632324

Token 179: '   ' (ID: 271)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -1.4150981903076172
    2. 'j' → logprob: -1.5400981903076172
    3. ' s' → logprob: -2.165098190307617
    4. '   ' → logprob: -2.165098190307617
    5. 's' → logprob: -2.915098190307617
    6. 'r' → logprob: -3.165098190307617
    7. 'm' → logprob: -3.165098190307617
    8. ' r' → logprob: -3.790098190307617
    9. 'v' → logprob: -4.165098190307617
    10. 'n' → logprob: -4.415098190307617

Token 180: ' s' (ID: 265)
  Prédit: 'X'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -1.2285491228103638
    2. 's' (adapté à ' s') → logprob: -1.3535491228103638
    3. 'r' → logprob: -2.603549003601074
    4. ' s' → logprob: -3.103549003601074
    5. 'j' → logprob: -3.228549003601074
    6. 'S' → logprob: -3.353549003601074
    7. 'p' → logprob: -3.728549003601074
    8. 'tmp' → logprob: -3.978549003601074
    9. 'sum' → logprob: -4.103549003601074
    10. 'Y' → logprob: -4.103549003601074

Token 181: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4619363844394684
    2. ' =' → logprob: -1.211936354637146
    3. 'um' → logprob: -3.2119364738464355
    4. '=X' → logprob: -3.5869364738464355
    5. ' ' → logprob: -6.2119364738464355
    6. '=i' → logprob: -7.5869364738464355
    7. '=sum' → logprob: -7.9619364738464355
    8. 'ums' → logprob: -8.586935997009277
    9. '=x' → logprob: -8.586935997009277
    10. '=s' → logprob: -8.711935997009277

Token 182: ' ' (ID: 220)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.02474265918135643
    2. '0' → logprob: -4.399742603302002
    3. ' sum' → logprob: -4.649742603302002
    4. 'X' → logprob: -6.024742603302002
    5. ' ' → logprob: -9.52474308013916
    6. ' X' → logprob: -9.77474308013916
    7. '(sum' → logprob: -11.89974308013916
    8. 'max' → logprob: -12.14974308013916
    9. 'abs' → logprob: -12.52474308013916
    10. '1' → logprob: -12.64974308013916

Token 183: '0' (ID: 15)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.015769684687256813
    2. '0' → logprob: -4.2657694816589355
    3. 'X' → logprob: -6.5157694816589355
    4. ' sum' → logprob: -9.640769958496094
    5. 'max' → logprob: -10.890769958496094
    6. ' ' → logprob: -12.390769958496094
    7. 'sorted' → logprob: -12.390769958496094
    8. '(sum' → logprob: -12.515769958496094
    9. 'abs' → logprob: -12.765769958496094
    10. '1' → logprob: -13.015769958496094

Token 184: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8671889901161194
    2. 'for' → logprob: -0.9921889901161194
    3. '
' → logprob: -1.7421889305114746
    4. 'j' → logprob: -3.8671889305114746
    5. ' for' → logprob: -5.242188930511475
    6. 'n' → logprob: -6.117188930511475
    7. 'while' → logprob: -6.367188930511475
    8. '    
' → logprob: -6.867188930511475
    9. ',' → logprob: -7.742188930511475
    10. 'k' → logprob: -7.867188930511475

Token 185: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27511370182037354
    2. '
' → logprob: -2.025113582611084
    3. 'for' → logprob: -3.275113582611084
    4. 'j' → logprob: -3.650113582611084
    5. 'while' → logprob: -4.275113582611084
    6. ' for' → logprob: -5.025113582611084
    7. 'b' → logprob: -6.025113582611084
    8. 'and' → logprob: -6.025113582611084
    9. 't' → logprob: -6.275113582611084
    10. ',' → logprob: -6.275113582611084

Token 186: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00090061966329813
    2. 'j' → logprob: -7.625900745391846
    3. 'while' → logprob: -8.000900268554688
    4. '_' → logprob: -11.375900268554688
    5. 's' → logprob: -11.375900268554688
    6. 'b' → logprob: -11.500900268554688
    7. 'r' → logprob: -11.750900268554688
    8. ' for' → logprob: -12.000900268554688
    9. '   ' → logprob: -12.125900268554688
    10. 'range' → logprob: -12.125900268554688

Token 187: ' e' (ID: 319)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.08057920634746552
    2. ' j' → logprob: -2.5805792808532715
    3. 'k' → logprob: -7.5805792808532715
    4. '_j' → logprob: -7.9555792808532715
    5. 'i' → logprob: -8.580578804016113
    6. 'idx' → logprob: -8.705578804016113
    7. '_' → logprob: -8.955578804016113
    8. 'x' → logprob: -9.580578804016113
    9. 'n' → logprob: -10.330578804016113
    10. 'ii' → logprob: -10.455578804016113

Token 188: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02242238260805607
    2. 'in' → logprob: -3.8974223136901855
    3. ' X' → logprob: -6.8974223136901855
    4. 'X' → logprob: -7.5224223136901855
    5. ' range' → logprob: -9.522422790527344
    6. '  ' → logprob: -9.522422790527344
    7. 'range' → logprob: -9.522422790527344
    8. ' ' → logprob: -10.397422790527344
    9. ',' → logprob: -10.522422790527344
    10. '   ' → logprob: -11.272422790527344

Token 189: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.3730676472187042
    2. 'X' → logprob: -1.3730676174163818
    3. ' range' → logprob: -2.873067617416382
    4. ' X' → logprob: -6.623067855834961
    5. 'list' → logprob: -9.623067855834961
    6. ' ' → logprob: -10.498067855834961
    7. '(range' → logprob: -10.873067855834961
    8. '   ' → logprob: -10.998067855834961
    9. '  ' → logprob: -11.623067855834961
    10. 'r' → logprob: -11.998067855834961

Token 190: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.011617477983236313
    2. 'b' → logprob: -4.636617660522461
    3. '(' → logprob: -6.511617660522461
    4. '   ' → logprob: -8.511617660522461
    5. '	b' → logprob: -10.136617660522461
    6. '1' → logprob: -10.261617660522461
    7. '(a' → logprob: -10.886617660522461
    8. ' b' → logprob: -11.136617660522461
    9. '(i' → logprob: -11.261617660522461
    10. '    ' → logprob: -11.761617660522461

Token 191: '):' (ID: 3127)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.794074535369873
    2. '+i' → logprob: -1.419074535369873
    3. '):' → logprob: -1.544074535369873
    4. '   ' → logprob: -2.919074535369873
    5. ' +' → logprob: -4.169074535369873
    6. '+r' → logprob: -5.169074535369873
    7. '+' → logprob: -5.419074535369873
    8. ',i' → logprob: -6.294074535369873
    9. ' ):
' → logprob: -6.294074535369873
    10. ')' → logprob: -6.669074535369873

Token 192: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.44158774614334106
    2. 's' → logprob: -1.5665876865386963
    3. '       ' → logprob: -2.3165876865386963
    4. '   ' → logprob: -3.3165876865386963
    5. ' ' → logprob: -5.566587924957275
    6. 'r' → logprob: -5.691587924957275
    7. '<|end|>' → logprob: -6.316587924957275
    8. ' r' → logprob: -6.441587924957275
    9. 'e' → logprob: -7.316587924957275
    10. '    ' → logprob: -7.691587924957275

Token 193: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.4744528830051422
    2. ' +=' → logprob: -0.9744528532028198
    3. '=' → logprob: -8.72445297241211
    4. '+' → logprob: -9.97445297241211
    5. ']+=' → logprob: -10.09945297241211
    6. ' =' → logprob: -10.22445297241211
    7. '   ' → logprob: -10.34945297241211
    8. '+=(' → logprob: -11.22445297241211
    9. ' -=' → logprob: -11.84945297241211
    10. ' +' → logprob: -11.84945297241211

Token 194: 'X' (ID: 55)
  Prédit: 'X'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'X' → logprob: -0.002813432365655899
    2. ' X' → logprob: -5.877813339233398
    3. ' ' → logprob: -12.252813339233398
    4. 'max' → logprob: -13.877813339233398
    5. '   ' → logprob: -14.377813339233398
    6. 'e' → logprob: -14.752813339233398
    7. '1' → logprob: -14.877813339233398
    8. '  ' → logprob: -15.252813339233398
    9. 'Xs' → logprob: -15.252813339233398
    10. '+' → logprob: -15.502813339233398

Token 195: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.6286106983898208e-05
    2. '[' → logprob: -11.500016212463379
    3. 'i' → logprob: -12.375016212463379
    4. '[
' → logprob: -14.250016212463379
    5. '[I' → logprob: -14.750016212463379
    6. '```' → logprob: -15.250016212463379
    7. ' [' → logprob: -16.000017166137695
    8. '[s' → logprob: -16.375017166137695
    9. '[j' → logprob: -16.500017166137695
    10. '[e' → logprob: -17.000017166137695

Token 196: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0018888992490246892
    2. '[e' → logprob: -7.251888751983643
    3. 'e' → logprob: -7.376888751983643
    4. ' ][' → logprob: -8.2518892288208
    5. '   ' → logprob: -9.3768892288208
    6. ']' → logprob: -9.6268892288208
    7. '[' → logprob: -10.5018892288208
    8. 's' → logprob: -11.1268892288208
    9. ' ' → logprob: -11.1268892288208
    10. '
' → logprob: -11.2518892288208

Token 197: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -2.339278580620885e-06
    2. ' e' → logprob: -13.125001907348633
    3. '
' → logprob: -15.375001907348633
    4. '	e' → logprob: -17.250001907348633
    5. ' ' → logprob: -17.750001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '```' → logprob: -18.125001907348633
    8. 's' → logprob: -18.500001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'er' → logprob: -19.125001907348633

Token 198: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002625119872391224
    2. ']
' → logprob: -6.252624988555908
    3. '])' → logprob: -7.877624988555908
    4. ' ]' → logprob: -8.252625465393066
    5. ']*' → logprob: -11.127625465393066
    6. ')]' → logprob: -11.627625465393066
    7. ']>' → logprob: -11.627625465393066
    8. ']

' → logprob: -12.127625465393066
    9. ']>=' → logprob: -12.627625465393066
    10. '];' → logprob: -13.002625465393066

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32249441742897034
    2. '
' → logprob: -1.322494387626648
    3. '    
' → logprob: -5.8224945068359375
    4. '   
' → logprob: -6.3224945068359375
    5. '  
' → logprob: -6.5724945068359375
    6. '
' → logprob: -6.9474945068359375
    7. '  ' → logprob: -7.3224945068359375
    8. ',' → logprob: -8.447494506835938
    9. ' ' → logprob: -8.572494506835938
    10. ' 
' → logprob: -8.697494506835938

Token 200: ' if' (ID: 538)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1356031894683838
    2. 'if' (adapté à ' if') → logprob: -1.1356031894683838
    3. '   ' → logprob: -1.6356031894683838
    4. '
' → logprob: -2.760603189468384
    5. ' if' → logprob: -3.135603189468384
    6. 'i' → logprob: -3.385603189468384
    7. 'max' → logprob: -4.760602951049805
    8. '+' → logprob: -5.635602951049805
    9. 's' → logprob: -6.135602951049805
    10. ' r' → logprob: -6.385602951049805

Token 201: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.043645069003105164
    2. 's' → logprob: -3.168645143508911
    3. ' r' → logprob: -7.793644905090332
    4. 'r' → logprob: -9.293644905090332
    5. ' ' → logprob: -9.293644905090332
    6. ' abs' → logprob: -11.543644905090332
    7. '   ' → logprob: -11.918644905090332
    8. ' ' → logprob: -12.043644905090332
    9. 'abs' → logprob: -12.418644905090332
    10. ' b' → logprob: -12.731144905090332

Token 202: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.32085928320884705
    2. ' >' → logprob: -1.3208593130111694
    3. '>=' → logprob: -5.070859432220459
    4. ' >=' → logprob: -6.945859432220459
    5. ' ' → logprob: -8.1958589553833
    6. '>s' → logprob: -10.9458589553833
    7. '<' → logprob: -11.5708589553833
    8. '+' → logprob: -12.1958589553833
    9. ' >
' → logprob: -13.0708589553833
    10. '<=' → logprob: -13.1958589553833

Token 203: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -8.864272967912257e-05
    2. ' r' → logprob: -9.375088691711426
    3. '   ' → logprob: -13.250088691711426
    4. '
' → logprob: -13.875088691711426
    5. ' ' → logprob: -14.875088691711426
    6. '0' → logprob: -15.125088691711426
    7. '	r' → logprob: -15.500088691711426
    8. '  ' → logprob: -16.12508773803711
    9. '
' → logprob: -16.75008773803711
    10. '```' → logprob: -17.12508773803711

Token 204: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31355220079421997
    2. ':
' → logprob: -1.3135521411895752
    3. ':r' → logprob: -8.438551902770996
    4. ' :
' → logprob: -10.688551902770996
    5. 'r' → logprob: -10.688551902770996
    6. ' :' → logprob: -11.563551902770996
    7. ':
' → logprob: -11.563551902770996
    8. '   ' → logprob: -12.438551902770996
    9. ':

' → logprob: -13.438551902770996
    10. ' r' → logprob: -13.563551902770996

Token 205: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.045016586780548096
    2. 'r' → logprob: -3.1700165271759033
    3. '       ' → logprob: -6.545016765594482
    4. '   ' → logprob: -7.545016765594482
    5. '
' → logprob: -10.920016288757324
    6. '    ' → logprob: -11.170016288757324
    7. '	r' → logprob: -12.045016288757324
    8. ' ' → logprob: -12.795016288757324
    9. ' s' → logprob: -12.920016288757324
    10. '
' → logprob: -13.670016288757324

Token 206: '=s' (ID: 32455)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3715536594390869
    2. ' =' → logprob: -1.371553659439087
    3. '=s' → logprob: -2.871553659439087
    4. ' ' → logprob: -11.996553421020508
    5. '=r' → logprob: -11.996553421020508
    6. ' s' → logprob: -14.246553421020508
    7. '=i' → logprob: -14.996553421020508
    8. 's' → logprob: -15.996553421020508
    9. '.=' → logprob: -16.246553421020508
    10. '＝' → logprob: -16.246553421020508

Token 207: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.17216065526008606
    2. '
' → logprob: -2.1721606254577637
    3. 'i' → logprob: -3.5471606254577637
    4. ' i' → logprob: -4.422160625457764
    5. ' 
' → logprob: -6.797160625457764
    6. '    
' → logprob: -7.422160625457764
    7. '  
' → logprob: -7.547160625457764
    8. ' ' → logprob: -7.797160625457764
    9. '  ' → logprob: -8.047161102294922
    10. '```' → logprob: -8.922161102294922

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11774703115224838
    2. ' i' → logprob: -2.3677470684051514
    3. 'i' → logprob: -4.617746829986572
    4. '
' → logprob: -5.367746829986572
    5. ' ' → logprob: -6.992746829986572
    6. ' 
' → logprob: -7.492746829986572
    7. '  ' → logprob: -7.992746829986572
    8. '    
' → logprob: -8.36774730682373
    9. ',' → logprob: -8.49274730682373
    10. ',i' → logprob: -8.86774730682373

Token 209: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.3944666087627411
    2. ' i' → logprob: -1.1444666385650635
    3. '   ' → logprob: -4.894466400146484
    4. '
' → logprob: -10.019466400146484
    5. ' ' → logprob: -11.519466400146484
    6. '  ' → logprob: -11.644466400146484
    7. ' 
' → logprob: -12.144466400146484
    8. ',i' → logprob: -12.394466400146484
    9. '	i' → logprob: -13.519466400146484
    10. ',' → logprob: -13.769466400146484

Token 210: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.010051064193248749
    2. '+' → logprob: -4.635051250457764
    3. ' +=' → logprob: -8.260050773620605
    4. '=' → logprob: -11.260050773620605
    5. '+="' → logprob: -11.760050773620605
    6. '++' → logprob: -12.010050773620605
    7. '+='' → logprob: -12.385050773620605
    8. '<|end|>' → logprob: -12.760050773620605
    9. '+
' → logprob: -13.760050773620605
    10. '+++' → logprob: -14.760050773620605

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.75001335144043
    4. '```' → logprob: -17.37501335144043
    5. '１' → logprob: -17.87501335144043
    6. '  ' → logprob: -18.62501335144043
    7. '
' → logprob: -18.68751335144043
    8. '+' → logprob: -19.62501335144043
    9. '	' → logprob: -19.93751335144043
    10. '۱' → logprob: -20.12501335144043

Token 212: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.273621405242011e-05
    2. ' print' → logprob: -10.500032424926758
    3. '
' → logprob: -12.375032424926758
    4. '```' → logprob: -14.875032424926758
    5. ' 
' → logprob: -15.750032424926758
    6. '    
' → logprob: -16.250032424926758
    7. 'r' → logprob: -16.500032424926758
    8. '  
' → logprob: -17.000032424926758
    9. '+' → logprob: -17.125032424926758
    10. '#print' → logprob: -17.375032424926758

Token 213: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.27099974633893e-05
    2. ' print' → logprob: -11.375012397766113
    3. '```' → logprob: -14.500012397766113
    4. '
' → logprob: -15.375012397766113
    5. 'r' → logprob: -15.625012397766113
    6. 'pr' → logprob: -16.87501335144043
    7. ' 
' → logprob: -17.37501335144043
    8. 'for' → logprob: -17.50001335144043
    9. '    
' → logprob: -17.50001335144043
    10. 'p' → logprob: -17.75001335144043

Token 214: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.06196891888976097
    2. '(' → logprob: -2.8119688034057617
    3. '()' → logprob: -14.561968803405762
    4. 'r' → logprob: -15.311968803405762
    5. '(max' → logprob: -15.311968803405762
    6. '(
' → logprob: -15.936968803405762
    7. '('' → logprob: -16.311969757080078
    8. ' (' → logprob: -16.436969757080078
    9. '((' → logprob: -17.686969757080078
    10. '(f' → logprob: -18.561969757080078

Token 215: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.45848218582978e-06
    2. ' )' → logprob: -13.12500286102295
    3. '))' → logprob: -15.50000286102295
    4. ')
' → logprob: -16.875001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '`)' → logprob: -18.250001907348633
    7. ')}' → logprob: -19.125001907348633
    8. '+' → logprob: -19.125001907348633
    9. '')' → logprob: -19.125001907348633
    10. ')#' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 213
Tokens correctement prédits (1ère position, stricte): 96
Tokens correctement prédits (1ère position, avec adaptation): 106
Tokens correctement prédits (top 10): 186
Précision stricte (1ère position): 45.07%
Précision adaptée (1ère position): 49.77%
Précision (top 10): 87.32%
================================================================================
