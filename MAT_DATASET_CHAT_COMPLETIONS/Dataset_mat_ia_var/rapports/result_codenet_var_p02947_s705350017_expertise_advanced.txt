================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:49:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import re
from collections import Counter
from math import ceil, sqrt, hypot, factorial, pi, sin, cos, radians
from itertools import permutations, combinations, product
from operator import itemgetter, mul
from string import ascii_lowercase, ascii_uppercase, digits
from functools import reduce
from fractions import Fraction
from bisect import bisect
from typing import List

input = sys.stdin.readline
def INT() -> int: return int(input())
def MAP(): return map(int, input().split())
def LIST() -> List[int]: return list(map(int, input().split()))

sys.setrecursionlimit(1 << 25)
INF = float('inf')
mod = 10 ** 9 + 7

N = INT()
sigs = (''.join(sorted(input().strip())) for _ in range(N))
ctr = Counter(sigs)
print(sum(n * (n-1) // 2 for n in ctr.values()))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2973678708076477
    2. '\n' → logprob: -1.547367811203003
    3. '<|end|>' → logprob: -3.797367811203003
    4. '\' → logprob: -4.922368049621582
    5. 'newline' → logprob: -5.672368049621582
    6. 'import' → logprob: -5.672368049621582
    7. '<|end|>' → logprob: -6.047368049621582
    8. '
' → logprob: -6.922368049621582
    9. '```' → logprob: -6.922368049621582
    10. '' → logprob: -7.547368049621582

Token 4: ' re' (ID: 322)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -7.755678961984813e-05
    2. 'os' → logprob: -9.500077247619629
    3. ' math' → logprob: -13.625077247619629
    4. ' re' → logprob: -14.500077247619629
    5. ' json' → logprob: -15.125077247619629
    6. '"os' → logprob: -15.375077247619629
    7. '_os' → logprob: -16.125078201293945
    8. ' io' → logprob: -16.375078201293945
    9. ' ' → logprob: -16.375078201293945
    10. '	os' → logprob: -17.000078201293945

Token 5: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.05587988719344139
    2. '\' → logprob: -4.180880069732666
    3. 'import' → logprob: -4.430880069732666
    4. '.' → logprob: -4.930880069732666
    5. '```' → logprob: -5.180880069732666
    6. '' → logprob: -6.055880069732666
    7. '[' → logprob: -6.055880069732666
    8. '<|end|>' → logprob: -6.055880069732666
    9. ',' → logprob: -6.680880069732666
    10. '
' → logprob: -6.805880069732666

Token 6: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.23113898932933807
    2. 'import' → logprob: -2.4811389446258545
    3. '```' → logprob: -3.1061389446258545
    4. '[' → logprob: -4.106139183044434
    5. '\' → logprob: -4.356139183044434
    6. '.' → logprob: -4.856139183044434
    7. '\b' → logprob: -5.106139183044434
    8. '
' → logprob: -5.231139183044434
    9. 'def' → logprob: -5.231139183044434
    10. '^' → logprob: -5.231139183044434

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.4114430248737335
    2. ' os' → logprob: -1.6614429950714111
    3. ' typing' → logprob: -2.286442995071411
    4. 'collections' → logprob: -3.536442995071411
    5. ' pathlib' → logprob: -5.16144323348999
    6. 'os' → logprob: -5.66144323348999
    7. ' io' → logprob: -6.53644323348999
    8. ' math' → logprob: -6.78644323348999
    9. ' datetime' → logprob: -7.16144323348999
    10. ' ' → logprob: -7.16144323348999

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5818374752998352
    2. ' import' → logprob: -0.8318374752998352
    3. '.' → logprob: -5.3318376541137695
    4. ' ' → logprob: -7.9568376541137695
    5. ' defaultdict' → logprob: -8.33183765411377
    6. '<|end|>' → logprob: -9.20683765411377
    7. '```' → logprob: -9.20683765411377
    8. '.Counter' → logprob: -9.95683765411377
    9. 'abc' → logprob: -10.45683765411377
    10. '_' → logprob: -10.70683765411377

Token 9: ' Counter' (ID: 32251)
  Prédit: ' defaultdict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.13095378875732422
    2. ' abc' → logprob: -2.880953788757324
    3. ' deque' → logprob: -3.130953788757324
    4. 'deque' → logprob: -4.380953788757324
    5. ' named' → logprob: -5.505953788757324
    6. ' Counter' → logprob: -6.005953788757324
    7. 'abc' → logprob: -6.255953788757324
    8. 'default' → logprob: -7.380953788757324
    9. 'named' → logprob: -7.630953788757324
    10. ' Ordered' → logprob: -7.755953788757324

Token 10: '
' (ID: 198)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.17190954089164734
    2. 'import' → logprob: -2.2969095706939697
    3. '
' → logprob: -4.046909332275391
    4. '\' → logprob: -4.171909332275391
    5. '```' → logprob: -4.421909332275391
    6. '

' → logprob: -5.796909332275391
    7. 'newline' → logprob: -6.046909332275391
    8. ',' → logprob: -7.046909332275391
    9. '<|end|>' → logprob: -7.046909332275391
    10. '' → logprob: -7.171909332275391

Token 11: 'from' (ID: 2845)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.15698513388633728
    2. 'import' → logprob: -3.03198504447937
    3. '
' → logprob: -3.40698504447937
    4. '```' → logprob: -3.40698504447937
    5. 'def' → logprob: -4.406985282897949
    6. '

' → logprob: -5.406985282897949
    7. '\' → logprob: -5.656985282897949
    8. 'newline' → logprob: -6.281985282897949
    9. '`' → logprob: -6.781985282897949
    10. '``' → logprob: -6.906985282897949

Token 12: ' math' (ID: 13324)
  Prédit: ' typing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' typing' → logprob: -0.8315288424491882
    2. ' itertools' → logprob: -0.8315288424491882
    3. ' math' → logprob: -3.206528902053833
    4. 'typing' → logprob: -3.956528902053833
    5. ' pathlib' → logprob: -4.331528663635254
    6. ' ' → logprob: -4.581528663635254
    7. ' string' → logprob: -4.706528663635254
    8. 'math' → logprob: -5.206528663635254
    9. ' os' → logprob: -5.206528663635254
    10. 'io' → logprob: -5.456528663635254

Token 13: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.06569845974445343
    2. ' ' → logprob: -3.1906983852386475
    3. 'import' → logprob: -3.8156983852386475
    4. '.' → logprob: -8.315698623657227
    5. '<|end|>' → logprob: -9.940698623657227
    6. ' im' → logprob: -10.565698623657227
    7. '	import' → logprob: -10.565698623657227
    8. ' ```' → logprob: -11.315698623657227
    9. '<|end|>' → logprob: -11.690698623657227
    10. ' ' → logprob: -11.690698623657227

Token 14: ' ceil' (ID: 35964)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.8739068508148193
    2. 'sqrt' → logprob: -1.1239068508148193
    3. ' sqrt' → logprob: -1.8739068508148193
    4. ' log' → logprob: -2.6239068508148193
    5. ' ceil' → logprob: -4.498907089233398
    6. 'ceil' → logprob: -4.623907089233398
    7. 'import' → logprob: -5.873907089233398
    8. ' inf' → logprob: -6.498907089233398
    9. ' factorial' → logprob: -6.498907089233398
    10. '```' → logprob: -6.873907089233398

Token 15: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6073999404907227
    2. '
' → logprob: -1.2323999404907227
    3. '\n' → logprob: -2.6073999404907227
    4. '#' → logprob: -3.7323999404907227
    5. '```' → logprob: -4.357399940490723
    6. 'def' → logprob: -4.357399940490723
    7. 'import' → logprob: -4.482399940490723
    8. '' → logprob: -4.732399940490723
    9. '\' → logprob: -4.982399940490723
    10. ',' → logprob: -6.607399940490723

Token 16: ' sqrt' (ID: 44237)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.7565792798995972
    2. 'floor' → logprob: -1.0065792798995972
    3. 'sqrt' → logprob: -2.0065793991088867
    4. ' floor' → logprob: -4.006579399108887
    5. ' sqrt' → logprob: -5.131579399108887
    6. ' log' → logprob: -5.381579399108887
    7. 'pow' → logprob: -7.256579399108887
    8. 'inf' → logprob: -8.131579399108887
    9. '```' → logprob: -8.131579399108887
    10. 'fabs' → logprob: -8.256579399108887

Token 17: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7960137128829956
    2. '
' → logprob: -1.2960137128829956
    3. '```' → logprob: -2.046013832092285
    4. '\n' → logprob: -2.421013832092285
    5. 'import' → logprob: -3.921013832092285
    6. 'def' → logprob: -4.796013832092285
    7. '\' → logprob: -4.921013832092285
    8. '' → logprob: -5.421013832092285
    9. '`' → logprob: -5.421013832092285
    10. '#' → logprob: -5.671013832092285

Token 18: ' hypot' (ID: 85756)
  Prédit: 'floor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'floor' → logprob: -0.7514591217041016
    2. 'log' → logprob: -1.1264591217041016
    3. ' floor' → logprob: -2.1264591217041016
    4. ' log' → logprob: -3.6264591217041016
    5. 'pow' → logprob: -4.001459121704102
    6. ' factorial' → logprob: -4.501459121704102
    7. 'cos' → logprob: -4.751459121704102
    8. 'atan' → logprob: -5.126459121704102
    9. 'sin' → logprob: -6.001459121704102
    10. 'factor' → logprob: -6.251459121704102

Token 19: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8863937854766846
    2. '\n' → logprob: -1.2613937854766846
    3. '

' → logprob: -2.2613937854766846
    4. 'import' → logprob: -2.7613937854766846
    5. '```' → logprob: -3.2613937854766846
    6. '\' → logprob: -3.5113937854766846
    7. ',' → logprob: -4.0113935470581055
    8. '<|end|>' → logprob: -4.1363935470581055
    9. '' → logprob: -4.2613935470581055
    10. '(' → logprob: -5.6363935470581055

Token 20: ' factorial' (ID: 111204)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.12027087062597275
    2. 'cos' → logprob: -3.7452709674835205
    3. 'acos' → logprob: -3.9952709674835205
    4. ' atan' → logprob: -3.9952709674835205
    5. 'sin' → logprob: -4.495270729064941
    6. 'floor' → logprob: -4.495270729064941
    7. 'pow' → logprob: -4.620270729064941
    8. 'log' → logprob: -5.370270729064941
    9. 'is' → logprob: -5.870270729064941
    10. 'pi' → logprob: -6.120270729064941

Token 21: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8400936722755432
    2. '
' → logprob: -1.9650936126708984
    3. '\n' → logprob: -2.0900936126708984
    4. 'import' → logprob: -2.2150936126708984
    5. '<|end|>' → logprob: -3.0900936126708984
    6. '

' → logprob: -3.3400936126708984
    7. '```' → logprob: -3.7150936126708984
    8. '\' → logprob: -3.8400936126708984
    9. '(' → logprob: -4.090093612670898
    10. ',
' → logprob: -4.215093612670898

Token 22: ' pi' (ID: 6404)
  Prédit: 'log'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'log' → logprob: -0.8700656294822693
    2. 'pi' → logprob: -2.620065689086914
    3. 'pow' → logprob: -2.745065689086914
    4. 'cos' → logprob: -2.870065689086914
    5. ' comb' → logprob: -2.995065689086914
    6. 'prod' → logprob: -3.245065689086914
    7. 'floor' → logprob: -3.245065689086914
    8. 'sin' → logprob: -3.620065689086914
    9. ' log' → logprob: -3.745065689086914
    10. ' gcd' → logprob: -3.870065689086914

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45114752650260925
    2. '
' → logprob: -2.2011475563049316
    3. '<|end|>' → logprob: -2.3261475563049316
    4. 'import' → logprob: -2.5761475563049316
    5. '' → logprob: -3.7011475563049316
    6. '\n' → logprob: -3.8261475563049316
    7. ',
' → logprob: -5.201147556304932
    8. ' ' → logprob: -5.201147556304932
    9. '

' → logprob: -5.201147556304932
    10. '<|end|>' → logprob: -6.201147556304932

Token 24: ' sin' (ID: 2187)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8745614290237427
    2. 'cos' → logprob: -1.2495614290237427
    3. 'sin' → logprob: -2.249561309814453
    4. ' e' → logprob: -2.249561309814453
    5. 'inf' → logprob: -3.749561309814453
    6. ' cos' → logprob: -4.624561309814453
    7. 'log' → logprob: -4.749561309814453
    8. 'pow' → logprob: -4.749561309814453
    9. 'atan' → logprob: -4.874561309814453
    10. 'tau' → logprob: -5.249561309814453

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10126015543937683
    2. '(' → logprob: -3.101260185241699
    3. ' ' → logprob: -3.851260185241699
    4. ',
' → logprob: -4.976260185241699
    5. '
' → logprob: -5.601260185241699
    6. 't' → logprob: -5.976260185241699
    7. ')' → logprob: -6.101260185241699
    8. '' → logprob: -6.226260185241699
    9. '\n' → logprob: -6.476260185241699
    10. 'm' → logprob: -6.601260185241699

Token 26: ' cos' (ID: 8974)
  Prédit: ' cos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cos' → logprob: -0.22565607726573944
    2. 'cos' → logprob: -1.6006560325622559
    3. ' acos' → logprob: -10.725656509399414
    4. ' radians' → logprob: -10.975656509399414
    5. '<|end|>' → logprob: -11.100656509399414
    6. ' asin' → logprob: -11.100656509399414
    7. 'atan' → logprob: -11.225656509399414
    8. '1' → logprob: -11.350656509399414
    9. ' ' → logprob: -11.350656509399414
    10. ' cosine' → logprob: -11.475656509399414

Token 27: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07610844820737839
    2. '<|end|>' → logprob: -2.826108455657959
    3. '
' → logprob: -5.951108455657959
    4. ')' → logprob: -6.076108455657959
    5. ',
' → logprob: -6.076108455657959
    6. 'import' → logprob: -6.326108455657959
    7. '\n' → logprob: -6.826108455657959
    8. '(' → logprob: -7.076108455657959
    9. ' ' → logprob: -7.576108455657959
    10. '<|end|>' → logprob: -7.826108455657959

Token 28: ' radians' (ID: 126525)
  Prédit: ' tan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' tan' → logprob: -0.08871205151081085
    2. 'atan' → logprob: -2.963711977005005
    3. 'tan' → logprob: -3.838711977005005
    4. ' asin' → logprob: -5.463712215423584
    5. ' radians' → logprob: -5.963712215423584
    6. ' atan' → logprob: -6.088712215423584
    7. ' acos' → logprob: -6.588712215423584
    8. ' log' → logprob: -7.588712215423584
    9. 'log' → logprob: -7.963712215423584
    10. ' ceil' → logprob: -9.463711738586426

Token 29: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0822722911834717
    2. '
' → logprob: -1.4572722911834717
    3. '<|end|>' → logprob: -1.8322722911834717
    4. 'import' → logprob: -1.9572722911834717
    5. '\n' → logprob: -3.0822722911834717
    6. '' → logprob: -4.457272529602051
    7. ',
' → logprob: -4.457272529602051
    8. '\' → logprob: -4.582272529602051
    9. '```' → logprob: -4.707272529602051
    10. '

' → logprob: -4.707272529602051

Token 30: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.7413337230682373
    2. '
' → logprob: -0.8663337230682373
    3. ',' → logprob: -3.8663337230682373
    4. 'def' → logprob: -4.241333961486816
    5. 'import' → logprob: -4.241333961486816
    6. '#' → logprob: -4.491333961486816
    7. '\n' → logprob: -4.741333961486816
    8. '' → logprob: -4.866333961486816
    9. '


' → logprob: -5.741333961486816
    10. '```' → logprob: -5.741333961486816

Token 31: ' itertools' (ID: 103178)
  Prédit: ' itertools'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' itertools' → logprob: -0.6490386724472046
    2. 'random' → logprob: -2.024038791656494
    3. ' random' → logprob: -3.024038791656494
    4. 'datetime' → logprob: -3.524038791656494
    5. 'operator' → logprob: -3.774038791656494
    6. 'os' → logprob: -3.774038791656494
    7. 'math' → logprob: -3.774038791656494
    8. ' os' → logprob: -3.899038791656494
    9. 'numpy' → logprob: -3.899038791656494
    10. ' numpy' → logprob: -4.024038791656494

Token 32: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.0031495578587055206
    2. 'import' → logprob: -6.128149509429932
    3. ' ' → logprob: -7.878149509429932
    4. '.' → logprob: -8.25314998626709
    5. ' .' → logprob: -8.37814998626709
    6. ' itertools' → logprob: -10.62814998626709
    7. '	import' → logprob: -10.75314998626709
    8. '<|end|>' → logprob: -10.87814998626709
    9. '.import' → logprob: -11.37814998626709
    10. '.groupby' → logprob: -12.25314998626709

Token 33: ' permutations' (ID: 174595)
  Prédit: ' permutations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' permutations' → logprob: -0.47839784622192383
    2. ' product' → logprob: -1.9783978462219238
    3. 'com' → logprob: -2.603397846221924
    4. 'product' → logprob: -2.728397846221924
    5. 'per' → logprob: -2.978397846221924
    6. ' combinations' → logprob: -3.603397846221924
    7. ' chain' → logprob: -4.728397846221924
    8. ' cycle' → logprob: -5.728397846221924
    9. ' group' → logprob: -5.728397846221924
    10. 'chain' → logprob: -5.978397846221924

Token 34: ',' (ID: 11)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.1637707948684692
    2. ',' → logprob: -1.5387707948684692
    3. '\n' → logprob: -1.9137707948684692
    4. '<|end|>' → logprob: -1.9137707948684692
    5. '\' → logprob: -3.1637706756591797
    6. '
' → logprob: -3.1637706756591797
    7. 'from' → logprob: -4.28877067565918
    8. '```' → logprob: -4.53877067565918
    9. 'def' → logprob: -4.66377067565918
    10. '<|end|>' → logprob: -4.91377067565918

Token 35: ' combinations' (ID: 43835)
  Prédit: 'com'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'com' → logprob: -0.2610395848751068
    2. 'product' → logprob: -2.2610394954681396
    3. ' combinations' → logprob: -2.6360394954681396
    4. ' product' → logprob: -3.0110394954681396
    5. 'chain' → logprob: -6.261039733886719
    6. ' chain' → logprob: -7.261039733886719
    7. 'cycle' → logprob: -7.886039733886719
    8. '	com' → logprob: -7.886039733886719
    9. '```' → logprob: -8.261039733886719
    10. 'group' → logprob: -8.761039733886719

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6573323011398315
    2. 'import' → logprob: -1.2823323011398315
    3. '
' → logprob: -2.282332420349121
    4. '<|end|>' → logprob: -3.407332420349121
    5. 'from' → logprob: -3.907332420349121
    6. '

' → logprob: -4.282332420349121
    7. ',
' → logprob: -4.657332420349121
    8. '```' → logprob: -4.907332420349121
    9. '\n' → logprob: -5.157332420349121
    10. '\' → logprob: -6.282332420349121

Token 37: ' product' (ID: 1888)
  Prédit: 'product'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'product' → logprob: -0.19274494051933289
    2. ' product' → logprob: -1.8177449703216553
    3. 'chain' → logprob: -4.817744731903076
    4. ' chain' → logprob: -6.067744731903076
    5. 'com' → logprob: -6.692744731903076
    6. 'acc' → logprob: -7.442744731903076
    7. 'cycle' → logprob: -8.442745208740234
    8. '```' → logprob: -8.817745208740234
    9. 'group' → logprob: -9.192745208740234
    10. ' combinations' → logprob: -10.192745208740234

Token 38: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6474305987358093
    2. '<|end|>' → logprob: -1.522430658340454
    3. '
' → logprob: -1.897430658340454
    4. ',' → logprob: -3.522430658340454
    5. 'import' → logprob: -3.647430658340454
    6. '\n' → logprob: -4.147430419921875
    7. '<|end|>' → logprob: -4.522430419921875
    8. '```' → logprob: -5.147430419921875
    9. '


' → logprob: -5.647430419921875
    10. ' 

' → logprob: -5.647430419921875

Token 39: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.23204079270362854
    2. '<|end|>' → logprob: -2.7320408821105957
    3. '
' → logprob: -3.2320408821105957
    4. 'import' → logprob: -3.6070408821105957
    5. '\n' → logprob: -3.9820408821105957
    6. ',' → logprob: -4.107040882110596
    7. 'def' → logprob: -4.607040882110596
    8. '#' → logprob: -5.107040882110596
    9. '```' → logprob: -5.357040882110596
    10. '<|end|>' → logprob: -5.732040882110596

Token 40: ' operator' (ID: 11019)
  Prédit: ' functools'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' functools' → logprob: -1.2220726013183594
    2. 'math' → logprob: -2.0970726013183594
    3. ' operator' → logprob: -2.3470726013183594
    4. 'random' → logprob: -2.4720726013183594
    5. ' math' → logprob: -2.5970726013183594
    6. 'operator' → logprob: -2.9720726013183594
    7. 'heap' → logprob: -3.3470726013183594
    8. 'fra' → logprob: -3.3470726013183594
    9. 'fun' → logprob: -3.3470726013183594
    10. ' random' → logprob: -3.3470726013183594

Token 41: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.2273857295513153
    2. 'import' → logprob: -1.6023857593536377
    3. '<|end|>' → logprob: -6.352385520935059
    4. '	import' → logprob: -8.977385520935059
    5. '<|end|>' → logprob: -10.352385520935059
    6. ' ' → logprob: -10.352385520935059
    7. '_import' → logprob: -11.227385520935059
    8. '.' → logprob: -12.727385520935059
    9. ',' → logprob: -12.727385520935059
    10. ' as' → logprob: -12.852385520935059

Token 42: ' item' (ID: 2169)
  Prédit: ' item'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' item' → logprob: -0.11829933524131775
    2. 'item' → logprob: -2.2432992458343506
    3. ' attr' → logprob: -5.86829948425293
    4. ' mul' → logprob: -7.11829948425293
    5. ' method' → logprob: -7.74329948425293
    6. 'attr' → logprob: -7.86829948425293
    7. ' add' → logprob: -8.61829948425293
    8. ' import' → logprob: -8.74329948425293
    9. 'mul' → logprob: -9.11829948425293
    10. '	item' → logprob: -9.24329948425293

Token 43: 'getter' (ID: 132812)
  Prédit: 'getter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'getter' → logprob: -0.0002998312993440777
    2. 'get' → logprob: -8.125299453735352
    3. 'getitem' → logprob: -13.125299453735352
    4. 'gett' → logprob: -14.125299453735352
    5. 'attr' → logprob: -14.375299453735352
    6. 's' → logprob: -16.00029945373535
    7. 'g' → logprob: -16.50029945373535
    8. 'setter' → logprob: -17.12529945373535
    9. 'Getter' → logprob: -17.50029945373535
    10. 'gets' → logprob: -17.50029945373535

Token 44: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: ' mul' (ID: 9975)
  Prédit: 'attr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'attr' → logprob: -0.07118038833141327
    2. ' attr' → logprob: -2.6961803436279297
    3. 'method' → logprob: -7.07118034362793
    4. 'mul' → logprob: -9.19618034362793
    5. ' method' → logprob: -9.32118034362793
    6. 'add' → logprob: -9.57118034362793
    7. ' mul' → logprob: -10.57118034362793
    8. '```' → logprob: -10.82118034362793
    9. '   ' → logprob: -11.07118034362793
    10. '.attr' → logprob: -11.19618034362793

Token 46: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5060802698135376
    2. '<|end|>' → logprob: -1.2560802698135376
    3. 'from' → logprob: -3.006080150604248
    4. 'import' → logprob: -3.256080150604248
    5. ' ' → logprob: -4.881080150604248
    6. '\n' → logprob: -5.631080150604248
    7. '
' → logprob: -5.881080150604248
    8. '' → logprob: -6.006080150604248
    9. '<|end|>' → logprob: -6.381080150604248
    10. '\' → logprob: -6.881080150604248

Token 47: 'from' (ID: 2845)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2424206733703613
    2. 'import' → logprob: -1.3674206733703613
    3. '

' → logprob: -1.4924206733703613
    4. '
' → logprob: -2.1174206733703613
    5. '<|end|>' → logprob: -2.9924206733703613
    6. '\n' → logprob: -3.8674206733703613
    7. 'from' → logprob: -4.867420673370361
    8. '```' → logprob: -5.242420673370361
    9. 'def' → logprob: -5.492420673370361
    10. '' → logprob: -5.617420673370361

Token 48: ' string' (ID: 1621)
  Prédit: 'fun'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fun' → logprob: -0.24762184917926788
    2. ' functools' → logprob: -1.7476218938827515
    3. 'math' → logprob: -3.247621774673462
    4. 'operator' → logprob: -6.122622013092041
    5. 'random' → logprob: -6.247622013092041
    6. 'fra' → logprob: -7.622622013092041
    7. 'os' → logprob: -7.622622013092041
    8. 'heap' → logprob: -7.747622013092041
    9. ' math' → logprob: -8.497621536254883
    10. 'collections' → logprob: -9.622621536254883

Token 49: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.03837021812796593
    2. 'import' → logprob: -3.288370132446289
    3. '<|end|>' → logprob: -8.288370132446289
    4. '	import' → logprob: -10.788370132446289
    5. ' ' → logprob: -10.913370132446289
    6. '.' → logprob: -11.038370132446289
    7. '<|end|>' → logprob: -11.538370132446289
    8. ' as' → logprob: -12.413370132446289
    9. ' imports' → logprob: -13.163370132446289
    10. '_import' → logprob: -13.913370132446289

Token 50: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.1930837631225586
    2. 'ascii' → logprob: -1.8180837631225586
    3. ' punctuation' → logprob: -4.443083763122559
    4. '.as' → logprob: -7.443083763122559
    5. ' whitespace' → logprob: -7.443083763122559
    6. 'pun' → logprob: -9.193083763122559
    7. '```' → logprob: -9.318083763122559
    8. ' Template' → logprob: -10.693083763122559
    9. 'as' → logprob: -10.943083763122559
    10. ' he' → logprob: -11.068083763122559

Token 51: '_lower' (ID: 72335)
  Prédit: '_letters'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_letters' → logprob: -0.5085383057594299
    2. '_lower' → logprob: -1.0085382461547852
    3. 'letters' → logprob: -3.633538246154785
    4. 'lower' → logprob: -5.133538246154785
    5. '_upper' → logprob: -6.508538246154785
    6. 'uppercase' → logprob: -9.758538246154785
    7. 'abcdefghijklmnopqrstuvwxyz' → logprob: -13.133538246154785
    8. 'Lower' → logprob: -13.758538246154785
    9. 'Letters' → logprob: -13.758538246154785
    10. 'upper' → logprob: -14.133538246154785

Token 52: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0006054567056708038
    2. 'abcdefghijklmnopqrstuvwxyz' → logprob: -7.875605583190918
    3. 'ase' → logprob: -8.875605583190918
    4. 'ascii' → logprob: -10.375605583190918
    5. 'alphabet' → logprob: -11.625605583190918
    6. 'abc' → logprob: -12.000605583190918
    7. 'ic' → logprob: -12.125605583190918
    8. 'alpha' → logprob: -12.250605583190918
    9. 'letters' → logprob: -12.500605583190918
    10. 'ist' → logprob: -13.000605583190918

Token 53: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 54: ' ascii' (ID: 104363)
  Prédit: ' ascii'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ascii' → logprob: -0.5793126821517944
    2. 'ascii' → logprob: -0.8293126821517944
    3. ' digits' → logprob: -6.579312801361084
    4. 'digits' → logprob: -7.079312801361084
    5. ' whitespace' → logprob: -7.454312801361084
    6. '.as' → logprob: -8.329312324523926
    7. ' punctuation' → logprob: -8.704312324523926
    8. '```' → logprob: -10.454312324523926
    9. '_ascii' → logprob: -10.579312324523926
    10. 'as' → logprob: -10.579312324523926

Token 55: '_upper' (ID: 82658)
  Prédit: '_upper'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_upper' → logprob: -0.03878474980592728
    2. '_letters' → logprob: -3.2887847423553467
    3. 'uppercase' → logprob: -7.413784980773926
    4. '_lower' → logprob: -9.163784980773926
    5. 'letters' → logprob: -10.538784980773926
    6. 'upper' → logprob: -11.788784980773926
    7. '_up' → logprob: -14.538784980773926
    8. 'Upper' → logprob: -15.163784980773926
    9. '95' → logprob: -15.413784980773926
    10. ' uppercase' → logprob: -16.91378402709961

Token 56: 'case' (ID: 9994)
  Prédit: 'case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -1.2664456789934775e-06
    2. 'letters' → logprob: -13.875000953674316
    3. 'abcdefghijklmnopqrstuvwxyz' → logprob: -16.000001907348633
    4. 'cases' → logprob: -17.250001907348633
    5. '```' → logprob: -17.625001907348633
    6. '_letters' → logprob: -17.750001907348633
    7. 'c' → logprob: -18.750001907348633
    8. '_case' → logprob: -19.375001907348633
    9. 'letter' → logprob: -19.625001907348633
    10. 'lower' → logprob: -19.750001907348633

Token 57: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9624313116073608
    2. '<|end|>' → logprob: -1.0874313116073608
    3. '

' → logprob: -1.9624313116073608
    4. 'import' → logprob: -2.8374314308166504
    5. ',' → logprob: -3.3374314308166504
    6. '\n' → logprob: -4.33743143081665
    7. '' → logprob: -4.71243143081665
    8. '#' → logprob: -5.08743143081665
    9. '<|end|>' → logprob: -5.21243143081665
    10. 'def' → logprob: -6.33743143081665

Token 58: ' digits' (ID: 37806)
  Prédit: ' digits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' digits' → logprob: -0.1217663586139679
    2. 'digits' → logprob: -2.4967663288116455
    3. ' ascii' → logprob: -3.7467663288116455
    4. 'ascii' → logprob: -5.496766567230225
    5. ' whitespace' → logprob: -5.871766567230225
    6. ' punctuation' → logprob: -6.496766567230225
    7. 'wh' → logprob: -9.871766090393066
    8. ' string' → logprob: -9.996766090393066
    9. '```' → logprob: -10.121766090393066
    10. '_digits' → logprob: -10.246766090393066

Token 59: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: 'from' (ID: 2845)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '

' → logprob: -0.1673436313867569
    2. '
' → logprob: -2.1673436164855957
    3. '<|end|>' → logprob: -4.042343616485596
    4. 'import' → logprob: -4.667343616485596
    5. ',' → logprob: -5.417343616485596
    6. '```' → logprob: -6.292343616485596
    7. '#' → logprob: -6.667343616485596
    8. '


' → logprob: -6.917343616485596
    9. '<|end|>' → logprob: -7.417343616485596
    10. '' → logprob: -7.542343616485596

Token 61: ' functools' (ID: 142636)
  Prédit: 'random'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'random' → logprob: -1.1062006950378418
    2. ' functools' → logprob: -1.9812006950378418
    3. ' random' → logprob: -2.106200695037842
    4. 'math' → logprob: -2.731200695037842
    5. 'os' → logprob: -2.731200695037842
    6. 'collections' → logprob: -3.231200695037842
    7. ' math' → logprob: -3.481200695037842
    8. 'fra' → logprob: -3.606200695037842
    9. ' typing' → logprob: -3.606200695037842
    10. ' fractions' → logprob: -3.606200695037842

Token 62: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.08968917280435562
    2. 'import' → logprob: -2.464689254760742
    3. '_import' → logprob: -7.839689254760742
    4. '	import' → logprob: -8.839689254760742
    5. '<|end|>' → logprob: -8.839689254760742
    6. ' ' → logprob: -10.214689254760742
    7. '_' → logprob: -12.214689254760742
    8. ' importar' → logprob: -12.589689254760742
    9. '<|end|>' → logprob: -12.589689254760742
    10. ' ' → logprob: -12.964689254760742

Token 63: ' reduce' (ID: 10389)
  Prédit: ' reduce'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' reduce' → logprob: -0.6111146807670593
    2. ' l' → logprob: -0.9861146807670593
    3. 'reduce' → logprob: -2.861114740371704
    4. 'l' → logprob: -4.111114501953125
    5. ' partial' → logprob: -4.986114501953125
    6. ' wraps' → logprob: -5.986114501953125
    7. 'partial' → logprob: -7.486114501953125
    8. ' cache' → logprob: -8.361114501953125
    9. ' cmp' → logprob: -8.486114501953125
    10. 'wrap' → logprob: -9.611114501953125

Token 64: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 65: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9547901749610901
    2. '

' → logprob: -1.4547901153564453
    3. 'import' → logprob: -1.8297901153564453
    4. ',' → logprob: -2.5797901153564453
    5. '<|end|>' → logprob: -2.7047901153564453
    6. '
' → logprob: -3.2047901153564453
    7. '#' → logprob: -4.704790115356445
    8. '\n' → logprob: -4.954790115356445
    9. '<|end|>' → logprob: -5.454790115356445
    10. '```' → logprob: -5.954790115356445

Token 66: ' fractions' (ID: 110523)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.3175905644893646
    2. ' operator' → logprob: -1.817590594291687
    3. 'math' → logprob: -3.3175904750823975
    4. ' heap' → logprob: -3.3175904750823975
    5. ' random' → logprob: -4.692590713500977
    6. 'operator' → logprob: -4.692590713500977
    7. ' itertools' → logprob: -5.317590713500977
    8. 'heap' → logprob: -5.942590713500977
    9. ' fractions' → logprob: -5.942590713500977
    10. ' typing' → logprob: -6.192590713500977

Token 67: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.1276845484972
    2. 'import' → logprob: -2.1276845932006836
    3. '<|end|>' → logprob: -7.627684593200684
    4. '_import' → logprob: -8.877684593200684
    5. '	import' → logprob: -9.627684593200684
    6. '.' → logprob: -10.752684593200684
    7. ' ' → logprob: -11.377684593200684
    8. '<|end|>' → logprob: -11.502684593200684
    9. '_' → logprob: -12.377684593200684
    10. ' ' → logprob: -12.502684593200684

Token 68: ' Fraction' (ID: 112108)
  Prédit: ' Fraction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Fraction' → logprob: -0.026319339871406555
    2. 'Fraction' → logprob: -3.6513192653656006
    3. ' gcd' → logprob: -12.65131950378418
    4. '_fraction' → logprob: -12.65131950378418
    5. ' fractions' → logprob: -12.77631950378418
    6. ' F' → logprob: -13.02631950378418
    7. '	F' → logprob: -13.52631950378418
    8. ' ' → logprob: -13.65131950378418
    9. '```' → logprob: -13.65131950378418
    10. ' Fra' → logprob: -13.77631950378418

Token 69: '
' (ID: 198)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.2575971186161041
    2. '
' → logprob: -1.8825970888137817
    3. '<|end|>' → logprob: -3.5075972080230713
    4. 'import' → logprob: -3.6325972080230713
    5. 'def' → logprob: -5.507596969604492
    6. '\n' → logprob: -5.632596969604492
    7. ',' → logprob: -6.007596969604492
    8. '


' → logprob: -6.382596969604492
    9. '```' → logprob: -6.632596969604492
    10. '<|end|>' → logprob: -7.007596969604492

Token 70: 'from' (ID: 2845)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8867982625961304
    2. '<|end|>' → logprob: -0.8867982625961304
    3. '

' → logprob: -2.63679838180542
    4. '\n' → logprob: -3.38679838180542
    5. 'import' → logprob: -3.88679838180542
    6. ',' → logprob: -4.63679838180542
    7. '#' → logprob: -4.63679838180542
    8. 'def' → logprob: -5.01179838180542
    9. '```' → logprob: -5.13679838180542
    10. '<|end|>' → logprob: -5.63679838180542

Token 71: ' bis' (ID: 7204)
  Prédit: ' decimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' decimal' → logprob: -0.6629635095596313
    2. 'decimal' → logprob: -1.0379635095596313
    3. ' math' → logprob: -2.662963390350342
    4. 'math' → logprob: -2.912963390350342
    5. 'datetime' → logprob: -7.037963390350342
    6. 'random' → logprob: -7.037963390350342
    7. 'io' → logprob: -7.287963390350342
    8. ' random' → logprob: -7.537963390350342
    9. ' datetime' → logprob: -7.537963390350342
    10. ' typing' → logprob: -7.662963390350342

Token 72: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -2.696889623621246e-06
    2. 'e' → logprob: -13.37500286102295
    3. 'ec' → logprob: -14.37500286102295
    4. 'ected' → logprob: -15.00000286102295
    5. 'ectl' → logprob: -17.000001907348633
    6. 'ection' → logprob: -17.125001907348633
    7. 'ector' → logprob: -17.125001907348633
    8. 'ecta' → logprob: -17.250001907348633
    9. 'ects' → logprob: -17.875001907348633
    10. '```' → logprob: -18.250001907348633

Token 73: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.02345394156873226
    2. 'import' → logprob: -3.898453950881958
    3. '<|end|>' → logprob: -6.148453712463379
    4. ' ' → logprob: -7.398453712463379
    5. '	import' → logprob: -9.148453712463379
    6. '_' → logprob: -11.148453712463379
    7. '_import' → logprob: -11.648453712463379
    8. ' ' → logprob: -12.273453712463379
    9. 'ort' → logprob: -12.523453712463379
    10. '.' → logprob: -12.523453712463379

Token 74: ' bis' (ID: 7204)
  Prédit: ' bis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bis' → logprob: -0.04486581310629845
    2. 'bis' → logprob: -3.294865846633911
    3. ' ins' → logprob: -5.419865608215332
    4. 'ins' → logprob: -6.044865608215332
    5. '```' → logprob: -13.794865608215332
    6. ' ' → logprob: -14.044865608215332
    7. '_ins' → logprob: -14.669865608215332
    8. '.ins' → logprob: -14.919865608215332
    9. 'Bis' → logprob: -15.044865608215332
    10. '	b' → logprob: -15.169865608215332

Token 75: 'ect' (ID: 534)
  Prédit: 'ect'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ect' → logprob: -9.088346359931165e-07
    2. 'e' → logprob: -14.625000953674316
    3. 'ec' → logprob: -15.500000953674316
    4. 'ected' → logprob: -16.375
    5. 'ectl' → logprob: -18.25
    6. '```' → logprob: -18.375
    7. 'ects' → logprob: -19.0
    8. 'ext' → logprob: -19.25
    9. 'ecta' → logprob: -19.25
    10. 'sect' → logprob: -19.5

Token 76: '
' (ID: 198)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.04419597238302231
    2. '_right' → logprob: -3.1691958904266357
    3. 'left' → logprob: -7.294196128845215
    4. 'right' → logprob: -8.544196128845215
    5. '<|end|>' → logprob: -8.794196128845215
    6. '_' → logprob: -10.169196128845215
    7. ',' → logprob: -10.169196128845215
    8. 'ins' → logprob: -10.544196128845215
    9. '_LEFT' → logprob: -11.294196128845215
    10. 'Left' → logprob: -12.044196128845215

Token 77: 'from' (ID: 2845)
  Prédit: '_left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_left' → logprob: -0.04742901027202606
    2. '_right' → logprob: -3.172429084777832
    3. '_' → logprob: -5.797429084777832
    4. 'left' → logprob: -7.047429084777832
    5. 'right' → logprob: -8.297429084777832
    6. 'r' → logprob: -9.422429084777832
    7. '```' → logprob: -10.672429084777832
    8. '_LEFT' → logprob: -10.922429084777832
    9. 'le' → logprob: -11.047429084777832
    10. 'l' → logprob: -11.172429084777832

Token 78: ' typing' (ID: 34152)
  Prédit: ' heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' heap' → logprob: -0.17095766961574554
    2. ' math' → logprob: -2.045957565307617
    3. ' itertools' → logprob: -3.920957565307617
    4. 'heap' → logprob: -5.295957565307617
    5. ' collections' → logprob: -6.670957565307617
    6. ' copy' → logprob: -7.170957565307617
    7. ' sys' → logprob: -8.295957565307617
    8. ' random' → logprob: -9.045957565307617
    9. ' functools' → logprob: -9.545957565307617
    10. ' bis' → logprob: -9.920957565307617

Token 79: ' import' (ID: 1588)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04626350849866867
    2. '[' → logprob: -4.421263694763184
    3. ' import' → logprob: -4.421263694763184
    4. 'import' → logprob: -5.046263694763184
    5. '<|end|>' → logprob: -5.171263694763184
    6. '_' → logprob: -5.671263694763184
    7. ' ' → logprob: -5.671263694763184
    8. ' .' → logprob: -7.046263694763184
    9. '._' → logprob: -7.921263694763184
    10. 's' → logprob: -9.171263694763184

Token 80: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.018770428374409676
    2. ' Any' → logprob: -4.143770217895508
    3. 'List' → logprob: -6.393770217895508
    4. 'Any' → logprob: -7.643770217895508
    5. ' Union' → logprob: -8.643770217895508
    6. ' ' → logprob: -8.768770217895508
    7. ' Optional' → logprob: -9.518770217895508
    8. ' Tuple' → logprob: -9.893770217895508
    9. ' Generator' → logprob: -9.893770217895508
    10. ' Iterable' → logprob: -10.268770217895508

Token 81: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.34562280774116516
    2. '
' → logprob: -1.9706227779388428
    3. 'def' → logprob: -2.5956227779388428
    4. ',' → logprob: -3.2206227779388428
    5. '


' → logprob: -4.220623016357422
    6. ':' → logprob: -5.095623016357422
    7. ',
' → logprob: -5.595623016357422
    8. ',

' → logprob: -5.845623016357422
    9. ':

' → logprob: -6.470623016357422
    10. '#' → logprob: -6.470623016357422

Token 82: 'input' (ID: 2586)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8009635210037231
    2. '
' → logprob: -1.5509635210037231
    3. 'd' → logprob: -1.8009635210037231
    4. 'def' → logprob: -2.4259634017944336
    5. ':' → logprob: -3.3009634017944336
    6. '' → logprob: -4.550963401794434
    7. 'a' → logprob: -4.925963401794434
    8. ',' → logprob: -5.300963401794434
    9. '

' → logprob: -5.300963401794434
    10. '.' → logprob: -6.425963401794434

Token 83: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002348292153328657
    2. '.' → logprob: -6.12734842300415
    3. '()' → logprob: -8.877347946166992
    4. '(
' → logprob: -12.002347946166992
    5. ' (' → logprob: -12.252347946166992
    6. ',' → logprob: -12.627347946166992
    7. ')' → logprob: -13.127347946166992
    8. '('' → logprob: -13.502347946166992
    9. '(.)' → logprob: -13.877347946166992
    10. '<|end|>' → logprob: -14.002347946166992

Token 84: ' sys' (ID: 12228)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1438167244195938
    2. ' sys' → logprob: -2.1438167095184326
    3. 'input' → logprob: -4.518816947937012
    4. ' ' → logprob: -5.268816947937012
    5. 'sys' → logprob: -8.018816947937012
    6. ' lambda' → logprob: -8.143816947937012
    7. ' open' → logprob: -11.268816947937012
    8. ' iter' → logprob: -11.518816947937012
    9. ' raw' → logprob: -11.518816947937012
    10. ' in' → logprob: -12.018816947937012

Token 85: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.690834273584187e-05
    2. '.readline' → logprob: -11.00003719329834
    3. ' .' → logprob: -12.62503719329834
    4. '[' → logprob: -12.62503719329834
    5. '.

' → logprob: -12.87503719329834
    6. '.

' → logprob: -13.37503719329834
    7. '.stdin' → logprob: -13.50003719329834
    8. '.input' → logprob: -14.25003719329834
    9. '.
' → logprob: -14.37503719329834
    10. '.)' → logprob: -14.50003719329834

Token 86: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.4028800427913666
    2. '.' → logprob: -1.152880072593689
    3. '.read' → logprob: -4.1528801918029785
    4. '.readlines' → logprob: -9.90287971496582
    5. 'read' → logprob: -10.15287971496582
    6. '.Read' → logprob: -10.52787971496582
    7. '.write' → logprob: -11.40287971496582
    8. '.READ' → logprob: -12.40287971496582
    9. '<|end|>' → logprob: -13.15287971496582
    10. ',' → logprob: -13.27787971496582

Token 87: '
' (ID: 198)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07360826432704926
    2. '()' → logprob: -3.198608160018921
    3. '(
' → logprob: -4.1986083984375
    4. '
' → logprob: -5.1986083984375
    5. '(

' → logprob: -5.1986083984375
    6. '()

' → logprob: -6.9486083984375
    7. '

' → logprob: -6.9486083984375
    8. '#' → logprob: -8.0736083984375
    9. '()
' → logprob: -8.0736083984375
    10. '<|end|>' → logprob: -8.4486083984375

Token 88: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.5093870162963867
    2. 'def' → logprob: -1.5093870162963867
    3. '(' → logprob: -1.6343870162963867
    4. '

' → logprob: -2.0093870162963867
    5. '
' → logprob: -2.0093870162963867
    6. '()

' → logprob: -2.7593870162963867
    7. '(
' → logprob: -4.384387016296387
    8. '#' → logprob: -5.509387016296387
    9. '(

' → logprob: -5.509387016296387
    10. '<|end|>' → logprob: -6.134387016296387

Token 89: ' INT' (ID: 20104)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.007724691182374954
    2. '_' → logprob: -4.882724761962891
    3. ' _' → logprob: -9.63272476196289
    4. '_space' → logprob: -10.75772476196289
    5. '(' → logprob: -11.88272476196289
    6. ' ```' → logprob: -12.50772476196289
    7. ' space' → logprob: -13.25772476196289
    8. ' ‌' → logprob: -13.38272476196289
    9. ' (' → logprob: -13.50772476196289
    10. ' ' → logprob: -13.63272476196289

Token 90: '()' (ID: 416)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2733817398548126
    2. '():' → logprob: -1.5233817100524902
    3. '()' → logprob: -3.8983817100524902
    4. ':' → logprob: -8.148382186889648
    5. ' (' → logprob: -8.273382186889648
    6. ' ()' → logprob: -8.898382186889648
    7. ' ():' → logprob: -9.523382186889648
    8. '(
' → logprob: -10.648382186889648
    9. '():
' → logprob: -11.023382186889648
    10. '(a' → logprob: -11.023382186889648

Token 91: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.10799959301948547
    2. ':' → logprob: -2.357999563217163
    3. '(' → logprob: -5.107999801635742
    4. '):' → logprob: -7.482999801635742
    5. '()' → logprob: -7.607999801635742
    6. ' ():' → logprob: -8.232999801635742
    7. ' :' → logprob: -8.357999801635742
    8. '():
' → logprob: -9.607999801635742
    9. ')' → logprob: -10.857999801635742
    10. ':int' → logprob: -11.107999801635742

Token 92: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.05499737709760666
    2. 'int' → logprob: -2.929997444152832
    3. ' in' → logprob: -9.679997444152832
    4. ' ' → logprob: -9.929997444152832
    5. '[int' → logprob: -13.304997444152832
    6. ' i' → logprob: -14.554997444152832
    7. '	int' → logprob: -14.679997444152832
    8. '(int' → logprob: -15.179997444152832
    9. '  ' → logprob: -15.304997444152832
    10. 'in' → logprob: -15.304997444152832

Token 93: ':' (ID: 25)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00090061966329813
    2. ':' → logprob: -7.625900745391846
    3. ' ():' → logprob: -8.375900268554688
    4. '(' → logprob: -8.750900268554688
    5. '()' → logprob: -11.000900268554688
    6. '():
' → logprob: -12.000900268554688
    7. ' :' → logprob: -14.375900268554688
    8. ' ()' → logprob: -16.125900268554688
    9. ':**' → logprob: -16.375900268554688
    10. '):' → logprob: -16.375900268554688

Token 94: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.10811343789100647
    2. '(' → logprob: -3.1081135272979736
    3. ' ' → logprob: -3.4831135272979736
    4. 'return' → logprob: -4.6081132888793945
    5. ' (' → logprob: -4.7331132888793945
    6. '()' → logprob: -5.6081132888793945
    7. ' ()' → logprob: -6.7331132888793945
    8. '(return' → logprob: -7.4831132888793945
    9. ' )' → logprob: -7.7331132888793945
    10. '(int' → logprob: -7.8581132888793945

Token 95: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.0834108367562294
    2. ' ' → logprob: -3.0834107398986816
    3. 'int' → logprob: -3.4584107398986816
    4. '(int' → logprob: -6.083410739898682
    5. ' in' → logprob: -8.58341121673584
    6. ' i' → logprob: -9.45841121673584
    7. ' (' → logprob: -9.45841121673584
    8. '  ' → logprob: -10.33341121673584
    9. '(' → logprob: -10.58341121673584
    10. '<int' → logprob: -11.08341121673584

Token 96: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.006035569589585066
    2. '(input' → logprob: -5.131035804748535
    3. '(
' → logprob: -9.631035804748535
    4. '('' → logprob: -11.006035804748535
    5. '()' → logprob: -11.506035804748535
    6. '((' → logprob: -12.881035804748535
    7. '(sys' → logprob: -13.131035804748535
    8. '(

' → logprob: -13.256035804748535
    9. '(space' → logprob: -13.631035804748535
    10. 'input' → logprob: -13.881035804748535

Token 97: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3196296989917755
    2. '().' → logprob: -1.3196296691894531
    3. '()' → logprob: -5.069629669189453
    4. ' ())' → logprob: -10.194629669189453
    5. '())
' → logprob: -11.569629669189453
    6. '(' → logprob: -12.319629669189453
    7. '()[' → logprob: -12.444629669189453
    8. '()
' → logprob: -12.694629669189453
    9. '()`' → logprob: -13.944629669189453
    10. ')' → logprob: -14.194629669189453

Token 98: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5571390390396118
    2. '
' → logprob: -0.9321390390396118
    3. '()' → logprob: -4.182138919830322
    4. '(' → logprob: -5.182138919830322
    5. '(
' → logprob: -5.807138919830322
    6. ' def' → logprob: -5.807138919830322
    7. '()
' → logprob: -6.182138919830322
    8. '

' → logprob: -6.682138919830322
    9. '<|end|>' → logprob: -7.557138919830322
    10. '\n' → logprob: -7.682138919830322

Token 99: ' MAP' (ID: 53455)
  Prédit: ' LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' LIST' → logprob: -0.8883391618728638
    2. ' STR' → logprob: -1.0133391618728638
    3. 'STR' → logprob: -2.013339042663574
    4. 'LIST' → logprob: -2.763339042663574
    5. ' FLOAT' → logprob: -5.263339042663574
    6. 'FLOAT' → logprob: -5.638339042663574
    7. 'List' → logprob: -5.763339042663574
    8. ' MAP' → logprob: -6.013339042663574
    9. ' list' → logprob: -6.513339042663574
    10. ' L' → logprob: -6.638339042663574

Token 100: '():' (ID: 9442)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03335024043917656
    2. '(lambda' → logprob: -3.9083502292633057
    3. '(' → logprob: -4.533350467681885
    4. ' ()' → logprob: -7.033350467681885
    5. '():' → logprob: -7.283350467681885
    6. '().' → logprob: -8.908349990844727
    7. '()(' → logprob: -9.783349990844727
    8. '(int' → logprob: -9.908349990844727
    9. '()>' → logprob: -10.283349990844727
    10. '(()' → logprob: -11.033349990844727

Token 101: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.006902328692376614
    2. ' list' → logprob: -5.88190221786499
    3. 'return' → logprob: -6.00690221786499
    4. ' map' → logprob: -6.50690221786499
    5. ' ' → logprob: -9.256902694702148
    6. 'list' → logprob: -11.256902694702148
    7. '	return' → logprob: -12.006902694702148
    8. '    ' → logprob: -12.256902694702148
    9. 'map' → logprob: -12.506902694702148
    10. ' input' → logprob: -12.881902694702148

Token 102: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.09457511454820633
    2. ' map' → logprob: -2.8445751667022705
    3. 'list' → logprob: -3.4695751667022705
    4. ' list' → logprob: -6.969574928283691
    5. '	map' → logprob: -12.344574928283691
    6. '(map' → logprob: -12.719574928283691
    7. ' ' → logprob: -13.844574928283691
    8. 'int' → logprob: -14.094574928283691
    9. 'm' → logprob: -14.594574928283691
    10. 'tuple' → logprob: -15.094574928283691

Token 103: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0015085549093782902
    2. '(' → logprob: -6.626508712768555
    3. '(str' → logprob: -9.126508712768555
    4. 'int' → logprob: -10.376508712768555
    5. '(list' → logprob: -10.751508712768555
    6. '<int' → logprob: -12.126508712768555
    7. '(lambda' → logprob: -12.251508712768555
    8. 'list' → logprob: -12.751508712768555
    9. '[int' → logprob: -13.376508712768555
    10. '(input' → logprob: -13.376508712768555

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09416183084249496
    2. ',input' → logprob: -2.9691617488861084
    3. ')' → logprob: -4.0941619873046875
    4. '(),' → logprob: -4.2191619873046875
    5. '())' → logprob: -5.2191619873046875
    6. '()' → logprob: -6.8441619873046875
    7. '(' → logprob: -8.969161987304688
    8. ' ,' → logprob: -9.094161987304688
    9. ',)' → logprob: -9.219161987304688
    10. 'input' → logprob: -9.344161987304688

Token 105: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.08895277231931686
    2. ' input' → logprob: -2.4639527797698975
    3. ' ' → logprob: -11.963953018188477
    4. ')' → logprob: -12.213953018188477
    5. '(input' → logprob: -14.588953018188477
    6. '	input' → logprob: -14.588953018188477
    7. 'in' → logprob: -15.088953018188477
    8. '  ' → logprob: -15.588953018188477
    9. '=input' → logprob: -16.338953018188477
    10. 'inp' → logprob: -16.463953018188477

Token 106: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00020568605395965278
    2. '())' → logprob: -8.750205993652344
    3. '()' → logprob: -10.000205993652344
    4. ' ().' → logprob: -13.375205993652344
    5. ' ())' → logprob: -16.625205993652344
    6. ')' → logprob: -17.000205993652344
    7. '(' → logprob: -17.250205993652344
    8. '()
' → logprob: -17.375205993652344
    9. '();)' → logprob: -18.125205993652344
    10. ' ()' → logprob: -18.125205993652344

Token 107: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.06307721138000488
    2. 'strip' → logprob: -2.813077211380005
    3. 'rstrip' → logprob: -6.813076972961426
    4. ')' → logprob: -12.563076972961426
    5. ' split' → logprob: -12.688076972961426
    6. '(split' → logprob: -13.938076972961426
    7. 'read' → logprob: -14.188076972961426
    8. 'spl' → logprob: -14.438076972961426
    9. ' ' → logprob: -14.563076972961426
    10. ' strip' → logprob: -15.438076972961426

Token 108: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0073663112707436085
    2. ')' → logprob: -5.507366180419922
    3. '()' → logprob: -5.757366180419922
    4. '(' → logprob: -10.007366180419922
    5. '()))' → logprob: -10.257366180419922
    6. '())
' → logprob: -10.382366180419922
    7. '))' → logprob: -11.882366180419922
    8. ' ())' → logprob: -12.882366180419922
    9. '()
' → logprob: -14.257366180419922
    10. '());' → logprob: -14.632366180419922

Token 109: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005457649822346866
    2. '
' → logprob: -8.625545501708984
    3. '\' → logprob: -8.750545501708984
    4. 'd' → logprob: -9.125545501708984
    5. '\n' → logprob: -10.125545501708984
    6. '#' → logprob: -10.750545501708984
    7. ' def' → logprob: -11.250545501708984
    8. 'ndef' → logprob: -12.125545501708984
    9. '```' → logprob: -12.875545501708984
    10. 'de' → logprob: -12.875545501708984

Token 110: ' LIST' (ID: 49854)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -0.2270170897245407
    2. ' LIST' → logprob: -1.6020170450210571
    3. 'LI' → logprob: -7.102016925811768
    4. 'L' → logprob: -8.227017402648926
    5. 'LS' → logprob: -8.977017402648926
    6. 'List' → logprob: -9.102017402648926
    7. 'LIN' → logprob: -9.602017402648926
    8. '_LIST' → logprob: -9.727017402648926
    9. ' list' → logprob: -10.102017402648926
    10. ' L' → logprob: -10.727017402648926

Token 111: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00470175314694643
    2. '():' → logprob: -5.379701614379883
    3. ' ()' → logprob: -10.254701614379883
    4. '(' → logprob: -11.004701614379883
    5. '()]' → logprob: -11.129701614379883
    6. '()[' → logprob: -13.004701614379883
    7. '()*' → logprob: -13.629701614379883
    8. '()>' → logprob: -13.629701614379883
    9. '（）' → logprob: -13.629701614379883
    10. '(){' → logprob: -13.754701614379883

Token 112: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.438819020986557
    2. '():' → logprob: -1.0638190507888794
    3. '()' → logprob: -4.93881893157959
    4. ':list' → logprob: -6.93881893157959
    5. '->' → logprob: -7.06381893157959
    6. '[]' → logprob: -8.06381893157959
    7. ' ->' → logprob: -8.43881893157959
    8. ':return' → logprob: -9.06381893157959
    9. ' :' → logprob: -9.31381893157959
    10. '=' → logprob: -9.31381893157959

Token 113: ' List' (ID: 2655)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0022683741990476847
    2. ' list' → logprob: -6.252268314361572
    3. 'List' → logprob: -8.00226879119873
    4. 'int' → logprob: -12.62726879119873
    5. '[list' → logprob: -13.62726879119873
    6. '[int' → logprob: -15.25226879119873
    7. '[List' → logprob: -15.25226879119873
    8. '[]' → logprob: -17.252267837524414
    9. ' List' → logprob: -17.252267837524414
    10. ' ' → logprob: -18.127267837524414

Token 114: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.8624639324116288e-06
    2. ':' → logprob: -13.750001907348633
    3. 'int' → logprob: -15.250001907348633
    4. '(int' → logprob: -15.750001907348633
    5. '<int' → logprob: -16.250001907348633
    6. ':int' → logprob: -16.625001907348633
    7. '[' → logprob: -16.625001907348633
    8. '[Int' → logprob: -16.750001907348633
    9. '[]' → logprob: -17.125001907348633
    10. '[in' → logprob: -17.500001907348633

Token 115: ']:' (ID: 12433)
  Prédit: ']:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.10048303008079529
    2. '):' → logprob: -2.350482940673828
    3. ']' → logprob: -8.600482940673828
    4. '():' → logprob: -10.225482940673828
    5. ']):' → logprob: -10.850482940673828
    6. ':' → logprob: -11.100482940673828
    7. ')' → logprob: -11.850482940673828
    8. ' ):' → logprob: -12.225482940673828
    9. '>:' → logprob: -13.225482940673828
    10. '[' → logprob: -13.350482940673828

Token 116: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.003517637262120843
    2. 'return' → logprob: -5.8785176277160645
    3. ' list' → logprob: -7.2535176277160645
    4. 'list' → logprob: -12.753518104553223
    5. '	return' → logprob: -13.878518104553223
    6. ' ' → logprob: -14.878518104553223
    7. '   ' → logprob: -15.253518104553223
    8. ' ' → logprob: -15.503518104553223
    9. ' map' → logprob: -15.878518104553223
    10. 'eturn' → logprob: -17.378517150878906

Token 117: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.023506464436650276
    2. ' list' → logprob: -3.7735064029693604
    3. '[list' → logprob: -8.273506164550781
    4. '[' → logprob: -12.648506164550781
    5. '[int' → logprob: -13.523506164550781
    6. '(list' → logprob: -14.523506164550781
    7. 'map' → logprob: -14.773506164550781
    8. '	list' → logprob: -16.02350616455078
    9. '[List' → logprob: -16.39850616455078
    10. ' [' → logprob: -16.77350616455078

Token 118: '(map' (ID: 16946)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.7305890321731567
    2. '(map' → logprob: -1.2305890321731567
    3. '(' → logprob: -1.8555890321731567
    4. '(int' → logprob: -2.730588912963867
    5. '()' → logprob: -5.605588912963867
    6. '(INT' → logprob: -7.230588912963867
    7. '(INPUT' → logprob: -9.355588912963867
    8. '(list' → logprob: -10.230588912963867
    9. '(L' → logprob: -10.730588912963867
    10. '<int' → logprob: -10.855588912963867

Token 119: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002550217031966895
    2. '(' → logprob: -8.62525463104248
    3. 'int' → logprob: -10.37525463104248
    4. '<int' → logprob: -10.37525463104248
    5. '[int' → logprob: -11.75025463104248
    6. '(
' → logprob: -13.75025463104248
    7. '=int' → logprob: -14.00025463104248
    8. ']int' → logprob: -14.00025463104248
    9. ' (' → logprob: -14.25025463104248
    10. '<|end|>' → logprob: -14.50025463104248

Token 120: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.25661733746528625
    2. ',' → logprob: -1.8816173076629639
    3. '(input' → logprob: -2.631617307662964
    4. '(),' → logprob: -7.131617546081543
    5. '(' → logprob: -7.256617546081543
    6. ' ,' → logprob: -8.131617546081543
    7. 'input' → logprob: -8.881617546081543
    8. '))' → logprob: -9.756617546081543
    9. '()))' → logprob: -11.881617546081543
    10. ' input' → logprob: -12.006617546081543

Token 121: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10020958632230759
    2. ' input' → logprob: -2.3502094745635986
    3. '(input' → logprob: -13.10020923614502
    4. ' ' → logprob: -15.35020923614502
    5. '	input' → logprob: -15.35020923614502
    6. ',input' → logprob: -15.60020923614502
    7. ')' → logprob: -16.475210189819336
    8. '<input' → logprob: -16.975210189819336
    9. 'list' → logprob: -16.975210189819336
    10. 'int' → logprob: -17.225210189819336

Token 122: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. ')' → logprob: -12.750006675720215
    3. '))' → logprob: -13.250006675720215
    4. '()' → logprob: -13.875006675720215
    5. '.' → logprob: -14.500006675720215
    6. '()))' → logprob: -15.625006675720215
    7. ' ().' → logprob: -15.750006675720215
    8. '(' → logprob: -16.12500762939453
    9. ')))' → logprob: -16.62500762939453
    10. '.split' → logprob: -16.75000762939453

Token 123: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.191489642835222e-05
    2. 'strip' → logprob: -10.250041961669922
    3. ' split' → logprob: -12.750041961669922
    4. ')' → logprob: -12.875041961669922
    5. 'rstrip' → logprob: -14.750041961669922
    6. 'spl' → logprob: -15.125041961669922
    7. '(split' → logprob: -16.250041961669922
    8. '().' → logprob: -16.250041961669922
    9. '())' → logprob: -17.625041961669922
    10. 'plit' → logprob: -17.750041961669922

Token 124: '()))

' (ID: 125972)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.1319502890110016
    2. '))' → logprob: -2.1319503784179688
    3. '()' → logprob: -5.506950378417969
    4. '())' → logprob: -7.256950378417969
    5. '()))
' → logprob: -8.756950378417969
    6. ')' → logprob: -9.881950378417969
    7. '(' → logprob: -10.756950378417969
    8. '()));' → logprob: -12.381950378417969
    9. '))
' → logprob: -12.881950378417969
    10. '()))

' → logprob: -13.006950378417969

Token 125: 'sys' (ID: 17324)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5843242406845093
    2. 'd' → logprob: -1.9593242406845093
    3. '
' → logprob: -2.334324359893799
    4. '#' → logprob: -2.334324359893799
    5. '\' → logprob: -3.084324359893799
    6. '\n' → logprob: -3.459324359893799
    7. 'n' → logprob: -3.959324359893799
    8. ' 
' → logprob: -5.959324359893799
    9. 'class' → logprob: -6.334324359893799
    10. '(' → logprob: -6.459324359893799

Token 126: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.0027922766748815775
    2. '.stdin' → logprob: -6.3777923583984375
    3. '.stdout' → logprob: -7.3777923583984375
    4. '.exit' → logprob: -8.502792358398438
    5. '.readline' → logprob: -8.752792358398438
    6. '.stderr' → logprob: -10.127792358398438
    7. '.setdefault' → logprob: -10.877792358398438
    8. '.argv' → logprob: -11.252792358398438
    9. '.write' → logprob: -11.752792358398438
    10. '.read' → logprob: -13.127792358398438

Token 127: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0015289057046175003
    2. '_rec' → logprob: -6.626528739929199
    3. 'limit' → logprob: -9.0015287399292
    4. ' recursion' → logprob: -10.5015287399292
    5. 'ursion' → logprob: -11.1265287399292
    6. '_limit' → logprob: -11.5015287399292
    7. '_' → logprob: -12.3765287399292
    8. 'set' → logprob: -12.8765287399292
    9. 'trace' → logprob: -13.1265287399292
    10. 'ecution' → logprob: -13.5015287399292

Token 128: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -8.911954500945285e-05
    2. 'limit' → logprob: -10.000088691711426
    3. 'ursive' → logprob: -10.750088691711426
    4. 'urs' → logprob: -11.125088691711426
    5. 'usion' → logprob: -13.125088691711426
    6. '_limit' → logprob: -13.125088691711426
    7. 'ur' → logprob: -13.375088691711426
    8. 'ursor' → logprob: -14.875088691711426
    9. 'urst' → logprob: -14.875088691711426
    10. 'urf' → logprob: -15.375088691711426

Token 129: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -1.3856492842023727e-06
    2. 'depth' → logprob: -14.250000953674316
    3. '_limit' → logprob: -15.000000953674316
    4. ' limit' → logprob: -16.125001907348633
    5. 'Limit' → logprob: -17.125001907348633
    6. '(limit' → logprob: -17.375001907348633
    7. 'lim' → logprob: -17.750001907348633
    8. 'limits' → logprob: -19.375001907348633
    9. '[' → logprob: -19.750001907348633
    10. '(' → logprob: -20.125001907348633

Token 130: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.704065213445574e-05
    2. '(
' → logprob: -10.000046730041504
    3. '(

' → logprob: -14.000046730041504
    4. ' (' → logprob: -14.750046730041504
    5. '((' → logprob: -15.375046730041504
    6. '()' → logprob: -16.62504768371582
    7. '(int' → logprob: -17.50004768371582
    8. '(
' → logprob: -18.50004768371582
    9. '(pow' → logprob: -19.25004768371582
    10. '\(' → logprob: -19.37504768371582

Token 131: '1' (ID: 16)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0052495296113193035
    2. '100' → logprob: -5.255249500274658
    3. ' ' → logprob: -11.380249977111816
    4. '1' → logprob: -14.005249977111816
    5. '999' → logprob: -14.130249977111816
    6. '200' → logprob: -14.255249977111816
    7. '500' → logprob: -14.380249977111816
    8. '300' → logprob: -15.005249977111816
    9. 'pow' → logprob: -15.255249977111816
    10. '(' → logprob: -15.505249977111816

Token 132: ' <<' (ID: 2256)
  Prédit: '000'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '000' → logprob: -0.008228613995015621
    2. '00' → logprob: -4.883228778839111
    3. '500' → logprob: -8.758228302001953
    4. '0' → logprob: -9.508228302001953
    5. '07' → logprob: -9.758228302001953
    6. '50' → logprob: -10.008228302001953
    7. '8' → logprob: -10.133228302001953
    8. '050' → logprob: -10.383228302001953
    9. '06' → logprob: -10.633228302001953
    10. '20' → logprob: -10.633228302001953

Token 133: ' ' (ID: 220)
  Prédit: '25'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '25' → logprob: -0.023470710963010788
    2. '20' → logprob: -3.773470640182495
    3. '30' → logprob: -8.773470878601074
    4. '15' → logprob: -10.398470878601074
    5. '2' → logprob: -11.023470878601074
    6. '27' → logprob: -11.898470878601074
    7. '26' → logprob: -12.773470878601074
    8. '29' → logprob: -13.023470878601074
    9. '16' → logprob: -13.148470878601074
    10. '61' → logprob: -13.523470878601074

Token 134: '25' (ID: 1161)
  Prédit: '25'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '25' → logprob: -0.14312227070331573
    2. '20' → logprob: -2.0181221961975098
    3. '30' → logprob: -8.143122673034668
    4. '15' → logprob: -9.268122673034668
    5. '29' → logprob: -10.768122673034668
    6. '27' → logprob: -10.893122673034668
    7. '28' → logprob: -12.143122673034668
    8. '60' → logprob: -12.143122673034668
    9. '2' → logprob: -12.393122673034668
    10. '16' → logprob: -12.768122673034668

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.5776860184123507e-06
    2. ')
' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.12500286102295
    4. ')

' → logprob: -17.375001907348633
    5. ')
' → logprob: -17.625001907348633
    6. ')`' → logprob: -19.375001907348633
    7. '))' → logprob: -19.500001907348633
    8. ')#' → logprob: -19.875001907348633
    9. '),' → logprob: -20.000001907348633
    10. '
' → logprob: -20.625001907348633

Token 136: 'INF' (ID: 64358)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.35807058215141296
    2. '
' → logprob: -1.7330706119537354
    3. 'class' → logprob: -2.6080706119537354
    4. '

' → logprob: -3.6080706119537354
    5. '#' → logprob: -4.108070373535156
    6. 'n' → logprob: -6.233070373535156
    7. '
' → logprob: -7.233070373535156
    8. '\n' → logprob: -7.233070373535156
    9. 'print' → logprob: -7.483070373535156
    10. '<|end|>' → logprob: -7.483070373535156

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06200040504336357
    2. '=' → logprob: -2.8120005130767822
    3. ' ' → logprob: -11.187000274658203
    4. ',' → logprob: -11.312000274658203
    5. ' =
' → logprob: -13.062000274658203
    6. ')' → logprob: -13.312000274658203
    7. '_' → logprob: -13.437000274658203
    8. '.' → logprob: -15.062000274658203
    9. ':' → logprob: -15.187000274658203
    10. ' =)' → logprob: -15.687000274658203

Token 138: ' float' (ID: 4428)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.20674322545528412
    2. 'float' → logprob: -2.2067432403564453
    3. ' ' → logprob: -2.8317432403564453
    4. ' float' → logprob: -4.081743240356445
    5. '1' → logprob: -7.206743240356445
    6. 'int' → logprob: -8.706743240356445
    7. ' int' → logprob: -12.081743240356445
    8. '100' → logprob: -12.581743240356445
    9. '2' → logprob: -13.331743240356445
    10. '(float' → logprob: -13.706743240356445

Token 139: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.0001564586127642542
    2. '(' → logprob: -9.62515640258789
    3. '("' → logprob: -9.87515640258789
    4. ''' → logprob: -10.37515640258789
    5. ''in' → logprob: -12.37515640258789
    6. '"' → logprob: -14.00015640258789
    7. '('.')' → logprob: -14.37515640258789
    8. '('.' → logprob: -14.62515640258789
    9. '('+' → logprob: -14.75015640258789
    10. '('-' → logprob: -15.50015640258789

Token 140: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.019938157871365547
    2. ''in' → logprob: -4.519937992095947
    3. ''' → logprob: -4.769937992095947
    4. '"' → logprob: -8.769938468933105
    5. ''i' → logprob: -9.269938468933105
    6. 'in' → logprob: -9.644938468933105
    7. '('' → logprob: -11.394938468933105
    8. 'i' → logprob: -11.644938468933105
    9. 'info' → logprob: -11.644938468933105
    10. ' inf' → logprob: -11.894938468933105

Token 141: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001600347168277949
    2. '')' → logprob: -8.750160217285156
    3. ' )' → logprob: -14.125160217285156
    4. ')
' → logprob: -14.500160217285156
    5. '")' → logprob: -15.500160217285156
    6. ')
' → logprob: -15.625160217285156
    7. '()' → logprob: -17.625160217285156
    8. '))' → logprob: -18.000160217285156
    9. ')

' → logprob: -18.500160217285156
    10. ')'' → logprob: -18.750160217285156

Token 142: 'mod' (ID: 4847)
  Prédit: 'MOD'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.41604024171829224
    2. 'def' → logprob: -1.9160401821136475
    3. '#' → logprob: -2.4160401821136475
    4. 'n' → logprob: -3.2910401821136475
    5. 'mod' → logprob: -4.041040420532227
    6. 'class' → logprob: -4.291040420532227
    7. 'MAX' → logprob: -5.041040420532227
    8. 'N' → logprob: -5.166040420532227
    9. 'DEBUG' → logprob: -5.791040420532227
    10. 'INF' → logprob: -5.916040420532227

Token 143: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08605628460645676
    2. '=' → logprob: -2.7110562324523926
    3. ' ' → logprob: -4.211056232452393
    4. '_' → logprob: -7.711056232452393
    5. '<|end|>' → logprob: -8.21105670928955
    6. ',' → logprob: -8.33605670928955
    7. '  ' → logprob: -9.33605670928955
    8. 'space' → logprob: -11.21105670928955
    9. ' _' → logprob: -11.33605670928955
    10. ' ,' → logprob: -11.46105670928955

Token 144: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.005240514408797026
    2. '10' → logprob: -5.255240440368652
    3. '100' → logprob: -12.630240440368652
    4. '1' → logprob: -12.755240440368652
    5. ' ' → logprob: -14.880240440368652
    6. ' 
' → logprob: -16.88024139404297
    7. ' int' → logprob: -17.50524139404297
    8. '998' → logprob: -17.63024139404297
    9. 'int' → logprob: -18.00524139404297
    10. '109' → logprob: -18.25524139404297

Token 145: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.0021795271895825863
    2. '100' → logprob: -6.2521796226501465
    3. ' ' → logprob: -8.377179145812988
    4. '1' → logprob: -11.377179145812988
    5. '998' → logprob: -11.627179145812988
    6. 'int' → logprob: -14.877179145812988
    7. '(' → logprob: -16.627180099487305
    8. 'pow' → logprob: -18.002180099487305
    9. '123' → logprob: -18.252180099487305
    10. '```' → logprob: -18.877180099487305

Token 146: ' **' (ID: 6240)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.002265517134219408
    2. '**' → logprob: -6.502265453338623
    3. '09' → logprob: -7.252265453338623
    4. ' ' → logprob: -10.502265930175781
    5. '+' → logprob: -10.752265930175781
    6. '009' → logprob: -13.502265930175781
    7. '0' → logprob: -13.752265930175781
    8. '00' → logprob: -14.127265930175781
    9. '000' → logprob: -14.377265930175781
    10. ' **' → logprob: -14.627265930175781

Token 147: ' ' (ID: 220)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.25
    3. ' ' → logprob: -19.375
    4. '```' → logprob: -20.625
    5. '９' → logprob: -21.25
    6. '+' → logprob: -21.875
    7. '
' → logprob: -22.5
    8. '_' → logprob: -23.125
    9. '10' → logprob: -23.375
    10. '0' → logprob: -23.875

Token 148: '9' (ID: 24)
  Prédit: '9'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: 0.0
    2. '09' → logprob: -17.875
    3. '```' → logprob: -21.5
    4. '９' → logprob: -21.875
    5. '10' → logprob: -22.875
    6. '+' → logprob: -24.0
    7. '18' → logprob: -24.0
    8. '19' → logprob: -24.25
    9. ' ' → logprob: -24.25
    10. '
' → logprob: -24.75

Token 149: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0007133854669518769
    2. ' +' → logprob: -7.250713348388672
    3. '7' → logprob: -12.625713348388672
    4. '＋' → logprob: -17.000713348388672
    5. '+
' → logprob: -17.500713348388672
    6. '+

' → logprob: -18.125713348388672
    7. ' ' → logprob: -18.375713348388672
    8. ' plus' → logprob: -18.625713348388672
    9. ' ' → logprob: -19.000713348388672
    10. 'plus' → logprob: -20.000713348388672

Token 150: ' ' (ID: 220)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '+' → logprob: -19.0
    4. '```' → logprob: -20.0
    5. '07' → logprob: -20.75
    6. '9' → logprob: -21.625
    7. '   ' → logprob: -21.75
    8. '７' → logprob: -21.875
    9. '' → logprob: -22.0
    10. '  ' → logprob: -22.125

Token 151: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: 0.0
    2. ' ' → logprob: -20.25
    3. '```' → logprob: -21.0
    4. '+' → logprob: -21.5
    5. '07' → logprob: -22.125
    6. '７' → logprob: -22.125
    7. '   ' → logprob: -22.875
    8. '9' → logprob: -24.0
    9. '' → logprob: -24.25
    10. '۷' → logprob: -24.5

Token 152: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04261612147092819
    2. 'def' → logprob: -3.792616128921509
    3. '

' → logprob: -4.16761589050293
    4. '<|end|>' → logprob: -6.16761589050293
    5. '#' → logprob: -8.04261589050293
    6. '' → logprob: -8.04261589050293
    7. '
' → logprob: -8.16761589050293
    8. ' 
' → logprob: -8.79261589050293
    9. '\n' → logprob: -9.04261589050293
    10. '```' → logprob: -9.16761589050293

Token 153: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0005539863486774266
    2. 'class' → logprob: -7.500554084777832
    3. 'd' → logprob: -14.375554084777832
    4. '#' → logprob: -15.625554084777832
    5. 'de' → logprob: -16.125553131103516
    6. ' def' → logprob: -16.750553131103516
    7. '\' → logprob: -17.125553131103516
    8. 'n' → logprob: -17.375553131103516
    9. 'ndef' → logprob: -18.500553131103516
    10. 'from' → logprob: -19.375553131103516

Token 154: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14251750707626343
    2. ',' → logprob: -2.642517566680908
    3. '=' → logprob: -3.017517566680908
    4. ' ' → logprob: -4.392517566680908
    5. ' ,' → logprob: -8.14251708984375
    6. '.' → logprob: -10.51751708984375
    7. ')' → logprob: -11.51751708984375
    8. ' =
' → logprob: -11.64251708984375
    9. '  ' → logprob: -13.01751708984375
    10. 'space' → logprob: -13.51751708984375

Token 155: ' INT' (ID: 20104)
  Prédit: ' INT'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' INT' → logprob: -0.19288012385368347
    2. ' int' → logprob: -2.567880153656006
    3. 'INT' → logprob: -2.567880153656006
    4. ' LIST' → logprob: -4.442880153656006
    5. ' ' → logprob: -5.317880153656006
    6. 'int' → logprob: -5.567880153656006
    7. 'LIST' → logprob: -6.817880153656006
    8. ' IN' → logprob: -9.192879676818848
    9. '	INT' → logprob: -10.317879676818848
    10. ' ' → logprob: -10.442879676818848

Token 156: '()
' (ID: 1234)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5715561509132385
    2. '<|end|>' → logprob: -1.6965560913085938
    3. '
' → logprob: -2.8215560913085938
    4. '*' → logprob: -2.8215560913085938
    5. ',' → logprob: -3.3215560913085938
    6. ')' → logprob: -3.5715560913085938
    7. 'for' → logprob: -3.9465560913085938
    8. '#' → logprob: -4.196556091308594
    9. '%' → logprob: -5.321556091308594
    10. ' 
' → logprob: -5.446556091308594

Token 157: 's' (ID: 82)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.11944766342639923
    2. 'a' → logprob: -2.369447708129883
    3. 'arr' → logprob: -5.244447708129883
    4. 'lst' → logprob: -5.369447708129883
    5. 'data' → logprob: -6.244447708129883
    6. 's' → logprob: -6.369447708129883
    7. 'S' → logprob: -6.494447708129883
    8. ' A' → logprob: -6.869447708129883
    9. 'numbers' → logprob: -7.494447708129883
    10. 'H' → logprob: -8.119447708129883

Token 158: 'igs' (ID: 20142)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1890278309583664
    2. '=' → logprob: -1.8140277862548828
    3. 'tr' → logprob: -4.814027786254883
    4. 't' → logprob: -7.814027786254883
    5. 'tring' → logprob: -7.939027786254883
    6. 'trs' → logprob: -9.189027786254883
    7. ' ' → logprob: -9.689027786254883
    8. 'tri' → logprob: -9.814027786254883
    9. '=input' → logprob: -10.064027786254883
    10. '_' → logprob: -10.814027786254883

Token 159: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5400111675262451
    2. 'tr' → logprob: -2.040011167526245
    3. '=' → logprob: -2.415011167526245
    4. 't' → logprob: -2.540011167526245
    5. 'n' → logprob: -3.290011167526245
    6. 's' → logprob: -3.790011167526245
    7. 'nal' → logprob: -4.040011405944824
    8. 'al' → logprob: -4.165011405944824
    9. 'als' → logprob: -5.165011405944824
    10. 'na' → logprob: -6.415011405944824

Token 160: ' (' (ID: 350)
  Prédit: 'LIST'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'LIST' → logprob: -1.2352012395858765
    2. '[]' → logprob: -1.4852012395858765
    3. ' input' → logprob: -2.360201358795166
    4. 'input' → logprob: -2.485201358795166
    5. ' LIST' → logprob: -2.485201358795166
    6. ' []' → logprob: -2.610201358795166
    7. ' list' → logprob: -2.985201358795166
    8. 'list' → logprob: -3.235201358795166
    9. ' [' → logprob: -3.735201358795166
    10. '[' → logprob: -4.110201358795166

Token 161: '''.' (ID: 153150)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7460334897041321
    2. 'ascii' → logprob: -1.3710334300994873
    3. ''' → logprob: -2.9960334300994873
    4. ''a' → logprob: -3.6210334300994873
    5. ')' → logprob: -3.6210334300994873
    6. 'int' → logprob: -3.9960334300994873
    7. 'tuple' → logprob: -4.496033668518066
    8. 'INT' → logprob: -4.621033668518066
    9. ''s' → logprob: -4.746033668518066
    10. '')' → logprob: -4.871033668518066

Token 162: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -0.0056914035230875015
    2. 'upper' → logprob: -5.8806915283203125
    3. 'ascii' → logprob: -6.6306915283203125
    4. 'strip' → logprob: -6.8806915283203125
    5. 'read' → logprob: -9.255691528320312
    6. 'format' → logprob: -9.630691528320312
    7. 'split' → logprob: -9.755691528320312
    8. 'j' → logprob: -9.880691528320312
    9. 'replace' → logprob: -9.880691528320312
    10. 'lower' → logprob: -10.005691528320312

Token 163: '(sorted' (ID: 92488)
  Prédit: '(as'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(as' → logprob: -0.8427565693855286
    2. '([' → logprob: -1.5927565097808838
    3. '(input' → logprob: -1.8427565097808838
    4. '(sorted' → logprob: -2.217756509780884
    5. 'ascii' → logprob: -3.467756509780884
    6. '(L' → logprob: -3.842756509780884
    7. '(list' → logprob: -4.717756748199463
    8. '(' → logprob: -4.717756748199463
    9. '(per' → logprob: -5.217756748199463
    10. 'input' → logprob: -5.592756748199463

Token 164: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.045066725462675095
    2. '(list' → logprob: -3.4200668334960938
    3. 'input' → logprob: -5.795066833496094
    4. ')' → logprob: -6.295066833496094
    5. '(s' → logprob: -6.420066833496094
    6. 'list' → logprob: -6.795066833496094
    7. '(sorted' → logprob: -7.170066833496094
    8. '(' → logprob: -7.295066833496094
    9. '([' → logprob: -7.920066833496094
    10. '(as' → logprob: -8.045066833496094

Token 165: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0019069778500124812
    2. '()' → logprob: -6.626906871795654
    3. '()))' → logprob: -8.001907348632812
    4. '())))' → logprob: -8.376907348632812
    5. '())' → logprob: -11.876907348632812
    6. '(' → logprob: -12.251907348632812
    7. '()
' → logprob: -13.626907348632812
    8. '()[' → logprob: -14.501907348632812
    9. ')))' → logprob: -14.626907348632812
    10. ' ().' → logprob: -15.126907348632812

Token 166: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.013056577183306217
    2. 'rstrip' → logprob: -4.388056755065918
    3. 'split' → logprob: -7.888056755065918
    4. 'read' → logprob: -8.888056755065918
    5. 'replace' → logprob: -11.013056755065918
    6. ' strip' → logprob: -11.638056755065918
    7. 'str' → logprob: -12.388056755065918
    8. '.strip' → logprob: -13.513056755065918
    9. ')' → logprob: -14.263056755065918
    10. 'decode' → logprob: -14.388056755065918

Token 167: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.29094991087913513
    2. '())))' → logprob: -1.4159499406814575
    3. '()' → logprob: -5.665949821472168
    4. '())))
' → logprob: -5.790949821472168
    5. '()))
' → logprob: -6.165949821472168
    6. ')))' → logprob: -7.290949821472168
    7. '))' → logprob: -9.040949821472168
    8. '()
' → logprob: -9.165949821472168
    9. '())).' → logprob: -9.665949821472168
    10. '())' → logprob: -9.915949821472168

Token 168: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2818310856819153
    2. ' for' → logprob: -1.4068310260772705
    3. ')' → logprob: -7.40683126449585
    4. '	for' → logprob: -10.531830787658691
    5. ' ' → logprob: -10.656830787658691
    6. '   ' → logprob: -11.156830787658691
    7. '    ' → logprob: -13.406830787658691
    8. ' )' → logprob: -13.406830787658691
    9. '
' → logprob: -13.656830787658691
    10. ' f' → logprob: -13.781830787658691

Token 169: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.15441757265944e-05
    2. '_range' → logprob: -11.250031471252441
    3. '_i' → logprob: -11.375031471252441
    4. ' _' → logprob: -12.375031471252441
    5. ' range' → logprob: -13.250031471252441
    6. 'range' → logprob: -14.625031471252441
    7. 'i' → logprob: -15.500031471252441
    8. '_
' → logprob: -15.875031471252441
    9. '_s' → logprob: -16.750032424926758
    10. '_=' → logprob: -17.000032424926758

Token 170: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02551412023603916
    2. 'in' → logprob: -3.7755141258239746
    3. 'range' → logprob: -6.150514125823975
    4. ' range' → logprob: -9.025513648986816
    5. ' ' → logprob: -12.275513648986816
    6. 's' → logprob: -12.900513648986816
    7. 'i' → logprob: -13.275513648986816
    8. ')' → logprob: -13.775513648986816
    9. 'N' → logprob: -13.775513648986816
    10. ' _' → logprob: -14.525513648986816

Token 171: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008112939540296793
    2. ' range' → logprob: -7.2508111000061035
    3. 's' → logprob: -9.250811576843262
    4. '(range' → logprob: -12.875811576843262
    5. 'r' → logprob: -14.375811576843262
    6. ')' → logprob: -14.750811576843262
    7. 'iter' → logprob: -14.875811576843262
    8. '	range' → logprob: -14.875811576843262
    9. '[' → logprob: -15.625811576843262
    10. 'rang' → logprob: -15.750811576843262

Token 172: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0009205120149999857
    2. 'N' → logprob: -7.000920295715332
    3. '(' → logprob: -11.750920295715332
    4. ' N' → logprob: -14.625920295715332
    5. '(
' → logprob: -14.875920295715332
    6. '	N' → logprob: -15.500920295715332
    7. '(n' → logprob: -16.62592124938965
    8. ' (' → logprob: -18.25092124938965
    9. ',N' → logprob: -18.50092124938965
    10. ')' → logprob: -18.62592124938965

Token 173: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0011715330183506012
    2. '))' → logprob: -6.751171588897705
    3. ')
' → logprob: -14.626171112060547
    4. ' )' → logprob: -15.001171112060547
    5. ')}' → logprob: -15.626171112060547
    6. ')))' → logprob: -15.751171112060547
    7. ')`' → logprob: -16.001171112060547
    8. '})' → logprob: -17.876171112060547
    9. '),' → logprob: -17.876171112060547
    10. '])' → logprob: -18.251171112060547

Token 174: 'ctr' (ID: 18088)
  Prédit: 'counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'counter' → logprob: -0.16201777756214142
    2. 'counts' → logprob: -2.162017822265625
    3. 'count' → logprob: -3.787017822265625
    4. 'freq' → logprob: -5.662017822265625
    5. 'sig' → logprob: -5.787017822265625
    6. 'c' → logprob: -6.287017822265625
    7. 'cnt' → logprob: -6.537017822265625
    8. 'Counter' → logprob: -7.162017822265625
    9. 'signature' → logprob: -7.662017822265625
    10. 'sign' → logprob: -8.662017822265625

Token 175: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31334030628204346
    2. ' =' → logprob: -1.3133403062820435
    3. 's' → logprob: -9.563340187072754
    4. ' ' → logprob: -12.063340187072754
    5. 'er' → logprob: -14.313340187072754
    6. '＝' → logprob: -14.313340187072754
    7. '=s' → logprob: -15.313340187072754
    8. '  ' → logprob: -15.813340187072754
    9. 'or' → logprob: -15.813340187072754
    10. '=

' → logprob: -16.18834114074707

Token 176: ' Counter' (ID: 32251)
  Prédit: 'Counter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Counter' → logprob: -0.06197071075439453
    2. ' Counter' → logprob: -2.8119707107543945
    3. '.Counter' → logprob: -13.061970710754395
    4. ' counter' → logprob: -15.311970710754395
    5. 'counter' → logprob: -15.311970710754395
    6. '_counter' → logprob: -16.061969757080078
    7. 'Counters' → logprob: -16.061969757080078
    8. 'Coun' → logprob: -16.311969757080078
    9. ' ' → logprob: -16.811969757080078
    10. 'COUN' → logprob: -17.686969757080078

Token 177: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0014947418821975589
    2. '(' → logprob: -6.626494884490967
    3. '()' → logprob: -8.751494407653809
    4. 's' → logprob: -11.501494407653809
    5. ')' → logprob: -16.376495361328125
    6. '(list' → logprob: -16.626495361328125
    7. '((' → logprob: -16.876495361328125
    8. '(
' → logprob: -17.376495361328125
    9. '(sig' → logprob: -17.626495361328125
    10. '(S' → logprob: -17.751495361328125

Token 178: 'igs' (ID: 20142)
  Prédit: 'igs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'igs' → logprob: -0.17782410979270935
    2. 's' → logprob: -1.9278241395950317
    3. ')' → logprob: -4.802824020385742
    4. ')s' → logprob: -5.302824020385742
    5. ')(' → logprob: -6.802824020385742
    6. 'ags' → logprob: -7.427824020385742
    7. '(' → logprob: -7.802824020385742
    8. '(s' → logprob: -7.802824020385742
    9. '))' → logprob: -7.802824020385742
    10. 'gs' → logprob: -8.552824020385742

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.7432603272027336e-06
    2. ')
' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.500001907348633
    4. '))' → logprob: -14.875001907348633
    5. ')`' → logprob: -16.875001907348633
    6. '[' → logprob: -17.250001907348633
    7. ').' → logprob: -18.000001907348633
    8. ')
' → logprob: -18.125001907348633
    9. '()' → logprob: -18.250001907348633
    10. ')

' → logprob: -18.375001907348633

Token 180: 'print' (ID: 1598)
  Prédit: 'ans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ans' → logprob: -0.1198388934135437
    2. 'res' → logprob: -2.9948389530181885
    3. 'print' → logprob: -3.3698389530181885
    4. 'result' → logprob: -4.369838714599609
    5. 'answer' → logprob: -4.619838714599609
    6. 'for' → logprob: -6.119838714599609
    7. 'total' → logprob: -7.244838714599609
    8. ' ans' → logprob: -7.244838714599609
    9. 'pairs' → logprob: -7.619838714599609
    10. 'count' → logprob: -7.869838714599609

Token 181: '(sum' (ID: 45528)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1659587323665619
    2. '(max' → logprob: -1.9159587621688843
    3. '(sum' → logprob: -6.165958881378174
    4. '(len' → logprob: -6.165958881378174
    5. '(sorted' → logprob: -8.165958404541016
    6. '(min' → logprob: -8.290958404541016
    7. '(list' → logprob: -8.290958404541016
    8. '(
' → logprob: -8.915958404541016
    9. '('' → logprob: -9.040958404541016
    10. '((' → logprob: -9.040958404541016

Token 182: '(n' (ID: 2406)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.016763420775532722
    2. '(' → logprob: -5.141763210296631
    3. '(x' → logprob: -5.391763210296631
    4. '(val' → logprob: -5.516763210296631
    5. '(c' → logprob: -7.266763210296631
    6. '([' → logprob: -7.766763210296631
    7. '(value' → logprob: -8.141763687133789
    8. '(cnt' → logprob: -8.391763687133789
    9. '((' → logprob: -8.516763687133789
    10. '(count' → logprob: -9.141763687133789

Token 183: ' *' (ID: 425)
  Prédit: '*('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*(' → logprob: -0.4983288645744324
    2. ' *' → logprob: -0.9983288645744324
    3. '*' → logprob: -3.748328924179077
    4. '*v' → logprob: -8.248329162597656
    5. '*n' → logprob: -9.123329162597656
    6. '(n' → logprob: -11.748329162597656
    7. '*k' → logprob: -12.248329162597656
    8. '*c' → logprob: -12.248329162597656
    9. ' *(' → logprob: -12.373329162597656
    10. '**' → logprob: -12.998329162597656

Token 184: ' (' (ID: 350)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0006047414499334991
    2. ' (' → logprob: -7.500604629516602
    3. '(' → logprob: -10.000604629516602
    4. '
' → logprob: -13.250604629516602
    5. '(m' → logprob: -14.000604629516602
    6. '(N' → logprob: -14.125604629516602
    7. '(num' → logprob: -14.250604629516602
    8. 'n' → logprob: -14.750604629516602
    9. '(k' → logprob: -15.375604629516602
    10. '（' → logprob: -15.375604629516602

Token 185: 'n' (ID: 77)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.25198736786842346
    2. 'n' → logprob: -1.501987338066101
    3. ' n' → logprob: -10.50198745727539
    4. ' (' → logprob: -11.00198745727539
    5. '(' → logprob: -11.37698745727539
    6. '
' → logprob: -14.00198745727539
    7. '	n' → logprob: -14.00198745727539
    8. '[n' → logprob: -15.75198745727539
    9. '```' → logprob: -16.12698745727539
    10. ' ' → logprob: -16.12698745727539

Token 186: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.6931595206260681
    2. ' -' → logprob: -0.6931595206260681
    3. ' ' → logprob: -11.693159103393555
    4. '1' → logprob: -13.068159103393555
    5. '−' → logprob: -14.818159103393555
    6. '```' → logprob: -15.068159103393555
    7. '
' → logprob: -15.193159103393555
    8. '–' → logprob: -15.318159103393555
    9. ' ' → logprob: -16.068159103393555
    10. '  ' → logprob: -16.193159103393555

Token 187: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00046618093620054424
    2. ' ' → logprob: -7.750466346740723
    3. ')' → logprob: -10.375466346740723
    4. '
' → logprob: -14.125466346740723
    5. '```' → logprob: -14.375466346740723
    6. ' )' → logprob: -14.812966346740723
    7. '2' → logprob: -14.937966346740723
    8. ')/' → logprob: -15.187966346740723
    9. '=' → logprob: -15.312966346740723
    10. '  ' → logprob: -15.562966346740723

Token 188: ')' (ID: 8)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.2578085660934448
    2. '//' → logprob: -1.5078085660934448
    3. ')' → logprob: -5.632808685302734
    4. ')//' → logprob: -6.132808685302734
    5. ' )' → logprob: -9.257808685302734
    6. ' ' → logprob: -11.257808685302734
    7. '```' → logprob: -13.382808685302734
    8. '
' → logprob: -14.382808685302734
    9. '()' → logprob: -14.882808685302734
    10. '))' → logprob: -15.007808685302734

Token 189: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.1602306365966797
    2. '//' → logprob: -1.9102306365966797
    3. ' for' → logprob: -13.03523063659668
    4. ' ' → logprob: -13.66023063659668
    5. ')//' → logprob: -13.78523063659668
    6. 'for' → logprob: -14.16023063659668
    7. ')' → logprob: -14.28523063659668
    8. '```' → logprob: -14.91023063659668
    9. ' ' → logprob: -15.78523063659668
    10. ' )' → logprob: -16.53523063659668

Token 190: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '
' → logprob: -17.12510871887207
    4. ')' → logprob: -17.62510871887207
    5. '```' → logprob: -17.87510871887207
    6. '２' → logprob: -18.50010871887207
    7. '   ' → logprob: -18.62510871887207
    8. '۲' → logprob: -18.62510871887207
    9. '1' → logprob: -18.81260871887207
    10. ' ' → logprob: -19.81260871887207

Token 191: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -16.750001907348633
    4. '1' → logprob: -18.375001907348633
    5. '```' → logprob: -18.500001907348633
    6. ')' → logprob: -18.750001907348633
    7. '２' → logprob: -18.875001907348633
    8. '   ' → logprob: -19.250001907348633
    9. '۲' → logprob: -19.250001907348633
    10. '

' → logprob: -19.750001907348633

Token 192: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.014339192770421505
    2. 'for' → logprob: -4.264338970184326
    3. ')' → logprob: -8.889339447021484
    4. ' ' → logprob: -10.389339447021484
    5. '))' → logprob: -12.389339447021484
    6. '	for' → logprob: -14.014339447021484
    7. '  ' → logprob: -14.014339447021484
    8. ' )' → logprob: -14.014339447021484
    9. '   ' → logprob: -16.014339447021484
    10. ' ))' → logprob: -16.139339447021484

Token 193: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.02325211651623249
    2. ' n' → logprob: -3.773252010345459
    3. '	n' → logprob: -12.648252487182617
    4. '_n' → logprob: -12.773252487182617
    5. ')n' → logprob: -15.023252487182617
    6. ',n' → logprob: -16.023252487182617
    7. '_' → logprob: -16.273252487182617
    8. ',' → logprob: -17.023252487182617
    9. ')' → logprob: -18.148252487182617
    10. ' ' → logprob: -18.273252487182617

Token 194: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00014489953173324466
    2. 'in' → logprob: -9.125144958496094
    3. ' ctr' → logprob: -10.875144958496094
    4. ')' → logprob: -12.125144958496094
    5. ' ' → logprob: -12.125144958496094
    6. 'ctr' → logprob: -13.625144958496094
    7. ' values' → logprob: -13.750144958496094
    8. ',' → logprob: -14.000144958496094
    9. ' )' → logprob: -14.250144958496094
    10. 'values' → logprob: -14.375144958496094

Token 195: ' ctr' (ID: 113563)
  Prédit: 'ctr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ctr' → logprob: -0.0015031944494694471
    2. ' ctr' → logprob: -6.501502990722656
    3. 'ctrl' → logprob: -15.001502990722656
    4. 'counter' → logprob: -15.626502990722656
    5. 'ct' → logprob: -15.876502990722656
    6. 'ctor' → logprob: -15.876502990722656
    7. 'crt' → logprob: -16.626502990722656
    8. '_ctr' → logprob: -16.751502990722656
    9. 'Ctr' → logprob: -18.001502990722656
    10. 'values' → logprob: -19.126502990722656

Token 196: '.values' (ID: 20422)
  Prédit: '.values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.values' → logprob: -6.480199954239652e-05
    2. '.' → logprob: -10.625064849853516
    3. 'values' → logprob: -10.750064849853516
    4. '.value' → logprob: -11.250064849853516
    5. '.Values' → logprob: -12.875064849853516
    6. ')' → logprob: -13.625064849853516
    7. ').' → logprob: -13.750064849853516
    8. ' .' → logprob: -14.625064849853516
    9. ' values' → logprob: -15.000064849853516
    10. '.v' → logprob: -15.375064849853516

Token 197: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.03826364502310753
    2. '())' → logprob: -3.7882635593414307
    3. '()' → logprob: -4.28826379776001
    4. '))' → logprob: -6.78826379776001
    5. ')' → logprob: -10.413263320922852
    6. '(' → logprob: -11.913263320922852
    7. '()
' → logprob: -12.413263320922852
    8. '()),' → logprob: -13.038263320922852
    9. '()))
' → logprob: -13.163263320922852
    10. '())
' → logprob: -13.413263320922852


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 195
Tokens correctement prédits (1ère position, stricte): 82
Tokens correctement prédits (1ère position, avec adaptation): 82
Tokens correctement prédits (top 10): 156
Précision stricte (1ère position): 42.05%
Précision adaptée (1ère position): 42.05%
Précision (top 10): 80.00%
================================================================================
