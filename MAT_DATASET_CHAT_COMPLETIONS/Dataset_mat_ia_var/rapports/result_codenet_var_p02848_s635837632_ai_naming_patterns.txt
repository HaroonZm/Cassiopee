================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:36:42
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
shift_amount = int(input())
input_string = input()

UPPERCASE_START = 65
ALPHABET_SIZE = 26

shifted_chars = []

for char in input_string:
    shifted_char_code = (ord(char) + shift_amount - UPPERCASE_START) % ALPHABET_SIZE + UPPERCASE_START
    shifted_chars.append(chr(shifted_char_code))

shifted_string = "".join(shifted_chars)
print(shifted_string)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'shift' (ID: 27472)
  → Token d'amorce (pas de prédiction)

Token 1: '_amount' (ID: 29145)
  → Token d'amorce (pas de prédiction)

Token 2: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 3: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06968862563371658
    2. '1' → logprob: -2.819688558578491
    3. '32' → logprob: -5.81968879699707
    4. '4' → logprob: -5.81968879699707
    5. '0' → logprob: -6.56968879699707
    6. '2' → logprob: -8.81968879699707
    7. '10' → logprob: -9.69468879699707
    8. '5' → logprob: -9.81968879699707
    9. '16' → logprob: -10.81968879699707
    10. '3' → logprob: -11.19468879699707

Token 4: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0022670666221529245
    2. '```' → logprob: -7.252266883850098
    3. '_' → logprob: -7.502266883850098
    4. '('' → logprob: -8.377266883850098
    5. '[' → logprob: -9.002266883850098
    6. ''' → logprob: -9.252266883850098
    7. '("("' → logprob: -9.377266883850098
    8. '`' → logprob: -9.377266883850098
    9. 'shift' → logprob: -9.627266883850098
    10. '_shift' → logprob: -10.002266883850098

Token 5: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01864898018538952
    2. ')' → logprob: -4.643649101257324
    3. '()' → logprob: -5.393649101257324
    4. '('' → logprob: -6.393649101257324
    5. '("("' → logprob: -7.268649101257324
    6. '())' → logprob: -7.518649101257324
    7. '(()' → logprob: -8.143649101257324
    8. '```' → logprob: -8.768649101257324
    9. '(
' → logprob: -8.893649101257324
    10. '<|end|>' → logprob: -9.018649101257324

Token 6: 'input' (ID: 2586)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.19407972693443298
    2. 'if' → logprob: -2.069079637527466
    3. '*' → logprob: -3.694079637527466
    4. '+' → logprob: -4.069079875946045
    5. '#' → logprob: -6.569079875946045
    6. 'shift' → logprob: -6.819079875946045
    7. ' if' → logprob: -7.319079875946045
    8. '**' → logprob: -7.319079875946045
    9. 'print' → logprob: -7.569079875946045
    10. '`' → logprob: -7.694079875946045

Token 7: '_string' (ID: 8609)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4119296371936798
    2. '(' → logprob: -1.2869296073913574
    3. '_' → logprob: -3.9119296073913574
    4. '_data' → logprob: -4.911929607391357
    5. '_str' → logprob: -5.036929607391357
    6. '().' → logprob: -5.161929607391357
    7. '())' → logprob: -5.786929607391357
    8. '_value' → logprob: -6.036929607391357
    9. '```' → logprob: -6.161929607391357
    10. '('' → logprob: -6.286929607391357

Token 8: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006243499927222729
    2. '[:]' → logprob: -6.506243705749512
    3. '.' → logprob: -7.256243705749512
    4. '+' → logprob: -7.256243705749512
    5. '```' → logprob: -7.506243705749512
    6. '[::-' → logprob: -7.881243705749512
    7. '[token' → logprob: -7.881243705749512
    8. '[input' → logprob: -8.131243705749512
    9. '.strip' → logprob: -8.506243705749512
    10. '[]' → logprob: -8.631243705749512

Token 9: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.11288768798112869
    2. 'input' → logprob: -2.2378876209259033
    3. '=input' → logprob: -10.862887382507324
    4. '"' → logprob: -11.237887382507324
    5. ' ' → logprob: -11.487887382507324
    6. '(input' → logprob: -11.612887382507324
    7. ''' → logprob: -12.862887382507324
    8. ',input' → logprob: -13.362887382507324
    9. ' str' → logprob: -13.612887382507324
    10. '	input' → logprob: -13.862887382507324

Token 10: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22636054456233978
    2. '()' → logprob: -1.601360559463501
    3. ')' → logprob: -8.101360321044922
    4. '```' → logprob: -8.476360321044922
    5. '('' → logprob: -9.226360321044922
    6. ' (' → logprob: -9.976360321044922
    7. '(
' → logprob: -10.101360321044922
    8. '(

' → logprob: -10.101360321044922
    9. '())' → logprob: -10.476360321044922
    10. '(`' → logprob: -10.726360321044922

Token 11: 'UP' (ID: 5082)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.6319327354431152
    2. 'for' → logprob: -1.0069327354431152
    3. 'shift' → logprob: -2.6319327354431152
    4. 'output' → logprob: -4.256932735443115
    5. 'if' → logprob: -4.381932735443115
    6. '```' → logprob: -6.131932735443115
    7. 'decoded' → logprob: -7.256932735443115
    8. 'new' → logprob: -8.006933212280273
    9. 'n' → logprob: -8.256933212280273
    10. 'encoded' → logprob: -8.631933212280273

Token 12: 'PER' (ID: 30139)
  Prédit: 'PER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PER' → logprob: -0.24202890694141388
    2. 'P' → logprob: -1.7420289516448975
    3. 'PPER' → logprob: -3.7420289516448975
    4. '_' → logprob: -5.242028713226318
    5. 'per' → logprob: -5.992028713226318
    6. '```' → logprob: -6.367028713226318
    7. 'PE' → logprob: -6.617028713226318
    8. '()' → logprob: -6.742028713226318
    9. ' =' → logprob: -6.992028713226318
    10. '``' → logprob: -7.867028713226318

Token 13: 'CASE' (ID: 76384)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.1248960793018341
    2. '_' → logprob: -2.8748960494995117
    3. '(' → logprob: -2.9998960494995117
    4. '()' → logprob: -5.124896049499512
    5. '().' → logprob: -6.499896049499512
    6. ')' → logprob: -6.999896049499512
    7. '.lower' → logprob: -7.124896049499512
    8. '._' → logprob: -7.624896049499512
    9. 'case' → logprob: -7.874896049499512
    10. '```' → logprob: -8.999896049499512

Token 14: '_START' (ID: 28418)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6316945552825928
    2. '.lower' → logprob: -1.1316945552825928
    3. '_' → logprob: -2.7566945552825928
    4. '=' → logprob: -4.131694793701172
    5. '.upper' → logprob: -4.131694793701172
    6. '()' → logprob: -4.256694793701172
    7. '(' → logprob: -4.756694793701172
    8. ' =' → logprob: -4.881694793701172
    9. ')' → logprob: -5.381694793701172
    10. '().' → logprob: -5.631694793701172

Token 15: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7478954792022705
    2. ' =' → logprob: -1.3728954792022705
    3. ')' → logprob: -2.4978954792022705
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -3.7478954792022705
    5. '+' → logprob: -3.8728954792022705
    6. '(' → logprob: -4.122895240783691
    7. 'for' → logprob: -4.247895240783691
    8. '_' → logprob: -4.247895240783691
    9. '65' → logprob: -4.372895240783691
    10. ' +' → logprob: -4.872895240783691

Token 16: ' ' (ID: 220)
  Prédit: '65'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.003651860635727644
    2. ' ' → logprob: -5.628652095794678
    3. 'ord' → logprob: -10.50365161895752
    4. ' ord' → logprob: -10.75365161895752
    5. '64' → logprob: -14.37865161895752
    6. 'A' → logprob: -14.50365161895752
    7. '   ' → logprob: -15.00365161895752
    8. '6' → logprob: -15.37865161895752
    9. ''A' → logprob: -15.37865161895752
    10. '`' → logprob: -15.50365161895752

Token 17: '65' (ID: 3898)
  Prédit: '65'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '65' → logprob: -0.0002574057725723833
    2. 'ord' → logprob: -8.50025749206543
    3. ' ' → logprob: -10.12525749206543
    4. ' ord' → logprob: -11.62525749206543
    5. ''A' → logprob: -13.50025749206543
    6. '(ord' → logprob: -13.62525749206543
    7. ''' → logprob: -14.50025749206543
    8. '64' → logprob: -14.87525749206543
    9. 'A' → logprob: -15.12525749206543
    10. '`' → logprob: -15.12525749206543

Token 18: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 19: 'AL' (ID: 1483)
  Prédit: 'UP'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'UP' → logprob: -0.23867319524288177
    2. 'Z' → logprob: -1.613673210144043
    3. 'LOW' → logprob: -4.863673210144043
    4. 'AL' → logprob: -6.738673210144043
    5. 'U' → logprob: -6.863673210144043
    6. '90' → logprob: -7.363673210144043
    7. 'lower' → logprob: -7.488673210144043
    8. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -8.363673210144043
    9. 'uppercase' → logprob: -8.488673210144043
    10. ' LOWER' → logprob: -8.738673210144043

Token 20: 'PH' (ID: 20818)
  Prédit: 'PH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PH' → logprob: -0.5660548210144043
    2. 'P' → logprob: -1.6910548210144043
    3. 'L' → logprob: -2.0660548210144043
    4. 'PHA' → logprob: -2.4410548210144043
    5. 'phabet' → logprob: -4.191054821014404
    6. 'LP' → logprob: -5.191054821014404
    7. 'A' → logprob: -5.566054821014404
    8. 'PPER' → logprob: -6.191054821014404
    9. '26' → logprob: -6.441054821014404
    10. 'S' → logprob: -6.816054821014404

Token 21: 'ABET' (ID: 123726)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.05529509112238884
    2. 'ABET' → logprob: -2.930294990539551
    3. 'AB' → logprob: -8.05529499053955
    4. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -9.93029499053955
    5. '```' → logprob: -10.30529499053955
    6. 'А' → logprob: -12.30529499053955
    7. 'ABA' → logprob: -12.93029499053955
    8. 'ABE' → logprob: -12.93029499053955
    9. 'abet' → logprob: -14.80529499053955
    10. 'Ab' → logprob: -15.05529499053955

Token 22: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.07267977297306061
    2. '_LENGTH' → logprob: -2.8226797580718994
    3. '_COUNT' → logprob: -4.6976799964904785
    4. '_LEN' → logprob: -6.5726799964904785
    5. '_LE' → logprob: -10.32267951965332
    6. '_END' → logprob: -10.32267951965332
    7. '_START' → logprob: -10.82267951965332
    8. '_' → logprob: -10.94767951965332
    9. '_NUM' → logprob: -11.19767951965332
    10. '_NUMBER' → logprob: -12.44767951965332

Token 23: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005234002135694027
    2. '=' → logprob: -5.2552337646484375
    3. ' ' → logprob: -16.130233764648438
    4. ' =
' → logprob: -16.755233764648438
    5. ',' → logprob: -18.755233764648438
    6. '```' → logprob: -18.880233764648438
    7. ')' → logprob: -19.130233764648438
    8. '_' → logprob: -19.630233764648438
    9. '＝' → logprob: -19.630233764648438
    10. ' =
' → logprob: -19.755233764648438

Token 24: ' ' (ID: 220)
  Prédit: '26'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -0.003177952254191041
    2. ' ' → logprob: -5.753178119659424
    3. '25' → logprob: -16.003177642822266
    4. '2' → logprob: -16.753177642822266
    5. '27' → logprob: -17.128177642822266
    6. '```' → logprob: -18.128177642822266
    7. ' ' → logprob: -19.253177642822266
    8. '260' → logprob: -20.003177642822266
    9. '﻿' → logprob: -20.253177642822266
    10. '24' → logprob: -20.315677642822266

Token 25: '26' (ID: 2109)
  Prédit: '26'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '26' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '2' → logprob: -17.12500762939453
    4. '25' → logprob: -18.62500762939453
    5. '```' → logprob: -19.50000762939453
    6. '27' → logprob: -20.75000762939453
    7. '   ' → logprob: -21.31250762939453
    8. '260' → logprob: -21.56250762939453
    9. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -22.06250762939453
    10. 'Z' → logprob: -22.12500762939453

Token 26: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3219321370124817
    2. 'for' → logprob: -1.821932077407837
    3. 'shift' → logprob: -3.571932077407837
    4. 'result' → logprob: -3.571932077407837
    5. '```' → logprob: -4.321932315826416
    6. 'newline' → logprob: -4.321932315826416
    7. 'decoded' → logprob: -4.821932315826416
    8. 'output' → logprob: -5.446932315826416
    9. '\n' → logprob: -5.821932315826416
    10. '' → logprob: -6.321932315826416

Token 27: 'shift' (ID: 27472)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3008034825325012
    2. 'output' → logprob: -2.3008034229278564
    3. 'shift' → logprob: -2.6758034229278564
    4. 'for' → logprob: -2.6758034229278564
    5. 'def' → logprob: -4.8008036613464355
    6. 'decoded' → logprob: -5.5508036613464355
    7. '
' → logprob: -5.8008036613464355
    8. 'encoded' → logprob: -5.9258036613464355
    9. 'new' → logprob: -6.6758036613464355
    10. '```' → logprob: -7.1758036613464355

Token 28: 'ed' (ID: 295)
  Prédit: '_amount'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -0.006192441564053297
    2. '_' → logprob: -5.131192207336426
    3. '_amt' → logprob: -8.631192207336426
    4. '_am' → logprob: -11.256192207336426
    5. '_a' → logprob: -11.256192207336426
    6. '_angle' → logprob: -12.006192207336426
    7. ' _' → logprob: -12.256192207336426
    8. '_offset' → logprob: -12.256192207336426
    9. '_value' → logprob: -12.506192207336426
    10. 'ed' → logprob: -12.631192207336426

Token 29: '_chars' (ID: 94246)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.012255794368684292
    2. '_char' → logprob: -5.637255668640137
    3. '_string' → logprob: -6.387255668640137
    4. 'ed' → logprob: -6.512255668640137
    5. '_chars' → logprob: -7.012255668640137
    6. '_value' → logprob: -7.262255668640137
    7. '_amount' → logprob: -7.637255668640137
    8. '_text' → logprob: -7.637255668640137
    9. '_a' → logprob: -7.887255668640137
    10. '_shift' → logprob: -8.137255668640137

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03389003127813339
    2. '=' → logprob: -3.4088900089263916
    3. '[' → logprob: -9.033889770507812
    4. ' ' → logprob: -9.908889770507812
    5. '_' → logprob: -10.408889770507812
    6. '[]' → logprob: -11.158889770507812
    7. '=[]' → logprob: -11.283889770507812
    8. '[:]' → logprob: -12.408889770507812
    9. ' =[' → logprob: -12.533889770507812
    10. 's' → logprob: -13.408889770507812

Token 31: ' []

' (ID: 32833)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.03689678758382797
    2. ' [' → logprob: -3.5368967056274414
    3. ' ' → logprob: -5.411896705627441
    4. '[]' → logprob: -6.411896705627441
    5. '[' → logprob: -6.911896705627441
    6. ' "' → logprob: -12.536896705627441
    7. ' []
' → logprob: -12.661896705627441
    8. ' list' → logprob: -12.786896705627441
    9. ' [
' → logprob: -12.911896705627441
    10. ' ['' → logprob: -13.536896705627441

Token 32: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005680450703948736
    2. 'f' → logprob: -7.50056791305542
    3. '```' → logprob: -11.750568389892578
    4. ' for' → logprob: -12.125568389892578
    5. '
' → logprob: -13.625568389892578
    6. 'i' → logprob: -15.000568389892578
    7. '	for' → logprob: -17.000568389892578
    8. 'n' → logprob: -17.125568389892578
    9. 'F' → logprob: -17.250568389892578
    10. '`' → logprob: -17.375568389892578

Token 33: ' char' (ID: 1826)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6788491606712341
    2. ' char' → logprob: -1.428849220275879
    3. ' i' → logprob: -1.928849220275879
    4. ' c' → logprob: -2.303849220275879
    5. ' _' → logprob: -5.053849220275879
    6. ' ch' → logprob: -6.928849220275879
    7. ' token' → logprob: -8.553849220275879
    8. 'char' → logprob: -9.053849220275879
    9. ' index' → logprob: -9.428849220275879
    10. 'c' → logprob: -10.178849220275879

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008328747935593128
    2. 'in' → logprob: -4.883328914642334
    3. ' ' → logprob: -7.258328914642334
    4. '<|end|>' → logprob: -12.383328437805176
    5. 's' → logprob: -12.758328437805176
    6. ' ,' → logprob: -12.883328437805176
    7. '  ' → logprob: -13.008328437805176
    8. ',' → logprob: -13.633328437805176
    9. '	in' → logprob: -14.008328437805176
    10. 'In' → logprob: -14.383328437805176

Token 35: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.20141392946243286
    2. 'input' → logprob: -1.701413869857788
    3. '(input' → logprob: -15.451414108276367
    4. ' ' → logprob: -15.576414108276367
    5. '_input' → logprob: -16.201414108276367
    6. '=input' → logprob: -16.826414108276367
    7. ' range' → logprob: -17.451414108276367
    8. 'user' → logprob: -17.576414108276367
    9. ' user' → logprob: -17.576414108276367
    10. '<input' → logprob: -17.701414108276367

Token 36: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -0.000253591249929741
    2. '_' → logprob: -8.500253677368164
    3. 'string' → logprob: -10.625253677368164
    4. '_str' → logprob: -11.500253677368164
    5. '()' → logprob: -12.250253677368164
    6. '_s' → logprob: -12.625253677368164
    7. ')' → logprob: -13.250253677368164
    8. '_STRING' → logprob: -13.750253677368164
    9. ')_' → logprob: -14.000253677368164
    10. 'String' → logprob: -14.125253677368164

Token 37: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011113489978015423
    2. ' :' → logprob: -4.51111364364624
    3. ':
' → logprob: -10.761113166809082
    4. '<|end|>' → logprob: -11.386113166809082
    5. '):' → logprob: -11.636113166809082
    6. ',' → logprob: -12.261113166809082
    7. '=' → logprob: -12.761113166809082
    8. ' if' → logprob: -13.011113166809082
    9. ':**' → logprob: -13.136113166809082
    10. '<|end|>' → logprob: -13.636113166809082

Token 38: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011769460514187813
    2. ' if' → logprob: -5.6367692947387695
    3. ' 
' → logprob: -5.7617692947387695
    4. '<|end|>' → logprob: -6.0117692947387695
    5. '```' → logprob: -7.0117692947387695
    6. '    ' → logprob: -7.6367692947387695
    7. '   ' → logprob: -8.13676929473877
    8. ' ```' → logprob: -8.76176929473877
    9. 'if' → logprob: -9.01176929473877
    10. ''s' → logprob: -9.26176929473877

Token 39: ' shifted' (ID: 58644)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.04095376282930374
    2. 'if' → logprob: -3.2909538745880127
    3. '```' → logprob: -6.165953636169434
    4. '   ' → logprob: -7.915953636169434
    5. '    ' → logprob: -9.415953636169434
    6. 'ascii' → logprob: -9.540953636169434
    7. ' ```' → logprob: -9.665953636169434
    8. ' char' → logprob: -10.290953636169434
    9. ' ord' → logprob: -10.290953636169434
    10. ' ' → logprob: -10.415953636169434

Token 40: '_char' (ID: 23398)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8688669800758362
    2. '_char' → logprob: -0.9938669800758362
    3. '_ord' → logprob: -2.7438669204711914
    4. '_code' → logprob: -3.2438669204711914
    5. '_ascii' → logprob: -3.4938669204711914
    6. '_chars' → logprob: -3.7438669204711914
    7. '_val' → logprob: -3.8688669204711914
    8. '_value' → logprob: -4.118866920471191
    9. '_amount' → logprob: -5.618866920471191
    10. '_index' → logprob: -5.743866920471191

Token 41: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.712850034236908
    2. 's' → logprob: -1.5878500938415527
    3. '=' → logprob: -2.0878500938415527
    4. ' =' → logprob: -2.2128500938415527
    5. '_ord' → logprob: -3.3378500938415527
    6. '_' → logprob: -3.5878500938415527
    7. '_index' → logprob: -6.087850093841553
    8. '```' → logprob: -6.462850093841553
    9. 'code' → logprob: -6.712850093841553
    10. '_ascii' → logprob: -7.462850093841553

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006826790515333414
    2. '=' → logprob: -5.006826877593994
    3. ' ' → logprob: -9.131826400756836
    4. ' +=' → logprob: -13.256826400756836
    5. 's' → logprob: -14.881826400756836
    6. ')' → logprob: -15.256826400756836
    7. ',' → logprob: -15.881826400756836
    8. ' ' → logprob: -16.256826400756836
    9. '_' → logprob: -16.381826400756836
    10. ' =)' → logprob: -16.506826400756836

Token 43: ' (' (ID: 350)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.6574379801750183
    2. ' ord' → logprob: -1.407438039779663
    3. ' (' → logprob: -1.532438039779663
    4. 'ord' → logprob: -4.282437801361084
    5. '((' → logprob: -5.782437801361084
    6. ' ((' → logprob: -6.157437801361084
    7. '(' → logprob: -6.282437801361084
    8. '(((' → logprob: -10.157438278198242
    9. ' ' → logprob: -10.282438278198242
    10. '   ' → logprob: -10.407438278198242

Token 44: 'ord' (ID: 604)
  Prédit: '(ord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ord' → logprob: -0.3594648838043213
    2. 'ord' → logprob: -1.2344648838043213
    3. ' ord' → logprob: -4.609464645385742
    4. ' (' → logprob: -7.234464645385742
    5. '(' → logprob: -8.859464645385742
    6. '   ' → logprob: -9.109464645385742
    7. '((' → logprob: -11.359464645385742
    8. ' ' → logprob: -12.484464645385742
    9. ')' → logprob: -13.109464645385742
    10. '_ord' → logprob: -13.234464645385742

Token 45: '(char' (ID: 14823)
  Prédit: '(char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(char' → logprob: -0.00010580805974313989
    2. 'char' → logprob: -9.375105857849121
    3. '(' → logprob: -10.875105857849121
    4. ' (' → logprob: -14.250105857849121
    5. '<char' → logprob: -14.625105857849121
    6. ')' → logprob: -15.000105857849121
    7. ' char' → logprob: -15.375105857849121
    8. ',char' → logprob: -15.875105857849121
    9. '(chars' → logprob: -16.375104904174805
    10. '	char' → logprob: -16.625104904174805

Token 46: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.03507488593459129
    2. ' -' → logprob: -3.6600749492645264
    3. ' )' → logprob: -4.785074710845947
    4. '-' → logprob: -8.660075187683105
    5. ' ' → logprob: -9.035075187683105
    6. ' +' → logprob: -10.535075187683105
    7. '    ' → logprob: -10.660075187683105
    8. '+' → logprob: -11.035075187683105
    9. ')+' → logprob: -11.660075187683105
    10. '   ' → logprob: -11.910075187683105

Token 47: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.6805605888366699
    2. ' +' → logprob: -0.8055605888366699
    3. '+' → logprob: -3.55556058883667
    4. ' ' → logprob: -4.30556058883667
    5. '-' → logprob: -5.43056058883667
    6. ')' → logprob: -8.055561065673828
    7. ' )' → logprob: -10.555561065673828
    8. '  ' → logprob: -11.430561065673828
    9. '    ' → logprob: -11.805561065673828
    10. '<|end|>' → logprob: -11.930561065673828

Token 48: ' shift' (ID: 12847)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.5759482979774475
    2. ' shift' → logprob: -0.8259482979774475
    3. ' ' → logprob: -11.950948715209961
    4. ')' → logprob: -13.325948715209961
    5. '   ' → logprob: -15.950948715209961
    6. '_shift' → logprob: -16.20094871520996
    7. '    ' → logprob: -16.57594871520996
    8. '.shift' → logprob: -16.70094871520996
    9. '  ' → logprob: -16.95094871520996
    10. ' (' → logprob: -17.20094871520996

Token 49: '_amount' (ID: 29145)
  Prédit: '_amount'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_amount' → logprob: -4.310693111619912e-05
    2. '_' → logprob: -10.250042915344238
    3. 'amount' → logprob: -13.375042915344238
    4. ' _' → logprob: -13.625042915344238
    5. ')_' → logprob: -13.875042915344238
    6. ')' → logprob: -13.875042915344238
    7. '_amt' → logprob: -14.375042915344238
    8. '_)' → logprob: -14.500042915344238
    9. '_AMOUNT' → logprob: -14.750042915344238
    10. '_code' → logprob: -15.375042915344238

Token 50: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09368953108787537
    2. ' )' → logprob: -2.593689441680908
    3. ' -' → logprob: -4.343689441680908
    4. '<|end|>' → logprob: -6.718689441680908
    5. ')%' → logprob: -8.093689918518066
    6. '-' → logprob: -9.718689918518066
    7. ' %' → logprob: -9.718689918518066
    8. ' ' → logprob: -10.843689918518066
    9. '%' → logprob: -10.968689918518066
    10. '<|end|>' → logprob: -11.343689918518066

Token 51: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.28707823157310486
    2. 'UP' → logprob: -1.4120782613754272
    3. '65' → logprob: -5.287078380584717
    4. ' ' → logprob: -8.037077903747559
    5. 'U' → logprob: -8.412077903747559
    6. '   ' → logprob: -8.912077903747559
    7. 'UL' → logprob: -9.287077903747559
    8. '	UP' → logprob: -10.662077903747559
    9. '  ' → logprob: -11.287077903747559
    10. ' uppercase' → logprob: -11.537077903747559

Token 52: 'PPER' (ID: 153241)
  Prédit: 'PPER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PPER' → logprob: -0.020583350211381912
    2. 'PP' → logprob: -4.020583152770996
    3. 'P' → logprob: -6.020583152770996
    4. 'PER' → logprob: -14.270583152770996
    5. 'PS' → logprob: -14.520583152770996
    6. 'pper' → logprob: -14.645583152770996
    7. 'Ｐ' → logprob: -15.145583152770996
    8. 'UP' → logprob: -16.395584106445312
    9. '`' → logprob: -16.770584106445312
    10. 'PG' → logprob: -17.395584106445312

Token 53: 'CASE' (ID: 76384)
  Prédit: 'CASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CASE' → logprob: -0.000718030845746398
    2. 'ASE' → logprob: -7.875718116760254
    3. 'case' → logprob: -8.375718116760254
    4. '_CASE' → logprob: -9.875718116760254
    5. 'CA' → logprob: -11.000718116760254
    6. 'C' → logprob: -11.375718116760254
    7. '```' → logprob: -11.375718116760254
    8. '_case' → logprob: -12.250718116760254
    9. 'Case' → logprob: -12.875718116760254
    10. 'CAS' → logprob: -13.375718116760254

Token 54: '_START' (ID: 28418)
  Prédit: '_START'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_START' → logprob: -0.00033832306507974863
    2. 'START' → logprob: -8.875338554382324
    3. '_SHIFT' → logprob: -9.500338554382324
    4. '_' → logprob: -10.125338554382324
    5. ' _' → logprob: -11.125338554382324
    6. '```' → logprob: -11.375338554382324
    7. '_S' → logprob: -11.875338554382324
    8. '_CHAR' → logprob: -11.875338554382324
    9. 'S' → logprob: -12.000338554382324
    10. '_END' → logprob: -12.125338554382324

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002445317804813385
    2. ' )' → logprob: -8.500244140625
    3. ')%' → logprob: -10.125244140625
    4. '%' → logprob: -14.250244140625
    5. ' %' → logprob: -16.500244140625
    6. '   ' → logprob: -17.375244140625
    7. '`)' → logprob: -17.500244140625
    8. '%)' → logprob: -17.750244140625
    9. ')
' → logprob: -17.750244140625
    10. ' ' → logprob: -18.250244140625

Token 56: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.033807750791311264
    2. '%' → logprob: -3.4088077545166016
    3. ')' → logprob: -9.283807754516602
    4. ')%' → logprob: -10.283807754516602
    5. '<|end|>' → logprob: -10.533807754516602
    6. ' ' → logprob: -12.533807754516602
    7. ' %)' → logprob: -13.658807754516602
    8. ' %#' → logprob: -13.908807754516602
    9. ' %=' → logprob: -14.658807754516602
    10. ' )' → logprob: -15.158807754516602

Token 57: ' AL' (ID: 12264)
  Prédit: 'AL'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'AL' → logprob: -0.34589552879333496
    2. '26' → logprob: -1.345895528793335
    3. ' AL' → logprob: -3.470895528793335
    4. ' ' → logprob: -7.095895767211914
    5. '(AL' → logprob: -8.595895767211914
    6. '_AL' → logprob: -12.720895767211914
    7. 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' → logprob: -14.345895767211914
    8. '   ' → logprob: -15.095895767211914
    9. '```' → logprob: -15.470895767211914
    10. 'ALK' → logprob: -16.220895767211914

Token 58: 'PH' (ID: 20818)
  Prédit: 'PH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PH' → logprob: -0.00012558852904476225
    2. 'H' → logprob: -9.000125885009766
    3. 'APH' → logprob: -13.625125885009766
    4. 'P' → logprob: -15.125125885009766
    5. ' PH' → logprob: -15.125125885009766
    6. 'HP' → logprob: -15.625125885009766
    7. '_PH' → logprob: -16.625125885009766
    8. 'PHA' → logprob: -16.875125885009766
    9. 'ABET' → logprob: -17.375125885009766
    10. 'phabet' → logprob: -18.000125885009766

Token 59: 'ABET' (ID: 123726)
  Prédit: 'ABET'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ABET' → logprob: -0.00018161057960242033
    2. 'AB' → logprob: -8.625181198120117
    3. 'A' → logprob: -13.750181198120117
    4. 'ASE' → logprob: -14.875181198120117
    5. 'H' → logprob: -16.125181198120117
    6. 'AN' → logprob: -16.250181198120117
    7. '\' → logprob: -16.750181198120117
    8. 'BET' → logprob: -16.750181198120117
    9. '_' → logprob: -17.125181198120117
    10. '_AB' → logprob: -17.250181198120117

Token 60: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.14473854005336761
    2. 'SIZE' → logprob: -2.1447384357452393
    3. 'AT' → logprob: -4.394738674163818
    4. 'A' → logprob: -6.019738674163818
    5. 'ET' → logprob: -7.019738674163818
    6. '_size' → logprob: -7.644738674163818
    7. 'T' → logprob: -7.644738674163818
    8. '```' → logprob: -7.644738674163818
    9. 'AS' → logprob: -8.26973819732666
    10. '26' → logprob: -10.14473819732666

Token 61: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.11509733647108078
    2. '+' → logprob: -2.2400972843170166
    3. '   ' → logprob: -6.115097522735596
    4. ' ' → logprob: -11.115097045898438
    5. '    ' → logprob: -11.365097045898438
    6. ')' → logprob: -11.365097045898438
    7. '<|end|>' → logprob: -11.490097045898438
    8. ' +
' → logprob: -12.615097045898438
    9. '  ' → logprob: -12.740097045898438
    10. '```' → logprob: -12.990097045898438

Token 62: ' U' (ID: 601)
  Prédit: ' U'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' U' → logprob: -0.6936562061309814
    2. 'UP' → logprob: -0.6936562061309814
    3. '	UP' → logprob: -7.943655967712402
    4. ' UP' → logprob: -9.693655967712402
    5. '65' → logprob: -10.568655967712402
    6. ' ' → logprob: -10.693655967712402
    7. '   ' → logprob: -10.943655967712402
    8. 'UL' → logprob: -11.318655967712402
    9. '_UP' → logprob: -13.068655967712402
    10. '  ' → logprob: -13.193655967712402

Token 63: 'PPER' (ID: 153241)
  Prédit: 'PPER'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'PPER' → logprob: -0.024389280006289482
    2. 'PP' → logprob: -3.7743892669677734
    3. 'P' → logprob: -6.774389266967773
    4. 'UP' → logprob: -16.024389266967773
    5. 'pper' → logprob: -16.649389266967773
    6. 'PER' → logprob: -17.399389266967773
    7. '`' → logprob: -17.774389266967773
    8. 'PK' → logprob: -18.024389266967773
    9. '"' → logprob: -18.274389266967773
    10. 'П' → logprob: -18.524389266967773

Token 64: 'CASE' (ID: 76384)
  Prédit: 'CASE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'CASE' → logprob: -0.00021617230959236622
    2. 'ASE' → logprob: -9.125216484069824
    3. 'case' → logprob: -10.000216484069824
    4. '_CASE' → logprob: -10.625216484069824
    5. '```' → logprob: -11.000216484069824
    6. 'ACE' → logprob: -12.000216484069824
    7. 'C' → logprob: -12.625216484069824
    8. 'CA' → logprob: -12.750216484069824
    9. 'Case' → logprob: -13.625216484069824
    10. 'R' → logprob: -13.875216484069824

Token 65: '_START' (ID: 28418)
  Prédit: '_START'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_START' → logprob: -0.00777769461274147
    2. 'S' → logprob: -6.382777690887451
    3. '_SHIFT' → logprob: -7.007777690887451
    4. '```' → logprob: -7.007777690887451
    5. 'START' → logprob: -7.382777690887451
    6. '_CHAR' → logprob: -7.632777690887451
    7. '_UP' → logprob: -7.632777690887451
    8. ' _' → logprob: -7.632777690887451
    9. '_CASE' → logprob: -8.38277816772461
    10. '_S' → logprob: -8.38277816772461

Token 66: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022298341616988182
    2. ' shifted' → logprob: -4.147298336029053
    3. 'shift' → logprob: -6.147298336029053
    4. '    
' → logprob: -6.397298336029053
    5. '
' → logprob: -6.647298336029053
    6. ')' → logprob: -7.147298336029053
    7. '<|end|>' → logprob: -9.147298812866211
    8. '```' → logprob: -10.147298812866211
    9. ' if' → logprob: -10.522298812866211
    10. '    ' → logprob: -10.647298812866211

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0032746833749115467
    2. 'shift' → logprob: -6.003274917602539
    3. ' shifted' → logprob: -7.253274917602539
    4. ')' → logprob: -10.128274917602539
    5. '    
' → logprob: -10.128274917602539
    6. '<|end|>' → logprob: -13.253274917602539
    7. '```' → logprob: -13.253274917602539
    8. '_shift' → logprob: -13.878274917602539
    9. ' shift' → logprob: -14.003274917602539
    10. '  ' → logprob: -14.003274917602539

Token 68: ' shifted' (ID: 58644)
  Prédit: 'shift'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -0.19358448684215546
    2. ' shifted' → logprob: -1.8185844421386719
    3. '   ' → logprob: -4.318584442138672
    4. ' shift' → logprob: -7.818584442138672
    5. 'sh' → logprob: -11.818584442138672
    6. '    
' → logprob: -12.443584442138672
    7. '```' → logprob: -13.193584442138672
    8. '    ' → logprob: -13.193584442138672
    9. '_shift' → logprob: -13.443584442138672
    10. ' ' → logprob: -13.693584442138672

Token 69: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.018199576064944267
    2. '_char' → logprob: -4.018199443817139
    3. 'char' → logprob: -10.143199920654297
    4. 'chars' → logprob: -11.768199920654297
    5. '_' → logprob: -13.893199920654297
    6. 's' → logprob: -15.018199920654297
    7. '_c' → logprob: -15.393199920654297
    8. '_code' → logprob: -15.768199920654297
    9. '```' → logprob: -15.768199920654297
    10. 'Chars' → logprob: -15.893199920654297

Token 70: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015135504072532058
    2. '.' → logprob: -6.501513481140137
    3. '.extend' → logprob: -12.376513481140137
    4. '.app' → logprob: -12.501513481140137
    5. '.ap' → logprob: -13.626513481140137
    6. '.push' → logprob: -14.001513481140137
    7. '.Append' → logprob: -14.626513481140137
    8. ' .' → logprob: -15.126513481140137
    9. 'append' → logprob: -15.251513481140137
    10. '.add' → logprob: -16.376514434814453

Token 71: '(chr' (ID: 185847)
  Prédit: '(chr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(chr' → logprob: -0.00014573395310435444
    2. '(' → logprob: -9.00014591217041
    3. 'chr' → logprob: -11.12514591217041
    4. '(ord' → logprob: -12.25014591217041
    5. '(char' → logprob: -13.87514591217041
    6. '("("' → logprob: -14.00014591217041
    7. '((' → logprob: -14.37514591217041
    8. '(chars' → logprob: -15.50014591217041
    9. ' (' → logprob: -16.125144958496094
    10. '(ch' → logprob: -18.375144958496094

Token 72: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.4987974029500037e-05
    2. 'shift' → logprob: -10.625024795532227
    3. ' (' → logprob: -14.625024795532227
    4. '(sh' → logprob: -16.625024795532227
    5. '((' → logprob: -17.375024795532227
    6. ' shifted' → logprob: -17.500024795532227
    7. ')' → logprob: -17.750024795532227
    8. '.shift' → logprob: -19.000024795532227
    9. '   ' → logprob: -19.250024795532227
    10. '_shift' → logprob: -19.375024795532227

Token 73: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -3.4121114822482923e-06
    2. ' shifted' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.625003814697266
    4. '_shift' → logprob: -19.625003814697266
    5. 'sh' → logprob: -20.250003814697266
    6. ')' → logprob: -20.875003814697266
    7. '.shift' → logprob: -21.500003814697266
    8. ' shift' → logprob: -21.750003814697266
    9. '```' → logprob: -21.875003814697266
    10. ' ' → logprob: -22.750003814697266

Token 74: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.003126621013507247
    2. '_char' → logprob: -6.003126621246338
    3. 'd' → logprob: -7.503126621246338
    4. 'char' → logprob: -9.87812614440918
    5. 'shift' → logprob: -11.37812614440918
    6. 'ted' → logprob: -11.62812614440918
    7. 'ar' → logprob: -12.62812614440918
    8. 'ded' → logprob: -12.75312614440918
    9. 'eded' → logprob: -12.87812614440918
    10. '   ' → logprob: -13.25312614440918

Token 75: '_char' (ID: 23398)
  Prédit: '_char'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_char' → logprob: -0.027018442749977112
    2. 'char' → logprob: -3.6520185470581055
    3. '_chars' → logprob: -7.6520185470581055
    4. '_code' → logprob: -8.777018547058105
    5. 'ar' → logprob: -10.902018547058105
    6. 'ed' → logprob: -11.652018547058105
    7. ')' → logprob: -11.652018547058105
    8. '-char' → logprob: -11.902018547058105
    9. '.char' → logprob: -12.027018547058105
    10. 'chars' → logprob: -12.152018547058105

Token 76: '_code' (ID: 8330)
  Prédit: '_code'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_code' → logprob: -0.009809687733650208
    2. '))' → logprob: -4.759809494018555
    3. 'code' → logprob: -7.134809494018555
    4. ')' → logprob: -7.884809494018555
    5. 'Code' → logprob: -12.259809494018555
    6. '_codes' → logprob: -12.759809494018555
    7. ')_' → logprob: -12.884809494018555
    8. '_cod' → logprob: -13.009809494018555
    9. '_Code' → logprob: -13.009809494018555
    10. '_CODE' → logprob: -13.134809494018555

Token 77: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015023599844425917
    2. '))' → logprob: -6.501502513885498
    3. ')))' → logprob: -17.126502990722656
    4. ')
' → logprob: -17.376502990722656
    5. ' )' → logprob: -17.751502990722656
    6. ')`' → logprob: -18.126502990722656
    7. '])' → logprob: -20.001502990722656
    8. ')}' → logprob: -20.251502990722656
    9. ')]' → logprob: -21.126502990722656
    10. '),' → logprob: -21.251502990722656

Token 78: 'shift' (ID: 27472)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0039008883759379387
    2. 'shift' → logprob: -5.75390100479126
    3. 'result' → logprob: -7.62890100479126
    4. 'output' → logprob: -8.378900527954102
    5. '```' → logprob: -12.628900527954102
    6. ' shifted' → logprob: -13.378900527954102
    7. ' print' → logprob: -14.128900527954102
    8. 'decoded' → logprob: -14.753900527954102
    9. 'new' → logprob: -15.628900527954102
    10. '    
' → logprob: -15.878900527954102

Token 79: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.981667537620524e-06
    2. '_amount' → logprob: -13.875001907348633
    3. 'e' → logprob: -14.875001907348633
    4. '_ed' → logprob: -16.125001907348633
    5. 'er' → logprob: -16.250001907348633
    6. 'edf' → logprob: -16.250001907348633
    7. 'eed' → logprob: -16.375001907348633
    8. 'eded' → logprob: -17.500001907348633
    9. '```' → logprob: -17.500001907348633
    10. 's' → logprob: -18.000001907348633

Token 80: '_string' (ID: 8609)
  Prédit: '_chars'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -9.746380237629637e-05
    2. '_' → logprob: -9.875097274780273
    3. '_char' → logprob: -10.250097274780273
    4. '_string' → logprob: -12.250097274780273
    5. 's' → logprob: -13.125097274780273
    6. '_strings' → logprob: -13.875097274780273
    7. '```' → logprob: -14.375097274780273
    8. '_str' → logprob: -14.500097274780273
    9. '_s' → logprob: -14.500097274780273
    10. '_bytes' → logprob: -15.750097274780273

Token 81: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.265462726354599
    2. '.join' → logprob: -2.140462636947632
    3. ' =' → logprob: -2.765462636947632
    4. '<|end|>' → logprob: -3.390462636947632
    5. '.' → logprob: -5.015462875366211
    6. ')' → logprob: -5.765462875366211
    7. '[:]' → logprob: -6.140462875366211
    8. '.replace' → logprob: -6.890462875366211
    9. '.append' → logprob: -7.015462875366211
    10. '.lower' → logprob: -7.390462875366211

Token 82: ' "".' (ID: 94734)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1311783790588379
    2. '''.' → logprob: -2.131178379058838
    3. '""' → logprob: -6.131178379058838
    4. '''' → logprob: -7.006178379058838
    5. ' "".' → logprob: -7.381178379058838
    6. ' ''.' → logprob: -7.631178379058838
    7. ''' → logprob: -10.00617790222168
    8. '"",' → logprob: -12.75617790222168
    9. '```' → logprob: -12.88117790222168
    10. '''
' → logprob: -14.13117790222168

Token 83: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. 'jo' → logprob: -15.000000953674316
    3. '```' → logprob: -16.0
    4. 'j' → logprob: -16.25
    5. ' join' → logprob: -16.5
    6. '.join' → logprob: -18.25
    7. '(join' → logprob: -19.75
    8. '"' → logprob: -20.125
    9. '.' → logprob: -20.5
    10. '/j' → logprob: -20.875

Token 84: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.842555426876061e-06
    2. 'shift' → logprob: -13.250004768371582
    3. '(sh' → logprob: -13.750004768371582
    4. '("("' → logprob: -14.750004768371582
    5. '(
' → logprob: -15.250004768371582
    6. ' (' → logprob: -15.500004768371582
    7. '(`' → logprob: -15.625004768371582
    8. '(ss' → logprob: -15.875004768371582
    9. '((' → logprob: -16.0000057220459
    10. '('' → logprob: -16.0000057220459

Token 85: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.9361264946837764e-07
    2. ' shifted' → logprob: -15.75
    3. 'sh' → logprob: -22.25
    4. '_shift' → logprob: -22.5
    5. '.shift' → logprob: -22.75
    6. 'Shift' → logprob: -23.5
    7. ')' → logprob: -23.625
    8. '[' → logprob: -24.5
    9. 'SHIFT' → logprob: -24.75
    10. ' shift' → logprob: -25.125

Token 86: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -3.2020991056924686e-05
    2. '_chars' → logprob: -10.375032424926758
    3. 'd' → logprob: -14.500032424926758
    4. 'ged' → logprob: -15.625032424926758
    5. 'e' → logprob: -17.500032424926758
    6. 'chars' → logprob: -17.625032424926758
    7. '_char' → logprob: -17.750032424926758
    8. 'eded' → logprob: -18.125032424926758
    9. 'sed' → logprob: -18.250032424926758
    10. 'ted' → logprob: -18.750032424926758

Token 87: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -4.3464544432936236e-05
    2. 'chars' → logprob: -10.750043869018555
    3. '_char' → logprob: -10.875043869018555
    4. '_string' → logprob: -13.000043869018555
    5. 'Chars' → logprob: -15.125043869018555
    6. 'string' → logprob: -15.625043869018555
    7. '_str' → logprob: -15.875043869018555
    8. '_' → logprob: -16.375043869018555
    9. 's' → logprob: -16.625043869018555
    10. 'char' → logprob: -16.625043869018555

Token 88: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.392202976712724e-06
    2. ')
' → logprob: -12.000006675720215
    3. ' )' → logprob: -16.0000057220459
    4. '))' → logprob: -16.7500057220459
    5. ')

' → logprob: -17.5000057220459
    6. '()' → logprob: -17.7500057220459
    7. ')`' → logprob: -18.1250057220459
    8. ']' → logprob: -18.6250057220459
    9. ')#' → logprob: -18.6250057220459
    10. '[' → logprob: -18.7500057220459

Token 89: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.625
    3. '#print' → logprob: -18.5
    4. 'pr' → logprob: -19.375
    5. ' print' → logprob: -20.375
    6. 'prin' → logprob: -20.625
    7. '`' → logprob: -21.25
    8. 'shift' → logprob: -21.5
    9. 'p' → logprob: -21.5
    10. '(print' → logprob: -22.0

Token 90: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00020663968462031335
    2. '("("' → logprob: -8.75020694732666
    3. '('' → logprob: -10.25020694732666
    4. '(`' → logprob: -12.75020694732666
    5. '(sh' → logprob: -12.87520694732666
    6. '(parent' → logprob: -13.25020694732666
    7. 'shift' → logprob: -13.50020694732666
    8. '()' → logprob: -14.25020694732666
    9. '((' → logprob: -14.25020694732666
    10. ' (' → logprob: -14.37520694732666

Token 91: 'shift' (ID: 27472)
  Prédit: 'shift'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'shift' → logprob: -1.9361264946837764e-07
    2. ' shifted' → logprob: -15.75
    3. 'sh' → logprob: -22.0
    4. ')' → logprob: -22.625
    5. '_shift' → logprob: -23.625
    6. '```' → logprob: -23.625
    7. 'Shift' → logprob: -23.75
    8. 'SHIFT' → logprob: -23.875
    9. '.shift' → logprob: -24.375
    10. ' shift' → logprob: -24.625

Token 92: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: 0.0
    2. 'd' → logprob: -18.75
    3. '_ed' → logprob: -19.0
    4. 'e' → logprob: -19.125
    5. 'ted' → logprob: -19.625
    6. 'edt' → logprob: -20.375
    7. 'eded' → logprob: -20.75
    8. 'ED' → logprob: -21.25
    9. 'edf' → logprob: -21.25
    10. 'eed' → logprob: -21.75

Token 93: '_string' (ID: 8609)
  Prédit: '_string'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_string' → logprob: -4.127333340875339e-06
    2. 'string' → logprob: -12.750003814697266
    3. '_' → logprob: -14.250003814697266
    4. '_str' → logprob: -14.750003814697266
    5. '_strings' → logprob: -17.250003814697266
    6. '_shift' → logprob: -17.500003814697266
    7. 's' → logprob: -17.500003814697266
    8. '"_' → logprob: -17.750003814697266
    9. '_s' → logprob: -17.875003814697266
    10. '```' → logprob: -18.125003814697266

Token 94: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9361264946837764e-07
    2. ' )' → logprob: -17.25
    3. ')`' → logprob: -17.25
    4. '))' → logprob: -17.375
    5. ')
' → logprob: -18.125
    6. ')}' → logprob: -21.125
    7. '`)' → logprob: -21.125
    8. '）' → logprob: -21.125
    9. '')' → logprob: -21.25
    10. ')**' → logprob: -21.375


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 92
Tokens correctement prédits (1ère position, stricte): 52
Tokens correctement prédits (1ère position, avec adaptation): 52
Tokens correctement prédits (top 10): 77
Précision stricte (1ère position): 56.52%
Précision adaptée (1ère position): 56.52%
Précision (top 10): 83.70%
================================================================================
