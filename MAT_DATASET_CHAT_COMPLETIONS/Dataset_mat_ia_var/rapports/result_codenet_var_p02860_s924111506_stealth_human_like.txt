================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:38:25
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

n = int(input())
s = list(input())  # ok, convert input to list

# I think we should check if n is even
if n % 2 != 0:
    print("No")
else:
    half = n // 2  # integer division is better
    i = 0
    while i < half:
        if s[i] != s[i + half]:
            print("No")
            sys.exit()   # use sys.exit just in case
        i += 1  # increment
    # I guess everything is fine if we're here
    print("Yes")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'n' (ID: 77)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.18268179893493652
    2. '\n' → logprob: -2.1826817989349365
    3. 'import' → logprob: -3.5576817989349365
    4. '<|end|>' → logprob: -4.932682037353516
    5. '' → logprob: -5.807682037353516
    6. 'newline' → logprob: -5.932682037353516
    7. '\' → logprob: -6.057682037353516
    8. 'print' → logprob: -6.432682037353516
    9. '[' → logprob: -6.557682037353516
    10. '<|end|>' → logprob: -6.807682037353516

Token 4: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6679863333702087
    2. '.' → logprob: -1.5429863929748535
    3. ' ' → logprob: -2.4179863929748535
    4. ' =' → logprob: -2.5429863929748535
    5. '_' → logprob: -2.7929863929748535
    6. 'u' → logprob: -4.1679863929748535
    7. 'e' → logprob: -4.2929863929748535
    8. ',' → logprob: -5.9179863929748535
    9. ')' → logprob: -6.1679863929748535
    10. 'a' → logprob: -6.2929863929748535

Token 5: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.022230025380849838
    2. ' ' → logprob: -4.27223014831543
    3. 'int' → logprob: -4.89723014831543
    4. ' input' → logprob: -7.77223014831543
    5. '10' → logprob: -9.89723014831543
    6. 'input' → logprob: -10.64723014831543
    7. '1' → logprob: -11.27223014831543
    8. '5' → logprob: -11.89723014831543
    9. ' len' → logprob: -11.89723014831543
    10. '=int' → logprob: -11.89723014831543

Token 6: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038229089113883674
    2. '(sys' → logprob: -8.125382423400879
    3. '('' → logprob: -10.500382423400879
    4. '()' → logprob: -11.125382423400879
    5. ' (' → logprob: -11.375382423400879
    6. '```' → logprob: -12.125382423400879
    7. '(input' → logprob: -12.375382423400879
    8. '(n' → logprob: -12.500382423400879
    9. ''' → logprob: -12.625382423400879
    10. '(`' → logprob: -13.000382423400879

Token 7: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.052579186856746674
    2. ')' → logprob: -3.427579164505005
    3. '()' → logprob: -4.052579402923584
    4. '())' → logprob: -7.552579402923584
    5. '(
' → logprob: -7.802579402923584
    6. '('' → logprob: -8.927578926086426
    7. '(

' → logprob: -9.177578926086426
    8. '("("' → logprob: -10.427578926086426
    9. '")' → logprob: -10.552578926086426
    10. ''' → logprob: -10.802578926086426

Token 8: 's' (ID: 82)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.033213019371032715
    2. 'if' → logprob: -3.6582131385803223
    3. ' for' → logprob: -6.533213138580322
    4. 's' → logprob: -6.783213138580322
    5. 'data' → logprob: -7.283213138580322
    6. 'result' → logprob: -7.533213138580322
    7. 'i' → logprob: -7.658213138580322
    8. 'print' → logprob: -7.783213138580322
    9. 'a' → logprob: -8.033212661743164
    10. 'f' → logprob: -8.033212661743164

Token 9: ' =' (ID: 314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5691776275634766
    2. ' =' → logprob: -2.0691776275634766
    3. '[' → logprob: -2.3191776275634766
    4. 'tr' → logprob: -2.5691776275634766
    5. 'um' → logprob: -3.0691776275634766
    6. 't' → logprob: -3.9441776275634766
    7. 'y' → logprob: -4.069177627563477
    8. '=' → logprob: -4.194177627563477
    9. 'u' → logprob: -5.069177627563477
    10. 'trip' → logprob: -5.319177627563477

Token 10: ' list' (ID: 1562)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.7205843925476074
    2. ' input' → logprob: -0.7205843925476074
    3. ' sys' → logprob: -4.470584392547607
    4. ' ' → logprob: -5.595584392547607
    5. '"' → logprob: -5.720584392547607
    6. ''' → logprob: -5.970584392547607
    7. 'sys' → logprob: -6.345584392547607
    8. ' "' → logprob: -6.595584392547607
    9. '""' → logprob: -7.595584392547607
    10. ''s' → logprob: -7.595584392547607

Token 11: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011281942715868354
    2. '(s' → logprob: -7.251128196716309
    3. '(sys' → logprob: -8.626128196716309
    4. '(str' → logprob: -9.251128196716309
    5. '(input' → logprob: -9.626128196716309
    6. '()' → logprob: -11.376128196716309
    7. '(
' → logprob: -11.501128196716309
    8. '('' → logprob: -11.501128196716309
    9. '(range' → logprob: -12.126128196716309
    10. '(`' → logprob: -12.501128196716309

Token 12: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.008663497865200043
    2. '()' → logprob: -4.758663654327393
    3. ')' → logprob: -11.133663177490234
    4. '()))' → logprob: -11.258663177490234
    5. ' ())' → logprob: -11.258663177490234
    6. '().' → logprob: -12.133663177490234
    7. '(' → logprob: -13.133663177490234
    8. '();)' → logprob: -14.633663177490234
    9. '())
' → logprob: -16.133663177490234
    10. '());' → logprob: -16.258663177490234

Token 13: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.602438747882843
    2. '.' → logprob: -1.6024386882781982
    3. ' ' → logprob: -2.9774386882781982
    4. 'i' → logprob: -3.1024386882781982
    5. '[' → logprob: -3.1024386882781982
    6. '#' → logprob: -3.9774386882781982
    7. '' → logprob: -4.102438926696777
    8. 'if' → logprob: -4.352438926696777
    9. ' for' → logprob: -4.602438926696777
    10. ')' → logprob: -4.852438926696777

Token 14: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7851338386535645
    2. '[' → logprob: -1.4101338386535645
    3. ')' → logprob: -2.7851338386535645
    4. '#' → logprob: -3.1601338386535645
    5. 's' → logprob: -3.2851338386535645
    6. '.' → logprob: -3.5351338386535645
    7. 'i' → logprob: -3.7851338386535645
    8. '+' → logprob: -4.4101338386535645
    9. 'if' → logprob: -4.4101338386535645
    10. '
' → logprob: -4.5351338386535645

Token 15: ' ok' (ID: 4763)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.19415540993213654
    2. '[' → logprob: -2.81915545463562
    3. '#' → logprob: -3.06915545463562
    4. '_' → logprob: -4.319155216217041
    5. 'for' → logprob: -4.569155216217041
    6. ' #' → logprob: -4.944155216217041
    7. 's' → logprob: -5.194155216217041
    8. ' for' → logprob: -5.319155216217041
    9. ' if' → logprob: -5.569155216217041
    10. 'if' → logprob: -5.944155216217041

Token 16: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5618043541908264
    2. '[' → logprob: -2.0618042945861816
    3. '.' → logprob: -2.6868042945861816
    4. ')' → logprob: -3.1868042945861816
    5. 's' → logprob: -3.3118042945861816
    6. 'i' → logprob: -3.5618042945861816
    7. 'if' → logprob: -3.6868042945861816
    8. '+' → logprob: -4.061804294586182
    9. ' ' → logprob: -4.561804294586182
    10. '' → logprob: -4.811804294586182

Token 17: ' convert' (ID: 8452)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18835243582725525
    2. ')' → logprob: -2.438352346420288
    3. '_' → logprob: -4.188352584838867
    4. 'for' → logprob: -4.188352584838867
    5. 's' → logprob: -4.313352584838867
    6. ' for' → logprob: -4.688352584838867
    7. '[' → logprob: -5.063352584838867
    8. ' )' → logprob: -5.938352584838867
    9. ''' → logprob: -6.188352584838867
    10. 'n' → logprob: -6.313352584838867

Token 18: ' input' (ID: 3422)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2538454234600067
    2. '_' → logprob: -2.378845453262329
    3. ')' → logprob: -2.503845453262329
    4. 's' → logprob: -3.378845453262329
    5. '(s' → logprob: -5.75384521484375
    6. '[' → logprob: -5.75384521484375
    7. '()' → logprob: -5.87884521484375
    8. ' ' → logprob: -6.00384521484375
    9. ' (' → logprob: -6.62884521484375
    10. '=' → logprob: -7.50384521484375

Token 19: ' to' (ID: 316)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.433946430683136
    2. '[' → logprob: -1.5589463710784912
    3. ' ' → logprob: -3.308946371078491
    4. '(' → logprob: -3.808946371078491
    5. '()' → logprob: -4.05894660949707
    6. 's' → logprob: -4.30894660949707
    7. '.' → logprob: -4.43394660949707
    8. '_' → logprob: -4.93394660949707
    9. '[:]' → logprob: -5.30894660949707
    10. '=' → logprob: -5.80894660949707

Token 20: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.22006918489933014
    2. ' a' → logprob: -2.345069169998169
    3. 'list' → logprob: -2.470069169998169
    4. ' characters' → logprob: -4.720069408416748
    5. 'a' → logprob: -5.595069408416748
    6. ' chars' → logprob: -6.720069408416748
    7. 'characters' → logprob: -7.220069408416748
    8. ' array' → logprob: -7.470069408416748
    9. '['' → logprob: -8.22006893157959
    10. ' tokens' → logprob: -8.34506893157959

Token 21: '

' (ID: 279)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6747071146965027
    2. 's' → logprob: -2.1747071743011475
    3. ' for' → logprob: -2.7997071743011475
    4. '[' → logprob: -2.9247071743011475
    5. '
' → logprob: -3.0497071743011475
    6. '.' → logprob: -3.5497071743011475
    7. ')' → logprob: -3.7997071743011475
    8. '```' → logprob: -3.9247071743011475
    9. 'if' → logprob: -4.049706935882568
    10. '' → logprob: -4.049706935882568

Token 22: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.13883592188358307
    2. 'if' → logprob: -3.513835906982422
    3. 'i' → logprob: -3.638835906982422
    4. 'f' → logprob: -4.263835906982422
    5. 'count' → logprob: -4.888835906982422
    6. '#' → logprob: -5.013835906982422
    7. 's' → logprob: -5.013835906982422
    8. 'd' → logprob: -5.138835906982422
    9. 'a' → logprob: -5.263835906982422
    10. 'c' → logprob: -5.513835906982422

Token 23: ' I' (ID: 357)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25635719299316406
    2. ' for' → logprob: -1.631357192993164
    3. ' ' → logprob: -5.131357192993164
    4. 'count' → logprob: -5.131357192993164
    5. 'if' → logprob: -6.006357192993164
    6. 'i' → logprob: -6.256357192993164
    7. ' if' → logprob: -6.381357192993164
    8. 'f' → logprob: -6.506357192993164
    9. 's' → logprob: -6.506357192993164
    10. ' i' → logprob: -7.131357192993164

Token 24: ' think' (ID: 2411)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.001817386015318334
    2. 'n' → logprob: -7.501817226409912
    3. 'm' → logprob: -7.501817226409912
    4. 't' → logprob: -8.25181770324707
    5. '#' → logprob: -8.37681770324707
    6. ' f' → logprob: -9.87681770324707
    7. ' ' → logprob: -10.12681770324707
    8. 'for' → logprob: -10.62681770324707
    9. ' =' → logprob: -11.00181770324707
    10. '=' → logprob: -11.25181770324707

Token 25: ' we' (ID: 581)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7084257006645203
    2. '_' → logprob: -0.9584257006645203
    3. 's' → logprob: -3.208425760269165
    4. ' for' → logprob: -3.458425760269165
    5. 'for' → logprob: -4.083425521850586
    6. ' if' → logprob: -4.833425521850586
    7. '#' → logprob: -5.208425521850586
    8. '[' → logprob: -5.333425521850586
    9. 'if' → logprob: -6.083425521850586
    10. ')' → logprob: -6.083425521850586

Token 26: ' should' (ID: 1757)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.5550211071968079
    2. ' should' → logprob: -1.680021047592163
    3. ' ' → logprob: -2.555021047592163
    4. ' want' → logprob: -2.680021047592163
    5. ''ll' → logprob: -3.680021047592163
    6. 'need' → logprob: -3.805021047592163
    7. 'should' → logprob: -4.055021286010742
    8. ' can' → logprob: -4.180021286010742
    9. ''re' → logprob: -5.805021286010742
    10. ' are' → logprob: -6.305021286010742

Token 27: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6739994287490845
    2. 'count' → logprob: -2.048999309539795
    3. ' for' → logprob: -2.673999309539795
    4. ' count' → logprob: -2.923999309539795
    5. ' check' → logprob: -3.298999309539795
    6. ' reverse' → logprob: -3.423999309539795
    7. 'sort' → logprob: -3.673999309539795
    8. ' sort' → logprob: -3.673999309539795
    9. 'reverse' → logprob: -3.923999309539795
    10. 's' → logprob: -4.173999309539795

Token 28: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.15380924940109253
    2. 's' → logprob: -3.2788093090057373
    3. ' ' → logprob: -3.4038093090057373
    4. 'if' → logprob: -3.5288093090057373
    5. ' for' → logprob: -4.028809070587158
    6. ' the' → logprob: -4.528809070587158
    7. 'for' → logprob: -5.903809070587158
    8. '_' → logprob: -6.028809070587158
    9. ' each' → logprob: -6.528809070587158
    10. ' s' → logprob: -6.653809070587158

Token 29: ' n' (ID: 297)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.7070721387863159
    2. ' n' → logprob: -1.582072138786316
    3. 's' → logprob: -2.7070722579956055
    4. ' len' → logprob: -2.9570722579956055
    5. 'len' → logprob: -2.9570722579956055
    6. 'n' → logprob: -3.5820722579956055
    7. ''' → logprob: -4.0820722579956055
    8. ''s' → logprob: -4.2070722579956055
    9. ' all' → logprob: -4.3320722579956055
    10. ' the' → logprob: -4.4570722579956055

Token 30: ' is' (ID: 382)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6638155579566956
    2. ' >' → logprob: -1.4138154983520508
    3. ' ==' → logprob: -2.163815498352051
    4. ' <=' → logprob: -2.538815498352051
    5. ' >=' → logprob: -4.288815498352051
    6. '>' → logprob: -4.413815498352051
    7. '==' → logprob: -4.788815498352051
    8. ' <' → logprob: -5.038815498352051
    9. '<=' → logprob: -6.163815498352051
    10. ' %' → logprob: -6.288815498352051

Token 31: ' even' (ID: 1952)
  Prédit: ' even'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' even' → logprob: -0.9989446401596069
    2. ' greater' → logprob: -1.623944640159607
    3. 'greater' → logprob: -1.998944640159607
    4. ' ' → logprob: -2.4989447593688965
    5. 'even' → logprob: -2.7489447593688965
    6. ' equal' → logprob: -3.3739447593688965
    7. ' odd' → logprob: -3.8739447593688965
    8. '>' → logprob: -3.9989447593688965
    9. ' less' → logprob: -4.2489447593688965
    10. 'equal' → logprob: -4.7489447593688965

Token 32: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019381757825613022
    2. ':
' → logprob: -4.644381523132324
    3. '
' → logprob: -5.519381523132324
    4. ' ' → logprob: -6.769381523132324
    5. 'if' → logprob: -6.769381523132324
    6. ' if' → logprob: -6.769381523132324
    7. ' :' → logprob: -7.769381523132324
    8. ',' → logprob: -8.019381523132324
    9. '```' → logprob: -8.019381523132324
    10. ' 
' → logprob: -8.394381523132324

Token 33: 'if' (ID: 366)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1602409929037094
    2. ' if' → logprob: -2.410240888595581
    3. 'if' → logprob: -3.035240888595581
    4. ' ' → logprob: -5.53524112701416
    5. ':
' → logprob: -6.03524112701416
    6. '
' → logprob: -6.41024112701416
    7. ',' → logprob: -7.53524112701416
    8. ' :' → logprob: -7.66024112701416
    9. '```' → logprob: -8.16024112701416
    10. ')' → logprob: -8.78524112701416

Token 34: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00010688089241739362
    2. 'n' → logprob: -9.375106811523438
    3. ' ' → logprob: -10.750106811523438
    4. ' ' → logprob: -14.500106811523438
    5. ' (' → logprob: -17.250106811523438
    6. ' not' → logprob: -17.875106811523438
    7. '	n' → logprob: -18.375106811523438
    8. '(n' → logprob: -18.500106811523438
    9. '```' → logprob: -19.750106811523438
    10. '  ' → logprob: -19.875106811523438

Token 35: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.015471464022994041
    2. '%' → logprob: -4.265471458435059
    3. ' ' → logprob: -6.640471458435059
    4. ' ' → logprob: -14.515471458435059
    5. '```' → logprob: -17.265472412109375
    6. '  ' → logprob: -17.765472412109375
    7. ' %
' → logprob: -18.515472412109375
    8. '2' → logprob: -18.640472412109375
    9. '>' → logprob: -18.640472412109375
    10. ')' → logprob: -18.640472412109375

Token 36: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3132627606391907
    2. ' ' → logprob: -1.313262701034546
    3. '```' → logprob: -14.313262939453125
    4. ' ' → logprob: -15.938262939453125
    5. '  ' → logprob: -16.813262939453125
    6. '==' → logprob: -17.063262939453125
    7. '4' → logprob: -17.625762939453125
    8. '1' → logprob: -17.688262939453125
    9. '=' → logprob: -18.000762939453125
    10. ')' → logprob: -18.313262939453125

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.517272024415433e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.625075340270996
    4. '==' → logprob: -16.87507438659668
    5. '  ' → logprob: -18.37507438659668
    6. '   ' → logprob: -18.56257438659668
    7. '1' → logprob: -18.81257438659668
    8. '=' → logprob: -19.25007438659668
    9. '>' → logprob: -19.56257438659668
    10. '۲' → logprob: -19.62507438659668

Token 38: ' !=' (ID: 1666)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.9367519021034241
    2. '!=' → logprob: -1.5617518424987793
    3. ' ==' → logprob: -1.5617518424987793
    4. ' !=' → logprob: -1.6867518424987793
    5. '=' → logprob: -5.936751842498779
    6. ':' → logprob: -7.936751842498779
    7. ' ' → logprob: -8.186752319335938
    8. ')' → logprob: -9.561752319335938
    9. '0' → logprob: -10.436752319335938
    10. '>' → logprob: -11.061752319335938

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.34846749901771545
    2. '0' → logprob: -1.223467469215393
    3. '=' → logprob: -10.973467826843262
    4. ' ' → logprob: -13.223467826843262
    5. '```' → logprob: -14.098467826843262
    6. '  ' → logprob: -14.098467826843262
    7. '1' → logprob: -14.535967826843262
    8. ')' → logprob: -14.848467826843262
    9. '==' → logprob: -15.535967826843262
    10. '2' → logprob: -15.973467826843262

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804688900709152
    2. ' ' → logprob: -3.2880468368530273
    3. '2' → logprob: -12.663046836853027
    4. '1' → logprob: -14.038046836853027
    5. '```' → logprob: -14.663046836853027
    6. '=' → logprob: -15.100546836853027
    7. ' ' → logprob: -15.350546836853027
    8. '  ' → logprob: -15.975546836853027
    9. ')' → logprob: -16.225547790527344
    10. '`' → logprob: -16.975547790527344

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.464347173576243e-05
    2. ' :' → logprob: -10.62503433227539
    3. ':
' → logprob: -12.00003433227539
    4. '):' → logprob: -12.87503433227539
    5. ':return' → logprob: -13.62503433227539
    6. ':**' → logprob: -16.00003433227539
    7. ')' → logprob: -17.25003433227539
    8. '>:' → logprob: -17.37503433227539
    9. ':

' → logprob: -17.87503433227539
    10. '():' → logprob: -18.37503433227539

Token 42: '   ' (ID: 271)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.028069496154785156
    2. '   ' → logprob: -4.528069496154785
    3. 'print' → logprob: -4.528069496154785
    4. ' ' → logprob: -5.528069496154785
    5. '    ' → logprob: -6.653069496154785
    6. ' 
' → logprob: -8.028069496154785
    7. '```' → logprob: -9.403069496154785
    8. '\' → logprob: -9.903069496154785
    9. ' sys' → logprob: -9.903069496154785
    10. '	print' → logprob: -10.028069496154785

Token 43: ' print' (ID: 2123)
  Prédit: ' print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.014740648679435253
    2. 'print' (adapté à ' print') → logprob: -4.264740467071533
    3. '   ' → logprob: -8.139740943908691
    4. ' sys' → logprob: -8.889740943908691
    5. '    ' → logprob: -9.264740943908691
    6. ' ' → logprob: -10.639740943908691
    7. ' exit' → logprob: -12.014740943908691
    8. '```' → logprob: -12.264740943908691
    9. 'sys' → logprob: -12.639740943908691
    10. '	print' → logprob: -12.764740943908691

Token 44: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.22302280366420746
    2. '("' → logprob: -1.7230228185653687
    3. '(-' → logprob: -3.973022699356079
    4. '('' → logprob: -6.348022937774658
    5. '("")' → logprob: -7.723022937774658
    6. '()' → logprob: -8.4730224609375
    7. '(False' → logprob: -9.7230224609375
    8. '(None' → logprob: -10.3480224609375
    9. '("("' → logprob: -10.7230224609375
    10. '(True' → logprob: -11.4730224609375

Token 45: 'No' (ID: 3160)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.09298806637525558
    2. '")' → logprob: -3.3429880142211914
    3. 'NO' → logprob: -4.342988014221191
    4. 'No' → logprob: -4.467988014221191
    5. '"' → logprob: -4.717988014221191
    6. '-)' → logprob: -5.342988014221191
    7. ':(' → logprob: -5.592988014221191
    8. '":' → logprob: -6.342988014221191
    9. ')' → logprob: -6.717988014221191
    10. 'Impossible' → logprob: -6.967988014221191

Token 46: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0005271765403449535
    2. '")
' → logprob: -8.250527381896973
    3. ')' → logprob: -8.375527381896973
    4. ' ")' → logprob: -11.500527381896973
    5. '"' → logprob: -11.625527381896973
    6. '")
' → logprob: -12.625527381896973
    7. 't' → logprob: -12.750527381896973
    8. ')")' → logprob: -13.000527381896973
    9. '!")' → logprob: -13.125527381896973
    10. '\n' → logprob: -14.000527381896973

Token 47: 'else' (ID: 2807)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03847311809659004
    2. 'else' → logprob: -3.788473129272461
    3. '<|end|>' → logprob: -5.038473129272461
    4. '
' → logprob: -5.288473129272461
    5. 'elif' → logprob: -6.913473129272461
    6. ')' → logprob: -6.913473129272461
    7. ' else' → logprob: -7.163473129272461
    8. '```' → logprob: -7.913473129272461
    9. '<|end|>' → logprob: -8.913473129272461
    10. '    
' → logprob: -9.163473129272461

Token 48: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -2.8802491215174086e-05
    2. ':
' → logprob: -10.500028610229492
    3. ' :' → logprob: -14.250028610229492
    4. '   ' → logprob: -15.750028610229492
    5. '):' → logprob: -16.000028610229492
    6. ':

' → logprob: -16.375028610229492
    7. '<|end|>' → logprob: -16.750028610229492
    8. '：' → logprob: -17.625028610229492
    9. '():' → logprob: -17.875028610229492
    10. ':**' → logprob: -18.000028610229492

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004441512748599052
    2. '    ' → logprob: -5.754441738128662
    3. '    
' → logprob: -7.504441738128662
    4. ' ' → logprob: -7.629441738128662
    5. '[' → logprob: -9.879441261291504
    6. '<|end|>' → logprob: -10.129441261291504
    7. '       ' → logprob: -10.504441261291504
    8. '  ' → logprob: -10.629441261291504
    9. '```' → logprob: -11.129441261291504
    10. '\' → logprob: -11.379441261291504

Token 50: ' half' (ID: 6375)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3983403146266937
    2. '    ' → logprob: -1.2733403444290161
    3. '    
' → logprob: -4.523340225219727
    4. ' ' → logprob: -4.898340225219727
    5. '     
' → logprob: -5.023340225219727
    6. ' if' → logprob: -5.648340225219727
    7. ' s' → logprob: -6.148340225219727
    8. ' half' → logprob: -6.523340225219727
    9. ' 
' → logprob: -6.898340225219727
    10. ' n' → logprob: -6.898340225219727

Token 51: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18931986391544342
    2. '=' → logprob: -1.9393198490142822
    3. '_length' → logprob: -4.564320087432861
    4. '_' → logprob: -4.939320087432861
    5. '_len' → logprob: -5.064320087432861
    6. '_n' → logprob: -5.564320087432861
    7. '_s' → logprob: -7.814320087432861
    8. '_size' → logprob: -8.689319610595703
    9. 's' → logprob: -9.064319610595703
    10. '=len' → logprob: -9.314319610595703

Token 52: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2014141082763672
    2. 'n' → logprob: -1.7014141082763672
    3. 's' → logprob: -14.701414108276367
    4. '	n' → logprob: -15.576414108276367
    5. 'int' → logprob: -16.576414108276367
    6. ' ' → logprob: -16.701414108276367
    7. ' s' → logprob: -17.076414108276367
    8. '   ' → logprob: -17.576414108276367
    9. '_n' → logprob: -18.076414108276367
    10. '(n' → logprob: -18.201414108276367

Token 53: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.05490248277783394
    2. '//' → logprob: -2.9299025535583496
    3. ' ' → logprob: -12.054902076721191
    4. '```' → logprob: -12.179902076721191
    5. '`' → logprob: -12.679902076721191
    6. ' ' → logprob: -12.679902076721191
    7. '#' → logprob: -14.304902076721191
    8. ' /' → logprob: -14.429902076721191
    9. '   ' → logprob: -14.679902076721191
    10. '2' → logprob: -14.804902076721191

Token 54: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '   ' → logprob: -18.37502670288086
    4. '２' → logprob: -19.00002670288086
    5. '۲' → logprob: -19.50002670288086
    6. '```' → logprob: -19.75002670288086
    7. '  ' → logprob: -20.37502670288086
    8. '२' → logprob: -21.25002670288086
    9. '২' → logprob: -21.87502670288086
    10. 'two' → logprob: -21.93752670288086

Token 55: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -18.2500057220459
    4. '```' → logprob: -18.6250057220459
    5. '２' → logprob: -19.5000057220459
    6. '۲' → logprob: -20.2500057220459
    7. '  ' → logprob: -20.3750057220459
    8. '`' → logprob: -21.9375057220459
    9. '२' → logprob: -22.0000057220459
    10. 'two' → logprob: -22.0625057220459

Token 56: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.011847804300487041
    2. '   ' → logprob: -5.136847972869873
    3. '    
' → logprob: -5.761847972869873
    4. '<|end|>' → logprob: -6.761847972869873
    5. '  
' → logprob: -8.011847496032715
    6. '

' → logprob: -8.261847496032715
    7. '   
' → logprob: -8.636847496032715
    8. '\n' → logprob: -8.761847496032715
    9. '
' → logprob: -8.761847496032715
    10. '```' → logprob: -8.886847496032715

Token 57: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.11663631349802017
    2. '   ' → logprob: -2.616636276245117
    3. '    
' → logprob: -3.741636276245117
    4. '  
' → logprob: -5.491636276245117
    5. '   
' → logprob: -5.991636276245117
    6. 'if' → logprob: -6.116636276245117
    7. '\n' → logprob: -6.616636276245117
    8. '
' → logprob: -7.366636276245117
    9. 's' → logprob: -7.741636276245117
    10. '<|end|>' → logprob: -7.741636276245117

Token 58: ' integer' (ID: 16336)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -1.157862901687622
    2. ' first' → logprob: -1.157862901687622
    3. 's' → logprob: -1.907862901687622
    4. ' 
' → logprob: -3.157862901687622
    5. 'first' → logprob: -3.157862901687622
    6. ' if' → logprob: -3.282862901687622
    7. ' ' → logprob: -4.282862663269043
    8. 'if' → logprob: -4.282862663269043
    9. ' left' → logprob: -4.407862663269043
    10. 'a' → logprob: -4.657862663269043

Token 59: ' division' (ID: 21629)
  Prédit: 'division'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'division' → logprob: -0.22865146398544312
    2. ' division' → logprob: -1.853651523590088
    3. '<|end|>' → logprob: -3.478651523590088
    4. 'div' → logprob: -4.478651523590088
    5. '_div' → logprob: -6.228651523590088
    6. 'divide' → logprob: -6.603651523590088
    7. '/' → logprob: -7.103651523590088
    8. '<|end|>' → logprob: -8.10365104675293
    9. ' /' → logprob: -8.72865104675293
    10. 'half' → logprob: -9.10365104675293

Token 60: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' better' (ID: 3432)
  Prédit: ' fine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' fine' → logprob: -0.6843675971031189
    2. ' ' → logprob: -1.9343676567077637
    3. '<|end|>' → logprob: -2.3093676567077637
    4. ' used' → logprob: -2.9343676567077637
    5. ' ok' → logprob: -3.4343676567077637
    6. ' good' → logprob: -3.4343676567077637
    7. ' okay' → logprob: -3.8093676567077637
    8. 'fine' → logprob: -4.434367656707764
    9. ' needed' → logprob: -4.434367656707764
    10. ' correct' → logprob: -4.559367656707764

Token 62: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 63: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2974759042263031
    2. '<|end|>' → logprob: -2.297475814819336
    3. '    
' → logprob: -2.672475814819336
    4. '
' → logprob: -3.422475814819336
    5. 'if' → logprob: -4.047475814819336
    6. '  
' → logprob: -5.172475814819336
    7. ' ' → logprob: -5.172475814819336
    8. ' 
' → logprob: -6.047475814819336
    9. '   
' → logprob: -6.047475814819336
    10. '\n' → logprob: -6.047475814819336

Token 64: ' i' (ID: 575)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1023292988538742
    2. 'first' → logprob: -2.6023292541503906
    3. 'for' → logprob: -4.977329254150391
    4. 'print' → logprob: -5.352329254150391
    5. ' if' → logprob: -5.727329254150391
    6. 'left' → logprob: -6.102329254150391
    7. ' first' → logprob: -7.102329254150391
    8. 'ok' → logprob: -7.102329254150391
    9. '   ' → logprob: -7.227329254150391
    10. 'result' → logprob: -7.352329254150391

Token 65: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6406810879707336
    2. '=' → logprob: -1.1406810283660889
    3. 'f' → logprob: -2.515681028366089
    4. 'n' → logprob: -2.640681028366089
    5. 'nt' → logprob: -7.640681266784668
    6. 'nd' → logprob: -8.265681266784668
    7. 'm' → logprob: -8.640681266784668
    8. ',' → logprob: -8.890681266784668
    9. 's' → logprob: -8.890681266784668
    10. ' n' → logprob: -9.390681266784668

Token 66: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012708594091236591
    2. ' ' → logprob: -4.38770866394043
    3. 'half' → logprob: -8.63770866394043
    4. ' half' → logprob: -10.88770866394043
    5. '1' → logprob: -14.07520866394043
    6. '   ' → logprob: -14.57520866394043
    7. '  ' → logprob: -15.13770866394043
    8. 'hal' → logprob: -16.01270866394043
    9. '```' → logprob: -16.13770866394043
    10. '=' → logprob: -16.38770866394043

Token 67: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00130249944049865
    2. ' ' → logprob: -6.876302719116211
    3. 'half' → logprob: -8.251302719116211
    4. ' half' → logprob: -13.126302719116211
    5. '1' → logprob: -13.751302719116211
    6. '   ' → logprob: -13.938802719116211
    7. '-' → logprob: -14.688802719116211
    8. 'hal' → logprob: -14.813802719116211
    9. '  ' → logprob: -14.876302719116211
    10. 'len' → logprob: -14.938802719116211

Token 68: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 69: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8488370180130005
    2. '<|end|>' → logprob: -0.8488370180130005
    3. '
' → logprob: -2.848836898803711
    4. ' ' → logprob: -3.473836898803711
    5. '    
' → logprob: -4.098836898803711
    6. ' 
' → logprob: -4.473836898803711
    7. '<|end|>' → logprob: -4.598836898803711
    8. '  
' → logprob: -5.348836898803711
    9. '   
' → logprob: -5.973836898803711
    10. ' while' → logprob: -5.973836898803711

Token 70: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.031728874891996384
    2. ' while' → logprob: -3.656728982925415
    3. '   ' → logprob: -5.781728744506836
    4. '<|end|>' → logprob: -6.906728744506836
    5. 'if' → logprob: -7.531728744506836
    6. 'i' → logprob: -8.781728744506836
    7. ' ' → logprob: -9.281728744506836
    8. 'for' → logprob: -10.031728744506836
    9. 'True' → logprob: -10.156728744506836
    10. '    ' → logprob: -10.156728744506836

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0067248414270579815
    2. 'i' → logprob: -5.006724834442139
    3. ' half' → logprob: -12.881725311279297
    4. ' ' → logprob: -13.006725311279297
    5. '    ' → logprob: -13.631725311279297
    6. '	i' → logprob: -14.006725311279297
    7. ' s' → logprob: -14.006725311279297
    8. '   ' → logprob: -14.881725311279297
    9. 'half' → logprob: -14.881725311279297
    10. '<|end|>' → logprob: -15.006725311279297

Token 72: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00763561250641942
    2. '<' → logprob: -4.882635593414307
    3. ' ' → logprob: -10.632636070251465
    4. '<n' → logprob: -12.757636070251465
    5. ' <=' → logprob: -13.882636070251465
    6. ' less' → logprob: -14.757636070251465
    7. '<len' → logprob: -15.507636070251465
    8. '<size' → logprob: -16.00763511657715
    9. ' <
' → logprob: -16.25763511657715
    10. 's' → logprob: -16.57013511657715

Token 73: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.38688933849334717
    2. ' half' → logprob: -1.1368893384933472
    3. 'hal' → logprob: -11.511889457702637
    4. ' ' → logprob: -13.011889457702637
    5. ' halftime' → logprob: -13.136889457702637
    6. ' n' → logprob: -14.261889457702637
    7. '_half' → logprob: -14.386889457702637
    8. ' halfway' → logprob: -14.636889457702637
    9. 'n' → logprob: -14.636889457702637
    10. 'halb' → logprob: -15.011889457702637

Token 74: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1551416665315628
    2. ':' → logprob: -2.530141592025757
    3. 'and' → logprob: -3.030141592025757
    4. ':
' → logprob: -4.530141830444336
    5. '   ' → logprob: -5.405141830444336
    6. '       ' → logprob: -8.030141830444336
    7. '    ' → logprob: -9.655141830444336
    8. ' ' → logprob: -11.030141830444336
    9. ' :' → logprob: -11.155141830444336
    10. '	and' → logprob: -11.405141830444336

Token 75: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02435520477592945
    2. '<|end|>' → logprob: -4.399355411529541
    3. '   ' → logprob: -5.024355411529541
    4. ':' → logprob: -6.524355411529541
    5. '        
' → logprob: -7.274355411529541
    6. '<|end|>' → logprob: -7.649355411529541
    7. '    ' → logprob: -7.774355411529541
    8. '    
' → logprob: -7.899355411529541
    9. ' ' → logprob: -8.274354934692383
    10. '
' → logprob: -8.274354934692383

Token 76: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7796844244003296
    2. 'if' (adapté à ' if') → logprob: -1.4046844244003296
    3. ' if' → logprob: -1.6546844244003296
    4. '   ' → logprob: -2.279684543609619
    5. 's' → logprob: -7.279684543609619
    6. ' ' → logprob: -7.279684543609619
    7. '    ' → logprob: -7.779684543609619
    8. ' s' → logprob: -8.529684066772461
    9. '	if' → logprob: -9.279684066772461
    10. '  ' → logprob: -9.404684066772461

Token 77: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.01417174469679594
    2. 's' → logprob: -4.264171600341797
    3. ' ' → logprob: -12.514171600341797
    4. ' not' → logprob: -13.014171600341797
    5. '(s' → logprob: -14.764171600341797
    6. '    ' → logprob: -14.764171600341797
    7. '   ' → logprob: -15.014171600341797
    8. '	s' → logprob: -15.764171600341797
    9. '<|end|>' → logprob: -16.264171600341797
    10. ''s' → logprob: -16.326671600341797

Token 78: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0009190816199406981
    2. '[' → logprob: -7.000918865203857
    3. '[s' → logprob: -12.625919342041016
    4. ' [' → logprob: -13.000919342041016
    5. 'i' → logprob: -14.875919342041016
    6. '[n' → logprob: -15.125919342041016
    7. '[a' → logprob: -15.500919342041016
    8. '[h' → logprob: -16.000919342041016
    9. '[u' → logprob: -16.500919342041016
    10. '[:' → logprob: -16.500919342041016

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5106724500656128
    2. '!=' → logprob: -1.3856724500656128
    3. ']!=' → logprob: -2.3856725692749023
    4. ' !=' → logprob: -2.8856725692749023
    5. ' ]' → logprob: -7.010672569274902
    6. ')!=' → logprob: -8.635672569274902
    7. ']==' → logprob: -8.760672569274902
    8. ')' → logprob: -8.760672569274902
    9. '!==' → logprob: -9.135672569274902
    10. '   ' → logprob: -9.260672569274902

Token 80: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04951786994934082
    2. ' !=' → logprob: -3.049517869949341
    3. '==' → logprob: -7.049517631530762
    4. '   ' → logprob: -11.049517631530762
    5. ' ==' → logprob: -11.424517631530762
    6. '!==' → logprob: -11.549517631530762
    7. ']!=' → logprob: -12.174517631530762
    8. ' not' → logprob: -12.549517631530762
    9. '()!=' → logprob: -12.924517631530762
    10. '[' → logprob: -13.049517631530762

Token 81: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.47412213683128357
    2. 's' → logprob: -0.974122166633606
    3. ' ' → logprob: -10.474122047424316
    4. ''s' → logprob: -11.724122047424316
    5. '<|end|>' → logprob: -13.224122047424316
    6. '   ' → logprob: -13.724122047424316
    7. '`s' → logprob: -13.974122047424316
    8. '  ' → logprob: -14.474122047424316
    9. '	s' → logprob: -14.474122047424316
    10. ' '' → logprob: -14.599122047424316

Token 82: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0485982745885849
    2. '[' → logprob: -3.048598289489746
    3. '[s' → logprob: -13.048598289489746
    4. 'i' → logprob: -13.173598289489746
    5. '[n' → logprob: -13.423598289489746
    6. 'half' → logprob: -13.548598289489746
    7. '[mid' → logprob: -14.048598289489746
    8. '[h' → logprob: -14.173598289489746
    9. '   ' → logprob: -14.673598289489746
    10. ' [' → logprob: -15.548598289489746

Token 83: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03804585337638855
    2. ' +' → logprob: -3.288045883178711
    3. '   ' → logprob: -13.163045883178711
    4. ' ' → logprob: -14.163045883178711
    5. '+
' → logprob: -14.413045883178711
    6. '＋' → logprob: -15.538045883178711
    7. '+h' → logprob: -15.788045883178711
    8. '	' → logprob: -16.16304588317871
    9. '+n' → logprob: -16.16304588317871
    10. '
' → logprob: -16.66304588317871

Token 84: ' half' (ID: 6375)
  Prédit: 'half'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'half' → logprob: -0.029850337654352188
    2. ' half' → logprob: -3.5298502445220947
    3. ' ' → logprob: -9.779850006103516
    4. '_half' → logprob: -10.654850006103516
    5. 'hal' → logprob: -11.779850006103516
    6. '<|end|>' → logprob: -12.279850006103516
    7. '-half' → logprob: -13.154850006103516
    8. '  ' → logprob: -13.404850006103516
    9. '   ' → logprob: -13.779850006103516
    10. '+' → logprob: -14.029850006103516

Token 85: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.08098220080137253
    2. ']:
' → logprob: -2.580982208251953
    3. ']' → logprob: -6.705982208251953
    4. ']:
' → logprob: -7.705982208251953
    5. ' ]' → logprob: -8.205982208251953
    6. ']:

' → logprob: -10.080982208251953
    7. ':' → logprob: -10.205982208251953
    8. '       ' → logprob: -10.580982208251953
    9. '   ' → logprob: -11.205982208251953
    10. '"]:' → logprob: -12.205982208251953

Token 86: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07695760577917099
    2. ':
' → logprob: -3.3269577026367188
    3. '           ' → logprob: -3.7019577026367188
    4. '       ' → logprob: -4.451957702636719
    5. '):' → logprob: -7.326957702636719
    6. 'print' → logprob: -8.076957702636719
    7. ')' → logprob: -8.451957702636719
    8. '   ' → logprob: -8.576957702636719
    9. ' :' → logprob: -9.201957702636719
    10. '):
' → logprob: -9.326957702636719

Token 87: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2546800374984741
    2. '               ' → logprob: -2.0046801567077637
    3. 'print' (adapté à ' print') → logprob: -3.0046801567077637
    4. ' print' → logprob: -3.3796801567077637
    5. '       ' → logprob: -5.879680156707764
    6. '   ' → logprob: -6.879680156707764
    7. '\n' → logprob: -7.004680156707764
    8. ' break' → logprob: -7.879680156707764
    9. '```' → logprob: -8.004679679870605
    10. '
' → logprob: -8.129679679870605

Token 88: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.006717267446219921
    2. '(' → logprob: -5.006717205047607
    3. '('' → logprob: -13.381717681884766
    4. '("("' → logprob: -14.756717681884766
    5. '("(' → logprob: -17.381717681884766
    6. '("")' → logprob: -17.881717681884766
    7. ' ("' → logprob: -18.006717681884766
    8. '()' → logprob: -18.256717681884766
    9. '(
' → logprob: -18.631717681884766
    10. '(No' → logprob: -19.006717681884766

Token 89: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.0008288058452308178
    2. '"No' → logprob: -7.125828742980957
    3. '"' → logprob: -10.875828742980957
    4. ' No' → logprob: -12.250828742980957
    5. '_No' → logprob: -16.250829696655273
    6. '“No' → logprob: -16.375829696655273
    7. '"N' → logprob: -16.750829696655273
    8. 'NO' → logprob: -16.750829696655273
    9. 'N' → logprob: -17.125829696655273
    10. '>No' → logprob: -17.250829696655273

Token 90: '")
' (ID: 1896)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35701537132263184
    2. '")
' → logprob: -1.3570153713226318
    3. '")' → logprob: -3.357015371322632
    4. '               ' → logprob: -5.482015609741211
    5. ')
' → logprob: -5.982015609741211
    6. ')' → logprob: -7.232015609741211
    7. '       ' → logprob: -8.107015609741211
    8. '")
' → logprob: -8.982015609741211
    9. ')")
' → logprob: -9.482015609741211
    10. '   ' → logprob: -11.232015609741211

Token 91: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004098195640835911
    2. '            
' → logprob: -8.625410079956055
    3. '
' → logprob: -9.250410079956055
    4. '<|end|>' → logprob: -9.750410079956055
    5. '               ' → logprob: -10.125410079956055
    6. '```' → logprob: -11.625410079956055
    7. '       ' → logprob: -11.750410079956055
    8. '<|end|>' → logprob: -12.000410079956055
    9. '		' → logprob: -13.250410079956055
    10. '        
' → logprob: -13.375410079956055

Token 92: ' sys' (ID: 12228)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012782112462446094
    2. '
' → logprob: -8.126277923583984
    3. '       ' → logprob: -8.376277923583984
    4. '            
' → logprob: -8.626277923583984
    5. 'break' → logprob: -8.751277923583984
    6. '   ' → logprob: -9.001277923583984
    7. '		' → logprob: -9.876277923583984
    8. 'exit' → logprob: -10.001277923583984
    9. '               ' → logprob: -10.251277923583984
    10. ' break' → logprob: -10.876277923583984

Token 93: '.exit' (ID: 27076)
  Prédit: '.exit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.exit' → logprob: -0.00020520923135336488
    2. 'exit' → logprob: -8.750205039978027
    3. '.' → logprob: -10.250205039978027
    4. '	exit' → logprob: -12.500205039978027
    5. '.stdout' → logprob: -12.875205039978027
    6. '_exit' → logprob: -13.375205039978027
    7. '   ' → logprob: -13.875205039978027
    8. '           ' → logprob: -14.125205039978027
    9. ' exit' → logprob: -14.125205039978027
    10. '       ' → logprob: -15.250205039978027

Token 94: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005278703290969133
    2. '(' → logprob: -5.255278587341309
    3. '()
' → logprob: -10.380278587341309
    4. '()`' → logprob: -12.005278587341309
    5. '()

' → logprob: -12.880278587341309
    6. '()(' → logprob: -13.255278587341309
    7. '()\' → logprob: -13.755278587341309
    8. '`()' → logprob: -14.880278587341309
    9. '()]' → logprob: -15.005278587341309
    10. ' ()' → logprob: -15.130278587341309

Token 95: '  ' (ID: 256)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03506786748766899
    2. '
' → logprob: -3.6600677967071533
    3. '        
' → logprob: -4.910068035125732
    4. '   ' → logprob: -7.785068035125732
    5. '<|end|>' → logprob: -7.785068035125732
    6. '  
' → logprob: -9.160067558288574
    7. '            
' → logprob: -9.285067558288574
    8. '           ' → logprob: -9.910067558288574
    9. '    
' → logprob: -10.035067558288574
    10. 'i' → logprob: -10.410067558288574

Token 96: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00904421042650938
    2. '
' → logprob: -4.884044170379639
    3. '   ' → logprob: -7.009044170379639
    4. '        
' → logprob: -8.259044647216797
    5. 'i' → logprob: -9.259044647216797
    6. '<|end|>' → logprob: -9.509044647216797
    7. '            
' → logprob: -11.384044647216797
    8. '           ' → logprob: -11.384044647216797
    9. '<|end|>' → logprob: -11.509044647216797
    10. ' i' → logprob: -11.509044647216797

Token 97: ' use' (ID: 1199)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11348286271095276
    2. '   ' → logprob: -2.23848295211792
    3. 'i' → logprob: -8.488482475280762
    4. ' ' → logprob: -8.863482475280762
    5. '           ' → logprob: -9.113482475280762
    6. 'print' → logprob: -9.863482475280762
    7. ' i' → logprob: -9.863482475280762
    8. '  ' → logprob: -10.738482475280762
    9. '    ' → logprob: -10.988482475280762
    10. '     ' → logprob: -11.613482475280762

Token 98: ' sys' (ID: 12228)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.7349879741668701
    2. ' sys' → logprob: -1.4849879741668701
    3. 'sys' → logprob: -2.23498797416687
    4. ' the' → logprob: -3.10998797416687
    5. ' a' → logprob: -3.73498797416687
    6. ' exit' → logprob: -4.109988212585449
    7. 'exit' → logprob: -4.234988212585449
    8. '```' → logprob: -4.234988212585449
    9. ' ' → logprob: -4.734988212585449
    10. '<|end|>' → logprob: -4.859988212585449

Token 99: '.exit' (ID: 27076)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40652593970298767
    2. '       ' → logprob: -2.0315258502960205
    3. '.exit' → logprob: -2.0315258502960205
    4. '.stdout' → logprob: -3.0315258502960205
    5. '           ' → logprob: -4.7815260887146
    6. 'exit' → logprob: -5.7815260887146
    7. '()
' → logprob: -5.9065260887146
    8. 'print' → logprob: -6.1565260887146
    9. '    
' → logprob: -6.4065260887146
    10. '
' → logprob: -7.2815260887146

Token 100: ' just' (ID: 1327)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008525127195753157
    2. '   ' → logprob: -7.375852584838867
    3. '<|end|>' → logprob: -9.500852584838867
    4. '
' → logprob: -9.875852584838867
    5. '        
' → logprob: -10.250852584838867
    6. '<|end|>' → logprob: -11.000852584838867
    7. 'i' → logprob: -11.250852584838867
    8. ' ' → logprob: -11.500852584838867
    9. '           ' → logprob: -11.875852584838867
    10. '     ' → logprob: -13.125852584838867

Token 101: ' in' (ID: 306)
  Prédit: ' after'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' after' → logprob: -0.45897042751312256
    2. ' here' → logprob: -2.083970546722412
    3. 'after' → logprob: -2.083970546722412
    4. ' to' → logprob: -2.333970546722412
    5. 'import' → logprob: -5.333970546722412
    6. 'to' → logprob: -5.708970546722412
    7. ' for' → logprob: -5.708970546722412
    8. '   ' → logprob: -6.083970546722412
    9. 'here' → logprob: -6.333970546722412
    10. ' before' → logprob: -6.583970546722412

Token 102: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.0028990209102630615
    2. 'this' → logprob: -6.252899169921875
    3. ' case' → logprob: -7.002899169921875
    4. 'time' → logprob: -10.252899169921875
    5. 'import' → logprob: -11.502899169921875
    6. 'code' → logprob: -12.502899169921875
    7. ' this' → logprob: -12.502899169921875
    8. '-case' → logprob: -13.002899169921875
    9. 'the' → logprob: -13.377899169921875
    10. '   ' → logprob: -13.627899169921875

Token 103: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037012589164078236
    2. '   ' → logprob: -5.628701210021973
    3. '<|end|>' → logprob: -10.003701210021973
    4. '           ' → logprob: -10.878701210021973
    5. '        
' → logprob: -12.128701210021973
    6. 'i' → logprob: -12.128701210021973
    7. '<|end|>' → logprob: -12.128701210021973
    8. ' ' → logprob: -12.628701210021973
    9. '
' → logprob: -13.003701210021973
    10. '     ' → logprob: -13.003701210021973

Token 104: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008965740562416613
    2. '
' → logprob: -8.000896453857422
    3. '   ' → logprob: -8.125896453857422
    4. '        
' → logprob: -8.875896453857422
    5. 'i' → logprob: -9.750896453857422
    6. '<|end|>' → logprob: -10.750896453857422
    7. '           ' → logprob: -11.500896453857422
    8. ' i' → logprob: -12.500896453857422
    9. '            
' → logprob: -12.500896453857422
    10. '```' → logprob: -12.875896453857422

Token 105: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.058096736669540405
    2. '   ' → logprob: -2.9330966472625732
    3. 'i' (adapté à ' i') → logprob: -5.808096885681152
    4. ' i' → logprob: -9.183096885681152
    5. '
' → logprob: -10.433096885681152
    6. '           ' → logprob: -10.808096885681152
    7. '    
' → logprob: -11.683096885681152
    8. ' ' → logprob: -11.808096885681152
    9. '	i' → logprob: -11.933096885681152
    10. '        
' → logprob: -12.058096885681152

Token 106: ' +=' (ID: 2757)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.7212485671043396
    2. '+=' → logprob: -0.7212485671043396
    3. ' +=' → logprob: -3.5962486267089844
    4. '=' → logprob: -8.471248626708984
    5. ' +' → logprob: -10.096248626708984
    6. '++' → logprob: -11.221248626708984
    7. '+="' → logprob: -11.971248626708984
    8. ' ' → logprob: -12.096248626708984
    9. '+='' → logprob: -12.596248626708984
    10. '+++' → logprob: -14.096248626708984

Token 107: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.250009536743164
    4. '```' → logprob: -19.125009536743164
    5. '１' → logprob: -19.750009536743164
    6. '  ' → logprob: -20.000009536743164
    7. '2' → logprob: -21.312509536743164
    8. '۱' → logprob: -21.375009536743164
    9. '+' → logprob: -22.062509536743164
    10. ' ' → logprob: -22.437509536743164

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.8125
    4. '```' → logprob: -19.0625
    5. '１' → logprob: -19.75
    6. '2' → logprob: -20.125
    7. '  ' → logprob: -21.0625
    8. '۱' → logprob: -21.1875
    9. '3' → logprob: -21.5625
    10. '१' → logprob: -21.6875

Token 109: ' ' (ID: 220)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2519405782222748
    2. '   ' → logprob: -1.5019406080245972
    3. '    
' → logprob: -12.501940727233887
    4. ' print' → logprob: -12.626940727233887
    5. '```' → logprob: -13.001940727233887
    6. '
' → logprob: -13.626940727233887
    7. '	print' → logprob: -14.376940727233887
    8. '  
' → logprob: -15.501940727233887
    9. '        
' → logprob: -16.50193977355957
    10. '       ' → logprob: -17.25193977355957

Token 110: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.12700065970420837
    2. '   ' → logprob: -2.127000570297241
    3. '    
' → logprob: -10.37700080871582
    4. '
' → logprob: -10.75200080871582
    5. '```' → logprob: -11.75200080871582
    6. ' print' → logprob: -11.87700080871582
    7. '  
' → logprob: -12.75200080871582
    8. '  ' → logprob: -14.25200080871582
    9. '        
' → logprob: -14.75200080871582
    10. '	print' → logprob: -15.00200080871582

Token 111: ' increment' (ID: 24032)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.004723583813756704
    2. '   ' → logprob: -5.37972354888916
    3. ' print' → logprob: -10.12972354888916
    4. 'else' → logprob: -10.12972354888916
    5. '
' → logprob: -11.37972354888916
    6. '    
' → logprob: -12.75472354888916
    7. '  ' → logprob: -13.00472354888916
    8. '```' → logprob: -13.37972354888916
    9. '	print' → logprob: -13.62972354888916
    10. ' ' → logprob: -14.00472354888916

Token 112: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4742577373981476
    2. '   ' → logprob: -0.9742577075958252
    3. '
' → logprob: -9.224257469177246
    4. 'else' → logprob: -10.599257469177246
    5. '    
' → logprob: -10.849257469177246
    6. '```' → logprob: -10.849257469177246
    7. ' print' → logprob: -11.349257469177246
    8. '  
' → logprob: -12.724257469177246
    9. '	print' → logprob: -14.224257469177246
    10. '``' → logprob: -14.599257469177246

Token 113: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31336888670921326
    2. '   ' → logprob: -1.3133689165115356
    3. '```' → logprob: -9.813368797302246
    4. '    
' → logprob: -10.563368797302246
    5. ' print' → logprob: -11.188368797302246
    6. '
' → logprob: -12.313368797302246
    7. '  
' → logprob: -12.563368797302246
    8. '	print' → logprob: -13.563368797302246
    9. '``' → logprob: -13.813368797302246
    10. 'else' → logprob: -14.563368797302246

Token 114: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -7.64839569455944e-05
    2. '   ' → logprob: -9.500076293945312
    3. ' print' → logprob: -14.125076293945312
    4. '    
' → logprob: -15.125076293945312
    5. '```' → logprob: -15.375076293945312
    6. 'else' → logprob: -15.750076293945312
    7. '
' → logprob: -15.875076293945312
    8. '	print' → logprob: -16.875076293945312
    9. '  
' → logprob: -17.875076293945312
    10. 'Print' → logprob: -17.875076293945312

Token 115: ' I' (ID: 357)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0003876550472341478
    2. '   ' → logprob: -7.875387668609619
    3. ' print' → logprob: -11.875387191772461
    4. '	print' → logprob: -16.00038719177246
    5. 'Print' → logprob: -16.25038719177246
    6. 'else' → logprob: -16.25038719177246
    7. '  ' → logprob: -16.50038719177246
    8. '
' → logprob: -17.00038719177246
    9. ' ' → logprob: -17.12538719177246
    10. '#' → logprob: -17.25038719177246

Token 116: ' guess' (ID: 11915)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2007313370704651
    2. '   ' → logprob: -1.8257312774658203
    3. 'else' → logprob: -4.82573127746582
    4. 'f' → logprob: -4.95073127746582
    5. ' print' → logprob: -5.57573127746582
    6. ' ' → logprob: -7.20073127746582
    7. 'n' → logprob: -8.32573127746582
    8. '  ' → logprob: -8.32573127746582
    9. 't' → logprob: -8.70073127746582
    10. ' else' → logprob: -9.07573127746582

Token 117: ' everything' (ID: 5519)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.00043138445471413434
    2. '   ' → logprob: -7.750431537628174
    3. ' print' → logprob: -14.250431060791016
    4. '	print' → logprob: -17.375431060791016
    5. '  ' → logprob: -18.500431060791016
    6. 'else' → logprob: -19.125431060791016
    7. ' ' → logprob: -19.500431060791016
    8. '```' → logprob: -19.500431060791016
    9. 'Print' → logprob: -19.750431060791016
    10. '    
' → logprob: -20.250431060791016

Token 118: ' is' (ID: 382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.25245562195777893
    2. 'print' → logprob: -1.5024555921554565
    3. 'else' → logprob: -8.252455711364746
    4. ' print' → logprob: -9.002455711364746
    5. 'is' → logprob: -9.877455711364746
    6. ' is' → logprob: -11.002455711364746
    7. 'prints' → logprob: -11.377455711364746
    8. '  ' → logprob: -11.502455711364746
    9. ' ' → logprob: -11.627455711364746
    10. 'Print' → logprob: -12.252455711364746

Token 119: ' fine' (ID: 8975)
  Prédit: 'fine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fine' → logprob: -0.4172002375125885
    2. 'Ok' → logprob: -2.1672003269195557
    3. 'ok' → logprob: -2.7922003269195557
    4. '   ' → logprob: -2.7922003269195557
    5. 'OK' → logprob: -3.0422003269195557
    6. 'Okay' → logprob: -4.042200088500977
    7. 'okay' → logprob: -4.542200088500977
    8. ' okay' → logprob: -5.167200088500977
    9. ' ok' → logprob: -5.167200088500977
    10. ''ok' → logprob: -5.167200088500977

Token 120: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038045622408390045
    2. '   ' → logprob: -3.288045644760132
    3. ' print' → logprob: -12.663045883178711
    4. '	print' → logprob: -15.038045883178711
    5. 'Print' → logprob: -15.288045883178711
    6. '```' → logprob: -15.288045883178711
    7. '    
' → logprob: -15.663045883178711
    8. '
' → logprob: -17.03804588317871
    9. '  
' → logprob: -17.66304588317871
    10. '       ' → logprob: -17.78804588317871

Token 121: ' we're' (ID: 15929)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.6622962951660156
    2. 'i' → logprob: -1.9122962951660156
    3. ' True' → logprob: -2.1622962951660156
    4. '   ' → logprob: -2.1622962951660156
    5. ' i' → logprob: -3.2872962951660156
    6. ' here' → logprob: -3.9122962951660156
    7. 'n' → logprob: -4.412296295166016
    8. 'here' → logprob: -4.412296295166016
    9. ' ' → logprob: -5.662296295166016
    10. 'not' → logprob: -5.912296295166016

Token 122: ' here' (ID: 2105)
  Prédit: 'here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'here' → logprob: -0.04309465363621712
    2. ' here' → logprob: -4.293094635009766
    3. 'not' → logprob: -4.418094635009766
    4. '   ' → logprob: -4.793094635009766
    5. 'still' → logprob: -5.293094635009766
    6. 'outside' → logprob: -6.168094635009766
    7. 'out' → logprob: -7.793094635009766
    8. 'past' → logprob: -7.918094635009766
    9. 'inside' → logprob: -9.918094635009766
    10. 'after' → logprob: -10.293094635009766

Token 123: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.038047801703214645
    2. '   ' → logprob: -3.2880477905273438
    3. ' print' → logprob: -12.663047790527344
    4. '```' → logprob: -13.163047790527344
    5. '	print' → logprob: -14.288047790527344
    6. '    
' → logprob: -14.663047790527344
    7. 'Print' → logprob: -16.288047790527344
    8. '       ' → logprob: -17.163047790527344
    9. '  
' → logprob: -17.663047790527344
    10. '.print' → logprob: -17.913047790527344

Token 124: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.011056780815124512
    2. '   ' → logprob: -4.511056900024414
    3. '```' → logprob: -12.386056900024414
    4. ' print' → logprob: -13.136056900024414
    5. '    
' → logprob: -13.261056900024414
    6. '	print' → logprob: -14.386056900024414
    7. 'Print' → logprob: -15.136056900024414
    8. '  
' → logprob: -16.636056900024414
    9. '.print' → logprob: -16.886056900024414
    10. '
' → logprob: -17.011056900024414

Token 125: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.004084455315023661
    2. '   ' → logprob: -5.504084587097168
    3. ' print' → logprob: -12.379084587097168
    4. '	print' → logprob: -13.754084587097168
    5. 'Print' → logprob: -14.504084587097168
    6. '    
' → logprob: -16.50408363342285
    7. '```' → logprob: -16.62908363342285
    8. '.print' → logprob: -17.00408363342285
    9. '       ' → logprob: -17.37908363342285
    10. '
' → logprob: -18.25408363342285

Token 126: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.0024787469301372766
    2. '(' → logprob: -6.00247859954834
    3. '("("' → logprob: -13.00247859954834
    4. '('' → logprob: -15.12747859954834
    5. '("")' → logprob: -15.50247859954834
    6. '()' → logprob: -15.50247859954834
    7. ' ("' → logprob: -16.127479553222656
    8. '(("' → logprob: -17.627479553222656
    9. '("""' → logprob: -18.502479553222656
    10. '(
' → logprob: -18.752479553222656

Token 127: 'Yes' (ID: 13022)
  Prédit: 'Yes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Yes' → logprob: -6.468279752880335e-05
    2. '"' → logprob: -9.750064849853516
    3. ' Yes' → logprob: -12.375064849853516
    4. 'YES' → logprob: -13.625064849853516
    5. 'Yeah' → logprob: -15.250064849853516
    6. '“Yes' → logprob: -16.000064849853516
    7. '""' → logprob: -16.250064849853516
    8. 'Ok' → logprob: -16.750064849853516
    9. '.Yes' → logprob: -16.750064849853516
    10. ''' → logprob: -17.000064849853516

Token 128: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -4.310693111619912e-05
    2. ')' → logprob: -10.250042915344238
    3. ')")' → logprob: -11.875042915344238
    4. '")
' → logprob: -14.375042915344238
    5. '')' → logprob: -16.375043869018555
    6. '}")' → logprob: -17.250043869018555
    7. '`)' → logprob: -18.750043869018555
    8. '()' → logprob: -18.875043869018555
    9. '”)' → logprob: -18.875043869018555
    10. '```' → logprob: -19.000043869018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 38
Tokens correctement prédits (1ère position, avec adaptation): 40
Tokens correctement prédits (top 10): 87
Précision stricte (1ère position): 30.16%
Précision adaptée (1ère position): 31.75%
Précision (top 10): 69.05%
================================================================================
