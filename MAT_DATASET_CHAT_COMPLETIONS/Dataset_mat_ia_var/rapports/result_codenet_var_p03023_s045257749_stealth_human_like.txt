================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 19:58:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
# Ok, alors, on demande un nombre... je crois ? 
n = input("Donne-moi un nombre : ") 
# On enlève 2... pourquoi ? mystère x)
angles = int(n) -2
# et là on multiplie par 180, je suppose que c'est pour des trucs de polygones.
resultat = angles * 180
print(resultat)  # voilà le résultat, normalement c'est bon
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: '#' (ID: 2)
  → Token d'amorce (pas de prédiction)

Token 1: ' Ok' (ID: 13927)
  → Token d'amorce (pas de prédiction)

Token 2: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 3: ' alors' (ID: 17971)
  Prédit: ' let's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' let's' → logprob: -0.3341462016105652
    2. ' let' → logprob: -2.58414626121521
    3. ' so' → logprob: -3.20914626121521
    4. ' ' → logprob: -3.45914626121521
    5. ' lets' → logprob: -3.58414626121521
    6. ' how' → logprob: -4.084146022796631
    7. ' I' → logprob: -4.209146022796631
    8. ' what' → logprob: -4.209146022796631
    9. ' sure' → logprob: -4.834146022796631
    10. 'let' → logprob: -4.834146022796631

Token 4: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09119731932878494
    2. ' ' → logprob: -3.3411972522735596
    3. '```' → logprob: -3.9661972522735596
    4. '#' → logprob: -4.591197490692139
    5. '!' → logprob: -5.091197490692139
    6. ' ,' → logprob: -5.841197490692139
    7. '<|end|>' → logprob: -5.841197490692139
    8. ':' → logprob: -6.341197490692139
    9. '...' → logprob: -6.466197490692139
    10. '.' → logprob: -6.841197490692139

Token 5: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4412860572338104
    2. ' je' → logprob: -1.1912860870361328
    3. ',' → logprob: -4.566286087036133
    4. ' continu' → logprob: -5.066286087036133
    5. ' c' → logprob: -5.316286087036133
    6. ' ```' → logprob: -5.316286087036133
    7. ' ' → logprob: -5.441286087036133
    8. '```' → logprob: -5.691286087036133
    9. ' ,' → logprob: -5.941286087036133
    10. 'je' → logprob: -6.566286087036133

Token 6: ' demande' (ID: 26737)
  Prédit: ' va'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' va' → logprob: -0.8681145906448364
    2. ' continue' → logprob: -1.8681145906448364
    3. 'n' → logprob: -2.368114471435547
    4. 's' → logprob: -2.618114471435547
    5. 'continue' → logprob: -2.993114471435547
    6. 'a' → logprob: -3.743114471435547
    7. '#' → logprob: -3.868114471435547
    8. ' a' → logprob: -4.243114471435547
    9. ' peut' → logprob: -4.243114471435547
    10. 'r' → logprob: -4.618114471435547

Token 7: ' un' (ID: 537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7239827513694763
    2. ':' → logprob: -1.598982810974121
    3. '.' → logprob: -2.723982810974121
    4. '```' → logprob: -3.348982810974121
    5. ' ' → logprob: -3.473982810974121
    6. ',' → logprob: -3.473982810974121
    7. '=' → logprob: -3.848982810974121
    8. '#' → logprob: -4.098982810974121
    9. '!' → logprob: -4.098982810974121
    10. '`' → logprob: -4.348982810974121

Token 8: ' nombre' (ID: 9733)
  Prédit: 'util'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'util' → logprob: -1.833611249923706
    2. ' ' → logprob: -2.083611249923706
    3. 'nom' → logprob: -2.458611249923706
    4. 'input' → logprob: -2.458611249923706
    5. 'f' → logprob: -2.583611249923706
    6. 'token' → logprob: -3.333611249923706
    7. '```' → logprob: -3.583611249923706
    8. 'é' → logprob: -3.708611249923706
    9. 'print' → logprob: -3.833611249923706
    10. 'e' → logprob: -3.958611249923706

Token 9: '...' (ID: 1008)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8218593001365662
    2. 'n' → logprob: -1.071859359741211
    3. ' =' → logprob: -2.571859359741211
    4. ':' → logprob: -3.446859359741211
    5. 'x' → logprob: -3.571859359741211
    6. 'nombre' → logprob: -4.196859359741211
    7. ' ' → logprob: -4.321859359741211
    8. '#' → logprob: -4.446859359741211
    9. 's' → logprob: -4.571859359741211
    10. ',' → logprob: -4.946859359741211

Token 10: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4835375249385834
    2. ' =' → logprob: -2.358537435531616
    3. 'n' → logprob: -2.358537435531616
    4. '_' → logprob: -3.108537435531616
    5. '=' → logprob: -3.233537435531616
    6. ':' → logprob: -3.733537435531616
    7. 's' → logprob: -3.858537435531616
    8. ''' → logprob: -4.108537673950195
    9. '.' → logprob: -4.733537673950195
    10. ',' → logprob: -5.233537673950195

Token 11: ' crois' (ID: 65485)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.7633962631225586
    2. ' ' → logprob: -1.3883962631225586
    3. ' =' → logprob: -1.6383962631225586
    4. 's' → logprob: -2.8883962631225586
    5. '=' → logprob: -4.638396263122559
    6. ' )' → logprob: -5.013396263122559
    7. 'n' → logprob: -5.888396263122559
    8. 'space' → logprob: -6.263396263122559
    9. '_s' → logprob: -6.388396263122559
    10. ' a' → logprob: -6.638396263122559

Token 12: ' ?' (ID: 1423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6302465796470642
    2. ':' → logprob: -2.255246639251709
    3. '=' → logprob: -2.380246639251709
    4. 'x' → logprob: -2.880246639251709
    5. ' ' → logprob: -3.255246639251709
    6. '#' → logprob: -3.505246639251709
    7. '```' → logprob: -3.505246639251709
    8. '`' → logprob: -3.630246639251709
    9. ',' → logprob: -4.380246639251709
    10. '.' → logprob: -4.505246639251709

Token 13: ' 
' (ID: 793)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05694427713751793
    2. ' ' → logprob: -3.5569443702697754
    3. 'nombre' → logprob: -4.181944370269775
    4. 'x' → logprob: -5.431944370269775
    5. '#' → logprob: -6.556944370269775
    6. 'i' → logprob: -7.306944370269775
    7. '```' → logprob: -7.431944370269775
    8. 'number' → logprob: -7.431944370269775
    9. 's' → logprob: -7.681944370269775
    10. 'num' → logprob: -8.056943893432617

Token 14: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.13945382833480835
    2. ' ' → logprob: -3.014453887939453
    3. 'x' → logprob: -3.514453887939453
    4. 'nombre' → logprob: -4.264453887939453
    5. '\n' → logprob: -5.139453887939453
    6. '`' → logprob: -5.139453887939453
    7. '#' → logprob: -5.639453887939453
    8. '```' → logprob: -5.764453887939453
    9. 'input' → logprob: -5.889453887939453
    10. 's' → logprob: -6.389453887939453

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4948910176753998
    2. '=' → logprob: -1.4948910474777222
    3. ' ' → logprob: -1.9948910474777222
    4. '_' → logprob: -4.369891166687012
    5. 'umber' → logprob: -4.869891166687012
    6. 'ombre' → logprob: -5.494891166687012
    7. 'um' → logprob: -5.994891166687012
    8. ')' → logprob: -7.369891166687012
    9. 'u' → logprob: -7.869891166687012
    10. ',' → logprob: -7.869891166687012

Token 16: ' input' (ID: 3422)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.14310471713542938
    2. ' input' → logprob: -2.3931047916412354
    3. 'int' → logprob: -3.7681047916412354
    4. ' ' → logprob: -4.518104553222656
    5. 'input' → logprob: -4.893104553222656
    6. '0' → logprob: -9.143104553222656
    7. '10' → logprob: -9.143104553222656
    8. '1' → logprob: -9.643104553222656
    9. ' float' → logprob: -10.018104553222656
    10. '5' → logprob: -10.518104553222656

Token 17: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002458430244587362
    2. '('' → logprob: -8.875246047973633
    3. '("("' → logprob: -9.250246047973633
    4. '(
' → logprob: -12.750246047973633
    5. '()' → logprob: -13.375246047973633
    6. ' (' → logprob: -13.625246047973633
    7. '("' → logprob: -13.750246047973633
    8. '(

' → logprob: -14.000246047973633
    9. '("")' → logprob: -14.250246047973633
    10. '(`' → logprob: -14.875246047973633

Token 18: 'Don' (ID: 11210)
  Prédit: 'Ent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Ent' → logprob: -0.2143607884645462
    2. 'Comb' → logprob: -1.8393608331680298
    3. 'Quel' → logprob: -3.8393607139587402
    4. 'Veuillez' → logprob: -5.83936071395874
    5. 'ent' → logprob: -6.08936071395874
    6. '")' → logprob: -6.46436071395874
    7. 'comb' → logprob: -6.46436071395874
    8. 'Nombre' → logprob: -7.33936071395874
    9. '"' → logprob: -7.46436071395874
    10. 'Cho' → logprob: -7.58936071395874

Token 19: 'ne' (ID: 611)
  Prédit: 'nez'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nez' → logprob: -0.16812647879123688
    2. 'ne' → logprob: -2.4181265830993652
    3. 'ner' → logprob: -3.0431265830993652
    4. 'né' → logprob: -4.668126583099365
    5. 'n' → logprob: -5.668126583099365
    6. 'née' → logprob: -5.918126583099365
    7. 'nées' → logprob: -7.668126583099365
    8. 'ez' → logprob: -7.918126583099365
    9. 'e' → logprob: -8.043126106262207
    10. 'neur' → logprob: -8.168126106262207

Token 20: '-moi' (ID: 119003)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.41771721839904785
    2. ' ' → logprob: -1.9177172183990479
    3. '-moi' → logprob: -2.167717218399048
    4. 'z' → logprob: -3.542717218399048
    5. ' moi' → logprob: -3.667717218399048
    6. ' un' → logprob: -4.042716979980469
    7. ' r' → logprob: -5.542716979980469
    8. '-' → logprob: -5.917716979980469
    9. ' ' → logprob: -7.542716979980469
    10. ' -' → logprob: -8.042716979980469

Token 21: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.024858830496668816
    2. ' ' → logprob: -3.7748587131500244
    3. ' ton' → logprob: -6.8998589515686035
    4. ' ' → logprob: -7.8998589515686035
    5. '  ' → logprob: -9.024858474731445
    6. 'un' → logprob: -9.899858474731445
    7. ' votre' → logprob: -10.774858474731445
    8. ' "' → logprob: -11.774858474731445
    9. ' le' → logprob: -11.899858474731445
    10. ' une' → logprob: -12.399858474731445

Token 22: ' nombre' (ID: 9733)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.28384384512901306
    2. ' nombre' → logprob: -1.4088438749313354
    3. 'nombre' → logprob: -6.158843994140625
    4. ' ' → logprob: -8.783843994140625
    5. ' espace' → logprob: -8.908843994140625
    6. '  ' → logprob: -8.908843994140625
    7. ' entier' → logprob: -10.283843994140625
    8. 'n' → logprob: -10.533843994140625
    9. ' numéro' → logprob: -10.783843994140625
    10. ' chiffre' → logprob: -11.033843994140625

Token 23: ' :' (ID: 712)
  Prédit: ' :'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' :' → logprob: -0.05443893000483513
    2. ':' → logprob: -3.429438829421997
    3. '")' → logprob: -4.179439067840576
    4. ')' → logprob: -6.179439067840576
    5. ' ")' → logprob: -7.054439067840576
    6. ' )' → logprob: -7.429439067840576
    7. ' ' → logprob: -7.554439067840576
    8. ' !' → logprob: -7.929439067840576
    9. ' ' → logprob: -8.429438591003418
    10. '"' → logprob: -8.679438591003418

Token 24: ' ")' (ID: 25221)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0009461151785217226
    2. ' ")' → logprob: -7.250946044921875
    3. ')' → logprob: -8.500946044921875
    4. '"' → logprob: -10.625946044921875
    5. ' )' → logprob: -12.375946044921875
    6. ')")' → logprob: -13.500946044921875
    7. ' ' → logprob: -14.375946044921875
    8. '")
' → logprob: -14.500946044921875
    9. ' ' → logprob: -14.875946044921875
    10. '”)' → logprob: -15.250946044921875

Token 25: ' 
' (ID: 793)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5540340542793274
    2. '\n' → logprob: -2.1790339946746826
    3. ')' → logprob: -3.0540339946746826
    4. ' 
' → logprob: -3.1790339946746826
    5. 'if' → logprob: -3.1790339946746826
    6. 'int' → logprob: -3.5540339946746826
    7. '#' → logprob: -3.8040339946746826
    8. ' ' → logprob: -3.9290339946746826
    9. '' → logprob: -4.054034233093262
    10. '\' → logprob: -4.304034233093262

Token 26: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.014754295349121
    2. '.' → logprob: -1.264754295349121
    3. ' ' → logprob: -2.014754295349121
    4. 'if' → logprob: -3.139754295349121
    5. '.strip' → logprob: -3.389754295349121
    6. '#' → logprob: -3.764754295349121
    7. '<|end|>' → logprob: -4.014754295349121
    8. '\n' → logprob: -4.264754295349121
    9. '=' → logprob: -4.264754295349121
    10. 'n' → logprob: -5.014754295349121

Token 27: ' On' (ID: 2160)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.21158064901828766
    2. 'n' → logprob: -1.7115806341171265
    3. ' n' → logprob: -5.211580753326416
    4. ' 
' → logprob: -6.711580753326416
    5. 'int' → logprob: -7.586580753326416
    6. '<|end|>' → logprob: -7.836580753326416
    7. ' if' → logprob: -7.961580753326416
    8. '#' → logprob: -7.961580753326416
    9. 'if' → logprob: -8.336580276489258
    10. '\' → logprob: -8.711580276489258

Token 28: ' enl' (ID: 116494)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.633375346660614
    2. ' try' → logprob: -1.3833754062652588
    3. 'n' → logprob: -2.508375406265259
    4. ' n' → logprob: -2.758375406265259
    5. ' veut' → logprob: -3.133375406265259
    6. 'print' → logprob: -4.75837516784668
    7. 'v' → logprob: -6.00837516784668
    8. ' peut' → logprob: -6.00837516784668
    9. ' print' → logprob: -6.38337516784668
    10. ' =' → logprob: -6.50837516784668

Token 29: 'ève' (ID: 41151)
  Prédit: 'ève'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ève' → logprob: -0.026516592130064964
    2. 'eve' → logprob: -3.9015166759490967
    3. 'e' → logprob: -5.151516437530518
    4. 'ove' → logprob: -9.776516914367676
    5. 've' → logprob: -10.776516914367676
    6. 'ieve' → logprob: -10.901516914367676
    7. 'èves' → logprob: -11.026516914367676
    8. 'ace' → logprob: -12.026516914367676
    9. '```' → logprob: -12.151516914367676
    10. 'ive' → logprob: -12.276516914367676

Token 30: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.1766618490219116
    2. 'l' → logprob: -1.3016618490219116
    3. ' l' → logprob: -2.301661968231201
    4. 's' → logprob: -2.801661968231201
    5. ' les' → logprob: -3.051661968231201
    6. 'int' → logprob: -3.551661968231201
    7. 'n' → logprob: -3.676661968231201
    8. '.strip' → logprob: -4.176661968231201
    9. '.' → logprob: -4.551661968231201
    10. 'le' → logprob: -4.801661968231201

Token 31: '2' (ID: 17)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9239322543144226
    2. ' l' → logprob: -2.2989323139190674
    3. ' ' → logprob: -2.5489323139190674
    4. 'int' → logprob: -2.6739323139190674
    5. 'n' → logprob: -3.1739323139190674
    6. 's' → logprob: -3.2989323139190674
    7. '\n' → logprob: -3.2989323139190674
    8. '.strip' → logprob: -3.2989323139190674
    9. '.' → logprob: -3.5489323139190674
    10. '.l' → logprob: -3.5489323139190674

Token 32: '...' (ID: 1008)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.032452814280986786
    2. ' n' → logprob: -3.5324528217315674
    3. ' ' → logprob: -6.657452583312988
    4. ' =' → logprob: -8.532452583312988
    5. '-' → logprob: -8.782452583312988
    6. '2' → logprob: -8.907452583312988
    7. 'x' → logprob: -9.532452583312988
    8. '=' → logprob: -9.782452583312988
    9. 'a' → logprob: -9.782452583312988
    10. ' 
' → logprob: -9.782452583312988

Token 33: ' pourquoi' (ID: 39224)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.034065645188093185
    2. ' ' → logprob: -3.9090657234191895
    3. ' n' → logprob: -4.6590657234191895
    4. ' 
' → logprob: -6.5340657234191895
    5. '2' → logprob: -7.1590657234191895
    6. '
' → logprob: -7.6590657234191895
    7. ')' → logprob: -7.9090657234191895
    8. '\n' → logprob: -8.909065246582031
    9. '  
' → logprob: -9.034065246582031
    10. '.' → logprob: -9.784065246582031

Token 34: ' ?' (ID: 1423)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.10462366789579391
    2. ' n' → logprob: -2.979623556137085
    3. ' ' → logprob: -3.854623556137085
    4. ' 
' → logprob: -4.979623794555664
    5. '  
' → logprob: -5.729623794555664
    6. '[n' → logprob: -6.104623794555664
    7. '
' → logprob: -6.229623794555664
    8. ' if' → logprob: -6.604623794555664
    9. '[' → logprob: -6.729623794555664
    10. 'if' → logprob: -6.854623794555664

Token 35: ' myst' (ID: 15982)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.059297844767570496
    2. '
' → logprob: -3.559297800064087
    3. ' 
' → logprob: -4.309298038482666
    4. ' n' → logprob: -4.934298038482666
    5. ' ' → logprob: -6.184298038482666
    6. '  
' → logprob: -6.309298038482666
    7. '\n' → logprob: -6.309298038482666
    8. '
' → logprob: -7.184298038482666
    9. 'int' → logprob: -8.059297561645508
    10. '```' → logprob: -8.184297561645508

Token 36: 'ère' (ID: 4346)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.788212776184082
    2. 'ère' → logprob: -1.038212776184082
    3. 'è' → logprob: -2.413212776184082
    4. '=' → logprob: -3.538212776184082
    5. ' =' → logprob: -3.663212776184082
    6. 'é' → logprob: -3.913212776184082
    7. '.' → logprob: -4.913212776184082
    8. '?' → logprob: -5.038212776184082
    9. 'er' → logprob: -6.038212776184082
    10. 'ere' → logprob: -6.288212776184082

Token 37: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.031003613024950027
    2. ' n' → logprob: -4.781003475189209
    3. ' ' → logprob: -5.406003475189209
    4. ' 
' → logprob: -5.656003475189209
    5. '\n' → logprob: -5.781003475189209
    6. '2' → logprob: -6.406003475189209
    7. '
' → logprob: -6.406003475189209
    8. '-' → logprob: -6.531003475189209
    9. '.' → logprob: -6.656003475189209
    10. '[:-' → logprob: -6.906003475189209

Token 38: ')
' (ID: 446)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40437158942222595
    2. ' =' → logprob: -1.9043716192245483
    3. '-' → logprob: -2.404371500015259
    4. ' ' → logprob: -3.654371500015259
    5. '[:-' → logprob: -3.779371500015259
    6. '=' → logprob: -4.279371738433838
    7. ' n' → logprob: -4.904371738433838
    8. '[' → logprob: -5.404371738433838
    9. ' -' → logprob: -5.529371738433838
    10. '[n' → logprob: -5.529371738433838

Token 39: 'angles' (ID: 34011)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05971398949623108
    2. '-' → logprob: -3.9347140789031982
    3. '[:-' → logprob: -4.184713840484619
    4. '
' → logprob: -5.434713840484619
    5. ' 
' → logprob: -5.434713840484619
    6. ' n' → logprob: -5.559713840484619
    7. 'int' → logprob: -5.684713840484619
    8. '  
' → logprob: -7.059713840484619
    9. '\n' → logprob: -7.184713840484619
    10. ' -' → logprob: -7.434713840484619

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06470368057489395
    2. '_' → logprob: -3.0647037029266357
    3. '=' → logprob: -4.814703464508057
    4. ')' → logprob: -6.314703464508057
    5. ' ' → logprob: -7.064703464508057
    6. '_angles' → logprob: -7.189703464508057
    7. '[' → logprob: -7.314703464508057
    8. ',' → logprob: -7.314703464508057
    9. '_rest' → logprob: -7.314703464508057
    10. '-' → logprob: -7.814703464508057

Token 41: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.7461560368537903
    2. ' ' → logprob: -1.4961559772491455
    3. ' n' → logprob: -1.7461559772491455
    4. 'int' → logprob: -2.7461559772491455
    5. 'n' → logprob: -4.246156215667725
    6. ' float' → logprob: -4.496156215667725
    7. ' [' → logprob: -4.496156215667725
    8. '[int' → logprob: -5.371156215667725
    9. '90' → logprob: -5.621156215667725
    10. '45' → logprob: -5.746156215667725

Token 42: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.07893253117799759
    2. '(' → logprob: -2.578932523727417
    3. ' (' → logprob: -10.828932762145996
    4. '(
' → logprob: -11.328932762145996
    5. '('' → logprob: -12.578932762145996
    6. '(s' → logprob: -13.328932762145996
    7. '(angle' → logprob: -14.203932762145996
    8. '(nb' → logprob: -14.203932762145996
    9. '((' → logprob: -14.328932762145996
    10. '(float' → logprob: -14.828932762145996

Token 43: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001333932508714497
    2. ' )' → logprob: -6.751333713531494
    3. '-' → logprob: -9.126334190368652
    4. ')-' → logprob: -10.251334190368652
    5. ' -' → logprob: -11.501334190368652
    6. '[' → logprob: -12.876334190368652
    7. '-)' → logprob: -13.126334190368652
    8. ' ' → logprob: -13.251334190368652
    9. '))' → logprob: -14.251334190368652
    10. '[:-' → logprob: -14.876334190368652

Token 44: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11550599336624146
    2. '-' → logprob: -2.2405059337615967
    3. ' *' → logprob: -6.865506172180176
    4. ' ' → logprob: -7.865506172180176
    5. ')' → logprob: -7.990506172180176
    6. '[' → logprob: -8.365506172180176
    7. '*' → logprob: -9.115506172180176
    8. '%' → logprob: -9.115506172180176
    9. ' ' → logprob: -9.740506172180176
    10. ' )' → logprob: -10.365506172180176

Token 45: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17975588142871857
    2. ' ' → logprob: -1.8047559261322021
    3. '20' → logprob: -13.429756164550781
    4. '32' → logprob: -13.429756164550781
    5. ' ' → logprob: -13.554756164550781
    6. '24' → logprob: -13.804756164550781
    7. '	' → logprob: -14.179756164550781
    8. '22' → logprob: -14.179756164550781
    9. '12' → logprob: -14.304756164550781
    10. '23' → logprob: -14.804756164550781

Token 46: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3201291561126709
    2. '*' → logprob: -1.945129156112671
    3. '<|end|>' → logprob: -2.695129156112671
    4. '#' → logprob: -4.19512939453125
    5. '
' → logprob: -4.32012939453125
    6. ' ' → logprob: -4.44512939453125
    7. ' )' → logprob: -5.69512939453125
    8. ':' → logprob: -5.94512939453125
    9. '.' → logprob: -6.07012939453125
    10. '\' → logprob: -6.19512939453125

Token 47: '#' (ID: 2)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.45601367950439453
    2. '#' → logprob: -1.2060136795043945
    3. '*' → logprob: -4.3310136795043945
    4. 'print' → logprob: -4.3310136795043945
    5. '
' → logprob: -4.3310136795043945
    6. '<|end|>' → logprob: -5.2060136795043945
    7. ' 
' → logprob: -5.8310136795043945
    8. '  
' → logprob: -5.9560136795043945
    9. '+' → logprob: -5.9560136795043945
    10. ' ' → logprob: -6.2060136795043945

Token 48: ' et' (ID: 859)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5657645463943481
    2. ')' → logprob: -1.8157645463943481
    3. '<|end|>' → logprob: -2.3157644271850586
    4. ' )' → logprob: -2.8157644271850586
    5. ' angles' → logprob: -3.4407644271850586
    6. '*' → logprob: -3.6907644271850586
    7. '#' → logprob: -4.815764427185059
    8. ' *' → logprob: -4.940764427185059
    9. 'angles' → logprob: -4.940764427185059
    10. '\' → logprob: -5.315764427185059

Token 49: ' là' (ID: 8052)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.5246614813804626
    2. 'print' → logprob: -1.3996615409851074
    3. '#' → logprob: -3.1496615409851074
    4. ' for' → logprob: -3.2746615409851074
    5. ' ' → logprob: -4.149661540985107
    6. ' #' → logprob: -4.524661540985107
    7. 'for' → logprob: -4.899661540985107
    8. ' if' → logprob: -5.149661540985107
    9. ')' → logprob: -5.274661540985107
    10. ' sum' → logprob: -5.899661540985107

Token 50: ' on' (ID: 402)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.6375117897987366
    2. ':' → logprob: -2.262511730194092
    3. ')' → logprob: -2.512511730194092
    4. ' :' → logprob: -2.762511730194092
    5. 'print' → logprob: -3.137511730194092
    6. ' print' → logprob: -3.387511730194092
    7. ' )' → logprob: -3.637511730194092
    8. 'angles' → logprob: -4.137511730194092
    9. ' ' → logprob: -4.387511730194092
    10. ' angles' → logprob: -4.512511730194092

Token 51: ' multipl' (ID: 44269)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.6614643335342407
    2. 'print' → logprob: -1.5364643335342407
    3. ':' → logprob: -2.411464214324951
    4. ' calc' → logprob: -2.911464214324951
    5. ' for' → logprob: -3.286464214324951
    6. 'for' → logprob: -4.536464214324951
    7. ' compte' → logprob: -5.161464214324951
    8. ' va' → logprob: -5.161464214324951
    9. ' n' → logprob: -5.286464214324951
    10. 's' → logprob: -5.411464214324951

Token 52: 'ie' (ID: 396)
  Prédit: 'ie'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ie' → logprob: -0.0028664469718933105
    2. 'ié' → logprob: -7.127866268157959
    3. 'ies' → logprob: -7.377866268157959
    4. 'e' → logprob: -7.752866268157959
    5. 'i' → logprob: -8.127866744995117
    6. 'ique' → logprob: -8.627866744995117
    7. 'ic' → logprob: -8.752866744995117
    8. 'ip' → logprob: -9.752866744995117
    9. 'ier' → logprob: -10.002866744995117
    10. 'ieur' → logprob: -10.252866744995117

Token 53: ' par' (ID: 686)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.026021935045719147
    2. '*' → logprob: -3.776021957397461
    3. '(' → logprob: -6.901021957397461
    4. 'angles' → logprob: -6.901021957397461
    5. ' (' → logprob: -8.026021957397461
    6. ' angles' → logprob: -9.026021957397461
    7. ' ' → logprob: -10.151021957397461
    8. '<|end|>' → logprob: -10.151021957397461
    9. '_angles' → logprob: -10.276021957397461
    10. ')' → logprob: -10.651021957397461

Token 54: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13700397312641144
    2. '180' → logprob: -2.1370038986206055
    3. '90' → logprob: -5.0120038986206055
    4. '1' → logprob: -6.1370038986206055
    5. '60' → logprob: -7.7620038986206055
    6. '18' → logprob: -8.137003898620605
    7. '3' → logprob: -8.512003898620605
    8. '9' → logprob: -9.887003898620605
    9. '6' → logprob: -10.012003898620605
    10. '  ' → logprob: -10.012003898620605

Token 55: '180' (ID: 7521)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.0217292308807373
    2. '180' → logprob: -1.1467292308807373
    3. '1' → logprob: -1.3967292308807373
    4. '90' → logprob: -2.7717292308807373
    5. '9' → logprob: -4.521729469299316
    6. '18' → logprob: -6.771729469299316
    7. '3' → logprob: -8.771729469299316
    8. '  ' → logprob: -10.521729469299316
    9. '0' → logprob: -10.521729469299316
    10. '2' → logprob: -11.146729469299316

Token 56: ',' (ID: 11)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.02347560226917267
    2. '*' → logprob: -3.8984756469726562
    3. ' ' → logprob: -6.273475646972656
    4. ')' → logprob: -7.773475646972656
    5. ' )' → logprob: -8.273475646972656
    6. '<|end|>' → logprob: -8.773475646972656
    7. ' ' → logprob: -9.273475646972656
    8. ' ,' → logprob: -10.773475646972656
    9. 'angles' → logprob: -11.023475646972656
    10. ' angles' → logprob: -11.773475646972656

Token 57: ' je' (ID: 1264)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5235016942024231
    2. ' *' → logprob: -1.2735016345977783
    3. 'angles' → logprob: -2.8985016345977783
    4. '*' → logprob: -3.6485016345977783
    5. ' angles' → logprob: -3.8985016345977783
    6. '<|end|>' → logprob: -4.523501873016357
    7. ')' → logprob: -5.648501873016357
    8. 'print' → logprob: -6.023501873016357
    9. ' )' → logprob: -6.523501873016357
    10. '_angles' → logprob: -6.648501873016357

Token 58: ' suppose' (ID: 35968)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.3382094204425812
    2. ' ' → logprob: -1.9632093906402588
    3. '*' → logprob: -2.338209390640259
    4. ' #' → logprob: -4.213209629058838
    5. '<|end|>' → logprob: -4.338209629058838
    6. '#' → logprob: -5.088209629058838
    7. 'print' → logprob: -5.713209629058838
    8. ' ' → logprob: -5.963209629058838
    9. ' )' → logprob: -6.338209629058838
    10. ')' → logprob: -6.838209629058838

Token 59: ' que' (ID: 661)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.05799853429198265
    2. '*' → logprob: -3.6829984188079834
    3. ' ' → logprob: -4.1829986572265625
    4. 'angles' → logprob: -4.9329986572265625
    5. '<|end|>' → logprob: -5.3079986572265625
    6. ' ' → logprob: -6.6829986572265625
    7. ' angles' → logprob: -7.4329986572265625
    8. 'print' → logprob: -7.6829986572265625
    9. ')' → logprob: -7.6829986572265625
    10. '_angles' → logprob: -8.557998657226562

Token 60: ' c' (ID: 274)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4795246720314026
    2. '<|end|>' → logprob: -1.8545246124267578
    3. 'angles' → logprob: -2.229524612426758
    4. ' angles' → logprob: -2.604524612426758
    5. '  ' → logprob: -5.229524612426758
    6. ' )' → logprob: -5.229524612426758
    7. ')' → logprob: -5.229524612426758
    8. ' "' → logprob: -5.479524612426758
    9. 'print' → logprob: -5.979524612426758
    10. ' ' → logprob: -5.979524612426758

Token 61: ''est' (ID: 6616)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.10605715960264206
    2. ' '' → logprob: -2.7310571670532227
    3. 'e' → logprob: -4.731057167053223
    4. ' *' → logprob: -5.356057167053223
    5. ' ' → logprob: -5.731057167053223
    6. '*' → logprob: -5.731057167053223
    7. ''est' → logprob: -5.856057167053223
    8. ' #' → logprob: -5.981057167053223
    9. '#' → logprob: -6.106057167053223
    10. ''espace' → logprob: -6.856057167053223

Token 62: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12719528377056122
    2. '<|end|>' → logprob: -3.627195358276367
    3. ' *' → logprob: -3.752195358276367
    4. ' )' → logprob: -3.877195358276367
    5. ' "' → logprob: -4.877195358276367
    6. ')' → logprob: -5.377195358276367
    7. '*' → logprob: -5.502195358276367
    8. 'angles' → logprob: -5.502195358276367
    9. ' angles' → logprob: -5.627195358276367
    10. ' ```' → logprob: -6.002195358276367

Token 63: ' des' (ID: 731)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.1719290167093277
    2. ' )' → logprob: -2.921929121017456
    3. ' angles' → logprob: -3.671929121017456
    4. ' '' → logprob: -4.546928882598877
    5. ' les' → logprob: -4.796928882598877
    6. 'angles' → logprob: -4.921928882598877
    7. ' "' → logprob: -5.046928882598877
    8. ' n' → logprob: -5.296928882598877
    9. ')' → logprob: -5.421928882598877
    10. ' def' → logprob: -5.796928882598877

Token 64: ' trucs' (ID: 151878)
  Prédit: ' degrés'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' degrés' → logprob: -0.2751918435096741
    2. ' triangles' → logprob: -2.0251917839050293
    3. ' angles' → logprob: -2.5251917839050293
    4. ' ' → logprob: -4.775191783905029
    5. ' espaces' → logprob: -5.525191783905029
    6. 'angles' → logprob: -5.775191783905029
    7. ' degré' → logprob: -6.025191783905029
    8. ' raisons' → logprob: -6.650191783905029
    9. ' degrees' → logprob: -6.650191783905029
    10. ' calcul' → logprob: -6.775191783905029

Token 65: ' de' (ID: 334)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8127970695495605
    2. ' *' → logprob: -1.3127970695495605
    3. ' de' → logprob: -1.8127970695495605
    4. ' liés' → logprob: -3.9377970695495605
    5. ' angles' → logprob: -4.0627970695495605
    6. ' )' → logprob: -4.3127970695495605
    7. '*' → logprob: -4.4377970695495605
    8. 'angles' → logprob: -4.5627970695495605
    9. ' ```' → logprob: -5.1877970695495605
    10. '.' → logprob: -5.5627970695495605

Token 66: ' pol' (ID: 1823)
  Prédit: ' triangles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.8277421593666077
    2. ' ' → logprob: -1.077742099761963
    3. ' angles' → logprob: -2.827742099761963
    4. ' pol' → logprob: -2.952742099761963
    5. ' degrés' → logprob: -2.952742099761963
    6. ' espaces' → logprob: -3.702742099761963
    7. ' degré' → logprob: -5.077742099761963
    8. ' triangle' → logprob: -5.327742099761963
    9. 'angles' → logprob: -5.577742099761963
    10. '  ' → logprob: -6.327742099761963

Token 67: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.0015641386853531003
    2. 'ygons' → logprob: -7.251564025878906
    3. 'y' → logprob: -7.376564025878906
    4. 'ygon' → logprob: -8.626564025878906
    5. 'ig' → logprob: -10.876564025878906
    6. 'YGON' → logprob: -11.751564025878906
    7. 'YG' → logprob: -12.501564025878906
    8. '```' → logprob: -12.876564025878906
    9. 'ys' → logprob: -13.501564025878906
    10. 'ý' → logprob: -13.626564025878906

Token 68: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.677730143070221
    2. 'es' → logprob: -0.927730143070221
    3. 'on' → logprob: -3.177730083465576
    4. '```' → logprob: -3.802730083465576
    5. 'one' → logprob: -4.677730083465576
    6. 'o' → logprob: -5.052730083465576
    7. 'onnes' → logprob: -5.552730083465576
    8. 'e' → logprob: -6.427730083465576
    9. '\' → logprob: -6.552730083465576
    10. '``' → logprob: -6.802730083465576

Token 69: '.
' (ID: 558)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.9072242379188538
    2. 'angles' → logprob: -1.282224178314209
    3. '*' → logprob: -1.657224178314209
    4. ' angles' → logprob: -2.282224178314209
    5. ' ' → logprob: -4.407224178314209
    6. '_angles' → logprob: -6.032224178314209
    7. ')' → logprob: -6.407224178314209
    8. ' )' → logprob: -6.407224178314209
    9. ' ,' → logprob: -6.907224178314209
    10. 'print' → logprob: -7.157224178314209

Token 70: 'result' (ID: 2521)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.8567768931388855
    2. ' *' → logprob: -0.9817768931388855
    3. ' ' → logprob: -1.8567769527435303
    4. ')' → logprob: -3.7317769527435303
    5. ' )' → logprob: -5.356776714324951
    6. 'print' → logprob: -5.856776714324951
    7. 'angles' → logprob: -6.356776714324951
    8. '#' → logprob: -6.856776714324951
    9. ' angles' → logprob: -6.856776714324951
    10. '```' → logprob: -6.856776714324951

Token 71: 'at' (ID: 266)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2349688857793808
    2. '=' → logprob: -1.609968900680542
    3. '_' → logprob: -4.984968662261963
    4. 'a' → logprob: -6.859968662261963
    5. 'at' → logprob: -7.109968662261963
    6. 's' → logprob: -7.984968662261963
    7. 'e' → logprob: -8.609969139099121
    8. ' ' → logprob: -9.234969139099121
    9. 'ats' → logprob: -9.609969139099121
    10. ' ' → logprob: -9.984969139099121

Token 72: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023018216714262962
    2. '=' → logprob: -3.8980181217193604
    3. ' ' → logprob: -6.3980183601379395
    4. '_' → logprob: -7.5230183601379395
    5. 's' → logprob: -9.273017883300781
    6. '*' → logprob: -10.273017883300781
    7. ' ' → logprob: -10.523017883300781
    8. 'space' → logprob: -10.523017883300781
    9. ' *' → logprob: -10.898017883300781
    10. '_space' → logprob: -11.023017883300781

Token 73: ' angles' (ID: 43448)
  Prédit: 'angles'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.08901264518499374
    2. ' angles' → logprob: -2.464012622833252
    3. '180' → logprob: -9.83901309967041
    4. ' ' → logprob: -12.08901309967041
    5. 'angle' → logprob: -12.58901309967041
    6. '_angles' → logprob: -12.58901309967041
    7. 'ANGLES' → logprob: -13.21401309967041
    8. '(' → logprob: -13.21401309967041
    9. 'Angles' → logprob: -14.08901309967041
    10. ' (' → logprob: -14.21401309967041

Token 74: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.007634078152477741
    2. '*' → logprob: -4.882634162902832
    3. ' ' → logprob: -11.007634162902832
    4. ' ' → logprob: -12.132634162902832
    5. 's' → logprob: -13.382634162902832
    6. ' **' → logprob: -14.382634162902832
    7. ')' → logprob: -14.507634162902832
    8. '"' → logprob: -14.757634162902832
    9. '**' → logprob: -14.757634162902832
    10. '180' → logprob: -14.757634162902832

Token 75: ' ' (ID: 220)
  Prédit: '180'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.00021307668066583574
    2. ' ' → logprob: -8.625212669372559
    3. '1' → logprob: -10.375212669372559
    4. '18' → logprob: -13.250212669372559
    5. '179' → logprob: -15.875212669372559
    6. '  ' → logprob: -16.250213623046875
    7. '```' → logprob: -17.000213623046875
    8. '90' → logprob: -17.312713623046875
    9. '186' → logprob: -17.375213623046875
    10. '<|end|>' → logprob: -17.500213623046875

Token 76: '180' (ID: 7521)
  Prédit: '180'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '180' → logprob: -0.00011570196511456743
    2. '1' → logprob: -9.125115394592285
    3. '18' → logprob: -12.500115394592285
    4. ' ' → logprob: -12.750115394592285
    5. '179' → logprob: -17.3751163482666
    6. '90' → logprob: -17.8751163482666
    7. '１８' → logprob: -18.6251163482666
    8. '  ' → logprob: -19.0001163482666
    9. '```' → logprob: -19.5001163482666
    10. '۱۸' → logprob: -19.5001163482666

Token 77: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 78: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.006243618670850992
    2. ')' → logprob: -6.006243705749512
    3. '
' → logprob: -6.631243705749512
    4. ' print' → logprob: -6.881243705749512
    5. '<|end|>' → logprob: -6.881243705749512
    6. '#' → logprob: -8.631243705749512
    7. '\n' → logprob: -9.381243705749512
    8. '\' → logprob: -10.506243705749512
    9. '#print' → logprob: -10.881243705749512
    10. '```' → logprob: -11.381243705749512

Token 79: '(result' (ID: 8111)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0015506906202062964
    2. '("("' → logprob: -6.626550674438477
    3. '('' → logprob: -9.126550674438477
    4. '()' → logprob: -9.626550674438477
    5. ' (' → logprob: -11.626550674438477
    6. '(
' → logprob: -11.751550674438477
    7. '("")' → logprob: -11.876550674438477
    8. ' ' → logprob: -12.001550674438477
    9. '("' → logprob: -12.376550674438477
    10. '(

' → logprob: -12.626550674438477

Token 80: 'at' (ID: 266)
  Prédit: 'at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.046303339302539825
    2. ')' → logprob: -3.1713032722473145
    3. 't' → logprob: -6.7963032722473145
    4. '_at' → logprob: -6.9213032722473145
    5. 'ât' → logprob: -8.046303749084473
    6. ')t' → logprob: -8.296303749084473
    7. 'ats' → logprob: -8.796303749084473
    8. '	at' → logprob: -9.171303749084473
    9. 'a' → logprob: -9.296303749084473
    10. 'ent' → logprob: -10.171303749084473

Token 81: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. ' )' → logprob: -9.625065803527832
    3. '))' → logprob: -16.12506675720215
    4. ')
' → logprob: -17.50006675720215
    5. '*' → logprob: -18.25006675720215
    6. '#' → logprob: -18.50006675720215
    7. ')`' → logprob: -18.75006675720215
    8. ')#' → logprob: -18.87506675720215
    9. ' ' → logprob: -19.12506675720215
    10. '),' → logprob: -19.25006675720215

Token 82: ' ' (ID: 220)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1406799703836441
    2. '<|end|>' → logprob: -2.1406800746917725
    3. ' ' → logprob: -5.890679836273193
    4. '#' → logprob: -6.140679836273193
    5. ' )' → logprob: -6.265679836273193
    6. '```' → logprob: -6.390679836273193
    7. '*' → logprob: -6.890679836273193
    8. '\n' → logprob: -7.015679836273193
    9. '\' → logprob: -7.015679836273193
    10. '(' → logprob: -7.515679836273193

Token 83: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3320043087005615
    2. '<|end|>' → logprob: -1.4570043087005615
    3. ' ' → logprob: -4.207004547119141
    4. '\n' → logprob: -4.832004547119141
    5. '\' → logprob: -5.082004547119141
    6. '#' → logprob: -5.457004547119141
    7. ' )' → logprob: -5.832004547119141
    8. '.' → logprob: -6.207004547119141
    9. '(' → logprob: -6.207004547119141
    10. '*' → logprob: -6.332004547119141

Token 84: ' voilà' (ID: 77612)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 85: ' le' (ID: 505)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: ' résultat' (ID: 62556)
  Prédit: ' nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.09662678837776184
    2. 'nombre' → logprob: -2.8466267585754395
    3. ' ' → logprob: -4.4716267585754395
    4. ' code' → logprob: -4.7216267585754395
    5. ' résultat' → logprob: -4.7216267585754395
    6. ' nombres' → logprob: -7.0966267585754395
    7. 's' → logprob: -7.2216267585754395
    8. ' ' → logprob: -7.3466267585754395
    9. 'angle' → logprob: -7.9716267585754395
    10. ' total' → logprob: -7.9716267585754395

Token 87: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' normalement' (ID: 164432)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8913334012031555
    2. '<|end|>' → logprob: -1.2663333415985107
    3. ' ' → logprob: -1.5163333415985107
    4. '\n' → logprob: -3.0163333415985107
    5. ' )' → logprob: -4.14133358001709
    6. '```' → logprob: -4.39133358001709
    7. '\' → logprob: -5.89133358001709
    8. '  ' → logprob: -5.89133358001709
    9. '<|end|>' → logprob: -6.39133358001709
    10. '.' → logprob: -7.39133358001709

Token 89: ' c' (ID: 274)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 90: ''est' (ID: 6616)
  Prédit: ''est'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''est' → logprob: -0.04989581182599068
    2. ''' → logprob: -4.174895763397217
    3. 'e' → logprob: -4.174895763397217
    4. 'est' → logprob: -5.174895763397217
    5. 'a' → logprob: -5.424895763397217
    6. ''a' → logprob: -5.674895763397217
    7. ''e' → logprob: -6.674895763397217
    8. ''était' → logprob: -6.924895763397217
    9. ''é' → logprob: -7.424895763397217
    10. ''''' → logprob: -8.049896240234375

Token 91: ' bon' (ID: 4846)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.25404971837997437
    2. ' le' → logprob: -2.254049777984619
    3. ' ' → logprob: -2.754049777984619
    4. ' la' → logprob: -3.504049777984619
    5. 'l' → logprob: -4.254049777984619
    6. 'le' → logprob: -4.879049777984619
    7. ' les' → logprob: -6.754049777984619
    8. 'la' → logprob: -8.004049301147461
    9. ' un' → logprob: -8.129049301147461
    10. 's' → logprob: -8.379049301147461


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 89
Tokens correctement prédits (1ère position, stricte): 24
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 44
Précision stricte (1ère position): 26.97%
Précision adaptée (1ère position): 26.97%
Précision (top 10): 49.44%
================================================================================
